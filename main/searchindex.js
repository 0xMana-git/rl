Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 81, 82, 84, 86, 88, 90, 92, 93, 94, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 118, 119, 121, 122, 123, 124, 125, 128, 131, 136, 138, 139, 141, 142, 144, 147, 149, 150, 153, 159, 160, 164, 165, 166, 167, 169, 177, 178, 179, 180, 181, 182, 184, 187, 188, 190, 192, 202, 203, 205, 206, 207, 208, 215, 217, 219, 221, 222, 223, 227, 228, 229, 240, 241, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 265, 266, 270, 274, 275, 276, 277, 279, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 324, 326, 329, 333, 338, 339, 343, 344, 347, 354, 355, 356, 357, 360, 361, 362, 366, 367, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385], "open": [0, 5, 7, 11, 40, 42, 45, 66, 367, 378, 379, 384], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385], "reinforc": [0, 3, 9, 63, 116, 117, 142, 205, 206, 207, 208, 212, 255, 260, 275, 276, 280, 281, 282, 284, 288, 289, 295, 296, 297, 359, 365, 367, 370, 371, 376, 380, 383, 384], "learn": [0, 3, 7, 8, 9, 17, 36, 63, 64, 65, 67, 68, 102, 116, 117, 121, 122, 128, 142, 205, 206, 207, 208, 212, 224, 230, 255, 260, 275, 276, 280, 281, 282, 284, 288, 289, 294, 295, 296, 297, 359, 361, 362, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 382, 383, 384, 385], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 60, 118, 177, 230, 248, 261, 269, 275, 277, 290, 291, 293, 295, 334, 358, 360, 361, 362, 363, 366, 367, 368, 373, 374, 376, 378, 379, 381, 382, 385], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 43, 51, 100, 101, 110, 119, 195, 359, 360, 361, 364, 366, 367, 368, 370, 371, 373, 378, 379, 380, 385], "pytorch": [0, 1, 2, 3, 64, 129, 130, 180, 192, 215, 219, 229, 230, 343, 358, 360, 363, 366, 368, 369, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 36, 51, 63, 102, 106, 110, 115, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 135, 188, 190, 219, 333, 360, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 85, 86, 87, 92, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 115, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 135, 136, 138, 139, 141, 142, 145, 146, 147, 149, 150, 151, 159, 160, 164, 165, 169, 172, 176, 177, 178, 181, 182, 184, 186, 188, 190, 192, 200, 201, 202, 203, 205, 215, 217, 218, 219, 221, 223, 224, 227, 228, 230, 231, 244, 246, 248, 252, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 324, 326, 333, 339, 355, 356, 357, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "directli": [0, 3, 4, 8, 22, 60, 81, 98, 99, 102, 105, 106, 118, 122, 128, 169, 187, 291, 357, 361, 367, 368, 370, 378, 379, 380, 382], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 81, 84, 85, 86, 87, 88, 90, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 138, 139, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 157, 158, 160, 162, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 196, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 234, 235, 236, 237, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 289, 290, 291, 293, 294, 295, 296, 298, 300, 304, 305, 306, 307, 308, 309, 312, 324, 325, 326, 334, 340, 343, 346, 347, 351, 353, 354, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385], "pypi": [0, 2, 384], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 81, 86, 102, 106, 109, 112, 116, 117, 119, 122, 123, 124, 125, 128, 129, 130, 146, 164, 178, 180, 181, 182, 184, 186, 189, 190, 202, 203, 215, 218, 219, 222, 228, 229, 236, 244, 245, 249, 251, 264, 265, 326, 333, 340, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 382, 385], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 92, 102, 105, 106, 107, 109, 110, 112, 116, 117, 122, 123, 124, 125, 128, 129, 130, 180, 184, 189, 190, 212, 219, 222, 229, 231, 248, 252, 254, 255, 264, 269, 275, 284, 291, 293, 306, 311, 319, 333, 338, 360, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 381, 385], "about": [0, 3, 5, 7, 9, 17, 18, 19, 51, 64, 67, 68, 102, 122, 128, 362, 366, 367, 368, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 384, 385], "instruct": [0, 6, 7, 10, 21, 62, 149, 151, 366, 367, 368, 369, 378, 379, 382], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 122, 128, 249, 250, 251, 361, 366, 370, 372, 373, 375, 377, 379], "section": [0, 2, 3, 4, 23, 215, 219, 367, 370, 375, 378, 379], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 44, 69, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 202, 203, 215, 218, 219, 222, 228, 244, 264, 340, 366, 367, 368, 369, 370, 378, 380], "pip": [0, 10, 65, 370, 371, 372, 373, 374, 375, 379, 384, 385], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 50, 53, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 75, 79, 80, 81, 84, 86, 87, 95, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 118, 119, 120, 122, 123, 124, 125, 128, 139, 141, 142, 143, 144, 145, 147, 150, 154, 159, 160, 162, 164, 165, 168, 169, 172, 173, 177, 178, 179, 182, 184, 186, 187, 188, 190, 200, 202, 203, 209, 212, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 246, 248, 252, 255, 256, 257, 259, 260, 261, 262, 263, 268, 275, 276, 277, 278, 279, 281, 283, 284, 285, 289, 290, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 330, 334, 340, 347, 353, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "python": [0, 3, 5, 6, 7, 10, 13, 14, 20, 120, 135, 215, 216, 217, 219, 220, 221, 225, 226, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 40, 42, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 86, 87, 92, 94, 102, 105, 106, 107, 112, 122, 128, 138, 139, 142, 143, 154, 160, 164, 165, 180, 182, 184, 203, 215, 217, 219, 221, 222, 227, 228, 229, 233, 248, 253, 254, 255, 261, 262, 264, 265, 277, 286, 290, 291, 293, 325, 326, 342, 361, 365, 366, 367, 368, 369, 370, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "low": [0, 3, 25, 102, 106, 122, 128, 145, 149, 196, 255, 261, 268, 366, 367, 368, 378, 379, 380, 384, 385], "high": [0, 3, 9, 25, 40, 42, 45, 49, 102, 106, 122, 128, 145, 149, 159, 196, 255, 261, 268, 306, 311, 319, 366, 367, 368, 378, 379, 380, 382, 384, 385], "level": [0, 2, 3, 4, 21, 26, 32, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 105, 107, 142, 176, 290, 366, 367, 373, 384], "abstract": [0, 3, 8, 24, 25, 26, 28, 32, 33, 34, 38, 52, 54, 55, 60, 61, 65, 96, 102, 161, 223, 310, 335, 344, 363, 368, 380, 384], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 32, 33, 36, 39, 40, 41, 42, 44, 45, 46, 49, 50, 53, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 81, 84, 85, 87, 88, 90, 92, 94, 102, 103, 105, 106, 107, 115, 116, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 137, 138, 139, 141, 142, 145, 146, 147, 149, 150, 151, 153, 154, 158, 159, 162, 164, 169, 172, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 196, 199, 200, 201, 208, 210, 215, 216, 217, 219, 220, 221, 223, 225, 226, 227, 230, 234, 236, 239, 253, 254, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 301, 304, 305, 306, 307, 308, 309, 310, 324, 333, 340, 353, 357, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 53, 141, 149, 246, 291, 361, 384], "effici": [0, 1, 2, 4, 8, 215, 230, 361, 366, 367, 368, 369, 372, 373, 375, 377, 378, 379, 381, 382, 384], "modular": [0, 60, 267, 382, 384], "document": [0, 2, 5, 7, 17, 18, 20, 36, 66, 102, 106, 122, 128, 182, 190, 358, 367, 369, 370, 373, 376, 384], "properli": [0, 1, 102, 106, 122, 128, 199, 368, 374, 378, 379, 380, 384], "test": [0, 3, 5, 98, 99, 111, 112, 116, 117, 184, 192, 217, 221, 339, 353, 368, 369, 384], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 78, 79, 81, 84, 86, 87, 88, 92, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 119, 120, 122, 123, 124, 125, 128, 129, 130, 138, 139, 141, 142, 146, 147, 150, 151, 152, 160, 162, 164, 169, 171, 172, 173, 176, 177, 178, 181, 182, 184, 186, 187, 190, 192, 199, 200, 201, 205, 206, 207, 208, 209, 212, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 237, 238, 239, 248, 249, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 312, 324, 326, 328, 331, 332, 333, 334, 338, 353, 355, 356, 359, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 384, 385], "code": [0, 3, 5, 7, 8, 13, 14, 66, 102, 106, 122, 128, 164, 182, 184, 215, 216, 217, 219, 220, 221, 267, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385], "aim": [0, 2, 3, 7, 32, 33, 164, 184, 186, 222, 346, 360, 361, 362, 366, 367, 384], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 40, 42, 45, 65, 68, 69, 73, 74, 88, 90, 94, 95, 97, 98, 99, 105, 107, 111, 119, 121, 122, 123, 125, 139, 142, 151, 160, 178, 179, 181, 195, 212, 246, 254, 255, 261, 264, 267, 284, 306, 307, 308, 309, 331, 359, 361, 363, 368, 369, 370, 371, 379, 380, 382, 384], "research": [0, 7, 9, 116, 117, 384], "most": [0, 1, 2, 3, 7, 8, 13, 14, 36, 86, 87, 102, 106, 122, 128, 149, 187, 192, 366, 368, 370, 371, 372, 373, 374, 375, 380, 384, 385], "written": [0, 1, 2, 3, 11, 29, 40, 42, 45, 47, 53, 62, 63, 66, 71, 73, 79, 81, 86, 87, 100, 101, 102, 105, 106, 107, 108, 122, 125, 128, 142, 151, 158, 172, 176, 179, 187, 190, 199, 200, 248, 260, 261, 264, 265, 269, 275, 277, 290, 293, 295, 305, 324, 325, 326, 361, 362, 363, 366, 369, 371, 377, 380, 384], "highli": [0, 2, 370, 384, 385], "wai": [0, 1, 2, 3, 4, 60, 64, 81, 92, 110, 164, 167, 186, 187, 219, 293, 306, 307, 308, 309, 361, 366, 367, 368, 370, 372, 373, 377, 378, 379, 380, 381, 382, 384, 385], "easili": [0, 1, 2, 3, 7, 102, 106, 122, 128, 362, 366, 367, 368, 370, 371, 372, 375, 378, 379, 384, 385], "swap": [0, 1, 3, 105, 187, 368, 381, 384], "compon": [0, 1, 2, 3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 81, 88, 90, 94, 212, 237, 254, 255, 263, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 338, 343, 366, 367, 368, 369, 371, 372, 375, 377, 378, 379, 380, 381, 384], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 43, 44, 46, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 81, 90, 95, 102, 103, 106, 116, 117, 122, 123, 124, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 199, 204, 205, 209, 212, 213, 217, 221, 235, 236, 237, 245, 253, 258, 259, 268, 271, 272, 274, 280, 292, 324, 326, 340, 357, 359, 365, 367, 369, 371, 373, 374, 375, 376, 381, 383], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 41, 43, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 97, 102, 103, 106, 110, 115, 116, 117, 122, 123, 124, 128, 129, 130, 147, 150, 178, 182, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 245, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 290, 326, 366, 367, 369, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "write": [0, 2, 3, 8, 22, 36, 40, 41, 42, 43, 44, 45, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 86, 90, 97, 102, 106, 145, 162, 163, 172, 174, 176, 180, 200, 248, 264, 265, 267, 269, 278, 279, 281, 282, 283, 289, 294, 296, 298, 305, 310, 326, 361, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 85, 102, 106, 119, 122, 126, 127, 128, 139, 172, 181, 188, 190, 199, 200, 215, 217, 221, 260, 264, 265, 270, 275, 276, 277, 279, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 333, 366, 368, 369, 370, 372, 378, 379, 380, 384, 385], "ones": [0, 2, 22, 26, 36, 41, 44, 49, 50, 102, 106, 122, 123, 124, 128, 143, 146, 147, 148, 150, 160, 164, 169, 178, 181, 182, 184, 186, 190, 191, 225, 226, 246, 264, 275, 276, 278, 289, 293, 294, 296, 298, 312, 366, 368, 378, 379, 380, 382, 384, 385], "littl": [0, 1, 3, 51, 102, 106, 122, 128, 182, 275, 277, 290, 293, 295, 368, 369, 373, 382, 384, 385], "effort": [0, 3, 380, 382, 384], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 81, 84, 85, 86, 87, 88, 90, 92, 94, 95, 97, 98, 99, 102, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 135, 136, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 160, 164, 165, 166, 167, 169, 172, 173, 174, 176, 178, 179, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 304, 306, 307, 308, 309, 310, 324, 325, 333, 334, 336, 339, 340, 343, 345, 346, 347, 353, 357, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "repo": [0, 6, 62, 142, 179, 184, 360, 379, 384], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 86, 87, 100, 101, 105, 107, 108, 125, 252, 257, 260, 279, 282, 289, 304, 372, 384], "align": [0, 215, 219, 384], "exist": [0, 2, 3, 4, 11, 17, 20, 36, 40, 42, 45, 53, 102, 106, 122, 128, 143, 148, 182, 190, 296, 347, 357, 378, 379, 384, 385], "ecosystem": [0, 373, 384], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 49, 50, 52, 54, 55, 60, 66, 73, 74, 81, 84, 86, 92, 94, 102, 103, 106, 110, 116, 117, 122, 128, 129, 130, 139, 142, 176, 177, 178, 179, 182, 190, 215, 217, 219, 221, 227, 252, 255, 257, 259, 260, 265, 290, 326, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "dataset": [0, 31, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 79, 81, 84, 86, 87, 121, 188, 326, 359, 366, 367, 370, 381, 382, 384, 385], "pillar": [0, 384], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 139, 141, 142, 143, 147, 148, 149, 150, 155, 159, 160, 164, 165, 166, 169, 172, 176, 177, 178, 179, 181, 182, 184, 187, 188, 192, 201, 217, 221, 223, 224, 252, 259, 260, 281, 285, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 334, 336, 339, 346, 347, 348, 349, 353, 354, 355, 356, 357, 359, 360, 361, 365, 371, 372, 373, 374, 376, 381, 382, 383], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 40, 42, 45, 46, 53, 102, 106, 118, 122, 128, 147, 164, 178, 184, 186, 189, 190, 202, 203, 204, 209, 211, 217, 221, 222, 223, 224, 228, 235, 236, 245, 249, 250, 251, 258, 264, 270, 272, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 304, 343, 348, 349, 350, 359, 360, 363, 365, 368, 370, 373, 376, 378, 379, 380, 382, 383, 385], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 118, 119, 120, 121, 122, 123, 124, 125, 128, 136, 139, 141, 142, 147, 148, 150, 152, 158, 160, 166, 169, 176, 182, 187, 190, 191, 192, 196, 200, 201, 212, 217, 221, 224, 227, 228, 237, 246, 248, 254, 256, 257, 259, 260, 261, 262, 264, 267, 268, 269, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 324, 326, 333, 334, 340, 343, 345, 348, 353, 355, 356, 357, 359, 361, 362, 363, 365, 369, 370, 371, 372, 376, 380, 381, 382, 383, 385], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 44, 46, 99, 102, 106, 111, 112, 117, 122, 123, 124, 128, 131, 142, 164, 169, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 209, 215, 219, 271, 272, 273, 274, 291, 353, 359, 364, 366, 368, 371, 372, 373, 379, 380, 382, 384, 385], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 39, 40, 42, 45, 73, 74, 78, 79, 92, 94, 102, 103, 106, 122, 128, 129, 139, 141, 143, 146, 154, 160, 164, 172, 178, 181, 182, 184, 186, 190, 192, 215, 217, 218, 219, 221, 224, 228, 231, 237, 243, 244, 253, 255, 259, 261, 263, 264, 265, 296, 305, 306, 307, 308, 309, 324, 334, 346, 356, 361, 367, 368, 371, 372, 374, 378, 379, 381, 382, 384, 385], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 36, 39, 40, 42, 45, 92, 102, 103, 106, 122, 128, 129, 139, 141, 143, 146, 154, 160, 164, 172, 178, 181, 182, 184, 186, 190, 192, 215, 217, 218, 219, 220, 221, 224, 228, 243, 244, 253, 261, 264, 265, 296, 305, 315, 316, 317, 318, 320, 321, 322, 323, 324, 356, 361, 367, 368, 371, 374, 378, 379, 380, 381, 382, 384, 385], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 29, 36, 46, 47, 60, 66, 139, 142, 169, 176, 190, 191, 260, 340, 343, 345, 348, 349, 353, 355, 356, 359, 363, 382, 385], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 78, 79, 81, 82, 84, 86, 87, 88, 93, 96, 97, 102, 106, 118, 122, 128, 146, 147, 150, 164, 178, 181, 182, 184, 186, 187, 188, 190, 199, 200, 201, 202, 203, 215, 216, 219, 220, 222, 224, 228, 248, 254, 255, 261, 263, 264, 269, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 312, 330, 334, 346, 353, 354, 355, 356, 357, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 384, 385], "etc": [0, 2, 3, 7, 8, 11, 36, 54, 55, 66, 102, 106, 122, 128, 158, 182, 190, 222, 228, 367, 368, 373, 382, 384, 385], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 27, 28, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 88, 102, 106, 122, 123, 124, 128, 138, 142, 147, 150, 151, 158, 159, 160, 176, 181, 182, 188, 190, 192, 200, 202, 203, 222, 227, 228, 246, 259, 266, 267, 275, 277, 290, 293, 295, 301, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 334, 343, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "few": [0, 2, 8, 106, 326, 334, 368, 369, 371, 378, 379, 382, 384, 385], "depend": [0, 1, 2, 3, 4, 7, 8, 40, 42, 105, 107, 108, 125, 129, 130, 147, 150, 269, 293, 361, 366, 368, 369, 378, 379, 380, 384, 385], "possibl": [0, 2, 3, 4, 22, 28, 33, 36, 39, 63, 66, 68, 86, 92, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 202, 203, 215, 216, 219, 220, 264, 324, 339, 343, 361, 366, 368, 369, 371, 373, 374, 378, 379, 380, 382, 384, 385], "standard": [0, 3, 160, 171, 188, 201, 213, 224, 229, 230, 235, 252, 253, 298, 306, 307, 308, 309, 366, 367, 370, 371, 379, 382, 384], "numpi": [0, 3, 11, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 102, 106, 122, 128, 180, 343, 380, 382, 384, 385], "common": [0, 2, 3, 4, 106, 111, 136, 249, 250, 251, 258, 275, 276, 277, 282, 283, 289, 290, 293, 294, 295, 296, 298, 353, 360, 361, 363, 366, 368, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 384, 385], "openai": [0, 7, 23, 105, 107, 125, 368, 380, 384, 385], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 102, 103, 105, 106, 107, 108, 110, 116, 117, 119, 120, 122, 125, 128, 129, 130, 132, 135, 138, 142, 145, 151, 157, 158, 160, 162, 167, 169, 172, 178, 181, 187, 188, 190, 353, 360, 366, 367, 368, 369, 370, 374, 375, 380, 381, 382, 384], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 81, 86, 87, 94, 100, 101, 102, 105, 106, 107, 108, 110, 112, 119, 120, 122, 123, 124, 125, 128, 138, 142, 143, 145, 146, 147, 149, 150, 154, 160, 164, 165, 169, 176, 177, 178, 179, 181, 182, 184, 186, 188, 190, 219, 221, 227, 228, 248, 253, 254, 261, 262, 264, 265, 266, 267, 275, 277, 278, 282, 283, 289, 290, 291, 293, 294, 295, 296, 297, 298, 306, 307, 308, 309, 310, 326, 333, 347, 363, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 385], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 80, 81, 84, 85, 86, 87, 90, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 164, 165, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 242, 243, 244, 246, 248, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 304, 305, 306, 307, 308, 309, 310, 312, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 331, 333, 334, 336, 337, 338, 339, 340, 341, 343, 347, 348, 349, 350, 352, 353, 355, 356, 357, 361, 369, 370, 373, 378, 379, 380, 382, 384], "On": [0, 3, 7, 17, 18, 19, 20, 26, 63, 216, 220, 361, 367, 378, 379], "end": [0, 2, 3, 13, 14, 16, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 79, 81, 85, 86, 87, 102, 106, 122, 128, 151, 162, 176, 177, 182, 190, 202, 203, 215, 216, 219, 220, 223, 259, 296, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "come": [0, 1, 2, 3, 8, 36, 92, 102, 106, 115, 122, 128, 147, 150, 248, 249, 250, 251, 261, 269, 275, 277, 290, 293, 295, 326, 366, 367, 368, 369, 372, 373, 374, 375, 378, 379, 382, 384, 385], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 32, 33, 36, 39, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 85, 88, 94, 102, 104, 106, 107, 116, 117, 118, 122, 123, 124, 128, 129, 130, 135, 136, 138, 139, 142, 143, 146, 147, 150, 157, 158, 164, 169, 176, 177, 178, 179, 181, 182, 184, 186, 188, 190, 192, 197, 198, 200, 215, 217, 219, 221, 223, 227, 228, 252, 253, 264, 283, 291, 293, 296, 310, 334, 339, 340, 349, 357, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "re": [0, 2, 3, 8, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 102, 106, 122, 128, 190, 221, 225, 226, 261, 265, 333, 363, 366, 368, 369, 370, 372, 377, 378, 380, 384, 385], "usabl": [0, 363, 369, 384], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 43, 46, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 81, 88, 90, 94, 102, 103, 106, 122, 128, 135, 138, 139, 147, 150, 182, 188, 190, 192, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 235, 238, 239, 241, 244, 246, 249, 250, 251, 252, 253, 255, 256, 259, 260, 261, 263, 264, 265, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 353, 359, 361, 366, 369, 370, 371, 374, 377, 380, 382, 385], "cost": [0, 2, 28, 66, 275, 277, 290, 293, 295, 366, 367, 378, 379, 380, 382], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 79, 81, 82, 84, 86, 87, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 132, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 199, 200, 201, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 234, 235, 236, 238, 239, 242, 243, 244, 245, 248, 249, 250, 251, 253, 259, 261, 263, 264, 265, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 301, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 330, 343, 346, 348, 353, 354, 355, 356, 357, 359, 361, 363, 366, 367, 368, 369, 371, 372, 374, 377, 378, 379, 380, 381, 382, 384, 385], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 41, 42, 45, 51, 53, 60, 63, 67, 68, 78, 79, 86, 102, 103, 106, 110, 115, 119, 122, 123, 124, 128, 141, 147, 150, 178, 180, 188, 190, 227, 228, 255, 260, 263, 359, 363, 366, 367, 369, 370, 378, 379, 380, 381, 382, 384, 385], "good": [0, 1, 4, 9, 122, 366, 368, 369, 371, 379, 384, 385], "runtim": [0, 2, 3, 36, 102, 106, 122, 128, 190, 380], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 46, 52, 53, 54, 55, 100, 101, 102, 105, 106, 107, 108, 122, 125, 128, 131, 147, 150, 159, 182, 190, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 277, 286, 293, 296, 339, 343, 362, 366, 367, 368, 369, 370, 372, 373, 374, 375, 377, 378, 379, 380, 385], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 36, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 79, 81, 86, 87, 90, 97, 98, 99, 102, 105, 106, 107, 111, 112, 115, 122, 123, 124, 125, 126, 127, 128, 129, 176, 178, 188, 190, 217, 221, 249, 250, 251, 260, 283, 291, 326, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 384, 385], "read": [0, 2, 3, 7, 22, 26, 29, 32, 41, 43, 44, 46, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 81, 88, 90, 94, 102, 105, 106, 107, 122, 128, 136, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 162, 163, 165, 166, 167, 169, 172, 173, 174, 176, 177, 178, 179, 181, 184, 185, 187, 188, 190, 200, 234, 248, 249, 250, 251, 254, 259, 261, 264, 265, 267, 269, 270, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 326, 339, 343, 361, 366, 367, 368, 370, 371, 377, 378, 379, 380, 381, 385], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 363, 366, 370, 373, 377, 381, 385], "beyond": [0, 102, 106, 122, 128], "api": [0, 2, 3, 5, 123, 124, 125, 164, 186, 362, 363, 370, 371, 372, 373, 374, 378, 379, 380, 382, 384, 385], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 44, 52, 54, 55, 56, 58, 70, 71, 77, 86, 102, 103, 105, 106, 107, 118, 122, 128, 131, 142, 143, 153, 158, 165, 178, 180, 182, 190, 192, 217, 221, 248, 254, 255, 261, 262, 263, 264, 265, 326, 358, 361, 362, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385], "paper": [0, 63, 66, 98, 99, 100, 101, 108, 111, 112, 116, 117, 119, 120, 125, 129, 130, 164, 184, 186, 215, 236, 245, 281, 288, 366, 368, 378, 379], "releas": [0, 4, 7, 10, 36, 102, 106, 122, 128, 182, 190, 296, 384], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 345, 353, 363, 366, 384], "so": [0, 2, 3, 4, 6, 7, 10, 36, 40, 42, 45, 46, 102, 106, 116, 117, 122, 128, 178, 188, 190, 266, 267, 366, 368, 369, 372, 375, 378, 379, 380, 385], "make": [0, 2, 3, 4, 7, 36, 40, 41, 42, 44, 45, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 84, 88, 90, 97, 102, 106, 107, 110, 112, 114, 120, 122, 128, 152, 160, 164, 165, 169, 176, 184, 190, 192, 215, 216, 219, 220, 227, 228, 229, 254, 265, 275, 277, 290, 293, 295, 306, 307, 308, 309, 324, 340, 349, 357, 361, 362, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "sure": [0, 3, 4, 7, 65, 88, 106, 110, 169, 254, 357, 361, 366, 368, 369, 372, 378, 379, 380, 382, 384, 385], "alwai": [0, 2, 3, 13, 14, 19, 26, 32, 36, 60, 69, 70, 71, 77, 102, 106, 122, 128, 158, 159, 190, 284, 291, 361, 362, 367, 368, 369, 378, 379, 380, 382], "enjoi": [0, 2, 3, 66, 373], "latest": [0, 2, 3, 10, 119, 123, 124, 340, 368, 378, 379, 380, 384], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 39, 53, 64, 79, 86, 87, 102, 106, 115, 122, 123, 124, 126, 127, 128, 139, 142, 154, 158, 162, 178, 179, 183, 188, 192, 202, 203, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 229, 230, 265, 272, 275, 277, 290, 293, 295, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 357, 361, 366, 367, 368, 369, 371, 372, 373, 375, 380, 382, 385], "recent": [0, 7, 11, 187, 385], "version": [0, 1, 2, 3, 6, 11, 36, 40, 42, 46, 63, 68, 86, 102, 105, 106, 107, 108, 119, 120, 122, 123, 125, 128, 129, 130, 187, 190, 199, 251, 275, 277, 290, 291, 293, 295, 296, 306, 309, 360, 361, 366, 368, 369, 370, 372, 375, 378, 379, 380, 381, 385], "although": [0, 1, 3, 8, 102, 106, 122, 128, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 363, 366, 367, 373, 382], "core": [0, 3, 8, 363, 369, 371, 384], "guarante": [0, 2, 36, 40, 42, 45, 73, 74, 75, 88, 90, 94, 102, 106, 122, 128, 188, 190, 373, 384], "backward": [0, 8, 36, 98, 99, 102, 106, 122, 128, 188, 190, 215, 216, 219, 220, 275, 276, 278, 282, 283, 289, 293, 294, 295, 296, 298, 366, 368, 369, 372, 373, 375, 378, 379, 380], "compat": [0, 2, 3, 7, 11, 13, 14, 15, 36, 62, 81, 84, 86, 87, 88, 92, 102, 106, 108, 121, 122, 128, 142, 176, 184, 188, 190, 215, 216, 217, 219, 220, 221, 262, 275, 276, 278, 279, 281, 282, 283, 289, 291, 293, 294, 295, 296, 298, 301, 366, 369, 382, 384], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 78, 79, 81, 86, 87, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 158, 160, 162, 164, 165, 166, 167, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 190, 191, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 286, 289, 290, 292, 293, 294, 295, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 320, 321, 323, 324, 326, 334, 339, 340, 341, 353, 357, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385], "13": [0, 2, 5, 10, 11, 86, 87, 125, 187, 190, 365, 366, 367, 368, 374, 379, 380, 381, 382, 383], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 41, 44, 49, 50, 62, 64, 65, 66, 67, 68, 106, 122, 128, 164, 181, 186, 280, 291, 362, 363, 366, 367, 368, 369, 371, 373, 382, 385], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 81, 84, 86, 87, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 138, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 196, 199, 200, 201, 211, 212, 217, 221, 223, 224, 236, 237, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 324, 325, 334, 338, 339, 340, 342, 343, 359, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 385], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 26, 32, 158, 166, 249, 250, 251, 264, 282, 289, 359, 366, 378, 380, 384], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 36, 40, 41, 42, 44, 45, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 81, 89, 95, 102, 106, 122, 128, 135, 164, 186, 190, 224, 328, 333, 343, 363, 367, 375, 378], "root": [0, 2, 3, 26, 32, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 81, 122, 142, 179, 199, 218, 243, 244, 369, 370, 378, 379, 380, 381, 382, 385], "http": [0, 2, 5, 6, 7, 10, 13, 14, 17, 18, 19, 23, 41, 51, 60, 63, 64, 65, 66, 67, 68, 78, 79, 98, 99, 100, 101, 108, 110, 111, 112, 116, 117, 119, 120, 121, 123, 124, 125, 129, 130, 142, 164, 184, 204, 205, 206, 207, 208, 209, 212, 213, 214, 219, 224, 225, 226, 230, 232, 233, 236, 238, 239, 245, 255, 260, 275, 276, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 306, 311, 319, 358, 363, 376, 381, 384], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 60, 63, 64, 66, 98, 99, 100, 101, 105, 108, 111, 112, 116, 117, 119, 120, 123, 124, 125, 129, 130, 139, 184, 363, 371, 375, 378, 379, 384], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 63, 66, 67, 98, 99, 100, 101, 108, 110, 111, 112, 116, 117, 119, 120, 123, 124, 125, 129, 130, 363, 381, 384], "setup": [0, 7, 98, 99, 110, 111, 112], "py": [0, 3, 23, 105, 107, 135, 236, 245, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385], "develop": [0, 3, 4, 7, 110, 366, 384], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 102, 104, 106, 108, 109, 122, 125, 128, 133, 137, 138, 139, 141, 145, 149, 155, 158, 164, 165, 167, 174, 178, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 199, 201, 202, 203, 212, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 228, 230, 231, 246, 252, 253, 254, 255, 256, 259, 261, 262, 265, 267, 268, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 304, 306, 307, 308, 309, 310, 312, 324, 327, 328, 331, 333, 336, 343, 345, 353, 362, 365, 366, 368, 371, 372, 373, 376, 380, 383, 385], "seri": [0, 2, 7, 8, 39, 72, 82, 92, 93, 96, 97, 128, 159, 181, 326, 361, 362, 366, 367, 368, 374, 375, 378, 379, 382, 385], "quick": [0, 60], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 28, 46, 62, 68, 102, 106, 122, 128, 138, 141, 179, 181, 190, 293, 360, 361, 362, 366, 367, 368, 369, 371, 375, 378, 379, 380, 382, 385], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 79, 81, 84, 85, 86, 87, 92, 94, 100, 101, 102, 103, 105, 106, 107, 108, 110, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 132, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 152, 154, 158, 159, 160, 164, 165, 168, 169, 172, 173, 177, 178, 179, 180, 181, 182, 184, 186, 188, 190, 199, 200, 202, 203, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 246, 248, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 289, 290, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 320, 321, 322, 323, 324, 330, 333, 338, 340, 343, 345, 347, 353, 357, 360, 366, 367, 368, 369, 370, 372, 375, 377, 378, 379, 380, 382, 384, 385], "hurri": [0, 370], "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 43, 52, 54, 55, 62, 85, 86, 87, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 138, 141, 154, 160, 165, 177, 179, 180, 202, 203, 215, 217, 219, 221, 222, 225, 226, 232, 240, 246, 252, 253, 256, 259, 265, 306, 308, 309, 367, 368, 369, 370, 371, 378, 379, 380, 381, 382, 384, 385], "item": [0, 2, 8, 13, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 44, 52, 53, 54, 55, 69, 85, 92, 153, 225, 226, 278, 279, 281, 334, 362, 363, 366, 368, 369, 372, 373, 378, 379, 380, 382], "navig": [0, 379], "previou": [0, 3, 4, 10, 36, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 178, 190, 200, 215, 219, 239, 253, 368, 369, 370, 371, 375, 380, 385], "whenev": [0, 1, 2, 3, 22, 36, 41, 44, 49, 50, 60, 66, 79, 86, 87, 100, 101, 105, 107, 108, 116, 117, 125, 129, 130, 135, 157, 182, 187, 291, 306, 307, 308, 309, 324, 345, 361, 382], "want": [0, 2, 3, 6, 7, 8, 87, 160, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 361, 366, 367, 368, 369, 370, 372, 373, 374, 378, 379, 380, 381, 382, 384, 385], "ted": [0, 29, 37, 47, 48, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 359, 365, 376, 383], "s": [0, 1, 2, 3, 6, 7, 8, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 86, 87, 92, 98, 99, 102, 106, 110, 111, 112, 116, 117, 119, 122, 123, 124, 128, 129, 130, 142, 146, 164, 176, 178, 180, 181, 182, 184, 186, 188, 190, 192, 202, 203, 217, 221, 226, 227, 228, 230, 236, 245, 249, 251, 252, 255, 256, 259, 261, 264, 265, 268, 276, 282, 289, 291, 296, 306, 307, 308, 309, 310, 324, 361, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 46, 92, 98, 99, 102, 106, 115, 118, 121, 122, 128, 135, 141, 146, 149, 151, 158, 164, 165, 177, 178, 181, 182, 184, 186, 188, 189, 190, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 302, 304, 306, 307, 308, 309, 310, 324, 343, 350, 353, 359, 362, 363, 365, 367, 368, 370, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385], "optim": [0, 1, 2, 8, 36, 46, 98, 99, 102, 106, 122, 128, 182, 190, 201, 224, 229, 230, 276, 291, 292, 293, 296, 338, 343, 353, 362, 363, 365, 368, 369, 370, 371, 373, 376, 378, 379, 380, 383], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 102, 106, 122, 125, 128, 139, 142, 160, 164, 186, 192, 259, 260, 276, 278, 281, 283, 294, 296, 298, 326, 334, 340, 343, 345, 346, 347, 353, 363, 365, 366, 369, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385], "storag": [0, 1, 8, 29, 36, 40, 41, 42, 44, 45, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 87, 89, 90, 91, 92, 94, 95, 102, 104, 106, 122, 128, 141, 142, 147, 150, 169, 190, 359, 363, 365, 367, 368, 369, 370, 372, 375, 376, 378, 379, 381, 383], "log": [0, 3, 4, 8, 46, 210, 211, 212, 225, 226, 234, 244, 254, 255, 261, 265, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 333, 336, 337, 339, 343, 353, 361, 362, 363, 365, 366, 367, 368, 370, 371, 375, 376, 378, 379, 380, 383, 384], "your": [0, 2, 3, 7, 8, 10, 13, 14, 17, 36, 102, 106, 110, 115, 122, 123, 124, 128, 188, 190, 357, 360, 361, 362, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 382, 383, 384], "own": [0, 1, 3, 13, 14, 16, 21, 36, 102, 106, 122, 123, 124, 128, 190, 326, 365, 367, 368, 370, 376, 378, 379, 380, 383], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 40, 42, 45, 46, 53, 60, 63, 69, 102, 106, 116, 117, 122, 123, 124, 128, 147, 155, 164, 177, 182, 184, 186, 190, 192, 205, 207, 217, 221, 252, 256, 257, 260, 275, 276, 277, 278, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 306, 343, 345, 353, 359, 363, 365, 367, 370, 373, 374, 376, 381, 382, 383, 385], "loop": [0, 8, 40, 42, 45, 102, 106, 122, 128, 199, 252, 256, 257, 260, 293, 343, 363, 365, 366, 367, 370, 372, 373, 374, 376, 377, 382, 383], "ppo": [0, 4, 8, 261, 265, 277, 290, 293, 359, 361, 365, 366, 367, 371, 372, 376, 378, 383], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 92, 100, 101, 102, 103, 105, 106, 107, 119, 122, 128, 142, 145, 146, 152, 157, 158, 160, 167, 169, 174, 176, 178, 179, 181, 182, 188, 190, 217, 221, 353, 361, 365, 367, 368, 370, 371, 372, 376, 383, 384, 385], "introduct": [0, 362, 365, 370, 376, 378, 379, 383, 385], "multi": [0, 1, 7, 9, 32, 33, 36, 41, 44, 49, 50, 70, 71, 77, 102, 106, 116, 117, 122, 126, 127, 128, 182, 190, 215, 217, 219, 221, 222, 227, 228, 259, 304, 306, 307, 308, 309, 359, 365, 366, 367, 368, 369, 370, 371, 376, 380, 383, 384], "agent": [0, 9, 32, 33, 115, 116, 117, 123, 124, 126, 127, 129, 130, 131, 176, 177, 225, 226, 227, 228, 230, 236, 245, 304, 359, 365, 370, 376, 380, 383], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 36, 46, 47, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 221, 223, 224, 259, 264, 291, 324, 325, 326, 347, 348, 349, 353, 355, 356, 357, 359, 361, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 86, 87, 92, 94, 98, 99, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 136, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 157, 158, 160, 164, 165, 166, 167, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 190, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 234, 235, 236, 237, 243, 244, 245, 246, 248, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 319, 324, 326, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 353, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385], "pretrain": [0, 365, 376, 383], "recurr": [0, 2, 141, 215, 216, 217, 219, 221, 239, 365, 367, 371, 376, 382, 383], "dqn": [0, 2, 60, 151, 212, 254, 255, 275, 276, 278, 279, 281, 283, 284, 285, 288, 289, 291, 293, 294, 295, 296, 297, 298, 304, 350, 359, 361, 365, 371, 372, 375, 376, 383], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 29, 36, 47, 98, 99, 102, 106, 118, 122, 128, 149, 158, 177, 191, 197, 198, 212, 217, 221, 227, 228, 230, 237, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 275, 276, 277, 278, 282, 283, 289, 290, 292, 293, 294, 295, 296, 298, 339, 345, 348, 349, 353, 355, 356, 361, 362, 363, 365, 367, 370, 372, 373, 376, 381, 382, 383, 384, 385], "replai": [0, 8, 15, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 85, 87, 88, 90, 92, 93, 97, 141, 142, 149, 165, 169, 178, 190, 278, 279, 281, 282, 283, 289, 294, 296, 298, 340, 343, 351, 353, 359, 363, 365, 376, 380, 381, 383], "buffer": [0, 3, 4, 8, 13, 14, 15, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 97, 102, 106, 118, 122, 128, 141, 142, 146, 149, 164, 165, 169, 178, 181, 182, 184, 186, 190, 264, 267, 278, 279, 281, 282, 283, 289, 294, 296, 298, 340, 343, 351, 353, 359, 363, 365, 374, 376, 380, 381, 383, 385], "competit": [0, 3, 116, 117, 365, 376, 379, 383], "ddpg": [0, 205, 206, 207, 208, 278, 288, 297, 359, 361, 365, 367, 372, 376, 379, 383], "task": [0, 2, 3, 9, 32, 33, 46, 53, 63, 66, 100, 101, 102, 106, 109, 116, 117, 122, 123, 124, 125, 128, 129, 130, 164, 176, 182, 184, 186, 282, 289, 365, 366, 367, 368, 369, 370, 371, 376, 378, 379, 380, 383, 384, 385], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 49, 50, 106, 122, 128, 129, 178, 209, 217, 221, 253, 326, 343, 359, 362, 363, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 382, 383], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 36, 40, 42, 45, 53, 73, 74, 75, 81, 84, 88, 90, 94, 97, 102, 106, 111, 122, 128, 147, 150, 151, 160, 164, 181, 182, 184, 188, 190, 191, 224, 236, 245, 248, 249, 261, 264, 265, 266, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 347, 348, 349, 352, 353, 357, 359, 361, 363, 365, 367, 368, 369, 373, 375, 376, 378, 379, 380, 382, 383, 385], "loss": [0, 3, 8, 42, 151, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 338, 343, 350, 353, 362, 363, 365, 370, 372, 373, 374, 376, 380, 382, 383, 384], "trainer": [0, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 365, 366, 376, 383], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 24, 26, 28, 29, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 86, 87, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 160, 162, 164, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 227, 228, 231, 234, 235, 236, 237, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 299, 300, 304, 306, 307, 308, 309, 312, 324, 326, 334, 335, 336, 337, 338, 340, 341, 342, 345, 353, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385], "packag": [0, 6, 7, 10, 135, 359, 360, 385], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 28, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 81, 85, 86, 87, 92, 94, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 118, 119, 121, 122, 128, 129, 130, 139, 142, 146, 154, 160, 162, 165, 169, 178, 181, 182, 183, 187, 188, 190, 200, 210, 215, 216, 217, 219, 220, 221, 225, 226, 227, 228, 229, 234, 236, 242, 246, 259, 260, 264, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 334, 337, 340, 341, 342, 343, 345, 355, 356, 357, 359, 363, 367, 368, 369, 370, 373, 375, 377, 378, 379, 381, 384, 385], "size": [0, 2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 80, 81, 85, 86, 87, 88, 94, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 139, 141, 143, 146, 147, 150, 151, 152, 154, 162, 164, 166, 167, 169, 173, 175, 176, 178, 180, 181, 182, 183, 186, 188, 190, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 231, 234, 235, 236, 237, 238, 239, 242, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 269, 272, 275, 276, 278, 279, 281, 282, 283, 289, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 326, 334, 340, 359, 361, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 384, 385], "interoper": [0, 13, 14, 359], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 30, 36, 40, 41, 42, 44, 45, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 102, 105, 106, 116, 117, 122, 128, 129, 130, 142, 143, 164, 169, 182, 186, 190, 202, 203, 215, 216, 217, 219, 220, 221, 222, 228, 263, 267, 277, 279, 281, 283, 284, 290, 293, 294, 298, 306, 307, 308, 309, 315, 316, 317, 318, 320, 321, 322, 323, 324, 357, 359, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 381, 382], "node": [0, 2, 17, 18, 19, 20, 21, 26, 32, 40, 42, 45, 68, 359, 373], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 123, 124, 158, 160, 201, 210, 211, 212, 213, 218, 224, 225, 226, 231, 234, 235, 238, 239, 242, 243, 244, 252, 253, 254, 255, 261, 265, 266, 275, 276, 277, 282, 283, 284, 289, 290, 293, 294, 295, 296, 298, 359, 363, 367, 368, 371, 373, 378, 379, 380, 384, 385], "helper": [0, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 366, 367, 369, 378, 380], "compos": [0, 3, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 82, 83, 92, 93, 102, 106, 122, 128, 142, 168, 181, 182, 188, 190, 258, 259, 286, 296, 326, 359, 366, 367, 368, 369, 373, 377, 379, 380, 382, 384, 385], "episod": [0, 3, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 86, 87, 102, 106, 122, 128, 138, 169, 172, 177, 199, 201, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 359, 367, 370, 375, 378, 379, 382], "format": [0, 3, 29, 35, 36, 37, 39, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 84, 92, 102, 106, 122, 123, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 326, 359, 366, 367, 370, 372, 374, 385], "tensorspec": [0, 3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 54, 55, 56, 57, 58, 102, 106, 118, 122, 128, 129, 130, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 160, 162, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 200, 239, 248, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 276, 279, 282, 283, 294, 296, 298, 304, 359, 380], "human": [0, 23, 64, 359, 380], "feedback": [0, 359, 375, 384], "rlhf": [0, 46, 53, 69, 158, 359, 361], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 103, 106, 122, 128, 136, 139, 147, 150, 159, 166, 167, 181, 182, 188, 190, 192, 201, 223, 224, 339, 347, 348, 349, 353, 355, 356, 357, 359, 370, 385], "gymlikeenv": [0, 105, 107, 359], "envmetadata": [0, 359], "vector": [0, 1, 8, 24, 28, 39, 98, 99, 107, 111, 112, 115, 123, 124, 125, 129, 130, 149, 187, 205, 207, 215, 216, 219, 220, 222, 306, 309, 319, 320, 321, 322, 323, 359, 366, 367, 369, 377, 378, 379, 380, 381, 385], "auto": [0, 74, 94, 137, 138, 187, 260, 276, 283, 292, 294, 296, 298, 359, 362, 378, 379], "reset": [0, 1, 2, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 87, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 137, 138, 139, 142, 151, 154, 157, 159, 164, 172, 176, 177, 178, 179, 181, 182, 184, 187, 188, 190, 192, 200, 215, 217, 221, 247, 259, 260, 325, 359, 366, 367, 368, 369, 370, 373, 377, 378, 379, 384], "dynam": [0, 7, 13, 14, 15, 63, 66, 68, 102, 122, 128, 190, 282, 289, 359, 368, 370, 380], "spec": [0, 1, 2, 13, 14, 15, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 56, 57, 58, 62, 98, 99, 102, 104, 105, 106, 107, 108, 111, 112, 118, 119, 120, 122, 125, 128, 129, 130, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 196, 199, 200, 212, 237, 239, 248, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 268, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 359, 361, 366, 367, 368, 369, 370, 371, 375, 377, 378, 379, 384], "mask": [0, 1, 4, 22, 28, 34, 35, 39, 123, 124, 136, 165, 190, 212, 225, 226, 237, 253, 254, 255, 256, 257, 262, 263, 340, 359, 367, 369, 385], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 28, 29, 39, 46, 47, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 139, 145, 147, 149, 150, 151, 152, 155, 158, 159, 162, 166, 167, 169, 173, 176, 182, 187, 191, 196, 199, 201, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 221, 222, 223, 224, 225, 226, 227, 235, 236, 237, 239, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 268, 269, 275, 276, 278, 279, 281, 282, 283, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 353, 357, 359, 361, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 377, 378, 379, 381, 382, 384, 385], "record": [0, 2, 36, 102, 106, 122, 128, 133, 158, 190, 293, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 353, 359, 367, 368, 371, 375, 378], "domain": [0, 2, 8, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 102, 106, 122, 128, 149, 178, 196, 248, 254, 255, 261, 262, 263, 264, 265, 266, 267, 272, 359, 368, 369, 371, 372, 378, 379, 380, 384, 385], "actor": [0, 3, 4, 20, 158, 191, 201, 204, 205, 207, 212, 213, 224, 235, 237, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 304, 359, 362, 367, 369, 370, 372, 375, 378, 381, 384], "explor": [0, 1, 189, 230, 248, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 275, 339, 348, 349, 353, 359, 368, 369, 370, 372, 373, 375, 378, 379, 380], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 81, 86, 87, 92, 102, 106, 115, 122, 128, 135, 138, 140, 142, 143, 145, 147, 149, 150, 151, 159, 160, 164, 165, 168, 169, 170, 172, 174, 178, 179, 181, 182, 186, 188, 190, 196, 200, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 236, 237, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 334, 336, 337, 338, 339, 340, 343, 353, 359, 363, 367, 370, 372, 373, 374, 377, 378, 379, 380, 382, 384, 385], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 41, 44, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 83, 85, 102, 103, 106, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 139, 146, 147, 148, 152, 158, 160, 166, 167, 172, 173, 176, 178, 181, 187, 190, 200, 210, 217, 221, 225, 226, 234, 248, 261, 265, 269, 270, 294, 300, 306, 311, 319, 329, 343, 359, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385], "hook": [0, 2, 29, 36, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 95, 102, 106, 122, 128, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 237, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 359], "planner": [0, 201, 224, 359], "sac": [0, 283, 294, 296, 359], "redq": [0, 294, 359], "iql": [0, 282, 289, 359, 366, 378, 379], "cql": [0, 276, 281, 359], "dt": [0, 260, 359, 380], "td3": [0, 298, 359], "a2c": [0, 275, 359], "dreamer": [0, 133, 134, 213, 285, 286, 287, 359, 361], "checkpoint": [0, 44, 71, 76, 88, 89, 91, 95, 359, 381, 382], "builder": [0, 359, 367, 385], "logger": [0, 3, 324, 326, 328, 329, 330, 331, 332, 333, 337, 343, 353, 357, 359, 367, 378], "_util": [0, 3, 11, 359, 375], "implement_for": [0, 3, 359], "thing": [0, 3, 7, 8, 102, 106, 122, 128, 360, 368, 369, 370, 371, 372, 373, 374, 378, 379, 382, 385], "consid": [0, 1, 2, 3, 8, 19, 26, 32, 36, 41, 44, 49, 50, 73, 74, 94, 102, 106, 122, 128, 149, 188, 190, 210, 227, 242, 306, 308, 309, 360, 366, 370, 371, 372, 380, 382], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 79, 80, 81, 85, 86, 87, 88, 90, 94, 102, 103, 105, 106, 107, 115, 116, 117, 119, 121, 122, 123, 124, 128, 129, 130, 136, 138, 141, 142, 146, 147, 149, 150, 158, 159, 160, 164, 165, 172, 178, 181, 182, 184, 186, 187, 188, 190, 197, 198, 199, 201, 212, 215, 216, 219, 220, 222, 223, 224, 225, 226, 229, 237, 243, 259, 261, 264, 265, 267, 271, 277, 279, 284, 290, 293, 296, 299, 304, 305, 306, 307, 308, 309, 324, 325, 326, 340, 357, 360, 361, 363, 366, 367, 368, 369, 371, 373, 374, 378, 379, 380, 381, 382, 385], "debug": [0, 6, 8, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 360, 385], "work": [0, 1, 2, 3, 4, 8, 11, 36, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 84, 86, 87, 90, 97, 102, 105, 106, 107, 110, 122, 125, 128, 143, 158, 164, 184, 187, 188, 190, 199, 202, 203, 222, 255, 263, 268, 277, 290, 293, 343, 360, 361, 366, 367, 368, 369, 370, 373, 377, 378, 379, 380, 381, 382, 384, 385], "habitat": [0, 3, 108, 360, 381], "lab": [0, 3, 100, 101, 108, 360], "mujoco": [0, 6, 8, 125, 360, 366, 368, 369], "error": [0, 1, 3, 7, 10, 11, 33, 36, 40, 42, 45, 102, 106, 122, 128, 131, 165, 190, 192, 360, 366, 368, 378, 379, 385], "solut": [0, 2, 3, 6, 7, 9, 20, 360, 361, 363, 384], "resourc": [0, 1, 20, 108, 360, 366, 368, 378, 379], "issu": [0, 3, 4, 5, 8, 60, 64, 71, 73, 74, 94, 105, 110, 142, 165, 179, 199, 248, 254, 255, 261, 262, 263, 264, 265, 360, 384], "index": [0, 3, 7, 8, 10, 15, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 78, 79, 81, 82, 84, 90, 92, 93, 94, 96, 97, 102, 106, 116, 117, 122, 128, 129, 130, 137, 142, 146, 149, 182, 199, 225, 226, 359, 370, 377, 378, 379, 382, 384], "search": [0, 121, 200, 367], "page": [0, 7, 23, 333, 372], "somewhat": [1, 2, 362, 371, 385], "equival": [1, 3, 24, 26, 28, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 98, 99, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 139, 148, 151, 182, 190, 212, 219, 222, 237, 254, 255, 262, 263, 293, 340, 373, 384, 385], "dataload": [1, 69, 85, 87, 367, 373, 382], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 66, 102, 106, 122, 128, 142, 153, 169, 177, 178, 179, 182, 190, 215, 217, 219, 221, 234, 252, 256, 257, 260, 296, 326, 361, 367, 370, 378, 382, 384, 385], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 105, 106, 107, 115, 116, 117, 122, 123, 124, 128, 129, 130, 138, 141, 153, 158, 164, 173, 181, 182, 186, 190, 221, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 340, 343, 361, 362, 363, 366, 367, 368, 369, 372, 377, 378, 379, 380, 381, 382, 384, 385], "over": [1, 2, 3, 4, 8, 13, 14, 36, 44, 50, 51, 53, 59, 60, 66, 85, 86, 102, 106, 116, 117, 122, 128, 149, 160, 172, 179, 190, 199, 246, 267, 284, 286, 291, 312, 324, 346, 363, 366, 367, 368, 370, 371, 372, 373, 378, 379, 380, 385], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 38, 40, 41, 42, 45, 49, 50, 66, 75, 102, 106, 122, 123, 124, 128, 139, 140, 146, 154, 164, 178, 181, 182, 183, 184, 186, 190, 199, 215, 217, 219, 221, 227, 264, 265, 275, 276, 278, 279, 281, 282, 283, 284, 285, 286, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 361, 366, 369, 378, 379, 380, 382, 385], "static": [1, 11, 46, 53, 79, 86, 87, 108, 188, 289, 370, 380, 382], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 23, 26, 29, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 86, 87, 92, 94, 98, 99, 102, 103, 106, 111, 112, 115, 121, 122, 123, 124, 126, 127, 128, 129, 130, 138, 139, 141, 143, 146, 147, 148, 149, 150, 158, 160, 162, 164, 166, 169, 172, 176, 177, 178, 181, 182, 184, 186, 188, 190, 196, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 231, 235, 246, 253, 254, 255, 256, 257, 259, 260, 264, 268, 269, 275, 276, 277, 278, 282, 283, 289, 290, 293, 294, 295, 296, 298, 305, 306, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 334, 361, 362, 365, 366, 367, 368, 369, 371, 372, 373, 374, 377, 378, 379, 380, 382, 383, 384, 385], "like": [1, 2, 3, 4, 7, 20, 26, 32, 36, 41, 44, 49, 50, 53, 75, 81, 87, 102, 106, 108, 115, 122, 123, 124, 128, 151, 178, 180, 190, 192, 215, 219, 228, 258, 275, 277, 290, 293, 294, 295, 362, 366, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 385], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 69, 92, 95, 102, 105, 106, 107, 108, 122, 125, 128, 141, 147, 149, 150, 159, 167, 178, 182, 190, 197, 198, 217, 221, 256, 260, 277, 290, 293, 296, 326, 340, 345, 355, 356, 357, 361, 366, 367, 368, 369, 373, 378, 379, 380, 382], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 42, 44, 45, 63, 64, 67, 68, 69, 102, 106, 118, 122, 128, 137, 142, 146, 154, 164, 172, 178, 181, 182, 183, 184, 186, 190, 222, 246, 264, 265, 266, 296, 326, 363, 368, 370, 374, 382, 385], "two": [1, 2, 3, 4, 8, 10, 36, 40, 41, 42, 44, 45, 46, 49, 50, 66, 81, 85, 87, 102, 106, 122, 128, 139, 160, 164, 186, 190, 208, 215, 217, 219, 221, 240, 265, 290, 301, 339, 343, 362, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 382, 384, 385], "main": [1, 2, 3, 5, 13, 14, 19, 21, 68, 103, 265, 343, 361, 362, 366, 367, 377, 385], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 79, 81, 84, 85, 86, 87, 90, 92, 94, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 119, 120, 122, 123, 125, 128, 129, 130, 138, 139, 143, 145, 146, 164, 172, 173, 176, 178, 180, 181, 182, 184, 186, 190, 199, 202, 203, 215, 217, 219, 221, 222, 225, 226, 227, 228, 229, 246, 248, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 290, 292, 293, 294, 295, 296, 298, 300, 304, 306, 307, 308, 309, 310, 314, 324, 325, 326, 333, 336, 346, 353, 354, 357, 366, 367, 368, 369, 370, 371, 373, 378, 379, 380, 382, 385], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 81, 84, 85, 86, 87, 88, 90, 100, 101, 102, 105, 106, 107, 108, 116, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 140, 141, 145, 147, 150, 158, 160, 162, 164, 172, 174, 180, 182, 184, 186, 188, 190, 199, 202, 203, 205, 211, 214, 217, 221, 222, 225, 226, 232, 237, 255, 259, 262, 263, 265, 267, 268, 269, 291, 296, 303, 306, 309, 324, 325, 339, 340, 355, 356, 361, 366, 368, 370, 371, 372, 373, 377, 378, 380, 381, 382, 384, 385], "constructor": [1, 2, 15, 17, 18, 19, 20, 44, 53, 66, 78, 92, 102, 106, 119, 122, 128, 129, 138, 181, 202, 203, 222, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 354, 357, 361, 366, 367, 368, 370, 373, 378, 379, 382], "iter": [1, 2, 3, 11, 14, 15, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 81, 85, 98, 99, 102, 106, 111, 112, 122, 128, 152, 160, 173, 190, 202, 203, 222, 227, 228, 241, 248, 254, 261, 262, 264, 266, 267, 269, 291, 303, 339, 342, 343, 362, 363, 366, 368, 369, 373, 375, 378, 379, 380], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 43, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 102, 103, 106, 107, 108, 110, 111, 112, 118, 119, 122, 125, 128, 136, 182, 190, 215, 217, 219, 221, 256, 259, 266, 267, 347, 357, 361, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 382, 383, 385], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 46, 60, 70, 71, 77, 79, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 118, 119, 120, 122, 123, 124, 125, 128, 136, 141, 154, 157, 160, 176, 177, 178, 179, 182, 187, 190, 199, 200, 201, 213, 215, 217, 219, 221, 223, 224, 252, 256, 257, 259, 260, 261, 265, 275, 285, 293, 305, 306, 307, 308, 309, 312, 313, 314, 325, 328, 334, 339, 343, 363, 367, 369, 371, 372, 374, 375, 377, 380, 381, 384], "queri": [1, 3, 13, 36, 40, 42, 45, 102, 106, 122, 128, 164, 181, 184, 188, 190, 267, 366, 372, 380, 384], "defin": [1, 2, 11, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 66, 102, 106, 122, 128, 165, 177, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 272, 279, 281, 291, 306, 307, 308, 309, 310, 325, 354, 366, 367, 369, 372, 375, 380, 382, 385], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 28, 36, 39, 40, 41, 42, 44, 45, 46, 49, 50, 53, 60, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 81, 84, 86, 87, 94, 98, 99, 102, 105, 106, 107, 111, 112, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 141, 142, 149, 155, 159, 160, 171, 176, 179, 182, 188, 190, 201, 202, 203, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 233, 236, 238, 239, 242, 243, 244, 245, 248, 252, 253, 256, 257, 259, 260, 261, 264, 265, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 292, 293, 294, 295, 296, 298, 334, 336, 339, 343, 345, 346, 347, 355, 356, 357, 361, 366, 367, 368, 369, 370, 371, 373, 375, 378, 379, 380, 381, 382, 385], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 36, 53, 65, 85, 92, 102, 106, 122, 128, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 162, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 190, 192, 215, 217, 221, 222, 229, 230, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 307, 308, 309, 340, 366, 368, 369, 373, 374, 378, 379, 380, 382, 385], "deliv": [1, 2, 3, 15, 66, 366, 367, 370, 373, 384], "stack": [1, 2, 3, 7, 8, 13, 14, 15, 17, 19, 20, 32, 33, 40, 41, 42, 44, 45, 49, 50, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 81, 102, 105, 106, 107, 115, 122, 123, 124, 128, 188, 215, 217, 219, 220, 221, 259, 266, 267, 325, 334, 361, 367, 370, 377, 378, 380, 384], "user": [1, 2, 3, 5, 8, 36, 60, 62, 66, 68, 87, 102, 106, 122, 128, 143, 177, 182, 190, 192, 209, 293, 296, 326, 354, 362, 363, 366, 367, 370, 372, 373, 380, 384, 385], "reach": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 46, 85, 102, 106, 116, 117, 122, 128, 129, 130, 176, 252, 256, 257, 260, 366, 368, 375, 378, 379, 384, 385], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 79, 81, 86, 87, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 138, 139, 142, 147, 148, 150, 151, 152, 159, 160, 162, 166, 167, 169, 171, 173, 176, 178, 179, 181, 182, 188, 190, 199, 200, 201, 215, 217, 221, 224, 259, 275, 276, 277, 278, 279, 281, 282, 283, 289, 290, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 362, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "state": [1, 2, 3, 4, 13, 14, 15, 16, 29, 36, 41, 44, 46, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 81, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 118, 122, 123, 124, 125, 126, 127, 128, 138, 141, 142, 143, 145, 151, 160, 167, 176, 177, 181, 182, 188, 190, 192, 199, 200, 201, 204, 209, 213, 215, 216, 217, 219, 220, 221, 222, 224, 232, 235, 236, 238, 239, 245, 249, 259, 264, 270, 275, 277, 281, 290, 291, 293, 294, 295, 296, 304, 305, 306, 307, 308, 309, 310, 357, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 378, 379, 380, 385], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 26, 29, 36, 40, 42, 45, 46, 60, 81, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 119, 120, 122, 125, 128, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 162, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 199, 215, 217, 221, 229, 252, 254, 256, 262, 286, 296, 367, 368, 369, 370, 371, 373, 375, 378, 379, 380, 381, 382, 385], "predefin": [1, 367, 369, 373, 382], "becaus": [1, 3, 4, 7, 40, 42, 45, 46, 60, 102, 106, 122, 128, 151, 158, 176, 181, 187, 190, 208, 228, 248, 254, 255, 259, 261, 262, 263, 264, 265, 366, 367, 369, 371, 372, 373, 377, 378, 379, 380, 382, 385], "potenti": [1, 2, 380, 382], "comput": [1, 3, 4, 8, 13, 15, 20, 28, 36, 46, 98, 99, 102, 106, 111, 112, 122, 128, 160, 174, 182, 185, 190, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 231, 232, 233, 234, 235, 238, 239, 241, 243, 244, 246, 249, 252, 253, 255, 256, 259, 260, 261, 263, 265, 268, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 347, 362, 366, 368, 369, 370, 371, 377, 378, 379, 381, 382], "heavi": [1, 8, 60, 382], "crucial": [1, 2, 3, 252, 256, 257, 260, 282, 289, 291, 366, 367, 368, 369, 370, 372, 374, 378, 379, 380, 385], "configur": [1, 8, 20, 21, 46, 158, 204, 209, 235, 291, 293, 361, 366, 367, 368, 372, 378, 379, 380], "hyperparamet": [1, 84, 190, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 366, 380, 382], "appropri": [1, 3, 4, 7, 72, 82, 92, 93, 96, 97, 122, 128, 151, 354, 357, 366, 374, 382], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 80, 81, 84, 85, 88, 90, 92, 94, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 361, 362, 366, 369, 371, 375, 378, 379, 380, 381, 384], "take": [1, 2, 3, 8, 22, 46, 63, 89, 95, 98, 99, 102, 106, 111, 112, 122, 128, 145, 176, 179, 181, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 268, 271, 274, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 334, 345, 361, 363, 366, 367, 368, 370, 371, 372, 378, 379, 380, 382, 385], "consider": [1, 2, 3, 8, 105, 107, 367, 378, 379, 382], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 49, 50, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 112, 116, 117, 118, 122, 123, 124, 128, 129, 130, 138, 147, 150, 177, 182, 190, 200, 202, 203, 217, 221, 222, 269, 275, 276, 277, 278, 279, 281, 283, 284, 290, 291, 293, 294, 295, 296, 298, 304, 306, 309, 366, 367, 368, 370, 378, 379, 380, 385], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 79, 81, 86, 87, 88, 92, 95, 100, 101, 102, 105, 106, 107, 108, 112, 115, 118, 122, 123, 124, 128, 129, 130, 138, 139, 142, 145, 146, 147, 148, 151, 152, 154, 158, 160, 165, 166, 167, 169, 172, 173, 176, 177, 179, 181, 182, 187, 188, 190, 192, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 228, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 261, 263, 264, 265, 268, 271, 275, 277, 283, 288, 290, 291, 293, 294, 295, 297, 305, 306, 307, 308, 309, 310, 326, 328, 338, 339, 340, 343, 353, 355, 356, 357, 361, 363, 366, 367, 368, 369, 371, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "occur": [1, 8, 14, 32, 33, 60, 102, 106, 108, 122, 128, 143, 152, 160, 165, 187, 200, 248, 254, 255, 261, 262, 263, 264, 265, 286, 382, 385], "serial": [1, 2, 3, 36, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 188, 190], "parallel": [1, 3, 8, 102, 105, 106, 107, 122, 123, 124, 128, 182, 187, 192, 275, 354, 355, 356, 357, 367, 368, 378, 379], "syncdatacollector": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 29, 36, 47, 139, 142, 169, 353, 356, 359, 366, 367, 368, 369, 373, 375, 378, 379, 382], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 115, 118, 121, 122, 123, 124, 125, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 355, 356, 357, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 382, 385], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 40, 42, 45, 53, 63, 68, 69, 103, 119, 122, 128, 188, 355, 356, 357, 366, 367, 368, 384, 385], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 356, 359, 368, 373, 384], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 42, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 86, 87, 115, 123, 124, 215, 219, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 361, 363, 368, 371, 382, 384], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 41, 44, 49, 50, 79, 86, 87, 98, 99, 100, 101, 105, 107, 108, 110, 111, 112, 119, 120, 122, 125, 188, 190, 227, 260, 345, 359, 361, 366, 370, 374, 378, 379, 380], "aggreg": [1, 3, 60, 92, 123, 124, 200, 202, 203, 205, 206, 267], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 41, 42, 43, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 85, 86, 87, 102, 103, 106, 122, 128, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 159, 160, 162, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 199, 200, 215, 217, 219, 221, 222, 227, 237, 253, 255, 256, 263, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 306, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 345, 361, 367, 369, 370, 371, 372, 373, 374, 375, 380, 381, 384, 385], "final": [1, 2, 3, 4, 20, 40, 42, 45, 46, 178, 187, 215, 217, 219, 221, 227, 252, 256, 257, 258, 260, 266, 306, 339, 361, 366, 367, 368, 374, 375, 378, 379, 380, 385], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 355, 359, 366, 367, 368, 373, 384], "sever": [1, 2, 3, 8, 34, 36, 53, 63, 102, 106, 122, 128, 143, 145, 182, 190, 293, 366, 368, 374, 375, 382, 385], "gather": [1, 3, 17, 19, 20, 40, 42, 45, 53, 69, 73, 74, 86, 94, 165, 226, 234, 305, 347, 360, 367, 368, 369, 373, 378, 379, 380, 382, 385], "continu": [1, 2, 9, 25, 54, 87, 102, 106, 122, 123, 124, 128, 129, 130, 196, 205, 206, 207, 208, 260, 267, 272, 275, 276, 283, 289, 293, 294, 295, 296, 297, 298, 306, 311, 319, 361, 366, 368, 369, 371, 378, 379, 380, 382, 384, 385], "concomitantli": [1, 102, 106, 122, 128], "network": [1, 4, 8, 36, 102, 106, 115, 122, 123, 124, 128, 190, 202, 203, 205, 206, 207, 208, 211, 213, 214, 219, 222, 227, 228, 230, 232, 233, 236, 238, 239, 240, 245, 249, 250, 251, 253, 264, 268, 276, 277, 278, 279, 281, 282, 283, 284, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 302, 304, 306, 307, 308, 309, 310, 352, 353, 361, 362, 363, 372, 375, 377, 380, 385], "impli": [1, 385], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 46, 79, 81, 84, 98, 99, 102, 106, 122, 126, 127, 128, 146, 164, 178, 181, 182, 184, 186, 190, 215, 216, 217, 219, 220, 221, 227, 230, 264, 275, 276, 277, 283, 286, 296, 345, 352, 361, 363, 366, 367, 368, 369, 377, 380, 382, 384], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 32, 33, 36, 40, 42, 45, 62, 68, 71, 102, 105, 106, 107, 108, 122, 125, 128, 158, 160, 173, 182, 183, 188, 190, 192, 222, 227, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 378, 379, 380, 381, 382, 384, 385], "slightli": [1, 60, 361, 362, 369, 378, 380, 381, 382, 385], "lag": [1, 366, 367, 368], "therefor": [1, 2, 3, 7, 41, 44, 49, 50, 67, 68, 102, 106, 122, 128, 169, 293, 304, 372, 378, 385], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 29, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 79, 81, 86, 87, 92, 94, 95, 102, 106, 115, 118, 121, 122, 123, 124, 128, 136, 139, 142, 151, 158, 164, 169, 172, 176, 177, 179, 181, 183, 186, 187, 199, 200, 215, 216, 219, 220, 225, 226, 227, 252, 256, 257, 260, 261, 264, 265, 274, 275, 276, 277, 282, 283, 284, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 362, 363, 366, 367, 368, 370, 377, 378, 379, 380, 382, 385], "asynchron": [1, 9, 14, 20, 36, 40, 42, 45, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 275, 355, 366, 367, 368], "off": [1, 2, 4, 218, 244, 254, 296, 324, 339, 348, 361, 363, 366, 367, 368, 371, 372, 378, 379, 381, 385], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 81, 86, 94, 102, 105, 106, 107, 122, 123, 124, 128, 129, 147, 150, 154, 160, 177, 182, 187, 190, 192, 212, 215, 217, 219, 221, 228, 229, 249, 251, 253, 255, 262, 275, 282, 284, 289, 293, 339, 361, 363, 366, 367, 368, 369, 370, 371, 373, 374, 378, 379, 380, 381, 382, 385], "remot": [1, 2, 17, 18, 19, 20, 122, 128, 385], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 46, 92, 98, 99, 102, 106, 108, 109, 111, 112, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 138, 139, 142, 145, 147, 150, 151, 152, 158, 162, 166, 167, 172, 173, 174, 176, 177, 179, 190, 192, 201, 217, 221, 224, 259, 260, 275, 324, 326, 347, 361, 366, 368, 369, 371, 372, 373, 374, 375, 381, 382, 384], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 60, 63, 64, 66, 67, 68, 102, 106, 116, 117, 122, 128, 129, 130, 173, 294, 306, 307, 308, 309, 310, 362, 366, 368, 371, 372, 373], "synchronis": [1, 103, 378, 379], "either": [1, 2, 5, 21, 36, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 102, 106, 122, 128, 176, 177, 190, 270, 298, 330, 363, 366, 367, 369, 378, 381, 382, 384, 385], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 366, 379, 384], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 81, 84, 85, 86, 87, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 138, 139, 141, 142, 143, 146, 149, 152, 154, 157, 158, 159, 160, 164, 165, 167, 168, 171, 172, 173, 176, 178, 180, 181, 182, 183, 184, 186, 188, 190, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 243, 244, 248, 249, 250, 251, 252, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 306, 307, 308, 309, 312, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 333, 336, 337, 339, 340, 343, 357, 361, 362, 363, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "second": [1, 3, 8, 60, 63, 92, 139, 215, 217, 219, 221, 255, 277, 290, 293, 296, 328, 342, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 94, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 139, 146, 147, 148, 150, 151, 152, 158, 162, 163, 164, 166, 167, 169, 173, 176, 178, 180, 181, 182, 184, 186, 190, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 227, 228, 229, 230, 235, 236, 237, 245, 248, 249, 250, 251, 253, 254, 255, 259, 260, 261, 262, 263, 264, 267, 269, 272, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 324, 340, 345, 351, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 52, 53, 54, 55, 79, 86, 102, 106, 122, 128, 139, 154, 158, 181, 190, 211, 212, 216, 220, 231, 249, 250, 251, 254, 255, 258, 264, 270, 275, 277, 278, 279, 284, 290, 293, 295, 304, 305, 306, 307, 308, 309, 343, 359, 363, 366, 367, 368, 369, 370, 371, 377, 378, 379, 380, 385], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 77, 79, 81, 86, 87, 94, 101, 102, 103, 105, 106, 107, 118, 122, 128, 142, 160, 178, 181, 182, 188, 190, 196, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 279, 282, 283, 291, 304, 306, 307, 308, 309, 324, 326, 330, 339, 347, 348, 349, 353, 355, 356, 361, 362, 363, 366, 368, 369, 370, 371, 380, 382, 385], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 24, 26, 29, 32, 36, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 94, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 139, 146, 147, 148, 150, 151, 152, 162, 164, 166, 167, 169, 173, 176, 178, 181, 182, 184, 186, 190, 196, 199, 201, 211, 215, 216, 217, 219, 220, 221, 224, 229, 230, 236, 237, 245, 248, 249, 250, 251, 253, 254, 255, 259, 261, 262, 263, 264, 267, 269, 272, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 324, 340, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 60, 62, 66, 79, 86, 87, 90, 92, 102, 106, 110, 122, 125, 128, 167, 208, 217, 219, 221, 222, 231, 246, 248, 252, 254, 264, 269, 291, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 360, 362, 366, 367, 368, 370, 372, 373, 378, 379, 380, 382, 384, 385], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 77, 78, 79, 81, 82, 86, 87, 88, 90, 92, 93, 96, 97, 98, 99, 102, 103, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 139, 142, 145, 147, 148, 149, 150, 159, 160, 164, 169, 172, 175, 177, 178, 179, 181, 182, 183, 186, 188, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 228, 231, 232, 233, 234, 235, 237, 238, 239, 241, 246, 248, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 304, 306, 307, 308, 309, 313, 314, 328, 336, 338, 339, 343, 347, 357, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 385], "cuda": [1, 2, 3, 7, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 102, 106, 108, 109, 110, 122, 128, 146, 158, 163, 164, 178, 181, 182, 184, 186, 190, 215, 216, 219, 220, 264, 335, 366, 367, 368, 369, 378, 379, 381, 385], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 28, 51, 81, 98, 99, 111, 112, 122, 128, 143, 145, 149, 159, 169, 172, 176, 181, 188, 215, 219, 221, 227, 229, 230, 248, 254, 261, 262, 264, 265, 268, 277, 283, 290, 293, 294, 298, 312, 357, 361, 363, 366, 367, 368, 370, 372, 373, 378, 379, 380, 382, 384], "infer": [1, 122, 128, 142, 188, 217, 221, 229, 253, 281, 324, 366, 368, 373, 375, 382], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 36, 60, 63, 79, 86, 87, 98, 99, 100, 101, 102, 105, 106, 111, 112, 118, 119, 120, 122, 128, 159, 160, 182, 188, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 266, 267, 268, 271, 296, 326, 333, 339, 355, 356, 357, 360, 363, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384], "dispatch": [1, 17, 18, 19, 20, 246, 259, 326, 366], "avail": [1, 2, 3, 4, 6, 20, 41, 44, 49, 50, 60, 63, 68, 79, 85, 86, 87, 100, 101, 110, 116, 117, 122, 123, 124, 125, 129, 130, 138, 141, 158, 212, 237, 261, 265, 291, 326, 355, 356, 361, 366, 367, 368, 369, 370, 371, 378, 379, 380, 382, 385], "speed": [1, 2, 4, 8, 28, 102, 106, 122, 128, 362, 366, 367, 368, 369, 378, 379, 380, 382], "avoid": [1, 2, 3, 36, 73, 74, 94, 102, 106, 122, 128, 135, 182, 188, 190, 248, 264, 269, 277, 290, 293, 296, 346, 368, 379], "oom": [1, 3, 40, 42, 45, 73, 74, 94], "choic": [1, 2, 62, 68, 122, 231, 361, 362, 366, 367, 372, 378, 379], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 36, 41, 44, 46, 49, 50, 53, 60, 63, 64, 66, 67, 68, 71, 73, 74, 79, 81, 86, 87, 92, 94, 102, 103, 104, 106, 115, 119, 122, 123, 124, 128, 129, 138, 139, 147, 150, 167, 181, 183, 188, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 228, 229, 231, 232, 233, 235, 236, 238, 239, 241, 245, 246, 248, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 277, 290, 291, 293, 306, 307, 308, 309, 310, 324, 340, 355, 356, 357, 361, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 382, 385], "ie": [1, 3, 17, 19, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 49, 52, 53, 54, 55, 66, 78, 87, 102, 106, 110, 121, 122, 128, 142, 154, 183, 188, 200, 217, 221, 253, 275, 277, 278, 282, 283, 289, 290, 293, 294, 295, 296, 298, 306, 307, 308, 309, 361, 362, 367, 379], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 36, 40, 41, 42, 43, 44, 45, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 78, 79, 81, 86, 92, 94, 102, 106, 122, 128, 187, 188, 190, 201, 224, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 333, 359, 363, 366, 368, 369, 371, 373, 375, 378, 379, 381, 385], "while": [1, 2, 3, 7, 8, 36, 102, 106, 122, 128, 169, 182, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 282, 289, 290, 293, 296, 361, 366, 368, 369, 371, 373, 374, 378, 379, 380, 381, 382, 384], "wait": [1, 19, 20, 21, 369, 380], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 36, 40, 42, 44, 45, 49, 60, 63, 64, 66, 67, 68, 69, 73, 74, 79, 81, 86, 87, 92, 94, 102, 106, 116, 117, 122, 123, 124, 128, 129, 130, 135, 138, 139, 141, 142, 149, 160, 167, 169, 172, 173, 176, 178, 182, 190, 199, 202, 203, 215, 219, 239, 259, 261, 266, 267, 268, 275, 276, 278, 279, 281, 282, 283, 289, 293, 296, 306, 313, 314, 324, 326, 361, 363, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 382, 385], "impact": [1, 2, 3, 66, 112, 147, 150, 275, 277, 290, 293, 295, 367, 369, 378, 379], "memori": [1, 3, 8, 20, 28, 36, 40, 42, 45, 53, 60, 62, 63, 64, 66, 67, 68, 71, 73, 77, 102, 103, 106, 110, 122, 128, 142, 146, 164, 178, 181, 182, 184, 186, 188, 190, 219, 220, 264, 357, 359, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "manag": [1, 8, 302, 303, 306, 307, 308, 309, 339, 372], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 70, 78, 79, 81, 84, 86, 87, 92, 102, 106, 111, 112, 122, 123, 124, 128, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 199, 200, 201, 211, 212, 217, 221, 223, 224, 237, 248, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 324, 326, 337, 338, 339, 341, 342, 343, 347, 362, 363, 366, 368, 369, 370, 372, 377, 378, 379, 380, 382, 384, 385], "control": [1, 3, 5, 8, 15, 23, 27, 86, 100, 101, 102, 106, 115, 122, 123, 124, 128, 149, 199, 205, 206, 207, 208, 217, 221, 223, 224, 239, 246, 260, 264, 265, 266, 275, 277, 290, 293, 297, 306, 311, 319, 324, 361, 363, 366, 367, 368, 370, 371, 372, 378, 379, 380, 382], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 81, 84, 85, 92, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 116, 117, 119, 120, 122, 125, 128, 129, 130, 142, 143, 147, 150, 155, 158, 159, 160, 164, 165, 176, 178, 179, 181, 182, 184, 190, 192, 211, 215, 216, 218, 219, 220, 221, 225, 226, 227, 244, 249, 250, 251, 253, 259, 261, 264, 265, 267, 275, 276, 277, 279, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 301, 304, 306, 307, 308, 309, 324, 326, 334, 338, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 381, 382, 385], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 367, 379], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 41, 42, 44, 46, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 79, 81, 84, 86, 102, 106, 122, 123, 124, 128, 138, 139, 142, 145, 147, 150, 152, 155, 162, 174, 182, 188, 190, 217, 221, 228, 306, 308, 309, 339, 343, 362, 366, 367, 368, 369, 371, 372, 373, 375, 378, 379, 380, 382, 385], "heurist": [1, 4, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 259, 260, 366, 373, 385], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 62, 84, 92, 98, 99, 102, 106, 111, 112, 122, 128, 230, 293, 306, 307, 308, 309, 310, 325, 360, 361, 363, 366, 367, 368, 369, 371, 373, 374, 379, 382, 385], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 26, 32, 33, 36, 40, 42, 45, 51, 53, 62, 66, 85, 86, 90, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 119, 120, 122, 123, 124, 125, 128, 142, 147, 149, 150, 155, 159, 160, 181, 182, 188, 190, 202, 203, 216, 217, 220, 221, 222, 225, 226, 227, 228, 253, 260, 268, 296, 366, 367, 368, 370, 371, 373, 377, 378, 379, 381, 382, 385], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 78, 79, 81, 84, 85, 86, 87, 92, 94, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 138, 139, 140, 141, 142, 143, 147, 149, 150, 151, 152, 154, 158, 159, 160, 162, 164, 165, 169, 171, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 241, 242, 243, 244, 248, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 357, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 381, 382, 384, 385], "behaviour": [1, 3, 13, 14, 20, 66, 106, 143, 147, 150, 160, 165, 177, 199, 217, 218, 221, 244, 324, 339, 361, 367, 378, 382], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 32, 102, 106, 122, 128, 142, 147, 150, 160, 178, 179, 221, 261, 265, 266, 267, 345, 355, 356, 361, 366, 367, 370, 371, 379, 380, 385], "choos": [1, 115, 217, 221, 293, 359, 361, 362, 366, 367, 368, 378, 379, 382], "follow": [1, 2, 3, 6, 7, 8, 36, 40, 42, 43, 45, 46, 60, 62, 63, 64, 65, 66, 67, 68, 79, 98, 99, 102, 105, 106, 107, 111, 112, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 138, 158, 164, 184, 190, 202, 203, 215, 217, 219, 221, 222, 255, 262, 263, 274, 275, 276, 277, 278, 282, 283, 289, 290, 293, 294, 295, 296, 298, 326, 343, 361, 362, 363, 366, 367, 368, 369, 372, 373, 377, 378, 379, 380, 382, 384, 385], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 346, 366, 368, 384], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 36, 60, 142, 155, 190, 252, 256, 259, 260, 325, 326, 328, 336, 339, 343, 346, 347, 366, 367, 368, 369, 371, 378, 379, 382, 384, 385], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 81, 85, 86, 88, 90, 94, 95, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 119, 120, 121, 122, 125, 128, 138, 139, 142, 145, 146, 149, 152, 154, 157, 158, 160, 162, 163, 164, 172, 174, 178, 181, 182, 184, 186, 187, 188, 190, 192, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 228, 229, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 257, 259, 260, 263, 264, 265, 267, 268, 271, 277, 290, 293, 296, 305, 306, 307, 308, 309, 324, 325, 339, 363, 367, 368, 369, 370, 371, 373, 374, 378, 379, 380, 382, 384, 385], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 29, 36, 47, 139, 142, 169, 346, 366, 367, 368, 369, 373, 375, 378, 379, 382, 384], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 34, 35, 36, 37, 44, 46, 48, 49, 60, 62, 63, 66, 81, 84, 86, 87, 89, 92, 102, 103, 106, 116, 117, 122, 123, 124, 128, 129, 130, 164, 169, 172, 176, 177, 178, 179, 186, 188, 190, 212, 215, 216, 217, 219, 221, 227, 228, 232, 236, 237, 245, 252, 254, 255, 256, 263, 267, 312, 315, 316, 317, 318, 320, 321, 322, 323, 326, 339, 340, 355, 356, 361, 366, 367, 368, 369, 371, 372, 373, 375, 378, 379, 380, 381, 382, 384, 385], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 346, 366, 367, 375], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 46, 52, 54, 55, 66, 68, 80, 92, 102, 106, 118, 122, 128, 149, 159, 160, 178, 191, 192, 215, 217, 219, 221, 256, 261, 264, 265, 272, 276, 294, 339, 347, 361, 366, 367, 368, 369, 370, 371, 373, 380, 381, 382, 384, 385], "rand_step": [1, 2, 3, 29, 47, 100, 101, 102, 103, 105, 106, 107, 113, 114, 118, 119, 120, 122, 128, 157, 178, 188, 380, 384, 385], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 366], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 62, 64, 66, 67, 68, 366, 367, 368], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 30, 31, 36, 37, 48, 49, 60, 62, 63, 64, 66, 67, 68, 78, 79, 86, 87, 92, 98, 99, 102, 106, 111, 112, 122, 128, 165, 176, 181, 190, 201, 221, 224, 260, 293, 306, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 334, 359, 362, 366, 367, 368, 369, 370, 373, 375, 380, 384, 385], "pad": [1, 2, 3, 22, 43, 51, 62, 64, 66, 67, 68, 142, 202, 203, 205, 206, 221, 225, 226, 227, 340], "along": [1, 2, 3, 13, 14, 22, 32, 33, 40, 42, 45, 46, 53, 62, 64, 66, 67, 68, 74, 79, 81, 86, 87, 92, 94, 105, 107, 141, 142, 143, 160, 162, 165, 172, 180, 221, 222, 225, 226, 230, 254, 261, 264, 265, 291, 361, 366, 367, 369, 370, 372, 378, 379, 380, 382], "point": [1, 2, 3, 21, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 65, 72, 78, 79, 82, 92, 93, 96, 97, 102, 106, 122, 128, 138, 141, 142, 146, 164, 177, 178, 180, 181, 182, 184, 186, 190, 223, 264, 274, 284, 343, 360, 367, 368, 377, 378, 379, 380, 382, 385], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 46, 52, 54, 55, 79, 86, 87, 106, 138, 165, 176, 200, 225, 226, 252, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 363, 369], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 32, 47, 49, 64, 100, 101, 102, 105, 106, 107, 122, 128, 129, 130, 155, 165, 188, 190, 212, 225, 226, 237, 254, 255, 262, 263, 265, 301, 306, 340, 366, 368, 369, 370, 371, 372, 378, 379], "valid": [1, 2, 3, 22, 40, 42, 43, 53, 69, 92, 131, 138, 165, 182, 190, 202, 203, 222, 225, 226, 252, 260, 290, 306, 307, 308, 309, 340, 363, 385], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 339, 359, 366, 367], "strategi": [1, 2, 15, 66, 84, 115, 226, 234, 256, 361, 363, 366, 367, 371, 378, 379, 382], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 49, 52, 54, 55, 57, 81, 102, 106, 112, 118, 122, 123, 124, 128, 129, 131, 139, 141, 142, 151, 158, 176, 177, 178, 181, 182, 187, 188, 190, 202, 203, 225, 226, 227, 228, 252, 254, 261, 262, 265, 268, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 304, 326, 343, 353, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 385], "organ": [1, 2, 380, 382], "within": [1, 2, 3, 13, 14, 16, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 105, 106, 107, 122, 125, 128, 139, 142, 147, 150, 151, 169, 176, 187, 188, 190, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 272, 279, 284, 304, 324, 326, 361, 367, 370, 371, 372, 373, 374, 375, 378, 380, 384], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 46, 52, 53, 54, 55, 62, 63, 66, 84, 98, 99, 102, 106, 111, 112, 115, 122, 123, 124, 128, 138, 142, 149, 160, 167, 182, 183, 190, 212, 215, 216, 217, 219, 220, 221, 222, 224, 227, 228, 237, 289, 293, 301, 306, 307, 308, 312, 313, 314, 339, 343, 345, 355, 356, 361, 362, 363, 366, 367, 368, 370, 372, 374, 377, 378, 379, 380, 381, 382, 385], "how": [1, 2, 3, 17, 18, 19, 23, 36, 41, 49, 66, 78, 79, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 190, 275, 277, 288, 290, 293, 326, 328, 343, 360, 361, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "tabl": [1, 361, 367, 371], "summar": [1, 3, 380], "what": [1, 3, 8, 27, 41, 52, 60, 86, 102, 106, 122, 128, 151, 178, 192, 199, 262, 360, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 384, 385], "expect": [1, 2, 3, 4, 7, 26, 36, 44, 52, 53, 79, 85, 86, 102, 106, 118, 121, 122, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 160, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 215, 216, 217, 219, 220, 221, 227, 228, 255, 260, 264, 267, 275, 276, 277, 278, 279, 281, 282, 283, 289, 290, 291, 293, 294, 295, 296, 298, 304, 347, 360, 361, 362, 363, 366, 368, 369, 370, 371, 372, 373, 378, 379, 380, 382, 385], "n": [1, 2, 3, 6, 7, 24, 28, 36, 39, 46, 102, 106, 122, 128, 142, 149, 154, 183, 190, 215, 216, 219, 224, 259, 260, 265, 275, 283, 291, 305, 340, 361, 363, 367, 369, 371, 378, 379, 382, 385], "b": [1, 2, 3, 7, 8, 22, 26, 32, 40, 42, 44, 45, 46, 49, 50, 92, 215, 216, 219, 220, 227, 228, 229, 230, 236, 245, 268, 306, 307, 308, 309, 310, 312, 326, 361, 367, 381, 382], "cat_result": [1, 13, 14], "na": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 86, 87, 94, 98, 99, 102, 105, 106, 108, 109, 111, 112, 118, 119, 120, 122, 125, 126, 127, 128, 136, 138, 140, 142, 143, 145, 146, 148, 149, 158, 159, 160, 164, 169, 172, 174, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 190, 201, 202, 203, 205, 206, 207, 208, 209, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 234, 238, 239, 242, 243, 244, 246, 248, 252, 253, 255, 256, 257, 260, 263, 264, 267, 268, 271, 272, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 304, 305, 306, 307, 308, 309, 312, 313, 314, 334, 341, 353, 357, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385], "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 78, 79, 81, 85, 92, 102, 103, 105, 106, 119, 120, 122, 128, 138, 142, 147, 150, 151, 164, 168, 169, 177, 179, 186, 188, 190, 192, 199, 215, 219, 254, 260, 264, 297, 306, 307, 308, 309, 310, 312, 326, 333, 343, 345, 357, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "p": [1, 2, 4, 81, 84, 103, 126, 127], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 60, 62, 64, 66, 67, 68, 98, 99, 102, 106, 111, 112, 122, 123, 124, 128, 146, 147, 148, 150, 164, 169, 173, 177, 178, 180, 181, 182, 184, 186, 187, 190, 215, 218, 219, 222, 227, 239, 243, 244, 264, 267, 274, 275, 276, 278, 279, 281, 282, 283, 289, 291, 293, 294, 295, 296, 298, 345, 355, 356, 357, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 385], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 78, 79, 81, 92, 102, 105, 106, 122, 128, 147, 148, 150, 180, 182, 192, 221, 222, 228, 261, 264, 265, 267, 268, 274, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 306, 307, 308, 309, 326, 334, 345, 355, 356, 357, 359, 361, 363, 366, 367, 368, 369, 370, 371, 373, 374, 378, 379, 380, 382, 385], "dimens": [1, 2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 52, 53, 54, 55, 62, 64, 66, 67, 68, 73, 74, 79, 86, 87, 92, 94, 100, 101, 102, 105, 106, 107, 108, 122, 128, 129, 130, 141, 142, 143, 154, 160, 162, 165, 172, 175, 180, 183, 188, 202, 203, 204, 209, 217, 219, 221, 222, 225, 226, 227, 229, 230, 235, 236, 240, 241, 242, 243, 246, 254, 259, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 357, 361, 366, 367, 368, 369, 370, 378, 379, 380, 382], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 36, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 81, 92, 98, 99, 102, 103, 106, 111, 112, 115, 121, 122, 123, 124, 125, 128, 135, 141, 143, 165, 172, 178, 179, 182, 188, 190, 199, 213, 215, 219, 221, 259, 260, 277, 283, 286, 290, 291, 293, 294, 298, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 343, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "adapt": [1, 23, 136, 176, 290, 366, 380], "equal": [1, 13, 14, 16, 60, 79, 86, 87, 119, 122, 128, 159, 160, 202, 203, 215, 217, 219, 221, 222, 228, 297, 301, 334, 355, 356, 366, 368, 381], "introduc": [1, 2, 122, 128, 215, 217, 219, 221, 260, 366, 378], "some": [1, 2, 3, 4, 7, 8, 9, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 44, 52, 53, 54, 55, 62, 68, 73, 74, 81, 92, 94, 98, 99, 102, 105, 106, 107, 111, 112, 116, 117, 122, 123, 124, 128, 129, 130, 138, 164, 178, 182, 184, 190, 192, 205, 217, 221, 241, 265, 266, 267, 326, 334, 346, 361, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 382, 384, 385], "confus": [1, 36, 102, 106, 122, 128, 182, 190], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 36, 40, 41, 42, 45, 49, 50, 53, 60, 62, 64, 66, 67, 68, 73, 74, 75, 81, 84, 85, 86, 87, 88, 90, 94, 102, 105, 106, 107, 118, 122, 128, 145, 148, 149, 166, 173, 180, 184, 188, 190, 215, 217, 221, 230, 231, 253, 255, 256, 263, 265, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 306, 324, 340, 355, 356, 361, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 384, 385], "better": [1, 3, 8, 9, 13, 14, 217, 221, 362, 368, 370, 380, 384], "consist": [1, 2, 3, 36, 41, 44, 49, 50, 63, 66, 102, 106, 122, 128, 158, 187, 190, 203, 222, 366, 367, 368, 380, 381, 385], "interact": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 66, 102, 106, 116, 117, 122, 128, 182, 261, 265, 366, 368, 370, 371, 373, 378, 379, 380, 385], "keep": [1, 3, 4, 7, 8, 14, 40, 41, 42, 44, 45, 49, 50, 85, 92, 122, 128, 160, 164, 186, 188, 190, 199, 260, 336, 343, 366, 367, 368, 369, 373, 374, 375, 379, 380, 382, 384, 385], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 60, 63, 164, 186, 276, 278, 281, 283, 294, 296, 298, 366, 367, 371, 372, 378, 379, 382, 385], "interchang": [1, 368, 370, 374, 381, 382], "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 23, 36, 40, 41, 42, 44, 45, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 85, 86, 87, 102, 106, 116, 117, 122, 128, 129, 130, 149, 159, 170, 182, 188, 190, 192, 202, 203, 211, 215, 217, 221, 222, 227, 228, 255, 261, 265, 275, 277, 278, 281, 282, 283, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 301, 306, 339, 343, 362, 366, 367, 369, 373, 378, 379, 380, 382, 385], "wherea": [1, 2, 21, 66, 98, 99, 100, 101, 105, 107, 108, 111, 112, 119, 120, 125, 149, 190, 291, 363, 374], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 49, 52, 54, 55, 63, 66, 68, 78, 79, 102, 106, 118, 122, 128, 164, 178, 182, 186, 188, 190, 217, 219, 221, 225, 226, 256, 257, 260, 261, 265, 279, 282, 283, 296, 304, 306, 307, 308, 309, 310, 366, 367, 368, 370, 372, 373, 374, 378, 379, 380, 381], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 60, 66, 79, 86, 92, 102, 106, 122, 128, 165, 266, 267, 334, 343, 361, 366, 367, 368, 373, 377, 384, 385], "doesn": [1, 4, 11, 92, 119, 147, 150, 370], "understood": [1, 366], "serv": [1, 17, 19, 20, 108, 382, 385], "basi": [1, 92, 227, 382], "simplest": [1, 92, 268, 366, 368, 369, 371, 378, 379, 382, 385], "scenario": [1, 2, 116, 117, 122, 129, 130, 324, 366, 371, 378, 379, 380], "transit": [1, 36, 62, 66, 87, 92, 102, 106, 122, 128, 190, 270, 366, 369, 370, 371, 373, 378, 380, 382], "sampl": [1, 4, 8, 9, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 46, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 80, 81, 84, 85, 86, 87, 90, 92, 94, 102, 106, 118, 121, 122, 128, 141, 142, 165, 169, 193, 194, 197, 198, 201, 210, 218, 224, 225, 226, 234, 235, 238, 243, 244, 248, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 275, 276, 277, 278, 279, 281, 290, 292, 293, 298, 334, 340, 343, 346, 359, 361, 366, 367, 368, 369, 370, 371, 373, 375, 378, 379, 381, 384, 385], "attent": [1, 2, 8, 366, 369, 385], "given": [1, 2, 3, 13, 14, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 46, 49, 50, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 86, 87, 102, 106, 118, 122, 128, 146, 149, 160, 164, 178, 181, 182, 184, 186, 190, 199, 201, 212, 213, 215, 219, 224, 237, 241, 248, 254, 255, 256, 259, 260, 263, 264, 265, 266, 267, 269, 274, 278, 279, 281, 305, 306, 307, 308, 309, 310, 312, 335, 339, 353, 361, 363, 366, 367, 368, 370, 371, 372, 373, 374, 379, 380, 385], "built": [1, 2, 3, 5, 7, 81, 98, 99, 105, 111, 112, 121, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 299, 304, 351, 353, 354, 357, 366, 367, 368, 369, 372, 374, 382, 385], "flatten": [1, 24, 25, 26, 28, 29, 32, 33, 34, 35, 38, 39, 40, 42, 45, 52, 54, 55, 92, 139, 154, 340, 359, 369, 379], "suffici": [1, 3, 4, 366], "preprocess": [1, 2, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 367], "popul": [1, 2, 3, 41, 44, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 157, 178, 366, 368, 369, 371, 373, 380, 382], "replaybuff": [1, 2, 29, 41, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 86, 96, 142, 165, 169, 190, 279, 284, 304, 351, 353, 359, 368, 373, 375, 378, 379, 381, 382, 384], "lazytensorstorag": [1, 2, 41, 44, 49, 50, 78, 92, 169, 190, 368, 375, 379, 382], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 44, 92, 102, 103, 106, 122, 128, 135, 139, 158, 178, 190, 246, 254, 259, 262, 285, 287, 306, 309, 317, 318, 322, 323, 324, 353, 362, 366, 378, 379, 382, 384, 385], "reshap": [1, 2, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 66, 86, 92, 139, 217, 221, 222, 324, 368, 378, 379], "extend": [1, 2, 8, 24, 25, 26, 28, 29, 32, 33, 34, 35, 38, 39, 41, 44, 47, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 75, 78, 79, 81, 82, 86, 87, 90, 92, 93, 96, 97, 141, 169, 190, 340, 363, 366, 367, 368, 369, 373, 375, 378, 379, 381, 382, 384], "slice": [1, 2, 3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 86, 87, 141, 382], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 42, 44, 45, 49, 50, 92, 110, 373, 378, 379], "achiev": [1, 2, 3, 4, 36, 102, 106, 110, 122, 128, 177, 190, 200, 340, 363, 366, 367, 368, 369, 378, 379, 380, 382, 385], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 40, 41, 42, 44, 45, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 92, 102, 103, 106, 110, 122, 123, 128, 129, 130, 139, 142, 164, 181, 182, 184, 187, 188, 190, 196, 199, 202, 203, 205, 206, 207, 208, 209, 214, 217, 221, 222, 223, 227, 228, 253, 265, 272, 279, 284, 294, 296, 304, 326, 340, 347, 348, 349, 353, 355, 356, 361, 366, 367, 368, 369, 371, 374, 378, 379, 380, 381, 382, 384, 385], "multidimension": [1, 2, 49, 78, 79, 382], "slicesampl": [1, 2, 60, 79, 382], "sampler": [1, 2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 92, 94, 165, 279, 284, 304, 366, 368, 378, 379, 382], "One": [1, 2, 4, 8, 35, 39, 53, 92, 98, 99, 122, 128, 142, 169, 184, 234, 252, 264, 268, 297, 301, 330, 366, 367, 382, 385], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 81, 86, 87, 88, 89, 90, 92, 94, 98, 102, 103, 106, 111, 122, 123, 124, 125, 128, 129, 138, 139, 142, 145, 151, 155, 158, 160, 162, 173, 177, 178, 179, 182, 183, 188, 190, 202, 203, 212, 217, 221, 222, 225, 226, 227, 228, 237, 248, 254, 255, 259, 261, 262, 263, 264, 265, 268, 269, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 297, 298, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 366, 367, 368, 369, 371, 377, 380, 382], "ensur": [1, 2, 3, 36, 41, 49, 78, 79, 85, 102, 106, 122, 128, 142, 164, 176, 182, 184, 188, 190, 254, 361, 367, 368, 380, 382], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 81, 92, 94, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 121, 122, 123, 124, 126, 127, 128, 129, 130, 139, 141, 143, 147, 150, 151, 152, 158, 160, 162, 166, 167, 169, 173, 176, 178, 180, 188, 189, 190, 192, 196, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 237, 242, 245, 248, 249, 250, 251, 253, 254, 255, 259, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 301, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 334, 340, 343, 353, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 60, 218, 243, 244, 274, 360, 366, 367, 368, 369, 372, 378, 379, 381, 385], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 23, 27, 36, 40, 42, 88, 92, 102, 106, 110, 115, 122, 123, 124, 128, 142, 145, 154, 164, 167, 179, 182, 186, 188, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 229, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 262, 263, 264, 268, 271, 274, 283, 294, 295, 296, 298, 305, 310, 326, 343, 357, 361, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 384, 385], "dimension": [1, 41, 44, 49, 50, 149, 217, 221, 306, 311, 319, 379], "num_slic": [1, 2, 60, 66, 79, 86, 87, 382], "4": [1, 2, 3, 7, 24, 26, 28, 29, 32, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 86, 87, 94, 98, 99, 100, 101, 102, 106, 111, 112, 113, 114, 115, 118, 120, 122, 126, 127, 128, 136, 138, 139, 142, 151, 169, 176, 177, 188, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 219, 220, 222, 224, 227, 228, 231, 232, 233, 234, 235, 236, 237, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 269, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 324, 325, 361, 365, 366, 367, 368, 369, 371, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 29, 47, 139, 169, 369, 373, 382, 384], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 29, 36, 47, 139, 142, 169, 343, 346, 353, 363, 366, 367, 368, 369, 373, 375, 378, 379, 382, 384], "dim": [1, 2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 142, 143, 162, 178, 183, 188, 220, 241, 246, 259, 357, 367, 368, 378, 380, 382], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 62, 64, 66, 79, 86, 87, 102, 106, 110, 119, 122, 125, 128, 139, 146, 164, 178, 181, 182, 184, 186, 190, 217, 221, 222, 246, 264, 266, 267, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 324, 326, 328, 361, 363, 366, 367, 368, 369, 370, 371, 372, 374, 378, 379, 380, 382, 385], "ndim": [1, 2, 41, 44, 49, 50, 73, 74, 92, 94, 102, 106, 122, 128, 190, 259], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 92, 102, 106, 119, 123, 124, 125, 128, 324, 354, 359, 366, 367, 368, 370, 377, 384, 385], "make_env": [1, 3, 122, 128, 130, 188, 324, 348, 349, 366, 367, 385], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 78, 84, 102, 106, 122, 128, 182, 211, 237, 255, 262, 263, 264, 265, 284, 345, 359, 363, 366, 367, 370, 371, 375, 382, 385], "behav": [1, 3, 108, 118, 215, 219, 234, 282, 289, 381], "iif": 1, "accordingli": [1, 176, 177, 219, 262, 369, 370, 372, 373, 374], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 26, 28, 32, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 81, 86, 87, 92, 94, 100, 101, 102, 105, 106, 107, 108, 109, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 136, 138, 139, 142, 146, 149, 151, 152, 158, 160, 162, 164, 166, 167, 169, 172, 173, 176, 177, 178, 180, 181, 182, 184, 186, 190, 191, 196, 201, 202, 203, 205, 206, 207, 209, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 227, 228, 231, 234, 236, 246, 248, 249, 250, 251, 254, 255, 261, 263, 264, 267, 268, 269, 275, 276, 278, 279, 281, 282, 283, 284, 285, 286, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 312, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 342, 361, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 66, 78, 92, 138, 151, 192, 254, 264, 371, 372, 374, 378, 379], "current": [1, 2, 3, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 46, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 81, 87, 102, 106, 108, 119, 122, 128, 138, 139, 142, 165, 177, 178, 179, 181, 182, 190, 193, 194, 199, 213, 239, 259, 260, 275, 277, 284, 290, 293, 295, 296, 329, 363, 366, 367, 368, 369, 370, 372, 373, 374, 378, 379, 380, 382, 384, 385], "fulli": [1, 8, 36, 102, 106, 122, 128, 190, 216, 220, 367, 372, 380, 382], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 81, 82, 85, 87, 88, 90, 92, 93, 94, 96, 97, 102, 103, 106, 119, 122, 123, 124, 128, 129, 130, 136, 138, 154, 164, 165, 169, 182, 184, 188, 190, 192, 200, 202, 203, 209, 222, 230, 253, 259, 264, 265, 266, 267, 275, 276, 278, 279, 281, 282, 283, 289, 291, 293, 294, 295, 296, 298, 306, 308, 309, 324, 331, 343, 360, 366, 367, 368, 371, 372, 378, 379, 380, 382, 384, 385], "consecut": [1, 3, 60, 85, 110, 221, 260, 326, 369, 370, 373, 379, 382, 385], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 42, 45, 66, 102, 103, 105, 106, 119, 120, 122, 128, 164, 186, 190, 343, 357, 367, 368, 370, 371], "therebi": [1, 23, 324, 362, 366, 367], "interrupt": [1, 2, 106, 259, 312], "These": [1, 2, 7, 36, 46, 63, 68, 95, 102, 106, 122, 128, 129, 164, 186, 190, 361, 362, 366, 368, 378, 379, 380, 382, 385], "tool": [1, 2, 3, 5, 369, 370, 378, 380, 382, 385], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 102, 105, 106, 122, 128, 132, 135, 363, 366, 368, 369, 370, 373, 374, 380], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 359], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 359], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 82, 85, 86, 87, 92, 93, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 158, 160, 162, 164, 166, 167, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 273, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 334, 341, 342, 353, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "multiprocess": [1, 2, 3, 13, 14, 17, 18, 19, 60, 68, 103, 104, 122, 128, 188, 366, 367, 368, 369, 378, 379, 380, 381, 385], "synchron": [1, 13, 18, 20, 40, 42, 45, 119, 355, 356, 367, 368, 378], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 36, 102, 106, 119, 122, 128, 147, 150, 177, 182, 188, 190, 193, 197, 198, 210, 217, 218, 221, 234, 242, 243, 244, 261, 265, 291, 324, 339, 366, 367, 369, 378, 379, 384, 385], "find": [1, 4, 6, 7, 17, 18, 19, 41, 43, 51, 86, 87, 219, 252, 260, 337, 341, 366, 367, 371, 372, 378, 379], "folder": [1, 2, 40, 42, 45, 129, 367], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 100, 101, 102, 103, 105, 106, 107, 108, 116, 117, 118, 122, 123, 124, 128, 129, 130, 131, 141, 142, 145, 146, 147, 148, 150, 153, 158, 159, 160, 164, 172, 174, 178, 179, 181, 182, 184, 186, 188, 190, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 228, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 264, 265, 267, 268, 271, 272, 286, 291, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 338, 343, 346, 355, 356, 357, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 384, 385], "variou": [1, 2, 3, 217, 221, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 299, 304, 326, 355, 356, 366, 367, 368, 370, 371, 372, 374, 378, 379, 382, 385], "machin": [1, 2, 7, 17, 18, 19, 36, 65, 110, 378, 379, 384], "wonder": 1, "why": [1, 2, 3, 199, 378, 380, 385], "instead": [1, 4, 7, 8, 11, 28, 36, 66, 102, 106, 122, 128, 154, 178, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 275, 277, 279, 282, 283, 284, 289, 290, 293, 294, 295, 296, 304, 306, 310, 314, 357, 361, 370, 371, 375, 380, 382, 385], "lower": [1, 2, 3, 20, 25, 145, 188, 238, 239, 268, 368, 378, 380], "io": [1, 60, 66, 111, 112, 119, 219, 220], "footprint": [1, 2, 382], "commun": [1, 2, 3, 122, 128, 360, 368, 385], "yet": [1, 98, 99, 111, 381], "plai": [1, 3, 123, 124, 142, 367, 368, 372, 382, 385], "role": [1, 3, 117, 367, 372, 385], "opposit": [1, 378], "direct": [1, 2, 36, 102, 106, 122, 128, 190, 215, 219, 291, 367, 372], "sinc": [1, 2, 3, 4, 5, 7, 36, 41, 44, 49, 50, 60, 68, 87, 92, 102, 106, 122, 123, 124, 125, 128, 190, 192, 199, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 268, 271, 324, 326, 366, 367, 368, 369, 370, 371, 372, 378, 380, 381, 382, 384, 385], "faster": [1, 2, 4, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 67, 68, 119, 306, 307, 308, 309, 369, 378, 379], "share": [1, 3, 6, 8, 22, 40, 42, 45, 71, 73, 74, 75, 79, 86, 88, 90, 94, 103, 122, 128, 188, 217, 221, 227, 228, 249, 250, 251, 275, 277, 278, 282, 283, 289, 290, 293, 294, 295, 296, 298, 357, 359, 361, 368, 369, 375, 377, 378, 379, 384, 385], "among": [1, 3, 123, 124, 378, 379], "prohibit": [1, 3, 92], "slow": [1, 3, 4, 40, 42, 45], "compar": [1, 3, 66, 92, 339, 362, 366, 368, 371, 372, 378, 379, 382, 385], "gpu": [1, 7, 8, 36, 73, 74, 94, 102, 106, 110, 122, 128, 190, 366, 368, 369, 378, 379, 385], "nativ": [1, 7, 9, 64, 102, 106, 122, 128, 142, 326, 369, 382], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 49, 60, 78, 79, 86, 92, 98, 99, 106, 138, 160, 188, 201, 210, 213, 215, 217, 219, 221, 224, 235, 242, 252, 261, 265, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 295, 296, 298, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 361, 362, 366, 367, 368, 371, 378, 379, 380, 382, 384, 385], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 79, 81, 84, 86, 87, 90, 94, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 119, 120, 122, 125, 128, 129, 130, 138, 139, 143, 145, 146, 164, 172, 173, 178, 180, 181, 182, 184, 186, 190, 217, 221, 225, 226, 227, 248, 252, 253, 254, 256, 257, 259, 260, 261, 262, 264, 265, 268, 275, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 290, 292, 293, 294, 295, 296, 298, 300, 304, 306, 307, 308, 309, 310, 314, 324, 333, 354, 366, 367, 368, 371, 374, 378, 379, 382, 385], "build": [1, 3, 7, 22, 26, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 102, 106, 107, 108, 111, 112, 116, 117, 119, 122, 125, 128, 129, 130, 169, 188, 190, 201, 217, 221, 224, 258, 261, 265, 343, 350, 351, 352, 361, 363, 368, 369, 371, 372, 373, 374, 378, 379, 380, 381, 384, 385], "mani": [1, 2, 3, 4, 44, 98, 99, 100, 101, 102, 105, 107, 108, 111, 112, 119, 120, 125, 275, 277, 283, 290, 293, 294, 298, 361, 366, 367, 368, 370, 371, 373, 375, 378, 379, 380, 382, 385], "eg": [1, 2, 3, 11, 40, 42, 45, 73, 74, 75, 88, 90, 94, 100, 101, 102, 105, 106, 107, 108, 110, 122, 125, 128, 149, 176, 182, 227, 253, 326], "gymnasium": [1, 3, 5, 11, 102, 105, 106, 107, 113, 114, 122, 128, 132, 135, 152, 173, 176, 187, 367, 368, 380, 384], "warn": [1, 3, 252, 256, 257, 260, 367, 370, 372, 373, 374], "quickli": [1, 3, 367, 378, 379, 385], "becom": [1, 3, 4, 20, 215, 219, 378, 379, 385], "quit": [1, 3, 60, 102, 106, 122, 128, 361, 366, 367, 368, 371, 378, 379, 385], "annoi": [1, 3], "By": [1, 2, 3, 26, 32, 39, 100, 101, 102, 105, 106, 107, 108, 116, 117, 122, 123, 124, 125, 128, 129, 130, 246, 265, 291, 339, 357, 366, 378, 381, 382, 385], "filter": [1, 2, 3, 4, 53, 79, 86, 87, 275, 276, 278, 282, 283, 289, 293, 294, 296, 370], "out": [1, 2, 3, 4, 5, 9, 20, 36, 40, 42, 45, 53, 62, 66, 71, 79, 86, 87, 102, 106, 122, 123, 124, 128, 178, 190, 192, 215, 216, 219, 225, 226, 229, 230, 248, 253, 254, 255, 260, 261, 262, 263, 264, 265, 302, 303, 363, 366, 367, 368, 369, 370, 371, 373, 378, 379, 380, 382, 384, 385], "still": [1, 2, 3, 9, 66, 98, 99, 102, 106, 111, 112, 122, 128, 252, 290, 291, 366, 367, 369, 377, 380, 382, 385], "wish": [1, 3, 13, 14, 16, 66, 135, 372, 382], "displai": [1, 3, 7, 102, 106, 122, 128, 343, 363, 366, 367, 379, 380], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 81, 84, 85, 86, 87, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 138, 139, 142, 143, 146, 147, 150, 151, 152, 154, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 171, 172, 173, 176, 178, 180, 181, 182, 183, 184, 186, 188, 190, 192, 199, 200, 201, 202, 203, 205, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 236, 237, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 275, 276, 277, 278, 279, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 304, 306, 307, 308, 309, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 333, 336, 337, 339, 340, 341, 343, 357, 361, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "central": [2, 227, 228, 366, 367, 370, 378, 379, 382], "part": [2, 3, 4, 8, 36, 46, 60, 63, 64, 66, 67, 68, 98, 102, 106, 111, 122, 128, 141, 160, 169, 172, 190, 199, 217, 221, 269, 334, 357, 366, 368, 369, 375, 378, 380, 385], "algorithm": [2, 3, 8, 9, 118, 275, 293, 294, 296, 359, 362, 363, 366, 367, 368, 369, 372, 373, 374, 378, 379, 381, 382], "implement": [2, 3, 9, 11, 13, 14, 15, 36, 76, 88, 89, 102, 106, 118, 119, 122, 128, 139, 146, 147, 148, 152, 155, 158, 166, 167, 173, 176, 181, 182, 188, 190, 202, 215, 216, 217, 218, 219, 220, 221, 242, 243, 244, 275, 276, 280, 281, 282, 289, 291, 292, 293, 295, 296, 324, 334, 348, 361, 363, 366, 367, 368, 369, 371, 372, 373, 378, 379, 380, 384], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 23, 26, 36, 41, 44, 46, 49, 50, 60, 62, 66, 68, 85, 87, 92, 98, 99, 102, 103, 106, 110, 111, 112, 122, 128, 142, 158, 164, 167, 184, 187, 188, 190, 192, 201, 221, 227, 228, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 326, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "give": [2, 3, 7, 49, 63, 102, 106, 118, 122, 128, 142, 360, 362, 366, 367, 378, 379, 380, 381, 384], "abil": [2, 291, 380, 382], "panel": [2, 368], "usag": [2, 3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 62, 68, 71, 92, 139, 142, 151, 217, 221, 282, 289, 296, 299, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "includ": [2, 3, 4, 7, 9, 20, 36, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 88, 90, 94, 102, 106, 118, 122, 128, 177, 182, 188, 190, 217, 221, 291, 296, 346, 361, 363, 366, 367, 368, 369, 378, 379, 380, 382, 385], "almost": [2, 369], "physic": [2, 6, 7, 71, 122, 125, 363, 366, 378, 379, 380], "theori": 2, "crude": 2, "made": [2, 3, 36, 44, 60, 73, 74, 75, 88, 90, 94, 102, 105, 106, 107, 122, 128, 190, 260, 279, 304, 366, 367, 369, 378, 379, 381, 382], "liststorag": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 382], "veri": [2, 3, 111, 112, 367, 370, 373, 378, 380, 382, 384, 385], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 33, 36, 39, 40, 42, 45, 60, 66, 79, 81, 84, 86, 87, 98, 99, 102, 106, 111, 112, 122, 128, 138, 139, 167, 190, 199, 222, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 299, 301, 304, 361, 363, 366, 368, 369, 370, 371, 372, 378, 379, 380, 382, 385], "complex": [2, 36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 366, 367, 370, 371], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 84, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 138, 139, 141, 142, 143, 146, 147, 149, 150, 151, 152, 154, 157, 160, 162, 164, 165, 166, 167, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 273, 275, 276, 278, 279, 281, 282, 283, 286, 287, 289, 291, 293, 294, 295, 296, 298, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 361, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 384, 385], "contigu": [2, 3, 8, 63, 66, 67, 102, 106, 122, 128, 196, 368, 378, 379, 380, 382, 384, 385], "tensorstorag": [2, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 95, 373, 382], "lazymemmapstorag": [2, 29, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 86, 87, 141, 142, 366, 367, 369, 373, 378, 381, 382], "citizen": 2, "pytre": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 81, 95], "tupl": [2, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 75, 81, 86, 90, 92, 100, 101, 102, 105, 106, 107, 122, 128, 136, 149, 151, 157, 158, 160, 165, 173, 190, 199, 205, 211, 212, 217, 220, 221, 222, 231, 235, 236, 237, 254, 255, 259, 262, 263, 268, 275, 276, 278, 282, 283, 285, 289, 291, 293, 294, 295, 296, 298, 306, 307, 308, 309, 337, 339, 341, 350, 382], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 26, 36, 40, 42, 45, 53, 79, 84, 86, 87, 102, 105, 106, 107, 116, 117, 122, 128, 129, 130, 178, 182, 190, 261, 265, 296, 339, 355, 356, 357, 363, 367, 368, 370, 372, 378, 380, 385], "nest": [2, 3, 26, 29, 31, 32, 36, 37, 40, 42, 44, 45, 47, 48, 56, 73, 74, 77, 81, 94, 102, 105, 106, 107, 122, 128, 142, 176, 179, 190, 200, 259, 306, 307, 308, 309, 310, 324, 363, 367, 368, 379, 380, 382, 384], "construct": [2, 3, 5, 36, 41, 44, 49, 50, 60, 81, 102, 105, 106, 122, 123, 128, 147, 150, 190, 192, 217, 221, 239, 265, 343, 361, 367, 368, 369, 371, 378, 380, 382, 385], "ram": [2, 105, 107, 382], "prealloc": [2, 3, 122, 128, 380], "ve": [2, 46, 366, 369, 375], "been": [2, 3, 5, 7, 8, 17, 19, 20, 40, 42, 45, 46, 81, 85, 102, 106, 110, 116, 117, 122, 128, 158, 176, 177, 181, 215, 219, 252, 257, 259, 260, 366, 367, 368, 369, 377, 378, 379, 380, 382, 385], "here": [2, 3, 4, 7, 8, 9, 10, 13, 14, 67, 68, 92, 100, 101, 102, 106, 110, 122, 123, 124, 128, 142, 333, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 375, 378, 379, 380, 382, 384, 385], "start": [2, 3, 4, 5, 13, 20, 23, 53, 60, 68, 79, 86, 87, 103, 106, 115, 122, 128, 199, 338, 365, 366, 367, 376, 379, 380, 382, 383, 385], "replay_buff": [2, 8, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 340, 353, 366, 367, 368, 373, 378, 379, 382], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 29, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 86, 87, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 114, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 138, 139, 141, 142, 145, 151, 152, 157, 158, 160, 162, 164, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 181, 186, 188, 190, 191, 196, 199, 200, 201, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 227, 228, 231, 236, 237, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 324, 326, 336, 339, 353, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "rb": [2, 29, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 86, 87, 92, 142, 169, 190, 367, 369, 373, 375, 379, 381, 382, 384], "10": [2, 3, 7, 21, 22, 26, 36, 41, 44, 46, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 78, 81, 86, 87, 92, 94, 98, 99, 102, 103, 106, 111, 112, 118, 122, 123, 124, 126, 127, 128, 129, 130, 136, 139, 141, 142, 177, 179, 180, 190, 201, 204, 205, 207, 209, 211, 215, 216, 219, 220, 224, 235, 246, 256, 257, 260, 261, 268, 272, 276, 279, 281, 293, 294, 295, 298, 304, 306, 307, 308, 309, 312, 326, 334, 363, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 380, 381, 382, 383, 384, 385], "add": [2, 3, 4, 6, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 78, 81, 82, 92, 93, 96, 97, 102, 106, 122, 128, 142, 158, 182, 190, 217, 221, 229, 258, 275, 338, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 384], "string": [2, 17, 18, 19, 36, 43, 53, 69, 102, 106, 116, 122, 128, 135, 164, 176, 186, 190, 217, 221, 254, 259, 261, 262, 274, 325, 342, 362, 366, 368, 369, 382], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 34, 35, 39, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 79, 81, 86, 87, 92, 94, 121, 122, 128, 142, 165, 174, 177, 178, 202, 203, 215, 216, 219, 248, 252, 254, 259, 264, 265, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 295, 296, 298, 334, 366, 368, 371, 373, 382, 385], "30": [2, 3, 44, 64, 138, 159, 238, 239, 324, 328, 367, 368, 373, 378, 379, 380, 382], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 84, 86, 87, 88, 90, 92, 94, 102, 103, 105, 106, 115, 116, 117, 118, 122, 123, 124, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 353, 355, 356, 357, 361, 363, 366, 367, 368, 369, 370, 372, 373, 374, 378, 379, 380, 382, 384, 385], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 78, 79, 80, 81, 82, 84, 86, 87, 88, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 137, 138, 139, 141, 142, 143, 144, 146, 149, 154, 155, 159, 160, 162, 164, 165, 168, 175, 176, 179, 182, 183, 184, 186, 190, 192, 196, 201, 202, 203, 204, 205, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 275, 276, 277, 283, 285, 286, 290, 291, 292, 293, 294, 298, 306, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 334, 335, 336, 339, 340, 343, 345, 351, 355, 356, 357, 380, 382], "tell": [2, 3, 4, 7, 123, 124, 366, 369, 373, 378, 379], "our": [2, 3, 7, 8, 17, 44, 142, 326, 361, 366, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 381, 382, 384], "far": [2, 46, 218, 243, 244, 375, 380, 385], "restrict": [2, 3, 367, 381, 382, 385], "empti": [2, 3, 26, 32, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 81, 102, 106, 121, 122, 128, 147, 150, 164, 166, 179, 182, 184, 186, 330, 366, 380], "64": [2, 3, 40, 42, 45, 60, 66, 81, 142, 168, 205, 206, 214, 217, 221, 228, 236, 304, 366, 367, 368, 369, 371, 375, 377, 380, 382, 384, 385], "dtype": [2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 86, 87, 94, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 139, 140, 146, 147, 148, 149, 150, 151, 152, 158, 160, 162, 164, 166, 167, 169, 173, 176, 178, 180, 181, 182, 184, 186, 190, 192, 196, 199, 200, 201, 211, 212, 215, 216, 217, 219, 220, 221, 224, 229, 230, 236, 237, 245, 248, 249, 250, 251, 253, 254, 255, 259, 260, 261, 262, 263, 264, 267, 269, 272, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 312, 361, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "unit8": 2, "img": 2, "randint": [2, 40, 42, 45, 53, 81, 180, 382], "255": [2, 81, 180, 380, 382], "uint8": [2, 3, 40, 42, 45, 55, 60, 66, 100, 101, 116, 117, 151, 162, 180, 367, 374, 381, 382, 384, 385], "next": [2, 3, 4, 8, 13, 14, 15, 22, 26, 29, 31, 32, 36, 41, 44, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 79, 81, 86, 87, 92, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 116, 117, 118, 122, 126, 127, 128, 129, 130, 138, 139, 141, 142, 147, 150, 151, 152, 157, 158, 162, 166, 167, 169, 172, 173, 176, 178, 187, 188, 190, 196, 199, 201, 216, 217, 220, 221, 224, 239, 259, 270, 272, 275, 276, 278, 279, 281, 282, 283, 284, 289, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 326, 337, 339, 341, 367, 369, 371, 374, 375, 377, 380, 381, 384, 385], "ask": [2, 8, 60, 66, 79, 86, 87, 326, 368, 369, 370, 371, 378, 379, 381, 385], "do": [2, 3, 4, 7, 68, 102, 106, 122, 128, 129, 130, 165, 187, 188, 199, 228, 229, 250, 306, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 385], "automat": [2, 3, 5, 68, 73, 74, 81, 94, 102, 105, 106, 107, 122, 123, 124, 128, 138, 147, 150, 160, 178, 187, 202, 217, 221, 248, 259, 261, 324, 361, 366, 368, 370, 371, 378, 379, 380, 382, 384], "hand": [2, 3, 7, 20, 26, 378, 379, 380], "look": [2, 3, 5, 7, 8, 36, 102, 106, 115, 122, 123, 124, 128, 164, 165, 184, 190, 261, 265, 266, 267, 362, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 381, 382, 384, 385], "assum": [2, 3, 6, 26, 39, 46, 49, 50, 62, 64, 66, 67, 68, 70, 71, 77, 86, 102, 106, 122, 128, 141, 144, 154, 164, 165, 172, 178, 182, 184, 186, 196, 217, 221, 246, 268, 279, 284, 296, 304, 315, 316, 317, 318, 320, 321, 322, 323, 326, 366, 368, 369, 377, 380], "lead": [2, 3, 4, 8, 10, 11, 22, 26, 32, 36, 41, 44, 49, 50, 62, 85, 100, 101, 102, 105, 107, 108, 178, 218, 236, 243, 244, 366, 369, 378, 379, 380, 382, 384], "leav": [2, 26, 32, 40, 42, 44, 45, 102, 192, 200, 366, 373, 382], "tree": [2, 40, 42, 45, 102, 106, 122, 128, 378, 382], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 81, 90, 100, 101, 102, 103, 105, 106, 107, 108, 122, 128, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 158, 160, 162, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 202, 203, 210, 217, 221, 222, 227, 228, 242, 248, 253, 254, 261, 262, 264, 265, 268, 269, 276, 283, 290, 292, 294, 296, 340, 345, 361, 366, 368, 377, 379, 380, 382, 385], "don": [2, 3, 4, 6, 7, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 142, 367, 368, 373, 382, 384, 385], "throw": [2, 36, 40, 42, 45, 102, 106, 122, 128, 190, 385], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 26, 29, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 80, 81, 86, 87, 92, 94, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 139, 141, 142, 146, 147, 150, 151, 152, 162, 166, 167, 169, 173, 176, 178, 181, 182, 190, 191, 199, 200, 201, 209, 211, 212, 217, 221, 224, 236, 237, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 326, 334, 340, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "max": [2, 22, 39, 42, 49, 53, 69, 78, 79, 92, 149, 179, 242, 243, 244, 253, 260, 276, 277, 283, 292, 294, 296, 366, 368, 369, 375, 378, 379], "label": [2, 42, 43, 46, 53, 366, 378, 382], "100": [2, 13, 14, 15, 16, 36, 41, 44, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 92, 98, 99, 102, 106, 111, 112, 122, 128, 145, 151, 160, 169, 174, 176, 190, 227, 255, 259, 326, 335, 353, 367, 368, 369, 370, 372, 375, 377, 378, 379, 380, 381, 382, 384, 385], "rb_pytre": 2, "randn": [2, 26, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 81, 86, 87, 94, 141, 160, 196, 204, 205, 209, 211, 212, 215, 216, 219, 220, 225, 226, 227, 231, 234, 235, 237, 248, 249, 250, 251, 253, 254, 261, 262, 264, 267, 268, 269, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 306, 307, 308, 309, 342, 361, 382, 384, 385], "c": [2, 3, 6, 7, 26, 40, 42, 44, 45, 49, 50, 65, 160, 180, 219, 220, 367, 382], "zero": [2, 3, 4, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 81, 86, 87, 92, 94, 102, 106, 122, 128, 139, 141, 143, 147, 149, 150, 160, 166, 169, 190, 196, 199, 201, 206, 207, 208, 214, 215, 216, 217, 219, 220, 221, 225, 226, 228, 236, 245, 256, 257, 260, 263, 271, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 312, 369, 382, 384], "assert": [2, 3, 6, 15, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 106, 109, 122, 128, 135, 139, 142, 145, 147, 150, 158, 167, 174, 188, 192, 196, 228, 231, 246, 306, 307, 308, 309, 334, 342, 373, 377, 382, 385], "len": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 94, 162, 202, 203, 222, 228, 366, 373, 375, 378, 380, 381, 382, 384], "ambigu": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 90, 102, 106, 122, 128, 139, 146, 164, 178, 181, 182, 184, 186, 190, 264, 362, 366, 370, 380], "deal": [2, 3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 366, 368, 379, 382], "interpret": [2, 3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 367], "put": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 106, 116, 117, 129, 130, 188, 333, 357, 361, 367, 368, 369, 370, 378, 380], "solv": [2, 4, 9, 10, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 360, 366, 367, 368, 373, 375, 378, 379, 380, 382], "clear": [2, 3, 26, 32, 33, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 110, 122, 128, 190, 335, 370, 373], "cut": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "distinct": [2, 3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 139, 372, 377], "view": [2, 3, 8, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 136, 190, 212, 215, 219, 222, 370, 380, 382, 384, 385], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 78, 79, 81, 82, 84, 85, 86, 87, 92, 93, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 129, 130, 142, 143, 176, 177, 178, 179, 182, 190, 200, 202, 203, 222, 225, 226, 228, 259, 260, 262, 263, 271, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 347, 357, 360, 363, 368, 369, 373, 374, 375, 380, 382, 385], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 26, 32, 66, 98, 99, 102, 105, 106, 107, 110, 111, 112, 115, 122, 123, 124, 128, 138, 147, 150, 165, 222, 236, 259, 261, 265, 266, 267, 271, 306, 307, 308, 309, 361, 366, 367, 368, 370, 372, 377, 378, 379, 380, 381, 382, 385], "collate_fn": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 382, 384], "__init__": [2, 3, 7, 102, 118, 135, 136, 139, 147, 150, 166, 201, 212, 215, 219, 224, 269, 276, 278, 283, 289, 294, 296, 298, 363, 380, 385], "major": 2, "worri": [2, 51], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 73, 74, 75, 79, 86, 88, 90, 94, 102, 103, 106, 110, 122, 128, 138, 200, 366, 368, 370, 378, 379, 380, 385], "though": [2, 4, 102, 106, 122, 128, 222, 368, 378, 379], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 43, 46, 52, 54, 55, 102, 106, 122, 128, 159, 178, 218, 243, 244, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 367, 371, 374, 380, 382, 385], "latter": [2, 17, 18, 19, 36, 62, 102, 106, 122, 128, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 293, 355, 356], "inv": [2, 3, 145, 149, 152, 162, 169, 174, 380], "method": [2, 3, 4, 11, 15, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 81, 86, 87, 88, 89, 90, 92, 94, 102, 105, 106, 107, 108, 122, 125, 128, 138, 139, 142, 146, 147, 148, 151, 152, 154, 158, 160, 164, 166, 167, 168, 169, 173, 176, 178, 181, 182, 184, 186, 190, 191, 201, 217, 221, 248, 249, 250, 251, 253, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 272, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 310, 324, 325, 354, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 378, 380, 382, 385], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 43, 51, 52, 54, 55, 71, 102, 106, 122, 128, 149, 152, 173, 180, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 306, 382], "multithread": [2, 3, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 69, 119, 120, 373, 382], "thread": [2, 13, 14, 16, 40, 42, 45, 98, 99, 111, 112, 122, 128], "prefetch": [2, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 69, 366, 367, 369, 382], "advis": [2, 63, 385], "benchmark": [2, 3, 9, 99, 111, 112], "techniqu": [2, 8, 122, 128, 367, 373, 382], "real": [2, 5, 66, 265, 362, 369, 380], "life": [2, 151], "adopt": [2, 3, 5, 366, 385], "throughput": [2, 9, 112, 366], "constant": [2, 27, 142, 160, 177, 363, 366, 368, 369, 385], "throughout": [2, 3, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 368, 378, 385], "further": [2, 3, 5, 23, 366, 368, 370], "refin": [2, 66, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304], "coupl": [2, 369, 371, 372, 380, 382], "get": [2, 3, 4, 6, 7, 8, 9, 26, 32, 40, 41, 42, 44, 45, 60, 62, 66, 73, 74, 79, 86, 87, 88, 90, 92, 94, 102, 103, 106, 122, 128, 136, 141, 143, 147, 149, 150, 158, 160, 165, 177, 178, 180, 182, 188, 248, 256, 257, 261, 262, 265, 272, 306, 307, 308, 309, 310, 326, 330, 361, 365, 366, 367, 368, 369, 376, 378, 379, 380, 382, 383, 384, 385], "first_elt": 2, "128": [2, 60, 62, 66, 87, 98, 99, 111, 112, 206, 209, 367, 369, 375, 378, 380, 381, 382], "wa": [2, 3, 5, 7, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 86, 102, 106, 122, 128, 182, 192, 200, 219, 275, 277, 288, 290, 293, 295, 297, 312, 362, 367, 368, 370, 371, 372, 373, 374, 377, 378, 382, 384], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 24, 26, 28, 29, 32, 36, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 79, 81, 86, 87, 92, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 135, 138, 139, 142, 143, 147, 148, 149, 150, 157, 160, 166, 167, 169, 172, 176, 178, 179, 180, 188, 190, 196, 199, 200, 202, 203, 205, 206, 207, 208, 209, 212, 214, 217, 222, 225, 226, 227, 228, 231, 234, 237, 248, 249, 250, 251, 253, 254, 256, 257, 259, 260, 262, 264, 267, 269, 272, 291, 324, 353, 361, 363, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 143], "larger": [2, 4, 217, 221, 282, 289, 384], "volum": 2, "due": [2, 3, 5, 372, 381, 382, 385], "serialis": [2, 40, 42, 45], "memorymappedtensor": [2, 29, 40, 42, 47, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 328, 373, 381], "well": [2, 3, 8, 20, 22, 36, 41, 43, 44, 49, 50, 84, 88, 95, 102, 106, 122, 128, 182, 190, 205, 219, 238, 239, 291, 310, 366, 367, 369, 370, 371, 372, 374, 381, 382, 384, 385], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 116, 117, 122, 123, 124, 128, 129, 130, 147, 148, 150, 172, 175, 177, 183, 190, 201, 219, 264, 265, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 333, 361, 366, 368, 369, 373, 378], "file": [2, 6, 7, 8, 40, 42, 45, 60, 62, 63, 64, 66, 67, 68, 71, 129, 325, 326, 328, 363, 365, 367, 378, 382, 383, 385], "locat": [2, 7, 40, 42, 45, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 151, 160, 171, 218, 231, 243, 244, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 366, 367, 368, 374, 378, 379, 382], "improv": [2, 4, 155, 275, 362, 378, 379, 382], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 122, 128, 368, 378, 382], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 26, 36, 40, 42, 45, 53, 60, 62, 63, 64, 66, 67, 68, 86, 87, 100, 101, 102, 105, 106, 107, 110, 122, 128, 136, 142, 169, 172, 179, 188, 190, 200, 256, 257, 261, 265, 290, 291, 293, 366, 367, 369, 370, 372, 374, 382, 385], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 43, 45, 52, 54, 55, 79, 149, 219, 220, 282, 369, 373, 382], "sharabl": [2, 122, 128], "collabor": [2, 66], "rather": [2, 4, 90, 167, 366, 367, 368, 370, 372, 378, 379, 382], "incur": [2, 98, 99, 111, 112], "transmiss": 2, "overhead": [2, 98, 99, 111, 112, 122, 128], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 81, 102, 106, 122, 128, 137, 138, 181, 187, 192, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 264, 265, 266, 268, 271, 291, 293, 367, 369, 373, 380, 382], "instanti": [2, 3, 13, 14, 20, 40, 41, 42, 44, 45, 49, 50, 110, 138, 181, 228, 324, 366, 367, 371, 372, 374, 378, 379, 380, 382, 385], "content": [2, 8, 15, 26, 32, 40, 41, 42, 44, 45, 49, 50, 85, 102, 105, 106, 107, 119, 122, 128, 166, 202, 203, 222, 227, 228, 261, 291, 368, 380, 384], "map": [2, 3, 8, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 77, 102, 106, 115, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 131, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 160, 162, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 190, 196, 212, 231, 248, 249, 250, 251, 254, 261, 262, 264, 265, 267, 268, 269, 270, 296, 304, 339, 359, 361, 362, 366, 367, 368, 369, 371, 372, 381, 384], "writer": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 79, 81, 82, 86, 92, 93, 97, 368, 382], "tensordictroundrobinwrit": [2, 81], "goe": [2, 4, 123, 124, 366, 368, 378, 379, 385], "prioritizedsampl": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 279, 284, 304, 366, 382], "access": [2, 3, 7, 8, 36, 41, 63, 65, 102, 106, 122, 128, 164, 184, 190, 357, 360, 366, 370, 378, 379, 380, 382], "show": [2, 36, 102, 106, 122, 128, 190, 228, 326, 361, 366, 368, 369, 378, 379, 380, 382, 384], "tensordictreplaybuff": [2, 41, 44, 49, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 86, 87, 92, 141, 142, 340, 353, 359, 366, 367, 369, 382], "mp": [2, 17, 18, 19, 60, 61, 62, 63, 64, 65, 66, 67, 68, 103, 188], "def": [2, 3, 11, 21, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 103, 106, 118, 122, 128, 135, 136, 138, 139, 147, 150, 166, 182, 190, 201, 212, 215, 216, 219, 220, 224, 259, 261, 269, 276, 278, 283, 289, 291, 294, 296, 298, 324, 363, 366, 367, 377, 378, 379, 380, 382, 384, 385], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 40, 41, 42, 45, 46, 49, 78, 79, 102, 106, 118, 122, 123, 124, 128, 136, 138, 139, 147, 149, 150, 166, 176, 177, 182, 185, 188, 190, 200, 201, 215, 217, 221, 224, 252, 256, 257, 260, 261, 262, 263, 264, 265, 275, 276, 277, 278, 279, 281, 283, 284, 285, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 304, 306, 307, 308, 309, 310, 339, 343, 345, 348, 349, 352, 353, 363, 367, 368, 369, 372, 375, 378, 379, 380, 382, 384, 385], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 40, 41, 42, 44, 45, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 113, 114, 122, 128, 136, 139, 141, 143, 147, 148, 149, 150, 157, 158, 160, 169, 172, 178, 180, 182, 188, 191, 199, 201, 211, 212, 217, 221, 223, 224, 236, 237, 245, 248, 249, 250, 251, 253, 254, 256, 257, 260, 261, 262, 264, 267, 269, 304, 307, 308, 309, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 334, 342, 361, 362, 366, 369, 379, 380, 384, 385], "__name__": [2, 3, 13, 14, 21, 103, 324, 367, 384], "__main__": [2, 3, 13, 14, 21, 103, 324, 384], "21": [2, 66, 67, 87, 122, 123, 124, 128, 367, 377, 380, 381], "proc": 2, "target": [2, 4, 8, 20, 23, 36, 102, 103, 106, 122, 128, 177, 181, 190, 264, 265, 275, 276, 277, 278, 279, 281, 283, 284, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 304, 305, 306, 307, 308, 309, 310, 346, 352, 353, 362, 363, 369, 375, 378, 380], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 79, 81, 86, 87, 88, 90, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 137, 146, 164, 166, 175, 178, 181, 182, 183, 185, 186, 190, 201, 202, 203, 211, 217, 221, 222, 223, 224, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 333, 336, 340, 343, 357, 367, 385], "join": [2, 103, 359, 367, 368, 378], "now": [2, 3, 7, 41, 122, 142, 228, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 381, 382, 385], "length": [2, 19, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 43, 46, 51, 52, 53, 54, 55, 60, 66, 69, 79, 86, 87, 90, 102, 106, 111, 112, 122, 128, 165, 188, 201, 202, 203, 205, 207, 209, 215, 219, 222, 224, 227, 228, 248, 264, 269, 334, 340, 366, 368, 369, 373, 375, 380, 382, 385], "20": [2, 53, 67, 86, 87, 92, 102, 106, 110, 122, 128, 177, 190, 214, 215, 216, 219, 220, 253, 334, 365, 366, 367, 368, 369, 372, 378, 379, 380, 382, 383, 384, 385], "_data": [2, 380], "It": [2, 3, 4, 7, 22, 36, 40, 42, 43, 45, 46, 49, 51, 53, 62, 68, 81, 84, 92, 97, 102, 106, 108, 118, 119, 122, 123, 124, 128, 129, 130, 139, 141, 151, 158, 160, 165, 177, 182, 187, 190, 192, 205, 207, 213, 227, 228, 236, 238, 239, 245, 246, 255, 256, 259, 260, 263, 265, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 304, 305, 306, 324, 333, 339, 360, 361, 362, 366, 367, 369, 370, 378, 379, 380, 381, 382, 384, 385], "difficult": [2, 4, 122, 374], "pai": [2, 8, 366, 369], "word": [2, 3, 46, 60, 62, 64, 66, 67, 68, 291, 366, 373, 380, 385], "1m": [2, 60, 66, 346, 366, 368, 369, 381], "doe": [2, 3, 17, 40, 41, 42, 45, 49, 53, 60, 62, 66, 70, 71, 77, 78, 79, 86, 88, 90, 97, 102, 106, 116, 117, 122, 128, 129, 130, 209, 215, 216, 217, 219, 220, 221, 229, 246, 253, 266, 267, 275, 277, 284, 290, 293, 305, 343, 361, 363, 366, 367, 368, 369, 370, 373, 378, 380, 382, 385], "howev": [2, 3, 5, 7, 36, 102, 106, 122, 128, 142, 172, 177, 182, 190, 275, 277, 290, 293, 295, 296, 361, 366, 367, 369, 372, 380, 382, 385], "capac": [2, 41, 44, 49, 50, 73, 74, 78, 86, 94, 368, 373], "There": [2, 10, 81, 217, 221, 361, 363, 368, 369, 371, 373, 378, 379, 380, 382, 385], "circumv": 2, "account": [2, 73, 74, 94, 105, 107, 138, 142, 225, 226, 361, 367, 369, 382, 385], "save": [2, 3, 8, 36, 40, 41, 42, 44, 45, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 81, 88, 89, 90, 94, 95, 102, 106, 122, 128, 187, 190, 325, 326, 328, 333, 343, 363, 373, 374, 375, 378, 379], "convent": [2, 3, 60, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 129, 130, 362, 366, 369, 378, 379, 380], "overridden": [2, 3, 60, 63, 64, 66, 67, 68, 102, 106, 122, 128, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 306, 308, 309, 369, 378], "dim_extend": [2, 41, 44, 49, 50], "obtain": [2, 7, 46, 60, 102, 106, 122, 128, 141, 164, 177, 186, 201, 236, 340, 366, 368, 370, 371, 372, 378, 379], "counterpart": 2, "desir": [2, 3, 36, 102, 106, 122, 128, 137, 139, 146, 160, 162, 164, 165, 178, 181, 182, 184, 186, 190, 197, 198, 202, 203, 222, 228, 248, 254, 255, 261, 262, 263, 264, 265, 361, 366, 378, 379, 380, 382], "diversifi": 2, "offer": [2, 3, 7, 98, 99, 102, 106, 111, 112, 116, 117, 122, 128, 324, 361, 366, 367, 370, 372, 373, 378, 380, 382, 385], "accomplish": [2, 192, 370], "anoth": [2, 3, 8, 66, 79, 86, 102, 105, 106, 107, 110, 122, 128, 139, 147, 148, 150, 178, 181, 222, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 361, 362, 366, 368, 369, 371, 372, 377, 378, 379, 380, 385], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 60, 61, 63, 142, 192, 276, 281, 282, 289, 333, 363, 370, 381, 382, 384], "docstr": [2, 36, 102, 106, 122, 128, 190, 370, 371], "extens": [2, 41, 44, 49, 50, 87, 363, 382], "detail": [2, 3, 5, 6, 7, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 102, 106, 122, 123, 124, 128, 180, 182, 190, 212, 215, 219, 255, 275, 284, 293, 360, 363, 367, 373, 377, 382], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 102, 106, 122, 128, 147, 150, 188, 190, 200, 215, 217, 219, 221, 260, 261, 265, 284, 367, 371, 377, 378, 379, 385], "without": [2, 3, 7, 9, 13, 14, 15, 36, 40, 42, 45, 46, 60, 62, 66, 86, 87, 102, 106, 122, 128, 129, 130, 136, 138, 147, 150, 180, 190, 215, 216, 219, 220, 250, 251, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 305, 306, 307, 308, 309, 310, 353, 360, 361, 366, 367, 368, 370, 371, 372, 373, 378, 379, 380, 382, 385], "happi": 2, "concaten": [2, 8, 13, 14, 20, 34, 35, 66, 142, 143, 160, 181, 219, 222, 267, 366, 367, 371, 378, 379, 380, 382, 385], "schedul": [2, 4, 7, 46, 339, 368, 380], "transformedenv": [2, 3, 36, 102, 103, 106, 122, 128, 136, 139, 142, 145, 146, 147, 150, 151, 152, 154, 157, 158, 159, 160, 162, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 181, 188, 190, 217, 221, 259, 326, 366, 367, 368, 369, 370, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "stepcount": [2, 36, 102, 106, 116, 117, 122, 128, 129, 130, 181, 190, 366, 367, 368, 369, 370, 375, 378, 379, 384], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 29, 36, 47, 92, 102, 103, 106, 108, 122, 128, 138, 139, 142, 145, 146, 151, 157, 158, 160, 162, 167, 168, 169, 172, 174, 177, 178, 179, 181, 182, 188, 190, 217, 221, 259, 324, 326, 353, 359, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 381, 382, 384, 385], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 142, 169, 359, 373, 382], "cartpol": [2, 3, 29, 36, 47, 100, 101, 102, 106, 122, 128, 138, 139, 142, 172, 177, 190, 259, 324, 367, 369, 371, 373, 374, 375, 382, 385], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 29, 36, 47, 62, 64, 92, 102, 103, 105, 106, 107, 111, 112, 119, 122, 128, 138, 139, 142, 145, 152, 157, 158, 160, 167, 169, 172, 174, 176, 177, 178, 179, 181, 190, 217, 221, 259, 301, 315, 316, 317, 318, 320, 321, 322, 323, 324, 361, 367, 369, 370, 371, 372, 373, 374, 375, 380, 382, 384, 385], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 36, 98, 99, 102, 106, 111, 112, 118, 122, 123, 124, 128, 136, 139, 142, 147, 150, 158, 166, 169, 191, 201, 212, 224, 237, 239, 248, 254, 261, 262, 276, 279, 281, 294, 296, 298, 353, 361, 366, 367, 368, 369, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 384, 385], "8": [2, 3, 6, 7, 36, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 86, 87, 98, 99, 100, 101, 102, 106, 122, 128, 138, 177, 202, 203, 205, 206, 214, 222, 249, 250, 251, 261, 264, 267, 289, 365, 366, 367, 371, 373, 378, 379, 380, 381, 382, 383, 384, 385], "traj_kei": [2, 79, 86, 87, 382], "truncated_kei": [2, 79, 86, 87, 169, 176], "strict_length": [2, 60, 66, 79, 86, 87, 326], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 32, 36, 41, 44, 47, 50, 51, 73, 74, 78, 79, 86, 87, 94, 102, 106, 122, 128, 164, 169, 172, 182, 186, 190, 216, 220, 231, 237, 255, 259, 261, 263, 264, 265, 306, 307, 308, 309, 334, 346, 366, 367, 368, 369, 371, 372, 373, 375, 378, 379, 380, 382, 384, 385], "enumer": [2, 13, 14, 15, 20, 29, 36, 44, 47, 50, 87, 102, 106, 122, 128, 190, 299, 362, 366, 367, 368, 369, 375, 378, 382, 384], "break": [2, 5, 13, 14, 15, 20, 36, 44, 50, 60, 63, 64, 66, 67, 68, 69, 79, 86, 87, 92, 102, 106, 122, 128, 139, 142, 169, 188, 190, 326, 367, 373, 375, 382, 384], "step_count": [2, 13, 14, 15, 36, 102, 106, 111, 112, 122, 128, 176, 190, 368, 369, 370, 375, 384], "32": [2, 21, 26, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 87, 126, 127, 129, 130, 202, 203, 204, 205, 206, 208, 209, 214, 222, 227, 228, 232, 233, 235, 236, 245, 304, 324, 366, 367, 368, 369, 371, 372, 380, 381, 382, 384, 385], "33": [2, 26, 36, 81, 102, 106, 122, 128, 190, 202, 203, 222, 366, 367, 368, 379, 380], "34": [2, 202, 203, 222, 365, 367, 378, 380, 381, 383], "35": [2, 202, 203, 222, 366, 367, 380], "36": [2, 367, 368, 380, 381], "37": [2, 141, 367, 368, 380, 381], "38": [2, 7, 367, 369, 380], "39": [2, 64, 111, 112, 366, 367, 369, 380, 381], "40": [2, 111, 112, 365, 366, 367, 368, 378, 379, 380, 382, 383, 385], "41": [2, 365, 366, 367, 374, 378, 380, 383], "11": [2, 10, 22, 28, 39, 53, 73, 74, 78, 87, 94, 103, 180, 190, 201, 224, 365, 366, 367, 368, 369, 378, 379, 380, 382, 383], "12": [2, 10, 67, 73, 74, 87, 94, 111, 112, 122, 126, 127, 128, 190, 367, 368, 369, 378, 380, 382], "14": [2, 6, 11, 60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 87, 102, 106, 122, 128, 160, 190, 366, 367, 368, 378, 380, 382], "15": [2, 22, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 102, 106, 122, 128, 190, 253, 260, 285, 365, 366, 367, 368, 369, 375, 380, 382, 383], "16": [2, 3, 36, 67, 79, 87, 98, 99, 102, 106, 111, 112, 122, 128, 142, 190, 366, 367, 368, 369, 378, 380, 381, 382, 384], "17": [2, 67, 87, 106, 122, 190, 366, 367, 368, 369, 378, 380], "could": [2, 3, 4, 6, 22, 367, 368, 374, 378, 379, 381, 385], "sai": [2, 36, 102, 106, 122, 128, 190, 227, 378, 381, 385], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 26, 28, 32, 35, 39, 75, 79, 86, 87, 102, 105, 106, 107, 110, 122, 128, 147, 150, 165, 172, 262, 367, 368, 369, 378, 379, 380], "handl": [2, 3, 20, 36, 102, 106, 122, 128, 187, 188, 190, 221, 222, 343, 355, 356, 366, 367, 368, 370, 372, 379, 382], "suggest": [2, 304, 366, 379], "serialenv": [2, 3, 102, 106, 122, 178, 190, 259, 359, 384, 385], "squeez": [2, 3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 138, 139, 142, 175, 177, 202, 203, 240, 241, 366, 380, 382], "6": [2, 3, 7, 13, 14, 15, 16, 22, 36, 44, 60, 67, 68, 79, 87, 100, 101, 106, 122, 126, 127, 138, 160, 162, 177, 202, 203, 205, 206, 207, 210, 214, 216, 222, 227, 228, 232, 242, 259, 261, 269, 365, 366, 367, 369, 373, 378, 379, 380, 382, 383, 384], "5": [2, 3, 13, 14, 22, 24, 26, 32, 36, 40, 41, 42, 44, 45, 49, 50, 60, 81, 86, 87, 92, 102, 103, 106, 111, 112, 116, 117, 119, 122, 126, 127, 128, 129, 130, 138, 139, 141, 169, 176, 177, 190, 201, 202, 203, 205, 206, 211, 212, 213, 214, 215, 218, 219, 222, 224, 227, 228, 232, 237, 243, 244, 253, 254, 259, 262, 268, 290, 293, 295, 298, 324, 361, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385], "7": [2, 3, 6, 10, 28, 36, 39, 41, 44, 49, 79, 87, 102, 106, 116, 117, 122, 128, 138, 177, 201, 202, 203, 206, 222, 224, 227, 312, 365, 366, 367, 373, 378, 379, 380, 381, 382, 383, 384], "9": [2, 3, 7, 22, 36, 41, 44, 49, 67, 68, 79, 87, 92, 100, 101, 115, 123, 124, 138, 177, 188, 190, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 299, 304, 362, 365, 366, 367, 368, 369, 370, 373, 377, 378, 379, 380, 382, 383], "18": [2, 67, 87, 126, 127, 129, 130, 190, 228, 365, 366, 367, 368, 373, 379, 380, 381, 383], "19": [2, 67, 86, 87, 92, 190, 366, 367, 368, 369, 378, 380], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 63, 122, 128, 181, 183, 228, 362, 363, 366, 367, 379, 382, 384], "congruent": 2, "custom": [2, 3, 5, 36, 102, 106, 122, 128, 184, 190, 227, 228, 268, 284, 293, 299, 357, 361, 366, 367, 368, 369, 371, 372, 374, 378, 379], "name": [2, 3, 6, 7, 11, 15, 36, 40, 42, 45, 53, 60, 63, 65, 68, 69, 98, 100, 102, 106, 111, 115, 116, 117, 119, 122, 123, 124, 125, 128, 129, 130, 131, 149, 152, 167, 172, 173, 176, 182, 184, 187, 190, 200, 217, 221, 254, 262, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 306, 308, 309, 310, 324, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 363, 366, 367, 368, 369, 372, 374, 378, 379, 380, 385], "randomcroptensordict": [2, 366], "unlik": [2, 85, 106, 116, 117, 129, 130, 259, 284, 293, 326, 367, 371, 373, 384], "stop": [2, 3, 15, 20, 46, 68, 79, 86, 87, 102, 106, 122, 128, 368, 373, 378, 379, 384, 385], "signal": [2, 3, 13, 14, 15, 16, 22, 60, 62, 64, 66, 67, 68, 79, 86, 87, 92, 106, 116, 117, 129, 130, 142, 151, 176, 179, 200, 362, 366, 368, 378, 379, 382, 385], "disk": [2, 3, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 343, 363, 366, 367, 369, 373, 374, 382], "dump": [2, 3, 29, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 81, 88, 90, 94, 324, 325, 326, 374, 375, 378], "load": [2, 6, 7, 13, 14, 15, 16, 29, 36, 40, 41, 42, 44, 45, 46, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 81, 88, 89, 90, 94, 95, 101, 102, 106, 122, 128, 135, 188, 190, 357, 363, 366, 368, 382], "json": 2, "metadata": [2, 60, 62, 368, 370, 372, 373, 378, 379, 385], "anticip": [2, 147, 150], "compli": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 66], "back": [2, 23, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 52, 54, 55, 62, 187, 192, 248, 254, 255, 261, 262, 263, 264, 265, 368, 378, 379, 380, 382], "exact": [2, 3, 122, 219], "statu": [2, 3, 102], "prioriti": [2, 4, 41, 49, 50, 73, 74, 75, 78, 79, 88, 90, 94, 278, 279, 281, 282, 283, 284, 289, 294, 296, 298, 304, 363, 366, 367, 382], "heap": 2, "under": [2, 3, 4, 20, 36, 46, 60, 62, 63, 64, 66, 67, 68, 100, 101, 102, 105, 106, 107, 108, 122, 125, 128, 190, 248, 254, 255, 261, 262, 263, 264, 265, 291, 306, 307, 308, 309, 310, 326, 362, 366, 367, 371, 378, 380, 385], "hood": [2, 20, 60, 102, 106, 122, 128, 380], "naiv": [2, 184, 370], "just": [2, 3, 4, 11, 90, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 115, 119, 120, 122, 123, 124, 125, 128, 138, 145, 200, 228, 334, 361, 363, 366, 367, 368, 369, 370, 371, 373, 378, 379, 380, 382, 384, 385], "public": [2, 65, 89, 164, 186], "serializ": 2, "consum": [2, 85, 87, 259, 367, 368, 373, 379, 382], "much": [2, 8, 13, 14, 16, 41, 49, 66, 78, 79, 122, 128, 290, 293, 368, 370, 374, 378, 379, 380, 382, 385], "duplic": [2, 36, 85, 102, 106, 122, 128, 190, 279, 284, 291, 304], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 23, 29, 36, 47, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 79, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 156, 157, 158, 160, 161, 162, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 199, 204, 205, 206, 207, 208, 209, 212, 217, 221, 227, 232, 233, 235, 237, 238, 248, 249, 250, 251, 253, 254, 256, 257, 259, 260, 261, 262, 269, 270, 275, 276, 277, 278, 279, 281, 282, 283, 286, 289, 290, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 324, 326, 353, 361, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 384, 385], "plu": [2, 13, 14, 16, 46, 122, 128, 380], "enabl": [2, 7, 8, 62, 73, 74, 85, 94, 139, 217, 221, 259, 260, 324, 326, 339, 368, 370, 378, 379, 380, 382], "three": [2, 69, 361, 363, 368, 370, 371, 378, 379, 380, 382, 385], "flatstoragecheckpoint": 2, "discard": [2, 3, 53, 62, 64, 106, 184, 199, 325, 382, 385], "compress": 2, "At": [2, 223, 256, 367, 368, 369, 373, 377, 380, 381], "correct": [2, 4, 40, 42, 45, 102, 106, 122, 128, 158, 346, 368, 369], "addit": [2, 3, 4, 36, 62, 102, 106, 122, 128, 129, 146, 164, 178, 181, 182, 184, 186, 190, 215, 252, 253, 259, 264, 274, 291, 306, 324, 362, 366, 367, 370, 378, 379, 382], "nestedstoragecheckpoint": 2, "represent": [2, 32, 33, 36, 102, 106, 122, 128, 164, 184, 186, 190, 366, 380, 381, 385], "appar": [2, 3, 336], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 70, 71, 77, 102, 105, 106, 107, 122, 128, 145, 149, 196, 209, 212, 227, 233, 237, 248, 252, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 272, 279, 281, 282, 283, 298, 304, 361, 367, 368, 369, 370, 371, 372, 378, 379, 380, 384, 385], "assumpt": [2, 3, 380, 382], "accur": [2, 7, 62, 68, 367, 380, 382], "cursor": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "place": [2, 3, 23, 26, 27, 32, 36, 40, 42, 45, 73, 74, 81, 84, 94, 102, 103, 106, 122, 128, 129, 130, 138, 146, 151, 164, 178, 181, 182, 184, 186, 187, 188, 190, 200, 253, 259, 264, 340, 345, 346, 367, 368, 371, 374, 378, 379, 380, 382], "truncat": [2, 3, 13, 14, 15, 16, 29, 31, 36, 37, 43, 47, 48, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 79, 86, 87, 100, 101, 102, 105, 106, 107, 116, 117, 122, 123, 124, 128, 129, 130, 151, 152, 159, 166, 169, 176, 182, 190, 200, 217, 221, 244, 259, 312, 366, 368, 369, 370, 371, 373, 374, 377, 378, 381, 382, 384, 385], "marl": [2, 115, 131, 142, 179, 227, 370, 378, 379], "extra": [2, 10, 36, 102, 106, 122, 128, 142, 188, 190, 199, 333, 361, 368, 369, 382], "fail": [2, 7, 21, 26, 32, 122, 136, 192], "concret": [2, 366, 368], "set_se": [2, 3, 13, 14, 15, 16, 20, 29, 36, 47, 98, 99, 102, 106, 111, 112, 118, 122, 128, 138, 160, 167, 172, 177, 179, 182, 190, 373, 375, 380, 384, 385], "manual_se": [2, 3, 29, 41, 44, 47, 49, 50, 63, 67, 68, 86, 87, 98, 99, 102, 106, 122, 128, 136, 138, 149, 160, 169, 172, 177, 179, 190, 225, 226, 234, 248, 255, 256, 257, 260, 268, 275, 276, 278, 282, 289, 296, 373, 375, 378, 379, 380, 384, 385], "200": [2, 13, 14, 15, 20, 29, 36, 47, 60, 102, 105, 106, 107, 122, 128, 129, 130, 169, 190, 205, 206, 213, 238, 239, 324, 326, 366, 369, 373, 375, 380, 382], "22": [2, 66, 86, 87, 187, 365, 366, 367, 375, 378, 380, 383], "rb_test": 2, "_storag": [2, 381, 382], "max_siz": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 88, 92, 94, 368, 373], "102": [2, 380, 382], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 28, 40, 42, 45, 119, 209, 225, 226, 227, 274, 324, 366, 368, 378, 379], "state_dict": [2, 13, 14, 15, 16, 20, 36, 40, 42, 45, 102, 106, 122, 128, 182, 188, 190, 296, 357, 363, 366, 367, 385], "load_state_dict": [2, 13, 14, 15, 16, 20, 36, 40, 42, 45, 102, 106, 122, 128, 182, 188, 190, 296, 363, 366], "drawback": 2, "struggl": 2, "big": [2, 368, 373, 382, 385], "sequenti": [2, 9, 36, 102, 106, 122, 128, 141, 158, 190, 266, 267, 272, 293, 361, 368, 369, 371, 379, 380, 381, 385], "known": [2, 3, 5, 7, 8, 106, 313, 314, 366, 367, 370], "seamless": [2, 222], "integr": [2, 36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 208, 217, 221, 224, 264, 361, 370, 371, 373, 378, 379, 380, 381], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 366, 367, 372], "essenti": [2, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 367, 370, 378, 380, 382], "understand": [2, 3, 8, 366, 367, 370, 371, 378, 379], "purpos": [2, 3, 7, 102, 106, 122, 128, 142, 215, 275, 277, 290, 293, 295, 353, 366, 368, 369, 372, 374, 378, 379, 381, 385], "guid": [2, 123, 124, 126, 127, 177, 360, 366, 379], "explan": [2, 36, 102, 106, 122, 128, 190], "effect": [2, 3, 26, 36, 41, 44, 49, 50, 60, 66, 79, 81, 84, 86, 87, 102, 106, 122, 128, 138, 142, 182, 190, 343, 366, 371, 378, 382, 385], "realm": [2, 371], "As": [2, 3, 4, 36, 60, 102, 106, 115, 122, 123, 124, 128, 169, 265, 306, 361, 366, 367, 368, 369, 370, 372, 373, 378, 379, 380, 381, 382, 384, 385], "practition": 2, "often": [2, 3, 8, 288, 343, 366, 367, 370, 372, 380, 382, 385], "encount": [2, 4, 66, 259, 360, 367, 371, 380], "situat": [2, 116, 117], "sometim": [2, 3, 369, 385], "variabl": [2, 3, 4, 7, 8, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 60, 63, 64, 67, 68, 98, 99, 100, 101, 102, 105, 107, 108, 111, 112, 116, 117, 120, 121, 125, 129, 130, 215, 216, 217, 219, 220, 221, 224, 249, 250, 251, 291, 294, 363, 367], "immedi": [2, 26, 32, 36, 102, 106, 122, 128, 190, 305, 378, 379], "199": [2, 380], "info": [2, 3, 13, 14, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 84, 86, 87, 100, 101, 102, 105, 106, 107, 108, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 184, 187, 189, 333, 370, 375, 378, 379, 382], "glanc": [2, 370], "seem": [2, 366, 369, 370], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 32, 33, 46, 102, 106, 115, 122, 123, 124, 128, 142, 165, 215, 217, 219, 221, 245, 249, 250, 251, 270, 361, 367, 369, 370, 378], "less": [2, 119, 246, 355, 356, 362, 368, 369, 382, 384], "omit": [2, 338, 368, 372, 380, 382], "proper": [2, 3, 4, 6, 7, 306, 307, 308, 309, 367, 368, 378, 379, 382, 385], "imposs": [2, 3, 92, 192, 275, 277, 290, 293, 295], "determin": [2, 41, 49, 62, 78, 79, 102, 106, 122, 128, 129, 130, 164, 186, 227, 260, 367, 371, 378, 379], "complic": [2, 380, 382, 385], "matter": [2, 27, 373], "inconsist": [2, 385], "miss": [2, 3, 4, 6, 7, 11, 26, 36, 102, 106, 122, 128, 182, 190, 199, 266, 267, 296, 360, 366, 369], "behavior": [2, 4, 36, 102, 106, 122, 128, 182, 190, 282, 289, 369, 379, 380], "primari": [2, 373], "elimin": [2, 3, 370], "upon": [2, 3, 8, 378, 380], "canon": 2, "definit": [2, 39, 88, 227], "markov": [2, 3, 370, 385], "decis": [2, 3, 204, 235, 253, 280, 292, 369, 370, 371, 378, 379, 382, 385], "mdp": [2, 370, 380], "context": [2, 3, 5, 8, 36, 102, 103, 106, 121, 122, 128, 178, 183, 190, 228, 229, 253, 302, 303, 306, 307, 308, 309, 311, 319, 326, 339, 361, 362, 366, 367, 368, 378, 379, 380, 381, 382], "condit": [2, 53, 177, 188, 254, 255, 259, 262, 263, 274, 366, 378, 380, 382], "complet": [2, 7, 9, 85, 102, 105, 106, 107, 122, 128, 142, 176, 360, 362, 366, 368, 370, 377], "termin": [2, 3, 7, 13, 14, 15, 16, 29, 31, 36, 37, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 100, 101, 102, 105, 106, 107, 111, 112, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 138, 139, 151, 166, 190, 200, 201, 217, 221, 224, 259, 266, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "reward": [2, 3, 13, 14, 15, 27, 29, 31, 36, 37, 40, 45, 46, 47, 48, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 79, 92, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 136, 139, 140, 145, 146, 147, 148, 150, 151, 152, 158, 162, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 181, 182, 183, 185, 186, 188, 190, 196, 199, 201, 217, 224, 253, 259, 270, 275, 276, 278, 279, 281, 282, 283, 286, 289, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 336, 337, 339, 341, 357, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "imit": [2, 3], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 51, 52, 54, 55, 66, 102, 103, 106, 109, 112, 122, 128, 190, 202, 203, 222, 228, 362, 363, 366, 367, 368, 369, 370, 378, 379, 380, 382], "stateless": [2, 3, 102, 106, 122, 128, 139, 181, 291, 324, 366, 370, 380, 385], "simul": [2, 3, 5, 7, 8, 98, 99, 108, 111, 112, 125, 129, 130, 134, 201, 224, 361, 366, 368, 370, 374, 378, 379], "furthermor": [2, 378, 379], "certain": [2, 4, 17, 18, 19, 20, 36, 53, 102, 106, 122, 128, 135, 155, 176, 182, 190, 216, 220, 256, 290, 361, 366, 367, 368, 375, 378, 379, 385], "composit": [2, 3, 26, 32, 84, 90, 97, 102, 106, 122, 128, 368, 371, 380], "accommod": [2, 3, 370, 371], "uniform": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 49, 52, 54, 55, 78, 79, 378], "unambigu": 2, "distinguish": [2, 116, 117, 129, 130], "happen": [2, 3, 102, 106, 122, 128, 252, 367, 372, 373, 374, 381, 385], "limit": [2, 46, 102, 106, 118, 122, 128, 142, 158, 275, 277, 290, 293, 295, 366, 367, 369, 378, 379, 380], "everyth": [2, 367, 368, 369, 374, 375], "belong": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 60, 66, 187, 188, 361, 366, 373, 379], "rule": [2, 122, 147, 150, 265, 361, 368], "entri": [2, 3, 13, 14, 16, 22, 26, 29, 32, 36, 40, 42, 43, 45, 47, 53, 57, 62, 63, 64, 65, 67, 68, 86, 87, 100, 101, 102, 105, 106, 107, 108, 116, 117, 122, 125, 128, 129, 130, 138, 142, 144, 145, 147, 150, 151, 154, 157, 160, 162, 164, 167, 169, 172, 174, 176, 177, 178, 186, 188, 190, 199, 200, 217, 225, 226, 253, 254, 259, 262, 263, 276, 296, 306, 307, 308, 309, 361, 366, 368, 369, 370, 371, 372, 374, 378, 379, 380, 381, 382, 385], "field": [2, 3, 13, 14, 15, 16, 22, 26, 29, 36, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 78, 94, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 139, 147, 150, 151, 152, 162, 166, 167, 169, 173, 176, 178, 182, 190, 199, 201, 211, 212, 217, 221, 224, 236, 237, 245, 248, 249, 250, 251, 253, 254, 255, 259, 260, 261, 262, 263, 264, 267, 269, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 347, 360, 361, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "taken": [2, 3, 102, 106, 122, 128, 168, 225, 226, 257, 362, 366, 368, 369, 371, 378, 379, 380], "is_shar": [2, 3, 13, 14, 15, 22, 26, 29, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 94, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 139, 147, 150, 151, 152, 162, 166, 167, 169, 173, 176, 178, 188, 199, 201, 211, 212, 217, 221, 224, 236, 237, 245, 248, 249, 250, 251, 253, 254, 255, 259, 260, 261, 262, 263, 264, 267, 269, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 361, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "brought": [2, 368, 369, 371], "step_mdp": [2, 3, 102, 106, 122, 128, 217, 221, 359, 369, 370, 380, 384, 385], "count": [2, 3, 36, 102, 103, 176, 260, 339, 343, 346, 366, 367, 368, 369, 382, 385], "trigger": [2, 7], "partial": [2, 3, 102, 106, 122, 128, 141, 142, 177, 178, 179, 343, 369], "turn": [2, 17, 18, 19, 20, 40, 42, 45, 156, 183, 187, 254, 324, 339, 362, 366, 367, 369, 371, 380, 381], "retain": 2, "regard": [2, 62, 68, 212, 255, 275, 284, 293, 366, 368, 380], "copi": [2, 3, 11, 17, 18, 19, 20, 36, 40, 42, 45, 46, 53, 66, 102, 106, 122, 128, 138, 167, 177, 182, 190, 199, 217, 221, 253, 291, 296, 324, 362, 366, 367, 369, 370, 378, 382], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 16, 326, 362, 374, 382, 385], "eas": [2, 3, 378, 379], "flat": [2, 92], "manner": [2, 106, 164, 184, 361, 366, 367, 368, 373, 377, 380, 382], "ted2flat": [2, 29, 359], "flat2t": [2, 359], "unflatten": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 139, 259], "deseri": [2, 3, 29], "posit": [2, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 100, 101, 102, 106, 122, 128, 154, 155, 175, 176, 179, 182, 183, 190, 231, 296, 362, 368, 378, 379, 380, 382], "both": [2, 3, 7, 36, 41, 44, 49, 50, 66, 102, 103, 105, 106, 116, 117, 122, 123, 124, 128, 142, 167, 182, 190, 200, 202, 203, 217, 220, 221, 222, 227, 228, 249, 250, 251, 255, 263, 275, 277, 278, 282, 283, 289, 290, 291, 293, 294, 295, 296, 298, 339, 361, 366, 368, 370, 372, 378, 379, 380, 381, 382, 385], "mark": [2, 3, 15, 68, 102, 106, 122, 128, 217, 221, 306, 308, 309, 373, 382], "identifi": [2, 43], "abov": [2, 3, 7, 36, 102, 106, 122, 128, 190, 218, 243, 244, 274, 362, 363, 366, 368, 370, 371, 378, 379, 380, 385], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 79, 86, 87, 100, 101, 102, 105, 106, 107, 108, 112, 116, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 139, 140, 142, 145, 146, 147, 148, 150, 152, 158, 160, 164, 166, 167, 172, 173, 176, 179, 181, 182, 184, 186, 187, 190, 192, 200, 202, 203, 204, 205, 206, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 227, 228, 231, 237, 246, 248, 249, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 324, 326, 334, 361, 362, 366, 367, 368, 369, 370, 371, 374, 377, 378, 379, 380, 381, 384, 385], "typic": [2, 3, 4, 8, 36, 102, 106, 122, 128, 151, 177, 190, 261, 276, 291, 293, 296, 361, 362, 363, 368, 370, 372, 373, 378, 379, 380], "adjust": [2, 366, 378, 379, 380], "grumodul": [2, 141, 272], "lstmmodul": [2, 369], "skip": [2, 3, 36, 60, 102, 106, 122, 128, 155, 182, 190, 192, 261, 265, 291, 296, 306, 307, 308, 309, 325, 326, 336, 339, 366, 367, 380], "accumul": [2, 8, 190], "upcom": [2, 291, 315, 316, 317, 318, 320, 321, 322, 323, 366], "popular": [2, 3, 361, 369, 372, 379], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 190, 359, 367], "shift": [2, 29, 31, 36, 37, 47, 48, 70, 71, 77, 271, 306, 307, 308, 309, 368], "approxim": [2, 379, 385], "would": [2, 3, 36, 46, 102, 106, 122, 128, 190, 215, 217, 219, 221, 222, 227, 363, 367, 368, 369, 370, 372, 373, 380, 382, 384, 385], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 142, 209, 235, 275, 280, 292, 293, 334, 357, 368, 369, 379, 382], "2x": 2, "small": [2, 184, 366, 368, 378, 379, 385], "clearer": [2, 371], "lazi": [2, 32, 33, 57, 58, 102, 106, 122, 128, 129, 130, 164, 184, 202, 227, 229, 266, 267, 366, 367, 371, 373, 377, 382, 385], "certainli": 2, "benefici": 2, "welcom": [2, 370], "wrapper": [2, 3, 11, 16, 40, 42, 45, 46, 49, 50, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 187, 191, 231, 246, 252, 253, 257, 259, 260, 265, 270, 306, 331, 332, 333, 357, 359, 368, 369, 370, 372, 373, 374, 378, 379, 381, 385], "around": [2, 5, 7, 16, 49, 50, 118, 191, 259, 265, 306, 366, 367, 379, 385], "selecttransform": [2, 102, 106, 122, 128], "excludetransform": [2, 67, 173, 382], "promptli": 2, "virtual": [2, 3, 105], "instal": [2, 3, 5, 10, 17, 18, 19, 62, 65, 102, 106, 122, 123, 124, 126, 127, 128, 328, 343, 360, 366, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 385], "respons": [2, 3, 8, 79, 86, 102, 106, 122, 128, 343, 372, 373, 385], "d4rl": [2, 62, 68], "repositori": [2, 7, 63, 64, 65, 68, 130, 378, 379], "wheel": [2, 368], "publish": 2, "openml": [2, 65, 121], "scikit": [2, 65, 121], "panda": [2, 65], "raw": [2, 3, 4, 46, 218, 243, 244, 367, 373, 380], "go": [2, 3, 7, 115, 122, 165, 169, 253, 312, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "natur": [2, 3, 366, 369, 371, 372, 373, 382], "modifi": [2, 3, 7, 8, 26, 32, 36, 53, 102, 106, 122, 128, 139, 146, 154, 158, 164, 178, 181, 182, 184, 186, 190, 253, 260, 264, 346, 366, 367, 368, 370, 378, 379, 380], "fly": [2, 188, 290, 362, 368, 380, 382, 385], "least": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 86, 102, 145, 374, 385], "pre": [2, 7, 21, 36, 53, 66, 74, 102, 106, 122, 128, 164, 184, 186, 190, 385], "appli": [2, 3, 4, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 136, 138, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 163, 165, 166, 167, 169, 172, 173, 176, 177, 178, 179, 181, 182, 184, 185, 187, 188, 190, 215, 219, 243, 254, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 295, 296, 298, 306, 324, 338, 363, 366, 367, 368, 373, 378, 380, 384, 385], "conisder": 2, "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 63, 86, 92, 110, 111, 112, 122, 123, 124, 145, 172, 202, 203, 213, 227, 228, 256, 259, 328, 343, 355, 356, 366, 367, 368, 369, 371, 372, 375, 378, 379, 382, 384], "pipelin": [2, 3, 7, 361, 368], "replac": [2, 3, 6, 7, 26, 32, 36, 40, 42, 45, 60, 66, 79, 86, 87, 138, 149, 151, 199, 256, 361, 378, 382], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 42, 45, 66, 81, 102, 106, 122, 128, 138, 169, 182, 190, 252, 257, 259, 260, 341, 363, 367, 368, 369, 371, 374, 380, 382, 385], "produc": [2, 138, 139, 202, 203, 222, 228, 234, 249, 251, 253, 326, 368, 369, 370, 371, 373, 382, 385], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 66, 70, 85, 102, 106, 122, 123, 124, 128, 182, 190, 296, 368], "download": [2, 7, 10, 60, 62, 63, 64, 66, 67, 68, 110, 164, 186, 326, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 60, 63, 64, 66, 67, 68, 367, 378, 379, 380], "robosetexperiencereplai": [2, 86, 87], "fk1": [2, 67], "v4": [2, 67, 106, 122, 168, 315, 316, 317, 318, 320, 321, 322, 323, 366, 368, 381, 385], "expert": [2, 67], "fk1_microopenrandom_v2d": [2, 67], "func": [2, 60, 61, 62, 63, 64, 65, 66, 67, 68, 189], "obs_norm": 2, "norm": [2, 4, 8, 98, 99, 343, 366, 367, 368, 378, 379, 380], "num_work": [2, 40, 42, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 119, 122, 128, 366, 367], "os": [2, 42, 53, 69, 367], "cpu_count": [2, 42, 53, 69], "num_chunk": [2, 60, 61, 62, 63, 64, 65, 66, 67, 68], "1000": [2, 4, 44, 78, 86, 87, 102, 106, 122, 128, 142, 188, 256, 260, 261, 265, 288, 365, 366, 367, 368, 369, 371, 373, 375, 381, 382, 383], "mp_start_method": [2, 60, 61, 62, 63, 64, 65, 66, 67, 68, 122, 128, 367, 384], "fork": [2, 5, 60, 61, 62, 63, 64, 65, 66, 67, 68, 366, 367, 368, 369, 378, 379, 381, 384], "recreat": [2, 380], "customari": [2, 361], "moreov": [2, 3], "fine": [2, 3, 23, 86, 102, 106, 122, 128, 139, 158, 373, 381], "grain": [2, 3, 86, 102, 106, 122, 128, 139], "nomenclatur": 2, "compact": [2, 47, 70, 71, 77], "propos": [2, 142, 151, 223, 288, 297, 361, 369, 382], "replaybufferensembl": [2, 60, 84, 90, 97], "primit": [2, 3, 4, 66, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298], "individu": [2, 4, 17, 18, 19, 20, 36, 53, 81, 92, 102, 106, 116, 117, 122, 128, 190, 366, 379], "dummi": [2, 3, 324, 366, 373, 385], "semant": [2, 32, 33, 105, 107, 361], "ident": [2, 3, 13, 14, 15, 36, 40, 42, 45, 86, 102, 105, 106, 107, 119, 122, 128, 151, 227, 228, 306, 307, 308, 309, 355, 356, 367, 370, 378, 379], "another_kei": [2, 81], "renam": [2, 40, 42, 45, 81, 167, 169, 199, 366], "resiz": [2, 3, 68, 81, 142, 367, 369, 370, 382, 385], "imag": [2, 3, 4, 7, 66, 144, 164, 180, 186, 222, 324, 326, 366, 367, 370, 374, 379, 381, 385], "comops": 2, "totensorimag": [2, 3, 68, 81, 142, 168, 367, 369, 382, 384, 385], "renametransform": [2, 81, 102, 106, 122, 128], "rb0": [2, 81], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 102, 106, 118, 122, 128, 133, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 154, 156, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 177, 179, 180, 181, 182, 184, 186, 188, 201, 211, 217, 221, 224, 236, 245, 246, 248, 249, 250, 251, 253, 254, 259, 261, 262, 264, 265, 267, 268, 269, 272, 275, 276, 277, 278, 279, 281, 282, 283, 289, 290, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 325, 326, 353, 361, 366, 367, 368, 369, 371, 372, 375, 377, 378, 379, 380, 381, 382, 384, 385], "pixel": [2, 3, 7, 26, 68, 81, 100, 101, 105, 107, 108, 125, 142, 144, 151, 154, 156, 160, 162, 164, 168, 180, 184, 186, 205, 232, 233, 324, 326, 361, 366, 367, 369, 374, 378, 381, 382, 384, 385], "rb1": [2, 81], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 102, 106, 118, 122, 128, 133, 140, 141, 142, 143, 144, 145, 147, 148, 150, 154, 156, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 177, 179, 180, 181, 184, 186, 188, 201, 211, 212, 217, 221, 224, 236, 237, 245, 246, 248, 249, 250, 251, 253, 255, 259, 261, 262, 263, 264, 265, 267, 268, 269, 272, 275, 276, 277, 282, 283, 289, 290, 293, 294, 295, 296, 304, 306, 307, 308, 309, 324, 326, 339, 353, 361, 366, 367, 368, 369, 371, 375, 377, 378, 379, 380, 381, 382, 384, 385], "pixels33": [2, 81], "data0": [2, 81], "244": [2, 81, 164, 186, 380], "data1": [2, 81], "_": [2, 8, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 103, 110, 129, 130, 143, 147, 149, 150, 158, 160, 167, 180, 188, 190, 248, 264, 269, 274, 275, 276, 278, 282, 283, 289, 293, 294, 296, 298, 306, 307, 308, 309, 328, 363, 366, 367, 368, 369, 375, 378, 379, 380, 382, 384], "rang": [2, 3, 4, 8, 11, 28, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 92, 102, 103, 106, 116, 117, 122, 128, 169, 180, 188, 190, 216, 220, 290, 298, 362, 363, 366, 368, 369, 372, 373, 375, 378, 379, 380, 382, 384], "parent": [2, 3, 20, 26, 31, 32, 52, 61, 81, 90, 97, 102, 106, 122, 128, 139, 142, 143, 146, 148, 151, 154, 155, 160, 164, 172, 176, 177, 178, 179, 181, 183, 184, 190, 217, 221, 249, 272, 291, 293, 310, 324, 326, 366, 373, 380, 384, 385], "basic": [2, 118, 361, 368, 372, 373, 375, 378, 385], "properti": [2, 3, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 118, 122, 128, 138, 181, 182, 190, 210, 218, 229, 234, 242, 243, 244, 259, 291, 296, 371, 373, 380, 382], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 51, 52, 54, 55, 89, 95, 102, 106, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 199, 200, 202, 203, 205, 206, 207, 208, 211, 212, 215, 216, 217, 219, 220, 221, 222, 227, 228, 229, 230, 237, 238, 239, 240, 241, 246, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 274, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 337, 341, 346, 353, 361, 362, 363, 366, 367, 368, 369, 370, 378, 379, 380, 384, 385], "send": [2, 3, 8, 333, 384], "receiv": [2, 3, 36, 46, 102, 106, 122, 128, 181, 182, 190, 222, 312, 362, 366, 368, 372, 377, 380], "spawn": [2, 3, 4, 17, 21, 110, 119, 122, 128, 367, 378, 379], "check_env_spec": [2, 3, 106, 122, 166, 324, 359, 368, 378, 379, 380], "saniti": [2, 3, 7, 192, 368], "utmost": 2, "commonli": [2, 79, 86, 87, 385], "emploi": [2, 230], "languag": [2, 23, 46], "scarc": 2, "address": [2, 382], "subdomain": 2, "facilit": [2, 3, 7, 163, 164, 178, 184, 186, 249, 250, 251, 361, 366, 369, 371, 380], "extern": [2, 3, 147, 150, 378, 385], "token": [2, 42, 43, 46, 51, 53, 69], "dm": [3, 366, 385], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 42, 44, 45, 49, 50, 53, 66, 83, 89, 92, 93, 95, 96, 98, 99, 102, 106, 110, 111, 112, 118, 119, 120, 122, 128, 129, 169, 178, 184, 185, 227, 249, 258, 275, 276, 278, 279, 281, 282, 283, 285, 289, 293, 294, 295, 296, 298, 333, 343, 361, 362, 363, 366, 367, 369, 370, 371, 372, 378, 379, 380, 382, 385], "goal": [3, 4, 60, 61, 62, 63, 64, 65, 66, 67, 68, 177, 366, 367, 368, 369, 379, 380], "abl": [3, 115, 123, 124, 366, 368, 369, 371, 377, 378, 379, 380, 382, 384], "experi": [3, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 78, 79, 192, 328, 329, 330, 331, 332, 333, 360, 367, 368, 373, 374, 378, 379, 382], "box": [3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 105, 107], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 102, 103, 106, 116, 117, 122, 123, 124, 126, 127, 128, 142, 145, 151, 157, 158, 160, 162, 167, 169, 172, 178, 181, 187, 188, 190, 324, 353, 366, 367, 368, 369, 377, 379, 381, 382, 384, 385], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 46, 98, 99, 102, 106, 118, 122, 128, 146, 149, 151, 158, 164, 178, 181, 182, 184, 186, 190, 201, 202, 203, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 231, 236, 237, 245, 248, 249, 250, 251, 253, 254, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 269, 272, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 353, 361, 362, 366, 367, 368, 369, 371, 372, 375, 377, 378, 379, 380, 381, 384], "organis": [3, 67, 102, 106, 122, 128, 182, 367], "arbitrari": [3, 39, 44, 102, 106, 122, 128, 138, 361, 366, 367, 380, 382], "structur": [3, 7, 40, 41, 42, 44, 45, 46, 49, 50, 53, 92, 102, 106, 122, 128, 147, 150, 200, 227, 260, 306, 307, 308, 309, 310, 359, 362, 366, 368, 369, 370, 373, 378, 379, 380, 381], "attribut": [3, 4, 23, 27, 29, 36, 40, 42, 45, 47, 53, 66, 102, 105, 106, 107, 122, 128, 151, 164, 184, 190, 217, 221, 265, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 366, 369, 380], "live": [3, 12, 13, 14, 15, 16, 18, 19, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 118, 122, 128, 151, 190], "actual": [3, 4, 7, 40, 42, 45, 60, 62, 63, 64, 66, 67, 68, 102, 106, 122, 128, 187, 346, 362, 366, 368, 378, 379, 380], "retriev": [3, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 84, 102, 105, 106, 107, 122, 128, 143, 148, 151, 160, 199, 201, 202, 224, 259, 261, 265, 268, 272, 275, 276, 277, 279, 290, 293, 294, 296, 298, 304, 306, 307, 308, 309, 357, 363, 367, 368, 371, 380, 385], "care": [3, 8, 102, 106, 122, 128, 181, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 326, 366, 368, 378, 379, 380, 382], "parametr": [3, 230, 265, 276, 282, 289, 296, 366, 368], "hardwar": 3, "observation_spec": [3, 102, 106, 118, 122, 128, 136, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 156, 157, 158, 160, 162, 164, 166, 168, 172, 174, 176, 177, 178, 179, 180, 181, 183, 184, 187, 188, 190, 201, 217, 221, 224, 347, 353, 366, 368, 372, 377, 378, 379, 380, 385], "compositespec": [3, 32, 33, 57, 102, 104, 106, 118, 122, 128, 136, 139, 147, 148, 149, 150, 152, 158, 166, 167, 173, 176, 178, 181, 190, 196, 200, 201, 224, 248, 252, 261, 267, 268, 272, 359, 366, 368, 369, 378, 379, 380, 385], "pair": [3, 36, 40, 42, 45, 62, 100, 101, 102, 106, 122, 128, 169, 178, 217, 249, 261, 265, 291, 306, 307, 308, 309, 310, 361, 362, 366, 367, 368, 371, 372, 377, 380, 385], "state_spec": [3, 102, 106, 118, 122, 128, 136, 201, 224, 380, 385], "reward_spec": [3, 102, 106, 118, 122, 128, 136, 139, 140, 145, 146, 147, 148, 150, 166, 170, 171, 172, 174, 181, 183, 190, 201, 224, 368, 378, 379, 380, 385], "done_spec": [3, 102, 106, 122, 128, 147, 148, 150, 151, 166, 181, 190, 200, 378, 379, 380, 385], "flag": [3, 8, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 116, 117, 122, 128, 129, 130, 260, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 361, 378, 379, 380, 381], "input_spec": [3, 102, 106, 118, 122, 128, 139, 146, 147, 148, 149, 160, 162, 166, 167, 172, 173, 176, 177, 178, 181, 182, 183, 185, 190, 368, 380], "full_action_spec": [3, 102, 106, 122, 128, 201, 224, 368, 378, 379], "full_state_spec": [3, 102, 106, 122, 128, 201, 224, 368], "lock": [3, 26, 32, 40, 42, 45, 102, 106, 122, 128, 139, 178, 188, 380], "output_spec": [3, 102, 106, 122, 128, 139, 146, 147, 148, 152, 158, 166, 167, 173, 176, 181, 182, 190, 380], "full_observation_spec": [3, 102, 106, 122, 128, 201, 224], "full_reward_spec": [3, 102, 106, 122, 128, 139, 148, 166, 378, 379], "full_done_spec": [3, 102, 106, 122, 128, 139, 148, 166, 200, 378, 379], "importantli": [3, 261, 265], "action_s": 3, "help": [3, 4, 36, 102, 106, 122, 128, 151, 190, 275, 277, 290, 293, 295, 360, 362, 366, 367, 368, 369, 378, 379], "With": [3, 111, 112, 115, 177, 363, 367, 370, 372, 373, 374, 377, 378, 379, 382, 385], "necessarili": [3, 102, 106, 122, 128, 385], "present": [3, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 85, 102, 105, 106, 122, 128, 152, 169, 173, 178, 182, 190, 199, 200, 204, 205, 206, 207, 208, 214, 217, 219, 221, 230, 235, 259, 260, 264, 265, 266, 267, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 357, 363, 366, 375, 377, 378, 379, 382, 384], "0s": [3, 60, 66, 178, 369], "step_and_maybe_reset": [3, 102, 106, 122, 128, 370], "done_kei": [3, 22, 29, 31, 37, 47, 48, 70, 71, 77, 102, 106, 122, 128, 138, 142, 151, 169, 176, 190, 199, 378, 379], "assign": [3, 4, 13, 14, 16, 36, 40, 42, 45, 102, 106, 122, 128, 182, 190, 278, 279, 281, 296, 368, 371, 378, 379, 382], "_reset": [3, 102, 106, 118, 122, 128, 136, 138, 139, 142, 147, 150, 166, 200, 201, 224, 378], "data_": [3, 102, 106, 122, 128], "append": [3, 8, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 103, 106, 122, 128, 138, 145, 146, 169, 178, 182, 187, 216, 217, 220, 221, 254, 262, 366, 367, 368, 369, 378, 379, 380, 381, 382, 384], "seed": [3, 13, 14, 15, 16, 20, 67, 102, 106, 118, 122, 123, 124, 128, 129, 130, 136, 139, 147, 150, 166, 182, 192, 324, 343, 378], "determinist": [3, 36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 204, 213, 232, 239, 248, 257, 264, 265, 268, 276, 361, 366, 367, 369, 371, 372, 375, 378, 380, 385], "preced": [3, 36, 369], "risk": [3, 165], "overlap": [3, 49, 92], "reproduc": [3, 142, 192, 366, 368, 379], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 42, 43, 46, 51, 53, 69, 73, 74, 75, 78, 94, 102, 106, 122, 128, 149, 170, 176, 177, 179, 242, 243, 244, 268, 276, 282, 283, 289, 291, 292, 296, 326, 340, 366, 367, 368, 369, 371, 378, 379, 382], "max_step": [3, 92, 102, 106, 116, 117, 118, 122, 128, 129, 130, 176, 190, 324, 370, 371, 372, 374, 375, 378, 379, 384, 385], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 46, 98, 99, 102, 106, 118, 122, 128, 141, 158, 212, 217, 221, 224, 236, 237, 245, 246, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 272, 276, 278, 282, 283, 285, 286, 287, 289, 291, 294, 296, 298, 304, 305, 306, 307, 308, 309, 339, 353, 359, 366, 368, 369, 372, 375, 377, 378, 379, 380, 381, 385], "trail": [3, 188], "treat": [3, 36, 371, 372], "figur": [3, 366, 368, 369, 379, 380, 385], "brief": [3, 368, 370, 372, 382], "deliveri": 3, "design": [3, 36, 39, 84, 90, 97, 102, 106, 116, 117, 122, 128, 142, 165, 182, 190, 253, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 366, 367, 368, 369, 370, 371, 372, 377, 378, 379, 380, 382, 385], "metaclass": 3, "everi": [3, 8, 26, 32, 36, 39, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 88, 102, 106, 122, 128, 176, 177, 188, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 228, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 343, 363, 366, 367, 368, 369, 370, 371, 378, 379, 380], "flank": [3, 369], "dual": 3, "strictli": [3, 8, 36, 102, 106, 122, 128, 182, 190, 296, 366, 368], "refer": [3, 7, 8, 9, 20, 23, 36, 40, 42, 45, 46, 102, 105, 106, 107, 122, 128, 182, 188, 190, 201, 212, 213, 224, 225, 226, 227, 232, 233, 238, 239, 255, 275, 284, 285, 286, 287, 293, 296, 306, 311, 319, 365, 366, 368, 371, 372, 373, 374, 378, 379, 382, 385], "union": [3, 11, 13, 15, 16, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 78, 79, 102, 106, 122, 128, 136, 149, 151, 157, 160, 164, 165, 169, 171, 173, 184, 186, 188, 190, 199, 203, 210, 212, 225, 226, 227, 228, 229, 230, 234, 236, 237, 242, 243, 244, 245, 259, 264, 281, 283, 288, 294, 297, 319, 337, 339, 340, 348, 349, 351, 353, 354, 355, 356, 357], "carri": [3, 20, 53, 102, 106, 122, 128, 178, 291, 367, 369, 378, 379, 380, 382], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 116, 117, 131, 366], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 60, 66, 79, 86, 87, 359], "adjac": [3, 22, 154, 259], "reli": [3, 178, 215, 216, 217, 219, 220, 221, 275, 362, 366, 368, 371, 373, 380, 385], "junction": 3, "inittrack": [3, 217, 221, 259, 366, 369], "tutori": [3, 358, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385], "scratch": [3, 8, 367, 380], "gym3": 3, "envpool": [3, 119, 120], "interfac": [3, 109, 121, 222, 229, 361, 366, 368, 374, 380, 382], "simultan": [3, 19, 119, 120, 122, 128, 380], "advantag": [3, 8, 214, 275, 277, 290, 293, 295, 306, 307, 308, 309, 310, 311, 313, 315, 317, 319, 320, 322, 362, 363, 366, 367, 368, 369, 379, 380, 385], "scale": [3, 4, 23, 62, 102, 106, 122, 128, 142, 158, 160, 171, 177, 180, 213, 218, 231, 238, 239, 243, 244, 249, 250, 251, 261, 265, 267, 275, 276, 289, 293, 294, 295, 296, 341, 347, 357, 361, 366, 367, 368, 369, 371, 379, 384], "varieti": 3, "inherit": [3, 102, 106, 122, 128, 223, 291, 363, 368, 378, 379], "Of": [3, 7, 360, 380, 385], "cours": [3, 4, 360, 380, 385], "from_pixel": [3, 98, 99, 100, 101, 105, 107, 108, 111, 112, 125, 142, 168, 324, 326, 366, 367, 369, 370, 374, 375, 381, 382, 384, 385], "81": [3, 366, 367, 380], "simpli": [3, 6, 40, 42, 45, 53, 90, 92, 97, 152, 173, 187, 291, 361, 362, 366, 368, 372, 378, 379, 385], "d": [3, 41, 44, 49, 50, 63, 65, 67, 68, 69, 78, 79, 215, 219, 261, 265, 384], "privat": [3, 102, 106, 122, 128, 187, 380, 385], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 34, 35, 39, 40, 42, 45, 60, 87, 92, 277, 290, 293, 334, 336, 339, 343, 346, 347, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 46, 81, 84, 160, 171, 218, 229, 238, 243, 244, 304, 361, 371, 372, 378, 380, 382], "inner": [3, 102, 106, 122, 128, 149, 363, 367, 368, 379, 385], "logic": [3, 378], "nevertheless": [3, 368, 370, 382], "kept": [3, 22, 85, 87, 149, 173, 181, 192, 199, 218, 243, 244, 372, 378], "mind": [3, 60, 66, 79, 86, 87, 102, 106, 122, 128, 378, 379], "desig": 3, "wherev": 3, "expos": [3, 125, 147, 150, 266, 367], "modif": [3, 5, 26, 32, 36, 102, 106, 122, 128, 154, 190, 200, 291, 368, 380], "lost": [3, 8, 187], "eras": [3, 79, 86, 102, 106, 122, 128, 182], "intern": [3, 364], "face": [3, 5, 8, 9, 370, 385], "NOT": [3, 70, 71, 77, 165], "outsid": [3, 15, 374, 378, 379, 380], "right": [3, 6, 7, 22, 46, 86, 367, 368, 379, 380, 385], "preliminari": 3, "warranti": 3, "affect": [3, 8, 36, 102, 106, 122, 128, 181, 182, 190, 192, 306, 307, 308, 309, 378], "preclud": 3, "presenc": [3, 372], "annihil": 3, "reason": [3, 4, 8, 36, 66, 102, 106, 122, 123, 124, 128, 164, 184, 190, 221, 362, 366, 367, 368, 372, 373, 378, 380, 382], "advanc": [3, 20, 41, 44, 49, 50, 106, 370, 373, 382], "explicitli": [3, 4, 70, 71, 77, 138, 367, 369, 373, 378, 379, 382], "superse": 3, "pettingzoowrapp": [3, 359], "group": [3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 60, 102, 106, 115, 116, 117, 122, 123, 124, 128, 129, 130, 131, 361, 367, 371, 373, 379, 382], "associ": [3, 36, 40, 42, 45, 102, 106, 122, 128, 190, 238, 357, 366, 382], "environemtn": 3, "__not__": 3, "constrain": [3, 158, 217, 221, 293], "li": 3, "fact": [3, 7, 8, 366, 368, 370, 378, 379, 380, 381, 382, 385], "predict": [3, 36, 46, 211, 213, 223, 224, 253, 270, 275, 277, 281, 284, 286, 287, 290, 293, 295, 305, 361, 366, 367, 372], "know": [3, 4, 9, 41, 44, 49, 50, 105, 107, 252, 294, 339, 366, 367, 368, 369, 370, 371, 372, 373, 378, 379, 382], "meaning": 3, "perfectli": [3, 363, 366, 380], "meaningless": 3, "val": [3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 372, 384], "agent0": 3, "agent1": 3, "overrid": [3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 44, 52, 54, 55, 60, 102, 106, 122, 128, 138, 357, 361], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 81, 84, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 138, 139, 142, 143, 147, 149, 150, 151, 152, 154, 158, 159, 160, 162, 164, 166, 167, 169, 171, 172, 173, 176, 178, 180, 182, 183, 184, 186, 188, 190, 192, 199, 200, 201, 202, 203, 205, 206, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 230, 243, 244, 248, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 304, 306, 307, 308, 309, 312, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 333, 336, 337, 339, 340, 341, 343, 357, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "500": [3, 366, 367, 380, 384, 385], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 60, 63, 122, 128], "bottleneck": [3, 8, 79, 86, 87], "great": [3, 7, 8, 378, 384], "speedup": [3, 8, 378, 385], "precis": [3, 147, 150, 199, 216, 220, 366, 368], "misspecifi": 3, "caus": [3, 7, 8, 73, 74, 94, 102, 106, 110, 122, 128, 165, 385], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 66, 102, 106, 122, 128, 131, 142, 153, 159, 169, 177, 178, 179, 182, 190, 192, 252, 256, 257, 260, 296, 366, 368, 378, 379, 382, 385], "mismatch": [3, 367], "subprocess": [3, 13, 14, 16, 103, 122, 128], "multithreadedenv": [3, 359], "underneath": 3, "higher": [3, 4, 145, 268, 366, 367, 368, 378, 382, 385], "flexibl": [3, 9, 119, 299, 362, 363, 366, 382, 385], "cover": [3, 105, 107, 360, 368, 370, 373, 374, 380, 384], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 68, 69, 81, 102, 106, 115, 118, 121, 122, 123, 124, 128, 139, 146, 147, 148, 151, 152, 158, 164, 166, 167, 173, 176, 178, 181, 182, 184, 186, 188, 190, 194, 198, 202, 203, 222, 227, 228, 230, 236, 245, 252, 254, 261, 264, 265, 272, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 300, 304, 312, 324, 355, 359, 361, 366, 367, 368, 373, 378, 379, 380, 382, 385], "atari": [3, 4, 60, 142, 326, 374, 385], "classic": [3, 118, 124, 367], "benchmark_batched_env": 3, "seamlessli": [3, 380], "infrastructur": [3, 378, 379], "act": [3, 4, 86, 87, 123, 124, 182, 211, 228, 276, 278, 289, 294, 296, 298, 369, 378, 379, 382], "world": [3, 5, 118, 270, 286, 374, 378, 379, 380, 385], "paradigm": [3, 16, 379], "decpodp": 3, "game": [3, 4, 5, 60, 116, 117, 326, 374], "thank": [3, 366, 370], "carrier": [3, 368, 369, 370, 382], "particular": [3, 36, 53, 62, 63, 102, 106, 122, 128, 182, 190, 362, 363, 367, 369, 370, 377, 379, 382], "thu": [3, 290, 379], "let": [3, 6, 7, 36, 41, 44, 49, 50, 51, 102, 106, 122, 123, 124, 128, 142, 190, 217, 221, 227, 228, 254, 339, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "vma": [3, 129, 130, 324, 378, 379], "robot": [3, 5, 7, 66, 164, 184, 186, 379], "vmasenv": [3, 324, 359, 378, 379], "balanc": [3, 100, 101, 366, 367], "num_env": [3, 20, 105, 109, 120, 129, 130, 324, 378, 379], "n_agent": [3, 129, 130, 227, 228, 236, 245, 304, 324, 378, 379], "ground_rew": 3, "pos_rew": [3, 379], "style": [3, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68], "relat": [3, 4, 10, 41, 122, 154, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 367, 375, 380], "vari": [3, 105, 107, 108, 123, 124, 125, 129, 165, 379], "creation": [3, 122, 128, 385], "info_spec": [3, 122], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 39, 98, 99, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 136, 166, 200, 279, 282, 283, 304, 359, 378, 379, 385], "simpl": [3, 9, 36, 39, 102, 106, 122, 128, 190, 205, 259, 265, 279, 281, 291, 295, 306, 361, 362, 366, 367, 368, 370, 371, 372, 378, 379, 382, 385], "prefix": [3, 22, 36, 40, 42, 45, 53, 102, 106, 122, 128, 182, 190, 291, 296, 325, 369, 372, 385], "exactli": [3, 36, 102, 106, 108, 122, 128, 182, 190, 215, 219, 296, 366, 369, 373, 378, 379], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 102, 106, 122, 128, 136, 149, 191, 199, 201, 223, 224, 252, 256, 257, 259, 260, 378, 379], "reward_kei": [3, 29, 31, 37, 47, 48, 70, 71, 77, 102, 106, 122, 128, 190, 199, 201, 224, 337, 341, 378, 379], "set_kei": [3, 151, 275, 277, 279, 282, 283, 284, 289, 290, 291, 293, 294, 295, 296, 304, 310, 366, 378, 379], "awai": [3, 368, 370, 378, 379], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 34, 35, 38, 39, 52, 54, 55, 102, 106, 122, 128, 176, 265], "full": [3, 102, 106, 122, 128, 217, 221, 255, 334, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "autoresettransform": 3, "invalid": [3, 36, 92, 102, 106, 122, 128, 131, 190, 225, 226], "nan": [3, 138, 187], "auto_reset": [3, 102, 106, 122, 128, 138, 190, 380], "auto_reset_replac": [3, 138], "placehold": [3, 108, 151, 182], "set_gym_backend": [3, 102, 105, 106, 122, 128, 132, 138, 359, 370], "autoresettinggymenv": [3, 138], "_step": [3, 102, 106, 122, 128, 136, 138, 139, 147, 150, 154, 166, 167], "self": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 36, 40, 42, 45, 102, 106, 118, 122, 128, 136, 138, 139, 146, 147, 150, 164, 166, 178, 181, 182, 184, 186, 190, 201, 212, 224, 236, 245, 252, 256, 261, 264, 269, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 363, 366, 380, 384, 385], "super": [3, 118, 136, 138, 139, 147, 150, 166, 201, 212, 224, 269, 276, 278, 283, 289, 294, 296, 298, 366, 380, 384, 385], "td_reset": [3, 138], "exclud": [3, 8, 62, 67, 102, 106, 122, 128, 138, 142, 152, 199, 236, 378, 379, 382], "r": [3, 4, 36, 136, 138, 145, 160, 174, 216, 265, 274, 305, 324, 361, 367, 380, 385], "break_when_any_don": [3, 102, 106, 122, 128, 138, 190, 259, 379], "3633e": [3, 138], "02": [3, 102, 106, 122, 128, 138, 365, 366, 367, 368, 375, 378, 380, 381, 383], "4877e": [3, 138], "01": [3, 138, 160, 260, 271, 277, 290, 293, 365, 366, 367, 369, 379, 380, 381, 383], "2849e": [3, 138], "7584e": [3, 138], "6609e": [3, 138], "6166e": [3, 138], "8366e": [3, 138], "2761e": [3, 138], "5685e": [3, 138], "4102e": [3, 138], "8111e": [3, 138], "9959e": [3, 138], "0865e": [3, 138], "5644e": [3, 138], "2119e": [3, 138], "2542e": [3, 138], "03": [3, 102, 106, 122, 128, 138, 160, 365, 366, 367, 380, 381, 383], "9952e": [3, 138], "4059e": [3, 138], "2094e": [3, 138], "9009e": [3, 138], "5140e": [3, 138], "3554e": [3, 138], "2920e": [3, 138], "7893e": [3, 138], "6429e": [3, 138], "3057e": [3, 138], "2867e": [3, 138], "6963e": [3, 138], "3818e": [3, 138], "2576e": [3, 138], "2679e": [3, 138], "1640e": [3, 138], "00": [3, 98, 99, 138, 365, 366, 367, 368, 369, 378, 379, 380, 381, 383], "6972e": [3, 138], "0212e": [3, 138], "5959e": [3, 138], "4637e": [3, 138], "3121e": [3, 138], "2168e": [3, 138], "5232e": [3, 138], "7704e": [3, 138], "7457e": [3, 138], "4127e": [3, 138], "1064e": [3, 138], "0854e": [3, 138], "5712e": [3, 138], "2189e": [3, 138], "5235e": [3, 138], "8289e": [3, 138], "0009e": [3, 138], "0257e": [3, 138], "8893e": [3, 138], "5872e": [3, 138], "9405e": [3, 138], "7766e": [3, 138], "0403e": [3, 138], "0626e": [3, 138], "2959e": [3, 138], "7263e": [3, 138], "2775e": [3, 138], "9564e": [3, 138], "0411e": [3, 138], "6769e": [3, 138], "6354e": [3, 138], "8698e": [3, 138], "1765e": [3, 138], "6292e": [3, 138], "5375e": [3, 138], "1820e": [3, 138], "7023e": [3, 138], "5836e": [3, 138], "9016e": [3, 138], "4826e": [3, 138], "6191e": [3, 138], "6387e": [3, 138], "8667e": [3, 138], "2056e": [3, 138], "1147e": [3, 138], "5991e": [3, 138], "0278e": [3, 138], "5219e": [3, 138], "3067e": [3, 138], "6617e": [3, 138], "3322e": [3, 138], "2629e": [3, 138], "4599e": [3, 138], "7298e": [3, 138], "5848e": [3, 138], "0148e": [3, 138], "5745e": [3, 138], "6982e": [3, 138], "7877e": [3, 138], "3527e": [3, 138], "7285e": [3, 138], "6668e": [3, 138], "0583e": [3, 138], "6956e": [3, 138], "3962e": [3, 138], "9845e": [3, 138], "5015e": [3, 138], "5903e": [3, 138], "9993e": [3, 138], "9418e": [3, 138], "0196e": [3, 138], "6557e": [3, 138], "2109e": [3, 138], "8997e": [3, 138], "1507e": [3, 138], "7363e": [3, 138], "0310e": [3, 138], "9574e": [3, 138], "8980e": [3, 138], "0090e": [3, 138], "forecast": 3, "awar": [3, 7, 73, 74, 75, 88, 90, 94, 367, 369], "detect": [3, 68], "return_contigu": [3, 102, 106, 122, 128, 192, 377], "unboundedcontinuoustensorspec": [3, 102, 106, 118, 122, 128, 136, 139, 147, 150, 166, 178, 196, 201, 224, 248, 264, 267, 269, 272, 295, 359, 368, 369, 378, 379, 380, 385], "boundedtensorspec": [3, 21, 26, 102, 106, 122, 128, 191, 256, 257, 260, 261, 268, 275, 276, 278, 289, 293, 294, 296, 298, 359, 368, 378, 379, 380, 384, 385], "binarydiscretetensorspec": [3, 136, 279, 282, 283, 304, 359], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 32, 33, 36, 40, 42, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 102, 104, 106, 122, 128, 136, 138, 139, 141, 142, 143, 146, 147, 148, 151, 152, 153, 154, 157, 158, 163, 165, 166, 167, 169, 172, 173, 176, 177, 178, 179, 181, 182, 187, 188, 190, 199, 200, 201, 217, 221, 223, 224, 252, 253, 255, 256, 259, 260, 263, 264, 265, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 298, 304, 305, 306, 307, 308, 309, 310, 343, 366, 378, 380], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 14, 16, 23, 25, 27, 28, 36, 39, 41, 46, 49, 54, 66, 78, 79, 81, 102, 106, 122, 128, 138, 142, 146, 147, 150, 158, 160, 164, 169, 170, 171, 177, 178, 180, 181, 182, 184, 186, 188, 190, 210, 213, 215, 218, 219, 222, 225, 226, 229, 230, 238, 239, 242, 244, 252, 264, 268, 271, 273, 274, 275, 276, 277, 281, 282, 283, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 341, 366, 367, 382, 385], "_set_se": [3, 136, 139, 147, 150, 166, 380], "lazystackedtensordict": [3, 32, 60, 102, 106, 118, 122, 128, 377], "float32": [3, 13, 14, 15, 26, 29, 40, 41, 42, 45, 46, 47, 49, 50, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 78, 79, 94, 98, 99, 102, 105, 106, 107, 111, 112, 118, 121, 122, 126, 127, 128, 129, 130, 139, 147, 150, 151, 152, 160, 162, 166, 167, 169, 173, 176, 178, 180, 196, 199, 201, 211, 212, 217, 221, 224, 236, 237, 245, 248, 249, 250, 251, 253, 254, 259, 260, 261, 262, 263, 264, 267, 269, 272, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 304, 361, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 385], "exclusive_field": [3, 60, 377], "stack_dim": [3, 60, 377], "dramat": 3, "carefulli": [3, 378, 379, 385], "against": [3, 5, 7, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 102, 106, 122, 128, 190, 192, 248, 254, 255, 261, 262, 263, 264, 265, 368, 378, 379], "plain": [3, 8, 370], "larg": [3, 4, 28, 40, 42, 45, 147, 150, 184, 275, 277, 290, 293, 295, 367, 368, 378, 379, 382], "expens": [3, 79, 86, 87, 324, 382], "absent": [3, 26, 32, 62, 102, 106, 122, 128, 182], "torchvis": [3, 164, 186, 328, 378, 384, 385], "base_env": [3, 99, 102, 106, 107, 112, 122, 128, 136, 139, 145, 147, 149, 150, 158, 162, 166, 168, 174, 176, 178, 179, 182, 190, 326, 366, 367, 368, 378, 381, 384, 385], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 103, 106, 118, 122, 128, 135, 137, 139, 146, 151, 178, 182, 190, 202, 203, 222, 274, 324, 348, 349, 355, 356, 357, 367, 382], "bring": [3, 368, 370, 385], "signific": [3, 5, 8, 368, 385], "kind": [3, 44, 52, 199, 372, 378, 382], "consult": 3, "interest": [3, 261, 265, 361, 367, 368, 370, 379, 380, 385], "resize_par": 3, "easi": [3, 5, 60, 65, 100, 101, 102, 106, 111, 112, 122, 128, 252, 256, 257, 260, 361, 362, 366, 367, 368, 379, 381, 382, 385], "graph": [3, 4, 8, 98, 99, 111, 112, 302, 303, 366, 380], "revers": [3, 219], "order": [3, 15, 36, 39, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 87, 102, 106, 122, 128, 143, 147, 150, 162, 182, 190, 248, 254, 264, 266, 267, 269, 275, 276, 278, 282, 283, 289, 293, 294, 295, 296, 298, 367, 378, 379], "chain": [3, 40, 41, 42, 44, 45, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 146, 149, 202, 203, 267, 385], "invers": [3, 4, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 142, 147, 150, 152, 160, 169, 190, 273, 282, 289, 380], "in_keys_inv": [3, 133, 145, 147, 148, 150, 160, 161, 162, 166, 167, 169, 174, 181, 366, 377, 380, 385], "append_transform": [3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 133, 141, 164, 178, 182, 184, 324, 366, 369, 378, 380, 382, 384, 385], "doubletofloat": [3, 366, 368, 377], "float64": [3, 36, 60, 61, 62, 63, 64, 65, 66, 67, 68, 100, 101, 102, 106, 116, 117, 122, 128, 146, 147, 150, 164, 178, 181, 182, 184, 186, 190, 264, 377], "regist": [3, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 105, 106, 107, 122, 128, 147, 150, 151, 172, 182, 190, 199, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 324, 326, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 363, 366, 368, 370, 382], "manipul": [3, 4, 8, 100, 101, 164, 184], "third_transform": 3, "unexpect": [3, 36, 102, 106, 122, 128, 190, 385], "behviour": 3, "fortun": [3, 369, 370, 371, 374], "alreadi": [3, 8, 11, 36, 40, 42, 45, 53, 60, 102, 106, 122, 128, 178, 190, 200, 265, 306, 307, 308, 309, 366, 368, 374, 378, 379], "chang": [3, 5, 7, 36, 41, 44, 49, 50, 60, 73, 74, 75, 79, 85, 86, 88, 90, 94, 102, 106, 122, 128, 139, 146, 147, 148, 150, 152, 158, 166, 167, 173, 176, 181, 182, 188, 190, 219, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 362, 366, 369, 378, 379, 380, 381, 382, 385], "catfram": [3, 259, 367], "hold": [3, 302, 303, 380, 382], "notic": [3, 92, 142, 368, 375, 380], "parenthood": 3, "henc": [3, 41, 165, 200, 227, 361, 366, 368, 378, 379, 380], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 122, 128, 324, 380], "discret": [3, 24, 28, 34, 35, 39, 55, 102, 105, 106, 107, 116, 117, 122, 123, 124, 128, 129, 130, 149, 234, 237, 281, 282, 283, 284, 361, 367, 371, 378, 379, 380, 385], "might": [3, 40, 42, 43, 45, 330, 360, 366, 370, 385], "action_mask": [3, 111, 112, 123, 124, 126, 127, 136], "unavail": [3, 123, 124], "probabl": [3, 4, 8, 46, 81, 84, 210, 212, 215, 217, 219, 221, 222, 225, 226, 234, 244, 256, 261, 265, 361, 367, 371, 384], "categor": [3, 28, 35, 39, 98, 99, 105, 107, 108, 111, 112, 116, 117, 119, 120, 123, 124, 125, 129, 130, 136, 151, 212, 234, 237, 254, 255, 261, 262, 263, 279, 282, 283, 304, 369], "probabilistictensordictmodul": [3, 158, 265, 266, 384], "tensordictsequenti": [3, 217, 221, 254, 256, 259, 266, 272, 361, 366, 367, 369, 371, 375, 377, 378, 381, 384], "maskedcategor": [3, 226, 359], "linear": [3, 13, 14, 15, 16, 20, 36, 98, 99, 102, 106, 118, 122, 128, 146, 158, 164, 178, 181, 182, 184, 186, 190, 201, 202, 203, 205, 206, 207, 208, 212, 214, 222, 224, 227, 228, 229, 230, 231, 237, 238, 239, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 262, 264, 267, 269, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 353, 361, 367, 377, 381, 384], "in_feat": 3, "out_feat": 3, "logit": [3, 42, 46, 211, 225, 226, 234, 255, 261, 282, 283, 361], "dist": [3, 10, 225, 226, 234, 371], "distribution_class": [3, 158, 249, 250, 251, 253, 261, 265, 267, 275, 276, 282, 283, 289, 293, 294, 295, 296, 361, 366, 368, 371, 378, 379, 384], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 46, 64, 98, 99, 102, 106, 107, 111, 112, 117, 120, 122, 123, 124, 128, 130, 190, 192, 217, 221, 246, 249, 250, 251, 252, 257, 259, 260, 262, 270, 304, 361, 366, 367, 368, 369, 372, 375, 378, 379, 385], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 136, 165, 190], "enviorn": [3, 116, 123, 124, 129, 130], "itself": [3, 36, 102, 106, 122, 128, 132, 138, 190, 291, 368, 370], "ey": 3, "report": [3, 98, 99, 111, 112, 374], "foremost": 3, "callback": [3, 102, 106, 122, 128, 379], "ad": [3, 4, 15, 22, 36, 41, 44, 49, 50, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 102, 106, 122, 128, 172, 182, 190, 229, 230, 260, 275, 277, 279, 284, 290, 293, 296, 304, 367, 369, 371, 378, 382, 385], "track": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 50, 85, 172, 188, 190, 259, 260, 331, 336, 367, 369, 370, 373, 379, 380, 382], "tensordictrecord": [3, 359], "render": [3, 8, 112, 129, 324, 326, 339, 366, 367, 368, 370, 374], "videorecord": [3, 324, 359, 368, 374, 375, 378], "csvlogger": [3, 324, 326, 359, 367, 374, 375, 378], "wandblogg": [3, 359, 374], "tensorboardlogg": [3, 353, 359, 374], "tag": [3, 7, 324, 326, 328, 331, 357, 374, 375, 378], "mp4": [3, 324, 326, 328, 375, 378], "video_format": [3, 324, 326, 328, 375, 378], "whc": 3, "cwh": 3, "exp": [3, 231, 274], "al": [3, 23, 105, 107, 151, 162, 201, 385], "pong": [3, 60, 120, 162, 385], "v5": [3, 105, 107, 120, 151, 162, 385], "cach": [3, 40, 42, 53, 60, 62, 63, 64, 66, 67, 68, 69, 79, 86, 102, 106, 122, 128, 138, 147, 150, 164, 182, 186, 199, 335, 381], "grow": 3, "until": [3, 7, 20, 179, 181, 190, 368, 369, 375, 378, 379], "dumpi": 3, "tediou": [3, 370], "workspac": [3, 102, 106, 122, 128], "pixelrendertransform": [3, 359, 378], "stream": [3, 66], "alik": [3, 324], "envcreat": [3, 15, 21, 122, 128, 324, 353, 354, 357, 359, 366, 367, 384, 385], "render_mod": [3, 324, 380], "rgb_arrai": [3, 324, 378, 379, 380], "uncom": [3, 374], "line": [3, 7, 36, 60, 102, 106, 122, 128, 190, 367, 374, 378, 379, 385], "comment": [3, 363, 367, 384], "pixels_record": [3, 324], "close": [3, 15, 106, 119, 158, 275, 277, 290, 293, 324, 366, 367, 370, 377, 378, 380, 384], "mission": 3, "irrespect": [3, 264, 265], "dmcontrol": [3, 102, 106, 122, 128], "jumanji": [3, 102, 106, 111, 112, 122, 128], "special": [3, 359, 361, 366, 369, 385], "framework": [3, 4, 9, 21, 98, 99, 102, 106, 111, 112, 118, 122, 128, 215, 384, 385], "Its": [3, 36, 40, 42, 45, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 188, 190, 264, 310], "success": [3, 60, 61, 62, 63, 64, 65, 66, 67, 68, 142, 181, 256, 367, 373, 375, 380, 382, 384], "foundat": [3, 5, 123, 124, 368, 379], "inspir": [3, 380], "gone": [3, 4, 5, 259], "hard": [3, 7, 92, 100, 101, 122, 288, 367, 385], "prefer": [3, 13, 14, 16, 19, 22, 23, 41, 44, 49, 50, 165, 173, 293, 340, 361, 368, 378, 379, 382], "maintain": [3, 5, 9, 27, 380], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 367, 368, 369, 373, 378, 379, 380, 382, 385], "decor": [3, 8, 11, 135, 291, 306, 307, 308, 309, 384], "relev": [3, 46, 306, 307, 308, 309, 310, 333, 380], "gym_backend": [3, 135, 359], "env1": [3, 377], "venv": 3, "python3": [3, 6, 7, 10, 385], "site": [3, 6, 7, 67, 135, 385], "env2": [3, 377], "_env": [3, 6, 105, 385], "classic_control": 3, "pendulumenv": [3, 380], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 114, 132], "handi": [3, 102, 106, 122, 128, 374], "side": [3, 4, 385], "v0": [3, 13, 14, 102, 106, 108, 111, 112, 113, 114, 122, 128, 146, 182, 188, 353, 370, 372, 373, 374, 385], "26": [3, 102, 106, 122, 128, 366, 367, 378, 379, 380, 381], "fun": [3, 11, 135, 368, 378, 379], "reveal": 4, "bug": [4, 384], "curv": 4, "exploit": [4, 371], "video": [4, 9, 326, 328, 339, 357, 359, 375, 378, 379], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 23, 158, 378, 379, 381], "coeffici": [4, 23, 27, 46, 158, 379], "bonu": [4, 275, 277, 290, 293], "beta": [4, 41, 49, 78, 79, 282, 289, 290, 366, 367, 382, 384], "reduc": [4, 6, 28, 92, 177, 359, 367, 378], "downstream": [4, 366], "formul": [4, 378, 379], "ob": [4, 8, 22, 26, 32, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 81, 86, 87, 92, 102, 106, 122, 128, 136, 138, 147, 148, 150, 160, 174, 180, 196, 199, 205, 206, 207, 208, 227, 228, 262, 269, 276, 278, 283, 289, 294, 296, 298, 306, 307, 308, 309, 367, 377, 378, 380, 382, 384, 385], "rate": [4, 60, 188, 305, 367, 368, 378, 379], "gradient": [4, 36, 102, 106, 122, 128, 182, 190, 218, 226, 230, 234, 243, 244, 275, 277, 278, 282, 283, 289, 290, 291, 293, 294, 295, 296, 298, 305, 306, 307, 308, 309, 343, 366, 368, 378, 379, 380], "easier": [4, 361, 366], "local": [4, 7, 10, 15, 20, 36, 79, 86, 102, 106, 122, 128, 182, 190, 227, 228, 236, 245, 304, 331, 333, 374, 375, 378, 379], "optima": 4, "sens": [4, 40, 42, 45, 373, 380], "product": [4, 9, 215, 216, 219, 220, 355, 356], "sum": [4, 20, 35, 39, 92, 98, 99, 100, 101, 105, 107, 108, 111, 112, 119, 120, 125, 141, 172, 225, 226, 245, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 292, 293, 294, 295, 296, 298, 305, 312, 362, 366, 367, 368, 369, 372, 375, 378, 379, 380, 385], "stat": [4, 160, 347, 357, 367, 368], "w": [4, 81, 142, 144, 168, 180, 215, 260, 326, 367, 369, 382], "yield": [4, 15, 20, 36, 102, 106, 122, 128, 190, 291, 366, 372], "insight": 4, "auxiliari": [4, 372], "credit": 4, "futur": [4, 36, 40, 42, 45, 70, 71, 77, 102, 106, 122, 128, 164, 182, 186, 190, 222, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 360, 384], "past": [4, 259, 367, 382], "spars": [4, 369], "intermedi": [4, 13, 14, 141, 217, 221, 255, 366, 381], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 366], "discov": 4, "score": [4, 46], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 384], "select": [4, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 116, 117, 123, 124, 129, 130, 136, 138, 139, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 163, 165, 166, 167, 169, 172, 173, 176, 177, 178, 179, 181, 184, 185, 187, 188, 190, 191, 201, 217, 221, 254, 262, 342, 366, 370, 382], "fall": [4, 62], "explicit": [4, 11, 53, 81, 382], "mechan": [4, 36, 102, 106, 122, 128, 182, 190, 367, 372, 380], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 23, 102, 106, 122, 128, 219, 282, 289, 368, 379], "addition": 4, "timestep": [4, 46, 62, 169, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 378, 379], "realli": 4, "huge": [4, 228, 369], "std": [4, 160, 188, 231, 235, 252, 366, 385], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 365, 369, 370, 372, 373, 374, 375, 376, 377, 381, 382, 383], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 36, 40, 41, 42, 44, 45, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 102, 106, 122, 128, 141, 160, 164, 178, 181, 182, 184, 189, 190, 201, 215, 216, 219, 220, 224, 229, 230, 252, 256, 257, 259, 260, 275, 276, 278, 279, 281, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 298, 304, 357, 366, 367, 369, 370, 371, 373, 378, 380, 385], "estim": [4, 60, 79, 86, 87, 151, 158, 205, 249, 250, 251, 275, 276, 277, 278, 279, 281, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "unseen": 4, "extrins": 4, "wrong": [4, 79, 86], "bonus": 4, "denser": 4, "prior": [4, 239, 286, 379], "freshli": 4, "drop": [4, 85, 87, 199], "meant": [4, 36, 118], "encourag": [4, 122, 366, 367, 382], "measur": [4, 73, 74, 94, 98, 99, 111, 112, 368, 373], "novelti": 4, "revisit": 4, "previous": [4, 368, 385], "diminish": 4, "decreas": [4, 23, 371], "ideal": [4, 160, 380], "down": [4, 13, 14, 15, 16, 369, 370], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 40, 42, 45, 367, 368, 369, 372, 373, 378, 379, 380, 384, 385], "distil": 4, "nois": [4, 189, 230, 247, 260, 294, 298, 339, 357, 366, 378], "exploratori": [4, 275, 277, 290, 293], "misalign": 4, "trade": [4, 371], "unavoid": 4, "divers": [4, 122, 128], "bootstrap": [4, 284, 307, 313, 314, 366, 369], "noisi": [4, 229, 230, 247, 361], "unstabl": [4, 218, 243, 244], "inher": 4, "stochast": [4, 158, 213, 230, 232, 239, 276, 280, 282, 283, 289, 292, 294, 296, 361, 368, 371, 379], "enemi": 4, "pomdp": [4, 382], "loos": [4, 361, 367, 368], "nonexist": 4, "architectur": [4, 209, 372, 378, 379], "sequenc": [4, 13, 14, 15, 16, 23, 26, 32, 34, 35, 41, 43, 44, 46, 51, 53, 66, 69, 72, 81, 82, 84, 90, 93, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 133, 140, 141, 142, 143, 144, 147, 149, 150, 154, 156, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 177, 179, 180, 181, 188, 202, 203, 210, 212, 215, 219, 222, 225, 226, 227, 228, 234, 237, 241, 253, 266, 267, 280, 325, 326, 338, 339, 340, 342, 343, 361, 366, 368, 369, 377, 378, 379, 385], "lstm": [4, 178, 220, 221, 231], "rel": [4, 81, 178, 210, 242, 366, 367, 378, 379, 382], "tend": 4, "stabl": [4, 9, 10, 121], "compens": 4, "descent": [4, 230], "minimum": [4, 122, 128, 170, 213, 231, 242, 243, 244, 268, 271, 274, 276, 283, 291, 292, 296, 334, 366, 368, 375, 378, 379], "manual": [4, 17, 19, 20, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 106, 107, 366, 369, 382], "deviat": [4, 160, 188, 201, 213, 224, 229, 230, 235, 252, 293, 298, 366, 371, 379], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 86, 138, 215, 216, 219, 220, 370, 371, 372, 373, 374, 375], "stabil": [4, 155, 275, 277, 290, 293, 295], "stage": [4, 366, 380], "never": [4, 13, 14, 16, 373], "prevent": [4, 26, 32, 71, 188, 218, 243, 244, 275, 277, 290, 293, 295, 341, 382], "entir": [4, 66, 102, 106, 122, 128, 227, 368, 370, 380, 382], "submit": [4, 105, 139, 360, 384], "system": [4, 5, 71, 368, 378, 379, 380], "adequ": [4, 192, 368, 378, 379], "infeas": 4, "allevi": [4, 361], "prune": 4, "fire": [4, 36, 102, 106, 122, 128, 190], "illeg": 4, "move": [4, 36, 68, 102, 106, 122, 128, 146, 148, 164, 178, 181, 182, 184, 186, 188, 190, 199, 222, 264, 341, 366, 367, 369, 370, 384, 385], "chess": 4, "combin": [4, 30, 181, 367, 374, 382], "grasp": 4, "top": [4, 92, 98, 99, 111, 112, 201, 224, 371], "wherein": 4, "cumul": [4, 172, 177, 201, 312, 368], "q": [4, 9, 102, 106, 122, 128, 205, 206, 207, 208, 211, 212, 214, 236, 237, 245, 251, 255, 262, 263, 276, 278, 279, 281, 282, 283, 284, 288, 289, 294, 296, 298, 304, 359, 366, 372], "flow": [4, 366, 368, 378, 379, 380, 382], "reparameter": [4, 210, 226, 234], "soft": [4, 288, 296, 297, 378], "critic": [4, 8, 249, 258, 275, 277, 278, 282, 283, 289, 290, 293, 294, 295, 296, 298, 366, 372], "clip": [4, 46, 145, 170, 275, 277, 290, 293, 295, 298, 343, 368, 379, 380], "oppos": [4, 53], "incorrect": 4, "thought": [4, 102, 106, 122, 128], "bound": [4, 20, 25, 26, 36, 102, 106, 122, 128, 145, 159, 188, 190, 238, 239, 248, 254, 255, 260, 261, 262, 263, 264, 265, 268, 298, 361, 366, 367, 368, 378, 385], "region": 4, "squash": [4, 369, 384], "tanh": [4, 202, 203, 215, 216, 218, 219, 220, 222, 228, 242, 243, 244, 268, 368, 371, 378, 379, 380, 381, 384], "prob": [4, 225, 226, 234, 368, 379], "rememb": [4, 378], "remap": 4, "origin": [4, 8, 40, 42, 45, 46, 110, 148, 149, 158, 164, 182, 186, 190, 215, 261, 264, 265, 288, 291, 293, 366, 377, 380, 385], "histor": 5, "ceas": 5, "farama": [5, 64, 113, 114, 123, 124, 368, 380], "bc": [5, 384], "best": [5, 9, 110, 217, 221, 378, 379, 382, 384], "gymwrapp": [5, 102, 106, 122, 128, 152, 173, 176, 187, 359, 368, 384, 385], "feel": [5, 360, 375, 384], "free": [5, 7, 147, 150, 275, 286, 293, 363, 368, 375, 379, 384], "gladli": 5, "prepar": [6, 31, 63, 368], "conda": [6, 7, 360], "cmake": 6, "activ": [6, 7, 9, 202, 203, 209, 213, 222, 227, 228, 277, 290, 293, 361, 380, 384], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 63, 360], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 108], "y": [6, 7, 44, 121, 214, 227, 246, 366, 379, 382], "facebookresearch": [6, 63, 108], "subdirectori": 6, "verbos": [6, 375], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 57, 102, 106, 122, 128, 166, 175, 190, 291, 378, 379, 384, 385], "command": [6, 7, 10, 368, 378, 379, 380, 385], "readm": [6, 7, 129], "md": [6, 7], "habitatenv": [6, 359], "_has_habitat": 6, "available_env": [6, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 113, 116, 117, 121, 122, 125, 126, 127, 128, 129, 130, 385], "startswith": [6, 362, 366, 372], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 103, 291, 366], "env_nam": [6, 98, 100, 102, 105, 106, 108, 111, 113, 119, 122, 125, 128, 366, 368, 385], "llvmlite": 6, "config": [6, 7, 164, 186, 204, 209, 235, 347, 348, 349, 351, 354], "var": [6, 7, 36, 102, 106, 122, 128, 182, 190, 291, 296], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 254], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 36, 102, 106, 122, 128, 182, 190, 291, 296, 382], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 102, 367, 375], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 62], "stand": [7, 30, 100, 101, 122, 128, 377, 380], "joint": [7, 367], "contact": [7, 43, 378], "engin": [7, 125, 380], "biomechan": 7, "graphic": 7, "anim": [7, 379], "area": 7, "demand": [7, 374, 385], "fast": [7, 9, 98, 99, 167, 199, 294, 366, 367, 368], "articul": 7, "acquir": [7, 368], "deepmind": [7, 8, 9, 66, 100, 101, 102, 106, 116, 117, 122, 128, 151, 368, 370], "whomev": 7, "licenc": 7, "incorpor": [7, 102, 106, 122, 128, 252, 256, 257, 260, 369, 371, 380], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 360], "tip": [7, 360], "glfw": [7, 366], "osmesa": 7, "egl": 7, "advic": [7, 66, 385], "sudo": [7, 360], "apt": [7, 379], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 249, 250, 251], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 24, 28, 39, 140, 212, 237, 254, 255, 262, 263, 279, 282, 283, 304], "mkdir": 7, "earlier": [7, 366, 368, 369, 378, 379, 382], "roboti": 7, "html": [7, 13, 14, 119, 121], "wget": 7, "mujoco210": 7, "tar": [7, 63], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 122, 128], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 40, 42, 53, 69], "bin": [7, 212, 255, 361], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 208, 261, 265, 366, 368, 382], "nvidia": [7, 110], "older": [7, 11], "hack": [7, 366], "adatp": 7, "script": [7, 63, 192, 353, 357, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "unnot": [7, 165], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 71, 367, 382], "troubleshoot": 7, "gl": 7, "h": [7, 81, 142, 144, 168, 180, 215, 216, 217, 219, 220, 221, 224, 326, 367, 369, 382], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 40, 42, 45, 53, 60, 62, 63, 64, 66, 67, 68, 73, 331, 333, 363, 366, 371, 374, 378], "devel": 7, "ubuntu": [7, 110], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 367, 369, 377], "libstdc": 7, "glibcxx_3": 7, "29": [7, 365, 367, 368, 380, 381, 383], "compil": [7, 36, 79, 86, 87, 102, 106, 122, 128, 190, 215, 216, 219, 220], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 187, 368, 377], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 32, 36, 102, 106, 122, 128, 159, 182, 190, 296, 385], "job": [7, 17, 18, 19, 21, 44, 382, 384], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 98, 99, 367, 369, 379, 380], "114": [7, 380], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 380], "offscreenopenglcontext": 7, "opengl": [7, 378, 379], "global": [7, 36, 102, 106, 122, 123, 124, 128, 190, 236, 245, 261, 265, 304, 363, 366, 378, 379], "cuda_visible_devic": 7, "id": [7, 22, 46, 79, 81, 86, 87, 102, 105, 106, 122, 128, 260, 294, 329, 333, 373, 382], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 378], "onscreen": 7, "101": [7, 380], "correctli": [7, 36, 102, 106, 122, 128, 190], "lgl": 7, "libegl": 7, "x11": [7, 379], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 363], "n_training_step": 8, "datapoint": [8, 53, 382], "n_data_per_train": 8, "no_grad": [8, 36, 102, 106, 122, 128, 158, 190, 215, 216, 219, 220, 306, 307, 308, 309, 368, 369, 379], "loss_fn": [8, 369, 372, 373, 384], "zero_grad": [8, 36, 102, 106, 122, 128, 190, 363, 366, 368, 369, 372, 375, 378, 379, 380], "backpropag": [8, 98, 99, 111, 112, 122, 275, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 304, 372, 379, 380], "differenti": [8, 53, 98, 99, 158, 306, 307, 308, 309, 369, 371, 372, 378, 379, 380], "denomin": 8, "artifact": 8, "numer": [8, 44, 106, 188, 218, 243, 244, 248, 254, 255, 261, 262, 263, 264, 265, 341, 368, 382, 385], "misconcept": 8, "freed": 8, "appear": [8, 39, 60, 66, 79, 86, 87, 380, 382], "compuat": 8, "fix": [8, 27, 122, 178, 276, 292, 296, 367, 375, 380, 385], "retain_graph": [8, 98, 99], "discuss": [8, 9, 373, 378, 379], "inplac": [8, 36, 40, 42, 45, 102, 106, 122, 128, 190, 366], "onto": [8, 39, 40, 42, 45, 196, 248, 252, 254, 255, 260, 261, 262, 263, 264, 265, 369, 380], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 136, 138, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 163, 164, 165, 166, 167, 169, 172, 173, 176, 177, 178, 179, 181, 184, 185, 187, 188, 190, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 227, 228, 229, 231, 232, 233, 235, 236, 238, 239, 241, 245, 246, 252, 253, 255, 256, 259, 260, 261, 263, 264, 265, 268, 269, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 304, 306, 307, 308, 309, 310, 362, 380, 384], "submodul": [8, 36, 102, 106, 122, 128, 132, 178, 190, 217, 221, 272, 291], "param": [8, 36, 46, 102, 106, 118, 122, 128, 139, 146, 147, 148, 152, 158, 166, 167, 173, 176, 181, 190, 210, 212, 242, 253, 261, 264, 267, 291, 300, 303, 306, 307, 308, 309, 310, 366, 375, 378, 379, 380, 381, 384], "grad": [8, 36, 98, 99, 102, 106, 122, 128, 190, 366, 368], "whose": [8, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 46, 52, 54, 55, 102, 106, 122, 123, 124, 128, 146, 164, 178, 181, 182, 184, 186, 190, 231, 236, 264], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 41, 49, 78, 79, 142, 154, 165, 183, 285, 306, 308, 309, 362, 368, 378, 379, 380], "factor": [8, 23, 36, 169, 190, 218, 230, 243, 244, 252, 256, 257, 260, 276, 281, 284, 285, 287, 297, 312, 366, 367, 371, 375, 378, 379, 382, 385], "fit": [8, 11, 160, 178, 362, 363, 366], "bottlneck": 8, "brax": [8, 98, 99, 102, 106, 122, 128, 167, 370, 385], "jax": [8, 11, 98, 99, 111, 112], "improperli": 8, "underli": [8, 102, 106, 122, 128, 291, 370, 372, 374, 380], "tedeiou": 8, "priorit": [8, 41, 49, 78, 79, 278, 279, 281, 282, 283, 289, 294, 296, 298, 366, 367, 373], "amount": [8, 260, 367, 382], "costli": [8, 380], "constitut": [8, 367, 379, 380], "profil": 8, "frequent": [8, 382], "program": [8, 282, 289, 385], "functorch": [8, 10], "incl": 8, "suit": [8, 101, 368, 370, 384, 385], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 45, 52, 54, 55, 86, 87, 139, 264, 267, 291, 378, 379, 380, 382, 384], "new_shap": 8, "permut": [8, 85, 162, 384, 385], "idea": [9, 294, 363, 369, 371, 378, 379], "introductori": 9, "intro": [9, 368, 369], "dai": [9, 384], "2022": [9, 10, 380, 384], "spin": [9, 100, 101], "deep": [9, 142, 205, 206, 207, 208, 211, 260, 275, 288, 296, 297, 366, 378], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 371], "summari": [9, 160, 188, 366, 367, 368, 369], "reddit": 9, "reagent": 9, "orient": [9, 68, 385], "baselines3": 9, "tf": 9, "bandit": [9, 121], "tensorflow": [9, 225, 226], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 375], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 384], "grade": 9, "factori": [9, 51, 366], "cherri": 9, "jaxrl": 9, "mbrl": [9, 118, 361], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 380], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 368, 369, 378, 379], "notebook": [10, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385], "24": [10, 67, 87, 105, 119, 120, 259, 366, 367, 368, 378, 380], "pip3": [10, 366, 368, 369, 378, 379], "url": [10, 108], "org": [10, 13, 14, 23, 41, 63, 64, 66, 68, 78, 79, 98, 99, 100, 101, 108, 111, 112, 116, 117, 119, 120, 121, 125, 129, 130, 142, 164, 184, 204, 205, 206, 207, 208, 209, 212, 213, 214, 219, 224, 225, 226, 230, 232, 233, 236, 238, 239, 245, 255, 260, 275, 276, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 295, 296, 297, 306, 311, 319, 358, 376, 381], "whl": 10, "u": [10, 65, 215, 216, 219, 220, 380], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 291], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 78, 79, 81, 92, 98, 100, 101, 102, 104, 105, 106, 107, 108, 111, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 136, 138, 142, 149, 151, 157, 158, 160, 164, 165, 168, 173, 176, 177, 182, 184, 186, 187, 188, 190, 193, 197, 199, 200, 201, 211, 212, 217, 221, 223, 224, 227, 228, 229, 230, 231, 236, 237, 245, 248, 254, 255, 259, 261, 262, 263, 264, 265, 268, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 304, 305, 306, 307, 308, 309, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 351, 357, 367, 368], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 217, 221, 384], "longer": [11, 367, 375, 378, 379, 382], "x": [11, 22, 26, 36, 44, 46, 66, 87, 158, 180, 203, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 227, 228, 246, 254, 261, 262, 271, 274, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 343, 366, 378, 380, 382, 384], "23": [11, 67, 87, 366, 367, 368, 369, 378, 380, 381, 382], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 67, 98, 99, 106, 111, 112, 220, 274, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 366, 367, 368, 369, 375, 378, 379, 380, 382, 385], "otherwis": [11, 21, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 81, 86, 87, 98, 99, 102, 105, 106, 107, 108, 111, 112, 115, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 142, 143, 149, 160, 177, 178, 179, 182, 188, 190, 215, 218, 219, 227, 228, 243, 244, 254, 262, 268, 276, 286, 291, 292, 296, 306, 308, 309, 339, 340, 363, 366, 367, 368, 369, 380, 385], "classmethod": [11, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 45, 52, 54, 55, 102, 106, 122, 128, 184, 204, 235], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 32, 33, 34, 36, 40, 42, 44, 45, 67, 71, 79, 86, 87, 102, 103, 104, 105, 106, 107, 116, 117, 119, 122, 123, 124, 128, 129, 130, 131, 158, 178, 182, 187, 188, 190, 202, 203, 204, 205, 206, 207, 208, 209, 214, 222, 235, 261, 265, 296, 330, 331, 339, 348, 349, 355, 356, 357, 366, 367, 368, 382, 385], "setter": 11, "setter_dict": 11, "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 103, 122, 128, 366, 384], "device_typ": [13, 15, 16, 28, 34, 38, 39, 202, 203, 204, 205, 206, 207, 208, 214, 222, 227, 228, 229, 230, 235], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 367], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 367], "create_env_kwarg": [13, 14, 15, 16, 20, 103, 119, 122, 128, 366, 385], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 36, 169, 367, 382], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 291, 339, 366, 367, 368, 369, 371, 378, 384], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 194, 198, 261, 265, 339], "exploration_mod": [13, 15, 16, 17, 18, 19, 359, 361], "preemptive_threshold": [13, 14, 16], "num_thread": [13, 14, 16, 40, 42, 45, 122, 128], "num_sub_thread": [13, 14, 16, 122, 128], "set_trunc": [13, 14, 15, 16, 102, 106, 122, 128], "use_buff": [13, 14, 15, 122, 128], "datacollector": [13, 14, 15, 16, 36, 265, 293, 368, 373, 382], "recept": 13, "safe": [13, 14, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 79, 86, 248, 252, 254, 255, 260, 261, 262, 263, 264, 265, 267, 361, 384], "sota": [13, 14, 118, 155, 295, 334, 348, 366, 367, 368, 371, 372, 373, 378, 379, 384], "guard": [13, 14], "doc": [13, 14, 51, 108, 111, 112, 121, 125, 333, 367, 378, 379, 382, 385], "env_mak": [13, 14, 15, 20, 353, 385], "2000": [13, 14, 15, 36, 53, 109, 326, 368, 382], "50": [13, 14, 15, 20, 43, 46, 60, 68, 86, 87, 116, 117, 190, 365, 366, 367, 368, 369, 377, 378, 379, 380, 382, 383], "shutdown": [13, 14, 15, 16, 20, 139, 366, 384], "del": [13, 14, 15, 366, 367, 368, 377, 378, 384, 385], "int64": [13, 14, 15, 22, 28, 29, 34, 40, 42, 43, 45, 46, 47, 49, 51, 53, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 102, 106, 115, 116, 117, 121, 122, 123, 124, 126, 127, 128, 139, 151, 162, 169, 176, 212, 237, 254, 255, 260, 261, 262, 263, 361, 368, 369, 370, 371, 373, 374, 380, 382, 384], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 141, 246, 254, 259, 262, 369], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 53], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 367], "divis": [13, 14, 15, 16, 17, 18, 19, 60, 66, 79, 86, 87, 379], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 60, 106, 138, 178, 187, 221, 369, 380, 381], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 345, 367], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 69, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 119, 120, 122, 125, 128, 146, 147, 150, 158, 164, 178, 181, 182, 184, 186, 188, 190, 264, 370, 372, 373, 374, 378, 385], "span": [13, 14, 15, 16, 17, 18, 19, 20, 66, 86], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 36, 190, 259, 367, 368, 378, 379], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 46, 333, 361, 378, 379, 380], "round": [13, 14, 15, 16, 17, 18, 19, 20, 60], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 36, 64, 102, 106, 122, 128, 190], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 187, 384], "ratio": [13, 14, 16, 46, 366, 368], "finish": [13, 14, 16, 20, 106, 169, 385], "rest": [13, 14, 16, 361, 368, 369, 378, 380, 384], "earli": [13, 14, 16, 36, 106, 176, 384], "safeti": [13, 14, 16, 118, 122, 128], "harm": [13, 14, 16, 122, 128], "exclus": [13, 14, 56, 57, 60, 66, 79, 86, 87, 139, 152, 154, 215, 217, 219, 221, 225, 226, 254, 255, 262, 263, 297, 298, 306, 307, 308, 309, 310, 333, 357, 361], "add_truncated_kei": [13, 14, 15, 16, 102, 106, 122, 128, 182], "ordereddict": [13, 14, 15, 16, 20, 36, 102, 106, 122, 128, 182, 188, 190, 296, 367], "form": [13, 14, 16, 36, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 102, 106, 122, 128, 188, 190, 215, 217, 219, 221, 274, 275, 277, 290, 293, 343, 361, 371, 379], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 102, 106, 122, 128, 182], "integ": [13, 14, 15, 16, 22, 34, 35, 36, 39, 46, 55, 79, 86, 87, 88, 102, 106, 122, 128, 138, 151, 155, 160, 176, 202, 203, 222, 227, 228, 282, 289, 296, 382], "increment": [13, 14, 15, 16, 102, 106, 122, 128, 290], "env_fn": [13, 14, 15, 16, 103, 355, 356], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 86, 87, 207, 208, 380], "out_se": [13, 14, 15, 16, 385], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 25, 26, 36, 38, 40, 41, 42, 44, 45, 49, 50, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 77, 78, 79, 81, 86, 87, 88, 90, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 137, 139, 146, 164, 166, 175, 178, 181, 182, 183, 185, 186, 189, 190, 201, 202, 203, 205, 206, 207, 208, 211, 214, 217, 218, 221, 222, 223, 224, 227, 228, 234, 242, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 304, 305, 306, 307, 308, 309, 310, 324, 326, 330, 331, 333, 336, 343, 348, 349, 354, 355, 356, 362, 368, 379], "return_same_td": 15, "interruptor": 15, "cautious": [15, 293], "whole": [15, 26, 32, 36, 53, 102, 106, 122, 128, 182, 190, 261, 296, 334, 366, 368], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 371], "policy_state_dict": 15, "env_state_dict": 15, "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 343], "respect": [17, 18, 19, 36, 102, 106, 122, 128, 140, 146, 147, 150, 164, 165, 174, 178, 181, 182, 184, 186, 190, 215, 219, 227, 239, 264, 269, 275, 277, 290, 293, 295, 306, 308, 309, 338, 368, 369, 378, 379], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 360, 367, 368, 371, 374, 377, 382], "fashion": [17, 19, 20, 40, 42, 45, 87], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 60, 63, 64, 66, 67, 68, 102, 106, 122, 128, 154], "seen": [17, 18, 19, 20, 26, 32, 102, 106, 122, 128, 362, 366, 367, 369, 372, 378, 379, 382], "submitit_delai": [17, 21], "former": [17, 18, 19, 41, 44, 49, 50, 62, 102, 106, 122, 128, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 366], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 380], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 366], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 39, 60, 261, 265], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 355, 356, 366, 367], "coordin": 20, "init": [20, 36, 102, 106, 122, 128, 188, 190, 333, 367, 368], "autodetect": 20, "similarli": [20, 36, 85, 90, 102, 106, 122, 128, 190, 227, 266, 267, 282, 289, 385], "num_cpu": 20, "num_gpu": 20, "1024": [20, 209, 367, 382], "equat": [20, 66, 106, 260, 274, 277, 297, 368, 370, 380], "exce": [20, 382], "indefinit": [20, 59], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 343, 366, 368, 369], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 372], "jump": [21, 370], "host": [21, 36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 204, 209, 235, 253], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "rollout_tensordict": 22, "nestedkei": [22, 29, 33, 47, 53, 79, 86, 87, 102, 106, 122, 128, 133, 136, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 156, 157, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 184, 188, 190, 191, 199, 200, 252, 253, 256, 257, 259, 260, 265, 279, 304, 324, 326], "durat": [22, 379], "meta": [22, 40, 42, 45, 52, 62, 104, 108, 275, 277, 290, 293, 295, 363, 368, 378, 379, 382], "aren": [22, 177, 369], "deprec": [22, 36, 102, 106, 122, 128, 182, 190, 193, 197, 257, 275, 277, 279, 282, 283, 284, 289, 290, 293, 294, 295, 296, 304, 306, 307, 308, 309, 314, 385], "eventu": [22, 236, 369, 380], "supersed": 22, "recov": [22, 62, 64, 66, 67, 68, 86, 87, 252, 257, 260, 266, 282, 289, 377], "cat": [22, 269, 276, 278, 289, 294, 296, 298, 378, 382, 384], "arang": [22, 28, 39, 79, 212, 226, 254, 334, 361, 382], "obs_": 22, "trajectory_id": 22, "int32": [22, 50, 60, 66, 86, 111, 112, 196, 259, 382], "data_split": 22, "got": [22, 373], "init_kl_coef": 23, "horizon": [23, 116, 117, 129, 130, 201, 224, 368], "kl": [23, 27, 46, 158, 286, 290], "describ": [23, 52, 143, 181, 191, 242, 243, 279, 329, 362, 366, 368, 378, 379, 380, 385], "ziegler": 23, "et": [23, 201], "relax": [23, 324], "penalti": [23, 46, 290], "strai": [23, 46], "greater": [23, 60, 79, 86, 87, 217, 221, 366, 367, 384], "increas": [23, 71, 179, 260, 378, 379], "pull": [23, 382], "toward": [23, 186], "aggress": 23, "kl_coef": [23, 27, 46], "arxiv": [23, 41, 63, 66, 68, 78, 79, 98, 99, 100, 101, 111, 112, 116, 117, 119, 120, 125, 129, 130, 142, 164, 184, 204, 205, 206, 207, 208, 209, 212, 213, 214, 219, 224, 230, 232, 233, 236, 238, 239, 245, 255, 260, 275, 276, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 296, 297, 306, 311, 319, 381], "pdf": [23, 142, 204, 205, 206, 207, 208, 212, 255, 260, 284, 294, 297, 306, 311, 319], "1909": 23, "08593": 23, "lm": 23, "blob": 23, "master": [23, 378, 379], "lm_human_prefer": 23, "train_polici": 23, "kl_valu": 23, "coef": [23, 158], "newest": 23, "int8": [24, 102, 115, 123, 124, 140], "assert_is_in": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "clear_device_": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "op": [24, 25, 28, 34, 35, 38, 39, 52, 54, 55, 159, 187, 252, 256, 326, 345], "is_in": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 385], "encod": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 49, 50, 52, 54, 55, 98, 99, 102, 105, 107, 108, 111, 112, 119, 120, 125, 149, 233, 234, 238, 274, 361, 367, 368, 369, 371, 380, 382], "ndarrai": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 106, 260, 268, 324, 378], "ignore_devic": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "np": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 106, 268, 324, 378, 380], "complient": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "singleton": [24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 202, 203, 222, 240, 241], "start_dim": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "end_dim": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "implements_for_spec": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "torch_funct": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "tensor_to_index": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "project": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 149, 219, 248, 252, 254, 255, 260, 261, 262, 263, 264, 265, 333, 361, 384, 385], "rand": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 111, 112, 118, 136, 139, 147, 150, 166, 191, 201, 224, 261, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 296, 298, 380, 384, 385], "unbound": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 178, 196, 380, 382], "to_numpi": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 102, 106, 122, 128], "transformed_in": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 181, 182, 231, 242, 357], "check_spec_encod": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "to_one_hot": [24, 28, 34], "hot": [24, 28, 34, 35, 39, 98, 99, 105, 107, 108, 111, 112, 116, 117, 119, 120, 123, 124, 125, 129, 130, 136, 149, 212, 234, 237, 254, 255, 262, 263, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 369], "to_one_hot_spec": [24, 28, 34], "onehotdiscretetensorspec": [24, 28, 212, 237, 254, 262, 279, 281, 282, 283, 304, 359, 361, 371], "convert": [24, 28, 34, 35, 36, 37, 39, 40, 42, 45, 48, 53, 98, 99, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 146, 147, 150, 164, 178, 181, 182, 184, 186, 188, 190, 264, 274, 291, 366, 367, 368, 380, 382], "type_check": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "upper": [25, 84, 159], "unnam": [26, 40, 42, 45], "constraint": [26, 118, 368, 379], "pixels_spec": 26, "observation_vector_spec": 26, "composite_spec": 26, "observation_vector": [26, 143, 366], "td_project": 26, "is_empti": [26, 32, 380], "include_nest": [26, 32], "leaves_onli": [26, 32], "is_leaf": [26, 32], "_compositespecitemsview": [26, 32], "children": [26, 32, 36, 102, 106, 122, 128, 190], "_compositespeckeysview": [26, 32], "reflect": [26, 32, 107, 123, 124, 187, 199, 291, 346, 367, 368, 369, 379], "lock_": [26, 32], "recurs": [26, 32, 36, 56, 57, 102, 106, 122, 128, 190, 291], "succeed": [26, 32], "selected_kei": [26, 32, 173, 366], "unlock_": [26, 32], "unlock": [26, 32, 40, 42, 45], "_compositespecvaluesview": [26, 32], "multipli": [27, 215, 219, 276, 277, 283, 290, 292, 293, 294, 296, 341, 366, 378], "calcul": [27, 46, 169, 215, 275, 277, 281, 290, 293, 295], "onehottensorspec": [28, 98, 99, 105, 107, 108, 111, 112, 119, 120, 125], "action_valu": [28, 39, 211, 212, 237, 254, 255, 262, 263, 283, 291, 304, 361, 369, 371, 375], "argmax": [28, 102, 106, 122, 128, 212, 237, 255, 263, 371], "chosen_action_valu": [28, 39, 236, 237, 245, 262, 263, 304, 361, 369, 371], "outcom": [28, 39, 210, 242, 378], "shift_kei": [29, 31, 37, 47, 48], "is_full_kei": [29, 31, 37, 47, 48], "is_ful": [29, 31, 37, 47, 48], "tempfil": [29, 40, 41, 42, 44, 45, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 353, 366, 367, 378, 382], "register_save_hook": [29, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "temporarydirectori": [29, 40, 41, 42, 44, 45, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 366, 367, 378, 382], "tmpdir": [29, 41, 44, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 366, 367, 378], "rb_load": [29, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "register_load_hook": [29, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "persist": [30, 36, 102, 106, 122, 128, 182, 190, 199, 296], "filesystem": [30, 382], "ted2nest": [31, 359], "drawn": [32, 33, 178, 256, 261, 265, 368, 378, 379], "heterogen": [32, 33, 115, 123, 124, 192, 227, 228, 366, 367], "thrown": [33, 36, 102, 106, 122, 128, 190, 382], "nvec": [34, 35], "cardin": [34, 35, 212, 237, 254, 255, 263, 368], "ax": [34, 229, 230, 378], "m": [34, 36, 102, 106, 122, 128, 149, 190, 265, 361, 367, 380], "ts": [34, 35], "multionehotdiscretetensorspec": [34, 279, 282, 283, 304, 359], "use_regist": [35, 39], "to_categor": [35, 39], "to_categorical_spec": [35, 39], "multidiscretetensorspec": [35, 359], "gamma": [36, 169, 190, 224, 275, 276, 278, 279, 281, 283, 284, 285, 287, 289, 291, 293, 294, 295, 296, 298, 299, 300, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 353, 362, 366, 367, 368, 378, 379, 384], "sutton": [36, 362, 378, 379], "1988": 36, "tempor": [36, 217, 221, 224, 307, 308, 313, 314], "44": [36, 366, 367, 369, 380, 381], "discount": [36, 66, 103, 169, 190, 276, 281, 284, 285, 287, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 362, 367, 368, 378, 379], "ahead": [36, 190, 385], "bias": [36, 215, 216, 219, 220, 271, 362, 366], "mitig": 36, "pleas": [36, 64, 102, 105, 106, 122, 123, 124, 128, 139, 142, 179, 182, 190, 296, 360, 370, 372, 373, 374], "multisteptransform": [36, 359], "99": [36, 169, 188, 224, 287, 300, 305, 312, 353, 366, 367, 368, 372, 375, 378, 379, 380, 381, 384], "add_modul": [36, 102, 106, 122, 128, 190], "child": [36, 102, 106, 122, 128, 190, 367], "fn": [36, 43, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 190, 231, 355, 356], "init_weight": [36, 102, 106, 122, 128, 190], "fill_": [36, 102, 106, 122, 128, 190, 367, 369, 385], "net": [36, 102, 106, 122, 128, 190, 206, 208, 211, 214, 228, 275, 276, 283, 289, 293, 294, 295, 296, 353, 367, 380, 381, 384], "in_featur": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 202, 203, 205, 206, 207, 208, 214, 222, 227, 228, 229, 230, 249, 264, 272, 279, 281, 371, 372, 384], "out_featur": [36, 102, 106, 118, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 201, 202, 203, 205, 206, 207, 208, 213, 214, 217, 221, 222, 224, 227, 228, 229, 230, 249, 254, 264, 272, 279, 281, 361, 366, 369, 371, 372, 375, 384], "bia": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 202, 203, 205, 206, 207, 208, 213, 214, 215, 216, 217, 219, 220, 221, 222, 228, 229, 230, 231, 256, 257, 260, 264, 271, 273, 274, 291, 296, 362, 366, 367, 368, 369, 379, 384], "requires_grad": [36, 98, 99, 102, 106, 122, 128, 158, 182, 190, 296], "bfloat16": [36, 102, 106, 122, 128, 190], "datatyp": [36, 102, 106, 122, 128, 190, 382], "member": [36, 102, 106, 122, 128, 190, 291, 326], "xdoctest": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 291, 296], "buf": [36, 102, 106, 122, 128, 190], "20l": [36, 102, 106, 122, 128, 190, 291], "1l": [36, 102, 106, 122, 128, 190, 291], "5l": [36, 102, 106, 122, 128, 190, 291], "__call__": [36, 43, 102, 106, 122, 128, 190, 265, 363, 385], "doubl": [36, 54, 102, 106, 122, 128, 146, 147, 148, 150, 164, 178, 181, 182, 184, 186, 190, 264, 279, 284, 288, 294, 297, 304, 366, 367, 368, 369, 385], "eval": [36, 102, 106, 122, 128, 182, 188, 190, 366, 367, 368], "evalu": [36, 102, 106, 116, 117, 122, 128, 182, 190, 210, 225, 226, 234, 244, 294, 348, 349, 367, 368, 375], "dropout": [36, 102, 106, 122, 128, 182, 190, 215, 217, 219, 221, 222, 369], "batchnorm": [36, 102, 106, 122, 128, 182, 190], "disabl": [36, 102, 106, 122, 128, 182, 190, 218, 244, 324, 366, 378], "comparison": [36, 102, 106, 122, 128, 182, 190, 291, 366, 367], "similar": [36, 40, 42, 44, 45, 66, 102, 106, 122, 123, 124, 128, 146, 164, 178, 181, 182, 184, 185, 186, 188, 190, 249, 251, 261, 264, 265, 362, 366, 367, 368, 369, 371, 372, 373, 374, 380, 382, 385], "extra_repr": [36, 102, 106, 122, 128, 190], "nontermin": 36, "original_reward": 36, "newli": [36, 102, 106, 122, 128], "OR": 36, "get_buff": [36, 102, 106, 122, 128, 190], "get_submodul": [36, 102, 106, 122, 128, 190], "qualifi": [36, 102, 106, 122, 128, 190], "referenc": [36, 102, 106, 122, 128, 190], "attributeerror": [36, 102, 106, 122, 128, 190], "resolv": [36, 102, 106, 122, 128, 190], "someth": [36, 102, 106, 115, 122, 128, 190, 360, 367, 368, 380, 385], "get_extra_st": [36, 102, 106, 122, 128, 188, 190], "set_extra_st": [36, 102, 106, 122, 128, 188, 190], "picklabl": [36, 102, 106, 122, 128, 188, 190], "pickl": [36, 102, 106, 122, 128, 188, 190], "get_paramet": [36, 102, 106, 122, 128, 190], "net_b": [36, 102, 106, 122, 128, 190], "net_c": [36, 102, 106, 122, 128, 190], "conv": [36, 102, 106, 122, 128, 190, 202, 203, 367], "conv2d": [36, 102, 106, 122, 128, 190, 203, 205, 206, 214, 227, 384], "kernel_s": [36, 102, 106, 122, 128, 190, 202, 203, 205, 206, 214, 227, 232, 367, 384], "stride": [36, 102, 106, 122, 128, 190, 202, 203, 205, 206, 214, 227, 367, 378, 384], "diagram": [36, 102, 106, 122, 128, 190], "degre": [36, 102, 106, 122, 128, 190], "named_modul": [36, 102, 106, 122, 128, 190], "o": [36, 102, 106, 122, 128, 190, 220], "half": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 366], "ipu": [36, 102, 106, 122, 128, 190], "strict": [36, 40, 42, 45, 102, 106, 122, 128, 182, 190, 296], "descend": [36, 102, 106, 122, 128, 182, 190, 296], "get_swap_module_params_on_convers": [36, 102, 106, 122, 128, 182, 190, 296], "enforc": [36, 85, 102, 106, 122, 128, 182, 190, 266, 296, 380], "preserv": [36, 102, 106, 122, 128, 182, 190, 296], "missing_kei": [36, 102, 106, 122, 128, 182, 190, 296], "unexpected_kei": [36, 102, 106, 122, 128, 182, 190, 296], "namedtupl": [36, 102, 106, 122, 128, 182, 190, 296], "l": [36, 102, 106, 122, 128, 190, 215, 219, 305, 368, 380], "idx": [36, 102, 106, 122, 128, 190], "named_buff": [36, 102, 106, 122, 128, 190], "remove_dupl": [36, 102, 106, 122, 128, 190, 291], "prepend": [36, 102, 106, 122, 128, 190, 291], "running_var": [36, 102, 106, 122, 128, 190], "named_children": [36, 102, 106, 122, 128, 190], "conv4": [36, 102, 106, 122, 128, 190], "conv5": [36, 102, 106, 122, 128, 190], "memo": [36, 102, 106, 122, 128, 190], "named_paramet": [36, 102, 106, 122, 128, 158, 190, 291], "register_backward_hook": [36, 102, 106, 122, 128, 190], "removablehandl": [36, 102, 106, 122, 128, 190], "favor": [36, 102, 106, 122, 128, 190, 368], "register_full_backward_hook": [36, 102, 106, 122, 128, 190], "register_buff": [36, 102, 106, 122, 128, 190], "running_mean": [36, 102, 106, 122, 128, 190], "alongsid": [36, 102, 106, 122, 128, 190, 374], "num_featur": [36, 102, 106, 122, 128, 190], "register_forward_hook": [36, 102, 106, 122, 128, 190, 212, 237], "with_kwarg": [36, 102, 106, 122, 128, 190], "always_cal": [36, 102, 106, 122, 128, 190], "register_module_forward_hook": [36, 102, 106, 122, 128, 190], "regardless": [36, 102, 106, 122, 128, 190, 277, 290, 293], "register_forward_pre_hook": [36, 102, 106, 122, 128, 190], "invok": [36, 102, 106, 122, 128, 190], "And": [36, 102, 106, 122, 128, 190, 372], "forward_pr": [36, 102, 106, 122, 128, 190], "register_module_forward_pre_hook": [36, 102, 106, 122, 128, 190], "grad_input": [36, 102, 106, 122, 128, 190], "grad_output": [36, 102, 106, 122, 128, 190], "subsequ": [36, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 138, 190, 369, 378], "technic": [36, 102, 106, 122, 128, 190, 367, 369, 371], "caller": [36, 102, 106, 122, 128, 190], "register_module_full_backward_hook": [36, 102, 106, 122, 128, 190], "register_full_backward_pre_hook": [36, 102, 106, 122, 128, 190], "backward_pr": [36, 102, 106, 122, 128, 190], "register_module_full_backward_pre_hook": [36, 102, 106, 122, 128, 190], "register_load_state_dict_post_hook": [36, 102, 106, 122, 128, 190], "incompatible_kei": [36, 102, 106, 122, 128, 190], "register_modul": [36, 102, 106, 122, 128, 190, 363], "alia": [36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 81, 88, 90, 94, 102, 106, 122, 128, 190], "register_paramet": [36, 102, 106, 122, 128, 190], "register_state_dict_pre_hook": [36, 102, 106, 122, 128, 190], "keep_var": [36, 40, 42, 45, 102, 106, 122, 128, 182, 190, 296], "requires_grad_": [36, 102, 106, 122, 128, 190], "autograd": [36, 102, 106, 122, 128, 182, 190, 296], "freez": [36, 102, 106, 122, 128, 190], "finetun": [36, 102, 106, 122, 128, 190], "gan": [36, 102, 106, 122, 128, 190], "share_memori": [36, 102, 103, 106, 122, 128, 190, 366], "share_memory_": [36, 102, 106, 122, 128, 190, 384], "destin": [36, 40, 42, 45, 102, 106, 122, 128, 141, 147, 148, 150, 182, 184, 188, 190, 199, 296, 326], "averag": [36, 102, 106, 122, 128, 182, 188, 190, 260, 285, 286, 296, 341, 366, 368], "shallow": [36, 40, 42, 45, 102, 106, 122, 128, 182, 190, 296, 369], "detach": [36, 102, 106, 122, 128, 182, 190, 291, 296, 306, 307, 308, 309, 366], "non_block": [36, 40, 42, 45, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 369], "memory_format": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "channels_last": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "unchang": [36, 102, 106, 122, 128, 146, 149, 164, 178, 181, 182, 184, 186, 190, 256, 264, 340, 366, 382], "tri": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 374], "pin": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "4d": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "ignore_w": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "1913": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "3420": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "5113": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "2325": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "torch_doctest_cuda1": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "gpu1": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "1914": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "5112": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 380], "2324": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "float16": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 216, 220, 264], "cdoubl": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "3741": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "j": [36, 41, 78, 79, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 363, 372], "2382": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "5593": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264, 380], "4443": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "complex128": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "6122": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "1150": [36, 102, 106, 122, 128, 146, 164, 178, 181, 182, 184, 186, 190, 264], "to_empti": [36, 102, 106, 122, 128, 190], "dst_type": [36, 102, 106, 122, 128, 190], "xpu": [36, 102, 106, 122, 128, 190], "set_to_non": [36, 102, 106, 122, 128, 190], "row": [37, 48, 111, 112], "unidimension": 39, "keepdim": 39, "user_regist": 39, "priori": 39, "uniqu": [39, 86, 87, 116, 117, 142, 151, 177, 178, 179, 259, 333, 373, 382], "discretebox": [39, 102, 106, 122, 128, 371, 378, 379, 385], "chosen_data": [40, 69], "rewarddata": [40, 69, 359], "rejected_data": [40, 69], "from_dataset": [40, 42, 69], "dataset_nam": [40, 42, 46, 53, 69, 121], "max_length": [40, 42, 43, 51, 53, 69, 375], "550": [40, 42, 46, 53, 69, 86, 87, 380], "root_dir": [40, 42, 53, 69], "from_disk": [40, 42, 53, 69], "carperai": [40, 42, 46, 53], "openai_summarize_comparison": [40, 42, 53], "sequen": [40, 42], "load_from_disk": [40, 42, 53, 69], "load_dataset": [40, 42, 53, 69], "attention_mask": [40, 42, 43, 45, 46, 51, 53, 69], "92534": 40, "input_id": [40, 42, 43, 45, 46, 51, 53, 69], "end_scor": [40, 45, 46, 69], "sub_data": [40, 42], "from_tensordict": [40, 42, 45], "non_tensordict": [40, 42, 45], "axi": [40, 42, 45], "td_gather": [40, 42, 45], "_nodefault": [40, 42, 45], "getattr": [40, 42, 45], "tensorclass": [40, 42, 45, 69, 73, 74, 94], "load_memmap": [40, 42, 45], "fetch": [40, 42, 45, 98, 99, 100, 101, 158, 371, 381, 382], "fromkei": [40, 42, 45], "memmap": [40, 42, 45, 73, 122, 128, 188, 326, 328, 340, 382], "saved_td": [40, 42, 45], "td_load": [40, 42, 45], "fake": [40, 42, 45, 102, 106, 122, 128, 366, 367], "_subclass": [40, 42, 45], "faketensormod": [40, 42, 45], "faketensor": [40, 42, 45], "from_flatten": [40, 42, 45], "attemptedli": [40, 42, 45], "copy_exist": [40, 42, 45], "return_earli": [40, 42, 45], "share_non_tensor": [40, 42, 45], "mimic": [40, 42, 45, 102, 106, 122, 128], "cross": [40, 42, 45, 201], "anymor": [40, 42, 45, 182, 264], "tensordictfutur": [40, 42, 45], "deepli": [40, 42, 45], "insid": [40, 42, 45, 122, 385], "memmap_": [40, 42, 45, 188], "memmap_lik": [40, 42, 45], "contentless": [40, 42, 45], "1_000_000": [40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 86, 366, 369, 378], "alloc": [40, 42, 45, 74, 225, 226, 366], "additionali": [40, 42, 45], "setattr": [40, 42, 45], "tent": [40, 42, 45, 53], "to_tensordict": [40, 42, 45, 369], "unbind": [40, 41, 42, 44, 45, 49, 50, 217, 221], "alpha": [41, 49, 78, 79, 202, 203, 205, 206, 207, 208, 214, 227, 276, 283, 292, 294, 296, 366, 382, 384], "ep": [41, 49, 78, 79, 188, 260, 277, 297, 341, 366, 367, 369, 372, 375], "1e": [41, 49, 78, 79, 188, 210, 213, 231, 242, 366, 367, 368, 379], "08": [41, 49, 78, 79, 366, 367, 368, 378, 380], "pin_memori": [41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 163, 366, 384], "schaul": [41, 78, 79], "quan": [41, 78, 79], "antonogl": [41, 78, 79], "silver": [41, 78, 79], "2015": [41, 78, 79], "ab": [41, 63, 66, 68, 78, 79, 98, 99, 100, 101, 111, 112, 116, 117, 119, 120, 125, 129, 130, 141, 164, 184, 188, 204, 209, 213, 214, 219, 224, 230, 232, 233, 236, 238, 239, 245, 275, 276, 279, 280, 281, 282, 285, 286, 287, 288, 289, 292, 293, 296, 381], "1511": [41, 78, 79, 214], "05952": [41, 78, 79], "expon": [41, 49, 78, 79], "\u03b1": [41, 49, 78, 79], "delta": [41, 49, 78, 79, 215, 219, 242, 261, 265, 359, 362, 378], "null": [41, 49, 78, 79, 140], "1_000": [41, 44, 49, 50, 378, 382], "merg": [41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 380], "mini": [41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 379], "decid": [41, 44, 49, 50, 378, 384], "meth": [41, 44, 49, 50, 291, 380], "incompat": [41, 44, 49, 50, 295, 382], "drop_last": [41, 44, 49, 50, 85, 87], "notion": [41, 44, 49, 50], "caution": [41, 44, 49, 50, 85, 192, 385], "codebas": [41, 44, 49, 50, 380], "approach": [41, 44, 49, 50, 160, 366, 368, 372, 373, 378, 385], "return_info": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 382], "tensordictprioritizedreplaybuff": [41, 359, 384], "simplifi": [41, 371, 380, 382], "_weight": [41, 49, 78, 79, 382, 384], "arrai": [41, 46, 78, 102, 106, 122, 128, 151, 215, 216, 219, 220, 366, 378, 382], "update_prior": [41, 78, 79, 340, 363, 367, 382, 384], "36278465": 41, "invert": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 273, 368], "tqdm": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 343, 366, 368, 369, 378, 379, 380], "randomsampl": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 366, 378], "td_error": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 278, 279, 281, 282, 283, 284, 289, 291, 294, 296, 298, 304, 366, 372, 382, 384], "update_tensordict_prior": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 366, 382, 384], "insert_transform": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 137, 182], "insert": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 81, 82, 92, 93, 96, 97, 137, 146, 182, 183], "set_sampl": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "set_storag": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "set_writ": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "prompt_rindex": [42, 43, 46], "promptdatatldr": 42, "116722": 42, "prompt": [43, 46], "return_tensordict": [43, 51], "recip": [43, 102, 106, 122, 128, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271], "text": [43, 46, 51, 64, 215, 216, 219, 220, 260, 368], "tensodict": [43, 51], "orign": [43, 51], "valid_sampl": 43, "eough": 43, "toknen": 43, "meet": 43, "criterion": 43, "autotoken": [43, 51, 53], "from_pretrain": [43, 46, 51], "gpt2": [43, 46, 51, 53, 204, 209, 235], "pad_token": [43, 51], "eos_token": 43, "enough": [43, 382], "inde": [43, 149, 368, 380], "storagecheckpointerbas": [44, 88], "roundrobinwrit": [44, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68], "Not": [44, 98, 99, 111], "depth": [44, 102, 106, 118, 122, 125, 128, 201, 202, 203, 205, 206, 207, 208, 213, 214, 222, 224, 227, 228, 232, 233, 254, 361, 367, 370, 372, 373, 377, 378, 379, 382], "_pytre": [44, 382], "tree_map": [44, 382], "did": [44, 187, 312, 367, 368, 373, 382, 385], "assert0": [44, 382], "ref_model": 46, "reward_model": [46, 270], "max_new_token": 46, "score_clip": 46, "kl_schedul": 46, "klcontrollerbas": 46, "num_step": 46, "causal": 46, "sentenc": 46, "frozen": [46, 158], "gpt2rewardmodel": 46, "get_dataload": [46, 359], "promptdata": [46, 359], "gpt2lmheadmodel": 46, "dl": 46, "block_siz": [46, 69], "tensorclass_typ": [46, 69], "openai_summarize_tldr": 46, "config_class": 46, "model_path": 46, "rollout_from_model": 46, "rollout_from_data": 46, "600": [46, 374, 380, 382], "reward_kl": [46, 158], "reward_raw": 46, "sample_log_prob": [46, 249, 250, 251, 261, 265, 267, 293, 368, 371, 379, 384], "create_rollout_td": 46, "log_prob": [46, 210, 225, 226, 234, 244, 265], "log_ratio": 46, "replic": 46, "rindex": 46, "eo": 46, "term": [46, 158, 219, 220, 229, 230, 274, 275, 283, 345, 367, 368, 370, 371, 379], "generation_config": 46, "generationconfig": 46, "ti": [46, 315, 316, 317, 318, 320, 321, 322, 323, 367], "log_probs_gen": 46, "logprobs_of_label": 46, "220": [47, 380, 382], "priority_kei": [49, 50, 61, 78, 279, 282, 283, 284, 289, 291, 294, 296, 298, 304, 382, 384], "reduct": [49, 78, 79, 92, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 295, 296, 298], "prioritizedreplaybuff": [49, 359, 384], "min": [49, 78, 79, 92, 242, 243, 244, 253, 260, 276, 277, 283, 292, 294, 296, 367, 368, 378, 379], "median": [49, 78, 79, 92, 111, 112, 261, 265], "include_info": [49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68], "huggingfac": [51, 63, 68, 258], "co": [51, 151, 380], "pad_trunc": 51, "am": 51, "me": 51, "reassur": 51, "ok": 51, "tokenizer_fn": 53, "tensordicttoken": [53, 359], "pre_tokenization_hook": 53, "valid_s": 53, "tokenizer_class": 53, "tokenizer_model_nam": 53, "tokein": 53, "elementwis": 53, "vocabulari": 53, "loader": [53, 368], "185068": 53, "dataset_to_tensordict": 53, "data_dir": 53, "batch_dim": [53, 357], "valid_mask_kei": 53, "conver": 53, "batch_dimens": 53, "filder": 53, "from_dict": 53, "data_memmap": 53, "recurse_through_entri": 57, "recurse_through_stack": 57, "consolid": 57, "dataset_id": [60, 62, 63, 64, 66, 67, 68], "num_proc": 60, "slice_len": [60, 66, 79, 86, 87, 326], "strict_len": 60, "arari": 60, "2600": 60, "million": [60, 369], "consequ": [60, 71, 219, 373], "50x10": 60, "available_dataset": [60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 87], "ataridqn": 60, "immutabledatasetwrit": [60, 61, 62, 63, 64, 65, 66, 67, 68], "shorter": [60, 66, 79, 86, 87], "Be": [60, 66, 79, 86, 87], "game_nam": 60, "krull": 60, "1d": [60, 79, 86, 87, 92], "cheapli": 60, "nontensordata": [60, 66, 324], "invalid_rang": 60, "999998": 60, "999999": 60, "add_count": 60, "84": [60, 168, 367, 369, 378, 380], "valueestim": [60, 275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 300, 304, 359, 362, 366, 378, 379], "convolut": [60, 202, 203, 205, 206, 227, 240, 371], "2657628": 60, "2657629": 60, "2657630": 60, "2657631": 60, "2657632": 60, "2657633": 60, "2657634": 60, "2657635": 60, "2657636": 60, "2657637": 60, "2657638": 60, "2657639": 60, "2657640": 60, "2657641": 60, "2657642": 60, "2657643": 60, "2657644": 60, "2657645": 60, "2657646": 60, "2657647": 60, "2657648": 60, "2657649": 60, "2657650": 60, "2657651": 60, "2657652": 60, "2657653": 60, "2657654": 60, "2657655": 60, "2657656": 60, "2657657": 60, "2657658": 60, "2657659": 60, "2657660": 60, "2657661": 60, "2657662": 60, "2657663": 60, "2657664": 60, "2657665": 60, "2657666": 60, "2657667": 60, "2657668": 60, "2657669": 60, "2657670": 60, "2657671": 60, "2657672": 60, "2657673": 60, "2657674": 60, "2657675": 60, "2657676": 60, "2657677": 60, "2657678": 60, "2657679": 60, "2657680": 60, "2657681": 60, "2657682": 60, "2657683": 60, "2657684": 60, "2657685": 60, "2657686": 60, "2657687": 60, "2657688": 60, "2657689": 60, "2657690": 60, "2657691": 60, "1995687": 60, "1995688": 60, "1995689": 60, "1995690": 60, "1995691": 60, "1995692": 60, "1995693": 60, "1995694": 60, "1995695": 60, "1995696": 60, "1995697": 60, "1995698": 60, "1995699": 60, "1995700": 60, "1995701": 60, "1995702": 60, "1995703": 60, "1995704": 60, "1995705": 60, "1995706": 60, "1995707": 60, "1995708": 60, "1995709": 60, "1995710": 60, "1995711": 60, "1995712": 60, "1995713": 60, "1995714": 60, "1995715": 60, "1995716": 60, "1995717": 60, "1995718": 60, "1995719": 60, "1995720": 60, "1995721": 60, "1995722": 60, "1995723": 60, "1995724": 60, "1995725": 60, "1995726": 60, "1995727": 60, "1995728": 60, "1995729": 60, "1995730": 60, "1995731": 60, "1995732": 60, "1995733": 60, "1995734": 60, "1995735": 60, "1995736": 60, "1995737": 60, "1995738": 60, "1995739": 60, "1995740": 60, "1995741": 60, "1995742": 60, "1995743": 60, "1995744": 60, "1995745": 60, "1995746": 60, "1995747": 60, "1995748": 60, "1995749": 60, "1995750": 60, "left": [60, 62, 66, 86, 139, 146, 147, 148, 152, 158, 164, 166, 167, 173, 176, 179, 181, 184, 186, 190, 227, 256, 367, 368, 373, 374], "untouch": [60, 66, 139, 146, 147, 148, 152, 158, 166, 167, 173, 176, 181, 190], "_max_run": 60, "dataset_asterix": 60, "asterix": 60, "dataset_pong": 60, "sample_from_al": [60, 81, 84], "buffer_id": [60, 84, 90], "hidden": [60, 122, 128, 141, 205, 213, 215, 216, 217, 219, 220, 221, 232, 233, 238, 239, 249, 250, 251, 253, 264, 267, 277, 290, 293, 361, 369, 377, 384], "data_path": [60, 61, 62, 63, 64, 65, 66, 67, 68], "data_path_root": [60, 61, 62, 63, 64, 65, 66, 67, 68], "delet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 143, 333], "chunksiz": [60, 61, 62, 63, 64, 65, 66, 67, 68], "pool": [60, 61, 62, 63, 64, 65, 66, 67, 68, 179], "max_tasks_per_child": [60, 61, 62, 63, 64, 65, 66, 67, 68], "worker_thread": [60, 61, 62, 63, 64, 65, 66, 67, 68], "index_with_gener": [60, 61, 62, 63, 64, 65, 66, 67, 68], "pbar": [60, 61, 62, 63, 64, 65, 66, 67, 68, 366, 368, 369, 378, 379, 380], "dest": [60, 61, 62, 63, 64, 65, 66, 67, 68, 164, 184, 186, 264], "num_fram": [60, 61, 62, 63, 64, 65, 66, 67, 68], "unitari": [60, 61, 62, 63, 64, 65, 66, 67, 68, 380], "minariexperiencereplai": [60, 61, 62, 63, 65, 66, 67, 68], "1000000": [60, 61, 62, 63, 64, 65, 66, 67, 68], "distance_from_origin": [60, 61, 62, 63, 64, 65, 66, 67, 68], "forward_reward": [60, 61, 62, 63, 64, 65, 66, 67, 68], "qpo": [60, 61, 62, 63, 64, 65, 66, 67, 68], "qvel": [60, 61, 62, 63, 64, 65, 66, 67, 68], "reward_ctrl": [60, 61, 62, 63, 64, 65, 66, 67, 68, 106, 122], "reward_forward": [60, 61, 62, 63, 64, 65, 66, 67, 68], "reward_surv": [60, 61, 62, 63, 64, 65, 66, 67, 68], "x_posit": [60, 61, 62, 63, 64, 65, 66, 67, 68, 106, 122], "x_veloc": [60, 61, 62, 63, 64, 65, 66, 67, 68, 106, 122], "y_posit": [60, 61, 62, 63, 64, 65, 66, 67, 68], "y_veloc": [60, 61, 62, 63, 64, 65, 66, 67, 68], "achieved_go": [60, 61, 62, 63, 64, 65, 66, 67, 68], "desired_go": [60, 61, 62, 63, 64, 65, 66, 67, 68], "27": [60, 61, 62, 63, 64, 65, 66, 67, 68, 98, 99, 122, 128, 365, 367, 380, 383], "_collate_id": [60, 61, 62, 63, 64, 65, 66, 67, 68], "0x120e21dc0": [60, 61, 62, 63, 64, 65, 66, 67, 68], "cattensor": [60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 366, 377, 380, 385], "cat_tensor": [60, 61, 62, 63, 64, 65, 66, 67, 68], "cat_next_tensor": [60, 61, 62, 63, 64, 65, 66, 67, 68], "new_storag": [60, 61, 62, 63, 64, 65, 66, 67, 68], "31": [60, 61, 62, 63, 64, 65, 66, 67, 68, 111, 112, 366, 367, 378, 380, 381], "full_storag": [60, 61, 62, 63, 64, 65, 66, 67, 68], "0x168406fc0": [60, 61, 62, 63, 64, 65, 66, 67, 68], "from_env": 62, "use_truncated_as_don": 62, "direct_download": 62, "terminate_on_end": 62, "env_kwarg": [62, 67, 68, 139, 355, 356, 366], "reconstruct": [62, 86, 87, 286, 366, 385], "get_dataset": 62, "qlearning_dataset": 62, "fewer": [62, 86], "possess": 62, "unexpectedli": 62, "traj_split": 62, "observationnorm": [62, 188, 357, 366, 367, 368, 369, 384], "maze2d": 62, "umaz": 62, "loc": [62, 102, 106, 122, 128, 158, 160, 171, 218, 231, 243, 244, 249, 250, 251, 261, 265, 267, 275, 276, 289, 293, 294, 295, 296, 347, 357, 361, 366, 367, 368, 369, 371, 379, 384], "gen": 63, "dgrl": 63, "accompani": [63, 139, 176], "gap": 63, "2312": 63, "05742": 63, "gen_dgrl": 63, "procgen": 63, "bigfish": 63, "bossfight": 63, "categori": [63, 361, 363], "1m_e": 63, "1m_": 63, "comma": 63, "npy": 63, "extract": [63, 138, 258, 366, 368, 384], "mmap": [63, 67, 68], "minut": [63, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "internet": [63, 68], "connect": [63, 68], "minari": 64, "websit": [64, 66], "currenrtli": 64, "minari_data": 64, "door": 64, "torchrl_logg": [64, 375], "28": [64, 227, 365, 366, 367, 373, 380, 383], "door_body_po": 64, "dua": 65, "graff": 65, "2017": 65, "uci": 65, "archiv": 65, "ic": 65, "edu": 65, "ml": 65, "sklearn": [65, 121], "adult_num": [65, 121], "adult_onehot": [65, 121], "mushroom_num": [65, 121], "mushroom_onehot": [65, 121], "covertyp": [65, 121], "shuttl": [65, 121], "magic": [65, 121, 370], "shuffl": [66, 85, 87, 379], "embodi": [66, 381], "institut": 66, "demonstr": [66, 368, 373, 378, 379, 380, 382, 385], "527": [66, 380], "skill": 66, "160266": 66, "googl": [66, 67, 98, 99, 116, 117, 368, 369, 378, 379], "open_x_embodi": 66, "2310": [66, 125], "08864": 66, "language_instruct": 66, "get_non_tensor": 66, "neither": [66, 380], "nor": 66, "insuffici": 66, "chosen": [66, 129, 130, 177, 178, 236, 237, 245, 263, 326, 361, 374], "openx": 66, "__will": 66, "change__": 66, "randomli": [66, 85, 159, 160, 178, 256, 261, 265, 371, 378, 379, 380, 382], "crop": [66, 144, 165, 326], "modal": [66, 366], "cmu_stretch": [66, 326], "is_init": [66, 68, 141, 157, 217, 221, 259, 260, 272, 369], "language_embed": 66, "512": [66, 214, 367, 380], "lift": 66, "green": [66, 378], "garbag": 66, "lid": 66, "roboset": 67, "h5": [67, 68, 71], "roboh": [67, 125], "concis": [67, 372], "75": [67, 366, 367, 369, 380, 381], "totensor": 68, "image_s": 68, "v": [68, 188, 215, 216, 219, 220, 249, 282, 289, 296, 361, 366, 367], "npz": 68, "2206": [68, 119, 120], "04779": [68, 276, 281], "vd4rl": 68, "squar": [68, 144, 218, 243, 244, 326], "rectangular": [68, 202, 203], "walker_walk": 68, "64px": 68, "height": [68, 144, 168], "veloc": [68, 100, 101, 102, 106, 122, 128, 142, 378, 379, 380, 385], "infinit": [69, 116, 117, 129, 130, 373, 382], "block": [69, 72, 97, 361, 369, 378], "pairwisedataset": [69, 359], "256": [69, 116, 117, 209, 367, 368, 378, 379, 380], "checkpoint_fil": 71, "h5_kwarg": 71, "iff": 71, "suffix": [71, 339], "h5py": 71, "create_dataset": 71, "temporarili": [71, 192, 373, 382], "immut": [72, 102, 106, 122, 128, 167, 182], "piec": [72, 82, 93, 96, 97, 366, 367, 368, 374, 378, 379, 380, 382], "scratch_dir": [73, 366, 382], "sent": [73, 74, 94, 188], "mistak": [73, 74, 94], "myclass": [73, 74, 94], "foo": [73, 74, 94, 253, 382, 385], "bar": [73, 74, 94, 253, 336, 337, 339, 343, 363, 367], "attach": [73, 74, 75, 88, 90, 94, 367], "entiti": [73, 74, 75, 88, 90, 94], "zero_": [74, 94, 196], "liststoag": 76, "max_capac": [78, 79, 366, 382], "data_0": 78, "data_1": 78, "smoothen": 78, "tdrb": 78, "pack": [78, 215, 219, 368, 370, 385], "end_kei": [79, 86, 87], "cache_valu": [79, 86, 87], "readili": [79, 86, 87], "conjunct": [79, 86, 87, 367], "Will": [79, 86, 119, 326], "buffer0": [79, 86], "immutablewrit": [79, 86], "buffer1": [79, 86], "other_sampl": [79, 86], "short": [79, 86, 87, 98, 99, 111, 112, 122, 192, 219, 220, 367, 368, 370, 371, 379, 382], "unsqueez": [79, 136, 139, 142, 143, 180, 183, 366, 369, 378, 379, 380], "tolist": 79, "120110917137936e": 79, "06": [79, 210, 242, 366, 367, 368, 379, 380], "uniformli": [80, 291, 385], "storageensembl": [81, 84], "samplerensembl": 81, "writerensembl": [81, 90], "num_buffer_sampl": [81, 84], "ensembl": [81, 84, 90, 91, 97, 264, 294], "forbidden": 81, "collat": 81, "0x13a2ef430": 81, "0x13a2f9310": 81, "interpol": [81, 168, 367, 369], "interpolationmod": [81, 369], "bilinear": [81, 168, 369], "0x13a2f9220": 81, "0x13a2f9f70": 81, "0x13a2d9b50": 81, "0x13a2f95b0": 81, "0x128648260": 81, "kw": [82, 93], "roundrobin": [82, 93], "incomplet": [85, 87], "fresh": 85, "haven": [85, 381], "remain": [85, 141, 148, 149, 158, 177, 230, 372], "draw": [85, 256], "slicesamplerwithoutreplac": [86, 382], "320": [86, 87, 100, 101, 367, 380], "700": [86, 87], "dataid": [86, 87], "__len__": 88, "rank_kei": 92, "rank": [92, 201], "samplerwithoutreplac": [92, 368, 379, 382], "get_insert_index": 92, "convers": [98, 99, 111, 112, 362], "2106": [98, 99, 280], "13281": [98, 99], "categorical_action_encod": [98, 99, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128], "frame_skip": [98, 99, 100, 101, 105, 106, 107, 108, 111, 112, 113, 114, 119, 120, 125, 155, 336, 339, 346, 363, 366, 367, 368, 384], "repeat": [98, 99, 100, 101, 105, 107, 108, 111, 112, 119, 120, 125, 201, 368, 378, 379, 380], "allow_done_after_reset": [98, 99, 100, 101, 102, 105, 107, 108, 111, 112, 119, 120, 125], "toler": [98, 99, 100, 101, 105, 107, 108, 111, 112, 119, 120, 125, 210, 242], "availalb": [98, 99, 111, 112], "ant": [98, 99, 102, 106, 109, 122, 128, 381, 385], "87": [98, 99, 367, 380, 381], "acrobot": [98, 99, 100, 101, 385], "advant": [98, 99, 111, 112], "timer": [98, 99, 111, 112], "timeit": [98, 99, 111, 112], "310": [98, 99, 365, 380, 383], "ms": [98, 99, 111, 112], "268": [98, 99, 380], "433": [98, 99, 380], "80": [98, 99, 366, 367, 368, 378, 379, 380, 381], "213": [98, 99, 380], "8605": [98, 99], "pipelineenv": 99, "get_environ": 99, "dm_control": [100, 101, 366, 377, 385], "2006": [100, 101, 276, 281, 380], "12983": [100, 101], "task_nam": [100, 102, 106, 122, 128], "pixels_onli": [100, 101, 105, 107, 108, 125, 366, 367, 374, 375, 384, 385], "cheetah": [100, 101, 102, 106, 122, 128, 326, 366], "240": [100, 101, 380, 384], "swingup": [100, 101, 385], "swingup_spars": [100, 101], "ball_in_cup": [100, 101], "catch": [100, 101], "balance_spars": [100, 101], "three_pol": [100, 101], "two_pol": [100, 101], "finger": [100, 101], "turn_easi": [100, 101], "turn_hard": [100, 101], "fish": [100, 101], "upright": [100, 101, 367], "swim": [100, 101], "hopper": [100, 101], "hop": [100, 101], "humanoid": [100, 101, 122, 128, 377], "walk": [100, 101, 122, 128, 367, 377], "run_pure_st": [100, 101], "bring_bal": [100, 101], "bring_peg": [100, 101], "insert_bal": [100, 101], "insert_peg": [100, 101], "point_mass": [100, 101], "reacher": [100, 101], "swimmer": [100, 101], "swimmer6": [100, 101], "swimmer15": [100, 101], "walker": [100, 101], "dog": [100, 101], "trot": [100, 101], "humanoid_cmu": [100, 101], "lqr": [100, 101], "lqr_2_1": [100, 101], "lqr_6_2": [100, 101], "quadrup": [100, 101], "escap": [100, 101], "stacker": [100, 101], "stack_2": [100, 101], "stack_4": [100, 101], "deviceless": [102, 370, 372, 373, 374], "run_type_check": [102, 118], "counterenv": 102, "continuousbox": [102, 106, 122, 128, 196, 368, 378, 379, 380, 384, 385], "sort": [102, 106, 122, 128, 143, 260], "another_act": [102, 106, 122, 128], "mutabl": [102, 106, 122, 128], "_callabletransform": [102, 106, 122, 128], "batch_lock": [102, 104, 106, 122, 128, 139, 178, 182, 380], "done_keys_group": [102, 106, 122, 128], "outer": [102, 106, 122, 128, 363, 366, 367, 385], "another_don": [102, 106, 122, 128], "empty_cach": [102, 106, 122, 128, 182], "fake_tensordict": [102, 106, 122, 128, 367], "afterward": [102, 106, 122, 128, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271, 378, 385], "silent": [102, 106, 122, 128, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 231, 232, 233, 235, 238, 239, 241, 246, 252, 253, 255, 256, 259, 260, 263, 268, 271], "braxenv": [102, 106, 122, 128, 167, 359, 370], "envnam": [102, 106, 122, 128], "pipeline_st": [102, 106, 122, 128], "attibut": [102, 106, 122, 128], "maybe_reset": [102, 106, 122, 128], "speak": [102, 106, 122, 128, 366], "rand_act": [102, 106, 115, 122, 123, 124, 128, 139, 370], "register_gym": [102, 106, 122, 128, 370], "entry_point": [102, 106, 122, 128], "info_kei": [102, 106, 122, 128], "reward_threshold": [102, 106, 122, 128], "nondeterminist": [102, 106, 122, 128], "max_episode_step": [102, 105, 106, 107, 122, 128], "order_enforc": [102, 106, 122, 128], "autoreset": [102, 106, 122, 128], "disable_env_check": [102, 105, 106, 119, 120, 122, 128], "apply_api_compat": [102, 106, 122, 128], "nasium": [102, 106, 122, 128], "scope": [102, 106, 122, 128, 385], "dmcontrolenv": [102, 106, 122, 128, 326, 359, 366, 370, 377, 385], "dmc": [102, 106, 122, 128], "removeemptyspec": [102, 106, 122, 128], "threshold": [102, 106, 122, 128, 256, 276, 277, 368], "learnt": [102, 106, 122, 128, 353], "knowledg": [102, 106, 122, 128, 372], "checker": [102, 105, 106, 119, 120, 122, 128], "stepapicompat": [102, 106, 122, 128], "concept": [102, 106, 122, 128, 367, 382], "deem": [102, 106, 116, 117, 122, 128, 129, 130], "envgym": [102, 106, 122, 128], "0855": [102, 106, 122, 128], "0215": [102, 106, 122, 128], "0881": [102, 106, 122, 128], "0412": [102, 106, 122, 128], "1101": [102, 106, 122, 128], "0080": [102, 106, 122, 128], "0254": [102, 106, 122, 128], "0424": [102, 106, 122, 128], "9609e": [102, 106, 122, 128], "9776e": [102, 106, 122, 128], "04": [102, 106, 110, 122, 128, 365, 366, 367, 368, 380, 383], "6347e": [102, 106, 122, 128], "3842e": [102, 106, 122, 128], "5338e": [102, 106, 122, 128], "3064e": [102, 106, 122, 128], "0381e": [102, 106, 122, 128], "6656e": [102, 106, 122, 128], "05": [102, 106, 122, 128, 366, 367, 378, 380], "0204e": [102, 106, 122, 128], "action_spac": [102, 106, 122, 128, 151, 212, 237, 254, 255, 262, 263, 275, 276, 278, 279, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 369, 371, 375], "0833": [102, 106, 122, 128], "0275": [102, 106, 122, 128], "0612": [102, 106, 122, 128], "0770": [102, 106, 122, 128, 380], "1256": [102, 106, 122, 128, 380], "0082": [102, 106, 122, 128], "0186": [102, 106, 122, 128], "0476": [102, 106, 122, 128], "2221": [102, 106, 122, 128], "2256": [102, 106, 122, 128], "5930": [102, 106, 122, 128], "6937": [102, 106, 122, 128], "5865": [102, 106, 122, 128], "5479": [102, 106, 122, 128], "0187": [102, 106, 122, 128], "6825": [102, 106, 122, 128, 380], "5224": [102, 106, 122, 128], "0018": [102, 106, 122, 128, 380], "1005": [102, 106, 122, 128], "0335": [102, 106, 122, 128], "0268": [102, 106, 122, 128, 380], "0133": [102, 106, 122, 128], "0627": [102, 106, 122, 128], "0074": [102, 106, 122, 128, 380], "0488": [102, 106, 122, 128, 380], "0353": [102, 106, 122, 128], "0075": [102, 106, 122, 128, 380], "0069": [102, 106, 122, 128, 380], "0098": [102, 106, 122, 128, 380], "0058": [102, 106, 122, 128, 380], "0033": [102, 106, 122, 128, 380], "0157": [102, 106, 122, 128], "0004": [102, 106, 122, 128, 369, 380], "0381": [102, 106, 122, 128], "0452": [102, 106, 122, 128], "11355747": [102, 106, 122, 128], "04257728": [102, 106, 122, 128], "00408397": [102, 106, 122, 128], "04155852": [102, 106, 122, 128], "0389733": [102, 106, 122, 128], "01409826": [102, 106, 122, 128], "0978704": [102, 106, 122, 128], "08808327": [102, 106, 122, 128], "03970837": [102, 106, 122, 128], "00535434": [102, 106, 122, 128], "02353762": [102, 106, 122, 128], "05116226": [102, 106, 122, 128], "02788907": [102, 106, 122, 128], "06848346": [102, 106, 122, 128], "05154399": [102, 106, 122, 128], "0371798": [102, 106, 122, 128], "05128025": [102, 106, 122, 128], "dydact": [102, 106, 122, 128], "gym_env": [102, 106, 122, 128, 384], "reset_kei": [102, 106, 122, 128, 142, 172, 177, 178, 179, 378], "multitask": [102, 106, 122, 128], "multiag": [102, 106, 115, 122, 123, 124, 128, 200, 228, 236, 245, 304], "another_reward": [102, 106, 122, 128], "auto_cast_to_devic": [102, 106, 122, 128, 379], "soon": [102, 106, 122, 123, 124, 128], "__sort": [102, 106, 122, 128], "as__": [102, 106, 122, 128], "normal": [102, 106, 122, 128, 160, 188, 202, 203, 218, 222, 225, 226, 231, 243, 244, 252, 261, 265, 277, 290, 293, 339, 341, 357, 361, 363, 369, 371, 379, 385], "argmaxmodul": [102, 106, 122, 128], "n_ob": [102, 106, 122, 128, 158, 259, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 372], "n_act": [102, 106, 122, 128, 158, 275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 372], "ourselv": [102, 106, 122, 128, 368, 385], "emul": [102, 106, 122, 128], "epoch": [102, 106, 122, 128, 343, 368, 378, 379], "input_td": [102, 106, 122, 128], "rollout_td": [102, 106, 122, 128], "state_kei": [102, 106, 122, 128], "prevail": [102, 106, 122, 128, 143, 172, 200], "creator": [103, 348, 349, 355, 356, 357], "substitut": [103, 177, 188, 371], "vecnorm": [103, 357], "env_creat": [103, 366], "test_env1": 103, "_td": 103, "observation_count": [103, 385], "test_env2": 103, "sleep": [103, 385], "ps": 103, "p1": 103, "p2": 103, "9934": 103, "env_str": 104, "device_map": 104, "accross": [105, 107], "registri": 105, "asyncvectorenv": 105, "involv": [105, 107, 108, 116, 117, 125, 139, 370, 372], "pixel_observ": [105, 107, 108, 125], "pixelobservationwrapp": [105, 107, 108, 125], "adventur": [105, 107], "airraid": [105, 107, 385], "alien": [105, 107], "time_limit": 105, "timelimit": [105, 116, 117, 129, 130], "default_info_dict_read": [105, 106, 107, 122], "reader": [105, 106, 107, 122, 367], "set_info_dict_read": [105, 106, 107, 122, 370], "info_dict": [105, 106, 107, 122], "auto_register_info_dict": [105, 106, 107, 122], "multibinari": [105, 107], "multidiscret": [105, 107], "rag": [105, 107], "nested_tensor": [105, 107], "gym_conversion_exampl": [105, 107], "info_dict_read": [106, 122], "ignore_priv": 106, "baseinfodictread": 106, "tensordictprim": [106, 122, 217, 221, 272, 369], "succe": [106, 122], "underscor": 106, "primer": [106, 178, 217, 221, 272, 369], "halfcheetah": [106, 122, 168, 366], "reward_run": [106, 122], "read_act": 106, "read_don": 106, "nonsens": 106, "fallback": 106, "broken": [106, 192], "read_ob": 106, "dictat": [106, 261, 265, 293, 366, 380], "read_reward": 106, "hoc": [106, 122, 371], "dict_read": 106, "my_info_kei": 106, "some_env": 106, "vecenv": 107, "vectorenv": 107, "secur": 108, "habitat3": 108, "ai": [108, 381], "habitatrenderpick": 108, "isaacgym": [109, 110], "isaacgymwrapp": [109, 359], "isaacgymenv": [110, 359], "webpag": 110, "isaac": 110, "essenc": [110, 370], "instadeepai": [111, 112], "2306": [111, 112], "09884": [111, 112], "snake": [111, 112], "grid": [111, 112, 326], "bodi": [111, 112], "body_st": [111, 112], "fruit_posit": [111, 112], "col": [111, 112], "head_posit": [111, 112], "tail": [111, 112], "game2048": [111, 112], "maze": [111, 112], "cleaner": [111, 112], "cvrp": [111, 112], "multicvrp": [111, 112], "minesweep": [111, 112], "rubikscub": [111, 112], "knapsack": [111, 112], "sudoku": [111, 112], "tsp": [111, 112], "connector": [111, 112], "v2": [111, 112, 126, 127, 301, 315, 316, 317, 318, 320, 321, 322, 323, 369, 385], "mmst": [111, 112], "graphcolor": [111, 112], "partli": [111, 112], "scrambl": [111, 112], "robotwarehous": [111, 112], "tetri": [111, 112], "binpack": [111, 112], "jobshop": [111, 112], "0x1fca91910": 111, "122": [111, 112, 365, 380, 382, 383, 385], "0x1ff9baee0": 111, "134": [111, 112, 380], "0x1ff9ba7c0": 111, "172": [111, 112, 380], "drastic": [112, 122, 382], "rubric": [112, 160, 267], "mo": [113, 114], "minecart": [113, 114], "mo_gym": 114, "qualnam": 115, "leverag": [115, 123, 124, 366, 379, 385], "neural": [115, 123, 124, 202, 203, 240, 264, 361, 367, 368, 369, 371, 378, 379, 380, 385], "group_map": [115, 116, 117, 123, 124, 129, 130, 131, 378], "constructiuon": [115, 123, 124], "premad": [115, 116, 117, 123, 124, 129, 130, 304], "all_in_one_group": [115, 131], "agent_0": [115, 123, 124, 131, 378], "agent_1": [115, 123, 124, 131], "agent_2": [115, 123, 124, 131], "agent_3": 115, "one_group_per_ag": [115, 123, 124], "meltingpot": [116, 117], "2211": [116, 117], "13746": [116, 117], "melt": [116, 117], "pot": [116, 117], "novel": [116, 117, 372], "social": [116, 117], "familiar": [116, 117, 367, 379, 385], "unfamiliar": [116, 117], "broad": [116, 117], "cooper": [116, 117, 378, 379], "decept": [116, 117], "reciproc": [116, 117], "trust": [116, 117, 221], "stubborn": [116, 117], "substrat": [116, 117], "ml_collect": 116, "config_dict": 116, "configdict": 116, "categorical_act": [116, 117, 123, 124, 126, 127, 129, 130], "marlgroupmaptyp": [116, 117, 123, 124, 129, 130, 131, 359, 378], "agent_nam": [116, 117, 129, 130, 131], "agent_names_to_indices_map": [116, 117, 129, 130], "env_torchrl": [116, 117], "commons_harvest__open": [116, 117], "rgb": [116, 117], "144": [116, 117, 380], "192": [116, 117, 367, 380], "collective_reward": [116, 117], "ready_to_shoot": [116, 117], "88": [116, 117, 126, 127, 366, 367, 380, 381, 382], "substrate_config": 117, "get_config": 117, "mp_env": 117, "build_from_config": 117, "default_player_rol": 117, "environn": 118, "mymbenv": [118, 201, 224], "world_model": [118, 201, 224, 286], "hidden_observ": [118, 201, 224], "mlp": [118, 201, 202, 203, 205, 206, 207, 208, 214, 217, 221, 224, 228, 249, 254, 272, 279, 281, 361, 367, 371, 372, 375, 377, 381, 384], "worldmodelwrapp": [118, 201, 224], "activation_class": [118, 201, 202, 203, 205, 206, 207, 208, 213, 214, 222, 224, 227, 228, 367, 371, 378, 379, 384], "relu": [118, 201, 209, 224, 231, 274], "activate_last_lay": [118, 201, 208, 222, 224], "sail": [119, 120], "sg": [119, 120], "10558": [119, 120], "readthedoc": 119, "en": 119, "python_interfac": 119, "envpoolmixin": 120, "env_bas": 120, "task_id": 120, "env_typ": 120, "gym_reset_return_info": 120, "envpool_env": 120, "www": [121, 225, 226], "fetch_openml": 121, "106": [121, 380], "my_env_fun": [122, 128], "custom_attribute_list": [122, 128], "custom_attribut": [122, 128], "custom_method_list": [122, 128], "custom_method": [122, 128], "deploi": [122, 128, 139], "slight": [122, 128, 367], "share_individual_td": [122, 128], "shared_memori": [122, 128], "policy_proof": [122, 128], "ll": [122, 128, 215, 216, 219, 220, 366, 367, 368, 369, 370, 371, 372, 373, 375, 379, 385], "serial_for_singl": [122, 128, 367], "circular": [122, 128, 366], "list_of_kwarg": [122, 128], "com_veloc": [122, 128], "extrem": [122, 128, 275, 277, 290, 293, 295], "head_height": [122, 128], "joint_angl": [122, 128], "torso_vert": [122, 128], "stringent": [122, 368, 378, 379], "inter": 122, "penv": 122, "env_fix": 122, "influenc": 122, "thumb": [122, 368], "suppos": [122, 339, 363, 385], "myenv": [122, 139, 147, 150], "pipe": 122, "update_kwarg": [122, 128], "pettingzoo": [123, 124, 378, 379], "pet": [123, 124], "zoo": [123, 124], "__": [123, 124], "aecenv": [123, 124], "use_mask": [123, 124], "dead": [123, 124], "done_on_ani": [123, 124, 378], "compulsori": [123, 124], "adversary_0": [123, 124, 378], "adversari": [123, 124, 378], "vectoris": [123, 124, 215, 216, 219, 220], "sisl": 123, "multiwalker_v9": 123, "return_st": [123, 124], "aec": [123, 124], "n_piston": [123, 124], "pistonball_v6": [123, 124], "piston": [123, 124], "piston_0": [123, 124], "piston_1": [123, 124], "piston_20": [123, 124], "tictactoe_v3": [123, 124], "player": [123, 124], "player_1": [123, 124], "player_2": [123, 124], "butterfli": 124, "parallel_env": [124, 366, 384, 385], "vikashplu": 125, "wiki": 125, "06828": 125, "from_depth": 125, "smacv2": [126, 127], "starcraft": [126, 127], "challeng": [126, 127, 370, 380, 381], "10gen_terran": [126, 127], "10gen_zerg": [126, 127], "10gen_protoss": [126, 127], "3m": [126, 127], "8m": [126, 127, 381], "25m": [126, 127], "5m_vs_6m": [126, 127], "8m_vs_9m": [126, 127], "10m_vs_11m": [126, 127], "27m_vs_30m": [126, 127], "mmm": [126, 127], "mmm2": [126, 127], "2s3z": [126, 127], "3s5z": [126, 127], "3s5z_vs_3s6z": [126, 127], "3s_vs_3z": [126, 127], "3s_vs_4z": [126, 127], "3s_vs_5z": [126, 127], "1c3s5z": [126, 127], "2m_vs_1z": [126, 127], "corridor": [126, 127], "6h_vs_8z": [126, 127], "2s_vs_1sc": [126, 127], "so_many_banel": [126, 127], "bane_vs_ban": [126, 127], "2c_vs_64zg": [126, 127], "old": [126, 127, 290, 385], "smac": [126, 127], "map_nam": [126, 127], "176": [126, 127, 380, 385], "battle_won": [126, 127], "dead_al": [126, 127], "dead_enemi": [126, 127], "episode_limit": [126, 127], "322": [126, 127, 380], "Or": [126, 127, 227], "procedur": [126, 127], "distribution_config": [126, 127], "n_unit": [126, 127], "n_enemi": [126, 127], "team_gen": [126, 127], "dist_typ": [126, 127], "weighted_team": [126, 127], "unit_typ": [126, 127], "marin": [126, 127], "maraud": [126, 127], "medivac": [126, 127], "exception_unit_typ": [126, 127], "start_posit": [126, 127], "surrounded_and_reflect": [126, 127], "map_x": [126, 127], "map_i": [126, 127], "capability_config": [126, 127], "131": [126, 127, 380], "starcraft2env": 127, "proroklab": [129, 130], "vectorizedmultiagentsimul": [129, 130], "2207": [129, 130], "03530": [129, 130], "basescenario": 129, "descript": [129, 138, 367, 368], "perfrom": [129, 130], "defaultt": 129, "continuous_act": [129, 130, 324, 378, 379], "repositiori": 129, "sparsiti": 129, "unbatched_action_spec": [129, 130, 379], "unbatched_observation_spec": [129, 130], "unbatched_reward_spec": [129, 130], "het_spec": [129, 130], "het_specs_map": [129, 130], "flock": [129, 130, 324], "agent_collision_rew": [129, 130], "agent_distance_rew": [129, 130], "ca": 131, "environment4": 131, "get_group_map": 131, "sumbodul": 132, "model_bas": [133, 134, 201, 224], "out_keys_inv": [133, 145, 147, 148, 150, 160, 161, 162, 166, 167, 174, 181, 380], "decod": [133, 232], "model_based_env": [133, 285], "dreamerenv": [133, 285, 359], "model_based_env_ev": 133, "masker": 136, "tensor_spec": [136, 191, 200, 282, 283, 293, 295], "maskedenv": 136, "ones_lik": 136, "scatter": 136, "fill_float": 138, "fill_int": 138, "fill_bool": 138, "someenvclass": 138, "autoresetenv": 138, "argumet": 138, "fooenv": 138, "sign": [138, 174, 306, 378], "envtyp": 138, "reshape_fn": 139, "reset_func": 139, "environmt": 139, "request": [139, 165], "tensordict_batch_s": 139, "els": [139, 215, 216, 219, 220, 232, 361, 363, 366, 367, 368, 369, 378, 379, 380, 381], "tensordict_reset": [139, 380], "transform_env_batch_s": [139, 146, 181, 190], "transform_input_spec": [139, 146, 147, 148, 149, 160, 162, 166, 167, 172, 176, 177, 178, 181, 183, 185, 190], "transform_output_spec": [139, 146, 147, 148, 152, 158, 166, 167, 173, 176, 181, 190], "transform_observation_spec": [139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 156, 157, 158, 160, 162, 166, 167, 168, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 187, 188, 190, 380], "transform_reward_spec": [139, 140, 145, 146, 147, 148, 152, 158, 166, 167, 170, 171, 172, 173, 174, 176, 181, 183, 190], "transformfull_done_spec": [139, 146, 147, 148, 152, 158, 166, 167, 173, 176, 181, 190], "biner": 140, "burn_in": 141, "burn": 141, "date": [141, 329], "retur": 141, "burnt": 141, "gru_modul": [141, 217, 272], "input_s": [141, 215, 216, 217, 219, 220, 221, 272, 369], "hidden_s": [141, 215, 216, 217, 219, 220, 221, 272, 369], "set_recurrent_mod": [141, 217, 221, 369], "burn_in_transform": 141, "gru": [141, 178, 216, 217, 272], "num_lay": [141, 215, 217, 219, 221, 232, 233, 272], "86": [141, 367, 380], "3008": [141, 367], "0344": 141, "padding_valu": [142, 225, 226], "as_invers": 142, "movement": 142, "1312": [142, 367], "5602": 142, "unsqueezetransform": [142, 380, 382], "consumpt": [142, 359], "followin": 142, "pictur": 142, "pixels_trsf": [142, 382], "grayscal": [142, 367, 369, 382, 385], "data_exclud": [142, 382], "del_kei": [143, 184, 377, 380], "unsqueeze_if_oor": 143, "observation_posit": 143, "observation_veloc": 143, "key1": [143, 334, 342], "key2": [143, 334, 342], "center": [144, 326], "width": [144, 168], "scalar": [145, 170, 206, 208, 229, 230, 252, 256, 257, 260, 271, 275, 276, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 304, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 361, 367, 372, 380], "permit": [145, 154, 183, 275, 277, 290, 293, 295], "rewardsc": [146, 182, 366, 367, 369], "rewardclip": 146, "transformed_env": [146, 181, 182, 370], "transform_env_devic": [146, 148, 181, 190], "dtype_in": 147, "dtype_out": 147, "scan": [147, 150, 266, 267], "resp": [147, 150], "not_transform": [147, 150], "constructedw": [147, 150], "orig_devic": 148, "unspecifi": 148, "transform_done_spec": [148, 181, 190], "num_actions_effect": 149, "max_act": 149, "include_forward": 149, "num_act": [149, 283, 371], "action_out": 149, "_call": [149, 154, 380], "eol_kei": 151, "lives_kei": 151, "eol_attribut": 151, "unwrap": 151, "breakout": 151, "210": [151, 162, 380], "160": [151, 162, 366, 367, 380], "eol_transform": 151, "eol": 151, "dqnloss": [151, 275, 276, 278, 281, 283, 284, 285, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 304, 350, 359, 362, 367, 369, 375], "register_kei": 151, "loss_or_advantag": 151, "lossmodul": [151, 343, 352, 353, 359], "valueestimatorbas": [151, 291, 359], "excluded_kei": 152, "finit": [153, 371, 382], "first_dim": 154, "last_dim": 154, "allow_positive_dim": [154, 183], "th": [154, 183, 215, 219, 380], "frameskip": 154, "repeatedli": [155, 368, 379], "init_kei": [157, 259], "tracker": 157, "pi_curr": 158, "pi_0": 158, "overfit": 158, "probabilist": [158, 261, 359, 368, 384], "get_dist": [158, 265, 266], "mod": [158, 217, 221, 259, 268, 369, 375], "normalparamextractor": [158, 361, 368, 371, 379], "probabilisticactor": [158, 249, 250, 251, 253, 275, 276, 280, 282, 283, 289, 292, 293, 294, 295, 296, 298, 361, 366, 368, 371, 378, 379], "tanhnorm": [158, 249, 250, 251, 261, 267, 275, 276, 289, 293, 294, 295, 296, 298, 359, 368, 379, 384], "return_log_prob": [158, 249, 250, 251, 261, 265, 267, 295, 361, 368, 371, 378, 379, 384], "apply_": 158, "copy_": [158, 366], "formulat": 158, "diverg": [158, 217, 221, 261, 265, 286, 290], "noop": [159, 384], "trial": 159, "standard_norm": [160, 171, 366, 367, 369], "affin": [160, 171], "layer": [160, 188, 202, 203, 205, 206, 211, 213, 215, 216, 217, 219, 220, 221, 222, 227, 228, 229, 230, 232, 233, 240, 241, 247, 258, 268, 361, 367, 368, 369, 371, 378, 381], "set_default_tensor_typ": 160, "doubletensor": 160, "isclos": 160, "next_ob": [160, 306, 307, 308, 309, 384], "init_stat": [160, 366, 367, 368, 369], "3752e": 160, "5087e": 160, "9294e": 160, "9636": 160, "5608": 160, "6408": 160, "num_it": [160, 367, 368], "reduce_dim": [160, 366, 367, 368, 369], "cat_dim": [160, 366, 367, 368, 369], "keep_dim": [160, 367, 369], "statist": [160, 188, 295, 357, 366, 367, 368, 385], "gaussian": [160, 178, 201, 224, 229, 230, 235, 252, 368, 378], "empir": [160, 201, 224, 261, 265, 366, 368, 379], "3d": [160, 202], "third": [160, 255, 378, 379], "reorder": 162, "in_keys_in": 162, "channel": [162, 180, 227, 232, 233, 367], "r3m": [164, 381], "resnet": [164, 184, 186], "visual": [164, 184, 186, 326, 368, 378, 380], "embed": [164, 184, 185, 186, 205, 236, 248, 249, 250, 251, 264, 269, 381], "ego4d": [164, 184, 186], "univers": [164, 184, 186, 370], "suraj": [164, 184], "nair": [164, 184], "aravind": [164, 184], "rajeswaran": [164, 184], "vikash": [164, 184, 186], "kumar": [164, 184, 186], "chelsea": [164, 184], "finn": [164, 184], "abhinav": [164, 184], "gupta": [164, 184], "2203": [164, 184, 224, 381], "12601": [164, 184, 381], "_init": [164, 184, 366], "snippet": [164, 184, 366], "resnet50": [164, 186, 381], "model_nam": [164, 184, 186, 329], "resnet34": 164, "resnet18": 164, "r3m_vec": [164, 381], "feed": [164, 186, 291, 361, 366, 378, 379, 382], "stack_imag": [164, 186], "tread": [164, 186], "separet": [164, 186], "hub": [164, 186, 370, 381], "resnet50_weight": [164, 186], "imagenet1k_v1": [164, 186], "download_path": [164, 186], "tensor_pixels_kei": [164, 186], "sub_seq_len": 165, "sample_dim": [165, 366], "primarili": [165, 371], "hesit": 165, "robust": 165, "mix": [165, 236, 245, 304, 366, 378, 379], "improp": 165, "dummyenv": 166, "another_oth": 166, "other_reward": 166, "create_copi": 167, "stuff": [167, 373], "newnam": 167, "r2g": 169, "reward_to_go": 169, "bernoulli_": 169, "9010": 169, "9404": [169, 312], "9701": [169, 312], "9900": [169, 312], "0000": [169, 179, 256, 257, 268, 312, 368, 369, 380, 384], "crash": 169, "clamp_min": 170, "clamp_max": 170, "clip_min": 170, "clip_max": 170, "episode_": 172, "reward1": 172, "reward2": 172, "episode_reward": [172, 378, 379], "keep_reward": 173, "keep_don": 173, "logical_or": 174, "squeeze_dim": 175, "step_count_kei": 176, "update_don": 176, "disjunct": 176, "recognis": 176, "target_return": 177, "subtract": 177, "default_valu": [178, 272, 369], "unit": [178, 201, 213, 215, 216, 232, 233, 238, 239, 368], "transfomedenv": 178, "mykei": 178, "__unless": 178, "exists__": 178, "get_primers_from_modul": [178, 217, 221, 359], "10th": 179, "0216": 179, "1149": 179, "1990": 179, "2749": 179, "3281": 179, "9290": 179, "3702": 179, "8978": 179, "from_int": 180, "shape_toler": 180, "permuat": 180, "ri": 180, "principl": 181, "cattransform": 181, "notabl": 181, "rewardsum": [181, 190, 199, 378, 379], "smoothli": 182, "add_1": 182, "cache_spec": 182, "set_missing_toler": 182, "keyerror": 182, "unsqueeze_dim": [183, 380], "danger": 183, "vc1": 184, "vc1_vec": 184, "untrain": 184, "make_noload_model": 184, "vip": [185, 186, 381], "implicit": [186, 282, 289, 382], "jason": 186, "ma": 186, "shagun": 186, "sodhani": 186, "dinesh": 186, "jayaraman": 186, "osbert": 186, "bastani": 186, "ami": 186, "zhang": 186, "vip_vec": 186, "final_nam": 187, "sb3": 187, "terminal_obs_read": 187, "truli": [187, 384], "till": 187, "shared_td": 188, "decai": [188, 252, 256, 297, 341, 366, 367, 369, 385], "9999": [188, 380], "0001": [188, 213, 231, 368, 380], "to_observation_norm": 188, "race": 188, "underflow": [188, 341], "build_td_for_shared_vecnorm": 188, "memmori": 188, "queue": [188, 382], "td_share": 188, "state_dim": [189, 204, 209, 235, 238, 239, 253], "action_dim": [189, 204, 205, 207, 209, 235, 253, 366, 377], "gsde": [189, 294, 357], "gsdemodul": 189, "rb_transform": 190, "resist": 190, "insensit": 190, "sensit": [190, 367], "_orig": 190, "95": [190, 224, 300, 367, 368, 369, 380], "tdreset": [190, 377], "window": [190, 259, 378, 382, 384], "edit": [190, 373], "cube": 191, "check_dtyp": 192, "discrep": [192, 275, 277, 278, 279, 290, 293, 295, 304], "rng": [192, 380], "revert": [192, 371, 382], "probabilistictdmodul": [197, 198, 222, 261, 265, 305, 339], "next_tensordict": 199, "keep_oth": [199, 380], "exclude_reward": 199, "exclude_don": 199, "exclude_act": 199, "next_": 199, "funtion": 199, "_stepmdp": 199, "write_full_fals": 200, "_terminated_or_trunc": 200, "entropi": [201, 275, 276, 277, 282, 283, 289, 290, 292, 293, 294, 296, 298, 379], "botev": 201, "2013": 201, "cem": 201, "plan": [201, 223, 224], "varianc": [201, 218, 231, 243, 244, 362, 366, 368, 379], "k": [201, 215, 216, 219, 220], "maximis": [201, 205, 207, 224, 361, 367, 368, 379], "modelbasedenv": [201, 224], "planning_horizon": [201, 224], "optim_step": [201, 224, 367, 375], "mpc": [201, 223, 224], "num_candid": [201, 224], "candid": [201, 224], "top_k": [201, 224], "modelbasedenvbas": [201, 223, 224, 359], "safemodul": [201, 223, 249, 251, 265, 275, 276, 282, 283, 289, 293, 294, 295, 296, 298, 348, 349, 353, 359, 384], "num_cel": [202, 203, 205, 206, 207, 208, 213, 214, 217, 221, 222, 227, 228, 249, 272, 367, 368, 369, 371, 372, 375, 378, 379, 384], "elu": [202, 203, 205, 206, 207, 208, 213, 214, 227, 367, 384], "activation_kwarg": [202, 203, 222], "norm_class": [202, 203, 205, 206, 222], "norm_kwarg": [202, 203, 222], "bias_last_lay": [202, 203, 205, 206, 207, 208, 214, 222], "aggregator_class": [202, 203, 205, 206, 367, 369, 384], "squashdim": [202, 203, 205, 214, 227, 384], "aggregator_kwarg": [202, 203, 205, 206, 367, 369], "squeeze_output": [202, 203, 205, 206, 367, 369], "cell": [202, 203, 215, 216, 217, 219, 220, 221, 222, 227, 228, 368, 370, 371, 372, 373, 374, 375], "kernel": [202, 203, 214, 227], "cnet": [202, 203], "conv3d": 202, "lazyconv2d": [203, 205, 206, 214, 227, 384], "transformer_config": [204, 235, 253], "decisiontransform": [204, 235], "dtconfig": [204, 209, 235], "2202": [204, 209, 292], "05607": [204, 209, 292], "return_to_go": [204, 209, 235, 253], "conv_net_kwarg": [205, 206], "mlp_net_kwarg": [205, 206, 207], "use_avg_pool": [205, 206], "WITH": [205, 206, 207, 208, 260, 297], "1509": [205, 206, 207, 208, 224, 260, 279, 288, 297, 380], "02971": [205, 206, 207, 208, 260, 297], "reus": [205, 333], "convnet": [205, 206, 214, 227, 369, 371, 384], "ndims_in": 205, "avgpool": [205, 206], "lazylinear": [205, 206, 207, 208, 214, 222, 361, 368, 371, 380, 381, 384], "2304": [205, 367], "adaptiveavgpool2d": [206, 367, 369], "output_s": [206, 367, 369], "squeeze2dlay": 206, "400": [207, 208, 374, 379, 380, 382], "mlp_net_kwargs_net1": 208, "mlp_net_kwargs_net2": 208, "mlp1": 208, "mlp2": 208, "decion": 209, "desdescrib": 209, "n_embd": 209, "n_layer": [209, 215, 219], "n_head": 209, "n_inner": 209, "n_posit": 209, "resid_pdrop": 209, "attn_pdrop": 209, "gpt2config": 209, "atol": [210, 242], "rtol": [210, 242], "batch_shap": [210, 242], "event_shap": [210, 242], "absolut": [210, 242, 366], "densiti": [210, 225, 226, 234, 244], "mass": [210, 225, 226, 234, 244, 380], "rsampl": [210, 226, 234, 265], "sample_shap": [210, 225, 226, 234], "softmax": [211, 226, 234, 254, 255], "var_num": [212, 237, 254, 255, 263], "action_value_kei": [212, 237, 254, 255, 262, 263, 291, 304], "action_mask_kei": [212, 237, 254, 255, 256, 257, 262, 263], "perspect": [212, 255, 284, 368], "1707": [212, 255, 284, 293], "06887": [212, 255, 284], "mult": [212, 228, 237, 254, 255, 262, 263], "tensordict_modul": [212, 215, 216, 219, 220, 237, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 278, 282, 283, 289, 293, 294, 295, 296, 298, 361], "nbin": [212, 254, 361], "customdistributionalqv": 212, "log_softmax": [212, 254], "from_modul": [212, 264, 267, 384], "one_hot": [212, 226, 237], "qvalue_actor": [212, 237, 254, 262, 361], "to_modul": [212, 264, 267, 366, 384], "std_bia": 213, "std_min_val": 213, "belief": [213, 232, 238, 239], "1912": [213, 285, 286, 287, 368], "01603": [213, 285, 286, 287], "softplu": [213, 231, 271, 273, 274], "out_features_valu": 214, "cnn_kwarg": [214, 367], "mlp_kwarg": [214, 367], "duel": 214, "cnn": [214, 227, 367, 371, 384], "06581": 214, "batch_first": [215, 217, 219, 221, 369], "bidirect": [215, 219, 369], "cudnn": [215, 216, 219, 220, 369], "vmap": [215, 216, 219, 220, 246, 264, 267, 384], "rnn": [215, 216, 219, 220, 369, 371], "device_count": [215, 216, 219, 220, 385], "n_in": [215, 216, 219, 220], "n_out": [215, 216, 219, 220], "h0": [215, 216, 219, 220], "h1": [215, 216, 219, 220], "call_gru": [215, 216], "h_out": [215, 216, 219, 220], "batched_cal": [215, 216, 219, 220], "gate": [215, 216, 219], "r_t": 215, "sigma": [215, 216, 218, 219, 220, 243, 244, 252, 260, 368, 378], "w_": [215, 216, 219, 220], "ir": [215, 216], "x_t": [215, 219], "b_": [215, 216, 219, 220], "hr": [215, 216, 219], "h_": [215, 216, 219], "z_t": 215, "iz": [215, 216], "hz": [215, 216], "n_t": 215, "odot": [215, 216, 219, 220], "hn": [215, 216, 219], "h_t": [215, 219], "sigmoid": [215, 216, 219, 220], "hadamard": [215, 216, 219, 220], "multilay": [215, 219], "_t": [215, 219, 379, 380], "ge": [215, 219], "bernoulli": [215, 219], "b_ih": [215, 216, 219, 220, 221], "b_hh": [215, 216, 219, 220, 221], "seq": [215, 217, 219, 221, 259, 369, 375, 377], "h_0": [215, 219, 220], "unbatch": [215, 219], "pack_padded_sequ": [215, 219], "pack_sequ": [215, 219], "num": [215, 219, 375], "_layer": [215, 219], "_size": [215, 216, 219, 220], "h_n": [215, 219], "packedsequ": [215, 219], "weight_ih_l": [215, 219], "learnabl": [215, 216, 219, 220], "w_ir": 215, "w_iz": 215, "w_in": 215, "num_direct": [215, 219], "weight_hh_l": [215, 219], "w_hr": 215, "w_hz": 215, "w_hn": 215, "bias_ih_l": [215, 219], "b_ir": 215, "b_iz": 215, "b_in": 215, "bias_hh_l": [215, 219], "b_hr": 215, "b_hz": 215, "b_hn": 215, "mathcal": [215, 216, 219, 220], "sqrt": [215, 216, 219, 220, 260], "frac": [215, 216, 219, 220, 368], "seq_len": [215, 219], "subtli": 215, "matrix": [215, 219, 229, 230], "contrast": [215, 288, 382], "hx": [215, 216, 219, 220], "lstmcell": [216, 221], "gru_cel": 216, "z": 216, "weight_ih": [216, 220], "weight_hh": [216, 220], "bias_ih": [216, 220], "bias_hh": [216, 220], "rocm": [216, 220], "embedd": [217, 221], "grucel": [217, 264], "python_bas": [217, 221], "recurrent_st": [217, 221, 272, 369], "custom_kei": [217, 221], "recurrent_mod": [217, 221], "make_tensordict_prim": [217, 221, 369], "rs": [217, 366], "gru_module_train": 217, "policy_train": [217, 221], "traj_td": [217, 221], "policy_infer": [217, 221], "td_inf": [217, 221], "assert_clos": [217, 221], "upscal": [218, 243, 244], "tanh_loc": [218, 243, 244], "event_dim": [218, 242, 243], "ultim": [218, 243, 244], "poor": [218, 243, 244], "explos": [218, 243, 244], "switch": [218, 244, 324], "formula": [218, 243, 244, 275, 277, 290, 293, 362, 368], "proj_siz": 219, "c0": [219, 220], "c1": [219, 220], "call_lstm": [219, 220], "c_out": [219, 220], "i_t": 219, "ii": [219, 220], "hi": [219, 220], "f_t": 219, "hf": [219, 220], "g_t": 219, "ig": [219, 220], "hg": [219, 220], "o_t": 219, "ho": [219, 220], "c_t": 219, "c_": 219, "forget": 219, "1402": 219, "1128": 219, "c_0": [219, 220], "proj": 219, "c_n": 219, "w_ii": 219, "w_if": 219, "w_ig": 219, "w_io": 219, "w_hi": 219, "w_hf": 219, "w_hg": 219, "w_ho": 219, "b_ii": 219, "b_if": 219, "b_ig": 219, "b_io": 219, "b_hi": 219, "b_hf": 219, "b_hg": 219, "b_ho": 219, "weight_hr_l": 219, "_revers": 219, "analog": [219, 371], "cn": 219, "lstm_cell": 220, "h_1": 220, "c_1": 220, "time_step": [220, 259], "cx": 220, "correspont": 221, "recurrent_state_h": [221, 369], "recurrent_state_c": [221, 369], "triplet": [221, 262, 263], "lstm_modul": 221, "rs_h": 221, "rs_c": 221, "hidden0": 221, "hidden1": 221, "single_bias_last_lay": 222, "layer_class": 222, "layer_kwarg": 222, "perceptron": [222, 371], "aslo": 222, "42": [222, 275, 276, 278, 282, 289, 296, 367, 380, 381, 382], "noisylinear": [222, 229, 359, 367], "noisylazylinear": [222, 359], "mpcplanner": 223, "tensordict_out": [223, 385], "mppi": 224, "covari": 224, "william": [224, 295], "aldrich": 224, "theodor": 224, "01149": 224, "hansen": 224, "wang": 224, "su": 224, "04955": 224, "valueoper": [224, 249, 250, 251, 275, 276, 277, 278, 283, 289, 290, 293, 294, 295, 296, 298, 353, 361, 366, 368, 372], "tdlambdaestim": [224, 359, 366], "value_net": [224, 279, 281, 295, 306, 307, 308, 309, 368, 371, 372, 375], "adv": 224, "lmbda": [224, 300, 306, 309, 311, 317, 318, 319, 322, 323, 362, 366, 368, 379], "value_network": [224, 278, 279, 281, 282, 284, 289, 296, 306, 307, 308, 309, 362, 366, 368, 372, 375, 378], "temperatur": [224, 276, 282, 289], "neg_inf": [225, 226], "inf": [225, 226], "api_doc": [225, 226], "tf_agent": [225, 226], "event": [225, 226, 234, 315, 316, 317, 318, 320, 321, 322, 323, 382], "unnorm": [225, 226, 234], "sparse_mask": [225, 226], "dens": [225, 226], "0831": [225, 226], "1203": [225, 226, 368], "0928": [225, 226], "1972": [225, 226], "grad_method": [226, 234], "reparamgradientstrategi": [226, 234], "passthrough": [226, 234], "proxi": [226, 234, 362], "relaxedonehot": [226, 234], "zeros_lik": [226, 380], "sample_non_valid": 226, "share_param": [227, 228, 378, 379], "homogen": [227, 228, 378, 379], "agent_network": [227, 228], "modulelist": [227, 228, 384], "2592": [227, 367], "decentr": 227, "n_agent_input": [228, 378, 379], "n_agent_output": [228, 378, 379], "lazili": [228, 380], "toech": 228, "centalis": 228, "shown": [228, 361, 377, 378, 379, 382], "std_init": [229, 230], "initialize_paramet": 229, "isol": [229, 291], "1706": [230, 245], "10295v3": 230, "induc": 230, "aid": 230, "scale_map": 231, "biased_softplus_1": 231, "scale_lb": [231, 238, 239], "module_norm": 231, "1803": [232, 233, 236], "10122": [232, 233], "rnn_hidden": 232, "latent": 233, "excacli": 234, "inres": 235, "mu": [235, 260, 368], "state_shap": [236, 304], "mixing_embed_dim": [236, 304], "qmix": [236, 378, 379], "mixer": [236, 245, 304], "monoton": 236, "hyper": 236, "11485": 236, "qmixerloss": [236, 245], "qmix_vdn": [236, 245], "vdn": [236, 245], "greedi": [237, 255, 256, 257, 263, 367, 369, 371], "hidden_dim": [238, 239], "posterior": [238, 286], "rssm": [238, 239, 286], "1811": [238, 239], "04551": [238, 239], "obs_embed": 238, "rnn_hidden_dim": 239, "dream": 239, "tanhtransform": 243, "decomposit": 245, "05296": 245, "hide": [246, 368, 378, 379], "satisfi": [246, 361], "vmap_dim": 246, "lam": 246, "sample_in": 246, "sample_in_td": 246, "vm": 246, "translat": [248, 261], "character": [248, 254, 261, 262, 264, 382], "overflow": [248, 254, 255, 261, 262, 263, 264, 265], "td_modul": [248, 249, 250, 251, 261, 264, 265, 267, 269, 371, 384], "3635": 248, "0340": 248, "1476": 248, "3911": [248, 380], "1664": [248, 367, 380], "5455": 248, "2247": 248, "4583": 248, "2916": 248, "2160": 248, "5337": 248, "5193": 248, "grad_fn": [248, 256, 257, 384], "addmmbackward0": 248, "actorvalueoper": [249, 361, 371], "get_policy_oper": [249, 250, 251, 277, 290, 293, 361], "standalon": [249, 250, 251, 371], "tdmodul": [249, 250, 251, 353], "get_critic_oper": 249, "common_oper": [249, 251], "policy_oper": [249, 250, 251], "value_oper": [249, 250, 251], "normalparamwrapp": [249, 250, 251, 261, 267, 275, 276, 283, 289, 293, 294, 295, 296, 298, 359, 384], "module_hidden": [249, 251], "td_module_hidden": [249, 251], "module_act": [249, 251], "td_module_act": [249, 250, 251], "module_valu": [249, 250, 251], "td_module_valu": [249, 250, 251], "state_action_valu": [249, 269, 276, 282, 289, 296, 305, 353, 361, 366, 378, 384], "td_clone": [249, 250, 251], "tensordictmodulewrapp": [249, 348, 349, 353], "get_policy_head": [249, 250, 251], "safesequenti": [249, 250, 251, 304], "head": [249, 251, 272, 277, 290, 293], "get_value_head": [249, 250, 251], "get_value_oper": [249, 250, 251, 277, 290, 293], "action_modul": 250, "state_valu": [250, 251, 269, 277, 282, 289, 290, 293, 294, 296, 306, 307, 308, 309, 311, 313, 315, 317, 319, 320, 322, 361, 366, 368, 379], "qualiti": [251, 361], "actorcriticoper": [251, 277, 290, 293, 361, 371], "embeddig": 251, "refet": 251, "actorcriticwrapp": [251, 361, 366], "po": [252, 257], "sigma_init": [252, 378], "epsilon": [252, 256, 257, 260, 297, 341, 367, 368, 369, 371], "sigma_end": [252, 378], "annealing_num_step": [252, 256, 257, 260, 366, 367, 369, 371, 375, 378], "captur": [252, 256, 257, 260], "omiss": [252, 256, 257, 260], "ommit": [252, 256, 257, 260], "inferec": 253, "set_tensor_kei": 253, "dt_inference_wrapp": 253, "baz": 253, "inference_context": 253, "obs_dim": 253, "tanhdelta": [253, 359, 366, 378], "dtactor": 253, "actor_modul": [253, 384], "dist_class": 253, "dist_kwarg": 253, "distribution_kwarg": [253, 261, 265, 368, 378, 379], "inference_actor": 253, "sequence_length": 253, "mask_context": 253, "out_act": 253, "qvaluemodul": [254, 262, 304, 369, 371, 375], "distributionaldqnnet": 254, "make_log_softmax": 254, "my_action_valu": [255, 263], "chanc": 255, "thid": 255, "eps_init": [256, 257, 260, 367, 369, 371, 375], "eps_end": [256, 257, 260, 367], "explorative_polici": [256, 257, 260], "9055": [256, 257, 380], "9277": [256, 257], "6295": [256, 257], "2532": [256, 257], "addbackward0": [256, 257], "lmheadmodel": 258, "actor_head": [258, 277, 290, 293], "base_model": 258, "lm_head": 258, "macro": 259, "lookahead": 259, "n_action": [259, 276, 279, 281, 292, 296], "reshape_cat": 259, "actor_bas": 259, "obs_cat": 259, "obs_cat_reshap": 259, "action_orig": 259, "counter": [259, 336, 363], "ornstein": [260, 366], "uhlenbeck": [260, 366], "ou": [260, 366], "correl": 260, "noise_t": 260, "noise_": 260, "theta": [260, 368, 380], "sigma_t": 260, "sigma_": 260, "anneal": [260, 367, 371, 378], "ou_prev_nois": 260, "ou_step": 260, "x0": 260, "sigma_min": 260, "n_steps_ann": 260, "is_init_kei": 260, "_ou_prev_nois": 260, "_ou_step": 260, "default_interaction_typ": [261, 265, 371], "interaction_typ": [261, 265], "datacollectorbas": [261, 345, 348, 349, 353, 359], "set_interaction_typ": [261, 265], "cache_dist": [261, 265], "n_empirical_estim": [261, 265], "compound": [261, 371], "compositedistribut": [261, 371], "categ": 261, "distribution_map": 261, "chose": 263, "functionalmodul": 264, "functionalmodulewithbuff": 264, "td_fmodul": 264, "td_function": 264, "td_state": 264, "params_repeat": 264, "td_vmap": [264, 267], "random_sampl": [264, 265], "suppli": 265, "fist": 265, "log_prob_kei": [265, 379], "probabilistictensordictsequenti": [266, 275, 277, 290, 293, 295, 348, 349, 384], "partial_toler": [266, 267, 377], "who": [266, 267], "AND": [266, 267], "tensordictsequenci": 267, "tensordictsequ": 267, "safeprobabilisticmodul": [267, 361], "spec1": 267, "net1": 267, "module1": 267, "td_module1": 267, "spec2": 267, "module2": 267, "td_module2": 267, "clamp": [268, 286, 343, 378, 380], "boundari": [268, 368, 378, 379], "resolut": 268, "9944": 268, "9991": 268, "3020": 268, "2299": [268, 380], "5418": 268, "2989": 268, "6849": 268, "3169": 268, "2690": 268, "9649": [268, 380], "5686": 268, "8602": 268, "0315": 268, "8455": [268, 380], "6027": 268, "4746": 268, "7843": 268, "7782": 268, "2111": 268, "5115": 268, "4687": 268, "5760": 268, "custommodul": 269, "imaginari": 270, "imagin": 270, "transition_model": 270, "get_reward_oper": 270, "get_transition_model_oper": 270, "min_val": [271, 274], "_bia": 271, "surject": 274, "expln": 274, "biased_softplu": [274, 359], "beggin": 274, "biased_softplus_": 274, "syntax": [274, 366], "met": [274, 378, 380], "1602": 275, "01783v2": 275, "actor_network": [275, 276, 277, 278, 280, 282, 283, 289, 290, 292, 293, 294, 295, 296, 298, 366, 368, 372, 378, 379], "critic_network": [275, 277, 290, 293, 295, 368, 379], "entropy_bonu": [275, 277, 290, 293, 368], "favour": [275, 277, 290, 293], "samples_mc_entropi": [275, 277, 290, 292, 293], "mont": [275, 277, 290, 293, 366], "carlo": [275, 277, 290, 293, 366], "entropy_coef": [275, 277, 290, 293, 368, 379], "critic_coef": [275, 277, 290, 293, 368], "loss_critic_typ": [275, 277, 290, 293, 295, 368], "l1": [275, 277, 278, 279, 283, 290, 293, 294, 295, 298, 301, 304, 361, 366], "l2": [275, 277, 278, 279, 280, 281, 283, 286, 287, 290, 293, 294, 295, 298, 301, 304, 366, 378], "smooth_l1": [275, 276, 277, 278, 279, 282, 283, 289, 290, 293, 294, 295, 296, 298, 301, 304, 368], "separate_loss": [275, 277, 278, 282, 283, 289, 290, 293, 294, 295, 296, 298], "propag": [275, 277, 278, 282, 283, 289, 290, 293, 294, 295, 296, 298, 306, 307, 308, 309, 368, 378, 379], "advantage_kei": [275, 277, 290, 293, 295, 306, 307, 308, 309], "value_target_kei": [275, 277, 290, 293, 295, 306, 307, 308, 309], "value_target": [275, 277, 290, 293, 295, 306, 307, 308, 309, 368, 379], "ddp": [275, 277, 290, 293, 295], "fsdp": [275, 277, 290, 293, 295], "divid": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 295, 296, 298, 346, 361, 366, 378, 379, 380], "clip_valu": [275, 277, 290, 293, 295], "loss_crit": [275, 293, 368, 379], "loss_entropi": [275, 293, 368, 379], "loss_object": [275, 293, 368, 379], "recur": [275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 306, 307, 308, 309, 310, 371], "next_reward": [275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 306, 307, 308, 309], "next_don": [275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 306, 307, 308, 309], "next_termin": [275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 306, 307, 308, 309], "loss_obj": 275, "next_observ": [275, 276, 278, 279, 281, 282, 283, 289, 293, 294, 295, 296, 298, 377], "sacloss": [275, 288, 297, 359], "select_out_kei": [275, 276, 278, 282, 283, 289, 293, 294, 296, 298], "make_value_estim": [275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 299, 304, 362, 366, 367, 378, 379, 384], "value_typ": [275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 300, 304, 366], "hyperparam": [275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 366], "enum": [275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 300, 304, 366], "default_value_estim": [275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 366, 384], "default_value_kwarg": [275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 359, 366], "dqn_loss": [275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 299, 304], "td1": [275, 276, 278, 279, 281, 283, 284, 285, 289, 291, 293, 294, 295, 296, 298, 304, 366], "conserv": [276, 281], "qvalue_network": [276, 282, 283, 289, 294, 296, 298], "loss_funct": [276, 278, 279, 280, 281, 282, 283, 289, 294, 296, 298, 301, 304, 366, 378], "alpha_init": [276, 283, 292, 294, 296], "min_alpha": [276, 283, 292, 294, 296], "max_alpha": [276, 283, 292, 294, 296], "fixed_alpha": [276, 283, 292, 294, 296], "target_entropi": [276, 283, 292, 294, 296], "prod": [276, 292, 296], "delay_actor": [276, 278, 296, 298], "delay_qvalu": [276, 283, 294, 296, 298], "min_q_weight": 276, "max_q_backup": 276, "backup": 276, "deterministic_backup": 276, "num_random": 276, "with_lagrang": 276, "lagrang": 276, "lagrange_thresh": 276, "valueclass": [276, 278, 283, 294, 296, 298], "qvalu": [276, 282, 283, 289, 294, 296, 298], "loss_actor": [276, 278, 282, 283, 289, 294, 295, 296, 298, 338, 366, 372, 378, 384], "loss_actor_bc": 276, "loss_alpha": [276, 283, 294, 296], "loss_cql": [276, 281], "loss_qvalu": [276, 281, 282, 283, 289, 294, 296, 298], "loss_alpha_prim": 276, "clip_epsilon": [277, 368, 379], "normalize_advantag": [277, 290, 293, 379], "value_kei": [277, 290, 293, 306, 307, 308, 309, 366], "somemodul": [277, 290, 293], "someactor": [277, 290, 293], "value_head": [277, 290, 293], "somevalu": [277, 290, 293], "loss_modul": [277, 288, 290, 291, 293, 297, 343, 352, 353, 362, 363, 366, 367, 368, 378, 379, 382], "ppoloss": [277, 290, 359], "delay_valu": [278, 279, 281, 284, 295, 296, 304, 367, 369, 375, 378], "loss_valu": [278, 282, 289, 295, 296, 366, 368, 372, 378, 379, 384], "pred_valu": [278, 281, 298, 366, 372, 384], "pred_value_max": [278, 366, 372, 384], "target_valu": [278, 281, 294, 298, 305, 362, 366, 372, 384], "target_value_max": [278, 366, 372, 384], "qvalueactor": [279, 281, 304, 361, 367, 369], "double_dqn": 279, "06461": [279, 288], "mult_one_hot": [279, 282, 283, 304], "loss_val": [279, 281, 362, 366, 368, 369, 372, 373, 375, 378, 379, 382], "01345": 280, "distanc": [281, 290, 301, 305, 306, 379], "dcql_loss": 281, "2110": [282, 289], "06169": [282, 289], "num_qvalue_net": [282, 283, 289, 294, 296, 298], "expectil": [282, 289], "tau": [282, 289, 297, 366, 367, 378], "antmaz": [282, 289], "sticht": [282, 289], "onehotcategor": [282, 283, 359], "target_entropy_weight": 283, "disctount": 284, "distributionalqvalueactor": [284, 361], "input_tensordict": [284, 366], "actor_model": 285, "value_model": [285, 287], "imagination_horizon": 285, "unrol": [285, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323], "discount_loss": [285, 287], "lambda_kl": 286, "lambda_reco": 286, "lambda_reward": 286, "reco_loss": 286, "reward_loss": 286, "free_nat": 286, "nat": 286, "delayed_clamp": 286, "global_averag": 286, "value_loss": 287, "fake_data": 287, "ddpgloss": [288, 297, 353, 359, 366, 372, 378, 384], "td3loss": [288, 297, 359], "value_network_update_interv": 288, "qvalueclass": 289, "loss_value_diff": 289, "diff": 289, "old_polici": 290, "new_polici": 290, "apart": [290, 379], "dtarg": 290, "samples_mc_kl": 290, "analyt": 290, "decrement": 290, "loss_": [291, 338, 362, 366, 372], "equip": [291, 369, 371], "gh": 291, "_acceptedkei": 291, "dataclass": 291, "_forward_value_estimator_kei": 291, "alter": [291, 361], "value_estim": [291, 306, 307, 308, 309, 310, 362, 366, 379], "myloss": 291, "action2": 291, "convert_to_funct": [291, 366], "expand_dim": 291, "create_target_param": [291, 366], "compare_against": [291, 366], "_param": 291, "expans": 291, "resampl": 291, "_target_param": 291, "blend": 291, "proxim": [293, 368, 379], "optimis": [293, 339, 368, 378, 379], "flavour": [293, 378, 379, 384], "clipppoloss": [293, 359, 368, 379], "klpenppoloss": [293, 359], "regularis": 293, "06347": 293, "gae": [293, 359, 362, 366, 368, 379], "ppo_loss": 293, "tdlambda": [293, 300, 362, 366], "base_lay": 293, "randn_lik": 293, "samplelogprob": 293, "openreview": 294, "ay8zfzm0tdd": 294, "sub_sample_len": 294, "subsampl": [294, 334, 363], "action_log_prob_actor": 294, "state_action_value_actor": [294, 298], "connectionist": 295, "1992": 295, "doi": 295, "1007": 295, "bf00992696": 295, "actor_net": [295, 366, 368], "1801": 296, "01290": 296, "applic": [296, 304, 370, 371, 380], "1812": 296, "05905": 296, "redqloss": [297, 359], "math": 297, "theta_t": [297, 380], "theta_": [297, 380], "polyak": 297, "policy_nois": 298, "noise_clip": 298, "next_state_valu": [298, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 359], "td0": [299, 366, 378], "strict_shap": 301, "view_a": 301, "qmixer": [304, 359], "local_valu": 304, "visibl": [304, 379], "dafault": 304, "acceptedkei": 304, "global_valu": 304, "penultim": 304, "local_value_network": 304, "mixer_network": 304, "value_modul": [304, 368, 384], "qnet": [304, 366], "next_val_kei": 305, "pred_next_v": 305, "usus": 305, "mse": 305, "q_valu": 305, "n_steps_to_next": 305, "value_next_st": 305, "1506": [306, 311, 319], "02438": [306, 311, 319], "exponenti": [306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 341], "average_ga": [306, 368], "skip_exist": [306, 307, 308, 309], "time_dim": [306, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323], "advang": 306, "gradient_mod": 306, "value_error": [306, 307, 308, 309, 310], "target_param": [306, 307, 308, 309, 310, 366, 379], "98": [306, 307, 308, 309, 367, 378, 380, 381, 382], "94": [306, 309, 367, 380], "unpack": [306, 307, 308, 309], "tensor_kei": [306, 307, 308, 309, 310], "next_valu": [306, 307, 308, 309, 310], "aka": [307, 367, 378], "average_reward": [307, 308, 309], "tdestim": [307, 308, 310], "infti": 308, "valuefunctionbas": 310, "old_stat": [311, 313, 315, 317, 319, 320, 322], "new_stat": [311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "rolling_gamma": [315, 316, 317, 318, 320, 321, 322, 323], "g1": [315, 316, 317, 318, 320, 321, 322, 323], "g2": [315, 316, 317, 318, 320, 321, 322, 323], "g3": [315, 316, 317, 318, 320, 321, 322, 323], "g4": [315, 316, 317, 318, 320, 321, 322, 323], "v3": [315, 316, 317, 318, 320, 321, 322, 323, 385], "preproc": [324, 378], "as_non_tensor": [324, 378], "render_method": 324, "pass_tensordict": 324, "syntat": 324, "sugar": 324, "out_file_bas": 325, "skip_reset": 325, "interv": [325, 326, 335, 345, 367, 380], "center_crop": 326, "make_grid": 326, "csv": [326, 328, 330, 367, 374, 375], "wandb": [326, 330, 333, 374, 384], "tensorboard": [326, 330, 332, 374, 384], "exp_nam": [326, 327, 328, 331, 332, 333, 353, 367, 374, 375], "log_dir": [326, 327, 328, 330, 332, 333, 367, 375], "cheetah_video": 326, "run_video": 326, "openxexperiencereplai": 326, "run_video_0": 326, "templat": 327, "pt": [328, 363, 381], "video_fp": 328, "minim": [328, 382], "dependeci": 328, "cur_dir": 328, "csv_log": 328, "video_": 328, "experiment_nam": [329, 330], "uuid": [329, 367, 385], "logger_typ": 330, "logger_nam": 330, "mlflow": [330, 331], "wandb_kwarg": 330, "mlflow_kwarg": 330, "tracking_uri": 331, "uri": 331, "datastor": 331, "tb_log": 332, "tensoarboard": 332, "td_log": 332, "save_dir": 333, "resum": 333, "uncategor": 333, "sub_traj_len": 334, "min_sub_traj_len": 334, "register_op": [334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 363, 367], "process_optim_batch": [334, 340, 341, 363], "td_out": [334, 342], "_process_optim_batch_hook": [334, 363], "batch_subsampl": 334, "clear_cuda": 335, "pre_optim_step": [335, 363], "log_pbar": [336, 337, 339, 341, 363, 367], "progress": [336, 337, 339, 343, 363, 367, 369, 385], "count_fram": 336, "pre_steps_log": [336, 337, 363], "count_frames_log": 336, "lognam": 337, "r_train": [337, 367], "log_reward": [337, 367], "loss_compon": 338, "appl": 338, "optimizer_hook": 338, "record_interv": [339, 366, 367], "record_fram": [339, 346, 366, 367], "policy_explor": [339, 353, 366, 367, 371, 375], "log_kei": [339, 367], "underestim": 339, "set_exploration_typ": [339, 359, 368, 369, 371, 378, 384], "r_evalu": [339, 366], "flatten_tensordict": [340, 367], "max_dim": 340, "rb_trainer": 340, "batch_process": [340, 341, 342, 363], "post_loss": [340, 363], "999": [341, 367], "jitter": 341, "finfo": 341, "default_dtyp": 341, "get_default_dtyp": 341, "reward_norm": 341, "update_reward_stat": 341, "normalize_reward": 341, "make_train": [342, 359], "_process_batch_hook": [342, 363], "select_kei": [342, 363], "versatil": [343, 370], "optim_steps_per_batch": [343, 363, 367], "clip_grad_norm": 343, "clip_norm": 343, "progress_bar": 343, "save_trainer_interv": 343, "log_interv": [343, 367], "save_trainer_fil": [343, 363], "update_weights_interv": [345, 367], "update_weight": 345, "post_step": [345, 363, 367], "cfg": [346, 347, 348, 349, 350, 351, 352, 353, 354, 357], "dictconfig": [346, 347, 348, 349, 351, 352, 353, 354, 357], "unknowingli": 346, "annealing_fram": [346, 366], "init_env_step": [346, 347, 366], "proof_environ": [347, 366], "sta": 347, "ot": 347, "actor_model_explor": [348, 349, 366], "make_env_kwarg": [348, 349], "targetnetupdat": [350, 352, 353], "replayargsconfig": 351, "target_net_updat": [353, 366, 367], "constitu": 353, "egreedywrapp": 353, "env_proof": 353, "obs_spec": 353, "net_valu": 353, "dir": [353, 363, 367], "gettempdir": 353, "argpars": [354, 357], "namespac": [354, 357, 385], "parser": [354, 357], "transformed_env_constructor": [354, 359], "num_env_per_collector": [355, 356], "video_tag": 357, "norm_obs_onli": 357, "use_env_cr": 357, "custom_env_mak": 357, "custom_env": 357, "return_transformed_env": 357, "action_dim_gsd": 357, "state_dim_gsd": 357, "obs_norm_state_dict": 357, "wheter": 357, "maker": [357, 367], "asyncdatacollector": 359, "distributedsyncdatacollector": 359, "submitit_delayed_launch": 359, "raycollector": 359, "rational": 359, "behind": 359, "footnot": 359, "nontensorspec": 359, "unboundeddiscretetensorspec": 359, "lazystackedtensorspec": 359, "lazystackedcompositespec": 359, "prompttensordicttoken": 359, "rolloutfrommodel": 359, "tokenizeddatasetload": 359, "create_infinite_iter": 359, "constantklcontrol": 359, "adaptiveklcontrol": 359, "consolidate_spec": 359, "check_no_exclusive_kei": 359, "contains_lazy_spec": 359, "nested2t": 359, "h5combin": 359, "h5split": 359, "check_marl_group": 359, "get_available_librari": 359, "make_composite_from_td": [359, 380], "set_exploration_mod": 359, "terminated_or_trunc": 359, "dreamerdecod": 359, "braxwrapp": 359, "dmcontrolwrapp": 359, "jumanjienv": 359, "jumanjiwrapp": 359, "meltingpotenv": 359, "meltingpotwrapp": 359, "mogymenv": 359, "mogymwrapp": 359, "multithreadedenvwrapp": 359, "openmlenv": 359, "pettingzooenv": [359, 378], "robohiveenv": 359, "smacv2env": 359, "smacv2wrapp": 359, "vmaswrapp": 359, "qvaluehook": 359, "distributionalqvaluehook": 359, "reset_nois": 359, "cemplann": 359, "mpcplannerbas": 359, "mppiplann": 359, "independentnorm": 359, "truncatednorm": 359, "maskedonehotcategor": 359, "inv_softplu": 359, "vmapmodul": 359, "distributionaldqnloss": [359, 367], "discretesacloss": 359, "iqlloss": 359, "discreteiqlloss": 359, "cqlloss": 359, "discretecqlloss": 359, "dtloss": 359, "onlinedtloss": 359, "a2closs": 359, "reinforceloss": 359, "dreameractorloss": 359, "dreamermodelloss": 359, "dreamervalueloss": 359, "td0estim": [359, 366], "td1estim": [359, 366], "td0_return_estim": 359, "td0_advantage_estim": 359, "td1_return_estim": 359, "vec_td1_return_estim": 359, "td1_advantage_estim": 359, "vec_td1_advantage_estim": 359, "td_lambda_return_estim": 359, "vec_td_lambda_return_estim": 359, "td_lambda_advantage_estim": 359, "vec_td_lambda_advantage_estim": 359, "generalized_advantage_estim": 359, "vec_generalized_advantage_estim": 359, "reward2go": 359, "distance_loss": [359, 366], "hold_out_net": 359, "hold_out_param": [359, 366], "softupd": [359, 366, 367, 369, 372, 375, 378], "hardupd": [359, 366, 372], "batchsubsampl": [359, 363], "clearcudacach": 359, "countframeslog": 359, "logreward": [359, 363, 367], "optimizerhook": [359, 367], "replaybuffertrain": [359, 363, 367], "rewardnorm": 359, "selectkei": [359, 363], "trainerhookbas": [359, 363, 367], "updateweight": [359, 363, 367], "make_collector_offpolici": 359, "make_collector_onpolici": 359, "make_dqn_loss": 359, "make_replay_buff": [359, 366], "make_target_updat": 359, "parallel_env_constructor": [359, 366], "sync_async_collector": 359, "sync_sync_collector": 359, "correct_for_frame_skip": 359, "get_stats_random_rollout": 359, "mlflowlogg": 359, "get_logg": 359, "generate_exp_nam": 359, "journei": 360, "textbook": 360, "highlight": [360, 378], "ever": [360, 379], "bump": 360, "think": [360, 368, 378, 379, 385], "benefit": [360, 370, 378, 379, 382], "pr": 360, "ground": [361, 366, 380], "recycl": [361, 382], "impos": 361, "violat": 361, "noisier": 361, "Their": [361, 378, 379], "sd": 361, "prob_modul": 361, "pick": [361, 366, 367, 371], "hopefulli": [361, 367], "functional_modul": 361, "make_funct": 361, "mathbb": [361, 367], "rightarrow": [361, 367], "soften": 361, "backbon": [361, 369, 371, 377, 384], "make_actor": 361, "make_valu": 361, "shared_param": 361, "make_common": 361, "reusabl": [362, 366, 382], "swappabl": [362, 366], "characterist": [362, 366, 380], "trainabl": [362, 366, 372, 381], "whatev": [362, 366], "smth": [362, 366], "metric": [362, 366], "nutshel": [362, 366], "barto": [362, 378, 379], "chapter": [362, 374], "significantli": [362, 366, 367, 372, 379], "next_stat": 362, "value_net_loss": 362, "pow": [362, 366], "room": 362, "signifi": [362, 378, 379], "underperform": 362, "thin": 362, "intric": [362, 371], "believ": 363, "scheme": [363, 385], "substenti": 363, "_pre_steps_log_hook": 363, "_pre_optim_hook": 363, "sub_batch": 363, "_post_loss_hook": 363, "_post_optim_hook": 363, "post_optim": [363, 367], "_post_optim_log": 363, "post_optim_log": 363, "_post_steps_hook": 363, "_post_steps_log_hook": 363, "post_steps_log": 363, "reserv": 363, "logginghook": 363, "logging_hook": 363, "save_dict": 363, "some_valu": 363, "torchsnapshot": 363, "ckpt_backend": 363, "filepath": 363, "save_train": 363, "load_from_fil": 363, "galleri": [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385], "mem": [365, 383], "mb": [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385], "torchrl_demo": [365, 383, 384], "55": [365, 366, 367, 380, 383, 384], "459": [365, 380, 383, 384], "rb_tutori": [365, 382, 383], "462": [365, 380, 382, 383], "coding_dqn": [365, 367, 383], "947": [365, 367, 380, 383], "730": [365, 383], "564": [365, 380, 383], "dqn_with_rnn": [365, 369, 383], "933": [365, 369, 383], "1804": [365, 369, 383], "multiagent_ppo": [365, 379, 383], "07": [365, 367, 379, 380, 383], "596": [365, 379, 380, 383], "coding_ddpg": [365, 366, 383], "170": [365, 366, 380, 383], "torchrl_env": [365, 383, 385], "965": [365, 383, 385], "4301": [365, 383, 385], "multiagent_competitive_ddpg": [365, 378, 383], "493": [365, 378, 380, 383], "coding_ppo": [365, 368, 383], "518": [365, 368, 380, 383], "pretrained_model": [365, 381, 383], "3600": [365, 383], "multi_task": [365, 377, 383], "298": [365, 377, 380, 383], "48": [365, 366, 367, 368, 371, 380, 381, 382, 383], "385": [365, 371, 380, 383], "43": [365, 366, 367, 370, 380, 383], "285": [365, 370, 380, 383], "25": [365, 366, 367, 369, 372, 378, 380, 383], "291": [365, 372, 380, 383], "295": [365, 375, 380, 383], "943": [365, 373, 383], "710": [365, 374, 383], "author": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 385], "vincent": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 382, 385], "moen": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 382, 385], "assembl": 366, "focus": [366, 372], "straightforward": [366, 367, 370, 371, 372, 373, 382], "maxim": [366, 372, 380], "transpar": [366, 369], "illustr": [366, 367, 371, 382], "bash": 366, "is_fork": [366, 367, 368, 369, 378, 379, 381], "get_start_method": [366, 367, 368, 369, 378, 379, 381], "is_avail": [366, 367, 368, 369, 378, 379, 381], "collector_devic": 366, "loss_dict": 366, "oblivi": [366, 368, 382], "elementari": 366, "didact": 366, "dilut": 366, "pessimist": [366, 367, 368], "target_actor_network_param": 366, "actor_in_kei": 366, "actor_crit": 366, "noth": [366, 368], "compromis": 366, "hp": 366, "hasattr": 366, "_value_estim": 366, "elif": [366, 367], "notimplementederror": 366, "unknown": 366, "ifgg": 366, "_loss_actor": 366, "td_copi": 366, "actor_network_param": [366, 378], "value_network_param": [366, 378], "_loss_valu": 366, "pred_val": 366, "target_value_network_param": 366, "glue": 366, "_forward": 366, "ndimens": 366, "remaind": 366, "focu": [366, 367, 368, 371, 372, 373, 378], "env_librari": 366, "env_task": 366, "env_arg": [366, 367], "friendli": 366, "torchr": 366, "rescal": 366, "presum": 366, "make_transformed_env": 366, "reward_sc": 366, "marker": 366, "env_per_collector": 366, "transform_state_dict": 366, "make_t_env": 366, "cheat": 366, "10m": 366, "cautiou": 366, "magnitud": [366, 378], "thousand": [366, 369], "get_env_stat": 366, "proof_env": 366, "5000": [366, 367, 368, 375], "recal": [366, 368, 382], "ddpgmlpactor": 366, "ddpgmlpqnet": 366, "materi": 366, "ornsteinuhlenbeckprocesswrapp": [366, 371], "make_ddpg_actor": 366, "q_net": 366, "tight": 366, "decoupl": [366, 372], "10_000": [366, 368], "traj_len": [366, 369], "make_record": 366, "recorder_obj": 366, "flavor": 366, "buffer_s": [366, 367], "random_crop_len": 366, "prb": 366, "buffer_scratch_dir": 366, "temporari": 366, "dataflow": 366, "ceil_div": 366, "utd": [366, 369], "update_to_data": 366, "realiz": 366, "_must_": 366, "001": [366, 380], "outdat": 366, "trick": [366, 367], "despit": 366, "adam": [366, 367, 368, 369, 372, 375, 378, 379, 380], "optimizer_actor": 366, "lr": [366, 367, 368, 369, 375, 378, 379, 380], "weight_decai": [366, 367], "optimizer_valu": 366, "total_collection_step": 366, "pretti": [366, 370, 374, 382], "rewards_ev": 366, "collected_fram": 366, "r0": 366, "numel": [366, 368, 369, 375, 378, 381, 382], "current_fram": [366, 378], "sampled_tensordict": 366, "gn1": 366, "clip_grad_norm_": [366, 368, 378, 379, 380], "gn2": 366, "gn": [366, 380], "td_record": 366, "rn": 366, "set_descript": [366, 368, 369, 378, 379, 380], "2f": 366, "800": [366, 367], "3320": 366, "53it": [366, 367, 368, 380], "1600": [366, 367], "09": [366, 367, 380], "925": 366, "16it": [366, 367], "2400": [366, 367], "1385": 366, "27it": [366, 367], "3200": [366, 367], "1815": 366, "57it": [366, 367], "4000": [366, 367, 368], "2184": [366, 380], "41it": [366, 367], "4800": [366, 367, 380], "2498": 366, "46it": [366, 367, 368], "56": [366, 367, 380], "5600": 366, "2636": 366, "91it": [366, 367, 380], "74": [366, 367, 380], "120": [366, 380], "470": [366, 380], "6400": [366, 384], "957": [366, 380], "03it": 366, "63": [366, 367, 380], "57": [366, 367, 380, 381], "250": [366, 380], "66": [366, 367, 380, 382], "72": [366, 367, 380], "7200": 366, "668": 366, "88it": [366, 367, 380], "154": [366, 380], "68": [366, 367, 380, 381], "423": [366, 380], "8000": [366, 368], "552": [366, 380], "32it": [366, 367], "251": [366, 380], "8800": 366, "492": [366, 380], "86it": [366, 367, 380], "76": [366, 367, 380], "105": [366, 380], "157": [366, 380], "91": [366, 367, 368, 380, 381], "96": [366, 367, 378, 380, 381, 382], "9600": 366, "388": [366, 380], "62": [366, 367, 380, 381], "71": [366, 367, 379, 380], "97": [366, 367, 378, 380, 381], "173": [366, 380], "10400it": 366, "368": [366, 380], "543": [366, 380], "69": [366, 367, 380], "566": [366, 380], "plot": [366, 368, 369, 378, 379, 380], "mention": [366, 369, 382, 385], "matplotlib": [366, 368, 369, 378, 379, 380, 382, 385], "pyplot": [366, 368, 369, 378, 379, 380, 382, 385], "plt": [366, 368, 369, 378, 379, 380, 382, 385], "zip": [366, 376], "legend": [366, 378], "xlabel": [366, 369, 379, 380], "ylabel": [366, 379], "tight_layout": 366, "takeawai": [366, 367], "distpatch": 366, "jupyt": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385], "ipynb": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385], "sphinx": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385], "customis": [367, 378, 379], "road": 367, "aspect": [367, 372], "highest": [367, 371], "prerequisit": [367, 369], "lookup": 367, "amort": [367, 368], "cart": 367, "pole": 367, "un": 367, "actuat": 367, "frictionless": 367, "duelingcnndqnet": 367, "egreedymodul": [367, 369, 371, 375], "is_notebook": 367, "shell": 367, "get_ipython": 367, "__class__": 367, "zmqinteractiveshel": 367, "qtconsol": 367, "terminalinteractiveshel": 367, "ipython": [367, 379, 380], "nameerror": [367, 378], "umbrella": 367, "misplac": 367, "misus": 367, "orchestr": [367, 372, 374], "five": 367, "64x64": 367, "motion": [367, 380], "obs_norm_sd": 367, "mp_context": 367, "simpler": [367, 370], "get_norm_stat": 367, "test_env": 367, "make_model": 367, "dummy_env": 367, "init_bia": 367, "exploration_modul": [367, 369, 371, 375], "eps_greedy_v": 367, "eps_greedy_val_env": 367, "actor_explor": 367, "get_replay_buff": 367, "n_optim": [367, 372, 373], "themselv": 367, "parametriz": 367, "simplic": [367, 368, 373, 381, 382, 384], "get_collector": 367, "cl": 367, "data_collector": 367, "bunch": 367, "power": 367, "ubiquit": [367, 370], "get_loss_modul": 367, "target_updat": [367, 378], "995": [367, 380], "variat": 367, "2e": [367, 380], "wd": 367, "upd": 367, "harder": [367, 384], "5_000": 367, "500000": 367, "100000": 367, "005": [367, 378], "mandatori": [367, 368, 379, 380], "fairer": 367, "budget": 367, "dqn_exp_": 367, "uuid1": [367, 385], "9895": 367, "0737": 367, "registr": [367, 385], "cumbersom": 367, "buffer_hook": 367, "weight_updat": 367, "aliv": 367, "total_reward": 367, "35it": [367, 380], "3688": [367, 380], "9434": 367, "92it": [367, 380], "52": [367, 380, 381], "74it": [367, 380], "3475": 367, "3718": 367, "04it": 367, "3869": 367, "51": [367, 380, 381], "3991": 367, "224": [367, 380], "17it": 367, "4082": [367, 380], "60": [367, 368, 378, 379, 380, 381, 384], "84it": [367, 380], "288": [367, 380], "67": [367, 377, 380, 381], "49it": 367, "71it": [367, 380], "4295": [367, 380], "352": [367, 380], "96it": [367, 368, 369, 380], "3778": 367, "384": [367, 380], "54": [367, 380, 381], "83it": [367, 380], "416": [367, 380], "53": [367, 378, 379, 380], "23it": 367, "3445": 367, "448": [367, 380], "89": [367, 380], "480": [367, 380, 381], "92": [367, 378, 380], "65it": [367, 380], "4173": 367, "47": [367, 380, 381], "05it": 367, "544": [367, 380], "93": [367, 380, 381], "15it": 367, "3748": 367, "576": [367, 380], "3415": 367, "608": [367, 380], "49": [367, 369, 380, 381], "51it": 367, "640": 367, "90": [367, 368, 378, 379, 380, 382], "672": 367, "704": 367, "63it": [367, 380], "736": 367, "37it": [367, 380], "768": 367, "45": [367, 369, 380, 382], "40it": 367, "06it": 367, "832": 367, "78it": [367, 380], "864": 367, "10it": [367, 380], "896": 367, "928": 367, "75it": [367, 380], "960": 367, "76it": 367, "992": [367, 380], "12it": 367, "90it": [367, 368, 380], "1056": 367, "47it": 367, "1088": 367, "1120": 367, "82it": [367, 380], "1152": 367, "00it": [367, 380], "1184": 367, "62it": 367, "1216": 367, "73it": 367, "1248": 367, "54it": 367, "1280": 367, "99it": [367, 380], "1344": 367, "29it": 367, "1376": 367, "94it": [367, 368, 380], "3899": 367, "1408": 367, "48it": 367, "1440": 367, "20it": [367, 380], "1472": 367, "18it": 367, "1504": 367, "11it": [367, 380], "1536": 367, "79it": [367, 380], "1568": 367, "21it": [367, 380], "1632": 367, "1696": 367, "69it": [367, 369], "1728": 367, "1760": 367, "25it": [367, 368], "1792": 367, "1824": 367, "1856": 367, "1888": 367, "68it": 367, "1920": 367, "42it": 367, "1952": 367, "38it": [367, 380], "1984": 367, "2016": 367, "2048": [367, 381], "2080": 367, "2112": [367, 380], "2144": 367, "50it": 367, "2176": 367, "87it": [367, 380], "2208": 367, "01it": 367, "2240": 367, "2272": 367, "66it": [367, 380], "19it": 367, "2336": 367, "2368": 367, "93it": [367, 380], "2432": 367, "2464": 367, "2496": 367, "59it": [367, 368], "2528": [367, 380], "70it": [367, 380], "2560": 367, "07it": 367, "2624": 367, "81it": [367, 380], "2656": [367, 380], "28it": [367, 369], "2688": 367, "2720": [367, 380], "2752": 367, "2784": 367, "2816": 367, "2848": 367, "58": [367, 369, 380, 381], "2880": 367, "2912": 367, "59": [367, 380], "2944": [367, 380], "2976": [367, 380], "61": [367, 380], "3040": 367, "52it": [367, 380], "3072": 367, "3104": 367, "43it": 367, "3136": 367, "3168": 367, "65": [367, 380, 381], "3232": [367, 380], "2500": 367, "3264": 367, "3296": 367, "30it": 367, "3328": 367, "58it": 367, "3360": 367, "3392": 367, "3424": 367, "3456": [367, 380], "70": [367, 368, 378, 379, 380, 381, 382], "3488": 367, "44it": 367, "3520": 367, "3552": 367, "3584": 367, "83": [367, 379, 380, 381], "45it": 367, "3616": 367, "55it": 367, "4021": 367, "73": [367, 379, 380, 381], "3648": 367, "3680": 367, "77it": [367, 380], "3712": 367, "3744": 367, "3776": 367, "3808": 367, "80it": [367, 380], "77": [367, 380, 381], "3840": 367, "3872": 367, "78": [367, 379, 380, 381], "3904": 367, "60it": [367, 380], "79": [367, 380, 382], "3936": 367, "3968": 367, "64it": [367, 380], "95it": [367, 380], "4032": 367, "4064": 367, "82": [367, 380], "4096": 367, "4128": [367, 380], "4160": 367, "36it": [367, 380], "4192": 367, "4224": 367, "61it": 367, "85": [367, 380, 381], "4256": [367, 380], "56it": [367, 368], "4288": [367, 380], "22it": 367, "4320": 367, "4352": 367, "4384": 367, "4416": 367, "4448": 367, "4480": 367, "4512": 367, "4544": 367, "4576": 367, "4608": 367, "4640": 367, "4672": [367, 380], "4704": 367, "4736": 367, "4768": 367, "4832": 367, "4864": 367, "4896": 367, "4928": 367, "4960": 367, "4992": 367, "5024it": 367, "print_csv_files_in_fold": 367, "folder_path": 367, "csv_file": 367, "output_str": 367, "dirpath": 367, "endswith": 367, "strip": 367, "tmp": [367, 382], "tmpw0qbnkl7": 367, "dqn_exp_97ab20c0": 367, "249e": 367, "11ef": 367, "839b": 367, "0242ac110002": 367, "3475184738636017": 367, "39912933111190796": 367, "42945271730422974": 367, "39912936091423035": 367, "18986867368221283": 367, "13821616768836975": 367, "1859990507364273": 367, "24888546764850616": 367, "34464240074157715": 367, "3711246848106384": 367, "27393364906311035": 367, "30108046531677246": 367, "33626848459243774": 367, "grad_norm_0": 367, "0280983448028564": 367, "11258864402771": 367, "7481024265289307": 367, "286933422088623": 367, "8287875652313232": 367, "2430872917175293": 367, "811736583709717": 367, "478979587554932": 367, "572185516357422": 367, "10000000894069672": 367, "qvaluenetwork": 367, "worst": 367, "accuraci": 367, "fanci": [367, 373], "731": 367, "talk": 368, "repetit": [368, 370, 373], "six": 368, "sophist": [368, 379], "invent": 368, "overview": [368, 372, 378, 379, 384], "theta_k": 368, "pi_": 368, "exceed": 368, "discourag": [368, 380], "indispens": 368, "analyz": 368, "lingua": 368, "franca": 368, "defaultdict": [368, 380], "3e": [368, 369, 378, 379], "max_grad_norm": [368, 378, 379], "sub_batch_s": 368, "num_epoch": [368, 379], "entropy_ep": [368, 379], "charact": 368, "inverteddoublependulum": 368, "transmit": 368, "stai": 368, "supplementari": [368, 385], "told": 368, "confid": [368, 378, 379], "ran": 368, "f_": 368, "mu_": 368, "difficulti": [368, 385], "d_ob": 368, "d_action": 368, "policy_modul": [368, 378, 379], "That": [368, 378], "said": 368, "briefli": [368, 378, 379], "refil": [368, 379], "conveni": [368, 378, 379, 380, 382], "easiest": [368, 372, 378, 379], "mathemat": [368, 378, 379], "tradeoff": [368, 379], "advantage_modul": 368, "lr_schedul": [368, 380], "cosineannealinglr": [368, 380], "eval_str": 368, "tensordict_data": [368, 379], "data_view": [368, 379], "subdata": [368, 378, 379], "cum_reward_str": 368, "4f": [368, 369, 380], "stepcount_str": 368, "param_group": [368, 378], "lr_str": 368, "eval_rollout": 368, "nice": [368, 370, 373], "464": [368, 380], "9458": 368, "0900": 368, "0003": [368, 369, 380], "469": [368, 380], "3000": 368, "474": [368, 380], "1708": 368, "477": [368, 380], "0002": [368, 380], "479": [368, 380], "2148": 368, "6000": 368, "481": [368, 380], "2393": 368, "7000": 368, "2426": 368, "2487": 368, "9000": 368, "24it": 368, "2478": [368, 380], "478": [368, 380], "26it": [368, 369], "2525": 368, "cap": [368, 382], "figsiz": [368, 380], "subplot": [368, 378, 380, 385], "titl": [368, 369, 379, 380], "bit": [368, 369, 370, 378, 379, 382], "84x84": 369, "accessori": 369, "stamp": 369, "assist": 369, "emb": 369, "n_cell": 369, "customiz": 369, "wouldn": 369, "qval": 369, "stoch_polici": 369, "opportun": [369, 378], "uniniti": 369, "again": [369, 370, 371, 373, 379, 381, 382, 385], "redund": 369, "strongli": 369, "sake": [369, 381, 382], "20_000": [369, 380], "longest": 369, "npai": 369, "action_spread": 369, "127": [369, 380], "150": [369, 380], "topic": [370, 371, 372], "straight": 370, "backtrack": 370, "encapsul": [370, 371, 372], "3027": [370, 372, 373, 374], "deprecationwarn": [370, 372, 373, 374], "reset_with_act": 370, "1017": 370, "tp": 370, "stepped_data": 370, "spatial": 370, "useless": 370, "policyless": 370, "appreci": 370, "monitor": 370, "examin": [370, 378], "tackl": 371, "delv": 371, "bypass": 371, "extractor": 371, "palliat": 371, "additivegaussianwrapp": [371, 378], "had": [371, 373], "exploration_polici": [371, 378], "greedili": 371, "2d": [371, 378, 379], "innov": [371, 372], "rollout_explor": 371, "sole": 372, "tradit": [372, 378], "supervis": [372, 373, 382, 385], "n_collect": 372, "get_next_batch": 372, "ddpg_loss": 372, "total_loss": 372, "prove": 372, "reliev": 372, "concern": 372, "accustom": 373, "surprisingli": 373, "fundament": 373, "augment": [373, 375, 382], "art": [373, 378, 379], "pseudo": [373, 380], "multirpocess": 373, "countless": 373, "yourself": [373, 378, 379], "lightweight": 374, "portabl": 374, "everywher": 374, "hyperapamet": 374, "my_exp": 374, "log_scalar": 374, "elaps": 374, "my_scalar": 374, "saw": [374, 380, 382], "my_video": 374, "record_env": [374, 375], "lesson": 375, "voluntarili": 375, "refresh": [375, 378, 379], "value_mlp": 375, "100_000": 375, "init_rand_step": 375, "training_loop": 375, "video_record": 375, "arbitrarili": 375, "total_count": 375, "total_episod": 375, "t0": 375, "t1": 375, "conclud": [375, 381], "tutorials_python": 376, "tutorials_jupyt": 376, "env1_obs_kei": 377, "observation_stand": 377, "env2_obs_kei": 377, "observation_walk": 377, "tdreset1": 377, "tdreset2": 377, "lazy_stack": 377, "policy_common": 377, "policy_stand": 377, "policy_walk": 377, "But": 377, "env1_mak": 377, "env2_mak": 377, "_single_task": 377, "td_rollout": 377, "matteo": [378, 379], "bettini": [378, 379], "benchmarl": [378, 379], "simple_tag": 378, "maddpg": [378, 379], "multiagentparticleenviron": 378, "mpe": 378, "centralis": [378, 379], "tie": [378, 379], "iddpg": [378, 379], "typical": 378, "richard": 378, "andrew": 378, "mit": 378, "press": 378, "2018": 378, "mathbf": [378, 379], "pi": [378, 379, 380], "decentralis": [378, 379], "literatur": [378, 379], "overcom": [378, 379], "stationari": [378, 379], "concurr": [378, 379], "establish": 378, "gui": [378, 379], "multiagentmlp": [378, 379], "is_sphinx": 378, "__sphinx_build__": 378, "team": [378, 379, 384], "n_iter": [378, 379], "evad": 378, "iteration_when_stop_training_evad": 378, "memory_s": 378, "n_optimiser_step": 378, "train_batch_s": 378, "polyak_tau": 378, "chaser": 378, "red": 378, "circl": [378, 379], "touch": [378, 380], "penal": 378, "acceler": [378, 379], "obstacl": 378, "drag": [378, 379], "elast": [378, 379], "collis": [378, 379], "imped": 378, "n_chaser": 378, "n_evad": 378, "n_obstacl": 378, "use_vma": 378, "simple_tag_v3": 378, "num_good": 378, "num_adversari": 378, "num_obstacl": 378, "max_cycl": 378, "num_vmas_env": [378, 379], "num_good_ag": 378, "num_landmark": 378, "adversary_1": 378, "four": [378, 379, 380], "n_agents_in_that_group": 378, "stress": [378, 379], "paramount": [378, 379], "n_rollout_step": [378, 379], "evolut": [378, 379], "group_nam": 378, "n_agents_in_group": 378, "minor": 378, "agents_exploration_polici": 378, "utilis": [378, 379], "withing": 378, "n_obs_per_ag": [378, 379], "n_actions_per_ag": [378, 379], "share_parameters_polici": [378, 379], "policy_net": [378, 379], "_agent": 378, "grant": [378, 379], "converg": [378, 379], "share_parameters_crit": [378, 379], "obs_act": 378, "cat_modul": 378, "critic_modul": 378, "fantast": [378, 379], "reset_td": 378, "interfer": 378, "flatten_kei": 378, "process_batch": 378, "group_shap": 378, "get_item_shap": [378, 379], "nested_done_kei": 378, "nested_terminated_kei": 378, "desc": [378, 379], "episode_reward_mean_": 378, "episode_reward_mean_map": 378, "train_group_map": 378, "deepcopi": 378, "group_batch": 378, "_group": 378, "loss_nam": 378, "episode_reward_mean": [378, 379], "episode_reward_mean_adversari": 378, "episode_reward_mean_ag": 378, "proce": 378, "screen": 378, "fig": 378, "set_ylabel": 378, "axvlin": 378, "color": 378, "orang": 378, "set_xlabel": 378, "video_logg": 378, "vmas_log": 378, "env_with_rend": 378, "vmas_rend": 378, "print_log_dir": 378, "profici": [378, 379], "lidar": 379, "sensor": 379, "mappo": 379, "ippo": 379, "phase": [379, 382], "fed": [379, 382], "analys": 379, "visualis": 379, "vmas_devic": 379, "6_000": 379, "minibatch_s": 379, "generalis": 379, "simd": 379, "parallelis": 379, "warp": 379, "todai": 379, "surround": 379, "dot": [379, 380], "collid": 379, "penalis": 379, "scenario_nam": 379, "final_rew": 379, "agent_collis": 379, "denot": 379, "critic_net": 379, "minibatch": 379, "episode_reward_mean_list": 379, "critic_network_param": 379, "target_critic_network_param": 379, "4579917788505554": 379, "14524875581264496": 379, "168386459350586": 379, "3613134622573853": 379, "921463131904602": 379, "2106335163116455": 379, "1925103664398193": 379, "664064407348633": 379, "6539173126220703": 379, "743558168411255": 379, "xvfb": 379, "pyvirtualdisplai": 379, "1400": [379, 380], "900": 379, "pil": 379, "rendering_callback": 379, "fromarrai": 379, "gif": 379, "save_al": 379, "append_imag": 379, "freeli": 380, "undertaken": 380, "broader": 380, "wider": 380, "algebra": 380, "acquaint": 380, "avenu": 380, "_apply_to_composit": 380, "default_x": 380, "default_i": 380, "torqu": 380, "upward": 380, "angular": 380, "sin": 380, "rad": 380, "sec": 380, "gravit": 380, "angl": 380, "deleg": 380, "new_th": 380, "new_thdot": 380, "thdot": 380, "g_forc": 380, "max_torqu": 380, "angle_norm": 380, "max_spe": 380, "albeit": 380, "gen_param": 380, "high_th": 380, "high_thdot": 380, "low_th": 380, "low_thdot": 380, "trivial": 380, "shortcut": [380, 385], "irrelev": 380, "_make_spec": 380, "td_param": 380, "render_fp": 380, "random_": 380, "_make_step": 380, "staticmethod": 380, "showcas": 380, "skeleton": 380, "_apply_transform": [380, 385], "_inv_apply_transform": [380, 385], "subset": [380, 381], "sine": 380, "cosin": 380, "sintransform": 380, "costransform": 380, "t_sin": 380, "t_co": 380, "cat_transform": 380, "simple_rollout": 380, "unexplor": 380, "init_td": 380, "traj_return": 380, "last_reward": 380, "is_ipython": 380, "inlin": 380, "get_backend": 380, "ion": 380, "gcf": 380, "clear_output": 380, "625": 380, "0748": 380, "519": 380, "0499": 380, "4472": 380, "073": 380, "0685": 380, "0408": 380, "5154": 380, "9086": 380, "9385": 380, "155": 380, "85it": 380, "2568": 380, "4981": 380, "223": 380, "8929": 380, "4491": 380, "581": 380, "3233": 380, "0664": 380, "1021": 380, "5263": 380, "9579": 380, "5807": 380, "8075": 380, "212": 380, "2009": 380, "5525": 380, "914": 380, "89it": 380, "2894": 380, "0115": 380, "0977": 380, "1845": 380, "1830": 380, "4858": 380, "233": 380, "2863": 380, "0297": 380, "4617": 380, "5997": 380, "904": 380, "1647": 380, "0777": 380, "901": 380, "4709": 380, "6813": 380, "8317": 380, "3221": 380, "5554": 380, "276": 380, "3353": 380, "701": 380, "8570": 380, "6656": 380, "463": 380, "7779": 380, "6911": 380, "875": 380, "0796": 380, "7082": 380, "308": 380, "0421": 380, "1496": 380, "5037": 380, "1755": 380, "5029": 380, "9454": 380, "665": 380, "9330": 380, "2118": 380, "444": 380, "0995": 380, "6294": 380, "3146": 380, "2909": 380, "461": 380, "9720": 380, "1298": 380, "9923": 380, "0345": 380, "3438": 380, "424": 380, "6953": 380, "5233": 380, "411": 380, "8011": 380, "5329": 380, "2677": 380, "6969": 380, "7010": 380, "376": 380, "9352": 380, "7707": 380, "6178": 380, "5646": 380, "348": 380, "7304": 380, "9407": 380, "942": 380, "3882": 380, "7604": 380, "3507": 380, "8928": 380, "258": 380, "6978": 380, "4641": 380, "549": 380, "6047": 380, "5005": 380, "4136": 380, "2993": 380, "3222": 380, "4046": 380, "7314": 380, "275": [380, 385], "6331": 380, "9318": 380, "961": 380, "8331": 380, "1604": 380, "4099": 380, "4761": 380, "125": 380, "4262": 380, "6363": 380, "382": 380, "3593": 380, "7377": 380, "2847": 380, "3443": 380, "867": 380, "3592": 380, "4760": 380, "441": 380, "9950": 380, "8021": 380, "3528": 380, "1214": 380, "708": 380, "4023": 380, "3583": 380, "041": 380, "3801": 380, "0310": 380, "4244": 380, "2039": 380, "4850": 380, "8748": 380, "706": 380, "4897": 380, "9210": 380, "8964": 380, "0832": 380, "3934": 380, "456": 380, "8971": 380, "2933": 380, "3377": 380, "6996": 380, "2274": 380, "8916": 380, "098": 380, "2660": 380, "9110": 380, "4503": 380, "6956": 380, "9172": 380, "4026": 380, "946": 380, "9229": 380, "5205": 380, "294": 380, "8872": 380, "6637": 380, "019": 380, "9281": 380, "2082": 380, "724": 380, "8561": 380, "6574": 380, "357": 380, "4138": 380, "5230": 380, "4065": 380, "5642": 380, "921": 380, "9786": 380, "4129": 380, "5831": 380, "266": 380, "7723": 380, "4152": 380, "0898": 380, "389": 380, "5155": 380, "5376": 380, "5616": 380, "4094": 380, "283": 380, "5333": 380, "4803": 380, "895": 380, "6566": 380, "2588": 380, "662": 380, "4732": 380, "7503": 380, "068": 380, "0714": 380, "3370": 380, "059": 380, "8612": 380, "1915": 380, "3855": 380, "0349": 380, "9644": 380, "4538": 380, "445": 380, "0392": 380, "4080": 380, "1648": 380, "9599": 380, "143": 380, "4284": 380, "5946": 380, "2590": 380, "9181": 380, "4621": 380, "9075": 380, "674": 380, "1772": 380, "9444": 380, "351": 380, "9391": 380, "5595": 380, "8673": 380, "6240": 380, "5919": 380, "1071": 380, "9127": 380, "9799": 380, "3131": 380, "9612": 380, "9705": 380, "8741": 380, "2230": 380, "0972": 380, "0337": 380, "0350": 380, "0654": 380, "2441": 380, "4596": 380, "362": 380, "103": 380, "4362": 380, "171": 380, "104": 380, "4041": 380, "6907": 380, "4664": 380, "2760": 380, "0299": 380, "9712": 380, "349": 380, "107": 380, "3332": 380, "4479": 380, "772": 380, "108": 380, "4357": 380, "9591": 380, "109": 380, "6216": 380, "1353": 380, "692": 380, "110": 380, "6261": 380, "7086": 380, "496": 380, "111": 380, "7758": 380, "9818": 380, "112": 380, "7772": 380, "5055": 380, "113": 380, "5840": 380, "3180": 380, "2083": 380, "115": 380, "5275": 380, "6873": 380, "116": 380, "4107": 380, "1624": 380, "117": 380, "6372": 380, "2571": 380, "118": 380, "4039": 380, "4428": 380, "119": 380, "4728": 380, "5628": 380, "6767": 380, "2466": 380, "522": 380, "121": [380, 385], "5873": 380, "5072": 380, "6548": 380, "3766": 380, "123": 380, "5134": 380, "1955": 380, "124": 380, "2481": 380, "0591": 380, "4500": 380, "3368": 380, "126": 380, "9708": 380, "7059": 380, "3031": 380, "2534": 380, "843": 380, "3327": 380, "6193": 380, "129": 380, "4831": 380, "1172": 380, "2593": 380, "4219": 380, "962": 380, "39it": 380, "8380": 380, "899": 380, "132": 380, "2721": 380, "9048": 380, "166": 380, "133": 380, "2419": 380, "5248": 380, "2139": 380, "4278": 380, "135": 380, "0690": 380, "5140": 380, "136": 380, "1140": 380, "7402": 380, "137": [380, 382], "5356": 380, "1636": 380, "138": 380, "0671": 380, "8798": 380, "139": 380, "8918": 380, "3298": 380, "307": 380, "140": 380, "1779": 380, "141": 380, "1771": 380, "3624": 380, "936": 380, "142": 380, "1683": 380, "4810": 380, "9373": 380, "4435": 380, "4396": 380, "8092": 380, "145": 380, "2572": 380, "146": 380, "4212": 380, "0260": 380, "147": [380, 382], "0939": 380, "6478": 380, "605": 380, "148": 380, "6606": 380, "7289": 380, "149": 380, "9300": 380, "7193": 380, "563": 380, "1166": 380, "8514": 380, "151": 380, "9108": 380, "0672": 380, "292": 380, "152": 380, "8591": 380, "3768": 380, "153": 380, "9976": 380, "0576": 380, "0067": 380, "935": 380, "4199": 380, "1722": 380, "156": 380, "8310": 380, "3466": 380, "8631": 380, "2492": 380, "158": 380, "8763": 380, "1277": 380, "159": 380, "5562": 380, "7446": 380, "1082": 380, "9830": 380, "161": 380, "0946": 380, "5229": 380, "162": 380, "4574": 380, "6900": 380, "163": [380, 381], "2229": 380, "0318": 380, "482": 380, "164": 380, "0543": 380, "0817": 380, "761": 380, "165": 380, "2809": 380, "5118": 380, "366": 380, "1142": 380, "5635": 380, "167": 380, "1949": 380, "2327": 380, "982": 380, "168": [380, 382], "0967": 380, "0387": 380, "457": 380, "169": 380, "0782": 380, "2150": 380, "5222": 380, "3725": 380, "9288": 380, "9837": 380, "1416": 380, "1099": 380, "8620": 380, "8475": 380, "174": 380, "1807": 380, "4375": 380, "175": 380, "1148": 380, "0645": 380, "2751": 380, "8313": 380, "177": 380, "9286": 380, "9770": 380, "178": 380, "5735": 380, "2837": 380, "179": 380, "2926": 380, "9489": 380, "180": 380, "1507": 380, "181": 380, "8724": 380, "3567": 380, "182": [380, 382, 385], "3574": 380, "6140": 380, "183": 380, "7895": 380, "2518": 380, "184": 380, "6146": 380, "185": 380, "8776": 380, "7358": 380, "186": 380, "3722": 380, "8428": 380, "187": [380, 385], "7955": 380, "188": 380, "0092": 380, "7106": 380, "829": 380, "189": 380, "2264": 380, "6919": 380, "190": 380, "1438": 380, "1362": 380, "191": 380, "0618": 380, "8217": 380, "9420": 380, "6765": 380, "193": 380, "7745": 380, "0709": 380, "194": 380, "9478": 380, "6867": 380, "195": 380, "6507": 380, "6225": 380, "196": 380, "2244": 380, "2195": 380, "197": 380, "5385": 380, "9263": 380, "198": 380, "1878": 380, "2374": 380, "8054": 380, "3504": 380, "557": 380, "0766": 380, "201": 380, "2011": 380, "8393": 380, "202": 380, "0803": 380, "7815": 380, "203": 380, "8363": 380, "2460": 380, "204": 380, "8643": 380, "2191": 380, "593": 380, "205": 380, "0773": 380, "1343": 380, "206": 380, "8657": 380, "207": 380, "9304": 380, "7584": 380, "208": 380, "8752": 380, "2307": 380, "209": 380, "5250": 380, "4869": 380, "7837": 380, "5762": 380, "211": 380, "6661": 380, "8600": 380, "2502": 380, "1752": 380, "3075": 380, "8871": 380, "214": 380, "9406": 380, "8090": 380, "215": 380, "6291": 380, "8923": 380, "876": 380, "216": 380, "9504": 380, "21e": 380, "217": 380, "7431": 380, "7880": 380, "218": 380, "4463": 380, "5432": 380, "219": [380, 385], "3793": 380, "3313": 380, "8843": 380, "0369": 380, "065": 380, "221": 380, "4828": 380, "8391": 380, "222": 380, "6265": 380, "2913": 380, "5541": 380, "1252": 380, "7342": 380, "2396": 380, "225": 380, "97it": 380, "5936": 380, "1924": 380, "226": 380, "9975": 380, "2045": 380, "227": 380, "8367": 380, "9540": 380, "228": 380, "7259": 380, "6743": 380, "229": 380, "4827": 380, "7528": 380, "230": 380, "7361": 380, "8756": 380, "231": 380, "7646": 380, "1116": 380, "232": 380, "5426": 380, "8385": 380, "5662": 380, "8585": 380, "234": 380, "8234": 380, "7930": 380, "235": 380, "2648": 380, "9309": 380, "236": 380, "6817": 380, "237": 380, "0943": 380, "1533": 380, "238": 380, "3045": 380, "0483": 380, "239": 380, "6415": 380, "0201": 380, "241": 380, "4437": 380, "4365": 380, "242": 380, "0358": 380, "4943": 380, "243": [380, 382], "1272": 380, "5003": 380, "1180": 380, "2637": 380, "245": 380, "7197": 380, "0873": 380, "246": 380, "2917": 380, "247": 380, "0160": 380, "0738": 380, "248": 380, "98it": 380, "3689": 380, "0120": 380, "249": 380, "5570": 380, "0475": 380, "4423": 380, "2220": 380, "6803": 380, "252": 380, "1465": 380, "7214": 380, "253": 380, "8801": 380, "7034": 380, "254": 380, "9136": 380, "4076": 380, "7589": 380, "5013": 380, "8150": 380, "2241": 380, "257": 380, "0753": 380, "8081": 380, "1951": 380, "8314": 380, "259": 380, "0038": 380, "260": 380, "0889": 380, "4616": 380, "261": 380, "0655": 380, "262": 380, "8333": 380, "9476": 380, "263": 380, "7554": 380, "3798": 380, "264": 380, "3717": 380, "3947": 380, "529": 380, "265": 380, "3060": 380, "6495": 380, "7467": 380, "8889": 380, "267": 380, "8457": 380, "591": 380, "7137": 380, "0536": 380, "771": 380, "269": 380, "1651": 380, "270": 380, "8246": 380, "5709": 380, "281": 380, "271": 380, "7502": 380, "0521": 380, "032": 380, "272": 380, "5475": 380, "7253": 380, "273": 380, "2856": 380, "7130": 380, "274": 380, "2778": 380, "4122": 380, "8368": 380, "1841": 380, "9622": 380, "1603": 380, "003e": 380, "277": 380, "0247": 380, "346": 380, "278": 380, "2238": 380, "6418": 380, "279": 380, "0626": 380, "2538": 380, "280": 380, "0149": 380, "7380": 380, "2167": 380, "8911": 380, "282": 380, "8725": 380, "1983": 380, "8142": 380, "3709": 380, "284": 380, "4989": 380, "6464": 380, "6210": 380, "286": 380, "9726": 380, "0820": 380, "287": 380, "6975": 380, "9091": 380, "4926": 380, "4791": 380, "289": 380, "0905": 380, "3500": 380, "290": 380, "2287": 380, "9918": 380, "5543": 380, "9245": 380, "6444": 380, "631": 380, "293": 380, "0448": 380, "4769": 380, "8566": 380, "7208": 380, "0966": 380, "296": 380, "5303": 380, "1537": 380, "023": 380, "297": 380, "2682": 380, "4318": 380, "5063": 380, "299": 380, "7475": 380, "4190": 380, "8186": 380, "5077": 380, "301": 380, "1883": 380, "5291": 380, "472": 380, "302": 380, "3998": 380, "303": 380, "3622": 380, "0930": 380, "626": 380, "304": 380, "9500": 380, "5664": 380, "305": 380, "5697": 380, "3024": 380, "306": 380, "3117": 380, "0052": 380, "006": 380, "0981": 380, "9312": 380, "3873": 380, "309": 380, "0411": 380, "2650": 380, "1656": 380, "0228": 380, "004": 380, "311": 380, "09it": 380, "1196": 380, "312": 380, "34it": 380, "7353": 380, "0812": 380, "313": 380, "3022": 380, "758": 380, "314": 380, "1406": 380, "4626": 380, "315": 380, "2156": 380, "851": 380, "316": 380, "1953": 380, "3774": 380, "317": 380, "6385": 380, "9917": 380, "318": 380, "2764": 380, "905": 380, "319": 380, "6391": 380, "9317": 380, "9748": 380, "2679": 380, "321": 380, "8495": 380, "5125": 380, "8177": 380, "6602": 380, "323": 380, "0704": 380, "5776": 380, "324": 380, "9833": [380, 384], "1339": 380, "402": 380, "325": 380, "1238": 380, "326": 380, "9299": 380, "0227": 380, "327": 380, "7727": 380, "1607": 380, "336": 380, "328": 380, "3958": 380, "3223": 380, "763": 380, "329": 380, "4742": 380, "1797": 380, "330": 380, "0144": 380, "0085": 380, "791": 380, "331": 380, "8284": 380, "0428": 380, "332": 380, "7365": 380, "333": 380, "4566": 380, "0781": 380, "086": 380, "334": 380, "3355": 380, "0230": 380, "335": 380, "9346": 380, "0423": 380, "076": 380, "3711": 380, "1335": 380, "6855": 380, "337": 380, "0304": 380, "0023": 380, "8459": 380, "338": 380, "9998": 380, "4399": 380, "339": 380, "2303": 380, "1346": 380, "340": 380, "2915": 380, "7116": 380, "341": 380, "5560": 380, "0487": 380, "342": 380, "5119": 380, "061": 380, "343": 380, "3305": 380, "3705": 380, "344": 380, "6068": 380, "345": 380, "5731": 380, "3897": 380, "0376": 380, "347": 380, "0434": 380, "012": 380, "1300": 380, "1215": 380, "0968": 380, "0885": 380, "350": 380, "1348": 380, "0073": 380, "5052": 380, "4184": 380, "2817": 380, "8887": 380, "353": 380, "4779": 380, "1009": 380, "354": 380, "0604": 380, "599": 380, "355": 380, "4486": 380, "1176": 380, "656": 380, "356": 380, "2436": 380, "0668": 380, "8849": 380, "0012": 380, "358": 380, "7511": 380, "8804": 380, "359": 380, "8870": 380, "6728": 380, "360": 380, "8841": 380, "5508": 380, "361": 380, "5242": 380, "0013": 380, "6185": 380, "363": 380, "1378": 380, "0204": 380, "364": 380, "0355": 380, "685": 380, "365": 380, "4884": 380, "0231": 380, "0014": 380, "6793": 380, "367": 380, "9834": 380, "863": 380, "6709": 380, "369": 380, "5199": 380, "9790": 380, "370": 380, "9401": 380, "7802": 380, "371": 380, "6723": 380, "372": 380, "2678": 380, "6201": 380, "373": 380, "7385": 380, "374": 380, "6344": 380, "617": 380, "375": 380, "9945": 380, "0772": 380, "567": 380, "7576": 380, "0398": 380, "377": 380, "3396": 380, "0022": 380, "094": 380, "378": 380, "3073": 380, "4018": 380, "379": 380, "1869": 380, "380": 380, "0481": 380, "1117": 380, "381": 380, "6823": 380, "981": 380, "8305": 380, "0210": 380, "383": 380, "4908": 380, "0272": 380, "538": 380, "3267": 380, "0111": 380, "7965": 380, "1796": 380, "0039": 380, "5396": 380, "386": 380, "3757": 380, "0490": 380, "387": 380, "1394": 380, "4187": 380, "2986": 380, "7954": 380, "1274": 380, "0063": 380, "813": 380, "390": 380, "8706": 380, "0114": 380, "391": 380, "6922": 380, "2423": 380, "392": 380, "9115": 380, "2602": 380, "393": 380, "2449": 380, "0783": 380, "394": 380, "0631": 380, "0057": 380, "7444": 380, "395": 380, "3339": 380, "0167": 380, "396": 380, "4806": 380, "397": 380, "4171": 380, "067": 380, "398": 380, "2618": 380, "5809": 380, "399": 380, "0054": 380, "3364": 380, "8733": 380, "0184": 380, "401": 380, "9137": 380, "0113": 380, "025": 380, "0386": 380, "0625": 380, "403": 380, "1332": 380, "0582": 380, "7816": 380, "404": 380, "8341": 380, "0941": 380, "854": 380, "405": 380, "8615": 380, "588": 380, "406": 380, "3849": 380, "008": 380, "407": 380, "9395": 380, "0765": 380, "055": 380, "408": 380, "2685": 380, "2235": 380, "688": 380, "409": 380, "3052": 380, "4249": 380, "410": 380, "6806": 380, "6383": 380, "3721": 380, "9981": 380, "412": 380, "1862": 380, "822": 380, "413": 380, "9811": 380, "0171": 380, "013": 380, "414": 380, "0252": 380, "0049": 380, "6205": 380, "415": 380, "1108": 380, "4921": 380, "9142": 380, "8130": 380, "417": 380, "1725": 380, "0036": 380, "3196": 380, "418": 380, "7795": 380, "0242": 380, "799": 380, "419": 380, "7737": 380, "0138": 380, "420": 380, "1462": 380, "0053": 380, "421": 380, "9226": 380, "6139": 380, "422": 380, "9889": 380, "0403": 380, "6194": 380, "0032": 380, "3989": 380, "0104": 380, "425": 380, "9960": 380, "0009": 380, "6009": 380, "426": 380, "2697": 380, "0914": 380, "427": 380, "1114": 380, "428": 380, "9862": 380, "1932": 380, "429": 380, "0637": 380, "0623": 380, "082": 380, "430": 380, "9906": 380, "2031": 380, "431": 380, "9948": 380, "0895": 380, "432": 380, "1970": 380, "0256": 380, "4231": 380, "0449": 380, "644": 380, "434": 380, "1039": 380, "1973": 380, "435": 380, "4561": 380, "1225": 380, "436": 380, "0211": 380, "2125": 380, "437": 380, "3866": 380, "0050": 380, "7202": 380, "438": 380, "6388": 380, "0072": 380, "439": 380, "1187": 380, "0015": 380, "5116": 380, "440": 380, "0432": 380, "0025": 380, "7809": 380, "1925": 380, "0103": 380, "442": 380, "9570": 380, "443": 380, "0871": 380, "5601": 380, "0165": 380, "0047": 380, "6061": 380, "2746": 380, "0027": 380, "7887": 380, "446": 380, "1835": 380, "0035": 380, "855": 380, "447": 380, "8420": 380, "548": 380, "2653": 380, "0126": 380, "9736": 380, "449": 380, "0594": 380, "0119": 380, "6196": 380, "450": 380, "4509": 380, "0373": 380, "451": 380, "0620": 380, "452": 380, "6898": 380, "3235": 380, "687": 380, "453": 380, "5879": 380, "454": 380, "8406": 380, "0694": 380, "455": 380, "8259": 380, "0235": 380, "8500": 380, "0024": 380, "4054": 380, "458": 380, "2027": 380, "0894": 380, "5966": 380, "460": 380, "6942": 380, "0016": 380, "4254": 380, "6703": 380, "0145": 380, "8124": 380, "0218": 380, "9196": 380, "0188": 380, "8986": 380, "0884": 380, "0084": 380, "5624": 380, "465": 380, "8862": 380, "0006": 380, "5384": 380, "466": 380, "5837": 380, "467": 380, "8954": 380, "0101": 380, "6751": 380, "468": 380, "8063": 380, "0122": 380, "9635": 380, "0692": 380, "4216": 380, "1227": 380, "0586": 380, "162e": 380, "471": 380, "9690": 380, "4166": 380, "6324": 380, "473": 380, "0778": 380, "8548": 380, "0017": 380, "4408": 380, "475": 380, "8125": 380, "1515": 380, "476": 380, "2733": 380, "0044": 380, "2836": 380, "7497": 380, "7681": 380, "8547": 380, "0105": 380, "7212": 380, "9848": 380, "0019": 380, "6498": 380, "1987": 380, "0011": 380, "5473": 380, "8991": 380, "6091": 380, "9189": 380, "5771": 380, "483": 380, "6781": 380, "7542": 380, "484": 380, "5959": 380, "0064": 380, "485": 380, "2547": 380, "486": 380, "0636": 380, "547": 380, "487": 380, "0065": 380, "488": 380, "1694": 380, "0083": 380, "5759": 380, "489": 380, "0493": 380, "0021": 380, "7805": 380, "490": 380, "0950": 380, "497": 380, "491": 380, "9717": 380, "3672": 380, "0207": 380, "8266": 380, "5365": 380, "494": 380, "2623": 380, "5078": 380, "495": 380, "4545": 380, "09636": 380, "8754": 380, "0010": 380, "498": 380, "0031": 380, "8269": 380, "499": 380, "6642": 380, "2284": 380, "501": 380, "9130": 380, "0008": 380, "502": 380, "503": 380, "7624": 380, "0056": 380, "3858": 380, "504": 380, "0890": 380, "0042": 380, "505": 380, "7505": 380, "2157": 380, "506": 380, "8394": 380, "3413": 380, "507": 380, "9609": 380, "0041": 380, "6905": 380, "508": 380, "8467": 380, "4409": 380, "509": 380, "510": 380, "8128": 380, "3559": 380, "511": 380, "1479": 380, "0264": 380, "1589": 380, "513": 380, "2756": 380, "0046": 380, "5266": 380, "514": 380, "9873": 380, "0112": 380, "9314": 380, "515": 380, "3791": 380, "0721": 380, "516": 380, "4580": 380, "0758": 380, "6114": 380, "517": 380, "2431": 380, "1958": 380, "5553": 380, "8924": 380, "0097": 380, "520": 380, "3737": 380, "0234": 380, "521": 380, "9125": 380, "4623": 380, "3230": 380, "0589": 380, "3784": 380, "523": 380, "9482": 380, "0051": 380, "524": 380, "1979": 380, "0045": 380, "6401": 380, "525": 380, "1588": 380, "0048": 380, "6255": 380, "526": 380, "6084": 380, "3477": 380, "1475": 380, "0209": 380, "528": 380, "7611": 380, "1040": 380, "0099": 380, "0173": 380, "643": 380, "530": 380, "8189": 380, "4358": 380, "531": 380, "9897": 380, "532": 380, "1548": 380, "9751": 380, "533": 380, "6362": 380, "7495": 380, "534": 380, "1749": 380, "9513": 380, "535": 380, "7708": 380, "0371": 380, "536": 380, "2649": 380, "0437": 380, "537": 380, "5491": 380, "0276": 380, "6426": 380, "7294": 380, "078e": 380, "539": 380, "9928": 380, "540": 380, "7937": 380, "0124": 380, "9664": 380, "541": 380, "3342": 380, "542": 380, "2046": 380, "5496": 380, "0956": 380, "0059": 380, "545": 380, "9028": 380, "5843": 380, "546": 380, "0674": 380, "0178": 380, "797": 380, "2815": 380, "0599": 380, "1587": 380, "9276": 380, "8228": 380, "6164": 380, "551": 380, "6850": 380, "9167": 380, "3092": 380, "0670": 380, "9177": 380, "553": 380, "1599": 380, "0043": 380, "554": 380, "6367": 380, "555": 380, "3657": 380, "556": 380, "6694": 380, "2622": 380, "0372": 380, "4841": 380, "558": 380, "2707": 380, "757": 380, "559": 380, "2267": 380, "5415": 380, "560": 380, "4556": 380, "0163": 380, "561": 380, "1839": 380, "0809": 380, "6262": 380, "562": 380, "0278": 380, "1112": 380, "6155": 380, "565": 380, "1427": 380, "3582": 380, "624": 380, "7870": 380, "9490": 380, "0439": 380, "8796": 380, "568": 380, "8026": 380, "612": 380, "569": [380, 385], "3147": 380, "8486": 380, "570": 380, "7917": 380, "0129": 380, "571": 380, "9553": 380, "0020": 380, "6871": 380, "572": [380, 385], "3132": 380, "0159": 380, "8646": 380, "573": 380, "5320": 380, "0269": 380, "574": 380, "2955": 380, "0245": 380, "575": 380, "3347": 380, "0179": 380, "9718": 380, "1629": 380, "804": 380, "577": 380, "4164": 380, "0070": 380, "4335": 380, "578": 380, "579": 380, "3049": 380, "9063": 380, "580": 380, "8785": 380, "3295": 380, "5184": 380, "0546": 380, "582": 380, "4589": 380, "583": 380, "4697": 380, "2476": 380, "584": 380, "2397": 380, "585": 380, "4953": 380, "1775": 380, "586": 380, "2258": 380, "0110": 380, "7671": 380, "587": 380, "3981": 380, "8590": 380, "0007": 380, "589": 380, "9820": 380, "4221": 380, "590": 380, "1293": 380, "0116": 380, "868": 380, "1675": 380, "5931": 380, "592": 380, "2910": 380, "5219": 380, "2124": 380, "1730": 380, "737": 380, "594": 380, "2914": 380, "0206": 380, "595": 380, "0172": 380, "3982": 380, "0945": 380, "0121": 380, "4789": 380, "597": 380, "3805": 380, "4074": 380, "598": 380, "3310": 380, "5065": 380, "6028": 380, "6316": 380, "6724": 380, "6523": 380, "601": 380, "0136": 380, "4298": 380, "602": 380, "3524": 380, "2629": 380, "603": 380, "2635": 380, "7839": 380, "604": 380, "6041": 380, "8027": 380, "4170": 380, "4675": 380, "606": 380, "3153": 380, "9316": 380, "607": 380, "0649": 380, "9722": 380, "7989": 380, "0329": 380, "609": 380, "1976": 380, "6852": 380, "610": 380, "4793": 380, "1255": 380, "611": 380, "4581": 380, "0394": 380, "2047": 380, "0326": 380, "613": 380, "8967": 380, "8619": 380, "614": 380, "5906": 380, "6491": 380, "615": 380, "6634": 380, "4394": 380, "616": 380, "0624": 380, "0061": 380, "5676": 380, "3259": 380, "0131": 380, "7733": 380, "618": 380, "7515": 380, "0189": 380, "5575": 380, "619": 380, "9313": 380, "6286": 380, "620": 380, "4325": 380, "7832": 380, "621": 380, "1134": 380, "622": 380, "4572": 380, "0500": 380, "5838": 380, "623": 380, "3818": 380, "8623": 380, "1253": 380, "6622": 380, "subject": 380, "explain": 381, "semat": 381, "r3mtransform": 381, "env_transform": [381, 385], "s3": 381, "amazonaw": 381, "r3m_50": 381, "374m": 381, "4m": 381, "139mb": 381, "6m": 381, "113mb": 381, "107mb": 381, "105mb": 381, "2m": 381, "103mb": 381, "102mb": 381, "9m": 381, "101mb": 381, "107m": 381, "100mb": 381, "116m": 381, "3mb": 381, "126m": 381, "136m": 381, "146m": 381, "155m": 381, "165m": 381, "175m": 381, "184m": 381, "194m": 381, "204m": 381, "213m": 381, "6mb": 381, "223m": 381, "233m": 381, "243m": 381, "252m": 381, "262m": 381, "272m": 381, "281m": 381, "291m": 381, "9mb": 381, "300m": 381, "310m": 381, "320m": 381, "329m": 381, "339m": 381, "348m": 381, "358m": 381, "7mb": 381, "368m": 381, "wiser": 381, "000": 381, "3601": 381, "batteri": 382, "buffer_list": 382, "lowest": 382, "medium": 382, "buffer_lazytensor": 382, "buffer_lazymemmap": 382, "tempdir": 382, "tmpa732m0if": 382, "fullest": 382, "mydata": 382, "background": 382, "question": [382, 384], "_i": 382, "artifici": 382, "0893e": 382, "hamper": 382, "she": 382, "pars": 382, "proport": 382, "hist": 382, "barcontain": 382, "artist": 382, "reappear": 382, "unfold": 382, "problemat": 382, "4th": 382, "prioritizedslicesampl": 382, "tensordictmaxvaluewrit": 382, "demo": 384, "icml": 384, "vmoen": 384, "fb": 384, "invest": 384, "platform": 384, "media": 384, "predominantli": 384, "tensordict1": 384, "tensordict2": 384, "tensordict_sampl": 384, "_sampler": 384, "_sum_tre": 384, "modulenotfounderror": 384, "28791671991348267": 384, "noopresetenv": [384, 385], "backbone_modul": 384, "params_expand": 384, "exec_sequ": 384, "tensordict_exp": 384, "base_modul": 384, "0137": 384, "1524": 384, "0641": 384, "viewbackward0": 384, "asstridedbackward0": 384, "8728": 384, "1334": 384, "3494": 384, "6887": 384, "6402": 384, "_safetanhbackward": 384, "1132": 384, "1762": 384, "3430": 384, "2668": 384, "2918": 384, "6239": 384, "roughli": 384, "tensordicts_prealloc": 384, "tensordicts_stack": 384, "tensordict_rollout": [384, 385], "disclaim": 384, "concatmodul": 384, "loss_td": 384, "year": 384, "roadmap": 384, "compris": 384, "contributor": 384, "curiou": 384, "nascent": 384, "unsupervis": 385, "unifi": 385, "_build_env": 385, "bipedalwalk": 385, "bipedalwalkerhardcor": 385, "blackjack": 385, "carrac": 385, "1188": 385, "deserv": 385, "__episode__": 385, "__trajectory__": 385, "void": 385, "reproduct": 385, "reset_data": 385, "tensordict_tprim": 385, "imshow": 385, "axesimag": 385, "0x7fb4a5a88070": 385, "traceback": 385, "1372": 385, "785": 385, "3056": 385, "1424": 385, "_check_version_exist": 385, "ns": 385, "_check_name_exist": 385, "_check_namespace_exist": 385, "namespacenotfound": 385, "suggestion_msg": 385, "wrapper1": 385, "wrapper2": 385, "obviou": 385, "truth": 385, "env0": 385, "env_transformed_bi": 385, "stanc": 385, "transformeddistribut": 385, "base_dist": 385, "concat": 385, "mofidi": 385, "transformedenviron": 385, "moderet": 385, "computation": 385, "legitim": 385, "incom": 385, "amongst": 385, "has_cuda": 385, "wor": 385, "convention": 385, "markovian": 385, "constain": 385, "bar_": 385, "get_someth": 385, "aargh": 385, "is_clos": 385, "foo_list": 385, "parallen": 385, "particularili": 385, "evolv": 385, "steadi": 385, "approx": 385, "_extra_st": 385, "observation_ssq": 385, "observation_sum": 385, "dispach": 385, "absor": 385}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "AdaptiveKLController"], [24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "ConstantKLController"], [28, 0, 1, "", "DiscreteTensorSpec"], [29, 0, 1, "", "Flat2TED"], [30, 0, 1, "", "H5Combine"], [31, 0, 1, "", "H5Split"], [32, 0, 1, "", "LazyStackedCompositeSpec"], [33, 0, 1, "", "LazyStackedTensorSpec"], [34, 0, 1, "", "MultiDiscreteTensorSpec"], [35, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [36, 0, 1, "", "MultiStep"], [37, 0, 1, "", "Nested2TED"], [38, 0, 1, "", "NonTensorSpec"], [39, 0, 1, "", "OneHotDiscreteTensorSpec"], [40, 0, 1, "", "PairwiseDataset"], [41, 0, 1, "", "PrioritizedReplayBuffer"], [42, 0, 1, "", "PromptData"], [43, 0, 1, "", "PromptTensorDictTokenizer"], [44, 0, 1, "", "ReplayBuffer"], [45, 0, 1, "", "RewardData"], [46, 0, 1, "", "RolloutFromModel"], [47, 0, 1, "", "TED2Flat"], [48, 0, 1, "", "TED2Nested"], [49, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [50, 0, 1, "", "TensorDictReplayBuffer"], [51, 0, 1, "", "TensorDictTokenizer"], [52, 0, 1, "", "TensorSpec"], [53, 0, 1, "", "TokenizedDatasetLoader"], [54, 0, 1, "", "UnboundedContinuousTensorSpec"], [55, 0, 1, "", "UnboundedDiscreteTensorSpec"], [56, 0, 1, "", "check_no_exclusive_keys"], [57, 0, 1, "", "consolidate_spec"], [58, 0, 1, "", "contains_lazy_spec"], [59, 0, 1, "", "create_infinite_iterator"], [69, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[23, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "contains"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 3, 1, "", "sample"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 3, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "get"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 3, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 3, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "to_one_hot"], [28, 1, 1, "", "to_one_hot_spec"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 3, 1, "", "sample"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 3, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 3, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 3, 1, "", "sample"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[36, 1, 1, "", "add_module"], [36, 1, 1, "", "apply"], [36, 1, 1, "", "bfloat16"], [36, 1, 1, "", "buffers"], [36, 1, 1, "", "children"], [36, 1, 1, "", "compile"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 1, 1, "", "double"], [36, 1, 1, "", "eval"], [36, 1, 1, "", "extra_repr"], [36, 1, 1, "", "float"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "get_buffer"], [36, 1, 1, "", "get_extra_state"], [36, 1, 1, "", "get_parameter"], [36, 1, 1, "", "get_submodule"], [36, 1, 1, "", "half"], [36, 1, 1, "", "ipu"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "modules"], [36, 1, 1, "", "named_buffers"], [36, 1, 1, "", "named_children"], [36, 1, 1, "", "named_modules"], [36, 1, 1, "", "named_parameters"], [36, 1, 1, "", "parameters"], [36, 1, 1, "", "register_backward_hook"], [36, 1, 1, "", "register_buffer"], [36, 1, 1, "", "register_forward_hook"], [36, 1, 1, "", "register_forward_pre_hook"], [36, 1, 1, "", "register_full_backward_hook"], [36, 1, 1, "", "register_full_backward_pre_hook"], [36, 1, 1, "", "register_load_state_dict_post_hook"], [36, 1, 1, "", "register_module"], [36, 1, 1, "", "register_parameter"], [36, 1, 1, "", "register_state_dict_pre_hook"], [36, 1, 1, "", "requires_grad_"], [36, 1, 1, "", "set_extra_state"], [36, 1, 1, "", "share_memory"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_empty"], [36, 1, 1, "", "train"], [36, 1, 1, "", "type"], [36, 1, 1, "", "xpu"], [36, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 3, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 3, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[40, 3, 1, "", "batch_size"], [40, 3, 1, "", "device"], [40, 1, 1, "", "from_dataset"], [40, 1, 1, "", "from_tensordict"], [40, 1, 1, "", "gather"], [40, 1, 1, "", "get"], [40, 1, 1, "", "load_memmap"], [40, 1, 1, "", "load_state_dict"], [40, 1, 1, "", "memmap"], [40, 1, 1, "", "memmap_"], [40, 1, 1, "", "memmap_like"], [40, 3, 1, "", "names"], [40, 1, 1, "", "replace"], [40, 1, 1, "", "set"], [40, 1, 1, "", "state_dict"], [40, 1, 1, "", "to_tensordict"], [40, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dump"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "load"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "register_load_hook"], [41, 1, 1, "", "register_save_hook"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[42, 3, 1, "", "batch_size"], [42, 3, 1, "", "device"], [42, 1, 1, "", "from_dataset"], [42, 1, 1, "", "from_tensordict"], [42, 1, 1, "", "gather"], [42, 1, 1, "", "get"], [42, 1, 1, "", "load_memmap"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "memmap"], [42, 1, 1, "", "memmap_"], [42, 1, 1, "", "memmap_like"], [42, 3, 1, "", "names"], [42, 1, 1, "", "replace"], [42, 1, 1, "", "set"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "to_tensordict"], [42, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[44, 1, 1, "", "add"], [44, 1, 1, "", "append_transform"], [44, 1, 1, "", "dump"], [44, 1, 1, "", "dumps"], [44, 1, 1, "", "empty"], [44, 1, 1, "", "extend"], [44, 1, 1, "", "insert_transform"], [44, 1, 1, "", "load"], [44, 1, 1, "", "loads"], [44, 1, 1, "", "register_load_hook"], [44, 1, 1, "", "register_save_hook"], [44, 1, 1, "", "sample"], [44, 3, 1, "", "sampler"], [44, 1, 1, "", "save"], [44, 1, 1, "", "set_sampler"], [44, 1, 1, "", "set_storage"], [44, 1, 1, "", "set_writer"], [44, 3, 1, "", "storage"], [44, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[45, 3, 1, "", "batch_size"], [45, 3, 1, "", "device"], [45, 1, 1, "", "from_tensordict"], [45, 1, 1, "", "gather"], [45, 1, 1, "", "get"], [45, 1, 1, "", "load_memmap"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "memmap"], [45, 1, 1, "", "memmap_"], [45, 1, 1, "", "memmap_like"], [45, 3, 1, "", "names"], [45, 1, 1, "", "replace"], [45, 1, 1, "", "set"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to_tensordict"], [45, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[46, 1, 1, "", "create_rollout_td"], [46, 1, 1, "", "generate"], [46, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[49, 1, 1, "", "add"], [49, 1, 1, "", "append_transform"], [49, 1, 1, "", "dump"], [49, 1, 1, "", "dumps"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "extend"], [49, 1, 1, "", "insert_transform"], [49, 1, 1, "", "load"], [49, 1, 1, "", "loads"], [49, 1, 1, "", "register_load_hook"], [49, 1, 1, "", "register_save_hook"], [49, 1, 1, "", "sample"], [49, 3, 1, "", "sampler"], [49, 1, 1, "", "save"], [49, 1, 1, "", "set_sampler"], [49, 1, 1, "", "set_storage"], [49, 1, 1, "", "set_writer"], [49, 3, 1, "", "storage"], [49, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "append_transform"], [50, 1, 1, "", "dump"], [50, 1, 1, "", "dumps"], [50, 1, 1, "", "empty"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "insert_transform"], [50, 1, 1, "", "load"], [50, 1, 1, "", "loads"], [50, 1, 1, "", "register_load_hook"], [50, 1, 1, "", "register_save_hook"], [50, 1, 1, "", "sample"], [50, 3, 1, "", "sampler"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set_sampler"], [50, 1, 1, "", "set_storage"], [50, 1, 1, "", "set_writer"], [50, 3, 1, "", "storage"], [50, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 3, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[53, 1, 1, "", "dataset_to_tensordict"], [53, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 3, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 3, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"]], "torchrl.data.datasets": [[60, 0, 1, "", "AtariDQNExperienceReplay"], [61, 0, 1, "", "BaseDatasetExperienceReplay"], [62, 0, 1, "", "D4RLExperienceReplay"], [63, 0, 1, "", "GenDGRLExperienceReplay"], [64, 0, 1, "", "MinariExperienceReplay"], [65, 0, 1, "", "OpenMLExperienceReplay"], [66, 0, 1, "", "OpenXExperienceReplay"], [67, 0, 1, "", "RobosetExperienceReplay"], [68, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 3, 1, "", "data_path"], [60, 3, 1, "", "data_path_root"], [60, 1, 1, "", "delete"], [60, 1, 1, "", "dump"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "load"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "preprocess"], [60, 1, 1, "", "register_load_hook"], [60, 1, 1, "", "register_save_hook"], [60, 1, 1, "", "sample"], [60, 3, 1, "", "sampler"], [60, 1, 1, "", "save"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 3, 1, "", "storage"], [60, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 3, 1, "", "data_path"], [63, 3, 1, "", "data_path_root"], [63, 1, 1, "", "delete"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "preprocess"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 3, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 3, 1, "", "storage"], [63, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 3, 1, "", "data_path"], [64, 3, 1, "", "data_path_root"], [64, 1, 1, "", "delete"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "preprocess"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 3, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 3, 1, "", "storage"], [64, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 3, 1, "", "data_path"], [65, 3, 1, "", "data_path_root"], [65, 1, 1, "", "delete"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "preprocess"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 3, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 3, 1, "", "storage"], [65, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 3, 1, "", "data_path"], [66, 3, 1, "", "data_path_root"], [66, 1, 1, "", "delete"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "preprocess"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 3, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 3, 1, "", "storage"], [66, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 3, 1, "", "data_path"], [67, 3, 1, "", "data_path_root"], [67, 1, 1, "", "delete"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "preprocess"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 3, 1, "", "data_path"], [68, 3, 1, "", "data_path_root"], [68, 1, 1, "", "delete"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "preprocess"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[70, 0, 1, "", "FlatStorageCheckpointer"], [71, 0, 1, "", "H5StorageCheckpointer"], [72, 0, 1, "", "ImmutableDatasetWriter"], [73, 0, 1, "", "LazyMemmapStorage"], [74, 0, 1, "", "LazyTensorStorage"], [75, 0, 1, "", "ListStorage"], [76, 0, 1, "", "ListStorageCheckpointer"], [77, 0, 1, "", "NestedStorageCheckpointer"], [78, 0, 1, "", "PrioritizedSampler"], [79, 0, 1, "", "PrioritizedSliceSampler"], [80, 0, 1, "", "RandomSampler"], [81, 0, 1, "", "ReplayBufferEnsemble"], [82, 0, 1, "", "RoundRobinWriter"], [83, 0, 1, "", "Sampler"], [84, 0, 1, "", "SamplerEnsemble"], [85, 0, 1, "", "SamplerWithoutReplacement"], [86, 0, 1, "", "SliceSampler"], [87, 0, 1, "", "SliceSamplerWithoutReplacement"], [88, 0, 1, "", "Storage"], [89, 0, 1, "", "StorageCheckpointerBase"], [90, 0, 1, "", "StorageEnsemble"], [91, 0, 1, "", "StorageEnsembleCheckpointer"], [92, 0, 1, "", "TensorDictMaxValueWriter"], [93, 0, 1, "", "TensorDictRoundRobinWriter"], [94, 0, 1, "", "TensorStorage"], [95, 0, 1, "", "TensorStorageCheckpointer"], [96, 0, 1, "", "Writer"], [97, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[72, 1, 1, "", "add"], [72, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[73, 1, 1, "", "attach"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "load"], [73, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[74, 1, 1, "", "attach"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "load"], [74, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[75, 1, 1, "", "attach"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "load"], [75, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[78, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[79, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 3, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 3, 1, "", "storage"], [81, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[82, 1, 1, "", "add"], [82, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[88, 1, 1, "", "attach"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "load"], [88, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[90, 1, 1, "", "attach"], [90, 1, 1, "", "dump"], [90, 1, 1, "", "load"], [90, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[92, 1, 1, "", "add"], [92, 1, 1, "", "extend"], [92, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[96, 1, 1, "", "add"], [96, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.envs": [[98, 2, 1, "", "BraxEnv"], [99, 2, 1, "", "BraxWrapper"], [100, 2, 1, "", "DMControlEnv"], [101, 2, 1, "", "DMControlWrapper"], [102, 0, 1, "", "EnvBase"], [103, 0, 1, "", "EnvCreator"], [104, 0, 1, "", "EnvMetaData"], [105, 2, 1, "", "GymEnv"], [106, 0, 1, "", "GymLikeEnv"], [107, 2, 1, "", "GymWrapper"], [108, 2, 1, "", "HabitatEnv"], [109, 2, 1, "", "IsaacGymEnv"], [110, 2, 1, "", "IsaacGymWrapper"], [111, 2, 1, "", "JumanjiEnv"], [112, 2, 1, "", "JumanjiWrapper"], [113, 2, 1, "", "MOGymEnv"], [114, 2, 1, "", "MOGymWrapper"], [115, 2, 1, "", "MarlGroupMapType"], [116, 2, 1, "", "MeltingpotEnv"], [117, 2, 1, "", "MeltingpotWrapper"], [118, 2, 1, "", "ModelBasedEnvBase"], [119, 2, 1, "", "MultiThreadedEnv"], [120, 2, 1, "", "MultiThreadedEnvWrapper"], [121, 2, 1, "", "OpenMLEnv"], [122, 0, 1, "", "ParallelEnv"], [123, 2, 1, "", "PettingZooEnv"], [124, 2, 1, "", "PettingZooWrapper"], [125, 2, 1, "", "RoboHiveEnv"], [126, 2, 1, "", "SMACv2Env"], [127, 2, 1, "", "SMACv2Wrapper"], [128, 0, 1, "", "SerialEnv"], [129, 2, 1, "", "VmasEnv"], [130, 2, 1, "", "VmasWrapper"], [131, 2, 1, "", "check_marl_grouping"], [132, 2, 1, "", "gym_backend"], [118, 1, 1, "", "rand_step"], [118, 1, 1, "", "reset"], [118, 1, 1, "", "rollout"], [135, 2, 1, "", "set_gym_backend"], [118, 1, 1, "", "set_seed"], [118, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[102, 3, 1, "", "action_key"], [102, 3, 1, "", "action_keys"], [102, 3, 1, "", "action_spec"], [102, 1, 1, "", "add_module"], [102, 1, 1, "", "add_truncated_keys"], [102, 1, 1, "", "append_transform"], [102, 1, 1, "", "apply"], [102, 3, 1, "", "batch_locked"], [102, 3, 1, "", "batch_size"], [102, 1, 1, "", "bfloat16"], [102, 1, 1, "", "buffers"], [102, 1, 1, "", "children"], [102, 1, 1, "", "compile"], [102, 1, 1, "", "cpu"], [102, 1, 1, "", "cuda"], [102, 3, 1, "", "done_key"], [102, 3, 1, "", "done_keys"], [102, 3, 1, "", "done_keys_groups"], [102, 3, 1, "", "done_spec"], [102, 1, 1, "", "double"], [102, 1, 1, "", "empty_cache"], [102, 1, 1, "", "eval"], [102, 1, 1, "", "extra_repr"], [102, 1, 1, "", "fake_tensordict"], [102, 1, 1, "", "float"], [102, 1, 1, "", "forward"], [102, 3, 1, "", "full_action_spec"], [102, 3, 1, "", "full_done_spec"], [102, 3, 1, "", "full_reward_spec"], [102, 3, 1, "", "full_state_spec"], [102, 1, 1, "", "get_buffer"], [102, 1, 1, "", "get_extra_state"], [102, 1, 1, "", "get_parameter"], [102, 1, 1, "", "get_submodule"], [102, 1, 1, "", "half"], [102, 3, 1, "", "input_spec"], [102, 1, 1, "", "ipu"], [102, 1, 1, "", "load_state_dict"], [102, 1, 1, "", "maybe_reset"], [102, 1, 1, "", "modules"], [102, 1, 1, "", "named_buffers"], [102, 1, 1, "", "named_children"], [102, 1, 1, "", "named_modules"], [102, 1, 1, "", "named_parameters"], [102, 3, 1, "", "observation_spec"], [102, 3, 1, "", "output_spec"], [102, 1, 1, "", "parameters"], [102, 1, 1, "", "rand_action"], [102, 1, 1, "id0", "rand_step"], [102, 1, 1, "", "register_backward_hook"], [102, 1, 1, "", "register_buffer"], [102, 1, 1, "", "register_forward_hook"], [102, 1, 1, "", "register_forward_pre_hook"], [102, 1, 1, "", "register_full_backward_hook"], [102, 1, 1, "", "register_full_backward_pre_hook"], [102, 1, 1, "", "register_gym"], [102, 1, 1, "", "register_load_state_dict_post_hook"], [102, 1, 1, "", "register_module"], [102, 1, 1, "", "register_parameter"], [102, 1, 1, "", "register_state_dict_pre_hook"], [102, 1, 1, "", "requires_grad_"], [102, 1, 1, "id1", "reset"], [102, 3, 1, "", "reset_keys"], [102, 3, 1, "", "reward_key"], [102, 3, 1, "", "reward_keys"], [102, 3, 1, "", "reward_spec"], [102, 1, 1, "id2", "rollout"], [102, 1, 1, "", "set_extra_state"], [102, 1, 1, "id3", "set_seed"], [102, 3, 1, "", "shape"], [102, 1, 1, "", "share_memory"], [102, 3, 1, "", "specs"], [102, 1, 1, "", "state_dict"], [102, 3, 1, "", "state_keys"], [102, 3, 1, "", "state_spec"], [102, 1, 1, "id4", "step"], [102, 1, 1, "", "step_and_maybe_reset"], [102, 1, 1, "", "to"], [102, 1, 1, "", "to_empty"], [102, 1, 1, "", "train"], [102, 1, 1, "", "type"], [102, 1, 1, "", "xpu"], [102, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[106, 3, 1, "", "action_key"], [106, 3, 1, "", "action_keys"], [106, 3, 1, "", "action_spec"], [106, 1, 1, "", "add_module"], [106, 1, 1, "", "add_truncated_keys"], [106, 1, 1, "", "append_transform"], [106, 1, 1, "", "apply"], [106, 1, 1, "", "auto_register_info_dict"], [106, 3, 1, "", "batch_locked"], [106, 3, 1, "", "batch_size"], [106, 1, 1, "", "bfloat16"], [106, 1, 1, "", "buffers"], [106, 1, 1, "", "children"], [106, 1, 1, "", "close"], [106, 1, 1, "", "compile"], [106, 1, 1, "", "cpu"], [106, 1, 1, "", "cuda"], [106, 3, 1, "", "done_key"], [106, 3, 1, "", "done_keys"], [106, 3, 1, "", "done_keys_groups"], [106, 3, 1, "", "done_spec"], [106, 1, 1, "", "double"], [106, 1, 1, "", "empty_cache"], [106, 1, 1, "", "eval"], [106, 1, 1, "", "extra_repr"], [106, 1, 1, "", "fake_tensordict"], [106, 1, 1, "", "float"], [106, 1, 1, "", "forward"], [106, 3, 1, "", "full_action_spec"], [106, 3, 1, "", "full_done_spec"], [106, 3, 1, "", "full_reward_spec"], [106, 3, 1, "", "full_state_spec"], [106, 1, 1, "", "get_buffer"], [106, 1, 1, "", "get_extra_state"], [106, 1, 1, "", "get_parameter"], [106, 1, 1, "", "get_submodule"], [106, 1, 1, "", "half"], [106, 3, 1, "", "input_spec"], [106, 1, 1, "", "ipu"], [106, 1, 1, "", "load_state_dict"], [106, 1, 1, "", "maybe_reset"], [106, 1, 1, "", "modules"], [106, 1, 1, "", "named_buffers"], [106, 1, 1, "", "named_children"], [106, 1, 1, "", "named_modules"], [106, 1, 1, "", "named_parameters"], [106, 3, 1, "", "observation_spec"], [106, 3, 1, "", "output_spec"], [106, 1, 1, "", "parameters"], [106, 1, 1, "", "rand_action"], [106, 1, 1, "", "rand_step"], [106, 1, 1, "", "read_action"], [106, 1, 1, "", "read_done"], [106, 1, 1, "", "read_obs"], [106, 1, 1, "", "read_reward"], [106, 1, 1, "", "register_backward_hook"], [106, 1, 1, "", "register_buffer"], [106, 1, 1, "", "register_forward_hook"], [106, 1, 1, "", "register_forward_pre_hook"], [106, 1, 1, "", "register_full_backward_hook"], [106, 1, 1, "", "register_full_backward_pre_hook"], [106, 1, 1, "", "register_gym"], [106, 1, 1, "", "register_load_state_dict_post_hook"], [106, 1, 1, "", "register_module"], [106, 1, 1, "", "register_parameter"], [106, 1, 1, "", "register_state_dict_pre_hook"], [106, 1, 1, "", "requires_grad_"], [106, 1, 1, "", "reset"], [106, 3, 1, "", "reset_keys"], [106, 3, 1, "", "reward_key"], [106, 3, 1, "", "reward_keys"], [106, 3, 1, "", "reward_spec"], [106, 1, 1, "", "rollout"], [106, 1, 1, "", "set_extra_state"], [106, 1, 1, "", "set_info_dict_reader"], [106, 1, 1, "", "set_seed"], [106, 3, 1, "", "shape"], [106, 1, 1, "", "share_memory"], [106, 3, 1, "", "specs"], [106, 1, 1, "", "state_dict"], [106, 3, 1, "", "state_keys"], [106, 3, 1, "", "state_spec"], [106, 1, 1, "", "step"], [106, 1, 1, "", "step_and_maybe_reset"], [106, 1, 1, "", "to"], [106, 1, 1, "", "to_empty"], [106, 1, 1, "", "train"], [106, 1, 1, "", "type"], [106, 1, 1, "", "xpu"], [106, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[122, 3, 1, "", "action_key"], [122, 3, 1, "", "action_keys"], [122, 3, 1, "", "action_spec"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 3, 1, "", "batch_locked"], [122, 3, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "children"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 3, 1, "", "done_key"], [122, 3, 1, "", "done_keys"], [122, 3, 1, "", "done_keys_groups"], [122, 3, 1, "", "done_spec"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 3, 1, "", "full_action_spec"], [122, 3, 1, "", "full_done_spec"], [122, 3, 1, "", "full_reward_spec"], [122, 3, 1, "", "full_state_spec"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 3, 1, "", "input_spec"], [122, 1, 1, "", "ipu"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 3, 1, "", "observation_spec"], [122, 3, 1, "", "output_spec"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "", "rand_step"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "", "reset"], [122, 3, 1, "", "reset_keys"], [122, 3, 1, "", "reward_key"], [122, 3, 1, "", "reward_keys"], [122, 3, 1, "", "reward_spec"], [122, 1, 1, "", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "", "set_seed"], [122, 3, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 3, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 3, 1, "", "state_keys"], [122, 3, 1, "", "state_spec"], [122, 1, 1, "", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "update_kwargs"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[128, 3, 1, "", "action_key"], [128, 3, 1, "", "action_keys"], [128, 3, 1, "", "action_spec"], [128, 1, 1, "", "add_module"], [128, 1, 1, "", "add_truncated_keys"], [128, 1, 1, "", "append_transform"], [128, 1, 1, "", "apply"], [128, 3, 1, "", "batch_locked"], [128, 3, 1, "", "batch_size"], [128, 1, 1, "", "bfloat16"], [128, 1, 1, "", "buffers"], [128, 1, 1, "", "children"], [128, 1, 1, "", "compile"], [128, 1, 1, "", "cpu"], [128, 1, 1, "", "cuda"], [128, 3, 1, "", "done_key"], [128, 3, 1, "", "done_keys"], [128, 3, 1, "", "done_keys_groups"], [128, 3, 1, "", "done_spec"], [128, 1, 1, "", "double"], [128, 1, 1, "", "empty_cache"], [128, 1, 1, "", "eval"], [128, 1, 1, "", "extra_repr"], [128, 1, 1, "", "fake_tensordict"], [128, 1, 1, "", "float"], [128, 1, 1, "", "forward"], [128, 3, 1, "", "full_action_spec"], [128, 3, 1, "", "full_done_spec"], [128, 3, 1, "", "full_reward_spec"], [128, 3, 1, "", "full_state_spec"], [128, 1, 1, "", "get_buffer"], [128, 1, 1, "", "get_extra_state"], [128, 1, 1, "", "get_parameter"], [128, 1, 1, "", "get_submodule"], [128, 1, 1, "", "half"], [128, 3, 1, "", "input_spec"], [128, 1, 1, "", "ipu"], [128, 1, 1, "", "load_state_dict"], [128, 1, 1, "", "maybe_reset"], [128, 1, 1, "", "modules"], [128, 1, 1, "", "named_buffers"], [128, 1, 1, "", "named_children"], [128, 1, 1, "", "named_modules"], [128, 1, 1, "", "named_parameters"], [128, 3, 1, "", "observation_spec"], [128, 3, 1, "", "output_spec"], [128, 1, 1, "", "parameters"], [128, 1, 1, "", "rand_action"], [128, 1, 1, "", "rand_step"], [128, 1, 1, "", "register_backward_hook"], [128, 1, 1, "", "register_buffer"], [128, 1, 1, "", "register_forward_hook"], [128, 1, 1, "", "register_forward_pre_hook"], [128, 1, 1, "", "register_full_backward_hook"], [128, 1, 1, "", "register_full_backward_pre_hook"], [128, 1, 1, "", "register_gym"], [128, 1, 1, "", "register_load_state_dict_post_hook"], [128, 1, 1, "", "register_module"], [128, 1, 1, "", "register_parameter"], [128, 1, 1, "", "register_state_dict_pre_hook"], [128, 1, 1, "", "requires_grad_"], [128, 1, 1, "", "reset"], [128, 3, 1, "", "reset_keys"], [128, 3, 1, "", "reward_key"], [128, 3, 1, "", "reward_keys"], [128, 3, 1, "", "reward_spec"], [128, 1, 1, "", "rollout"], [128, 1, 1, "", "set_extra_state"], [128, 1, 1, "", "set_seed"], [128, 3, 1, "", "shape"], [128, 1, 1, "", "share_memory"], [128, 3, 1, "", "specs"], [128, 1, 1, "", "state_dict"], [128, 3, 1, "", "state_keys"], [128, 3, 1, "", "state_spec"], [128, 1, 1, "", "step"], [128, 1, 1, "", "step_and_maybe_reset"], [128, 1, 1, "", "to"], [128, 1, 1, "", "to_empty"], [128, 1, 1, "", "train"], [128, 1, 1, "", "type"], [128, 1, 1, "", "update_kwargs"], [128, 1, 1, "", "xpu"], [128, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[133, 2, 1, "", "DreamerDecoder"], [134, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[136, 0, 1, "", "ActionMask"], [137, 0, 1, "", "AutoResetEnv"], [138, 0, 1, "", "AutoResetTransform"], [139, 0, 1, "", "BatchSizeTransform"], [140, 0, 1, "", "BinarizeReward"], [141, 0, 1, "", "BurnInTransform"], [142, 0, 1, "", "CatFrames"], [143, 0, 1, "", "CatTensors"], [144, 0, 1, "", "CenterCrop"], [145, 0, 1, "", "ClipTransform"], [146, 0, 1, "", "Compose"], [147, 0, 1, "", "DTypeCastTransform"], [148, 0, 1, "", "DeviceCastTransform"], [149, 0, 1, "", "DiscreteActionProjection"], [150, 0, 1, "", "DoubleToFloat"], [151, 0, 1, "", "EndOfLifeTransform"], [152, 0, 1, "", "ExcludeTransform"], [153, 0, 1, "", "FiniteTensorDictCheck"], [154, 0, 1, "", "FlattenObservation"], [155, 0, 1, "", "FrameSkipTransform"], [156, 0, 1, "", "GrayScale"], [157, 0, 1, "", "InitTracker"], [158, 0, 1, "", "KLRewardTransform"], [159, 0, 1, "", "NoopResetEnv"], [160, 0, 1, "", "ObservationNorm"], [161, 0, 1, "", "ObservationTransform"], [162, 0, 1, "", "PermuteTransform"], [163, 0, 1, "", "PinMemoryTransform"], [164, 0, 1, "", "R3MTransform"], [165, 0, 1, "", "RandomCropTensorDict"], [166, 0, 1, "", "RemoveEmptySpecs"], [167, 0, 1, "", "RenameTransform"], [168, 0, 1, "", "Resize"], [169, 0, 1, "", "Reward2GoTransform"], [170, 0, 1, "", "RewardClipping"], [171, 0, 1, "", "RewardScaling"], [172, 0, 1, "", "RewardSum"], [173, 0, 1, "", "SelectTransform"], [174, 0, 1, "", "SignTransform"], [175, 0, 1, "", "SqueezeTransform"], [176, 0, 1, "", "StepCounter"], [177, 0, 1, "", "TargetReturn"], [178, 0, 1, "", "TensorDictPrimer"], [179, 0, 1, "", "TimeMaxPool"], [180, 0, 1, "", "ToTensorImage"], [181, 0, 1, "", "Transform"], [182, 0, 1, "", "TransformedEnv"], [183, 0, 1, "", "UnsqueezeTransform"], [184, 0, 1, "", "VC1Transform"], [185, 0, 1, "", "VIPRewardTransform"], [186, 0, 1, "", "VIPTransform"], [187, 0, 1, "", "VecGymEnvTransform"], [188, 0, 1, "", "VecNorm"], [189, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[136, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[137, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[138, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_env_batch_size"], [139, 1, 1, "", "transform_input_spec"], [139, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[140, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[141, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[144, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[145, 1, 1, "", "transform_observation_spec"], [145, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[146, 1, 1, "", "append"], [146, 1, 1, "", "forward"], [146, 1, 1, "", "insert"], [146, 1, 1, "", "to"], [146, 1, 1, "", "transform_env_batch_size"], [146, 1, 1, "", "transform_env_device"], [146, 1, 1, "", "transform_input_spec"], [146, 1, 1, "", "transform_observation_spec"], [146, 1, 1, "", "transform_output_spec"], [146, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "transform_input_spec"], [147, 1, 1, "", "transform_observation_spec"], [147, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[148, 1, 1, "", "forward"], [148, 1, 1, "", "transform_done_spec"], [148, 1, 1, "", "transform_env_device"], [148, 1, 1, "", "transform_input_spec"], [148, 1, 1, "", "transform_observation_spec"], [148, 1, 1, "", "transform_output_spec"], [148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[149, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "register_keys"], [151, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[153, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[155, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[160, 1, 1, "", "init_stats"], [160, 1, 1, "", "transform_input_spec"], [160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[162, 1, 1, "", "transform_input_spec"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[163, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[164, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[165, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[168, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[169, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[170, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[171, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "transform_input_spec"], [172, 1, 1, "", "transform_observation_spec"], [172, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[174, 1, 1, "", "transform_observation_spec"], [174, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "to"], [178, 1, 1, "", "transform_input_spec"], [178, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[180, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[181, 3, 1, "", "container"], [181, 1, 1, "", "forward"], [181, 3, 1, "", "parent"], [181, 1, 1, "", "to"], [181, 1, 1, "", "transform_done_spec"], [181, 1, 1, "", "transform_env_batch_size"], [181, 1, 1, "", "transform_env_device"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"], [181, 1, 1, "", "transform_output_spec"], [181, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[182, 1, 1, "", "add_truncated_keys"], [182, 1, 1, "", "append_transform"], [182, 3, 1, "", "batch_locked"], [182, 3, 1, "", "batch_size"], [182, 1, 1, "", "empty_cache"], [182, 1, 1, "", "eval"], [182, 3, 1, "", "input_spec"], [182, 1, 1, "", "insert_transform"], [182, 1, 1, "", "load_state_dict"], [182, 3, 1, "", "output_spec"], [182, 1, 1, "", "set_missing_tolerance"], [182, 1, 1, "", "set_seed"], [182, 1, 1, "", "state_dict"], [182, 1, 1, "", "to"], [182, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "make_noload_model"], [184, 1, 1, "", "to"], [184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[186, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[188, 1, 1, "", "build_td_for_shared_vecnorm"], [188, 1, 1, "", "forward"], [188, 1, 1, "", "get_extra_state"], [188, 1, 1, "", "set_extra_state"], [188, 1, 1, "", "to_observation_norm"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.rb_transforms": [[190, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[190, 1, 1, "", "add_module"], [190, 1, 1, "", "apply"], [190, 1, 1, "", "bfloat16"], [190, 1, 1, "", "buffers"], [190, 1, 1, "", "children"], [190, 1, 1, "", "compile"], [190, 3, 1, "", "container"], [190, 1, 1, "", "cpu"], [190, 1, 1, "", "cuda"], [190, 1, 1, "", "double"], [190, 1, 1, "", "eval"], [190, 1, 1, "", "extra_repr"], [190, 1, 1, "", "float"], [190, 1, 1, "", "forward"], [190, 1, 1, "", "get_buffer"], [190, 1, 1, "", "get_extra_state"], [190, 1, 1, "", "get_parameter"], [190, 1, 1, "", "get_submodule"], [190, 1, 1, "", "half"], [190, 1, 1, "", "ipu"], [190, 1, 1, "", "load_state_dict"], [190, 1, 1, "", "modules"], [190, 3, 1, "", "n_steps"], [190, 1, 1, "", "named_buffers"], [190, 1, 1, "", "named_children"], [190, 1, 1, "", "named_modules"], [190, 1, 1, "", "named_parameters"], [190, 1, 1, "", "parameters"], [190, 3, 1, "", "parent"], [190, 1, 1, "", "register_backward_hook"], [190, 1, 1, "", "register_buffer"], [190, 1, 1, "", "register_forward_hook"], [190, 1, 1, "", "register_forward_pre_hook"], [190, 1, 1, "", "register_full_backward_hook"], [190, 1, 1, "", "register_full_backward_pre_hook"], [190, 1, 1, "", "register_load_state_dict_post_hook"], [190, 1, 1, "", "register_module"], [190, 1, 1, "", "register_parameter"], [190, 1, 1, "", "register_state_dict_pre_hook"], [190, 1, 1, "", "requires_grad_"], [190, 1, 1, "", "set_extra_state"], [190, 1, 1, "", "share_memory"], [190, 1, 1, "", "state_dict"], [190, 1, 1, "", "to"], [190, 1, 1, "", "to_empty"], [190, 1, 1, "", "train"], [190, 1, 1, "", "transform_done_spec"], [190, 1, 1, "", "transform_env_batch_size"], [190, 1, 1, "", "transform_env_device"], [190, 1, 1, "", "transform_input_spec"], [190, 1, 1, "", "transform_observation_spec"], [190, 1, 1, "", "transform_output_spec"], [190, 1, 1, "", "transform_reward_spec"], [190, 1, 1, "", "type"], [190, 1, 1, "", "xpu"], [190, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[191, 2, 1, "", "RandomPolicy"], [192, 2, 1, "", "check_env_specs"], [193, 2, 1, "", "exploration_mode"], [194, 2, 1, "", "exploration_type"], [195, 2, 1, "", "get_available_libraries"], [196, 2, 1, "", "make_composite_from_td"], [197, 2, 1, "", "set_exploration_mode"], [198, 2, 1, "", "set_exploration_type"], [199, 2, 1, "", "step_mdp"], [200, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[201, 0, 1, "", "CEMPlanner"], [202, 0, 1, "", "Conv3dNet"], [203, 0, 1, "", "ConvNet"], [204, 0, 1, "", "DTActor"], [205, 0, 1, "", "DdpgCnnActor"], [206, 0, 1, "", "DdpgCnnQNet"], [207, 0, 1, "", "DdpgMlpActor"], [208, 0, 1, "", "DdpgMlpQNet"], [209, 0, 1, "", "DecisionTransformer"], [210, 0, 1, "", "Delta"], [211, 0, 1, "", "DistributionalDQNnet"], [212, 0, 1, "", "DistributionalQValueHook"], [213, 0, 1, "", "DreamerActor"], [214, 0, 1, "", "DuelingCnnDQNet"], [215, 0, 1, "", "GRU"], [216, 0, 1, "", "GRUCell"], [217, 0, 1, "", "GRUModule"], [218, 0, 1, "", "IndependentNormal"], [219, 0, 1, "", "LSTM"], [220, 0, 1, "", "LSTMCell"], [221, 0, 1, "", "LSTMModule"], [222, 0, 1, "", "MLP"], [223, 0, 1, "", "MPCPlannerBase"], [224, 0, 1, "", "MPPIPlanner"], [225, 0, 1, "", "MaskedCategorical"], [226, 0, 1, "", "MaskedOneHotCategorical"], [227, 0, 1, "", "MultiAgentConvNet"], [228, 0, 1, "", "MultiAgentMLP"], [229, 0, 1, "", "NoisyLazyLinear"], [230, 0, 1, "", "NoisyLinear"], [231, 0, 1, "", "NormalParamWrapper"], [232, 0, 1, "", "ObsDecoder"], [233, 0, 1, "", "ObsEncoder"], [234, 0, 1, "", "OneHotCategorical"], [235, 0, 1, "", "OnlineDTActor"], [236, 0, 1, "", "QMixer"], [237, 0, 1, "", "QValueHook"], [238, 0, 1, "", "RSSMPosterior"], [239, 0, 1, "", "RSSMPrior"], [240, 0, 1, "", "Squeeze2dLayer"], [241, 0, 1, "", "SqueezeLayer"], [242, 0, 1, "", "TanhDelta"], [243, 0, 1, "", "TanhNormal"], [244, 0, 1, "", "TruncatedNormal"], [245, 0, 1, "", "VDNMixer"], [246, 0, 1, "", "VmapModule"], [247, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[201, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[202, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[203, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[204, 1, 1, "", "default_config"], [204, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[205, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[206, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[207, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[208, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[209, 0, 1, "", "DTConfig"], [209, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[210, 1, 1, "", "log_prob"], [210, 3, 1, "", "mean"], [210, 3, 1, "", "mode"], [210, 1, 1, "", "rsample"], [210, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[211, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[213, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[214, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[215, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[216, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[217, 1, 1, "", "forward"], [217, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[218, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[219, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[220, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[221, 1, 1, "", "forward"], [221, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.MLP": [[222, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[224, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[225, 1, 1, "", "log_prob"], [225, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[226, 1, 1, "", "log_prob"], [226, 1, 1, "", "rsample"], [226, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[229, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[231, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[232, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[233, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[234, 1, 1, "", "log_prob"], [234, 3, 1, "", "mode"], [234, 1, 1, "", "rsample"], [234, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[235, 1, 1, "", "default_config"], [235, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[236, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[238, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[239, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[241, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[242, 3, 1, "", "mean"], [242, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[243, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[244, 1, 1, "", "log_prob"], [244, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[245, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[246, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[248, 0, 1, "", "Actor"], [249, 0, 1, "", "ActorCriticOperator"], [250, 0, 1, "", "ActorCriticWrapper"], [251, 0, 1, "", "ActorValueOperator"], [252, 0, 1, "", "AdditiveGaussianWrapper"], [253, 0, 1, "", "DecisionTransformerInferenceWrapper"], [254, 0, 1, "", "DistributionalQValueActor"], [255, 0, 1, "", "DistributionalQValueModule"], [256, 0, 1, "", "EGreedyModule"], [257, 0, 1, "", "EGreedyWrapper"], [258, 0, 1, "", "LMHeadActorValueOperator"], [259, 0, 1, "", "MultiStepActorWrapper"], [260, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [261, 0, 1, "", "ProbabilisticActor"], [262, 0, 1, "", "QValueActor"], [263, 0, 1, "", "QValueModule"], [264, 0, 1, "", "SafeModule"], [265, 0, 1, "", "SafeProbabilisticModule"], [266, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [267, 0, 1, "", "SafeSequential"], [268, 0, 1, "", "TanhModule"], [269, 0, 1, "", "ValueOperator"], [270, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[249, 1, 1, "", "get_critic_operator"], [249, 1, 1, "", "get_policy_head"], [249, 1, 1, "", "get_value_head"], [249, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[250, 1, 1, "", "get_policy_head"], [250, 1, 1, "", "get_policy_operator"], [250, 1, 1, "", "get_value_head"], [250, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[251, 1, 1, "", "get_policy_head"], [251, 1, 1, "", "get_policy_operator"], [251, 1, 1, "", "get_value_head"], [251, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "mask_context"], [253, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[255, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[259, 1, 1, "", "forward"], [259, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[263, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[264, 1, 1, "", "random"], [264, 1, 1, "", "random_sample"], [264, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[265, 1, 1, "", "random"], [265, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[268, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[270, 1, 1, "", "get_reward_operator"], [270, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[271, 0, 1, "", "biased_softplus"], [272, 0, 1, "", "get_primers_from_module"], [273, 0, 1, "", "inv_softplus"], [274, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[271, 1, 1, "", "forward"]], "torchrl.objectives": [[275, 0, 1, "", "A2CLoss"], [276, 0, 1, "", "CQLLoss"], [277, 0, 1, "", "ClipPPOLoss"], [278, 0, 1, "", "DDPGLoss"], [279, 0, 1, "", "DQNLoss"], [280, 0, 1, "", "DTLoss"], [281, 0, 1, "", "DiscreteCQLLoss"], [282, 0, 1, "", "DiscreteIQLLoss"], [283, 0, 1, "", "DiscreteSACLoss"], [284, 0, 1, "", "DistributionalDQNLoss"], [285, 0, 1, "", "DreamerActorLoss"], [286, 0, 1, "", "DreamerModelLoss"], [287, 0, 1, "", "DreamerValueLoss"], [288, 0, 1, "", "HardUpdate"], [289, 0, 1, "", "IQLLoss"], [290, 0, 1, "", "KLPENPPOLoss"], [291, 0, 1, "", "LossModule"], [292, 0, 1, "", "OnlineDTLoss"], [293, 0, 1, "", "PPOLoss"], [294, 0, 1, "", "REDQLoss"], [295, 0, 1, "", "ReinforceLoss"], [296, 0, 1, "", "SACLoss"], [297, 0, 1, "", "SoftUpdate"], [298, 0, 1, "", "TD3Loss"], [299, 0, 1, "", "ValueEstimators"], [300, 0, 1, "", "default_value_kwargs"], [301, 0, 1, "", "distance_loss"], [302, 0, 1, "", "hold_out_net"], [303, 0, 1, "", "hold_out_params"], [305, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[277, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[280, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[282, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[286, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[287, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "loss_value_diff"], [289, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[290, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[291, 1, 1, "", "convert_to_functional"], [291, 1, 1, "", "forward"], [291, 1, 1, "", "make_value_estimator"], [291, 1, 1, "", "named_parameters"], [291, 1, 1, "", "parameters"], [291, 1, 1, "", "set_keys"], [291, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[292, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[294, 1, 1, "", "forward"], [294, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[296, 1, 1, "", "forward"], [296, 1, 1, "", "load_state_dict"], [296, 1, 1, "", "make_value_estimator"], [296, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[298, 1, 1, "", "forward"], [298, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[304, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[304, 1, 1, "", "forward"], [304, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[306, 0, 1, "", "GAE"], [307, 0, 1, "", "TD0Estimator"], [308, 0, 1, "", "TD1Estimator"], [309, 0, 1, "", "TDLambdaEstimator"], [310, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[306, 1, 1, "", "forward"], [306, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[308, 1, 1, "", "forward"], [308, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "set_keys"], [310, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[311, 0, 1, "", "generalized_advantage_estimate"], [312, 0, 1, "", "reward2go"], [313, 0, 1, "", "td0_advantage_estimate"], [314, 0, 1, "", "td0_return_estimate"], [315, 0, 1, "", "td1_advantage_estimate"], [316, 0, 1, "", "td1_return_estimate"], [317, 0, 1, "", "td_lambda_advantage_estimate"], [318, 0, 1, "", "td_lambda_return_estimate"], [319, 0, 1, "", "vec_generalized_advantage_estimate"], [320, 0, 1, "", "vec_td1_advantage_estimate"], [321, 0, 1, "", "vec_td1_return_estimate"], [322, 0, 1, "", "vec_td_lambda_advantage_estimate"], [323, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[324, 2, 1, "", "PixelRenderTransform"], [325, 2, 1, "", "TensorDictRecorder"], [326, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[327, 2, 1, "", "Logger"], [329, 2, 1, "", "generate_exp_name"], [330, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[328, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[331, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[332, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[333, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[334, 0, 1, "", "BatchSubSampler"], [335, 0, 1, "", "ClearCudaCache"], [336, 0, 1, "", "CountFramesLog"], [337, 0, 1, "", "LogReward"], [338, 0, 1, "", "OptimizerHook"], [339, 0, 1, "", "Recorder"], [340, 0, 1, "", "ReplayBufferTrainer"], [341, 0, 1, "", "RewardNormalizer"], [342, 0, 1, "", "SelectKeys"], [343, 0, 1, "", "Trainer"], [344, 0, 1, "", "TrainerHookBase"], [345, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[334, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[335, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[336, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[337, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[338, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[339, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[340, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[341, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[342, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[344, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[345, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[346, 2, 1, "", "correct_for_frame_skip"], [347, 2, 1, "", "get_stats_random_rollout"], [348, 2, 1, "", "make_collector_offpolicy"], [349, 2, 1, "", "make_collector_onpolicy"], [350, 2, 1, "", "make_dqn_loss"], [351, 2, 1, "", "make_replay_buffer"], [352, 2, 1, "", "make_target_updater"], [353, 2, 1, "", "make_trainer"], [354, 2, 1, "", "parallel_env_constructor"], [355, 2, 1, "", "sync_async_collector"], [356, 2, 1, "", "sync_sync_collector"], [357, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 361, 362, 363, 364, 366, 367, 368, 371, 378, 379, 380, 384, 385], "instal": [0, 6, 7, 384], "get": [0, 370, 371, 372, 373, 374, 375], "start": [0, 370, 371, 372, 373, 374, 375], "tutori": [0, 368, 378, 379], "basic": [0, 382], "intermedi": [0, 8], "advanc": 0, "refer": [0, 359], "knowledg": [0, 360], "base": [0, 2, 7, 360], "indic": 0, "tabl": 0, "collector": [1, 366, 367, 368, 369, 373, 375, 378, 379, 384], "packag": [1, 2, 3, 361, 362, 363, 364], "batch": [1, 366, 380, 382], "size": [1, 366, 382], "replai": [1, 2, 366, 367, 368, 369, 373, 375, 378, 379, 382, 384], "buffer": [1, 2, 366, 367, 368, 369, 373, 375, 378, 379, 382, 384], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 366, 367, 368, 373, 375, 378, 379, 384], "distribut": [1, 361], "helper": [1, 3], "function": [1, 4, 362, 367, 368, 372, 378, 379, 384], "compos": [2, 146], "support": 2, "type": 2, "choos": 2, "storag": [2, 88, 366, 373, 382], "sampl": [2, 382], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 367, 382], "trajectori": [2, 382], "checkpoint": [2, 363], "episod": [2, 4], "format": 2, "ted": [2, 370], "The": [2, 366], "rational": 2, "behind": 2, "structur": [2, 382], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 361, 382, 384], "special": [2, 371, 384], "case": 2, "footnot": 2, "multi": [2, 3, 361, 362, 377, 378, 379], "agent": [2, 3, 4, 361, 362, 378, 379], "present": 2, "polici": [2, 4, 366, 368, 369, 371, 375, 377, 378, 379, 380], "rnn": 2, "transform": [2, 3, 181, 366, 368, 370, 378, 379, 380, 382, 384, 385], "step": [2, 366, 368, 370, 373, 378, 379, 382, 385], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 52], "reinforc": [2, 362, 368, 378, 379], "learn": [2, 4, 368, 378, 379], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 361, 362, 363, 378], "env": [3, 380, 384, 385], "vector": [3, 384], "environ": [3, 4, 6, 7, 366, 367, 368, 369, 370, 375, 377, 378, 379, 380, 384, 385], "auto": 3, "reset": [3, 380, 385], "dynam": [3, 4, 382], "spec": [3, 380, 385], "clone": [3, 7], "mask": 3, "action": [3, 4, 369, 380], "record": [3, 339, 363, 366, 374], "video": [3, 374], "domain": [3, 361], "specif": [3, 361, 377], "librari": [3, 384], "thing": [4, 366, 380], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 370, 372, 384], "gener": [4, 361], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 366, 375, 380], "algorithm": [4, 361], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 366, 367, 372, 375], "return": [4, 362], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 384], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 377], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 366, 367, 368], "standard": 4, "explor": [4, 361, 366, 367, 371], "valu": [4, 361, 362, 366, 368, 369, 371], "loss": [4, 366, 367, 368, 369, 375, 378, 379], "earli": 4, "train": [4, 8, 362, 366, 368, 369, 372, 375, 378, 379, 380], "roughli": 4, "uniformli": 4, "random": [4, 378, 379], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 367], "increas": 4, "an": [4, 368, 369, 370, 380], "can": 4, "low": 4, "forward": [4, 366], "model": [4, 361, 366, 367, 369, 372, 381, 384], "also": 4, "us": [4, 6, 9, 369, 381, 382, 384], "offlin": 4, "observ": [4, 366], "space": 4, "effect": [4, 380], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 385], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 366], "render": [7, 375, 378, 379, 385], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 366], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 380], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "adaptiveklcontrol": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "constantklcontrol": 27, "discretetensorspec": 28, "flat2t": 29, "h5combin": 30, "h5split": 31, "lazystackedcompositespec": 32, "lazystackedtensorspec": 33, "multidiscretetensorspec": 34, "multionehotdiscretetensorspec": 35, "multistep": 36, "nested2t": 37, "nontensorspec": 38, "onehotdiscretetensorspec": 39, "pairwisedataset": 40, "prioritizedreplaybuff": 41, "promptdata": 42, "prompttensordicttoken": 43, "replaybuff": 44, "rewarddata": 45, "rolloutfrommodel": 46, "ted2flat": 47, "ted2nest": 48, "tensordictprioritizedreplaybuff": 49, "tensordictreplaybuff": 50, "tensordicttoken": 51, "tokenizeddatasetload": 53, "unboundedcontinuoustensorspec": 54, "unboundeddiscretetensorspec": 55, "check_no_exclusive_kei": 56, "consolidate_spec": 57, "contains_lazy_spec": 58, "create_infinite_iter": 59, "ataridqnexperiencereplai": 60, "basedatasetexperiencereplai": 61, "d4rlexperiencereplai": 62, "gendgrlexperiencereplai": 63, "minariexperiencereplai": 64, "openmlexperiencereplai": 65, "openxexperiencereplai": 66, "robosetexperiencereplai": 67, "vd4rlexperiencereplai": 68, "get_dataload": 69, "flatstoragecheckpoint": 70, "h5storagecheckpoint": 71, "immutabledatasetwrit": 72, "lazymemmapstorag": 73, "lazytensorstorag": 74, "liststorag": 75, "liststoragecheckpoint": 76, "nestedstoragecheckpoint": 77, "prioritizedsampl": 78, "prioritizedslicesampl": 79, "randomsampl": 80, "replaybufferensembl": 81, "roundrobinwrit": 82, "sampler": 83, "samplerensembl": 84, "samplerwithoutreplac": 85, "slicesampl": 86, "slicesamplerwithoutreplac": 87, "storagecheckpointerbas": 89, "storageensembl": 90, "storageensemblecheckpoint": 91, "tensordictmaxvaluewrit": 92, "tensordictroundrobinwrit": 93, "tensorstorag": 94, "tensorstoragecheckpoint": 95, "writer": 96, "writerensembl": 97, "braxenv": 98, "braxwrapp": 99, "dmcontrolenv": 100, "dmcontrolwrapp": 101, "envbas": [102, 380], "envcreat": 103, "envmetadata": 104, "gymenv": 105, "gymlikeenv": 106, "gymwrapp": 107, "habitatenv": 108, "isaacgymenv": 109, "isaacgymwrapp": 110, "jumanjienv": 111, "jumanjiwrapp": 112, "mogymenv": 113, "mogymwrapp": 114, "marlgroupmaptyp": 115, "meltingpotenv": 116, "meltingpotwrapp": 117, "modelbasedenvbas": 118, "multithreadedenv": 119, "multithreadedenvwrapp": 120, "openmlenv": 121, "parallelenv": 122, "pettingzooenv": 123, "pettingzoowrapp": 124, "robohiveenv": 125, "smacv2env": 126, "smacv2wrapp": 127, "serialenv": 128, "vmasenv": 129, "vmaswrapp": 130, "check_marl_group": 131, "gym_backend": 132, "dreamerdecod": 133, "dreamerenv": 134, "set_gym_backend": 135, "actionmask": 136, "autoresetenv": 137, "autoresettransform": 138, "batchsizetransform": 139, "binarizereward": 140, "burnintransform": 141, "catfram": [142, 382], "cattensor": 143, "centercrop": 144, "cliptransform": 145, "dtypecasttransform": 147, "devicecasttransform": 148, "discreteactionproject": 149, "doubletofloat": 150, "endoflifetransform": 151, "excludetransform": 152, "finitetensordictcheck": 153, "flattenobserv": 154, "frameskiptransform": 155, "grayscal": 156, "inittrack": 157, "klrewardtransform": 158, "noopresetenv": 159, "observationnorm": 160, "observationtransform": 161, "permutetransform": 162, "pinmemorytransform": 163, "r3mtransform": 164, "randomcroptensordict": 165, "removeemptyspec": 166, "renametransform": 167, "resiz": 168, "reward2gotransform": 169, "rewardclip": 170, "rewardsc": 171, "rewardsum": 172, "selecttransform": 173, "signtransform": 174, "squeezetransform": 175, "stepcount": 176, "targetreturn": 177, "tensordictprim": 178, "timemaxpool": 179, "totensorimag": 180, "transformedenv": 182, "unsqueezetransform": 183, "vc1transform": 184, "viprewardtransform": 185, "viptransform": 186, "vecgymenvtransform": 187, "vecnorm": [188, 385], "gsdenois": 189, "multisteptransform": 190, "randompolici": 191, "check_env_spec": 192, "exploration_mod": 193, "exploration_typ": 194, "get_available_librari": 195, "make_composite_from_td": 196, "set_exploration_mod": 197, "set_exploration_typ": 198, "step_mdp": 199, "terminated_or_trunc": 200, "cemplann": 201, "conv3dnet": 202, "convnet": 203, "dtactor": 204, "ddpgcnnactor": 205, "ddpgcnnqnet": 206, "ddpgmlpactor": 207, "ddpgmlpqnet": 208, "decisiontransform": 209, "delta": 210, "distributionaldqnnet": 211, "distributionalqvaluehook": 212, "dreameractor": 213, "duelingcnndqnet": 214, "gru": 215, "grucel": 216, "grumodul": 217, "independentnorm": 218, "lstm": [219, 369], "lstmcell": 220, "lstmmodul": 221, "mlp": [222, 369], "mpcplannerbas": 223, "mppiplann": 224, "maskedcategor": 225, "maskedonehotcategor": 226, "multiagentconvnet": 227, "multiagentmlp": 228, "noisylazylinear": 229, "noisylinear": 230, "normalparamwrapp": 231, "obsdecod": 232, "obsencod": 233, "onehotcategor": 234, "onlinedtactor": 235, "qmixer": [236, 362], "qvaluehook": 237, "rssmposterior": 238, "rssmprior": 239, "squeeze2dlay": 240, "squeezelay": 241, "tanhdelta": 242, "tanhnorm": 243, "truncatednorm": 244, "vdnmixer": 245, "vmapmodul": 246, "reset_nois": 247, "actor": [248, 361, 366, 371], "actorcriticoper": 249, "actorcriticwrapp": 250, "actorvalueoper": 251, "additivegaussianwrapp": 252, "decisiontransformerinferencewrapp": 253, "distributionalqvalueactor": 254, "distributionalqvaluemodul": 255, "egreedymodul": 256, "egreedywrapp": 257, "lmheadactorvalueoper": 258, "multistepactorwrapp": 259, "ornsteinuhlenbeckprocesswrapp": 260, "probabilisticactor": 261, "qvalueactor": 262, "qvaluemodul": 263, "safemodul": [264, 361], "safeprobabilisticmodul": 265, "safeprobabilistictensordictsequenti": 266, "safesequenti": 267, "tanhmodul": 268, "valueoper": 269, "worldmodelwrapp": 270, "biased_softplu": 271, "get_primers_from_modul": 272, "inv_softplu": 273, "map": [274, 378], "a2closs": 275, "cqlloss": 276, "clipppoloss": 277, "ddpgloss": 278, "dqnloss": 279, "dtloss": 280, "discretecqlloss": 281, "discreteiqlloss": 282, "discretesacloss": 283, "distributionaldqnloss": 284, "dreameractorloss": 285, "dreamermodelloss": 286, "dreamervalueloss": 287, "hardupd": 288, "iqlloss": 289, "klpenppoloss": 290, "lossmodul": [291, 366, 372], "onlinedtloss": 292, "ppoloss": 293, "redqloss": 294, "reinforceloss": 295, "sacloss": 296, "softupd": 297, "td3loss": 298, "valueestim": 299, "default_value_kwarg": 300, "distance_loss": 301, "hold_out_net": 302, "hold_out_param": 303, "qmixerloss": 304, "next_state_valu": 305, "gae": 306, "td0estim": 307, "td1estim": 308, "tdlambdaestim": 309, "valueestimatorbas": 310, "generalized_advantage_estim": 311, "reward2go": 312, "td0_advantage_estim": 313, "td0_return_estim": 314, "td1_advantage_estim": 315, "td1_return_estim": 316, "td_lambda_advantage_estim": 317, "td_lambda_return_estim": 318, "vec_generalized_advantage_estim": 319, "vec_td1_advantage_estim": 320, "vec_td1_return_estim": 321, "vec_td_lambda_advantage_estim": 322, "vec_td_lambda_return_estim": 323, "pixelrendertransform": 324, "tensordictrecord": 325, "videorecord": 326, "logger": [327, 363, 374, 375], "csvlogger": 328, "generate_exp_nam": 329, "get_logg": 330, "mlflowlogg": 331, "tensorboardlogg": 332, "wandblogg": 333, "batchsubsampl": 334, "clearcudacach": 335, "countframeslog": 336, "logreward": 337, "optimizerhook": 338, "replaybuffertrain": 340, "rewardnorm": 341, "selectkei": 342, "trainer": [343, 363, 367], "trainerhookbas": 344, "updateweight": 345, "correct_for_frame_skip": 346, "get_stats_random_rollout": 347, "make_collector_offpolici": 348, "make_collector_onpolici": 349, "make_dqn_loss": 350, "make_replay_buff": 351, "make_target_updat": 352, "make_train": 353, "parallel_env_constructor": 354, "sync_async_collector": 355, "sync_sync_collector": 356, "transformed_env_constructor": 357, "readm": [358, 376], "tuto": [358, 376], "api": 359, "contribut": [360, 384], "content": 360, "modul": [361, 366, 369, 371, 375, 384], "tensordictmodul": [361, 371, 384], "wrapper": [361, 371], "probabilist": [361, 371], "q": [361, 367, 369, 371], "oper": 361, "join": 361, "hook": [361, 363, 367], "regular": 361, "planner": 361, "object": [362, 366, 372, 384], "dqn": [362, 367, 369], "ddpg": [362, 366, 378], "sac": 362, "redq": 362, "iql": 362, "cql": 362, "dt": 362, "td3": 362, "ppo": [362, 368, 379], "a2c": 362, "dreamer": 362, "builder": 363, "_util": 364, "comput": [365, 367, 380, 383], "time": [365, 366, 383], "code": [366, 380], "overview": [366, 369], "setup": [366, 369], "__init__": 366, "method": 366, "estim": 366, "put": 366, "togeth": [366, 380], "call": 366, "parallel": [366, 377, 385], "execut": [366, 377, 380], "stat": 366, "build": [366, 367, 375, 382], "evalu": 366, "construct": 366, "target": [366, 367, 372], "network": [366, 367, 368, 369, 371, 378, 379], "updat": 366, "experi": [366, 380], "result": [366, 368, 378, 379], "conclus": [366, 367, 368, 369, 378, 379, 380, 382], "next": [366, 368, 370, 373, 378, 379, 382], "A": [367, 382], "exampl": [367, 382], "deep": 367, "collect": [367, 368, 373], "paramet": [367, 368, 372], "hyperparamet": [367, 368, 378, 379], "regist": 367, "possibl": 367, "improv": 367, "defin": [368, 378, 379], "loop": [368, 369, 375, 378, 379, 380], "recurr": 369, "convolut": 369, "select": 369, "further": [369, 372], "read": 369, "creat": 370, "run": [370, 385], "rollout": [370, 377, 378, 379, 380, 385], "s": [371, 372], "output": 372, "consider": 372, "log": 374, "own": 375, "first": 375, "design": 375, "divers": 377, "competit": 378, "group": 378, "critic": [378, 379], "pendulum": 380, "write": 380, "_step": 380, "simul": 380, "_reset": 380, "metadata": 380, "_spec": 380, "shape": 380, "seed": [380, 385], "wrap": 380, "class": [380, 384], "test": 380, "our": 380, "custom": [380, 382], "simpl": 380, "pretrain": 381, "vanilla": 382, "integr": 382, "tensorclass": 382, "other": 382, "tensor": 382, "pytre": 382, "iter": 382, "over": 382, "fix": 382, "priorit": 382, "save": 382, "raw": 382, "imag": 382, "more": 382, "complex": 382, "introduct": 384, "config": 384, "sequenc": 384, "program": 384, "ensembl": 384, "meta": 384, "state": 384, "frame_skip": 385, "deepmind": 385, "control": 385, "devic": 385, "close": 385, "access": 385, "attribut": 385, "kwarg": 385}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})