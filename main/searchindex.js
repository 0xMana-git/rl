Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 92, 94, 95, 97, 99, 101, 103, 105, 106, 107, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 131, 132, 134, 137, 138, 139, 140, 141, 144, 145, 148, 153, 154, 156, 157, 159, 160, 162, 166, 168, 169, 172, 178, 179, 183, 184, 185, 186, 188, 196, 197, 198, 199, 200, 201, 203, 206, 207, 209, 211, 219, 220, 223, 224, 226, 227, 228, 229, 236, 238, 240, 242, 244, 245, 246, 250, 251, 253, 260, 261, 266, 267, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 292, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 331, 332, 333, 334, 335, 349, 351, 354, 358, 363, 364, 368, 369, 372, 379, 380, 381, 382, 385, 386, 387, 391, 392, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 409, 410], "open": [0, 5, 7, 12, 48, 50, 53, 79, 86, 392, 403, 404, 409], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "reinforc": [0, 3, 9, 76, 129, 130, 160, 226, 227, 228, 229, 233, 260, 261, 280, 297, 298, 300, 303, 304, 305, 307, 312, 313, 319, 320, 321, 322, 384, 390, 392, 395, 396, 401, 405, 408, 409], "learn": [0, 3, 7, 8, 9, 18, 43, 76, 77, 78, 80, 81, 115, 129, 130, 134, 137, 144, 160, 226, 227, 228, 229, 233, 247, 254, 260, 261, 280, 297, 298, 300, 303, 304, 305, 307, 311, 312, 313, 318, 319, 320, 321, 322, 384, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 408, 409, 410], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 73, 131, 196, 254, 274, 283, 291, 297, 299, 314, 315, 317, 319, 359, 383, 385, 386, 387, 388, 391, 392, 393, 398, 401, 403, 404, 406, 407, 410], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 51, 61, 113, 114, 123, 132, 213, 384, 385, 386, 389, 391, 392, 393, 395, 396, 398, 403, 404, 405, 410], "pytorch": [0, 1, 2, 3, 23, 77, 146, 147, 199, 211, 238, 242, 253, 254, 368, 383, 385, 386, 388, 391, 393, 394, 397, 401, 403, 404, 405, 406, 407, 409, 410], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 43, 61, 76, 115, 119, 123, 128, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 152, 207, 209, 242, 358, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 98, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 163, 164, 166, 168, 169, 170, 178, 179, 183, 184, 188, 191, 195, 196, 197, 200, 201, 203, 205, 207, 209, 211, 217, 219, 221, 222, 223, 224, 226, 236, 237, 238, 240, 241, 242, 244, 246, 247, 250, 251, 252, 254, 255, 270, 272, 274, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 349, 351, 358, 364, 380, 381, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "directli": [0, 3, 4, 8, 23, 73, 94, 111, 112, 115, 118, 119, 131, 137, 138, 144, 145, 179, 188, 206, 315, 322, 382, 386, 392, 393, 395, 403, 404, 405, 407], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 156, 157, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 176, 177, 179, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 209, 210, 214, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 317, 318, 319, 320, 322, 323, 325, 329, 330, 331, 332, 333, 334, 337, 349, 350, 351, 359, 365, 368, 371, 372, 376, 378, 379, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410], "pypi": [0, 2, 409], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 99, 115, 119, 122, 125, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 164, 183, 197, 199, 200, 201, 203, 205, 207, 208, 209, 222, 223, 224, 238, 240, 241, 242, 244, 245, 251, 252, 253, 262, 270, 271, 275, 277, 283, 286, 287, 300, 311, 315, 322, 351, 358, 365, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 407, 410], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 105, 115, 118, 119, 120, 122, 123, 125, 129, 130, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 199, 203, 208, 209, 218, 219, 220, 222, 233, 242, 245, 253, 255, 274, 279, 280, 286, 291, 297, 307, 315, 317, 331, 336, 344, 358, 363, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 406, 410], "about": [0, 3, 5, 7, 9, 18, 19, 20, 41, 61, 77, 80, 81, 115, 137, 144, 387, 391, 392, 393, 395, 396, 397, 398, 399, 400, 403, 404, 405, 407, 409, 410], "instruct": [0, 6, 7, 10, 22, 75, 168, 170, 391, 392, 393, 394, 403, 404, 407], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 52, 59, 60, 94, 137, 144, 275, 276, 277, 386, 391, 395, 397, 398, 400, 402, 404], "section": [0, 2, 3, 4, 24, 238, 242, 392, 395, 400, 403, 404], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 43, 52, 64, 82, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 223, 224, 238, 241, 242, 245, 251, 270, 283, 286, 365, 391, 392, 393, 394, 395, 403, 405], "pip": [0, 10, 78, 395, 396, 397, 398, 399, 400, 404, 409, 410], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 39, 41, 43, 48, 49, 50, 52, 53, 59, 60, 63, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 88, 92, 93, 94, 97, 99, 100, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 153, 157, 159, 160, 161, 162, 163, 165, 166, 169, 173, 178, 179, 181, 183, 184, 187, 188, 191, 192, 196, 197, 198, 201, 202, 203, 205, 206, 207, 209, 217, 219, 223, 224, 230, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 261, 272, 274, 280, 282, 283, 284, 285, 290, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 355, 359, 365, 372, 378, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 133, 152, 238, 239, 240, 242, 243, 244, 248, 249, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 39, 40, 41, 42, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 99, 100, 105, 107, 115, 118, 119, 120, 125, 137, 138, 144, 145, 156, 157, 160, 161, 173, 179, 183, 184, 199, 201, 203, 224, 238, 240, 242, 244, 245, 251, 253, 257, 274, 278, 279, 280, 283, 284, 286, 287, 299, 309, 314, 315, 317, 350, 351, 367, 386, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "low": [0, 3, 27, 30, 62, 64, 92, 115, 119, 137, 138, 144, 145, 153, 163, 168, 214, 268, 269, 270, 278, 280, 283, 290, 391, 392, 393, 394, 403, 404, 405, 409, 410], "high": [0, 3, 9, 27, 30, 48, 50, 53, 59, 64, 92, 115, 119, 137, 138, 144, 145, 153, 163, 168, 178, 214, 268, 269, 270, 278, 280, 283, 290, 331, 336, 344, 391, 392, 393, 394, 403, 404, 405, 407, 409, 410], "level": [0, 2, 3, 4, 22, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 118, 120, 160, 195, 314, 391, 392, 398, 409], "abstract": [0, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 45, 46, 55, 56, 62, 64, 65, 66, 67, 68, 73, 74, 78, 109, 115, 180, 246, 335, 360, 369, 388, 393, 405, 409], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 94, 97, 98, 100, 101, 103, 105, 107, 115, 116, 118, 119, 120, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 155, 156, 157, 159, 160, 163, 164, 166, 167, 168, 169, 170, 172, 173, 177, 178, 181, 183, 188, 191, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 214, 216, 217, 221, 229, 231, 236, 238, 239, 240, 242, 243, 244, 246, 248, 249, 250, 251, 252, 254, 258, 261, 262, 265, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 326, 329, 330, 331, 332, 333, 334, 335, 349, 358, 365, 378, 382, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 63, 64, 65, 66, 67, 68, 159, 168, 272, 315, 386, 409], "effici": [0, 1, 2, 4, 8, 238, 254, 300, 386, 391, 392, 393, 394, 397, 398, 400, 402, 403, 404, 406, 407, 409], "modular": [0, 73, 289, 407, 409], "document": [0, 2, 5, 7, 11, 18, 19, 21, 43, 79, 115, 119, 135, 136, 137, 138, 144, 145, 201, 209, 383, 392, 394, 395, 398, 401, 409], "properli": [0, 1, 64, 115, 119, 137, 138, 144, 145, 216, 240, 244, 393, 399, 403, 404, 405, 409], "test": [0, 3, 5, 111, 112, 124, 125, 129, 130, 203, 211, 240, 244, 364, 378, 393, 394, 409], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 91, 92, 94, 97, 99, 100, 101, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 156, 157, 159, 160, 164, 166, 169, 170, 171, 179, 181, 183, 188, 190, 191, 192, 195, 196, 197, 200, 201, 203, 205, 206, 207, 209, 211, 216, 217, 218, 220, 221, 226, 227, 228, 229, 230, 233, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 254, 255, 260, 261, 263, 264, 265, 274, 275, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 337, 349, 351, 353, 356, 357, 358, 359, 363, 378, 380, 381, 384, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410], "code": [0, 3, 5, 7, 8, 14, 15, 79, 115, 119, 137, 138, 144, 145, 183, 201, 203, 220, 238, 239, 240, 242, 243, 244, 283, 289, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410], "aim": [0, 2, 3, 7, 55, 56, 183, 203, 205, 245, 371, 385, 386, 387, 391, 392, 409], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 78, 81, 82, 86, 87, 101, 103, 107, 108, 110, 111, 112, 118, 120, 124, 132, 134, 137, 139, 141, 157, 160, 170, 179, 197, 198, 200, 213, 233, 269, 272, 279, 280, 283, 286, 289, 307, 315, 331, 332, 333, 334, 356, 384, 386, 388, 393, 394, 395, 396, 404, 405, 407, 409], "research": [0, 7, 9, 129, 130, 220, 409], "most": [0, 1, 2, 3, 7, 8, 14, 15, 43, 99, 100, 115, 119, 137, 138, 144, 145, 168, 206, 211, 391, 393, 395, 396, 397, 398, 399, 400, 405, 409, 410], "written": [0, 1, 2, 3, 12, 34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 92, 94, 99, 100, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 153, 160, 170, 177, 191, 195, 198, 206, 209, 216, 217, 222, 260, 261, 274, 283, 286, 287, 291, 297, 299, 314, 317, 319, 330, 349, 350, 351, 386, 387, 388, 391, 394, 396, 402, 405, 409], "highli": [0, 2, 395, 409, 410], "wai": [0, 1, 2, 3, 4, 73, 77, 94, 105, 123, 183, 186, 205, 206, 240, 242, 244, 317, 331, 332, 333, 334, 386, 391, 392, 393, 395, 397, 398, 402, 403, 404, 405, 406, 407, 409, 410], "easili": [0, 1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 387, 391, 392, 393, 395, 396, 397, 400, 403, 404, 409, 410], "swap": [0, 1, 3, 118, 206, 393, 406, 409], "compon": [0, 1, 2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 233, 263, 279, 280, 285, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 363, 368, 391, 392, 393, 394, 396, 397, 400, 402, 403, 404, 405, 406, 409], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 51, 52, 54, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 103, 108, 115, 116, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 222, 225, 226, 230, 233, 234, 240, 244, 259, 262, 263, 269, 271, 278, 281, 282, 290, 293, 294, 296, 303, 316, 349, 351, 365, 382, 384, 390, 392, 394, 396, 398, 399, 400, 401, 406, 408], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 49, 51, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 110, 115, 116, 119, 123, 128, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 166, 169, 197, 201, 207, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 271, 272, 278, 280, 282, 285, 290, 293, 314, 351, 391, 392, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "write": [0, 2, 3, 8, 23, 43, 48, 49, 50, 51, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 103, 110, 115, 119, 163, 181, 182, 191, 193, 195, 199, 202, 217, 274, 286, 287, 289, 291, 300, 301, 302, 304, 305, 306, 313, 318, 320, 322, 323, 330, 335, 351, 386, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 98, 115, 119, 132, 137, 138, 142, 143, 144, 145, 157, 191, 200, 207, 209, 216, 217, 238, 240, 244, 260, 261, 286, 287, 292, 297, 298, 299, 302, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 358, 387, 391, 393, 394, 395, 397, 403, 404, 405, 409, 410], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 161, 164, 166, 167, 169, 179, 183, 188, 197, 200, 201, 203, 205, 209, 210, 248, 249, 272, 286, 297, 298, 300, 301, 313, 317, 318, 320, 322, 323, 337, 391, 393, 403, 404, 405, 407, 409, 410], "littl": [0, 1, 3, 61, 115, 119, 137, 138, 144, 145, 201, 297, 299, 314, 317, 319, 393, 394, 398, 407, 409, 410], "effort": [0, 3, 405, 407, 409], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 107, 108, 110, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 137, 138, 139, 140, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 179, 183, 184, 185, 186, 188, 191, 192, 193, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 329, 331, 332, 333, 334, 335, 349, 350, 358, 359, 361, 364, 365, 368, 370, 371, 372, 378, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "repo": [0, 6, 75, 160, 198, 203, 385, 404, 409], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 99, 100, 113, 114, 118, 120, 121, 141, 219, 237, 261, 302, 305, 313, 329, 397, 409], "align": [0, 238, 242, 409], "exist": [0, 2, 3, 4, 12, 18, 21, 43, 48, 50, 53, 63, 86, 115, 119, 137, 138, 144, 145, 161, 167, 201, 209, 300, 320, 372, 382, 403, 404, 409, 410], "ecosystem": [0, 398, 409], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 79, 86, 87, 94, 97, 99, 105, 107, 115, 116, 119, 123, 129, 130, 137, 138, 144, 145, 146, 147, 157, 160, 195, 196, 197, 198, 201, 209, 218, 219, 237, 238, 240, 242, 244, 250, 252, 261, 269, 280, 282, 287, 297, 300, 314, 315, 317, 319, 351, 391, 392, 393, 394, 395, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "dataset": [0, 36, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 92, 94, 97, 99, 100, 134, 207, 351, 384, 391, 392, 395, 406, 407, 409, 410], "pillar": [0, 409], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 156, 157, 159, 160, 161, 166, 167, 168, 169, 174, 178, 179, 183, 184, 185, 188, 191, 195, 196, 197, 198, 200, 201, 203, 206, 207, 211, 219, 221, 222, 240, 244, 246, 247, 261, 282, 304, 308, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 359, 361, 364, 371, 372, 373, 374, 378, 379, 380, 381, 382, 384, 385, 386, 390, 396, 397, 398, 399, 401, 406, 407, 408], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 48, 50, 53, 54, 63, 115, 119, 131, 137, 138, 144, 145, 166, 183, 197, 203, 205, 208, 209, 223, 224, 225, 230, 232, 240, 244, 245, 246, 247, 251, 252, 259, 262, 271, 275, 276, 277, 281, 286, 292, 294, 297, 298, 299, 300, 302, 303, 304, 305, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 329, 368, 373, 374, 375, 384, 385, 387, 388, 390, 393, 395, 398, 401, 403, 404, 405, 407, 408, 410], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 154, 157, 159, 160, 166, 167, 169, 171, 177, 179, 185, 188, 195, 201, 206, 209, 210, 211, 214, 217, 221, 233, 236, 237, 240, 244, 247, 250, 251, 260, 261, 263, 272, 274, 279, 282, 283, 284, 286, 289, 290, 291, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 349, 351, 358, 359, 365, 368, 370, 373, 378, 380, 381, 382, 384, 386, 387, 388, 390, 394, 395, 396, 397, 401, 405, 406, 407, 408, 410], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 43, 52, 54, 111, 112, 115, 119, 124, 125, 130, 137, 138, 139, 140, 144, 145, 148, 160, 183, 188, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 230, 238, 240, 242, 244, 293, 294, 295, 296, 315, 378, 384, 389, 391, 393, 396, 397, 398, 404, 405, 407, 409, 410], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 43, 48, 50, 53, 56, 86, 87, 91, 92, 105, 107, 115, 116, 119, 137, 138, 144, 145, 146, 157, 159, 161, 164, 165, 173, 179, 183, 191, 197, 200, 201, 203, 205, 209, 211, 238, 240, 241, 242, 244, 247, 251, 255, 263, 269, 270, 278, 280, 282, 283, 285, 286, 287, 297, 299, 300, 301, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 330, 331, 332, 333, 334, 349, 359, 371, 381, 386, 392, 393, 396, 397, 399, 403, 404, 406, 407, 409, 410], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 105, 115, 116, 119, 137, 138, 144, 145, 146, 157, 159, 161, 164, 173, 179, 183, 191, 197, 200, 201, 203, 205, 209, 211, 238, 240, 241, 242, 243, 244, 247, 251, 269, 270, 278, 283, 286, 287, 300, 320, 330, 340, 341, 342, 343, 345, 346, 347, 348, 349, 381, 386, 392, 393, 396, 399, 403, 404, 405, 406, 407, 409, 410], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 43, 54, 57, 73, 79, 115, 119, 137, 138, 144, 145, 157, 160, 188, 195, 209, 210, 240, 244, 260, 261, 365, 368, 370, 373, 374, 378, 380, 381, 384, 387, 388, 407, 410], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 91, 92, 94, 95, 97, 99, 100, 101, 106, 109, 110, 115, 119, 131, 137, 138, 144, 145, 153, 164, 166, 169, 183, 197, 200, 201, 203, 205, 206, 207, 209, 216, 217, 221, 223, 224, 238, 239, 242, 243, 245, 247, 250, 251, 274, 279, 280, 283, 285, 286, 291, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 337, 355, 359, 371, 378, 379, 380, 381, 382, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410], "etc": [0, 2, 3, 7, 8, 12, 43, 62, 79, 115, 119, 137, 138, 144, 145, 177, 201, 209, 245, 251, 269, 392, 393, 398, 407, 409, 410], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 101, 115, 119, 137, 138, 139, 140, 144, 145, 153, 156, 160, 166, 169, 170, 177, 178, 179, 195, 200, 201, 207, 209, 211, 217, 223, 224, 245, 250, 251, 252, 272, 282, 288, 289, 297, 299, 314, 317, 319, 322, 326, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 359, 368, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "few": [0, 2, 8, 119, 351, 359, 393, 394, 396, 403, 404, 407, 409, 410], "depend": [0, 1, 2, 3, 4, 7, 8, 27, 48, 50, 64, 118, 120, 121, 141, 146, 147, 166, 169, 291, 317, 386, 391, 393, 394, 403, 404, 405, 409, 410], "possibl": [0, 2, 3, 4, 23, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 55, 76, 79, 81, 92, 99, 105, 115, 119, 137, 138, 144, 145, 153, 164, 183, 197, 200, 201, 203, 205, 209, 223, 224, 238, 239, 242, 243, 286, 349, 364, 368, 386, 391, 393, 394, 396, 398, 399, 403, 404, 405, 407, 409, 410], "standard": [0, 3, 179, 190, 207, 218, 219, 220, 221, 234, 247, 253, 254, 259, 278, 322, 323, 331, 332, 333, 334, 391, 392, 395, 396, 404, 407, 409], "numpi": [0, 3, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 120, 137, 138, 144, 145, 199, 368, 405, 407, 409, 410], "common": [0, 2, 3, 4, 21, 62, 119, 124, 154, 275, 276, 277, 281, 297, 298, 299, 300, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 378, 385, 386, 388, 391, 393, 396, 399, 402, 403, 404, 405, 406, 409, 410], "openai": [0, 7, 24, 118, 120, 141, 393, 405, 409, 410], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 115, 116, 118, 119, 120, 121, 123, 129, 130, 132, 133, 137, 138, 141, 144, 145, 146, 147, 149, 152, 156, 160, 163, 170, 176, 177, 179, 181, 186, 188, 191, 197, 200, 206, 207, 209, 378, 385, 391, 392, 393, 394, 395, 399, 400, 405, 406, 407, 409], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 92, 94, 99, 100, 107, 113, 114, 115, 118, 119, 120, 121, 123, 125, 132, 133, 137, 138, 139, 140, 141, 144, 145, 153, 156, 160, 161, 163, 164, 166, 168, 169, 173, 179, 183, 184, 188, 195, 196, 197, 198, 200, 201, 203, 205, 207, 209, 242, 244, 250, 251, 274, 278, 279, 283, 284, 286, 287, 288, 289, 297, 299, 300, 301, 305, 306, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 331, 332, 333, 334, 335, 351, 358, 372, 387, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 410], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 268, 269, 270, 272, 274, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 356, 358, 359, 361, 362, 363, 364, 365, 366, 368, 372, 373, 374, 375, 377, 378, 380, 381, 382, 386, 394, 395, 398, 403, 404, 405, 407, 409], "On": [0, 3, 7, 18, 19, 20, 21, 30, 76, 239, 243, 386, 392, 403, 404], "end": [0, 2, 3, 14, 15, 17, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 98, 99, 100, 115, 119, 137, 138, 144, 145, 170, 181, 195, 196, 201, 209, 223, 224, 238, 239, 242, 243, 246, 282, 300, 320, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "come": [0, 1, 2, 3, 8, 43, 105, 115, 119, 128, 137, 138, 144, 145, 166, 169, 274, 275, 276, 277, 283, 291, 297, 299, 314, 317, 319, 351, 391, 392, 393, 394, 397, 398, 399, 400, 403, 404, 407, 409, 410], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 30, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 98, 101, 107, 115, 117, 119, 120, 129, 130, 131, 137, 138, 139, 140, 144, 145, 146, 147, 152, 154, 156, 157, 160, 161, 164, 166, 169, 176, 177, 183, 188, 195, 196, 197, 198, 200, 201, 203, 205, 207, 209, 211, 215, 217, 219, 238, 240, 242, 244, 246, 250, 251, 269, 278, 286, 299, 300, 306, 311, 315, 317, 320, 335, 359, 364, 365, 374, 382, 385, 386, 387, 389, 391, 392, 393, 394, 396, 397, 398, 402, 403, 404, 405, 406, 407, 409, 410], "re": [0, 2, 3, 8, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 115, 119, 137, 138, 144, 145, 209, 244, 248, 249, 252, 283, 287, 358, 388, 391, 393, 394, 395, 397, 402, 403, 405, 409, 410], "usabl": [0, 388, 394, 409], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 115, 116, 119, 120, 137, 138, 144, 145, 152, 156, 157, 166, 169, 201, 207, 209, 211, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 270, 272, 275, 276, 277, 278, 280, 282, 283, 285, 286, 287, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 378, 384, 386, 391, 394, 395, 396, 399, 402, 405, 407, 410], "cost": [0, 2, 29, 79, 297, 299, 314, 317, 319, 387, 391, 392, 403, 404, 405, 407], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 92, 94, 95, 97, 99, 100, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 221, 225, 226, 227, 228, 229, 231, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 258, 259, 262, 264, 265, 268, 269, 270, 271, 274, 275, 276, 277, 278, 282, 283, 285, 286, 287, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 326, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 355, 368, 371, 373, 378, 379, 380, 381, 382, 384, 386, 388, 391, 392, 393, 394, 396, 397, 399, 402, 403, 404, 405, 406, 407, 409, 410], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 49, 50, 53, 61, 63, 73, 76, 80, 81, 91, 92, 99, 115, 116, 119, 123, 128, 132, 137, 138, 139, 140, 144, 145, 159, 166, 169, 197, 199, 207, 209, 240, 244, 250, 251, 260, 261, 280, 285, 384, 388, 391, 392, 394, 395, 403, 404, 405, 406, 407, 409, 410], "good": [0, 1, 4, 9, 137, 391, 393, 394, 396, 404, 409, 410], "runtim": [0, 2, 3, 23, 43, 115, 119, 137, 138, 144, 145, 209, 405], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 148, 166, 169, 178, 201, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 299, 300, 309, 317, 320, 364, 368, 387, 391, 392, 393, 394, 395, 398, 400, 402, 403, 404, 405, 410], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 99, 100, 103, 110, 111, 112, 115, 118, 119, 120, 124, 125, 128, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 195, 197, 207, 209, 222, 240, 244, 260, 261, 275, 276, 277, 300, 306, 311, 315, 322, 351, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410], "read": [0, 2, 3, 7, 23, 30, 31, 34, 37, 49, 51, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 94, 101, 103, 107, 115, 118, 119, 120, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 181, 182, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 204, 206, 207, 209, 217, 222, 258, 274, 275, 276, 277, 279, 282, 283, 286, 287, 289, 291, 292, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 331, 332, 333, 334, 335, 351, 364, 368, 386, 391, 392, 393, 395, 396, 402, 403, 404, 405, 406, 410], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 388, 391, 395, 398, 402, 406, 410], "beyond": [0, 115, 119, 137, 138, 144, 145], "api": [0, 2, 3, 5, 23, 62, 139, 140, 141, 183, 205, 207, 386, 387, 388, 395, 396, 397, 398, 399, 403, 404, 405, 407, 409, 410], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 69, 71, 83, 84, 90, 99, 115, 116, 118, 119, 120, 131, 137, 138, 144, 145, 148, 160, 161, 172, 177, 184, 197, 199, 201, 209, 211, 240, 244, 274, 279, 280, 283, 284, 285, 286, 287, 300, 311, 322, 351, 383, 386, 387, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410], "paper": [0, 76, 79, 111, 112, 113, 114, 121, 124, 125, 129, 130, 132, 133, 141, 146, 147, 183, 203, 205, 238, 262, 271, 304, 312, 322, 391, 393, 403, 404], "releas": [0, 4, 7, 10, 43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320, 409], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 370, 378, 388, 391, 409], "so": [0, 2, 3, 4, 6, 7, 10, 11, 43, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 144, 145, 197, 207, 209, 288, 289, 391, 393, 394, 397, 400, 403, 404, 405, 410], "make": [0, 2, 3, 4, 7, 11, 43, 48, 49, 50, 52, 53, 54, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 97, 101, 103, 110, 115, 119, 120, 123, 125, 127, 133, 137, 138, 144, 145, 153, 171, 179, 183, 184, 188, 195, 203, 209, 211, 220, 222, 238, 239, 240, 242, 243, 244, 250, 251, 253, 279, 287, 297, 299, 314, 317, 319, 331, 332, 333, 334, 349, 365, 374, 382, 386, 387, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "sure": [0, 3, 4, 7, 78, 101, 119, 123, 188, 279, 382, 386, 391, 393, 394, 397, 403, 404, 405, 407, 409, 410], "alwai": [0, 2, 3, 14, 15, 20, 27, 30, 31, 37, 43, 56, 62, 64, 73, 82, 83, 84, 90, 115, 119, 137, 138, 144, 145, 177, 178, 207, 209, 307, 315, 386, 387, 392, 393, 394, 403, 404, 405, 407], "enjoi": [0, 2, 3, 79, 398], "latest": [0, 2, 3, 10, 132, 135, 136, 139, 140, 365, 393, 403, 404, 405, 409], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 62, 63, 77, 92, 99, 100, 115, 119, 128, 137, 138, 139, 140, 142, 143, 144, 145, 157, 160, 173, 177, 181, 197, 198, 202, 207, 211, 220, 223, 224, 234, 235, 238, 239, 240, 242, 243, 244, 245, 250, 253, 254, 287, 294, 297, 299, 314, 317, 319, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 382, 386, 391, 392, 393, 394, 396, 397, 398, 400, 405, 407, 410], "recent": [0, 7, 12, 206, 409, 410], "version": [0, 1, 2, 3, 6, 12, 26, 28, 31, 33, 37, 38, 40, 42, 43, 46, 47, 48, 50, 54, 65, 66, 67, 68, 76, 81, 99, 115, 118, 119, 120, 121, 132, 133, 137, 138, 139, 141, 144, 145, 146, 147, 206, 207, 209, 216, 220, 252, 277, 297, 299, 314, 315, 317, 319, 320, 331, 334, 385, 386, 387, 391, 393, 394, 395, 397, 400, 403, 404, 405, 406, 410], "although": [0, 1, 3, 8, 64, 115, 119, 137, 138, 144, 145, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 388, 391, 392, 398, 407], "core": [0, 3, 8, 388, 394, 396, 409], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 101, 103, 107, 115, 119, 137, 138, 144, 145, 207, 209, 398, 409], "backward": [0, 8, 43, 111, 112, 115, 119, 137, 138, 144, 145, 207, 209, 238, 239, 242, 243, 297, 298, 300, 301, 305, 306, 313, 317, 318, 319, 320, 322, 323, 391, 393, 394, 397, 398, 400, 403, 404, 405], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 43, 75, 94, 97, 99, 100, 101, 105, 115, 119, 121, 134, 137, 138, 144, 145, 160, 195, 203, 207, 209, 238, 239, 240, 242, 243, 244, 284, 297, 298, 300, 301, 302, 304, 305, 306, 313, 315, 317, 318, 319, 320, 322, 323, 326, 391, 394, 407, 409], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 47, 49, 50, 51, 52, 56, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 115, 116, 119, 124, 125, 128, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 156, 157, 159, 161, 164, 166, 167, 168, 169, 177, 179, 181, 183, 185, 188, 191, 195, 196, 197, 200, 201, 203, 205, 207, 209, 214, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 255, 259, 260, 261, 269, 272, 278, 279, 280, 282, 286, 290, 291, 297, 298, 299, 300, 301, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 330, 331, 332, 333, 334, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 359, 386, 387, 390, 391, 392, 393, 394, 396, 397, 398, 399, 402, 403, 404, 405, 407, 408, 409, 410], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 107, 111, 112, 115, 118, 119, 121, 122, 124, 125, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 153, 154, 156, 158, 160, 161, 163, 164, 165, 167, 168, 177, 178, 179, 183, 188, 191, 193, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 209, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 258, 260, 261, 264, 265, 268, 269, 270, 272, 274, 278, 280, 285, 286, 289, 290, 293, 294, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 329, 330, 331, 332, 333, 334, 337, 338, 339, 359, 366, 378, 382, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 49, 52, 59, 60, 75, 77, 78, 79, 80, 81, 119, 137, 144, 183, 186, 200, 205, 300, 303, 315, 387, 388, 391, 392, 393, 394, 396, 398, 407, 410], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 216, 217, 218, 219, 221, 222, 232, 233, 236, 237, 240, 244, 246, 247, 250, 251, 260, 261, 262, 263, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 349, 350, 359, 363, 364, 365, 367, 368, 384, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 410], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 86, 177, 185, 275, 276, 277, 286, 305, 313, 322, 384, 391, 403, 405, 409], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 43, 48, 49, 50, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 94, 102, 108, 115, 119, 137, 138, 144, 145, 152, 183, 205, 209, 247, 353, 358, 368, 388, 392, 400, 403], "root": [0, 2, 3, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 137, 160, 198, 216, 240, 241, 244, 269, 270, 394, 395, 403, 404, 405, 406, 407, 410], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 49, 61, 73, 76, 77, 78, 79, 80, 81, 91, 92, 111, 112, 113, 114, 121, 123, 124, 125, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 146, 147, 160, 183, 203, 220, 225, 226, 227, 228, 229, 230, 233, 234, 235, 242, 247, 248, 249, 254, 256, 257, 260, 261, 262, 264, 265, 271, 280, 297, 298, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 331, 336, 344, 383, 401, 406, 409], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 73, 76, 77, 79, 111, 112, 113, 114, 118, 121, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 157, 203, 220, 396, 400, 403, 404, 409], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 76, 79, 80, 111, 112, 113, 114, 121, 123, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 220, 406, 409], "setup": [0, 7, 111, 112, 123, 124, 125], "py": [0, 3, 24, 118, 120, 152, 262, 271, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410], "develop": [0, 3, 4, 7, 123, 391, 409], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 33, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 101, 105, 106, 107, 108, 109, 115, 117, 119, 121, 122, 137, 138, 141, 144, 145, 150, 153, 155, 156, 157, 159, 163, 168, 174, 177, 183, 184, 186, 193, 197, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 216, 218, 219, 221, 222, 223, 224, 233, 236, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 252, 254, 255, 272, 278, 279, 280, 282, 283, 284, 287, 289, 290, 293, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 329, 331, 332, 333, 334, 335, 337, 349, 352, 353, 356, 358, 361, 368, 370, 378, 387, 390, 391, 393, 396, 397, 398, 401, 405, 408, 410], "seri": [0, 2, 3, 7, 8, 85, 95, 105, 106, 109, 110, 144, 178, 200, 351, 386, 387, 391, 392, 393, 399, 400, 403, 404, 407, 410], "quick": [0, 73], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 54, 75, 81, 115, 119, 137, 138, 144, 145, 156, 159, 198, 200, 209, 220, 317, 385, 386, 387, 391, 392, 393, 394, 396, 400, 403, 404, 405, 407, 410], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 92, 94, 97, 98, 99, 100, 105, 107, 113, 114, 115, 116, 118, 119, 120, 121, 123, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 153, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 173, 177, 178, 179, 183, 184, 187, 188, 191, 192, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 216, 217, 219, 222, 223, 224, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 260, 261, 272, 274, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308, 309, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 345, 346, 347, 348, 349, 355, 358, 363, 365, 368, 370, 372, 378, 382, 385, 387, 391, 392, 393, 394, 395, 397, 399, 400, 402, 403, 404, 405, 407, 409, 410], "hurri": [0, 395], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 62, 64, 65, 66, 67, 68, 75, 98, 99, 100, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 153, 156, 159, 173, 179, 184, 196, 198, 199, 218, 219, 223, 224, 236, 238, 240, 242, 244, 245, 248, 249, 256, 266, 269, 272, 278, 282, 287, 300, 331, 333, 334, 392, 393, 394, 395, 396, 403, 404, 405, 406, 407, 409, 410], "item": [0, 2, 8, 14, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 98, 105, 153, 172, 248, 249, 301, 302, 304, 359, 387, 388, 391, 393, 394, 397, 398, 403, 404, 405, 407], "navig": [0, 404], "previou": [0, 3, 4, 10, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 197, 209, 217, 238, 242, 265, 278, 393, 394, 395, 396, 400, 405, 410], "whenev": [0, 1, 2, 3, 23, 43, 49, 52, 59, 60, 73, 79, 91, 92, 99, 100, 113, 114, 118, 120, 121, 129, 130, 141, 146, 147, 152, 176, 201, 206, 315, 331, 332, 333, 334, 349, 370, 386, 399, 407], "want": [0, 2, 3, 6, 7, 8, 100, 179, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 386, 391, 392, 393, 394, 395, 397, 398, 399, 403, 404, 405, 406, 407, 409, 410], "ted": [0, 34, 44, 57, 58, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 384, 390, 401, 408], "s": [0, 1, 2, 3, 6, 7, 8, 11, 30, 43, 48, 49, 50, 52, 53, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 100, 105, 111, 112, 115, 119, 123, 124, 125, 129, 130, 132, 137, 138, 139, 140, 144, 145, 146, 147, 160, 164, 183, 195, 197, 199, 200, 201, 203, 205, 207, 209, 211, 218, 219, 223, 224, 236, 240, 244, 249, 250, 251, 254, 262, 269, 271, 275, 277, 280, 282, 283, 286, 287, 290, 298, 300, 305, 311, 313, 315, 320, 322, 331, 332, 333, 334, 335, 349, 386, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 105, 111, 112, 115, 119, 128, 131, 134, 137, 138, 144, 145, 152, 159, 164, 168, 170, 177, 183, 184, 196, 197, 200, 201, 203, 205, 207, 208, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 331, 332, 333, 334, 335, 349, 368, 375, 378, 384, 387, 388, 390, 392, 393, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410], "optim": [0, 1, 2, 8, 43, 54, 111, 112, 115, 119, 137, 138, 144, 145, 201, 209, 221, 247, 253, 254, 269, 298, 300, 315, 316, 317, 320, 363, 364, 368, 378, 387, 388, 390, 393, 394, 395, 396, 398, 401, 403, 404, 405, 408], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 115, 119, 137, 138, 141, 144, 145, 157, 160, 179, 183, 205, 211, 260, 261, 282, 298, 301, 304, 306, 318, 320, 322, 323, 351, 359, 365, 368, 370, 371, 372, 378, 388, 390, 391, 394, 395, 396, 397, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410], "storag": [0, 1, 8, 34, 43, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 102, 103, 104, 105, 107, 108, 115, 117, 119, 137, 138, 144, 145, 159, 160, 166, 169, 188, 209, 384, 388, 390, 392, 393, 394, 395, 397, 400, 401, 403, 404, 406, 408], "log": [0, 3, 4, 8, 11, 54, 231, 232, 233, 248, 249, 258, 269, 270, 279, 280, 283, 287, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 323, 329, 358, 361, 362, 364, 368, 378, 386, 387, 388, 390, 391, 392, 393, 395, 396, 400, 401, 403, 404, 405, 408, 409], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 43, 115, 119, 123, 128, 137, 138, 139, 140, 144, 145, 207, 209, 382, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 407, 408, 409], "own": [0, 1, 3, 14, 15, 17, 22, 43, 115, 119, 137, 138, 139, 140, 144, 145, 209, 351, 390, 392, 393, 395, 401, 403, 404, 405, 408], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 43, 48, 50, 53, 54, 63, 73, 76, 82, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 166, 174, 183, 196, 201, 203, 205, 209, 211, 218, 219, 220, 226, 228, 236, 237, 240, 244, 260, 261, 297, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 331, 368, 370, 378, 384, 386, 388, 390, 392, 395, 398, 399, 401, 406, 407, 408, 410], "loop": [0, 8, 48, 50, 53, 115, 119, 137, 138, 144, 145, 216, 218, 219, 236, 237, 260, 261, 317, 368, 387, 388, 390, 391, 392, 395, 397, 398, 399, 401, 402, 407, 408], "ppo": [0, 4, 8, 283, 287, 299, 314, 317, 384, 386, 390, 391, 392, 396, 397, 401, 403, 408], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 105, 113, 114, 115, 116, 118, 119, 120, 132, 137, 138, 144, 145, 160, 163, 164, 171, 176, 177, 179, 186, 188, 193, 195, 197, 198, 200, 201, 207, 209, 222, 240, 244, 378, 386, 390, 392, 393, 395, 396, 397, 401, 408, 409, 410], "introduct": [0, 387, 390, 395, 401, 403, 404, 408, 410], "multi": [0, 1, 7, 9, 43, 49, 52, 55, 56, 59, 60, 83, 84, 90, 115, 119, 129, 130, 137, 138, 142, 143, 144, 145, 201, 209, 238, 240, 242, 244, 245, 250, 251, 252, 282, 329, 331, 332, 333, 334, 384, 390, 391, 392, 393, 394, 395, 396, 401, 405, 408, 409], "agent": [0, 9, 55, 56, 128, 129, 130, 135, 136, 139, 140, 142, 143, 146, 147, 148, 195, 196, 248, 249, 250, 251, 252, 254, 262, 271, 329, 384, 390, 395, 401, 405, 408], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34, 43, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 240, 244, 246, 247, 282, 286, 315, 349, 350, 351, 372, 373, 374, 378, 380, 381, 382, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 99, 100, 105, 107, 111, 112, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 179, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 211, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 344, 349, 351, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 378, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 410], "pretrain": [0, 390, 401, 408], "recurr": [0, 2, 159, 238, 239, 240, 242, 244, 265, 390, 392, 396, 401, 407, 408], "dqn": [0, 2, 73, 153, 170, 233, 279, 280, 297, 298, 300, 301, 302, 304, 306, 307, 308, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 329, 375, 384, 386, 390, 396, 397, 400, 401, 408], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 43, 57, 111, 112, 115, 119, 131, 137, 138, 144, 145, 168, 177, 196, 210, 215, 218, 219, 222, 233, 236, 237, 240, 244, 250, 251, 254, 260, 261, 263, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 290, 297, 298, 299, 300, 301, 305, 306, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 364, 370, 373, 374, 378, 380, 381, 384, 386, 387, 388, 390, 392, 395, 397, 398, 401, 406, 407, 408, 409, 410], "replai": [0, 8, 16, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 106, 110, 159, 160, 168, 184, 188, 197, 209, 300, 301, 302, 304, 305, 306, 313, 318, 320, 322, 323, 365, 368, 376, 378, 384, 388, 390, 401, 405, 406, 408], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 115, 119, 131, 137, 138, 144, 145, 159, 160, 164, 168, 183, 184, 188, 197, 200, 201, 203, 205, 209, 286, 289, 300, 301, 302, 304, 305, 306, 313, 318, 320, 322, 323, 365, 368, 376, 378, 384, 388, 390, 399, 401, 405, 406, 408, 410], "competit": [0, 3, 129, 130, 390, 401, 404, 408], "ddpg": [0, 226, 227, 228, 229, 301, 312, 321, 384, 386, 390, 392, 397, 401, 404, 408], "task": [0, 2, 3, 9, 54, 55, 56, 63, 76, 79, 113, 114, 115, 119, 122, 129, 130, 137, 138, 139, 140, 141, 144, 145, 146, 147, 183, 195, 201, 203, 205, 305, 313, 390, 391, 392, 393, 394, 395, 396, 401, 403, 404, 405, 408, 409, 410], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 119, 135, 136, 137, 144, 146, 197, 230, 240, 244, 278, 297, 315, 317, 319, 351, 368, 384, 387, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 407, 408], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 43, 45, 48, 50, 53, 62, 63, 86, 87, 88, 94, 97, 101, 103, 107, 110, 115, 119, 124, 137, 138, 144, 145, 153, 166, 169, 170, 179, 183, 200, 201, 203, 207, 209, 210, 240, 244, 247, 250, 251, 262, 269, 271, 274, 275, 283, 286, 287, 288, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 372, 373, 374, 377, 378, 382, 384, 386, 388, 390, 392, 393, 394, 398, 400, 401, 403, 404, 405, 407, 408, 410], "loss": [0, 3, 8, 50, 170, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 363, 368, 375, 378, 387, 388, 390, 395, 397, 398, 399, 401, 405, 407, 408, 409], "trainer": [0, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 390, 391, 401, 408], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 176, 177, 179, 181, 183, 185, 186, 187, 188, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 214, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 250, 251, 252, 255, 258, 259, 260, 261, 262, 263, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 290, 291, 294, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 324, 325, 329, 331, 332, 333, 334, 337, 349, 351, 359, 360, 361, 362, 363, 365, 366, 367, 370, 378, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410], "packag": [0, 6, 7, 10, 152, 384, 385, 409, 410], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 43, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 93, 94, 98, 99, 100, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 132, 134, 135, 136, 137, 138, 144, 145, 146, 147, 157, 160, 164, 173, 179, 181, 184, 188, 197, 200, 201, 202, 206, 207, 209, 217, 220, 231, 238, 239, 240, 242, 243, 244, 248, 249, 250, 251, 252, 253, 258, 260, 261, 262, 268, 272, 282, 286, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 359, 362, 365, 366, 367, 368, 370, 380, 381, 382, 384, 386, 387, 388, 392, 393, 394, 395, 398, 400, 402, 403, 404, 406, 409, 410], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 98, 99, 100, 101, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 159, 161, 164, 165, 166, 169, 170, 171, 173, 181, 183, 185, 186, 188, 192, 194, 195, 197, 199, 200, 201, 202, 205, 207, 209, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 255, 258, 259, 260, 261, 262, 263, 264, 265, 268, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 291, 294, 297, 298, 300, 301, 302, 304, 305, 306, 313, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 351, 359, 365, 384, 386, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 409, 410], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 79, 86, 115, 119, 137, 138, 144, 145, 156, 186, 196, 201, 207, 209, 216, 240, 244, 252, 278, 300, 315, 320, 349, 384, 387, 391, 392, 394, 395, 403, 407], "interoper": [0, 14, 15, 384], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 35, 41, 43, 48, 49, 50, 52, 53, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 115, 118, 119, 129, 130, 137, 138, 144, 145, 146, 147, 153, 160, 161, 183, 188, 201, 205, 209, 223, 224, 238, 239, 240, 242, 243, 244, 245, 251, 285, 289, 298, 299, 300, 302, 304, 306, 307, 313, 314, 317, 318, 320, 322, 323, 331, 332, 333, 334, 340, 341, 342, 343, 345, 346, 347, 348, 349, 382, 384, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 406, 407], "node": [0, 2, 18, 19, 20, 21, 22, 30, 31, 37, 48, 50, 53, 56, 81, 384, 398], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 52, 59, 60, 94, 139, 140, 177, 179, 218, 219, 221, 231, 232, 233, 234, 241, 247, 248, 249, 255, 258, 259, 264, 265, 268, 269, 270, 278, 279, 280, 283, 287, 288, 297, 298, 299, 300, 305, 306, 307, 313, 314, 317, 318, 319, 320, 322, 323, 384, 388, 392, 393, 396, 398, 403, 404, 405, 409, 410], "helper": [0, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 391, 392, 394, 403, 405], "compos": [0, 3, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 105, 106, 115, 119, 137, 138, 144, 145, 160, 187, 200, 201, 207, 209, 281, 282, 300, 309, 320, 351, 384, 391, 392, 393, 394, 398, 402, 404, 405, 407, 409, 410], "episod": [0, 3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 99, 100, 115, 119, 137, 138, 144, 145, 156, 188, 191, 196, 216, 221, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 384, 392, 395, 400, 403, 404, 407], "format": [0, 3, 34, 41, 42, 43, 44, 47, 57, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 97, 105, 115, 119, 137, 138, 139, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 351, 384, 391, 392, 395, 397, 399, 410], "tensorspec": [0, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 115, 119, 131, 137, 138, 144, 145, 146, 147, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 217, 218, 219, 236, 237, 260, 261, 265, 274, 278, 279, 280, 283, 284, 285, 286, 287, 288, 290, 298, 300, 302, 305, 306, 318, 320, 322, 323, 329, 384, 405], "human": [0, 24, 77, 384, 405], "feedback": [0, 384, 400, 409], "rlhf": [0, 54, 63, 82, 177, 384, 386], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 116, 119, 137, 138, 144, 145, 154, 157, 166, 169, 178, 185, 186, 200, 201, 207, 209, 211, 221, 240, 244, 246, 247, 364, 372, 373, 374, 378, 380, 381, 382, 384, 395], "gymlikeenv": [0, 118, 120, 384], "envmetadata": [0, 384], "vector": [0, 1, 8, 25, 111, 112, 120, 124, 125, 128, 139, 140, 141, 146, 147, 168, 206, 226, 228, 238, 239, 242, 243, 245, 331, 334, 344, 345, 346, 347, 348, 384, 387, 391, 392, 394, 402, 403, 404, 405, 406, 410], "custom": [0, 2, 5, 43, 115, 119, 137, 138, 144, 145, 203, 209, 250, 251, 290, 307, 317, 324, 382, 384, 386, 391, 392, 393, 394, 396, 397, 399, 403, 404], "nativ": [0, 1, 7, 9, 77, 115, 119, 137, 138, 144, 145, 160, 351, 384, 394, 407], "auto": [0, 87, 107, 155, 156, 206, 260, 261, 298, 300, 306, 316, 318, 320, 322, 323, 384, 387, 403, 404], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 155, 156, 157, 160, 170, 173, 176, 178, 183, 191, 195, 196, 197, 198, 200, 201, 203, 206, 207, 209, 211, 217, 222, 238, 240, 244, 252, 260, 261, 273, 282, 315, 350, 384, 387, 391, 392, 393, 394, 395, 398, 402, 403, 404, 409], "dynam": [0, 2, 7, 14, 15, 16, 76, 79, 81, 115, 137, 144, 209, 305, 313, 384, 393, 395, 405], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 111, 112, 115, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 214, 216, 217, 218, 219, 233, 236, 237, 240, 244, 260, 261, 263, 265, 274, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 384, 386, 391, 392, 393, 394, 395, 396, 400, 402, 403, 404, 409], "mask": [0, 1, 4, 23, 25, 26, 29, 33, 39, 40, 41, 42, 47, 139, 140, 145, 154, 184, 209, 222, 233, 236, 237, 248, 249, 263, 278, 279, 280, 284, 285, 365, 384, 392, 394, 410], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 34, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 157, 163, 166, 168, 169, 170, 171, 174, 177, 178, 181, 185, 186, 188, 192, 195, 201, 206, 210, 214, 216, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 240, 244, 245, 246, 247, 248, 249, 250, 259, 260, 261, 262, 263, 265, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 290, 291, 297, 298, 300, 301, 302, 304, 305, 306, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 378, 382, 384, 386, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 402, 403, 404, 406, 407, 409, 410], "record": [0, 2, 11, 43, 115, 119, 137, 138, 144, 145, 150, 153, 177, 209, 317, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 378, 384, 392, 393, 396, 400, 403], "domain": [0, 2, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 168, 197, 214, 274, 279, 280, 283, 284, 285, 286, 287, 288, 289, 294, 384, 393, 394, 396, 397, 403, 404, 405, 409, 410], "actor": [0, 3, 4, 21, 177, 210, 221, 225, 226, 228, 233, 234, 236, 237, 247, 259, 260, 261, 263, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 329, 384, 387, 392, 394, 395, 397, 400, 403, 406, 409], "explor": [0, 1, 208, 218, 219, 236, 237, 254, 260, 261, 274, 279, 280, 283, 284, 285, 286, 287, 297, 315, 364, 373, 374, 378, 384, 393, 394, 395, 397, 398, 400, 403, 404, 405], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 99, 100, 105, 115, 119, 128, 137, 138, 144, 145, 152, 153, 156, 158, 160, 161, 163, 166, 167, 168, 169, 170, 178, 179, 183, 184, 187, 188, 189, 191, 193, 197, 198, 200, 201, 205, 207, 209, 214, 217, 218, 219, 220, 222, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 240, 241, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 258, 260, 261, 262, 263, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 359, 361, 362, 363, 364, 365, 368, 378, 384, 388, 392, 397, 398, 399, 402, 403, 404, 405, 407, 409, 410], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 96, 98, 115, 116, 119, 129, 130, 131, 134, 137, 138, 139, 140, 142, 143, 144, 145, 157, 164, 166, 167, 171, 177, 179, 185, 186, 191, 192, 195, 197, 200, 206, 209, 217, 222, 231, 240, 244, 248, 249, 258, 274, 283, 287, 291, 292, 311, 318, 325, 331, 336, 344, 354, 368, 384, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "hook": [0, 2, 34, 43, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 108, 115, 119, 137, 138, 144, 145, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 263, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 384], "planner": [0, 221, 247, 384], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 95, 98, 99, 100, 105, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 171, 177, 179, 181, 183, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 214, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 336, 337, 341, 343, 344, 346, 348, 349, 353, 359, 366, 367, 378, 384, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "vmap": [0, 238, 239, 242, 243, 252, 272, 286, 289, 315, 384, 386, 409], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 79, 81, 93, 105, 115, 119, 131, 137, 138, 144, 145, 153, 168, 178, 179, 197, 210, 211, 222, 236, 238, 240, 242, 244, 283, 286, 287, 294, 298, 315, 318, 364, 372, 384, 386, 391, 392, 393, 394, 395, 396, 398, 405, 406, 407, 409, 410], "sac": [0, 306, 318, 320, 384], "redq": [0, 318, 384], "crossq": [0, 300, 384], "iql": [0, 305, 313, 384, 391, 403, 404], "cql": [0, 298, 304, 384], "gail": [0, 311, 384], "dt": [0, 138, 260, 261, 384, 405], "td3": [0, 322, 323, 384], "bc": [0, 5, 322, 384, 409], "a2c": [0, 297, 384], "dreamer": [0, 150, 151, 234, 308, 309, 310, 384, 386], "checkpoint": [0, 52, 84, 86, 89, 101, 102, 104, 108, 384, 406, 407], "builder": [0, 384, 392, 410], "logger": [0, 3, 11, 349, 351, 353, 354, 355, 356, 357, 358, 362, 368, 378, 382, 384, 392, 403], "_util": [0, 3, 12, 384, 400], "implement_for": [0, 3, 384], "thing": [0, 3, 7, 8, 115, 119, 137, 138, 144, 145, 250, 251, 385, 393, 394, 395, 396, 397, 398, 399, 403, 404, 407, 410], "consid": [0, 1, 2, 3, 8, 20, 30, 31, 37, 43, 49, 52, 56, 59, 60, 86, 87, 107, 115, 119, 137, 138, 144, 145, 168, 207, 209, 231, 250, 251, 268, 298, 300, 313, 318, 320, 322, 323, 331, 333, 334, 385, 391, 395, 396, 397, 405, 407], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 98, 99, 100, 101, 103, 107, 115, 116, 118, 119, 120, 128, 129, 130, 132, 134, 137, 138, 139, 140, 144, 145, 146, 147, 154, 156, 159, 160, 164, 166, 168, 169, 177, 178, 179, 183, 184, 191, 197, 200, 201, 203, 205, 206, 207, 209, 215, 216, 220, 221, 233, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 263, 269, 282, 283, 286, 287, 289, 293, 298, 299, 300, 302, 307, 313, 314, 315, 317, 318, 320, 322, 323, 324, 329, 330, 331, 332, 333, 334, 349, 350, 351, 353, 365, 382, 385, 386, 387, 388, 391, 392, 393, 394, 396, 398, 399, 403, 404, 405, 406, 407, 410], "debug": [0, 6, 8, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 385, 410], "work": [0, 1, 2, 3, 4, 8, 12, 43, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 92, 97, 99, 100, 103, 110, 115, 118, 119, 120, 123, 137, 138, 141, 144, 145, 161, 177, 183, 203, 206, 207, 209, 216, 223, 224, 245, 280, 285, 290, 299, 314, 317, 368, 385, 386, 391, 392, 393, 394, 395, 398, 402, 403, 404, 405, 406, 407, 409, 410], "habitat": [0, 3, 121, 385, 406], "lab": [0, 3, 113, 114, 121, 385], "mujoco": [0, 6, 8, 141, 385, 391, 393, 394], "error": [0, 1, 3, 7, 10, 12, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 50, 53, 55, 86, 115, 119, 137, 138, 144, 145, 148, 184, 209, 211, 315, 385, 387, 391, 393, 403, 404, 410], "solut": [0, 2, 3, 6, 7, 9, 21, 385, 386, 388, 409], "resourc": [0, 1, 21, 121, 385, 391, 393, 403, 404], "issu": [0, 3, 4, 5, 8, 73, 77, 84, 86, 87, 107, 118, 123, 160, 184, 198, 216, 274, 279, 280, 283, 284, 285, 286, 287, 385, 409], "customis": [0, 385, 392, 399], "video": [0, 4, 9, 351, 353, 364, 382, 384, 385, 400, 403, 404], "render": [0, 3, 8, 125, 146, 349, 351, 364, 385, 391, 392, 393, 395, 399], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 91, 92, 94, 95, 97, 103, 105, 106, 107, 109, 110, 115, 119, 129, 130, 135, 136, 137, 138, 144, 145, 146, 147, 155, 160, 164, 168, 201, 216, 248, 249, 384, 395, 402, 403, 404, 407, 409], "search": [0, 134, 217, 392], "page": [0, 7, 24, 358, 397], "somewhat": [1, 2, 387, 396, 410], "equival": [1, 3, 25, 26, 29, 30, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 157, 167, 170, 201, 209, 233, 242, 245, 263, 279, 280, 284, 285, 317, 365, 398, 409, 410], "dataload": [1, 82, 98, 100, 392, 398, 407], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 137, 138, 144, 145, 160, 172, 188, 196, 197, 198, 201, 209, 218, 219, 236, 237, 238, 240, 242, 244, 258, 260, 261, 297, 300, 315, 317, 320, 351, 386, 392, 395, 403, 407, 409, 410], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 214, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 289, 290, 291, 293, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 329, 330, 331, 332, 333, 334, 337, 339, 340, 341, 345, 346, 348, 349, 351, 359, 364, 365, 366, 378, 382, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 115, 118, 119, 120, 128, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 156, 159, 172, 177, 183, 192, 200, 201, 205, 209, 244, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 365, 368, 386, 387, 388, 391, 392, 393, 394, 397, 402, 403, 404, 405, 406, 407, 409, 410], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 79, 92, 94, 98, 99, 115, 119, 129, 130, 137, 138, 144, 145, 153, 168, 179, 191, 198, 209, 216, 269, 272, 289, 307, 309, 315, 337, 349, 371, 388, 391, 392, 393, 395, 396, 397, 398, 403, 404, 405, 410], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 30, 31, 37, 38, 43, 45, 46, 48, 49, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 79, 88, 115, 119, 137, 138, 139, 140, 144, 145, 157, 158, 164, 173, 183, 197, 200, 201, 202, 203, 205, 209, 216, 222, 238, 240, 242, 244, 250, 286, 287, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 309, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 386, 391, 394, 403, 404, 405, 407, 410], "static": [1, 12, 54, 63, 92, 99, 100, 121, 138, 207, 313, 395, 405, 407], "like": [1, 2, 3, 4, 7, 11, 21, 30, 31, 37, 43, 45, 49, 52, 56, 59, 60, 63, 88, 94, 100, 115, 119, 121, 128, 137, 138, 139, 140, 144, 145, 170, 197, 199, 209, 211, 238, 242, 251, 281, 297, 299, 314, 317, 318, 319, 387, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 410], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 55, 82, 105, 108, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 159, 166, 168, 169, 178, 186, 197, 201, 209, 215, 236, 240, 244, 260, 261, 299, 300, 314, 315, 317, 320, 351, 365, 370, 380, 381, 382, 386, 391, 392, 393, 394, 398, 403, 404, 405, 407], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 43, 52, 64, 76, 77, 80, 81, 82, 115, 119, 131, 137, 138, 144, 145, 155, 160, 164, 173, 183, 191, 197, 200, 201, 202, 203, 205, 209, 245, 272, 286, 287, 288, 300, 320, 351, 388, 393, 395, 399, 407, 410], "two": [1, 2, 3, 4, 8, 10, 39, 40, 41, 42, 43, 49, 52, 54, 59, 60, 79, 94, 98, 100, 115, 119, 137, 138, 144, 145, 157, 179, 183, 205, 209, 229, 238, 240, 242, 244, 250, 251, 266, 269, 287, 314, 322, 326, 364, 368, 387, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 407, 409, 410], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 81, 116, 287, 368, 386, 387, 391, 392, 402, 410], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 92, 94, 97, 98, 99, 100, 103, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 156, 157, 161, 163, 164, 167, 183, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 209, 216, 218, 219, 220, 222, 223, 224, 236, 237, 238, 240, 242, 244, 245, 248, 249, 250, 251, 253, 260, 261, 272, 274, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 325, 329, 331, 332, 333, 334, 335, 339, 349, 350, 351, 358, 361, 371, 378, 379, 382, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 407, 410], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 97, 98, 99, 100, 101, 103, 113, 114, 115, 118, 119, 120, 121, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 158, 159, 163, 166, 167, 169, 177, 179, 181, 183, 191, 193, 199, 201, 202, 203, 205, 207, 209, 216, 222, 223, 224, 226, 232, 235, 240, 244, 245, 248, 249, 256, 263, 280, 282, 284, 285, 287, 289, 290, 291, 298, 300, 313, 315, 318, 320, 322, 323, 328, 331, 334, 349, 350, 364, 365, 380, 381, 386, 387, 391, 393, 395, 396, 397, 398, 402, 403, 405, 406, 407, 409, 410], "constructor": [1, 2, 16, 18, 19, 20, 21, 52, 63, 79, 91, 105, 115, 119, 132, 137, 138, 144, 145, 146, 156, 200, 223, 224, 245, 283, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 379, 382, 386, 391, 392, 393, 395, 398, 403, 404, 407], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 94, 98, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 171, 179, 192, 209, 220, 222, 223, 224, 245, 250, 251, 267, 274, 279, 283, 284, 286, 288, 289, 291, 315, 328, 364, 367, 368, 387, 388, 391, 393, 394, 398, 400, 403, 404, 405], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 51, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 111, 112, 115, 116, 119, 120, 121, 123, 124, 125, 131, 132, 137, 138, 141, 144, 145, 154, 201, 209, 236, 238, 240, 242, 244, 252, 282, 288, 289, 315, 322, 372, 382, 386, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 407, 408, 410], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 54, 73, 83, 84, 90, 92, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 154, 159, 173, 176, 179, 195, 196, 197, 198, 201, 206, 209, 216, 217, 218, 219, 220, 221, 234, 236, 237, 238, 240, 242, 244, 246, 247, 260, 261, 282, 283, 287, 297, 308, 317, 330, 331, 332, 333, 334, 337, 338, 339, 350, 353, 359, 364, 368, 388, 392, 394, 396, 397, 399, 400, 402, 405, 406, 409], "queri": [1, 3, 14, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 183, 200, 203, 207, 209, 289, 387, 391, 397, 405, 409], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 137, 138, 144, 145, 184, 196, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 250, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 294, 302, 304, 315, 331, 332, 333, 334, 335, 350, 379, 391, 392, 394, 397, 400, 405, 407, 410], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 97, 99, 100, 107, 111, 112, 115, 118, 119, 120, 124, 125, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 147, 153, 159, 160, 168, 174, 178, 179, 190, 195, 198, 201, 207, 209, 218, 219, 220, 221, 223, 224, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 255, 256, 257, 260, 261, 262, 264, 265, 268, 269, 270, 271, 274, 278, 282, 283, 286, 287, 291, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 359, 361, 364, 368, 370, 371, 372, 380, 381, 382, 386, 387, 391, 392, 393, 394, 395, 396, 398, 400, 403, 404, 405, 406, 407, 410], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 43, 63, 78, 98, 105, 115, 119, 120, 137, 138, 144, 145, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 238, 240, 244, 245, 253, 254, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 332, 333, 334, 365, 391, 393, 394, 398, 399, 403, 404, 405, 407, 410], "deliv": [1, 2, 3, 16, 79, 391, 392, 395, 398, 409], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 38, 48, 49, 50, 52, 53, 56, 59, 60, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 115, 118, 119, 120, 128, 137, 138, 139, 140, 144, 145, 207, 238, 240, 242, 243, 244, 282, 288, 289, 298, 300, 313, 318, 320, 322, 323, 350, 359, 384, 386, 392, 395, 402, 403, 405, 409], "user": [1, 2, 3, 5, 8, 23, 43, 73, 75, 79, 81, 92, 100, 115, 119, 137, 138, 144, 145, 161, 196, 201, 209, 211, 230, 300, 317, 320, 322, 351, 379, 387, 388, 391, 392, 395, 397, 398, 405, 409, 410], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 54, 98, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 195, 218, 219, 236, 237, 260, 261, 391, 393, 400, 403, 404, 409, 410], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 94, 99, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 166, 167, 169, 170, 171, 178, 179, 181, 185, 186, 188, 190, 192, 195, 197, 198, 200, 201, 207, 209, 216, 217, 221, 238, 240, 244, 247, 269, 282, 297, 298, 299, 300, 301, 302, 304, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 386, 387, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "state": [1, 2, 3, 4, 14, 15, 16, 17, 34, 43, 49, 52, 54, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 159, 160, 161, 163, 170, 179, 186, 195, 196, 200, 201, 207, 209, 211, 216, 217, 221, 225, 230, 234, 238, 239, 240, 242, 243, 244, 245, 247, 252, 256, 259, 262, 264, 265, 271, 275, 282, 286, 292, 297, 299, 300, 304, 314, 315, 317, 318, 319, 320, 329, 330, 331, 332, 333, 334, 335, 382, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 405, 410], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 34, 43, 48, 50, 53, 54, 73, 94, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 216, 218, 219, 220, 236, 238, 240, 244, 253, 279, 284, 300, 309, 320, 322, 392, 393, 394, 395, 396, 398, 400, 403, 404, 405, 406, 407, 410], "predefin": [1, 392, 394, 398, 407], "becaus": [1, 3, 4, 7, 48, 50, 53, 54, 73, 115, 119, 137, 138, 144, 145, 170, 177, 195, 200, 206, 209, 229, 251, 274, 279, 280, 282, 283, 284, 285, 286, 287, 297, 317, 386, 391, 392, 394, 396, 397, 398, 402, 403, 404, 405, 407, 410], "potenti": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 405, 407], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 43, 54, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 179, 193, 201, 204, 209, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 269, 270, 272, 275, 278, 280, 282, 283, 285, 287, 290, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 372, 387, 391, 393, 394, 395, 396, 402, 403, 404, 406, 407], "heavi": [1, 8, 73, 407], "crucial": [1, 2, 3, 218, 219, 236, 237, 260, 261, 305, 313, 315, 391, 392, 393, 394, 395, 397, 399, 403, 404, 405, 410], "configur": [1, 8, 21, 22, 54, 177, 225, 230, 259, 315, 317, 386, 391, 392, 393, 397, 403, 404, 405], "hyperparamet": [1, 97, 209, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 391, 399, 405, 407], "appropri": [1, 3, 4, 7, 85, 95, 105, 106, 109, 110, 137, 144, 170, 379, 382, 391, 399, 407], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 97, 98, 101, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 386, 387, 391, 394, 396, 400, 403, 404, 405, 406, 409], "take": [1, 2, 3, 8, 23, 54, 76, 102, 108, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 163, 195, 198, 200, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 250, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 281, 282, 283, 285, 290, 293, 296, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 359, 370, 386, 388, 391, 392, 393, 395, 396, 397, 403, 404, 405, 407, 410], "consider": [1, 2, 3, 8, 118, 120, 392, 403, 404, 407], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 115, 119, 125, 129, 130, 131, 137, 138, 139, 140, 144, 145, 146, 147, 156, 166, 169, 196, 201, 207, 209, 217, 223, 224, 240, 244, 245, 291, 297, 298, 299, 300, 301, 302, 304, 306, 307, 311, 314, 315, 317, 318, 319, 320, 322, 323, 329, 331, 334, 391, 392, 393, 395, 403, 404, 405, 410], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 92, 94, 99, 100, 101, 105, 108, 113, 114, 115, 118, 119, 120, 121, 125, 128, 131, 137, 138, 139, 140, 144, 145, 146, 147, 153, 156, 157, 160, 163, 164, 166, 167, 170, 171, 173, 177, 179, 184, 185, 186, 188, 191, 192, 195, 196, 198, 200, 201, 206, 207, 209, 211, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 250, 251, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 283, 285, 286, 287, 290, 293, 297, 299, 300, 306, 312, 314, 315, 317, 318, 319, 321, 322, 330, 331, 332, 333, 334, 335, 351, 353, 363, 364, 365, 368, 378, 380, 381, 382, 386, 388, 391, 392, 393, 394, 396, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "occur": [1, 8, 15, 55, 56, 73, 115, 119, 121, 137, 138, 144, 145, 161, 171, 179, 184, 206, 217, 220, 274, 279, 280, 283, 284, 285, 286, 287, 309, 407, 410], "serial": [1, 2, 3, 43, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 207, 209], "parallel": [1, 3, 8, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 201, 206, 211, 240, 244, 297, 379, 380, 381, 382, 392, 393, 403, 404], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 240, 244, 378, 381, 384, 391, 392, 393, 394, 398, 400, 403, 404, 407], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 128, 131, 134, 137, 138, 139, 140, 141, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 380, 381, 382, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 407, 410], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 48, 50, 53, 62, 63, 76, 81, 82, 116, 132, 137, 144, 207, 380, 381, 382, 391, 392, 393, 409, 410], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 381, 384, 393, 398, 409], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 36, 48, 50, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 99, 100, 128, 139, 140, 238, 242, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 386, 388, 393, 396, 407, 409], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 49, 52, 59, 60, 92, 99, 100, 111, 112, 113, 114, 118, 120, 121, 123, 124, 125, 132, 133, 137, 141, 145, 207, 209, 240, 244, 250, 260, 261, 315, 370, 384, 386, 387, 391, 395, 399, 403, 404, 405], "aggreg": [1, 3, 73, 92, 105, 139, 140, 217, 223, 224, 226, 227, 289], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 43, 48, 49, 50, 51, 52, 53, 59, 60, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 100, 115, 116, 119, 137, 138, 144, 145, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 216, 217, 218, 236, 238, 240, 242, 244, 245, 250, 263, 269, 278, 280, 285, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 370, 386, 387, 392, 394, 395, 396, 399, 400, 405, 406, 409, 410], "final": [1, 2, 3, 4, 21, 48, 50, 53, 54, 197, 206, 218, 219, 236, 237, 238, 240, 242, 244, 250, 260, 261, 281, 288, 331, 364, 386, 391, 392, 393, 399, 400, 403, 404, 405, 410], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 380, 384, 391, 392, 393, 398, 409], "sever": [1, 2, 3, 8, 39, 43, 63, 76, 115, 119, 137, 138, 144, 145, 161, 163, 201, 209, 317, 391, 393, 399, 400, 407, 410], "gather": [1, 3, 18, 20, 21, 63, 82, 86, 87, 92, 99, 107, 184, 249, 252, 258, 315, 330, 372, 385, 392, 393, 394, 398, 403, 404, 405, 407, 410], "continu": [1, 2, 9, 27, 30, 64, 65, 66, 100, 115, 119, 137, 138, 139, 140, 144, 145, 146, 147, 153, 214, 226, 227, 228, 229, 260, 261, 289, 294, 298, 321, 331, 336, 344, 386, 391, 393, 394, 396, 403, 404, 405, 407, 409, 410], "concomitantli": [1, 115, 119, 137, 138, 144, 145], "network": [1, 4, 8, 43, 115, 119, 128, 137, 138, 139, 140, 144, 145, 209, 223, 224, 226, 227, 228, 229, 232, 234, 235, 242, 245, 250, 251, 252, 254, 256, 257, 262, 264, 265, 266, 271, 275, 276, 277, 278, 286, 290, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 327, 329, 331, 332, 333, 334, 335, 377, 378, 386, 387, 388, 397, 400, 402, 405, 410], "impli": [1, 410], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 54, 92, 94, 97, 111, 112, 115, 119, 137, 138, 142, 143, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 238, 239, 240, 242, 243, 244, 250, 252, 254, 286, 297, 298, 299, 300, 306, 309, 320, 322, 370, 377, 386, 388, 391, 392, 393, 394, 402, 405, 407, 409], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 43, 48, 50, 53, 55, 56, 62, 75, 81, 84, 92, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 177, 179, 192, 201, 202, 207, 209, 211, 220, 240, 244, 245, 250, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 405, 406, 407, 409, 410], "slightli": [1, 23, 73, 386, 387, 394, 403, 405, 406, 407, 410], "lag": [1, 391, 392, 393], "therefor": [1, 2, 3, 7, 49, 52, 59, 60, 80, 81, 115, 119, 137, 138, 144, 145, 188, 317, 329, 397, 403, 410], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 34, 36, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 92, 94, 99, 100, 105, 107, 108, 115, 119, 128, 131, 134, 137, 138, 139, 140, 144, 145, 153, 154, 157, 160, 170, 177, 183, 188, 191, 195, 196, 198, 200, 202, 205, 206, 216, 217, 218, 219, 236, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 260, 261, 283, 286, 287, 296, 297, 298, 299, 300, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 387, 388, 391, 392, 393, 395, 402, 403, 404, 405, 407, 410], "asynchron": [1, 9, 15, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 297, 380, 391, 392, 393], "off": [1, 2, 4, 241, 270, 279, 320, 349, 364, 373, 386, 388, 391, 392, 393, 396, 397, 403, 404, 406, 410], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 107, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 146, 166, 169, 173, 179, 196, 201, 206, 209, 211, 233, 238, 240, 242, 244, 251, 253, 275, 277, 278, 280, 284, 297, 305, 307, 313, 317, 364, 386, 388, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 410], "remot": [1, 2, 18, 19, 20, 21, 137, 144, 410], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 54, 105, 111, 112, 115, 119, 121, 122, 124, 125, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 163, 166, 169, 170, 171, 177, 181, 185, 186, 191, 192, 193, 195, 196, 198, 207, 209, 211, 221, 222, 240, 244, 247, 260, 261, 282, 297, 349, 351, 372, 386, 391, 393, 394, 396, 397, 398, 399, 400, 406, 407, 409], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 192, 318, 331, 332, 333, 334, 335, 387, 391, 393, 396, 397, 398], "synchronis": [1, 116, 403, 404], "either": [1, 2, 5, 22, 25, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 94, 115, 119, 137, 138, 144, 145, 195, 196, 209, 292, 315, 322, 323, 355, 388, 391, 392, 394, 403, 406, 407, 409, 410], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 391, 404, 409], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 91, 92, 94, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 168, 171, 173, 176, 177, 178, 179, 183, 184, 186, 187, 190, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 207, 209, 211, 214, 216, 217, 219, 220, 221, 223, 224, 226, 227, 228, 229, 235, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 261, 269, 270, 274, 275, 276, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 331, 332, 333, 334, 337, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 358, 361, 362, 364, 365, 368, 382, 386, 387, 388, 391, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "second": [1, 3, 8, 23, 39, 40, 41, 42, 73, 76, 105, 157, 238, 240, 242, 244, 280, 299, 314, 317, 320, 353, 367, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 164, 166, 167, 169, 170, 171, 177, 181, 182, 183, 185, 186, 188, 192, 195, 197, 199, 200, 201, 203, 205, 207, 209, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 238, 239, 240, 242, 243, 244, 245, 247, 250, 251, 253, 254, 259, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 291, 294, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 349, 365, 370, 376, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 92, 99, 115, 119, 137, 138, 144, 145, 157, 173, 177, 200, 209, 232, 233, 239, 243, 255, 275, 276, 277, 279, 280, 281, 286, 292, 297, 299, 301, 302, 307, 314, 317, 319, 329, 330, 331, 332, 333, 334, 368, 384, 387, 388, 391, 392, 393, 394, 395, 396, 402, 403, 404, 405, 410], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 43, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 90, 92, 94, 99, 100, 107, 114, 115, 116, 118, 119, 120, 131, 137, 138, 144, 145, 160, 179, 197, 200, 201, 207, 209, 214, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 293, 298, 300, 302, 305, 306, 313, 315, 318, 320, 322, 323, 329, 331, 332, 333, 334, 349, 351, 355, 364, 372, 373, 374, 378, 380, 381, 386, 387, 388, 391, 393, 394, 395, 396, 405, 407, 410], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 164, 166, 167, 169, 170, 171, 181, 183, 185, 186, 188, 192, 195, 197, 200, 201, 203, 205, 209, 214, 216, 221, 222, 232, 238, 239, 240, 242, 243, 244, 247, 253, 254, 260, 262, 263, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 291, 294, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 349, 365, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 73, 75, 79, 92, 99, 100, 103, 105, 115, 119, 123, 135, 136, 137, 138, 141, 144, 145, 186, 218, 219, 229, 240, 242, 244, 245, 255, 272, 274, 279, 286, 291, 315, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 385, 387, 391, 392, 393, 395, 397, 398, 403, 404, 405, 407, 409, 410], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 94, 95, 99, 100, 101, 103, 105, 106, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 157, 160, 163, 166, 167, 168, 169, 178, 179, 183, 188, 191, 194, 196, 197, 198, 200, 201, 202, 205, 207, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 251, 252, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 272, 274, 278, 279, 280, 282, 283, 284, 285, 286, 287, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 329, 331, 332, 333, 334, 338, 339, 353, 361, 363, 364, 368, 372, 382, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 410], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 111, 112, 115, 119, 121, 122, 123, 137, 138, 144, 145, 164, 177, 182, 183, 197, 200, 201, 203, 205, 209, 238, 239, 242, 243, 286, 360, 391, 392, 393, 394, 403, 404, 406, 410], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 61, 94, 111, 112, 124, 125, 137, 144, 145, 161, 163, 168, 176, 178, 188, 191, 195, 200, 207, 238, 242, 244, 250, 253, 254, 274, 279, 283, 284, 286, 287, 290, 299, 306, 314, 317, 337, 382, 386, 387, 388, 391, 392, 393, 395, 397, 398, 403, 404, 405, 407, 409], "infer": [1, 137, 144, 160, 207, 240, 244, 253, 278, 283, 304, 349, 391, 393, 398, 400, 407], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 43, 73, 76, 92, 99, 100, 111, 112, 113, 114, 115, 118, 119, 124, 125, 131, 132, 133, 137, 138, 144, 145, 178, 179, 201, 207, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 288, 289, 290, 293, 300, 320, 351, 358, 364, 380, 381, 382, 385, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409], "dispatch": [1, 18, 19, 20, 21, 272, 282, 351, 391], "avail": [1, 2, 3, 4, 6, 21, 49, 52, 59, 60, 73, 76, 81, 92, 98, 99, 100, 113, 114, 123, 129, 130, 135, 136, 137, 139, 140, 141, 146, 147, 153, 156, 159, 177, 233, 263, 283, 287, 315, 351, 380, 381, 386, 391, 392, 393, 394, 395, 396, 403, 404, 405, 407, 410], "speed": [1, 2, 4, 8, 29, 115, 119, 137, 138, 144, 145, 387, 391, 392, 393, 394, 403, 404, 405, 407], "avoid": [1, 2, 3, 43, 86, 87, 107, 115, 119, 137, 138, 144, 145, 152, 201, 207, 209, 220, 269, 274, 286, 291, 299, 300, 314, 317, 320, 371, 393, 404], "oom": [1, 3, 48, 50, 53, 86, 87, 107], "choic": [1, 2, 75, 81, 137, 255, 386, 387, 391, 392, 397, 403, 404], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 30, 31, 37, 43, 49, 52, 54, 56, 59, 60, 62, 63, 73, 76, 77, 79, 80, 81, 84, 86, 87, 92, 94, 99, 100, 105, 107, 115, 116, 117, 119, 120, 128, 132, 137, 138, 139, 140, 144, 145, 146, 156, 157, 166, 169, 186, 200, 202, 207, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 264, 265, 267, 271, 272, 274, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 298, 299, 300, 313, 314, 315, 317, 318, 320, 322, 323, 331, 332, 333, 334, 335, 349, 365, 380, 381, 382, 386, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 407, 410], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 79, 91, 100, 115, 119, 123, 134, 137, 138, 144, 145, 153, 160, 173, 202, 207, 217, 240, 244, 278, 386, 387, 392, 404], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 35, 36, 43, 48, 49, 50, 51, 52, 53, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 91, 92, 94, 99, 105, 107, 115, 119, 137, 138, 144, 145, 206, 207, 209, 221, 247, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 358, 384, 388, 391, 393, 394, 396, 398, 400, 403, 404, 406, 410], "while": [1, 2, 3, 7, 8, 23, 43, 115, 119, 137, 138, 144, 145, 188, 201, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 300, 305, 313, 314, 317, 320, 386, 387, 391, 393, 394, 396, 398, 399, 403, 404, 405, 406, 407, 409], "wait": [1, 20, 21, 22, 394, 405], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 50, 52, 53, 59, 62, 73, 76, 77, 79, 80, 81, 82, 86, 87, 92, 94, 99, 100, 105, 107, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 152, 156, 157, 159, 160, 168, 179, 186, 188, 191, 192, 195, 197, 201, 209, 216, 223, 224, 238, 242, 265, 282, 283, 288, 289, 290, 297, 298, 300, 301, 302, 304, 305, 306, 311, 313, 317, 320, 322, 331, 338, 339, 349, 351, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 407, 410], "impact": [1, 2, 3, 79, 125, 166, 169, 220, 297, 299, 314, 317, 319, 392, 394, 403, 404], "memori": [1, 3, 8, 21, 29, 43, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 84, 86, 90, 115, 116, 119, 123, 137, 138, 144, 145, 160, 164, 183, 197, 200, 201, 203, 205, 207, 209, 242, 243, 286, 382, 384, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "manag": [1, 8, 327, 328, 331, 332, 333, 334, 364, 386, 397], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 83, 91, 92, 94, 97, 99, 100, 105, 115, 119, 124, 125, 137, 138, 139, 140, 144, 145, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 216, 217, 218, 219, 221, 222, 232, 233, 236, 237, 240, 244, 246, 247, 260, 261, 263, 274, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 349, 351, 362, 363, 364, 366, 367, 368, 372, 387, 388, 391, 393, 394, 395, 397, 402, 403, 404, 405, 407, 409, 410], "control": [1, 3, 5, 8, 16, 23, 24, 32, 52, 59, 60, 92, 94, 99, 113, 114, 115, 119, 128, 137, 138, 139, 140, 144, 145, 168, 216, 226, 227, 228, 229, 240, 244, 246, 247, 260, 261, 265, 272, 286, 287, 288, 297, 299, 300, 314, 315, 317, 321, 331, 336, 344, 349, 386, 388, 391, 392, 393, 395, 396, 397, 403, 404, 405, 407], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 94, 97, 98, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 160, 161, 166, 169, 174, 177, 178, 179, 183, 184, 186, 195, 197, 198, 200, 201, 203, 207, 209, 211, 232, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 270, 275, 276, 277, 278, 282, 283, 286, 287, 289, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 326, 329, 331, 332, 333, 334, 349, 351, 359, 363, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 406, 407, 410], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 392, 404], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 33, 39, 40, 41, 42, 47, 49, 50, 52, 54, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 92, 94, 97, 99, 115, 119, 137, 138, 139, 140, 144, 145, 156, 157, 160, 163, 166, 169, 171, 174, 181, 193, 201, 202, 207, 209, 220, 222, 240, 244, 251, 331, 333, 334, 364, 368, 387, 391, 392, 393, 394, 396, 397, 398, 400, 403, 404, 405, 407, 410], "heurist": [1, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 261, 282, 391, 398, 410], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 75, 97, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 254, 317, 322, 331, 332, 333, 334, 335, 350, 385, 386, 388, 391, 392, 393, 394, 396, 398, 399, 404, 407, 410], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 75, 79, 98, 99, 103, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 132, 133, 137, 138, 139, 140, 141, 144, 145, 153, 160, 166, 168, 169, 174, 178, 179, 200, 201, 207, 209, 223, 224, 239, 240, 243, 244, 245, 248, 249, 250, 251, 260, 261, 269, 278, 290, 298, 300, 313, 315, 318, 320, 322, 323, 387, 391, 392, 393, 395, 396, 398, 402, 403, 404, 406, 407, 410], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 92, 94, 97, 98, 99, 100, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 173, 177, 178, 179, 181, 183, 184, 188, 190, 191, 192, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 274, 278, 279, 280, 282, 283, 284, 285, 286, 287, 290, 291, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 378, 382, 387, 388, 391, 392, 393, 394, 396, 403, 406, 407, 409, 410], "behavior": [1, 2, 3, 4, 14, 15, 21, 43, 62, 79, 115, 119, 137, 138, 144, 145, 161, 166, 169, 179, 184, 196, 201, 209, 216, 220, 240, 241, 244, 270, 305, 313, 322, 349, 364, 386, 392, 394, 403, 404, 405, 407], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 160, 166, 169, 179, 197, 198, 244, 283, 287, 288, 289, 370, 380, 381, 386, 391, 392, 395, 396, 404, 405, 410], "choos": [1, 11, 128, 240, 244, 317, 384, 386, 387, 391, 392, 393, 403, 404, 407], "follow": [1, 2, 3, 6, 7, 8, 11, 43, 48, 50, 51, 53, 54, 62, 73, 75, 76, 77, 78, 79, 80, 81, 92, 111, 112, 115, 118, 119, 120, 124, 125, 131, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 156, 177, 183, 203, 207, 209, 223, 224, 238, 240, 242, 244, 245, 280, 283, 284, 285, 296, 297, 298, 299, 300, 301, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 351, 368, 386, 387, 388, 391, 392, 393, 394, 397, 398, 402, 403, 404, 405, 407, 409, 410], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 371, 391, 393, 409], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 43, 73, 160, 174, 209, 218, 219, 236, 260, 261, 282, 350, 351, 353, 361, 364, 368, 371, 372, 391, 392, 393, 394, 396, 403, 404, 407, 409, 410], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 93, 94, 98, 99, 101, 103, 107, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 134, 135, 136, 137, 138, 141, 144, 145, 156, 157, 160, 163, 164, 168, 171, 173, 176, 177, 179, 181, 182, 183, 191, 193, 197, 200, 201, 202, 203, 205, 206, 207, 209, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 251, 252, 253, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 286, 287, 289, 290, 293, 299, 300, 314, 315, 317, 320, 322, 330, 331, 332, 333, 334, 349, 350, 353, 364, 387, 388, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 407, 409, 410], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 240, 244, 371, 391, 392, 393, 394, 398, 400, 403, 404, 407, 409], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 39, 41, 43, 44, 52, 54, 58, 59, 73, 75, 76, 79, 92, 94, 97, 99, 100, 102, 105, 115, 116, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 176, 183, 188, 191, 195, 196, 197, 198, 205, 207, 209, 218, 219, 233, 236, 238, 239, 240, 242, 244, 250, 251, 256, 262, 263, 271, 279, 280, 285, 289, 337, 340, 341, 342, 343, 345, 346, 347, 348, 351, 364, 365, 380, 381, 386, 387, 391, 392, 393, 394, 396, 397, 398, 400, 403, 404, 405, 406, 407, 409, 410], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 371, 391, 392, 400], "rand_step": [1, 2, 3, 34, 57, 113, 114, 115, 116, 118, 119, 120, 126, 127, 131, 132, 133, 137, 138, 144, 145, 176, 197, 207, 405, 409, 410], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 391], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 75, 77, 79, 80, 81, 391, 392, 393], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 43, 44, 58, 59, 73, 75, 76, 77, 79, 80, 81, 91, 92, 99, 100, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 184, 195, 200, 209, 221, 244, 247, 260, 261, 317, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 359, 384, 387, 391, 392, 393, 394, 395, 398, 400, 405, 409, 410], "pad": [1, 2, 3, 23, 51, 61, 75, 77, 79, 80, 81, 160, 223, 224, 226, 227, 244, 248, 249, 250, 365], "along": [1, 2, 3, 14, 15, 23, 25, 48, 50, 53, 54, 55, 56, 63, 75, 77, 79, 80, 81, 87, 92, 94, 99, 100, 105, 107, 118, 120, 159, 160, 161, 179, 181, 184, 191, 199, 244, 245, 248, 249, 254, 279, 283, 286, 287, 300, 315, 322, 386, 391, 392, 394, 395, 397, 403, 404, 405, 407], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 78, 85, 91, 92, 95, 105, 106, 109, 110, 115, 119, 137, 138, 144, 145, 153, 156, 159, 160, 164, 183, 196, 197, 199, 200, 201, 203, 205, 209, 246, 286, 296, 307, 368, 385, 392, 393, 402, 403, 404, 405, 407, 410], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 100, 119, 156, 184, 195, 217, 219, 248, 249, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 388, 394], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 34, 37, 56, 57, 59, 77, 113, 114, 115, 118, 119, 120, 137, 138, 144, 145, 146, 147, 174, 184, 207, 209, 233, 248, 249, 263, 269, 279, 280, 284, 285, 287, 326, 331, 365, 391, 393, 394, 395, 396, 397, 403, 404], "valid": [1, 2, 3, 23, 48, 50, 51, 63, 82, 105, 148, 156, 184, 201, 209, 218, 219, 223, 224, 245, 248, 249, 260, 261, 314, 331, 332, 333, 334, 365, 388, 410], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 364, 384, 386, 391, 392], "strategi": [1, 2, 16, 79, 97, 128, 153, 236, 249, 258, 386, 388, 391, 392, 396, 403, 404, 407], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 55, 56, 59, 62, 64, 65, 66, 67, 68, 70, 94, 115, 119, 125, 131, 137, 138, 139, 140, 144, 145, 146, 148, 157, 159, 160, 170, 177, 195, 196, 197, 200, 201, 206, 207, 209, 218, 219, 223, 224, 248, 249, 250, 251, 279, 283, 284, 287, 290, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 323, 329, 351, 368, 378, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 410], "organ": [1, 2, 405, 407], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 115, 118, 119, 120, 137, 138, 141, 144, 145, 157, 160, 166, 169, 170, 188, 195, 206, 207, 209, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 294, 302, 307, 322, 329, 349, 351, 386, 387, 392, 395, 396, 397, 398, 399, 400, 403, 405, 409], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 75, 76, 79, 94, 97, 111, 112, 115, 119, 124, 125, 128, 137, 138, 139, 140, 144, 145, 156, 160, 167, 168, 179, 186, 201, 202, 209, 233, 238, 239, 240, 242, 243, 244, 245, 247, 250, 251, 252, 263, 313, 315, 317, 326, 331, 332, 333, 337, 338, 339, 364, 368, 370, 380, 381, 386, 387, 388, 391, 392, 393, 395, 397, 399, 402, 403, 404, 405, 406, 407, 410], "how": [1, 2, 3, 11, 18, 19, 20, 24, 43, 49, 59, 79, 91, 92, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 209, 252, 283, 297, 299, 312, 314, 315, 317, 351, 353, 368, 385, 386, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "tabl": [1, 386, 392, 396], "summar": [1, 3, 405], "what": [1, 3, 8, 11, 32, 49, 62, 73, 92, 99, 115, 119, 137, 138, 144, 145, 170, 197, 211, 216, 284, 300, 311, 315, 322, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 405, 406, 407, 409, 410], "expect": [1, 2, 3, 4, 7, 30, 43, 52, 62, 63, 92, 98, 99, 115, 119, 131, 134, 137, 138, 144, 145, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 238, 239, 240, 242, 243, 244, 250, 251, 260, 261, 280, 286, 289, 297, 298, 299, 300, 301, 302, 304, 305, 306, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 372, 385, 386, 387, 388, 391, 393, 394, 395, 396, 397, 398, 403, 404, 405, 407, 410], "n": [1, 2, 3, 6, 7, 25, 26, 29, 33, 41, 42, 43, 47, 54, 115, 119, 137, 138, 144, 145, 160, 168, 173, 202, 209, 238, 239, 242, 247, 260, 261, 282, 287, 297, 298, 306, 315, 330, 365, 386, 388, 392, 394, 396, 403, 404, 407, 410], "b": [1, 2, 3, 7, 8, 23, 30, 31, 37, 48, 50, 52, 53, 54, 56, 59, 60, 86, 105, 238, 239, 242, 243, 250, 251, 253, 254, 262, 271, 290, 331, 332, 333, 334, 335, 337, 351, 386, 392, 406, 407], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 91, 92, 94, 98, 105, 115, 116, 118, 119, 132, 133, 137, 138, 144, 145, 153, 156, 160, 166, 169, 170, 183, 187, 188, 196, 198, 205, 207, 209, 211, 216, 238, 242, 260, 261, 279, 286, 297, 321, 331, 332, 333, 334, 335, 337, 351, 358, 368, 370, 382, 385, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "p": [1, 2, 4, 94, 97, 116, 142, 143, 222], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 73, 75, 77, 79, 80, 81, 111, 112, 115, 119, 124, 125, 137, 138, 139, 140, 144, 145, 164, 166, 167, 169, 176, 183, 188, 192, 196, 197, 199, 200, 201, 203, 205, 206, 209, 238, 241, 242, 245, 250, 265, 269, 270, 286, 289, 296, 297, 298, 300, 301, 302, 304, 305, 306, 313, 315, 317, 318, 319, 320, 322, 323, 370, 380, 381, 382, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 410], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 94, 105, 115, 118, 119, 137, 138, 144, 145, 166, 167, 169, 176, 179, 199, 201, 211, 244, 245, 251, 252, 283, 286, 287, 289, 290, 296, 297, 298, 300, 301, 302, 304, 305, 306, 313, 315, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334, 351, 359, 370, 380, 381, 382, 384, 386, 387, 388, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 407, 410], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 80, 81, 86, 87, 92, 99, 100, 105, 107, 113, 114, 115, 118, 119, 120, 121, 137, 138, 144, 145, 146, 147, 153, 159, 160, 161, 173, 179, 181, 184, 191, 194, 199, 202, 207, 223, 224, 225, 230, 240, 242, 244, 245, 248, 249, 250, 253, 254, 259, 262, 266, 267, 268, 269, 272, 279, 282, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 382, 386, 391, 392, 393, 394, 395, 403, 404, 405, 407], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 94, 105, 111, 112, 115, 116, 119, 124, 125, 128, 134, 137, 138, 139, 140, 141, 144, 145, 152, 159, 161, 184, 191, 197, 198, 201, 207, 209, 216, 222, 234, 238, 242, 244, 260, 261, 282, 298, 299, 300, 306, 309, 313, 314, 315, 317, 318, 320, 322, 323, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 368, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "adapt": [1, 24, 154, 195, 220, 314, 391, 405], "equal": [1, 14, 15, 17, 73, 92, 99, 100, 132, 135, 136, 137, 144, 178, 179, 223, 224, 238, 240, 242, 244, 245, 251, 321, 326, 359, 380, 381, 391, 393, 406], "introduc": [1, 2, 137, 144, 238, 240, 242, 244, 260, 261, 391, 403], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 63, 64, 65, 66, 67, 68, 75, 81, 86, 87, 94, 105, 107, 111, 112, 115, 118, 119, 120, 124, 125, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 156, 183, 197, 201, 203, 209, 211, 226, 240, 244, 267, 287, 288, 289, 351, 359, 371, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 407, 409, 410], "confus": [1, 25, 43, 115, 119, 137, 138, 144, 145, 201, 209], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 75, 77, 79, 80, 81, 86, 87, 88, 94, 97, 98, 99, 100, 101, 103, 107, 115, 118, 119, 120, 131, 137, 138, 144, 145, 163, 167, 168, 185, 192, 199, 203, 207, 209, 236, 238, 240, 244, 254, 255, 278, 280, 285, 287, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 331, 349, 365, 380, 381, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 409, 410], "better": [1, 3, 8, 9, 14, 15, 23, 240, 244, 387, 393, 395, 405, 409], "consist": [1, 2, 3, 43, 49, 52, 59, 60, 76, 79, 115, 119, 137, 138, 144, 145, 177, 206, 209, 224, 245, 391, 392, 393, 405, 406, 410], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 79, 115, 119, 129, 130, 137, 138, 144, 145, 201, 283, 287, 391, 393, 395, 396, 398, 403, 404, 405, 410], "keep": [1, 3, 4, 7, 8, 15, 49, 52, 59, 60, 94, 98, 105, 137, 144, 179, 183, 205, 207, 209, 216, 260, 261, 361, 368, 391, 392, 393, 394, 398, 399, 400, 404, 405, 407, 409, 410], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 73, 76, 183, 205, 298, 301, 304, 306, 318, 320, 322, 323, 387, 391, 392, 396, 397, 403, 404, 407, 410], "interchang": [1, 250, 251, 393, 395, 399, 406, 407], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 43, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 100, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 168, 178, 189, 201, 207, 209, 211, 223, 224, 232, 238, 240, 244, 245, 250, 251, 280, 283, 287, 297, 299, 300, 301, 304, 305, 306, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 326, 331, 364, 368, 387, 391, 392, 394, 398, 403, 404, 405, 407, 410], "wherea": [1, 2, 22, 79, 111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 168, 209, 315, 388, 399], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 59, 62, 64, 65, 66, 67, 68, 76, 79, 81, 91, 92, 115, 119, 131, 137, 138, 144, 145, 183, 197, 201, 205, 207, 209, 236, 237, 240, 242, 244, 248, 249, 260, 261, 283, 287, 300, 302, 305, 306, 320, 329, 331, 332, 333, 334, 335, 391, 392, 393, 395, 397, 398, 399, 403, 404, 405, 406], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 73, 79, 92, 99, 105, 115, 119, 137, 138, 144, 145, 184, 288, 289, 359, 368, 386, 391, 392, 393, 398, 402, 409, 410], "doesn": [1, 4, 12, 105, 132, 166, 169, 395], "understood": [1, 3, 391], "serv": [1, 18, 20, 21, 121, 407, 410], "basi": [1, 105, 250, 407], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 30, 43, 49, 52, 54, 59, 60, 73, 75, 79, 81, 86, 98, 100, 105, 111, 112, 115, 116, 119, 123, 124, 125, 137, 138, 144, 145, 160, 177, 183, 186, 203, 206, 207, 209, 211, 221, 244, 250, 251, 252, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 351, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "anoth": [1, 2, 3, 8, 62, 79, 92, 99, 115, 118, 119, 120, 123, 137, 138, 144, 145, 157, 166, 167, 169, 197, 200, 245, 283, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 386, 387, 391, 393, 394, 396, 397, 402, 403, 404, 405, 410], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 91, 92, 99, 100, 115, 119, 123, 132, 137, 138, 141, 144, 145, 157, 164, 183, 197, 200, 201, 203, 205, 209, 240, 244, 245, 252, 272, 286, 288, 289, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 349, 351, 353, 386, 388, 391, 392, 393, 394, 395, 396, 397, 399, 403, 404, 405, 407, 410], "method": [1, 2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 99, 100, 101, 102, 103, 105, 107, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 156, 157, 160, 164, 166, 167, 170, 171, 173, 177, 179, 183, 185, 186, 187, 188, 192, 195, 197, 200, 201, 203, 205, 209, 210, 218, 221, 222, 236, 240, 244, 250, 251, 252, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 294, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 311, 313, 315, 317, 318, 319, 320, 322, 323, 329, 335, 349, 350, 379, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 403, 405, 407, 410], "op": [1, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 45, 46, 47, 62, 64, 65, 66, 67, 68, 178, 206, 218, 219, 236, 351, 370], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 43, 49, 52, 59, 60, 73, 81, 91, 92, 100, 105, 115, 119, 137, 138, 139, 140, 141, 144, 145, 209, 211, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 250, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 279, 280, 282, 284, 285, 290, 293, 349, 351, 387, 391, 392, 393, 394, 395, 396, 397, 403, 405, 406, 407, 409, 410], "goal": [1, 3, 4, 73, 74, 75, 76, 77, 78, 79, 80, 81, 196, 391, 392, 393, 394, 404, 405], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 392], "explicitli": [1, 2, 3, 4, 29, 83, 84, 90, 156, 283, 387, 392, 394, 398, 403, 404, 407], "do": [1, 2, 3, 4, 7, 81, 115, 119, 137, 138, 144, 145, 146, 147, 153, 184, 206, 207, 216, 240, 244, 251, 253, 276, 315, 331, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 410], "deepcopi": [1, 252, 315, 403], "structur": [1, 3, 7, 48, 49, 50, 52, 53, 54, 59, 60, 62, 63, 105, 115, 119, 137, 138, 144, 145, 166, 169, 217, 250, 260, 261, 297, 317, 331, 332, 333, 334, 335, 384, 387, 391, 393, 394, 395, 398, 403, 404, 405, 406], "place": [1, 2, 3, 24, 30, 31, 32, 37, 43, 48, 50, 53, 56, 86, 87, 94, 97, 107, 115, 116, 119, 137, 138, 144, 145, 146, 147, 156, 164, 170, 183, 197, 200, 201, 203, 205, 206, 207, 209, 217, 252, 278, 282, 286, 365, 370, 371, 387, 392, 393, 396, 399, 403, 404, 405, 407], "instanti": [1, 2, 3, 14, 15, 21, 48, 49, 50, 52, 53, 59, 60, 62, 91, 92, 123, 156, 200, 251, 349, 391, 392, 396, 397, 399, 403, 404, 405, 407, 410], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 113, 114, 115, 116, 118, 119, 120, 121, 129, 130, 131, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 153, 159, 160, 163, 164, 166, 167, 169, 172, 177, 178, 179, 183, 191, 193, 197, 198, 200, 201, 203, 205, 207, 209, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 250, 251, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 286, 287, 289, 290, 293, 294, 297, 298, 300, 309, 313, 315, 317, 318, 319, 320, 322, 323, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 363, 368, 371, 380, 381, 382, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 409, 410], "graph": [1, 3, 4, 8, 111, 112, 124, 125, 327, 328, 391, 405], "reli": [1, 3, 11, 23, 197, 238, 239, 240, 242, 243, 244, 297, 317, 387, 391, 393, 396, 398, 405, 410], "third": [1, 179, 280, 403, 404], "parti": 1, "try": [1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 48, 50, 53, 56, 392, 393, 394, 397, 398, 403, 404, 405, 409, 410], "limit": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 131, 137, 138, 144, 145, 160, 177, 297, 299, 314, 315, 317, 319, 387, 391, 392, 394, 403, 404, 405], "chart": 1, "show": [1, 2, 3, 11, 43, 115, 119, 137, 138, 144, 145, 209, 251, 351, 386, 391, 393, 394, 403, 404, 405, 407, 409], "decis": [1, 2, 3, 225, 259, 278, 303, 316, 394, 395, 396, 403, 404, 407, 410], "tree": [1, 2, 48, 50, 53, 115, 119, 137, 138, 144, 145, 403, 407], "simplest": [1, 105, 290, 391, 393, 394, 396, 403, 404, 407, 410], "scenario": [1, 2, 129, 130, 137, 146, 147, 349, 391, 396, 403, 404, 405], "transit": [1, 43, 75, 79, 92, 100, 105, 115, 119, 137, 138, 144, 145, 209, 220, 292, 391, 394, 395, 396, 398, 403, 405, 407], "sampl": [1, 4, 8, 9, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 103, 105, 107, 115, 119, 131, 134, 137, 138, 144, 145, 153, 159, 160, 184, 188, 212, 215, 218, 219, 221, 231, 236, 237, 241, 247, 248, 249, 258, 259, 260, 261, 264, 269, 270, 274, 279, 280, 281, 283, 284, 285, 286, 287, 297, 298, 299, 300, 301, 302, 304, 314, 316, 317, 322, 323, 359, 365, 368, 371, 384, 386, 391, 392, 393, 394, 395, 396, 398, 400, 403, 404, 406, 409, 410], "attent": [1, 2, 8, 391, 394, 410], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 115, 119, 131, 135, 136, 137, 138, 144, 145, 164, 168, 179, 183, 197, 200, 201, 203, 205, 207, 209, 216, 221, 222, 233, 234, 236, 238, 240, 242, 244, 247, 252, 261, 263, 267, 274, 279, 280, 282, 285, 286, 287, 288, 289, 291, 296, 301, 302, 304, 315, 330, 331, 332, 333, 334, 335, 337, 360, 364, 378, 386, 388, 391, 392, 393, 395, 396, 397, 398, 399, 404, 405, 410], "built": [1, 2, 3, 5, 7, 94, 111, 112, 118, 124, 125, 134, 135, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 324, 329, 376, 378, 379, 382, 391, 392, 393, 394, 397, 399, 405, 407, 410], "flatten": [1, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 105, 157, 173, 365, 384, 394, 404], "suffici": [1, 3, 4, 391], "preprocess": [1, 2, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 392], "popul": [1, 2, 3, 14, 15, 16, 49, 52, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 176, 197, 252, 315, 391, 393, 394, 396, 398, 405, 407], "replaybuff": [1, 2, 14, 15, 16, 34, 49, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 99, 109, 160, 184, 188, 209, 302, 307, 329, 376, 378, 384, 393, 398, 400, 403, 404, 406, 407, 409], "lazytensorstorag": [1, 2, 49, 52, 59, 60, 91, 105, 188, 209, 393, 400, 404, 407], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 52, 105, 115, 116, 119, 137, 138, 144, 145, 152, 157, 177, 197, 209, 222, 272, 279, 282, 283, 284, 308, 310, 311, 322, 331, 334, 342, 343, 347, 348, 349, 378, 387, 391, 403, 404, 407, 409, 410], "reshap": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 99, 105, 157, 240, 244, 245, 349, 393, 403, 404], "extend": [1, 2, 8, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 91, 92, 94, 95, 99, 100, 103, 105, 106, 109, 110, 159, 188, 209, 220, 315, 365, 387, 388, 391, 392, 393, 394, 398, 400, 403, 404, 406, 407, 409], "slice": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 153, 159, 407], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 48, 49, 50, 52, 53, 59, 60, 105, 123, 252, 398, 403, 404], "achiev": [1, 2, 3, 4, 43, 115, 119, 123, 137, 138, 144, 145, 196, 209, 217, 222, 283, 365, 388, 391, 392, 393, 394, 403, 404, 405, 407, 410], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 94, 105, 115, 116, 119, 123, 137, 138, 139, 144, 145, 146, 147, 157, 160, 183, 200, 201, 203, 206, 207, 209, 214, 216, 223, 224, 226, 227, 228, 229, 230, 235, 240, 244, 245, 246, 250, 251, 278, 287, 294, 300, 302, 307, 318, 320, 329, 351, 365, 372, 373, 374, 378, 380, 381, 386, 391, 392, 393, 394, 396, 399, 403, 404, 405, 406, 407, 409, 410], "multidimension": [1, 2, 59, 91, 92, 407], "slicesampl": [1, 2, 73, 92, 407], "sampler": [1, 2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 105, 107, 184, 302, 307, 329, 391, 393, 403, 404, 407], "One": [1, 2, 4, 8, 25, 26, 29, 33, 41, 42, 47, 63, 105, 111, 112, 137, 144, 160, 188, 203, 218, 219, 258, 286, 290, 321, 326, 355, 391, 392, 407, 410], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 94, 99, 100, 101, 102, 103, 105, 107, 111, 115, 116, 119, 124, 135, 137, 138, 139, 140, 141, 144, 145, 146, 153, 156, 157, 160, 163, 170, 174, 177, 179, 181, 192, 196, 197, 198, 201, 202, 207, 209, 223, 224, 233, 240, 244, 245, 248, 249, 250, 251, 263, 274, 279, 280, 282, 283, 284, 285, 286, 287, 290, 291, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 321, 322, 323, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 387, 391, 392, 393, 394, 396, 402, 405, 407], "ensur": [1, 2, 3, 43, 49, 59, 91, 92, 98, 115, 119, 137, 138, 144, 145, 153, 160, 183, 195, 201, 203, 207, 209, 240, 244, 279, 386, 392, 393, 405, 407], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 94, 105, 107, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 159, 161, 166, 169, 170, 171, 177, 179, 181, 185, 186, 188, 192, 195, 197, 199, 207, 208, 209, 211, 214, 216, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 235, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 255, 258, 259, 260, 262, 263, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 290, 291, 294, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 359, 365, 368, 378, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 409, 410], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 73, 241, 269, 270, 296, 385, 391, 392, 393, 394, 397, 403, 404, 406, 410], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 32, 43, 48, 50, 62, 101, 105, 115, 119, 123, 128, 137, 138, 139, 140, 144, 145, 160, 163, 173, 183, 186, 198, 201, 205, 207, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 253, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 283, 284, 285, 286, 290, 293, 296, 306, 319, 320, 330, 335, 351, 368, 382, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 407, 409, 410], "dimension": [1, 49, 52, 59, 60, 168, 240, 244, 331, 336, 344, 404], "num_slic": [1, 2, 73, 79, 92, 99, 100, 407], "4": [1, 2, 3, 7, 25, 30, 31, 34, 37, 41, 42, 43, 49, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 99, 100, 107, 111, 112, 113, 114, 115, 119, 124, 125, 126, 127, 128, 131, 133, 137, 138, 142, 143, 144, 145, 153, 154, 156, 157, 160, 170, 188, 195, 196, 207, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 247, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 291, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 349, 350, 386, 390, 391, 392, 393, 394, 396, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 34, 57, 157, 188, 394, 398, 407], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 368, 371, 378, 388, 391, 392, 393, 394, 398, 400, 403, 404, 407, 409], "dim": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 160, 161, 181, 194, 197, 202, 207, 243, 267, 272, 282, 382, 392, 393, 403, 405, 407], "ndim": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 86, 87, 91, 92, 105, 107, 115, 119, 137, 138, 144, 145, 209, 282], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 105, 115, 119, 132, 138, 139, 140, 141, 144, 145, 349, 379, 384, 391, 392, 393, 395, 402, 409, 410], "make_env": [1, 3, 137, 144, 147, 207, 349, 373, 374, 391, 392, 410], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 91, 97, 115, 119, 137, 138, 144, 145, 201, 220, 232, 263, 280, 284, 285, 286, 287, 307, 317, 370, 384, 388, 391, 392, 395, 396, 400, 407, 410], "behav": [1, 3, 121, 131, 238, 242, 258, 305, 313, 315, 406], "iif": 1, "accordingli": [1, 2, 92, 195, 196, 242, 284, 394], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 100, 105, 107, 113, 114, 115, 118, 119, 120, 121, 122, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 156, 157, 160, 164, 168, 170, 171, 177, 179, 181, 183, 185, 186, 188, 191, 192, 195, 196, 197, 199, 200, 201, 203, 205, 209, 210, 214, 220, 221, 222, 223, 224, 226, 227, 228, 230, 233, 235, 238, 239, 240, 242, 243, 244, 245, 247, 250, 251, 252, 255, 258, 262, 272, 274, 275, 276, 277, 279, 280, 283, 285, 286, 289, 290, 291, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 309, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 337, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 367, 386, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 79, 91, 105, 156, 170, 211, 279, 286, 396, 397, 399, 403, 404], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 92, 94, 100, 115, 119, 121, 132, 135, 136, 137, 138, 144, 145, 156, 157, 160, 184, 196, 197, 198, 200, 201, 209, 212, 216, 234, 260, 261, 265, 269, 282, 297, 299, 300, 307, 314, 317, 319, 320, 354, 388, 391, 392, 393, 394, 397, 403, 404, 405, 407, 409, 410], "fulli": [1, 8, 43, 115, 119, 137, 138, 144, 145, 209, 239, 243, 392, 397, 405, 407], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 94, 95, 98, 100, 101, 103, 105, 106, 107, 109, 110, 115, 116, 119, 132, 137, 138, 139, 140, 144, 145, 146, 147, 154, 156, 173, 183, 184, 188, 201, 203, 207, 209, 211, 217, 222, 223, 224, 230, 245, 254, 278, 282, 286, 287, 288, 289, 297, 298, 300, 301, 302, 304, 305, 306, 313, 315, 317, 318, 319, 320, 322, 323, 331, 333, 334, 349, 356, 368, 385, 387, 391, 392, 393, 396, 397, 403, 404, 405, 407, 409, 410], "consecut": [1, 3, 73, 98, 123, 244, 260, 261, 351, 394, 395, 398, 404, 407, 410], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 79, 115, 116, 118, 119, 132, 133, 137, 138, 144, 145, 183, 205, 209, 297, 368, 382, 392, 393, 395, 396], "therebi": [1, 24, 349, 387, 391, 392], "interrupt": [1, 2, 119, 282, 337], "These": [1, 2, 7, 54, 76, 81, 108, 146, 183, 205, 386, 387, 391, 393, 403, 404, 405, 407, 410], "tool": [1, 2, 3, 5, 394, 395, 403, 405, 407, 410], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 115, 118, 119, 137, 138, 144, 145, 149, 152, 388, 391, 393, 394, 395, 398, 399, 405], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 384], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 384], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 52, 59, 60, 73, 81, 94, 116, 117, 137, 144, 207, 391, 392, 393, 394, 403, 404, 405, 406, 410], "synchron": [1, 14, 19, 21, 48, 50, 53, 132, 380, 381, 392, 393, 403], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 43, 115, 119, 132, 137, 138, 144, 145, 166, 169, 196, 201, 207, 209, 231, 240, 241, 244, 249, 258, 268, 269, 270, 283, 287, 315, 349, 364, 386, 387, 391, 392, 394, 403, 404, 409, 410], "find": [1, 4, 6, 7, 18, 19, 20, 49, 51, 61, 99, 100, 218, 219, 242, 260, 261, 362, 366, 391, 392, 396, 397, 403, 404], "folder": [1, 2, 48, 50, 53, 146, 392], "variou": [1, 2, 3, 240, 244, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 324, 329, 351, 380, 381, 391, 392, 393, 395, 396, 397, 399, 403, 404, 407, 410], "machin": [1, 2, 7, 18, 19, 20, 43, 78, 123, 403, 404, 409], "wonder": 1, "why": [1, 2, 3, 216, 403, 405, 410], "instead": [1, 4, 7, 8, 12, 14, 15, 16, 25, 43, 79, 115, 119, 137, 138, 144, 145, 173, 197, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 297, 299, 300, 302, 305, 306, 307, 313, 314, 317, 318, 319, 320, 329, 331, 335, 339, 382, 386, 387, 395, 396, 400, 405, 407, 410], "lower": [1, 2, 3, 21, 27, 163, 207, 264, 265, 290, 393, 403, 405], "io": [1, 11, 73, 79, 124, 125, 132, 135, 136, 242, 243], "footprint": [1, 2, 407], "commun": [1, 2, 3, 137, 144, 385, 393, 410], "yet": [1, 111, 112, 124, 406], "plai": [1, 3, 139, 140, 145, 160, 392, 393, 397, 407, 410], "role": [1, 3, 130, 392, 397, 410], "opposit": [1, 403], "direct": [1, 2, 43, 115, 119, 137, 138, 144, 145, 209, 238, 242, 315, 392, 397], "faster": [1, 2, 4, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 80, 81, 132, 331, 332, 333, 334, 394, 403, 404], "share": [1, 3, 6, 8, 23, 48, 50, 52, 53, 59, 60, 62, 84, 86, 87, 88, 92, 94, 99, 101, 103, 107, 116, 137, 144, 207, 240, 244, 250, 251, 275, 276, 277, 297, 298, 299, 300, 301, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 382, 384, 386, 393, 394, 400, 402, 403, 404, 409, 410], "among": [1, 3, 139, 140, 403, 404], "prohibit": [1, 3, 105], "slow": [1, 3, 4, 11, 48, 50, 53], "compar": [1, 3, 79, 105, 298, 300, 313, 318, 320, 322, 323, 364, 387, 391, 393, 396, 397, 403, 404, 407, 410], "gpu": [1, 7, 8, 43, 86, 87, 107, 115, 119, 120, 123, 137, 138, 144, 145, 209, 391, 393, 394, 403, 404, 410], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 59, 62, 73, 91, 92, 99, 105, 111, 112, 119, 145, 156, 179, 207, 218, 219, 220, 221, 231, 234, 238, 240, 242, 244, 247, 259, 268, 269, 283, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 386, 387, 391, 392, 393, 396, 403, 404, 405, 407, 409, 410], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 92, 94, 97, 99, 100, 103, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 156, 157, 161, 163, 164, 167, 183, 191, 192, 197, 199, 200, 201, 202, 203, 205, 209, 218, 219, 220, 222, 236, 237, 240, 244, 248, 249, 250, 251, 260, 261, 274, 278, 279, 282, 283, 284, 286, 287, 290, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 325, 329, 331, 332, 333, 334, 335, 339, 349, 358, 379, 391, 392, 393, 396, 399, 403, 404, 407, 410], "build": [1, 3, 7, 23, 30, 43, 49, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 120, 121, 124, 125, 129, 130, 132, 135, 136, 137, 138, 141, 144, 145, 146, 147, 188, 207, 209, 221, 240, 244, 247, 281, 283, 287, 368, 375, 376, 377, 386, 388, 393, 394, 396, 397, 398, 399, 403, 404, 405, 406, 409, 410], "mani": [1, 2, 3, 4, 52, 111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 132, 133, 141, 297, 299, 306, 314, 317, 386, 391, 392, 393, 395, 396, 398, 400, 403, 404, 405, 407, 410], "eg": [1, 2, 3, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 101, 103, 107, 113, 114, 115, 118, 119, 120, 121, 123, 137, 138, 141, 144, 145, 168, 195, 201, 250, 278, 351], "gymnasium": [1, 2, 3, 5, 12, 115, 118, 119, 120, 126, 127, 137, 138, 144, 145, 149, 152, 171, 192, 195, 206, 392, 393, 405, 409], "warn": [1, 3, 218, 219, 236, 237, 260, 261, 392], "quickli": [1, 3, 392, 403, 404, 410], "becom": [1, 3, 4, 21, 238, 242, 403, 404, 410], "quit": [1, 3, 11, 73, 115, 119, 137, 138, 144, 145, 386, 391, 392, 393, 396, 403, 404, 410], "annoi": [1, 3], "By": [1, 2, 3, 30, 31, 37, 56, 113, 114, 115, 118, 119, 120, 121, 129, 130, 137, 138, 139, 140, 141, 144, 145, 146, 147, 272, 287, 315, 364, 382, 387, 391, 403, 406, 407, 410], "filter": [1, 2, 3, 4, 63, 92, 99, 100, 297, 298, 300, 301, 305, 306, 313, 317, 318, 320, 395], "out": [1, 2, 3, 4, 5, 9, 21, 43, 48, 50, 53, 63, 75, 79, 84, 92, 99, 100, 115, 119, 137, 138, 139, 140, 144, 145, 197, 209, 211, 238, 239, 242, 248, 249, 252, 253, 254, 261, 274, 278, 279, 280, 283, 284, 285, 286, 287, 315, 327, 328, 387, 388, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 407, 409, 410], "still": [1, 2, 3, 9, 64, 79, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 219, 314, 315, 391, 392, 394, 402, 405, 407, 410], "wish": [1, 3, 11, 14, 15, 17, 79, 152, 397, 407], "displai": [1, 3, 7, 115, 119, 137, 138, 144, 145, 368, 388, 391, 392, 404, 405], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 161, 164, 166, 169, 170, 171, 173, 176, 177, 178, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 207, 209, 211, 216, 217, 219, 220, 221, 222, 223, 224, 226, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 260, 261, 262, 263, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 329, 331, 332, 333, 334, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 358, 361, 362, 364, 365, 366, 368, 382, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "central": [2, 250, 251, 252, 391, 392, 395, 403, 404, 407], "part": [2, 3, 4, 8, 43, 54, 73, 76, 77, 79, 80, 81, 111, 115, 119, 124, 135, 137, 138, 144, 145, 159, 179, 188, 191, 209, 216, 240, 244, 291, 359, 382, 391, 393, 394, 400, 403, 405, 410], "algorithm": [2, 3, 8, 9, 131, 153, 297, 317, 318, 320, 384, 387, 388, 391, 392, 393, 394, 396, 397, 398, 399, 403, 404, 406, 407, 409], "implement": [2, 3, 9, 12, 14, 15, 16, 43, 89, 101, 102, 115, 119, 131, 132, 137, 138, 144, 145, 157, 164, 166, 167, 171, 174, 177, 185, 186, 192, 195, 200, 201, 207, 209, 223, 238, 239, 240, 241, 242, 243, 244, 268, 269, 270, 297, 298, 300, 303, 304, 305, 311, 313, 315, 316, 317, 319, 320, 322, 349, 359, 373, 386, 388, 391, 392, 393, 394, 403, 404, 405, 409], "wide": [2, 3, 5], "give": [2, 3, 7, 59, 76, 115, 119, 131, 137, 138, 144, 145, 160, 385, 387, 391, 392, 403, 404, 405, 406, 409], "abil": [2, 315, 405, 407], "panel": [2, 393], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 75, 81, 84, 105, 157, 160, 170, 240, 244, 300, 305, 313, 320, 324, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "includ": [2, 3, 4, 7, 9, 21, 43, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 101, 103, 107, 115, 119, 131, 135, 136, 137, 138, 144, 145, 196, 201, 207, 209, 240, 244, 297, 300, 315, 320, 371, 386, 388, 391, 392, 393, 394, 403, 404, 405, 407, 410], "almost": [2, 394], "physic": [2, 6, 7, 84, 137, 138, 141, 388, 391, 403, 404, 405], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 73, 86, 87, 88, 101, 103, 107, 115, 118, 119, 120, 137, 138, 144, 145, 209, 252, 260, 261, 302, 315, 329, 391, 392, 394, 403, 404, 406, 407], "liststorag": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 407], "veri": [2, 3, 124, 125, 392, 395, 398, 403, 405, 407, 409, 410], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 37, 43, 48, 50, 52, 53, 55, 56, 59, 60, 73, 79, 92, 94, 97, 99, 100, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 156, 157, 186, 209, 216, 245, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 324, 326, 329, 386, 388, 391, 393, 394, 395, 396, 397, 403, 404, 405, 407, 410], "complex": [2, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 391, 392, 395, 396], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 100, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 214, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 295, 297, 298, 300, 301, 302, 304, 305, 306, 309, 310, 313, 315, 317, 318, 319, 320, 322, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 409, 410], "contigu": [2, 3, 8, 27, 30, 64, 76, 79, 80, 115, 119, 137, 138, 144, 145, 214, 393, 394, 403, 404, 405, 407, 409, 410], "tensorstorag": [2, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 105, 108, 398, 407], "lazymemmapstorag": [2, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 159, 160, 391, 392, 394, 398, 403, 406, 407], "citizen": 2, "pytre": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 108], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 92, 94, 99, 103, 105, 113, 114, 115, 118, 119, 120, 137, 138, 144, 145, 177, 179, 209, 222, 226, 232, 233, 240, 243, 244, 245, 252, 255, 259, 262, 263, 279, 280, 284, 285, 290, 297, 298, 300, 301, 305, 306, 308, 313, 315, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334, 362, 364, 366, 375, 407], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 43, 48, 50, 53, 63, 92, 97, 99, 100, 115, 118, 119, 120, 129, 130, 137, 138, 144, 145, 146, 147, 197, 201, 209, 283, 287, 300, 320, 322, 364, 380, 381, 382, 388, 392, 393, 395, 397, 403, 405, 410], "nest": [2, 3, 23, 30, 31, 34, 36, 37, 43, 44, 48, 50, 52, 53, 56, 57, 58, 69, 86, 87, 90, 94, 107, 115, 118, 119, 120, 137, 138, 144, 145, 160, 195, 198, 209, 217, 282, 331, 332, 333, 334, 335, 349, 388, 392, 393, 404, 405, 407, 409], "construct": [2, 3, 5, 23, 43, 49, 52, 59, 60, 62, 73, 94, 115, 118, 119, 137, 138, 139, 144, 145, 166, 169, 209, 211, 240, 244, 265, 287, 368, 386, 392, 393, 394, 396, 403, 405, 407, 410], "ram": [2, 118, 120, 399, 407, 410], "prealloc": [2, 3, 137, 144, 405], "ve": [2, 54, 391, 394, 400], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 94, 98, 115, 119, 123, 129, 130, 137, 138, 144, 145, 177, 195, 196, 200, 219, 237, 238, 242, 252, 261, 282, 297, 315, 317, 319, 391, 392, 393, 394, 402, 403, 404, 405, 407, 410], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 80, 81, 105, 113, 114, 115, 119, 123, 137, 138, 139, 140, 144, 145, 160, 252, 358, 386, 387, 388, 391, 392, 393, 394, 395, 396, 398, 400, 403, 404, 405, 407, 409, 410], "start": [2, 3, 4, 5, 14, 21, 24, 62, 63, 73, 81, 92, 99, 100, 116, 119, 128, 137, 144, 165, 216, 363, 390, 391, 392, 401, 404, 405, 407, 408, 410], "replay_buff": [2, 8, 14, 15, 16, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 365, 378, 391, 392, 393, 398, 403, 404, 407], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 34, 43, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 153, 154, 156, 157, 159, 160, 163, 170, 171, 176, 177, 179, 181, 183, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 200, 205, 207, 209, 210, 214, 216, 217, 221, 222, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 250, 251, 252, 255, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 290, 291, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 349, 351, 361, 364, 378, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "rb": [2, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 99, 100, 105, 160, 188, 209, 392, 394, 398, 400, 404, 406, 407, 409], "10": [2, 3, 7, 22, 23, 25, 26, 29, 33, 39, 43, 49, 52, 54, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 94, 99, 100, 105, 107, 111, 112, 115, 116, 119, 124, 125, 131, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 157, 159, 160, 196, 198, 199, 209, 221, 222, 225, 226, 228, 230, 232, 236, 237, 238, 239, 240, 242, 243, 244, 247, 259, 260, 261, 272, 283, 290, 294, 298, 302, 304, 311, 317, 318, 319, 323, 329, 331, 332, 333, 334, 337, 351, 359, 388, 391, 392, 393, 394, 395, 396, 400, 403, 404, 405, 407, 409, 410], "add": [2, 3, 4, 6, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 91, 94, 95, 105, 106, 109, 110, 115, 119, 137, 138, 144, 145, 160, 177, 201, 209, 240, 244, 253, 281, 297, 363, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 407, 409], "string": [2, 18, 19, 20, 43, 51, 63, 82, 115, 119, 129, 135, 137, 138, 144, 145, 152, 183, 195, 205, 209, 240, 244, 279, 282, 283, 284, 296, 350, 367, 387, 391, 393, 394, 407], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 39, 41, 49, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 94, 99, 100, 105, 107, 134, 137, 144, 153, 160, 184, 193, 196, 197, 218, 219, 223, 224, 238, 239, 242, 274, 279, 282, 286, 287, 291, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 359, 387, 391, 393, 396, 398, 407, 410], "30": [2, 3, 52, 77, 156, 178, 264, 265, 349, 353, 391, 392, 393, 394, 398, 403, 404, 405, 407], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 101, 103, 105, 107, 115, 116, 118, 119, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 362, 363, 364, 365, 366, 367, 368, 372, 373, 374, 378, 380, 381, 382, 386, 388, 391, 392, 394, 395, 396, 397, 398, 399, 402, 405, 407, 409, 410], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 99, 100, 101, 105, 106, 107, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 155, 156, 157, 159, 160, 161, 162, 164, 165, 168, 173, 174, 178, 179, 181, 183, 184, 187, 194, 195, 198, 201, 202, 203, 205, 209, 211, 214, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 278, 279, 280, 282, 283, 285, 286, 287, 297, 298, 299, 306, 308, 309, 314, 315, 316, 317, 318, 322, 323, 331, 333, 334, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 359, 360, 361, 364, 365, 368, 370, 376, 380, 381, 382, 405, 407], "entri": [2, 3, 14, 15, 17, 23, 30, 31, 34, 37, 43, 48, 50, 51, 53, 56, 57, 63, 70, 75, 76, 77, 78, 80, 81, 99, 100, 113, 114, 115, 118, 119, 120, 121, 129, 130, 137, 138, 141, 144, 145, 146, 147, 156, 160, 162, 163, 165, 166, 167, 169, 170, 173, 176, 179, 181, 183, 186, 188, 191, 193, 195, 196, 197, 202, 205, 207, 209, 216, 217, 240, 248, 249, 278, 279, 282, 284, 285, 298, 300, 320, 331, 332, 333, 334, 386, 391, 393, 394, 395, 396, 397, 399, 403, 404, 405, 406, 407, 410], "onto": [2, 8, 48, 50, 53, 167, 214, 218, 219, 260, 261, 274, 279, 280, 283, 284, 285, 286, 287, 394, 405], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 91, 92, 94, 95, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 146, 147, 153, 160, 161, 195, 196, 197, 198, 201, 209, 217, 223, 224, 245, 248, 249, 251, 260, 261, 282, 284, 285, 293, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 372, 382, 385, 388, 393, 394, 398, 399, 400, 405, 407, 410], "without": [2, 3, 7, 9, 14, 15, 16, 43, 48, 50, 53, 54, 62, 73, 75, 79, 99, 100, 115, 119, 137, 138, 144, 145, 146, 147, 154, 156, 166, 169, 199, 209, 238, 239, 242, 243, 276, 277, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 330, 331, 332, 333, 334, 335, 378, 385, 386, 391, 392, 393, 395, 396, 397, 398, 403, 404, 405, 407, 410], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 48, 49, 50, 53, 54, 59, 91, 92, 115, 119, 131, 137, 138, 139, 140, 144, 145, 154, 156, 157, 166, 168, 169, 185, 195, 196, 201, 204, 207, 209, 217, 218, 219, 221, 236, 237, 238, 240, 244, 247, 252, 260, 261, 283, 284, 285, 286, 287, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 329, 331, 332, 333, 334, 335, 364, 368, 370, 373, 374, 377, 378, 388, 392, 393, 394, 397, 400, 403, 404, 405, 407, 409, 410], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 73, 79, 82, 92, 99, 100, 103, 115, 119, 124, 125, 137, 138, 144, 145, 153, 184, 207, 221, 223, 224, 226, 228, 230, 238, 242, 245, 247, 250, 251, 274, 286, 291, 359, 365, 391, 393, 394, 398, 400, 405, 407, 410], "cursor": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "afterward": [2, 115, 119, 137, 138, 144, 145, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 403, 410], "tell": [2, 3, 4, 7, 139, 140, 391, 394, 398, 403, 404], "our": [2, 3, 7, 8, 11, 18, 52, 160, 351, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 409], "far": [2, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 241, 269, 270, 400, 405, 410], "restrict": [2, 3, 392, 406, 407, 410], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 115, 119, 134, 137, 138, 144, 145, 166, 169, 183, 185, 198, 201, 203, 205, 209, 214, 355, 391, 405], "64": [2, 3, 48, 50, 53, 73, 79, 94, 160, 187, 226, 227, 235, 240, 244, 251, 252, 262, 329, 391, 392, 393, 394, 396, 400, 402, 405, 406, 407, 409, 410], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 99, 100, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 157, 158, 164, 166, 167, 168, 169, 170, 171, 177, 179, 181, 183, 185, 186, 188, 192, 195, 197, 199, 200, 201, 203, 205, 209, 211, 214, 216, 217, 221, 222, 232, 233, 238, 239, 240, 242, 243, 244, 247, 253, 254, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 291, 294, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 337, 386, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "unit8": 2, "img": 2, "randint": [2, 63, 94, 199, 407], "255": [2, 94, 199, 405, 407], "uint8": [2, 3, 30, 48, 50, 53, 73, 79, 113, 114, 129, 130, 170, 181, 199, 392, 399, 406, 407, 409, 410], "next": [2, 3, 4, 8, 14, 15, 16, 23, 30, 31, 34, 36, 37, 43, 49, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 92, 94, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 129, 130, 131, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 153, 156, 157, 159, 160, 166, 169, 170, 171, 176, 177, 181, 185, 186, 188, 191, 192, 195, 197, 206, 207, 209, 214, 216, 221, 239, 240, 243, 244, 247, 265, 282, 292, 294, 297, 298, 300, 301, 302, 304, 305, 306, 307, 313, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 351, 362, 364, 366, 392, 394, 396, 399, 400, 402, 405, 406, 409, 410], "ask": [2, 8, 73, 79, 92, 99, 100, 351, 393, 394, 395, 396, 403, 404, 406, 410], "automat": [2, 3, 5, 27, 62, 64, 81, 86, 87, 94, 107, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 156, 166, 169, 179, 197, 206, 223, 240, 244, 274, 282, 283, 349, 386, 391, 393, 395, 396, 403, 404, 405, 407, 409], "hand": [2, 3, 7, 21, 30, 403, 404, 405], "look": [2, 3, 5, 7, 8, 43, 92, 115, 119, 128, 137, 138, 139, 140, 144, 145, 183, 184, 203, 209, 283, 287, 288, 289, 387, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 409, 410], "assum": [2, 3, 6, 14, 15, 16, 30, 54, 59, 60, 75, 77, 79, 80, 81, 83, 84, 90, 99, 115, 119, 137, 138, 144, 145, 159, 162, 165, 173, 183, 184, 191, 197, 201, 203, 205, 214, 222, 240, 244, 272, 290, 302, 307, 320, 329, 340, 341, 342, 343, 345, 346, 347, 348, 351, 391, 393, 394, 402, 405], "lead": [2, 3, 4, 8, 10, 12, 23, 30, 31, 37, 43, 49, 52, 56, 59, 60, 75, 98, 113, 114, 115, 118, 120, 121, 197, 241, 262, 269, 270, 391, 394, 403, 404, 405, 407, 409], "leav": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 68, 115, 211, 217, 391, 398, 407], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 94, 103, 113, 114, 115, 116, 118, 119, 120, 121, 137, 138, 144, 145, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 223, 224, 231, 240, 244, 245, 250, 251, 268, 274, 278, 279, 283, 284, 286, 287, 290, 291, 298, 300, 306, 314, 316, 318, 320, 365, 370, 386, 391, 393, 402, 404, 405, 407, 410], "don": [2, 3, 4, 6, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 160, 392, 393, 398, 407, 409, 410], "throw": [2, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 410], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 30, 34, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 159, 160, 164, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 200, 201, 209, 210, 216, 217, 221, 222, 230, 232, 233, 236, 237, 240, 244, 247, 260, 261, 262, 263, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 290, 291, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 351, 359, 365, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "max": [2, 23, 50, 59, 63, 82, 91, 92, 105, 168, 198, 260, 261, 270, 298, 299, 300, 306, 316, 318, 320, 391, 393, 394, 400], "label": [2, 50, 51, 54, 63, 391, 403, 407], "100": [2, 14, 15, 16, 17, 43, 49, 52, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 163, 170, 179, 188, 193, 195, 209, 250, 280, 282, 351, 360, 378, 392, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410], "rb_pytre": 2, "randn": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 100, 107, 159, 179, 214, 222, 225, 226, 230, 232, 233, 238, 239, 242, 243, 248, 249, 250, 255, 258, 259, 263, 274, 275, 276, 277, 278, 279, 283, 284, 286, 289, 290, 291, 297, 298, 300, 301, 302, 304, 305, 306, 313, 315, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334, 367, 386, 407, 409, 410], "c": [2, 3, 6, 7, 30, 48, 50, 52, 53, 59, 60, 78, 179, 199, 242, 243, 392, 407], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 99, 100, 105, 107, 115, 119, 137, 138, 144, 145, 157, 159, 161, 166, 168, 169, 179, 185, 188, 209, 214, 216, 220, 221, 227, 228, 229, 235, 236, 237, 238, 239, 240, 242, 243, 244, 248, 249, 251, 252, 260, 261, 262, 271, 285, 293, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 337, 394, 407, 409], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 119, 122, 137, 144, 152, 153, 157, 160, 163, 166, 169, 177, 186, 193, 207, 211, 214, 222, 251, 255, 272, 331, 332, 333, 334, 359, 367, 398, 402, 407, 410], "len": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 107, 181, 223, 224, 245, 251, 391, 398, 400, 403, 405, 406, 407, 409], "ambigu": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 103, 115, 119, 137, 138, 144, 145, 157, 164, 183, 197, 200, 201, 203, 205, 209, 286, 387, 391, 395, 405], "deal": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 315, 387, 391, 393, 404, 407], "interpret": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 392], "put": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 119, 129, 130, 145, 146, 147, 207, 358, 382, 386, 392, 393, 394, 395, 403, 405], "solv": [2, 4, 9, 10, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 385, 391, 392, 393, 398, 400, 403, 404, 405, 407], "clear": [2, 3, 11, 30, 31, 37, 38, 43, 49, 52, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 123, 137, 138, 144, 145, 209, 360, 395, 398], "cut": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "distinct": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 157, 397, 402], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 209, 233, 238, 242, 245, 395, 405, 407, 409, 410], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 118, 119, 120, 123, 124, 125, 128, 137, 138, 139, 140, 144, 145, 156, 166, 169, 184, 222, 245, 262, 282, 283, 287, 288, 289, 293, 315, 331, 332, 333, 334, 386, 387, 391, 392, 393, 395, 397, 402, 403, 404, 405, 406, 407, 410], "collate_fn": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 407, 409], "__init__": [2, 3, 7, 115, 131, 152, 154, 157, 166, 169, 185, 221, 233, 238, 242, 247, 291, 298, 300, 301, 306, 313, 318, 320, 322, 323, 388, 405, 410], "major": 2, "worri": [2, 61], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 92, 99, 101, 103, 107, 115, 116, 119, 123, 137, 138, 144, 145, 156, 217, 391, 393, 395, 403, 404, 405, 410], "though": [2, 4, 11, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 245, 393, 403, 404], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 51, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 178, 197, 241, 269, 270, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 392, 396, 399, 405, 407, 410], "latter": [2, 18, 19, 20, 43, 75, 115, 119, 137, 138, 144, 145, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 317, 380, 381], "inv": [2, 3, 163, 168, 171, 181, 188, 193, 202, 405], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 61, 62, 64, 65, 66, 67, 68, 84, 115, 119, 137, 138, 144, 145, 168, 171, 192, 199, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 248, 249, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 331, 407], "multithread": [2, 3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 132, 133, 398, 407], "thread": [2, 14, 15, 17, 48, 50, 53, 111, 112, 124, 125, 137, 144], "prefetch": [2, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 391, 392, 394, 407], "advis": [2, 11, 76, 399, 410], "benchmark": [2, 3, 9, 111, 112, 124, 125], "techniqu": [2, 8, 137, 144, 392, 398, 407], "real": [2, 5, 79, 287, 387, 394, 405], "life": [2, 170], "adopt": [2, 3, 5, 391, 410], "throughput": [2, 9, 125, 391], "constant": [2, 11, 32, 160, 179, 196, 388, 391, 393, 394, 410], "throughout": [2, 3, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 393, 403, 410], "further": [2, 3, 5, 24, 391, 393, 395], "refin": [2, 79, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329], "coupl": [2, 394, 396, 397, 405, 407], "get": [2, 3, 4, 6, 7, 8, 9, 30, 31, 37, 48, 49, 50, 52, 53, 56, 73, 75, 79, 86, 87, 92, 99, 100, 101, 103, 105, 107, 115, 116, 119, 137, 138, 144, 145, 154, 159, 161, 166, 168, 169, 177, 179, 184, 196, 197, 199, 201, 207, 236, 237, 274, 283, 284, 287, 294, 331, 332, 333, 334, 335, 351, 355, 386, 390, 391, 392, 393, 394, 401, 403, 404, 405, 407, 408, 409, 410], "first_elt": 2, "128": [2, 73, 75, 79, 100, 111, 112, 124, 125, 227, 230, 392, 394, 400, 403, 405, 406, 407], "wa": [2, 3, 5, 7, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 115, 119, 137, 138, 144, 145, 201, 211, 217, 242, 297, 299, 312, 314, 317, 319, 321, 337, 387, 392, 393, 395, 396, 402, 403, 407, 409], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 30, 31, 34, 37, 43, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 160, 161, 166, 167, 168, 169, 176, 179, 185, 186, 188, 191, 195, 197, 198, 199, 207, 209, 214, 216, 217, 223, 224, 226, 227, 228, 229, 230, 233, 235, 236, 237, 240, 244, 245, 248, 249, 250, 251, 255, 258, 260, 261, 263, 274, 275, 276, 277, 278, 279, 282, 283, 284, 286, 289, 291, 294, 315, 349, 378, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 161], "larger": [2, 4, 240, 244, 305, 313, 409], "volum": 2, "due": [2, 3, 5, 23, 397, 406, 407, 410], "memorymappedtensor": [2, 34, 48, 50, 57, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 353, 398, 406], "well": [2, 3, 8, 21, 23, 43, 49, 51, 52, 59, 60, 62, 92, 97, 101, 108, 115, 119, 137, 138, 144, 145, 201, 209, 226, 242, 264, 265, 315, 322, 335, 391, 392, 394, 395, 396, 397, 399, 406, 407, 409, 410], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 165, 166, 167, 169, 191, 194, 196, 202, 209, 221, 242, 286, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 358, 386, 391, 393, 394, 398, 403], "file": [2, 6, 7, 8, 48, 50, 53, 73, 75, 76, 77, 79, 80, 81, 84, 146, 350, 351, 353, 388, 390, 392, 403, 407, 408, 409, 410], "locat": [2, 7, 48, 50, 53, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 165, 170, 179, 190, 241, 255, 269, 270, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 391, 392, 393, 399, 403, 404, 407], "improv": [2, 4, 11, 174, 297, 387, 403, 404, 407], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 137, 144, 393, 403, 407], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 30, 43, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 99, 100, 113, 114, 115, 118, 119, 120, 123, 137, 138, 144, 145, 154, 160, 188, 191, 198, 207, 209, 217, 236, 237, 250, 251, 283, 287, 314, 315, 317, 391, 392, 394, 395, 397, 399, 405, 407], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 51, 55, 56, 62, 64, 65, 66, 67, 68, 86, 92, 135, 136, 168, 220, 242, 243, 305, 394, 398, 407], "sharabl": [2, 137, 144], "collabor": [2, 79], "rather": [2, 4, 103, 135, 136, 186, 391, 392, 393, 395, 397, 403, 404, 407], "incur": [2, 111, 112, 124, 125], "transmiss": 2, "overhead": [2, 111, 112, 124, 125, 137, 144], "content": [2, 8, 16, 30, 31, 37, 48, 49, 50, 52, 53, 56, 59, 60, 98, 115, 118, 119, 120, 132, 137, 138, 144, 145, 185, 223, 224, 245, 250, 251, 283, 315, 393, 405, 409], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 90, 91, 92, 115, 119, 128, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 214, 233, 255, 274, 275, 276, 277, 279, 283, 284, 286, 287, 289, 290, 291, 292, 300, 320, 329, 364, 384, 386, 387, 391, 392, 393, 394, 396, 397, 406, 409], "writer": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 92, 94, 95, 99, 105, 106, 110, 393, 407], "tensordictroundrobinwrit": [2, 94], "goe": [2, 4, 139, 140, 391, 393, 403, 404, 410], "prioritizedsampl": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 302, 307, 329, 391, 407], "access": [2, 3, 7, 8, 11, 43, 49, 76, 78, 115, 119, 137, 138, 144, 145, 183, 203, 209, 382, 385, 391, 395, 403, 404, 405, 407], "tensordictreplaybuff": [2, 49, 52, 59, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 99, 100, 105, 159, 160, 365, 378, 384, 391, 392, 394, 407], "mp": [2, 18, 19, 20, 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 207], "def": [2, 3, 12, 22, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 131, 137, 138, 144, 145, 152, 154, 156, 157, 166, 169, 185, 201, 209, 221, 233, 238, 239, 242, 243, 247, 252, 282, 283, 291, 298, 300, 301, 306, 313, 315, 318, 320, 322, 323, 349, 388, 391, 392, 402, 403, 404, 405, 407, 409, 410], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 34, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 105, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 126, 127, 135, 136, 137, 138, 144, 145, 154, 157, 159, 161, 166, 167, 168, 169, 176, 177, 179, 188, 191, 197, 199, 201, 207, 210, 216, 221, 222, 232, 233, 236, 237, 240, 244, 246, 247, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 283, 284, 286, 289, 291, 329, 332, 333, 334, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 359, 367, 386, 387, 391, 394, 404, 405, 409, 410], "__name__": [2, 3, 14, 15, 22, 116, 349, 392, 409], "__main__": [2, 3, 14, 15, 22, 116, 349, 409], "21": [2, 79, 80, 100, 137, 139, 140, 144, 390, 391, 392, 393, 398, 402, 403, 404, 405, 408], "proc": 2, "target": [2, 4, 8, 21, 24, 43, 115, 116, 119, 137, 138, 144, 145, 196, 200, 209, 286, 287, 297, 298, 299, 300, 301, 302, 304, 306, 307, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 329, 330, 331, 332, 333, 334, 335, 371, 377, 378, 387, 388, 394, 400, 403, 405], "arg": [2, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 30, 31, 33, 37, 38, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 56, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 92, 94, 99, 100, 101, 103, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 164, 183, 185, 194, 197, 200, 201, 202, 204, 205, 209, 218, 219, 221, 222, 223, 224, 232, 236, 237, 240, 244, 245, 246, 247, 260, 261, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 358, 361, 365, 368, 382, 392, 409], "join": [2, 116, 384, 392, 393, 403], "now": [2, 3, 7, 49, 52, 59, 60, 94, 135, 136, 137, 160, 251, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 406, 407, 410], "20": [2, 63, 80, 99, 100, 105, 115, 119, 123, 135, 136, 137, 138, 144, 145, 196, 209, 235, 238, 239, 242, 243, 278, 359, 391, 392, 393, 394, 403, 404, 405, 407, 410], "_data": [2, 405], "It": [2, 3, 4, 7, 23, 43, 51, 54, 59, 61, 63, 75, 81, 94, 97, 105, 110, 115, 119, 121, 131, 132, 137, 138, 139, 140, 144, 145, 146, 147, 157, 159, 170, 177, 179, 184, 196, 201, 206, 209, 211, 218, 226, 228, 234, 236, 250, 251, 260, 261, 262, 264, 265, 271, 272, 280, 282, 285, 287, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 323, 329, 330, 331, 349, 358, 364, 385, 386, 387, 391, 392, 394, 395, 403, 404, 405, 406, 407, 409, 410], "difficult": [2, 4, 137, 399], "pai": [2, 8, 391, 394], "word": [2, 3, 11, 54, 73, 75, 77, 79, 80, 81, 315, 391, 398, 405, 410], "1m": [2, 73, 79, 371, 391, 393, 394], "doe": [2, 3, 18, 48, 49, 50, 53, 59, 63, 73, 75, 79, 83, 84, 90, 91, 92, 99, 101, 103, 110, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 207, 230, 238, 239, 240, 242, 243, 244, 253, 272, 278, 288, 289, 297, 299, 307, 314, 315, 317, 330, 368, 386, 388, 391, 392, 393, 394, 395, 398, 403, 405, 407, 410], "howev": [2, 3, 5, 7, 43, 115, 119, 137, 138, 144, 145, 160, 191, 196, 201, 209, 297, 299, 300, 314, 317, 319, 320, 386, 391, 392, 394, 397, 405, 407, 410], "capac": [2, 49, 52, 59, 60, 86, 87, 91, 99, 107, 393, 398], "There": [2, 10, 94, 240, 244, 297, 317, 386, 388, 393, 394, 396, 398, 403, 404, 405, 407, 410], "circumv": 2, "account": [2, 86, 87, 107, 118, 120, 145, 156, 160, 248, 249, 386, 392, 394, 407, 410], "save": [2, 3, 8, 43, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 94, 101, 102, 103, 107, 108, 115, 119, 137, 138, 144, 145, 206, 209, 350, 351, 353, 358, 368, 388, 398, 399, 400, 403, 404], "convent": [2, 3, 73, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 146, 147, 387, 391, 394, 403, 404, 405], "overridden": [2, 3, 73, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 331, 333, 334, 394, 403], "dim_extend": [2, 49, 52, 59, 60], "obtain": [2, 7, 54, 73, 115, 119, 137, 138, 144, 145, 159, 183, 196, 205, 221, 222, 262, 365, 391, 393, 395, 396, 397, 403, 404], "counterpart": 2, "desir": [2, 3, 11, 29, 43, 115, 119, 137, 138, 144, 145, 155, 157, 164, 179, 181, 183, 184, 197, 200, 201, 203, 205, 209, 215, 223, 224, 245, 251, 274, 279, 280, 283, 284, 285, 286, 287, 386, 391, 403, 404, 405, 407], "diversifi": 2, "offer": [2, 3, 7, 111, 112, 115, 119, 124, 125, 129, 130, 137, 138, 144, 145, 349, 386, 391, 392, 395, 397, 398, 403, 405, 407, 410], "accomplish": [2, 211, 395], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 76, 160, 211, 298, 304, 305, 313, 322, 358, 388, 395, 406, 407, 409], "docstr": [2, 43, 115, 119, 137, 138, 144, 145, 209, 395, 396], "extens": [2, 49, 52, 59, 60, 100, 388, 407], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 199, 201, 209, 233, 238, 242, 252, 280, 297, 307, 315, 317, 385, 388, 392, 398, 402, 407], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 115, 119, 137, 138, 144, 145, 166, 169, 207, 209, 217, 238, 240, 242, 244, 260, 261, 283, 287, 307, 392, 396, 402, 403, 404, 410], "happi": 2, "concaten": [2, 8, 14, 15, 21, 39, 41, 79, 160, 161, 179, 200, 242, 245, 289, 391, 392, 396, 403, 404, 405, 407, 410], "schedul": [2, 4, 7, 54, 364, 393, 405], "transformedenv": [2, 3, 11, 43, 115, 116, 119, 137, 138, 144, 145, 153, 154, 157, 160, 163, 164, 166, 169, 170, 171, 173, 176, 177, 178, 179, 181, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 200, 207, 209, 240, 244, 282, 351, 391, 392, 393, 394, 395, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "stepcount": [2, 43, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 200, 209, 222, 391, 392, 393, 394, 395, 400, 403, 404, 409], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 34, 43, 57, 105, 115, 116, 119, 121, 137, 138, 144, 145, 153, 156, 157, 160, 163, 164, 170, 176, 177, 179, 181, 186, 187, 188, 191, 193, 196, 197, 198, 200, 201, 207, 209, 222, 240, 244, 282, 349, 351, 378, 384, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 407, 409, 410], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 160, 188, 384, 398, 407], "cartpol": [2, 3, 11, 34, 43, 57, 113, 114, 115, 119, 137, 138, 144, 145, 156, 157, 160, 191, 196, 207, 209, 282, 349, 392, 394, 396, 398, 399, 400, 407, 410], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 34, 43, 57, 75, 77, 105, 115, 116, 118, 119, 120, 124, 125, 132, 137, 138, 144, 145, 156, 157, 160, 163, 171, 176, 177, 179, 186, 188, 191, 193, 195, 196, 197, 198, 200, 207, 209, 222, 240, 244, 282, 326, 340, 341, 342, 343, 345, 346, 347, 348, 349, 386, 392, 394, 395, 396, 397, 398, 399, 400, 405, 407, 409, 410], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 43, 111, 112, 115, 119, 124, 125, 131, 137, 138, 139, 140, 144, 145, 153, 154, 157, 160, 166, 169, 177, 185, 188, 210, 221, 233, 247, 263, 265, 274, 279, 283, 284, 298, 300, 302, 304, 318, 320, 322, 323, 378, 386, 391, 392, 393, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 409, 410], "8": [2, 3, 6, 7, 43, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 99, 100, 111, 112, 113, 114, 115, 119, 135, 136, 137, 138, 144, 145, 153, 156, 196, 223, 224, 226, 227, 235, 245, 275, 276, 277, 283, 286, 289, 313, 390, 391, 392, 394, 398, 403, 404, 405, 406, 407, 408, 409], "traj_kei": [2, 92, 99, 100, 407], "truncated_kei": [2, 92, 99, 100, 188, 195], "strict_length": [2, 73, 79, 92, 99, 100, 351], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 34, 37, 43, 49, 52, 56, 57, 60, 61, 86, 87, 91, 92, 99, 100, 107, 115, 119, 137, 138, 144, 145, 165, 183, 188, 191, 201, 205, 209, 239, 243, 255, 263, 280, 282, 283, 285, 286, 287, 297, 299, 300, 301, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334, 359, 371, 391, 392, 393, 394, 396, 397, 398, 399, 400, 403, 404, 405, 407, 409, 410], "enumer": [2, 14, 15, 16, 21, 34, 43, 52, 57, 60, 100, 115, 119, 137, 138, 144, 145, 209, 324, 387, 391, 392, 393, 394, 400, 403, 407, 409], "break": [2, 5, 14, 15, 16, 21, 43, 52, 60, 73, 76, 77, 79, 80, 81, 82, 92, 99, 100, 105, 115, 119, 137, 138, 144, 145, 157, 160, 188, 207, 209, 240, 244, 269, 351, 392, 398, 400, 407, 409], "step_count": [2, 14, 15, 16, 43, 115, 119, 124, 125, 137, 138, 144, 145, 195, 209, 393, 394, 395, 400, 409], "32": [2, 22, 30, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 142, 143, 146, 147, 223, 224, 225, 226, 227, 229, 230, 235, 245, 250, 251, 256, 257, 259, 262, 271, 329, 349, 391, 392, 393, 394, 396, 397, 404, 405, 406, 407, 409, 410], "33": [2, 30, 43, 94, 115, 119, 137, 138, 144, 145, 209, 223, 224, 245, 392, 394, 405], "34": [2, 223, 224, 245, 392, 405], "35": [2, 223, 224, 245, 391, 392, 393, 405, 406], "36": [2, 392, 394, 405], "37": [2, 159, 392, 404, 405, 406, 407], "38": [2, 7, 390, 392, 405, 408, 409], "39": [2, 77, 124, 125, 390, 392, 405, 406, 408], "40": [2, 124, 125, 391, 392, 393, 394, 403, 404, 405, 406], "41": [2, 392, 404, 405, 406], "11": [2, 10, 23, 63, 86, 87, 91, 100, 107, 116, 153, 199, 209, 221, 247, 391, 392, 393, 403, 405, 407], "12": [2, 10, 80, 86, 87, 100, 107, 124, 125, 137, 142, 143, 144, 209, 392, 393, 394, 403, 405, 407], "13": [2, 5, 12, 99, 100, 141, 206, 209, 391, 392, 403, 405, 406, 407], "14": [2, 6, 12, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100, 115, 119, 137, 138, 144, 145, 179, 209, 390, 391, 392, 393, 394, 399, 403, 405, 407, 408], "15": [2, 23, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 115, 119, 137, 138, 144, 145, 209, 260, 261, 278, 308, 391, 392, 403, 405, 407], "16": [2, 3, 43, 80, 92, 100, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 160, 209, 391, 392, 393, 394, 403, 404, 405, 407], "17": [2, 11, 80, 100, 119, 137, 153, 209, 391, 392, 393, 405, 406], "could": [2, 3, 4, 6, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 392, 393, 399, 403, 404, 406, 410], "sai": [2, 43, 115, 119, 137, 138, 144, 145, 209, 250, 403, 406, 410], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 30, 31, 37, 41, 56, 88, 92, 99, 100, 115, 118, 119, 120, 123, 137, 138, 144, 145, 166, 169, 184, 191, 250, 251, 284, 297, 317, 392, 393, 394, 403, 404, 405], "handl": [2, 3, 21, 43, 115, 119, 137, 138, 144, 145, 206, 207, 209, 244, 245, 297, 315, 317, 368, 380, 381, 391, 392, 393, 395, 397, 404, 407], "suggest": [2, 329, 391, 404], "serialenv": [2, 3, 115, 119, 137, 138, 145, 197, 209, 222, 282, 384, 409, 410], "squeez": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 156, 157, 160, 194, 196, 223, 224, 266, 267, 391, 405, 407], "6": [2, 3, 7, 14, 15, 16, 17, 23, 43, 52, 73, 80, 81, 92, 100, 113, 114, 119, 137, 142, 143, 153, 156, 179, 181, 196, 222, 223, 224, 226, 227, 228, 231, 235, 239, 245, 250, 251, 252, 256, 268, 282, 283, 291, 391, 392, 394, 398, 403, 404, 405, 407, 409, 410], "5": [2, 3, 14, 15, 23, 30, 31, 37, 39, 40, 41, 42, 43, 49, 52, 56, 59, 60, 73, 94, 99, 100, 105, 115, 116, 119, 124, 125, 129, 130, 132, 137, 138, 142, 143, 144, 145, 146, 147, 153, 156, 157, 159, 188, 195, 196, 209, 220, 221, 222, 223, 224, 226, 227, 232, 233, 234, 235, 238, 241, 242, 245, 247, 250, 251, 256, 263, 269, 270, 278, 279, 282, 284, 290, 314, 317, 319, 322, 323, 349, 386, 390, 391, 392, 396, 398, 400, 403, 404, 405, 407, 408, 409, 410], "7": [2, 3, 6, 10, 43, 49, 52, 59, 92, 100, 115, 119, 129, 130, 137, 138, 144, 145, 153, 156, 196, 221, 222, 223, 224, 227, 245, 247, 250, 337, 390, 391, 392, 398, 403, 404, 405, 406, 407, 408, 409], "9": [2, 3, 7, 23, 43, 49, 52, 59, 80, 81, 92, 100, 105, 113, 114, 128, 139, 140, 145, 153, 156, 196, 207, 209, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 324, 329, 387, 390, 391, 392, 393, 398, 403, 404, 405, 406, 407, 408], "18": [2, 80, 100, 142, 143, 146, 147, 209, 251, 390, 391, 392, 393, 403, 404, 405, 408], "19": [2, 80, 99, 100, 105, 209, 391, 392, 393, 405, 406], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 76, 137, 144, 200, 202, 251, 297, 317, 387, 388, 391, 392, 404, 407, 409], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 43, 48, 50, 53, 63, 73, 76, 78, 81, 82, 111, 113, 115, 119, 124, 128, 129, 130, 132, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 167, 168, 171, 186, 191, 192, 195, 201, 203, 206, 209, 217, 240, 244, 279, 284, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 331, 333, 334, 335, 349, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 388, 391, 392, 393, 394, 397, 399, 403, 404, 405, 410], "randomcroptensordict": [2, 391], "unlik": [2, 25, 98, 119, 129, 130, 146, 147, 220, 282, 307, 317, 351, 386, 392, 396, 398, 409], "stop": [2, 3, 16, 21, 54, 81, 92, 99, 100, 115, 119, 137, 138, 144, 145, 393, 398, 403, 404, 409, 410], "signal": [2, 3, 14, 15, 16, 17, 23, 73, 75, 77, 79, 80, 81, 92, 99, 100, 105, 119, 129, 130, 146, 147, 160, 170, 195, 198, 217, 387, 391, 393, 403, 404, 407, 410], "disk": [2, 3, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 368, 388, 391, 392, 394, 398, 399, 407], "dump": [2, 3, 11, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 94, 101, 103, 107, 349, 350, 351, 399, 400, 403], "load": [2, 6, 7, 14, 15, 16, 17, 34, 43, 48, 49, 50, 52, 53, 54, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 94, 101, 102, 103, 107, 108, 114, 115, 119, 137, 138, 144, 145, 152, 207, 209, 382, 388, 391, 393, 407], "json": 2, "metadata": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 75, 115, 119, 137, 138, 144, 145, 300, 322, 393, 395, 397, 398, 403, 404, 410], "anticip": [2, 166, 169], "compli": [2, 79, 386], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 55, 56, 62, 64, 65, 66, 67, 68, 75, 206, 211, 252, 274, 279, 280, 283, 284, 285, 286, 287, 393, 403, 404, 405, 407], "exact": [2, 3, 23, 137, 242], "statu": [2, 3, 115], "prioriti": [2, 4, 49, 59, 60, 86, 87, 88, 91, 92, 101, 103, 107, 300, 301, 302, 304, 305, 306, 307, 313, 318, 320, 322, 323, 329, 388, 391, 392, 407], "heap": 2, "under": [2, 3, 4, 21, 43, 54, 73, 75, 76, 77, 79, 80, 81, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 209, 274, 279, 280, 283, 284, 285, 286, 287, 315, 331, 332, 333, 334, 335, 351, 387, 391, 392, 396, 403, 405, 410], "hood": [2, 21, 73, 115, 119, 137, 138, 144, 145, 405], "naiv": [2, 203, 395], "just": [2, 3, 4, 12, 103, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 156, 163, 217, 251, 359, 386, 388, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 407, 409, 410], "public": [2, 78, 102, 183, 205], "serializ": 2, "consum": [2, 98, 100, 282, 392, 393, 398, 404, 407], "much": [2, 8, 14, 15, 17, 49, 59, 79, 91, 92, 137, 144, 314, 317, 393, 395, 399, 403, 404, 405, 407, 410], "duplic": [2, 43, 98, 115, 119, 137, 138, 144, 145, 209, 298, 300, 302, 307, 313, 315, 318, 320, 322, 323, 329], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 34, 43, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 175, 176, 177, 179, 180, 181, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 209, 216, 222, 225, 226, 227, 228, 229, 230, 233, 236, 237, 240, 244, 250, 256, 257, 259, 260, 261, 263, 264, 274, 275, 276, 277, 278, 279, 282, 283, 284, 291, 292, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 313, 314, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 349, 351, 378, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 410], "plu": [2, 14, 15, 17, 54, 137, 144, 405], "enabl": [2, 7, 8, 75, 86, 87, 98, 107, 157, 240, 244, 260, 261, 282, 349, 351, 364, 393, 395, 403, 404, 405, 407], "three": [2, 25, 26, 29, 33, 39, 40, 41, 42, 47, 82, 300, 386, 388, 393, 395, 396, 403, 404, 405, 407, 410], "flatstoragecheckpoint": 2, "discard": [2, 3, 63, 75, 77, 119, 203, 216, 350, 407, 410], "compress": 2, "At": [2, 236, 246, 392, 393, 394, 398, 402, 405, 406], "correct": [2, 4, 48, 50, 53, 115, 119, 137, 138, 144, 145, 177, 371, 393, 394], "addit": [2, 3, 4, 43, 75, 115, 119, 137, 138, 144, 145, 146, 164, 183, 197, 200, 201, 203, 205, 209, 218, 219, 238, 278, 282, 286, 296, 315, 331, 349, 387, 391, 392, 395, 403, 404, 407], "nestedstoragecheckpoint": 2, "represent": [2, 43, 55, 56, 115, 119, 137, 138, 144, 145, 183, 203, 205, 209, 297, 317, 391, 405, 406, 410], "appar": [2, 3, 361], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 83, 84, 90, 115, 118, 119, 120, 137, 138, 144, 145, 153, 163, 168, 214, 218, 219, 230, 233, 237, 250, 257, 260, 261, 263, 274, 279, 280, 283, 284, 285, 286, 287, 289, 290, 291, 294, 297, 302, 304, 305, 306, 317, 322, 323, 329, 386, 392, 393, 394, 395, 396, 397, 403, 404, 405, 409, 410], "assumpt": [2, 3, 62, 405, 407], "accur": [2, 7, 75, 81, 392, 405, 407], "truncat": [2, 3, 14, 15, 16, 17, 34, 36, 43, 44, 51, 57, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 99, 100, 113, 114, 115, 118, 119, 120, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 170, 171, 178, 185, 188, 195, 201, 209, 217, 240, 244, 270, 282, 337, 391, 393, 394, 395, 396, 398, 399, 402, 403, 406, 407, 409, 410], "marl": [2, 128, 148, 160, 198, 250, 251, 252, 395, 403, 404], "extra": [2, 10, 43, 115, 119, 137, 138, 144, 145, 160, 207, 209, 216, 358, 386, 393, 394, 407], "fail": [2, 7, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 137, 154, 211], "concret": [2, 391, 393], "set_se": [2, 3, 14, 15, 16, 17, 21, 34, 43, 57, 111, 112, 115, 119, 124, 125, 131, 137, 138, 144, 145, 156, 179, 186, 191, 196, 198, 201, 209, 398, 400, 405, 409, 410], "manual_se": [2, 3, 25, 34, 39, 40, 49, 52, 57, 59, 60, 76, 80, 81, 99, 100, 111, 112, 115, 119, 137, 138, 144, 145, 154, 156, 168, 179, 188, 191, 196, 198, 209, 236, 237, 248, 249, 258, 260, 261, 274, 280, 290, 297, 298, 300, 301, 305, 313, 320, 398, 400, 403, 404, 405, 409, 410], "200": [2, 14, 15, 16, 21, 34, 43, 57, 73, 115, 118, 119, 120, 137, 138, 144, 145, 146, 147, 188, 209, 226, 227, 234, 264, 265, 349, 351, 391, 394, 398, 400, 405, 407], "22": [2, 79, 99, 100, 206, 390, 391, 392, 393, 400, 405, 406, 408], "rb_test": 2, "_storag": [2, 406, 407], "max_siz": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 101, 105, 107, 393, 398], "102": [2, 405], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 48, 50, 53, 132, 230, 248, 249, 250, 296, 300, 349, 391, 393, 403, 404], "state_dict": [2, 14, 15, 16, 17, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 207, 209, 250, 251, 300, 320, 382, 388, 391, 392, 410], "load_state_dict": [2, 14, 15, 16, 17, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 207, 209, 300, 320, 388, 391], "drawback": 2, "struggl": 2, "big": [2, 393, 398, 407, 410], "sequenti": [2, 9, 43, 115, 119, 137, 138, 144, 145, 159, 177, 209, 275, 276, 277, 283, 288, 289, 294, 297, 298, 300, 306, 313, 317, 318, 319, 320, 322, 386, 393, 394, 396, 404, 405, 406, 409, 410], "known": [2, 3, 5, 7, 8, 119, 338, 339, 391, 392, 395], "seamless": [2, 245], "integr": [2, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 229, 240, 244, 247, 286, 386, 395, 396, 398, 403, 404, 405, 406], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 220, 391, 392, 397], "essenti": [2, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 392, 395, 403, 405, 407], "understand": [2, 3, 8, 391, 392, 395, 396, 403, 404], "purpos": [2, 3, 7, 11, 115, 119, 137, 138, 144, 145, 160, 238, 297, 299, 311, 314, 317, 319, 378, 391, 393, 394, 397, 399, 403, 404, 406, 410], "guid": [2, 11, 139, 140, 142, 143, 196, 385, 391, 404], "explan": [2, 43, 115, 119, 137, 138, 144, 145, 209], "effect": [2, 3, 30, 43, 49, 52, 59, 60, 73, 79, 92, 94, 97, 99, 100, 115, 119, 137, 138, 144, 145, 156, 160, 201, 209, 368, 386, 391, 396, 403, 407, 410], "realm": [2, 396], "As": [2, 3, 4, 43, 52, 59, 60, 62, 73, 94, 115, 119, 128, 137, 138, 139, 140, 144, 145, 188, 287, 331, 386, 391, 392, 393, 394, 395, 397, 398, 403, 404, 405, 406, 407, 409, 410], "practition": 2, "often": [2, 3, 8, 252, 312, 315, 368, 391, 392, 395, 397, 405, 407, 410], "encount": [2, 4, 79, 282, 385, 392, 396, 405], "situat": [2, 129, 130], "sometim": [2, 3, 62, 394, 410], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 76, 77, 80, 81, 111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 129, 130, 133, 134, 135, 136, 141, 146, 147, 238, 239, 240, 242, 243, 244, 247, 275, 276, 277, 315, 318, 388, 392], "immedi": [2, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 209, 330, 403, 404], "199": [2, 405], "info": [2, 3, 14, 15, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 97, 99, 100, 113, 114, 115, 118, 119, 120, 121, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 203, 206, 208, 358, 395, 400, 403, 404, 407], "glanc": [2, 395], "seem": [2, 391, 394, 395], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 54, 55, 56, 115, 119, 128, 137, 138, 139, 140, 144, 145, 160, 184, 238, 240, 242, 244, 271, 275, 276, 277, 292, 386, 392, 394, 395, 403], "less": [2, 132, 272, 380, 381, 387, 393, 394, 407, 409], "omit": [2, 363, 393, 397, 405, 407], "proper": [2, 3, 4, 6, 7, 331, 332, 333, 334, 392, 393, 403, 404, 407], "imposs": [2, 3, 105, 211, 297, 299, 314, 317, 319], "determin": [2, 49, 59, 75, 91, 92, 115, 119, 137, 138, 144, 145, 146, 147, 183, 205, 250, 260, 261, 392, 396, 403, 404], "complic": [2, 405, 407, 410], "matter": [2, 32, 398], "inconsist": [2, 410], "miss": [2, 3, 4, 6, 7, 12, 30, 43, 115, 119, 137, 138, 144, 145, 201, 209, 216, 288, 289, 297, 300, 320, 385, 391, 394], "primari": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 398], "elimin": [2, 3, 395], "upon": [2, 3, 8, 403, 405], "canon": 2, "definit": [2, 101, 250], "markov": [2, 3, 395, 410], "mdp": [2, 395, 405], "context": [2, 3, 5, 8, 43, 115, 116, 119, 134, 137, 138, 144, 145, 197, 202, 209, 251, 253, 278, 327, 328, 331, 332, 333, 334, 336, 344, 351, 364, 386, 387, 391, 392, 393, 403, 404, 405, 406, 407], "condit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 63, 64, 65, 66, 67, 68, 196, 207, 279, 280, 282, 284, 285, 296, 391, 403, 405, 407], "complet": [2, 7, 9, 98, 115, 118, 119, 120, 137, 138, 144, 145, 160, 195, 385, 387, 391, 393, 395, 402], "termin": [2, 3, 7, 14, 15, 16, 17, 34, 36, 43, 44, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 113, 114, 115, 118, 119, 120, 124, 125, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 156, 157, 170, 185, 209, 217, 221, 240, 244, 247, 282, 288, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "reward": [2, 3, 14, 15, 16, 32, 34, 36, 43, 44, 48, 53, 54, 57, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 153, 154, 157, 158, 163, 164, 166, 167, 169, 170, 171, 177, 181, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 204, 205, 207, 209, 214, 216, 221, 240, 247, 278, 282, 292, 297, 298, 300, 301, 302, 304, 305, 306, 309, 313, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 361, 362, 364, 366, 382, 387, 388, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "imit": [2, 3, 311], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 61, 62, 64, 65, 66, 67, 68, 79, 115, 116, 119, 122, 125, 137, 138, 144, 145, 209, 222, 223, 224, 245, 251, 386, 387, 388, 391, 392, 393, 394, 395, 403, 404, 405, 407], "stateless": [2, 3, 115, 119, 137, 138, 144, 145, 157, 200, 315, 349, 391, 395, 405, 410], "simul": [2, 3, 5, 7, 8, 62, 111, 112, 121, 124, 125, 141, 146, 147, 151, 221, 247, 386, 391, 393, 395, 399, 403, 404], "furthermor": [2, 403, 404], "certain": [2, 4, 18, 19, 20, 21, 43, 63, 115, 119, 137, 138, 144, 145, 152, 174, 195, 201, 209, 236, 239, 243, 314, 386, 391, 392, 393, 400, 403, 404, 410], "composit": [2, 3, 25, 26, 27, 28, 29, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 70, 97, 103, 110, 115, 117, 119, 131, 137, 138, 144, 145, 154, 157, 166, 167, 168, 169, 171, 177, 185, 186, 192, 195, 197, 200, 209, 214, 217, 218, 219, 221, 247, 274, 283, 289, 290, 294, 297, 317, 384, 391, 393, 394, 396, 403, 404, 405, 410], "accommod": [2, 3, 395, 396], "uniform": [2, 49, 59, 91, 92, 403], "unambigu": 2, "distinguish": [2, 129, 130, 146, 147], "happen": [2, 3, 115, 119, 137, 138, 144, 145, 219, 392, 397, 398, 399, 406, 410], "everyth": [2, 392, 393, 394, 399, 400], "belong": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 79, 206, 207, 386, 391, 398, 404], "rule": [2, 137, 166, 169, 287, 386, 393], "field": [2, 3, 14, 15, 16, 17, 23, 30, 34, 43, 48, 50, 51, 53, 54, 57, 59, 60, 61, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 201, 209, 216, 221, 222, 232, 233, 240, 244, 247, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 291, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 372, 385, 386, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "taken": [2, 3, 25, 26, 29, 33, 39, 40, 41, 42, 47, 115, 119, 137, 138, 144, 145, 153, 187, 237, 248, 249, 387, 391, 393, 394, 396, 403, 404, 405], "is_shar": [2, 3, 14, 15, 16, 23, 30, 34, 48, 50, 51, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 207, 216, 221, 222, 232, 233, 240, 244, 247, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 289, 291, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 386, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "brought": [2, 393, 394, 396], "step_mdp": [2, 3, 115, 119, 137, 138, 144, 145, 240, 244, 384, 394, 395, 405, 409, 410], "count": [2, 3, 43, 115, 116, 195, 260, 261, 364, 368, 371, 391, 392, 393, 394, 407, 410], "trigger": [2, 7], "partial": [2, 3, 115, 119, 137, 138, 144, 145, 159, 160, 196, 197, 198, 283, 368, 394], "turn": [2, 18, 19, 20, 21, 48, 50, 53, 145, 175, 202, 206, 279, 349, 364, 387, 391, 392, 394, 396, 405, 406], "retain": 2, "regard": [2, 75, 81, 233, 280, 297, 307, 317, 391, 393, 405], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 351, 387, 399, 407, 410], "eas": [2, 3, 403, 404], "flat": [2, 105], "manner": [2, 119, 183, 203, 386, 391, 392, 393, 398, 402, 405, 407], "ted2flat": [2, 34, 384], "flat2t": [2, 384], "unflatten": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 157, 282], "deseri": [2, 3, 34], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 113, 114, 115, 119, 137, 138, 144, 145, 173, 174, 194, 195, 198, 201, 202, 209, 255, 300, 320, 387, 393, 403, 404, 405, 407], "both": [2, 3, 7, 43, 49, 52, 59, 60, 79, 115, 116, 118, 119, 129, 130, 137, 138, 139, 140, 144, 145, 153, 160, 186, 201, 209, 217, 223, 224, 240, 243, 244, 245, 250, 251, 275, 276, 277, 280, 285, 297, 299, 300, 301, 305, 306, 313, 314, 315, 317, 318, 319, 320, 322, 323, 364, 386, 391, 393, 395, 397, 403, 404, 405, 406, 407, 410], "mark": [2, 3, 16, 81, 115, 119, 137, 138, 144, 145, 240, 244, 331, 333, 334, 398, 407], "identifi": [2, 51], "abov": [2, 3, 7, 43, 64, 115, 119, 137, 138, 144, 145, 209, 241, 269, 270, 296, 387, 388, 391, 393, 395, 396, 403, 404, 405, 410], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 62, 73, 75, 76, 77, 78, 79, 80, 81, 92, 99, 100, 113, 114, 115, 118, 119, 120, 121, 125, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 157, 158, 160, 163, 164, 165, 166, 167, 169, 171, 177, 179, 183, 185, 186, 191, 192, 195, 198, 200, 201, 203, 205, 206, 209, 211, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 233, 234, 238, 239, 240, 242, 243, 244, 245, 250, 251, 255, 260, 261, 263, 272, 274, 275, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 349, 351, 359, 386, 387, 391, 392, 393, 394, 395, 396, 399, 402, 403, 404, 405, 406, 409, 410], "typic": [2, 3, 4, 8, 43, 115, 119, 137, 138, 144, 145, 170, 196, 209, 283, 298, 300, 315, 317, 320, 386, 387, 388, 393, 395, 397, 398, 403, 404, 405], "adjust": [2, 11, 391, 403, 404, 405], "grumodul": [2, 159, 294], "lstmmodul": [2, 240, 394], "skip": [2, 3, 43, 73, 115, 119, 137, 138, 144, 145, 174, 201, 209, 211, 283, 287, 300, 315, 320, 331, 332, 333, 334, 350, 351, 361, 364, 391, 392, 405], "accumul": [2, 8, 209], "upcom": [2, 315, 340, 341, 342, 343, 345, 346, 347, 348, 391], "popular": [2, 3, 386, 394, 397, 404], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 209, 384, 392], "shift": [2, 34, 36, 43, 44, 57, 83, 84, 90, 293, 331, 332, 333, 334, 393], "approxim": [2, 404, 410], "would": [2, 3, 43, 54, 115, 119, 137, 138, 144, 145, 209, 238, 240, 242, 244, 245, 250, 388, 392, 393, 394, 395, 397, 398, 405, 407, 409, 410], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 160, 230, 259, 297, 303, 316, 317, 359, 382, 393, 394, 404, 407], "2x": 2, "small": [2, 203, 220, 391, 393, 403, 404, 410], "clearer": [2, 396], "lazi": [2, 55, 56, 70, 71, 115, 119, 137, 138, 144, 145, 146, 147, 183, 203, 223, 250, 253, 288, 289, 391, 392, 396, 398, 402, 407, 410], "certainli": 2, "benefici": 2, "welcom": [2, 395], "wrapper": [2, 3, 12, 17, 48, 50, 53, 54, 59, 60, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 206, 210, 219, 222, 237, 255, 261, 272, 278, 282, 287, 292, 331, 356, 357, 358, 382, 384, 393, 394, 395, 403, 404, 406, 409, 410], "around": [2, 5, 7, 17, 59, 60, 131, 210, 282, 287, 331, 391, 392, 404, 410], "selecttransform": [2, 115, 119, 137, 138, 144, 145], "excludetransform": [2, 80, 192, 407], "promptli": 2, "virtual": [2, 3, 118], "instal": [2, 3, 5, 10, 18, 19, 20, 75, 78, 115, 119, 137, 138, 139, 140, 142, 143, 144, 145, 353, 368, 385, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 410], "respons": [2, 3, 8, 92, 99, 115, 119, 137, 138, 144, 145, 368, 397, 398, 410], "d4rl": [2, 75, 81], "repositori": [2, 7, 76, 77, 78, 81, 147, 403, 404], "wheel": [2, 393], "publish": 2, "openml": [2, 78, 134], "scikit": [2, 78, 134], "panda": [2, 78], "raw": [2, 3, 4, 54, 241, 269, 270, 392, 398, 405], "go": [2, 3, 7, 45, 128, 137, 184, 188, 278, 337, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "natur": [2, 3, 391, 394, 396, 397, 398, 407], "modifi": [2, 3, 7, 8, 30, 31, 37, 43, 56, 63, 115, 119, 137, 138, 144, 145, 157, 164, 173, 177, 183, 197, 200, 201, 203, 205, 209, 252, 260, 261, 278, 286, 371, 387, 391, 392, 393, 395, 403, 404, 405], "fly": [2, 207, 314, 387, 393, 405, 407, 410], "least": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 115, 163, 399, 410], "pre": [2, 7, 22, 43, 63, 79, 87, 115, 119, 137, 138, 144, 145, 183, 203, 205, 209, 410], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 209, 238, 242, 252, 269, 279, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 314, 316, 317, 318, 319, 320, 322, 323, 331, 349, 363, 388, 391, 392, 393, 398, 403, 405, 409, 410], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 76, 92, 99, 105, 123, 124, 125, 137, 139, 140, 163, 191, 223, 224, 234, 236, 250, 251, 282, 353, 368, 380, 381, 391, 392, 393, 394, 396, 397, 400, 403, 404, 407, 409], "pipelin": [2, 3, 7, 386, 393], "replac": [2, 3, 6, 7, 30, 31, 37, 43, 56, 73, 79, 92, 99, 100, 156, 168, 170, 176, 216, 236, 386, 403, 407], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 79, 94, 115, 119, 137, 138, 144, 145, 156, 188, 201, 209, 218, 219, 237, 260, 261, 282, 366, 386, 388, 392, 393, 394, 396, 399, 405, 407, 410], "produc": [2, 153, 156, 157, 223, 224, 245, 251, 258, 275, 277, 278, 351, 393, 394, 395, 396, 398, 407, 410], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 83, 98, 115, 119, 137, 138, 139, 140, 144, 145, 201, 209, 297, 298, 300, 313, 315, 317, 318, 319, 320, 322, 323, 393], "download": [2, 7, 10, 73, 75, 76, 77, 79, 80, 81, 123, 183, 205, 351, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 138, 392, 403, 404, 405], "robosetexperiencereplai": [2, 99, 100], "fk1": [2, 80], "v4": [2, 80, 119, 137, 153, 187, 340, 341, 342, 343, 345, 346, 347, 348, 391, 393, 406], "expert": [2, 80], "fk1_microopenrandom_v2d": [2, 80], "func": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 208, 409], "obs_norm": 2, "norm": [2, 4, 8, 111, 112, 220, 368, 391, 392, 393, 403, 404, 405], "num_work": [2, 48, 50, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 132, 137, 144, 391, 392], "os": [2, 50, 63, 82, 392], "cpu_count": [2, 50, 63, 82], "num_chunk": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81], "1000": [2, 4, 52, 86, 91, 99, 100, 115, 119, 137, 138, 144, 145, 160, 207, 218, 236, 260, 261, 283, 287, 312, 391, 392, 393, 394, 396, 398, 400, 406, 407], "mp_start_method": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 137, 144, 392, 409], "fork": [2, 5, 73, 74, 75, 76, 77, 78, 79, 80, 81, 391, 392, 393, 394, 403, 404, 406, 409], "recreat": [2, 405], "customari": [2, 386], "moreov": [2, 3], "fine": [2, 3, 24, 52, 59, 60, 92, 94, 99, 115, 119, 137, 138, 144, 145, 157, 177, 398, 406], "grain": [2, 3, 52, 59, 60, 92, 94, 99, 115, 119, 137, 138, 144, 145, 157], "nomenclatur": 2, "compact": [2, 57, 83, 84, 90], "propos": [2, 160, 170, 246, 312, 321, 386, 394, 407], "replaybufferensembl": [2, 73, 97, 103, 110], "primit": [2, 3, 4, 79, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323], "individu": [2, 4, 18, 19, 20, 21, 43, 63, 92, 94, 105, 115, 119, 129, 130, 137, 138, 144, 145, 209, 391, 404], "dummi": [2, 3, 145, 349, 391, 398, 410], "semant": [2, 55, 56, 118, 120, 386], "ident": [2, 3, 14, 15, 16, 43, 48, 50, 52, 53, 59, 60, 86, 94, 99, 115, 118, 119, 120, 132, 137, 138, 144, 145, 170, 220, 250, 251, 298, 300, 313, 318, 320, 322, 323, 331, 332, 333, 334, 380, 381, 392, 395, 403, 404], "another_kei": [2, 94], "renam": [2, 3, 48, 50, 53, 94, 186, 188, 216, 391], "resiz": [2, 3, 81, 94, 160, 392, 394, 395, 407, 410], "imag": [2, 3, 4, 7, 11, 79, 162, 165, 183, 199, 205, 245, 349, 351, 391, 392, 395, 399, 404, 406, 410], "comops": 2, "totensorimag": [2, 3, 81, 94, 160, 187, 392, 394, 407, 409, 410], "renametransform": [2, 3, 94, 115, 119, 137, 138, 144, 145], "rb0": [2, 94], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 131, 137, 138, 144, 145, 150, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 198, 199, 200, 201, 202, 203, 205, 207, 221, 222, 232, 240, 244, 247, 262, 271, 272, 274, 275, 276, 277, 278, 279, 282, 283, 284, 286, 287, 289, 290, 291, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 311, 313, 314, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 350, 351, 378, 386, 391, 392, 393, 394, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410], "pixel": [2, 3, 7, 30, 81, 94, 113, 114, 118, 120, 121, 141, 160, 162, 165, 170, 173, 175, 179, 181, 183, 187, 199, 203, 205, 226, 256, 257, 349, 351, 386, 391, 392, 394, 399, 403, 406, 407, 409, 410], "rb1": [2, 94], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 131, 137, 138, 144, 145, 150, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 173, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 198, 199, 200, 202, 203, 205, 207, 221, 222, 232, 233, 240, 244, 247, 262, 263, 271, 272, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 294, 297, 298, 299, 300, 305, 306, 311, 313, 314, 317, 318, 319, 320, 322, 329, 331, 332, 333, 334, 349, 351, 364, 378, 386, 391, 392, 393, 394, 396, 400, 402, 403, 404, 405, 406, 407, 409, 410], "pixels33": [2, 94], "data0": [2, 94], "244": [2, 94, 183, 205, 405], "data1": [2, 94], "_": [2, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 116, 123, 146, 147, 161, 166, 168, 169, 177, 179, 186, 199, 207, 209, 274, 286, 291, 296, 297, 298, 300, 301, 305, 306, 313, 317, 318, 320, 322, 323, 331, 332, 333, 334, 353, 391, 392, 393, 394, 400, 403, 404, 405, 407, 409], "rang": [2, 3, 4, 8, 12, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 105, 115, 116, 119, 129, 130, 137, 138, 144, 145, 188, 199, 207, 209, 239, 243, 314, 322, 323, 387, 388, 391, 393, 394, 397, 398, 400, 403, 404, 405, 407, 409], "parent": [2, 3, 21, 30, 31, 36, 37, 56, 62, 74, 94, 103, 110, 115, 119, 137, 138, 144, 145, 153, 157, 160, 161, 164, 167, 170, 173, 174, 179, 183, 191, 195, 196, 197, 198, 200, 202, 203, 209, 240, 244, 275, 294, 315, 317, 335, 349, 351, 391, 398, 405, 409, 410], "basic": [2, 131, 386, 393, 397, 398, 400, 403, 410], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 156, 200, 201, 207, 209, 231, 241, 249, 253, 258, 268, 269, 270, 282, 297, 300, 315, 317, 319, 320, 396, 398, 405, 407], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 68, 102, 108, 115, 119, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 220, 222, 223, 224, 226, 227, 228, 229, 232, 233, 236, 237, 238, 239, 240, 242, 243, 244, 245, 250, 251, 252, 253, 254, 260, 261, 263, 264, 265, 266, 267, 269, 272, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 362, 366, 371, 378, 386, 387, 388, 391, 392, 393, 394, 395, 403, 404, 405, 409, 410], "send": [2, 3, 8, 358, 409], "receiv": [2, 3, 43, 54, 115, 119, 137, 138, 144, 145, 200, 201, 209, 245, 337, 387, 391, 393, 397, 402, 405], "spawn": [2, 3, 4, 18, 22, 123, 132, 137, 144, 392, 403, 404], "check_env_spec": [2, 3, 119, 137, 153, 185, 349, 384, 393, 403, 404, 405], "saniti": [2, 3, 7, 211, 393], "automati": 2, "make_composite_from_td": [2, 62, 384, 405], "fall": [2, 4, 75], "categori": [2, 30, 76, 386, 388], "bound": [2, 3, 4, 21, 28, 30, 43, 64, 115, 119, 137, 138, 144, 145, 163, 178, 207, 209, 210, 236, 237, 260, 261, 264, 265, 274, 279, 280, 283, 284, 285, 286, 287, 290, 297, 298, 300, 301, 313, 317, 318, 320, 322, 323, 384, 386, 391, 392, 393, 403, 405, 409, 410], "unbound": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 154, 157, 166, 169, 185, 197, 214, 221, 247, 274, 286, 289, 291, 319, 384, 405, 407], "boundeddiscret": [2, 27, 30, 393], "boundedcontinu": [2, 22, 27, 30, 115, 119, 137, 138, 144, 145, 393, 403, 404, 405, 409, 410], "unboundeddiscret": [2, 64, 138, 384, 405, 410], "unboundedcontinu": [2, 64, 115, 119, 137, 138, 144, 145, 185, 214, 289, 294, 384, 393, 394, 403, 404, 405, 410], "implicitli": 2, "onehot": [2, 25, 26, 29, 33, 41, 42, 47, 111, 112, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 233, 263, 279, 284, 302, 304, 305, 306, 329, 386, 396], "multionehot": [2, 39, 40, 42, 302, 305, 306, 329, 384], "multicategor": [2, 40, 41, 42, 384], "binari": [2, 3, 7, 26, 154, 158, 233, 263, 279, 280, 284, 285, 302, 305, 306, 329, 384], "concept": [2, 115, 119, 137, 138, 144, 145, 392, 407], "arbitrari": [2, 3, 25, 52, 115, 119, 137, 138, 144, 145, 156, 386, 391, 392, 405, 407], "combin": [2, 4, 35, 200, 322, 392, 399, 407], "relat": [2, 3, 4, 10, 49, 137, 173, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 392, 400, 405], "nevertheless": [2, 3, 393, 395, 407], "expand": [2, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 99, 100, 157, 286, 289, 298, 300, 313, 315, 318, 320, 322, 323, 403, 404, 405, 407, 409], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 99, 100, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 160, 161, 168, 179, 196, 197, 198, 201, 207, 209, 220, 238, 241, 242, 250, 251, 269, 270, 279, 284, 290, 298, 300, 309, 315, 316, 320, 331, 333, 334, 364, 365, 388, 391, 392, 393, 394, 405, 410], "similarli": [2, 21, 43, 98, 103, 115, 119, 137, 138, 144, 145, 209, 250, 288, 289, 305, 313, 410], "possess": [2, 62, 75], "unsqueez": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 154, 157, 160, 161, 199, 202, 214, 391, 394, 403, 404, 405], "move": [2, 4, 43, 62, 81, 115, 119, 120, 137, 138, 144, 145, 153, 164, 167, 183, 197, 200, 201, 203, 205, 207, 209, 216, 245, 286, 366, 391, 392, 394, 395, 409, 410], "unbind": [2, 48, 49, 50, 52, 53, 59, 60, 240, 244], "said": [2, 393], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 49, 59, 62, 91, 92, 160, 173, 184, 202, 308, 331, 333, 334, 387, 393, 403, 404, 405], "seen": [2, 18, 19, 20, 21, 30, 31, 37, 56, 115, 119, 137, 138, 144, 145, 167, 387, 391, 392, 394, 397, 403, 404, 407], "predict": [2, 3, 43, 54, 232, 234, 246, 247, 278, 292, 297, 299, 304, 307, 309, 310, 314, 317, 319, 330, 386, 391, 392, 397], "deprec": [2, 23, 26, 28, 31, 33, 37, 38, 40, 42, 43, 46, 47, 66, 68, 115, 119, 137, 138, 144, 145, 201, 209, 237, 297, 299, 300, 302, 305, 306, 307, 313, 314, 317, 318, 319, 320, 329, 331, 332, 333, 334, 339, 410], "utmost": 2, "commonli": [2, 92, 99, 100, 410], "emploi": [2, 254], "languag": [2, 24, 54], "scarc": 2, "address": [2, 407], "subdomain": 2, "facilit": [2, 3, 7, 182, 183, 197, 203, 205, 275, 276, 277, 386, 391, 394, 396, 405], "extern": [2, 3, 166, 169, 403, 410], "token": [2, 50, 51, 54, 61, 63, 82], "dm": [3, 391, 410], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 79, 96, 102, 105, 106, 108, 109, 111, 112, 115, 119, 123, 124, 125, 131, 132, 133, 137, 138, 144, 145, 146, 167, 188, 197, 203, 204, 250, 252, 275, 281, 297, 298, 300, 301, 302, 304, 305, 306, 308, 313, 317, 318, 319, 320, 322, 323, 332, 333, 358, 368, 386, 387, 388, 391, 392, 394, 395, 396, 397, 399, 403, 404, 405, 407, 410], "abl": [3, 128, 139, 140, 240, 244, 391, 393, 394, 396, 402, 403, 404, 405, 407, 409], "experi": [3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 91, 92, 211, 353, 354, 355, 356, 357, 358, 385, 392, 393, 398, 399, 403, 404, 407], "box": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 118, 120, 252, 315], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 115, 116, 119, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 160, 163, 170, 176, 177, 179, 181, 186, 188, 191, 197, 200, 206, 207, 209, 349, 378, 391, 392, 393, 394, 402, 404, 406, 407, 409, 410], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 111, 112, 115, 119, 131, 137, 138, 144, 145, 164, 168, 170, 177, 183, 197, 200, 201, 203, 205, 209, 212, 221, 222, 223, 224, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 249, 250, 251, 252, 255, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 291, 294, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 378, 386, 387, 391, 392, 393, 394, 396, 397, 400, 402, 403, 404, 405, 406, 409], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 64, 94, 115, 119, 137, 138, 144, 145, 155, 156, 200, 206, 211, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 286, 287, 288, 290, 293, 315, 317, 392, 394, 398, 405, 407], "organis": [3, 80, 115, 119, 137, 138, 144, 145, 201, 392], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 79, 115, 118, 119, 120, 137, 138, 144, 145, 153, 170, 183, 203, 207, 209, 240, 244, 287, 297, 298, 300, 301, 302, 304, 306, 307, 308, 311, 313, 315, 317, 318, 319, 320, 322, 323, 329, 391, 394, 405], "live": [3, 13, 14, 15, 16, 17, 19, 20, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 170, 209], "actual": [3, 4, 7, 48, 50, 53, 73, 75, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 206, 371, 387, 391, 393, 403, 404, 405], "retriev": [3, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 97, 115, 118, 119, 120, 137, 138, 144, 145, 161, 167, 170, 179, 216, 221, 223, 247, 282, 283, 287, 290, 294, 297, 298, 299, 300, 302, 314, 317, 318, 320, 322, 323, 329, 331, 332, 333, 334, 382, 388, 392, 393, 396, 405, 410], "care": [3, 8, 115, 119, 137, 138, 144, 145, 200, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 351, 391, 393, 403, 404, 405, 407], "parametr": [3, 254, 287, 298, 300, 305, 313, 320, 391, 393], "hardwar": 3, "observation_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 179, 181, 183, 185, 187, 191, 193, 195, 196, 197, 198, 199, 200, 202, 203, 206, 207, 209, 221, 240, 244, 247, 372, 378, 391, 393, 397, 402, 403, 404, 405, 410], "pair": [3, 43, 48, 50, 53, 75, 113, 114, 115, 119, 137, 138, 144, 145, 188, 197, 240, 275, 283, 287, 315, 331, 332, 333, 334, 335, 386, 387, 391, 392, 393, 396, 397, 402, 405, 410], "state_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 221, 247, 405, 410], "reward_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 157, 158, 163, 164, 166, 167, 169, 185, 189, 190, 191, 193, 200, 202, 209, 221, 247, 393, 403, 404, 405, 410], "done_spec": [3, 115, 119, 137, 138, 144, 145, 166, 167, 169, 170, 185, 200, 209, 217, 403, 404, 405, 410], "flag": [3, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 176, 260, 261, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 386, 403, 404, 405, 406], "input_spec": [3, 115, 119, 131, 137, 138, 144, 145, 153, 157, 164, 166, 167, 168, 179, 181, 185, 186, 191, 192, 195, 196, 197, 200, 201, 202, 204, 209, 393, 405], "full_action_spec": [3, 115, 119, 135, 136, 137, 138, 144, 145, 153, 221, 247, 393, 403, 404], "full_state_spec": [3, 115, 119, 137, 138, 144, 145, 153, 221, 247, 393], "lock": [3, 30, 31, 37, 48, 50, 53, 56, 115, 119, 137, 138, 144, 145, 157, 197, 207, 405], "output_spec": [3, 115, 119, 137, 138, 144, 145, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 201, 209, 405], "full_observation_spec": [3, 115, 119, 137, 138, 144, 145, 221, 247], "full_reward_spec": [3, 115, 119, 137, 138, 144, 145, 157, 167, 185, 403, 404], "full_done_spec": [3, 115, 119, 137, 138, 144, 145, 157, 167, 185, 217, 403, 404], "carri": [3, 21, 41, 63, 115, 119, 137, 138, 144, 145, 197, 315, 392, 394, 403, 404, 405, 407], "nontensorspec": [3, 384], "importantli": [3, 283, 287], "action_s": 3, "help": [3, 4, 43, 62, 115, 119, 137, 138, 144, 145, 170, 209, 297, 299, 314, 317, 319, 385, 387, 391, 392, 393, 394, 403, 404], "With": [3, 124, 125, 128, 196, 388, 392, 402, 403, 404, 407, 410], "necessarili": [3, 115, 119, 137, 138, 144, 145, 410], "present": [3, 43, 48, 49, 50, 52, 53, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 98, 115, 118, 119, 137, 138, 144, 145, 171, 188, 192, 197, 201, 209, 216, 217, 225, 226, 227, 228, 229, 235, 240, 242, 244, 254, 259, 260, 261, 282, 286, 287, 288, 289, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 382, 388, 391, 400, 402, 403, 404, 407, 409], "0s": [3, 73, 79, 197, 394], "step_and_maybe_reset": [3, 115, 119, 137, 138, 144, 145, 395], "done_kei": [3, 23, 34, 36, 44, 57, 83, 84, 90, 115, 119, 137, 138, 144, 145, 156, 160, 170, 188, 195, 209, 216, 403, 404], "assign": [3, 4, 14, 15, 17, 27, 43, 48, 50, 53, 64, 115, 119, 137, 138, 144, 145, 201, 209, 300, 301, 302, 304, 320, 393, 396, 403, 404, 407], "_reset": [3, 115, 119, 131, 137, 138, 144, 145, 154, 156, 157, 160, 166, 169, 176, 185, 217, 221, 247, 403], "data_": [3, 115, 119, 137, 138, 144, 145], "append": [3, 8, 11, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 137, 138, 144, 145, 156, 163, 164, 188, 197, 201, 206, 239, 240, 243, 244, 279, 284, 391, 392, 393, 394, 403, 404, 405, 406, 407, 409], "seed": [3, 14, 15, 16, 17, 21, 52, 59, 60, 80, 94, 115, 119, 131, 137, 138, 139, 140, 144, 145, 146, 147, 154, 157, 166, 169, 185, 201, 211, 349, 368, 403], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 215, 225, 234, 237, 256, 265, 274, 283, 286, 287, 290, 298, 315, 364, 386, 391, 392, 393, 394, 396, 397, 400, 403, 405, 409, 410], "preced": [3, 43, 394], "risk": [3, 184], "overlap": [3, 59, 105], "reproduc": [3, 160, 211, 391, 393, 404], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 43, 48, 50, 51, 54, 61, 63, 64, 82, 86, 87, 88, 91, 92, 107, 115, 119, 137, 138, 144, 145, 168, 189, 195, 196, 198, 220, 268, 269, 270, 290, 298, 300, 305, 306, 313, 315, 316, 320, 351, 365, 391, 392, 393, 394, 396, 403, 404, 407], "max_step": [3, 11, 105, 115, 119, 129, 130, 131, 137, 138, 144, 145, 146, 147, 195, 209, 349, 395, 396, 397, 399, 400, 403, 404, 409, 410], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 111, 112, 115, 119, 131, 137, 138, 144, 145, 159, 177, 219, 222, 233, 237, 240, 244, 247, 261, 262, 263, 271, 272, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 292, 294, 298, 300, 301, 305, 306, 308, 309, 310, 311, 313, 315, 318, 320, 322, 323, 329, 330, 331, 332, 333, 334, 364, 378, 384, 391, 393, 394, 397, 400, 402, 403, 404, 405, 406, 410], "trail": [3, 207], "treat": [3, 43, 387, 396, 397], "figur": [3, 391, 393, 394, 404, 405, 410], "brief": [3, 393, 395, 397, 407], "deliveri": 3, "design": [3, 43, 97, 103, 110, 115, 119, 129, 130, 137, 138, 144, 145, 153, 160, 184, 201, 209, 278, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 391, 392, 393, 394, 395, 396, 397, 402, 403, 404, 405, 407, 410], "metaclass": 3, "everi": [3, 8, 30, 31, 37, 43, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 101, 115, 119, 137, 138, 144, 145, 195, 196, 207, 209, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 250, 251, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 315, 368, 388, 391, 392, 393, 394, 395, 396, 403, 404, 405], "flank": [3, 394], "dual": 3, "strictli": [3, 8, 43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320, 391, 393], "refer": [3, 7, 8, 9, 11, 21, 24, 43, 54, 115, 118, 119, 120, 137, 138, 144, 145, 201, 207, 209, 221, 233, 234, 247, 248, 249, 250, 251, 252, 256, 257, 264, 265, 280, 297, 300, 307, 308, 309, 310, 317, 320, 331, 336, 344, 390, 391, 393, 396, 397, 398, 399, 403, 404, 407, 409, 410], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 91, 92, 99, 115, 119, 137, 138, 144, 145, 164, 179, 183, 188, 190, 197, 201, 203, 205, 207, 209, 216, 223, 224, 225, 226, 227, 228, 229, 231, 235, 245, 248, 249, 250, 251, 253, 254, 258, 259, 262, 268, 269, 270, 271, 286, 304, 306, 312, 318, 321, 344, 362, 364, 365, 373, 374, 376, 378, 379, 380, 381, 382], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 129, 130, 148, 391], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 79, 92, 99, 100, 384], "adjac": [3, 23, 173, 282], "junction": 3, "inittrack": [3, 240, 244, 282, 391, 394], "tutori": [3, 138, 383, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410], "scratch": [3, 8, 392, 405], "gym3": 3, "envpool": [3, 132, 133], "interfac": [3, 122, 134, 245, 253, 386, 387, 391, 393, 399, 405, 407], "simultan": [3, 20, 132, 133, 137, 144, 405], "advantag": [3, 8, 235, 297, 299, 314, 317, 319, 331, 332, 333, 334, 335, 336, 338, 340, 342, 344, 345, 347, 387, 388, 391, 392, 393, 394, 404, 405, 410], "scale": [3, 4, 24, 75, 115, 119, 137, 138, 144, 145, 160, 177, 179, 190, 196, 199, 207, 220, 234, 241, 255, 264, 265, 269, 270, 275, 276, 277, 283, 287, 289, 297, 298, 300, 313, 317, 318, 319, 320, 366, 372, 382, 386, 391, 392, 393, 394, 396, 404, 409], "varieti": [3, 11], "inherit": [3, 115, 119, 137, 138, 144, 145, 246, 250, 251, 315, 388, 393, 403, 404], "Of": [3, 7, 385, 405, 410], "cours": [3, 4, 385, 405, 410], "from_pixel": [3, 11, 111, 112, 113, 114, 118, 120, 121, 124, 125, 141, 160, 187, 349, 351, 391, 392, 394, 395, 399, 400, 406, 407, 409, 410], "81": [3, 391, 392, 405, 406], "simpli": [3, 6, 48, 50, 53, 63, 103, 105, 110, 171, 192, 206, 315, 386, 387, 391, 393, 397, 403, 404, 410], "d": [3, 49, 52, 59, 60, 76, 78, 80, 81, 82, 91, 92, 220, 238, 242, 283, 287, 409], "privat": [3, 115, 119, 137, 138, 144, 145, 206, 405, 410], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 39, 41, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 105, 299, 314, 317, 359, 361, 364, 368, 371, 372, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 54, 94, 97, 179, 190, 241, 253, 264, 269, 270, 329, 386, 396, 397, 403, 405, 407], "inner": [3, 115, 119, 137, 138, 144, 145, 168, 388, 392, 393, 404, 410], "logic": [3, 403], "kept": [3, 23, 98, 100, 168, 192, 200, 211, 216, 241, 269, 270, 397, 403], "mind": [3, 73, 79, 92, 99, 100, 115, 119, 137, 138, 144, 145, 403, 404], "desig": 3, "wherev": 3, "expos": [3, 141, 166, 169, 288, 392], "modif": [3, 5, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 173, 209, 217, 315, 387, 393, 405], "lost": [3, 8, 206], "eras": [3, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 45, 46, 47, 62, 64, 65, 66, 67, 68, 92, 99, 115, 119, 137, 138, 144, 145, 201], "intern": [3, 389], "face": [3, 5, 8, 9, 395, 410], "NOT": [3, 83, 84, 90, 184], "outsid": [3, 16, 167, 387, 399, 403, 404, 405], "right": [3, 6, 7, 23, 54, 92, 99, 392, 393, 404, 405, 410], "preliminari": 3, "warranti": 3, "affect": [3, 8, 43, 115, 119, 137, 138, 144, 145, 200, 201, 209, 211, 331, 332, 333, 334, 403], "preclud": 3, "presenc": [3, 397], "annihil": 3, "reason": [3, 4, 8, 43, 79, 115, 119, 137, 138, 139, 140, 144, 145, 183, 203, 209, 244, 387, 391, 392, 393, 397, 398, 403, 405, 407], "advanc": [3, 21, 49, 52, 59, 60, 119, 395, 398, 407], "superse": 3, "pettingzoowrapp": [3, 384], "group": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 115, 119, 128, 129, 130, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 386, 392, 396, 398, 404, 407], "associ": [3, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 264, 382, 391, 407], "environemtn": 3, "__not__": [3, 283, 298, 300, 313, 318, 320, 322, 323], "constrain": [3, 177, 240, 244, 317], "li": 3, "fact": [3, 7, 8, 391, 393, 395, 403, 404, 405, 406, 407, 410], "know": [3, 4, 9, 49, 52, 59, 60, 118, 120, 218, 219, 315, 318, 364, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 407], "meaning": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "perfectli": [3, 388, 391, 405], "meaningless": 3, "val": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 397, 409], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 73, 115, 119, 137, 138, 144, 145, 156, 382, 386], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 91, 92, 94, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 161, 166, 168, 169, 170, 171, 173, 177, 178, 179, 181, 183, 185, 186, 188, 190, 191, 192, 195, 197, 199, 201, 202, 203, 205, 207, 209, 211, 214, 216, 217, 220, 221, 222, 223, 224, 226, 227, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 261, 269, 270, 274, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 329, 331, 332, 333, 334, 337, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 358, 361, 362, 364, 365, 366, 368, 382, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "500": [3, 391, 392, 405, 409, 410], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 73, 76, 137, 144], "bottleneck": [3, 8, 92, 99, 100], "great": [3, 7, 8, 403, 409], "speedup": [3, 8, 403, 410], "precis": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 166, 169, 216, 239, 243, 391, 393], "misspecifi": 3, "caus": [3, 7, 8, 86, 87, 107, 115, 119, 123, 137, 138, 144, 145, 184, 410], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 79, 86, 115, 119, 137, 138, 144, 145, 148, 160, 172, 178, 188, 196, 197, 198, 201, 209, 211, 218, 219, 236, 237, 260, 261, 300, 315, 320, 391, 393, 403, 404, 407, 409], "mismatch": [3, 392], "subprocess": [3, 14, 15, 17, 116, 137, 144], "multithreadedenv": [3, 384], "underneath": 3, "higher": [3, 4, 92, 163, 290, 391, 392, 393, 403, 407, 410], "flexibl": [3, 9, 132, 324, 387, 388, 391, 407, 410], "cover": [3, 118, 120, 385, 393, 395, 398, 399, 405, 409], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 31, 37, 43, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 64, 81, 82, 94, 115, 119, 128, 131, 134, 137, 138, 139, 140, 144, 145, 157, 164, 166, 167, 170, 171, 177, 183, 185, 186, 192, 195, 197, 200, 201, 203, 205, 207, 209, 212, 215, 218, 219, 223, 224, 245, 250, 251, 254, 262, 271, 279, 283, 286, 287, 294, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 325, 329, 337, 349, 380, 384, 386, 391, 392, 393, 398, 403, 404, 405, 407, 410], "atari": [3, 4, 73, 160, 351, 399, 410], "classic": [3, 131, 140, 392], "benchmark_batched_env": 3, "seamlessli": [3, 405], "infrastructur": [3, 403, 404], "act": [3, 4, 99, 100, 139, 140, 201, 232, 251, 298, 300, 301, 313, 318, 320, 322, 323, 394, 403, 404, 407], "world": [3, 5, 131, 292, 309, 399, 403, 404, 405, 410], "paradigm": [3, 17, 404], "decpodp": 3, "game": [3, 4, 5, 73, 129, 130, 135, 136, 351, 399], "thank": [3, 391, 395], "carrier": [3, 393, 394, 395, 407], "particular": [3, 43, 63, 75, 76, 115, 119, 137, 138, 144, 145, 201, 209, 387, 388, 392, 394, 395, 402, 404, 407], "thu": [3, 314, 404], "let": [3, 6, 7, 11, 23, 43, 49, 52, 59, 60, 61, 115, 119, 137, 138, 139, 140, 144, 145, 160, 209, 240, 244, 250, 251, 279, 364, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "vma": [3, 146, 147, 349, 403, 404], "robot": [3, 5, 7, 79, 183, 203, 205, 404], "vmasenv": [3, 349, 384, 403, 404], "balanc": [3, 113, 114, 391, 392, 410], "num_env": [3, 21, 118, 122, 133, 146, 147, 349, 403, 404], "n_agent": [3, 146, 147, 250, 251, 252, 262, 271, 329, 349, 403, 404], "ground_rew": 3, "pos_rew": [3, 404], "style": [3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81], "vari": [3, 118, 120, 121, 139, 140, 141, 146, 184, 404], "creation": [3, 137, 144, 410], "info_spec": [3, 137], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 33, 41, 42, 47, 111, 112, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 170, 185, 217, 233, 258, 263, 279, 280, 283, 284, 285, 302, 305, 306, 329, 384, 394, 403, 404, 410], "simpl": [3, 9, 43, 62, 115, 119, 137, 138, 144, 145, 209, 226, 282, 287, 302, 304, 315, 319, 331, 386, 387, 391, 392, 393, 395, 396, 397, 403, 404, 407, 410], "prefix": [3, 23, 43, 48, 50, 53, 63, 115, 119, 137, 138, 144, 145, 201, 209, 283, 300, 315, 320, 350, 394, 397, 410], "exactli": [3, 43, 115, 119, 121, 137, 138, 144, 145, 201, 209, 238, 242, 300, 320, 391, 394, 398, 403, 404], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 115, 119, 137, 138, 144, 145, 153, 154, 168, 210, 216, 218, 219, 221, 236, 237, 246, 247, 260, 261, 282, 403, 404], "reward_kei": [3, 34, 36, 44, 57, 83, 84, 90, 115, 119, 137, 138, 144, 145, 209, 216, 221, 247, 362, 366, 403, 404], "set_kei": [3, 170, 297, 299, 300, 302, 305, 306, 307, 313, 314, 315, 317, 318, 319, 320, 329, 335, 391, 403, 404], "awai": [3, 393, 395, 403, 404], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 39, 40, 41, 42, 45, 46, 47, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 176, 195, 287], "full": [3, 115, 119, 137, 138, 144, 145, 240, 244, 280, 359, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "autoresettransform": 3, "invalid": [3, 43, 105, 115, 119, 137, 138, 144, 145, 148, 209, 248, 249], "nan": [3, 156, 206], "auto_reset": [3, 115, 119, 137, 138, 144, 145, 156, 209, 405], "auto_reset_replac": [3, 156], "placehold": [3, 121, 170, 201], "set_gym_backend": [3, 115, 118, 119, 137, 138, 144, 145, 149, 156, 384, 395], "autoresettinggymenv": [3, 156], "_step": [3, 115, 119, 137, 138, 144, 145, 154, 156, 157, 166, 169, 173, 185, 186], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 37, 43, 48, 50, 53, 56, 115, 119, 131, 137, 138, 144, 145, 154, 156, 157, 164, 166, 169, 183, 185, 197, 200, 201, 203, 205, 209, 218, 219, 221, 233, 236, 247, 250, 251, 262, 271, 283, 286, 291, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 388, 391, 405, 409], "super": [3, 131, 154, 156, 157, 166, 169, 185, 221, 233, 247, 291, 298, 300, 301, 306, 313, 318, 320, 322, 323, 391, 405, 409], "td_reset": [3, 156], "exclud": [3, 8, 75, 80, 115, 119, 137, 138, 144, 145, 156, 160, 171, 216, 262, 299, 317, 403, 404, 407], "r": [3, 4, 43, 153, 154, 156, 163, 179, 193, 207, 220, 222, 239, 287, 296, 330, 349, 386, 392, 405, 410], "break_when_any_don": [3, 115, 119, 137, 138, 144, 145, 156, 209, 222, 282, 404], "3633e": [3, 156], "02": [3, 115, 119, 137, 138, 144, 145, 156, 390, 391, 392, 393, 394, 400, 403, 405, 406, 408], "4877e": [3, 156], "01": [3, 156, 179, 220, 260, 261, 293, 297, 299, 314, 317, 390, 391, 392, 394, 405, 406, 408], "2849e": [3, 156], "7584e": [3, 156], "6609e": [3, 156], "6166e": [3, 156], "8366e": [3, 156], "2761e": [3, 156], "5685e": [3, 156], "4102e": [3, 156], "8111e": [3, 156], "9959e": [3, 156], "0865e": [3, 156], "5644e": [3, 156], "2119e": [3, 156], "2542e": [3, 156], "03": [3, 115, 119, 137, 138, 144, 145, 156, 179, 390, 391, 392, 394, 405, 406, 408], "9952e": [3, 156], "4059e": [3, 156], "2094e": [3, 156], "9009e": [3, 156], "5140e": [3, 156], "3554e": [3, 156], "2920e": [3, 156], "7893e": [3, 156], "6429e": [3, 156], "3057e": [3, 156], "2867e": [3, 156], "6963e": [3, 156], "3818e": [3, 156], "2576e": [3, 156], "2679e": [3, 156], "1640e": [3, 156], "00": [3, 111, 112, 156, 390, 391, 392, 393, 394, 403, 404, 405, 406, 408], "6972e": [3, 156], "0212e": [3, 156], "5959e": [3, 156], "4637e": [3, 156], "3121e": [3, 156], "2168e": [3, 156], "5232e": [3, 156], "7704e": [3, 156], "7457e": [3, 156], "4127e": [3, 156], "1064e": [3, 156], "0854e": [3, 156], "5712e": [3, 156], "2189e": [3, 156], "5235e": [3, 156], "8289e": [3, 156], "0009e": [3, 156], "0257e": [3, 156], "8893e": [3, 156], "5872e": [3, 156], "9405e": [3, 156], "7766e": [3, 156], "0403e": [3, 156], "0626e": [3, 156], "2959e": [3, 156], "7263e": [3, 156], "2775e": [3, 156], "9564e": [3, 156], "0411e": [3, 156], "6769e": [3, 156], "6354e": [3, 156], "8698e": [3, 156], "1765e": [3, 156], "6292e": [3, 156], "5375e": [3, 156], "1820e": [3, 156], "7023e": [3, 156], "5836e": [3, 156], "9016e": [3, 156], "4826e": [3, 156], "6191e": [3, 156], "6387e": [3, 156], "8667e": [3, 156], "2056e": [3, 156], "1147e": [3, 156], "5991e": [3, 156], "0278e": [3, 156], "5219e": [3, 156], "3067e": [3, 156], "6617e": [3, 156], "3322e": [3, 156], "2629e": [3, 156], "4599e": [3, 156], "7298e": [3, 156], "5848e": [3, 156], "0148e": [3, 156], "5745e": [3, 156], "6982e": [3, 156], "7877e": [3, 156], "3527e": [3, 156], "7285e": [3, 156], "6668e": [3, 156], "0583e": [3, 156], "6956e": [3, 156], "3962e": [3, 156], "9845e": [3, 156], "5015e": [3, 156], "5903e": [3, 156], "9993e": [3, 156], "9418e": [3, 156], "0196e": [3, 156], "6557e": [3, 156], "2109e": [3, 156], "8997e": [3, 156], "1507e": [3, 156], "7363e": [3, 156], "0310e": [3, 156], "9574e": [3, 156], "8980e": [3, 156], "0090e": [3, 156], "forecast": 3, "awar": [3, 7, 86, 87, 88, 101, 103, 107, 240, 244, 392, 394], "detect": [3, 81, 315, 387], "return_contigu": [3, 115, 119, 137, 138, 144, 145, 211, 402], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 115, 117, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 170, 171, 172, 173, 176, 177, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 201, 206, 207, 209, 216, 217, 218, 219, 221, 236, 240, 244, 246, 247, 260, 261, 278, 280, 282, 285, 286, 287, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 330, 331, 332, 333, 334, 335, 368, 391, 403, 405], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 30, 32, 43, 49, 54, 59, 64, 79, 91, 92, 94, 115, 119, 137, 138, 144, 145, 153, 156, 160, 164, 166, 169, 177, 179, 183, 188, 189, 190, 196, 197, 199, 200, 201, 203, 205, 207, 209, 218, 219, 220, 222, 231, 234, 238, 241, 242, 245, 248, 249, 253, 254, 264, 265, 268, 270, 286, 290, 293, 295, 296, 297, 298, 299, 300, 304, 305, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 366, 391, 392, 407, 410], "_set_se": [3, 154, 157, 166, 169, 185, 405], "lazystackedtensordict": [3, 56, 73, 115, 119, 131, 137, 138, 144, 145, 402], "float32": [3, 14, 15, 16, 27, 30, 34, 48, 49, 50, 53, 54, 57, 59, 60, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 92, 107, 111, 112, 115, 118, 119, 120, 124, 125, 131, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 179, 181, 185, 186, 188, 192, 195, 197, 199, 214, 216, 221, 222, 232, 233, 240, 244, 247, 260, 261, 262, 263, 271, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 289, 291, 294, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 329, 386, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410], "exclusive_field": [3, 73, 402], "stack_dim": [3, 73, 402], "dramat": 3, "carefulli": [3, 403, 404, 410], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 209, 211, 274, 279, 280, 283, 284, 285, 286, 287, 298, 300, 313, 318, 320, 322, 323, 393, 403, 404], "plain": [3, 8, 395], "larg": [3, 4, 29, 48, 50, 53, 166, 169, 203, 297, 299, 314, 317, 319, 392, 393, 403, 404, 407], "expens": [3, 92, 99, 100, 349, 407], "absent": [3, 30, 31, 37, 56, 75, 115, 119, 137, 138, 144, 145, 201], "torchvis": [3, 11, 183, 205, 353, 403, 409, 410], "base_env": [3, 112, 115, 119, 120, 125, 136, 137, 138, 144, 145, 153, 154, 157, 163, 166, 168, 169, 177, 181, 185, 187, 193, 195, 197, 198, 201, 209, 351, 391, 392, 393, 403, 406, 409, 410], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 131, 137, 138, 144, 145, 152, 155, 157, 164, 170, 197, 201, 209, 223, 224, 245, 252, 296, 315, 349, 373, 374, 380, 381, 382, 392, 407], "bring": [3, 393, 395, 410], "signific": [3, 5, 8, 393, 410], "kind": [3, 52, 62, 216, 397, 403, 407], "consult": 3, "interest": [3, 283, 287, 386, 392, 393, 395, 404, 405, 410], "resize_par": 3, "easi": [3, 5, 11, 73, 78, 113, 114, 115, 119, 124, 125, 137, 138, 144, 145, 218, 219, 236, 237, 260, 261, 386, 387, 391, 392, 393, 404, 406, 407, 410], "revers": [3, 242], "order": [3, 11, 16, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 100, 115, 119, 137, 138, 144, 145, 161, 166, 169, 181, 201, 209, 274, 279, 286, 288, 289, 291, 297, 298, 300, 301, 305, 306, 313, 317, 318, 319, 320, 322, 323, 392, 403, 404], "chain": [3, 48, 49, 50, 52, 53, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 164, 168, 223, 224, 289, 410], "in_keys_inv": [3, 150, 163, 166, 167, 169, 179, 180, 181, 185, 186, 188, 193, 200, 202, 391, 402, 405, 410], "append_transform": [3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 150, 153, 159, 183, 197, 201, 203, 207, 222, 240, 244, 349, 391, 394, 403, 405, 407, 409, 410], "doubletofloat": [3, 391, 393, 402], "float64": [3, 43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 113, 114, 115, 119, 129, 130, 137, 138, 144, 145, 153, 164, 166, 169, 183, 197, 200, 201, 203, 205, 209, 286, 402, 410], "constrast": 3, "out_keys_inv": [3, 150, 163, 166, 167, 169, 179, 180, 181, 185, 186, 193, 200, 202, 405], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 86, 87, 88, 92, 98, 99, 101, 103, 107, 115, 119, 137, 138, 144, 145, 157, 164, 166, 167, 169, 171, 177, 185, 186, 192, 195, 200, 201, 207, 209, 242, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 387, 391, 394, 403, 404, 405, 406, 407, 410], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 118, 119, 120, 137, 138, 144, 145, 166, 169, 170, 191, 201, 209, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 349, 351, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 388, 391, 393, 395, 407], "manipul": [3, 4, 8, 113, 114, 183, 203, 410], "third_transform": 3, "unexpect": [3, 43, 115, 119, 137, 138, 144, 145, 209, 410], "behviour": 3, "fortun": [3, 394, 395, 396, 399], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 73, 86, 115, 119, 137, 138, 144, 145, 197, 209, 217, 287, 331, 332, 333, 334, 391, 393, 399, 403, 404], "catfram": [3, 282, 392], "hold": [3, 327, 328, 405, 407], "notic": [3, 105, 160, 393, 400, 405], "parenthood": 3, "henc": [3, 49, 184, 217, 250, 386, 391, 393, 403, 404, 405], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 137, 144, 349, 405], "discret": [3, 25, 26, 27, 29, 30, 33, 39, 40, 41, 42, 47, 64, 67, 68, 115, 118, 119, 120, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 168, 258, 263, 304, 305, 306, 307, 386, 392, 393, 396, 403, 404, 405, 410], "might": [3, 48, 50, 51, 53, 355, 385, 391, 395, 410], "action_mask": [3, 124, 125, 139, 140, 142, 143, 154], "unavail": [3, 139, 140], "probabl": [3, 4, 8, 54, 94, 97, 222, 231, 233, 236, 238, 240, 242, 244, 245, 248, 249, 258, 269, 270, 283, 287, 300, 386, 392, 396, 409], "probabilistictensordictmodul": [3, 177, 287, 288, 409], "tensordictsequenti": [3, 222, 236, 240, 244, 260, 279, 282, 288, 294, 386, 391, 392, 394, 396, 400, 402, 403, 406, 409], "maskedcategor": [3, 249, 384], "linear": [3, 14, 15, 16, 17, 21, 43, 111, 112, 115, 119, 131, 137, 138, 144, 145, 164, 177, 183, 197, 200, 201, 203, 205, 209, 221, 222, 223, 224, 226, 227, 228, 229, 233, 235, 236, 237, 245, 247, 250, 251, 253, 254, 255, 260, 261, 263, 264, 265, 274, 275, 276, 277, 281, 282, 283, 284, 286, 289, 291, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 378, 386, 392, 402, 406, 409], "in_feat": 3, "out_feat": 3, "logit": [3, 50, 54, 232, 248, 249, 258, 280, 283, 305, 306, 386], "dist": [3, 10, 248, 249, 258, 396, 409], "distribution_class": [3, 177, 275, 276, 277, 278, 283, 287, 289, 297, 298, 300, 305, 306, 313, 317, 318, 319, 320, 386, 391, 393, 396, 403, 404, 409], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 77, 111, 112, 115, 119, 120, 124, 125, 130, 133, 135, 136, 137, 138, 139, 140, 144, 145, 147, 209, 211, 219, 237, 240, 244, 261, 272, 275, 276, 277, 282, 284, 292, 315, 329, 386, 391, 392, 393, 394, 397, 400, 403, 404, 410], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 154, 184, 209], "enviorn": [3, 129, 139, 140, 146, 147], "itself": [3, 43, 115, 119, 137, 138, 144, 145, 149, 156, 209, 315, 322, 393, 395], "ey": 3, "report": [3, 111, 112, 124, 125, 399], "foremost": 3, "callback": [3, 115, 119, 137, 138, 144, 145, 404], "ad": [3, 4, 16, 23, 43, 49, 52, 59, 60, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 115, 119, 137, 138, 144, 145, 191, 201, 209, 220, 253, 254, 260, 261, 297, 299, 300, 302, 307, 314, 317, 320, 329, 392, 394, 396, 403, 407, 410], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 60, 91, 92, 98, 191, 207, 209, 260, 261, 282, 356, 361, 392, 394, 395, 398, 404, 405, 407], "tensordictrecord": [3, 384], "videorecord": [3, 11, 349, 384, 393, 399, 400, 403], "csvlogger": [3, 11, 349, 351, 384, 392, 399, 400, 403], "wandblogg": [3, 384, 399], "tensorboardlogg": [3, 378, 384, 399], "tag": [3, 7, 11, 349, 351, 353, 356, 382, 399, 400, 403], "mp4": [3, 349, 351, 353, 400, 403], "video_format": [3, 349, 351, 353, 400, 403], "whc": 3, "cwh": 3, "exp": [3, 255, 296], "al": [3, 24, 118, 120, 170, 181, 221, 410], "pong": [3, 73, 133, 181, 410], "v5": [3, 118, 120, 133, 170, 181, 410], "cach": [3, 48, 50, 63, 73, 75, 76, 77, 79, 80, 81, 82, 92, 99, 115, 119, 137, 138, 144, 145, 156, 166, 169, 183, 201, 205, 216, 360, 406], "grow": 3, "until": [3, 7, 21, 198, 200, 209, 393, 394, 400, 403, 404], "dumpi": 3, "tediou": [3, 395], "workspac": [3, 115, 119, 137, 138, 144, 145], "pixelrendertransform": [3, 384, 403], "stream": [3, 79], "alik": [3, 349], "envcreat": [3, 16, 22, 137, 144, 349, 378, 379, 382, 384, 391, 392, 409, 410], "render_mod": [3, 349, 405], "rgb_arrai": [3, 349, 403, 404, 405], "uncom": [3, 399], "line": [3, 7, 43, 73, 115, 119, 137, 138, 144, 145, 209, 392, 399, 403, 404, 409, 410], "comment": [3, 388, 392, 409], "pixels_record": [3, 349], "close": [3, 16, 119, 132, 177, 297, 299, 314, 317, 349, 391, 392, 395, 402, 403, 405, 409], "mission": 3, "irrespect": [3, 286, 287], "dmcontrol": [3, 115, 119, 137, 138, 144, 145], "jumanji": [3, 115, 119, 124, 125, 137, 138, 144, 145], "special": [3, 65, 67, 384, 386, 391, 394, 410], "framework": [3, 4, 9, 22, 111, 112, 115, 119, 124, 125, 131, 137, 138, 144, 145, 238, 409, 410], "Its": [3, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 207, 209, 286, 335], "success": [3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 160, 200, 236, 300, 322, 392, 398, 400, 405, 407, 409], "foundat": [3, 5, 139, 140, 393, 404], "inspir": [3, 405], "gone": [3, 4, 5, 282], "hard": [3, 7, 105, 113, 114, 137, 312, 392, 410], "prefer": [3, 14, 15, 17, 20, 23, 24, 49, 52, 59, 60, 184, 192, 317, 322, 365, 386, 393, 403, 404, 407], "maintain": [3, 5, 9, 32, 405], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 392, 393, 394, 398, 403, 404, 405, 407, 410], "decor": [3, 8, 12, 152, 315, 331, 332, 333, 334, 409], "relev": [3, 54, 331, 332, 333, 334, 335, 358, 405], "gym_backend": [3, 152, 384], "env1": [3, 222, 402], "venv": 3, "python3": [3, 6, 7, 10, 409], "site": [3, 6, 7, 80, 152, 409], "env2": [3, 402], "_env": [3, 6, 118, 410], "classic_control": 3, "pendulumenv": [3, 384, 405], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 127, 149], "handi": [3, 115, 119, 137, 138, 144, 145, 399], "side": [3, 4, 410], "v0": [3, 14, 15, 115, 119, 121, 124, 125, 126, 127, 137, 138, 144, 145, 164, 201, 207, 378], "26": [3, 115, 119, 137, 138, 144, 145, 390, 392, 397, 403, 405, 406, 408, 410], "fun": [3, 12, 152, 393, 403, 404], "reveal": 4, "bug": [4, 409], "curv": 4, "exploit": [4, 396], "cv": 4, "flip": 4, "correspondingli": 4, "invers": [4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 160, 166, 169, 171, 179, 186, 188, 209, 295, 305, 313, 384, 405], "prescript": 4, "tune": [4, 24, 177, 403, 404, 406], "coeffici": [4, 24, 32, 54, 177, 404], "bonu": [4, 297, 299, 314, 317], "beta": [4, 49, 59, 91, 92, 305, 313, 314, 391, 392, 407, 409], "reduc": [4, 6, 29, 105, 196, 220, 269, 384, 392, 403], "downstream": [4, 387, 391], "formul": [4, 403, 404], "ob": [4, 8, 23, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 99, 100, 105, 115, 119, 137, 138, 144, 145, 154, 156, 166, 167, 169, 179, 193, 199, 214, 216, 226, 227, 228, 229, 250, 251, 252, 284, 291, 298, 300, 301, 306, 313, 318, 320, 322, 323, 331, 332, 333, 334, 392, 402, 403, 405, 407, 409, 410], "rate": [4, 11, 73, 207, 330, 392, 393, 403, 404], "gradient": [4, 43, 115, 119, 137, 138, 144, 145, 201, 209, 241, 249, 254, 258, 269, 270, 297, 299, 300, 301, 305, 306, 311, 313, 314, 315, 317, 318, 319, 320, 322, 323, 330, 331, 332, 333, 334, 368, 391, 393, 403, 404, 405], "easier": [4, 386, 391], "local": [4, 7, 10, 16, 21, 43, 92, 99, 115, 119, 137, 138, 144, 145, 201, 209, 250, 251, 262, 271, 329, 356, 358, 399, 400, 403, 404], "optima": 4, "sens": [4, 48, 50, 53, 398, 405], "product": [4, 9, 238, 239, 242, 243, 380, 381], "sum": [4, 21, 41, 105, 111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 159, 191, 248, 249, 269, 271, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 313, 314, 316, 317, 318, 319, 320, 322, 323, 330, 337, 387, 391, 392, 393, 394, 397, 400, 403, 404, 405, 410], "stat": [4, 179, 207, 372, 382, 392, 393], "w": [4, 94, 135, 136, 160, 162, 165, 187, 199, 238, 260, 261, 351, 392, 394, 407], "yield": [4, 14, 15, 16, 21, 43, 115, 119, 137, 138, 144, 145, 209, 315, 391, 397], "insight": 4, "auxiliari": [4, 397], "credit": 4, "futur": [4, 23, 43, 48, 50, 53, 83, 84, 90, 115, 119, 137, 138, 144, 145, 183, 201, 205, 209, 245, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 385, 409], "past": [4, 282, 392, 407], "spars": [4, 394], "intermedi": [4, 14, 15, 159, 222, 240, 244, 280, 391, 406], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 391], "discov": 4, "score": [4, 54], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 409], "select": [4, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 129, 130, 139, 140, 146, 147, 154, 156, 157, 159, 160, 161, 164, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 203, 204, 206, 207, 209, 210, 221, 240, 244, 279, 284, 367, 391, 395, 407], "explicit": [4, 12, 63, 94, 407], "mechan": [4, 43, 115, 119, 137, 138, 144, 145, 201, 209, 392, 397, 405], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 115, 119, 137, 138, 144, 145, 242, 305, 313, 393, 404], "addition": 4, "timestep": [4, 54, 75, 188, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 403, 404], "realli": 4, "huge": [4, 251, 394], "std": [4, 179, 207, 218, 219, 255, 259, 391, 410], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 390, 394, 395, 397, 398, 399, 400, 401, 402, 406, 407, 408], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 115, 119, 135, 136, 137, 138, 144, 145, 159, 179, 183, 197, 200, 201, 203, 208, 209, 218, 219, 220, 221, 236, 237, 238, 239, 242, 243, 247, 250, 251, 252, 253, 254, 260, 261, 282, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 382, 386, 387, 391, 392, 394, 395, 396, 398, 403, 405, 410], "estim": [4, 73, 92, 99, 100, 170, 177, 226, 269, 275, 276, 277, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "unseen": 4, "extrins": 4, "wrong": [4, 92, 99], "bonus": 4, "denser": 4, "prior": [4, 265, 309, 404], "freshli": 4, "drop": [4, 98, 100, 216], "meant": [4, 43, 131], "encourag": [4, 137, 391, 392, 407], "measur": [4, 86, 87, 107, 111, 112, 124, 125, 393, 398], "novelti": 4, "revisit": 4, "previous": [4, 393, 410], "diminish": 4, "decreas": [4, 24, 396], "ideal": [4, 179, 405], "down": [4, 14, 15, 16, 17, 387, 394, 395], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "distil": 4, "nois": [4, 208, 254, 260, 261, 273, 318, 322, 323, 364, 382, 391, 403], "exploratori": [4, 297, 299, 314, 317], "misalign": 4, "trade": [4, 396], "unavoid": 4, "divers": [4, 137, 144], "bootstrap": [4, 307, 332, 338, 339, 391, 394], "noisi": [4, 253, 254, 273, 386], "unstabl": [4, 241, 269, 270], "inher": [4, 297, 317], "stochast": [4, 177, 234, 254, 256, 265, 298, 300, 303, 305, 306, 311, 313, 316, 318, 320, 386, 393, 396, 404], "enemi": 4, "pomdp": [4, 407], "loos": [4, 386, 392, 393], "nonexist": 4, "architectur": [4, 230, 397, 403, 404], "sequenc": [4, 14, 15, 16, 17, 24, 30, 31, 37, 39, 41, 49, 51, 52, 54, 56, 61, 63, 79, 82, 85, 94, 95, 97, 103, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 150, 158, 159, 160, 161, 162, 165, 166, 168, 169, 173, 175, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 196, 198, 199, 200, 207, 223, 224, 231, 233, 238, 242, 245, 248, 249, 250, 251, 258, 263, 267, 278, 288, 289, 303, 350, 351, 363, 364, 365, 367, 368, 386, 391, 393, 394, 402, 403, 404, 410], "lstm": [4, 197, 243, 244, 255], "rel": [4, 94, 197, 231, 268, 391, 392, 403, 404, 407], "tend": 4, "stabl": [4, 9, 10, 134], "compens": 4, "descent": [4, 254], "minimum": [4, 64, 137, 144, 189, 234, 255, 268, 269, 270, 290, 293, 296, 298, 300, 306, 315, 316, 320, 359, 391, 393, 400, 403, 404], "manual": [4, 11, 18, 20, 21, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 119, 120, 391, 394, 407], "deviat": [4, 179, 207, 218, 219, 221, 234, 247, 253, 254, 259, 317, 322, 323, 391, 396, 404], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 92, 99, 156, 238, 239, 242, 243, 395, 396, 397, 398, 399, 400], "stabil": [4, 174, 297, 299, 314, 317, 319], "stage": [4, 391, 405], "never": [4, 14, 15, 17, 27, 64, 92, 398], "prevent": [4, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 47, 56, 84, 207, 241, 269, 270, 297, 299, 314, 317, 319, 366, 399, 407], "entir": [4, 79, 115, 119, 137, 138, 144, 145, 250, 393, 395, 405, 407], "submit": [4, 118, 157, 385, 409], "system": [4, 5, 84, 393, 403, 404, 405], "adequ": [4, 211, 393, 403, 404], "infeas": 4, "allevi": [4, 386], "prune": 4, "fire": [4, 43, 115, 119, 137, 138, 144, 145, 209], "illeg": 4, "chess": [4, 135, 136], "grasp": 4, "top": [4, 105, 111, 112, 124, 125, 165, 221, 247, 396], "wherein": 4, "cumul": [4, 191, 196, 221, 337, 393], "q": [4, 9, 115, 119, 137, 138, 144, 145, 226, 227, 228, 229, 232, 233, 235, 262, 263, 271, 277, 280, 284, 285, 298, 300, 301, 302, 304, 305, 306, 307, 312, 313, 318, 320, 322, 323, 329, 384, 391, 397], "flow": [4, 391, 393, 403, 404, 405, 407], "reparameter": [4, 231, 249, 258], "soft": [4, 312, 320, 321, 403], "critic": [4, 8, 275, 281, 297, 299, 300, 301, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 391, 397], "clip": [4, 54, 163, 189, 297, 299, 314, 317, 319, 322, 323, 368, 393, 404, 405], "oppos": [4, 63], "incorrect": 4, "thought": [4, 115, 119, 137, 138, 144, 145], "region": 4, "squash": [4, 394, 409], "tanh": [4, 223, 224, 238, 239, 241, 242, 243, 245, 251, 268, 269, 270, 290, 393, 396, 403, 404, 405, 406, 409], "prob": [4, 248, 249, 258, 393, 404], "rememb": [4, 403], "remap": 4, "origin": [4, 8, 48, 50, 53, 54, 123, 167, 168, 177, 183, 201, 205, 209, 238, 283, 286, 287, 298, 300, 312, 313, 315, 317, 318, 320, 322, 323, 391, 402, 405, 410], "histor": 5, "ceas": 5, "farama": [5, 77, 126, 127, 139, 140, 393, 405], "best": [5, 9, 123, 240, 244, 403, 404, 407, 409], "gymwrapp": [5, 115, 119, 137, 138, 144, 145, 171, 192, 195, 206, 384, 393, 409], "feel": [5, 385, 400, 409], "free": [5, 7, 166, 169, 297, 309, 317, 388, 393, 400, 404, 409], "gladli": 5, "prepar": [6, 36, 76, 393], "conda": [6, 7, 385], "cmake": 6, "activ": [6, 7, 9, 223, 224, 230, 234, 245, 250, 251, 299, 314, 317, 386, 405, 409], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 76, 385], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 121], "y": [6, 7, 52, 134, 235, 250, 272, 391, 404, 407], "facebookresearch": [6, 76, 121], "subdirectori": 6, "verbos": [6, 400], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 70, 115, 119, 137, 138, 144, 145, 185, 194, 209, 315, 403, 404, 409, 410], "command": [6, 7, 10, 145, 393, 403, 404, 405, 410], "readm": [6, 7, 146], "md": [6, 7], "habitatenv": [6, 384], "_has_habitat": 6, "available_env": [6, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 129, 130, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 410], "startswith": [6, 222, 387, 391, 397], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 116, 315, 391], "env_nam": [6, 111, 113, 115, 118, 119, 121, 124, 126, 132, 137, 138, 141, 144, 145, 391, 393, 410], "llvmlite": 6, "config": [6, 7, 183, 205, 225, 230, 259, 372, 373, 374, 376, 379], "var": [6, 7, 43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 315, 320], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 279, 315], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 315, 320, 407], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 115, 392, 400], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 75], "stand": [7, 35, 113, 114, 137, 144, 402, 405, 410], "joint": [7, 392], "contact": [7, 51, 403], "engin": [7, 141, 405], "biomechan": 7, "graphic": 7, "anim": [7, 404], "area": 7, "demand": [7, 399, 410], "fast": [7, 9, 111, 112, 186, 216, 318, 391, 392, 393], "articul": 7, "acquir": [7, 393], "deepmind": [7, 8, 9, 79, 113, 114, 115, 119, 129, 130, 135, 136, 137, 138, 144, 145, 170, 393, 395], "whomev": 7, "licenc": 7, "incorpor": [7, 115, 119, 137, 138, 144, 145, 218, 219, 236, 237, 260, 261, 322, 394, 396, 405], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 385], "tip": [7, 385], "glfw": [7, 391], "osmesa": 7, "egl": 7, "advic": [7, 79, 410], "sudo": [7, 385], "apt": [7, 404], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 275, 276, 277], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 391, 393, 394, 403, 404, 407], "roboti": 7, "html": [7, 14, 15, 132, 134, 135, 136], "wget": 7, "mujoco210": 7, "tar": [7, 76], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 137, 144], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 48, 50, 63, 82], "bin": [7, 233, 280, 386], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 229, 283, 287, 391, 393, 407], "nvidia": [7, 123], "older": [7, 12], "hack": [7, 391], "adatp": 7, "script": [7, 76, 211, 378, 382, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "unnot": [7, 184], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 84, 392, 407], "troubleshoot": 7, "gl": 7, "h": [7, 94, 160, 162, 165, 187, 199, 238, 239, 240, 242, 243, 244, 247, 351, 392, 394, 407], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 33, 41, 42, 47], "directori": [7, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 86, 356, 358, 388, 391, 396, 399, 403], "devel": 7, "ubuntu": [7, 123], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 392, 394, 402], "libstdc": 7, "glibcxx_3": 7, "29": [7, 390, 391, 392, 393, 405, 408], "compil": [7, 23, 43, 92, 99, 100, 115, 119, 137, 138, 144, 145, 209, 238, 239, 242, 243, 269], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 206, 393, 402], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 178, 201, 209, 300, 320, 387, 409, 410], "job": [7, 18, 19, 20, 22, 52, 59, 60, 94, 407, 409], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 111, 112, 390, 392, 394, 395, 396, 405, 406, 408], "114": [7, 405], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 405], "offscreenopenglcontext": 7, "opengl": [7, 403, 404], "global": [7, 43, 52, 59, 60, 94, 115, 119, 137, 138, 139, 140, 144, 145, 209, 262, 271, 283, 287, 329, 388, 391, 403, 404], "cuda_visible_devic": 7, "id": [7, 23, 54, 92, 94, 99, 100, 115, 118, 119, 137, 138, 144, 145, 260, 261, 300, 318, 354, 358, 398, 407], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 403], "onscreen": 7, "101": [7, 393, 405], "correctli": [7, 43, 115, 119, 137, 138, 144, 145, 209], "lgl": 7, "libegl": 7, "x11": [7, 404], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 388], "n_training_step": 8, "datapoint": [8, 63, 407], "n_data_per_train": 8, "no_grad": [8, 43, 115, 119, 137, 138, 144, 145, 177, 209, 238, 239, 242, 243, 331, 332, 333, 334, 393, 394, 404], "loss_fn": [8, 394, 397, 398, 409], "zero_grad": [8, 43, 115, 119, 137, 138, 144, 145, 209, 388, 391, 393, 394, 397, 400, 403, 404, 405], "backpropag": [8, 111, 112, 124, 125, 137, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 323, 329, 397, 404, 405], "differenti": [8, 63, 111, 112, 177, 300, 322, 331, 332, 333, 334, 394, 396, 397, 403, 404, 405], "denomin": 8, "artifact": 8, "numer": [8, 52, 119, 207, 241, 269, 270, 274, 279, 280, 283, 284, 285, 286, 287, 366, 393, 407, 410], "misconcept": 8, "freed": 8, "appear": [8, 11, 27, 64, 73, 79, 92, 99, 100, 405, 407], "compuat": 8, "fix": [8, 32, 137, 197, 298, 300, 316, 320, 392, 400, 405, 410], "retain_graph": [8, 111, 112], "discuss": [8, 9, 398, 403, 404], "inplac": [8, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 391], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 203, 204, 206, 207, 209, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 264, 265, 267, 271, 272, 278, 280, 282, 283, 285, 286, 287, 290, 291, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 329, 331, 332, 333, 334, 335, 384, 387, 405, 409], "submodul": [8, 43, 115, 119, 137, 138, 144, 145, 149, 197, 209, 240, 244, 294, 315], "param": [8, 43, 54, 115, 119, 131, 137, 138, 144, 145, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209, 231, 233, 250, 251, 252, 268, 278, 283, 286, 289, 315, 325, 328, 331, 332, 333, 334, 335, 391, 400, 403, 404, 405, 406, 409], "grad": [8, 43, 111, 112, 115, 119, 137, 138, 144, 145, 209, 391, 393], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 255, 262, 286], "factor": [8, 11, 24, 43, 188, 209, 218, 219, 220, 236, 237, 241, 254, 260, 261, 269, 270, 298, 304, 307, 308, 310, 321, 337, 391, 392, 396, 400, 403, 404, 407, 410], "fit": [8, 12, 179, 197, 387, 388, 391], "bottlneck": 8, "brax": [8, 111, 112, 115, 119, 137, 138, 144, 145, 186, 395, 410], "jax": [8, 12, 111, 112, 124, 125], "improperli": 8, "underli": [8, 115, 119, 137, 138, 144, 145, 315, 395, 397, 399, 405], "tedeiou": 8, "priorit": [8, 49, 59, 91, 92, 300, 301, 302, 304, 305, 306, 313, 318, 320, 322, 323, 391, 392, 398], "amount": [8, 260, 261, 392, 407], "costli": [8, 405], "constitut": [8, 392, 404, 405], "profil": 8, "frequent": [8, 407], "program": [8, 305, 313, 410], "functorch": [8, 10], "incl": 8, "suit": [8, 114, 393, 395, 409, 410], "mujoco_instal": 8, "valueerror": [8, 43, 115, 119, 137, 138, 144, 145, 209], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 98, 181, 409, 410], "idea": [9, 318, 388, 394, 396, 403, 404], "introductori": 9, "intro": [9, 393, 394], "dai": [9, 409], "2022": [9, 10, 405, 409], "spin": [9, 113, 114, 410], "deep": [9, 160, 226, 227, 228, 229, 232, 260, 261, 297, 300, 312, 320, 321, 391, 403], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 396], "summari": [9, 179, 207, 391, 392, 393, 394], "reddit": 9, "reagent": 9, "orient": [9, 81, 410], "baselines3": 9, "tf": 9, "bandit": [9, 134], "tensorflow": [9, 248, 249], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 400], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 409], "grade": 9, "factori": [9, 61, 391], "cherri": 9, "jaxrl": 9, "mbrl": [9, 131, 386], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 405], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 393, 394, 403, 404], "notebook": [10, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "24": [10, 80, 100, 118, 132, 133, 282, 391, 392, 393, 394, 403, 405, 406], "pip3": [10, 391, 393, 394, 403, 404], "url": [10, 121], "org": [10, 14, 15, 24, 49, 76, 77, 79, 81, 91, 92, 111, 112, 113, 114, 121, 124, 125, 129, 130, 132, 133, 134, 141, 146, 147, 160, 183, 203, 220, 225, 226, 227, 228, 229, 230, 233, 234, 235, 242, 247, 248, 249, 254, 256, 257, 260, 261, 262, 264, 265, 271, 280, 297, 298, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 316, 317, 319, 320, 321, 322, 331, 336, 344, 383, 401, 406], "whl": 10, "u": [10, 78, 238, 239, 242, 243, 405], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 393, 403, 404, 405, 407], "power": [11, 392], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 384], "ultim": [11, 241, 269, 270], "ffmpeg": 11, "whatev": [11, 387, 391], "fed": [11, 404, 407], "feed": [11, 183, 205, 315, 386, 391, 403, 404, 407], "suppos": [11, 137, 364, 388, 410], "snippet": [11, 183, 203, 391], "gave": 11, "extrem": [11, 137, 144, 297, 299, 314, 317, 319], "blurri": 11, "stitch": 11, "exp_nam": [11, 351, 352, 353, 356, 357, 358, 378, 392, 399, 400], "my_exp": [11, 399], "pixels_onli": [11, 113, 114, 118, 120, 121, 141, 391, 392, 399, 400, 409, 410], "my_video": [11, 399], "record_env": [11, 399, 400], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 277, 386], "module_nam": [12, 315], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 91, 92, 94, 105, 111, 113, 114, 115, 117, 118, 119, 120, 121, 124, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 156, 160, 170, 176, 177, 183, 187, 195, 196, 201, 203, 205, 206, 207, 209, 217, 221, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 240, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 259, 262, 263, 271, 274, 279, 280, 283, 284, 285, 286, 287, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 329, 330, 331, 332, 333, 334, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 376, 382, 392, 393], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 240, 244, 409], "longer": [12, 392, 400, 403, 404, 407], "x": [12, 23, 43, 52, 54, 79, 100, 177, 199, 220, 222, 224, 233, 235, 238, 239, 240, 242, 243, 244, 245, 247, 250, 251, 272, 279, 283, 284, 293, 296, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 368, 391, 403, 405, 407, 409], "23": [12, 80, 100, 391, 392, 393, 403, 405], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 80, 111, 112, 119, 124, 125, 243, 296, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 391, 392, 393, 394, 400, 403, 404, 405, 407, 410], "classmethod": [12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 203, 225, 259], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 43, 45, 46, 48, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 68, 80, 84, 92, 99, 100, 115, 116, 117, 118, 119, 120, 129, 130, 132, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 177, 197, 201, 206, 207, 209, 223, 224, 225, 226, 227, 228, 229, 230, 235, 245, 259, 283, 287, 300, 320, 322, 355, 356, 364, 373, 374, 380, 381, 382, 391, 392, 393, 407, 410], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 116, 137, 144, 391, 409], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 392], "create_env_kwarg": [14, 15, 16, 17, 21, 116, 132, 137, 144, 391, 410], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 43, 188, 392, 407], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 212, 215, 283, 287, 364], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 48, 50, 53, 137, 144], "num_sub_thread": [14, 15, 17, 137, 144], "set_trunc": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145], "use_buff": [14, 15, 16, 137, 144], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 115, 119, 137, 138, 144, 145], "datacollector": [14, 15, 16, 17, 43, 287, 317, 393, 398, 407], "recept": 14, "safe": [14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 219, 261, 269, 274, 279, 280, 283, 284, 285, 286, 287, 289, 386, 409], "sota": [14, 15, 131, 174, 319, 359, 373, 391, 392, 409], "guard": [14, 15], "doc": [14, 15, 61, 121, 124, 125, 134, 141, 358, 392, 403, 404, 407, 409, 410], "env_mak": [14, 15, 16, 21, 378, 410], "2000": [14, 15, 16, 43, 63, 122, 351, 393, 407], "50": [14, 15, 16, 21, 51, 54, 73, 81, 99, 100, 129, 130, 209, 390, 392, 393, 394, 402, 403, 404, 405, 406, 407, 408], "shutdown": [14, 15, 16, 17, 21, 157, 391, 409], "del": [14, 15, 16, 391, 392, 393, 402, 403, 409, 410], "int64": [14, 15, 16, 23, 25, 26, 29, 33, 34, 39, 40, 41, 42, 47, 48, 50, 51, 53, 54, 57, 59, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 115, 119, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 153, 157, 170, 181, 188, 195, 233, 260, 261, 263, 279, 280, 283, 284, 285, 386, 393, 394, 395, 396, 398, 399, 405, 407, 409], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 159, 272, 279, 282, 284, 394], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 63], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 392], "divis": [14, 15, 16, 17, 18, 19, 20, 73, 79, 92, 99, 100, 220, 404], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 119, 156, 197, 206, 244, 394, 405, 406], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 370, 392], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 82, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 164, 166, 169, 177, 183, 197, 200, 201, 203, 205, 207, 209, 286, 403, 410], "span": [14, 15, 16, 17, 18, 19, 20, 21, 79, 92, 99], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 43, 209, 282, 392, 393, 403, 404], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 54, 358, 386, 403, 404, 405], "round": [14, 15, 16, 17, 18, 19, 20, 21, 73], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 43, 77, 115, 119, 137, 138, 144, 145, 209], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 283, 315, 364, 386, 391, 392, 393, 394, 396, 403, 409], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 206, 409], "ratio": [14, 15, 17, 54, 391, 393], "finish": [14, 15, 17, 21, 119, 188, 410], "rest": [14, 15, 17, 386, 393, 394, 403, 405, 409], "earli": [14, 15, 17, 43, 119, 195, 409], "safeti": [14, 15, 17, 131, 137, 144], "harm": [14, 15, 17, 137, 144], "exclus": [14, 15, 69, 70, 73, 79, 92, 99, 100, 157, 171, 173, 238, 240, 242, 244, 248, 249, 279, 280, 284, 285, 321, 322, 323, 331, 332, 333, 334, 335, 358, 382, 386], "add_truncated_kei": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145, 201], "trust": [14, 15, 16, 115, 119, 129, 130, 137, 138, 144, 145, 244], "cudagraphmodul": [14, 15, 16, 115, 119, 137, 138, 144, 145], "ordereddict": [14, 15, 16, 17, 21, 43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 300, 320, 392], "form": [14, 15, 17, 43, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 115, 119, 137, 138, 144, 145, 207, 209, 238, 240, 242, 244, 296, 297, 299, 314, 317, 368, 386, 396, 404], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 115, 119, 137, 138, 144, 145, 201], "integ": [14, 15, 16, 17, 23, 39, 41, 43, 54, 92, 99, 100, 101, 115, 119, 137, 138, 144, 145, 153, 156, 170, 174, 179, 195, 223, 224, 245, 250, 251, 300, 305, 313, 320, 407], "increment": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145, 179, 314], "env_fn": [14, 15, 16, 17, 116, 380, 381], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 99, 100, 228, 229, 405], "out_se": [14, 15, 16, 17, 410], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 28, 30, 31, 33, 37, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 56, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 90, 91, 92, 94, 99, 100, 101, 103, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 157, 164, 183, 185, 194, 197, 200, 201, 202, 204, 205, 208, 209, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 232, 235, 236, 237, 240, 241, 244, 245, 246, 247, 250, 251, 252, 258, 260, 261, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 329, 330, 331, 332, 333, 334, 335, 349, 351, 355, 356, 358, 361, 368, 373, 374, 379, 380, 381, 387, 393, 404, 409], "return_same_td": 16, "interruptor": 16, "cautious": [16, 317], "whole": [16, 30, 31, 37, 43, 56, 63, 115, 119, 137, 138, 144, 145, 201, 209, 283, 300, 320, 359, 391, 393], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 396], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 368], "respect": [18, 19, 20, 43, 115, 119, 137, 138, 144, 145, 158, 164, 166, 169, 183, 184, 193, 197, 200, 201, 203, 205, 209, 238, 242, 250, 265, 286, 291, 297, 299, 314, 317, 319, 331, 333, 334, 363, 393, 394, 403, 404], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 385, 392, 393, 396, 399, 402, 407], "fashion": [18, 20, 21, 48, 50, 53, 100], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 173], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 49, 52, 59, 60, 75, 115, 119, 137, 138, 144, 145, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293, 391], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 405], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 391], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 73, 283, 287], "tensorpiperpcbackendopt": 20, "_td": [21, 116], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 380, 381, 391, 392], "coordin": [21, 165], "init": [21, 43, 115, 119, 137, 138, 144, 145, 207, 209, 250, 251, 252, 358, 392, 393], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 230, 392, 407], "equat": [21, 79, 119, 207, 260, 261, 296, 299, 321, 393, 395, 405], "exce": [21, 407], "indefinit": [21, 72], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 220, 368, 391, 393, 394], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 322, 397], "jump": [22, 395], "host": [22, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 225, 230, 259, 278], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "_nestedkei": [23, 92, 99, 100], "nestedkei": [23, 25, 26, 27, 28, 29, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 92, 99, 100, 115, 119, 137, 138, 144, 145, 150, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 202, 203, 207, 209, 210, 216, 217, 218, 219, 222, 233, 236, 237, 260, 261, 263, 278, 282, 287, 302, 329, 349, 351], "as_nest": 23, "durat": [23, 404], "meta": [23, 48, 50, 53, 62, 75, 117, 121, 297, 299, 314, 317, 319, 388, 393, 403, 404, 407], "aren": [23, 196, 394], "eventu": [23, 262, 394, 405], "supersed": 23, "recov": [23, 75, 77, 79, 80, 81, 99, 100, 219, 237, 261, 288, 305, 313, 402], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 118, 120], "stride": [23, 43, 115, 119, 137, 138, 144, 145, 209, 223, 224, 226, 227, 235, 250, 392, 403, 409], "jag": 23, "focu": [23, 391, 392, 393, 396, 397, 398, 403], "team": [23, 403, 404, 409], "cat": [23, 291, 298, 300, 301, 313, 318, 320, 322, 323, 403, 407, 409], "arang": [23, 92, 153, 233, 249, 279, 359, 386, 407], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 60, 64, 73, 79, 99, 124, 125, 135, 136, 145, 214, 282, 407], "data_split": 23, "got": [23, 398], "init_kl_coef": 24, "horizon": [24, 129, 130, 146, 147, 221, 247, 393], "kl": [24, 32, 54, 177, 309, 314], "describ": [24, 62, 161, 200, 210, 268, 269, 302, 354, 387, 391, 393, 403, 404, 405, 410], "ziegler": 24, "et": [24, 221], "relax": [24, 349], "penalti": [24, 54, 311, 314], "strai": [24, 54], "greater": [24, 73, 92, 99, 100, 240, 244, 300, 391, 392, 409], "increas": [24, 84, 198, 260, 261, 403, 404], "pull": [24, 407], "toward": [24, 205], "aggress": 24, "kl_coef": [24, 32, 54], "arxiv": [24, 49, 76, 79, 81, 91, 92, 111, 112, 113, 114, 124, 125, 129, 130, 132, 133, 141, 146, 147, 160, 183, 203, 220, 225, 226, 227, 228, 229, 230, 233, 234, 235, 242, 247, 254, 256, 257, 260, 261, 262, 264, 265, 271, 280, 297, 298, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 316, 317, 320, 321, 322, 331, 336, 344, 406], "pdf": [24, 160, 225, 226, 227, 228, 229, 233, 260, 261, 280, 300, 307, 311, 318, 321, 322, 331, 336, 344], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 403, 404], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 177], "newest": 24, "int8": [25, 115, 128, 139, 140, 158], "encod": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 111, 112, 115, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 153, 168, 257, 258, 264, 296, 386, 392, 393, 394, 396, 405, 407], "null": [25, 27, 28, 30, 31, 37, 38, 45, 46, 49, 55, 56, 59, 62, 64, 65, 66, 67, 68, 91, 92, 158], "denot": [25, 404], "nmber": 25, "clariti": 25, "rand": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 124, 125, 131, 135, 136, 154, 157, 166, 169, 185, 210, 221, 247, 283, 297, 298, 300, 301, 302, 304, 305, 306, 313, 315, 317, 318, 320, 322, 323, 405, 409, 410], "assert_is_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "clear_device_": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "is_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 410], "ndarrai": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 119, 260, 261, 290, 349, 403], "ignore_devic": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "arrai": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 54, 55, 56, 62, 64, 65, 66, 67, 68, 91, 115, 119, 120, 137, 138, 144, 145, 170, 238, 239, 242, 243, 391, 403, 407], "np": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 119, 290, 349, 403, 405], "broadcast": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "compliant": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "singleton": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 223, 224, 245, 266, 267], "start_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "end_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "implements_for_spec": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "torch_funct": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "tensor_to_index": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "make_neg_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "convert": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 164, 166, 169, 183, 197, 200, 201, 203, 205, 207, 209, 286, 296, 315, 391, 392, 393, 405, 407], "shortcut": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 405, 410], "ndimens": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 391], "violat": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 386], "proxi": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 249, 258, 283, 387], "project": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 168, 218, 219, 242, 260, 261, 274, 279, 280, 283, 284, 285, 286, 287, 358, 386, 409, 410], "uniformli": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 93, 315, 410], "normal": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 179, 207, 218, 219, 220, 223, 224, 241, 245, 248, 249, 255, 269, 270, 283, 287, 299, 300, 314, 317, 364, 366, 382, 386, 388, 394, 396, 404, 410], "drawn": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 197, 236, 283, 287, 393, 403, 404], "dest": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 183, 203, 205, 286], "to_categor": [25, 26, 29, 33, 39, 40, 41, 42, 47], "to_categorical_spec": [25, 26, 29, 33, 39, 40, 41, 42, 47], "to_numpi": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145], "transformed_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 200, 201, 255, 268, 382], "check_spec_encod": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "to_one_hot": [25, 26, 29, 33, 39, 40, 41, 42, 47], "hot": [25, 26, 29, 33, 39, 40, 41, 42, 47, 111, 112, 118, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 153, 154, 168, 233, 258, 263, 279, 280, 284, 285, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 394], "categ": [25, 26, 29, 33, 41, 42, 283], "categ_sampl": [25, 26, 29, 33, 41, 42, 47], "onehot_sampl": [25, 26, 29, 33, 41, 42], "to_one_hot_spec": [25, 26, 29, 33, 39, 40, 41, 42, 47], "categoricalbox": [25, 26, 29, 33, 41, 42, 47, 138, 396, 403, 404, 410], "type_check": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "update_mask": [25, 26, 29, 33, 39, 40, 41, 42, 47], "outcom": [25, 26, 29, 33, 39, 40, 41, 42, 47, 231, 268, 315, 403], "disabl": [25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 115, 119, 137, 138, 144, 145, 201, 209, 241, 270, 349, 391, 403], "unmask": [25, 26, 29, 33, 39, 40, 41, 42, 47], "ts": [25, 26, 29, 33, 39, 40, 41, 42, 47], "upper": [27, 97, 178], "continuousbox": [27, 30, 64, 115, 119, 137, 138, 144, 145, 214, 393, 394, 403, 404, 405, 409, 410], "inst": 29, "descript": [30, 146, 156, 392, 393], "akin": 30, "unnam": 30, "compositespec": [30, 384, 405, 410], "constraint": [30, 131, 269, 393, 404], "pixels_spec": 30, "observation_vector_spec": 30, "composite_spec": 30, "observation_vector": [30, 161, 391], "_nodefault": [30, 31, 37, 48, 50, 53, 56], "is_empti": [30, 31, 37, 56, 405], "include_nest": [30, 31, 37, 56], "leaves_onli": [30, 31, 37, 56], "is_leaf": [30, 31, 37, 56], "_compositespecitemsview": [30, 31, 37, 56], "children": [30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 209], "_compositespeckeysview": [30, 31, 37, 56], "reflect": [30, 31, 37, 56, 120, 139, 140, 206, 216, 315, 371, 392, 393, 394, 404], "lock_": [30, 31, 37, 56], "recurs": [30, 31, 37, 43, 56, 69, 70, 115, 119, 137, 138, 144, 145, 209, 315], "succeed": [30, 31, 37, 56], "selected_kei": [30, 31, 37, 56, 192, 391], "unlock_": [30, 31, 37, 56], "unlock": [30, 31, 37, 48, 50, 53, 56], "_compositespecvaluesview": [30, 31, 37, 56], "multipli": [32, 238, 242, 297, 298, 299, 300, 306, 314, 316, 317, 318, 320, 366, 391, 403], "calcul": [32, 54, 188, 238, 297, 299, 304, 314, 317, 319, 322], "shift_kei": [34, 36, 44, 57], "is_full_kei": [34, 36, 44, 57], "is_ful": [34, 36, 44, 57], "tempfil": [34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 378, 391, 392, 403, 407], "register_save_hook": [34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "temporarydirectori": [34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 391, 392, 403, 407], "tmpdir": [34, 49, 52, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 391, 392, 403], "rb_load": [34, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "register_load_hook": [34, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "persist": [35, 43, 115, 119, 137, 138, 144, 145, 201, 209, 216, 300, 320], "filesystem": [35, 407], "ted2nest": [36, 384], "stackedcomposit": [37, 384], "nvec": [39, 41], "remove_singleton": 39, "cardin": [39, 41, 233, 263, 279, 280, 285, 393], "ax": [39, 253, 254, 403], "m": [39, 43, 115, 119, 137, 138, 144, 145, 168, 209, 222, 287, 386, 392, 405], "Not": [39, 40, 52, 111, 112, 124, 240, 244], "neither": [39, 40, 41, 42, 79, 405], "use_regist": 41, "mone_hot": [41, 42], "boxlist": [41, 42], "gamma": [43, 188, 209, 247, 297, 298, 300, 301, 302, 304, 306, 307, 308, 310, 313, 315, 317, 318, 319, 320, 322, 323, 324, 325, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 378, 387, 391, 392, 393, 403, 404, 409], "sutton": [43, 387, 403, 404], "1988": 43, "tempor": [43, 240, 244, 247, 332, 333, 338, 339], "44": [43, 391, 392, 394, 403, 404, 405], "discount": [43, 79, 116, 188, 209, 298, 304, 307, 308, 310, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 387, 392, 393, 403, 404], "ahead": [43, 209, 410], "bias": [43, 238, 239, 242, 243, 293, 387, 391], "mitig": 43, "pleas": [43, 77, 115, 118, 119, 137, 138, 139, 140, 144, 145, 157, 160, 198, 201, 209, 250, 251, 252, 300, 320, 385], "multisteptransform": [43, 384], "99": [43, 188, 207, 247, 310, 325, 330, 337, 378, 391, 392, 393, 397, 400, 403, 404, 405, 409], "add_modul": [43, 115, 119, 137, 138, 144, 145, 209], "child": [43, 115, 119, 137, 138, 144, 145, 209, 392], "fn": [43, 51, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 209, 255, 380, 381], "init_weight": [43, 115, 119, 137, 138, 144, 145, 209], "fill_": [43, 115, 119, 137, 138, 144, 145, 209, 392, 394, 410], "net": [43, 115, 119, 137, 138, 144, 145, 209, 227, 229, 232, 235, 251, 297, 298, 300, 306, 313, 317, 318, 319, 320, 378, 392, 405, 406, 409], "in_featur": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 223, 224, 226, 227, 228, 229, 235, 245, 250, 251, 253, 254, 275, 286, 294, 302, 304, 396, 397, 409], "out_featur": [43, 115, 119, 131, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 221, 223, 224, 226, 227, 228, 229, 234, 235, 240, 244, 245, 247, 250, 251, 253, 254, 275, 279, 286, 294, 302, 304, 386, 391, 394, 396, 397, 400, 409], "bia": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 220, 223, 224, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 251, 253, 254, 255, 260, 261, 286, 293, 295, 296, 300, 315, 320, 387, 391, 392, 393, 394, 404, 409], "requires_grad": [43, 111, 112, 115, 119, 137, 138, 144, 145, 177, 201, 209, 300, 320], "bfloat16": [43, 115, 119, 137, 138, 144, 145, 209], "datatyp": [43, 115, 119, 137, 138, 144, 145, 209, 407], "member": [43, 115, 119, 137, 138, 144, 145, 209, 315, 351], "xdoctest": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 300, 315, 320], "buf": [43, 115, 119, 137, 138, 144, 145, 209], "20l": [43, 115, 119, 137, 138, 144, 145, 209, 315], "1l": [43, 115, 119, 137, 138, 144, 145, 209, 315], "5l": [43, 115, 119, 137, 138, 144, 145, 209, 315], "__call__": [43, 51, 115, 119, 137, 138, 144, 145, 209, 287, 388], "doubl": [43, 115, 119, 137, 138, 144, 145, 164, 166, 167, 169, 183, 197, 200, 201, 203, 205, 209, 286, 302, 307, 312, 318, 321, 329, 391, 392, 393, 394, 410], "eval": [43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 386, 391, 392, 393], "evalu": [43, 115, 119, 120, 129, 130, 137, 138, 144, 145, 201, 209, 231, 248, 249, 258, 270, 318, 373, 374, 392, 393, 400], "dropout": [43, 115, 119, 137, 138, 144, 145, 201, 209, 222, 238, 240, 242, 244, 245, 386, 394], "batchnorm": [43, 115, 119, 137, 138, 144, 145, 201, 209, 220], "comparison": [43, 115, 119, 137, 138, 144, 145, 201, 209, 315, 391, 392], "similar": [43, 48, 50, 52, 53, 79, 115, 119, 137, 138, 139, 140, 144, 145, 164, 183, 197, 200, 201, 203, 204, 205, 207, 209, 275, 277, 283, 286, 287, 387, 391, 392, 393, 394, 396, 397, 398, 399, 405, 407, 410], "extra_repr": [43, 115, 119, 137, 138, 144, 145, 209], "nontermin": 43, "original_reward": 43, "newli": [43, 115, 119, 137, 138, 144, 145], "OR": 43, "get_buff": [43, 115, 119, 137, 138, 144, 145, 209], "get_submodul": [43, 115, 119, 137, 138, 144, 145, 209], "qualifi": [43, 115, 119, 137, 138, 144, 145, 209], "referenc": [43, 115, 119, 137, 138, 144, 145, 209], "attributeerror": [43, 115, 119, 137, 138, 144, 145, 209], "resolv": [43, 115, 119, 137, 138, 144, 145, 209], "someth": [43, 115, 119, 128, 137, 138, 144, 145, 209, 385, 392, 393, 405, 410], "get_extra_st": [43, 115, 119, 137, 138, 144, 145, 207, 209], "set_extra_st": [43, 115, 119, 137, 138, 144, 145, 207, 209], "picklabl": [43, 115, 119, 137, 138, 144, 145, 207, 209], "pickl": [43, 115, 119, 137, 138, 144, 145, 207, 209], "get_paramet": [43, 115, 119, 137, 138, 144, 145, 209], "net_b": [43, 115, 119, 137, 138, 144, 145, 209], "net_c": [43, 115, 119, 137, 138, 144, 145, 209], "conv": [43, 115, 119, 137, 138, 144, 145, 209, 223, 224, 392], "conv2d": [43, 115, 119, 137, 138, 144, 145, 209, 224, 226, 227, 235, 250, 409], "kernel_s": [43, 115, 119, 137, 138, 144, 145, 209, 223, 224, 226, 227, 235, 250, 256, 392, 409], "diagram": [43, 115, 119, 137, 138, 144, 145, 209], "degre": [43, 115, 119, 137, 138, 144, 145, 209], "named_modul": [43, 115, 119, 137, 138, 144, 145, 209], "o": [43, 115, 119, 137, 138, 144, 145, 209, 243], "half": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 391], "ipu": [43, 115, 119, 137, 138, 144, 145, 209], "strict": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "descend": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "get_swap_module_params_on_convers": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "enforc": [43, 98, 115, 119, 137, 138, 144, 145, 201, 209, 288, 300, 320, 405], "preserv": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "missing_kei": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "unexpected_kei": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "namedtupl": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "l": [43, 115, 119, 137, 138, 144, 145, 209, 238, 242, 330, 393, 405], "idx": [43, 115, 119, 137, 138, 144, 145, 209], "mtia": [43, 115, 119, 137, 138, 144, 145, 209], "named_buff": [43, 115, 119, 137, 138, 144, 145, 209], "remove_dupl": [43, 115, 119, 137, 138, 144, 145, 209, 315], "prepend": [43, 115, 119, 137, 138, 144, 145, 209, 315], "running_var": [43, 115, 119, 137, 138, 144, 145, 209], "named_children": [43, 115, 119, 137, 138, 144, 145, 209], "conv4": [43, 115, 119, 137, 138, 144, 145, 209], "conv5": [43, 115, 119, 137, 138, 144, 145, 209], "memo": [43, 115, 119, 137, 138, 144, 145, 209], "named_paramet": [43, 115, 119, 137, 138, 144, 145, 177, 209, 315], "register_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "removablehandl": [43, 115, 119, 137, 138, 144, 145, 209], "favor": [43, 115, 119, 137, 138, 144, 145, 209, 393], "register_full_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_buff": [43, 115, 119, 137, 138, 144, 145, 209], "running_mean": [43, 115, 119, 137, 138, 144, 145, 209], "alongsid": [43, 115, 119, 137, 138, 144, 145, 209, 399], "num_featur": [43, 115, 119, 137, 138, 144, 145, 209, 220], "register_forward_hook": [43, 115, 119, 137, 138, 144, 145, 209, 233, 263], "with_kwarg": [43, 115, 119, 137, 138, 144, 145, 209], "always_cal": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_forward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "regardless": [43, 115, 119, 137, 138, 144, 145, 209, 299, 314, 317], "register_forward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "invok": [43, 115, 119, 137, 138, 144, 145, 209], "And": [43, 115, 119, 137, 138, 144, 145, 209, 397], "forward_pr": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_forward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "grad_input": [43, 115, 119, 137, 138, 144, 145, 209], "grad_output": [43, 115, 119, 137, 138, 144, 145, 209], "subsequ": [43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 156, 209, 394, 403], "technic": [43, 115, 119, 137, 138, 144, 145, 209, 392, 394, 396], "caller": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_full_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_full_backward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "backward_pr": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_full_backward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_load_state_dict_post_hook": [43, 115, 119, 137, 138, 144, 145, 209], "incompatible_kei": [43, 115, 119, 137, 138, 144, 145, 209], "thrown": [43, 55, 115, 119, 137, 138, 144, 145, 209, 407], "register_load_state_dict_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "local_metadata": [43, 115, 119, 137, 138, 144, 145, 209], "error_msg": [43, 115, 119, 137, 138, 144, 145, 209], "noqa": [43, 115, 119, 137, 138, 144, 145, 209], "b950": [43, 115, 119, 137, 138, 144, 145, 209], "register_modul": [43, 115, 119, 137, 138, 144, 145, 209, 388], "alia": [43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 115, 119, 137, 138, 144, 145, 209], "register_paramet": [43, 115, 119, 137, 138, 144, 145, 209], "register_state_dict_post_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_state_dict_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "keep_var": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "requires_grad_": [43, 115, 119, 137, 138, 144, 145, 209], "autograd": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320], "freez": [43, 115, 119, 137, 138, 144, 145, 207, 209], "finetun": [43, 115, 119, 137, 138, 144, 145, 209], "gan": [43, 115, 119, 137, 138, 144, 145, 209], "set_submodul": [43, 115, 119, 137, 138, 144, 145, 209], "overid": [43, 115, 119, 137, 138, 144, 145, 209], "share_memori": [43, 115, 116, 119, 137, 138, 144, 145, 209, 391], "share_memory_": [43, 115, 119, 137, 138, 144, 145, 209, 409], "destin": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 159, 166, 167, 169, 201, 203, 207, 209, 216, 300, 320, 351], "averag": [43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 260, 261, 300, 308, 309, 320, 366, 391, 393], "shallow": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 320, 394], "detach": [43, 115, 119, 137, 138, 144, 145, 201, 209, 300, 311, 315, 320, 322, 331, 332, 333, 334, 391], "non_block": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 394], "memory_format": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "channels_last": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "unchang": [43, 115, 119, 137, 138, 144, 145, 164, 168, 183, 197, 200, 201, 203, 205, 209, 236, 286, 365, 391, 407], "tri": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 399], "pin": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "4d": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "ignore_w": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "1913": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "3420": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "5113": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "2325": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "torch_doctest_cuda1": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "gpu1": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "1914": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "5112": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 405], "2324": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "float16": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 239, 243, 286], "cdoubl": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "3741": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "j": [43, 49, 91, 92, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 388, 397], "2382": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "5593": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286, 405], "4443": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "complex128": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "6122": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "1150": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 286], "to_empti": [43, 115, 119, 137, 138, 144, 145, 209], "dst_type": [43, 115, 119, 137, 138, 144, 145, 209], "xpu": [43, 115, 119, 137, 138, 144, 145, 209], "set_to_non": [43, 115, 119, 137, 138, 144, 145, 209], "row": [44, 58, 124, 125], "shae": 45, "nontensordata": [45, 73, 79, 135, 136, 349], "nontensor": [46, 384], "one_hot": [47, 233, 249, 263], "one_hot_sampl": 47, "chosen_data": [48, 82], "rewarddata": [48, 82, 384], "rejected_data": [48, 82], "from_dataset": [48, 50, 82], "dataset_nam": [48, 50, 54, 63, 82, 134], "max_length": [48, 50, 51, 61, 63, 82, 400], "550": [48, 50, 54, 63, 82, 99, 100, 405], "root_dir": [48, 50, 63, 82], "from_disk": [48, 50, 63, 82], "carperai": [48, 50, 54, 63], "openai_summarize_comparison": [48, 50, 63], "sequen": [48, 50], "load_from_disk": [48, 50, 63, 82], "load_dataset": [48, 50, 63, 82], "attention_mask": [48, 50, 51, 53, 54, 61, 63, 82], "92534": 48, "input_id": [48, 50, 51, 53, 54, 61, 63, 82], "end_scor": [48, 53, 54, 82], "sub_data": [48, 50], "from_tensordict": [48, 50, 53], "non_tensordict": [48, 50, 53], "getattr": [48, 50, 53], "tensorclass": [48, 50, 53, 82, 86, 87, 107], "pathlib": [48, 50, 53, 86], "load_memmap": [48, 50, 53], "load_": [48, 50, 53], "load_memmap_": [48, 50, 53], "fetch": [48, 50, 53, 111, 112, 113, 114, 177, 396, 406, 407, 410], "fromkei": [48, 50, 53], "memmap": [48, 50, 53, 86, 137, 144, 207, 351, 353, 365, 407], "saved_td": [48, 50, 53], "td_load": [48, 50, 53], "fake": [48, 50, 53, 115, 119, 137, 138, 144, 145, 391, 392], "_subclass": [48, 50, 53], "faketensormod": [48, 50, 53], "faketensor": [48, 50, 53], "from_flatten": [48, 50, 53], "attemptedli": [48, 50, 53], "copy_exist": [48, 50, 53], "return_earli": [48, 50, 53], "share_non_tensor": [48, 50, 53], "existsok": [48, 50, 53, 86], "mimic": [48, 50, 53, 115, 119, 137, 138, 144, 145], "cross": [48, 50, 53, 221], "anymor": [48, 50, 53, 201, 286], "tensordictfutur": [48, 50, 53], "serialis": [48, 50, 53], "deepli": [48, 50, 53], "insid": [48, 50, 53, 137, 410], "memmap_": [48, 50, 53, 207], "memmap_lik": [48, 50, 53], "contentless": [48, 50, 53], "1_000_000": [48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 391, 394, 403], "alloc": [48, 50, 53, 87, 248, 249, 391], "memmap_refresh_": [48, 50, 53], "refresh": [48, 50, 53, 400, 403, 404], "saved_path": [48, 50, 53], "setattr": [48, 50, 53], "tent": [48, 50, 53, 63], "to_tensordict": [48, 50, 53, 394], "alpha": [49, 59, 91, 92, 223, 224, 226, 227, 228, 229, 235, 250, 298, 300, 306, 316, 318, 320, 322, 391, 407, 409], "ep": [49, 59, 91, 92, 179, 207, 220, 260, 261, 299, 321, 366, 391, 392, 394, 397, 400], "1e": [49, 59, 91, 92, 179, 207, 220, 231, 234, 255, 268, 391, 392, 393, 404], "08": [49, 59, 91, 92, 391, 392, 393, 403, 405, 406], "pin_memori": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 182, 391, 409], "schaul": [49, 91, 92], "quan": [49, 91, 92], "antonogl": [49, 91, 92], "silver": [49, 91, 92], "2015": [49, 91, 92], "ab": [49, 76, 79, 81, 91, 92, 111, 112, 113, 114, 124, 125, 129, 130, 132, 133, 141, 146, 147, 159, 183, 203, 207, 220, 225, 230, 234, 235, 242, 247, 254, 256, 257, 262, 264, 265, 271, 297, 298, 302, 303, 304, 305, 308, 309, 310, 312, 313, 316, 317, 320, 406], "1511": [49, 91, 92, 235], "05952": [49, 91, 92], "expon": [49, 59, 91, 92], "\u03b1": [49, 59, 91, 92], "delta": [49, 59, 91, 92, 238, 242, 268, 283, 287, 384, 387, 403], "1_000": [49, 52, 59, 60, 403, 407], "merg": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 405], "mini": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 404], "decid": [49, 52, 59, 60, 403, 409], "meth": [49, 52, 59, 60, 240, 244, 315, 405], "incompat": [49, 52, 59, 60, 319, 407], "drop_last": [49, 52, 59, 60, 98, 100], "notion": [49, 52, 59, 60], "caution": [49, 52, 59, 60, 98, 211, 410], "codebas": [49, 52, 59, 60, 405], "approach": [49, 52, 59, 60, 179, 220, 250, 251, 322, 391, 393, 397, 398, 403, 410], "return_info": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 407], "tensordictprioritizedreplaybuff": [49, 384, 409], "simplifi": [49, 396, 405, 407], "_weight": [49, 59, 91, 92, 407, 409], "update_prior": [49, 91, 92, 365, 388, 392, 407, 409], "36278465": 49, "invert": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 295, 393], "tqdm": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 368, 391, 393, 394, 403, 404, 405], "randomsampl": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 391, 403], "td_error": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 300, 301, 302, 304, 305, 306, 307, 313, 315, 318, 320, 322, 323, 329, 391, 397, 407, 409], "update_tensordict_prior": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 391, 407, 409], "insert_transform": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 155, 201], "insert": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 94, 95, 105, 106, 109, 110, 155, 164, 201, 202], "set_sampl": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "set_storag": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "set_writ": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "write_count": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "prompt_rindex": [50, 51, 54], "promptdatatldr": 50, "116722": 50, "prompt": [51, 54], "return_tensordict": [51, 61], "recip": [51, 115, 119, 137, 138, 144, 145, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293], "text": [51, 54, 61, 77, 238, 239, 242, 243, 260, 261, 393], "tensodict": [51, 61], "orign": [51, 61], "valid_sampl": 51, "eough": 51, "toknen": 51, "meet": 51, "criterion": 51, "autotoken": [51, 61, 63], "from_pretrain": [51, 54, 61], "gpt2": [51, 54, 61, 63, 225, 230, 259], "pad_token": [51, 61], "eos_token": 51, "enough": [51, 407], "inde": [51, 168, 393, 405], "storagecheckpointerbas": [52, 101], "roundrobinwrit": [52, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81], "depth": [52, 62, 115, 119, 131, 137, 138, 141, 144, 145, 221, 223, 224, 226, 227, 228, 229, 234, 235, 245, 247, 250, 251, 252, 256, 257, 279, 386, 392, 395, 397, 398, 402, 403, 404, 407], "_pytre": [52, 407], "tree_map": [52, 407], "did": [52, 206, 337, 392, 393, 398, 407, 410], "assert0": [52, 407], "ref_model": 54, "reward_model": [54, 292], "max_new_token": 54, "score_clip": 54, "kl_schedul": 54, "klcontrollerbas": 54, "num_step": 54, "causal": 54, "sentenc": 54, "frozen": [54, 177, 207], "gpt2rewardmodel": 54, "get_dataload": [54, 384], "promptdata": [54, 384], "gpt2lmheadmodel": 54, "dl": 54, "block_siz": [54, 82], "tensorclass_typ": [54, 82], "openai_summarize_tldr": 54, "config_class": 54, "model_path": 54, "rollout_from_model": 54, "rollout_from_data": 54, "600": [54, 399, 405, 407], "reward_kl": [54, 177], "reward_raw": 54, "sample_log_prob": [54, 275, 276, 277, 283, 287, 289, 317, 393, 396, 404, 409], "create_rollout_td": 54, "log_prob": [54, 231, 248, 249, 258, 270, 287, 300], "log_ratio": 54, "replic": [54, 387], "rindex": 54, "eo": 54, "term": [54, 177, 242, 243, 253, 254, 296, 297, 306, 370, 392, 393, 395, 396, 404], "generation_config": 54, "generationconfig": 54, "ti": [54, 340, 341, 342, 343, 345, 346, 347, 348, 392], "log_probs_gen": 54, "logprobs_of_label": 54, "heterogen": [55, 56, 128, 139, 140, 211, 250, 251, 391, 392], "220": [57, 405], "priority_kei": [59, 60, 74, 91, 300, 302, 305, 306, 307, 313, 315, 318, 320, 322, 323, 329, 407, 409], "reduct": [59, 91, 92, 105, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 314, 316, 317, 318, 319, 320, 322, 323], "prioritizedreplaybuff": [59, 384, 409], "min": [59, 91, 92, 105, 260, 261, 270, 298, 299, 300, 306, 316, 318, 320, 392, 393], "median": [59, 91, 92, 105, 124, 125, 153, 283, 287], "include_info": [59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81], "huggingfac": [61, 76, 81, 281], "co": [61, 170, 405], "pad_trunc": 61, "am": 61, "me": 61, "reassur": 61, "ok": 61, "tensor_spec": [62, 154, 210, 217, 305, 306, 317, 319], "primarili": [62, 184, 396], "dataclass": [62, 315], "educ": 62, "guess": 62, "knowledg": [62, 115, 119, 137, 138, 144, 145, 397, 399], "tokenizer_fn": 63, "tensordicttoken": [63, 384], "pre_tokenization_hook": 63, "valid_s": 63, "tokenizer_class": 63, "tokenizer_model_nam": 63, "tokein": 63, "elementwis": 63, "vocabulari": 63, "loader": [63, 393], "185068": 63, "dataset_to_tensordict": 63, "data_dir": 63, "batch_dim": [63, 382], "valid_mask_kei": 63, "conver": 63, "batch_dimens": 63, "filder": 63, "from_dict": 63, "data_memmap": 63, "recurse_through_entri": 70, "recurse_through_stack": 70, "consolid": 70, "dataset_id": [73, 75, 76, 77, 79, 80, 81], "num_proc": 73, "slice_len": [73, 79, 92, 99, 100, 351], "strict_len": 73, "arari": 73, "2600": 73, "million": [73, 394], "consequ": [73, 84, 242, 398], "50x10": 73, "available_dataset": [73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100], "ataridqn": 73, "immutabledatasetwrit": [73, 74, 75, 76, 77, 78, 79, 80, 81], "shorter": [73, 79, 92, 99, 100], "Be": [73, 79, 92, 99, 100], "game_nam": 73, "krull": 73, "1d": [73, 91, 92, 99, 100, 105], "cheapli": 73, "invalid_rang": 73, "999998": 73, "999999": 73, "add_count": 73, "84": [73, 187, 392, 394, 403, 405], "valueestim": [73, 297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 325, 329, 384, 387, 391, 403, 404], "convolut": [73, 223, 224, 226, 227, 250, 266, 396], "2657628": 73, "2657629": 73, "2657630": 73, "2657631": 73, "2657632": 73, "2657633": 73, "2657634": 73, "2657635": 73, "2657636": 73, "2657637": 73, "2657638": 73, "2657639": 73, "2657640": 73, "2657641": 73, "2657642": 73, "2657643": 73, "2657644": 73, "2657645": 73, "2657646": 73, "2657647": 73, "2657648": 73, "2657649": 73, "2657650": 73, "2657651": 73, "2657652": 73, "2657653": 73, "2657654": 73, "2657655": 73, "2657656": 73, "2657657": 73, "2657658": 73, "2657659": 73, "2657660": 73, "2657661": 73, "2657662": 73, "2657663": 73, "2657664": 73, "2657665": 73, "2657666": 73, "2657667": 73, "2657668": 73, "2657669": 73, "2657670": 73, "2657671": 73, "2657672": 73, "2657673": 73, "2657674": 73, "2657675": 73, "2657676": 73, "2657677": 73, "2657678": 73, "2657679": 73, "2657680": 73, "2657681": 73, "2657682": 73, "2657683": 73, "2657684": 73, "2657685": 73, "2657686": 73, "2657687": 73, "2657688": 73, "2657689": 73, "2657690": 73, "2657691": 73, "1995687": 73, "1995688": 73, "1995689": 73, "1995690": 73, "1995691": 73, "1995692": 73, "1995693": 73, "1995694": 73, "1995695": 73, "1995696": 73, "1995697": 73, "1995698": 73, "1995699": 73, "1995700": 73, "1995701": 73, "1995702": 73, "1995703": 73, "1995704": 73, "1995705": 73, "1995706": 73, "1995707": 73, "1995708": 73, "1995709": 73, "1995710": 73, "1995711": 73, "1995712": 73, "1995713": 73, "1995714": 73, "1995715": 73, "1995716": 73, "1995717": 73, "1995718": 73, "1995719": 73, "1995720": 73, "1995721": 73, "1995722": 73, "1995723": 73, "1995724": 73, "1995725": 73, "1995726": 73, "1995727": 73, "1995728": 73, "1995729": 73, "1995730": 73, "1995731": 73, "1995732": 73, "1995733": 73, "1995734": 73, "1995735": 73, "1995736": 73, "1995737": 73, "1995738": 73, "1995739": 73, "1995740": 73, "1995741": 73, "1995742": 73, "1995743": 73, "1995744": 73, "1995745": 73, "1995746": 73, "1995747": 73, "1995748": 73, "1995749": 73, "1995750": 73, "left": [73, 75, 79, 92, 99, 157, 164, 165, 166, 167, 171, 177, 183, 185, 186, 192, 195, 198, 200, 203, 205, 209, 236, 250, 392, 393, 398, 399], "untouch": [73, 79, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "_max_run": 73, "dataset_asterix": 73, "asterix": 73, "dataset_pong": 73, "sample_from_al": [73, 94, 97], "buffer_id": [73, 97, 103], "hidden": [73, 137, 144, 159, 226, 234, 238, 239, 240, 242, 243, 244, 256, 257, 264, 265, 275, 276, 277, 278, 286, 289, 299, 314, 317, 386, 394, 402, 409], "data_path": [73, 74, 75, 76, 77, 78, 79, 80, 81], "data_path_root": [73, 74, 75, 76, 77, 78, 79, 80, 81], "delet": [73, 74, 75, 76, 77, 78, 79, 80, 81, 161, 358], "chunksiz": [73, 74, 75, 76, 77, 78, 79, 80, 81], "pool": [73, 74, 75, 76, 77, 78, 79, 80, 81, 198], "max_tasks_per_child": [73, 74, 75, 76, 77, 78, 79, 80, 81], "worker_thread": [73, 74, 75, 76, 77, 78, 79, 80, 81], "index_with_gener": [73, 74, 75, 76, 77, 78, 79, 80, 81], "pbar": [73, 74, 75, 76, 77, 78, 79, 80, 81, 391, 393, 394, 403, 404, 405], "num_fram": [73, 74, 75, 76, 77, 78, 79, 80, 81], "unitari": [73, 74, 75, 76, 77, 78, 79, 80, 81, 405], "minariexperiencereplai": [73, 74, 75, 76, 78, 79, 80, 81], "1000000": [73, 74, 75, 76, 77, 78, 79, 80, 81], "distance_from_origin": [73, 74, 75, 76, 77, 78, 79, 80, 81], "forward_reward": [73, 74, 75, 76, 77, 78, 79, 80, 81], "qpo": [73, 74, 75, 76, 77, 78, 79, 80, 81], "qvel": [73, 74, 75, 76, 77, 78, 79, 80, 81], "reward_ctrl": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "reward_forward": [73, 74, 75, 76, 77, 78, 79, 80, 81], "reward_surv": [73, 74, 75, 76, 77, 78, 79, 80, 81], "x_posit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "x_veloc": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "y_posit": [73, 74, 75, 76, 77, 78, 79, 80, 81], "y_veloc": [73, 74, 75, 76, 77, 78, 79, 80, 81], "achieved_go": [73, 74, 75, 76, 77, 78, 79, 80, 81], "desired_go": [73, 74, 75, 76, 77, 78, 79, 80, 81], "27": [73, 74, 75, 76, 77, 78, 79, 80, 81, 111, 112, 137, 144, 391, 392, 403, 404, 405, 406], "_collate_id": [73, 74, 75, 76, 77, 78, 79, 80, 81], "0x120e21dc0": [73, 74, 75, 76, 77, 78, 79, 80, 81], "cattensor": [73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 391, 402, 405, 410], "cat_tensor": [73, 74, 75, 76, 77, 78, 79, 80, 81], "cat_next_tensor": [73, 74, 75, 76, 77, 78, 79, 80, 81], "new_storag": [73, 74, 75, 76, 77, 78, 79, 80, 81], "31": [73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 125, 390, 392, 394, 403, 405, 406, 408], "full_storag": [73, 74, 75, 76, 77, 78, 79, 80, 81], "0x168406fc0": [73, 74, 75, 76, 77, 78, 79, 80, 81], "from_env": 75, "use_truncated_as_don": 75, "direct_download": 75, "terminate_on_end": 75, "env_kwarg": [75, 80, 81, 157, 380, 381, 391], "reconstruct": [75, 99, 100, 309, 391, 410], "get_dataset": 75, "qlearning_dataset": 75, "fewer": [75, 92, 99], "unexpectedli": 75, "traj_split": 75, "observationnorm": [75, 207, 382, 391, 392, 393, 394, 409], "maze2d": 75, "umaz": 75, "loc": [75, 115, 119, 137, 138, 144, 145, 177, 179, 190, 207, 241, 255, 269, 270, 275, 276, 277, 283, 287, 289, 297, 298, 300, 313, 317, 318, 319, 320, 372, 382, 386, 391, 392, 393, 394, 396, 404, 409], "gen": 76, "dgrl": 76, "accompani": [76, 157, 195], "gap": 76, "2312": 76, "05742": 76, "gen_dgrl": 76, "procgen": 76, "bigfish": 76, "bossfight": 76, "1m_e": 76, "1m_": 76, "comma": 76, "npy": 76, "extract": [76, 156, 281, 391, 393, 409], "mmap": [76, 80, 81], "minut": [76, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "internet": [76, 81], "connect": [76, 81], "minari": 77, "websit": [77, 79], "currenrtli": 77, "minari_data": 77, "door": 77, "torchrl_logg": [77, 400], "28": [77, 250, 391, 392, 405, 406], "door_body_po": 77, "dua": 78, "graff": 78, "2017": 78, "uci": 78, "archiv": 78, "ic": 78, "edu": 78, "ml": 78, "sklearn": [78, 134], "adult_num": [78, 134], "adult_onehot": [78, 134], "mushroom_num": [78, 134], "mushroom_onehot": [78, 134], "covertyp": [78, 134], "shuttl": [78, 134], "magic": [78, 134, 395], "shuffl": [79, 98, 100, 404], "embodi": [79, 406], "institut": 79, "demonstr": [79, 393, 398, 403, 404, 405, 407, 410], "527": [79, 405], "skill": 79, "160266": 79, "googl": [79, 80, 111, 112, 129, 130, 135, 136, 220, 393, 394, 403, 404], "open_x_embodi": 79, "2310": [79, 141], "08864": 79, "language_instruct": 79, "get_non_tensor": 79, "nor": 79, "insuffici": 79, "chosen": [79, 146, 147, 196, 197, 262, 263, 271, 285, 351, 386, 399], "openx": 79, "__will": 79, "change__": 79, "randomli": [79, 98, 145, 178, 179, 197, 236, 283, 287, 396, 403, 404, 405, 407], "crop": [79, 162, 184, 351], "modal": [79, 391], "cmu_stretch": [79, 351], "is_init": [79, 81, 159, 176, 240, 244, 260, 261, 282, 294, 394], "language_embed": 79, "512": [79, 235, 391, 392, 405], "lift": 79, "green": [79, 403], "garbag": 79, "lid": 79, "roboset": 80, "h5": [80, 81, 84], "roboh": [80, 141], "concis": [80, 397], "75": [80, 391, 392, 394, 405, 406], "totensor": 81, "image_s": 81, "v": [81, 207, 238, 239, 242, 243, 275, 305, 313, 320, 386, 391, 392], "npz": 81, "2206": [81, 132, 133], "04779": [81, 298, 304], "vd4rl": 81, "squar": [81, 162, 165, 241, 269, 270, 351], "rectangular": [81, 223, 224], "walker_walk": 81, "64px": 81, "height": [81, 162, 165, 187], "veloc": [81, 113, 114, 115, 119, 137, 138, 144, 145, 160, 403, 404, 405, 410], "infinit": [82, 129, 130, 146, 147, 398, 407], "block": [82, 85, 110, 386, 394, 403], "pairwisedataset": [82, 384], "256": [82, 129, 130, 230, 392, 393, 403, 404, 405], "checkpoint_fil": 84, "h5_kwarg": 84, "iff": 84, "suffix": [84, 364], "h5py": 84, "create_dataset": 84, "temporarili": [84, 211, 398, 407], "immut": [85, 115, 119, 137, 144, 186, 201], "piec": [85, 95, 106, 109, 110, 391, 392, 393, 399, 403, 404, 405, 407], "scratch_dir": [86, 391, 407], "sent": [86, 87, 107, 207], "mistak": [86, 87, 107], "overewritten": 86, "tensorstoragecheckpoint": 86, "main_ckpt_dir": 86, "rb_memmap": 86, "10_000_000": 86, "myclass": [86, 87, 107], "foo": [86, 87, 107, 278, 407, 410], "bar": [86, 87, 107, 278, 361, 362, 364, 368, 388, 392], "attach": [86, 87, 88, 101, 103, 107, 392], "entiti": [86, 87, 88, 101, 103, 107], "zero_": [87, 107, 214], "liststoag": 89, "max_capac": [91, 92, 391, 407], "max_priority_within_buff": [91, 92], "data_0": 91, "data_1": 91, "smoothen": 91, "tdrb": 91, "pack": [91, 238, 242, 393, 395, 410], "nd": [91, 92], "sum_tre": [91, 92], "min_tre": [91, 92], "end_kei": [92, 99, 100], "cache_valu": [92, 99, 100], "closer": 92, "readili": [92, 99, 100], "conjunct": [92, 99, 100, 392], "Will": [92, 99, 132, 351], "buffer0": [92, 99], "immutablewrit": [92, 99], "buffer1": [92, 99], "other_sampl": [92, 99], "short": [92, 99, 100, 111, 112, 124, 125, 137, 211, 242, 243, 392, 393, 395, 396, 404, 407], "tolist": 92, "120110917137936e": 92, "06": [92, 231, 268, 391, 392, 393, 403, 405, 406], "storageensembl": [94, 97], "samplerensembl": 94, "writerensembl": [94, 103], "num_buffer_sampl": [94, 97], "ensembl": [94, 97, 103, 104, 110, 286, 318], "forbidden": 94, "collat": 94, "0x13a2ef430": 94, "0x13a2f9310": 94, "interpol": [94, 187, 392, 394], "interpolationmod": [94, 394], "bilinear": [94, 187, 394], "0x13a2f9220": 94, "0x13a2f9f70": 94, "0x13a2d9b50": 94, "0x13a2f95b0": 94, "0x128648260": 94, "kw": [95, 106], "roundrobin": [95, 106], "incomplet": [98, 100], "fresh": 98, "haven": [98, 406], "remain": [98, 159, 167, 168, 177, 196, 254, 397], "draw": [98, 236], "slicesamplerwithoutreplac": [99, 407], "320": [99, 100, 113, 114, 392, 405, 410], "700": [99, 100], "uniqu": [99, 100, 129, 130, 160, 170, 196, 197, 198, 282, 358, 398, 407], "dataid": [99, 100], "__len__": 101, "rank_kei": 105, "rank": [105, 221], "samplerwithoutreplac": [105, 393, 404, 407], "get_insert_index": 105, "convers": [111, 112, 124, 125, 387], "2106": [111, 112, 303, 322], "13281": [111, 112], "categorical_action_encod": [111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145], "frame_skip": [111, 112, 113, 114, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 141, 174, 361, 364, 371, 388, 391, 392, 393, 409], "repeat": [111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 221, 393, 403, 404, 405], "allow_done_after_reset": [111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141], "toler": [111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 231, 268], "availalb": [111, 112, 124, 125], "is_avail": [111, 112, 391, 392, 393, 394, 403, 404, 406], "els": [111, 112, 157, 238, 239, 242, 243, 256, 386, 388, 391, 392, 393, 394, 403, 404, 405, 406], "ant": [111, 112, 115, 119, 122, 137, 138, 144, 145, 406], "87": [111, 112, 392, 405, 406], "acrobot": [111, 112, 113, 114, 410], "advant": [111, 112, 124, 125], "timer": [111, 112, 124, 125], "timeit": [111, 112, 124, 125], "310": [111, 112, 405], "ms": [111, 112, 124, 125], "268": [111, 112, 405], "433": [111, 112, 405], "80": [111, 112, 391, 392, 393, 403, 404, 405, 406], "213": [111, 112, 405], "8605": [111, 112], "pipelineenv": 112, "get_environ": 112, "dm_control": [113, 114, 391, 402, 410], "2006": [113, 114, 298, 304, 405], "12983": [113, 114], "task_nam": [113, 115, 119, 137, 138, 144, 145], "cheetah": [113, 114, 115, 119, 137, 138, 144, 145, 351, 391, 410], "240": [113, 114, 405, 409, 410], "swingup": [113, 114, 410], "swingup_spars": [113, 114, 410], "ball_in_cup": [113, 114, 410], "catch": [113, 114, 410], "balance_spars": [113, 114, 410], "three_pol": [113, 114, 410], "two_pol": [113, 114, 410], "finger": [113, 114, 410], "turn_easi": [113, 114, 410], "turn_hard": [113, 114, 410], "fish": [113, 114, 410], "upright": [113, 114, 392, 410], "swim": [113, 114, 410], "hopper": [113, 114, 410], "hop": [113, 114, 410], "humanoid": [113, 114, 137, 144, 402, 410], "walk": [113, 114, 137, 144, 392, 402, 410], "run_pure_st": [113, 114, 410], "bring_bal": [113, 114, 410], "bring_peg": [113, 114, 410], "insert_bal": [113, 114, 410], "insert_peg": [113, 114, 410], "point_mass": [113, 114, 410], "reacher": [113, 114, 410], "swimmer": [113, 114, 410], "swimmer6": [113, 114, 410], "swimmer15": [113, 114, 410], "walker": [113, 114, 410], "dog": [113, 114, 410], "trot": [113, 114, 410], "humanoid_cmu": [113, 114, 410], "lqr": [113, 114, 410], "lqr_2_1": [113, 114, 410], "lqr_6_2": [113, 114, 410], "quadrup": [113, 114, 410], "escap": [113, 114, 410], "stacker": [113, 114, 410], "stack_2": [113, 114, 410], "stack_4": [113, 114, 410], "deviceless": 115, "run_type_check": [115, 131], "counterenv": 115, "discretebox": [115, 119, 137, 138, 144, 145], "sort": [115, 119, 137, 138, 144, 145, 161, 260, 261], "another_act": [115, 119, 137, 138, 144, 145], "mutabl": [115, 119, 137, 138, 144, 145], "_callabletransform": [115, 119, 137, 138, 144, 145], "batch_lock": [115, 117, 119, 137, 144, 157, 197, 201, 405], "done_keys_group": [115, 119, 137, 138, 144, 145], "outer": [115, 119, 137, 138, 144, 145, 388, 391, 392, 410], "another_don": [115, 119, 137, 138, 144, 145], "empty_cach": [115, 119, 137, 138, 144, 145, 201], "fake_tensordict": [115, 119, 137, 138, 144, 145, 392], "silent": [115, 119, 137, 138, 144, 145, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 264, 265, 267, 272, 278, 280, 282, 285, 290, 293], "braxenv": [115, 119, 137, 138, 144, 145, 186, 384, 395], "envnam": [115, 119, 137, 138, 144, 145], "pipeline_st": [115, 119, 137, 138, 144, 145], "attibut": [115, 119, 137, 138, 144, 145], "maybe_reset": [115, 119, 137, 138, 144, 145], "speak": [115, 119, 137, 138, 144, 145, 391], "rand_act": [115, 119, 128, 137, 138, 139, 140, 144, 145, 157, 395], "register_gym": [115, 119, 137, 138, 144, 145, 395], "entry_point": [115, 119, 137, 138, 144, 145], "info_kei": [115, 119, 137, 138, 144, 145], "reward_threshold": [115, 119, 137, 138, 144, 145], "nondeterminist": [115, 119, 137, 138, 144, 145], "max_episode_step": [115, 118, 119, 120, 137, 138, 144, 145], "order_enforc": [115, 119, 137, 138, 144, 145], "autoreset": [115, 119, 137, 138, 144, 145], "disable_env_check": [115, 118, 119, 132, 133, 137, 138, 144, 145], "apply_api_compat": [115, 119, 137, 138, 144, 145], "nasium": [115, 119, 137, 138, 144, 145], "scope": [115, 119, 137, 138, 144, 145, 410], "dmcontrolenv": [115, 119, 137, 138, 144, 145, 351, 384, 391, 395, 402, 410], "dmc": [115, 119, 137, 138, 144, 145], "removeemptyspec": [115, 119, 137, 138, 144, 145], "threshold": [115, 119, 137, 138, 144, 145, 236, 298, 299, 393], "learnt": [115, 119, 137, 138, 144, 145, 378], "checker": [115, 118, 119, 132, 133, 137, 138, 144, 145], "stepapicompat": [115, 119, 137, 138, 144, 145], "deem": [115, 119, 129, 130, 137, 138, 144, 145, 146, 147], "envgym": [115, 119, 137, 138, 144, 145], "0855": [115, 119, 137, 138, 144, 145], "0215": [115, 119, 137, 138, 144, 145], "0881": [115, 119, 137, 138, 144, 145], "0412": [115, 119, 137, 138, 144, 145], "1101": [115, 119, 137, 138, 144, 145], "0080": [115, 119, 137, 138, 144, 145], "0254": [115, 119, 137, 138, 144, 145], "0424": [115, 119, 137, 138, 144, 145], "9609e": [115, 119, 137, 138, 144, 145], "9776e": [115, 119, 137, 138, 144, 145], "04": [115, 119, 123, 137, 138, 144, 145, 390, 391, 392, 393, 405, 406, 408], "6347e": [115, 119, 137, 138, 144, 145], "3842e": [115, 119, 137, 138, 144, 145], "5338e": [115, 119, 137, 138, 144, 145], "3064e": [115, 119, 137, 138, 144, 145], "0381e": [115, 119, 137, 138, 144, 145], "6656e": [115, 119, 137, 138, 144, 145], "05": [115, 119, 137, 138, 144, 145, 220, 391, 392, 403, 404, 405, 406], "0204e": [115, 119, 137, 138, 144, 145], "action_spac": [115, 119, 137, 138, 144, 145, 170, 233, 263, 279, 280, 284, 285, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 394, 396, 400], "0833": [115, 119, 137, 138, 144, 145], "0275": [115, 119, 137, 138, 144, 145], "0612": [115, 119, 137, 138, 144, 145], "0770": [115, 119, 137, 138, 144, 145, 405], "1256": [115, 119, 137, 138, 144, 145, 405], "0082": [115, 119, 137, 138, 144, 145], "0186": [115, 119, 137, 138, 144, 145], "0476": [115, 119, 137, 138, 144, 145], "2221": [115, 119, 137, 138, 144, 145], "2256": [115, 119, 137, 138, 144, 145], "5930": [115, 119, 137, 138, 144, 145], "6937": [115, 119, 137, 138, 144, 145], "5865": [115, 119, 137, 138, 144, 145], "5479": [115, 119, 137, 138, 144, 145], "0187": [115, 119, 137, 138, 144, 145], "6825": [115, 119, 137, 138, 144, 145, 405], "5224": [115, 119, 137, 138, 144, 145], "0018": [115, 119, 137, 138, 144, 145, 405], "1005": [115, 119, 137, 138, 144, 145], "0335": [115, 119, 137, 138, 144, 145], "0268": [115, 119, 137, 138, 144, 145, 405], "0133": [115, 119, 137, 138, 144, 145], "0627": [115, 119, 137, 138, 144, 145], "0074": [115, 119, 137, 138, 144, 145, 405], "0488": [115, 119, 137, 138, 144, 145, 405], "0353": [115, 119, 137, 138, 144, 145], "0075": [115, 119, 137, 138, 144, 145, 405], "0069": [115, 119, 137, 138, 144, 145, 405], "0098": [115, 119, 137, 138, 144, 145, 405], "0058": [115, 119, 137, 138, 144, 145, 405], "0033": [115, 119, 137, 138, 144, 145, 405], "0157": [115, 119, 137, 138, 144, 145], "0004": [115, 119, 137, 138, 144, 145, 394, 405], "0381": [115, 119, 137, 138, 144, 145], "0452": [115, 119, 137, 138, 144, 145], "11355747": [115, 119, 137, 138, 144, 145], "04257728": [115, 119, 137, 138, 144, 145], "00408397": [115, 119, 137, 138, 144, 145], "04155852": [115, 119, 137, 138, 144, 145], "0389733": [115, 119, 137, 138, 144, 145], "01409826": [115, 119, 137, 138, 144, 145], "0978704": [115, 119, 137, 138, 144, 145], "08808327": [115, 119, 137, 138, 144, 145], "03970837": [115, 119, 137, 138, 144, 145], "00535434": [115, 119, 137, 138, 144, 145], "02353762": [115, 119, 137, 138, 144, 145], "05116226": [115, 119, 137, 138, 144, 145], "02788907": [115, 119, 137, 138, 144, 145], "06848346": [115, 119, 137, 138, 144, 145], "05154399": [115, 119, 137, 138, 144, 145], "0371798": [115, 119, 137, 138, 144, 145], "05128025": [115, 119, 137, 138, 144, 145], "dydact": [115, 119, 137, 138, 144, 145], "gym_env": [115, 119, 137, 138, 144, 145, 409], "reset_kei": [115, 119, 137, 138, 144, 145, 160, 191, 196, 197, 198, 403], "multitask": [115, 119, 137, 138, 144, 145], "multiag": [115, 119, 128, 137, 138, 139, 140, 144, 145, 217, 251, 262, 271, 329], "another_reward": [115, 119, 137, 138, 144, 145], "auto_cast_to_devic": [115, 119, 137, 138, 144, 145, 404], "break_when_all_don": [115, 119, 137, 138, 144, 145], "soon": [115, 119, 137, 138, 139, 140, 144, 145], "__sort": [115, 119, 137, 138, 144, 145], "as__": [115, 119, 137, 138, 144, 145], "todo": [115, 119, 137, 138, 144, 145], "argmaxmodul": [115, 119, 137, 138, 144, 145], "argmax": [115, 119, 137, 138, 144, 145, 233, 263, 280, 285, 396], "n_ob": [115, 119, 137, 138, 144, 145, 177, 282, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 397], "n_act": [115, 119, 137, 138, 144, 145, 177, 297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 397], "ourselv": [115, 119, 137, 138, 144, 145, 393, 410], "emul": [115, 119, 137, 138, 144, 145], "epoch": [115, 119, 137, 138, 144, 145, 368, 393, 403, 404], "input_td": [115, 119, 137, 138, 144, 145], "rollout_td": [115, 119, 137, 138, 144, 145], "state_kei": [115, 119, 137, 138, 144, 145], "prevail": [115, 119, 137, 138, 144, 145, 161, 191, 217], "creator": [116, 373, 374, 380, 381, 382], "substitut": [116, 196, 207, 396], "vecnorm": [116, 382], "env_creat": [116, 391], "test_env1": 116, "observation_count": [116, 410], "test_env2": 116, "sleep": [116, 410], "ps": 116, "p1": 116, "p2": 116, "9934": 116, "env_str": 117, "device_map": 117, "accross": [118, 120], "registri": 118, "asyncvectorenv": 118, "involv": [118, 120, 121, 129, 130, 141, 157, 240, 244, 395, 397], "pixel_observ": [118, 120, 121, 141], "pixelobservationwrapp": [118, 120, 121, 141], "adventur": [118, 120, 410], "airraid": [118, 120, 410], "alien": [118, 120, 410], "time_limit": 118, "timelimit": [118, 129, 130, 146, 147], "default_info_dict_read": [118, 119, 120, 137], "reader": [118, 119, 120, 137, 392], "set_info_dict_read": [118, 119, 120, 137, 395], "info_dict": [118, 119, 120, 137], "auto_register_info_dict": [118, 119, 120, 137], "multibinari": [118, 120], "multidiscret": [118, 120], "rag": [118, 120], "gym_conversion_exampl": [118, 120], "info_dict_read": [119, 137], "ignore_priv": 119, "baseinfodictread": 119, "tensordictprim": [119, 137, 222, 240, 244, 294, 394], "succe": [119, 137], "underscor": 119, "primer": [119, 197, 222, 240, 244, 294, 394], "halfcheetah": [119, 137, 153, 187, 391], "reward_run": [119, 137], "read_act": 119, "read_don": 119, "nonsens": 119, "fallback": 119, "broken": [119, 211], "read_ob": 119, "dictat": [119, 283, 287, 317, 391, 405], "read_reward": 119, "hoc": [119, 137, 396], "dict_read": 119, "my_info_kei": 119, "some_env": 119, "vecenv": 120, "vectorenv": 120, "convert_actions_to_numpi": 120, "isaaclab": 120, "secur": 121, "habitat3": 121, "ai": [121, 406], "habitatrenderpick": 121, "isaacgym": [122, 123], "isaacgymwrapp": [122, 384], "isaacgymenv": [123, 384], "webpag": 123, "isaac": 123, "essenc": [123, 395], "instadeepai": [124, 125], "2306": [124, 125], "09884": [124, 125], "snake": [124, 125], "grid": [124, 125, 351], "bodi": [124, 125], "body_st": [124, 125], "fruit_posit": [124, 125], "col": [124, 125], "head_posit": [124, 125], "tail": [124, 125], "game2048": [124, 125], "maze": [124, 125], "cleaner": [124, 125], "cvrp": [124, 125], "multicvrp": [124, 125], "minesweep": [124, 125], "rubikscub": [124, 125], "knapsack": [124, 125], "sudoku": [124, 125], "tsp": [124, 125], "connector": [124, 125], "v2": [124, 125, 142, 143, 326, 340, 341, 342, 343, 345, 346, 347, 348, 394], "mmst": [124, 125], "graphcolor": [124, 125], "partli": [124, 125], "scrambl": [124, 125], "robotwarehous": [124, 125], "tetri": [124, 125], "binpack": [124, 125], "jobshop": [124, 125], "0x1fca91910": 124, "122": [124, 125, 405, 410], "0x1ff9baee0": 124, "134": [124, 125, 405, 407], "0x1ff9ba7c0": 124, "172": [124, 125, 405], "drastic": [125, 137, 407], "rubric": [125, 179, 289], "mo": [126, 127], "minecart": [126, 127], "mo_gym": 127, "qualnam": 128, "leverag": [128, 139, 140, 391, 404, 410], "neural": [128, 139, 140, 223, 224, 266, 286, 386, 392, 393, 394, 396, 403, 404, 405, 410], "group_map": [128, 129, 130, 135, 136, 139, 140, 146, 147, 148, 403], "constructiuon": [128, 139, 140], "premad": [128, 129, 130, 139, 140, 146, 147, 329], "all_in_one_group": [128, 135, 136, 148], "agent_0": [128, 139, 140, 148, 403], "agent_1": [128, 139, 140, 148], "agent_2": [128, 139, 140, 148], "agent_3": 128, "one_group_per_ag": [128, 139, 140], "meltingpot": [129, 130], "2211": [129, 130], "13746": [129, 130], "melt": [129, 130], "pot": [129, 130], "novel": [129, 130, 397], "social": [129, 130], "familiar": [129, 130, 392, 404, 410], "unfamiliar": [129, 130], "broad": [129, 130], "cooper": [129, 130, 403, 404], "decept": [129, 130], "reciproc": [129, 130], "stubborn": [129, 130], "substrat": [129, 130], "ml_collect": 129, "config_dict": 129, "configdict": 129, "categorical_act": [129, 130, 135, 136, 139, 140, 142, 143, 146, 147], "marlgroupmaptyp": [129, 130, 135, 136, 139, 140, 146, 147, 148, 384, 403], "agent_nam": [129, 130, 146, 147, 148], "agent_names_to_indices_map": [129, 130, 146, 147], "env_torchrl": [129, 130], "commons_harvest__open": [129, 130], "rgb": [129, 130], "144": [129, 130, 405], "192": [129, 130, 392, 405], "collective_reward": [129, 130], "ready_to_shoot": [129, 130], "88": [129, 130, 142, 143, 391, 392, 405, 406, 407], "substrate_config": 130, "get_config": 130, "mp_env": 130, "build_from_config": 130, "default_player_rol": 130, "environn": 131, "mymbenv": [131, 221, 247], "world_model": [131, 221, 247, 309], "hidden_observ": [131, 221, 247], "mlp": [131, 221, 223, 224, 226, 227, 228, 229, 235, 240, 244, 247, 251, 252, 275, 279, 294, 302, 304, 386, 392, 396, 397, 400, 402, 406, 409], "worldmodelwrapp": [131, 221, 247], "activation_class": [131, 221, 223, 224, 226, 227, 228, 229, 234, 235, 245, 247, 250, 251, 392, 396, 403, 404, 409], "relu": [131, 221, 230, 247, 255, 296], "activate_last_lay": [131, 221, 229, 245, 247], "sail": [132, 133], "sg": [132, 133], "10558": [132, 133], "readthedoc": [132, 135, 136], "en": [132, 135, 136], "python_interfac": 132, "envpoolmixin": 133, "env_bas": 133, "task_id": 133, "env_typ": 133, "gym_reset_return_info": 133, "envpool_env": 133, "www": [134, 248, 249], "fetch_openml": 134, "106": [134, 405], "openspiel": [135, 136], "open_spiel": [135, 136], "game_str": 135, "return_st": [135, 136, 139, 140], "4672": [135, 136, 392, 405], "current_play": [135, 136], "fen": [135, 136], "rnbqkbnr": [135, 136], "pppppppp": [135, 136], "kqkq": [135, 136], "674": [135, 405], "2048": [135, 136, 392, 406], "add_nois": [135, 136], "amazon": [135, 136], "backgammon": [135, 136], "restor": [135, 136], "td_restor": [135, 136], "pyspiel": 136, "load_gam": 136, "new_initial_st": 136, "3009": 136, "my_env_fun": [137, 144], "custom_attribute_list": [137, 144], "custom_attribut": [137, 144], "custom_method_list": [137, 144], "custom_method": [137, 144], "deploi": [137, 144, 157], "slight": [137, 144, 392], "share_individual_td": [137, 144], "shared_memori": [137, 144], "policy_proof": [137, 144], "ll": [137, 144, 238, 239, 242, 243, 391, 392, 393, 394, 395, 396, 397, 398, 400, 404, 410], "serial_for_singl": [137, 144, 392], "circular": [137, 144, 391], "list_of_kwarg": [137, 144], "com_veloc": [137, 144], "head_height": [137, 144], "joint_angl": [137, 144], "torso_vert": [137, 144], "stringent": [137, 393, 403, 404], "inter": 137, "penv": 137, "env_fix": 137, "influenc": 137, "thumb": [137, 393], "myenv": [137, 157, 166, 169], "pipe": 137, "update_kwarg": [137, 144], "th": [138, 173, 202, 238, 242, 405], "thdot": [138, 405], "max_spe": [138, 405], "max_torqu": [138, 405], "gen_param": [138, 405], "gravit": [138, 405], "torqu": [138, 405], "pettingzoo": [139, 140, 403, 404], "pet": [139, 140], "zoo": [139, 140], "__": [139, 140], "aecenv": [139, 140], "use_mask": [139, 140], "dead": [139, 140], "done_on_ani": [139, 140, 403], "compulsori": [139, 140], "adversary_0": [139, 140, 403], "adversari": [139, 140, 311, 403], "sisl": 139, "multiwalker_v9": 139, "aec": [139, 140], "n_piston": [139, 140], "pistonball_v6": [139, 140], "piston": [139, 140], "piston_0": [139, 140], "piston_1": [139, 140], "piston_20": [139, 140], "tictactoe_v3": [139, 140], "player": [139, 140, 145], "player_1": [139, 140], "player_2": [139, 140], "butterfli": 140, "parallel_env": [140, 391, 409, 410], "vikashplu": 141, "wiki": 141, "06828": 141, "from_depth": 141, "smacv2": [142, 143], "starcraft": [142, 143], "challeng": [142, 143, 395, 405, 406], "10gen_terran": [142, 143], "10gen_zerg": [142, 143], "10gen_protoss": [142, 143], "3m": [142, 143], "8m": [142, 143, 406], "25m": [142, 143], "5m_vs_6m": [142, 143], "8m_vs_9m": [142, 143], "10m_vs_11m": [142, 143], "27m_vs_30m": [142, 143], "mmm": [142, 143], "mmm2": [142, 143], "2s3z": [142, 143], "3s5z": [142, 143], "3s5z_vs_3s6z": [142, 143], "3s_vs_3z": [142, 143], "3s_vs_4z": [142, 143], "3s_vs_5z": [142, 143], "1c3s5z": [142, 143], "2m_vs_1z": [142, 143], "corridor": [142, 143], "6h_vs_8z": [142, 143], "2s_vs_1sc": [142, 143], "so_many_banel": [142, 143], "bane_vs_ban": [142, 143], "2c_vs_64zg": [142, 143], "old": [142, 143, 314, 410], "smac": [142, 143], "map_nam": [142, 143], "176": [142, 143, 405], "battle_won": [142, 143], "dead_al": [142, 143], "dead_enemi": [142, 143], "episode_limit": [142, 143], "322": [142, 143, 405], "Or": [142, 143, 250], "procedur": [142, 143], "distribution_config": [142, 143], "n_unit": [142, 143], "n_enemi": [142, 143], "team_gen": [142, 143], "dist_typ": [142, 143], "weighted_team": [142, 143], "unit_typ": [142, 143], "marin": [142, 143], "maraud": [142, 143], "medivac": [142, 143], "exception_unit_typ": [142, 143], "start_posit": [142, 143], "surrounded_and_reflect": [142, 143], "map_x": [142, 143], "map_i": [142, 143], "capability_config": [142, 143], "131": [142, 143, 405], "starcraft2env": 143, "tic": 145, "tac": 145, "toe": 145, "single_play": 145, "player1": 145, "desired_batch_s": 145, "board": 145, "player0": 145, "proroklab": [146, 147], "vectorizedmultiagentsimul": [146, 147], "2207": [146, 147], "03530": [146, 147], "basescenario": 146, "perfrom": [146, 147], "defaultt": 146, "continuous_act": [146, 147, 349, 403, 404], "repositiori": 146, "sparsiti": 146, "unbatched_action_spec": [146, 147, 404], "unbatched_observation_spec": [146, 147], "unbatched_reward_spec": [146, 147], "het_spec": [146, 147], "het_specs_map": [146, 147], "flock": [146, 147, 349], "agent_collision_rew": [146, 147], "agent_distance_rew": [146, 147], "ca": 148, "environment4": 148, "get_group_map": 148, "sumbodul": 149, "model_bas": [150, 151, 221, 247], "decod": [150, 256], "model_based_env": [150, 308], "dreamerenv": [150, 308, 384], "model_based_env_ev": 150, "num_interv": 153, "out_action_kei": 153, "samplingstrategi": 153, "optino": 153, "intenum": 153, "interv": [153, 350, 351, 360, 370, 392, 405], "action_disc": 153, "transform_input_spec": [153, 157, 164, 166, 167, 168, 179, 181, 185, 186, 191, 195, 196, 197, 200, 202, 204, 209], "masker": 154, "maskedenv": 154, "ones_lik": 154, "scatter": 154, "fill_float": 156, "fill_int": 156, "fill_bool": 156, "someenvclass": 156, "autoresetenv": 156, "argumet": 156, "fooenv": 156, "sign": [156, 193, 331, 403], "envtyp": 156, "reshape_fn": 157, "reset_func": 157, "environmt": 157, "request": [157, 184], "tensordict_batch_s": 157, "tensordict_reset": [157, 405], "transform_env_batch_s": [157, 164, 200, 209], "transform_output_spec": [157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "transform_observation_spec": [157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 206, 207, 209, 405], "transform_reward_spec": [157, 158, 163, 164, 166, 167, 171, 177, 185, 186, 189, 190, 191, 192, 193, 195, 200, 202, 209], "transformfull_done_spec": [157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "biner": 158, "burn_in": 159, "burn": 159, "date": [159, 354], "retur": 159, "burnt": 159, "gru_modul": [159, 240, 294], "input_s": [159, 238, 239, 240, 242, 243, 244, 294, 394], "hidden_s": [159, 238, 239, 240, 242, 243, 244, 294, 394], "set_recurrent_mod": [159, 240, 244, 394], "burn_in_transform": 159, "gru": [159, 197, 239, 240, 294], "num_lay": [159, 238, 240, 242, 244, 256, 257, 294], "86": [159, 392, 405, 407], "3008": [159, 392], "0344": 159, "padding_valu": [160, 248, 249], "as_invers": 160, "movement": 160, "1312": [160, 392], "5602": 160, "unsqueezetransform": [160, 405, 407], "consumpt": [160, 384], "followin": 160, "pictur": 160, "pixels_trsf": [160, 407], "grayscal": [160, 392, 394, 407, 410], "data_exclud": [160, 407], "del_kei": [161, 203, 402, 405], "unsqueeze_if_oor": 161, "observation_posit": 161, "observation_veloc": 161, "key1": [161, 359, 367], "key2": [161, 359, 367], "center": [162, 351], "width": [162, 165, 187], "scalar": [163, 189, 218, 219, 227, 229, 236, 237, 253, 254, 260, 261, 293, 297, 298, 299, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 386, 392, 397, 405], "permit": [163, 173, 202, 297, 299, 314, 317, 319], "rewardsc": [164, 201, 391, 392, 394], "rewardclip": 164, "transformed_env": [164, 200, 201, 395], "transform_env_devic": [164, 167, 200, 209], "dtype_in": 166, "dtype_out": 166, "scan": [166, 169, 288, 289], "resp": [166, 169], "not_transform": [166, 169], "constructedw": [166, 169], "orig_devic": 167, "unspecifi": 167, "transform_done_spec": [167, 200, 209], "num_actions_effect": 168, "max_act": 168, "include_forward": 168, "num_act": [168, 306, 396], "action_out": 168, "_call": [168, 173, 405], "eol_kei": 170, "lives_kei": 170, "eol_attribut": 170, "unwrap": 170, "breakout": 170, "210": [170, 181, 390, 391, 392, 405, 408, 410], "160": [170, 181, 392, 405, 410], "eol_transform": 170, "eol": 170, "dqnloss": [170, 297, 298, 300, 301, 304, 306, 307, 308, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 329, 375, 384, 387, 392, 394, 400], "register_kei": 170, "loss_or_advantag": 170, "lossmodul": [170, 368, 377, 378, 384, 387], "valueestimatorbas": [170, 315, 384], "excluded_kei": 171, "finit": [172, 396, 407], "first_dim": 173, "last_dim": 173, "allow_positive_dim": [173, 202], "frameskip": 173, "repeatedli": [174, 393, 404], "init_kei": [176, 282], "tracker": 176, "pi_curr": 177, "pi_0": 177, "overfit": 177, "probabilist": [177, 212, 283, 297, 317, 384, 393, 409], "get_dist": [177, 287, 288], "mod": [177, 222, 240, 244, 282, 290, 394, 400], "normalparamextractor": [177, 275, 276, 277, 283, 289, 297, 298, 300, 306, 313, 317, 318, 319, 320, 322, 323, 386, 393, 396, 404, 409], "probabilisticactor": [177, 275, 276, 277, 278, 297, 298, 300, 303, 305, 306, 313, 316, 317, 318, 319, 320, 322, 323, 386, 391, 393, 396, 403, 404], "tanhnorm": [177, 275, 276, 277, 283, 289, 297, 298, 300, 313, 317, 318, 319, 320, 322, 323, 384, 393, 404, 409], "return_log_prob": [177, 275, 276, 277, 283, 287, 289, 319, 386, 393, 396, 403, 404, 409], "apply_": 177, "copy_": [177, 391], "formulat": 177, "diverg": [177, 240, 244, 283, 287, 309, 314], "noop": [178, 409], "trial": 178, "standard_norm": [179, 190, 207, 391, 392, 394], "affin": [179, 190, 207], "layer": [179, 207, 220, 223, 224, 226, 227, 232, 234, 238, 239, 240, 242, 243, 244, 245, 250, 251, 253, 254, 256, 257, 266, 267, 273, 281, 290, 386, 392, 393, 394, 396, 403, 406], "epsilon": [179, 218, 219, 236, 237, 260, 261, 321, 366, 392, 393, 394, 396], "recover": 179, "set_default_tensor_typ": 179, "doubletensor": 179, "isclos": 179, "next_ob": [179, 331, 332, 333, 334, 409], "init_stat": [179, 391, 392, 393, 394], "3752e": 179, "5087e": 179, "9294e": 179, "9636": 179, "5608": 179, "6408": 179, "num_it": [179, 392, 393], "reduce_dim": [179, 391, 392, 393, 394], "cat_dim": [179, 391, 392, 393, 394], "keep_dim": [179, 392, 394], "statist": [179, 207, 220, 319, 382, 391, 392, 393, 410], "gaussian": [179, 197, 218, 219, 221, 247, 253, 254, 259, 393, 403], "empir": [179, 221, 247, 283, 287, 391, 393, 404], "3d": [179, 223], "reorder": 181, "in_keys_in": [181, 202], "channel": [181, 199, 250, 256, 257, 392], "r3m": [183, 406], "resnet": [183, 203, 205], "visual": [183, 203, 205, 351, 393, 403, 405], "embed": [183, 203, 204, 205, 226, 262, 274, 275, 276, 277, 286, 291, 406], "ego4d": [183, 203, 205], "univers": [183, 203, 205, 395], "suraj": [183, 203], "nair": [183, 203], "aravind": [183, 203], "rajeswaran": [183, 203], "vikash": [183, 203, 205], "kumar": [183, 203, 205], "chelsea": [183, 203], "finn": [183, 203], "abhinav": [183, 203], "gupta": [183, 203], "2203": [183, 203, 247, 406], "12601": [183, 203, 406], "_init": [183, 203, 391], "resnet50": [183, 205, 406], "model_nam": [183, 203, 205, 354], "resnet34": 183, "resnet18": 183, "r3m_vec": [183, 406], "stack_imag": [183, 205], "tread": [183, 205], "separet": [183, 205], "hub": [183, 205, 395, 406], "resnet50_weight": [183, 205], "imagenet1k_v1": [183, 205], "download_path": [183, 205], "tensor_pixels_kei": [183, 205], "sub_seq_len": 184, "sample_dim": [184, 391], "hesit": 184, "robust": [184, 220], "mix": [184, 262, 271, 329, 391, 403, 404], "improp": 184, "dummyenv": 185, "another_oth": 185, "other_reward": 185, "create_copi": 186, "stuff": [186, 398], "newnam": 186, "r2g": 188, "reward_to_go": 188, "bernoulli_": 188, "9010": 188, "9404": [188, 337], "9701": [188, 337], "9900": [188, 337], "0000": [188, 198, 236, 237, 290, 337, 393, 394, 405, 409], "crash": 188, "clamp_min": 189, "clamp_max": 189, "clip_min": 189, "clip_max": 189, "episode_": 191, "reward1": 191, "reward2": 191, "episode_reward": [191, 403, 404], "keep_reward": 192, "keep_don": 192, "logical_or": 193, "step_count_kei": 195, "update_don": 195, "disjunct": 195, "recognis": 195, "target_return": 196, "subtract": 196, "default_valu": [197, 294, 394], "unit": [197, 221, 234, 238, 239, 256, 257, 264, 265, 393], "transfomedenv": 197, "mykei": 197, "__unless": 197, "exists__": 197, "get_primers_from_modul": [197, 222, 240, 244, 384], "10th": 198, "0216": 198, "1149": 198, "1990": 198, "2749": 198, "3281": 198, "9290": 198, "3702": 198, "8978": 198, "from_int": 199, "shape_toler": 199, "permuat": 199, "ri": 199, "principl": 200, "cattransform": 200, "notabl": 200, "rewardsum": [200, 209, 216, 403, 404], "smoothli": [201, 220], "add_1": 201, "cache_spec": 201, "set_missing_toler": 201, "keyerror": [201, 410], "danger": 202, "vc1": 203, "vc1_vec": 203, "untrain": 203, "make_noload_model": 203, "vip": [204, 205, 406], "implicit": [205, 305, 313, 407], "jason": 205, "ma": 205, "shagun": 205, "sodhani": 205, "dinesh": 205, "jayaraman": 205, "osbert": 205, "bastani": 205, "ami": 205, "zhang": 205, "vip_vec": 205, "final_nam": 206, "sb3": 206, "terminal_obs_read": 206, "truli": [206, 409], "till": 206, "shared_td": 207, "decai": [207, 218, 219, 236, 321, 366, 391, 392, 394, 410], "9999": [207, 405], "0001": [207, 234, 255, 393, 405], "to_observation_norm": 207, "frozen_copi": 207, "race": 207, "underflow": [207, 366], "build_td_for_shared_vecnorm": 207, "memmori": 207, "queue": [207, 407], "td_share": 207, "unfreez": 207, "train_env": 207, "eval_env": 207, "state_dim": [208, 225, 230, 259, 264, 265, 278], "action_dim": [208, 225, 226, 228, 230, 259, 278, 391, 402], "gsde": [208, 318, 382], "gsdemodul": 208, "rb_transform": 209, "resist": 209, "insensit": 209, "sensit": [209, 392], "_orig": 209, "95": [209, 247, 325, 392, 393, 394, 405], "tdreset": [209, 402], "window": [209, 282, 403, 407, 409], "edit": [209, 398], "cube": 210, "check_dtyp": 211, "discrep": [211, 297, 299, 301, 302, 314, 317, 319, 329], "rng": [211, 405], "revert": [211, 396, 407], "unsqueeze_null_shap": 214, "probabilistictdmodul": [215, 245, 283, 287, 330, 364], "next_tensordict": 216, "keep_oth": [216, 405], "exclude_reward": 216, "exclude_don": 216, "exclude_act": 216, "next_": 216, "funtion": 216, "_stepmdp": 216, "write_full_fals": 217, "_terminated_or_trunc": 217, "po": [218, 219, 237], "sigma_init": [218, 219, 403], "sigma_end": [218, 219, 403], "annealing_num_step": [218, 219, 236, 237, 260, 261, 391, 392, 394, 396, 400, 403], "sigma": [218, 219, 238, 239, 241, 242, 243, 260, 261, 269, 270, 393, 403], "captur": [218, 219, 236, 237, 260, 261], "omiss": [218, 219, 236, 237, 260, 261], "ommit": [218, 219, 236, 237, 260, 261], "momentum": 220, "max_r": 220, "max_d": 220, "warmup_step": 220, "batchrenorm": 220, "1702": 220, "03275": 220, "corenet": 220, "enhanc": 220, "warmup": 220, "phase": [220, 404, 407], "outlier": 220, "period": 220, "varianc": [220, 221, 241, 255, 269, 270, 387, 391, 393, 404], "warm": 220, "renorm": 220, "entropi": [221, 297, 298, 299, 300, 305, 306, 313, 314, 316, 317, 318, 320, 322, 323, 404], "botev": 221, "2013": 221, "cem": 221, "plan": [221, 246, 247], "k": [221, 222, 238, 239, 242, 243], "maximis": [221, 226, 228, 247, 386, 392, 393, 404], "modelbasedenv": [221, 247], "planning_horizon": [221, 247], "optim_step": [221, 247, 392, 400], "mpc": [221, 246, 247], "num_candid": [221, 247], "candid": [221, 247], "top_k": [221, 247], "modelbasedenvbas": [221, 246, 247, 384], "safemodul": [221, 246, 275, 277, 287, 297, 298, 300, 305, 306, 313, 317, 318, 319, 320, 322, 323, 373, 374, 378, 384, 409], "consistentdropout": 222, "input_shap": 222, "batcht": 222, "make_tensordict_prim": [222, 240, 244, 394], "input_dtyp": 222, "pase": 222, "get_default_dtyp": [222, 366], "mask_6127171760": 222, "seq": [222, 238, 240, 242, 244, 282, 394, 400, 402], "env0": [222, 410], "num_cel": [223, 224, 226, 227, 228, 229, 234, 235, 240, 244, 245, 250, 251, 275, 294, 392, 393, 394, 396, 397, 400, 403, 404, 409], "elu": [223, 224, 226, 227, 228, 229, 234, 235, 250, 392, 409], "activation_kwarg": [223, 224, 245], "norm_class": [223, 224, 226, 227, 245], "norm_kwarg": [223, 224, 245], "bias_last_lay": [223, 224, 226, 227, 228, 229, 235, 245], "aggregator_class": [223, 224, 226, 227, 392, 394, 409], "squashdim": [223, 224, 226, 235, 250, 409], "aggregator_kwarg": [223, 224, 226, 227, 392, 394], "squeeze_output": [223, 224, 226, 227, 392, 394], "cell": [223, 224, 238, 239, 240, 242, 243, 244, 245, 250, 251, 393, 395, 396, 397, 398, 399, 400], "kernel": [223, 224, 235, 250], "cnet": [223, 224], "conv3d": 223, "lazyconv2d": [224, 226, 227, 235, 250, 409], "transformer_config": [225, 259, 278], "dtconfig": [225, 230, 259], "2202": [225, 230, 316], "05607": [225, 230, 316], "decisiontransform": [225, 259], "return_to_go": [225, 230, 259, 278], "conv_net_kwarg": [226, 227], "mlp_net_kwarg": [226, 227, 228], "use_avg_pool": [226, 227], "WITH": [226, 227, 228, 229, 260, 261, 321], "1509": [226, 227, 228, 229, 247, 260, 261, 302, 312, 321, 405], "02971": [226, 227, 228, 229, 260, 261, 321], "reus": [226, 358], "convnet": [226, 227, 235, 250, 394, 396, 409], "ndims_in": 226, "avgpool": [226, 227], "lazylinear": [226, 227, 228, 229, 235, 245, 386, 393, 396, 405, 406, 409], "2304": [226, 392], "adaptiveavgpool2d": [227, 392, 394], "output_s": [227, 392, 394], "squeeze2dlay": 227, "400": [228, 229, 399, 404, 405, 407], "mlp_net_kwargs_net1": 229, "mlp_net_kwargs_net2": 229, "mlp1": 229, "mlp2": 229, "decion": 230, "desdescrib": 230, "n_embd": 230, "n_layer": [230, 238, 242], "n_head": 230, "n_inner": 230, "n_posit": 230, "resid_pdrop": 230, "attn_pdrop": 230, "gpt2config": 230, "atol": [231, 268], "rtol": [231, 268], "batch_shap": [231, 268], "event_shap": [231, 268], "absolut": [231, 268, 391], "densiti": [231, 248, 249, 258, 270], "mass": [231, 248, 249, 258, 270, 405], "rsampl": [231, 249, 258, 287], "sample_shap": [231, 248, 249, 258], "softmax": [232, 249, 258, 279, 280], "action_valu": [232, 233, 263, 279, 280, 284, 285, 306, 315, 329, 386, 394, 396, 400], "var_num": [233, 263, 279, 280, 285], "action_value_kei": [233, 263, 279, 280, 284, 285, 315, 329], "action_mask_kei": [233, 236, 237, 263, 279, 280, 284, 285], "perspect": [233, 280, 307, 393], "1707": [233, 280, 307, 317], "06887": [233, 280, 307], "mult": [233, 251, 263, 279, 280, 284, 285], "tensordict_modul": [233, 238, 239, 242, 243, 263, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 300, 301, 305, 306, 313, 317, 318, 319, 320, 322, 323, 386], "nbin": [233, 279, 386], "customdistributionalqv": 233, "log_softmax": [233, 279], "from_modul": [233, 286, 289, 409], "qvalue_actor": [233, 263, 279, 284, 386], "to_modul": [233, 286, 289, 391, 409], "std_bia": 234, "std_min_val": 234, "belief": [234, 256, 264, 265], "1912": [234, 308, 309, 310], "01603": [234, 308, 309, 310], "softplu": [234, 255, 293, 295, 296], "out_features_valu": 235, "cnn_kwarg": [235, 392], "mlp_kwarg": [235, 392], "duel": 235, "cnn": [235, 250, 392, 396, 409], "06581": 235, "greedi": [236, 237, 263, 280, 285, 392, 394, 396], "eps_init": [236, 237, 260, 261, 392, 394, 396, 400], "eps_end": [236, 237, 260, 261, 392], "explorative_polici": [236, 237, 260, 261], "9055": [236, 237, 405], "9277": [236, 237], "6295": [236, 237], "2532": [236, 237], "grad_fn": [236, 237, 274, 409], "addbackward0": [236, 237], "batch_first": [238, 240, 242, 244, 394], "bidirect": [238, 242, 394], "cudnn": [238, 239, 242, 243, 394], "rnn": [238, 239, 240, 242, 243, 244, 394, 396], "device_count": [238, 239, 242, 243, 410], "n_in": [238, 239, 242, 243], "n_out": [238, 239, 242, 243], "h0": [238, 239, 242, 243], "h1": [238, 239, 242, 243], "vectoris": [238, 239, 242, 243], "call_gru": [238, 239], "h_out": [238, 239, 242, 243], "batched_cal": [238, 239, 242, 243], "gate": [238, 239, 242], "r_t": 238, "w_": [238, 239, 242, 243], "ir": [238, 239], "x_t": [238, 242], "b_": [238, 239, 242, 243], "hr": [238, 239, 242], "h_": [238, 239, 242], "z_t": 238, "iz": [238, 239], "hz": [238, 239], "n_t": 238, "odot": [238, 239, 242, 243], "hn": [238, 239, 242], "h_t": [238, 242], "sigmoid": [238, 239, 242, 243], "hadamard": [238, 239, 242, 243], "multilay": [238, 242], "_t": [238, 242, 404, 405], "ge": [238, 242], "bernoulli": [238, 242], "b_ih": [238, 239, 242, 243, 244], "b_hh": [238, 239, 242, 243, 244], "h_0": [238, 242, 243], "unbatch": [238, 242], "pack_padded_sequ": [238, 242], "pack_sequ": [238, 242], "num": [238, 242, 400], "_layer": [238, 242], "_size": [238, 239, 242, 243], "h_n": [238, 242], "packedsequ": [238, 242], "weight_ih_l": [238, 242], "learnabl": [238, 239, 242, 243], "w_ir": 238, "w_iz": 238, "w_in": 238, "num_direct": [238, 242], "weight_hh_l": [238, 242], "w_hr": 238, "w_hz": 238, "w_hn": 238, "bias_ih_l": [238, 242], "b_ir": 238, "b_iz": 238, "b_in": 238, "bias_hh_l": [238, 242], "b_hr": 238, "b_hz": 238, "b_hn": 238, "mathcal": [238, 239, 242, 243], "sqrt": [238, 239, 242, 243, 260, 261], "frac": [238, 239, 242, 243, 393], "seq_len": [238, 242], "subtli": 238, "matrix": [238, 242, 253, 254], "contrast": [238, 312, 407], "hx": [238, 239, 242, 243], "lstmcell": [239, 244], "gru_cel": 239, "z": 239, "weight_ih": [239, 243], "weight_hh": [239, 243], "bias_ih": [239, 243], "bias_hh": [239, 243], "rocm": [239, 243], "embedd": [240, 244], "grucel": [240, 286], "python_bas": [240, 244], "recurrent_st": [240, 244, 294, 394], "custom_kei": [240, 244], "recurrent_mod": [240, 244], "rs": [240, 391], "gru_module_train": 240, "policy_train": [240, 244], "traj_td": [240, 244], "supplementari": [240, 244, 393, 410], "That": [240, 244, 393, 403], "dealt": [240, 244], "poorli": [240, 244], "data_collector": [240, 244, 392], "policy_infer": [240, 244], "td_inf": [240, 244], "assert_clos": [240, 244], "upscal": [241, 269, 270], "tanh_loc": [241, 269, 270], "event_dim": [241, 268, 269], "poor": [241, 269, 270], "explos": [241, 269, 270], "switch": [241, 270, 349], "formula": [241, 269, 270, 297, 299, 314, 317, 387, 393], "proj_siz": 242, "c0": [242, 243], "c1": [242, 243], "call_lstm": [242, 243], "c_out": [242, 243], "i_t": 242, "ii": [242, 243], "hi": [242, 243], "f_t": 242, "hf": [242, 243], "g_t": 242, "ig": [242, 243], "hg": [242, 243], "o_t": 242, "ho": [242, 243], "c_t": 242, "c_": 242, "forget": 242, "1402": 242, "1128": 242, "c_0": [242, 243], "proj": 242, "c_n": 242, "w_ii": 242, "w_if": 242, "w_ig": 242, "w_io": 242, "w_hi": 242, "w_hf": 242, "w_hg": 242, "w_ho": 242, "b_ii": 242, "b_if": 242, "b_ig": 242, "b_io": 242, "b_hi": 242, "b_hf": 242, "b_hg": 242, "b_ho": 242, "weight_hr_l": 242, "_revers": 242, "analog": [242, 396], "cn": 242, "lstm_cell": 243, "h_1": 243, "c_1": 243, "time_step": [243, 282], "cx": 243, "correspont": 244, "recurrent_state_h": [244, 394], "recurrent_state_c": [244, 394], "triplet": [244, 284, 285], "lstm_modul": 244, "rs_h": 244, "rs_c": 244, "hidden0": 244, "hidden1": 244, "single_bias_last_lay": 245, "layer_class": 245, "layer_kwarg": 245, "perceptron": [245, 396], "aslo": 245, "42": [245, 297, 298, 300, 301, 305, 313, 320, 391, 392, 393, 394, 405], "noisylinear": [245, 253, 384, 392], "noisylazylinear": [245, 384], "mpcplanner": 246, "tensordict_out": [246, 409, 410], "mppi": 247, "covari": 247, "william": [247, 319], "aldrich": 247, "theodor": 247, "01149": 247, "hansen": 247, "wang": 247, "su": 247, "04955": 247, "valueoper": [247, 275, 276, 277, 297, 298, 299, 300, 301, 306, 313, 314, 317, 318, 319, 320, 322, 323, 378, 386, 391, 393, 397], "tdlambdaestim": [247, 384, 391], "value_net": [247, 302, 304, 319, 331, 332, 333, 334, 393, 396, 397, 400], "adv": 247, "lmbda": [247, 325, 331, 334, 336, 342, 343, 344, 347, 348, 387, 391, 393, 404], "value_network": [247, 301, 302, 304, 305, 307, 313, 320, 331, 332, 333, 334, 387, 391, 393, 397, 400, 403], "temperatur": [247, 298, 305, 313], "neg_inf": [248, 249], "inf": [248, 249], "api_doc": [248, 249], "tf_agent": [248, 249], "event": [248, 249, 258, 340, 341, 342, 343, 345, 346, 347, 348, 407], "unnorm": [248, 249, 258], "sparse_mask": [248, 249], "dens": [248, 249], "0831": [248, 249], "1203": [248, 249], "0928": [248, 249], "1972": [248, 249], "grad_method": [249, 258], "reparamgradientstrategi": [249, 258], "passthrough": [249, 258], "relaxedonehot": [249, 258], "zeros_lik": [249, 405], "sample_non_valid": 249, "share_param": [250, 251, 252, 403, 404], "use_td_param": [250, 251, 252], "get_stateful_net": [250, 251, 252, 315, 386, 387], "from_stateful_net": [250, 251, 252, 315, 387], "homogen": [250, 251, 403, 404], "tensordictparam": [250, 251], "_empty_net": [250, 251], "roughli": [250, 251, 409], "agent_network": [250, 251], "modulelist": [250, 251, 409], "2592": [250, 392], "decentr": 250, "n_agent_input": [251, 252, 403, 404], "n_agent_output": [251, 252, 403, 404], "lazili": [251, 405], "toech": 251, "centalis": 251, "shown": [251, 386, 402, 403, 404, 407], "agent_dim": 252, "vmap_random": [252, 315, 387], "stateful_net": [252, 315], "Such": [252, 315], "multiagentmlp": [252, 403, 404], "snet": 252, "hasattr": [252, 391], "kaiming_normal_": 252, "reset_paramet": 252, "std_init": [253, 254], "device_typ": [253, 254], "initialize_paramet": 253, "isol": [253, 315], "1706": [254, 271], "10295v3": 254, "induc": 254, "aid": 254, "scale_map": 255, "biased_softplus_1": 255, "scale_lb": [255, 264, 265], "module_norm": 255, "1803": [256, 257, 262], "10122": [256, 257], "rnn_hidden": 256, "latent": 257, "excacli": 258, "inres": 259, "mu": [259, 260, 261, 393], "ornstein": [260, 261, 391], "uhlenbeck": [260, 261, 391], "ou": [260, 261, 391], "correl": [260, 261], "noise_t": [260, 261], "noise_": [260, 261], "theta": [260, 261, 393, 405], "sigma_t": [260, 261], "sigma_": [260, 261], "anneal": [260, 261, 392, 396, 403], "ou_prev_nois": [260, 261], "ou_step": [260, 261], "x0": [260, 261], "sigma_min": [260, 261], "n_steps_ann": [260, 261], "is_init_kei": [260, 261], "_ou_prev_nois": [260, 261], "_ou_step": [260, 261], "state_shap": [262, 329], "mixing_embed_dim": [262, 329], "qmix": [262, 403, 404], "mixer": [262, 271, 329], "monoton": 262, "hyper": 262, "11485": 262, "qmixerloss": [262, 271], "qmix_vdn": [262, 271], "chosen_action_valu": [262, 263, 271, 284, 285, 329, 386, 394, 396], "vdn": [262, 271], "hidden_dim": [264, 265], "posterior": [264, 309], "rssm": [264, 265, 309], "1811": [264, 265], "04551": [264, 265], "obs_embed": 264, "rnn_hidden_dim": 265, "dream": 265, "safe_tanh": 269, "tanhtransform": 269, "overflow": [269, 274, 279, 280, 283, 284, 285, 286, 287], "get_mod": 269, "adam": [269, 391, 392, 393, 394, 397, 400, 403, 404, 405], "decomposit": 271, "05296": 271, "hide": [272, 393, 403, 404], "satisfi": [272, 386], "vmap_dim": 272, "lam": 272, "sample_in": 272, "sample_in_td": 272, "vm": 272, "translat": [274, 283], "character": [274, 279, 283, 284, 286, 407], "td_modul": [274, 275, 276, 277, 283, 286, 287, 289, 291, 396, 409], "3635": 274, "0340": 274, "1476": 274, "3911": [274, 405], "1664": [274, 392, 405], "5455": 274, "2247": 274, "4583": 274, "2916": 274, "2160": 274, "5337": 274, "5193": 274, "addmmbackward0": 274, "actorvalueoper": [275, 299, 314, 317, 386, 396], "get_policy_oper": [275, 276, 277, 299, 314, 317, 386], "standalon": [275, 276, 277, 396], "tdmodul": [275, 276, 277, 378], "get_critic_oper": 275, "common_oper": [275, 277], "policy_oper": [275, 276, 277], "value_oper": [275, 276, 277], "module_hidden": [275, 277], "td_module_hidden": [275, 277], "module_act": [275, 277], "td_module_act": [275, 276, 277], "module_valu": [275, 276, 277], "td_module_valu": [275, 276, 277], "state_action_valu": [275, 291, 298, 300, 305, 313, 320, 330, 378, 386, 391, 403, 409], "td_clone": [275, 276, 277], "tensordictmodulewrapp": [275, 373, 374, 378], "get_policy_head": [275, 276, 277], "safesequenti": [275, 276, 277, 329], "head": [275, 277, 294, 299, 314, 317], "get_value_head": [275, 276, 277], "get_value_oper": [275, 276, 277, 299, 314, 317], "action_modul": 276, "state_valu": [276, 277, 291, 299, 305, 313, 314, 317, 318, 320, 331, 332, 333, 334, 336, 338, 340, 342, 344, 345, 347, 386, 391, 393, 404], "actorcriticoper": [277, 386, 396], "embeddig": 277, "refet": 277, "actorcriticwrapp": [277, 386, 391], "inferec": 278, "set_tensor_kei": 278, "dt_inference_wrapp": 278, "baz": 278, "inference_context": 278, "obs_dim": 278, "tanhdelta": [278, 384, 391, 403], "dtactor": 278, "actor_modul": [278, 409], "dist_class": 278, "dist_kwarg": 278, "distribution_kwarg": [278, 283, 287, 393, 403, 404], "inference_actor": 278, "sequence_length": 278, "mask_context": 278, "out_act": 278, "qvaluemodul": [279, 284, 329, 394, 396, 400], "distributionaldqnnet": 279, "make_log_softmax": 279, "my_action_valu": [280, 285], "chanc": 280, "thid": 280, "lmheadmodel": 281, "actor_head": [281, 299, 314, 317], "base_model": 281, "lm_head": 281, "macro": 282, "lookahead": 282, "n_action": [282, 298, 300, 302, 304, 316, 320], "reshape_cat": 282, "actor_bas": 282, "obs_cat": 282, "obs_cat_reshap": 282, "action_orig": 282, "counter": [282, 361, 388], "default_interaction_typ": [283, 287, 396], "interaction_typ": [283, 287, 409], "datacollectorbas": [283, 370, 373, 374, 378, 384], "set_interaction_typ": [283, 287], "compositedistribut": [283, 297, 317, 396], "distribution_map": 283, "name_map": 283, "cache_dist": [283, 287], "n_empirical_estim": [283, 287], "compound": [283, 396], "chose": 285, "functionalmodul": 286, "functionalmodulewithbuff": 286, "td_fmodul": 286, "td_function": 286, "td_state": 286, "params_repeat": 286, "td_vmap": [286, 289], "random_sampl": [286, 287], "suppli": 287, "fist": 287, "log_prob_kei": [287, 404], "probabilistictensordictsequenti": [288, 297, 299, 314, 317, 319, 373, 374, 409], "partial_toler": [288, 289, 402], "who": [288, 289], "AND": [288, 289, 300], "tensordictsequenci": 289, "tensordictsequ": 289, "safeprobabilisticmodul": [289, 386], "spec1": 289, "net1": 289, "module1": 289, "td_module1": 289, "spec2": 289, "module2": 289, "td_module2": 289, "clamp": [290, 309, 368, 403, 405], "boundari": [290, 393, 403, 404], "resolut": 290, "9944": 290, "9991": 290, "3020": 290, "2299": [290, 405], "5418": 290, "2989": 290, "6849": 290, "3169": 290, "2690": 290, "9649": [290, 405], "5686": 290, "8602": 290, "0315": 290, "8455": [290, 405], "6027": 290, "4746": 290, "7843": 290, "7782": 290, "2111": 290, "5115": 290, "4687": 290, "5760": 290, "custommodul": 291, "imaginari": 292, "imagin": 292, "transition_model": 292, "get_reward_oper": 292, "get_transition_model_oper": 292, "min_val": [293, 296], "_bia": 293, "surject": 296, "expln": 296, "biased_softplu": [296, 384], "beggin": 296, "biased_softplus_": 296, "syntax": [296, 391], "met": [296, 403, 405], "1602": 297, "01783v2": 297, "actor_network": [297, 298, 299, 300, 301, 303, 305, 306, 313, 314, 316, 317, 318, 319, 320, 322, 323, 387, 391, 393, 397, 403, 404], "critic_network": [297, 299, 314, 317, 319, 393, 404], "entropy_bonu": [297, 299, 314, 317, 393], "favour": [297, 299, 314, 317], "samples_mc_entropi": [297, 299, 314, 316, 317], "mont": [297, 299, 314, 317, 391], "carlo": [297, 299, 314, 317, 391], "entropy_coef": [297, 299, 314, 317, 393, 404], "critic_coef": [297, 299, 314, 317, 393], "loss_critic_typ": [297, 299, 314, 317, 319, 393], "l1": [297, 299, 301, 302, 306, 314, 317, 318, 319, 322, 323, 326, 329, 386, 391], "l2": [297, 299, 301, 302, 303, 304, 306, 309, 310, 314, 317, 318, 319, 322, 323, 326, 329, 391, 403], "smooth_l1": [297, 298, 299, 300, 301, 302, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 326, 329, 393], "separate_loss": [297, 299, 300, 301, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323], "propag": [297, 299, 300, 301, 305, 306, 313, 314, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334, 393, 403, 404], "advantage_kei": [297, 299, 314, 317, 319, 331, 332, 333, 334], "value_target_kei": [297, 299, 314, 317, 319, 331, 332, 333, 334], "value_target": [297, 299, 314, 317, 319, 331, 332, 333, 334, 393, 404], "ddp": [297, 299, 314, 317, 319], "fsdp": [297, 299, 314, 317, 319], "divid": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 314, 316, 317, 318, 319, 320, 322, 323, 371, 386, 391, 403, 404, 405], "clip_valu": [297, 299, 314, 317, 319], "loss_crit": [297, 317, 393, 404], "loss_entropi": [297, 317, 393, 404], "loss_object": [297, 317, 393, 404], "recur": [297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334, 335, 396], "next_reward": [297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334], "next_don": [297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334], "next_termin": [297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 331, 332, 333, 334], "loss_obj": 297, "next_observ": [297, 298, 300, 301, 302, 304, 305, 306, 313, 317, 318, 319, 320, 322, 323, 402], "sacloss": [297, 312, 321, 384], "select_out_kei": [297, 298, 300, 301, 305, 306, 313, 317, 318, 320, 322, 323], "fraction": 297, "make_value_estim": [297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 324, 329, 387, 391, 392, 403, 404, 409], "value_typ": [297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 325, 329, 391], "hyperparam": [297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 391], "enum": [297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 325, 329, 391], "default_value_estim": [297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 391, 409], "default_value_kwarg": [297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 384, 391], "dqn_loss": [297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 324, 329], "td1": [297, 298, 300, 301, 302, 304, 306, 307, 308, 313, 315, 317, 318, 319, 320, 322, 323, 329, 391], "conserv": [298, 304], "qvalue_network": [298, 300, 305, 306, 313, 318, 320, 322, 323], "unti": [298, 300, 313, 318, 320, 322, 323], "loss_funct": [298, 300, 301, 302, 303, 304, 305, 306, 313, 318, 320, 322, 323, 326, 329, 391, 403], "alpha_init": [298, 300, 306, 316, 318, 320], "min_alpha": [298, 300, 306, 316, 318, 320], "max_alpha": [298, 300, 306, 316, 318, 320], "fixed_alpha": [298, 300, 306, 316, 318, 320], "target_entropi": [298, 300, 306, 316, 318, 320], "prod": [298, 300, 316, 320], "delay_actor": [298, 301, 320, 322, 323], "delay_qvalu": [298, 306, 318, 320, 322, 323], "min_q_weight": 298, "max_q_backup": 298, "backup": 298, "deterministic_backup": 298, "num_random": 298, "with_lagrang": 298, "lagrang": 298, "lagrange_thresh": 298, "valueclass": [298, 300, 301, 306, 318, 320, 322, 323], "qvalu": [298, 300, 305, 306, 313, 318, 320, 322, 323], "loss_actor": [298, 300, 301, 305, 306, 313, 318, 319, 320, 322, 323, 363, 391, 397, 403], "loss_actor_bc": 298, "loss_alpha": [298, 300, 306, 318, 320], "loss_cql": [298, 304], "loss_qvalu": [298, 300, 304, 305, 306, 313, 318, 320, 322, 323], "loss_alpha_prim": 298, "clip_epsilon": [299, 393, 404], "normalize_advantag": [299, 314, 317, 404], "value_kei": [299, 314, 317, 331, 332, 333, 334, 391], "somemodul": [299, 314, 317], "someactor": [299, 314, 317], "value_head": [299, 314, 317], "somevalu": [299, 314, 317], "loss_modul": [299, 312, 314, 315, 317, 321, 368, 377, 378, 387, 388, 391, 392, 393, 403, 404, 407], "IN": 300, "FOR": 300, "simplic": [300, 392, 393, 398, 406, 407, 409], "openreview": [300, 318], "pczqttstix": 300, "qvalue_loss": [300, 322], "actor_loss": [300, 322], "alpha_loss": 300, "num_qvalue_net": [300, 305, 306, 313, 318, 320, 322, 323], "target_entropy_buff": 300, "delay_valu": [301, 302, 304, 307, 319, 320, 329, 392, 394, 400, 403], "loss_valu": [301, 305, 313, 319, 320, 391, 393, 397, 403, 404], "pred_valu": [301, 304, 322, 323, 391, 397], "pred_value_max": [301, 391, 397], "target_valu": [301, 304, 318, 322, 323, 330, 387, 391, 397], "target_value_max": [301, 391, 397], "qvalueactor": [302, 304, 329, 386, 392, 394], "double_dqn": 302, "06461": [302, 312], "mult_one_hot": [302, 305, 306, 329], "loss_val": [302, 304, 387, 391, 393, 394, 397, 398, 400, 403, 404, 407], "01345": 303, "distanc": [304, 314, 326, 330, 331, 404], "dcql_loss": 304, "2110": [305, 313], "06169": [305, 313], "expectil": [305, 313], "tau": [305, 313, 321, 391, 392, 403], "antmaz": [305, 313], "sticht": [305, 313], "onehotcategor": [305, 306, 384], "target_entropy_weight": 306, "disctount": 307, "distributionalqvalueactor": [307, 386], "input_tensordict": [307, 391], "actor_model": 308, "value_model": [308, 310], "imagination_horizon": 308, "unrol": [308, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348], "discount_loss": [308, 310], "lambda_kl": 309, "lambda_reco": 309, "lambda_reward": 309, "reco_loss": 309, "reward_loss": 309, "free_nat": 309, "nat": 309, "delayed_clamp": 309, "global_averag": 309, "value_loss": 310, "fake_data": 310, "1606": 311, "03476": 311, "discriminator_network": 311, "use_grad_penalti": 311, "gp_lambda": 311, "discrimin": 311, "ddpgloss": [312, 321, 378, 384, 391, 397, 403, 409], "td3loss": [312, 321, 384], "value_network_update_interv": 312, "qvalueclass": 313, "loss_value_diff": 313, "diff": 313, "old_polici": 314, "new_polici": 314, "apart": [314, 404], "dtarg": 314, "samples_mc_kl": 314, "analyt": [314, 409], "decrement": 314, "loss_": [315, 363, 387, 391, 397], "equip": [315, 394, 396], "gh": 315, "_acceptedkei": 315, "_forward_value_estimator_kei": 315, "alter": [315, 386], "value_estim": [315, 331, 332, 333, 334, 335, 387, 391, 404], "myloss": 315, "action2": 315, "augment": [315, 398, 400, 407], "set_exploration_typ": [315, 364, 384, 386, 393, 394, 396, 403, 409], "deterministic_sampling_mod": 315, "convert_to_funct": [315, 391], "expand_dim": 315, "create_target_param": [315, 391], "compare_against": [315, 391], "_param": 315, "expans": 315, "resampl": 315, "_target_param": 315, "network_nam": 315, "blend": 315, "add_random_modul": [315, 387], "proxim": [317, 393, 404], "flavor": [317, 391, 403, 404, 409], "clipppoloss": [317, 384, 393, 404], "klpenppoloss": [317, 384], "06347": 317, "gae": [317, 384, 387, 391, 393, 404], "ppo_loss": 317, "tdlambda": [317, 325, 387, 391], "base_lay": 317, "randn_lik": 317, "samplelogprob": 317, "ay8zfzm0tdd": 318, "sub_sample_len": 318, "subsampl": [318, 359, 388], "action_log_prob_actor": 318, "state_action_value_actor": [318, 322, 323], "connectionist": 319, "1992": 319, "doi": 319, "1007": 319, "bf00992696": 319, "actor_net": [319, 391, 393], "1801": 320, "01290": 320, "applic": [320, 329, 395, 396, 405], "1812": 320, "05905": 320, "redqloss": [321, 384], "math": 321, "theta_t": [321, 405], "theta_": [321, 405], "polyak": 321, "minimalist": 322, "06860": 322, "policy_nois": [322, 323], "noise_clip": [322, 323], "td3_bc": 322, "bc_loss": 322, "lmbd": 322, "next_state_valu": [322, 323, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 384], "td0": [324, 391, 403], "strict_shap": 326, "view_a": 326, "qmixer": [329, 384], "local_valu": 329, "visibl": [329, 404], "dafault": 329, "acceptedkei": 329, "global_valu": 329, "penultim": 329, "local_value_network": 329, "mixer_network": 329, "value_modul": [329, 393, 409], "qnet": [329, 391], "next_val_kei": 330, "pred_next_v": 330, "usus": 330, "mse": 330, "q_valu": 330, "n_steps_to_next": 330, "value_next_st": 330, "1506": [331, 336, 344], "02438": [331, 336, 344], "exponenti": [331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 366], "average_ga": [331, 393], "skip_exist": [331, 332, 333, 334], "time_dim": [331, 333, 334, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348], "advang": 331, "gradient_mod": 331, "value_error": [331, 332, 333, 334, 335], "target_param": [331, 332, 333, 334, 335, 391, 404], "98": [331, 332, 333, 334, 391, 392, 405], "94": [331, 334, 392, 405], "unpack": [331, 332, 333, 334], "tensor_kei": [331, 332, 333, 334, 335], "next_valu": [331, 332, 333, 334, 335], "aka": [332, 392, 403], "average_reward": [332, 333, 334], "tdestim": [332, 333, 335], "infti": 333, "valuefunctionbas": 335, "old_stat": [336, 338, 340, 342, 344, 345, 347], "new_stat": [336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348], "rolling_gamma": [340, 341, 342, 343, 345, 346, 347, 348], "g1": [340, 341, 342, 343, 345, 346, 347, 348], "g2": [340, 341, 342, 343, 345, 346, 347, 348], "g3": [340, 341, 342, 343, 345, 346, 347, 348], "g4": [340, 341, 342, 343, 345, 346, 347, 348], "v3": [340, 341, 342, 343, 345, 346, 347, 348], "preproc": [349, 403], "as_non_tensor": [349, 403], "render_method": 349, "pass_tensordict": 349, "syntat": 349, "sugar": 349, "out_file_bas": 350, "skip_reset": 350, "center_crop": 351, "make_grid": 351, "csv": [351, 353, 355, 392, 399, 400], "wandb": [351, 355, 358, 399, 409], "tensorboard": [351, 355, 357, 399, 409], "log_dir": [351, 352, 353, 355, 357, 358, 392, 400], "cheetah_video": 351, "run_video": 351, "openxexperiencereplai": 351, "run_video_0": 351, "templat": 352, "pt": [353, 388, 406], "video_fp": 353, "minim": [353, 407], "dependeci": 353, "cur_dir": 353, "csv_log": 353, "add_video": 353, "video_": 353, "experiment_nam": [354, 355], "uuid": [354, 392, 410], "logger_typ": 355, "logger_nam": 355, "mlflow": [355, 356], "wandb_kwarg": 355, "mlflow_kwarg": 355, "tracking_uri": 356, "uri": 356, "datastor": 356, "tb_log": 357, "tensoarboard": 357, "td_log": 357, "save_dir": 358, "resum": 358, "uncategor": 358, "sub_traj_len": 359, "min_sub_traj_len": 359, "register_op": [359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 388, 392], "process_optim_batch": [359, 365, 366, 388], "td_out": [359, 367], "_process_optim_batch_hook": [359, 388], "batch_subsampl": 359, "clear_cuda": 360, "pre_optim_step": [360, 388], "log_pbar": [361, 362, 364, 366, 388, 392], "progress": [361, 362, 364, 368, 388, 392, 394, 410], "count_fram": 361, "pre_steps_log": [361, 362, 388], "count_frames_log": 361, "lognam": 362, "r_train": [362, 392], "log_reward": [362, 392], "loss_compon": 363, "appl": 363, "optimizer_hook": 363, "record_interv": [364, 391, 392], "record_fram": [364, 371, 391, 392], "policy_explor": [364, 378, 391, 392, 396, 400], "log_kei": [364, 392], "underestim": 364, "r_evalu": [364, 391], "flatten_tensordict": [365, 392], "max_dim": 365, "rb_trainer": 365, "batch_process": [365, 366, 367, 388], "post_loss": [365, 388], "999": [366, 392], "jitter": 366, "finfo": 366, "default_dtyp": 366, "reward_norm": 366, "update_reward_stat": 366, "normalize_reward": 366, "make_train": [367, 384], "_process_batch_hook": [367, 388], "select_kei": [367, 388], "versatil": [368, 395], "optim_steps_per_batch": [368, 388, 392], "clip_grad_norm": 368, "clip_norm": 368, "progress_bar": 368, "save_trainer_interv": 368, "log_interv": [368, 392], "save_trainer_fil": [368, 388], "update_weights_interv": [370, 392], "update_weight": 370, "post_step": [370, 388, 392], "cfg": [371, 372, 373, 374, 375, 376, 377, 378, 379, 382], "dictconfig": [371, 372, 373, 374, 376, 377, 378, 379, 382], "unknowingli": 371, "annealing_fram": [371, 391], "init_env_step": [371, 372, 391], "proof_environ": [372, 391], "sta": 372, "ot": 372, "actor_model_explor": [373, 374, 391], "make_env_kwarg": [373, 374], "targetnetupdat": [375, 377, 378], "replayargsconfig": 376, "target_net_updat": [378, 391, 392], "constitu": 378, "egreedywrapp": 378, "env_proof": 378, "obs_spec": 378, "net_valu": 378, "dir": [378, 388, 392], "gettempdir": 378, "argpars": [379, 382], "namespac": [379, 382], "parser": [379, 382], "transformed_env_constructor": [379, 384], "num_env_per_collector": [380, 381], "video_tag": 382, "norm_obs_onli": 382, "use_env_cr": 382, "custom_env_mak": 382, "custom_env": 382, "return_transformed_env": 382, "action_dim_gsd": 382, "state_dim_gsd": 382, "obs_norm_state_dict": 382, "wheter": 382, "maker": [382, 392], "asyncdatacollector": 384, "distributedsyncdatacollector": 384, "submitit_delayed_launch": 384, "raycollector": 384, "rational": 384, "footnot": 384, "binarydiscretetensorspec": 384, "boundedtensorspec": 384, "discretetensorspec": 384, "lazystackedcompositespec": 384, "lazystackedtensorspec": 384, "multidiscretetensorspec": 384, "multionehotdiscretetensorspec": 384, "onehotdiscretetensorspec": 384, "unboundedcontinuoustensorspec": 384, "unboundeddiscretetensorspec": 384, "prompttensordicttoken": 384, "rolloutfrommodel": 384, "tokenizeddatasetload": 384, "create_infinite_iter": 384, "constantklcontrol": 384, "adaptiveklcontrol": 384, "consolidate_spec": 384, "check_no_exclusive_kei": 384, "contains_lazy_spec": 384, "nested2t": 384, "h5combin": 384, "h5split": 384, "tictactoeenv": 384, "check_marl_group": 384, "get_available_librari": 384, "terminated_or_trunc": 384, "dreamerdecod": 384, "braxwrapp": 384, "dmcontrolwrapp": 384, "jumanjienv": 384, "jumanjiwrapp": 384, "meltingpotenv": 384, "meltingpotwrapp": 384, "mogymenv": 384, "mogymwrapp": 384, "multithreadedenvwrapp": 384, "openmlenv": 384, "openspielwrapp": 384, "openspielenv": 384, "pettingzooenv": [384, 403], "robohiveenv": 384, "smacv2env": 384, "smacv2wrapp": 384, "vmaswrapp": 384, "qvaluehook": 384, "distributionalqvaluehook": 384, "reset_nois": 384, "cemplann": 384, "mpcplannerbas": 384, "mppiplann": 384, "independentnorm": 384, "normalparamwrapp": 384, "truncatednorm": 384, "maskedonehotcategor": 384, "inv_softplu": 384, "vmapmodul": 384, "distributionaldqnloss": [384, 392], "discretesacloss": 384, "crossqloss": 384, "iqlloss": 384, "discreteiqlloss": 384, "cqlloss": 384, "discretecqlloss": 384, "gailloss": 384, "dtloss": 384, "onlinedtloss": 384, "td3bcloss": 384, "ppoloss": 384, "a2closs": 384, "reinforceloss": 384, "dreameractorloss": 384, "dreamermodelloss": 384, "dreamervalueloss": 384, "td0estim": [384, 391], "td1estim": [384, 391], "td0_return_estim": 384, "td0_advantage_estim": 384, "td1_return_estim": 384, "vec_td1_return_estim": 384, "td1_advantage_estim": 384, "vec_td1_advantage_estim": 384, "td_lambda_return_estim": 384, "vec_td_lambda_return_estim": 384, "td_lambda_advantage_estim": 384, "vec_td_lambda_advantage_estim": 384, "generalized_advantage_estim": 384, "vec_generalized_advantage_estim": 384, "reward2go": 384, "distance_loss": [384, 391], "hold_out_net": 384, "hold_out_param": [384, 391], "softupd": [384, 391, 392, 394, 397, 400, 403], "hardupd": [384, 391, 397], "batchsubsampl": [384, 388], "clearcudacach": 384, "countframeslog": 384, "logreward": [384, 388, 392], "optimizerhook": [384, 392], "replaybuffertrain": [384, 388, 392], "rewardnorm": 384, "selectkei": [384, 388], "trainerhookbas": [384, 388, 392], "updateweight": [384, 388, 392], "make_collector_offpolici": 384, "make_collector_onpolici": 384, "make_dqn_loss": 384, "make_replay_buff": [384, 391], "make_target_updat": 384, "parallel_env_constructor": [384, 391], "sync_async_collector": 384, "sync_sync_collector": 384, "correct_for_frame_skip": 384, "get_stats_random_rollout": 384, "mlflowlogg": 384, "get_logg": 384, "generate_exp_nam": 384, "journei": 385, "textbook": 385, "highlight": [385, 403], "ever": [385, 404], "bump": 385, "think": [385, 393, 403, 404, 410], "benefit": [385, 395, 403, 404, 407], "pr": 385, "ground": [386, 391, 405], "recycl": [386, 407], "impos": 386, "noisier": 386, "Their": [386, 403, 404], "consistentdropoutmodul": 386, "sd": 386, "prob_modul": 386, "pick": [386, 391, 392, 396], "hopefulli": [386, 392], "functional_modul": 386, "make_funct": 386, "mathbb": [386, 392], "rightarrow": [386, 392], "soften": 386, "backbon": [386, 394, 396, 402, 409], "make_actor": 386, "make_valu": 386, "shared_param": 386, "make_common": 386, "reusabl": [387, 391, 407], "swappabl": [387, 391], "characterist": [387, 391, 405], "trainabl": [387, 391, 397, 406], "smth": [387, 391], "metric": [387, 391], "plenti": 387, "amort": [387, 392, 393], "told": [387, 393], "pseudo": [387, 398, 405], "buri": 387, "str_valu": 387, "nutshel": [387, 391], "barto": [387, 403, 404], "chapter": [387, 399], "significantli": [387, 391, 392, 397, 404], "next_stat": 387, "value_net_loss": 387, "pow": [387, 391], "room": 387, "signifi": [387, 403, 404], "underperform": 387, "thin": 387, "intric": [387, 396], "believ": 388, "scheme": [388, 410], "substenti": 388, "_pre_steps_log_hook": 388, "_pre_optim_hook": 388, "sub_batch": 388, "_post_loss_hook": 388, "_post_optim_hook": 388, "post_optim": [388, 392], "_post_optim_log": 388, "post_optim_log": 388, "_post_steps_hook": 388, "_post_steps_log_hook": 388, "post_steps_log": 388, "reserv": 388, "logginghook": 388, "logging_hook": 388, "save_dict": 388, "some_valu": 388, "torchsnapshot": 388, "ckpt_backend": 388, "filepath": 388, "save_train": 388, "load_from_fil": 388, "57": [390, 392, 405, 406, 408], "671": [390, 406, 408], "galleri": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "mem": [390, 408], "mb": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410], "torchrl_demo": [390, 408, 409], "203": [390, 405, 408, 409], "5054": [390, 408, 409], "torchrl_env": [390, 408, 410], "911": [390, 408, 410], "4806": [390, 405, 408, 410], "dqn_with_rnn": [390, 394, 408], "273": [390, 394, 405, 408], "2250": [390, 394, 408], "rb_tutori": [390, 407, 408], "55": [390, 392, 403, 405, 406, 407, 408], "312": [390, 395, 396, 405, 407, 408], "493": [390, 405, 407, 408], "49": [390, 391, 392, 405, 406, 408], "436": [390, 405, 408], "311": [390, 405, 408], "coding_dqn": [390, 392, 408], "1064": [390, 408], "coding_ddpg": [390, 391, 408], "51": [390, 391, 392, 405, 406, 408], "750": [390, 391, 408], "324": [390, 391, 405, 408], "multiagent_ppo": [390, 404, 408], "752": [390, 404, 408], "326": [390, 404, 405, 408], "multiagent_competitive_ddpg": [390, 403, 408], "555": [390, 403, 405, 408], "315": [390, 397, 403, 405, 408], "coding_ppo": [390, 393, 408], "25": [390, 391, 392, 393, 394, 403, 405, 408], "696": [390, 393, 408], "pretrained_model": [390, 406, 408], "4232": [390, 408], "multi_task": [390, 402, 408], "806": [390, 402, 408], "313": [390, 393, 402, 405, 408], "165": [390, 396, 405, 408], "007": [390, 395, 408], "687": [390, 397, 405, 408], "766": [390, 400, 408], "317": [390, 400, 405, 408], "869": [390, 398, 408], "606": [390, 399, 405, 408], "343": [390, 399, 405, 408], "author": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 407, 410], "vincent": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 407, 410], "moen": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 407, 410], "assembl": 391, "focus": [391, 397], "straightforward": [391, 392, 395, 396, 397, 398, 407], "maxim": [391, 397, 405], "transpar": [391, 394], "illustr": [391, 392, 396, 407], "bash": 391, "is_fork": [391, 392, 393, 394, 403, 404, 406], "get_start_method": [391, 392, 393, 394, 403, 404, 406], "collector_devic": 391, "loss_dict": 391, "oblivi": [391, 393, 407], "elementari": 391, "didact": 391, "dilut": 391, "pessimist": [391, 392, 393], "target_actor_network_param": 391, "actor_in_kei": 391, "actor_crit": 391, "noth": [391, 393], "compromis": 391, "hp": 391, "_value_estim": 391, "elif": [391, 392], "notimplementederror": 391, "unknown": 391, "_loss_actor": 391, "td_copi": 391, "actor_network_param": [391, 403], "value_network_param": [391, 403], "_loss_valu": 391, "pred_val": 391, "target_value_network_param": 391, "glue": 391, "_forward": 391, "remaind": 391, "env_librari": 391, "env_task": 391, "env_arg": [391, 392], "friendli": 391, "torchr": 391, "rescal": 391, "presum": 391, "make_transformed_env": 391, "reward_sc": 391, "marker": 391, "env_per_collector": 391, "transform_state_dict": 391, "make_t_env": 391, "cheat": 391, "10m": 391, "cautiou": 391, "magnitud": [391, 403], "thousand": [391, 394], "get_env_stat": 391, "proof_env": 391, "5000": [391, 392, 393, 400], "recal": [391, 393, 407], "ddpgmlpactor": 391, "ddpgmlpqnet": 391, "materi": 391, "ornsteinuhlenbeckprocessmodul": [391, 396], "make_ddpg_actor": 391, "q_net": 391, "tight": 391, "decoupl": [391, 397], "10_000": [391, 393], "traj_len": [391, 394], "make_record": 391, "recorder_obj": 391, "buffer_s": [391, 392], "random_crop_len": 391, "prb": 391, "buffer_scratch_dir": 391, "temporari": 391, "dataflow": 391, "ceil_div": 391, "utd": [391, 394], "update_to_data": 391, "realiz": 391, "_must_": 391, "001": [391, 405], "outdat": 391, "trick": [391, 392], "despit": 391, "optimizer_actor": 391, "lr": [391, 392, 393, 394, 400, 403, 404, 405], "weight_decai": [391, 392], "optimizer_valu": 391, "total_collection_step": 391, "pretti": [391, 395, 399, 407], "rewards_ev": 391, "collected_fram": 391, "r0": 391, "numel": [391, 393, 394, 400, 403, 406, 407], "current_fram": [391, 403], "sampled_tensordict": 391, "gn1": 391, "clip_grad_norm_": [391, 393, 403, 404, 405], "gn2": 391, "gn": [391, 405], "td_record": 391, "rn": 391, "set_descript": [391, 393, 394, 403, 404, 405], "2f": 391, "800": [391, 392], "2734": 391, "22it": [391, 393], "1600": [391, 392], "09": [391, 392, 403, 405], "871": 391, "94it": 391, "2400": [391, 392, 393], "1260": 391, "60it": [391, 405], "3200": [391, 392], "1587": [391, 405], "59it": [391, 392, 405], "4000": [391, 392, 393], "1826": 391, "83it": [391, 392], "48": [391, 392, 404, 405, 406], "4800": [391, 392, 405], "2018": [391, 403], "47it": [391, 405], "56": [391, 392, 405, 406], "5600": 391, "2176": [391, 392], "95it": [391, 392], "74": [391, 392, 405, 406], "59": [391, 392, 405, 406], "62": [391, 392, 405, 406, 407], "491": [391, 405], "93": [391, 392, 405, 406], "79": [391, 392, 405], "6400": [391, 409], "854": [391, 405], "57it": [391, 392, 405], "117": [391, 405], "271": [391, 405], "92": [391, 392, 405, 406], "72": [391, 392, 405, 406], "7200": 391, "07": [391, 392, 405, 406], "611": [391, 405], "05it": [391, 392], "97": [391, 392, 403, 405, 406], "382": [391, 405], "66": [391, 392, 405, 406], "8000": [391, 393], "38it": [391, 392], "61": [391, 392, 405, 406, 407], "60": [391, 392, 393, 403, 404, 405, 406, 407, 409], "212": [391, 405], "67": [391, 392, 402, 403, 405, 406], "8800": 391, "458": [391, 405], "12it": [391, 392], "45": [391, 392, 404, 405, 406], "111": [391, 405], "96": [391, 392, 405, 406], "9600": 391, "364": [391, 405], "81it": [391, 392], "275": [391, 405], "83": [391, 392, 405, 406], "69": [391, 392, 405, 406], "10400it": 391, "338": [391, 405], "11it": [391, 392, 394], "204": [391, 405], "plot": [391, 393, 394, 403, 404, 405], "mention": [391, 394, 407, 410], "matplotlib": [391, 393, 394, 403, 404, 405, 407, 410], "pyplot": [391, 393, 394, 403, 404, 405, 407, 410], "plt": [391, 393, 394, 403, 404, 405, 407, 410], "zip": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "legend": [391, 403], "xlabel": [391, 394, 404, 405], "ylabel": [391, 404], "tight_layout": 391, "takeawai": [391, 392], "distpatch": 391, "jupyt": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "ipynb": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410], "sphinx": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410], "road": 392, "aspect": [392, 397], "highest": [392, 396], "prerequisit": [392, 394], "lookup": 392, "cart": 392, "pole": 392, "un": 392, "actuat": 392, "frictionless": 392, "duelingcnndqnet": 392, "egreedymodul": [392, 394, 396, 400], "is_notebook": 392, "shell": 392, "get_ipython": 392, "__class__": 392, "zmqinteractiveshel": 392, "qtconsol": 392, "terminalinteractiveshel": 392, "ipython": [392, 404, 405], "nameerror": [392, 403], "umbrella": 392, "misplac": 392, "misus": 392, "orchestr": [392, 397, 399], "five": 392, "64x64": 392, "motion": [392, 405], "obs_norm_sd": 392, "mp_context": 392, "simpler": [392, 395], "get_norm_stat": 392, "test_env": 392, "make_model": 392, "dummy_env": 392, "init_bia": 392, "exploration_modul": [392, 394, 396, 400], "eps_greedy_v": 392, "eps_greedy_val_env": 392, "actor_explor": 392, "get_replay_buff": 392, "n_optim": [392, 397, 398], "themselv": 392, "parametriz": 392, "get_collector": 392, "cl": 392, "bunch": 392, "ubiquit": [392, 395], "get_loss_modul": 392, "target_updat": [392, 403], "995": [392, 405], "variat": 392, "2e": [392, 405], "wd": 392, "upd": 392, "harder": [392, 409], "5_000": 392, "500000": 392, "100000": 392, "005": [392, 403], "mandatori": [392, 393, 404, 405], "fairer": 392, "budget": 392, "dqn_exp_": 392, "uuid1": [392, 410], "9895": 392, "0737": 392, "registr": 392, "cumbersom": 392, "buffer_hook": 392, "weight_updat": 392, "aliv": 392, "total_reward": 392, "53": [392, 405, 406], "16it": 392, "3688": [392, 405], "9174": 392, "43": [392, 404, 405, 406], "43it": [392, 405], "07it": [392, 393, 394], "3445": 392, "86it": [392, 393, 394], "62it": [392, 405], "4295": [392, 405], "68it": [392, 405], "224": [392, 405], "09it": 392, "3505": 392, "58": [392, 405], "88it": 392, "288": [392, 405], "65": [392, 405, 406, 407], "56it": [392, 405], "71": [392, 405, 406], "75it": [392, 405], "3869": 392, "352": [392, 405], "77": [392, 405], "42it": [392, 405], "384": [392, 405], "91it": 392, "416": [392, 405], "85": [392, 405], "3657": [392, 405], "448": [392, 405], "52": [392, 405, 406], "480": [392, 393, 405, 406], "25it": 392, "544": [392, 405], "23it": [392, 405], "3991": 392, "576": [392, 405], "90": [392, 393, 403, 404, 405], "53it": 392, "3960": 392, "608": [392, 405], "34it": [392, 405], "640": 392, "39it": [392, 393], "3415": 392, "672": 392, "47": [392, 404, 405, 406, 407], "4173": 392, "704": 392, "04it": 392, "736": 392, "82it": [392, 393], "768": 392, "69it": [392, 405], "27it": 392, "832": 392, "91": [392, 405], "864": 392, "29it": 392, "896": 392, "89": [392, 405, 406], "928": 392, "24it": 392, "960": 392, "992": [392, 405], "50it": [392, 393, 405], "65it": [392, 405], "1056": 392, "08it": 392, "3475": 392, "1088": 392, "1120": 392, "15it": 392, "1152": 392, "1184": 392, "78it": [392, 393, 405], "3566": 392, "1216": 392, "33it": 392, "1248": 392, "1280": 392, "72it": [392, 405], "3718": 392, "1344": 392, "46it": 392, "1376": 392, "06it": 392, "1408": 392, "54it": [392, 405], "1440": 392, "93it": [392, 405], "1472": 392, "1504": 392, "26it": 392, "1536": 392, "03it": 392, "1568": 392, "55it": 392, "31it": 392, "1632": 392, "1696": 392, "67it": [392, 405], "1728": 392, "79it": [392, 405], "1760": 392, "63it": [392, 405], "1792": 392, "1824": 392, "19it": 392, "1856": 392, "1888": 392, "96it": 392, "1920": 392, "1952": 392, "1984": 392, "99it": 392, "2016": 392, "90it": 392, "2080": 392, "21it": 392, "2112": [392, 405], "76it": [392, 405], "2144": 392, "49it": [392, 405], "2208": 392, "45it": 392, "4082": [392, 405], "2240": 392, "2272": 392, "2336": 392, "84it": 392, "2368": 392, "98it": [392, 405], "2432": 392, "77it": [392, 405], "2464": 392, "97it": 392, "2496": 392, "2528": [392, 405], "36it": 392, "2560": 392, "35it": 392, "87it": 392, "2624": 392, "2656": [392, 405], "71it": [392, 405], "54": [392, 404, 405, 406], "2688": 392, "2720": [392, 405], "64it": [392, 405], "2752": 392, "2784": 392, "2816": 392, "2848": 392, "48it": 392, "2880": 392, "2912": 392, "2944": [392, 405], "2976": [392, 405], "3040": 392, "3072": 392, "3104": 392, "63": [392, 405, 406], "3136": 392, "70it": [392, 405], "3168": 392, "30it": 392, "3778": 392, "3232": [392, 405], "1667": 392, "3264": 392, "18it": 392, "3296": 392, "3328": 392, "3899": 392, "3360": 392, "68": [392, 405, 406], "3392": 392, "3424": 392, "3456": [392, 405], "00it": [392, 393, 405], "70": [392, 393, 403, 404, 405, 406], "3488": 392, "3520": 392, "73": [392, 405], "44it": 392, "4021": 392, "3552": 392, "3584": 392, "66it": [392, 405], "3616": 392, "3648": 392, "3680": 392, "13it": [392, 405], "3712": 392, "40it": 392, "3744": 392, "76": [392, 405], "3776": 392, "51it": 392, "3808": 392, "3840": 392, "3872": 392, "78": [392, 405, 406], "3904": 392, "3936": 392, "3968": 392, "4032": 392, "17it": 392, "4064": 392, "82": [392, 405], "4096": 392, "4128": [392, 405], "4160": 392, "4192": 392, "4224": 392, "4256": [392, 405], "4288": [392, 405], "4320": 392, "4352": 392, "4384": 392, "32it": 392, "4416": 392, "4448": 392, "4480": 392, "4512": 392, "4544": 392, "4576": 392, "4608": 392, "4640": 392, "74it": [392, 405], "4704": 392, "85it": 392, "4736": 392, "4768": 392, "61it": [392, 405], "4832": 392, "4864": 392, "4896": 392, "4928": 392, "4960": 392, "4992": 392, "92it": [392, 405], "5024it": 392, "print_csv_files_in_fold": 392, "folder_path": 392, "csv_file": 392, "output_str": 392, "dirpath": 392, "endswith": 392, "strip": 392, "tmp": [392, 407], "tmpw3wns9ib": 392, "dqn_exp_3c297b70": 392, "863c": 392, "11ef": [392, 410], "be50": [392, 410], "0242ac110002": [392, 410], "42945271730422974": 392, "39912933111190796": 392, "40816524624824524": 392, "39912936091423035": 392, "24665552377700806": 392, "1648561954498291": 392, "25658977031707764": 392, "22388112545013428": 392, "22686168551445007": 392, "32778558135032654": 392, "26448163390159607": 392, "26460185647010803": 392, "28539058566093445": 392, "grad_norm_0": 392, "743212938308716": 392, "9283475875854492": 392, "9793596267700195": 392, "4844706058502197": 392, "2134244441986084": 392, "37471342086792": 392, "824601888656616": 392, "7353627681732178": 392, "376748085021973": 392, "10000000894069672": 392, "166666507720947": 392, "qvaluenetwork": 392, "worst": 392, "accuraci": 392, "fanci": [392, 398], "1065": 392, "talk": 393, "repetit": [393, 395, 398], "six": 393, "sophist": [393, 404], "invent": 393, "overview": [393, 397, 403, 404, 409], "theta_k": 393, "pi_": 393, "exceed": 393, "discourag": [393, 405], "indispens": 393, "analyz": 393, "lingua": 393, "franca": 393, "defaultdict": [393, 405], "3e": [393, 394, 403, 404], "max_grad_norm": [393, 403, 404], "sub_batch_s": 393, "num_epoch": [393, 404], "entropy_ep": [393, 404], "charact": 393, "inverteddoublependulum": 393, "transmit": 393, "stai": 393, "confid": [393, 403, 404], "ran": 393, "f_": 393, "mu_": 393, "difficulti": [393, 410], "d_ob": 393, "d_action": 393, "policy_modul": [393, 403, 404], "briefli": [393, 403, 404], "refil": [393, 404], "easiest": [393, 397, 403, 404], "mathemat": [393, 403, 404], "tradeoff": [393, 404], "advantage_modul": 393, "lr_schedul": [393, 405], "cosineannealinglr": [393, 405], "eval_str": 393, "tensordict_data": [393, 404], "data_view": [393, 404], "subdata": [393, 403, 404], "cum_reward_str": 393, "4f": [393, 394, 405], "stepcount_str": 393, "param_group": [393, 403], "lr_str": 393, "eval_rollout": 393, "nice": [393, 395, 398], "468": [393, 405], "6207": 393, "0902": 393, "0003": [393, 394, 405], "470": [393, 405], "1295": 393, "3000": 393, "474": [393, 405], "1628": 393, "476": [393, 405], "37it": [393, 405], "1805": 393, "0002": [393, 405], "478": [393, 405], "2051": 393, "6000": 393, "479": [393, 405], "2284": [393, 405], "7000": 393, "2295": 393, "02it": [393, 405], "9000": 393, "472": [393, 405], "2413": 393, "2516": 393, "cap": [393, 407], "figsiz": [393, 405], "subplot": [393, 403, 405, 410], "titl": [393, 394, 404, 405], "bit": [393, 394, 395, 403, 404, 407], "84x84": 394, "accessori": 394, "stamp": 394, "assist": 394, "emb": 394, "n_cell": 394, "customiz": 394, "wouldn": 394, "qval": 394, "stoch_polici": 394, "opportun": [394, 403], "uniniti": 394, "again": [394, 395, 396, 398, 404, 406, 407, 410], "redund": 394, "strongli": 394, "sake": [394, 406, 407], "20_000": [394, 405], "longest": 394, "npai": 394, "action_spread": 394, "142": [394, 405], "0006": [394, 405], "73it": [394, 405], "150": [394, 405], "topic": [395, 396, 397], "straight": 395, "backtrack": 395, "encapsul": [395, 396, 397], "reset_with_act": 395, "2122": 395, "tp": 395, "stepped_data": 395, "spatial": 395, "useless": 395, "policyless": 395, "appreci": 395, "monitor": 395, "examin": [395, 403], "tackl": 396, "delv": 396, "bypass": 396, "extractor": 396, "palliat": 396, "additivegaussianmodul": [396, 403], "had": [396, 398], "exploration_polici": [396, 403], "greedili": 396, "2d": [396, 403, 404], "innov": [396, 397], "rollout_explor": 396, "sole": 397, "tradit": [397, 403], "supervis": [397, 398, 407, 410], "n_collect": 397, "get_next_batch": 397, "ddpg_loss": 397, "total_loss": 397, "prove": 397, "reliev": 397, "concern": 397, "accustom": 398, "surprisingli": 398, "fundament": 398, "art": [398, 403, 404], "multirpocess": 398, "countless": 398, "yourself": [398, 403, 404], "314": [398, 405, 409], "lightweight": 399, "portabl": 399, "everywher": 399, "log_scalar": 399, "elaps": 399, "my_scalar": 399, "saw": [399, 405, 407], "excess": 399, "lesson": 400, "voluntarili": 400, "value_mlp": 400, "100_000": 400, "init_rand_step": 400, "training_loop": 400, "video_record": 400, "arbitrarili": 400, "total_count": 400, "total_episod": 400, "t0": 400, "t1": 400, "conclud": [400, 406], "tutorials_python": 401, "tutorials_jupyt": 401, "env1_obs_kei": 402, "observation_stand": 402, "env2_obs_kei": 402, "observation_walk": 402, "tdreset1": 402, "tdreset2": 402, "lazy_stack": 402, "policy_common": 402, "policy_stand": 402, "policy_walk": 402, "But": 402, "env1_mak": 402, "env2_mak": 402, "_single_task": 402, "td_rollout": 402, "matteo": [403, 404], "bettini": [403, 404], "benchmarl": [403, 404], "simple_tag": 403, "maddpg": [403, 404], "multiagentparticleenviron": 403, "mpe": 403, "centralis": [403, 404], "tie": [403, 404], "iddpg": [403, 404], "optimis": [403, 404], "typical": 403, "richard": 403, "andrew": 403, "mit": 403, "press": 403, "mathbf": [403, 404], "pi": [403, 404, 405], "decentralis": [403, 404], "literatur": [403, 404], "overcom": [403, 404], "stationari": [403, 404], "concurr": [403, 404], "establish": 403, "gui": [403, 404], "is_sphinx": 403, "__sphinx_build__": 403, "n_iter": [403, 404], "evad": 403, "iteration_when_stop_training_evad": 403, "memory_s": 403, "n_optimiser_step": 403, "train_batch_s": 403, "polyak_tau": 403, "chaser": 403, "red": 403, "circl": [403, 404], "touch": [403, 405], "penal": [403, 404], "acceler": [403, 404], "obstacl": 403, "drag": [403, 404], "elast": [403, 404], "collis": [403, 404], "imped": 403, "n_chaser": 403, "n_evad": 403, "n_obstacl": 403, "use_vma": 403, "simple_tag_v3": 403, "num_good": 403, "num_adversari": 403, "num_obstacl": 403, "max_cycl": 403, "num_vmas_env": [403, 404], "num_good_ag": 403, "num_landmark": 403, "adversary_1": 403, "four": [403, 404, 405], "n_agents_in_that_group": 403, "stress": [403, 404], "paramount": [403, 404], "n_rollout_step": [403, 404], "evolut": [403, 404], "group_nam": 403, "n_agents_in_group": 403, "minor": 403, "agents_exploration_polici": 403, "utilis": [403, 404], "withing": 403, "n_obs_per_ag": [403, 404], "n_actions_per_ag": [403, 404], "share_parameters_polici": [403, 404], "policy_net": [403, 404], "_agent": 403, "grant": [403, 404], "converg": [403, 404], "share_parameters_crit": [403, 404], "obs_act": 403, "cat_modul": 403, "critic_modul": 403, "fantast": [403, 404], "reset_td": 403, "interfer": 403, "flatten_kei": 403, "process_batch": 403, "group_shap": 403, "get_item_shap": [403, 404], "nested_done_kei": 403, "nested_terminated_kei": 403, "desc": [403, 404], "episode_reward_mean_": 403, "episode_reward_mean_map": 403, "train_group_map": 403, "group_batch": 403, "_group": 403, "loss_nam": 403, "episode_reward_mean": [403, 404], "episode_reward_mean_adversari": 403, "episode_reward_mean_ag": 403, "proce": 403, "screen": 403, "fig": 403, "set_ylabel": 403, "axvlin": 403, "color": 403, "orang": 403, "set_xlabel": 403, "video_logg": 403, "vmas_log": 403, "env_with_rend": 403, "vmas_rend": 403, "print_log_dir": 403, "profici": [403, 404], "lidar": 404, "sensor": 404, "mappo": 404, "ippo": 404, "analys": 404, "visualis": 404, "vmas_devic": 404, "6_000": 404, "minibatch_s": 404, "generalis": 404, "simd": 404, "warp": 404, "todai": 404, "surround": 404, "dot": [404, 405], "collid": 404, "scenario_nam": 404, "final_rew": 404, "agent_collis": 404, "critic_net": 404, "minibatch": 404, "episode_reward_mean_list": 404, "critic_network_param": 404, "target_critic_network_param": 404, "4579917788505554": 404, "23260341584682465": 404, "1713813543319702": 404, "386345624923706": 404, "8939578533172607": 404, "2214083671569824": 404, "1770293712615967": 404, "6274709701538086": 404, "73148250579834": 404, "737316608428955": 404, "xvfb": 404, "pyvirtualdisplai": 404, "1400": [404, 405], "900": 404, "pil": 404, "rendering_callback": 404, "fromarrai": 404, "gif": 404, "save_al": 404, "append_imag": 404, "freeli": 405, "undertaken": 405, "broader": 405, "wider": 405, "algebra": 405, "acquaint": 405, "avenu": 405, "_apply_to_composit": 405, "default_x": 405, "default_i": 405, "upward": 405, "angular": 405, "sin": 405, "rad": 405, "sec": 405, "angl": 405, "deleg": 405, "new_th": 405, "new_thdot": 405, "g_forc": 405, "angle_norm": 405, "albeit": 405, "high_th": 405, "high_thdot": 405, "low_th": 405, "low_thdot": 405, "trivial": 405, "irrelev": 405, "_make_spec": 405, "td_param": 405, "render_fp": 405, "random_": 405, "_make_step": 405, "staticmethod": 405, "showcas": 405, "skeleton": 405, "_apply_transform": [405, 410], "_inv_apply_transform": [405, 410], "subset": [405, 406], "sine": 405, "cosin": 405, "sintransform": 405, "costransform": 405, "t_sin": 405, "t_co": 405, "cat_transform": 405, "simple_rollout": 405, "unexplor": 405, "init_td": 405, "traj_return": 405, "last_reward": 405, "is_ipython": 405, "inlin": 405, "get_backend": 405, "ion": 405, "gcf": 405, "clear_output": 405, "625": 405, "0748": 405, "519": 405, "58it": 405, "0499": 405, "4472": 405, "073": 405, "0685": 405, "0408": 405, "552": 405, "5154": 405, "9086": 405, "9385": 405, "155": 405, "2568": 405, "4981": 405, "223": 405, "8929": 405, "4491": 405, "581": 405, "3233": 405, "0664": 405, "596": 405, "1021": 405, "5263": 405, "9579": 405, "5807": 405, "8075": 405, "2009": 405, "5525": 405, "914": 405, "2894": 405, "0115": 405, "0977": 405, "1845": 405, "1830": 405, "4858": 405, "233": 405, "2863": 405, "0297": 405, "464": 405, "4617": 405, "5997": 405, "904": 405, "1647": 405, "0777": 405, "901": 405, "4709": 405, "6813": 405, "8317": 405, "3221": 405, "5554": 405, "276": 405, "3353": 405, "701": 405, "8570": 405, "6656": 405, "463": 405, "7779": 405, "6911": 405, "875": 405, "0796": 405, "7082": 405, "308": 405, "0421": 405, "1496": 405, "5037": 405, "1755": 405, "5029": 405, "9454": 405, "665": 405, "9330": 405, "2118": 405, "444": 405, "0995": 405, "6294": 405, "3146": 405, "2909": 405, "461": 405, "9720": 405, "1298": 405, "9923": 405, "0345": 405, "3438": 405, "424": 405, "6953": 405, "5233": 405, "411": 405, "8011": 405, "5329": 405, "2677": 405, "6969": 405, "7010": 405, "376": 405, "80it": 405, "9352": 405, "7707": 405, "6178": 405, "5646": 405, "348": 405, "7304": 405, "9407": 405, "942": 405, "3882": 405, "7604": 405, "3507": 405, "8928": 405, "258": 405, "6978": 405, "4641": 405, "549": 405, "6047": 405, "5005": 405, "4136": 405, "2993": 405, "3222": 405, "4046": 405, "7314": 405, "6331": 405, "9318": 405, "961": 405, "8331": 405, "1604": 405, "4099": 405, "4761": 405, "125": 405, "4262": 405, "6363": 405, "3593": 405, "7377": 405, "2847": 405, "3443": 405, "867": 405, "3592": 405, "4760": 405, "441": 405, "9950": 405, "8021": 405, "3528": 405, "1214": 405, "708": 405, "4023": 405, "3583": 405, "041": 405, "3801": 405, "0310": 405, "120": 405, "4244": 405, "2039": 405, "4850": 405, "8748": 405, "706": 405, "4897": 405, "9210": 405, "8964": 405, "0832": 405, "3934": 405, "456": 405, "8971": 405, "2933": 405, "3377": 405, "6996": 405, "2274": 405, "8916": 405, "098": 405, "2660": 405, "9110": 405, "4503": 405, "6956": 405, "9172": 405, "4026": 405, "946": 405, "9229": 405, "5205": 405, "294": 405, "8872": 405, "6637": 405, "019": 405, "9281": 405, "2082": 405, "724": 405, "8561": 405, "6574": 405, "357": 405, "4138": 405, "5230": 405, "385": 405, "4065": 405, "5642": 405, "921": 405, "9786": 405, "4129": 405, "5831": 405, "266": 405, "7723": 405, "4152": 405, "0898": 405, "389": 405, "5155": 405, "5376": 405, "5616": 405, "4094": 405, "283": 405, "5333": 405, "4803": 405, "895": 405, "6566": 405, "2588": 405, "662": 405, "4732": 405, "7503": 405, "068": 405, "0714": 405, "3370": 405, "059": 405, "8612": 405, "1915": 405, "3855": 405, "0349": 405, "9644": 405, "4538": 405, "445": 405, "0392": 405, "4080": 405, "1648": 405, "9599": 405, "143": 405, "4284": 405, "5946": 405, "2590": 405, "9181": 405, "4621": 405, "9075": 405, "1772": 405, "9444": 405, "351": 405, "9391": 405, "5595": 405, "8673": 405, "6240": 405, "5919": 405, "1071": 405, "9127": 405, "251": 405, "9799": 405, "3131": 405, "9612": 405, "9705": 405, "8741": 405, "2230": 405, "0972": 405, "0337": 405, "0350": 405, "0654": 405, "2441": 405, "4596": 405, "362": 405, "103": 405, "4362": 405, "171": 405, "104": 405, "4041": 405, "6907": 405, "105": 405, "4664": 405, "2760": 405, "0299": 405, "9712": 405, "349": 405, "107": [405, 407], "3332": 405, "4479": 405, "772": 405, "108": 405, "4357": 405, "9591": 405, "543": 405, "109": 405, "6216": 405, "1353": 405, "692": 405, "110": 405, "6261": 405, "7086": 405, "496": 405, "7758": 405, "9818": 405, "112": 405, "7772": 405, "5055": 405, "113": 405, "5840": 405, "3180": 405, "2083": 405, "115": 405, "5275": 405, "6873": 405, "116": [405, 407], "4107": 405, "1624": 405, "6372": 405, "2571": 405, "118": 405, "4039": 405, "4428": 405, "119": 405, "4728": 405, "5628": 405, "6767": 405, "2466": 405, "522": 405, "121": [405, 410], "5873": 405, "5072": 405, "6548": 405, "3766": 405, "123": 405, "5134": 405, "1955": 405, "124": 405, "2481": 405, "0591": 405, "4500": 405, "3368": 405, "126": 405, "9708": 405, "7059": 405, "127": 405, "3031": 405, "2534": 405, "843": 405, "3327": 405, "6193": 405, "129": [405, 407], "4831": 405, "1172": 405, "2593": 405, "4219": 405, "962": 405, "8380": 405, "899": 405, "132": [405, 407], "2721": 405, "9048": 405, "166": 405, "133": 405, "2419": 405, "5248": 405, "2139": 405, "4278": 405, "135": 405, "0690": 405, "5140": 405, "136": 405, "1140": 405, "7402": 405, "137": 405, "5356": 405, "1636": 405, "138": 405, "0671": 405, "8798": 405, "139": 405, "8918": 405, "3298": 405, "307": 405, "140": 405, "1779": 405, "141": 405, "1771": 405, "3624": 405, "936": 405, "1683": 405, "4810": 405, "9373": 405, "4435": 405, "4396": 405, "8092": 405, "145": 405, "2572": 405, "146": 405, "4212": 405, "0260": 405, "147": [405, 407], "0939": 405, "6478": 405, "605": 405, "148": 405, "6606": 405, "7289": 405, "149": 405, "9300": 405, "7193": 405, "563": 405, "1166": 405, "8514": 405, "151": 405, "9108": 405, "0672": 405, "292": 405, "152": 405, "8591": 405, "3768": 405, "153": 405, "9976": 405, "154": 405, "0576": 405, "0067": 405, "935": 405, "4199": 405, "1722": 405, "156": [405, 407], "8310": 405, "3466": 405, "157": 405, "8631": 405, "2492": 405, "158": 405, "8763": 405, "1277": 405, "159": 405, "5562": 405, "7446": 405, "1082": 405, "9830": 405, "161": 405, "0946": 405, "5229": 405, "162": 405, "4574": 405, "6900": 405, "163": [405, 406], "2229": 405, "0318": 405, "482": 405, "164": 405, "0543": 405, "0817": 405, "761": 405, "2809": 405, "5118": 405, "366": 405, "1142": 405, "5635": 405, "167": 405, "1949": 405, "2327": 405, "982": 405, "168": 405, "0967": 405, "0387": 405, "457": 405, "169": 405, "0782": 405, "2150": 405, "170": 405, "5222": 405, "3725": 405, "9288": 405, "9837": 405, "1416": 405, "1099": 405, "173": 405, "8620": 405, "8475": 405, "174": 405, "1807": 405, "4375": 405, "175": 405, "1148": 405, "0645": 405, "2751": 405, "8313": 405, "177": 405, "9286": 405, "9770": 405, "178": 405, "5735": 405, "2837": 405, "179": 405, "2926": 405, "9489": 405, "180": 405, "1507": 405, "181": 405, "8724": 405, "3567": 405, "182": 405, "3574": 405, "6140": 405, "183": 405, "7895": 405, "2518": 405, "184": 405, "6146": 405, "185": 405, "8776": 405, "7358": 405, "186": 405, "3722": 405, "8428": 405, "187": 405, "7955": 405, "188": 405, "0092": 405, "7106": 405, "829": 405, "189": [405, 407], "28it": 405, "2264": 405, "6919": 405, "190": 405, "41it": 405, "1438": 405, "1362": 405, "191": 405, "0618": 405, "8217": 405, "9420": 405, "6765": 405, "193": 405, "7745": 405, "0709": 405, "194": 405, "9478": 405, "6867": 405, "195": 405, "6507": 405, "6225": 405, "196": 405, "2244": 405, "2195": 405, "197": 405, "5385": 405, "9263": 405, "198": 405, "1878": 405, "2374": 405, "8054": 405, "3504": 405, "557": 405, "0766": 405, "201": 405, "2011": 405, "8393": 405, "202": 405, "0803": 405, "7815": 405, "8363": 405, "2460": 405, "8643": 405, "2191": 405, "593": 405, "205": 405, "0773": 405, "1343": 405, "206": 405, "8657": 405, "207": 405, "9304": 405, "7584": 405, "208": [405, 407], "8752": 405, "2307": 405, "209": 405, "5250": 405, "4869": 405, "7837": 405, "5762": 405, "211": 405, "6661": 405, "8600": 405, "2502": 405, "1752": 405, "3075": 405, "8871": 405, "214": 405, "9406": 405, "8090": 405, "215": 405, "6291": 405, "8923": 405, "876": 405, "216": 405, "9504": 405, "21e": 405, "217": 405, "7431": 405, "7880": 405, "218": 405, "4463": 405, "5432": 405, "219": 405, "3793": 405, "3313": 405, "8843": 405, "0369": 405, "065": 405, "221": 405, "4828": 405, "8391": 405, "222": 405, "6265": 405, "2913": 405, "947": 405, "5541": 405, "1252": 405, "7342": 405, "2396": 405, "225": 405, "5936": 405, "1924": 405, "226": 405, "9975": 405, "2045": 405, "227": 405, "8367": 405, "9540": 405, "228": 405, "7259": 405, "6743": 405, "229": 405, "4827": 405, "7528": 405, "230": 405, "7361": 405, "8756": 405, "231": 405, "7646": 405, "1116": 405, "232": 405, "5426": 405, "8385": 405, "5662": 405, "8585": 405, "234": 405, "8234": 405, "7930": 405, "235": 405, "2648": 405, "9309": 405, "236": 405, "6817": 405, "237": 405, "0943": 405, "1533": 405, "238": 405, "3045": 405, "0483": 405, "239": 405, "6415": 405, "0201": 405, "241": 405, "4437": 405, "4365": 405, "242": 405, "0358": 405, "4943": 405, "243": 405, "1272": 405, "5003": 405, "1180": 405, "2637": 405, "245": 405, "7197": 405, "0873": 405, "246": 405, "2917": 405, "247": 405, "0160": 405, "0738": 405, "248": 405, "3689": 405, "0120": 405, "249": 405, "5570": 405, "0475": 405, "250": 405, "4423": 405, "2220": 405, "6803": 405, "252": 405, "1465": 405, "7214": 405, "253": 405, "8801": 405, "7034": 405, "254": 405, "9136": 405, "4076": 405, "7589": 405, "5013": 405, "8150": 405, "2241": 405, "257": 405, "0753": 405, "8081": 405, "1951": 405, "8314": 405, "259": 405, "0038": 405, "260": 405, "0889": 405, "4616": 405, "261": 405, "0655": 405, "262": 405, "8333": 405, "9476": 405, "263": 405, "7554": 405, "3798": 405, "264": 405, "3717": 405, "3947": 405, "529": 405, "265": 405, "3060": 405, "6495": 405, "7467": 405, "8889": 405, "267": 405, "8457": 405, "591": 405, "7137": 405, "0536": 405, "771": 405, "269": 405, "1651": 405, "388": 405, "270": 405, "8246": 405, "5709": 405, "281": 405, "7502": 405, "0521": 405, "032": 405, "272": 405, "5475": 405, "7253": 405, "2856": 405, "7130": 405, "274": 405, "2778": 405, "4122": 405, "8368": 405, "1841": 405, "9622": 405, "1603": 405, "003e": 405, "277": 405, "0247": 405, "346": 405, "278": 405, "2238": 405, "6418": 405, "279": 405, "0626": 405, "2538": 405, "280": 405, "0149": 405, "7380": 405, "2167": 405, "8911": 405, "282": 405, "8725": 405, "1983": 405, "8142": 405, "3709": 405, "284": 405, "4989": 405, "285": 405, "6464": 405, "6210": 405, "286": 405, "9726": 405, "0820": 405, "287": 405, "6975": 405, "9091": 405, "4926": 405, "4791": 405, "289": 405, "0905": 405, "3500": 405, "290": 405, "2287": 405, "291": 405, "9918": 405, "5543": 405, "9245": 405, "6444": 405, "631": 405, "293": 405, "0448": 405, "4769": 405, "8566": 405, "7208": 405, "295": 405, "0966": 405, "296": 405, "5303": 405, "1537": 405, "023": 405, "297": 405, "2682": 405, "564": 405, "298": 405, "4318": 405, "5063": 405, "299": 405, "7475": 405, "4190": 405, "8186": 405, "5077": 405, "301": 405, "1883": 405, "5291": 405, "302": 405, "3998": 405, "303": 405, "3622": 405, "0930": 405, "626": 405, "304": 405, "9500": 405, "5664": 405, "305": 405, "5697": 405, "3024": 405, "306": 405, "3117": 405, "0052": 405, "006": 405, "0981": 405, "9312": 405, "3873": 405, "309": 405, "0411": 405, "2650": 405, "1656": 405, "0228": 405, "004": 405, "1196": 405, "2478": 405, "7353": 405, "0812": 405, "3022": 405, "758": 405, "1406": 405, "4626": 405, "2156": 405, "851": 405, "316": 405, "1953": 405, "3774": 405, "6385": 405, "9917": 405, "318": 405, "2764": 405, "905": 405, "319": 405, "6391": 405, "9317": 405, "9748": 405, "2679": 405, "321": 405, "8495": 405, "5125": 405, "8177": 405, "6602": 405, "323": 405, "0704": 405, "5776": 405, "9833": 405, "1339": 405, "402": 405, "325": 405, "1238": 405, "9299": 405, "0227": 405, "327": 405, "7727": 405, "1607": 405, "336": 405, "328": 405, "3958": 405, "3223": 405, "763": 405, "329": 405, "4742": 405, "1797": 405, "330": 405, "0144": 405, "0085": 405, "791": 405, "331": 405, "8284": 405, "0428": 405, "332": 405, "7365": 405, "333": 405, "4566": 405, "0781": 405, "086": 405, "334": 405, "3355": 405, "0230": 405, "335": 405, "9346": 405, "0423": 405, "076": 405, "3711": 405, "1335": 405, "6855": 405, "337": 405, "0304": 405, "0023": 405, "8459": 405, "9998": 405, "4399": 405, "339": 405, "2303": 405, "1346": 405, "340": 405, "2915": 405, "7116": 405, "341": 405, "5560": 405, "0487": 405, "342": 405, "5119": 405, "061": 405, "3305": 405, "3705": 405, "957": 405, "344": 405, "6068": 405, "345": 405, "5731": 405, "3897": 405, "0376": 405, "347": 405, "0434": 405, "012": 405, "1300": 405, "1215": 405, "0968": 405, "0885": 405, "350": 405, "1348": 405, "0073": 405, "5052": 405, "4184": 405, "2817": 405, "8887": 405, "353": 405, "4779": 405, "1009": 405, "354": 405, "0604": 405, "599": 405, "355": 405, "4486": 405, "1176": 405, "656": 405, "356": 405, "2436": 405, "0668": 405, "8849": 405, "0012": 405, "358": 405, "7511": 405, "8804": 405, "359": [405, 409], "8870": 405, "6728": 405, "360": 405, "8841": 405, "5508": 405, "361": 405, "5242": 405, "0013": 405, "6185": 405, "363": 405, "1378": 405, "0204": 405, "0355": 405, "685": 405, "365": 405, "4884": 405, "0231": 405, "0014": 405, "6793": 405, "367": 405, "9834": 405, "863": 405, "368": 405, "6709": 405, "462": 405, "369": 405, "5199": 405, "9790": 405, "370": 405, "9401": 405, "7802": 405, "371": 405, "6723": 405, "372": 405, "2678": 405, "6201": 405, "373": 405, "2184": 405, "7385": 405, "374": 405, "01it": 405, "6344": 405, "617": 405, "375": 405, "20it": 405, "9945": 405, "0772": 405, "567": 405, "7576": 405, "0398": 405, "377": 405, "3396": 405, "0022": 405, "094": 405, "378": 405, "52it": 405, "3073": 405, "4018": 405, "379": 405, "1869": 405, "380": 405, "0481": 405, "1117": 405, "381": 405, "6823": 405, "981": 405, "8305": 405, "0210": 405, "383": 405, "4908": 405, "0272": 405, "538": 405, "3267": 405, "0111": 405, "7965": 405, "1796": 405, "0039": 405, "5396": 405, "386": 405, "3757": 405, "0490": 405, "387": 405, "1394": 405, "4187": 405, "2986": 405, "7954": 405, "1274": 405, "0063": 405, "813": 405, "390": 405, "8706": 405, "0114": 405, "391": 405, "6922": 405, "2423": 405, "392": 405, "9115": 405, "2602": 405, "393": [405, 409], "2449": 405, "0783": 405, "394": 405, "0631": 405, "0057": 405, "7444": 405, "395": 405, "3339": 405, "0167": 405, "396": 405, "397": 405, "4171": 405, "067": 405, "398": 405, "2618": 405, "5809": 405, "399": 405, "0054": 405, "3364": 405, "8733": 405, "0184": 405, "401": 405, "9137": 405, "0113": 405, "025": 405, "0386": 405, "0625": 405, "403": 405, "1332": 405, "0582": 405, "7816": 405, "404": 405, "8341": 405, "0941": 405, "405": 405, "8615": 405, "588": 405, "406": 405, "3849": 405, "008": 405, "407": 405, "9395": 405, "0765": 405, "055": 405, "408": 405, "2685": 405, "2235": 405, "688": 405, "409": 405, "3052": 405, "4249": 405, "410": 405, "6806": 405, "6383": 405, "3721": 405, "9981": 405, "412": 405, "1862": 405, "822": 405, "413": 405, "9811": 405, "0171": 405, "013": 405, "414": 405, "0252": 405, "0049": 405, "6205": 405, "415": 405, "1108": 405, "4921": 405, "9142": 405, "8130": 405, "417": 405, "1725": 405, "0036": 405, "3196": 405, "418": 405, "7795": 405, "0242": 405, "799": 405, "419": 405, "7737": 405, "0138": 405, "420": 405, "1462": 405, "0053": 405, "421": 405, "9226": 405, "6139": 405, "422": 405, "9889": 405, "0403": 405, "423": 405, "6194": 405, "0032": 405, "3989": 405, "0104": 405, "425": 405, "9960": 405, "0009": 405, "6009": 405, "426": 405, "2697": 405, "0914": 405, "427": 405, "1114": 405, "428": 405, "9862": 405, "1932": 405, "429": 405, "0637": 405, "0623": 405, "082": 405, "430": 405, "9906": 405, "2031": 405, "431": 405, "9948": 405, "0895": 405, "432": 405, "1970": 405, "0256": 405, "4231": 405, "0449": 405, "644": 405, "434": 405, "1039": 405, "1973": 405, "435": 405, "4561": 405, "1225": 405, "0211": 405, "2125": 405, "437": 405, "3866": 405, "0050": 405, "7202": 405, "438": 405, "6388": 405, "0072": 405, "439": 405, "1187": 405, "0015": 405, "5116": 405, "440": 405, "0432": 405, "0025": 405, "7809": 405, "1925": 405, "0103": 405, "442": 405, "9570": 405, "443": 405, "0871": 405, "5601": 405, "0165": 405, "0047": 405, "6061": 405, "2746": 405, "0027": 405, "7887": 405, "446": 405, "1835": 405, "0035": 405, "855": 405, "447": 405, "8420": 405, "548": 405, "2653": 405, "0126": 405, "9736": 405, "449": 405, "0594": 405, "0119": 405, "6196": 405, "450": 405, "4509": 405, "0373": 405, "451": 405, "0620": 405, "452": 405, "6898": 405, "3235": 405, "453": 405, "5879": 405, "454": 405, "8406": 405, "0694": 405, "455": 405, "8259": 405, "0235": 405, "8500": 405, "0024": 405, "4054": 405, "2027": 405, "0894": 405, "459": 405, "5966": 405, "460": 405, "6942": 405, "0016": 405, "4254": 405, "6703": 405, "0145": 405, "8124": 405, "0218": 405, "9196": 405, "0188": 405, "8986": 405, "0884": 405, "0084": 405, "5624": 405, "465": 405, "8862": 405, "5384": 405, "466": 405, "5837": 405, "467": 405, "8954": 405, "0101": 405, "6751": 405, "8063": 405, "0122": 405, "9635": 405, "469": 405, "0692": 405, "4216": 405, "1227": 405, "0586": 405, "162e": 405, "471": 405, "9690": 405, "4166": 405, "6324": 405, "473": 405, "0778": 405, "8548": 405, "0017": 405, "4408": 405, "475": [405, 409], "8125": 405, "1515": 405, "2733": 405, "0044": 405, "2836": 405, "477": 405, "7497": 405, "7681": 405, "8547": 405, "0105": 405, "7212": 405, "9848": 405, "0019": 405, "6498": 405, "1987": 405, "0011": 405, "5473": 405, "481": 405, "8991": 405, "6091": 405, "9189": 405, "5771": 405, "483": 405, "6781": 405, "7542": 405, "484": 405, "5959": 405, "0064": 405, "485": 405, "2547": 405, "486": 405, "0636": 405, "547": 405, "487": 405, "0065": 405, "488": 405, "1694": 405, "0083": 405, "5759": 405, "489": 405, "0493": 405, "0021": 405, "7805": 405, "490": 405, "0950": 405, "497": 405, "9717": 405, "3672": 405, "492": 405, "0207": 405, "8266": 405, "5365": 405, "494": 405, "2623": 405, "5078": 405, "495": 405, "4545": 405, "09636": 405, "8754": 405, "0010": 405, "498": 405, "0031": 405, "8269": 405, "499": 405, "6642": 405, "501": 405, "9130": 405, "0008": 405, "502": 405, "503": 405, "7624": 405, "0056": 405, "3858": 405, "504": 405, "0890": 405, "0042": 405, "505": 405, "7505": 405, "2157": 405, "506": [405, 409], "8394": 405, "3413": 405, "507": 405, "9609": 405, "0041": 405, "6905": 405, "508": 405, "8467": 405, "4409": 405, "509": 405, "510": 405, "8128": 405, "3559": 405, "511": 405, "1479": 405, "0264": 405, "1589": 405, "566": 405, "513": 405, "2756": 405, "0046": 405, "5266": 405, "514": 405, "9873": 405, "0112": 405, "9314": 405, "515": 405, "3791": 405, "0721": 405, "516": 405, "4580": 405, "0758": 405, "6114": 405, "517": 405, "2431": 405, "518": 405, "1958": 405, "5553": 405, "8924": 405, "0097": 405, "520": 405, "3737": 405, "0234": 405, "521": 405, "9125": 405, "4623": 405, "3230": 405, "0589": 405, "3784": 405, "523": 405, "9482": 405, "0051": 405, "524": 405, "1979": 405, "0045": 405, "6401": 405, "525": 405, "1588": 405, "0048": 405, "6255": 405, "526": 405, "6084": 405, "3477": 405, "1475": 405, "0209": 405, "528": 405, "7611": 405, "1040": 405, "0099": 405, "0173": 405, "643": 405, "530": 405, "8189": 405, "4358": 405, "531": 405, "9897": 405, "532": 405, "1548": 405, "9751": 405, "533": 405, "6362": 405, "7495": 405, "534": 405, "1749": 405, "9513": 405, "535": 405, "7708": 405, "0371": 405, "536": 405, "2649": 405, "0437": 405, "537": 405, "5491": 405, "0276": 405, "6426": 405, "7294": 405, "078e": 405, "539": 405, "9928": 405, "540": 405, "7937": 405, "0124": 405, "9664": 405, "541": 405, "3342": 405, "542": 405, "2046": 405, "5496": 405, "0956": 405, "0059": 405, "545": 405, "9028": 405, "5843": 405, "546": 405, "0674": 405, "0178": 405, "797": 405, "2815": 405, "0599": 405, "9276": 405, "8228": 405, "6164": 405, "551": 405, "6850": 405, "9167": 405, "3092": 405, "0670": 405, "9177": 405, "553": 405, "1599": 405, "0043": 405, "554": 405, "6367": 405, "556": 405, "6694": 405, "2622": 405, "0372": 405, "4841": 405, "558": 405, "2707": 405, "757": 405, "559": 405, "2267": 405, "5415": 405, "560": 405, "4556": 405, "0163": 405, "561": 405, "1839": 405, "0809": 405, "6262": 405, "562": 405, "0278": 405, "1112": 405, "6155": 405, "565": 405, "1427": 405, "3582": 405, "624": 405, "7870": 405, "9490": 405, "0439": 405, "8796": 405, "568": 405, "8026": 405, "612": 405, "569": 405, "3147": 405, "8486": 405, "570": 405, "7917": 405, "0129": 405, "571": 405, "9553": 405, "0020": 405, "6871": 405, "572": 405, "3132": [405, 410], "0159": 405, "8646": 405, "573": 405, "5320": 405, "0269": 405, "574": 405, "2955": 405, "0245": 405, "575": 405, "3347": 405, "0179": 405, "9718": 405, "1629": 405, "804": 405, "577": 405, "4164": 405, "0070": 405, "4335": 405, "578": 405, "579": 405, "3049": 405, "9063": 405, "580": 405, "8785": 405, "3295": 405, "5184": 405, "0546": 405, "582": 405, "4589": 405, "583": 405, "4697": 405, "2476": 405, "584": 405, "2397": 405, "585": 405, "4953": 405, "1775": 405, "586": 405, "2258": 405, "0110": 405, "7671": 405, "587": 405, "3981": 405, "8590": 405, "0007": 405, "589": 405, "9820": 405, "4221": 405, "590": 405, "1293": 405, "0116": 405, "868": 405, "1675": 405, "5931": 405, "592": 405, "2910": 405, "5219": 405, "2124": 405, "1730": 405, "737": 405, "594": 405, "2914": 405, "0206": 405, "595": 405, "0172": 405, "3982": 405, "0945": 405, "0121": 405, "4789": 405, "597": 405, "3805": 405, "4074": 405, "598": 405, "3310": 405, "5065": 405, "6028": 405, "6316": 405, "6724": 405, "6523": 405, "601": 405, "0136": 405, "4298": 405, "602": 405, "3524": 405, "2629": 405, "603": 405, "2635": 405, "7839": 405, "604": 405, "6041": 405, "8027": 405, "4170": 405, "4675": 405, "3153": 405, "9316": 405, "607": 405, "0649": 405, "9722": 405, "7989": 405, "0329": 405, "609": 405, "1976": 405, "6852": 405, "610": 405, "4793": 405, "1255": 405, "4581": 405, "0394": 405, "2047": 405, "0326": 405, "613": 405, "8967": 405, "8619": 405, "614": 405, "5906": 405, "6491": 405, "615": 405, "6634": 405, "4394": 405, "616": 405, "0624": 405, "0061": 405, "5676": 405, "3259": 405, "0131": 405, "7733": 405, "618": 405, "7515": 405, "0189": 405, "5575": 405, "619": 405, "9313": 405, "6286": 405, "620": 405, "4325": 405, "7832": 405, "621": 405, "1134": 405, "622": [405, 409], "4572": 405, "0500": 405, "5838": 405, "623": 405, "3818": 405, "8623": 405, "1253": 405, "6622": 405, "subject": 405, "explain": 406, "semat": 406, "r3mtransform": 406, "env_transform": [406, 410], "s3": 406, "amazonaw": 406, "r3m_50": 406, "374m": 406, "144mb": 406, "5m": 406, "3mb": 406, "2m": 406, "6mb": 406, "4mb": 406, "0m": 406, "4m": 406, "9mb": 406, "1mb": 406, "9m": 406, "0mb": 406, "2mb": 406, "104m": 406, "115m": 406, "130m": 406, "138m": 406, "148m": 406, "8mb": 406, "162m": 406, "5mb": 406, "169m": 406, "179m": 406, "187m": 406, "195m": 406, "201m": 406, "212m": 406, "219m": 406, "229m": 406, "244m": 406, "252m": 406, "262m": 406, "7mb": 406, "267m": 406, "277m": 406, "282m": 406, "293m": 406, "298m": 406, "311m": 406, "326m": 406, "334m": 406, "342m": 406, "349m": 406, "360m": 406, "373m": 406, "wiser": 406, "4233": 406, "batteri": 407, "buffer_list": 407, "lowest": 407, "medium": 407, "buffer_lazytensor": 407, "buffer_lazymemmap": 407, "tempdir": 407, "tmpsupcjlp4": 407, "fullest": 407, "mydata": 407, "background": 407, "question": [407, 409], "_i": 407, "artifici": 407, "0893e": 407, "hamper": 407, "she": 407, "pars": 407, "proport": 407, "hist": 407, "barcontain": 407, "artist": 407, "reappear": 407, "unfold": 407, "problemat": 407, "4th": 407, "prioritizedslicesampl": 407, "tensordictmaxvaluewrit": 407, "demo": 409, "icml": 409, "vmoen": 409, "fb": 409, "invest": 409, "platform": 409, "media": 409, "predominantli": 409, "tensordict1": 409, "tensordict2": 409, "tensordict_sampl": 409, "_sampler": 409, "_sum_tre": 409, "modulenotfounderror": 409, "28791671991348267": 409, "noopresetenv": [409, 410], "backbone_modul": 409, "params_expand": 409, "exec_sequ": 409, "tensordict_exp": 409, "base_modul": 409, "0137": 409, "1524": 409, "0641": 409, "viewbackward0": 409, "asstridedbackward0": 409, "traceback": [409, 410], "660": 409, "1736": 409, "_wrapped_call_impl": 409, "_call_impl": 409, "1747": 409, "forward_cal": 409, "_self": 409, "_requires_sampl": 409, "out_tensor": 409, "_dist_sampl": 409, "explorationmod": 409, "tensordicts_prealloc": 409, "tensordicts_stack": 409, "tensordict_rollout": [409, 410], "disclaim": 409, "concatmodul": 409, "loss_td": 409, "year": 409, "roadmap": 409, "compris": 409, "contributor": 409, "curiou": 409, "nascent": 409, "unsupervis": 410, "unifi": 410, "_build_env": 410, "amidar": 410, "assault": 410, "3541": 410, "deserv": 410, "__episode__": 410, "__trajectory__": 410, "void": 410, "reproduct": 410, "reset_data": 410, "tensordict_tprim": 410, "imshow": 410, "axesimag": 410, "0x7f7e6c3b88e0": 410, "wrapper1": 410, "wrapper2": 410, "obviou": 410, "truth": 410, "env_transformed_bi": 410, "stanc": 410, "transformeddistribut": 410, "base_dist": 410, "concat": 410, "mofidi": 410, "transformedenviron": 410, "moderet": 410, "computation": 410, "legitim": 410, "incom": 410, "amongst": 410, "has_cuda": 410, "wor": 410, "convention": 410, "markovian": 410, "3288080526": 410, "constain": 410, "bar_": 410, "get_someth": 410, "bar_62940452": 410, "863b": 410, "aargh": 410, "is_clos": 410, "foo_list": 410, "batched_env": 410, "_dispatch_caller_parallel": 410, "0x7f7e7ed8baf0": 410, "bar_66fa55b": 410, "acc": 410, "bar_66fcc876": 410, "916a": 410, "bar_66fe48f4": 410, "b43b": 410, "particularili": 410, "evolv": 410, "steadi": 410, "approx": 410, "3761": 410, "2934": 410, "2495": 410, "4228": 410, "2361": 410, "_extra_st": 410, "observation_ssq": 410, "observation_sum": 410, "697": 410, "dispach": 410, "absor": 410}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "Bounded"], [28, 0, 1, "", "BoundedTensorSpec"], [29, 0, 1, "", "Categorical"], [30, 0, 1, "", "Composite"], [31, 0, 1, "", "CompositeSpec"], [32, 0, 1, "", "ConstantKLController"], [33, 0, 1, "", "DiscreteTensorSpec"], [34, 0, 1, "", "Flat2TED"], [35, 0, 1, "", "H5Combine"], [36, 0, 1, "", "H5Split"], [37, 0, 1, "", "LazyStackedCompositeSpec"], [38, 0, 1, "", "LazyStackedTensorSpec"], [39, 0, 1, "", "MultiCategorical"], [40, 0, 1, "", "MultiDiscreteTensorSpec"], [41, 0, 1, "", "MultiOneHot"], [42, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [43, 0, 1, "", "MultiStep"], [44, 0, 1, "", "Nested2TED"], [45, 0, 1, "", "NonTensor"], [46, 0, 1, "", "NonTensorSpec"], [47, 0, 1, "", "OneHotDiscreteTensorSpec"], [48, 0, 1, "", "PairwiseDataset"], [49, 0, 1, "", "PrioritizedReplayBuffer"], [50, 0, 1, "", "PromptData"], [51, 0, 1, "", "PromptTensorDictTokenizer"], [52, 0, 1, "", "ReplayBuffer"], [53, 0, 1, "", "RewardData"], [54, 0, 1, "", "RolloutFromModel"], [55, 0, 1, "", "Stacked"], [56, 0, 1, "", "StackedComposite"], [57, 0, 1, "", "TED2Flat"], [58, 0, 1, "", "TED2Nested"], [59, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [60, 0, 1, "", "TensorDictReplayBuffer"], [61, 0, 1, "", "TensorDictTokenizer"], [62, 0, 1, "", "TensorSpec"], [63, 0, 1, "", "TokenizedDatasetLoader"], [64, 0, 1, "", "Unbounded"], [65, 0, 1, "", "UnboundedContinuous"], [66, 0, 1, "", "UnboundedContinuousTensorSpec"], [67, 0, 1, "", "UnboundedDiscrete"], [68, 0, 1, "", "UnboundedDiscreteTensorSpec"], [69, 0, 1, "", "check_no_exclusive_keys"], [70, 0, 1, "", "consolidate_spec"], [71, 0, 1, "", "contains_lazy_spec"], [72, 0, 1, "", "create_infinite_iterator"], [82, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.Bounded": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "clone"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 4, 1, "", "device"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "make_neg_dim"], [27, 4, 1, "", "ndim"], [27, 1, 1, "", "ndimension"], [27, 1, 1, "", "one"], [27, 1, 1, "", "ones"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unsqueeze"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"], [27, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 3, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 4, 1, "", "device"], [30, 1, 1, "", "empty"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "get"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_empty"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "items"], [30, 1, 1, "", "keys"], [30, 1, 1, "", "lock_"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unlock_"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "values"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 3, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 4, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "to_one_hot"], [33, 1, 1, "", "to_one_hot_spec"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "update_mask"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedCompositeSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 4, 1, "", "device"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "get"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_empty"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "items"], [37, 1, 1, "", "keys"], [37, 1, 1, "", "lock_"], [37, 1, 1, "", "make_neg_dim"], [37, 4, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unlock_"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "values"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 4, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 4, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.MultiCategorical": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 3, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "to_one_hot"], [39, 1, 1, "", "to_one_hot_spec"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "update_mask"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 3, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "to_one_hot"], [40, 1, 1, "", "to_one_hot_spec"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 3, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 4, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "compile"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "mtia"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_load_state_dict_pre_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "register_state_dict_post_hook"], [43, 1, 1, "", "register_state_dict_pre_hook"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_submodule"], [43, 1, 1, "", "share_memory"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 4, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 4, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 3, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[48, 4, 1, "", "batch_size"], [48, 4, 1, "", "device"], [48, 1, 1, "", "from_dataset"], [48, 1, 1, "", "from_tensordict"], [48, 1, 1, "", "get"], [48, 1, 1, "", "load"], [48, 1, 1, "", "load_"], [48, 1, 1, "", "load_memmap"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "memmap"], [48, 1, 1, "", "memmap_"], [48, 1, 1, "", "memmap_like"], [48, 1, 1, "", "memmap_refresh_"], [48, 4, 1, "", "names"], [48, 1, 1, "", "save"], [48, 1, 1, "", "set"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to_tensordict"], [48, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[49, 1, 1, "", "add"], [49, 1, 1, "", "append_transform"], [49, 1, 1, "", "dump"], [49, 1, 1, "", "dumps"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "extend"], [49, 1, 1, "", "insert_transform"], [49, 1, 1, "", "load"], [49, 1, 1, "", "loads"], [49, 1, 1, "", "register_load_hook"], [49, 1, 1, "", "register_save_hook"], [49, 1, 1, "", "sample"], [49, 4, 1, "", "sampler"], [49, 1, 1, "", "save"], [49, 1, 1, "", "set_sampler"], [49, 1, 1, "", "set_storage"], [49, 1, 1, "", "set_writer"], [49, 4, 1, "", "storage"], [49, 4, 1, "", "write_count"], [49, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[50, 4, 1, "", "batch_size"], [50, 4, 1, "", "device"], [50, 1, 1, "", "from_dataset"], [50, 1, 1, "", "from_tensordict"], [50, 1, 1, "", "get"], [50, 1, 1, "", "load"], [50, 1, 1, "", "load_"], [50, 1, 1, "", "load_memmap"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "memmap"], [50, 1, 1, "", "memmap_"], [50, 1, 1, "", "memmap_like"], [50, 1, 1, "", "memmap_refresh_"], [50, 4, 1, "", "names"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to_tensordict"], [50, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dump"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "load"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "register_load_hook"], [52, 1, 1, "", "register_save_hook"], [52, 1, 1, "", "sample"], [52, 4, 1, "", "sampler"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 4, 1, "", "storage"], [52, 4, 1, "", "write_count"], [52, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[53, 4, 1, "", "batch_size"], [53, 4, 1, "", "device"], [53, 1, 1, "", "from_tensordict"], [53, 1, 1, "", "get"], [53, 1, 1, "", "load"], [53, 1, 1, "", "load_"], [53, 1, 1, "", "load_memmap"], [53, 1, 1, "", "load_state_dict"], [53, 1, 1, "", "memmap"], [53, 1, 1, "", "memmap_"], [53, 1, 1, "", "memmap_like"], [53, 1, 1, "", "memmap_refresh_"], [53, 4, 1, "", "names"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set"], [53, 1, 1, "", "state_dict"], [53, 1, 1, "", "to_tensordict"], [53, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[54, 1, 1, "", "create_rollout_td"], [54, 1, 1, "", "generate"], [54, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.Stacked": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 4, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "clone"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 4, 1, "", "device"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "get"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_empty"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "items"], [56, 1, 1, "", "keys"], [56, 1, 1, "", "lock_"], [56, 1, 1, "", "make_neg_dim"], [56, 4, 1, "", "ndim"], [56, 1, 1, "", "ndimension"], [56, 1, 1, "", "one"], [56, 1, 1, "", "ones"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "unlock_"], [56, 1, 1, "", "unsqueeze"], [56, 1, 1, "", "values"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"], [56, 1, 1, "", "zeros"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 1, 1, "", "dump"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "load"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "register_load_hook"], [59, 1, 1, "", "register_save_hook"], [59, 1, 1, "", "sample"], [59, 4, 1, "", "sampler"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 4, 1, "", "storage"], [59, 4, 1, "", "write_count"], [59, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 1, 1, "", "dump"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "load"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "register_load_hook"], [60, 1, 1, "", "register_save_hook"], [60, 1, 1, "", "sample"], [60, 4, 1, "", "sampler"], [60, 1, 1, "", "save"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 4, 1, "", "storage"], [60, 4, 1, "", "write_count"], [60, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[63, 1, 1, "", "dataset_to_tensordict"], [63, 1, 1, "", "load"]], "torchrl.data.Unbounded": [[64, 1, 1, "", "assert_is_in"], [64, 1, 1, "", "clear_device_"], [64, 1, 1, "", "clone"], [64, 1, 1, "", "contains"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 4, 1, "", "device"], [64, 1, 1, "", "encode"], [64, 1, 1, "", "expand"], [64, 1, 1, "", "flatten"], [64, 1, 1, "", "implements_for_spec"], [64, 1, 1, "", "index"], [64, 1, 1, "", "is_in"], [64, 1, 1, "", "make_neg_dim"], [64, 4, 1, "", "ndim"], [64, 1, 1, "", "ndimension"], [64, 1, 1, "", "one"], [64, 1, 1, "", "ones"], [64, 1, 1, "", "project"], [64, 1, 1, "", "rand"], [64, 1, 1, "", "reshape"], [64, 1, 1, "", "sample"], [64, 1, 1, "", "squeeze"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_numpy"], [64, 1, 1, "", "type_check"], [64, 1, 1, "", "unflatten"], [64, 1, 1, "", "unsqueeze"], [64, 1, 1, "", "view"], [64, 1, 1, "", "zero"], [64, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[65, 1, 1, "", "assert_is_in"], [65, 1, 1, "", "clear_device_"], [65, 1, 1, "", "clone"], [65, 1, 1, "", "contains"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 4, 1, "", "device"], [65, 1, 1, "", "encode"], [65, 1, 1, "", "expand"], [65, 1, 1, "", "flatten"], [65, 1, 1, "", "implements_for_spec"], [65, 1, 1, "", "index"], [65, 1, 1, "", "is_in"], [65, 1, 1, "", "make_neg_dim"], [65, 4, 1, "", "ndim"], [65, 1, 1, "", "ndimension"], [65, 1, 1, "", "one"], [65, 1, 1, "", "ones"], [65, 1, 1, "", "project"], [65, 1, 1, "", "rand"], [65, 1, 1, "", "reshape"], [65, 1, 1, "", "sample"], [65, 1, 1, "", "squeeze"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_numpy"], [65, 1, 1, "", "type_check"], [65, 1, 1, "", "unflatten"], [65, 1, 1, "", "unsqueeze"], [65, 1, 1, "", "view"], [65, 1, 1, "", "zero"], [65, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[66, 1, 1, "", "assert_is_in"], [66, 1, 1, "", "clear_device_"], [66, 1, 1, "", "clone"], [66, 1, 1, "", "contains"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 4, 1, "", "device"], [66, 1, 1, "", "encode"], [66, 1, 1, "", "expand"], [66, 1, 1, "", "flatten"], [66, 1, 1, "", "implements_for_spec"], [66, 1, 1, "", "index"], [66, 1, 1, "", "is_in"], [66, 1, 1, "", "make_neg_dim"], [66, 4, 1, "", "ndim"], [66, 1, 1, "", "ndimension"], [66, 1, 1, "", "one"], [66, 1, 1, "", "ones"], [66, 1, 1, "", "project"], [66, 1, 1, "", "rand"], [66, 1, 1, "", "reshape"], [66, 1, 1, "", "sample"], [66, 1, 1, "", "squeeze"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_numpy"], [66, 1, 1, "", "type_check"], [66, 1, 1, "", "unflatten"], [66, 1, 1, "", "unsqueeze"], [66, 1, 1, "", "view"], [66, 1, 1, "", "zero"], [66, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[67, 1, 1, "", "assert_is_in"], [67, 1, 1, "", "clear_device_"], [67, 1, 1, "", "clone"], [67, 1, 1, "", "contains"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 4, 1, "", "device"], [67, 1, 1, "", "encode"], [67, 1, 1, "", "expand"], [67, 1, 1, "", "flatten"], [67, 1, 1, "", "implements_for_spec"], [67, 1, 1, "", "index"], [67, 1, 1, "", "is_in"], [67, 1, 1, "", "make_neg_dim"], [67, 4, 1, "", "ndim"], [67, 1, 1, "", "ndimension"], [67, 1, 1, "", "one"], [67, 1, 1, "", "ones"], [67, 1, 1, "", "project"], [67, 1, 1, "", "rand"], [67, 1, 1, "", "reshape"], [67, 1, 1, "", "sample"], [67, 1, 1, "", "squeeze"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_numpy"], [67, 1, 1, "", "type_check"], [67, 1, 1, "", "unflatten"], [67, 1, 1, "", "unsqueeze"], [67, 1, 1, "", "view"], [67, 1, 1, "", "zero"], [67, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[68, 1, 1, "", "assert_is_in"], [68, 1, 1, "", "clear_device_"], [68, 1, 1, "", "clone"], [68, 1, 1, "", "contains"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 4, 1, "", "device"], [68, 1, 1, "", "encode"], [68, 1, 1, "", "expand"], [68, 1, 1, "", "flatten"], [68, 1, 1, "", "implements_for_spec"], [68, 1, 1, "", "index"], [68, 1, 1, "", "is_in"], [68, 1, 1, "", "make_neg_dim"], [68, 4, 1, "", "ndim"], [68, 1, 1, "", "ndimension"], [68, 1, 1, "", "one"], [68, 1, 1, "", "ones"], [68, 1, 1, "", "project"], [68, 1, 1, "", "rand"], [68, 1, 1, "", "reshape"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "squeeze"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_numpy"], [68, 1, 1, "", "type_check"], [68, 1, 1, "", "unflatten"], [68, 1, 1, "", "unsqueeze"], [68, 1, 1, "", "view"], [68, 1, 1, "", "zero"], [68, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[73, 0, 1, "", "AtariDQNExperienceReplay"], [74, 0, 1, "", "BaseDatasetExperienceReplay"], [75, 0, 1, "", "D4RLExperienceReplay"], [76, 0, 1, "", "GenDGRLExperienceReplay"], [77, 0, 1, "", "MinariExperienceReplay"], [78, 0, 1, "", "OpenMLExperienceReplay"], [79, 0, 1, "", "OpenXExperienceReplay"], [80, 0, 1, "", "RobosetExperienceReplay"], [81, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[73, 1, 1, "", "add"], [73, 1, 1, "", "append_transform"], [73, 4, 1, "", "data_path"], [73, 4, 1, "", "data_path_root"], [73, 1, 1, "", "delete"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "empty"], [73, 1, 1, "", "extend"], [73, 1, 1, "", "insert_transform"], [73, 1, 1, "", "load"], [73, 1, 1, "", "loads"], [73, 1, 1, "", "preprocess"], [73, 1, 1, "", "register_load_hook"], [73, 1, 1, "", "register_save_hook"], [73, 1, 1, "", "sample"], [73, 4, 1, "", "sampler"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set_sampler"], [73, 1, 1, "", "set_storage"], [73, 1, 1, "", "set_writer"], [73, 4, 1, "", "storage"], [73, 4, 1, "", "write_count"], [73, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[74, 1, 1, "", "add"], [74, 1, 1, "", "append_transform"], [74, 4, 1, "", "data_path"], [74, 4, 1, "", "data_path_root"], [74, 1, 1, "", "delete"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "dumps"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "extend"], [74, 1, 1, "", "insert_transform"], [74, 1, 1, "", "load"], [74, 1, 1, "", "loads"], [74, 1, 1, "", "preprocess"], [74, 1, 1, "", "register_load_hook"], [74, 1, 1, "", "register_save_hook"], [74, 1, 1, "", "sample"], [74, 4, 1, "", "sampler"], [74, 1, 1, "", "save"], [74, 1, 1, "", "set_sampler"], [74, 1, 1, "", "set_storage"], [74, 1, 1, "", "set_writer"], [74, 4, 1, "", "storage"], [74, 4, 1, "", "write_count"], [74, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[75, 1, 1, "", "add"], [75, 1, 1, "", "append_transform"], [75, 4, 1, "", "data_path"], [75, 4, 1, "", "data_path_root"], [75, 1, 1, "", "delete"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "dumps"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "extend"], [75, 1, 1, "", "insert_transform"], [75, 1, 1, "", "load"], [75, 1, 1, "", "loads"], [75, 1, 1, "", "preprocess"], [75, 1, 1, "", "register_load_hook"], [75, 1, 1, "", "register_save_hook"], [75, 1, 1, "", "sample"], [75, 4, 1, "", "sampler"], [75, 1, 1, "", "save"], [75, 1, 1, "", "set_sampler"], [75, 1, 1, "", "set_storage"], [75, 1, 1, "", "set_writer"], [75, 4, 1, "", "storage"], [75, 4, 1, "", "write_count"], [75, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[76, 1, 1, "", "add"], [76, 1, 1, "", "append_transform"], [76, 4, 1, "", "data_path"], [76, 4, 1, "", "data_path_root"], [76, 1, 1, "", "delete"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "dumps"], [76, 1, 1, "", "empty"], [76, 1, 1, "", "extend"], [76, 1, 1, "", "insert_transform"], [76, 1, 1, "", "load"], [76, 1, 1, "", "loads"], [76, 1, 1, "", "preprocess"], [76, 1, 1, "", "register_load_hook"], [76, 1, 1, "", "register_save_hook"], [76, 1, 1, "", "sample"], [76, 4, 1, "", "sampler"], [76, 1, 1, "", "save"], [76, 1, 1, "", "set_sampler"], [76, 1, 1, "", "set_storage"], [76, 1, 1, "", "set_writer"], [76, 4, 1, "", "storage"], [76, 4, 1, "", "write_count"], [76, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[77, 1, 1, "", "add"], [77, 1, 1, "", "append_transform"], [77, 4, 1, "", "data_path"], [77, 4, 1, "", "data_path_root"], [77, 1, 1, "", "delete"], [77, 1, 1, "", "dump"], [77, 1, 1, "", "dumps"], [77, 1, 1, "", "empty"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "insert_transform"], [77, 1, 1, "", "load"], [77, 1, 1, "", "loads"], [77, 1, 1, "", "preprocess"], [77, 1, 1, "", "register_load_hook"], [77, 1, 1, "", "register_save_hook"], [77, 1, 1, "", "sample"], [77, 4, 1, "", "sampler"], [77, 1, 1, "", "save"], [77, 1, 1, "", "set_sampler"], [77, 1, 1, "", "set_storage"], [77, 1, 1, "", "set_writer"], [77, 4, 1, "", "storage"], [77, 4, 1, "", "write_count"], [77, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 4, 1, "", "data_path"], [78, 4, 1, "", "data_path_root"], [78, 1, 1, "", "delete"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "preprocess"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 4, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 4, 1, "", "storage"], [78, 4, 1, "", "write_count"], [78, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 4, 1, "", "data_path"], [79, 4, 1, "", "data_path_root"], [79, 1, 1, "", "delete"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "preprocess"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 4, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 4, 1, "", "storage"], [79, 4, 1, "", "write_count"], [79, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 4, 1, "", "data_path"], [80, 4, 1, "", "data_path_root"], [80, 1, 1, "", "delete"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "preprocess"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 4, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 4, 1, "", "storage"], [80, 4, 1, "", "write_count"], [80, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 4, 1, "", "data_path"], [81, 4, 1, "", "data_path_root"], [81, 1, 1, "", "delete"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "preprocess"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 4, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 4, 1, "", "storage"], [81, 4, 1, "", "write_count"], [81, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[83, 0, 1, "", "FlatStorageCheckpointer"], [84, 0, 1, "", "H5StorageCheckpointer"], [85, 0, 1, "", "ImmutableDatasetWriter"], [86, 0, 1, "", "LazyMemmapStorage"], [87, 0, 1, "", "LazyTensorStorage"], [88, 0, 1, "", "ListStorage"], [89, 0, 1, "", "ListStorageCheckpointer"], [90, 0, 1, "", "NestedStorageCheckpointer"], [91, 0, 1, "", "PrioritizedSampler"], [92, 0, 1, "", "PrioritizedSliceSampler"], [93, 0, 1, "", "RandomSampler"], [94, 0, 1, "", "ReplayBufferEnsemble"], [95, 0, 1, "", "RoundRobinWriter"], [96, 0, 1, "", "Sampler"], [97, 0, 1, "", "SamplerEnsemble"], [98, 0, 1, "", "SamplerWithoutReplacement"], [99, 0, 1, "", "SliceSampler"], [100, 0, 1, "", "SliceSamplerWithoutReplacement"], [101, 0, 1, "", "Storage"], [102, 0, 1, "", "StorageCheckpointerBase"], [103, 0, 1, "", "StorageEnsemble"], [104, 0, 1, "", "StorageEnsembleCheckpointer"], [105, 0, 1, "", "TensorDictMaxValueWriter"], [106, 0, 1, "", "TensorDictRoundRobinWriter"], [107, 0, 1, "", "TensorStorage"], [108, 0, 1, "", "TensorStorageCheckpointer"], [109, 0, 1, "", "Writer"], [110, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[85, 1, 1, "", "add"], [85, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[86, 1, 1, "", "attach"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "load"], [86, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[87, 1, 1, "", "attach"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "load"], [87, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[88, 1, 1, "", "attach"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "load"], [88, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[91, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[92, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[94, 1, 1, "", "add"], [94, 1, 1, "", "append_transform"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "dumps"], [94, 1, 1, "", "empty"], [94, 1, 1, "", "extend"], [94, 1, 1, "", "insert_transform"], [94, 1, 1, "", "load"], [94, 1, 1, "", "loads"], [94, 1, 1, "", "register_load_hook"], [94, 1, 1, "", "register_save_hook"], [94, 1, 1, "", "sample"], [94, 4, 1, "", "sampler"], [94, 1, 1, "", "save"], [94, 1, 1, "", "set_sampler"], [94, 1, 1, "", "set_storage"], [94, 1, 1, "", "set_writer"], [94, 4, 1, "", "storage"], [94, 4, 1, "", "write_count"], [94, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[95, 1, 1, "", "add"], [95, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[105, 1, 1, "", "add"], [105, 1, 1, "", "extend"], [105, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[106, 1, 1, "", "add"], [106, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[107, 1, 1, "", "attach"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "load"], [107, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[109, 1, 1, "", "add"], [109, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[110, 1, 1, "", "add"], [110, 1, 1, "", "extend"]], "torchrl.envs": [[111, 2, 1, "", "BraxEnv"], [112, 2, 1, "", "BraxWrapper"], [113, 2, 1, "", "DMControlEnv"], [114, 2, 1, "", "DMControlWrapper"], [115, 0, 1, "", "EnvBase"], [116, 0, 1, "", "EnvCreator"], [117, 0, 1, "", "EnvMetaData"], [118, 2, 1, "", "GymEnv"], [119, 0, 1, "", "GymLikeEnv"], [120, 2, 1, "", "GymWrapper"], [121, 2, 1, "", "HabitatEnv"], [122, 2, 1, "", "IsaacGymEnv"], [123, 2, 1, "", "IsaacGymWrapper"], [124, 2, 1, "", "JumanjiEnv"], [125, 2, 1, "", "JumanjiWrapper"], [126, 2, 1, "", "MOGymEnv"], [127, 2, 1, "", "MOGymWrapper"], [128, 2, 1, "", "MarlGroupMapType"], [129, 2, 1, "", "MeltingpotEnv"], [130, 2, 1, "", "MeltingpotWrapper"], [131, 2, 1, "", "ModelBasedEnvBase"], [132, 2, 1, "", "MultiThreadedEnv"], [133, 2, 1, "", "MultiThreadedEnvWrapper"], [134, 2, 1, "", "OpenMLEnv"], [135, 2, 1, "", "OpenSpielEnv"], [136, 2, 1, "", "OpenSpielWrapper"], [137, 0, 1, "", "ParallelEnv"], [138, 0, 1, "", "PendulumEnv"], [139, 2, 1, "", "PettingZooEnv"], [140, 2, 1, "", "PettingZooWrapper"], [141, 2, 1, "", "RoboHiveEnv"], [142, 2, 1, "", "SMACv2Env"], [143, 2, 1, "", "SMACv2Wrapper"], [144, 0, 1, "", "SerialEnv"], [145, 0, 1, "", "TicTacToeEnv"], [146, 2, 1, "", "VmasEnv"], [147, 2, 1, "", "VmasWrapper"], [148, 2, 1, "", "check_marl_grouping"], [149, 2, 1, "", "gym_backend"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "rollout"], [152, 2, 1, "", "set_gym_backend"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[115, 4, 1, "", "action_key"], [115, 4, 1, "", "action_keys"], [115, 4, 1, "", "action_spec"], [115, 1, 1, "", "add_module"], [115, 1, 1, "", "add_truncated_keys"], [115, 1, 1, "", "append_transform"], [115, 1, 1, "", "apply"], [115, 4, 1, "", "batch_locked"], [115, 4, 1, "", "batch_size"], [115, 1, 1, "", "bfloat16"], [115, 1, 1, "", "buffers"], [115, 1, 1, "", "children"], [115, 1, 1, "", "compile"], [115, 1, 1, "", "cpu"], [115, 1, 1, "", "cuda"], [115, 4, 1, "", "done_key"], [115, 4, 1, "", "done_keys"], [115, 4, 1, "", "done_keys_groups"], [115, 4, 1, "", "done_spec"], [115, 1, 1, "", "double"], [115, 1, 1, "", "empty_cache"], [115, 1, 1, "", "eval"], [115, 1, 1, "", "extra_repr"], [115, 1, 1, "", "fake_tensordict"], [115, 1, 1, "", "float"], [115, 1, 1, "", "forward"], [115, 4, 1, "", "full_action_spec"], [115, 4, 1, "", "full_done_spec"], [115, 4, 1, "", "full_reward_spec"], [115, 4, 1, "", "full_state_spec"], [115, 1, 1, "", "get_buffer"], [115, 1, 1, "", "get_extra_state"], [115, 1, 1, "", "get_parameter"], [115, 1, 1, "", "get_submodule"], [115, 1, 1, "", "half"], [115, 4, 1, "", "input_spec"], [115, 1, 1, "", "ipu"], [115, 1, 1, "", "load_state_dict"], [115, 1, 1, "", "maybe_reset"], [115, 1, 1, "", "modules"], [115, 1, 1, "", "mtia"], [115, 1, 1, "", "named_buffers"], [115, 1, 1, "", "named_children"], [115, 1, 1, "", "named_modules"], [115, 1, 1, "", "named_parameters"], [115, 4, 1, "", "observation_spec"], [115, 4, 1, "", "output_spec"], [115, 1, 1, "", "parameters"], [115, 1, 1, "", "rand_action"], [115, 1, 1, "id0", "rand_step"], [115, 1, 1, "", "register_backward_hook"], [115, 1, 1, "", "register_buffer"], [115, 1, 1, "", "register_forward_hook"], [115, 1, 1, "", "register_forward_pre_hook"], [115, 1, 1, "", "register_full_backward_hook"], [115, 1, 1, "", "register_full_backward_pre_hook"], [115, 1, 1, "", "register_gym"], [115, 1, 1, "", "register_load_state_dict_post_hook"], [115, 1, 1, "", "register_load_state_dict_pre_hook"], [115, 1, 1, "", "register_module"], [115, 1, 1, "", "register_parameter"], [115, 1, 1, "", "register_state_dict_post_hook"], [115, 1, 1, "", "register_state_dict_pre_hook"], [115, 1, 1, "", "requires_grad_"], [115, 1, 1, "id1", "reset"], [115, 4, 1, "", "reset_keys"], [115, 4, 1, "", "reward_key"], [115, 4, 1, "", "reward_keys"], [115, 4, 1, "", "reward_spec"], [115, 1, 1, "id2", "rollout"], [115, 1, 1, "", "set_extra_state"], [115, 1, 1, "id3", "set_seed"], [115, 1, 1, "", "set_submodule"], [115, 4, 1, "", "shape"], [115, 1, 1, "", "share_memory"], [115, 4, 1, "", "specs"], [115, 1, 1, "", "state_dict"], [115, 4, 1, "", "state_keys"], [115, 4, 1, "", "state_spec"], [115, 1, 1, "id4", "step"], [115, 1, 1, "", "step_and_maybe_reset"], [115, 1, 1, "", "to"], [115, 1, 1, "", "to_empty"], [115, 1, 1, "", "train"], [115, 1, 1, "", "type"], [115, 1, 1, "", "xpu"], [115, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[119, 4, 1, "", "action_key"], [119, 4, 1, "", "action_keys"], [119, 4, 1, "", "action_spec"], [119, 1, 1, "", "add_module"], [119, 1, 1, "", "add_truncated_keys"], [119, 1, 1, "", "append_transform"], [119, 1, 1, "", "apply"], [119, 1, 1, "", "auto_register_info_dict"], [119, 4, 1, "", "batch_locked"], [119, 4, 1, "", "batch_size"], [119, 1, 1, "", "bfloat16"], [119, 1, 1, "", "buffers"], [119, 1, 1, "", "children"], [119, 1, 1, "", "close"], [119, 1, 1, "", "compile"], [119, 1, 1, "", "cpu"], [119, 1, 1, "", "cuda"], [119, 4, 1, "", "done_key"], [119, 4, 1, "", "done_keys"], [119, 4, 1, "", "done_keys_groups"], [119, 4, 1, "", "done_spec"], [119, 1, 1, "", "double"], [119, 1, 1, "", "empty_cache"], [119, 1, 1, "", "eval"], [119, 1, 1, "", "extra_repr"], [119, 1, 1, "", "fake_tensordict"], [119, 1, 1, "", "float"], [119, 1, 1, "", "forward"], [119, 4, 1, "", "full_action_spec"], [119, 4, 1, "", "full_done_spec"], [119, 4, 1, "", "full_reward_spec"], [119, 4, 1, "", "full_state_spec"], [119, 1, 1, "", "get_buffer"], [119, 1, 1, "", "get_extra_state"], [119, 1, 1, "", "get_parameter"], [119, 1, 1, "", "get_submodule"], [119, 1, 1, "", "half"], [119, 4, 1, "", "input_spec"], [119, 1, 1, "", "ipu"], [119, 1, 1, "", "load_state_dict"], [119, 1, 1, "", "maybe_reset"], [119, 1, 1, "", "modules"], [119, 1, 1, "", "mtia"], [119, 1, 1, "", "named_buffers"], [119, 1, 1, "", "named_children"], [119, 1, 1, "", "named_modules"], [119, 1, 1, "", "named_parameters"], [119, 4, 1, "", "observation_spec"], [119, 4, 1, "", "output_spec"], [119, 1, 1, "", "parameters"], [119, 1, 1, "", "rand_action"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "read_action"], [119, 1, 1, "", "read_done"], [119, 1, 1, "", "read_obs"], [119, 1, 1, "", "read_reward"], [119, 1, 1, "", "register_backward_hook"], [119, 1, 1, "", "register_buffer"], [119, 1, 1, "", "register_forward_hook"], [119, 1, 1, "", "register_forward_pre_hook"], [119, 1, 1, "", "register_full_backward_hook"], [119, 1, 1, "", "register_full_backward_pre_hook"], [119, 1, 1, "", "register_gym"], [119, 1, 1, "", "register_load_state_dict_post_hook"], [119, 1, 1, "", "register_load_state_dict_pre_hook"], [119, 1, 1, "", "register_module"], [119, 1, 1, "", "register_parameter"], [119, 1, 1, "", "register_state_dict_post_hook"], [119, 1, 1, "", "register_state_dict_pre_hook"], [119, 1, 1, "", "requires_grad_"], [119, 1, 1, "", "reset"], [119, 4, 1, "", "reset_keys"], [119, 4, 1, "", "reward_key"], [119, 4, 1, "", "reward_keys"], [119, 4, 1, "", "reward_spec"], [119, 1, 1, "", "rollout"], [119, 1, 1, "", "set_extra_state"], [119, 1, 1, "", "set_info_dict_reader"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "set_submodule"], [119, 4, 1, "", "shape"], [119, 1, 1, "", "share_memory"], [119, 4, 1, "", "specs"], [119, 1, 1, "", "state_dict"], [119, 4, 1, "", "state_keys"], [119, 4, 1, "", "state_spec"], [119, 1, 1, "", "step"], [119, 1, 1, "", "step_and_maybe_reset"], [119, 1, 1, "", "to"], [119, 1, 1, "", "to_empty"], [119, 1, 1, "", "train"], [119, 1, 1, "", "type"], [119, 1, 1, "", "xpu"], [119, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[137, 4, 1, "", "action_key"], [137, 4, 1, "", "action_keys"], [137, 4, 1, "", "action_spec"], [137, 1, 1, "", "add_module"], [137, 1, 1, "", "add_truncated_keys"], [137, 1, 1, "", "append_transform"], [137, 1, 1, "", "apply"], [137, 4, 1, "", "batch_locked"], [137, 4, 1, "", "batch_size"], [137, 1, 1, "", "bfloat16"], [137, 1, 1, "", "buffers"], [137, 1, 1, "", "children"], [137, 1, 1, "", "compile"], [137, 1, 1, "", "cpu"], [137, 1, 1, "", "cuda"], [137, 4, 1, "", "done_key"], [137, 4, 1, "", "done_keys"], [137, 4, 1, "", "done_keys_groups"], [137, 4, 1, "", "done_spec"], [137, 1, 1, "", "double"], [137, 1, 1, "", "empty_cache"], [137, 1, 1, "", "eval"], [137, 1, 1, "", "extra_repr"], [137, 1, 1, "", "fake_tensordict"], [137, 1, 1, "", "float"], [137, 1, 1, "", "forward"], [137, 4, 1, "", "full_action_spec"], [137, 4, 1, "", "full_done_spec"], [137, 4, 1, "", "full_reward_spec"], [137, 4, 1, "", "full_state_spec"], [137, 1, 1, "", "get_buffer"], [137, 1, 1, "", "get_extra_state"], [137, 1, 1, "", "get_parameter"], [137, 1, 1, "", "get_submodule"], [137, 1, 1, "", "half"], [137, 4, 1, "", "input_spec"], [137, 1, 1, "", "ipu"], [137, 1, 1, "", "load_state_dict"], [137, 1, 1, "", "maybe_reset"], [137, 1, 1, "", "modules"], [137, 1, 1, "", "mtia"], [137, 1, 1, "", "named_buffers"], [137, 1, 1, "", "named_children"], [137, 1, 1, "", "named_modules"], [137, 1, 1, "", "named_parameters"], [137, 4, 1, "", "observation_spec"], [137, 4, 1, "", "output_spec"], [137, 1, 1, "", "parameters"], [137, 1, 1, "", "rand_action"], [137, 1, 1, "", "rand_step"], [137, 1, 1, "", "register_backward_hook"], [137, 1, 1, "", "register_buffer"], [137, 1, 1, "", "register_forward_hook"], [137, 1, 1, "", "register_forward_pre_hook"], [137, 1, 1, "", "register_full_backward_hook"], [137, 1, 1, "", "register_full_backward_pre_hook"], [137, 1, 1, "", "register_gym"], [137, 1, 1, "", "register_load_state_dict_post_hook"], [137, 1, 1, "", "register_load_state_dict_pre_hook"], [137, 1, 1, "", "register_module"], [137, 1, 1, "", "register_parameter"], [137, 1, 1, "", "register_state_dict_post_hook"], [137, 1, 1, "", "register_state_dict_pre_hook"], [137, 1, 1, "", "requires_grad_"], [137, 1, 1, "", "reset"], [137, 4, 1, "", "reset_keys"], [137, 4, 1, "", "reward_key"], [137, 4, 1, "", "reward_keys"], [137, 4, 1, "", "reward_spec"], [137, 1, 1, "", "rollout"], [137, 1, 1, "", "set_extra_state"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "set_submodule"], [137, 4, 1, "", "shape"], [137, 1, 1, "", "share_memory"], [137, 4, 1, "", "specs"], [137, 1, 1, "", "state_dict"], [137, 4, 1, "", "state_keys"], [137, 4, 1, "", "state_spec"], [137, 1, 1, "", "step"], [137, 1, 1, "", "step_and_maybe_reset"], [137, 1, 1, "", "to"], [137, 1, 1, "", "to_empty"], [137, 1, 1, "", "train"], [137, 1, 1, "", "type"], [137, 1, 1, "", "update_kwargs"], [137, 1, 1, "", "xpu"], [137, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[138, 4, 1, "", "action_key"], [138, 4, 1, "", "action_keys"], [138, 4, 1, "", "action_spec"], [138, 1, 1, "", "add_module"], [138, 1, 1, "", "add_truncated_keys"], [138, 1, 1, "", "append_transform"], [138, 1, 1, "", "apply"], [138, 4, 1, "", "batch_size"], [138, 1, 1, "", "bfloat16"], [138, 1, 1, "", "buffers"], [138, 1, 1, "", "children"], [138, 1, 1, "", "compile"], [138, 1, 1, "", "cpu"], [138, 1, 1, "", "cuda"], [138, 4, 1, "", "done_key"], [138, 4, 1, "", "done_keys"], [138, 4, 1, "", "done_keys_groups"], [138, 4, 1, "", "done_spec"], [138, 1, 1, "", "double"], [138, 1, 1, "", "empty_cache"], [138, 1, 1, "", "eval"], [138, 1, 1, "", "extra_repr"], [138, 1, 1, "", "fake_tensordict"], [138, 1, 1, "", "float"], [138, 1, 1, "", "forward"], [138, 4, 1, "", "full_action_spec"], [138, 4, 1, "", "full_done_spec"], [138, 4, 1, "", "full_reward_spec"], [138, 4, 1, "", "full_state_spec"], [138, 1, 1, "", "gen_params"], [138, 1, 1, "", "get_buffer"], [138, 1, 1, "", "get_extra_state"], [138, 1, 1, "", "get_parameter"], [138, 1, 1, "", "get_submodule"], [138, 1, 1, "", "half"], [138, 4, 1, "", "input_spec"], [138, 1, 1, "", "ipu"], [138, 1, 1, "", "load_state_dict"], [138, 1, 1, "", "maybe_reset"], [138, 1, 1, "", "modules"], [138, 1, 1, "", "mtia"], [138, 1, 1, "", "named_buffers"], [138, 1, 1, "", "named_children"], [138, 1, 1, "", "named_modules"], [138, 1, 1, "", "named_parameters"], [138, 4, 1, "", "observation_spec"], [138, 4, 1, "", "output_spec"], [138, 1, 1, "", "parameters"], [138, 1, 1, "", "rand_action"], [138, 1, 1, "", "rand_step"], [138, 1, 1, "", "register_backward_hook"], [138, 1, 1, "", "register_buffer"], [138, 1, 1, "", "register_forward_hook"], [138, 1, 1, "", "register_forward_pre_hook"], [138, 1, 1, "", "register_full_backward_hook"], [138, 1, 1, "", "register_full_backward_pre_hook"], [138, 1, 1, "", "register_gym"], [138, 1, 1, "", "register_load_state_dict_post_hook"], [138, 1, 1, "", "register_load_state_dict_pre_hook"], [138, 1, 1, "", "register_module"], [138, 1, 1, "", "register_parameter"], [138, 1, 1, "", "register_state_dict_post_hook"], [138, 1, 1, "", "register_state_dict_pre_hook"], [138, 1, 1, "", "requires_grad_"], [138, 1, 1, "", "reset"], [138, 4, 1, "", "reset_keys"], [138, 4, 1, "", "reward_key"], [138, 4, 1, "", "reward_keys"], [138, 4, 1, "", "reward_spec"], [138, 1, 1, "", "rollout"], [138, 1, 1, "", "set_extra_state"], [138, 1, 1, "", "set_seed"], [138, 1, 1, "", "set_submodule"], [138, 4, 1, "", "shape"], [138, 1, 1, "", "share_memory"], [138, 4, 1, "", "specs"], [138, 1, 1, "", "state_dict"], [138, 4, 1, "", "state_keys"], [138, 4, 1, "", "state_spec"], [138, 1, 1, "", "step"], [138, 1, 1, "", "step_and_maybe_reset"], [138, 1, 1, "", "to"], [138, 1, 1, "", "to_empty"], [138, 1, 1, "", "train"], [138, 1, 1, "", "type"], [138, 1, 1, "", "xpu"], [138, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[144, 4, 1, "", "action_key"], [144, 4, 1, "", "action_keys"], [144, 4, 1, "", "action_spec"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 4, 1, "", "batch_locked"], [144, 4, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "children"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 4, 1, "", "done_key"], [144, 4, 1, "", "done_keys"], [144, 4, 1, "", "done_keys_groups"], [144, 4, 1, "", "done_spec"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 4, 1, "", "full_action_spec"], [144, 4, 1, "", "full_done_spec"], [144, 4, 1, "", "full_reward_spec"], [144, 4, 1, "", "full_state_spec"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 4, 1, "", "input_spec"], [144, 1, 1, "", "ipu"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 4, 1, "", "observation_spec"], [144, 4, 1, "", "output_spec"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 4, 1, "", "reset_keys"], [144, 4, 1, "", "reward_key"], [144, 4, 1, "", "reward_keys"], [144, 4, 1, "", "reward_spec"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_submodule"], [144, 4, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 4, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 4, 1, "", "state_keys"], [144, 4, 1, "", "state_spec"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "update_kwargs"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[145, 4, 1, "", "action_key"], [145, 4, 1, "", "action_keys"], [145, 4, 1, "", "action_spec"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 4, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 4, 1, "", "done_key"], [145, 4, 1, "", "done_keys"], [145, 4, 1, "", "done_keys_groups"], [145, 4, 1, "", "done_spec"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 4, 1, "", "full_action_spec"], [145, 4, 1, "", "full_done_spec"], [145, 4, 1, "", "full_reward_spec"], [145, 4, 1, "", "full_state_spec"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 4, 1, "", "input_spec"], [145, 1, 1, "", "ipu"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 4, 1, "", "observation_spec"], [145, 4, 1, "", "output_spec"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 4, 1, "", "reset_keys"], [145, 4, 1, "", "reward_key"], [145, 4, 1, "", "reward_keys"], [145, 4, 1, "", "reward_spec"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_submodule"], [145, 4, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 4, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 4, 1, "", "state_keys"], [145, 4, 1, "", "state_spec"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[150, 2, 1, "", "DreamerDecoder"], [151, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[153, 0, 1, "", "ActionDiscretizer"], [154, 0, 1, "", "ActionMask"], [155, 0, 1, "", "AutoResetEnv"], [156, 0, 1, "", "AutoResetTransform"], [157, 0, 1, "", "BatchSizeTransform"], [158, 0, 1, "", "BinarizeReward"], [159, 0, 1, "", "BurnInTransform"], [160, 0, 1, "", "CatFrames"], [161, 0, 1, "", "CatTensors"], [162, 0, 1, "", "CenterCrop"], [163, 0, 1, "", "ClipTransform"], [164, 0, 1, "", "Compose"], [165, 0, 1, "", "Crop"], [166, 0, 1, "", "DTypeCastTransform"], [167, 0, 1, "", "DeviceCastTransform"], [168, 0, 1, "", "DiscreteActionProjection"], [169, 0, 1, "", "DoubleToFloat"], [170, 0, 1, "", "EndOfLifeTransform"], [171, 0, 1, "", "ExcludeTransform"], [172, 0, 1, "", "FiniteTensorDictCheck"], [173, 0, 1, "", "FlattenObservation"], [174, 0, 1, "", "FrameSkipTransform"], [175, 0, 1, "", "GrayScale"], [176, 0, 1, "", "InitTracker"], [177, 0, 1, "", "KLRewardTransform"], [178, 0, 1, "", "NoopResetEnv"], [179, 0, 1, "", "ObservationNorm"], [180, 0, 1, "", "ObservationTransform"], [181, 0, 1, "", "PermuteTransform"], [182, 0, 1, "", "PinMemoryTransform"], [183, 0, 1, "", "R3MTransform"], [184, 0, 1, "", "RandomCropTensorDict"], [185, 0, 1, "", "RemoveEmptySpecs"], [186, 0, 1, "", "RenameTransform"], [187, 0, 1, "", "Resize"], [188, 0, 1, "", "Reward2GoTransform"], [189, 0, 1, "", "RewardClipping"], [190, 0, 1, "", "RewardScaling"], [191, 0, 1, "", "RewardSum"], [192, 0, 1, "", "SelectTransform"], [193, 0, 1, "", "SignTransform"], [194, 0, 1, "", "SqueezeTransform"], [195, 0, 1, "", "StepCounter"], [196, 0, 1, "", "TargetReturn"], [197, 0, 1, "", "TensorDictPrimer"], [198, 0, 1, "", "TimeMaxPool"], [199, 0, 1, "", "ToTensorImage"], [200, 0, 1, "", "Transform"], [201, 0, 1, "", "TransformedEnv"], [202, 0, 1, "", "UnsqueezeTransform"], [203, 0, 1, "", "VC1Transform"], [204, 0, 1, "", "VIPRewardTransform"], [205, 0, 1, "", "VIPTransform"], [206, 0, 1, "", "VecGymEnvTransform"], [207, 0, 1, "", "VecNorm"], [208, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[153, 0, 1, "", "SamplingStrategy"], [153, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[154, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[155, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[156, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_env_batch_size"], [157, 1, 1, "", "transform_input_spec"], [157, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[158, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[159, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[163, 1, 1, "", "transform_observation_spec"], [163, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[164, 1, 1, "", "append"], [164, 1, 1, "", "forward"], [164, 1, 1, "", "insert"], [164, 1, 1, "", "to"], [164, 1, 1, "", "transform_env_batch_size"], [164, 1, 1, "", "transform_env_device"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"], [164, 1, 1, "", "transform_output_spec"], [164, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_observation_spec"], [166, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "transform_done_spec"], [167, 1, 1, "", "transform_env_device"], [167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_observation_spec"], [167, 1, 1, "", "transform_output_spec"], [167, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[168, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "register_keys"], [170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[172, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[174, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[175, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[179, 1, 1, "", "init_stats"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[182, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[183, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[184, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[188, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[189, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[190, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "to"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[200, 4, 1, "", "container"], [200, 1, 1, "", "forward"], [200, 4, 1, "", "parent"], [200, 1, 1, "", "to"], [200, 1, 1, "", "transform_done_spec"], [200, 1, 1, "", "transform_env_batch_size"], [200, 1, 1, "", "transform_env_device"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_output_spec"], [200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[201, 1, 1, "", "add_truncated_keys"], [201, 1, 1, "", "append_transform"], [201, 4, 1, "", "batch_locked"], [201, 4, 1, "", "batch_size"], [201, 1, 1, "", "empty_cache"], [201, 1, 1, "", "eval"], [201, 4, 1, "", "input_spec"], [201, 1, 1, "", "insert_transform"], [201, 1, 1, "", "load_state_dict"], [201, 4, 1, "", "output_spec"], [201, 1, 1, "", "set_missing_tolerance"], [201, 1, 1, "", "set_seed"], [201, 1, 1, "", "state_dict"], [201, 1, 1, "", "to"], [201, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[202, 1, 1, "", "transform_input_spec"], [202, 1, 1, "", "transform_observation_spec"], [202, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "make_noload_model"], [203, 1, 1, "", "to"], [203, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[205, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[207, 1, 1, "", "build_td_for_shared_vecnorm"], [207, 1, 1, "", "forward"], [207, 1, 1, "", "freeze"], [207, 1, 1, "", "frozen_copy"], [207, 1, 1, "", "get_extra_state"], [207, 4, 1, "", "loc"], [207, 4, 1, "", "scale"], [207, 1, 1, "", "set_extra_state"], [207, 4, 1, "", "standard_normal"], [207, 1, 1, "", "to_observation_norm"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[209, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[209, 1, 1, "", "add_module"], [209, 1, 1, "", "apply"], [209, 1, 1, "", "bfloat16"], [209, 1, 1, "", "buffers"], [209, 1, 1, "", "children"], [209, 1, 1, "", "compile"], [209, 4, 1, "", "container"], [209, 1, 1, "", "cpu"], [209, 1, 1, "", "cuda"], [209, 1, 1, "", "double"], [209, 1, 1, "", "eval"], [209, 1, 1, "", "extra_repr"], [209, 1, 1, "", "float"], [209, 1, 1, "", "forward"], [209, 1, 1, "", "get_buffer"], [209, 1, 1, "", "get_extra_state"], [209, 1, 1, "", "get_parameter"], [209, 1, 1, "", "get_submodule"], [209, 1, 1, "", "half"], [209, 1, 1, "", "ipu"], [209, 1, 1, "", "load_state_dict"], [209, 1, 1, "", "modules"], [209, 1, 1, "", "mtia"], [209, 4, 1, "", "n_steps"], [209, 1, 1, "", "named_buffers"], [209, 1, 1, "", "named_children"], [209, 1, 1, "", "named_modules"], [209, 1, 1, "", "named_parameters"], [209, 1, 1, "", "parameters"], [209, 4, 1, "", "parent"], [209, 1, 1, "", "register_backward_hook"], [209, 1, 1, "", "register_buffer"], [209, 1, 1, "", "register_forward_hook"], [209, 1, 1, "", "register_forward_pre_hook"], [209, 1, 1, "", "register_full_backward_hook"], [209, 1, 1, "", "register_full_backward_pre_hook"], [209, 1, 1, "", "register_load_state_dict_post_hook"], [209, 1, 1, "", "register_load_state_dict_pre_hook"], [209, 1, 1, "", "register_module"], [209, 1, 1, "", "register_parameter"], [209, 1, 1, "", "register_state_dict_post_hook"], [209, 1, 1, "", "register_state_dict_pre_hook"], [209, 1, 1, "", "requires_grad_"], [209, 1, 1, "", "set_extra_state"], [209, 1, 1, "", "set_submodule"], [209, 1, 1, "", "share_memory"], [209, 1, 1, "", "state_dict"], [209, 1, 1, "", "to"], [209, 1, 1, "", "to_empty"], [209, 1, 1, "", "train"], [209, 1, 1, "", "transform_done_spec"], [209, 1, 1, "", "transform_env_batch_size"], [209, 1, 1, "", "transform_env_device"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"], [209, 1, 1, "", "transform_reward_spec"], [209, 1, 1, "", "type"], [209, 1, 1, "", "xpu"], [209, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[210, 2, 1, "", "RandomPolicy"], [211, 2, 1, "", "check_env_specs"], [212, 2, 1, "", "exploration_type"], [213, 2, 1, "", "get_available_libraries"], [214, 2, 1, "", "make_composite_from_td"], [215, 2, 1, "", "set_exploration_type"], [216, 2, 1, "", "step_mdp"], [217, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[218, 0, 1, "", "AdditiveGaussianModule"], [219, 0, 1, "", "AdditiveGaussianWrapper"], [220, 0, 1, "", "BatchRenorm1d"], [221, 0, 1, "", "CEMPlanner"], [222, 0, 1, "", "ConsistentDropoutModule"], [223, 0, 1, "", "Conv3dNet"], [224, 0, 1, "", "ConvNet"], [225, 0, 1, "", "DTActor"], [226, 0, 1, "", "DdpgCnnActor"], [227, 0, 1, "", "DdpgCnnQNet"], [228, 0, 1, "", "DdpgMlpActor"], [229, 0, 1, "", "DdpgMlpQNet"], [230, 0, 1, "", "DecisionTransformer"], [231, 0, 1, "", "Delta"], [232, 0, 1, "", "DistributionalDQNnet"], [233, 0, 1, "", "DistributionalQValueHook"], [234, 0, 1, "", "DreamerActor"], [235, 0, 1, "", "DuelingCnnDQNet"], [236, 0, 1, "", "EGreedyModule"], [237, 0, 1, "", "EGreedyWrapper"], [238, 0, 1, "", "GRU"], [239, 0, 1, "", "GRUCell"], [240, 0, 1, "", "GRUModule"], [241, 0, 1, "", "IndependentNormal"], [242, 0, 1, "", "LSTM"], [243, 0, 1, "", "LSTMCell"], [244, 0, 1, "", "LSTMModule"], [245, 0, 1, "", "MLP"], [246, 0, 1, "", "MPCPlannerBase"], [247, 0, 1, "", "MPPIPlanner"], [248, 0, 1, "", "MaskedCategorical"], [249, 0, 1, "", "MaskedOneHotCategorical"], [250, 0, 1, "", "MultiAgentConvNet"], [251, 0, 1, "", "MultiAgentMLP"], [252, 0, 1, "", "MultiAgentNetBase"], [253, 0, 1, "", "NoisyLazyLinear"], [254, 0, 1, "", "NoisyLinear"], [255, 0, 1, "", "NormalParamWrapper"], [256, 0, 1, "", "ObsDecoder"], [257, 0, 1, "", "ObsEncoder"], [258, 0, 1, "", "OneHotCategorical"], [259, 0, 1, "", "OnlineDTActor"], [260, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [261, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [262, 0, 1, "", "QMixer"], [263, 0, 1, "", "QValueHook"], [264, 0, 1, "", "RSSMPosterior"], [265, 0, 1, "", "RSSMPrior"], [266, 0, 1, "", "Squeeze2dLayer"], [267, 0, 1, "", "SqueezeLayer"], [268, 0, 1, "", "TanhDelta"], [269, 0, 1, "", "TanhNormal"], [270, 0, 1, "", "TruncatedNormal"], [271, 0, 1, "", "VDNMixer"], [272, 0, 1, "", "VmapModule"], [273, 0, 1, "", "reset_noise"]], "torchrl.modules.AdditiveGaussianModule": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[220, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[221, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropoutModule": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[223, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[224, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[225, 1, 1, "", "default_config"], [225, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[226, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[227, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[228, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[229, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[230, 0, 1, "", "DTConfig"], [230, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[231, 1, 1, "", "log_prob"], [231, 4, 1, "", "mean"], [231, 4, 1, "", "mode"], [231, 1, 1, "", "rsample"], [231, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[232, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[234, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[235, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "step"]], "torchrl.modules.GRU": [[238, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[239, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[240, 1, 1, "", "forward"], [240, 1, 1, "id0", "make_tensordict_primer"], [240, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[241, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[242, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[243, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[244, 1, 1, "", "forward"], [244, 1, 1, "id0", "make_tensordict_primer"], [244, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[245, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[247, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[248, 1, 1, "", "log_prob"], [248, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[249, 1, 1, "", "log_prob"], [249, 4, 1, "", "mode"], [249, 1, 1, "", "rsample"], [249, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "from_stateful_net"], [252, 1, 1, "", "get_stateful_net"], [252, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[253, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[255, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[256, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[257, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[258, 1, 1, "", "log_prob"], [258, 4, 1, "", "mode"], [258, 1, 1, "", "rsample"], [258, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[259, 1, 1, "", "default_config"], [259, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[262, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[264, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[265, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[267, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[268, 4, 1, "", "mean"], [268, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[269, 1, 1, "", "get_mode"], [269, 4, 1, "", "mean"], [269, 4, 1, "", "mode"], [269, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[270, 1, 1, "", "log_prob"], [270, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[271, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[272, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[274, 0, 1, "", "Actor"], [275, 0, 1, "", "ActorCriticOperator"], [276, 0, 1, "", "ActorCriticWrapper"], [277, 0, 1, "", "ActorValueOperator"], [278, 0, 1, "", "DecisionTransformerInferenceWrapper"], [279, 0, 1, "", "DistributionalQValueActor"], [280, 0, 1, "", "DistributionalQValueModule"], [281, 0, 1, "", "LMHeadActorValueOperator"], [282, 0, 1, "", "MultiStepActorWrapper"], [283, 0, 1, "", "ProbabilisticActor"], [284, 0, 1, "", "QValueActor"], [285, 0, 1, "", "QValueModule"], [286, 0, 1, "", "SafeModule"], [287, 0, 1, "", "SafeProbabilisticModule"], [288, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [289, 0, 1, "", "SafeSequential"], [290, 0, 1, "", "TanhModule"], [291, 0, 1, "", "ValueOperator"], [292, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[275, 1, 1, "", "get_critic_operator"], [275, 1, 1, "", "get_policy_head"], [275, 1, 1, "", "get_value_head"], [275, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[276, 1, 1, "", "get_policy_head"], [276, 1, 1, "", "get_policy_operator"], [276, 1, 1, "", "get_value_head"], [276, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[277, 1, 1, "", "get_policy_head"], [277, 1, 1, "", "get_policy_operator"], [277, 1, 1, "", "get_value_head"], [277, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "mask_context"], [278, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[280, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[282, 1, 1, "", "forward"], [282, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[285, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[286, 1, 1, "", "random"], [286, 1, 1, "", "random_sample"], [286, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[287, 1, 1, "", "random"], [287, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[290, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[292, 1, 1, "", "get_reward_operator"], [292, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[293, 0, 1, "", "biased_softplus"], [294, 0, 1, "", "get_primers_from_module"], [295, 0, 1, "", "inv_softplus"], [296, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[293, 1, 1, "", "forward"]], "torchrl.objectives": [[297, 0, 1, "", "A2CLoss"], [298, 0, 1, "", "CQLLoss"], [299, 0, 1, "", "ClipPPOLoss"], [300, 0, 1, "", "CrossQLoss"], [301, 0, 1, "", "DDPGLoss"], [302, 0, 1, "", "DQNLoss"], [303, 0, 1, "", "DTLoss"], [304, 0, 1, "", "DiscreteCQLLoss"], [305, 0, 1, "", "DiscreteIQLLoss"], [306, 0, 1, "", "DiscreteSACLoss"], [307, 0, 1, "", "DistributionalDQNLoss"], [308, 0, 1, "", "DreamerActorLoss"], [309, 0, 1, "", "DreamerModelLoss"], [310, 0, 1, "", "DreamerValueLoss"], [311, 0, 1, "", "GAILLoss"], [312, 0, 1, "", "HardUpdate"], [313, 0, 1, "", "IQLLoss"], [314, 0, 1, "", "KLPENPPOLoss"], [315, 0, 1, "", "LossModule"], [316, 0, 1, "", "OnlineDTLoss"], [317, 0, 1, "", "PPOLoss"], [318, 0, 1, "", "REDQLoss"], [319, 0, 1, "", "ReinforceLoss"], [320, 0, 1, "", "SACLoss"], [321, 0, 1, "", "SoftUpdate"], [322, 0, 1, "", "TD3BCLoss"], [323, 0, 1, "", "TD3Loss"], [324, 0, 1, "", "ValueEstimators"], [325, 0, 1, "", "default_value_kwargs"], [326, 0, 1, "", "distance_loss"], [327, 0, 1, "", "hold_out_net"], [328, 0, 1, "", "hold_out_params"], [330, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[297, 1, 1, "", "forward"], [297, 4, 1, "", "functional"], [297, 1, 1, "", "loss_critic"], [297, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[298, 1, 1, "", "forward"], [298, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[299, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[300, 1, 1, "", "actor_loss"], [300, 1, 1, "", "alpha_loss"], [300, 1, 1, "", "forward"], [300, 1, 1, "", "load_state_dict"], [300, 1, 1, "", "make_value_estimator"], [300, 1, 1, "", "qvalue_loss"], [300, 1, 1, "", "state_dict"], [300, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[301, 1, 1, "", "forward"], [301, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[303, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[304, 1, 1, "", "forward"], [304, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[305, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[306, 1, 1, "", "forward"], [306, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[308, 1, 1, "", "forward"], [308, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[309, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[310, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[311, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "loss_value_diff"], [313, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[314, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[315, 1, 1, "", "convert_to_functional"], [315, 1, 1, "", "forward"], [315, 1, 1, "", "from_stateful_net"], [315, 4, 1, "", "functional"], [315, 1, 1, "", "get_stateful_net"], [315, 1, 1, "", "make_value_estimator"], [315, 1, 1, "", "named_parameters"], [315, 1, 1, "", "parameters"], [315, 1, 1, "", "set_keys"], [315, 4, 1, "", "value_estimator"], [315, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[316, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[317, 1, 1, "", "forward"], [317, 4, 1, "", "functional"], [317, 1, 1, "", "loss_critic"], [317, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[318, 1, 1, "", "forward"], [318, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[319, 1, 1, "", "forward"], [319, 4, 1, "", "functional"], [319, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[320, 1, 1, "", "forward"], [320, 1, 1, "", "load_state_dict"], [320, 1, 1, "", "make_value_estimator"], [320, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[322, 1, 1, "", "actor_loss"], [322, 1, 1, "", "forward"], [322, 1, 1, "", "make_value_estimator"], [322, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[323, 1, 1, "", "forward"], [323, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[329, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[329, 1, 1, "", "forward"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[331, 0, 1, "", "GAE"], [332, 0, 1, "", "TD0Estimator"], [333, 0, 1, "", "TD1Estimator"], [334, 0, 1, "", "TDLambdaEstimator"], [335, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[331, 1, 1, "", "forward"], [331, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[332, 1, 1, "", "forward"], [332, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[333, 1, 1, "", "forward"], [333, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[334, 1, 1, "", "forward"], [334, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[335, 1, 1, "", "forward"], [335, 1, 1, "", "set_keys"], [335, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[336, 0, 1, "", "generalized_advantage_estimate"], [337, 0, 1, "", "reward2go"], [338, 0, 1, "", "td0_advantage_estimate"], [339, 0, 1, "", "td0_return_estimate"], [340, 0, 1, "", "td1_advantage_estimate"], [341, 0, 1, "", "td1_return_estimate"], [342, 0, 1, "", "td_lambda_advantage_estimate"], [343, 0, 1, "", "td_lambda_return_estimate"], [344, 0, 1, "", "vec_generalized_advantage_estimate"], [345, 0, 1, "", "vec_td1_advantage_estimate"], [346, 0, 1, "", "vec_td1_return_estimate"], [347, 0, 1, "", "vec_td_lambda_advantage_estimate"], [348, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[349, 2, 1, "", "PixelRenderTransform"], [350, 2, 1, "", "TensorDictRecorder"], [351, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[352, 2, 1, "", "Logger"], [354, 2, 1, "", "generate_exp_name"], [355, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[353, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[356, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[357, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[358, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[359, 0, 1, "", "BatchSubSampler"], [360, 0, 1, "", "ClearCudaCache"], [361, 0, 1, "", "CountFramesLog"], [362, 0, 1, "", "LogReward"], [363, 0, 1, "", "OptimizerHook"], [364, 0, 1, "", "Recorder"], [365, 0, 1, "", "ReplayBufferTrainer"], [366, 0, 1, "", "RewardNormalizer"], [367, 0, 1, "", "SelectKeys"], [368, 0, 1, "", "Trainer"], [369, 0, 1, "", "TrainerHookBase"], [370, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[359, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[360, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[361, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[362, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[363, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[364, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[365, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[366, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[367, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[369, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[370, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[371, 2, 1, "", "correct_for_frame_skip"], [372, 2, 1, "", "get_stats_random_rollout"], [373, 2, 1, "", "make_collector_offpolicy"], [374, 2, 1, "", "make_collector_onpolicy"], [375, 2, 1, "", "make_dqn_loss"], [376, 2, 1, "", "make_replay_buffer"], [377, 2, 1, "", "make_target_updater"], [378, 2, 1, "", "make_trainer"], [379, 2, 1, "", "parallel_env_constructor"], [380, 2, 1, "", "sync_async_collector"], [381, 2, 1, "", "sync_sync_collector"], [382, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 386, 387, 388, 389, 391, 392, 393, 396, 403, 404, 405, 409, 410], "instal": [0, 6, 7, 409], "get": [0, 395, 396, 397, 398, 399, 400], "start": [0, 395, 396, 397, 398, 399, 400], "tutori": [0, 393, 403, 404], "basic": [0, 407], "intermedi": [0, 8], "advanc": 0, "refer": [0, 384], "knowledg": [0, 385], "base": [0, 2, 7, 385], "indic": 0, "tabl": 0, "collector": [1, 391, 392, 393, 394, 398, 400, 403, 404, 409], "packag": [1, 2, 3, 386, 387, 388, 389], "batch": [1, 391, 405, 407], "size": [1, 391, 407], "polici": [1, 2, 4, 391, 393, 394, 396, 400, 402, 403, 404, 405], "copi": 1, "replai": [1, 2, 391, 392, 393, 394, 398, 400, 403, 404, 407, 409], "buffer": [1, 2, 391, 392, 393, 394, 398, 400, 403, 404, 407, 409], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 391, 392, 393, 398, 400, 403, 404, 409], "distribut": [1, 386], "helper": [1, 3], "function": [1, 4, 387, 392, 393, 397, 403, 404, 409], "compos": [2, 164], "support": 2, "type": 2, "choos": 2, "storag": [2, 101, 391, 398, 407], "sampl": [2, 407], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 392, 407], "trajectori": [2, 407], "checkpoint": [2, 388], "episod": [2, 4], "format": 2, "ted": [2, 395], "The": [2, 391], "rational": 2, "behind": 2, "structur": [2, 407], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 386, 407, 409], "special": [2, 396, 409], "case": 2, "footnot": 2, "multi": [2, 3, 386, 387, 402, 403, 404], "agent": [2, 3, 4, 386, 387, 403, 404], "present": 2, "rnn": 2, "transform": [2, 3, 200, 391, 393, 395, 403, 404, 405, 407, 409, 410], "step": [2, 391, 393, 395, 398, 403, 404, 407, 410], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 62], "numer": 2, "subclass": 2, "categor": [2, 29], "reinforc": [2, 387, 393, 403, 404], "learn": [2, 4, 393, 403, 404], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 386, 387, 388, 403], "env": [3, 405, 409, 410], "vector": [3, 409], "custom": [3, 11, 405, 407], "nativ": 3, "environ": [3, 4, 6, 7, 391, 392, 393, 394, 395, 400, 402, 403, 404, 405, 409, 410], "auto": 3, "reset": [3, 405, 410], "dynam": [3, 4, 407], "spec": [3, 405, 410], "forward": [3, 4, 391], "invers": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 394, 405], "record": [3, 364, 388, 391, 399], "video": [3, 11, 399], "domain": [3, 386], "specif": [3, 386, 402], "librari": [3, 409], "thing": [4, 391, 405], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 395, 397, 409], "gener": [4, 11, 386], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 391, 400, 405], "algorithm": [4, 386], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 391, 392, 397, 400], "return": [4, 387], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 409], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 402], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 391, 392, 393], "standard": 4, "explor": [4, 386, 391, 392, 396], "valu": [4, 386, 387, 391, 393, 394, 396], "loss": [4, 391, 392, 393, 394, 400, 403, 404], "earli": 4, "train": [4, 8, 387, 391, 393, 394, 397, 400, 403, 404, 405], "roughli": 4, "uniformli": 4, "random": [4, 387, 403, 404], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 392], "increas": 4, "an": [4, 393, 394, 395, 405], "can": 4, "low": 4, "model": [4, 386, 391, 392, 394, 397, 406, 409], "also": 4, "us": [4, 6, 9, 394, 406, 407, 409], "offlin": 4, "observ": [4, 391], "space": 4, "effect": [4, 405], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 410], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 391], "render": [7, 11, 400, 403, 404, 410], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 391], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 405], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 392, 407], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": 25, "binarydiscretetensorspec": 26, "bound": 27, "boundedtensorspec": 28, "composit": 30, "compositespec": 31, "constantklcontrol": 32, "discretetensorspec": 33, "flat2t": 34, "h5combin": 35, "h5split": 36, "lazystackedcompositespec": 37, "lazystackedtensorspec": 38, "multicategor": 39, "multidiscretetensorspec": 40, "multionehot": 41, "multionehotdiscretetensorspec": 42, "multistep": 43, "nested2t": 44, "nontensor": 45, "nontensorspec": 46, "onehotdiscretetensorspec": 47, "pairwisedataset": 48, "prioritizedreplaybuff": 49, "promptdata": 50, "prompttensordicttoken": 51, "replaybuff": 52, "rewarddata": 53, "rolloutfrommodel": 54, "stack": 55, "stackedcomposit": 56, "ted2flat": 57, "ted2nest": 58, "tensordictprioritizedreplaybuff": 59, "tensordictreplaybuff": 60, "tensordicttoken": 61, "tokenizeddatasetload": 63, "unbound": 64, "unboundedcontinu": 65, "unboundedcontinuoustensorspec": 66, "unboundeddiscret": 67, "unboundeddiscretetensorspec": 68, "check_no_exclusive_kei": 69, "consolidate_spec": 70, "contains_lazy_spec": 71, "create_infinite_iter": 72, "ataridqnexperiencereplai": 73, "basedatasetexperiencereplai": 74, "d4rlexperiencereplai": 75, "gendgrlexperiencereplai": 76, "minariexperiencereplai": 77, "openmlexperiencereplai": 78, "openxexperiencereplai": 79, "robosetexperiencereplai": 80, "vd4rlexperiencereplai": 81, "get_dataload": 82, "flatstoragecheckpoint": 83, "h5storagecheckpoint": 84, "immutabledatasetwrit": 85, "lazymemmapstorag": 86, "lazytensorstorag": 87, "liststorag": 88, "liststoragecheckpoint": 89, "nestedstoragecheckpoint": 90, "prioritizedsampl": 91, "prioritizedslicesampl": 92, "randomsampl": 93, "replaybufferensembl": 94, "roundrobinwrit": 95, "sampler": 96, "samplerensembl": 97, "samplerwithoutreplac": 98, "slicesampl": 99, "slicesamplerwithoutreplac": 100, "storagecheckpointerbas": 102, "storageensembl": 103, "storageensemblecheckpoint": 104, "tensordictmaxvaluewrit": 105, "tensordictroundrobinwrit": 106, "tensorstorag": 107, "tensorstoragecheckpoint": 108, "writer": 109, "writerensembl": 110, "braxenv": 111, "braxwrapp": 112, "dmcontrolenv": 113, "dmcontrolwrapp": 114, "envbas": [115, 405], "envcreat": 116, "envmetadata": 117, "gymenv": 118, "gymlikeenv": 119, "gymwrapp": 120, "habitatenv": 121, "isaacgymenv": 122, "isaacgymwrapp": 123, "jumanjienv": 124, "jumanjiwrapp": 125, "mogymenv": 126, "mogymwrapp": 127, "marlgroupmaptyp": 128, "meltingpotenv": 129, "meltingpotwrapp": 130, "modelbasedenvbas": 131, "multithreadedenv": 132, "multithreadedenvwrapp": 133, "openmlenv": 134, "openspielenv": 135, "openspielwrapp": 136, "parallelenv": 137, "pendulumenv": 138, "pettingzooenv": 139, "pettingzoowrapp": 140, "robohiveenv": 141, "smacv2env": 142, "smacv2wrapp": 143, "serialenv": 144, "tictactoeenv": 145, "vmasenv": 146, "vmaswrapp": 147, "check_marl_group": 148, "gym_backend": 149, "dreamerdecod": 150, "dreamerenv": 151, "set_gym_backend": 152, "actiondiscret": 153, "actionmask": 154, "autoresetenv": 155, "autoresettransform": 156, "batchsizetransform": 157, "binarizereward": 158, "burnintransform": 159, "catfram": [160, 407], "cattensor": 161, "centercrop": 162, "cliptransform": 163, "crop": 165, "dtypecasttransform": 166, "devicecasttransform": 167, "discreteactionproject": 168, "doubletofloat": 169, "endoflifetransform": 170, "excludetransform": 171, "finitetensordictcheck": 172, "flattenobserv": 173, "frameskiptransform": 174, "grayscal": 175, "inittrack": 176, "klrewardtransform": 177, "noopresetenv": 178, "observationnorm": 179, "observationtransform": 180, "permutetransform": 181, "pinmemorytransform": 182, "r3mtransform": 183, "randomcroptensordict": 184, "removeemptyspec": 185, "renametransform": 186, "resiz": 187, "reward2gotransform": 188, "rewardclip": 189, "rewardsc": 190, "rewardsum": 191, "selecttransform": 192, "signtransform": 193, "squeezetransform": 194, "stepcount": 195, "targetreturn": 196, "tensordictprim": 197, "timemaxpool": 198, "totensorimag": 199, "transformedenv": 201, "unsqueezetransform": 202, "vc1transform": 203, "viprewardtransform": 204, "viptransform": 205, "vecgymenvtransform": 206, "vecnorm": [207, 410], "gsdenois": 208, "multisteptransform": 209, "randompolici": 210, "check_env_spec": 211, "exploration_typ": 212, "get_available_librari": 213, "make_composite_from_td": 214, "set_exploration_typ": 215, "step_mdp": 216, "terminated_or_trunc": 217, "additivegaussianmodul": 218, "additivegaussianwrapp": 219, "batchrenorm1d": 220, "cemplann": 221, "consistentdropoutmodul": 222, "conv3dnet": 223, "convnet": 224, "dtactor": 225, "ddpgcnnactor": 226, "ddpgcnnqnet": 227, "ddpgmlpactor": 228, "ddpgmlpqnet": 229, "decisiontransform": 230, "delta": 231, "distributionaldqnnet": 232, "distributionalqvaluehook": 233, "dreameractor": 234, "duelingcnndqnet": 235, "egreedymodul": 236, "egreedywrapp": 237, "gru": 238, "grucel": 239, "grumodul": 240, "independentnorm": 241, "lstm": [242, 394], "lstmcell": 243, "lstmmodul": 244, "mlp": [245, 394], "mpcplannerbas": 246, "mppiplann": 247, "maskedcategor": 248, "maskedonehotcategor": 249, "multiagentconvnet": 250, "multiagentmlp": 251, "multiagentnetbas": 252, "noisylazylinear": 253, "noisylinear": 254, "normalparamwrapp": 255, "obsdecod": 256, "obsencod": 257, "onehotcategor": 258, "onlinedtactor": 259, "ornsteinuhlenbeckprocessmodul": 260, "ornsteinuhlenbeckprocesswrapp": 261, "qmixer": [262, 387], "qvaluehook": 263, "rssmposterior": 264, "rssmprior": 265, "squeeze2dlay": 266, "squeezelay": 267, "tanhdelta": 268, "tanhnorm": 269, "truncatednorm": 270, "vdnmixer": 271, "vmapmodul": 272, "reset_nois": 273, "actor": [274, 386, 391, 396], "actorcriticoper": 275, "actorcriticwrapp": 276, "actorvalueoper": 277, "decisiontransformerinferencewrapp": 278, "distributionalqvalueactor": 279, "distributionalqvaluemodul": 280, "lmheadactorvalueoper": 281, "multistepactorwrapp": 282, "probabilisticactor": 283, "qvalueactor": 284, "qvaluemodul": 285, "safemodul": [286, 386], "safeprobabilisticmodul": 287, "safeprobabilistictensordictsequenti": 288, "safesequenti": 289, "tanhmodul": 290, "valueoper": 291, "worldmodelwrapp": 292, "biased_softplu": 293, "get_primers_from_modul": 294, "inv_softplu": 295, "map": [296, 403], "a2closs": 297, "cqlloss": 298, "clipppoloss": 299, "crossqloss": 300, "ddpgloss": 301, "dqnloss": 302, "dtloss": 303, "discretecqlloss": 304, "discreteiqlloss": 305, "discretesacloss": 306, "distributionaldqnloss": 307, "dreameractorloss": 308, "dreamermodelloss": 309, "dreamervalueloss": 310, "gailloss": 311, "hardupd": 312, "iqlloss": 313, "klpenppoloss": 314, "lossmodul": [315, 391, 397], "onlinedtloss": 316, "ppoloss": 317, "redqloss": 318, "reinforceloss": 319, "sacloss": 320, "softupd": 321, "td3bcloss": 322, "td3loss": 323, "valueestim": 324, "default_value_kwarg": 325, "distance_loss": 326, "hold_out_net": 327, "hold_out_param": 328, "qmixerloss": 329, "next_state_valu": 330, "gae": 331, "td0estim": 332, "td1estim": 333, "tdlambdaestim": 334, "valueestimatorbas": 335, "generalized_advantage_estim": 336, "reward2go": 337, "td0_advantage_estim": 338, "td0_return_estim": 339, "td1_advantage_estim": 340, "td1_return_estim": 341, "td_lambda_advantage_estim": 342, "td_lambda_return_estim": 343, "vec_generalized_advantage_estim": 344, "vec_td1_advantage_estim": 345, "vec_td1_return_estim": 346, "vec_td_lambda_advantage_estim": 347, "vec_td_lambda_return_estim": 348, "pixelrendertransform": 349, "tensordictrecord": 350, "videorecord": 351, "logger": [352, 388, 399, 400], "csvlogger": 353, "generate_exp_nam": 354, "get_logg": 355, "mlflowlogg": 356, "tensorboardlogg": 357, "wandblogg": 358, "batchsubsampl": 359, "clearcudacach": 360, "countframeslog": 361, "logreward": 362, "optimizerhook": 363, "replaybuffertrain": 365, "rewardnorm": 366, "selectkei": 367, "trainer": [368, 388, 392], "trainerhookbas": 369, "updateweight": 370, "correct_for_frame_skip": 371, "get_stats_random_rollout": 372, "make_collector_offpolici": 373, "make_collector_onpolici": 374, "make_dqn_loss": 375, "make_replay_buff": 376, "make_target_updat": 377, "make_train": 378, "parallel_env_constructor": 379, "sync_async_collector": 380, "sync_sync_collector": 381, "transformed_env_constructor": 382, "readm": [383, 401], "tuto": [383, 401], "api": 384, "contribut": [385, 409], "content": 385, "modul": [386, 391, 394, 396, 400, 409], "tensordictmodul": [386, 396, 409], "wrapper": [386, 396], "probabilist": [386, 396], "q": [386, 392, 394, 396], "oper": 386, "join": 386, "hook": [386, 388, 392], "regular": 386, "planner": 386, "object": [387, 391, 397, 409], "torch": 387, "vmap": 387, "dqn": [387, 392, 394], "ddpg": [387, 391, 403], "sac": 387, "redq": 387, "crossq": 387, "iql": 387, "cql": 387, "gail": 387, "dt": 387, "td3": 387, "bc": 387, "ppo": [387, 393, 404], "a2c": 387, "dreamer": 387, "builder": 388, "_util": 389, "comput": [390, 392, 405, 408], "time": [390, 391, 408], "code": [391, 405], "overview": [391, 394], "setup": [391, 394], "__init__": 391, "method": 391, "estim": 391, "put": 391, "togeth": [391, 405], "call": 391, "parallel": [391, 402, 410], "execut": [391, 402, 405], "stat": 391, "build": [391, 392, 400, 407], "evalu": 391, "construct": 391, "target": [391, 392, 397], "network": [391, 392, 393, 394, 396, 403, 404], "updat": 391, "experi": [391, 405], "result": [391, 393, 403, 404], "conclus": [391, 392, 393, 394, 403, 404, 405, 407], "next": [391, 393, 395, 398, 403, 404, 407], "A": [392, 407], "deep": 392, "collect": [392, 393, 398], "paramet": [392, 393, 397], "hyperparamet": [392, 393, 403, 404], "regist": 392, "possibl": 392, "improv": 392, "defin": [393, 403, 404], "loop": [393, 394, 400, 403, 404, 405], "recurr": 394, "convolut": 394, "select": 394, "further": [394, 397], "read": 394, "creat": 395, "run": [395, 410], "rollout": [395, 402, 403, 404, 405, 410], "s": [396, 397], "output": 397, "consider": 397, "log": 399, "own": 400, "first": 400, "design": 400, "divers": 402, "competit": 403, "group": 403, "critic": [403, 404], "pendulum": 405, "write": 405, "_step": 405, "simul": 405, "_reset": 405, "metadata": 405, "_spec": 405, "shape": 405, "seed": [405, 410], "wrap": 405, "class": [405, 409], "test": 405, "our": 405, "simpl": 405, "pretrain": 406, "vanilla": 407, "integr": 407, "tensorclass": 407, "other": 407, "tensor": 407, "pytre": 407, "iter": 407, "over": 407, "fix": 407, "priorit": 407, "save": 407, "raw": 407, "imag": 407, "more": 407, "complex": 407, "introduct": 409, "config": 409, "sequenc": 409, "program": 409, "ensembl": 409, "meta": 409, "state": 409, "frame_skip": 410, "deepmind": 410, "control": 410, "devic": 410, "close": 410, "access": 410, "attribut": 410, "kwarg": 410}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})