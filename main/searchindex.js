Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 119, 120, 122, 123, 124, 125, 126, 129, 132, 137, 138, 140, 141, 143, 144, 146, 149, 151, 152, 155, 161, 162, 166, 167, 168, 169, 171, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 194, 204, 205, 207, 208, 209, 210, 217, 219, 221, 223, 224, 225, 229, 230, 231, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 267, 268, 272, 276, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 309, 310, 311, 312, 313, 327, 329, 332, 336, 341, 342, 346, 347, 350, 357, 358, 359, 360, 363, 364, 365, 369, 370, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 387, 388], "open": [0, 5, 7, 12, 41, 43, 46, 67, 370, 381, 382, 387], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388], "reinforc": [0, 3, 9, 64, 117, 118, 144, 207, 208, 209, 210, 214, 257, 262, 277, 278, 282, 283, 284, 286, 290, 291, 297, 298, 299, 300, 362, 368, 370, 373, 374, 379, 383, 386, 387], "learn": [0, 3, 7, 8, 9, 18, 37, 64, 65, 66, 68, 69, 103, 117, 118, 122, 123, 129, 144, 207, 208, 209, 210, 214, 226, 232, 257, 262, 277, 278, 282, 283, 284, 286, 290, 291, 296, 297, 298, 299, 300, 362, 364, 365, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 61, 119, 179, 232, 250, 263, 271, 277, 279, 292, 293, 295, 297, 337, 361, 363, 364, 365, 366, 369, 370, 371, 376, 379, 381, 382, 384, 385, 388], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 44, 52, 101, 102, 111, 120, 197, 362, 363, 364, 367, 369, 370, 371, 373, 374, 376, 381, 382, 383, 388], "pytorch": [0, 1, 2, 3, 23, 65, 130, 131, 182, 194, 217, 221, 231, 232, 346, 361, 363, 366, 369, 371, 372, 375, 379, 381, 382, 383, 384, 385, 387, 388], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 37, 52, 64, 103, 107, 111, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 136, 190, 192, 221, 336, 363, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 136, 137, 138, 140, 141, 143, 144, 147, 148, 149, 151, 152, 153, 161, 162, 166, 167, 171, 174, 178, 179, 180, 183, 184, 186, 188, 190, 192, 194, 202, 203, 204, 205, 207, 217, 219, 220, 221, 223, 225, 226, 229, 230, 232, 233, 246, 248, 250, 254, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 327, 329, 336, 342, 358, 359, 360, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "directli": [0, 3, 4, 8, 23, 61, 82, 99, 100, 103, 106, 107, 119, 123, 129, 162, 171, 189, 293, 300, 360, 364, 370, 371, 373, 381, 382, 383, 385], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 140, 141, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 159, 160, 162, 164, 166, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 198, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 236, 237, 238, 239, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 300, 301, 303, 307, 308, 309, 310, 311, 312, 315, 327, 328, 329, 337, 343, 346, 349, 350, 354, 356, 357, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388], "pypi": [0, 2, 387], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 103, 107, 110, 113, 117, 118, 120, 123, 124, 125, 126, 129, 130, 131, 148, 166, 180, 182, 183, 184, 186, 188, 190, 191, 192, 204, 205, 217, 220, 221, 224, 230, 231, 238, 246, 247, 251, 253, 263, 266, 267, 300, 329, 336, 343, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 385, 388], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 93, 103, 106, 107, 108, 110, 111, 113, 117, 118, 123, 124, 125, 126, 129, 130, 131, 182, 186, 191, 192, 214, 221, 224, 231, 233, 250, 254, 256, 257, 266, 271, 277, 286, 293, 295, 309, 314, 322, 336, 341, 363, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 388], "about": [0, 3, 5, 7, 9, 18, 19, 20, 52, 65, 68, 69, 103, 123, 129, 365, 369, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 385, 387, 388], "instruct": [0, 6, 7, 10, 22, 63, 151, 153, 369, 370, 371, 372, 381, 382, 385], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 123, 129, 251, 252, 253, 364, 369, 373, 375, 376, 378, 380, 382], "section": [0, 2, 3, 4, 24, 217, 221, 370, 373, 378, 381, 382], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 70, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 204, 205, 217, 220, 221, 224, 230, 246, 263, 266, 343, 369, 370, 371, 372, 373, 381, 383], "pip": [0, 10, 66, 373, 374, 375, 376, 377, 378, 382, 387, 388], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 80, 81, 82, 85, 87, 88, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 129, 137, 141, 143, 144, 145, 146, 147, 149, 152, 156, 161, 162, 164, 166, 167, 170, 171, 174, 175, 179, 180, 181, 184, 186, 188, 189, 190, 192, 202, 204, 205, 211, 214, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 248, 250, 254, 257, 258, 259, 261, 262, 263, 264, 265, 270, 277, 278, 279, 280, 281, 283, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 333, 337, 343, 350, 356, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "python": [0, 3, 5, 6, 7, 10, 11, 14, 15, 21, 121, 136, 217, 218, 219, 221, 222, 223, 227, 228, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 41, 43, 46, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 103, 106, 107, 108, 113, 123, 129, 140, 141, 144, 145, 156, 162, 166, 167, 182, 184, 186, 205, 217, 219, 221, 223, 224, 229, 230, 231, 235, 250, 255, 256, 257, 263, 264, 266, 267, 279, 288, 292, 293, 295, 328, 329, 345, 364, 368, 369, 370, 371, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "low": [0, 3, 26, 80, 103, 107, 123, 129, 137, 147, 151, 198, 244, 245, 246, 255, 257, 263, 270, 369, 370, 371, 381, 382, 383, 387, 388], "high": [0, 3, 9, 26, 41, 43, 46, 50, 80, 103, 107, 123, 129, 137, 147, 151, 161, 198, 244, 245, 246, 255, 257, 263, 270, 309, 314, 322, 369, 370, 371, 381, 382, 383, 385, 387, 388], "level": [0, 2, 3, 4, 22, 27, 33, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 106, 108, 144, 178, 292, 369, 370, 376, 387], "abstract": [0, 3, 8, 25, 26, 27, 29, 33, 34, 35, 39, 53, 55, 56, 61, 62, 66, 97, 103, 163, 225, 313, 338, 347, 366, 371, 383, 387], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 33, 34, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 82, 85, 86, 88, 89, 91, 93, 95, 103, 104, 106, 107, 108, 116, 117, 118, 119, 122, 123, 124, 125, 126, 129, 130, 131, 137, 139, 140, 141, 143, 144, 147, 148, 149, 151, 152, 153, 155, 156, 160, 161, 164, 166, 171, 174, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 198, 201, 202, 203, 210, 212, 217, 218, 219, 221, 222, 223, 225, 227, 228, 229, 232, 236, 238, 241, 255, 256, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 304, 307, 308, 309, 310, 311, 312, 313, 327, 336, 343, 356, 360, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 143, 151, 248, 293, 364, 387], "effici": [0, 1, 2, 4, 8, 217, 232, 364, 369, 370, 371, 372, 375, 376, 378, 380, 381, 382, 384, 385, 387], "modular": [0, 61, 269, 385, 387], "document": [0, 2, 5, 7, 11, 18, 19, 21, 37, 67, 103, 107, 123, 129, 184, 192, 361, 370, 372, 373, 376, 379, 387], "properli": [0, 1, 103, 107, 123, 129, 201, 371, 377, 381, 382, 383, 387], "test": [0, 3, 5, 99, 100, 112, 113, 117, 118, 186, 194, 219, 223, 342, 356, 371, 372, 387], "The": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 79, 80, 82, 85, 87, 88, 89, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 125, 126, 129, 130, 131, 137, 140, 141, 143, 144, 148, 149, 152, 153, 154, 162, 164, 166, 171, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 192, 194, 201, 202, 203, 207, 208, 209, 210, 211, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 250, 251, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 315, 327, 329, 331, 334, 335, 336, 337, 341, 356, 358, 359, 362, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388], "code": [0, 3, 5, 7, 8, 14, 15, 67, 103, 107, 123, 129, 166, 184, 186, 217, 218, 219, 221, 222, 223, 263, 269, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388], "aim": [0, 2, 3, 7, 33, 34, 166, 186, 188, 224, 349, 363, 364, 365, 369, 370, 387], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 41, 43, 46, 66, 69, 70, 74, 75, 89, 91, 95, 96, 98, 99, 100, 106, 108, 112, 120, 122, 123, 124, 126, 141, 144, 153, 162, 180, 181, 183, 197, 214, 248, 256, 257, 263, 266, 269, 286, 309, 310, 311, 312, 334, 362, 364, 366, 371, 372, 373, 374, 382, 383, 385, 387], "research": [0, 7, 9, 117, 118, 387], "most": [0, 1, 2, 3, 7, 8, 14, 15, 37, 87, 88, 103, 107, 123, 129, 151, 189, 194, 369, 371, 373, 374, 375, 376, 377, 378, 383, 387, 388], "written": [0, 1, 2, 3, 12, 30, 41, 43, 46, 48, 54, 63, 64, 67, 72, 74, 80, 82, 87, 88, 101, 102, 103, 106, 107, 108, 109, 123, 126, 129, 137, 144, 153, 160, 174, 178, 181, 189, 192, 201, 202, 250, 262, 263, 266, 267, 271, 277, 279, 292, 295, 297, 308, 327, 328, 329, 364, 365, 366, 369, 372, 374, 380, 383, 387], "highli": [0, 2, 373, 387, 388], "wai": [0, 1, 2, 3, 4, 61, 65, 82, 93, 111, 166, 169, 188, 189, 221, 295, 309, 310, 311, 312, 364, 369, 370, 371, 373, 375, 376, 380, 381, 382, 383, 384, 385, 387, 388], "easili": [0, 1, 2, 3, 7, 103, 107, 123, 129, 365, 369, 370, 371, 373, 374, 375, 378, 381, 382, 387, 388], "swap": [0, 1, 3, 106, 189, 371, 384, 387], "compon": [0, 1, 2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 214, 239, 256, 257, 265, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 341, 346, 369, 370, 371, 372, 374, 375, 378, 380, 381, 382, 383, 384, 387], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 91, 96, 103, 104, 107, 117, 118, 123, 124, 125, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 201, 206, 207, 211, 214, 215, 219, 223, 237, 238, 239, 247, 255, 260, 261, 270, 273, 274, 276, 282, 294, 327, 329, 343, 360, 362, 368, 370, 372, 374, 376, 377, 378, 379, 384, 386], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 98, 103, 104, 107, 111, 116, 117, 118, 123, 124, 125, 129, 130, 131, 149, 152, 180, 184, 190, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 247, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 292, 329, 369, 370, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "write": [0, 2, 3, 8, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 91, 98, 103, 107, 147, 164, 165, 174, 176, 178, 182, 202, 250, 266, 267, 269, 271, 280, 281, 283, 284, 285, 291, 296, 298, 300, 301, 308, 313, 329, 364, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 107, 120, 123, 127, 128, 129, 141, 174, 183, 190, 192, 201, 202, 217, 219, 223, 262, 266, 267, 272, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 336, 369, 371, 372, 373, 375, 381, 382, 383, 387, 388], "ones": [0, 2, 23, 27, 37, 42, 45, 50, 51, 103, 107, 123, 124, 125, 129, 145, 148, 149, 150, 152, 162, 166, 171, 180, 183, 184, 186, 188, 192, 193, 227, 228, 248, 266, 277, 278, 280, 291, 295, 296, 298, 300, 301, 315, 369, 371, 381, 382, 383, 385, 387, 388], "littl": [0, 1, 3, 52, 103, 107, 123, 129, 184, 277, 279, 292, 295, 297, 371, 372, 376, 385, 387, 388], "effort": [0, 3, 383, 385, 387], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 96, 98, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 129, 130, 131, 136, 137, 138, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 166, 167, 168, 169, 171, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 307, 309, 310, 311, 312, 313, 327, 328, 336, 337, 339, 342, 343, 346, 348, 349, 350, 356, 360, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "repo": [0, 6, 63, 144, 181, 186, 363, 382, 387], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 87, 88, 101, 102, 106, 108, 109, 126, 254, 259, 262, 281, 284, 291, 307, 375, 387], "align": [0, 217, 221, 387], "exist": [0, 2, 3, 4, 12, 18, 21, 37, 41, 43, 46, 54, 103, 107, 123, 129, 145, 150, 184, 192, 298, 350, 360, 381, 382, 387, 388], "ecosystem": [0, 376, 387], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 61, 67, 74, 75, 82, 85, 87, 93, 95, 103, 104, 107, 111, 117, 118, 123, 129, 130, 131, 141, 144, 178, 179, 180, 181, 184, 192, 217, 219, 221, 223, 229, 245, 254, 257, 259, 261, 262, 267, 292, 329, 369, 370, 371, 372, 373, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "dataset": [0, 32, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 85, 87, 88, 122, 190, 329, 362, 369, 370, 373, 384, 385, 387, 388], "pillar": [0, 387], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 140, 141, 143, 144, 145, 149, 150, 151, 152, 157, 161, 162, 166, 167, 168, 171, 174, 178, 179, 180, 181, 183, 184, 186, 189, 190, 194, 203, 219, 223, 225, 226, 254, 261, 262, 283, 287, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 337, 339, 342, 349, 350, 351, 352, 356, 357, 358, 359, 360, 362, 363, 364, 368, 374, 375, 376, 377, 379, 384, 385, 386], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 43, 46, 47, 54, 103, 107, 119, 123, 129, 149, 166, 180, 186, 188, 191, 192, 204, 205, 206, 211, 213, 219, 223, 224, 225, 226, 230, 237, 238, 247, 251, 252, 253, 260, 266, 272, 274, 277, 278, 279, 281, 282, 283, 284, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 307, 346, 351, 352, 353, 362, 363, 366, 368, 371, 373, 376, 379, 381, 382, 383, 385, 386, 388], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 129, 138, 141, 143, 144, 149, 150, 152, 154, 160, 162, 168, 171, 178, 184, 189, 192, 193, 194, 198, 202, 203, 214, 219, 223, 226, 229, 230, 239, 248, 250, 256, 258, 259, 261, 262, 263, 264, 266, 269, 270, 271, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 327, 329, 336, 337, 343, 346, 348, 351, 356, 358, 359, 360, 362, 364, 365, 366, 368, 372, 373, 374, 375, 379, 383, 384, 385, 386, 388], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 41, 43, 45, 46, 47, 100, 103, 107, 112, 113, 118, 123, 124, 125, 129, 132, 144, 166, 171, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 211, 217, 221, 273, 274, 275, 276, 293, 356, 362, 367, 369, 371, 374, 375, 376, 382, 383, 385, 387, 388], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 40, 41, 43, 46, 74, 75, 79, 80, 93, 95, 103, 104, 107, 123, 129, 130, 141, 143, 145, 148, 156, 162, 166, 174, 180, 183, 184, 186, 188, 192, 194, 217, 219, 220, 221, 223, 226, 230, 233, 239, 245, 246, 255, 257, 261, 263, 265, 266, 267, 298, 308, 309, 310, 311, 312, 327, 337, 349, 359, 364, 370, 371, 374, 375, 377, 381, 382, 384, 385, 387, 388], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 40, 41, 43, 46, 93, 103, 104, 107, 123, 129, 130, 141, 143, 145, 148, 156, 162, 166, 174, 180, 183, 184, 186, 188, 192, 194, 217, 219, 220, 221, 222, 223, 226, 230, 245, 246, 255, 263, 266, 267, 298, 308, 318, 319, 320, 321, 323, 324, 325, 326, 327, 359, 364, 370, 371, 374, 377, 381, 382, 383, 384, 385, 387, 388], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 37, 47, 48, 61, 67, 141, 144, 171, 178, 192, 193, 262, 343, 346, 348, 351, 352, 356, 358, 359, 362, 366, 385, 388], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 80, 82, 83, 85, 87, 88, 89, 94, 97, 98, 103, 107, 119, 123, 129, 137, 148, 149, 152, 166, 180, 183, 184, 186, 188, 189, 190, 192, 201, 202, 203, 204, 205, 217, 218, 221, 222, 224, 226, 230, 250, 256, 257, 263, 265, 266, 271, 274, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 315, 333, 337, 349, 356, 357, 358, 359, 360, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388], "etc": [0, 2, 3, 7, 8, 12, 37, 55, 56, 67, 103, 107, 123, 129, 160, 184, 192, 224, 230, 245, 370, 371, 376, 385, 387, 388], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 89, 103, 107, 123, 124, 125, 129, 137, 140, 144, 149, 152, 153, 160, 161, 162, 178, 183, 184, 190, 192, 194, 202, 204, 205, 224, 229, 230, 248, 261, 268, 269, 277, 279, 292, 295, 297, 300, 304, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 337, 346, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "few": [0, 2, 8, 107, 329, 337, 371, 372, 374, 381, 382, 385, 387, 388], "depend": [0, 1, 2, 3, 4, 7, 8, 41, 43, 106, 108, 109, 126, 130, 131, 149, 152, 271, 295, 364, 369, 371, 372, 381, 382, 383, 387, 388], "possibl": [0, 2, 3, 4, 23, 29, 34, 37, 40, 64, 67, 69, 80, 87, 93, 103, 107, 123, 129, 137, 148, 166, 180, 183, 184, 186, 188, 192, 204, 205, 217, 218, 221, 222, 266, 327, 342, 346, 364, 369, 371, 372, 374, 376, 377, 381, 382, 383, 385, 387, 388], "standard": [0, 3, 162, 173, 190, 203, 215, 226, 231, 232, 237, 254, 255, 300, 301, 309, 310, 311, 312, 369, 370, 373, 374, 382, 385, 387], "numpi": [0, 3, 12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 129, 182, 346, 383, 385, 387, 388], "common": [0, 2, 3, 4, 107, 112, 138, 251, 252, 253, 260, 277, 278, 279, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 356, 363, 364, 366, 369, 371, 374, 377, 380, 381, 382, 383, 384, 387, 388], "openai": [0, 7, 24, 106, 108, 126, 371, 383, 387, 388], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 103, 104, 106, 107, 108, 109, 111, 117, 118, 120, 121, 123, 126, 129, 130, 131, 133, 136, 140, 144, 147, 153, 159, 160, 162, 164, 169, 171, 174, 180, 183, 189, 190, 192, 356, 363, 369, 370, 371, 372, 373, 377, 378, 383, 384, 385, 387], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 82, 87, 88, 95, 101, 102, 103, 106, 107, 108, 109, 111, 113, 120, 121, 123, 124, 125, 126, 129, 137, 140, 144, 145, 147, 148, 149, 151, 152, 156, 162, 166, 167, 171, 178, 179, 180, 181, 183, 184, 186, 188, 190, 192, 221, 223, 229, 230, 250, 255, 256, 263, 264, 266, 267, 268, 269, 277, 279, 280, 284, 285, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 309, 310, 311, 312, 313, 329, 336, 350, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 387, 388], "option": [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 166, 167, 169, 170, 171, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 248, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 334, 336, 337, 339, 340, 341, 342, 343, 344, 346, 350, 351, 352, 353, 355, 356, 358, 359, 360, 364, 372, 373, 376, 381, 382, 383, 385, 387], "On": [0, 3, 7, 18, 19, 20, 21, 27, 64, 218, 222, 364, 370, 381, 382], "end": [0, 2, 3, 14, 15, 17, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 86, 87, 88, 103, 107, 123, 129, 153, 164, 178, 179, 184, 192, 204, 205, 217, 218, 221, 222, 225, 261, 298, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "come": [0, 1, 2, 3, 8, 37, 93, 103, 107, 116, 123, 129, 149, 152, 250, 251, 252, 253, 263, 271, 277, 279, 292, 295, 297, 329, 369, 370, 371, 372, 375, 376, 377, 378, 381, 382, 385, 387, 388], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 86, 89, 95, 103, 105, 107, 108, 117, 118, 119, 123, 124, 125, 129, 130, 131, 136, 138, 140, 141, 144, 145, 148, 149, 152, 159, 160, 166, 171, 178, 179, 180, 181, 183, 184, 186, 188, 190, 192, 194, 199, 200, 202, 217, 219, 221, 223, 225, 229, 230, 245, 254, 255, 266, 285, 293, 295, 298, 313, 337, 342, 343, 352, 360, 363, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 380, 381, 382, 383, 384, 385, 387, 388], "re": [0, 2, 3, 8, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 129, 192, 223, 227, 228, 263, 267, 336, 366, 369, 371, 372, 373, 375, 380, 381, 383, 387, 388], "usabl": [0, 366, 372, 387], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 104, 107, 123, 129, 136, 140, 141, 149, 152, 184, 190, 192, 194, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 233, 234, 235, 236, 237, 240, 241, 243, 246, 248, 251, 252, 253, 254, 255, 257, 258, 261, 262, 263, 265, 266, 267, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 356, 362, 364, 369, 372, 373, 374, 377, 380, 383, 385, 388], "cost": [0, 2, 29, 67, 277, 279, 292, 295, 297, 369, 370, 381, 382, 383, 385], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 83, 85, 87, 88, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 133, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 201, 202, 203, 206, 207, 208, 209, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 236, 237, 238, 240, 241, 244, 245, 246, 247, 250, 251, 252, 253, 255, 261, 263, 265, 266, 267, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 304, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 333, 346, 349, 351, 356, 357, 358, 359, 360, 362, 364, 366, 369, 370, 371, 372, 374, 375, 377, 380, 381, 382, 383, 384, 385, 387, 388], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 46, 52, 54, 61, 64, 68, 69, 79, 80, 87, 103, 104, 107, 111, 116, 120, 123, 124, 125, 129, 143, 149, 152, 180, 182, 190, 192, 229, 230, 257, 262, 265, 362, 366, 369, 370, 372, 373, 381, 382, 383, 384, 385, 387, 388], "good": [0, 1, 4, 9, 123, 369, 371, 372, 374, 382, 387, 388], "runtim": [0, 2, 3, 23, 37, 103, 107, 123, 129, 192, 383], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 101, 102, 103, 106, 107, 108, 109, 123, 126, 129, 132, 149, 152, 161, 184, 192, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 279, 288, 295, 298, 342, 346, 365, 369, 370, 371, 372, 373, 376, 378, 380, 381, 382, 383, 388], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 87, 88, 91, 98, 99, 100, 103, 106, 107, 108, 112, 113, 116, 123, 124, 125, 126, 127, 128, 129, 130, 178, 180, 190, 192, 219, 223, 251, 252, 253, 262, 285, 293, 300, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388], "read": [0, 2, 3, 7, 23, 27, 30, 33, 42, 44, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 82, 89, 91, 95, 103, 106, 107, 108, 123, 129, 138, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 164, 165, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 183, 186, 187, 189, 190, 192, 202, 236, 250, 251, 252, 253, 256, 261, 263, 266, 267, 269, 271, 272, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 309, 310, 311, 312, 313, 329, 342, 346, 364, 369, 370, 371, 373, 374, 380, 381, 382, 383, 384, 388], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 366, 369, 373, 376, 380, 384, 388], "beyond": [0, 103, 107, 123, 129], "api": [0, 2, 3, 5, 23, 124, 125, 126, 166, 188, 190, 365, 366, 373, 374, 375, 376, 377, 381, 382, 383, 385, 387, 388], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 53, 55, 56, 57, 59, 71, 72, 78, 87, 103, 104, 106, 107, 108, 119, 123, 129, 132, 144, 145, 155, 160, 167, 180, 182, 184, 192, 194, 219, 223, 250, 256, 257, 263, 264, 265, 266, 267, 300, 329, 361, 364, 365, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388], "paper": [0, 64, 67, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 126, 130, 131, 166, 186, 188, 217, 238, 247, 283, 290, 300, 369, 371, 381, 382], "releas": [0, 4, 7, 10, 37, 103, 107, 123, 129, 184, 192, 298, 387], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 348, 356, 366, 369, 387], "so": [0, 2, 3, 4, 6, 7, 10, 11, 37, 41, 43, 46, 47, 103, 107, 117, 118, 123, 129, 180, 190, 192, 268, 269, 369, 371, 372, 375, 378, 381, 382, 383, 388], "make": [0, 2, 3, 4, 7, 11, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 89, 91, 98, 103, 107, 108, 111, 113, 115, 121, 123, 129, 137, 154, 162, 166, 167, 171, 178, 186, 192, 194, 217, 218, 221, 222, 229, 230, 231, 256, 267, 277, 279, 292, 295, 297, 309, 310, 311, 312, 327, 343, 352, 360, 364, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "sure": [0, 3, 4, 7, 66, 89, 107, 111, 171, 256, 360, 364, 369, 371, 372, 375, 381, 382, 383, 385, 387, 388], "alwai": [0, 2, 3, 14, 15, 20, 27, 33, 37, 41, 43, 46, 61, 70, 71, 72, 78, 103, 107, 123, 129, 160, 161, 190, 192, 286, 293, 364, 365, 370, 371, 372, 381, 382, 383, 385], "enjoi": [0, 2, 3, 67, 376], "latest": [0, 2, 3, 10, 120, 124, 125, 343, 371, 381, 382, 383, 387], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 40, 54, 65, 80, 87, 88, 103, 107, 116, 123, 124, 125, 127, 128, 129, 141, 144, 156, 160, 164, 180, 181, 185, 190, 194, 204, 205, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 231, 232, 267, 274, 277, 279, 292, 295, 297, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 360, 364, 369, 370, 371, 372, 374, 375, 376, 378, 383, 385, 388], "recent": [0, 7, 12, 189, 388], "version": [0, 1, 2, 3, 6, 12, 37, 41, 43, 47, 64, 69, 87, 103, 106, 107, 108, 109, 120, 121, 123, 124, 126, 129, 130, 131, 189, 190, 192, 201, 253, 277, 279, 292, 293, 295, 297, 298, 309, 312, 363, 364, 369, 371, 372, 373, 375, 378, 381, 382, 383, 384, 388], "although": [0, 1, 3, 8, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 366, 369, 370, 376, 385], "core": [0, 3, 8, 366, 372, 374, 387], "guarante": [0, 2, 37, 41, 43, 46, 74, 75, 76, 89, 91, 95, 103, 107, 123, 129, 190, 192, 376, 387], "backward": [0, 8, 37, 99, 100, 103, 107, 123, 129, 190, 192, 217, 218, 221, 222, 277, 278, 280, 284, 285, 291, 295, 296, 297, 298, 300, 301, 369, 371, 372, 375, 376, 378, 381, 382, 383], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 37, 63, 82, 85, 87, 88, 89, 93, 103, 107, 109, 122, 123, 129, 144, 178, 186, 190, 192, 217, 218, 219, 221, 222, 223, 264, 277, 278, 280, 281, 283, 284, 285, 291, 293, 295, 296, 297, 298, 300, 301, 304, 369, 372, 385, 387], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 27, 30, 33, 35, 36, 37, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 127, 128, 129, 130, 131, 140, 141, 143, 145, 148, 149, 150, 151, 152, 160, 162, 164, 166, 168, 171, 174, 178, 179, 180, 183, 184, 186, 188, 190, 192, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 233, 237, 245, 248, 255, 256, 257, 258, 259, 261, 262, 266, 270, 271, 277, 278, 279, 280, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 308, 309, 310, 311, 312, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 337, 364, 365, 368, 369, 370, 371, 372, 374, 375, 376, 377, 380, 381, 382, 383, 385, 386, 387, 388], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 30, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 95, 99, 100, 103, 106, 107, 109, 110, 112, 113, 119, 120, 121, 123, 126, 127, 128, 129, 137, 138, 140, 142, 144, 145, 147, 148, 150, 151, 160, 161, 162, 166, 171, 174, 176, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 203, 204, 205, 207, 208, 209, 210, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 236, 240, 241, 244, 245, 246, 248, 250, 254, 255, 257, 258, 259, 262, 265, 266, 269, 270, 273, 274, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 315, 316, 317, 337, 344, 356, 360, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 42, 45, 50, 51, 63, 65, 66, 67, 68, 69, 107, 123, 129, 166, 183, 188, 282, 293, 365, 366, 369, 370, 371, 372, 374, 376, 385, 388], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 198, 201, 202, 203, 213, 214, 219, 223, 225, 226, 238, 239, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 327, 328, 337, 341, 342, 343, 345, 346, 362, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 388], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 27, 33, 160, 168, 251, 252, 253, 266, 284, 291, 300, 362, 369, 381, 383, 387], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 82, 90, 96, 103, 107, 123, 129, 136, 166, 188, 192, 226, 331, 336, 346, 366, 370, 378, 381], "root": [0, 2, 3, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 123, 144, 181, 201, 220, 245, 246, 372, 373, 381, 382, 383, 384, 385, 388], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 42, 52, 61, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 122, 124, 125, 126, 130, 131, 144, 166, 186, 206, 207, 208, 209, 210, 211, 214, 215, 216, 221, 226, 227, 228, 232, 234, 235, 238, 240, 241, 247, 257, 262, 277, 278, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 309, 314, 322, 361, 379, 384, 387], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 61, 64, 65, 67, 99, 100, 101, 102, 106, 109, 112, 113, 117, 118, 120, 121, 124, 125, 126, 130, 131, 141, 186, 374, 378, 381, 382, 387], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 64, 67, 68, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 124, 125, 126, 130, 131, 384, 387], "setup": [0, 7, 99, 100, 111, 112, 113], "py": [0, 3, 24, 106, 108, 136, 238, 247, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388], "develop": [0, 3, 4, 7, 111, 369, 387], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 89, 93, 94, 95, 96, 97, 103, 105, 107, 109, 110, 123, 126, 129, 134, 137, 139, 140, 141, 143, 147, 151, 157, 160, 166, 167, 169, 176, 180, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 201, 203, 204, 205, 214, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 230, 232, 233, 248, 254, 255, 256, 257, 258, 261, 263, 264, 267, 269, 270, 273, 274, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 304, 307, 309, 310, 311, 312, 313, 315, 327, 330, 331, 334, 336, 339, 346, 348, 356, 365, 368, 369, 371, 374, 375, 376, 379, 383, 386, 388], "seri": [0, 2, 7, 8, 40, 73, 83, 93, 94, 97, 98, 129, 161, 183, 329, 364, 365, 369, 370, 371, 377, 378, 381, 382, 385, 388], "quick": [0, 61], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 47, 63, 69, 103, 107, 123, 129, 140, 143, 181, 183, 192, 295, 363, 364, 365, 369, 370, 371, 372, 374, 378, 381, 382, 383, 385, 388], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 80, 82, 85, 86, 87, 88, 93, 95, 101, 102, 103, 104, 106, 107, 108, 109, 111, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 133, 137, 140, 141, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 160, 161, 162, 166, 167, 170, 171, 174, 175, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 201, 202, 204, 205, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 248, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 323, 324, 325, 326, 327, 333, 336, 341, 343, 346, 348, 350, 356, 360, 363, 369, 370, 371, 372, 373, 375, 377, 378, 380, 381, 382, 383, 385, 387, 388], "hurri": [0, 373], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 53, 55, 56, 63, 86, 87, 88, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 137, 140, 143, 156, 162, 167, 179, 181, 182, 204, 205, 217, 219, 221, 223, 224, 227, 228, 234, 242, 245, 248, 254, 255, 258, 261, 267, 309, 311, 312, 370, 371, 372, 373, 374, 381, 382, 383, 384, 385, 387, 388], "item": [0, 2, 8, 14, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 54, 55, 56, 70, 80, 86, 93, 137, 155, 227, 228, 280, 281, 283, 337, 365, 366, 369, 371, 372, 375, 376, 381, 382, 383, 385], "navig": [0, 382], "previou": [0, 3, 4, 10, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 180, 192, 202, 217, 221, 241, 255, 371, 372, 373, 374, 378, 383, 388], "whenev": [0, 1, 2, 3, 23, 37, 42, 45, 50, 51, 61, 67, 79, 80, 87, 88, 101, 102, 106, 108, 109, 117, 118, 126, 130, 131, 136, 159, 184, 189, 293, 309, 310, 311, 312, 327, 348, 364, 377, 385], "want": [0, 2, 3, 6, 7, 8, 88, 162, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 364, 369, 370, 371, 372, 373, 375, 376, 377, 381, 382, 383, 384, 385, 387, 388], "ted": [0, 30, 38, 48, 49, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 362, 368, 379, 386], "s": [0, 1, 2, 3, 6, 7, 8, 11, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 88, 93, 99, 100, 103, 107, 111, 112, 113, 117, 118, 120, 123, 124, 125, 129, 130, 131, 144, 148, 166, 178, 180, 182, 183, 184, 186, 188, 190, 192, 194, 204, 205, 219, 223, 228, 229, 230, 232, 238, 247, 251, 253, 254, 257, 258, 261, 263, 266, 267, 270, 278, 284, 291, 293, 298, 300, 309, 310, 311, 312, 313, 327, 364, 368, 369, 370, 371, 372, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 93, 99, 100, 103, 107, 116, 119, 122, 123, 129, 136, 143, 148, 151, 153, 160, 166, 167, 179, 180, 183, 184, 186, 188, 190, 191, 192, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 305, 307, 309, 310, 311, 312, 313, 327, 346, 353, 356, 362, 365, 366, 368, 370, 371, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388], "optim": [0, 1, 2, 8, 37, 47, 99, 100, 103, 107, 123, 129, 184, 192, 203, 226, 231, 232, 245, 278, 293, 294, 295, 298, 341, 346, 356, 365, 366, 368, 371, 372, 373, 374, 376, 379, 381, 382, 383, 386], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 126, 129, 141, 144, 162, 166, 188, 194, 261, 262, 278, 280, 283, 285, 296, 298, 300, 301, 329, 337, 343, 346, 348, 349, 350, 356, 366, 368, 369, 372, 373, 374, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388], "storag": [0, 1, 8, 30, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 88, 90, 91, 92, 93, 95, 96, 103, 105, 107, 123, 129, 143, 144, 149, 152, 171, 192, 362, 366, 368, 370, 371, 372, 373, 375, 378, 379, 381, 382, 384, 386], "log": [0, 3, 4, 8, 11, 47, 212, 213, 214, 227, 228, 236, 245, 246, 256, 257, 263, 267, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 336, 339, 340, 342, 346, 356, 364, 365, 366, 368, 369, 370, 371, 373, 374, 378, 379, 381, 382, 383, 386, 387], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 37, 103, 107, 111, 116, 123, 124, 125, 129, 190, 192, 360, 363, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 382, 385, 386, 387], "own": [0, 1, 3, 14, 15, 17, 22, 37, 103, 107, 123, 124, 125, 129, 192, 329, 368, 370, 371, 373, 379, 381, 382, 383, 386], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 37, 41, 43, 46, 47, 54, 61, 64, 70, 103, 107, 117, 118, 123, 124, 125, 129, 149, 157, 166, 179, 184, 186, 188, 192, 194, 207, 209, 219, 223, 254, 258, 259, 262, 277, 278, 279, 280, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 309, 346, 348, 356, 362, 366, 368, 370, 373, 376, 377, 379, 384, 385, 386, 388], "loop": [0, 8, 41, 43, 46, 103, 107, 123, 129, 201, 254, 258, 259, 262, 295, 346, 366, 368, 369, 370, 373, 375, 376, 377, 379, 380, 385, 386], "ppo": [0, 4, 8, 263, 267, 279, 292, 295, 362, 364, 368, 369, 370, 374, 375, 379, 381, 386], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 93, 101, 102, 103, 104, 106, 107, 108, 120, 123, 129, 144, 147, 148, 154, 159, 160, 162, 169, 171, 176, 178, 180, 181, 183, 184, 190, 192, 219, 223, 356, 364, 368, 370, 371, 373, 374, 375, 379, 386, 387, 388], "introduct": [0, 365, 368, 373, 379, 381, 382, 386, 388], "multi": [0, 1, 7, 9, 33, 34, 37, 42, 45, 50, 51, 71, 72, 78, 103, 107, 117, 118, 123, 127, 128, 129, 184, 192, 217, 219, 221, 223, 224, 229, 230, 261, 307, 309, 310, 311, 312, 362, 368, 369, 370, 371, 372, 373, 374, 379, 383, 386, 387], "agent": [0, 9, 33, 34, 116, 117, 118, 124, 125, 127, 128, 130, 131, 132, 178, 179, 227, 228, 229, 230, 232, 238, 247, 307, 362, 368, 373, 379, 383, 386], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 37, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 219, 223, 225, 226, 261, 266, 293, 327, 328, 329, 350, 351, 352, 356, 358, 359, 360, 362, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 138, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 159, 160, 162, 166, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 236, 237, 238, 239, 245, 246, 247, 248, 250, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 322, 327, 329, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 356, 360, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 388], "pretrain": [0, 368, 379, 386], "recurr": [0, 2, 143, 217, 218, 219, 221, 223, 241, 368, 370, 374, 379, 385, 386], "dqn": [0, 2, 61, 137, 153, 214, 256, 257, 277, 278, 280, 281, 283, 285, 286, 287, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 307, 353, 362, 364, 368, 374, 375, 378, 379, 386], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 30, 37, 48, 99, 100, 103, 107, 119, 123, 129, 151, 160, 179, 193, 199, 200, 214, 219, 223, 229, 230, 232, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 277, 278, 279, 280, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 342, 348, 351, 352, 356, 358, 359, 364, 365, 366, 368, 370, 373, 375, 376, 379, 384, 385, 386, 387, 388], "replai": [0, 8, 16, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 93, 94, 98, 143, 144, 151, 167, 171, 180, 192, 280, 281, 283, 284, 285, 291, 296, 298, 300, 301, 343, 346, 354, 356, 362, 366, 368, 379, 383, 384, 386], "buffer": [0, 3, 4, 8, 14, 15, 16, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 103, 107, 119, 123, 129, 143, 144, 148, 151, 166, 167, 171, 180, 183, 184, 186, 188, 192, 266, 269, 280, 281, 283, 284, 285, 291, 296, 298, 300, 301, 343, 346, 354, 356, 362, 366, 368, 377, 379, 383, 384, 386, 388], "competit": [0, 3, 117, 118, 368, 379, 382, 386], "ddpg": [0, 207, 208, 209, 210, 280, 290, 299, 362, 364, 368, 370, 375, 379, 382, 386], "task": [0, 2, 3, 9, 33, 34, 47, 54, 64, 67, 101, 102, 103, 107, 110, 117, 118, 123, 124, 125, 126, 129, 130, 131, 166, 178, 184, 186, 188, 284, 291, 368, 369, 370, 371, 372, 373, 374, 379, 381, 382, 383, 386, 387, 388], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 107, 123, 129, 130, 180, 211, 219, 223, 255, 329, 346, 362, 365, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 385, 386], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 53, 54, 74, 75, 76, 82, 85, 89, 91, 95, 98, 103, 107, 112, 123, 129, 137, 149, 152, 153, 162, 166, 183, 184, 186, 190, 192, 193, 226, 238, 247, 250, 251, 263, 266, 267, 268, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 350, 351, 352, 355, 356, 360, 362, 364, 366, 368, 370, 371, 372, 376, 378, 379, 381, 382, 383, 385, 386, 388], "loss": [0, 3, 8, 43, 153, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 341, 346, 353, 356, 365, 366, 368, 373, 375, 376, 377, 379, 383, 385, 386, 387], "trainer": [0, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 368, 369, 379, 386], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 162, 164, 166, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 193, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 233, 236, 237, 238, 239, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 302, 303, 307, 309, 310, 311, 312, 315, 327, 329, 337, 338, 339, 340, 341, 343, 344, 345, 348, 356, 364, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388], "packag": [0, 6, 7, 10, 136, 362, 363, 388], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 29, 37, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 122, 123, 129, 130, 131, 141, 144, 148, 156, 162, 164, 167, 171, 180, 183, 184, 185, 189, 190, 192, 202, 212, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 236, 238, 244, 248, 261, 262, 266, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 337, 340, 343, 344, 345, 346, 348, 358, 359, 360, 362, 366, 370, 371, 372, 373, 376, 378, 380, 381, 382, 384, 387, 388], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141, 143, 145, 148, 149, 152, 153, 154, 156, 164, 166, 168, 169, 171, 175, 177, 178, 180, 182, 183, 184, 185, 188, 190, 192, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 236, 237, 238, 239, 240, 241, 244, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 271, 274, 277, 278, 280, 281, 283, 284, 285, 291, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 329, 337, 343, 362, 364, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 387, 388], "interoper": [0, 14, 15, 362], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 37, 41, 42, 43, 45, 46, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 106, 107, 117, 118, 123, 129, 130, 131, 137, 144, 145, 166, 171, 184, 188, 192, 204, 205, 217, 218, 219, 221, 222, 223, 224, 230, 265, 269, 279, 281, 283, 285, 286, 292, 295, 296, 300, 301, 309, 310, 311, 312, 318, 319, 320, 321, 323, 324, 325, 326, 327, 360, 362, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385], "node": [0, 2, 18, 19, 20, 21, 22, 27, 33, 41, 43, 46, 69, 362, 376], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 124, 125, 160, 162, 203, 212, 213, 214, 215, 220, 226, 227, 228, 233, 236, 237, 240, 241, 244, 245, 246, 254, 255, 256, 257, 263, 267, 268, 277, 278, 279, 284, 285, 286, 291, 292, 295, 296, 297, 298, 300, 301, 362, 366, 370, 371, 374, 376, 381, 382, 383, 387, 388], "helper": [0, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 369, 370, 372, 381, 383], "compos": [0, 3, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 83, 84, 93, 94, 103, 107, 123, 129, 144, 170, 183, 184, 190, 192, 260, 261, 288, 298, 329, 362, 369, 370, 371, 372, 376, 380, 382, 383, 385, 387, 388], "episod": [0, 3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 103, 107, 123, 129, 140, 171, 174, 179, 201, 203, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 362, 370, 373, 378, 381, 382, 385], "format": [0, 3, 30, 36, 37, 38, 40, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 85, 93, 103, 107, 123, 124, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 329, 362, 369, 370, 373, 375, 377, 388], "tensorspec": [0, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 55, 56, 57, 58, 59, 103, 107, 119, 123, 129, 130, 131, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 202, 241, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 270, 278, 281, 284, 285, 296, 298, 300, 301, 307, 362, 383], "human": [0, 24, 65, 362, 383], "feedback": [0, 362, 378, 387], "rlhf": [0, 47, 54, 70, 160, 362, 364], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 104, 107, 123, 129, 138, 141, 149, 152, 161, 168, 169, 183, 184, 190, 192, 194, 203, 225, 226, 342, 350, 351, 352, 356, 358, 359, 360, 362, 373, 388], "gymlikeenv": [0, 106, 108, 362], "envmetadata": [0, 362], "vector": [0, 1, 8, 25, 29, 40, 99, 100, 108, 112, 113, 116, 124, 125, 126, 130, 131, 151, 189, 207, 209, 217, 218, 221, 222, 224, 309, 312, 322, 323, 324, 325, 326, 362, 369, 370, 372, 380, 381, 382, 383, 384, 388], "auto": [0, 75, 95, 139, 140, 189, 262, 278, 285, 294, 296, 298, 300, 301, 362, 365, 381, 382], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 129, 139, 140, 141, 144, 153, 156, 159, 161, 166, 174, 178, 179, 180, 181, 183, 184, 186, 189, 190, 192, 194, 202, 217, 219, 223, 249, 261, 262, 328, 362, 369, 370, 371, 372, 373, 376, 380, 381, 382, 387], "dynam": [0, 7, 14, 15, 16, 64, 67, 69, 103, 123, 129, 192, 284, 291, 362, 371, 373, 383], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 57, 58, 59, 63, 99, 100, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 126, 129, 130, 131, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 164, 166, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 198, 201, 202, 214, 239, 241, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 362, 364, 369, 370, 371, 372, 373, 374, 378, 380, 381, 382, 387], "mask": [0, 1, 4, 23, 29, 35, 36, 40, 124, 125, 138, 167, 192, 214, 227, 228, 239, 255, 256, 257, 258, 259, 264, 265, 343, 362, 370, 372, 388], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 29, 30, 40, 47, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 141, 147, 149, 151, 152, 153, 154, 157, 160, 161, 164, 168, 169, 171, 175, 178, 184, 189, 193, 198, 201, 203, 206, 207, 208, 209, 210, 211, 213, 214, 215, 219, 223, 224, 225, 226, 227, 228, 229, 237, 238, 239, 241, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 270, 271, 277, 278, 280, 281, 283, 284, 285, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 356, 360, 362, 364, 365, 366, 369, 370, 371, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 387, 388], "record": [0, 2, 11, 37, 103, 107, 123, 129, 134, 137, 160, 192, 295, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 356, 362, 370, 371, 374, 378, 381], "domain": [0, 2, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 129, 151, 180, 198, 250, 256, 257, 263, 264, 265, 266, 267, 268, 269, 274, 362, 371, 372, 374, 375, 381, 382, 383, 387, 388], "actor": [0, 3, 4, 21, 160, 193, 203, 206, 207, 209, 214, 215, 226, 237, 239, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 307, 362, 365, 370, 372, 373, 375, 378, 381, 384, 387], "explor": [0, 1, 191, 232, 250, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 277, 293, 342, 351, 352, 356, 362, 371, 372, 373, 375, 376, 378, 381, 382, 383], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 103, 107, 116, 123, 129, 136, 137, 140, 142, 144, 145, 147, 149, 151, 152, 153, 161, 162, 166, 167, 170, 171, 172, 174, 176, 180, 181, 183, 184, 188, 190, 192, 198, 202, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 337, 339, 340, 341, 342, 343, 346, 356, 362, 366, 370, 375, 376, 377, 380, 381, 382, 383, 385, 387, 388], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 84, 86, 103, 104, 107, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 141, 148, 149, 150, 154, 160, 162, 168, 169, 174, 175, 178, 180, 183, 189, 192, 202, 212, 219, 223, 227, 228, 236, 250, 263, 267, 271, 272, 296, 303, 309, 314, 322, 332, 346, 362, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388], "hook": [0, 2, 30, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 96, 103, 107, 123, 129, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 239, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 362], "planner": [0, 203, 226, 362], "sac": [0, 285, 296, 298, 362], "redq": [0, 296, 362], "crossq": [0, 362], "iql": [0, 284, 291, 362, 369, 381, 382], "cql": [0, 278, 283, 362], "dt": [0, 262, 362, 383], "td3": [0, 300, 301, 362], "bc": [0, 5, 300, 362, 387], "a2c": [0, 277, 362], "dreamer": [0, 134, 135, 215, 287, 288, 289, 362, 364], "checkpoint": [0, 45, 72, 77, 89, 90, 92, 96, 362, 384, 385], "builder": [0, 362, 370, 388], "logger": [0, 3, 11, 327, 329, 331, 332, 333, 334, 335, 336, 340, 346, 356, 360, 362, 370, 381], "_util": [0, 3, 12, 362, 378], "implement_for": [0, 3, 362], "thing": [0, 3, 7, 8, 103, 107, 123, 129, 363, 371, 372, 373, 374, 375, 376, 377, 381, 382, 385, 388], "consid": [0, 1, 2, 3, 8, 20, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 74, 75, 95, 103, 107, 123, 129, 151, 190, 192, 212, 229, 244, 309, 311, 312, 363, 369, 373, 374, 375, 383, 385], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 91, 95, 103, 104, 106, 107, 108, 116, 117, 118, 120, 122, 123, 124, 125, 129, 130, 131, 138, 140, 143, 144, 148, 149, 151, 152, 160, 161, 162, 166, 167, 174, 180, 183, 184, 186, 188, 189, 190, 192, 199, 200, 201, 203, 214, 217, 218, 221, 222, 224, 225, 226, 227, 228, 231, 239, 245, 261, 263, 266, 267, 269, 273, 279, 281, 286, 292, 293, 295, 298, 302, 307, 308, 309, 310, 311, 312, 327, 328, 329, 331, 343, 360, 363, 364, 366, 369, 370, 371, 372, 374, 376, 377, 381, 382, 383, 384, 385, 388], "debug": [0, 6, 8, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 363, 388], "work": [0, 1, 2, 3, 4, 8, 11, 12, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 85, 87, 88, 91, 98, 103, 106, 107, 108, 111, 123, 126, 129, 145, 160, 166, 186, 189, 190, 192, 201, 204, 205, 224, 257, 265, 270, 279, 292, 295, 346, 363, 364, 369, 370, 371, 372, 373, 376, 380, 381, 382, 383, 384, 385, 387, 388], "habitat": [0, 3, 109, 363, 384], "lab": [0, 3, 101, 102, 109, 363], "mujoco": [0, 6, 8, 126, 363, 369, 371, 372], "error": [0, 1, 3, 7, 10, 12, 34, 37, 41, 43, 46, 103, 107, 123, 129, 132, 167, 192, 194, 363, 369, 371, 381, 382, 388], "solut": [0, 2, 3, 6, 7, 9, 21, 363, 364, 366, 387], "resourc": [0, 1, 21, 109, 363, 369, 371, 381, 382], "issu": [0, 3, 4, 5, 8, 61, 65, 72, 74, 75, 95, 106, 111, 144, 167, 181, 201, 250, 256, 257, 263, 264, 265, 266, 267, 363, 387], "customis": [0, 363, 370, 377, 381, 382], "video": [0, 4, 9, 329, 331, 342, 360, 362, 363, 378, 381, 382], "render": [0, 3, 8, 113, 130, 327, 329, 342, 363, 369, 370, 371, 373, 377], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 82, 83, 85, 91, 93, 94, 95, 97, 98, 103, 107, 117, 118, 123, 129, 130, 131, 139, 144, 148, 151, 184, 201, 227, 228, 362, 373, 380, 381, 382, 385, 387], "search": [0, 122, 202, 370], "page": [0, 7, 24, 336, 375], "somewhat": [1, 2, 365, 374, 388], "equival": [1, 3, 25, 27, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 141, 150, 153, 184, 192, 214, 221, 224, 239, 256, 257, 264, 265, 295, 343, 376, 387, 388], "dataload": [1, 70, 86, 88, 370, 376, 385], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 129, 144, 155, 171, 179, 180, 181, 184, 192, 217, 219, 221, 223, 236, 254, 258, 259, 262, 298, 329, 364, 370, 373, 381, 385, 387, 388], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 164, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 193, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 279, 280, 281, 283, 284, 285, 288, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 317, 318, 319, 323, 324, 326, 327, 329, 337, 342, 343, 344, 356, 360, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388], "thei": [1, 2, 3, 4, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 103, 106, 107, 108, 116, 117, 118, 123, 124, 125, 129, 130, 131, 140, 143, 155, 160, 166, 175, 183, 184, 188, 192, 223, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 343, 346, 364, 365, 366, 369, 370, 371, 372, 375, 380, 381, 382, 383, 384, 385, 387, 388], "over": [1, 2, 3, 4, 8, 14, 15, 37, 45, 51, 52, 54, 60, 61, 67, 80, 86, 87, 103, 107, 117, 118, 123, 129, 137, 151, 162, 174, 181, 192, 201, 245, 248, 269, 286, 288, 293, 315, 327, 349, 366, 369, 370, 371, 373, 374, 375, 376, 381, 382, 383, 388], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 39, 41, 42, 43, 46, 50, 51, 67, 76, 103, 107, 123, 124, 125, 129, 141, 142, 148, 156, 166, 180, 183, 184, 185, 186, 188, 192, 201, 217, 219, 221, 223, 229, 266, 267, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 364, 369, 372, 381, 382, 383, 385, 388], "static": [1, 12, 47, 54, 80, 87, 88, 109, 190, 291, 373, 383, 385], "like": [1, 2, 3, 4, 7, 11, 21, 27, 33, 37, 42, 45, 50, 51, 54, 76, 82, 88, 103, 107, 109, 116, 123, 124, 125, 129, 153, 180, 182, 192, 194, 217, 221, 230, 260, 277, 279, 292, 295, 296, 297, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 388], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 70, 93, 96, 103, 106, 107, 108, 109, 123, 126, 129, 143, 149, 151, 152, 161, 169, 180, 184, 192, 199, 200, 219, 223, 258, 262, 279, 292, 295, 298, 329, 343, 348, 358, 359, 360, 364, 369, 370, 371, 372, 376, 381, 382, 383, 385], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 45, 46, 64, 65, 68, 69, 70, 103, 107, 119, 123, 129, 139, 144, 148, 156, 166, 174, 180, 183, 184, 185, 186, 188, 192, 224, 248, 266, 267, 268, 298, 329, 366, 371, 373, 377, 385, 388], "two": [1, 2, 3, 4, 8, 10, 37, 41, 42, 43, 45, 46, 47, 50, 51, 67, 82, 86, 88, 103, 107, 123, 129, 141, 162, 166, 188, 192, 210, 217, 219, 221, 223, 242, 245, 267, 292, 300, 304, 342, 346, 365, 369, 370, 371, 372, 373, 374, 376, 377, 380, 381, 382, 383, 385, 387, 388], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 69, 104, 267, 346, 364, 365, 369, 370, 380, 388], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 86, 87, 88, 91, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 126, 129, 130, 131, 140, 141, 145, 147, 148, 166, 174, 175, 178, 180, 182, 183, 184, 186, 188, 192, 201, 204, 205, 217, 219, 221, 223, 224, 227, 228, 229, 230, 231, 248, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 303, 307, 309, 310, 311, 312, 313, 317, 327, 328, 329, 336, 339, 349, 356, 357, 360, 369, 370, 371, 372, 373, 374, 376, 381, 382, 383, 385, 388], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 85, 86, 87, 88, 89, 91, 101, 102, 103, 106, 107, 108, 109, 117, 118, 119, 122, 123, 124, 125, 126, 129, 130, 131, 132, 142, 143, 147, 149, 152, 160, 162, 164, 166, 174, 176, 182, 184, 186, 188, 190, 192, 201, 204, 205, 207, 213, 216, 219, 223, 224, 227, 228, 234, 239, 257, 261, 264, 265, 267, 269, 270, 271, 293, 298, 306, 309, 312, 327, 328, 342, 343, 358, 359, 364, 369, 371, 373, 374, 375, 376, 380, 381, 383, 384, 385, 387, 388], "constructor": [1, 2, 16, 18, 19, 20, 21, 45, 54, 67, 79, 93, 103, 107, 120, 123, 129, 130, 140, 183, 204, 205, 224, 263, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 357, 360, 364, 369, 370, 371, 373, 376, 381, 382, 385], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 82, 86, 99, 100, 103, 107, 112, 113, 123, 129, 154, 162, 175, 192, 204, 205, 224, 229, 230, 243, 250, 256, 263, 264, 266, 268, 269, 271, 293, 306, 342, 345, 346, 365, 366, 369, 371, 372, 376, 378, 381, 382, 383], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 104, 107, 108, 109, 111, 112, 113, 119, 120, 123, 126, 129, 138, 184, 192, 217, 219, 221, 223, 258, 261, 268, 269, 300, 350, 360, 364, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 385, 386, 388], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 47, 61, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 129, 138, 143, 156, 159, 162, 178, 179, 180, 181, 184, 189, 192, 201, 202, 203, 215, 217, 219, 221, 223, 225, 226, 254, 258, 259, 261, 262, 263, 267, 277, 287, 295, 308, 309, 310, 311, 312, 315, 316, 317, 328, 331, 337, 342, 346, 366, 370, 372, 374, 375, 377, 378, 380, 383, 384, 387], "queri": [1, 3, 14, 37, 41, 43, 46, 103, 107, 123, 129, 166, 183, 186, 190, 192, 269, 369, 375, 383, 387], "defin": [1, 2, 12, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 103, 107, 123, 129, 167, 179, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 274, 281, 283, 293, 309, 310, 311, 312, 313, 328, 357, 369, 370, 372, 375, 378, 383, 385, 388], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 29, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 87, 88, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 120, 121, 122, 123, 124, 125, 129, 130, 131, 137, 143, 144, 151, 157, 161, 162, 173, 178, 181, 184, 190, 192, 203, 204, 205, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 233, 234, 235, 238, 240, 241, 244, 245, 246, 247, 250, 254, 255, 258, 259, 261, 262, 263, 266, 267, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 294, 295, 296, 297, 298, 300, 301, 337, 339, 342, 346, 348, 349, 350, 358, 359, 360, 364, 369, 370, 371, 372, 373, 374, 376, 378, 381, 382, 383, 384, 385, 388], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 37, 54, 66, 86, 93, 103, 107, 123, 129, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 194, 217, 219, 223, 224, 231, 232, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 310, 311, 312, 343, 369, 371, 372, 376, 377, 381, 382, 383, 385, 388], "deliv": [1, 2, 3, 16, 67, 369, 370, 373, 376, 387], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 33, 34, 41, 42, 43, 45, 46, 50, 51, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 103, 106, 107, 108, 116, 123, 124, 125, 129, 190, 217, 219, 221, 222, 223, 261, 268, 269, 328, 337, 364, 370, 373, 380, 381, 383, 387], "user": [1, 2, 3, 5, 8, 23, 37, 61, 63, 67, 69, 80, 88, 103, 107, 123, 129, 145, 179, 184, 192, 194, 211, 295, 298, 300, 329, 357, 365, 366, 369, 370, 373, 375, 376, 383, 387, 388], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 47, 86, 103, 107, 117, 118, 123, 129, 130, 131, 178, 254, 258, 259, 262, 369, 371, 378, 381, 382, 387, 388], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 82, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 149, 150, 152, 153, 154, 161, 162, 164, 168, 169, 171, 173, 175, 178, 180, 181, 183, 184, 190, 192, 201, 202, 203, 217, 219, 223, 226, 261, 277, 278, 279, 280, 281, 283, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 365, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "state": [1, 2, 3, 4, 14, 15, 16, 17, 30, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 123, 124, 125, 126, 127, 128, 129, 140, 143, 144, 145, 147, 153, 162, 169, 178, 179, 183, 184, 190, 192, 194, 201, 202, 203, 206, 211, 215, 217, 218, 219, 221, 222, 223, 224, 226, 234, 237, 238, 240, 241, 247, 251, 261, 266, 272, 277, 279, 283, 292, 293, 295, 296, 297, 298, 307, 308, 309, 310, 311, 312, 313, 360, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 388], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 30, 37, 41, 43, 46, 47, 61, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 126, 129, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 201, 217, 219, 223, 231, 254, 256, 258, 264, 288, 298, 300, 370, 371, 372, 373, 374, 376, 378, 381, 382, 383, 384, 385, 388], "predefin": [1, 370, 372, 376, 385], "becaus": [1, 3, 4, 7, 41, 43, 46, 47, 61, 103, 107, 123, 129, 153, 160, 178, 183, 189, 192, 210, 230, 250, 256, 257, 261, 263, 264, 265, 266, 267, 369, 370, 372, 374, 375, 376, 380, 381, 382, 383, 385, 388], "potenti": [1, 2, 383, 385], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 37, 47, 99, 100, 103, 107, 112, 113, 123, 129, 162, 176, 184, 187, 192, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 240, 241, 243, 245, 246, 248, 251, 254, 255, 257, 258, 261, 262, 263, 265, 267, 270, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 350, 365, 369, 371, 372, 373, 374, 380, 381, 382, 384, 385], "heavi": [1, 8, 61, 385], "crucial": [1, 2, 3, 254, 258, 259, 262, 284, 291, 293, 369, 370, 371, 372, 373, 375, 377, 381, 382, 383, 388], "configur": [1, 8, 21, 22, 47, 160, 206, 211, 237, 293, 295, 364, 369, 370, 371, 375, 381, 382, 383], "hyperparamet": [1, 85, 192, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 369, 377, 383, 385], "appropri": [1, 3, 4, 7, 11, 73, 83, 93, 94, 97, 98, 123, 129, 153, 357, 360, 369, 377, 385], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 85, 86, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 364, 365, 369, 372, 374, 378, 381, 382, 383, 384, 387], "take": [1, 2, 3, 8, 23, 47, 64, 90, 96, 99, 100, 103, 107, 112, 113, 123, 129, 147, 178, 181, 183, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 270, 273, 276, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 337, 348, 364, 366, 369, 370, 371, 373, 374, 375, 381, 382, 383, 385, 388], "consider": [1, 2, 3, 8, 106, 108, 370, 381, 382, 385], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 113, 117, 118, 119, 123, 124, 125, 129, 130, 131, 140, 149, 152, 179, 184, 190, 192, 202, 204, 205, 219, 223, 224, 271, 277, 278, 279, 280, 281, 283, 285, 286, 292, 293, 295, 296, 297, 298, 300, 301, 307, 309, 312, 369, 370, 371, 373, 381, 382, 383, 388], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 80, 82, 87, 88, 89, 93, 96, 101, 102, 103, 106, 107, 108, 109, 113, 116, 119, 123, 124, 125, 129, 130, 131, 137, 140, 141, 144, 147, 148, 149, 150, 153, 154, 156, 160, 162, 167, 168, 169, 171, 174, 175, 178, 179, 181, 183, 184, 189, 190, 192, 194, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 230, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 263, 265, 266, 267, 270, 273, 277, 279, 285, 290, 292, 293, 295, 296, 297, 299, 300, 308, 309, 310, 311, 312, 313, 329, 331, 341, 342, 343, 346, 356, 358, 359, 360, 364, 366, 369, 370, 371, 372, 374, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "occur": [1, 8, 15, 33, 34, 61, 103, 107, 109, 123, 129, 145, 154, 162, 167, 189, 202, 250, 256, 257, 263, 264, 265, 266, 267, 288, 385, 388], "serial": [1, 2, 3, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 190, 192], "parallel": [1, 3, 8, 103, 106, 107, 108, 123, 124, 125, 129, 184, 189, 194, 277, 357, 358, 359, 360, 370, 371, 381, 382], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 30, 37, 48, 141, 144, 171, 356, 359, 362, 369, 370, 371, 372, 376, 378, 381, 382, 385], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 116, 119, 122, 123, 124, 125, 126, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 358, 359, 360, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 385, 388], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 43, 46, 54, 64, 69, 70, 104, 120, 123, 129, 190, 358, 359, 360, 369, 370, 371, 387, 388], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 359, 362, 371, 376, 387], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 32, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 87, 88, 116, 124, 125, 217, 221, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 364, 366, 371, 374, 385, 387], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 80, 87, 88, 99, 100, 101, 102, 106, 108, 109, 111, 112, 113, 120, 121, 123, 126, 190, 192, 229, 262, 348, 362, 364, 369, 373, 377, 381, 382, 383], "aggreg": [1, 3, 61, 80, 93, 124, 125, 202, 204, 205, 207, 208, 269], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 104, 107, 123, 129, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 201, 202, 217, 219, 221, 223, 224, 229, 239, 245, 255, 257, 258, 265, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 348, 364, 370, 372, 373, 374, 377, 378, 383, 384, 387, 388], "final": [1, 2, 3, 4, 21, 41, 43, 46, 47, 180, 189, 217, 219, 221, 223, 229, 254, 258, 259, 260, 262, 268, 309, 342, 364, 369, 370, 371, 377, 378, 381, 382, 383, 388], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 358, 362, 369, 370, 371, 376, 387], "sever": [1, 2, 3, 8, 35, 37, 54, 64, 103, 107, 123, 129, 145, 147, 184, 192, 295, 369, 371, 377, 378, 385, 388], "gather": [1, 3, 18, 20, 21, 41, 43, 46, 54, 70, 74, 75, 80, 87, 95, 167, 228, 236, 308, 350, 363, 370, 371, 372, 376, 381, 382, 383, 385, 388], "continu": [1, 2, 9, 26, 55, 88, 103, 107, 123, 124, 125, 129, 130, 131, 137, 198, 207, 208, 209, 210, 262, 269, 274, 277, 278, 285, 291, 295, 296, 297, 298, 299, 300, 301, 309, 314, 322, 364, 369, 371, 372, 374, 381, 382, 383, 385, 387, 388], "concomitantli": [1, 103, 107, 123, 129], "network": [1, 4, 8, 37, 103, 107, 116, 123, 124, 125, 129, 192, 204, 205, 207, 208, 209, 210, 213, 215, 216, 221, 224, 229, 230, 232, 234, 235, 238, 240, 241, 242, 247, 251, 252, 253, 255, 266, 270, 278, 279, 280, 281, 283, 284, 285, 286, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 305, 307, 309, 310, 311, 312, 313, 355, 356, 364, 365, 366, 375, 378, 380, 383, 388], "impli": [1, 388], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 47, 80, 82, 85, 99, 100, 103, 107, 123, 127, 128, 129, 148, 166, 180, 183, 184, 186, 188, 192, 217, 218, 219, 221, 222, 223, 229, 232, 266, 277, 278, 279, 285, 288, 298, 300, 348, 355, 364, 366, 369, 370, 371, 372, 380, 383, 385, 387], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 34, 37, 41, 43, 46, 63, 69, 72, 80, 103, 106, 107, 108, 109, 123, 126, 129, 160, 162, 175, 184, 185, 190, 192, 194, 224, 229, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 384, 385, 387, 388], "slightli": [1, 23, 61, 364, 365, 372, 381, 383, 384, 385, 388], "lag": [1, 369, 370, 371], "therefor": [1, 2, 3, 7, 41, 42, 43, 45, 46, 50, 51, 68, 69, 103, 107, 123, 129, 171, 295, 307, 375, 381, 388], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 80, 82, 87, 88, 93, 95, 96, 103, 107, 116, 119, 122, 123, 124, 125, 129, 137, 138, 141, 144, 153, 160, 166, 171, 174, 178, 179, 181, 183, 185, 188, 189, 201, 202, 217, 218, 221, 222, 227, 228, 229, 254, 258, 259, 262, 263, 266, 267, 276, 277, 278, 279, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 365, 366, 369, 370, 371, 373, 380, 381, 382, 383, 385, 388], "asynchron": [1, 9, 15, 21, 37, 41, 43, 46, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 277, 358, 369, 370, 371], "off": [1, 2, 4, 220, 246, 256, 298, 327, 342, 351, 364, 366, 369, 370, 371, 374, 375, 381, 382, 384, 388], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 95, 103, 106, 107, 108, 123, 124, 125, 129, 130, 149, 152, 156, 162, 179, 184, 189, 192, 194, 214, 217, 219, 221, 223, 230, 231, 251, 253, 255, 257, 264, 277, 284, 286, 291, 295, 342, 364, 366, 369, 370, 371, 372, 373, 374, 376, 377, 381, 382, 383, 384, 385, 388], "remot": [1, 2, 18, 19, 20, 21, 123, 129, 388], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 47, 93, 99, 100, 103, 107, 109, 110, 112, 113, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 147, 149, 152, 153, 154, 160, 164, 168, 169, 174, 175, 176, 178, 179, 181, 190, 192, 194, 203, 219, 223, 226, 261, 262, 277, 327, 329, 350, 364, 369, 371, 372, 374, 375, 376, 377, 378, 384, 385, 387], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 117, 118, 123, 129, 130, 131, 175, 296, 309, 310, 311, 312, 313, 365, 369, 371, 374, 375, 376], "synchronis": [1, 104, 381, 382], "either": [1, 2, 5, 22, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 103, 107, 123, 129, 178, 179, 192, 272, 293, 300, 301, 333, 366, 369, 370, 372, 381, 384, 385, 387, 388], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 369, 382, 387], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 143, 144, 145, 148, 151, 154, 156, 159, 160, 161, 162, 166, 167, 169, 170, 173, 174, 175, 178, 180, 182, 183, 184, 185, 186, 188, 190, 192, 194, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 245, 246, 250, 251, 252, 253, 254, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 277, 278, 279, 280, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 304, 309, 310, 311, 312, 315, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 336, 339, 340, 342, 343, 346, 360, 364, 365, 366, 369, 370, 371, 372, 373, 374, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "second": [1, 3, 8, 23, 61, 64, 93, 141, 217, 219, 221, 223, 257, 279, 292, 295, 298, 331, 345, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141, 148, 149, 150, 152, 153, 154, 160, 164, 165, 166, 168, 169, 171, 175, 178, 180, 182, 183, 184, 186, 188, 190, 192, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 231, 232, 237, 238, 239, 247, 250, 251, 252, 253, 255, 256, 257, 261, 262, 263, 264, 265, 266, 269, 271, 274, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 327, 343, 348, 354, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 53, 54, 55, 56, 80, 87, 103, 107, 123, 129, 141, 156, 160, 183, 192, 213, 214, 218, 222, 233, 251, 252, 253, 256, 257, 260, 266, 272, 277, 279, 280, 281, 286, 292, 295, 297, 307, 308, 309, 310, 311, 312, 346, 362, 366, 369, 370, 371, 372, 373, 374, 380, 381, 382, 383, 388], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 78, 80, 82, 87, 88, 95, 102, 103, 104, 106, 107, 108, 119, 123, 129, 144, 162, 180, 183, 184, 190, 192, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 281, 284, 285, 293, 307, 309, 310, 311, 312, 327, 329, 333, 342, 350, 351, 352, 356, 358, 359, 364, 365, 366, 369, 371, 372, 373, 374, 383, 385, 388], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 27, 30, 33, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141, 148, 149, 150, 152, 153, 154, 164, 166, 168, 169, 171, 175, 178, 180, 183, 184, 186, 188, 192, 198, 201, 203, 213, 217, 218, 219, 221, 222, 223, 226, 231, 232, 238, 239, 247, 250, 251, 252, 253, 255, 256, 257, 261, 263, 264, 265, 266, 269, 271, 274, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 327, 343, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 61, 63, 67, 80, 87, 88, 91, 93, 103, 107, 111, 123, 126, 129, 169, 210, 219, 221, 223, 224, 233, 248, 250, 254, 256, 266, 271, 293, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 363, 365, 369, 370, 371, 373, 375, 376, 381, 382, 383, 385, 387, 388], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 29, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 78, 79, 80, 82, 83, 87, 88, 89, 91, 93, 94, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 137, 138, 141, 144, 147, 149, 150, 151, 152, 161, 162, 166, 171, 174, 177, 179, 180, 181, 183, 184, 185, 188, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 248, 250, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 270, 271, 273, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 307, 309, 310, 311, 312, 316, 317, 331, 339, 341, 342, 346, 350, 360, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 388], "cuda": [1, 2, 3, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 103, 107, 109, 110, 111, 123, 129, 148, 160, 165, 166, 180, 183, 184, 186, 188, 192, 217, 218, 221, 222, 266, 338, 369, 370, 371, 372, 381, 382, 384, 388], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 29, 52, 82, 99, 100, 112, 113, 123, 129, 145, 147, 151, 161, 171, 174, 178, 183, 190, 217, 221, 223, 229, 231, 232, 250, 256, 263, 264, 266, 267, 270, 279, 285, 292, 295, 296, 300, 301, 315, 360, 364, 366, 369, 370, 371, 373, 375, 376, 381, 382, 383, 385, 387], "infer": [1, 123, 129, 144, 190, 219, 223, 231, 255, 263, 283, 327, 369, 371, 376, 378, 385], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 37, 61, 64, 80, 87, 88, 99, 100, 101, 102, 103, 106, 107, 112, 113, 119, 120, 121, 123, 129, 161, 162, 184, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 268, 269, 270, 273, 298, 329, 336, 342, 358, 359, 360, 363, 366, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387], "dispatch": [1, 18, 19, 20, 21, 248, 261, 329, 369], "avail": [1, 2, 3, 4, 6, 21, 42, 45, 50, 51, 61, 64, 69, 80, 86, 87, 88, 101, 102, 111, 117, 118, 123, 124, 125, 126, 130, 131, 137, 140, 143, 160, 214, 239, 263, 267, 293, 329, 358, 359, 364, 369, 370, 371, 372, 373, 374, 381, 382, 383, 385, 388], "speed": [1, 2, 4, 8, 29, 103, 107, 123, 129, 365, 369, 370, 371, 372, 381, 382, 383, 385], "avoid": [1, 2, 3, 37, 74, 75, 95, 103, 107, 123, 129, 136, 184, 190, 192, 250, 266, 271, 279, 292, 295, 298, 349, 371, 382], "oom": [1, 3, 41, 43, 46, 74, 75, 95], "choic": [1, 2, 63, 69, 123, 233, 364, 365, 369, 370, 375, 381, 382], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 33, 37, 42, 45, 47, 50, 51, 54, 61, 64, 65, 67, 68, 69, 72, 74, 75, 80, 82, 87, 88, 93, 95, 103, 104, 105, 107, 116, 120, 123, 124, 125, 129, 130, 140, 141, 149, 152, 169, 183, 185, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 233, 234, 235, 237, 238, 240, 241, 243, 247, 248, 250, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 279, 292, 293, 295, 309, 310, 311, 312, 313, 327, 343, 358, 359, 360, 364, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 385, 388], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 50, 53, 54, 55, 56, 67, 79, 88, 103, 107, 111, 122, 123, 129, 137, 144, 156, 185, 190, 202, 219, 223, 255, 277, 279, 280, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312, 364, 365, 370, 382], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 87, 93, 95, 103, 107, 123, 129, 189, 190, 192, 203, 226, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 336, 362, 366, 369, 371, 372, 374, 376, 378, 381, 382, 384, 388], "while": [1, 2, 3, 7, 8, 23, 37, 103, 107, 123, 129, 171, 184, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 284, 291, 292, 295, 298, 364, 369, 371, 372, 374, 376, 377, 381, 382, 383, 384, 385, 387], "wait": [1, 20, 21, 22, 372, 383], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 37, 41, 43, 45, 46, 50, 61, 64, 65, 67, 68, 69, 70, 74, 75, 80, 82, 87, 88, 93, 95, 103, 107, 117, 118, 123, 124, 125, 129, 130, 131, 136, 140, 141, 143, 144, 151, 162, 169, 171, 174, 175, 178, 180, 184, 192, 201, 204, 205, 217, 221, 241, 261, 263, 268, 269, 270, 277, 278, 280, 281, 283, 284, 285, 291, 295, 298, 300, 309, 316, 317, 327, 329, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 385, 388], "impact": [1, 2, 3, 67, 113, 149, 152, 277, 279, 292, 295, 297, 370, 372, 381, 382], "memori": [1, 3, 8, 21, 29, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 72, 74, 78, 103, 104, 107, 111, 123, 129, 144, 148, 166, 180, 183, 184, 186, 188, 190, 192, 221, 222, 266, 360, 362, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "manag": [1, 8, 305, 306, 309, 310, 311, 312, 342, 375], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 71, 79, 80, 82, 85, 87, 88, 93, 103, 107, 112, 113, 123, 124, 125, 129, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 165, 166, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 201, 202, 203, 213, 214, 219, 223, 225, 226, 239, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 327, 329, 340, 341, 342, 344, 345, 346, 350, 365, 366, 369, 371, 372, 373, 375, 380, 381, 382, 383, 385, 387, 388], "control": [1, 3, 5, 8, 16, 23, 24, 28, 80, 87, 101, 102, 103, 107, 116, 123, 124, 125, 129, 151, 201, 207, 208, 209, 210, 219, 223, 225, 226, 241, 248, 262, 266, 267, 268, 277, 279, 292, 295, 299, 309, 314, 322, 327, 364, 366, 369, 370, 371, 373, 374, 375, 381, 382, 383, 385], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 85, 86, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 117, 118, 120, 121, 123, 126, 129, 130, 131, 144, 145, 149, 152, 157, 160, 161, 162, 166, 167, 178, 180, 181, 183, 184, 186, 190, 192, 194, 213, 217, 218, 220, 221, 222, 223, 227, 228, 229, 246, 251, 252, 253, 255, 261, 263, 266, 267, 269, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 304, 307, 309, 310, 311, 312, 327, 329, 337, 341, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 388], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 370, 382], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 42, 43, 45, 47, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 80, 82, 85, 87, 103, 107, 123, 124, 125, 129, 140, 141, 144, 147, 149, 152, 154, 157, 164, 176, 184, 190, 192, 219, 223, 230, 309, 311, 312, 342, 346, 365, 369, 370, 371, 372, 374, 375, 376, 378, 381, 382, 383, 385, 388], "heurist": [1, 4, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 261, 262, 369, 376, 388], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 63, 85, 93, 99, 100, 103, 107, 112, 113, 123, 129, 232, 295, 300, 309, 310, 311, 312, 313, 328, 363, 364, 366, 369, 370, 371, 372, 374, 376, 377, 382, 385, 388], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 52, 54, 63, 67, 86, 87, 91, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 129, 137, 144, 149, 151, 152, 157, 161, 162, 183, 184, 190, 192, 204, 205, 218, 219, 222, 223, 224, 227, 228, 229, 230, 245, 255, 262, 270, 298, 300, 369, 370, 371, 373, 374, 376, 380, 381, 382, 384, 385, 388], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 79, 80, 82, 85, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 160, 161, 162, 164, 166, 167, 171, 173, 174, 175, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 243, 244, 245, 246, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 356, 360, 366, 369, 370, 371, 372, 374, 381, 384, 385, 387, 388], "behaviour": [1, 3, 14, 15, 21, 67, 107, 145, 149, 152, 162, 167, 179, 201, 219, 220, 223, 246, 327, 342, 364, 370, 381, 385], "besid": 1, "those": [1, 2, 3, 5, 7, 27, 33, 103, 107, 123, 129, 144, 149, 152, 162, 180, 181, 223, 263, 267, 268, 269, 348, 358, 359, 364, 369, 370, 373, 374, 382, 383, 388], "choos": [1, 11, 116, 219, 223, 295, 362, 364, 365, 369, 370, 371, 381, 382, 385], "follow": [1, 2, 3, 6, 7, 8, 11, 37, 41, 43, 44, 46, 47, 61, 63, 64, 65, 66, 67, 68, 69, 80, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 140, 160, 166, 186, 190, 192, 204, 205, 217, 219, 221, 223, 224, 257, 263, 264, 265, 276, 277, 278, 279, 280, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 329, 346, 364, 365, 366, 369, 370, 371, 372, 375, 376, 380, 381, 382, 383, 385, 387, 388], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 349, 369, 371, 387], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 61, 144, 157, 192, 254, 258, 261, 262, 328, 329, 331, 339, 342, 346, 349, 350, 369, 370, 371, 372, 374, 381, 382, 385, 387, 388], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 89, 91, 95, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 122, 123, 126, 129, 140, 141, 144, 147, 148, 151, 154, 156, 159, 160, 162, 164, 165, 166, 174, 176, 180, 183, 184, 186, 188, 189, 190, 192, 194, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 230, 231, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 259, 261, 262, 265, 266, 267, 269, 270, 273, 279, 292, 295, 298, 300, 308, 309, 310, 311, 312, 327, 328, 331, 342, 366, 370, 371, 372, 373, 374, 376, 377, 381, 382, 383, 385, 387, 388], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 141, 144, 171, 349, 369, 370, 371, 372, 376, 378, 381, 382, 385, 387], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 32, 35, 36, 37, 38, 45, 47, 49, 50, 61, 63, 64, 67, 80, 82, 85, 87, 88, 90, 93, 103, 104, 107, 117, 118, 123, 124, 125, 129, 130, 131, 137, 166, 171, 174, 178, 179, 180, 181, 188, 190, 192, 214, 217, 218, 219, 221, 223, 229, 230, 234, 238, 239, 247, 254, 256, 257, 258, 265, 269, 315, 318, 319, 320, 321, 323, 324, 325, 326, 329, 342, 343, 358, 359, 364, 369, 370, 371, 372, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 349, 369, 370, 378], "random": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 47, 53, 55, 56, 67, 69, 81, 93, 103, 107, 119, 123, 129, 137, 151, 161, 162, 180, 193, 194, 217, 219, 221, 223, 258, 263, 266, 267, 274, 278, 296, 342, 350, 364, 369, 370, 371, 372, 373, 374, 376, 383, 384, 385, 387, 388], "rand_step": [1, 2, 3, 30, 48, 101, 102, 103, 104, 106, 107, 108, 114, 115, 119, 120, 121, 123, 129, 159, 180, 190, 383, 387, 388], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 369], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 63, 65, 67, 68, 69, 369, 370, 371], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 32, 37, 38, 49, 50, 61, 63, 64, 65, 67, 68, 69, 79, 80, 87, 88, 93, 99, 100, 103, 107, 112, 113, 123, 129, 167, 178, 183, 192, 203, 223, 226, 262, 295, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 337, 362, 365, 369, 370, 371, 372, 373, 376, 378, 383, 387, 388], "pad": [1, 2, 3, 23, 44, 52, 63, 65, 67, 68, 69, 144, 204, 205, 207, 208, 223, 227, 228, 229, 343], "along": [1, 2, 3, 14, 15, 23, 33, 34, 41, 43, 46, 47, 54, 63, 65, 67, 68, 69, 75, 80, 82, 87, 88, 93, 95, 106, 108, 143, 144, 145, 162, 164, 167, 174, 182, 223, 224, 227, 228, 232, 256, 263, 266, 267, 293, 300, 364, 369, 370, 372, 373, 375, 381, 382, 383, 385], "point": [1, 2, 3, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 66, 73, 79, 80, 83, 93, 94, 97, 98, 103, 107, 123, 129, 137, 140, 143, 144, 148, 166, 179, 180, 182, 183, 184, 186, 188, 192, 225, 266, 276, 286, 346, 363, 370, 371, 380, 381, 382, 383, 385, 388], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 80, 87, 88, 107, 140, 167, 178, 202, 227, 228, 254, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 366, 372], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 48, 50, 65, 101, 102, 103, 106, 107, 108, 123, 129, 130, 131, 157, 167, 190, 192, 214, 227, 228, 239, 256, 257, 264, 265, 267, 304, 309, 343, 369, 371, 372, 373, 374, 375, 381, 382], "valid": [1, 2, 3, 23, 41, 43, 44, 54, 70, 93, 132, 140, 167, 184, 192, 204, 205, 224, 227, 228, 254, 262, 292, 309, 310, 311, 312, 343, 366, 388], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 342, 362, 369, 370], "strategi": [1, 2, 16, 67, 85, 116, 137, 228, 236, 258, 364, 366, 369, 370, 374, 381, 382, 385], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 50, 53, 55, 56, 58, 82, 103, 107, 113, 119, 123, 124, 125, 129, 130, 132, 141, 143, 144, 153, 160, 178, 179, 180, 183, 184, 189, 190, 192, 204, 205, 227, 228, 229, 230, 254, 256, 263, 264, 267, 270, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 301, 307, 329, 346, 356, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 388], "organ": [1, 2, 383, 385], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 103, 106, 107, 108, 123, 126, 129, 141, 144, 149, 152, 153, 171, 178, 189, 190, 192, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 274, 281, 286, 300, 307, 327, 329, 364, 370, 373, 374, 375, 376, 377, 378, 381, 383, 387], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 53, 54, 55, 56, 63, 64, 67, 85, 99, 100, 103, 107, 112, 113, 116, 123, 124, 125, 129, 140, 144, 151, 162, 169, 184, 185, 192, 214, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 239, 291, 295, 304, 309, 310, 311, 315, 316, 317, 342, 346, 348, 358, 359, 364, 365, 366, 369, 370, 371, 373, 375, 377, 380, 381, 382, 383, 384, 385, 388], "how": [1, 2, 3, 11, 18, 19, 20, 24, 37, 42, 50, 67, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 126, 129, 130, 131, 137, 192, 263, 277, 279, 290, 292, 295, 329, 331, 346, 363, 364, 369, 370, 371, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "tabl": [1, 364, 370, 374], "summar": [1, 3, 383], "what": [1, 3, 8, 11, 28, 42, 53, 61, 80, 87, 103, 107, 123, 129, 153, 180, 194, 201, 264, 300, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388], "expect": [1, 2, 3, 4, 7, 27, 37, 45, 53, 54, 80, 86, 87, 103, 107, 119, 122, 123, 129, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 164, 166, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 217, 218, 219, 221, 222, 223, 229, 230, 257, 262, 266, 269, 277, 278, 279, 280, 281, 283, 284, 285, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 350, 363, 364, 365, 366, 369, 371, 372, 373, 374, 375, 376, 381, 382, 383, 385, 388], "n": [1, 2, 3, 6, 7, 25, 29, 37, 40, 47, 103, 107, 123, 129, 144, 151, 156, 185, 192, 217, 218, 221, 226, 261, 262, 267, 277, 285, 293, 308, 343, 364, 366, 370, 372, 374, 381, 382, 385, 388], "b": [1, 2, 3, 7, 8, 23, 27, 33, 41, 43, 45, 46, 47, 50, 51, 93, 217, 218, 221, 222, 229, 230, 231, 232, 238, 247, 270, 309, 310, 311, 312, 313, 315, 329, 364, 370, 384, 385], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 79, 80, 82, 86, 93, 103, 104, 106, 107, 120, 121, 123, 129, 137, 140, 144, 149, 152, 153, 166, 170, 171, 179, 181, 188, 190, 192, 194, 201, 217, 221, 256, 262, 266, 299, 309, 310, 311, 312, 313, 315, 329, 336, 346, 348, 360, 363, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "p": [1, 2, 4, 82, 85, 104, 127, 128], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 61, 63, 65, 67, 68, 69, 99, 100, 103, 107, 112, 113, 123, 124, 125, 129, 148, 149, 150, 152, 166, 171, 175, 179, 180, 182, 183, 184, 186, 188, 189, 192, 217, 220, 221, 224, 229, 241, 245, 246, 266, 269, 276, 277, 278, 280, 281, 283, 284, 285, 291, 293, 295, 296, 297, 298, 300, 301, 348, 358, 359, 360, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 388], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 79, 80, 82, 93, 103, 106, 107, 123, 129, 149, 150, 152, 162, 182, 184, 194, 223, 224, 230, 263, 266, 267, 269, 270, 276, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312, 329, 337, 348, 358, 359, 360, 362, 364, 366, 369, 370, 371, 372, 373, 374, 376, 377, 381, 382, 383, 385, 388], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 53, 54, 55, 56, 63, 65, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 123, 129, 130, 131, 137, 143, 144, 145, 156, 162, 164, 167, 174, 177, 182, 185, 190, 204, 205, 206, 211, 219, 221, 223, 224, 227, 228, 229, 231, 232, 237, 238, 242, 243, 244, 245, 248, 256, 261, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 360, 364, 369, 370, 371, 372, 373, 381, 382, 383, 385], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 93, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 129, 136, 143, 145, 167, 174, 180, 181, 184, 190, 192, 201, 215, 217, 221, 223, 261, 262, 279, 285, 288, 292, 293, 295, 296, 300, 301, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 346, 364, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "adapt": [1, 24, 138, 178, 292, 369, 383], "equal": [1, 14, 15, 17, 61, 80, 87, 88, 120, 123, 129, 161, 162, 204, 205, 217, 219, 221, 223, 224, 230, 299, 304, 337, 358, 359, 369, 371, 384], "introduc": [1, 2, 123, 129, 217, 219, 221, 223, 262, 369, 381], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 54, 55, 56, 63, 69, 74, 75, 82, 93, 95, 99, 100, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 129, 130, 131, 140, 166, 180, 184, 186, 192, 194, 207, 219, 223, 243, 267, 268, 269, 329, 337, 349, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 385, 387, 388], "confus": [1, 37, 103, 107, 123, 129, 184, 192], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 46, 50, 51, 54, 61, 63, 65, 67, 68, 69, 74, 75, 76, 82, 85, 86, 87, 88, 89, 91, 95, 103, 106, 107, 108, 119, 123, 129, 147, 150, 151, 168, 175, 182, 186, 190, 192, 217, 219, 223, 232, 233, 255, 257, 258, 265, 267, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 309, 327, 343, 358, 359, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 387, 388], "better": [1, 3, 8, 9, 14, 15, 23, 219, 223, 365, 371, 373, 383, 387], "consist": [1, 2, 3, 37, 42, 45, 50, 51, 64, 67, 103, 107, 123, 129, 160, 189, 192, 205, 224, 369, 370, 371, 383, 384, 388], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 67, 103, 107, 117, 118, 123, 129, 184, 263, 267, 369, 371, 373, 374, 376, 381, 382, 383, 388], "keep": [1, 3, 4, 7, 8, 15, 41, 42, 43, 45, 46, 50, 51, 86, 93, 123, 129, 162, 166, 188, 190, 192, 201, 262, 339, 346, 369, 370, 371, 372, 376, 377, 378, 382, 383, 385, 387, 388], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 61, 64, 166, 188, 278, 280, 283, 285, 296, 298, 300, 301, 369, 370, 374, 375, 381, 382, 385, 388], "interchang": [1, 371, 373, 377, 384, 385], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 107, 117, 118, 123, 129, 130, 131, 151, 161, 172, 184, 190, 192, 194, 204, 205, 213, 217, 219, 223, 224, 229, 230, 257, 263, 267, 277, 279, 280, 283, 284, 285, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 304, 309, 342, 346, 365, 369, 370, 372, 376, 381, 382, 383, 385, 388], "wherea": [1, 2, 22, 67, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 126, 151, 192, 293, 366, 377], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 50, 53, 55, 56, 64, 67, 69, 79, 80, 103, 107, 119, 123, 129, 166, 180, 184, 188, 190, 192, 219, 221, 223, 227, 228, 258, 259, 262, 263, 267, 281, 284, 285, 298, 307, 309, 310, 311, 312, 313, 369, 370, 371, 373, 375, 376, 377, 381, 382, 383, 384], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 61, 67, 80, 87, 93, 103, 107, 123, 129, 167, 268, 269, 337, 346, 364, 369, 370, 371, 376, 380, 387, 388], "doesn": [1, 4, 12, 93, 120, 149, 152, 373], "understood": [1, 369], "serv": [1, 18, 20, 21, 109, 385, 388], "basi": [1, 93, 229, 385], "simplest": [1, 93, 270, 369, 371, 372, 374, 381, 382, 385, 388], "scenario": [1, 2, 117, 118, 123, 130, 131, 327, 369, 374, 381, 382, 383], "transit": [1, 37, 63, 67, 80, 88, 93, 103, 107, 123, 129, 192, 272, 369, 372, 373, 374, 376, 381, 383, 385], "sampl": [1, 4, 8, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 93, 95, 103, 107, 119, 122, 123, 129, 137, 143, 144, 167, 171, 195, 196, 199, 200, 203, 212, 220, 226, 227, 228, 236, 237, 240, 245, 246, 250, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 277, 278, 279, 280, 281, 283, 292, 294, 295, 300, 301, 337, 343, 346, 349, 362, 364, 369, 370, 371, 372, 373, 374, 376, 378, 381, 382, 384, 387, 388], "attent": [1, 2, 8, 369, 372, 388], "given": [1, 2, 3, 14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 103, 107, 119, 123, 129, 148, 151, 162, 166, 180, 183, 184, 186, 188, 190, 192, 201, 203, 214, 215, 217, 221, 226, 239, 243, 250, 256, 257, 258, 261, 262, 265, 266, 267, 268, 269, 271, 276, 280, 281, 283, 308, 309, 310, 311, 312, 313, 315, 338, 342, 356, 364, 366, 369, 370, 371, 373, 374, 375, 376, 377, 382, 383, 388], "built": [1, 2, 3, 5, 7, 82, 99, 100, 106, 112, 113, 122, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 302, 307, 354, 356, 357, 360, 369, 370, 371, 372, 375, 377, 385, 388], "flatten": [1, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 93, 141, 156, 343, 362, 372, 382], "suffici": [1, 3, 4, 369], "preprocess": [1, 2, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 370], "popul": [1, 2, 3, 42, 45, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 159, 180, 369, 371, 372, 374, 376, 383, 385], "replaybuff": [1, 2, 30, 42, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 97, 144, 167, 171, 192, 281, 286, 307, 354, 356, 362, 371, 376, 378, 381, 382, 384, 385, 387], "lazytensorstorag": [1, 2, 42, 45, 50, 51, 79, 93, 171, 192, 371, 378, 382, 385], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 45, 93, 103, 104, 107, 123, 129, 136, 141, 160, 180, 192, 248, 256, 261, 263, 264, 287, 289, 300, 309, 312, 320, 321, 325, 326, 327, 356, 365, 369, 381, 382, 385, 387, 388], "reshap": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 87, 93, 141, 219, 223, 224, 327, 371, 381, 382], "extend": [1, 2, 8, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 42, 45, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 76, 79, 80, 82, 83, 87, 88, 91, 93, 94, 97, 98, 143, 171, 192, 343, 366, 369, 370, 371, 372, 376, 378, 381, 382, 384, 385, 387], "slice": [1, 2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 137, 143, 385], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 42, 43, 45, 46, 50, 51, 93, 111, 376, 381, 382], "achiev": [1, 2, 3, 4, 37, 103, 107, 111, 123, 129, 179, 192, 202, 263, 343, 366, 369, 370, 371, 372, 381, 382, 383, 385, 388], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 93, 103, 104, 107, 111, 123, 124, 129, 130, 131, 141, 144, 166, 183, 184, 186, 189, 190, 192, 198, 201, 204, 205, 207, 208, 209, 210, 211, 216, 219, 223, 224, 225, 229, 230, 255, 267, 274, 281, 286, 296, 298, 307, 329, 343, 350, 351, 352, 356, 358, 359, 364, 369, 370, 371, 372, 374, 377, 381, 382, 383, 384, 385, 387, 388], "multidimension": [1, 2, 50, 79, 80, 385], "slicesampl": [1, 2, 61, 80, 385], "sampler": [1, 2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 95, 167, 281, 286, 307, 369, 371, 381, 382, 385], "One": [1, 2, 4, 8, 36, 40, 54, 93, 99, 100, 123, 129, 144, 171, 186, 236, 254, 266, 270, 299, 304, 333, 369, 370, 385, 388], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 82, 87, 88, 89, 90, 91, 93, 95, 99, 103, 104, 107, 112, 123, 124, 125, 126, 129, 130, 137, 140, 141, 144, 147, 153, 157, 160, 162, 164, 175, 179, 180, 181, 184, 185, 190, 192, 204, 205, 214, 219, 223, 224, 227, 228, 229, 230, 239, 250, 256, 257, 261, 263, 264, 265, 266, 267, 270, 271, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 299, 300, 301, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 369, 370, 371, 372, 374, 380, 383, 385], "ensur": [1, 2, 3, 37, 42, 50, 79, 80, 86, 103, 107, 123, 129, 137, 144, 166, 178, 184, 186, 190, 192, 256, 364, 370, 371, 383, 385], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 82, 93, 95, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 141, 143, 145, 149, 152, 153, 154, 160, 162, 164, 168, 169, 171, 175, 178, 180, 182, 190, 191, 192, 194, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 244, 245, 247, 250, 251, 252, 253, 255, 256, 257, 261, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 304, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 337, 343, 346, 356, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 387, 388], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 61, 220, 245, 246, 276, 363, 369, 370, 371, 372, 375, 381, 382, 384, 388], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 28, 37, 41, 43, 89, 93, 103, 107, 111, 116, 123, 124, 125, 129, 144, 147, 156, 166, 169, 181, 184, 188, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 231, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 263, 264, 265, 266, 270, 273, 276, 285, 296, 297, 298, 300, 301, 308, 313, 329, 346, 360, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 385, 387, 388], "dimension": [1, 42, 45, 50, 51, 151, 219, 223, 309, 314, 322, 382], "num_slic": [1, 2, 61, 67, 80, 87, 88, 385], "4": [1, 2, 3, 7, 25, 27, 29, 30, 33, 37, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 87, 88, 95, 99, 100, 101, 102, 103, 107, 112, 113, 114, 115, 116, 119, 121, 123, 127, 128, 129, 137, 138, 140, 141, 144, 153, 171, 178, 179, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 221, 222, 224, 226, 229, 230, 233, 234, 235, 236, 237, 238, 239, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 271, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 327, 328, 364, 368, 369, 370, 371, 372, 374, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 30, 48, 141, 171, 372, 376, 385, 387], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 141, 144, 171, 346, 349, 356, 366, 369, 370, 371, 372, 376, 378, 381, 382, 385, 387], "dim": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 144, 145, 164, 180, 185, 190, 222, 243, 248, 261, 360, 370, 371, 381, 383, 385], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 63, 65, 67, 79, 80, 87, 88, 103, 107, 111, 120, 123, 126, 129, 141, 148, 166, 180, 183, 184, 186, 188, 192, 219, 223, 224, 248, 266, 268, 269, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 327, 329, 331, 364, 366, 369, 370, 371, 372, 373, 374, 375, 377, 381, 382, 383, 385, 388], "ndim": [1, 2, 42, 45, 50, 51, 74, 75, 79, 80, 93, 95, 103, 107, 123, 129, 192, 261], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 93, 103, 107, 120, 124, 125, 126, 129, 327, 357, 362, 369, 370, 371, 373, 380, 387, 388], "make_env": [1, 3, 123, 129, 131, 190, 327, 351, 352, 369, 370, 388], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 79, 85, 103, 107, 123, 129, 184, 213, 239, 257, 264, 265, 266, 267, 286, 348, 362, 366, 369, 370, 373, 374, 378, 385, 388], "behav": [1, 3, 109, 119, 217, 221, 236, 284, 291, 384], "iif": 1, "accordingli": [1, 80, 178, 179, 221, 264, 372], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 27, 29, 33, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 110, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 138, 140, 141, 144, 148, 151, 153, 154, 160, 162, 164, 166, 168, 169, 171, 174, 175, 178, 179, 180, 182, 183, 184, 186, 188, 192, 193, 198, 203, 204, 205, 207, 208, 209, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 233, 236, 238, 248, 250, 251, 252, 253, 256, 257, 263, 265, 266, 269, 270, 271, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 315, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 345, 364, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 67, 79, 93, 140, 153, 194, 256, 266, 374, 375, 377, 381, 382], "current": [1, 2, 3, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 80, 82, 88, 103, 107, 109, 120, 123, 129, 140, 141, 144, 167, 179, 180, 181, 183, 184, 192, 195, 196, 201, 215, 241, 261, 262, 277, 279, 286, 292, 295, 297, 298, 332, 366, 369, 370, 371, 372, 375, 381, 382, 383, 385, 387, 388], "fulli": [1, 8, 37, 103, 107, 123, 129, 192, 218, 222, 370, 375, 383, 385], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83, 86, 88, 89, 91, 93, 94, 95, 97, 98, 103, 104, 107, 120, 123, 124, 125, 129, 130, 131, 138, 140, 156, 166, 167, 171, 184, 186, 190, 192, 194, 202, 204, 205, 211, 224, 232, 255, 261, 266, 267, 268, 269, 277, 278, 280, 281, 283, 284, 285, 291, 293, 295, 296, 297, 298, 300, 301, 309, 311, 312, 327, 334, 346, 363, 369, 370, 371, 374, 375, 381, 382, 383, 385, 387, 388], "consecut": [1, 3, 61, 86, 111, 223, 262, 329, 372, 373, 376, 382, 385, 388], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 103, 104, 106, 107, 120, 121, 123, 129, 166, 188, 192, 346, 360, 370, 371, 373, 374], "therebi": [1, 24, 327, 365, 369, 370], "interrupt": [1, 2, 107, 261, 315], "These": [1, 2, 7, 37, 47, 64, 69, 96, 103, 107, 123, 129, 130, 166, 188, 192, 364, 365, 369, 371, 381, 382, 383, 385, 388], "tool": [1, 2, 3, 5, 372, 373, 381, 383, 385, 388], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 103, 106, 107, 123, 129, 133, 136, 366, 369, 371, 372, 373, 376, 377, 383], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 362], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 362], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 83, 86, 87, 88, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 153, 154, 160, 162, 164, 166, 168, 169, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 193, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 274, 275, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 337, 344, 345, 356, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 61, 69, 104, 105, 123, 129, 190, 369, 370, 371, 372, 381, 382, 383, 384, 388], "synchron": [1, 14, 19, 21, 41, 43, 46, 120, 358, 359, 370, 371, 381], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 120, 123, 129, 149, 152, 179, 184, 190, 192, 195, 199, 212, 219, 220, 223, 236, 244, 245, 246, 263, 267, 293, 327, 342, 369, 370, 372, 381, 382, 387, 388], "find": [1, 4, 6, 7, 18, 19, 20, 42, 44, 52, 87, 88, 221, 254, 262, 340, 344, 369, 370, 374, 375, 381, 382], "folder": [1, 2, 41, 43, 46, 130, 370], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 104, 106, 107, 108, 109, 117, 118, 119, 123, 124, 125, 129, 130, 131, 132, 137, 143, 144, 147, 148, 149, 150, 152, 155, 160, 161, 162, 166, 174, 176, 180, 181, 183, 184, 186, 188, 190, 192, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 266, 267, 269, 270, 273, 274, 288, 293, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 341, 346, 349, 358, 359, 360, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 387, 388], "variou": [1, 2, 3, 219, 223, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 302, 307, 329, 358, 359, 369, 370, 371, 373, 374, 375, 377, 381, 382, 385, 388], "machin": [1, 2, 7, 18, 19, 20, 37, 66, 111, 381, 382, 387], "wonder": 1, "why": [1, 2, 3, 201, 381, 383, 388], "instead": [1, 4, 7, 8, 12, 29, 37, 67, 103, 107, 123, 129, 156, 180, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 277, 279, 281, 284, 285, 286, 291, 292, 295, 296, 297, 298, 307, 309, 313, 317, 360, 364, 373, 374, 378, 383, 385, 388], "lower": [1, 2, 3, 21, 26, 41, 43, 46, 147, 190, 240, 241, 270, 371, 381, 383], "io": [1, 11, 61, 67, 112, 113, 120, 221, 222], "footprint": [1, 2, 385], "commun": [1, 2, 3, 123, 129, 363, 371, 388], "yet": [1, 99, 100, 112, 384], "plai": [1, 3, 124, 125, 144, 370, 371, 375, 385, 388], "role": [1, 3, 118, 370, 375, 388], "opposit": [1, 381], "direct": [1, 2, 37, 103, 107, 123, 129, 192, 217, 221, 293, 370, 375], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 69, 79, 80, 88, 93, 103, 107, 123, 124, 125, 126, 129, 192, 194, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 270, 273, 327, 329, 369, 370, 371, 372, 373, 374, 375, 381, 383, 384, 385, 387, 388], "faster": [1, 2, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 68, 69, 120, 309, 310, 311, 312, 372, 381, 382], "share": [1, 3, 6, 8, 23, 41, 43, 46, 72, 74, 75, 76, 80, 87, 89, 91, 95, 104, 123, 129, 190, 219, 223, 229, 230, 251, 252, 253, 277, 279, 280, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 360, 362, 364, 371, 372, 378, 380, 381, 382, 387, 388], "among": [1, 3, 124, 125, 381, 382], "prohibit": [1, 3, 93], "slow": [1, 3, 4, 11, 41, 43, 46], "compar": [1, 3, 67, 93, 342, 365, 369, 371, 374, 375, 381, 382, 385, 388], "gpu": [1, 7, 8, 37, 74, 75, 95, 103, 107, 111, 123, 129, 192, 369, 371, 372, 381, 382, 388], "nativ": [1, 7, 9, 65, 103, 107, 123, 129, 144, 329, 372, 385], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 50, 61, 79, 80, 87, 93, 99, 100, 107, 140, 162, 190, 203, 212, 215, 217, 219, 221, 223, 226, 237, 244, 245, 254, 263, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 364, 365, 369, 370, 371, 374, 381, 382, 383, 385, 387, 388], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 126, 129, 130, 131, 140, 141, 145, 147, 148, 166, 174, 175, 180, 182, 183, 184, 186, 188, 192, 219, 223, 227, 228, 229, 250, 254, 255, 256, 258, 259, 261, 262, 263, 264, 266, 267, 270, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 294, 295, 296, 297, 298, 300, 301, 303, 307, 309, 310, 311, 312, 313, 317, 327, 336, 357, 369, 370, 371, 374, 377, 381, 382, 385, 388], "build": [1, 3, 7, 23, 27, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 108, 109, 112, 113, 117, 118, 120, 123, 126, 129, 130, 131, 171, 190, 192, 203, 219, 223, 226, 260, 263, 267, 346, 353, 354, 355, 364, 366, 371, 372, 374, 375, 376, 377, 381, 382, 383, 384, 387, 388], "mani": [1, 2, 3, 4, 45, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 126, 277, 279, 285, 292, 295, 296, 300, 301, 364, 369, 370, 371, 373, 374, 376, 378, 381, 382, 383, 385, 388], "eg": [1, 2, 3, 12, 41, 43, 46, 74, 75, 76, 89, 91, 95, 101, 102, 103, 106, 107, 108, 109, 111, 123, 126, 129, 151, 178, 184, 229, 255, 329], "gymnasium": [1, 3, 5, 12, 103, 106, 107, 108, 114, 115, 123, 129, 133, 136, 154, 175, 178, 189, 370, 371, 383, 387], "warn": [1, 3, 254, 258, 259, 262, 370], "quickli": [1, 3, 370, 381, 382, 388], "becom": [1, 3, 4, 21, 217, 221, 381, 382, 388], "quit": [1, 3, 11, 61, 103, 107, 123, 129, 364, 369, 370, 371, 374, 381, 382, 388], "annoi": [1, 3], "By": [1, 2, 3, 27, 33, 40, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 129, 130, 131, 248, 267, 293, 342, 360, 369, 381, 384, 385, 388], "filter": [1, 2, 3, 4, 54, 80, 87, 88, 277, 278, 280, 284, 285, 291, 295, 296, 298, 373], "out": [1, 2, 3, 4, 5, 9, 21, 37, 41, 43, 46, 54, 63, 67, 72, 80, 87, 88, 103, 107, 123, 124, 125, 129, 180, 192, 194, 217, 218, 221, 227, 228, 231, 232, 250, 255, 256, 257, 262, 263, 264, 265, 266, 267, 305, 306, 366, 369, 370, 371, 372, 373, 374, 376, 381, 382, 383, 385, 387, 388], "still": [1, 2, 3, 9, 67, 99, 100, 103, 107, 112, 113, 123, 129, 254, 292, 293, 369, 370, 372, 380, 383, 385, 388], "wish": [1, 3, 11, 14, 15, 17, 67, 136, 375, 385], "displai": [1, 3, 7, 103, 107, 123, 129, 346, 366, 369, 370, 382, 383], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 82, 85, 86, 87, 88, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 145, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 173, 174, 175, 178, 180, 182, 183, 184, 185, 186, 188, 190, 192, 194, 201, 202, 203, 204, 205, 207, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 238, 239, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 304, 307, 309, 310, 311, 312, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 336, 339, 340, 342, 343, 344, 346, 360, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "central": [2, 229, 230, 369, 370, 373, 381, 382, 385], "part": [2, 3, 4, 8, 37, 47, 61, 64, 65, 67, 68, 69, 99, 103, 107, 112, 123, 129, 143, 162, 171, 174, 192, 201, 219, 223, 271, 337, 360, 369, 371, 372, 378, 381, 383, 388], "algorithm": [2, 3, 8, 9, 119, 137, 277, 295, 296, 298, 362, 365, 366, 369, 370, 371, 372, 375, 376, 377, 381, 382, 384, 385], "implement": [2, 3, 9, 12, 14, 15, 16, 37, 77, 89, 90, 103, 107, 119, 120, 123, 129, 141, 148, 149, 150, 154, 157, 160, 168, 169, 175, 178, 183, 184, 190, 192, 204, 217, 218, 219, 220, 221, 222, 223, 244, 245, 246, 277, 278, 282, 283, 284, 291, 293, 294, 295, 297, 298, 300, 327, 337, 351, 364, 366, 369, 370, 371, 372, 374, 375, 376, 381, 382, 383, 387], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 63, 67, 69, 86, 88, 93, 99, 100, 103, 104, 107, 111, 112, 113, 123, 129, 144, 160, 166, 169, 186, 189, 190, 192, 194, 203, 223, 229, 230, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 329, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "give": [2, 3, 7, 50, 64, 103, 107, 119, 123, 129, 144, 363, 365, 369, 370, 381, 382, 383, 384, 387], "abil": [2, 293, 383, 385], "panel": [2, 371], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 63, 69, 72, 93, 141, 144, 153, 219, 223, 284, 291, 298, 302, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "includ": [2, 3, 4, 7, 9, 21, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 89, 91, 95, 103, 107, 119, 123, 129, 179, 184, 190, 192, 219, 223, 293, 298, 349, 364, 366, 369, 370, 371, 372, 381, 382, 383, 385, 388], "almost": [2, 372], "physic": [2, 6, 7, 72, 123, 126, 366, 369, 381, 382, 383], "theori": 2, "crude": 2, "made": [2, 3, 23, 37, 45, 61, 74, 75, 76, 89, 91, 95, 103, 106, 107, 108, 123, 129, 192, 262, 281, 307, 369, 370, 372, 381, 382, 384, 385], "liststorag": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 385], "veri": [2, 3, 112, 113, 370, 373, 376, 381, 383, 385, 387, 388], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 37, 40, 41, 43, 46, 61, 67, 80, 82, 85, 87, 88, 99, 100, 103, 107, 112, 113, 123, 129, 140, 141, 169, 192, 201, 224, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 302, 304, 307, 364, 366, 369, 371, 372, 373, 374, 375, 381, 382, 383, 385, 388], "complex": [2, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 369, 370, 373, 374], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 87, 88, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 138, 140, 141, 143, 144, 145, 148, 149, 151, 152, 153, 154, 156, 159, 162, 164, 166, 167, 168, 169, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 275, 277, 278, 280, 281, 283, 284, 285, 288, 289, 291, 293, 295, 296, 297, 298, 300, 301, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 387, 388], "contigu": [2, 3, 8, 64, 67, 68, 103, 107, 123, 129, 198, 371, 381, 382, 383, 385, 387, 388], "tensorstorag": [2, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 93, 96, 376, 385], "lazymemmapstorag": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 143, 144, 369, 370, 372, 376, 381, 384, 385], "citizen": 2, "pytre": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 96], "tupl": [2, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 80, 82, 87, 91, 93, 101, 102, 103, 106, 107, 108, 123, 129, 160, 162, 192, 207, 213, 214, 219, 222, 223, 224, 233, 237, 238, 239, 256, 257, 264, 265, 270, 277, 278, 280, 284, 285, 287, 291, 293, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312, 340, 342, 344, 353, 385], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 37, 41, 43, 46, 54, 80, 85, 87, 88, 103, 106, 107, 108, 117, 118, 123, 129, 130, 131, 180, 184, 192, 263, 267, 298, 300, 342, 358, 359, 360, 366, 370, 371, 373, 375, 381, 383, 388], "nest": [2, 3, 23, 27, 30, 32, 33, 37, 38, 41, 43, 45, 46, 48, 49, 57, 74, 75, 78, 82, 95, 103, 106, 107, 108, 123, 129, 144, 178, 181, 192, 202, 261, 309, 310, 311, 312, 313, 327, 366, 370, 371, 382, 383, 385, 387], "construct": [2, 3, 5, 23, 37, 42, 45, 50, 51, 61, 82, 103, 106, 107, 123, 124, 129, 149, 152, 192, 194, 219, 223, 241, 267, 346, 364, 370, 371, 372, 374, 381, 383, 385, 388], "ram": [2, 106, 108, 377, 385], "prealloc": [2, 3, 123, 129, 383], "ve": [2, 47, 369, 372, 378], "been": [2, 3, 5, 7, 8, 18, 20, 21, 41, 43, 46, 47, 82, 86, 103, 107, 111, 117, 118, 123, 129, 160, 178, 179, 183, 217, 221, 254, 259, 261, 262, 369, 370, 371, 372, 380, 381, 382, 383, 385, 388], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 68, 69, 93, 101, 102, 103, 107, 111, 123, 124, 125, 129, 144, 336, 364, 365, 366, 369, 370, 371, 372, 373, 374, 376, 378, 381, 382, 383, 385, 387, 388], "start": [2, 3, 4, 5, 14, 21, 24, 54, 61, 69, 80, 87, 88, 104, 107, 116, 123, 129, 201, 341, 368, 369, 370, 379, 382, 383, 385, 386, 388], "replay_buff": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 343, 356, 369, 370, 371, 376, 381, 382, 385], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 30, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 138, 140, 141, 143, 144, 147, 153, 154, 159, 160, 162, 164, 166, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 183, 188, 190, 192, 193, 198, 201, 202, 203, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 233, 238, 239, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 327, 329, 339, 342, 356, 364, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "rb": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 144, 171, 192, 370, 372, 376, 378, 382, 384, 385, 387], "10": [2, 3, 7, 22, 23, 27, 37, 42, 45, 47, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 119, 123, 124, 125, 127, 128, 129, 130, 131, 137, 138, 141, 143, 144, 179, 181, 182, 192, 203, 206, 207, 209, 211, 213, 217, 218, 221, 222, 226, 237, 248, 258, 259, 262, 263, 270, 274, 278, 281, 283, 295, 296, 297, 301, 307, 309, 310, 311, 312, 315, 329, 337, 366, 368, 369, 370, 371, 372, 373, 374, 378, 381, 382, 383, 385, 386, 387, 388], "add": [2, 3, 4, 6, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 82, 83, 93, 94, 97, 98, 103, 107, 123, 129, 144, 160, 184, 192, 219, 223, 231, 260, 277, 341, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 385, 387], "string": [2, 18, 19, 20, 37, 44, 54, 70, 103, 107, 117, 123, 129, 136, 166, 178, 188, 192, 219, 223, 256, 261, 263, 264, 276, 328, 345, 365, 369, 371, 372, 385], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 82, 87, 88, 93, 95, 122, 123, 129, 137, 144, 167, 176, 179, 180, 204, 205, 217, 218, 221, 250, 254, 256, 261, 266, 267, 271, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 294, 295, 296, 297, 298, 300, 301, 337, 369, 371, 374, 376, 385, 388], "30": [2, 3, 45, 65, 140, 161, 240, 241, 327, 331, 368, 369, 370, 371, 376, 381, 382, 383, 385, 386], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 89, 91, 93, 95, 103, 104, 106, 107, 116, 117, 118, 119, 123, 124, 125, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 158, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 356, 358, 359, 360, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 387, 388], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 137, 139, 140, 141, 143, 144, 145, 146, 148, 151, 156, 157, 161, 162, 164, 166, 167, 170, 177, 178, 181, 184, 185, 186, 188, 192, 194, 198, 203, 204, 205, 206, 207, 209, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 277, 278, 279, 285, 287, 288, 292, 293, 294, 295, 296, 300, 301, 309, 311, 312, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 337, 338, 339, 342, 343, 346, 348, 354, 358, 359, 360, 383, 385], "entri": [2, 3, 14, 15, 17, 23, 27, 30, 33, 37, 41, 43, 44, 46, 48, 54, 58, 63, 64, 65, 66, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 126, 129, 130, 131, 140, 144, 146, 147, 149, 152, 153, 156, 159, 162, 164, 166, 169, 171, 174, 176, 178, 179, 180, 188, 190, 192, 201, 202, 219, 227, 228, 255, 256, 261, 264, 265, 278, 298, 309, 310, 311, 312, 364, 369, 371, 372, 373, 374, 375, 377, 381, 382, 383, 384, 385, 388], "onto": [2, 8, 40, 41, 43, 46, 198, 250, 254, 256, 257, 262, 263, 264, 265, 266, 267, 372, 383], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 79, 80, 82, 83, 85, 86, 87, 88, 93, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 130, 131, 137, 144, 145, 178, 179, 180, 181, 184, 192, 202, 204, 205, 224, 227, 228, 230, 261, 262, 264, 265, 273, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 350, 360, 363, 366, 371, 372, 376, 377, 378, 383, 385, 388], "without": [2, 3, 7, 9, 14, 15, 16, 37, 41, 43, 46, 47, 61, 63, 67, 87, 88, 103, 107, 123, 129, 130, 131, 138, 140, 149, 152, 182, 192, 217, 218, 221, 222, 252, 253, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 308, 309, 310, 311, 312, 313, 356, 363, 364, 369, 370, 371, 373, 374, 375, 376, 381, 382, 383, 385, 388], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 42, 43, 46, 47, 50, 79, 80, 103, 107, 119, 123, 124, 125, 129, 138, 140, 141, 149, 151, 152, 168, 178, 179, 184, 187, 190, 192, 202, 203, 217, 219, 223, 226, 254, 258, 259, 262, 263, 264, 265, 266, 267, 277, 278, 279, 280, 281, 283, 285, 286, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 307, 309, 310, 311, 312, 313, 342, 346, 348, 351, 352, 355, 356, 366, 370, 371, 372, 375, 378, 381, 382, 383, 385, 387, 388], "length": [2, 20, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 44, 47, 52, 53, 54, 55, 56, 61, 67, 70, 80, 87, 88, 91, 103, 107, 112, 113, 123, 129, 137, 167, 190, 203, 204, 205, 207, 209, 211, 217, 221, 224, 226, 229, 230, 250, 266, 271, 337, 343, 369, 371, 372, 376, 378, 383, 385, 388], "cursor": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "place": [2, 3, 24, 27, 28, 33, 37, 41, 43, 46, 74, 75, 82, 85, 95, 103, 104, 107, 123, 129, 130, 131, 140, 148, 153, 166, 180, 183, 184, 186, 188, 189, 190, 192, 202, 255, 261, 266, 343, 348, 349, 370, 371, 374, 377, 381, 382, 383, 385], "afterward": [2, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 381, 388], "tell": [2, 3, 4, 7, 124, 125, 369, 372, 376, 381, 382], "our": [2, 3, 7, 8, 11, 18, 45, 144, 329, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 387], "far": [2, 47, 220, 245, 246, 378, 383, 388], "restrict": [2, 3, 370, 384, 385, 388], "empti": [2, 3, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 103, 107, 122, 123, 129, 149, 152, 166, 168, 181, 184, 186, 188, 192, 333, 369, 383], "64": [2, 3, 41, 43, 46, 61, 67, 82, 144, 170, 207, 208, 216, 219, 223, 230, 238, 307, 369, 370, 371, 372, 374, 378, 380, 383, 384, 385, 387, 388], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 87, 88, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 138, 141, 142, 148, 149, 150, 151, 152, 153, 154, 160, 162, 164, 166, 168, 169, 171, 175, 178, 180, 182, 183, 184, 186, 188, 192, 194, 198, 201, 202, 203, 213, 214, 217, 218, 219, 221, 222, 223, 226, 231, 232, 238, 239, 247, 250, 251, 252, 253, 255, 256, 257, 261, 262, 263, 264, 265, 266, 269, 271, 274, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 315, 364, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "unit8": 2, "img": 2, "randint": [2, 41, 43, 46, 54, 82, 182, 385], "255": [2, 82, 182, 383, 385], "uint8": [2, 3, 41, 43, 46, 56, 61, 67, 101, 102, 117, 118, 153, 164, 182, 370, 377, 384, 385, 387, 388], "next": [2, 3, 4, 8, 14, 15, 16, 23, 27, 30, 32, 33, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 117, 118, 119, 123, 127, 128, 129, 130, 131, 137, 140, 141, 143, 144, 149, 152, 153, 154, 159, 160, 164, 168, 169, 171, 174, 175, 178, 180, 189, 190, 192, 198, 201, 203, 218, 219, 222, 223, 226, 241, 261, 272, 274, 277, 278, 280, 281, 283, 284, 285, 286, 291, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 329, 340, 342, 344, 370, 372, 374, 377, 378, 380, 383, 384, 387, 388], "ask": [2, 8, 61, 67, 80, 87, 88, 329, 371, 372, 373, 374, 381, 382, 384, 388], "do": [2, 3, 4, 7, 69, 103, 107, 123, 129, 130, 131, 137, 167, 189, 190, 201, 230, 231, 252, 309, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 387, 388], "automat": [2, 3, 5, 69, 74, 75, 82, 95, 103, 106, 107, 108, 123, 124, 125, 129, 140, 149, 152, 162, 180, 189, 204, 219, 223, 250, 261, 263, 327, 364, 369, 371, 373, 374, 381, 382, 383, 385, 387], "hand": [2, 3, 7, 21, 27, 381, 382, 383], "look": [2, 3, 5, 7, 8, 37, 80, 103, 107, 116, 123, 124, 125, 129, 166, 167, 186, 192, 263, 267, 268, 269, 365, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388], "assum": [2, 3, 6, 27, 40, 47, 50, 51, 63, 65, 67, 68, 69, 71, 72, 78, 87, 103, 107, 123, 129, 143, 146, 156, 166, 167, 174, 180, 184, 186, 188, 198, 219, 223, 248, 270, 281, 286, 298, 307, 318, 319, 320, 321, 323, 324, 325, 326, 329, 369, 371, 372, 380, 383], "lead": [2, 3, 4, 8, 10, 12, 23, 27, 33, 37, 42, 45, 50, 51, 63, 86, 101, 102, 103, 106, 108, 109, 180, 220, 238, 245, 246, 369, 372, 381, 382, 383, 385, 387], "leav": [2, 27, 33, 41, 43, 45, 46, 103, 194, 202, 369, 376, 385], "tree": [2, 41, 43, 46, 103, 107, 123, 129, 381, 385], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 91, 101, 102, 103, 104, 106, 107, 108, 109, 123, 129, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 204, 205, 212, 219, 223, 224, 229, 230, 244, 250, 255, 256, 263, 264, 266, 267, 270, 271, 278, 285, 292, 294, 296, 298, 343, 348, 364, 369, 371, 380, 382, 383, 385, 388], "don": [2, 3, 4, 6, 7, 11, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 144, 370, 371, 376, 385, 387, 388], "throw": [2, 37, 41, 43, 46, 103, 107, 123, 129, 192, 388], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 27, 30, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141, 143, 144, 148, 149, 152, 153, 154, 164, 168, 169, 171, 175, 178, 180, 183, 184, 192, 193, 201, 202, 203, 211, 213, 214, 219, 223, 226, 238, 239, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 271, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 329, 337, 343, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "max": [2, 23, 40, 43, 50, 54, 70, 79, 80, 93, 151, 181, 245, 246, 262, 278, 279, 285, 294, 296, 298, 369, 371, 372, 378], "label": [2, 43, 44, 47, 54, 369, 381, 385], "100": [2, 14, 15, 16, 17, 37, 42, 45, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 99, 100, 103, 107, 112, 113, 123, 129, 147, 153, 162, 171, 176, 178, 192, 229, 257, 261, 329, 338, 356, 370, 371, 372, 373, 375, 378, 380, 381, 382, 383, 384, 385, 387, 388], "rb_pytre": 2, "randn": [2, 27, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 95, 143, 162, 198, 206, 207, 211, 213, 214, 217, 218, 221, 222, 227, 228, 229, 233, 236, 237, 239, 250, 251, 252, 253, 255, 256, 263, 264, 266, 269, 270, 271, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312, 345, 364, 385, 387, 388], "c": [2, 3, 6, 7, 27, 41, 43, 45, 46, 50, 51, 66, 162, 182, 221, 222, 370, 385], "zero": [2, 3, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 82, 87, 88, 93, 95, 103, 107, 123, 129, 141, 143, 145, 149, 151, 152, 162, 168, 171, 192, 198, 201, 203, 208, 209, 210, 216, 217, 218, 219, 221, 222, 223, 227, 228, 230, 238, 247, 258, 259, 262, 265, 273, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 315, 372, 385, 387], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 107, 110, 123, 129, 136, 137, 141, 144, 147, 149, 152, 160, 169, 176, 190, 194, 198, 230, 233, 248, 309, 310, 311, 312, 337, 345, 376, 380, 385, 388], "len": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 95, 164, 204, 205, 224, 230, 369, 376, 378, 381, 383, 384, 385, 387], "ambigu": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 91, 103, 107, 123, 129, 141, 148, 166, 180, 183, 184, 186, 188, 192, 266, 365, 369, 373, 383], "deal": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 369, 371, 382, 385], "interpret": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 370], "put": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 117, 118, 130, 131, 190, 336, 360, 364, 370, 371, 372, 373, 381, 383], "solv": [2, 4, 9, 10, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 363, 369, 370, 371, 376, 378, 381, 382, 383, 385], "clear": [2, 3, 11, 27, 33, 34, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 111, 123, 129, 192, 338, 373, 376], "cut": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "distinct": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 141, 375, 380], "view": [2, 3, 8, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 138, 192, 214, 217, 221, 224, 373, 383, 385, 387, 388], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 27, 33, 67, 99, 100, 103, 106, 107, 108, 111, 112, 113, 116, 123, 124, 125, 129, 140, 149, 152, 167, 224, 238, 261, 263, 267, 268, 269, 273, 293, 309, 310, 311, 312, 364, 369, 370, 371, 373, 375, 380, 381, 382, 383, 384, 385, 388], "collate_fn": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 385, 387], "__init__": [2, 3, 7, 103, 119, 136, 138, 141, 149, 152, 168, 203, 214, 217, 221, 226, 271, 278, 280, 285, 291, 296, 298, 300, 301, 366, 383, 388], "major": 2, "worri": [2, 52], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 74, 75, 76, 80, 87, 89, 91, 95, 103, 104, 107, 111, 123, 129, 140, 202, 369, 371, 373, 381, 382, 383, 388], "though": [2, 4, 11, 103, 107, 123, 129, 224, 371, 381, 382], "too": [2, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 47, 53, 55, 56, 103, 107, 123, 129, 161, 180, 220, 245, 246, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 370, 374, 377, 383, 385, 388], "latter": [2, 18, 19, 20, 37, 63, 103, 107, 123, 129, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 295, 358, 359], "inv": [2, 3, 147, 151, 154, 164, 171, 176, 383], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 87, 88, 89, 90, 91, 93, 95, 103, 106, 107, 108, 109, 123, 126, 129, 140, 141, 144, 148, 149, 150, 153, 154, 156, 160, 162, 166, 168, 169, 170, 171, 175, 178, 180, 183, 184, 186, 188, 192, 193, 203, 219, 223, 250, 251, 252, 253, 255, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 274, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 313, 327, 328, 357, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 381, 383, 385, 388], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 52, 53, 55, 56, 72, 103, 107, 123, 129, 151, 154, 175, 182, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 309, 385], "multithread": [2, 3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 120, 121, 376, 385], "thread": [2, 14, 15, 17, 41, 43, 46, 99, 100, 112, 113, 123, 129], "prefetch": [2, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 369, 370, 372, 385], "advis": [2, 11, 64, 377, 388], "benchmark": [2, 3, 9, 100, 112, 113], "techniqu": [2, 8, 123, 129, 370, 376, 385], "real": [2, 5, 67, 267, 365, 372, 383], "life": [2, 153], "adopt": [2, 3, 5, 369, 388], "throughput": [2, 9, 113, 369], "constant": [2, 11, 28, 144, 162, 179, 366, 369, 371, 372, 388], "throughout": [2, 3, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 371, 381, 388], "further": [2, 3, 5, 24, 369, 371, 373], "refin": [2, 67, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307], "coupl": [2, 372, 374, 375, 383, 385], "get": [2, 3, 4, 6, 7, 8, 9, 27, 33, 41, 42, 43, 45, 46, 61, 63, 67, 74, 75, 80, 87, 88, 89, 91, 93, 95, 103, 104, 107, 123, 129, 138, 143, 145, 149, 151, 152, 160, 162, 167, 179, 180, 182, 184, 190, 250, 258, 259, 263, 264, 267, 274, 309, 310, 311, 312, 313, 329, 333, 364, 368, 369, 370, 371, 372, 379, 381, 382, 383, 385, 386, 387, 388], "first_elt": 2, "128": [2, 61, 63, 67, 88, 99, 100, 112, 113, 208, 211, 370, 372, 378, 381, 383, 384, 385], "wa": [2, 3, 5, 7, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 103, 107, 123, 129, 184, 194, 202, 221, 277, 279, 290, 292, 295, 297, 299, 315, 365, 370, 371, 373, 374, 380, 381, 385, 387], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 29, 30, 33, 37, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 136, 137, 140, 141, 144, 145, 149, 150, 151, 152, 159, 162, 168, 169, 171, 174, 178, 180, 181, 182, 190, 192, 198, 201, 202, 204, 205, 207, 208, 209, 210, 211, 214, 216, 219, 224, 227, 228, 229, 230, 233, 236, 239, 250, 251, 252, 253, 255, 256, 258, 259, 261, 262, 263, 264, 266, 269, 271, 274, 293, 327, 356, 364, 366, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 145], "larger": [2, 4, 219, 223, 284, 291, 387], "volum": 2, "due": [2, 3, 5, 23, 375, 384, 385, 388], "serialis": [2, 41, 43, 46], "memorymappedtensor": [2, 30, 41, 43, 48, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 331, 376, 384], "well": [2, 3, 8, 11, 21, 23, 37, 42, 44, 45, 50, 51, 80, 85, 89, 96, 103, 107, 123, 129, 184, 192, 207, 221, 240, 241, 293, 300, 313, 369, 370, 372, 373, 374, 375, 377, 384, 385, 387, 388], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 125, 129, 130, 131, 149, 150, 152, 174, 177, 179, 185, 192, 203, 221, 266, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 336, 364, 369, 371, 372, 376, 381], "file": [2, 6, 7, 8, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 72, 130, 328, 329, 331, 366, 368, 370, 381, 385, 386, 388], "locat": [2, 7, 41, 43, 46, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 153, 162, 173, 220, 233, 245, 246, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 369, 370, 371, 377, 381, 382, 385], "improv": [2, 4, 11, 157, 277, 365, 381, 382, 385], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 123, 129, 371, 381, 385], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 111, 123, 129, 138, 144, 171, 174, 181, 190, 192, 202, 258, 259, 263, 267, 292, 293, 295, 369, 370, 372, 373, 375, 377, 385, 388], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 44, 46, 53, 55, 56, 80, 151, 221, 222, 284, 372, 376, 385], "sharabl": [2, 123, 129], "collabor": [2, 67], "rather": [2, 4, 91, 169, 369, 370, 371, 373, 375, 381, 382, 385], "incur": [2, 99, 100, 112, 113], "transmiss": 2, "overhead": [2, 99, 100, 112, 113, 123, 129], "subclass": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 82, 103, 107, 123, 129, 139, 140, 183, 189, 194, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 266, 267, 268, 270, 273, 293, 295, 370, 372, 376, 383, 385], "instanti": [2, 3, 14, 15, 21, 41, 42, 43, 45, 46, 50, 51, 79, 80, 111, 140, 183, 230, 327, 369, 370, 374, 375, 377, 381, 382, 383, 385, 388], "content": [2, 8, 16, 27, 33, 41, 42, 43, 45, 46, 50, 51, 86, 103, 106, 107, 108, 120, 123, 129, 168, 204, 205, 224, 229, 230, 263, 293, 371, 383, 387], "map": [2, 3, 8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 78, 79, 80, 103, 107, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 132, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 198, 214, 233, 250, 251, 252, 253, 256, 263, 264, 266, 267, 269, 270, 271, 272, 298, 307, 342, 362, 364, 365, 369, 370, 371, 372, 374, 375, 384, 387], "writer": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 80, 82, 83, 87, 93, 94, 98, 371, 385], "tensordictroundrobinwrit": [2, 82], "goe": [2, 4, 124, 125, 369, 371, 381, 382, 388], "prioritizedsampl": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 281, 286, 307, 369, 385], "access": [2, 3, 7, 8, 11, 37, 42, 64, 66, 103, 107, 123, 129, 166, 186, 192, 360, 363, 369, 373, 381, 382, 383, 385], "show": [2, 11, 37, 103, 107, 123, 129, 192, 230, 329, 364, 369, 371, 372, 381, 382, 383, 385, 387], "tensordictreplaybuff": [2, 42, 45, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 143, 144, 343, 356, 362, 369, 370, 372, 385], "mp": [2, 18, 19, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 104, 190], "def": [2, 3, 12, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 129, 136, 138, 140, 141, 149, 152, 168, 184, 192, 203, 214, 217, 218, 221, 222, 226, 261, 263, 271, 278, 280, 285, 291, 293, 296, 298, 300, 301, 327, 366, 369, 370, 380, 381, 382, 383, 385, 387, 388], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 114, 115, 123, 129, 138, 141, 143, 145, 149, 150, 151, 152, 159, 160, 162, 171, 174, 180, 182, 184, 190, 193, 201, 203, 213, 214, 219, 223, 225, 226, 238, 239, 247, 250, 251, 252, 253, 255, 256, 258, 259, 262, 263, 264, 266, 269, 271, 307, 310, 311, 312, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 337, 345, 364, 365, 369, 372, 382, 383, 387, 388], "__name__": [2, 3, 14, 15, 22, 104, 327, 370, 387], "__main__": [2, 3, 14, 15, 22, 104, 327, 387], "21": [2, 67, 68, 88, 123, 124, 125, 129, 368, 369, 370, 371, 378, 380, 381, 383, 386], "proc": 2, "target": [2, 4, 8, 21, 24, 37, 103, 104, 107, 123, 129, 179, 183, 192, 266, 267, 277, 278, 279, 280, 281, 283, 285, 286, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 307, 308, 309, 310, 311, 312, 313, 349, 355, 356, 365, 366, 372, 378, 381, 383], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 80, 82, 87, 88, 89, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 138, 139, 148, 166, 168, 177, 180, 183, 184, 185, 187, 188, 192, 203, 204, 205, 213, 219, 223, 224, 225, 226, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 336, 339, 343, 346, 360, 370, 388], "join": [2, 104, 362, 370, 371, 381], "now": [2, 3, 7, 42, 123, 144, 230, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 388], "20": [2, 54, 68, 87, 88, 93, 103, 107, 111, 123, 129, 179, 192, 216, 217, 218, 221, 222, 255, 337, 369, 370, 371, 372, 381, 382, 383, 385, 387, 388], "_data": [2, 383], "It": [2, 3, 4, 7, 23, 37, 41, 43, 44, 46, 47, 50, 52, 54, 63, 69, 82, 85, 93, 98, 103, 107, 109, 119, 120, 123, 124, 125, 129, 130, 131, 141, 143, 153, 160, 162, 167, 179, 184, 189, 192, 194, 207, 209, 215, 229, 230, 238, 240, 241, 247, 248, 257, 258, 261, 262, 265, 267, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 301, 307, 308, 309, 327, 336, 342, 363, 364, 365, 369, 370, 372, 373, 381, 382, 383, 384, 385, 387, 388], "difficult": [2, 4, 123, 377], "pai": [2, 8, 369, 372], "word": [2, 3, 11, 47, 61, 63, 65, 67, 68, 69, 293, 369, 376, 383, 388], "1m": [2, 61, 67, 349, 369, 371, 372], "doe": [2, 3, 18, 41, 42, 43, 46, 50, 54, 61, 63, 67, 71, 72, 78, 79, 80, 87, 89, 91, 98, 103, 107, 117, 118, 123, 129, 130, 131, 190, 211, 217, 218, 219, 221, 222, 223, 231, 248, 255, 268, 269, 277, 279, 286, 292, 295, 308, 346, 364, 366, 369, 370, 371, 372, 373, 376, 381, 383, 385, 388], "howev": [2, 3, 5, 7, 37, 103, 107, 123, 129, 144, 174, 179, 184, 192, 277, 279, 292, 295, 297, 298, 364, 369, 370, 372, 375, 383, 385, 388], "capac": [2, 42, 45, 50, 51, 74, 75, 79, 87, 95, 371, 376], "There": [2, 10, 82, 219, 223, 364, 366, 371, 372, 374, 376, 381, 382, 383, 385, 388], "circumv": 2, "account": [2, 74, 75, 95, 106, 108, 140, 144, 227, 228, 364, 370, 372, 385, 388], "save": [2, 3, 8, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 82, 89, 90, 91, 95, 96, 103, 107, 123, 129, 189, 192, 328, 329, 331, 336, 346, 366, 376, 377, 378, 381, 382], "convent": [2, 3, 61, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 130, 131, 365, 369, 372, 381, 382, 383], "overridden": [2, 3, 61, 64, 65, 67, 68, 69, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 309, 311, 312, 372, 381], "dim_extend": [2, 42, 45, 50, 51], "obtain": [2, 7, 47, 61, 103, 107, 123, 129, 143, 166, 179, 188, 203, 238, 343, 369, 371, 373, 374, 375, 381, 382], "counterpart": 2, "desir": [2, 3, 11, 37, 103, 107, 123, 129, 139, 141, 148, 162, 164, 166, 167, 180, 183, 184, 186, 188, 192, 199, 200, 204, 205, 224, 230, 250, 256, 257, 263, 264, 265, 266, 267, 364, 369, 381, 382, 383, 385], "diversifi": 2, "offer": [2, 3, 7, 99, 100, 103, 107, 112, 113, 117, 118, 123, 129, 327, 364, 369, 370, 373, 375, 376, 381, 383, 385, 388], "accomplish": [2, 194, 373], "anoth": [2, 3, 8, 67, 80, 87, 103, 106, 107, 108, 111, 123, 129, 141, 149, 150, 152, 180, 183, 224, 263, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 364, 365, 369, 371, 372, 374, 375, 380, 381, 382, 383, 388], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 64, 144, 194, 278, 283, 284, 291, 300, 336, 366, 373, 384, 385, 387], "docstr": [2, 37, 103, 107, 123, 129, 192, 373, 374], "extens": [2, 42, 45, 50, 51, 88, 366, 385], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 125, 129, 182, 184, 192, 214, 217, 221, 257, 277, 286, 295, 363, 366, 370, 376, 380, 385], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 103, 107, 123, 129, 149, 152, 190, 192, 202, 217, 219, 221, 223, 262, 263, 267, 286, 370, 374, 380, 381, 382, 388], "happi": 2, "concaten": [2, 8, 14, 15, 21, 35, 36, 67, 144, 145, 162, 183, 221, 224, 269, 369, 370, 374, 381, 382, 383, 385, 388], "schedul": [2, 4, 7, 47, 342, 371, 383], "transformedenv": [2, 3, 11, 37, 103, 104, 107, 123, 129, 137, 138, 141, 144, 147, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 164, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 183, 190, 192, 219, 223, 261, 329, 369, 370, 371, 372, 373, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "stepcount": [2, 37, 103, 107, 117, 118, 123, 129, 130, 131, 183, 192, 369, 370, 371, 372, 373, 378, 381, 382, 387], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 93, 103, 104, 107, 109, 123, 129, 137, 140, 141, 144, 147, 148, 153, 159, 160, 162, 164, 169, 170, 171, 174, 176, 179, 180, 181, 183, 184, 190, 192, 219, 223, 261, 327, 329, 356, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 384, 385, 387, 388], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 144, 171, 362, 376, 385], "cartpol": [2, 3, 11, 30, 37, 48, 101, 102, 103, 107, 123, 129, 140, 141, 144, 174, 179, 190, 192, 261, 327, 370, 372, 374, 376, 377, 378, 385, 388], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 63, 65, 93, 103, 104, 106, 107, 108, 112, 113, 120, 123, 129, 140, 141, 144, 147, 154, 159, 160, 162, 169, 171, 174, 176, 178, 179, 180, 181, 183, 190, 192, 219, 223, 261, 304, 318, 319, 320, 321, 323, 324, 325, 326, 327, 364, 370, 372, 373, 374, 375, 376, 377, 378, 383, 385, 387, 388], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 99, 100, 103, 107, 112, 113, 119, 123, 124, 125, 129, 137, 138, 141, 144, 149, 152, 160, 168, 171, 193, 203, 214, 226, 239, 241, 250, 256, 263, 264, 278, 281, 283, 296, 298, 300, 301, 356, 364, 369, 370, 371, 372, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 387, 388], "8": [2, 3, 6, 7, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 87, 88, 99, 100, 101, 102, 103, 107, 123, 129, 137, 140, 179, 204, 205, 207, 208, 216, 224, 251, 252, 253, 263, 266, 269, 291, 368, 369, 370, 371, 372, 374, 376, 381, 382, 383, 384, 385, 386, 387, 388], "traj_kei": [2, 80, 87, 88, 385], "truncated_kei": [2, 80, 87, 88, 171, 178], "strict_length": [2, 61, 67, 80, 87, 88, 329], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 37, 42, 45, 48, 51, 52, 74, 75, 79, 80, 87, 88, 95, 103, 107, 123, 129, 166, 171, 174, 184, 188, 192, 218, 222, 233, 239, 257, 261, 263, 265, 266, 267, 309, 310, 311, 312, 337, 349, 369, 370, 371, 372, 374, 375, 376, 377, 378, 381, 382, 383, 385, 387, 388], "enumer": [2, 14, 15, 16, 21, 30, 37, 45, 48, 51, 88, 103, 107, 123, 129, 192, 302, 365, 369, 370, 371, 372, 378, 381, 385, 387], "break": [2, 5, 14, 15, 16, 21, 37, 45, 51, 61, 64, 65, 67, 68, 69, 70, 80, 87, 88, 93, 103, 107, 123, 129, 141, 144, 171, 190, 192, 329, 370, 376, 378, 385, 387], "step_count": [2, 14, 15, 16, 37, 103, 107, 112, 113, 123, 129, 178, 192, 371, 372, 373, 378, 387], "32": [2, 22, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 127, 128, 130, 131, 204, 205, 206, 207, 208, 210, 211, 216, 224, 229, 230, 234, 235, 237, 238, 247, 307, 327, 369, 370, 372, 374, 375, 381, 383, 384, 385, 387, 388], "33": [2, 27, 37, 82, 103, 107, 123, 129, 192, 204, 205, 224, 370, 371, 382, 383], "34": [2, 204, 205, 224, 368, 370, 381, 383, 386, 387], "35": [2, 204, 205, 224, 369, 370, 383, 384], "36": [2, 370, 372, 383, 384], "37": [2, 143, 370, 371, 372, 383, 384], "38": [2, 7, 370, 371, 372, 383], "39": [2, 65, 112, 113, 369, 370, 383, 384], "40": [2, 112, 113, 368, 369, 370, 371, 381, 382, 383, 386, 388], "41": [2, 370, 377, 383], "11": [2, 10, 23, 29, 40, 54, 74, 75, 79, 88, 95, 104, 137, 182, 192, 203, 226, 368, 369, 370, 371, 372, 381, 382, 383, 385, 386], "12": [2, 10, 68, 74, 75, 88, 95, 112, 113, 123, 127, 128, 129, 192, 369, 370, 371, 381, 383, 385], "13": [2, 5, 12, 87, 88, 126, 189, 192, 368, 369, 370, 371, 377, 382, 383, 384, 385, 386], "14": [2, 6, 12, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88, 103, 107, 123, 129, 162, 192, 368, 369, 370, 371, 372, 381, 383, 384, 385, 386], "15": [2, 23, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 103, 107, 123, 129, 192, 255, 262, 287, 368, 369, 370, 371, 378, 381, 383, 385, 386], "16": [2, 3, 37, 68, 80, 88, 99, 100, 103, 107, 112, 113, 123, 129, 144, 192, 369, 370, 372, 381, 383, 385, 387], "17": [2, 11, 68, 88, 107, 123, 137, 192, 369, 370, 371, 383, 384], "could": [2, 3, 4, 6, 23, 370, 371, 377, 381, 382, 384, 388], "sai": [2, 37, 103, 107, 123, 129, 192, 229, 381, 384, 388], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 27, 29, 33, 36, 40, 41, 43, 46, 76, 80, 87, 88, 103, 106, 107, 108, 111, 123, 129, 149, 152, 167, 174, 264, 370, 371, 372, 381, 382, 383], "handl": [2, 3, 21, 37, 103, 107, 123, 129, 189, 190, 192, 223, 224, 346, 358, 359, 369, 370, 371, 373, 375, 382, 385], "suggest": [2, 307, 369, 382], "serialenv": [2, 3, 103, 107, 123, 180, 192, 261, 362, 387, 388], "squeez": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 140, 141, 144, 177, 179, 204, 205, 242, 243, 369, 383, 385], "6": [2, 3, 7, 14, 15, 16, 17, 23, 37, 45, 61, 68, 69, 80, 88, 101, 102, 107, 123, 127, 128, 137, 140, 162, 164, 179, 204, 205, 207, 208, 209, 212, 216, 218, 224, 229, 230, 234, 244, 261, 263, 271, 368, 370, 376, 381, 382, 383, 385, 386, 387], "5": [2, 3, 14, 15, 23, 25, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 82, 87, 88, 93, 103, 104, 107, 112, 113, 117, 118, 120, 123, 127, 128, 129, 130, 131, 137, 140, 141, 143, 171, 178, 179, 192, 203, 204, 205, 207, 208, 213, 214, 215, 216, 217, 220, 221, 224, 226, 229, 230, 234, 239, 245, 246, 255, 256, 261, 264, 270, 292, 295, 297, 300, 301, 327, 364, 368, 369, 370, 374, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388], "7": [2, 3, 6, 10, 29, 37, 40, 42, 45, 50, 80, 88, 103, 107, 117, 118, 123, 129, 137, 140, 179, 203, 204, 205, 208, 224, 226, 229, 315, 368, 369, 370, 376, 381, 382, 383, 385, 386, 387], "9": [2, 3, 7, 23, 37, 42, 45, 50, 68, 69, 80, 88, 93, 101, 102, 116, 124, 125, 137, 140, 179, 190, 192, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 302, 307, 365, 368, 369, 370, 371, 373, 376, 380, 381, 382, 383, 384, 385, 386], "18": [2, 68, 88, 127, 128, 130, 131, 192, 230, 368, 369, 370, 372, 381, 382, 383, 386], "19": [2, 68, 87, 88, 93, 192, 368, 369, 370, 371, 372, 376, 383, 384, 386], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 64, 123, 129, 183, 185, 230, 365, 366, 369, 370, 382, 385, 387], "congruent": 2, "custom": [2, 3, 5, 37, 103, 107, 123, 129, 186, 192, 229, 230, 270, 286, 295, 302, 360, 364, 369, 370, 371, 372, 374, 375, 377, 381, 382], "name": [2, 3, 6, 7, 12, 16, 37, 41, 43, 46, 54, 61, 64, 66, 69, 70, 99, 101, 103, 107, 112, 116, 117, 118, 120, 123, 124, 125, 126, 129, 130, 131, 132, 151, 154, 169, 174, 175, 178, 184, 186, 189, 192, 202, 219, 223, 256, 264, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 309, 311, 312, 313, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 366, 369, 370, 371, 372, 375, 377, 381, 382, 383, 388], "randomcroptensordict": [2, 369], "unlik": [2, 86, 107, 117, 118, 130, 131, 261, 286, 295, 329, 370, 374, 376, 387], "stop": [2, 3, 16, 21, 47, 69, 80, 87, 88, 103, 107, 123, 129, 371, 376, 381, 382, 387, 388], "signal": [2, 3, 14, 15, 16, 17, 23, 61, 63, 65, 67, 68, 69, 80, 87, 88, 93, 107, 117, 118, 130, 131, 144, 153, 178, 181, 202, 365, 369, 371, 381, 382, 385, 388], "disk": [2, 3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 346, 366, 369, 370, 372, 376, 377, 385], "dump": [2, 3, 11, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 91, 95, 327, 328, 329, 377, 378, 381], "load": [2, 6, 7, 14, 15, 16, 17, 30, 37, 41, 42, 43, 45, 46, 47, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 90, 91, 95, 96, 102, 103, 107, 123, 129, 136, 190, 192, 360, 366, 369, 371, 385], "json": 2, "metadata": [2, 61, 63, 300, 371, 373, 375, 376, 381, 382, 388], "anticip": [2, 149, 152], "compli": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 67], "back": [2, 24, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 53, 55, 56, 63, 189, 194, 250, 256, 257, 263, 264, 265, 266, 267, 371, 381, 382, 383, 385], "exact": [2, 3, 23, 123, 221], "statu": [2, 3, 103], "prioriti": [2, 4, 42, 50, 51, 74, 75, 76, 79, 80, 89, 91, 95, 280, 281, 283, 284, 285, 286, 291, 296, 298, 300, 301, 307, 366, 369, 370, 385], "heap": 2, "under": [2, 3, 4, 21, 37, 47, 61, 63, 64, 65, 67, 68, 69, 101, 102, 103, 106, 107, 108, 109, 123, 126, 129, 192, 250, 256, 257, 263, 264, 265, 266, 267, 293, 309, 310, 311, 312, 313, 329, 365, 369, 370, 374, 381, 383, 388], "hood": [2, 21, 61, 103, 107, 123, 129, 383], "naiv": [2, 186, 373], "just": [2, 3, 4, 12, 91, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 129, 140, 147, 202, 230, 337, 364, 366, 369, 370, 371, 372, 373, 374, 376, 381, 382, 383, 385, 387, 388], "public": [2, 66, 90, 166, 188], "serializ": 2, "consum": [2, 86, 88, 261, 370, 371, 376, 382, 385], "much": [2, 8, 11, 14, 15, 17, 42, 50, 67, 79, 80, 123, 129, 292, 295, 371, 373, 377, 381, 382, 383, 385, 388], "duplic": [2, 37, 86, 103, 107, 123, 129, 192, 281, 286, 293, 307], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 30, 37, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 201, 206, 207, 208, 209, 210, 211, 214, 219, 223, 229, 234, 235, 237, 239, 240, 250, 251, 252, 253, 255, 256, 258, 259, 261, 262, 263, 264, 271, 272, 277, 278, 279, 280, 281, 283, 284, 285, 288, 291, 292, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 327, 329, 356, 364, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 387, 388], "plu": [2, 14, 15, 17, 47, 123, 129, 383], "enabl": [2, 7, 8, 63, 74, 75, 86, 95, 141, 219, 223, 261, 262, 327, 329, 342, 371, 373, 381, 382, 383, 385], "three": [2, 70, 364, 366, 371, 373, 374, 381, 382, 383, 385, 388], "flatstoragecheckpoint": 2, "discard": [2, 3, 54, 63, 65, 107, 186, 201, 328, 385, 388], "compress": 2, "At": [2, 225, 258, 370, 371, 372, 376, 380, 383, 384], "correct": [2, 4, 41, 43, 46, 103, 107, 123, 129, 160, 349, 371, 372], "addit": [2, 3, 4, 37, 63, 103, 107, 123, 129, 130, 148, 166, 180, 183, 184, 186, 188, 192, 217, 254, 255, 261, 266, 276, 293, 309, 327, 365, 369, 370, 373, 381, 382, 385], "nestedstoragecheckpoint": 2, "represent": [2, 33, 34, 37, 103, 107, 123, 129, 166, 186, 188, 192, 369, 383, 384, 388], "appar": [2, 3, 339], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 71, 72, 78, 103, 106, 107, 108, 123, 129, 137, 147, 151, 198, 211, 214, 229, 235, 239, 250, 254, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 274, 281, 283, 284, 285, 300, 301, 307, 364, 370, 371, 372, 373, 374, 375, 381, 382, 383, 387, 388], "assumpt": [2, 3, 383, 385], "accur": [2, 7, 63, 69, 370, 383, 385], "truncat": [2, 3, 14, 15, 16, 17, 30, 32, 37, 38, 44, 48, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 87, 88, 101, 102, 103, 106, 107, 108, 117, 118, 123, 124, 125, 129, 130, 131, 137, 153, 154, 161, 168, 171, 178, 184, 192, 202, 219, 223, 246, 261, 315, 369, 371, 372, 373, 374, 376, 377, 380, 381, 384, 385, 387, 388], "marl": [2, 116, 132, 144, 181, 229, 373, 381, 382], "extra": [2, 10, 37, 103, 107, 123, 129, 144, 190, 192, 201, 336, 364, 371, 372, 385], "fail": [2, 7, 22, 27, 33, 123, 138, 194], "concret": [2, 369, 371], "set_se": [2, 3, 14, 15, 16, 17, 21, 30, 37, 48, 99, 100, 103, 107, 112, 113, 119, 123, 129, 140, 162, 169, 174, 179, 181, 184, 192, 376, 378, 383, 387, 388], "manual_se": [2, 3, 30, 42, 45, 48, 50, 51, 64, 68, 69, 87, 88, 99, 100, 103, 107, 123, 129, 138, 140, 151, 162, 171, 174, 179, 181, 192, 227, 228, 236, 250, 257, 258, 259, 262, 270, 277, 278, 280, 284, 291, 298, 376, 378, 381, 382, 383, 387, 388], "200": [2, 14, 15, 16, 21, 30, 37, 48, 61, 103, 106, 107, 108, 123, 129, 130, 131, 171, 192, 207, 208, 215, 240, 241, 327, 329, 369, 372, 376, 378, 383, 385], "22": [2, 67, 87, 88, 189, 369, 370, 372, 381, 383, 384], "rb_test": 2, "_storag": [2, 384, 385], "max_siz": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 89, 93, 95, 371, 376], "102": [2, 383], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 41, 43, 46, 120, 211, 227, 228, 229, 276, 327, 369, 371, 381, 382], "state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 129, 184, 190, 192, 298, 360, 366, 369, 370, 388], "load_state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 129, 184, 190, 192, 298, 366, 369], "drawback": 2, "struggl": 2, "big": [2, 41, 43, 46, 371, 376, 385, 388], "sequenti": [2, 9, 37, 103, 107, 123, 129, 143, 160, 192, 268, 269, 274, 295, 300, 364, 371, 372, 374, 382, 383, 384, 388], "known": [2, 3, 5, 7, 8, 107, 316, 317, 369, 370, 373], "seamless": [2, 224], "integr": [2, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 210, 219, 223, 226, 266, 364, 373, 374, 376, 381, 382, 383, 384], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 369, 370, 375], "essenti": [2, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 370, 373, 381, 383, 385], "understand": [2, 3, 8, 369, 370, 373, 374, 381, 382], "purpos": [2, 3, 7, 11, 103, 107, 123, 129, 144, 217, 277, 279, 292, 295, 297, 356, 369, 371, 372, 375, 377, 381, 382, 384, 388], "guid": [2, 11, 124, 125, 127, 128, 179, 363, 369, 382], "explan": [2, 37, 103, 107, 123, 129, 192], "effect": [2, 3, 27, 37, 42, 45, 50, 51, 61, 67, 80, 82, 85, 87, 88, 103, 107, 123, 129, 140, 144, 184, 192, 346, 369, 374, 381, 385, 388], "realm": [2, 374], "As": [2, 3, 4, 37, 61, 103, 107, 116, 123, 124, 125, 129, 171, 267, 309, 364, 369, 370, 371, 372, 373, 375, 376, 381, 382, 383, 384, 385, 387, 388], "practition": 2, "often": [2, 3, 8, 290, 346, 369, 370, 373, 375, 383, 385, 388], "encount": [2, 4, 67, 261, 363, 370, 374, 383], "situat": [2, 117, 118], "sometim": [2, 3, 372, 388], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 64, 65, 68, 69, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 117, 118, 121, 122, 126, 130, 131, 217, 218, 219, 221, 222, 223, 226, 251, 252, 253, 293, 296, 366, 370], "immedi": [2, 27, 33, 37, 103, 107, 123, 129, 192, 308, 381, 382], "199": [2, 383], "info": [2, 3, 14, 15, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 85, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 186, 189, 191, 336, 373, 378, 381, 382, 385], "glanc": [2, 373], "seem": [2, 369, 372, 373], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 47, 103, 107, 116, 123, 124, 125, 129, 144, 167, 217, 219, 221, 223, 247, 251, 252, 253, 272, 364, 370, 372, 373, 381], "less": [2, 120, 248, 358, 359, 365, 371, 372, 385, 387], "omit": [2, 341, 371, 375, 383, 385], "proper": [2, 3, 4, 6, 7, 309, 310, 311, 312, 370, 371, 381, 382, 385, 388], "imposs": [2, 3, 93, 194, 277, 279, 292, 295, 297], "determin": [2, 42, 50, 63, 79, 80, 103, 107, 123, 129, 130, 131, 166, 188, 229, 262, 370, 374, 381, 382], "complic": [2, 383, 385, 388], "matter": [2, 11, 28, 376], "inconsist": [2, 388], "miss": [2, 3, 4, 6, 7, 12, 27, 37, 103, 107, 123, 129, 184, 192, 201, 268, 269, 298, 363, 369, 372], "behavior": [2, 4, 37, 103, 107, 123, 129, 184, 192, 284, 291, 300, 372, 382, 383], "primari": [2, 376], "elimin": [2, 3, 373], "upon": [2, 3, 8, 381, 383], "canon": 2, "definit": [2, 40, 89, 229], "markov": [2, 3, 373, 388], "decis": [2, 3, 206, 237, 255, 282, 294, 372, 373, 374, 381, 382, 385, 388], "mdp": [2, 373, 383], "context": [2, 3, 5, 8, 37, 103, 104, 107, 122, 123, 129, 180, 185, 192, 230, 231, 255, 305, 306, 309, 310, 311, 312, 314, 322, 329, 342, 364, 365, 369, 370, 371, 381, 382, 383, 384, 385], "condit": [2, 54, 179, 190, 256, 257, 261, 264, 265, 276, 369, 381, 383, 385], "complet": [2, 7, 9, 86, 103, 106, 107, 108, 123, 129, 144, 178, 363, 365, 369, 371, 373, 380], "termin": [2, 3, 7, 14, 15, 16, 17, 30, 32, 37, 38, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 101, 102, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 137, 140, 141, 153, 168, 192, 202, 203, 219, 223, 226, 261, 268, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 369, 370, 371, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "reward": [2, 3, 14, 15, 16, 28, 30, 32, 37, 38, 41, 46, 47, 48, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 137, 138, 141, 142, 147, 148, 149, 150, 152, 153, 154, 160, 164, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 183, 184, 185, 187, 188, 190, 192, 198, 201, 203, 219, 226, 255, 261, 272, 277, 278, 280, 281, 283, 284, 285, 288, 291, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 339, 340, 342, 344, 360, 365, 366, 369, 370, 371, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "imit": [2, 3], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 52, 53, 55, 56, 67, 103, 104, 107, 110, 113, 123, 129, 192, 204, 205, 224, 230, 365, 366, 369, 370, 371, 372, 373, 381, 382, 383, 385], "stateless": [2, 3, 103, 107, 123, 129, 141, 183, 293, 327, 369, 373, 383, 388], "simul": [2, 3, 5, 7, 8, 99, 100, 109, 112, 113, 126, 130, 131, 135, 203, 226, 364, 369, 371, 373, 377, 381, 382], "furthermor": [2, 381, 382], "certain": [2, 4, 18, 19, 20, 21, 37, 54, 103, 107, 123, 129, 136, 157, 178, 184, 192, 218, 222, 258, 292, 364, 369, 370, 371, 378, 381, 382, 388], "composit": [2, 3, 27, 33, 85, 91, 98, 103, 107, 123, 129, 263, 371, 374, 383], "accommod": [2, 3, 373, 374], "uniform": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 53, 55, 56, 79, 80, 381], "unambigu": 2, "distinguish": [2, 117, 118, 130, 131], "happen": [2, 3, 103, 107, 123, 129, 254, 370, 375, 376, 377, 384, 388], "limit": [2, 47, 103, 107, 119, 123, 129, 144, 160, 277, 279, 292, 295, 297, 369, 370, 372, 381, 382, 383], "everyth": [2, 370, 371, 372, 377, 378], "belong": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 67, 189, 190, 364, 369, 376, 382], "rule": [2, 123, 149, 152, 267, 364, 371], "field": [2, 3, 14, 15, 16, 17, 23, 27, 30, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 141, 149, 152, 153, 154, 164, 168, 169, 171, 175, 178, 180, 184, 192, 201, 203, 213, 214, 219, 223, 226, 238, 239, 247, 250, 251, 252, 253, 255, 256, 257, 261, 262, 263, 264, 265, 266, 269, 271, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 350, 363, 364, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "taken": [2, 3, 103, 107, 123, 129, 137, 170, 227, 228, 259, 365, 369, 371, 372, 374, 381, 382, 383], "is_shar": [2, 3, 14, 15, 16, 23, 27, 30, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 141, 149, 152, 153, 154, 164, 168, 169, 171, 175, 178, 180, 190, 201, 203, 213, 214, 219, 223, 226, 238, 239, 247, 250, 251, 252, 253, 255, 256, 257, 261, 262, 263, 264, 265, 266, 269, 271, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 364, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "brought": [2, 371, 372, 374], "step_mdp": [2, 3, 103, 107, 123, 129, 219, 223, 362, 372, 373, 383, 387, 388], "count": [2, 3, 37, 103, 104, 178, 262, 342, 346, 349, 369, 370, 371, 372, 385, 388], "trigger": [2, 7], "partial": [2, 3, 103, 107, 123, 129, 143, 144, 179, 180, 181, 263, 346, 372], "turn": [2, 18, 19, 20, 21, 41, 43, 46, 158, 185, 189, 256, 327, 342, 365, 369, 370, 372, 374, 383, 384], "retain": 2, "regard": [2, 63, 69, 214, 257, 277, 286, 295, 369, 371, 383], "copi": [2, 3, 12, 18, 19, 20, 21, 37, 41, 43, 46, 47, 54, 67, 103, 107, 123, 129, 140, 169, 179, 184, 190, 192, 201, 219, 223, 255, 293, 298, 327, 365, 369, 370, 372, 373, 381, 385], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 329, 365, 377, 385, 388], "eas": [2, 3, 381, 382], "flat": [2, 93], "manner": [2, 107, 166, 186, 364, 369, 370, 371, 376, 380, 383, 385], "ted2flat": [2, 30, 362], "flat2t": [2, 362], "unflatten": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 141, 261], "deseri": [2, 3, 30], "posit": [2, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 107, 123, 129, 156, 157, 177, 178, 181, 184, 185, 192, 233, 298, 365, 371, 381, 382, 383, 385], "both": [2, 3, 7, 37, 42, 45, 50, 51, 67, 103, 104, 106, 107, 117, 118, 123, 124, 125, 129, 137, 144, 169, 184, 192, 202, 204, 205, 219, 222, 223, 224, 229, 230, 251, 252, 253, 257, 265, 277, 279, 280, 284, 285, 291, 292, 293, 295, 296, 297, 298, 300, 301, 342, 364, 369, 371, 373, 375, 381, 382, 383, 384, 385, 388], "mark": [2, 3, 16, 69, 103, 107, 123, 129, 219, 223, 309, 311, 312, 376, 385], "identifi": [2, 44], "abov": [2, 3, 7, 37, 103, 107, 123, 129, 192, 220, 245, 246, 276, 365, 366, 369, 371, 373, 374, 381, 382, 383, 388], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 101, 102, 103, 106, 107, 108, 109, 113, 117, 118, 119, 122, 123, 124, 125, 126, 129, 130, 131, 141, 142, 144, 147, 148, 149, 150, 152, 154, 160, 162, 166, 168, 169, 174, 175, 178, 181, 183, 184, 186, 188, 189, 192, 194, 202, 204, 205, 206, 207, 208, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 229, 230, 233, 239, 248, 250, 251, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 327, 329, 337, 364, 365, 369, 370, 371, 372, 373, 374, 377, 380, 381, 382, 383, 384, 387, 388], "typic": [2, 3, 4, 8, 37, 103, 107, 123, 129, 153, 179, 192, 263, 278, 293, 295, 298, 364, 365, 366, 371, 373, 375, 376, 381, 382, 383], "adjust": [2, 11, 369, 381, 382, 383], "grumodul": [2, 143, 274], "lstmmodul": [2, 372], "skip": [2, 3, 37, 61, 103, 107, 123, 129, 157, 184, 192, 194, 263, 267, 293, 298, 309, 310, 311, 312, 328, 329, 339, 342, 369, 370, 383], "accumul": [2, 8, 192], "upcom": [2, 293, 318, 319, 320, 321, 323, 324, 325, 326, 369], "popular": [2, 3, 364, 372, 375, 382], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 192, 362, 370], "shift": [2, 30, 32, 37, 38, 48, 71, 72, 78, 273, 309, 310, 311, 312, 371], "approxim": [2, 382, 388], "would": [2, 3, 11, 37, 47, 103, 107, 123, 129, 192, 217, 219, 221, 223, 224, 229, 366, 370, 371, 372, 373, 375, 376, 383, 385, 387, 388], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 144, 211, 237, 277, 282, 294, 295, 337, 360, 371, 372, 382, 385], "2x": 2, "small": [2, 186, 369, 371, 381, 382, 388], "clearer": [2, 374], "lazi": [2, 33, 34, 58, 59, 103, 107, 123, 129, 130, 131, 166, 186, 204, 229, 231, 268, 269, 369, 370, 374, 376, 380, 385, 388], "certainli": 2, "benefici": 2, "welcom": [2, 373], "wrapper": [2, 3, 12, 17, 41, 43, 46, 47, 50, 51, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 189, 193, 233, 248, 254, 255, 259, 261, 262, 267, 272, 309, 334, 335, 336, 360, 362, 371, 372, 373, 381, 382, 384, 388], "around": [2, 5, 7, 17, 50, 51, 119, 193, 261, 267, 309, 369, 370, 382, 388], "selecttransform": [2, 103, 107, 123, 129], "excludetransform": [2, 68, 175, 385], "promptli": 2, "virtual": [2, 3, 106], "instal": [2, 3, 5, 10, 18, 19, 20, 63, 66, 103, 107, 123, 124, 125, 127, 128, 129, 331, 346, 363, 369, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 388], "respons": [2, 3, 8, 80, 87, 103, 107, 123, 129, 346, 375, 376, 388], "d4rl": [2, 63, 69], "repositori": [2, 7, 64, 65, 66, 69, 131, 381, 382], "wheel": [2, 371], "publish": 2, "openml": [2, 66, 122], "scikit": [2, 66, 122], "panda": [2, 66], "raw": [2, 3, 4, 47, 220, 245, 246, 370, 376, 383], "go": [2, 3, 7, 116, 123, 167, 171, 255, 315, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "natur": [2, 3, 369, 372, 374, 375, 376, 385], "modifi": [2, 3, 7, 8, 27, 33, 37, 54, 103, 107, 123, 129, 141, 148, 156, 160, 166, 180, 183, 184, 186, 188, 192, 255, 262, 266, 349, 369, 370, 371, 373, 381, 382, 383], "fly": [2, 190, 292, 365, 371, 383, 385, 388], "least": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 80, 87, 103, 147, 377, 388], "pre": [2, 7, 22, 37, 54, 67, 75, 103, 107, 123, 129, 166, 186, 188, 192, 388], "appli": [2, 3, 4, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 138, 140, 141, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 165, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 183, 184, 186, 187, 189, 190, 192, 217, 221, 245, 256, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 294, 295, 296, 297, 298, 300, 301, 309, 327, 341, 366, 369, 370, 371, 376, 381, 383, 387, 388], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 64, 80, 87, 93, 111, 112, 113, 123, 124, 125, 147, 174, 204, 205, 215, 229, 230, 258, 261, 331, 346, 358, 359, 369, 370, 371, 372, 374, 375, 378, 381, 382, 385, 387], "pipelin": [2, 3, 7, 364, 371], "replac": [2, 3, 6, 7, 27, 33, 37, 41, 43, 46, 61, 67, 80, 87, 88, 140, 151, 153, 201, 258, 364, 381, 385], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 82, 103, 107, 123, 129, 140, 171, 184, 192, 254, 259, 261, 262, 344, 366, 370, 371, 372, 374, 377, 383, 385, 388], "produc": [2, 137, 140, 141, 204, 205, 224, 230, 236, 251, 253, 255, 329, 371, 372, 373, 374, 376, 385, 388], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 71, 86, 103, 107, 123, 124, 125, 129, 184, 192, 298, 371], "download": [2, 7, 10, 61, 63, 64, 65, 67, 68, 69, 111, 166, 188, 329, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 370, 381, 382, 383], "robosetexperiencereplai": [2, 87, 88], "fk1": [2, 68], "v4": [2, 68, 107, 123, 137, 170, 318, 319, 320, 321, 323, 324, 325, 326, 369, 371, 384, 388], "expert": [2, 68], "fk1_microopenrandom_v2d": [2, 68], "func": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 191], "obs_norm": 2, "norm": [2, 4, 8, 99, 100, 346, 369, 370, 371, 381, 382, 383], "num_work": [2, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 120, 123, 129, 369, 370], "os": [2, 43, 54, 70, 370], "cpu_count": [2, 43, 54, 70], "num_chunk": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69], "1000": [2, 4, 45, 79, 87, 88, 103, 107, 123, 129, 144, 190, 258, 262, 263, 267, 290, 369, 370, 371, 372, 374, 376, 378, 384, 385], "mp_start_method": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 123, 129, 370, 387], "fork": [2, 5, 61, 62, 63, 64, 65, 66, 67, 68, 69, 369, 370, 371, 372, 381, 382, 384, 387], "recreat": [2, 383], "customari": [2, 364], "moreov": [2, 3], "fine": [2, 3, 24, 80, 87, 103, 107, 123, 129, 141, 160, 376, 384], "grain": [2, 3, 80, 87, 103, 107, 123, 129, 141], "nomenclatur": 2, "compact": [2, 48, 71, 72, 78], "propos": [2, 144, 153, 225, 290, 299, 364, 372, 385], "replaybufferensembl": [2, 61, 85, 91, 98], "primit": [2, 3, 4, 67, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301], "individu": [2, 4, 18, 19, 20, 21, 37, 54, 80, 82, 93, 103, 107, 117, 118, 123, 129, 192, 369, 382], "dummi": [2, 3, 327, 369, 376, 388], "semant": [2, 33, 34, 106, 108, 364], "ident": [2, 3, 14, 15, 16, 37, 41, 43, 46, 87, 103, 106, 107, 108, 120, 123, 129, 153, 229, 230, 309, 310, 311, 312, 358, 359, 370, 373, 381, 382], "another_kei": [2, 82], "renam": [2, 41, 43, 46, 82, 169, 171, 201, 369], "resiz": [2, 3, 69, 82, 144, 370, 372, 373, 385, 388], "imag": [2, 3, 4, 7, 11, 67, 146, 166, 182, 188, 224, 327, 329, 369, 370, 373, 377, 382, 384, 388], "comops": 2, "totensorimag": [2, 3, 69, 82, 144, 170, 370, 372, 385, 387, 388], "renametransform": [2, 82, 103, 107, 123, 129], "rb0": [2, 82], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 129, 134, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 156, 158, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 179, 181, 182, 183, 184, 186, 188, 190, 203, 213, 219, 223, 226, 238, 247, 248, 250, 251, 252, 253, 255, 256, 261, 263, 264, 266, 267, 269, 270, 271, 274, 277, 278, 279, 280, 281, 283, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 328, 329, 356, 364, 369, 370, 371, 372, 374, 375, 378, 380, 381, 382, 383, 384, 385, 387, 388], "pixel": [2, 3, 7, 27, 69, 82, 101, 102, 106, 108, 109, 126, 144, 146, 153, 156, 158, 162, 164, 166, 170, 182, 186, 188, 207, 234, 235, 327, 329, 364, 369, 370, 372, 377, 381, 384, 385, 387, 388], "rb1": [2, 82], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 129, 134, 142, 143, 144, 145, 146, 147, 149, 150, 152, 156, 158, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 179, 181, 182, 183, 186, 188, 190, 203, 213, 214, 219, 223, 226, 238, 239, 247, 248, 250, 251, 252, 253, 255, 257, 261, 263, 264, 265, 266, 267, 269, 270, 271, 274, 277, 278, 279, 284, 285, 291, 292, 295, 296, 297, 298, 300, 307, 309, 310, 311, 312, 327, 329, 342, 356, 364, 369, 370, 371, 372, 374, 378, 380, 381, 382, 383, 384, 385, 387, 388], "pixels33": [2, 82], "data0": [2, 82], "244": [2, 82, 166, 188, 383], "data1": [2, 82], "_": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 104, 111, 130, 131, 145, 149, 151, 152, 160, 162, 169, 182, 190, 192, 250, 266, 271, 276, 277, 278, 280, 284, 285, 291, 295, 296, 298, 300, 301, 309, 310, 311, 312, 331, 369, 370, 371, 372, 378, 381, 382, 383, 385, 387], "rang": [2, 3, 4, 8, 12, 29, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 103, 104, 107, 117, 118, 123, 129, 171, 182, 190, 192, 218, 222, 292, 300, 301, 365, 366, 369, 371, 372, 375, 376, 378, 381, 382, 383, 385, 387], "parent": [2, 3, 21, 27, 32, 33, 53, 62, 82, 91, 98, 103, 107, 123, 129, 137, 141, 144, 145, 148, 150, 153, 156, 157, 162, 166, 174, 178, 179, 180, 181, 183, 185, 186, 192, 219, 223, 251, 274, 293, 295, 313, 327, 329, 369, 376, 383, 387, 388], "basic": [2, 119, 364, 371, 375, 376, 378, 381, 388], "properti": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 129, 140, 183, 184, 190, 192, 212, 220, 231, 236, 244, 245, 246, 261, 293, 298, 374, 376, 383, 385], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 55, 56, 90, 96, 103, 107, 117, 118, 119, 122, 123, 124, 125, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 201, 202, 204, 205, 207, 208, 209, 210, 213, 214, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 232, 239, 240, 241, 242, 243, 245, 248, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 340, 344, 349, 356, 364, 365, 366, 369, 370, 371, 372, 373, 381, 382, 383, 387, 388], "send": [2, 3, 8, 336, 387], "receiv": [2, 3, 37, 47, 103, 107, 123, 129, 183, 184, 192, 224, 315, 365, 369, 371, 375, 380, 383], "spawn": [2, 3, 4, 18, 22, 111, 120, 123, 129, 370, 381, 382], "check_env_spec": [2, 3, 107, 123, 137, 168, 327, 362, 371, 381, 382, 383], "saniti": [2, 3, 7, 194, 371], "utmost": 2, "commonli": [2, 80, 87, 88, 388], "emploi": [2, 232], "languag": [2, 24, 47], "scarc": 2, "address": [2, 385], "subdomain": 2, "facilit": [2, 3, 7, 165, 166, 180, 186, 188, 251, 252, 253, 364, 369, 372, 374, 383], "extern": [2, 3, 149, 152, 381, 388], "token": [2, 43, 44, 47, 52, 54, 70], "dm": [3, 369, 388], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 41, 42, 43, 45, 46, 50, 51, 54, 67, 84, 90, 93, 94, 96, 97, 99, 100, 103, 107, 111, 112, 113, 119, 120, 121, 123, 129, 130, 171, 180, 186, 187, 229, 251, 260, 277, 278, 280, 281, 283, 284, 285, 287, 291, 295, 296, 297, 298, 300, 301, 336, 346, 364, 365, 366, 369, 370, 372, 373, 374, 375, 377, 381, 382, 383, 385, 388], "goal": [3, 4, 61, 62, 63, 64, 65, 66, 67, 68, 69, 179, 369, 370, 371, 372, 382, 383], "abl": [3, 116, 124, 125, 369, 371, 372, 374, 380, 381, 382, 383, 385, 387], "experi": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 79, 80, 194, 331, 332, 333, 334, 335, 336, 363, 370, 371, 376, 377, 381, 382, 385], "box": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 106, 108], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 103, 104, 107, 117, 118, 123, 124, 125, 127, 128, 129, 144, 147, 153, 159, 160, 162, 164, 169, 171, 174, 180, 183, 189, 190, 192, 327, 356, 369, 370, 371, 372, 380, 382, 384, 385, 387, 388], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 99, 100, 103, 107, 119, 123, 129, 148, 151, 153, 160, 166, 180, 183, 184, 186, 188, 192, 203, 204, 205, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 233, 238, 239, 247, 250, 251, 252, 253, 255, 256, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 271, 274, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 356, 364, 365, 369, 370, 371, 372, 374, 375, 378, 380, 381, 382, 383, 384, 387], "organis": [3, 68, 103, 107, 123, 129, 184, 370], "arbitrari": [3, 40, 45, 103, 107, 123, 129, 140, 364, 369, 370, 383, 385], "structur": [3, 7, 41, 42, 43, 45, 46, 47, 50, 51, 54, 93, 103, 107, 123, 129, 149, 152, 202, 229, 262, 309, 310, 311, 312, 313, 362, 365, 369, 371, 372, 373, 376, 381, 382, 383, 384], "attribut": [3, 4, 24, 28, 30, 37, 41, 43, 46, 48, 54, 67, 103, 106, 107, 108, 123, 129, 137, 153, 166, 186, 190, 192, 219, 223, 267, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 369, 372, 383], "live": [3, 13, 14, 15, 16, 17, 19, 20, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 129, 153, 192], "actual": [3, 4, 7, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 103, 107, 123, 129, 189, 349, 365, 369, 371, 381, 382, 383], "retriev": [3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 103, 106, 107, 108, 123, 129, 145, 150, 153, 162, 201, 203, 204, 226, 261, 263, 267, 270, 274, 277, 278, 279, 281, 292, 295, 296, 298, 300, 301, 307, 309, 310, 311, 312, 360, 366, 370, 371, 374, 383, 388], "care": [3, 8, 103, 107, 123, 129, 183, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 329, 369, 371, 381, 382, 383, 385], "parametr": [3, 232, 267, 278, 284, 291, 298, 369, 371], "hardwar": 3, "observation_spec": [3, 103, 107, 119, 123, 129, 138, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 156, 158, 159, 160, 162, 164, 166, 168, 170, 174, 176, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 192, 203, 219, 223, 226, 350, 356, 369, 371, 375, 380, 381, 382, 383, 388], "compositespec": [3, 33, 34, 58, 103, 105, 107, 119, 123, 129, 138, 141, 149, 150, 151, 152, 154, 160, 168, 169, 175, 178, 180, 183, 192, 198, 202, 203, 226, 250, 254, 263, 269, 270, 274, 362, 369, 371, 372, 381, 382, 383, 388], "pair": [3, 37, 41, 43, 46, 63, 101, 102, 103, 107, 123, 129, 171, 180, 219, 251, 263, 267, 293, 309, 310, 311, 312, 313, 364, 365, 369, 370, 371, 374, 375, 380, 383, 388], "state_spec": [3, 103, 107, 119, 123, 129, 138, 203, 226, 383, 388], "reward_spec": [3, 103, 107, 119, 123, 129, 138, 141, 142, 147, 148, 149, 150, 152, 168, 172, 173, 174, 176, 183, 185, 192, 203, 226, 371, 381, 382, 383, 388], "done_spec": [3, 103, 107, 123, 129, 149, 150, 152, 153, 168, 183, 192, 202, 381, 382, 383, 388], "flag": [3, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 129, 130, 131, 262, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 364, 381, 382, 383, 384], "input_spec": [3, 103, 107, 119, 123, 129, 137, 141, 148, 149, 150, 151, 162, 164, 168, 169, 174, 175, 178, 179, 180, 183, 184, 185, 187, 192, 371, 383], "full_action_spec": [3, 103, 107, 123, 129, 137, 203, 226, 371, 381, 382], "full_state_spec": [3, 103, 107, 123, 129, 137, 203, 226, 371], "lock": [3, 27, 33, 41, 43, 46, 103, 107, 123, 129, 141, 180, 190, 383], "output_spec": [3, 103, 107, 123, 129, 141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 184, 192, 383], "full_observation_spec": [3, 103, 107, 123, 129, 203, 226], "full_reward_spec": [3, 103, 107, 123, 129, 141, 150, 168, 381, 382], "full_done_spec": [3, 103, 107, 123, 129, 141, 150, 168, 202, 381, 382], "carri": [3, 21, 54, 103, 107, 123, 129, 180, 293, 370, 372, 381, 382, 383, 385], "nontensorspec": [3, 362], "importantli": [3, 263, 267], "action_s": 3, "help": [3, 4, 37, 103, 107, 123, 129, 153, 192, 277, 279, 292, 295, 297, 363, 365, 369, 370, 371, 372, 381, 382], "With": [3, 112, 113, 116, 179, 366, 370, 380, 381, 382, 385, 388], "necessarili": [3, 103, 107, 123, 129, 388], "present": [3, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 106, 107, 123, 129, 154, 171, 175, 180, 184, 192, 201, 202, 206, 207, 208, 209, 210, 216, 219, 221, 223, 232, 237, 261, 262, 266, 267, 268, 269, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 360, 366, 369, 378, 380, 381, 382, 385, 387], "0s": [3, 61, 67, 180, 372], "step_and_maybe_reset": [3, 103, 107, 123, 129, 373], "done_kei": [3, 23, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 129, 140, 144, 153, 171, 178, 192, 201, 381, 382], "assign": [3, 4, 14, 15, 17, 37, 41, 43, 46, 103, 107, 123, 129, 184, 192, 280, 281, 283, 298, 371, 374, 381, 382, 385], "_reset": [3, 103, 107, 119, 123, 129, 138, 140, 141, 144, 149, 152, 168, 202, 203, 226, 381], "data_": [3, 103, 107, 123, 129], "append": [3, 8, 11, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 123, 129, 140, 147, 148, 171, 180, 184, 189, 218, 219, 222, 223, 256, 264, 369, 370, 371, 372, 381, 382, 383, 384, 385, 387], "seed": [3, 14, 15, 16, 17, 21, 68, 103, 107, 119, 123, 124, 125, 129, 130, 131, 138, 141, 149, 152, 168, 184, 194, 327, 346, 381], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 200, 206, 215, 234, 241, 250, 259, 263, 266, 267, 270, 278, 293, 342, 364, 369, 370, 372, 374, 375, 378, 381, 383, 388], "preced": [3, 37, 372], "risk": [3, 167], "overlap": [3, 50, 93], "reproduc": [3, 144, 194, 369, 371, 382], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 44, 47, 52, 54, 70, 74, 75, 76, 79, 80, 95, 103, 107, 123, 129, 151, 172, 178, 179, 181, 244, 245, 246, 270, 278, 284, 285, 291, 293, 294, 298, 329, 343, 369, 370, 371, 372, 374, 381, 382, 385], "max_step": [3, 11, 93, 103, 107, 117, 118, 119, 123, 129, 130, 131, 178, 192, 327, 373, 374, 375, 377, 378, 381, 382, 387, 388], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 47, 99, 100, 103, 107, 119, 123, 129, 143, 160, 214, 219, 223, 226, 238, 239, 247, 248, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 278, 280, 284, 285, 287, 288, 289, 291, 293, 296, 298, 300, 301, 307, 308, 309, 310, 311, 312, 342, 356, 362, 369, 371, 372, 375, 378, 380, 381, 382, 383, 384, 388], "trail": [3, 190], "treat": [3, 37, 374, 375], "figur": [3, 369, 371, 372, 382, 383, 388], "brief": [3, 371, 373, 375, 385], "deliveri": 3, "design": [3, 37, 40, 85, 91, 98, 103, 107, 117, 118, 123, 129, 137, 144, 167, 184, 192, 255, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 369, 370, 371, 372, 373, 374, 375, 380, 381, 382, 383, 385, 388], "metaclass": 3, "everi": [3, 8, 27, 33, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 89, 103, 107, 123, 129, 178, 179, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 346, 366, 369, 370, 371, 372, 373, 374, 381, 382, 383], "flank": [3, 372], "dual": 3, "strictli": [3, 8, 37, 103, 107, 123, 129, 184, 192, 298, 369, 371], "refer": [3, 7, 8, 9, 11, 21, 24, 37, 41, 43, 46, 47, 103, 106, 107, 108, 123, 129, 184, 190, 192, 203, 214, 215, 226, 227, 228, 229, 234, 235, 240, 241, 257, 277, 286, 287, 288, 289, 295, 298, 309, 314, 322, 368, 369, 371, 374, 375, 376, 377, 381, 382, 385, 388], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 79, 80, 103, 107, 123, 129, 162, 166, 171, 173, 186, 188, 190, 192, 201, 205, 212, 227, 228, 229, 230, 231, 232, 236, 238, 244, 245, 246, 247, 266, 283, 285, 290, 296, 299, 322, 340, 342, 343, 351, 352, 354, 356, 357, 358, 359, 360], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 117, 118, 132, 369], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 67, 80, 87, 88, 362], "adjac": [3, 23, 156, 261], "reli": [3, 11, 23, 180, 217, 218, 219, 221, 222, 223, 277, 365, 369, 371, 374, 376, 383, 388], "junction": 3, "inittrack": [3, 219, 223, 261, 369, 372], "tutori": [3, 361, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 388], "scratch": [3, 8, 370, 383], "gym3": 3, "envpool": [3, 120, 121], "interfac": [3, 110, 122, 224, 231, 364, 369, 371, 377, 383, 385], "simultan": [3, 20, 120, 121, 123, 129, 383], "advantag": [3, 8, 216, 277, 279, 292, 295, 297, 309, 310, 311, 312, 313, 314, 316, 318, 320, 322, 323, 325, 365, 366, 369, 370, 371, 372, 382, 383, 388], "scale": [3, 4, 24, 63, 103, 107, 123, 129, 144, 160, 162, 173, 179, 182, 190, 215, 220, 233, 240, 241, 245, 246, 251, 252, 253, 263, 267, 269, 277, 278, 291, 295, 296, 297, 298, 344, 350, 360, 364, 369, 370, 371, 372, 374, 382, 387], "varieti": [3, 11], "inherit": [3, 103, 107, 123, 129, 225, 293, 366, 371, 381, 382], "Of": [3, 7, 363, 383, 388], "cours": [3, 4, 363, 383, 388], "from_pixel": [3, 11, 99, 100, 101, 102, 106, 108, 109, 112, 113, 126, 144, 170, 327, 329, 369, 370, 372, 373, 377, 378, 384, 385, 387, 388], "81": [3, 369, 370, 382, 383, 384], "simpli": [3, 6, 41, 43, 46, 54, 91, 93, 98, 154, 175, 189, 293, 364, 365, 369, 371, 375, 381, 382, 388], "d": [3, 42, 45, 50, 51, 64, 66, 68, 69, 70, 79, 80, 217, 221, 263, 267, 387], "privat": [3, 103, 107, 123, 129, 189, 383, 388], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 35, 36, 40, 41, 43, 46, 61, 88, 93, 279, 292, 295, 337, 339, 342, 346, 349, 350, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 47, 82, 85, 162, 173, 220, 231, 240, 245, 246, 307, 364, 374, 375, 381, 383, 385], "inner": [3, 103, 107, 123, 129, 151, 366, 370, 371, 382, 388], "logic": [3, 381], "nevertheless": [3, 371, 373, 385], "kept": [3, 23, 86, 88, 151, 175, 183, 194, 201, 220, 245, 246, 375, 381], "mind": [3, 61, 67, 80, 87, 88, 103, 107, 123, 129, 381, 382], "desig": 3, "wherev": 3, "expos": [3, 126, 149, 152, 268, 370], "modif": [3, 5, 27, 33, 37, 103, 107, 123, 129, 156, 192, 202, 293, 371, 383], "lost": [3, 8, 189], "eras": [3, 80, 87, 103, 107, 123, 129, 184], "intern": [3, 367], "face": [3, 5, 8, 9, 373, 388], "NOT": [3, 71, 72, 78, 167], "outsid": [3, 16, 377, 381, 382, 383], "right": [3, 6, 7, 23, 47, 80, 87, 370, 371, 382, 383, 388], "preliminari": 3, "warranti": 3, "affect": [3, 8, 37, 103, 107, 123, 129, 183, 184, 192, 194, 309, 310, 311, 312, 381], "preclud": 3, "presenc": [3, 375], "annihil": 3, "reason": [3, 4, 8, 37, 67, 103, 107, 123, 124, 125, 129, 166, 186, 192, 223, 365, 369, 370, 371, 375, 376, 381, 383, 385], "advanc": [3, 21, 42, 45, 50, 51, 107, 373, 376, 385], "explicitli": [3, 4, 71, 72, 78, 140, 263, 370, 372, 376, 381, 382, 385], "superse": 3, "pettingzoowrapp": [3, 362], "group": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 103, 107, 116, 117, 118, 123, 124, 125, 129, 130, 131, 132, 364, 370, 374, 376, 382, 385], "associ": [3, 37, 41, 43, 46, 103, 107, 123, 129, 192, 240, 360, 369, 385], "environemtn": 3, "__not__": [3, 41, 43, 46, 263], "constrain": [3, 160, 219, 223, 295], "li": 3, "fact": [3, 7, 8, 369, 371, 373, 381, 382, 383, 384, 385, 388], "predict": [3, 37, 47, 213, 215, 225, 226, 255, 272, 277, 279, 283, 286, 288, 289, 292, 295, 297, 308, 364, 369, 370, 375], "know": [3, 4, 9, 42, 45, 50, 51, 106, 108, 254, 296, 342, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 385], "meaning": 3, "perfectli": [3, 366, 369, 383], "meaningless": 3, "val": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 375, 387], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 55, 56, 61, 103, 107, 123, 129, 140, 360, 364], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 145, 149, 151, 152, 153, 154, 156, 160, 161, 162, 164, 166, 168, 169, 171, 173, 174, 175, 178, 180, 182, 184, 185, 186, 188, 190, 192, 194, 201, 202, 203, 204, 205, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 245, 246, 250, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 304, 307, 309, 310, 311, 312, 315, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 336, 339, 340, 342, 343, 344, 346, 360, 370, 371, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "500": [3, 369, 370, 383, 387, 388], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 61, 64, 123, 129], "bottleneck": [3, 8, 80, 87, 88], "great": [3, 7, 8, 381, 387], "speedup": [3, 8, 381, 388], "precis": [3, 149, 152, 201, 218, 222, 369, 371], "misspecifi": 3, "caus": [3, 7, 8, 74, 75, 95, 103, 107, 111, 123, 129, 167, 388], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 129, 132, 144, 155, 161, 171, 179, 180, 181, 184, 192, 194, 254, 258, 259, 262, 298, 369, 371, 381, 382, 385, 388], "mismatch": [3, 370], "subprocess": [3, 14, 15, 17, 104, 123, 129], "multithreadedenv": [3, 362], "underneath": 3, "higher": [3, 4, 80, 147, 270, 369, 370, 371, 381, 385, 388], "flexibl": [3, 9, 120, 302, 365, 366, 369, 385, 388], "cover": [3, 106, 108, 363, 371, 373, 376, 377, 383, 387], "type": [3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 69, 70, 82, 103, 107, 116, 119, 122, 123, 124, 125, 129, 141, 148, 149, 150, 153, 154, 160, 166, 168, 169, 175, 178, 180, 183, 184, 186, 188, 190, 192, 196, 200, 204, 205, 224, 229, 230, 232, 238, 247, 254, 256, 263, 266, 267, 274, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 303, 307, 315, 327, 358, 362, 364, 369, 370, 371, 376, 381, 382, 383, 385, 388], "atari": [3, 4, 61, 144, 329, 377, 388], "classic": [3, 119, 125, 370], "benchmark_batched_env": 3, "seamlessli": [3, 383], "infrastructur": [3, 381, 382], "act": [3, 4, 87, 88, 124, 125, 184, 213, 230, 278, 280, 291, 296, 298, 300, 301, 372, 381, 382, 385], "world": [3, 5, 119, 272, 288, 377, 381, 382, 383, 388], "paradigm": [3, 17, 382], "decpodp": 3, "game": [3, 4, 5, 61, 117, 118, 329, 377], "thank": [3, 369, 373], "carrier": [3, 371, 372, 373, 385], "particular": [3, 37, 54, 63, 64, 103, 107, 123, 129, 184, 192, 365, 366, 370, 372, 373, 380, 382, 385], "thu": [3, 292, 382], "let": [3, 6, 7, 11, 23, 37, 42, 45, 50, 51, 52, 103, 107, 123, 124, 125, 129, 144, 192, 219, 223, 229, 230, 256, 342, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "vma": [3, 130, 131, 327, 381, 382], "robot": [3, 5, 7, 67, 166, 186, 188, 382], "vmasenv": [3, 327, 362, 381, 382], "balanc": [3, 101, 102, 369, 370], "num_env": [3, 21, 106, 110, 121, 130, 131, 327, 381, 382], "n_agent": [3, 130, 131, 229, 230, 238, 247, 307, 327, 381, 382], "ground_rew": 3, "pos_rew": [3, 382], "style": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69], "relat": [3, 4, 10, 42, 123, 156, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 370, 378, 383], "vari": [3, 106, 108, 109, 124, 125, 126, 130, 167, 382], "creation": [3, 123, 129, 388], "info_spec": [3, 123], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 40, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 138, 168, 202, 281, 284, 285, 307, 362, 381, 382, 388], "simpl": [3, 9, 37, 40, 103, 107, 123, 129, 192, 207, 261, 267, 281, 283, 293, 297, 309, 364, 365, 369, 370, 371, 373, 374, 375, 381, 382, 385, 388], "prefix": [3, 23, 37, 41, 43, 46, 54, 103, 107, 123, 129, 184, 192, 263, 293, 298, 328, 372, 375, 388], "exactli": [3, 37, 103, 107, 109, 123, 129, 184, 192, 217, 221, 298, 369, 372, 376, 381, 382], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 103, 107, 123, 129, 137, 138, 151, 193, 201, 203, 225, 226, 254, 258, 259, 261, 262, 381, 382], "reward_kei": [3, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 129, 192, 201, 203, 226, 340, 344, 381, 382], "set_kei": [3, 153, 277, 279, 281, 284, 285, 286, 291, 292, 293, 295, 296, 297, 298, 307, 313, 369, 381, 382], "awai": [3, 371, 373, 381, 382], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 129, 178, 267], "full": [3, 103, 107, 123, 129, 219, 223, 257, 337, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "autoresettransform": 3, "invalid": [3, 37, 93, 103, 107, 123, 129, 132, 192, 227, 228], "nan": [3, 140, 189], "auto_reset": [3, 103, 107, 123, 129, 140, 192, 383], "auto_reset_replac": [3, 140], "placehold": [3, 109, 153, 184], "set_gym_backend": [3, 103, 106, 107, 123, 129, 133, 140, 362, 373], "autoresettinggymenv": [3, 140], "_step": [3, 103, 107, 123, 129, 138, 140, 141, 149, 152, 156, 168, 169], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 103, 107, 119, 123, 129, 138, 140, 141, 148, 149, 152, 166, 168, 180, 183, 184, 186, 188, 192, 203, 214, 226, 238, 247, 254, 258, 263, 266, 271, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 366, 369, 383, 387, 388], "super": [3, 119, 138, 140, 141, 149, 152, 168, 203, 214, 226, 271, 278, 280, 285, 291, 296, 298, 300, 301, 369, 383, 387, 388], "td_reset": [3, 140], "exclud": [3, 8, 63, 68, 103, 107, 123, 129, 140, 144, 154, 201, 238, 381, 382, 385], "r": [3, 4, 37, 137, 138, 140, 147, 162, 176, 190, 218, 267, 276, 308, 327, 364, 370, 383, 388], "break_when_any_don": [3, 103, 107, 123, 129, 140, 192, 261, 382], "3633e": [3, 140], "02": [3, 103, 107, 123, 129, 140, 368, 369, 370, 371, 378, 381, 383, 384, 386], "4877e": [3, 140], "01": [3, 140, 162, 262, 273, 279, 292, 295, 368, 369, 370, 372, 382, 383, 384, 386], "2849e": [3, 140], "7584e": [3, 140], "6609e": [3, 140], "6166e": [3, 140], "8366e": [3, 140], "2761e": [3, 140], "5685e": [3, 140], "4102e": [3, 140], "8111e": [3, 140], "9959e": [3, 140], "0865e": [3, 140], "5644e": [3, 140], "2119e": [3, 140], "2542e": [3, 140], "03": [3, 103, 107, 123, 129, 140, 162, 368, 369, 370, 381, 383, 384, 386], "9952e": [3, 140], "4059e": [3, 140], "2094e": [3, 140], "9009e": [3, 140], "5140e": [3, 140], "3554e": [3, 140], "2920e": [3, 140], "7893e": [3, 140], "6429e": [3, 140], "3057e": [3, 140], "2867e": [3, 140], "6963e": [3, 140], "3818e": [3, 140], "2576e": [3, 140], "2679e": [3, 140], "1640e": [3, 140], "00": [3, 99, 100, 140, 368, 369, 370, 371, 372, 381, 382, 383, 384, 386], "6972e": [3, 140], "0212e": [3, 140], "5959e": [3, 140], "4637e": [3, 140], "3121e": [3, 140], "2168e": [3, 140], "5232e": [3, 140], "7704e": [3, 140], "7457e": [3, 140], "4127e": [3, 140], "1064e": [3, 140], "0854e": [3, 140], "5712e": [3, 140], "2189e": [3, 140], "5235e": [3, 140], "8289e": [3, 140], "0009e": [3, 140], "0257e": [3, 140], "8893e": [3, 140], "5872e": [3, 140], "9405e": [3, 140], "7766e": [3, 140], "0403e": [3, 140], "0626e": [3, 140], "2959e": [3, 140], "7263e": [3, 140], "2775e": [3, 140], "9564e": [3, 140], "0411e": [3, 140], "6769e": [3, 140], "6354e": [3, 140], "8698e": [3, 140], "1765e": [3, 140], "6292e": [3, 140], "5375e": [3, 140], "1820e": [3, 140], "7023e": [3, 140], "5836e": [3, 140], "9016e": [3, 140], "4826e": [3, 140], "6191e": [3, 140], "6387e": [3, 140], "8667e": [3, 140], "2056e": [3, 140], "1147e": [3, 140], "5991e": [3, 140], "0278e": [3, 140], "5219e": [3, 140], "3067e": [3, 140], "6617e": [3, 140], "3322e": [3, 140], "2629e": [3, 140], "4599e": [3, 140], "7298e": [3, 140], "5848e": [3, 140], "0148e": [3, 140], "5745e": [3, 140], "6982e": [3, 140], "7877e": [3, 140], "3527e": [3, 140], "7285e": [3, 140], "6668e": [3, 140], "0583e": [3, 140], "6956e": [3, 140], "3962e": [3, 140], "9845e": [3, 140], "5015e": [3, 140], "5903e": [3, 140], "9993e": [3, 140], "9418e": [3, 140], "0196e": [3, 140], "6557e": [3, 140], "2109e": [3, 140], "8997e": [3, 140], "1507e": [3, 140], "7363e": [3, 140], "0310e": [3, 140], "9574e": [3, 140], "8980e": [3, 140], "0090e": [3, 140], "forecast": 3, "awar": [3, 7, 74, 75, 76, 89, 91, 95, 370, 372], "detect": [3, 69], "return_contigu": [3, 103, 107, 123, 129, 194, 380], "unboundedcontinuoustensorspec": [3, 103, 107, 119, 123, 129, 138, 141, 149, 152, 168, 180, 198, 203, 226, 250, 266, 269, 271, 274, 297, 362, 371, 372, 381, 382, 383, 388], "boundedtensorspec": [3, 22, 27, 103, 107, 123, 129, 193, 258, 259, 262, 263, 270, 277, 278, 280, 291, 295, 296, 298, 300, 301, 362, 371, 381, 382, 383, 387, 388], "binarydiscretetensorspec": [3, 138, 281, 284, 285, 307, 362], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 93, 103, 105, 107, 123, 129, 138, 140, 141, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 159, 160, 165, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 183, 184, 189, 190, 192, 201, 202, 203, 219, 223, 225, 226, 254, 255, 257, 258, 261, 262, 265, 266, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 346, 369, 381, 383], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 26, 28, 29, 37, 40, 42, 47, 50, 55, 67, 79, 80, 82, 103, 107, 123, 129, 137, 140, 144, 148, 149, 152, 160, 162, 166, 171, 172, 173, 179, 180, 182, 183, 184, 186, 188, 190, 192, 212, 215, 217, 220, 221, 224, 227, 228, 231, 232, 240, 241, 244, 246, 254, 266, 270, 273, 275, 276, 277, 278, 279, 283, 284, 285, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 308, 314, 315, 316, 317, 318, 319, 320, 321, 322, 344, 369, 370, 385, 388], "_set_se": [3, 138, 141, 149, 152, 168, 383], "lazystackedtensordict": [3, 33, 61, 103, 107, 119, 123, 129, 380], "float32": [3, 14, 15, 16, 27, 30, 41, 42, 43, 46, 47, 48, 50, 51, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 127, 128, 129, 130, 131, 137, 141, 149, 152, 153, 154, 162, 164, 168, 169, 171, 175, 178, 180, 182, 198, 201, 203, 213, 214, 219, 223, 226, 238, 239, 247, 250, 251, 252, 253, 255, 256, 261, 262, 263, 264, 265, 266, 269, 271, 274, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 307, 364, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388], "exclusive_field": [3, 61, 380], "stack_dim": [3, 61, 380], "dramat": 3, "carefulli": [3, 381, 382, 388], "against": [3, 5, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 129, 192, 194, 250, 256, 257, 263, 264, 265, 266, 267, 371, 381, 382], "plain": [3, 8, 373], "larg": [3, 4, 29, 41, 43, 46, 149, 152, 186, 277, 279, 292, 295, 297, 370, 371, 381, 382, 385], "expens": [3, 80, 87, 88, 327, 385], "absent": [3, 27, 33, 63, 103, 107, 123, 129, 184], "torchvis": [3, 11, 166, 188, 331, 381, 387, 388], "base_env": [3, 100, 103, 107, 108, 113, 123, 129, 137, 138, 141, 147, 149, 151, 152, 160, 164, 168, 170, 176, 178, 180, 181, 184, 192, 329, 369, 370, 371, 381, 384, 387, 388], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 129, 136, 139, 141, 148, 153, 180, 184, 192, 204, 205, 224, 276, 327, 351, 352, 358, 359, 360, 370, 385], "bring": [3, 371, 373, 388], "signific": [3, 5, 8, 371, 388], "kind": [3, 45, 53, 201, 375, 381, 385], "consult": 3, "interest": [3, 263, 267, 364, 370, 371, 373, 382, 383, 388], "resize_par": 3, "easi": [3, 5, 11, 61, 66, 101, 102, 103, 107, 112, 113, 123, 129, 254, 258, 259, 262, 364, 365, 369, 370, 371, 382, 384, 385, 388], "graph": [3, 4, 8, 99, 100, 112, 113, 305, 306, 369, 383], "revers": [3, 221], "order": [3, 11, 16, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 88, 103, 107, 123, 129, 145, 149, 152, 164, 184, 192, 250, 256, 266, 268, 269, 271, 277, 278, 280, 284, 285, 291, 295, 296, 297, 298, 300, 301, 370, 381, 382], "chain": [3, 41, 42, 43, 45, 46, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 148, 151, 204, 205, 269, 388], "invers": [3, 4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 144, 149, 152, 154, 162, 171, 192, 275, 284, 291, 383], "in_keys_inv": [3, 134, 147, 149, 150, 152, 162, 163, 164, 168, 169, 171, 176, 183, 369, 380, 383, 388], "append_transform": [3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 134, 137, 143, 166, 180, 184, 186, 190, 327, 369, 372, 381, 383, 385, 387, 388], "doubletofloat": [3, 369, 371, 380], "float64": [3, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 101, 102, 103, 107, 117, 118, 123, 129, 137, 148, 149, 152, 166, 180, 183, 184, 186, 188, 192, 266, 380], "regist": [3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 106, 107, 108, 123, 129, 149, 152, 153, 174, 184, 192, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 327, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 366, 369, 371, 373, 385], "manipul": [3, 4, 8, 101, 102, 166, 186], "third_transform": 3, "unexpect": [3, 37, 103, 107, 123, 129, 192, 388], "behviour": 3, "fortun": [3, 372, 373, 374, 377], "alreadi": [3, 8, 12, 37, 41, 43, 46, 54, 61, 103, 107, 123, 129, 180, 192, 202, 267, 309, 310, 311, 312, 369, 371, 377, 381, 382], "chang": [3, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 74, 75, 76, 80, 86, 87, 89, 91, 95, 103, 107, 123, 129, 141, 148, 149, 150, 152, 154, 160, 168, 169, 175, 178, 183, 184, 190, 192, 221, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 365, 369, 372, 381, 382, 383, 384, 385, 388], "catfram": [3, 261, 370], "hold": [3, 305, 306, 383, 385], "notic": [3, 93, 144, 371, 378, 383], "parenthood": 3, "henc": [3, 42, 167, 202, 229, 364, 369, 371, 381, 382, 383], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 123, 129, 327, 383], "discret": [3, 25, 29, 35, 36, 40, 56, 103, 106, 107, 108, 117, 118, 123, 124, 125, 129, 130, 131, 137, 151, 236, 239, 283, 284, 285, 286, 364, 370, 374, 381, 382, 383, 388], "might": [3, 41, 43, 44, 46, 333, 363, 369, 373, 388], "action_mask": [3, 112, 113, 124, 125, 127, 128, 138], "unavail": [3, 124, 125], "probabl": [3, 4, 8, 47, 82, 85, 212, 214, 217, 219, 221, 223, 224, 227, 228, 236, 245, 246, 258, 263, 267, 364, 370, 374, 387], "categor": [3, 29, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 124, 125, 126, 130, 131, 137, 138, 153, 214, 236, 239, 256, 257, 263, 264, 265, 281, 284, 285, 307, 372], "probabilistictensordictmodul": [3, 160, 267, 268, 387], "tensordictsequenti": [3, 219, 223, 256, 258, 261, 268, 274, 364, 369, 370, 372, 374, 378, 380, 381, 384, 387], "maskedcategor": [3, 228, 362], "linear": [3, 14, 15, 16, 17, 21, 37, 99, 100, 103, 107, 119, 123, 129, 148, 160, 166, 180, 183, 184, 186, 188, 192, 203, 204, 205, 207, 208, 209, 210, 214, 216, 224, 226, 229, 230, 231, 232, 233, 239, 240, 241, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 266, 269, 271, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 356, 364, 370, 380, 384, 387], "in_feat": 3, "out_feat": 3, "logit": [3, 43, 47, 213, 227, 228, 236, 257, 263, 284, 285, 364], "dist": [3, 10, 227, 228, 236, 374], "distribution_class": [3, 160, 251, 252, 253, 255, 263, 267, 269, 277, 278, 284, 285, 291, 295, 296, 297, 298, 364, 369, 371, 374, 381, 382, 387], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 65, 99, 100, 103, 107, 108, 112, 113, 118, 121, 123, 124, 125, 129, 131, 192, 194, 219, 223, 248, 251, 252, 253, 254, 259, 261, 262, 264, 272, 293, 307, 364, 369, 370, 371, 372, 375, 378, 381, 382, 388], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 138, 167, 192], "enviorn": [3, 117, 124, 125, 130, 131], "itself": [3, 37, 103, 107, 123, 129, 133, 140, 192, 293, 300, 371, 373], "ey": 3, "report": [3, 99, 100, 112, 113, 377], "foremost": 3, "callback": [3, 103, 107, 123, 129, 382], "ad": [3, 4, 16, 23, 37, 41, 42, 43, 45, 46, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 103, 107, 123, 129, 174, 184, 192, 231, 232, 262, 277, 279, 281, 286, 292, 295, 298, 307, 370, 372, 374, 381, 385, 388], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 51, 79, 80, 86, 174, 190, 192, 261, 262, 334, 339, 370, 372, 373, 376, 382, 383, 385], "tensordictrecord": [3, 362], "videorecord": [3, 11, 327, 362, 371, 377, 378, 381], "csvlogger": [3, 11, 327, 329, 362, 370, 377, 378, 381], "wandblogg": [3, 362, 377], "tensorboardlogg": [3, 356, 362, 377], "tag": [3, 7, 11, 327, 329, 331, 334, 360, 377, 378, 381], "mp4": [3, 327, 329, 331, 378, 381], "video_format": [3, 327, 329, 331, 378, 381], "whc": 3, "cwh": 3, "exp": [3, 233, 276], "al": [3, 24, 106, 108, 153, 164, 203, 388], "pong": [3, 61, 121, 164, 388], "v5": [3, 106, 108, 121, 153, 164, 388], "cach": [3, 41, 43, 54, 61, 63, 64, 65, 67, 68, 69, 70, 80, 87, 103, 107, 123, 129, 140, 149, 152, 166, 184, 188, 201, 338, 384], "grow": 3, "until": [3, 7, 21, 181, 183, 192, 371, 372, 378, 381, 382], "dumpi": 3, "tediou": [3, 373], "workspac": [3, 103, 107, 123, 129], "pixelrendertransform": [3, 362, 381], "stream": [3, 67], "alik": [3, 327], "envcreat": [3, 16, 22, 123, 129, 327, 356, 357, 360, 362, 369, 370, 387, 388], "render_mod": [3, 327, 383], "rgb_arrai": [3, 327, 381, 382, 383], "uncom": [3, 377], "line": [3, 7, 37, 61, 103, 107, 123, 129, 192, 370, 377, 381, 382, 388], "comment": [3, 366, 370, 387], "pixels_record": [3, 327], "close": [3, 16, 107, 120, 160, 277, 279, 292, 295, 327, 369, 370, 373, 380, 381, 383, 387], "mission": 3, "irrespect": [3, 266, 267], "dmcontrol": [3, 103, 107, 123, 129], "jumanji": [3, 103, 107, 112, 113, 123, 129], "special": [3, 362, 364, 369, 372, 388], "framework": [3, 4, 9, 22, 99, 100, 103, 107, 112, 113, 119, 123, 129, 217, 387, 388], "Its": [3, 37, 41, 43, 46, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 190, 192, 266, 313], "success": [3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 144, 183, 258, 300, 370, 376, 378, 383, 385, 387], "foundat": [3, 5, 124, 125, 371, 382], "inspir": [3, 383], "gone": [3, 4, 5, 261], "hard": [3, 7, 93, 101, 102, 123, 290, 370, 388], "prefer": [3, 14, 15, 17, 20, 23, 24, 42, 45, 50, 51, 167, 175, 295, 300, 343, 364, 371, 381, 382, 385], "maintain": [3, 5, 9, 28, 383], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 370, 371, 372, 376, 381, 382, 383, 385, 388], "decor": [3, 8, 12, 136, 293, 309, 310, 311, 312, 387], "relev": [3, 47, 309, 310, 311, 312, 313, 336, 383], "gym_backend": [3, 136, 362], "env1": [3, 380], "venv": 3, "python3": [3, 6, 7, 10, 388], "site": [3, 6, 7, 68, 136, 388], "env2": [3, 380], "_env": [3, 6, 106, 388], "classic_control": 3, "pendulumenv": [3, 383], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 115, 133], "handi": [3, 103, 107, 123, 129, 377], "side": [3, 4, 388], "v0": [3, 14, 15, 103, 107, 109, 112, 113, 114, 115, 123, 129, 148, 184, 190, 356, 388], "26": [3, 103, 107, 123, 129, 370, 381, 383, 384], "fun": [3, 12, 136, 371, 381, 382], "reveal": 4, "bug": [4, 387], "curv": 4, "exploit": [4, 374], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 160, 381, 382, 384], "coeffici": [4, 24, 28, 47, 160, 382], "bonu": [4, 277, 279, 292, 295], "beta": [4, 42, 50, 79, 80, 284, 291, 292, 369, 370, 385, 387], "reduc": [4, 6, 29, 93, 179, 245, 362, 370, 381], "downstream": [4, 369], "formul": [4, 381, 382], "ob": [4, 8, 23, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 87, 88, 93, 103, 107, 123, 129, 138, 140, 149, 150, 152, 162, 176, 182, 198, 201, 207, 208, 209, 210, 229, 230, 264, 271, 278, 280, 285, 291, 296, 298, 300, 301, 309, 310, 311, 312, 370, 380, 381, 383, 385, 387, 388], "rate": [4, 11, 61, 190, 308, 370, 371, 381, 382], "gradient": [4, 37, 103, 107, 123, 129, 184, 192, 220, 228, 232, 236, 245, 246, 277, 279, 280, 284, 285, 291, 292, 293, 295, 296, 297, 298, 300, 301, 308, 309, 310, 311, 312, 346, 369, 371, 381, 382, 383], "easier": [4, 364, 369], "local": [4, 7, 10, 16, 21, 37, 80, 87, 103, 107, 123, 129, 184, 192, 229, 230, 238, 247, 307, 334, 336, 377, 378, 381, 382], "optima": 4, "sens": [4, 41, 43, 46, 376, 383], "product": [4, 9, 217, 218, 221, 222, 358, 359], "sum": [4, 21, 36, 40, 93, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 126, 143, 174, 227, 228, 245, 247, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 294, 295, 296, 297, 298, 300, 301, 308, 315, 365, 369, 370, 371, 372, 375, 378, 381, 382, 383, 388], "stat": [4, 162, 190, 350, 360, 370, 371], "w": [4, 82, 144, 146, 170, 182, 217, 262, 329, 370, 372, 385], "yield": [4, 16, 21, 37, 103, 107, 123, 129, 192, 293, 369, 375], "insight": 4, "auxiliari": [4, 375], "credit": 4, "futur": [4, 23, 37, 41, 43, 46, 71, 72, 78, 103, 107, 123, 129, 166, 184, 188, 192, 224, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 363, 387], "past": [4, 261, 370, 385], "spars": [4, 372], "intermedi": [4, 14, 15, 143, 219, 223, 257, 369, 384], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 369], "discov": 4, "score": [4, 47], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 387], "select": [4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 117, 118, 124, 125, 130, 131, 138, 140, 141, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 165, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 183, 186, 187, 189, 190, 192, 193, 203, 219, 223, 256, 264, 345, 369, 373, 385], "fall": [4, 63], "explicit": [4, 12, 54, 82, 385], "mechan": [4, 37, 103, 107, 123, 129, 184, 192, 370, 375, 383], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 103, 107, 123, 129, 221, 284, 291, 371, 382], "addition": 4, "timestep": [4, 47, 63, 171, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 381, 382], "realli": 4, "huge": [4, 230, 372], "std": [4, 162, 190, 233, 237, 254, 369, 388], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 368, 372, 373, 375, 376, 377, 378, 379, 380, 384, 385, 386], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 107, 123, 129, 143, 162, 166, 180, 183, 184, 186, 191, 192, 203, 217, 218, 221, 222, 226, 231, 232, 254, 258, 259, 261, 262, 277, 278, 280, 281, 283, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 307, 360, 369, 370, 372, 373, 374, 376, 381, 383, 388], "estim": [4, 61, 80, 87, 88, 153, 160, 207, 245, 251, 252, 253, 277, 278, 279, 280, 281, 283, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "unseen": 4, "extrins": 4, "wrong": [4, 80, 87], "bonus": 4, "denser": 4, "prior": [4, 241, 288, 382], "freshli": 4, "drop": [4, 86, 88, 201], "meant": [4, 37, 119], "encourag": [4, 123, 369, 370, 385], "measur": [4, 74, 75, 95, 99, 100, 112, 113, 371, 376], "novelti": 4, "revisit": 4, "previous": [4, 371, 388], "diminish": 4, "decreas": [4, 24, 374], "ideal": [4, 162, 383], "down": [4, 14, 15, 16, 17, 372, 373], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 41, 43, 46, 370, 371, 372, 375, 376, 381, 382, 383, 387, 388], "distil": 4, "nois": [4, 191, 232, 249, 262, 296, 300, 301, 342, 360, 369, 381], "exploratori": [4, 277, 279, 292, 295], "misalign": 4, "trade": [4, 374], "unavoid": 4, "divers": [4, 123, 129], "bootstrap": [4, 286, 310, 316, 317, 369, 372], "noisi": [4, 231, 232, 249, 364], "unstabl": [4, 220, 245, 246], "inher": 4, "stochast": [4, 160, 215, 232, 234, 241, 278, 282, 284, 285, 291, 294, 296, 298, 364, 371, 374, 382], "enemi": 4, "pomdp": [4, 385], "loos": [4, 364, 370, 371], "nonexist": 4, "architectur": [4, 211, 375, 381, 382], "sequenc": [4, 14, 15, 16, 17, 24, 27, 33, 35, 36, 42, 44, 45, 47, 52, 54, 67, 70, 73, 82, 83, 85, 91, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 134, 142, 143, 144, 145, 146, 149, 151, 152, 156, 158, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 179, 181, 182, 183, 190, 204, 205, 212, 214, 217, 221, 224, 227, 228, 229, 230, 236, 239, 243, 255, 268, 269, 282, 328, 329, 341, 342, 343, 345, 346, 364, 369, 371, 372, 380, 381, 382, 388], "lstm": [4, 180, 222, 223, 233], "rel": [4, 82, 180, 212, 244, 369, 370, 381, 382, 385], "tend": 4, "stabl": [4, 9, 10, 122], "compens": 4, "descent": [4, 232], "minimum": [4, 123, 129, 172, 215, 233, 244, 245, 246, 270, 273, 276, 278, 285, 293, 294, 298, 337, 369, 371, 378, 381, 382], "manual": [4, 11, 18, 20, 21, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 108, 369, 372, 385], "deviat": [4, 162, 190, 203, 215, 226, 231, 232, 237, 254, 295, 300, 301, 369, 374, 382], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 80, 87, 140, 217, 218, 221, 222, 373, 374, 375, 376, 377, 378], "stabil": [4, 157, 277, 279, 292, 295, 297], "stage": [4, 369, 383], "never": [4, 14, 15, 17, 80, 376], "prevent": [4, 27, 33, 72, 190, 220, 245, 246, 277, 279, 292, 295, 297, 344, 377, 385], "entir": [4, 67, 103, 107, 123, 129, 229, 371, 373, 383, 385], "submit": [4, 106, 141, 363, 387], "system": [4, 5, 72, 371, 381, 382, 383], "adequ": [4, 194, 371, 381, 382], "infeas": 4, "allevi": [4, 364], "prune": 4, "fire": [4, 37, 103, 107, 123, 129, 192], "illeg": 4, "move": [4, 37, 69, 103, 107, 123, 129, 137, 148, 150, 166, 180, 183, 184, 186, 188, 190, 192, 201, 224, 266, 344, 369, 370, 372, 373, 387, 388], "chess": 4, "combin": [4, 31, 183, 300, 370, 377, 385], "grasp": 4, "top": [4, 93, 99, 100, 112, 113, 203, 226, 374], "wherein": 4, "cumul": [4, 174, 179, 203, 315, 371], "q": [4, 9, 103, 107, 123, 129, 207, 208, 209, 210, 213, 214, 216, 238, 239, 247, 253, 257, 264, 265, 278, 280, 281, 283, 284, 285, 286, 290, 291, 296, 298, 300, 301, 307, 362, 369, 375], "flow": [4, 369, 371, 381, 382, 383, 385], "reparameter": [4, 212, 228, 236], "soft": [4, 290, 298, 299, 381], "critic": [4, 8, 251, 260, 277, 279, 280, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 369, 375], "clip": [4, 47, 147, 172, 277, 279, 292, 295, 297, 300, 301, 346, 371, 382, 383], "oppos": [4, 54], "incorrect": 4, "thought": [4, 103, 107, 123, 129], "bound": [4, 21, 26, 27, 37, 41, 43, 46, 103, 107, 123, 129, 147, 161, 190, 192, 240, 241, 250, 256, 257, 262, 263, 264, 265, 266, 267, 270, 300, 301, 364, 369, 370, 371, 381, 388], "region": 4, "squash": [4, 372, 387], "tanh": [4, 204, 205, 217, 218, 220, 221, 222, 224, 230, 244, 245, 246, 270, 371, 374, 381, 382, 383, 384, 387], "prob": [4, 227, 228, 236, 371, 382], "rememb": [4, 381], "remap": 4, "origin": [4, 8, 41, 43, 46, 47, 111, 150, 151, 160, 166, 184, 188, 192, 217, 263, 266, 267, 290, 293, 295, 369, 380, 383, 388], "histor": 5, "ceas": 5, "farama": [5, 65, 114, 115, 124, 125, 371, 383], "best": [5, 9, 111, 219, 223, 381, 382, 385, 387], "gymwrapp": [5, 103, 107, 123, 129, 154, 175, 178, 189, 362, 371, 387, 388], "feel": [5, 363, 378, 387], "free": [5, 7, 149, 152, 277, 288, 295, 366, 371, 378, 382, 387], "gladli": 5, "prepar": [6, 32, 64, 371], "conda": [6, 7, 363], "cmake": 6, "activ": [6, 7, 9, 204, 205, 211, 215, 224, 229, 230, 279, 292, 295, 364, 383, 387], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 64, 363], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 109], "y": [6, 7, 45, 122, 216, 229, 248, 369, 382, 385], "facebookresearch": [6, 64, 109], "subdirectori": 6, "verbos": [6, 378], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 58, 103, 107, 123, 129, 168, 177, 192, 293, 381, 382, 387, 388], "command": [6, 7, 10, 371, 381, 382, 383, 388], "readm": [6, 7, 130], "md": [6, 7], "habitatenv": [6, 362], "_has_habitat": 6, "available_env": [6, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 388], "startswith": [6, 365, 369, 375], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 104, 293, 369], "env_nam": [6, 99, 101, 103, 106, 107, 109, 112, 114, 120, 123, 126, 129, 369, 371, 388], "llvmlite": 6, "config": [6, 7, 166, 188, 206, 211, 237, 350, 351, 352, 354, 357], "var": [6, 7, 37, 103, 107, 123, 129, 184, 192, 293, 298], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 256, 293], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 37, 103, 107, 123, 129, 184, 192, 293, 298, 385], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 103, 370, 378], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 63], "stand": [7, 31, 101, 102, 123, 129, 380, 383], "joint": [7, 370], "contact": [7, 44, 381], "engin": [7, 126, 383], "biomechan": 7, "graphic": 7, "anim": [7, 382], "area": 7, "demand": [7, 377, 388], "fast": [7, 9, 99, 100, 169, 201, 296, 369, 370, 371], "articul": 7, "acquir": [7, 371], "deepmind": [7, 8, 9, 67, 101, 102, 103, 107, 117, 118, 123, 129, 153, 371, 373], "whomev": 7, "licenc": 7, "incorpor": [7, 103, 107, 123, 129, 254, 258, 259, 262, 300, 372, 374, 383], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 363], "tip": [7, 363], "glfw": [7, 369], "osmesa": 7, "egl": 7, "advic": [7, 67, 388], "sudo": [7, 363], "apt": [7, 382], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 251, 252, 253], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 25, 29, 40, 142, 214, 239, 256, 257, 264, 265, 281, 284, 285, 307], "mkdir": 7, "earlier": [7, 369, 371, 372, 381, 382, 385], "roboti": 7, "html": [7, 14, 15, 120, 122], "wget": 7, "mujoco210": 7, "tar": [7, 64], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 123, 129], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 41, 43, 54, 70], "bin": [7, 214, 257, 364], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 210, 263, 267, 369, 371, 385], "nvidia": [7, 111], "older": [7, 12], "hack": [7, 369], "adatp": 7, "script": [7, 64, 194, 356, 360, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "unnot": [7, 167], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 72, 370, 385], "troubleshoot": 7, "gl": 7, "h": [7, 82, 144, 146, 170, 182, 217, 218, 219, 221, 222, 223, 226, 329, 370, 372, 385], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21], "directori": [7, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 74, 334, 336, 366, 369, 374, 377, 381], "devel": 7, "ubuntu": [7, 111], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 370, 372, 380], "libstdc": 7, "glibcxx_3": 7, "29": [7, 368, 369, 370, 371, 383, 385, 386], "compil": [7, 23, 37, 80, 87, 88, 103, 107, 123, 129, 192, 217, 218, 221, 222], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 189, 371, 380], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 33, 37, 103, 107, 123, 129, 161, 184, 192, 298, 388], "job": [7, 18, 19, 20, 22, 45, 385, 387], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 99, 100, 370, 372, 383, 384], "114": [7, 383], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 383], "offscreenopenglcontext": 7, "opengl": [7, 381, 382], "global": [7, 37, 103, 107, 123, 124, 125, 129, 192, 238, 247, 263, 267, 307, 366, 369, 381, 382], "cuda_visible_devic": 7, "id": [7, 23, 47, 80, 82, 87, 88, 103, 106, 107, 123, 129, 262, 296, 332, 336, 376, 385], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 381], "onscreen": 7, "101": [7, 383], "correctli": [7, 37, 103, 107, 123, 129, 192], "lgl": 7, "libegl": 7, "x11": [7, 382], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 366], "n_training_step": 8, "datapoint": [8, 54, 385], "n_data_per_train": 8, "no_grad": [8, 37, 103, 107, 123, 129, 160, 192, 217, 218, 221, 222, 309, 310, 311, 312, 371, 372, 382], "loss_fn": [8, 372, 375, 376, 387], "zero_grad": [8, 37, 103, 107, 123, 129, 192, 366, 369, 371, 372, 375, 378, 381, 382, 383], "backpropag": [8, 99, 100, 112, 113, 123, 277, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 307, 375, 382, 383], "differenti": [8, 54, 99, 100, 160, 300, 309, 310, 311, 312, 372, 374, 375, 381, 382, 383], "denomin": 8, "artifact": 8, "numer": [8, 45, 107, 190, 220, 245, 246, 250, 256, 257, 263, 264, 265, 266, 267, 344, 371, 385, 388], "misconcept": 8, "freed": 8, "appear": [8, 11, 40, 61, 67, 80, 87, 88, 383, 385], "compuat": 8, "fix": [8, 28, 123, 180, 278, 294, 298, 370, 378, 383, 388], "retain_graph": [8, 99, 100], "discuss": [8, 9, 376, 381, 382], "inplac": [8, 37, 41, 43, 46, 103, 107, 123, 129, 192, 369], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 138, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 165, 166, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 183, 186, 187, 189, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 237, 238, 240, 241, 243, 247, 248, 254, 255, 257, 258, 261, 262, 263, 265, 266, 267, 270, 271, 273, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 307, 309, 310, 311, 312, 313, 365, 383, 387], "submodul": [8, 37, 103, 107, 123, 129, 133, 180, 192, 219, 223, 274, 293], "param": [8, 37, 47, 103, 107, 119, 123, 129, 141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 192, 212, 214, 244, 255, 263, 266, 269, 293, 303, 306, 309, 310, 311, 312, 313, 369, 378, 381, 382, 383, 384, 387], "grad": [8, 37, 99, 100, 103, 107, 123, 129, 192, 369, 371], "whose": [8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 103, 107, 123, 124, 125, 129, 148, 166, 180, 183, 184, 186, 188, 192, 233, 238, 266], "neg": [8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 50, 79, 80, 144, 156, 167, 185, 287, 309, 311, 312, 365, 371, 381, 382, 383], "factor": [8, 11, 24, 37, 171, 192, 220, 232, 245, 246, 254, 258, 259, 262, 278, 283, 286, 287, 289, 299, 315, 369, 370, 374, 378, 381, 382, 385, 388], "fit": [8, 12, 162, 180, 365, 366, 369], "bottlneck": 8, "brax": [8, 99, 100, 103, 107, 123, 129, 169, 373, 388], "jax": [8, 12, 99, 100, 112, 113], "improperli": 8, "underli": [8, 103, 107, 123, 129, 293, 373, 375, 377, 383], "tedeiou": 8, "priorit": [8, 42, 50, 79, 80, 280, 281, 283, 284, 285, 291, 296, 298, 300, 301, 369, 370, 376], "amount": [8, 262, 370, 385], "costli": [8, 383], "constitut": [8, 370, 382, 383], "profil": 8, "frequent": [8, 385], "program": [8, 284, 291, 388], "functorch": [8, 10], "incl": 8, "suit": [8, 102, 371, 373, 387, 388], "mujoco_instal": 8, "valueerror": [8, 37, 103, 107, 123, 129, 192], "bad": 8, "fds_to_keep": 8, "expand": [8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 87, 88, 141, 266, 269, 293, 381, 382, 383, 385, 387], "new_shap": 8, "permut": [8, 86, 164, 387, 388], "idea": [9, 296, 366, 372, 374, 381, 382], "introductori": 9, "intro": [9, 371, 372], "dai": [9, 387], "2022": [9, 10, 383, 387], "spin": [9, 101, 102], "deep": [9, 144, 207, 208, 209, 210, 213, 262, 277, 290, 298, 299, 369, 381], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 374], "summari": [9, 162, 190, 369, 370, 371, 372], "reddit": 9, "reagent": 9, "orient": [9, 69, 388], "baselines3": 9, "tf": 9, "bandit": [9, 122], "tensorflow": [9, 227, 228], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 378], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 387], "grade": 9, "factori": [9, 52, 369], "cherri": 9, "jaxrl": 9, "mbrl": [9, 119, 364], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 383], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 371, 372, 381, 382], "notebook": [10, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388], "24": [10, 68, 88, 106, 120, 121, 261, 369, 370, 381, 383], "pip3": [10, 369, 371, 372, 381, 382], "url": [10, 109], "org": [10, 14, 15, 24, 42, 64, 65, 67, 69, 79, 80, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 122, 126, 130, 131, 144, 166, 186, 206, 207, 208, 209, 210, 211, 214, 215, 216, 221, 226, 227, 228, 232, 234, 235, 238, 240, 241, 247, 257, 262, 277, 278, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 294, 295, 297, 298, 299, 300, 309, 314, 322, 361, 379, 384], "whl": 10, "u": [10, 66, 217, 218, 221, 222, 383], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 371, 381, 382, 383, 385], "power": [11, 370], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 362], "ultim": [11, 220, 245, 246], "ffmpeg": 11, "whatev": [11, 365, 369], "fed": [11, 382, 385], "feed": [11, 166, 188, 293, 364, 369, 381, 382, 385], "suppos": [11, 123, 342, 366, 388], "snippet": [11, 166, 186, 369], "gave": 11, "extrem": [11, 123, 129, 277, 279, 292, 295, 297], "blurri": 11, "stitch": 11, "exp_nam": [11, 329, 330, 331, 334, 335, 336, 356, 370, 377, 378], "my_exp": [11, 377], "pixels_onli": [11, 101, 102, 106, 108, 109, 126, 369, 370, 377, 378, 387, 388], "my_video": [11, 377], "record_env": [11, 377, 378], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 253, 364], "module_nam": [12, 293], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 79, 80, 82, 93, 99, 101, 102, 103, 105, 106, 107, 108, 109, 112, 117, 118, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 140, 144, 153, 160, 166, 170, 178, 179, 184, 186, 188, 189, 190, 192, 195, 199, 202, 203, 213, 214, 219, 223, 225, 226, 229, 230, 231, 232, 233, 238, 239, 247, 250, 256, 257, 263, 264, 265, 266, 267, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 304, 307, 308, 309, 310, 311, 312, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 354, 360, 370, 371], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 219, 223, 387], "longer": [12, 370, 378, 381, 382, 385], "x": [12, 23, 27, 37, 45, 47, 67, 88, 160, 182, 205, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 248, 256, 263, 264, 273, 276, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 346, 369, 381, 383, 385, 387], "23": [12, 68, 88, 368, 370, 375, 381, 383, 386], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 68, 99, 100, 107, 112, 113, 222, 276, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 369, 370, 371, 372, 378, 381, 382, 383, 385, 388], "otherwis": [12, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 88, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 120, 121, 123, 124, 125, 126, 129, 130, 131, 144, 145, 151, 162, 179, 180, 181, 184, 190, 192, 217, 220, 221, 229, 230, 245, 246, 256, 264, 270, 278, 288, 293, 294, 298, 309, 311, 312, 342, 343, 366, 369, 370, 371, 372, 383, 388], "classmethod": [12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 103, 107, 123, 129, 186, 206, 237], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 33, 34, 35, 37, 41, 43, 45, 46, 68, 72, 80, 87, 88, 103, 104, 105, 106, 107, 108, 117, 118, 120, 123, 124, 125, 129, 130, 131, 132, 160, 180, 184, 189, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 216, 224, 237, 263, 267, 298, 333, 334, 342, 351, 352, 358, 359, 360, 369, 370, 371, 385, 388], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 104, 123, 129, 369, 387], "device_typ": [14, 16, 17, 29, 35, 39, 40, 204, 205, 206, 207, 208, 209, 210, 216, 224, 229, 230, 231, 232, 237], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 370], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 370], "create_env_kwarg": [14, 15, 16, 17, 21, 104, 120, 123, 129, 369, 388], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 37, 171, 370, 385], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 263, 293, 342, 369, 370, 371, 372, 374, 381, 387], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 196, 200, 263, 267, 342], "exploration_mod": [14, 16, 17, 18, 19, 20, 362, 364], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 41, 43, 46, 123, 129], "num_sub_thread": [14, 15, 17, 123, 129], "set_trunc": [14, 15, 16, 17, 103, 107, 123, 129], "use_buff": [14, 15, 16, 123, 129], "datacollector": [14, 15, 16, 17, 37, 267, 295, 371, 376, 385], "recept": 14, "safe": [14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 250, 254, 256, 257, 262, 263, 264, 265, 266, 267, 269, 364, 387], "sota": [14, 15, 119, 157, 297, 337, 351, 369, 370, 371, 374, 375, 376, 381, 382, 387], "guard": [14, 15], "doc": [14, 15, 52, 109, 112, 113, 122, 126, 336, 370, 381, 382, 385, 388], "env_mak": [14, 15, 16, 21, 356, 388], "2000": [14, 15, 16, 37, 54, 110, 329, 371, 385], "50": [14, 15, 16, 21, 44, 47, 61, 69, 87, 88, 117, 118, 192, 368, 369, 370, 371, 372, 380, 381, 382, 383, 384, 385, 386], "shutdown": [14, 15, 16, 17, 21, 141, 369, 387], "del": [14, 15, 16, 369, 370, 371, 380, 381, 387, 388], "int64": [14, 15, 16, 23, 29, 30, 35, 41, 43, 44, 46, 47, 48, 50, 52, 54, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 103, 107, 116, 117, 118, 122, 123, 124, 125, 127, 128, 129, 137, 141, 153, 164, 171, 178, 214, 239, 256, 257, 262, 263, 264, 265, 364, 371, 372, 373, 374, 376, 377, 383, 385, 387], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 143, 248, 256, 261, 264, 372], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 54], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 370], "divis": [14, 15, 16, 17, 18, 19, 20, 61, 67, 80, 87, 88, 382], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 107, 140, 180, 189, 223, 372, 383, 384], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 348, 370], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 70, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 120, 121, 123, 126, 129, 148, 149, 152, 160, 166, 180, 183, 184, 186, 188, 190, 192, 266, 381, 388], "span": [14, 15, 16, 17, 18, 19, 20, 21, 67, 80, 87], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 37, 192, 261, 370, 371, 381, 382], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 47, 336, 364, 381, 382, 383], "round": [14, 15, 16, 17, 18, 19, 20, 21, 61], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 37, 65, 103, 107, 123, 129, 192], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 189, 387], "ratio": [14, 15, 17, 47, 369, 371], "finish": [14, 15, 17, 21, 107, 171, 388], "rest": [14, 15, 17, 364, 371, 372, 381, 383, 387], "earli": [14, 15, 17, 37, 107, 178, 387], "safeti": [14, 15, 17, 119, 123, 129], "harm": [14, 15, 17, 123, 129], "exclus": [14, 15, 57, 58, 61, 67, 80, 87, 88, 141, 154, 156, 217, 219, 221, 223, 227, 228, 256, 257, 264, 265, 299, 300, 301, 309, 310, 311, 312, 313, 336, 360, 364], "add_truncated_kei": [14, 15, 16, 17, 103, 107, 123, 129, 184], "ordereddict": [14, 15, 16, 17, 21, 37, 103, 107, 123, 129, 184, 190, 192, 298, 370], "form": [14, 15, 17, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 103, 107, 123, 129, 190, 192, 217, 219, 221, 223, 276, 277, 279, 292, 295, 346, 364, 374, 382], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 103, 107, 123, 129, 184], "integ": [14, 15, 16, 17, 23, 35, 36, 37, 40, 47, 56, 80, 87, 88, 89, 103, 107, 123, 129, 137, 140, 153, 157, 162, 178, 204, 205, 224, 229, 230, 284, 291, 298, 385], "increment": [14, 15, 16, 17, 103, 107, 123, 129, 162, 292], "env_fn": [14, 15, 16, 17, 104, 358, 359], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 87, 88, 209, 210, 383], "out_se": [14, 15, 16, 17, 388], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 37, 39, 41, 42, 43, 45, 46, 49, 50, 51, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 78, 79, 80, 82, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 138, 139, 141, 148, 166, 168, 177, 180, 183, 184, 185, 187, 188, 191, 192, 203, 204, 205, 207, 208, 209, 210, 213, 216, 219, 220, 223, 224, 225, 226, 229, 230, 236, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 307, 308, 309, 310, 311, 312, 313, 327, 329, 333, 334, 336, 339, 346, 351, 352, 357, 358, 359, 365, 371, 382], "return_same_td": 16, "interruptor": 16, "cautious": [16, 295], "whole": [16, 27, 33, 37, 54, 103, 107, 123, 129, 184, 192, 263, 298, 337, 369, 371], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 374], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 346], "respect": [18, 19, 20, 37, 103, 107, 123, 129, 142, 148, 149, 152, 166, 167, 176, 180, 183, 184, 186, 188, 192, 217, 221, 229, 241, 266, 271, 277, 279, 292, 295, 297, 309, 311, 312, 341, 371, 372, 381, 382], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 363, 370, 371, 374, 377, 380, 385], "fashion": [18, 20, 21, 41, 43, 46, 88], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 123, 129, 156], "seen": [18, 19, 20, 21, 27, 33, 103, 107, 123, 129, 365, 369, 370, 372, 375, 381, 382, 385], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 42, 45, 50, 51, 63, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273, 369], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 383], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 369], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 40, 61, 263, 267], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 358, 359, 369, 370], "coordin": 21, "init": [21, 37, 103, 107, 123, 129, 190, 192, 336, 370, 371], "autodetect": 21, "similarli": [21, 37, 86, 91, 103, 107, 123, 129, 192, 229, 268, 269, 284, 291, 388], "num_cpu": 21, "num_gpu": 21, "1024": [21, 211, 370, 385], "equat": [21, 67, 107, 190, 262, 276, 279, 299, 371, 373, 383], "exce": [21, 385], "indefinit": [21, 60], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 346, 369, 371, 372], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 300, 375], "jump": [22, 373], "host": [22, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 206, 211, 237, 255], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 48, 53, 54, 55, 56, 80, 87, 88, 103, 107, 123, 129, 134, 137, 138, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 158, 159, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 186, 190, 192, 193, 201, 202, 214, 239, 254, 255, 258, 259, 261, 262, 267, 281, 307, 327, 329], "as_nest": 23, "durat": [23, 382], "meta": [23, 41, 43, 46, 53, 63, 105, 109, 277, 279, 292, 295, 297, 366, 371, 381, 382, 385], "aren": [23, 179, 372], "deprec": [23, 37, 103, 107, 123, 129, 184, 192, 195, 199, 259, 277, 279, 281, 284, 285, 286, 291, 292, 295, 296, 297, 298, 307, 309, 310, 311, 312, 317, 388], "eventu": [23, 238, 372, 383], "supersed": 23, "recov": [23, 63, 65, 67, 68, 69, 87, 88, 254, 259, 262, 268, 284, 291, 380], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 106, 108], "stride": [23, 37, 103, 107, 123, 129, 192, 204, 205, 207, 208, 216, 229, 370, 381, 387], "jag": 23, "focu": [23, 369, 370, 371, 374, 375, 376, 381], "team": [23, 381, 382, 387], "cat": [23, 271, 278, 280, 291, 296, 298, 300, 301, 381, 385, 387], "arang": [23, 29, 40, 80, 137, 214, 228, 256, 337, 364, 385], "obs_": 23, "trajectory_id": 23, "int32": [23, 51, 61, 67, 87, 112, 113, 198, 261, 385], "data_split": 23, "got": [23, 376], "init_kl_coef": 24, "horizon": [24, 117, 118, 130, 131, 203, 226, 371], "kl": [24, 28, 47, 160, 288, 292], "describ": [24, 53, 145, 183, 193, 244, 245, 281, 332, 365, 369, 371, 381, 382, 383, 388], "ziegler": 24, "et": [24, 203], "relax": [24, 327], "penalti": [24, 47, 292], "strai": [24, 47], "greater": [24, 61, 80, 87, 88, 219, 223, 369, 370, 387], "increas": [24, 72, 181, 262, 381, 382], "pull": [24, 385], "toward": [24, 188], "aggress": 24, "kl_coef": [24, 28, 47], "arxiv": [24, 42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 126, 130, 131, 144, 166, 186, 206, 207, 208, 209, 210, 211, 214, 215, 216, 221, 226, 232, 234, 235, 238, 240, 241, 247, 257, 262, 277, 278, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 294, 295, 298, 299, 300, 309, 314, 322, 384], "pdf": [24, 144, 206, 207, 208, 209, 210, 214, 257, 262, 286, 296, 299, 300, 309, 314, 322], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 381, 382], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 160], "newest": 24, "int8": [25, 103, 116, 124, 125, 142], "assert_is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "clear_device_": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "op": [25, 26, 29, 35, 36, 39, 40, 53, 55, 56, 161, 189, 254, 258, 329, 348], "is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 388], "encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 51, 53, 55, 56, 99, 100, 103, 106, 108, 109, 112, 113, 120, 121, 126, 137, 151, 235, 236, 240, 276, 364, 370, 371, 372, 374, 383, 385], "ndarrai": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 262, 270, 327, 381], "ignore_devic": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "np": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 270, 327, 381, 383], "complient": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "singleton": [25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 204, 205, 224, 242, 243], "start_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "end_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "implements_for_spec": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "torch_funct": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "tensor_to_index": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "project": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 151, 221, 250, 254, 256, 257, 262, 263, 264, 265, 266, 267, 336, 364, 387, 388], "rand": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 112, 113, 119, 138, 141, 149, 152, 168, 193, 203, 226, 263, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 298, 300, 301, 383, 387, 388], "unbound": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 180, 198, 383, 385], "to_numpi": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 129], "transformed_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 183, 184, 233, 244, 360], "check_spec_encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "to_one_hot": [25, 29, 35], "hot": [25, 29, 35, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 124, 125, 126, 130, 131, 137, 138, 151, 214, 236, 239, 256, 257, 264, 265, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 372], "to_one_hot_spec": [25, 29, 35], "onehotdiscretetensorspec": [25, 29, 214, 239, 256, 264, 281, 283, 284, 285, 307, 362, 364, 374], "convert": [25, 29, 35, 36, 37, 38, 40, 41, 43, 46, 49, 54, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 148, 149, 152, 166, 180, 183, 184, 186, 188, 190, 192, 266, 276, 293, 369, 370, 371, 383, 385], "type_check": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "upper": [26, 85, 161], "unnam": [27, 41, 43, 46], "constraint": [27, 119, 371, 382], "pixels_spec": 27, "observation_vector_spec": 27, "composite_spec": 27, "observation_vector": [27, 145, 369], "td_project": 27, "is_empti": [27, 33, 383], "include_nest": [27, 33], "leaves_onli": [27, 33], "is_leaf": [27, 33], "_compositespecitemsview": [27, 33], "children": [27, 33, 37, 103, 107, 123, 129, 192], "_compositespeckeysview": [27, 33], "reflect": [27, 33, 108, 124, 125, 189, 201, 293, 349, 370, 371, 372, 382], "lock_": [27, 33], "recurs": [27, 33, 37, 57, 58, 103, 107, 123, 129, 192, 293], "succeed": [27, 33], "selected_kei": [27, 33, 175, 369], "unlock_": [27, 33], "unlock": [27, 33, 41, 43, 46], "_compositespecvaluesview": [27, 33], "multipli": [28, 217, 221, 278, 279, 285, 292, 294, 295, 296, 298, 344, 369, 381], "calcul": [28, 47, 171, 217, 277, 279, 283, 292, 295, 297, 300], "onehottensorspec": [29, 99, 100, 106, 108, 109, 112, 113, 120, 121, 126], "action_valu": [29, 40, 213, 214, 239, 256, 257, 264, 265, 285, 293, 307, 364, 372, 374, 378], "argmax": [29, 103, 107, 123, 129, 214, 239, 257, 265, 374], "chosen_action_valu": [29, 40, 238, 239, 247, 264, 265, 307, 364, 372, 374], "outcom": [29, 40, 212, 244, 381], "shift_kei": [30, 32, 38, 48], "is_full_kei": [30, 32, 38, 48], "is_ful": [30, 32, 38, 48], "tempfil": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 356, 369, 370, 381, 385], "register_save_hook": [30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "temporarydirectori": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 369, 370, 381, 385], "tmpdir": [30, 42, 45, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 369, 370, 381], "rb_load": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "register_load_hook": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "persist": [31, 37, 103, 107, 123, 129, 184, 192, 201, 298], "filesystem": [31, 385], "ted2nest": [32, 362], "drawn": [33, 34, 180, 258, 263, 267, 371, 381, 382], "heterogen": [33, 34, 116, 124, 125, 194, 229, 230, 369, 370], "thrown": [34, 37, 103, 107, 123, 129, 192, 385], "nvec": [35, 36], "remove_singleton": 35, "cardin": [35, 36, 214, 239, 256, 257, 265, 371], "ax": [35, 231, 232, 381], "m": [35, 37, 103, 107, 123, 129, 151, 192, 267, 364, 370, 383], "ts": [35, 36], "multionehotdiscretetensorspec": [35, 281, 284, 285, 307, 362], "use_regist": [36, 40], "to_categor": [36, 40], "to_categorical_spec": [36, 40], "multidiscretetensorspec": [36, 362], "gamma": [37, 171, 192, 226, 277, 278, 280, 281, 283, 285, 286, 287, 289, 291, 293, 295, 296, 297, 298, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 356, 365, 369, 370, 371, 381, 382, 387], "sutton": [37, 365, 381, 382], "1988": 37, "tempor": [37, 219, 223, 226, 310, 311, 316, 317], "44": [37, 369, 370, 383], "discount": [37, 67, 104, 171, 192, 278, 283, 286, 287, 289, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 365, 370, 371, 381, 382], "ahead": [37, 192, 388], "bias": [37, 217, 218, 221, 222, 273, 365, 369], "mitig": 37, "pleas": [37, 65, 103, 106, 107, 123, 124, 125, 129, 141, 144, 181, 184, 192, 298, 363], "multisteptransform": [37, 362], "99": [37, 171, 190, 226, 289, 303, 308, 315, 356, 369, 370, 371, 375, 378, 381, 382, 383, 387], "add_modul": [37, 103, 107, 123, 129, 192], "child": [37, 103, 107, 123, 129, 192, 370], "fn": [37, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 192, 233, 358, 359], "init_weight": [37, 103, 107, 123, 129, 192], "fill_": [37, 103, 107, 123, 129, 192, 370, 372, 388], "net": [37, 103, 107, 123, 129, 192, 208, 210, 213, 216, 230, 277, 278, 285, 291, 295, 296, 297, 298, 356, 370, 383, 384, 387], "in_featur": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 204, 205, 207, 208, 209, 210, 216, 224, 229, 230, 231, 232, 251, 266, 274, 281, 283, 374, 375, 387], "out_featur": [37, 103, 107, 119, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 203, 204, 205, 207, 208, 209, 210, 215, 216, 219, 223, 224, 226, 229, 230, 231, 232, 251, 256, 266, 274, 281, 283, 364, 369, 372, 374, 375, 378, 387], "bia": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 204, 205, 207, 208, 209, 210, 215, 216, 217, 218, 219, 221, 222, 223, 224, 230, 231, 232, 233, 258, 259, 262, 266, 273, 275, 276, 293, 298, 365, 369, 370, 371, 372, 382, 387], "requires_grad": [37, 99, 100, 103, 107, 123, 129, 160, 184, 192, 298], "bfloat16": [37, 103, 107, 123, 129, 192], "datatyp": [37, 103, 107, 123, 129, 192, 385], "member": [37, 103, 107, 123, 129, 192, 293, 329], "xdoctest": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 293, 298], "buf": [37, 103, 107, 123, 129, 192], "20l": [37, 103, 107, 123, 129, 192, 293], "1l": [37, 103, 107, 123, 129, 192, 293], "5l": [37, 103, 107, 123, 129, 192, 293], "__call__": [37, 44, 103, 107, 123, 129, 192, 267, 366, 388], "doubl": [37, 55, 103, 107, 123, 129, 148, 149, 150, 152, 166, 180, 183, 184, 186, 188, 192, 266, 281, 286, 290, 296, 299, 307, 369, 370, 371, 372, 388], "eval": [37, 103, 107, 123, 129, 184, 190, 192, 369, 370, 371], "evalu": [37, 103, 107, 117, 118, 123, 129, 184, 192, 212, 227, 228, 236, 246, 296, 351, 352, 370, 371, 378], "dropout": [37, 103, 107, 123, 129, 184, 192, 217, 219, 221, 223, 224, 372], "batchnorm": [37, 103, 107, 123, 129, 184, 192], "disabl": [37, 103, 107, 123, 129, 184, 192, 220, 246, 327, 369, 381], "comparison": [37, 103, 107, 123, 129, 184, 192, 293, 369, 370], "similar": [37, 41, 43, 45, 46, 67, 103, 107, 123, 124, 125, 129, 148, 166, 180, 183, 184, 186, 187, 188, 190, 192, 251, 253, 263, 266, 267, 365, 369, 370, 371, 372, 374, 375, 376, 377, 383, 385, 388], "extra_repr": [37, 103, 107, 123, 129, 192], "nontermin": 37, "original_reward": 37, "newli": [37, 103, 107, 123, 129], "OR": 37, "get_buff": [37, 103, 107, 123, 129, 192], "get_submodul": [37, 103, 107, 123, 129, 192], "qualifi": [37, 103, 107, 123, 129, 192], "referenc": [37, 103, 107, 123, 129, 192], "attributeerror": [37, 103, 107, 123, 129, 192], "resolv": [37, 103, 107, 123, 129, 192], "someth": [37, 103, 107, 116, 123, 129, 192, 363, 370, 371, 383, 388], "get_extra_st": [37, 103, 107, 123, 129, 190, 192], "set_extra_st": [37, 103, 107, 123, 129, 190, 192], "picklabl": [37, 103, 107, 123, 129, 190, 192], "pickl": [37, 103, 107, 123, 129, 190, 192], "get_paramet": [37, 103, 107, 123, 129, 192], "net_b": [37, 103, 107, 123, 129, 192], "net_c": [37, 103, 107, 123, 129, 192], "conv": [37, 103, 107, 123, 129, 192, 204, 205, 370], "conv2d": [37, 103, 107, 123, 129, 192, 205, 207, 208, 216, 229, 387], "kernel_s": [37, 103, 107, 123, 129, 192, 204, 205, 207, 208, 216, 229, 234, 370, 387], "diagram": [37, 103, 107, 123, 129, 192], "degre": [37, 103, 107, 123, 129, 192], "named_modul": [37, 103, 107, 123, 129, 192], "o": [37, 103, 107, 123, 129, 192, 222], "half": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 369], "ipu": [37, 103, 107, 123, 129, 192], "strict": [37, 41, 43, 46, 103, 107, 123, 129, 184, 192, 298], "descend": [37, 103, 107, 123, 129, 184, 192, 298], "get_swap_module_params_on_convers": [37, 103, 107, 123, 129, 184, 192, 298], "enforc": [37, 86, 103, 107, 123, 129, 184, 192, 268, 298, 383], "preserv": [37, 103, 107, 123, 129, 184, 192, 298], "missing_kei": [37, 103, 107, 123, 129, 184, 192, 298], "unexpected_kei": [37, 103, 107, 123, 129, 184, 192, 298], "namedtupl": [37, 103, 107, 123, 129, 184, 192, 298], "l": [37, 103, 107, 123, 129, 192, 217, 221, 308, 371, 383], "idx": [37, 103, 107, 123, 129, 192], "named_buff": [37, 103, 107, 123, 129, 192], "remove_dupl": [37, 103, 107, 123, 129, 192, 293], "prepend": [37, 103, 107, 123, 129, 192, 293], "running_var": [37, 103, 107, 123, 129, 192], "named_children": [37, 103, 107, 123, 129, 192], "conv4": [37, 103, 107, 123, 129, 192], "conv5": [37, 103, 107, 123, 129, 192], "memo": [37, 103, 107, 123, 129, 192], "named_paramet": [37, 103, 107, 123, 129, 160, 192, 293], "register_backward_hook": [37, 103, 107, 123, 129, 192], "removablehandl": [37, 103, 107, 123, 129, 192], "favor": [37, 103, 107, 123, 129, 192, 371], "register_full_backward_hook": [37, 103, 107, 123, 129, 192], "register_buff": [37, 103, 107, 123, 129, 192], "running_mean": [37, 103, 107, 123, 129, 192], "alongsid": [37, 103, 107, 123, 129, 192, 377], "num_featur": [37, 103, 107, 123, 129, 192], "register_forward_hook": [37, 103, 107, 123, 129, 192, 214, 239], "with_kwarg": [37, 103, 107, 123, 129, 192], "always_cal": [37, 103, 107, 123, 129, 192], "register_module_forward_hook": [37, 103, 107, 123, 129, 192], "regardless": [37, 103, 107, 123, 129, 192, 279, 292, 295], "register_forward_pre_hook": [37, 103, 107, 123, 129, 192], "invok": [37, 103, 107, 123, 129, 192], "And": [37, 103, 107, 123, 129, 192, 375], "forward_pr": [37, 103, 107, 123, 129, 192], "register_module_forward_pre_hook": [37, 103, 107, 123, 129, 192], "grad_input": [37, 103, 107, 123, 129, 192], "grad_output": [37, 103, 107, 123, 129, 192], "subsequ": [37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 140, 192, 372, 381], "technic": [37, 103, 107, 123, 129, 192, 370, 372, 374], "caller": [37, 103, 107, 123, 129, 192], "register_module_full_backward_hook": [37, 103, 107, 123, 129, 192], "register_full_backward_pre_hook": [37, 103, 107, 123, 129, 192], "backward_pr": [37, 103, 107, 123, 129, 192], "register_module_full_backward_pre_hook": [37, 103, 107, 123, 129, 192], "register_load_state_dict_post_hook": [37, 103, 107, 123, 129, 192], "incompatible_kei": [37, 103, 107, 123, 129, 192], "register_modul": [37, 103, 107, 123, 129, 192, 366], "alia": [37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 107, 123, 129, 192], "register_paramet": [37, 103, 107, 123, 129, 192], "register_state_dict_pre_hook": [37, 103, 107, 123, 129, 192], "keep_var": [37, 41, 43, 46, 103, 107, 123, 129, 184, 192, 298], "requires_grad_": [37, 103, 107, 123, 129, 192], "autograd": [37, 103, 107, 123, 129, 184, 192, 298], "freez": [37, 103, 107, 123, 129, 190, 192], "finetun": [37, 103, 107, 123, 129, 192], "gan": [37, 103, 107, 123, 129, 192], "set_submodul": [37, 103, 107, 123, 129, 192], "overid": [37, 103, 107, 123, 129, 192], "share_memori": [37, 103, 104, 107, 123, 129, 192, 369], "share_memory_": [37, 41, 43, 46, 103, 107, 123, 129, 192, 387], "destin": [37, 41, 43, 46, 103, 107, 123, 129, 143, 149, 150, 152, 184, 186, 190, 192, 201, 298, 329], "averag": [37, 103, 107, 123, 129, 184, 190, 192, 262, 287, 288, 298, 344, 369, 371], "shallow": [37, 41, 43, 46, 103, 107, 123, 129, 184, 192, 298, 372], "detach": [37, 103, 107, 123, 129, 184, 192, 293, 298, 300, 309, 310, 311, 312, 369], "non_block": [37, 41, 43, 46, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 372], "memory_format": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "channels_last": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "unchang": [37, 103, 107, 123, 129, 148, 151, 166, 180, 183, 184, 186, 188, 192, 258, 266, 343, 369, 385], "tri": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 377], "pin": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "4d": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "ignore_w": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "1913": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "3420": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "5113": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "2325": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "torch_doctest_cuda1": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "gpu1": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "1914": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "5112": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 383], "2324": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "float16": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 218, 222, 266], "cdoubl": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "3741": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "j": [37, 42, 79, 80, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 366, 375], "2382": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "5593": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266, 383], "4443": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "complex128": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "6122": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "1150": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 266], "to_empti": [37, 103, 107, 123, 129, 192], "dst_type": [37, 103, 107, 123, 129, 192], "xpu": [37, 103, 107, 123, 129, 192], "set_to_non": [37, 103, 107, 123, 129, 192], "row": [38, 49, 112, 113], "unidimension": 40, "keepdim": 40, "user_regist": 40, "priori": 40, "uniqu": [40, 87, 88, 117, 118, 144, 153, 179, 180, 181, 261, 336, 376, 385], "discretebox": [40, 103, 107, 123, 129, 374, 381, 382, 388], "chosen_data": [41, 70], "rewarddata": [41, 70, 362], "rejected_data": [41, 70], "from_dataset": [41, 43, 70], "dataset_nam": [41, 43, 47, 54, 70, 122], "max_length": [41, 43, 44, 52, 54, 70, 378], "550": [41, 43, 47, 54, 70, 87, 88, 383], "root_dir": [41, 43, 54, 70], "from_disk": [41, 43, 54, 70], "carperai": [41, 43, 47, 54], "openai_summarize_comparison": [41, 43, 54], "sequen": [41, 43], "load_from_disk": [41, 43, 54, 70], "load_dataset": [41, 43, 54, 70], "attention_mask": [41, 43, 44, 46, 47, 52, 54, 70], "92534": 41, "input_id": [41, 43, 44, 46, 47, 52, 54, 70], "end_scor": [41, 46, 47, 70], "sub_data": [41, 43], "from_tensordict": [41, 43, 46], "non_tensordict": [41, 43, 46], "axi": [41, 43, 46], "td_gather": [41, 43, 46], "_nodefault": [41, 43, 46], "getattr": [41, 43, 46], "tensorclass": [41, 43, 46, 70, 74, 75, 95], "is_memmap": [41, 43, 46], "memmap_": [41, 43, 46, 190], "proxi": [41, 43, 46, 228, 236, 263, 365], "load_memmap": [41, 43, 46], "load_": [41, 43, 46], "load_memmap_": [41, 43, 46], "fetch": [41, 43, 46, 99, 100, 101, 102, 160, 374, 384, 385], "fromkei": [41, 43, 46], "memmap": [41, 43, 46, 74, 123, 129, 190, 329, 331, 343, 385], "saved_td": [41, 43, 46], "td_load": [41, 43, 46], "fake": [41, 43, 46, 103, 107, 123, 129, 369, 370], "_subclass": [41, 43, 46], "faketensormod": [41, 43, 46], "faketensor": [41, 43, 46], "from_flatten": [41, 43, 46], "attemptedli": [41, 43, 46], "copy_exist": [41, 43, 46], "return_earli": [41, 43, 46], "share_non_tensor": [41, 43, 46], "mimic": [41, 43, 46, 103, 107, 123, 129], "cross": [41, 43, 46, 203], "anymor": [41, 43, 46, 184, 266], "tensordictfutur": [41, 43, 46], "deepli": [41, 43, 46], "insid": [41, 43, 46, 123, 388], "memmap_lik": [41, 43, 46], "contentless": [41, 43, 46], "1_000_000": [41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 369, 372, 381], "alloc": [41, 43, 46, 75, 227, 228, 369], "memmap_refresh_": [41, 43, 46], "refresh": [41, 43, 46, 378, 381, 382], "saved_path": [41, 43, 46], "ndimens": [41, 43, 46, 369], "batch_dim": [41, 43, 46, 54, 360], "numel": [41, 43, 46, 369, 371, 372, 378, 381, 384, 385], "additionali": [41, 43, 46], "setattr": [41, 43, 46], "tent": [41, 43, 46, 54], "to_tensordict": [41, 43, 46, 372], "unbind": [41, 42, 43, 45, 46, 50, 51, 219, 223], "alpha": [42, 50, 79, 80, 204, 205, 207, 208, 209, 210, 216, 229, 278, 285, 294, 296, 298, 300, 369, 385, 387], "ep": [42, 50, 79, 80, 162, 190, 262, 279, 299, 344, 369, 370, 372, 375, 378], "1e": [42, 50, 79, 80, 162, 190, 212, 215, 233, 244, 369, 370, 371, 382], "08": [42, 50, 79, 80, 369, 370, 371, 381, 383], "pin_memori": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 165, 369, 387], "schaul": [42, 79, 80], "quan": [42, 79, 80], "antonogl": [42, 79, 80], "silver": [42, 79, 80], "2015": [42, 79, 80], "ab": [42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 126, 130, 131, 143, 166, 186, 190, 206, 211, 215, 216, 221, 226, 232, 234, 235, 238, 240, 241, 247, 277, 278, 281, 282, 283, 284, 287, 288, 289, 290, 291, 294, 295, 298, 384], "1511": [42, 79, 80, 216], "05952": [42, 79, 80], "expon": [42, 50, 79, 80], "\u03b1": [42, 50, 79, 80], "delta": [42, 50, 79, 80, 217, 221, 244, 263, 267, 362, 365, 381], "null": [42, 50, 79, 80, 142], "1_000": [42, 45, 50, 51, 381, 385], "merg": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 383], "mini": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 382], "decid": [42, 45, 50, 51, 381, 387], "meth": [42, 45, 50, 51, 293, 383], "incompat": [42, 45, 50, 51, 297, 385], "drop_last": [42, 45, 50, 51, 86, 88], "notion": [42, 45, 50, 51], "caution": [42, 45, 50, 51, 86, 194, 388], "codebas": [42, 45, 50, 51, 383], "approach": [42, 45, 50, 51, 162, 300, 369, 371, 375, 376, 381, 388], "return_info": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 385], "tensordictprioritizedreplaybuff": [42, 362, 387], "simplifi": [42, 374, 383, 385], "_weight": [42, 50, 79, 80, 385, 387], "arrai": [42, 47, 79, 103, 107, 123, 129, 153, 217, 218, 221, 222, 369, 381, 385], "update_prior": [42, 79, 80, 343, 366, 370, 385, 387], "36278465": 42, "invert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 275, 371], "tqdm": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 346, 369, 371, 372, 381, 382, 383], "randomsampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 369, 381], "td_error": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 280, 281, 283, 284, 285, 286, 291, 293, 296, 298, 300, 301, 307, 369, 375, 385, 387], "update_tensordict_prior": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 369, 385, 387], "insert_transform": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 139, 184], "insert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 82, 83, 93, 94, 97, 98, 139, 148, 184, 185], "set_sampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_storag": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_writ": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "prompt_rindex": [43, 44, 47], "promptdatatldr": 43, "116722": 43, "prompt": [44, 47], "return_tensordict": [44, 52], "recip": [44, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273], "text": [44, 47, 52, 65, 217, 218, 221, 222, 262, 371], "tensodict": [44, 52], "orign": [44, 52], "valid_sampl": 44, "eough": 44, "toknen": 44, "meet": 44, "criterion": 44, "autotoken": [44, 52, 54], "from_pretrain": [44, 47, 52], "gpt2": [44, 47, 52, 54, 206, 211, 237], "pad_token": [44, 52], "eos_token": 44, "enough": [44, 385], "inde": [44, 151, 371, 383], "storagecheckpointerbas": [45, 89], "roundrobinwrit": [45, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "Not": [45, 99, 100, 112], "depth": [45, 103, 107, 119, 123, 126, 129, 203, 204, 205, 207, 208, 209, 210, 215, 216, 224, 226, 229, 230, 234, 235, 256, 364, 370, 373, 375, 376, 380, 381, 382, 385], "_pytre": [45, 385], "tree_map": [45, 385], "did": [45, 189, 315, 370, 371, 376, 385, 388], "assert0": [45, 385], "ref_model": 47, "reward_model": [47, 272], "max_new_token": 47, "score_clip": 47, "kl_schedul": 47, "klcontrollerbas": 47, "num_step": 47, "causal": 47, "sentenc": 47, "frozen": [47, 160, 190], "gpt2rewardmodel": 47, "get_dataload": [47, 362], "promptdata": [47, 362], "gpt2lmheadmodel": 47, "dl": 47, "block_siz": [47, 70], "tensorclass_typ": [47, 70], "openai_summarize_tldr": 47, "config_class": 47, "model_path": 47, "rollout_from_model": 47, "rollout_from_data": 47, "600": [47, 377, 383, 385], "reward_kl": [47, 160], "reward_raw": 47, "sample_log_prob": [47, 251, 252, 253, 263, 267, 269, 295, 371, 374, 382, 387], "create_rollout_td": 47, "log_prob": [47, 212, 227, 228, 236, 246, 267], "log_ratio": 47, "replic": 47, "rindex": 47, "eo": 47, "term": [47, 160, 221, 222, 231, 232, 276, 277, 285, 348, 370, 371, 373, 374, 382], "generation_config": 47, "generationconfig": 47, "ti": [47, 318, 319, 320, 321, 323, 324, 325, 326, 370], "log_probs_gen": 47, "logprobs_of_label": 47, "220": [48, 383], "priority_kei": [50, 51, 62, 79, 281, 284, 285, 286, 291, 293, 296, 298, 300, 301, 307, 385, 387], "reduct": [50, 79, 80, 93, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 294, 295, 296, 297, 298, 300, 301], "prioritizedreplaybuff": [50, 362, 387], "min": [50, 79, 80, 93, 245, 246, 262, 278, 279, 285, 294, 296, 298, 370, 371], "median": [50, 79, 80, 93, 112, 113, 137, 263, 267], "include_info": [50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "huggingfac": [52, 64, 69, 260], "co": [52, 153, 383], "pad_trunc": 52, "am": 52, "me": 52, "reassur": 52, "ok": 52, "tokenizer_fn": 54, "tensordicttoken": [54, 362], "pre_tokenization_hook": 54, "valid_s": 54, "tokenizer_class": 54, "tokenizer_model_nam": 54, "tokein": 54, "elementwis": 54, "vocabulari": 54, "loader": [54, 371], "185068": 54, "dataset_to_tensordict": 54, "data_dir": 54, "valid_mask_kei": 54, "conver": 54, "batch_dimens": 54, "filder": 54, "from_dict": 54, "data_memmap": 54, "recurse_through_entri": 58, "recurse_through_stack": 58, "consolid": 58, "dataset_id": [61, 63, 64, 65, 67, 68, 69], "num_proc": 61, "slice_len": [61, 67, 80, 87, 88, 329], "strict_len": 61, "arari": 61, "2600": 61, "million": [61, 372], "consequ": [61, 72, 221, 376], "50x10": 61, "available_dataset": [61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88], "ataridqn": 61, "immutabledatasetwrit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "shorter": [61, 67, 80, 87, 88], "Be": [61, 67, 80, 87, 88], "game_nam": 61, "krull": 61, "1d": [61, 79, 80, 87, 88, 93], "cheapli": 61, "nontensordata": [61, 67, 327], "invalid_rang": 61, "999998": 61, "999999": 61, "add_count": 61, "84": [61, 170, 370, 372, 383, 384], "valueestim": [61, 277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 303, 307, 362, 365, 369, 381, 382], "convolut": [61, 204, 205, 207, 208, 229, 242, 374], "2657628": 61, "2657629": 61, "2657630": 61, "2657631": 61, "2657632": 61, "2657633": 61, "2657634": 61, "2657635": 61, "2657636": 61, "2657637": 61, "2657638": 61, "2657639": 61, "2657640": 61, "2657641": 61, "2657642": 61, "2657643": 61, "2657644": 61, "2657645": 61, "2657646": 61, "2657647": 61, "2657648": 61, "2657649": 61, "2657650": 61, "2657651": 61, "2657652": 61, "2657653": 61, "2657654": 61, "2657655": 61, "2657656": 61, "2657657": 61, "2657658": 61, "2657659": 61, "2657660": 61, "2657661": 61, "2657662": 61, "2657663": 61, "2657664": 61, "2657665": 61, "2657666": 61, "2657667": 61, "2657668": 61, "2657669": 61, "2657670": 61, "2657671": 61, "2657672": 61, "2657673": 61, "2657674": 61, "2657675": 61, "2657676": 61, "2657677": 61, "2657678": 61, "2657679": 61, "2657680": 61, "2657681": 61, "2657682": 61, "2657683": 61, "2657684": 61, "2657685": 61, "2657686": 61, "2657687": 61, "2657688": 61, "2657689": 61, "2657690": 61, "2657691": 61, "1995687": 61, "1995688": 61, "1995689": 61, "1995690": 61, "1995691": 61, "1995692": 61, "1995693": 61, "1995694": 61, "1995695": 61, "1995696": 61, "1995697": 61, "1995698": 61, "1995699": 61, "1995700": 61, "1995701": 61, "1995702": 61, "1995703": 61, "1995704": 61, "1995705": 61, "1995706": 61, "1995707": 61, "1995708": 61, "1995709": 61, "1995710": 61, "1995711": 61, "1995712": 61, "1995713": 61, "1995714": 61, "1995715": 61, "1995716": 61, "1995717": 61, "1995718": 61, "1995719": 61, "1995720": 61, "1995721": 61, "1995722": 61, "1995723": 61, "1995724": 61, "1995725": 61, "1995726": 61, "1995727": 61, "1995728": 61, "1995729": 61, "1995730": 61, "1995731": 61, "1995732": 61, "1995733": 61, "1995734": 61, "1995735": 61, "1995736": 61, "1995737": 61, "1995738": 61, "1995739": 61, "1995740": 61, "1995741": 61, "1995742": 61, "1995743": 61, "1995744": 61, "1995745": 61, "1995746": 61, "1995747": 61, "1995748": 61, "1995749": 61, "1995750": 61, "left": [61, 63, 67, 80, 87, 141, 148, 149, 150, 154, 160, 166, 168, 169, 175, 178, 181, 183, 186, 188, 192, 229, 258, 370, 371, 376, 377], "untouch": [61, 67, 141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 192], "_max_run": 61, "dataset_asterix": 61, "asterix": 61, "dataset_pong": 61, "sample_from_al": [61, 82, 85], "buffer_id": [61, 85, 91], "hidden": [61, 123, 129, 143, 207, 215, 217, 218, 219, 221, 222, 223, 234, 235, 240, 241, 251, 252, 253, 255, 266, 269, 279, 292, 295, 364, 372, 380, 387], "data_path": [61, 62, 63, 64, 65, 66, 67, 68, 69], "data_path_root": [61, 62, 63, 64, 65, 66, 67, 68, 69], "delet": [61, 62, 63, 64, 65, 66, 67, 68, 69, 145, 336], "chunksiz": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pool": [61, 62, 63, 64, 65, 66, 67, 68, 69, 181], "max_tasks_per_child": [61, 62, 63, 64, 65, 66, 67, 68, 69], "worker_thread": [61, 62, 63, 64, 65, 66, 67, 68, 69], "index_with_gener": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pbar": [61, 62, 63, 64, 65, 66, 67, 68, 69, 369, 371, 372, 381, 382, 383], "dest": [61, 62, 63, 64, 65, 66, 67, 68, 69, 166, 186, 188, 266], "num_fram": [61, 62, 63, 64, 65, 66, 67, 68, 69], "unitari": [61, 62, 63, 64, 65, 66, 67, 68, 69, 383], "minariexperiencereplai": [61, 62, 63, 64, 66, 67, 68, 69], "1000000": [61, 62, 63, 64, 65, 66, 67, 68, 69], "distance_from_origin": [61, 62, 63, 64, 65, 66, 67, 68, 69], "forward_reward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qpo": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qvel": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_ctrl": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "reward_forward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_surv": [61, 62, 63, 64, 65, 66, 67, 68, 69], "x_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "x_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "y_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "y_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69], "achieved_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "desired_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "27": [61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 100, 123, 129, 369, 370, 382, 383], "_collate_id": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x120e21dc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cattensor": [61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 369, 380, 383, 388], "cat_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cat_next_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "new_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "31": [61, 62, 63, 64, 65, 66, 67, 68, 69, 112, 113, 370, 375, 383, 384], "full_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x168406fc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "from_env": 63, "use_truncated_as_don": 63, "direct_download": 63, "terminate_on_end": 63, "env_kwarg": [63, 68, 69, 141, 358, 359, 369], "reconstruct": [63, 87, 88, 288, 369, 388], "get_dataset": 63, "qlearning_dataset": 63, "fewer": [63, 80, 87], "possess": 63, "unexpectedli": 63, "traj_split": 63, "observationnorm": [63, 190, 360, 369, 370, 371, 372, 387], "maze2d": 63, "umaz": 63, "loc": [63, 103, 107, 123, 129, 160, 162, 173, 190, 220, 233, 245, 246, 251, 252, 253, 263, 267, 269, 277, 278, 291, 295, 296, 297, 298, 350, 360, 364, 369, 370, 371, 372, 374, 382, 387], "gen": 64, "dgrl": 64, "accompani": [64, 141, 178], "gap": 64, "2312": 64, "05742": 64, "gen_dgrl": 64, "procgen": 64, "bigfish": 64, "bossfight": 64, "categori": [64, 364, 366], "1m_e": 64, "1m_": 64, "comma": 64, "npy": 64, "extract": [64, 140, 260, 369, 371, 387], "mmap": [64, 68, 69], "minut": [64, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "internet": [64, 69], "connect": [64, 69], "minari": 65, "websit": [65, 67], "currenrtli": 65, "minari_data": 65, "door": 65, "torchrl_logg": [65, 378], "28": [65, 229, 368, 369, 370, 376, 383, 384, 386], "door_body_po": 65, "dua": 66, "graff": 66, "2017": 66, "uci": 66, "archiv": 66, "ic": 66, "edu": 66, "ml": 66, "sklearn": [66, 122], "adult_num": [66, 122], "adult_onehot": [66, 122], "mushroom_num": [66, 122], "mushroom_onehot": [66, 122], "covertyp": [66, 122], "shuttl": [66, 122], "magic": [66, 122, 373], "shuffl": [67, 86, 88, 382], "embodi": [67, 384], "institut": 67, "demonstr": [67, 371, 376, 381, 382, 383, 385, 388], "527": [67, 383], "skill": 67, "160266": 67, "googl": [67, 68, 99, 100, 117, 118, 371, 372, 381, 382], "open_x_embodi": 67, "2310": [67, 126], "08864": 67, "language_instruct": 67, "get_non_tensor": 67, "neither": [67, 383], "nor": 67, "insuffici": 67, "chosen": [67, 130, 131, 179, 180, 238, 239, 247, 265, 329, 364, 377], "openx": 67, "__will": 67, "change__": 67, "randomli": [67, 86, 161, 162, 180, 258, 263, 267, 374, 381, 382, 383, 385], "crop": [67, 146, 167, 329], "modal": [67, 369], "cmu_stretch": [67, 329], "is_init": [67, 69, 143, 159, 219, 223, 261, 262, 274, 372], "language_embed": 67, "512": [67, 216, 370, 383], "lift": 67, "green": [67, 381], "garbag": 67, "lid": 67, "roboset": 68, "h5": [68, 69, 72], "roboh": [68, 126], "concis": [68, 375], "75": [68, 370, 372, 382, 383, 384, 385], "totensor": 69, "image_s": 69, "v": [69, 190, 217, 218, 221, 222, 251, 284, 291, 298, 364, 369, 370], "npz": 69, "2206": [69, 120, 121], "04779": [69, 278, 283], "vd4rl": 69, "squar": [69, 146, 220, 245, 246, 329], "rectangular": [69, 204, 205], "walker_walk": 69, "64px": 69, "height": [69, 146, 170], "veloc": [69, 101, 102, 103, 107, 123, 129, 144, 381, 382, 383, 388], "infinit": [70, 117, 118, 130, 131, 376, 385], "block": [70, 73, 98, 364, 372, 381], "pairwisedataset": [70, 362], "256": [70, 117, 118, 211, 370, 371, 381, 382, 383], "checkpoint_fil": 72, "h5_kwarg": 72, "iff": 72, "suffix": [72, 342], "h5py": 72, "create_dataset": 72, "temporarili": [72, 194, 376, 385], "immut": [73, 103, 107, 123, 129, 169, 184], "piec": [73, 83, 94, 97, 98, 369, 370, 371, 377, 381, 382, 383, 385], "scratch_dir": [74, 369, 385], "sent": [74, 75, 95, 190], "mistak": [74, 75, 95], "myclass": [74, 75, 95], "foo": [74, 75, 95, 255, 385, 388], "bar": [74, 75, 95, 255, 339, 340, 342, 346, 366, 370], "attach": [74, 75, 76, 89, 91, 95, 370], "entiti": [74, 75, 76, 89, 91, 95], "zero_": [75, 95, 198], "liststoag": 77, "max_capac": [79, 80, 369, 385], "max_priority_within_buff": [79, 80], "data_0": 79, "data_1": 79, "smoothen": 79, "tdrb": 79, "pack": [79, 217, 221, 371, 373, 388], "nd": [79, 80], "sum_tre": [79, 80], "min_tre": [79, 80], "end_kei": [80, 87, 88], "cache_valu": [80, 87, 88], "closer": 80, "readili": [80, 87, 88], "conjunct": [80, 87, 88, 370], "Will": [80, 87, 120, 329], "buffer0": [80, 87], "immutablewrit": [80, 87], "buffer1": [80, 87], "other_sampl": [80, 87], "short": [80, 87, 88, 99, 100, 112, 113, 123, 194, 221, 222, 370, 371, 373, 374, 382, 385], "unsqueez": [80, 138, 141, 144, 145, 182, 185, 369, 372, 381, 382, 383], "tolist": 80, "120110917137936e": 80, "06": [80, 212, 244, 369, 370, 371, 381, 382, 383, 384], "uniformli": [81, 293, 388], "storageensembl": [82, 85], "samplerensembl": 82, "writerensembl": [82, 91], "num_buffer_sampl": [82, 85], "ensembl": [82, 85, 91, 92, 98, 266, 296], "forbidden": 82, "collat": 82, "0x13a2ef430": 82, "0x13a2f9310": 82, "interpol": [82, 170, 370, 372], "interpolationmod": [82, 372], "bilinear": [82, 170, 372], "0x13a2f9220": 82, "0x13a2f9f70": 82, "0x13a2d9b50": 82, "0x13a2f95b0": 82, "0x128648260": 82, "kw": [83, 94], "roundrobin": [83, 94], "incomplet": [86, 88], "fresh": 86, "haven": [86, 384], "remain": [86, 143, 150, 151, 160, 179, 232, 375], "draw": [86, 258], "slicesamplerwithoutreplac": [87, 385], "320": [87, 88, 101, 102, 370, 383], "700": [87, 88], "dataid": [87, 88], "__len__": 89, "rank_kei": 93, "rank": [93, 203], "samplerwithoutreplac": [93, 371, 382, 385], "get_insert_index": 93, "convers": [99, 100, 112, 113, 365], "2106": [99, 100, 282, 300], "13281": [99, 100], "categorical_action_encod": [99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129], "frame_skip": [99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 120, 121, 126, 157, 339, 342, 349, 366, 369, 370, 371, 387], "repeat": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 126, 203, 371, 381, 382, 383], "allow_done_after_reset": [99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 126], "toler": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 126, 212, 244], "availalb": [99, 100, 112, 113], "ant": [99, 100, 103, 107, 110, 123, 129, 384, 388], "87": [99, 100, 370, 383, 384], "acrobot": [99, 100, 101, 102, 388], "advant": [99, 100, 112, 113], "timer": [99, 100, 112, 113], "timeit": [99, 100, 112, 113], "310": [99, 100, 383], "ms": [99, 100, 112, 113], "268": [99, 100, 383], "433": [99, 100, 383], "80": [99, 100, 369, 370, 371, 381, 382, 383, 384], "213": [99, 100, 383], "8605": [99, 100], "pipelineenv": 100, "get_environ": 100, "dm_control": [101, 102, 369, 380, 388], "2006": [101, 102, 278, 283, 383], "12983": [101, 102], "task_nam": [101, 103, 107, 123, 129], "cheetah": [101, 102, 103, 107, 123, 129, 329, 369], "240": [101, 102, 383, 387], "swingup": [101, 102, 388], "swingup_spars": [101, 102], "ball_in_cup": [101, 102], "catch": [101, 102], "balance_spars": [101, 102], "three_pol": [101, 102], "two_pol": [101, 102], "finger": [101, 102], "turn_easi": [101, 102], "turn_hard": [101, 102], "fish": [101, 102], "upright": [101, 102, 370], "swim": [101, 102], "hopper": [101, 102], "hop": [101, 102], "humanoid": [101, 102, 123, 129, 380], "walk": [101, 102, 123, 129, 370, 380], "run_pure_st": [101, 102], "bring_bal": [101, 102], "bring_peg": [101, 102], "insert_bal": [101, 102], "insert_peg": [101, 102], "point_mass": [101, 102], "reacher": [101, 102], "swimmer": [101, 102], "swimmer6": [101, 102], "swimmer15": [101, 102], "walker": [101, 102], "dog": [101, 102], "trot": [101, 102], "humanoid_cmu": [101, 102], "lqr": [101, 102], "lqr_2_1": [101, 102], "lqr_6_2": [101, 102], "quadrup": [101, 102], "escap": [101, 102], "stacker": [101, 102], "stack_2": [101, 102], "stack_4": [101, 102], "deviceless": 103, "run_type_check": [103, 119], "counterenv": 103, "continuousbox": [103, 107, 123, 129, 198, 371, 381, 382, 383, 387, 388], "sort": [103, 107, 123, 129, 145, 262], "another_act": [103, 107, 123, 129], "mutabl": [103, 107, 123, 129], "_callabletransform": [103, 107, 123, 129], "batch_lock": [103, 105, 107, 123, 129, 141, 180, 184, 383], "done_keys_group": [103, 107, 123, 129], "outer": [103, 107, 123, 129, 366, 369, 370, 388], "another_don": [103, 107, 123, 129], "empty_cach": [103, 107, 123, 129, 184], "fake_tensordict": [103, 107, 123, 129, 370], "silent": [103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 257, 258, 261, 262, 265, 270, 273], "braxenv": [103, 107, 123, 129, 169, 362, 373], "envnam": [103, 107, 123, 129], "pipeline_st": [103, 107, 123, 129], "attibut": [103, 107, 123, 129], "maybe_reset": [103, 107, 123, 129], "speak": [103, 107, 123, 129, 369], "rand_act": [103, 107, 116, 123, 124, 125, 129, 141, 373], "register_gym": [103, 107, 123, 129, 373], "entry_point": [103, 107, 123, 129], "info_kei": [103, 107, 123, 129], "reward_threshold": [103, 107, 123, 129], "nondeterminist": [103, 107, 123, 129], "max_episode_step": [103, 106, 107, 108, 123, 129], "order_enforc": [103, 107, 123, 129], "autoreset": [103, 107, 123, 129], "disable_env_check": [103, 106, 107, 120, 121, 123, 129], "apply_api_compat": [103, 107, 123, 129], "nasium": [103, 107, 123, 129], "scope": [103, 107, 123, 129, 388], "dmcontrolenv": [103, 107, 123, 129, 329, 362, 369, 373, 380, 388], "dmc": [103, 107, 123, 129], "removeemptyspec": [103, 107, 123, 129], "threshold": [103, 107, 123, 129, 258, 278, 279, 371], "learnt": [103, 107, 123, 129, 356], "knowledg": [103, 107, 123, 129, 375, 377], "checker": [103, 106, 107, 120, 121, 123, 129], "stepapicompat": [103, 107, 123, 129], "concept": [103, 107, 123, 129, 370, 385], "deem": [103, 107, 117, 118, 123, 129, 130, 131], "envgym": [103, 107, 123, 129], "0855": [103, 107, 123, 129], "0215": [103, 107, 123, 129], "0881": [103, 107, 123, 129], "0412": [103, 107, 123, 129], "1101": [103, 107, 123, 129], "0080": [103, 107, 123, 129], "0254": [103, 107, 123, 129], "0424": [103, 107, 123, 129], "9609e": [103, 107, 123, 129], "9776e": [103, 107, 123, 129], "04": [103, 107, 111, 123, 129, 368, 369, 370, 371, 381, 383, 384, 386], "6347e": [103, 107, 123, 129], "3842e": [103, 107, 123, 129], "5338e": [103, 107, 123, 129], "3064e": [103, 107, 123, 129], "0381e": [103, 107, 123, 129], "6656e": [103, 107, 123, 129], "05": [103, 107, 123, 129, 369, 370, 381, 383, 384], "0204e": [103, 107, 123, 129], "action_spac": [103, 107, 123, 129, 153, 214, 239, 256, 257, 264, 265, 277, 278, 280, 281, 283, 284, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 372, 374, 378], "0833": [103, 107, 123, 129], "0275": [103, 107, 123, 129], "0612": [103, 107, 123, 129], "0770": [103, 107, 123, 129, 383], "1256": [103, 107, 123, 129, 383], "0082": [103, 107, 123, 129], "0186": [103, 107, 123, 129], "0476": [103, 107, 123, 129], "2221": [103, 107, 123, 129], "2256": [103, 107, 123, 129], "5930": [103, 107, 123, 129], "6937": [103, 107, 123, 129], "5865": [103, 107, 123, 129], "5479": [103, 107, 123, 129], "0187": [103, 107, 123, 129], "6825": [103, 107, 123, 129, 383], "5224": [103, 107, 123, 129], "0018": [103, 107, 123, 129, 383], "1005": [103, 107, 123, 129], "0335": [103, 107, 123, 129], "0268": [103, 107, 123, 129, 383], "0133": [103, 107, 123, 129], "0627": [103, 107, 123, 129], "0074": [103, 107, 123, 129, 383], "0488": [103, 107, 123, 129, 383], "0353": [103, 107, 123, 129], "0075": [103, 107, 123, 129, 383], "0069": [103, 107, 123, 129, 383], "0098": [103, 107, 123, 129, 383], "0058": [103, 107, 123, 129, 383], "0033": [103, 107, 123, 129, 383], "0157": [103, 107, 123, 129], "0004": [103, 107, 123, 129, 372, 383], "0381": [103, 107, 123, 129], "0452": [103, 107, 123, 129], "11355747": [103, 107, 123, 129], "04257728": [103, 107, 123, 129], "00408397": [103, 107, 123, 129], "04155852": [103, 107, 123, 129], "0389733": [103, 107, 123, 129], "01409826": [103, 107, 123, 129], "0978704": [103, 107, 123, 129], "08808327": [103, 107, 123, 129], "03970837": [103, 107, 123, 129], "00535434": [103, 107, 123, 129], "02353762": [103, 107, 123, 129], "05116226": [103, 107, 123, 129], "02788907": [103, 107, 123, 129], "06848346": [103, 107, 123, 129], "05154399": [103, 107, 123, 129], "0371798": [103, 107, 123, 129], "05128025": [103, 107, 123, 129], "dydact": [103, 107, 123, 129], "gym_env": [103, 107, 123, 129, 387], "reset_kei": [103, 107, 123, 129, 144, 174, 179, 180, 181, 381], "multitask": [103, 107, 123, 129], "multiag": [103, 107, 116, 123, 124, 125, 129, 202, 230, 238, 247, 307], "another_reward": [103, 107, 123, 129], "auto_cast_to_devic": [103, 107, 123, 129, 382], "soon": [103, 107, 123, 124, 125, 129], "__sort": [103, 107, 123, 129], "as__": [103, 107, 123, 129], "normal": [103, 107, 123, 129, 162, 190, 204, 205, 220, 224, 227, 228, 233, 245, 246, 254, 263, 267, 279, 292, 295, 342, 344, 360, 364, 366, 372, 374, 382, 388], "argmaxmodul": [103, 107, 123, 129], "n_ob": [103, 107, 123, 129, 160, 261, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 375], "n_act": [103, 107, 123, 129, 160, 277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 375], "ourselv": [103, 107, 123, 129, 371, 388], "emul": [103, 107, 123, 129], "epoch": [103, 107, 123, 129, 346, 371, 381, 382], "input_td": [103, 107, 123, 129], "rollout_td": [103, 107, 123, 129], "state_kei": [103, 107, 123, 129], "prevail": [103, 107, 123, 129, 145, 174, 202], "creator": [104, 351, 352, 358, 359, 360], "substitut": [104, 179, 190, 374], "vecnorm": [104, 360], "env_creat": [104, 369], "test_env1": 104, "_td": 104, "observation_count": [104, 388], "test_env2": 104, "sleep": [104, 388], "ps": 104, "p1": 104, "p2": 104, "9934": 104, "env_str": 105, "device_map": 105, "accross": [106, 108], "registri": 106, "asyncvectorenv": 106, "involv": [106, 108, 109, 117, 118, 126, 141, 373, 375], "pixel_observ": [106, 108, 109, 126], "pixelobservationwrapp": [106, 108, 109, 126], "adventur": [106, 108], "airraid": [106, 108, 388], "alien": [106, 108], "time_limit": 106, "timelimit": [106, 117, 118, 130, 131], "default_info_dict_read": [106, 107, 108, 123], "reader": [106, 107, 108, 123, 370], "set_info_dict_read": [106, 107, 108, 123, 373], "info_dict": [106, 107, 108, 123], "auto_register_info_dict": [106, 107, 108, 123], "multibinari": [106, 108], "multidiscret": [106, 108], "rag": [106, 108], "gym_conversion_exampl": [106, 108], "info_dict_read": [107, 123], "ignore_priv": 107, "baseinfodictread": 107, "tensordictprim": [107, 123, 219, 223, 274, 372], "succe": [107, 123], "underscor": 107, "primer": [107, 180, 219, 223, 274, 372], "halfcheetah": [107, 123, 137, 170, 369], "reward_run": [107, 123], "read_act": 107, "read_don": 107, "nonsens": 107, "fallback": 107, "broken": [107, 194], "read_ob": 107, "dictat": [107, 263, 267, 295, 369, 383], "read_reward": 107, "hoc": [107, 123, 374], "dict_read": 107, "my_info_kei": 107, "some_env": 107, "vecenv": 108, "vectorenv": 108, "secur": 109, "habitat3": 109, "ai": [109, 384], "habitatrenderpick": 109, "isaacgym": [110, 111], "isaacgymwrapp": [110, 362], "isaacgymenv": [111, 362], "webpag": 111, "isaac": 111, "essenc": [111, 373], "instadeepai": [112, 113], "2306": [112, 113], "09884": [112, 113], "snake": [112, 113], "grid": [112, 113, 329], "bodi": [112, 113], "body_st": [112, 113], "fruit_posit": [112, 113], "col": [112, 113], "head_posit": [112, 113], "tail": [112, 113], "game2048": [112, 113], "maze": [112, 113], "cleaner": [112, 113], "cvrp": [112, 113], "multicvrp": [112, 113], "minesweep": [112, 113], "rubikscub": [112, 113], "knapsack": [112, 113], "sudoku": [112, 113], "tsp": [112, 113], "connector": [112, 113], "v2": [112, 113, 127, 128, 304, 318, 319, 320, 321, 323, 324, 325, 326, 372, 388], "mmst": [112, 113], "graphcolor": [112, 113], "partli": [112, 113], "scrambl": [112, 113], "robotwarehous": [112, 113], "tetri": [112, 113], "binpack": [112, 113], "jobshop": [112, 113], "0x1fca91910": 112, "122": [112, 113, 383, 388], "0x1ff9baee0": 112, "134": [112, 113, 383], "0x1ff9ba7c0": 112, "172": [112, 113, 383], "drastic": [113, 123, 385], "rubric": [113, 162, 269], "mo": [114, 115], "minecart": [114, 115], "mo_gym": 115, "qualnam": 116, "leverag": [116, 124, 125, 369, 382, 388], "neural": [116, 124, 125, 204, 205, 242, 266, 364, 370, 371, 372, 374, 381, 382, 383, 388], "group_map": [116, 117, 118, 124, 125, 130, 131, 132, 381], "constructiuon": [116, 124, 125], "premad": [116, 117, 118, 124, 125, 130, 131, 307], "all_in_one_group": [116, 132], "agent_0": [116, 124, 125, 132, 381], "agent_1": [116, 124, 125, 132], "agent_2": [116, 124, 125, 132], "agent_3": 116, "one_group_per_ag": [116, 124, 125], "meltingpot": [117, 118], "2211": [117, 118], "13746": [117, 118], "melt": [117, 118], "pot": [117, 118], "novel": [117, 118, 375], "social": [117, 118], "familiar": [117, 118, 370, 382, 388], "unfamiliar": [117, 118], "broad": [117, 118], "cooper": [117, 118, 381, 382], "decept": [117, 118], "reciproc": [117, 118], "trust": [117, 118, 223], "stubborn": [117, 118], "substrat": [117, 118], "ml_collect": 117, "config_dict": 117, "configdict": 117, "categorical_act": [117, 118, 124, 125, 127, 128, 130, 131], "marlgroupmaptyp": [117, 118, 124, 125, 130, 131, 132, 362, 381], "agent_nam": [117, 118, 130, 131, 132], "agent_names_to_indices_map": [117, 118, 130, 131], "env_torchrl": [117, 118], "commons_harvest__open": [117, 118], "rgb": [117, 118], "144": [117, 118, 369, 383], "192": [117, 118, 370, 383], "collective_reward": [117, 118], "ready_to_shoot": [117, 118], "88": [117, 118, 127, 128, 369, 370, 383], "substrate_config": 118, "get_config": 118, "mp_env": 118, "build_from_config": 118, "default_player_rol": 118, "environn": 119, "mymbenv": [119, 203, 226], "world_model": [119, 203, 226, 288], "hidden_observ": [119, 203, 226], "mlp": [119, 203, 204, 205, 207, 208, 209, 210, 216, 219, 223, 226, 230, 251, 256, 274, 281, 283, 364, 370, 374, 375, 378, 380, 384, 387], "worldmodelwrapp": [119, 203, 226], "activation_class": [119, 203, 204, 205, 207, 208, 209, 210, 215, 216, 224, 226, 229, 230, 370, 374, 381, 382, 387], "relu": [119, 203, 211, 226, 233, 276], "activate_last_lay": [119, 203, 210, 224, 226], "sail": [120, 121], "sg": [120, 121], "10558": [120, 121], "readthedoc": 120, "en": 120, "python_interfac": 120, "envpoolmixin": 121, "env_bas": 121, "task_id": 121, "env_typ": 121, "gym_reset_return_info": 121, "envpool_env": 121, "www": [122, 227, 228], "fetch_openml": 122, "106": [122, 383, 385], "my_env_fun": [123, 129], "custom_attribute_list": [123, 129], "custom_attribut": [123, 129], "custom_method_list": [123, 129], "custom_method": [123, 129], "deploi": [123, 129, 141], "slight": [123, 129, 370], "share_individual_td": [123, 129], "shared_memori": [123, 129], "policy_proof": [123, 129], "ll": [123, 129, 217, 218, 221, 222, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 388], "serial_for_singl": [123, 129, 370], "circular": [123, 129, 369], "list_of_kwarg": [123, 129], "com_veloc": [123, 129], "head_height": [123, 129], "joint_angl": [123, 129], "torso_vert": [123, 129], "stringent": [123, 371, 381, 382], "inter": 123, "penv": 123, "env_fix": 123, "influenc": 123, "thumb": [123, 371], "myenv": [123, 141, 149, 152], "pipe": 123, "update_kwarg": [123, 129], "pettingzoo": [124, 125, 381, 382], "pet": [124, 125], "zoo": [124, 125], "__": [124, 125], "aecenv": [124, 125], "use_mask": [124, 125], "dead": [124, 125], "done_on_ani": [124, 125, 381], "compulsori": [124, 125], "adversary_0": [124, 125, 381], "adversari": [124, 125, 381], "vectoris": [124, 125, 217, 218, 221, 222], "sisl": 124, "multiwalker_v9": 124, "return_st": [124, 125], "aec": [124, 125], "n_piston": [124, 125], "pistonball_v6": [124, 125], "piston": [124, 125], "piston_0": [124, 125], "piston_1": [124, 125], "piston_20": [124, 125], "tictactoe_v3": [124, 125], "player": [124, 125], "player_1": [124, 125], "player_2": [124, 125], "butterfli": 125, "parallel_env": [125, 369, 387, 388], "vikashplu": 126, "wiki": 126, "06828": 126, "from_depth": 126, "smacv2": [127, 128], "starcraft": [127, 128], "challeng": [127, 128, 373, 383, 384], "10gen_terran": [127, 128], "10gen_zerg": [127, 128], "10gen_protoss": [127, 128], "3m": [127, 128], "8m": [127, 128, 384], "25m": [127, 128], "5m_vs_6m": [127, 128], "8m_vs_9m": [127, 128], "10m_vs_11m": [127, 128], "27m_vs_30m": [127, 128], "mmm": [127, 128], "mmm2": [127, 128], "2s3z": [127, 128], "3s5z": [127, 128], "3s5z_vs_3s6z": [127, 128], "3s_vs_3z": [127, 128], "3s_vs_4z": [127, 128], "3s_vs_5z": [127, 128], "1c3s5z": [127, 128], "2m_vs_1z": [127, 128], "corridor": [127, 128], "6h_vs_8z": [127, 128], "2s_vs_1sc": [127, 128], "so_many_banel": [127, 128], "bane_vs_ban": [127, 128], "2c_vs_64zg": [127, 128], "old": [127, 128, 292, 388], "smac": [127, 128], "map_nam": [127, 128], "176": [127, 128, 383, 388], "battle_won": [127, 128], "dead_al": [127, 128], "dead_enemi": [127, 128], "episode_limit": [127, 128], "322": [127, 128, 383], "Or": [127, 128, 229], "procedur": [127, 128], "distribution_config": [127, 128], "n_unit": [127, 128], "n_enemi": [127, 128], "team_gen": [127, 128], "dist_typ": [127, 128], "weighted_team": [127, 128], "unit_typ": [127, 128], "marin": [127, 128], "maraud": [127, 128], "medivac": [127, 128], "exception_unit_typ": [127, 128], "start_posit": [127, 128], "surrounded_and_reflect": [127, 128], "map_x": [127, 128], "map_i": [127, 128], "capability_config": [127, 128], "131": [127, 128, 383, 385], "starcraft2env": 128, "proroklab": [130, 131], "vectorizedmultiagentsimul": [130, 131], "2207": [130, 131], "03530": [130, 131], "basescenario": 130, "descript": [130, 140, 370, 371], "perfrom": [130, 131], "defaultt": 130, "continuous_act": [130, 131, 327, 381, 382], "repositiori": 130, "sparsiti": 130, "unbatched_action_spec": [130, 131, 382], "unbatched_observation_spec": [130, 131], "unbatched_reward_spec": [130, 131], "het_spec": [130, 131], "het_specs_map": [130, 131], "flock": [130, 131, 327], "agent_collision_rew": [130, 131], "agent_distance_rew": [130, 131], "ca": 132, "environment4": 132, "get_group_map": 132, "sumbodul": 133, "model_bas": [134, 135, 203, 226], "out_keys_inv": [134, 147, 149, 150, 152, 162, 163, 164, 168, 169, 176, 183, 383], "decod": [134, 234], "model_based_env": [134, 287], "dreamerenv": [134, 287, 362], "model_based_env_ev": 134, "num_interv": 137, "out_action_kei": 137, "samplingstrategi": 137, "optino": 137, "intenum": 137, "interv": [137, 328, 329, 338, 348, 370, 383], "action_disc": 137, "transform_input_spec": [137, 141, 148, 149, 150, 151, 162, 164, 168, 169, 174, 178, 179, 180, 183, 185, 187, 192], "masker": 138, "tensor_spec": [138, 193, 202, 284, 285, 295, 297], "maskedenv": 138, "ones_lik": 138, "scatter": 138, "fill_float": 140, "fill_int": 140, "fill_bool": 140, "someenvclass": 140, "autoresetenv": 140, "argumet": 140, "fooenv": 140, "sign": [140, 176, 309, 381], "envtyp": 140, "reshape_fn": 141, "reset_func": 141, "environmt": 141, "request": [141, 167], "tensordict_batch_s": 141, "els": [141, 217, 218, 221, 222, 234, 364, 366, 369, 370, 371, 372, 381, 382, 383, 384], "tensordict_reset": [141, 383], "transform_env_batch_s": [141, 148, 183, 192], "transform_output_spec": [141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 192], "transform_observation_spec": [141, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 162, 164, 168, 169, 170, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 192, 383], "transform_reward_spec": [141, 142, 147, 148, 149, 150, 154, 160, 168, 169, 172, 173, 174, 175, 176, 178, 183, 185, 192], "transformfull_done_spec": [141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 192], "biner": 142, "burn_in": 143, "burn": 143, "date": [143, 332], "retur": 143, "burnt": 143, "gru_modul": [143, 219, 274], "input_s": [143, 217, 218, 219, 221, 222, 223, 274, 372], "hidden_s": [143, 217, 218, 219, 221, 222, 223, 274, 372], "set_recurrent_mod": [143, 219, 223, 372], "burn_in_transform": 143, "gru": [143, 180, 218, 219, 274], "num_lay": [143, 217, 219, 221, 223, 234, 235, 274], "86": [143, 369, 370, 381, 382, 383], "3008": [143, 370], "0344": 143, "padding_valu": [144, 227, 228], "as_invers": 144, "movement": 144, "1312": [144, 370], "5602": 144, "unsqueezetransform": [144, 383, 385], "consumpt": [144, 362], "followin": 144, "pictur": 144, "pixels_trsf": [144, 385], "grayscal": [144, 370, 372, 385, 388], "data_exclud": [144, 385], "del_kei": [145, 186, 380, 383], "unsqueeze_if_oor": 145, "observation_posit": 145, "observation_veloc": 145, "key1": [145, 337, 345], "key2": [145, 337, 345], "center": [146, 329], "width": [146, 170], "scalar": [147, 172, 208, 210, 231, 232, 254, 258, 259, 262, 273, 277, 278, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 307, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 364, 370, 375, 383], "permit": [147, 156, 185, 277, 279, 292, 295, 297], "rewardsc": [148, 184, 369, 370, 372], "rewardclip": 148, "transformed_env": [148, 183, 184, 373], "transform_env_devic": [148, 150, 183, 192], "dtype_in": 149, "dtype_out": 149, "scan": [149, 152, 268, 269], "resp": [149, 152], "not_transform": [149, 152], "constructedw": [149, 152], "orig_devic": 150, "unspecifi": 150, "transform_done_spec": [150, 183, 192], "num_actions_effect": 151, "max_act": 151, "include_forward": 151, "num_act": [151, 285, 374], "action_out": 151, "_call": [151, 156, 383], "eol_kei": 153, "lives_kei": 153, "eol_attribut": 153, "unwrap": 153, "breakout": 153, "210": [153, 164, 383], "160": [153, 164, 370, 383], "eol_transform": 153, "eol": 153, "dqnloss": [153, 277, 278, 280, 283, 285, 286, 287, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 307, 353, 362, 365, 370, 372, 378], "register_kei": 153, "loss_or_advantag": 153, "lossmodul": [153, 346, 355, 356, 362], "valueestimatorbas": [153, 293, 362], "excluded_kei": 154, "finit": [155, 374, 385], "first_dim": 156, "last_dim": 156, "allow_positive_dim": [156, 185], "th": [156, 185, 217, 221, 383], "frameskip": 156, "repeatedli": [157, 371, 382], "init_kei": [159, 261], "tracker": 159, "pi_curr": 160, "pi_0": 160, "overfit": 160, "probabilist": [160, 263, 362, 371, 387], "get_dist": [160, 267, 268], "mod": [160, 219, 223, 261, 270, 372, 378], "normalparamextractor": [160, 364, 371, 374, 382], "probabilisticactor": [160, 251, 252, 253, 255, 277, 278, 282, 284, 285, 291, 294, 295, 296, 297, 298, 300, 301, 364, 369, 371, 374, 381, 382], "tanhnorm": [160, 251, 252, 253, 263, 269, 277, 278, 291, 295, 296, 297, 298, 300, 301, 362, 371, 382, 387], "return_log_prob": [160, 251, 252, 253, 263, 267, 269, 297, 364, 371, 374, 381, 382, 387], "apply_": 160, "copy_": [160, 369], "formulat": 160, "diverg": [160, 219, 223, 263, 267, 288, 292], "noop": [161, 387], "trial": 161, "standard_norm": [162, 173, 190, 369, 370, 372], "affin": [162, 173, 190], "layer": [162, 190, 204, 205, 207, 208, 213, 215, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 232, 234, 235, 242, 243, 249, 260, 270, 364, 370, 371, 372, 374, 381, 384], "epsilon": [162, 254, 258, 259, 262, 299, 344, 370, 371, 372, 374], "recover": 162, "set_default_tensor_typ": 162, "doubletensor": 162, "isclos": 162, "next_ob": [162, 309, 310, 311, 312, 387], "init_stat": [162, 369, 370, 371, 372], "3752e": 162, "5087e": 162, "9294e": 162, "9636": 162, "5608": 162, "6408": 162, "num_it": [162, 370, 371], "reduce_dim": [162, 369, 370, 371, 372], "cat_dim": [162, 369, 370, 371, 372], "keep_dim": [162, 370, 372], "statist": [162, 190, 297, 360, 369, 370, 371, 388], "gaussian": [162, 180, 203, 226, 231, 232, 237, 254, 371, 381], "empir": [162, 203, 226, 263, 267, 369, 371, 382], "3d": [162, 204], "third": [162, 257, 381, 382], "reorder": 164, "in_keys_in": 164, "channel": [164, 182, 229, 234, 235, 370], "r3m": [166, 384], "resnet": [166, 186, 188], "visual": [166, 186, 188, 329, 371, 381, 383], "embed": [166, 186, 187, 188, 207, 238, 250, 251, 252, 253, 266, 271, 384], "ego4d": [166, 186, 188], "univers": [166, 186, 188, 373], "suraj": [166, 186], "nair": [166, 186], "aravind": [166, 186], "rajeswaran": [166, 186], "vikash": [166, 186, 188], "kumar": [166, 186, 188], "chelsea": [166, 186], "finn": [166, 186], "abhinav": [166, 186], "gupta": [166, 186], "2203": [166, 186, 226, 384], "12601": [166, 186, 384], "_init": [166, 186, 369], "resnet50": [166, 188, 384], "model_nam": [166, 186, 188, 332], "resnet34": 166, "resnet18": 166, "r3m_vec": [166, 384], "stack_imag": [166, 188], "tread": [166, 188], "separet": [166, 188], "hub": [166, 188, 373, 384], "resnet50_weight": [166, 188], "imagenet1k_v1": [166, 188], "download_path": [166, 188], "tensor_pixels_kei": [166, 188], "sub_seq_len": 167, "sample_dim": [167, 369], "primarili": [167, 374], "hesit": 167, "robust": 167, "mix": [167, 238, 247, 307, 369, 381, 382], "improp": 167, "dummyenv": 168, "another_oth": 168, "other_reward": 168, "create_copi": 169, "stuff": [169, 376], "newnam": 169, "r2g": 171, "reward_to_go": 171, "bernoulli_": 171, "9010": 171, "9404": [171, 315], "9701": [171, 315], "9900": [171, 315], "0000": [171, 181, 258, 259, 270, 315, 371, 372, 383, 387], "crash": 171, "clamp_min": 172, "clamp_max": 172, "clip_min": 172, "clip_max": 172, "episode_": 174, "reward1": 174, "reward2": 174, "episode_reward": [174, 381, 382], "keep_reward": 175, "keep_don": 175, "logical_or": 176, "squeeze_dim": 177, "step_count_kei": 178, "update_don": 178, "disjunct": 178, "recognis": 178, "target_return": 179, "subtract": 179, "default_valu": [180, 274, 372], "unit": [180, 203, 215, 217, 218, 234, 235, 240, 241, 371], "transfomedenv": 180, "mykei": 180, "__unless": 180, "exists__": 180, "get_primers_from_modul": [180, 219, 223, 362], "10th": 181, "0216": 181, "1149": 181, "1990": 181, "2749": 181, "3281": 181, "9290": 181, "3702": 181, "8978": 181, "from_int": 182, "shape_toler": 182, "permuat": 182, "ri": 182, "principl": 183, "cattransform": 183, "notabl": 183, "rewardsum": [183, 192, 201, 381, 382], "smoothli": 184, "add_1": 184, "cache_spec": 184, "set_missing_toler": 184, "keyerror": 184, "unsqueeze_dim": [185, 383], "danger": 185, "vc1": 186, "vc1_vec": 186, "untrain": 186, "make_noload_model": 186, "vip": [187, 188, 384], "implicit": [188, 284, 291, 385], "jason": 188, "ma": 188, "shagun": 188, "sodhani": 188, "dinesh": 188, "jayaraman": 188, "osbert": 188, "bastani": 188, "ami": 188, "zhang": 188, "vip_vec": 188, "final_nam": 189, "sb3": 189, "terminal_obs_read": 189, "truli": [189, 387], "till": 189, "shared_td": 190, "decai": [190, 254, 258, 299, 344, 369, 370, 372, 388], "9999": [190, 383], "0001": [190, 215, 233, 371, 383], "to_observation_norm": 190, "frozen_copi": 190, "race": 190, "underflow": [190, 344], "build_td_for_shared_vecnorm": 190, "memmori": 190, "queue": [190, 385], "td_share": 190, "unfreez": 190, "train_env": 190, "eval_env": 190, "state_dim": [191, 206, 211, 237, 240, 241, 255], "action_dim": [191, 206, 207, 209, 211, 237, 255, 369, 380], "gsde": [191, 296, 360], "gsdemodul": 191, "rb_transform": 192, "resist": 192, "insensit": 192, "sensit": [192, 370], "_orig": 192, "95": [192, 226, 303, 369, 370, 371, 372, 383], "tdreset": [192, 380], "window": [192, 261, 381, 385, 387], "edit": [192, 376], "cube": 193, "check_dtyp": 194, "discrep": [194, 277, 279, 280, 281, 292, 295, 297, 307], "rng": [194, 383], "revert": [194, 374, 385], "probabilistictdmodul": [199, 200, 224, 263, 267, 308, 342], "next_tensordict": 201, "keep_oth": [201, 383], "exclude_reward": 201, "exclude_don": 201, "exclude_act": 201, "next_": 201, "funtion": 201, "_stepmdp": 201, "write_full_fals": 202, "_terminated_or_trunc": 202, "entropi": [203, 277, 278, 279, 284, 285, 291, 292, 294, 295, 296, 298, 300, 301, 382], "botev": 203, "2013": 203, "cem": 203, "plan": [203, 225, 226], "varianc": [203, 220, 233, 245, 246, 365, 369, 371, 382], "k": [203, 217, 218, 221, 222], "maximis": [203, 207, 209, 226, 364, 370, 371, 382], "modelbasedenv": [203, 226], "planning_horizon": [203, 226], "optim_step": [203, 226, 370, 378], "mpc": [203, 225, 226], "num_candid": [203, 226], "candid": [203, 226], "top_k": [203, 226], "modelbasedenvbas": [203, 225, 226, 362], "safemodul": [203, 225, 251, 253, 267, 277, 278, 284, 285, 291, 295, 296, 297, 298, 300, 301, 351, 352, 356, 362, 387], "num_cel": [204, 205, 207, 208, 209, 210, 215, 216, 219, 223, 224, 229, 230, 251, 274, 370, 371, 372, 374, 375, 378, 381, 382, 387], "elu": [204, 205, 207, 208, 209, 210, 215, 216, 229, 370, 387], "activation_kwarg": [204, 205, 224], "norm_class": [204, 205, 207, 208, 224], "norm_kwarg": [204, 205, 224], "bias_last_lay": [204, 205, 207, 208, 209, 210, 216, 224], "aggregator_class": [204, 205, 207, 208, 370, 372, 387], "squashdim": [204, 205, 207, 216, 229, 387], "aggregator_kwarg": [204, 205, 207, 208, 370, 372], "squeeze_output": [204, 205, 207, 208, 370, 372], "cell": [204, 205, 217, 218, 219, 221, 222, 223, 224, 229, 230, 371, 373, 374, 375, 376, 377, 378], "kernel": [204, 205, 216, 229], "cnet": [204, 205], "conv3d": 204, "lazyconv2d": [205, 207, 208, 216, 229, 387], "transformer_config": [206, 237, 255], "decisiontransform": [206, 237], "dtconfig": [206, 211, 237], "2202": [206, 211, 294], "05607": [206, 211, 294], "return_to_go": [206, 211, 237, 255], "conv_net_kwarg": [207, 208], "mlp_net_kwarg": [207, 208, 209], "use_avg_pool": [207, 208], "WITH": [207, 208, 209, 210, 262, 299], "1509": [207, 208, 209, 210, 226, 262, 281, 290, 299, 383], "02971": [207, 208, 209, 210, 262, 299], "reus": [207, 336], "convnet": [207, 208, 216, 229, 372, 374, 387], "ndims_in": 207, "avgpool": [207, 208], "lazylinear": [207, 208, 209, 210, 216, 224, 364, 371, 374, 383, 384, 387], "2304": [207, 370], "adaptiveavgpool2d": [208, 370, 372], "output_s": [208, 370, 372], "squeeze2dlay": 208, "400": [209, 210, 377, 382, 383, 385], "mlp_net_kwargs_net1": 210, "mlp_net_kwargs_net2": 210, "mlp1": 210, "mlp2": 210, "decion": 211, "desdescrib": 211, "n_embd": 211, "n_layer": [211, 217, 221], "n_head": 211, "n_inner": 211, "n_posit": 211, "resid_pdrop": 211, "attn_pdrop": 211, "gpt2config": 211, "atol": [212, 244], "rtol": [212, 244], "batch_shap": [212, 244], "event_shap": [212, 244], "absolut": [212, 244, 369], "densiti": [212, 227, 228, 236, 246], "mass": [212, 227, 228, 236, 246, 383], "rsampl": [212, 228, 236, 267], "sample_shap": [212, 227, 228, 236], "softmax": [213, 228, 236, 256, 257], "var_num": [214, 239, 256, 257, 265], "action_value_kei": [214, 239, 256, 257, 264, 265, 293, 307], "action_mask_kei": [214, 239, 256, 257, 258, 259, 264, 265], "perspect": [214, 257, 286, 371], "1707": [214, 257, 286, 295], "06887": [214, 257, 286], "mult": [214, 230, 239, 256, 257, 264, 265], "tensordict_modul": [214, 217, 218, 221, 222, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 280, 284, 285, 291, 295, 296, 297, 298, 300, 301, 364], "nbin": [214, 256, 364], "customdistributionalqv": 214, "log_softmax": [214, 256], "from_modul": [214, 266, 269, 387], "one_hot": [214, 228, 239], "qvalue_actor": [214, 239, 256, 264, 364], "to_modul": [214, 266, 269, 369, 387], "std_bia": 215, "std_min_val": 215, "belief": [215, 234, 240, 241], "1912": [215, 287, 288, 289], "01603": [215, 287, 288, 289], "softplu": [215, 233, 273, 275, 276], "out_features_valu": 216, "cnn_kwarg": [216, 370], "mlp_kwarg": [216, 370], "duel": 216, "cnn": [216, 229, 370, 374, 387], "06581": 216, "batch_first": [217, 219, 221, 223, 372], "bidirect": [217, 221, 372], "cudnn": [217, 218, 221, 222, 372], "vmap": [217, 218, 221, 222, 248, 266, 269, 387], "rnn": [217, 218, 221, 222, 372, 374], "device_count": [217, 218, 221, 222, 388], "n_in": [217, 218, 221, 222], "n_out": [217, 218, 221, 222], "h0": [217, 218, 221, 222], "h1": [217, 218, 221, 222], "call_gru": [217, 218], "h_out": [217, 218, 221, 222], "batched_cal": [217, 218, 221, 222], "gate": [217, 218, 221], "r_t": 217, "sigma": [217, 218, 220, 221, 222, 245, 246, 254, 262, 371, 381], "w_": [217, 218, 221, 222], "ir": [217, 218], "x_t": [217, 221], "b_": [217, 218, 221, 222], "hr": [217, 218, 221], "h_": [217, 218, 221], "z_t": 217, "iz": [217, 218], "hz": [217, 218], "n_t": 217, "odot": [217, 218, 221, 222], "hn": [217, 218, 221], "h_t": [217, 221], "sigmoid": [217, 218, 221, 222], "hadamard": [217, 218, 221, 222], "multilay": [217, 221], "_t": [217, 221, 382, 383], "ge": [217, 221], "bernoulli": [217, 221], "b_ih": [217, 218, 221, 222, 223], "b_hh": [217, 218, 221, 222, 223], "seq": [217, 219, 221, 223, 261, 372, 378, 380], "h_0": [217, 221, 222], "unbatch": [217, 221], "pack_padded_sequ": [217, 221], "pack_sequ": [217, 221], "num": [217, 221, 378], "_layer": [217, 221], "_size": [217, 218, 221, 222], "h_n": [217, 221], "packedsequ": [217, 221], "weight_ih_l": [217, 221], "learnabl": [217, 218, 221, 222], "w_ir": 217, "w_iz": 217, "w_in": 217, "num_direct": [217, 221], "weight_hh_l": [217, 221], "w_hr": 217, "w_hz": 217, "w_hn": 217, "bias_ih_l": [217, 221], "b_ir": 217, "b_iz": 217, "b_in": 217, "bias_hh_l": [217, 221], "b_hr": 217, "b_hz": 217, "b_hn": 217, "mathcal": [217, 218, 221, 222], "sqrt": [217, 218, 221, 222, 262], "frac": [217, 218, 221, 222, 371], "seq_len": [217, 221], "subtli": 217, "matrix": [217, 221, 231, 232], "contrast": [217, 290, 385], "hx": [217, 218, 221, 222], "lstmcell": [218, 223], "gru_cel": 218, "z": 218, "weight_ih": [218, 222], "weight_hh": [218, 222], "bias_ih": [218, 222], "bias_hh": [218, 222], "rocm": [218, 222], "embedd": [219, 223], "grucel": [219, 266], "python_bas": [219, 223], "recurrent_st": [219, 223, 274, 372], "custom_kei": [219, 223], "recurrent_mod": [219, 223], "make_tensordict_prim": [219, 223, 372], "rs": [219, 369], "gru_module_train": 219, "policy_train": [219, 223], "traj_td": [219, 223], "policy_infer": [219, 223], "td_inf": [219, 223], "assert_clos": [219, 223], "upscal": [220, 245, 246], "tanh_loc": [220, 245, 246], "event_dim": [220, 244, 245], "poor": [220, 245, 246], "explos": [220, 245, 246], "switch": [220, 246, 327], "formula": [220, 245, 246, 277, 279, 292, 295, 365, 371], "proj_siz": 221, "c0": [221, 222], "c1": [221, 222], "call_lstm": [221, 222], "c_out": [221, 222], "i_t": 221, "ii": [221, 222], "hi": [221, 222], "f_t": 221, "hf": [221, 222], "g_t": 221, "ig": [221, 222], "hg": [221, 222], "o_t": 221, "ho": [221, 222], "c_t": 221, "c_": 221, "forget": 221, "1402": 221, "1128": 221, "c_0": [221, 222], "proj": 221, "c_n": 221, "w_ii": 221, "w_if": 221, "w_ig": 221, "w_io": 221, "w_hi": 221, "w_hf": 221, "w_hg": 221, "w_ho": 221, "b_ii": 221, "b_if": 221, "b_ig": 221, "b_io": 221, "b_hi": 221, "b_hf": 221, "b_hg": 221, "b_ho": 221, "weight_hr_l": 221, "_revers": 221, "analog": [221, 374], "cn": 221, "lstm_cell": 222, "h_1": 222, "c_1": 222, "time_step": [222, 261], "cx": 222, "correspont": 223, "recurrent_state_h": [223, 372], "recurrent_state_c": [223, 372], "triplet": [223, 264, 265], "lstm_modul": 223, "rs_h": 223, "rs_c": 223, "hidden0": 223, "hidden1": 223, "single_bias_last_lay": 224, "layer_class": 224, "layer_kwarg": 224, "perceptron": [224, 374], "aslo": 224, "42": [224, 277, 278, 280, 284, 291, 298, 368, 369, 370, 372, 383, 386], "noisylinear": [224, 231, 362, 370], "noisylazylinear": [224, 362], "mpcplanner": 225, "tensordict_out": [225, 388], "mppi": 226, "covari": 226, "william": [226, 297], "aldrich": 226, "theodor": 226, "01149": 226, "hansen": 226, "wang": 226, "su": 226, "04955": 226, "valueoper": [226, 251, 252, 253, 277, 278, 279, 280, 285, 291, 292, 295, 296, 297, 298, 300, 301, 356, 364, 369, 371, 375], "tdlambdaestim": [226, 362, 369], "value_net": [226, 281, 283, 297, 309, 310, 311, 312, 371, 374, 375, 378], "adv": 226, "lmbda": [226, 303, 309, 312, 314, 320, 321, 322, 325, 326, 365, 369, 371, 382], "value_network": [226, 280, 281, 283, 284, 286, 291, 298, 309, 310, 311, 312, 365, 369, 371, 375, 378, 381], "temperatur": [226, 278, 284, 291], "neg_inf": [227, 228], "inf": [227, 228], "api_doc": [227, 228], "tf_agent": [227, 228], "event": [227, 228, 236, 318, 319, 320, 321, 323, 324, 325, 326, 385], "unnorm": [227, 228, 236], "sparse_mask": [227, 228], "dens": [227, 228], "0831": [227, 228], "1203": [227, 228], "0928": [227, 228], "1972": [227, 228], "grad_method": [228, 236], "reparamgradientstrategi": [228, 236], "passthrough": [228, 236], "relaxedonehot": [228, 236], "zeros_lik": [228, 383], "sample_non_valid": 228, "share_param": [229, 230, 381, 382], "homogen": [229, 230, 381, 382], "agent_network": [229, 230], "modulelist": [229, 230, 387], "2592": [229, 370], "decentr": 229, "n_agent_input": [230, 381, 382], "n_agent_output": [230, 381, 382], "lazili": [230, 383], "toech": 230, "centalis": 230, "shown": [230, 364, 380, 381, 382, 385], "std_init": [231, 232], "initialize_paramet": 231, "isol": [231, 293], "1706": [232, 247], "10295v3": 232, "induc": 232, "aid": 232, "scale_map": 233, "biased_softplus_1": 233, "scale_lb": [233, 240, 241], "module_norm": 233, "1803": [234, 235, 238], "10122": [234, 235], "rnn_hidden": 234, "latent": 235, "excacli": 236, "inres": 237, "mu": [237, 262, 371], "state_shap": [238, 307], "mixing_embed_dim": [238, 307], "qmix": [238, 381, 382], "mixer": [238, 247, 307], "monoton": 238, "hyper": 238, "11485": 238, "qmixerloss": [238, 247], "qmix_vdn": [238, 247], "vdn": [238, 247], "greedi": [239, 257, 258, 259, 265, 370, 372, 374], "hidden_dim": [240, 241], "posterior": [240, 288], "rssm": [240, 241, 288], "1811": [240, 241], "04551": [240, 241], "obs_embed": 240, "rnn_hidden_dim": 241, "dream": 241, "tanhtransform": 245, "get_mod": 245, "adam": [245, 369, 370, 371, 372, 375, 378, 381, 382, 383], "decomposit": 247, "05296": 247, "hide": [248, 371, 381, 382], "satisfi": [248, 364], "vmap_dim": 248, "lam": 248, "sample_in": 248, "sample_in_td": 248, "vm": 248, "translat": [250, 263], "character": [250, 256, 263, 264, 266, 385], "overflow": [250, 256, 257, 263, 264, 265, 266, 267], "td_modul": [250, 251, 252, 253, 263, 266, 267, 269, 271, 374, 387], "3635": 250, "0340": 250, "1476": 250, "3911": [250, 383], "1664": [250, 370, 383], "5455": 250, "2247": 250, "4583": 250, "2916": 250, "2160": 250, "5337": 250, "5193": 250, "grad_fn": [250, 258, 259, 387], "addmmbackward0": 250, "actorvalueoper": [251, 364, 374], "get_policy_oper": [251, 252, 253, 279, 292, 295, 364], "standalon": [251, 252, 253, 374], "tdmodul": [251, 252, 253, 356], "get_critic_oper": 251, "common_oper": [251, 253], "policy_oper": [251, 252, 253], "value_oper": [251, 252, 253], "normalparamwrapp": [251, 252, 253, 263, 269, 277, 278, 285, 291, 295, 296, 297, 298, 300, 301, 362, 387], "module_hidden": [251, 253], "td_module_hidden": [251, 253], "module_act": [251, 253], "td_module_act": [251, 252, 253], "module_valu": [251, 252, 253], "td_module_valu": [251, 252, 253], "state_action_valu": [251, 271, 278, 284, 291, 298, 308, 356, 364, 369, 381, 387], "td_clone": [251, 252, 253], "tensordictmodulewrapp": [251, 351, 352, 356], "get_policy_head": [251, 252, 253], "safesequenti": [251, 252, 253, 307], "head": [251, 253, 274, 279, 292, 295], "get_value_head": [251, 252, 253], "get_value_oper": [251, 252, 253, 279, 292, 295], "action_modul": 252, "state_valu": [252, 253, 271, 279, 284, 291, 292, 295, 296, 298, 309, 310, 311, 312, 314, 316, 318, 320, 322, 323, 325, 364, 369, 371, 382], "actorcriticoper": [253, 279, 292, 295, 364, 374], "embeddig": 253, "refet": 253, "actorcriticwrapp": [253, 364, 369], "po": [254, 259], "sigma_init": [254, 381], "sigma_end": [254, 381], "annealing_num_step": [254, 258, 259, 262, 369, 370, 372, 374, 378, 381], "captur": [254, 258, 259, 262], "omiss": [254, 258, 259, 262], "ommit": [254, 258, 259, 262], "inferec": 255, "set_tensor_kei": 255, "dt_inference_wrapp": 255, "baz": 255, "inference_context": 255, "obs_dim": 255, "tanhdelta": [255, 362, 369, 381], "dtactor": 255, "actor_modul": [255, 387], "dist_class": 255, "dist_kwarg": 255, "distribution_kwarg": [255, 263, 267, 371, 381, 382], "inference_actor": 255, "sequence_length": 255, "mask_context": 255, "out_act": 255, "qvaluemodul": [256, 264, 307, 372, 374, 378], "distributionaldqnnet": 256, "make_log_softmax": 256, "my_action_valu": [257, 265], "chanc": 257, "thid": 257, "eps_init": [258, 259, 262, 370, 372, 374, 378], "eps_end": [258, 259, 262, 370], "explorative_polici": [258, 259, 262], "9055": [258, 259, 383], "9277": [258, 259], "6295": [258, 259], "2532": [258, 259], "addbackward0": [258, 259], "lmheadmodel": 260, "actor_head": [260, 279, 292, 295], "base_model": 260, "lm_head": 260, "macro": 261, "lookahead": 261, "n_action": [261, 278, 281, 283, 294, 298], "reshape_cat": 261, "actor_bas": 261, "obs_cat": 261, "obs_cat_reshap": 261, "action_orig": 261, "counter": [261, 339, 366], "ornstein": [262, 369], "uhlenbeck": [262, 369], "ou": [262, 369], "correl": 262, "noise_t": 262, "noise_": 262, "theta": [262, 371, 383], "sigma_t": 262, "sigma_": 262, "anneal": [262, 370, 374, 381], "ou_prev_nois": 262, "ou_step": 262, "x0": 262, "sigma_min": 262, "n_steps_ann": 262, "is_init_kei": 262, "_ou_prev_nois": 262, "_ou_step": 262, "default_interaction_typ": [263, 267, 374], "interaction_typ": [263, 267], "datacollectorbas": [263, 348, 351, 352, 356, 362], "set_interaction_typ": [263, 267], "compositedistribut": [263, 374], "distribution_map": 263, "name_map": 263, "cache_dist": [263, 267], "n_empirical_estim": [263, 267], "compound": [263, 374], "categ": 263, "chose": 265, "functionalmodul": 266, "functionalmodulewithbuff": 266, "td_fmodul": 266, "td_function": 266, "td_state": 266, "params_repeat": 266, "td_vmap": [266, 269], "random_sampl": [266, 267], "suppli": 267, "fist": 267, "log_prob_kei": [267, 382], "probabilistictensordictsequenti": [268, 277, 279, 292, 295, 297, 351, 352, 387], "partial_toler": [268, 269, 380], "who": [268, 269], "AND": [268, 269], "tensordictsequenci": 269, "tensordictsequ": 269, "safeprobabilisticmodul": [269, 364], "spec1": 269, "net1": 269, "module1": 269, "td_module1": 269, "spec2": 269, "module2": 269, "td_module2": 269, "clamp": [270, 288, 346, 381, 383], "boundari": [270, 371, 381, 382], "resolut": 270, "9944": 270, "9991": 270, "3020": 270, "2299": [270, 383], "5418": 270, "2989": 270, "6849": 270, "3169": 270, "2690": 270, "9649": [270, 383], "5686": 270, "8602": 270, "0315": 270, "8455": [270, 383], "6027": 270, "4746": 270, "7843": 270, "7782": 270, "2111": 270, "5115": 270, "4687": 270, "5760": 270, "custommodul": 271, "imaginari": 272, "imagin": 272, "transition_model": 272, "get_reward_oper": 272, "get_transition_model_oper": 272, "min_val": [273, 276], "_bia": 273, "surject": 276, "expln": 276, "biased_softplu": [276, 362], "beggin": 276, "biased_softplus_": 276, "syntax": [276, 369], "met": [276, 381, 383], "1602": 277, "01783v2": 277, "actor_network": [277, 278, 279, 280, 282, 284, 285, 291, 292, 294, 295, 296, 297, 298, 300, 301, 369, 371, 375, 381, 382], "critic_network": [277, 279, 292, 295, 297, 371, 382], "entropy_bonu": [277, 279, 292, 295, 371], "favour": [277, 279, 292, 295], "samples_mc_entropi": [277, 279, 292, 294, 295], "mont": [277, 279, 292, 295, 369], "carlo": [277, 279, 292, 295, 369], "entropy_coef": [277, 279, 292, 295, 371, 382], "critic_coef": [277, 279, 292, 295, 371], "loss_critic_typ": [277, 279, 292, 295, 297, 371], "l1": [277, 279, 280, 281, 285, 292, 295, 296, 297, 300, 301, 304, 307, 364, 369], "l2": [277, 279, 280, 281, 282, 283, 285, 288, 289, 292, 295, 296, 297, 300, 301, 304, 307, 369, 381], "smooth_l1": [277, 278, 279, 280, 281, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 304, 307, 371], "separate_loss": [277, 279, 280, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301], "propag": [277, 279, 280, 284, 285, 291, 292, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312, 371, 381, 382], "advantage_kei": [277, 279, 292, 295, 297, 309, 310, 311, 312], "value_target_kei": [277, 279, 292, 295, 297, 309, 310, 311, 312], "value_target": [277, 279, 292, 295, 297, 309, 310, 311, 312, 371, 382], "ddp": [277, 279, 292, 295, 297], "fsdp": [277, 279, 292, 295, 297], "divid": [277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 294, 295, 296, 297, 298, 300, 301, 349, 364, 369, 381, 382, 383], "clip_valu": [277, 279, 292, 295, 297], "loss_crit": [277, 295, 371, 382], "loss_entropi": [277, 295, 371, 382], "loss_object": [277, 295, 371, 382], "recur": [277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312, 313, 374], "next_reward": [277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312], "next_don": [277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312], "next_termin": [277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 309, 310, 311, 312], "loss_obj": 277, "next_observ": [277, 278, 280, 281, 283, 284, 285, 291, 295, 296, 297, 298, 300, 301, 380], "sacloss": [277, 290, 299, 362], "select_out_kei": [277, 278, 280, 284, 285, 291, 295, 296, 298, 300, 301], "make_value_estim": [277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 302, 307, 365, 369, 370, 381, 382, 387], "value_typ": [277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 303, 307, 369], "hyperparam": [277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 369], "enum": [277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 303, 307, 369], "default_value_estim": [277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 369, 387], "default_value_kwarg": [277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 362, 369], "dqn_loss": [277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 302, 307], "td1": [277, 278, 280, 281, 283, 285, 286, 287, 291, 293, 295, 296, 297, 298, 300, 301, 307, 369], "conserv": [278, 283], "qvalue_network": [278, 284, 285, 291, 296, 298, 300, 301], "loss_funct": [278, 280, 281, 282, 283, 284, 285, 291, 296, 298, 300, 301, 304, 307, 369, 381], "alpha_init": [278, 285, 294, 296, 298], "min_alpha": [278, 285, 294, 296, 298], "max_alpha": [278, 285, 294, 296, 298], "fixed_alpha": [278, 285, 294, 296, 298], "target_entropi": [278, 285, 294, 296, 298], "prod": [278, 294, 298], "delay_actor": [278, 280, 298, 300, 301], "delay_qvalu": [278, 285, 296, 298, 300, 301], "min_q_weight": 278, "max_q_backup": 278, "backup": 278, "deterministic_backup": 278, "num_random": 278, "with_lagrang": 278, "lagrang": 278, "lagrange_thresh": 278, "valueclass": [278, 280, 285, 296, 298, 300, 301], "qvalu": [278, 284, 285, 291, 296, 298, 300, 301], "loss_actor": [278, 280, 284, 285, 291, 296, 297, 298, 300, 301, 341, 369, 375, 381, 387], "loss_actor_bc": 278, "loss_alpha": [278, 285, 296, 298], "loss_cql": [278, 283], "loss_qvalu": [278, 283, 284, 285, 291, 296, 298, 300, 301], "loss_alpha_prim": 278, "clip_epsilon": [279, 371, 382], "normalize_advantag": [279, 292, 295, 382], "value_kei": [279, 292, 295, 309, 310, 311, 312, 369], "somemodul": [279, 292, 295], "someactor": [279, 292, 295], "value_head": [279, 292, 295], "somevalu": [279, 292, 295], "loss_modul": [279, 290, 292, 293, 295, 299, 346, 355, 356, 365, 366, 369, 370, 371, 381, 382, 385], "ppoloss": [279, 292, 362], "delay_valu": [280, 281, 283, 286, 297, 298, 307, 370, 372, 378, 381], "loss_valu": [280, 284, 291, 297, 298, 369, 371, 375, 381, 382, 387], "pred_valu": [280, 283, 300, 301, 369, 375, 387], "pred_value_max": [280, 369, 375, 387], "target_valu": [280, 283, 296, 300, 301, 308, 365, 369, 375, 387], "target_value_max": [280, 369, 375, 387], "qvalueactor": [281, 283, 307, 364, 370, 372], "double_dqn": 281, "06461": [281, 290], "mult_one_hot": [281, 284, 285, 307], "loss_val": [281, 283, 365, 369, 371, 372, 375, 376, 378, 381, 382, 385], "01345": 282, "distanc": [283, 292, 304, 308, 309, 382], "dcql_loss": 283, "2110": [284, 291], "06169": [284, 291], "num_qvalue_net": [284, 285, 291, 296, 298, 300, 301], "expectil": [284, 291], "tau": [284, 291, 299, 369, 370, 381], "antmaz": [284, 291], "sticht": [284, 291], "onehotcategor": [284, 285, 362], "target_entropy_weight": 285, "disctount": 286, "distributionalqvalueactor": [286, 364], "input_tensordict": [286, 369], "actor_model": 287, "value_model": [287, 289], "imagination_horizon": 287, "unrol": [287, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326], "discount_loss": [287, 289], "lambda_kl": 288, "lambda_reco": 288, "lambda_reward": 288, "reco_loss": 288, "reward_loss": 288, "free_nat": 288, "nat": 288, "delayed_clamp": 288, "global_averag": 288, "value_loss": 289, "fake_data": 289, "ddpgloss": [290, 299, 356, 362, 369, 375, 381, 387], "td3loss": [290, 299, 362], "value_network_update_interv": 290, "qvalueclass": 291, "loss_value_diff": 291, "diff": 291, "old_polici": 292, "new_polici": 292, "apart": [292, 382], "dtarg": 292, "samples_mc_kl": 292, "analyt": 292, "decrement": 292, "loss_": [293, 341, 365, 369, 375], "equip": [293, 372, 374], "gh": 293, "_acceptedkei": 293, "dataclass": 293, "_forward_value_estimator_kei": 293, "alter": [293, 364], "value_estim": [293, 309, 310, 311, 312, 313, 365, 369, 382], "myloss": 293, "action2": 293, "augment": [293, 376, 378, 385], "set_exploration_mod": [293, 362], "deterministic_sampling_mod": 293, "convert_to_funct": [293, 369], "expand_dim": 293, "create_target_param": [293, 369], "compare_against": [293, 369], "_param": 293, "expans": 293, "resampl": 293, "_target_param": 293, "blend": 293, "proxim": [295, 371, 382], "optimis": [295, 342, 371, 381, 382], "flavour": [295, 381, 382, 387], "clipppoloss": [295, 362, 371, 382], "klpenppoloss": [295, 362], "regularis": 295, "06347": 295, "gae": [295, 362, 365, 369, 371, 382], "ppo_loss": 295, "tdlambda": [295, 303, 365, 369], "base_lay": 295, "randn_lik": 295, "samplelogprob": 295, "openreview": 296, "ay8zfzm0tdd": 296, "sub_sample_len": 296, "subsampl": [296, 337, 366], "action_log_prob_actor": 296, "state_action_value_actor": [296, 300, 301], "connectionist": 297, "1992": 297, "doi": 297, "1007": 297, "bf00992696": 297, "actor_net": [297, 369, 371], "1801": 298, "01290": 298, "applic": [298, 307, 373, 374, 383], "1812": 298, "05905": 298, "redqloss": [299, 362], "math": 299, "theta_t": [299, 383], "theta_": [299, 383], "polyak": 299, "minimalist": 300, "06860": 300, "qvalue_loss": 300, "actor_loss": 300, "policy_nois": [300, 301], "noise_clip": [300, 301], "td3_bc": 300, "bc_loss": 300, "lmbd": 300, "next_state_valu": [300, 301, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 362], "td0": [302, 369, 381], "strict_shap": 304, "view_a": 304, "qmixer": [307, 362], "local_valu": 307, "visibl": [307, 382], "dafault": 307, "acceptedkei": 307, "global_valu": 307, "penultim": 307, "local_value_network": 307, "mixer_network": 307, "value_modul": [307, 371, 387], "qnet": [307, 369], "next_val_kei": 308, "pred_next_v": 308, "usus": 308, "mse": 308, "q_valu": 308, "n_steps_to_next": 308, "value_next_st": 308, "1506": [309, 314, 322], "02438": [309, 314, 322], "exponenti": [309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 344], "average_ga": [309, 371], "skip_exist": [309, 310, 311, 312], "time_dim": [309, 311, 312, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326], "advang": 309, "gradient_mod": 309, "value_error": [309, 310, 311, 312, 313], "target_param": [309, 310, 311, 312, 313, 369, 382], "98": [309, 310, 311, 312, 370, 383], "94": [309, 312, 369, 370, 383, 384], "unpack": [309, 310, 311, 312], "tensor_kei": [309, 310, 311, 312, 313], "next_valu": [309, 310, 311, 312, 313], "aka": [310, 370, 381], "average_reward": [310, 311, 312], "tdestim": [310, 311, 313], "infti": 311, "valuefunctionbas": 313, "old_stat": [314, 316, 318, 320, 322, 323, 325], "new_stat": [314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326], "rolling_gamma": [318, 319, 320, 321, 323, 324, 325, 326], "g1": [318, 319, 320, 321, 323, 324, 325, 326], "g2": [318, 319, 320, 321, 323, 324, 325, 326], "g3": [318, 319, 320, 321, 323, 324, 325, 326], "g4": [318, 319, 320, 321, 323, 324, 325, 326], "v3": [318, 319, 320, 321, 323, 324, 325, 326, 388], "preproc": [327, 381], "as_non_tensor": [327, 381], "render_method": 327, "pass_tensordict": 327, "syntat": 327, "sugar": 327, "out_file_bas": 328, "skip_reset": 328, "center_crop": 329, "make_grid": 329, "csv": [329, 331, 333, 370, 377, 378], "wandb": [329, 333, 336, 377, 387], "tensorboard": [329, 333, 335, 377, 387], "log_dir": [329, 330, 331, 333, 335, 336, 370, 378], "cheetah_video": 329, "run_video": 329, "openxexperiencereplai": 329, "run_video_0": 329, "templat": 330, "pt": [331, 366, 384], "video_fp": 331, "minim": [331, 385], "dependeci": 331, "cur_dir": 331, "csv_log": 331, "add_video": 331, "video_": 331, "experiment_nam": [332, 333], "uuid": [332, 370, 388], "logger_typ": 333, "logger_nam": 333, "mlflow": [333, 334], "wandb_kwarg": 333, "mlflow_kwarg": 333, "tracking_uri": 334, "uri": 334, "datastor": 334, "tb_log": 335, "tensoarboard": 335, "td_log": 335, "save_dir": 336, "resum": 336, "uncategor": 336, "sub_traj_len": 337, "min_sub_traj_len": 337, "register_op": [337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 366, 370], "process_optim_batch": [337, 343, 344, 366], "td_out": [337, 345], "_process_optim_batch_hook": [337, 366], "batch_subsampl": 337, "clear_cuda": 338, "pre_optim_step": [338, 366], "log_pbar": [339, 340, 342, 344, 366, 370], "progress": [339, 340, 342, 346, 366, 370, 372, 388], "count_fram": 339, "pre_steps_log": [339, 340, 366], "count_frames_log": 339, "lognam": 340, "r_train": [340, 370], "log_reward": [340, 370], "loss_compon": 341, "appl": 341, "optimizer_hook": 341, "record_interv": [342, 369, 370], "record_fram": [342, 349, 369, 370], "policy_explor": [342, 356, 369, 370, 374, 378], "log_kei": [342, 370], "underestim": 342, "set_exploration_typ": [342, 362, 371, 372, 374, 381, 387], "r_evalu": [342, 369], "flatten_tensordict": [343, 370], "max_dim": 343, "rb_trainer": 343, "batch_process": [343, 344, 345, 366], "post_loss": [343, 366], "999": [344, 370], "jitter": 344, "finfo": 344, "default_dtyp": 344, "get_default_dtyp": 344, "reward_norm": 344, "update_reward_stat": 344, "normalize_reward": 344, "make_train": [345, 362], "_process_batch_hook": [345, 366], "select_kei": [345, 366], "versatil": [346, 373], "optim_steps_per_batch": [346, 366, 370], "clip_grad_norm": 346, "clip_norm": 346, "progress_bar": 346, "save_trainer_interv": 346, "log_interv": [346, 370], "save_trainer_fil": [346, 366], "update_weights_interv": [348, 370], "update_weight": 348, "post_step": [348, 366, 370], "cfg": [349, 350, 351, 352, 353, 354, 355, 356, 357, 360], "dictconfig": [349, 350, 351, 352, 354, 355, 356, 357, 360], "unknowingli": 349, "annealing_fram": [349, 369], "init_env_step": [349, 350, 369], "proof_environ": [350, 369], "sta": 350, "ot": 350, "actor_model_explor": [351, 352, 369], "make_env_kwarg": [351, 352], "targetnetupdat": [353, 355, 356], "replayargsconfig": 354, "target_net_updat": [356, 369, 370], "constitu": 356, "egreedywrapp": 356, "env_proof": 356, "obs_spec": 356, "net_valu": 356, "dir": [356, 366, 370], "gettempdir": 356, "argpars": [357, 360], "namespac": [357, 360, 388], "parser": [357, 360], "transformed_env_constructor": [357, 362], "num_env_per_collector": [358, 359], "video_tag": 360, "norm_obs_onli": 360, "use_env_cr": 360, "custom_env_mak": 360, "custom_env": 360, "return_transformed_env": 360, "action_dim_gsd": 360, "state_dim_gsd": 360, "obs_norm_state_dict": 360, "wheter": 360, "maker": [360, 370], "asyncdatacollector": 362, "distributedsyncdatacollector": 362, "submitit_delayed_launch": 362, "raycollector": 362, "rational": 362, "footnot": 362, "unboundeddiscretetensorspec": 362, "lazystackedtensorspec": 362, "lazystackedcompositespec": 362, "prompttensordicttoken": 362, "rolloutfrommodel": 362, "tokenizeddatasetload": 362, "create_infinite_iter": 362, "constantklcontrol": 362, "adaptiveklcontrol": 362, "consolidate_spec": 362, "check_no_exclusive_kei": 362, "contains_lazy_spec": 362, "nested2t": 362, "h5combin": 362, "h5split": 362, "check_marl_group": 362, "get_available_librari": 362, "make_composite_from_td": [362, 383], "terminated_or_trunc": 362, "dreamerdecod": 362, "braxwrapp": 362, "dmcontrolwrapp": 362, "jumanjienv": 362, "jumanjiwrapp": 362, "meltingpotenv": 362, "meltingpotwrapp": 362, "mogymenv": 362, "mogymwrapp": 362, "multithreadedenvwrapp": 362, "openmlenv": 362, "pettingzooenv": [362, 381], "robohiveenv": 362, "smacv2env": 362, "smacv2wrapp": 362, "vmaswrapp": 362, "qvaluehook": 362, "distributionalqvaluehook": 362, "reset_nois": 362, "cemplann": 362, "mpcplannerbas": 362, "mppiplann": 362, "independentnorm": 362, "truncatednorm": 362, "maskedonehotcategor": 362, "inv_softplu": 362, "vmapmodul": 362, "distributionaldqnloss": [362, 370], "discretesacloss": 362, "iqlloss": 362, "discreteiqlloss": 362, "cqlloss": 362, "discretecqlloss": 362, "dtloss": 362, "onlinedtloss": 362, "td3bcloss": 362, "a2closs": 362, "reinforceloss": 362, "dreameractorloss": 362, "dreamermodelloss": 362, "dreamervalueloss": 362, "td0estim": [362, 369], "td1estim": [362, 369], "td0_return_estim": 362, "td0_advantage_estim": 362, "td1_return_estim": 362, "vec_td1_return_estim": 362, "td1_advantage_estim": 362, "vec_td1_advantage_estim": 362, "td_lambda_return_estim": 362, "vec_td_lambda_return_estim": 362, "td_lambda_advantage_estim": 362, "vec_td_lambda_advantage_estim": 362, "generalized_advantage_estim": 362, "vec_generalized_advantage_estim": 362, "reward2go": 362, "distance_loss": [362, 369], "hold_out_net": 362, "hold_out_param": [362, 369], "softupd": [362, 369, 370, 372, 375, 378, 381], "hardupd": [362, 369, 375], "batchsubsampl": [362, 366], "clearcudacach": 362, "countframeslog": 362, "logreward": [362, 366, 370], "optimizerhook": [362, 370], "replaybuffertrain": [362, 366, 370], "rewardnorm": 362, "selectkei": [362, 366], "trainerhookbas": [362, 366, 370], "updateweight": [362, 366, 370], "make_collector_offpolici": 362, "make_collector_onpolici": 362, "make_dqn_loss": 362, "make_replay_buff": [362, 369], "make_target_updat": 362, "parallel_env_constructor": [362, 369], "sync_async_collector": 362, "sync_sync_collector": 362, "correct_for_frame_skip": 362, "get_stats_random_rollout": 362, "mlflowlogg": 362, "get_logg": 362, "generate_exp_nam": 362, "journei": 363, "textbook": 363, "highlight": [363, 381], "ever": [363, 382], "bump": 363, "think": [363, 371, 381, 382, 388], "benefit": [363, 373, 381, 382, 385], "pr": 363, "ground": [364, 369, 383], "recycl": [364, 385], "impos": 364, "violat": 364, "noisier": 364, "Their": [364, 381, 382], "sd": 364, "prob_modul": 364, "pick": [364, 369, 370, 374], "hopefulli": [364, 370], "functional_modul": 364, "make_funct": 364, "mathbb": [364, 370], "rightarrow": [364, 370], "soften": 364, "backbon": [364, 372, 374, 380, 387], "make_actor": 364, "make_valu": 364, "shared_param": 364, "make_common": 364, "reusabl": [365, 369, 385], "swappabl": [365, 369], "characterist": [365, 369, 383], "trainabl": [365, 369, 375, 384], "smth": [365, 369], "metric": [365, 369], "nutshel": [365, 369], "barto": [365, 381, 382], "chapter": [365, 377], "significantli": [365, 369, 370, 375, 382], "next_stat": 365, "value_net_loss": 365, "pow": [365, 369], "room": 365, "signifi": [365, 381, 382], "underperform": 365, "thin": 365, "intric": [365, 374], "believ": 366, "scheme": [366, 388], "substenti": 366, "_pre_steps_log_hook": 366, "_pre_optim_hook": 366, "sub_batch": 366, "_post_loss_hook": 366, "_post_optim_hook": 366, "post_optim": [366, 370], "_post_optim_log": 366, "post_optim_log": 366, "_post_steps_hook": 366, "_post_steps_log_hook": 366, "post_steps_log": 366, "reserv": 366, "logginghook": 366, "logging_hook": 366, "save_dict": 366, "some_valu": 366, "torchsnapshot": 366, "ckpt_backend": 366, "filepath": 366, "save_train": 366, "load_from_fil": 366, "532": [368, 383, 386], "galleri": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388], "mem": [368, 386], "mb": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388], "torchrl_demo": [368, 386, 387], "455": [368, 371, 383, 386, 387], "rb_tutori": [368, 385, 386], "834": [368, 385, 386], "158": [368, 383, 385, 386], "248": [368, 383, 386], "coding_dqn": [368, 370, 386], "762": [368, 370, 386], "723": [368, 370, 386], "dqn_with_rnn": [368, 372, 386], "254": [368, 372, 383, 386], "1617": [368, 386], "multiagent_ppo": [368, 382, 386], "07": [368, 370, 381, 382, 383, 384, 386], "690": [368, 382, 386], "coding_ddpg": [368, 369, 386], "55": [368, 369, 370, 381, 383, 384, 385, 386], "214": [368, 369, 383, 386], "torchrl_env": [368, 386, 388], "412": [368, 383, 386, 388], "4296": [368, 386, 388], "multiagent_competitive_ddpg": [368, 381, 386], "673": [368, 381, 386], "coding_ppo": [368, 371, 386], "856": [368, 371, 386], "pretrained_model": [368, 384, 386], "54": [368, 369, 370, 382, 383, 384, 386], "152": [368, 383, 384, 386], "3602": [368, 384, 386], "multi_task": [368, 380, 386], "145": [368, 380, 383, 386], "48": [368, 369, 370, 374, 383, 384, 386], "140": [368, 374, 383, 386], "43": [368, 370, 373, 381, 383, 384, 386], "523": [368, 373, 383, 386], "712": [368, 375, 386], "572": [368, 378, 383, 386], "048": [368, 376, 386], "843": [368, 377, 383, 386], "author": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 385, 388], "vincent": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 385, 388], "moen": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 385, 388], "assembl": 369, "focus": [369, 375], "straightforward": [369, 370, 373, 374, 375, 376, 385], "maxim": [369, 375, 383], "transpar": [369, 372], "illustr": [369, 370, 374, 385], "bash": 369, "is_fork": [369, 370, 371, 372, 381, 382, 384], "get_start_method": [369, 370, 371, 372, 381, 382, 384], "is_avail": [369, 370, 371, 372, 381, 382, 384], "collector_devic": 369, "loss_dict": 369, "oblivi": [369, 371, 385], "elementari": 369, "didact": 369, "dilut": 369, "pessimist": [369, 370, 371], "target_actor_network_param": 369, "actor_in_kei": 369, "actor_crit": 369, "noth": [369, 371], "compromis": 369, "hp": 369, "hasattr": 369, "_value_estim": 369, "elif": [369, 370], "notimplementederror": 369, "unknown": 369, "ifgg": 369, "_loss_actor": 369, "td_copi": 369, "actor_network_param": [369, 381], "value_network_param": [369, 381], "_loss_valu": 369, "pred_val": 369, "target_value_network_param": 369, "glue": 369, "_forward": 369, "remaind": 369, "env_librari": 369, "env_task": 369, "env_arg": [369, 370], "friendli": 369, "torchr": 369, "rescal": 369, "presum": 369, "make_transformed_env": 369, "reward_sc": 369, "marker": 369, "env_per_collector": 369, "transform_state_dict": 369, "make_t_env": 369, "cheat": 369, "10m": 369, "cautiou": 369, "magnitud": [369, 381], "thousand": [369, 372], "get_env_stat": 369, "proof_env": 369, "5000": [369, 370, 371, 378], "recal": [369, 371, 385], "ddpgmlpactor": 369, "ddpgmlpqnet": 369, "materi": 369, "ornsteinuhlenbeckprocesswrapp": [369, 374], "make_ddpg_actor": 369, "q_net": 369, "tight": 369, "decoupl": [369, 375], "10_000": [369, 371], "traj_len": [369, 372], "make_record": 369, "recorder_obj": 369, "flavor": 369, "buffer_s": [369, 370], "random_crop_len": 369, "prb": 369, "buffer_scratch_dir": 369, "temporari": 369, "25": [369, 370, 372, 381, 383], "dataflow": 369, "ceil_div": 369, "utd": [369, 372], "update_to_data": 369, "realiz": 369, "_must_": 369, "001": [369, 383], "outdat": 369, "trick": [369, 370], "despit": 369, "optimizer_actor": 369, "lr": [369, 370, 371, 372, 378, 381, 382, 383], "weight_decai": [369, 370], "optimizer_valu": 369, "total_collection_step": 369, "pretti": [369, 373, 377, 385], "rewards_ev": 369, "collected_fram": 369, "r0": 369, "current_fram": [369, 381], "sampled_tensordict": 369, "gn1": 369, "clip_grad_norm_": [369, 371, 381, 382, 383], "gn2": 369, "gn": [369, 383], "td_record": 369, "rn": 369, "set_descript": [369, 371, 372, 381, 382, 383], "2f": 369, "800": [369, 370], "3363": 369, "16it": 369, "1600": [369, 370], "09": [369, 370, 381, 383], "927": 369, "70it": [369, 370, 383], "2400": [369, 370], "1353": [369, 383], "08it": [369, 370], "3200": [369, 370], "1728": [369, 370], "23it": [369, 370], "4000": [369, 370, 371], "2037": 369, "57it": [369, 370, 383], "4800": [369, 370, 383], "2273": 369, "72it": [369, 370, 383], "56": [369, 370, 383, 384, 385], "5600": 369, "2495": 369, "74": [369, 370, 381, 383, 384], "85": [369, 370, 383], "70": [369, 370, 371, 381, 382, 383, 384], "223": [369, 383], "6400": [369, 387], "929": 369, "34it": [369, 370, 371, 383], "53": [369, 370, 382, 383, 384], "110": [369, 383], "215": [369, 383], "92": [369, 370, 383, 384], "73": [369, 370, 383, 385], "72": [369, 370, 383, 384], "7200": 369, "650": 369, "42it": [369, 370], "96": [369, 370, 383, 384, 385], "67": [369, 370, 380, 383, 384], "91": [369, 370, 383], "171": [369, 383], "330": [369, 383], "8000": [369, 371], "540": [369, 383], "04it": [369, 370], "62": [369, 370, 383], "249": [369, 383], "8800": 369, "484": [369, 383], "15it": [369, 370], "71": [369, 370, 383, 384], "63": [369, 370, 383, 384], "49": [369, 370, 383, 384], "9600": 369, "385": [369, 383], "74it": [369, 370, 383], "97": [369, 370, 383, 384], "205": [369, 383, 385], "89": [369, 370, 383, 384], "10400it": 369, "366": [369, 383], "92it": [369, 370], "156": [369, 383], "plot": [369, 371, 372, 381, 382, 383], "mention": [369, 372, 385, 388], "matplotlib": [369, 371, 372, 381, 382, 383, 385, 388], "pyplot": [369, 371, 372, 381, 382, 383, 385, 388], "plt": [369, 371, 372, 381, 382, 383, 385, 388], "zip": [369, 379], "legend": [369, 381], "xlabel": [369, 372, 382, 383], "ylabel": [369, 382], "tight_layout": 369, "takeawai": [369, 370], "distpatch": 369, "jupyt": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388], "ipynb": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388], "sphinx": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388], "road": 370, "aspect": [370, 375], "highest": [370, 374], "prerequisit": [370, 372], "lookup": 370, "amort": [370, 371], "cart": 370, "pole": 370, "un": 370, "actuat": 370, "frictionless": 370, "duelingcnndqnet": 370, "egreedymodul": [370, 372, 374, 378], "is_notebook": 370, "shell": 370, "get_ipython": 370, "__class__": 370, "zmqinteractiveshel": 370, "qtconsol": 370, "terminalinteractiveshel": 370, "ipython": [370, 382, 383], "nameerror": [370, 381], "umbrella": 370, "misplac": 370, "misus": 370, "orchestr": [370, 375, 377], "five": 370, "64x64": 370, "motion": [370, 383], "obs_norm_sd": 370, "mp_context": 370, "simpler": [370, 373], "get_norm_stat": 370, "test_env": 370, "make_model": 370, "dummy_env": 370, "init_bia": 370, "exploration_modul": [370, 372, 374, 378], "eps_greedy_v": 370, "eps_greedy_val_env": 370, "actor_explor": 370, "get_replay_buff": 370, "n_optim": [370, 375, 376], "themselv": 370, "parametriz": 370, "simplic": [370, 371, 376, 384, 385, 387], "get_collector": 370, "cl": 370, "data_collector": 370, "bunch": 370, "ubiquit": [370, 373], "get_loss_modul": 370, "target_updat": [370, 381], "995": [370, 383], "variat": 370, "2e": [370, 383], "wd": 370, "upd": 370, "harder": [370, 387], "5_000": 370, "500000": 370, "100000": 370, "005": [370, 381], "mandatori": [370, 371, 382, 383], "fairer": 370, "budget": 370, "dqn_exp_": 370, "uuid1": [370, 388], "9895": 370, "0737": 370, "registr": [370, 388], "cumbersom": 370, "buffer_hook": 370, "weight_updat": 370, "aliv": 370, "total_reward": 370, "31it": 370, "3688": [370, 383], "9259": 370, "80it": [370, 383], "3869": 370, "55it": [370, 383], "3415": 370, "47it": [370, 383], "4295": [370, 383], "32it": [370, 383], "52": [370, 383, 384], "56it": [370, 371], "3808": 370, "224": [370, 383], "51": [370, 383, 384], "26it": 370, "3475": 370, "60": [370, 371, 381, 382, 383, 384, 385, 387], "14it": 370, "288": [370, 383], "68": [370, 383, 384], "51it": [370, 383], "352": [370, 383], "58": [370, 383, 384], "79": [370, 382, 383], "07it": 370, "3505": 370, "384": [370, 383], "65it": [370, 383], "416": [370, 383], "82": [370, 371, 383, 384], "76it": [370, 383], "3991": 370, "448": [370, 383], "83": [370, 383, 384], "480": [370, 383, 384], "73it": [370, 383], "93it": 370, "544": [370, 383], "83it": 370, "3960": 370, "576": [370, 383], "20it": 370, "608": [370, 383], "01it": 370, "3778": 370, "640": 370, "44it": 370, "3566": 370, "672": 370, "03it": [370, 371], "3445": 370, "704": 370, "38it": [370, 372], "736": 370, "47": [370, 371, 382, 383, 384], "67it": [370, 383], "3444": 370, "768": 370, "96it": 370, "4173": 370, "45": [370, 383, 384], "85it": [370, 383], "832": 370, "06it": 370, "864": 370, "90": [370, 371, 381, 382, 383], "896": 370, "45it": 370, "928": 370, "960": 370, "93": [370, 383, 385], "53it": 370, "992": [370, 383], "1056": 370, "69it": [370, 383], "1088": 370, "43it": [370, 383], "1120": 370, "00it": [370, 383], "1152": 370, "25it": 370, "1184": 370, "46it": 370, "3718": 370, "1216": 370, "4021": 370, "1248": 370, "1280": 370, "27it": [370, 383], "02it": [370, 372, 383], "1344": 370, "1376": 370, "1408": 370, "99it": 370, "1440": 370, "10it": [370, 371, 383], "4082": [370, 383], "1472": 370, "91it": 370, "1504": 370, "94it": 370, "1536": 370, "95it": [370, 383], "1568": 370, "22it": [370, 383], "1632": 370, "54it": [370, 383], "81it": [370, 383], "1696": 370, "12it": [370, 383], "35it": 370, "1760": 370, "1792": 370, "66it": [370, 371, 383], "1824": 370, "29it": 370, "1856": 370, "1888": 370, "90it": 370, "1920": 370, "1952": 370, "1984": 370, "2016": 370, "2048": [370, 384], "2080": 370, "2112": [370, 383], "2144": 370, "2176": 370, "2208": 370, "87it": 370, "2240": 370, "2272": 370, "77it": [370, 383], "49it": [370, 383], "2336": 370, "2368": 370, "2432": 370, "30it": 370, "2464": 370, "2496": 370, "13it": 370, "2528": [370, 383], "2560": 370, "2624": 370, "2656": [370, 383], "2688": 370, "24it": 370, "2720": [370, 383], "2752": 370, "2784": 370, "2816": 370, "57": [370, 372, 383, 384], "2848": 370, "2880": 370, "2912": 370, "59": [370, 383], "2944": [370, 383], "2976": [370, 383], "97it": 370, "61": [370, 383, 384], "3040": 370, "61it": [370, 383], "3072": 370, "3104": 370, "3136": 370, "50it": [370, 383], "3168": 370, "65": [370, 383, 384], "3232": [370, 383], "37it": 370, "2500": 370, "3264": 370, "66": [370, 383, 384], "3296": 370, "3328": 370, "3360": 370, "3392": 370, "3424": 370, "58it": [370, 383], "69": [370, 383], "3456": [370, 383], "3488": 370, "40it": [370, 383], "3520": 370, "78": [370, 382, 383, 384, 385], "3552": 370, "3584": 370, "79it": [370, 383], "3616": 370, "09it": [370, 383], "3648": 370, "3680": 370, "3712": 370, "3744": 370, "76": [370, 383, 384], "3776": 370, "18it": [370, 372], "77": [370, 382, 383], "3840": 370, "3872": 370, "3904": 370, "89it": 370, "3936": 370, "3968": 370, "4032": 370, "4064": 370, "05it": 370, "4096": 370, "21it": 370, "4128": [370, 383], "4160": 370, "60it": [370, 383], "4192": 370, "4224": 370, "4256": [370, 383], "4288": [370, 383], "4320": 370, "86it": 370, "4352": 370, "78it": [370, 383], "4384": 370, "4416": 370, "4448": 370, "4480": 370, "41it": [370, 383], "4512": 370, "4544": 370, "4576": 370, "4608": 370, "4640": 370, "4672": [370, 383], "39it": 370, "4704": 370, "4736": 370, "4768": 370, "4832": 370, "4864": 370, "75it": [370, 383], "4896": 370, "98it": 370, "4928": 370, "71it": [370, 371, 383], "4960": 370, "4992": 370, "5024it": 370, "print_csv_files_in_fold": 370, "folder_path": 370, "csv_file": 370, "output_str": 370, "dirpath": 370, "endswith": 370, "strip": 370, "tmp": [370, 385], "tmp1wpv8j85": 370, "dqn_exp_bd049da6": 370, "3ecf": 370, "11ef": 370, "a9b0": 370, "0242ac110002": 370, "39912933111190796": 370, "39912936091423035": 370, "36880597472190857": 370, "42945271730422974": 370, "40816524624824524": 370, "41726210713386536": 370, "26688113808631897": 370, "2750791013240814": 370, "2362518608570099": 370, "21754571795463562": 370, "3655075430870056": 370, "29921767115592957": 370, "305752694606781": 370, "22209610044956207": 370, "22043554484844208": 370, "grad_norm_0": 370, "6142091751098633": 370, "614064931869507": 370, "7453315258026123": 370, "6626768112182617": 370, "852937936782837": 370, "942429780960083": 370, "281947612762451": 370, "0232880115509033": 370, "682572603225708": 370, "10000000894069672": 370, "249999523162842": 370, "qvaluenetwork": 370, "worst": 370, "accuraci": 370, "fanci": [370, 376], "talk": 371, "repetit": [371, 373, 376], "six": 371, "sophist": [371, 382], "invent": 371, "overview": [371, 375, 381, 382, 387], "theta_k": 371, "pi_": 371, "exceed": 371, "discourag": [371, 383], "indispens": 371, "analyz": 371, "lingua": 371, "franca": 371, "defaultdict": [371, 383], "3e": [371, 372, 381, 382], "max_grad_norm": [371, 381, 382], "sub_batch_s": 371, "num_epoch": [371, 382], "entropy_ep": [371, 382], "charact": 371, "inverteddoublependulum": 371, "transmit": 371, "stai": 371, "supplementari": [371, 388], "told": 371, "confid": [371, 381, 382], "ran": 371, "f_": 371, "mu_": 371, "difficulti": [371, 388], "d_ob": 371, "d_action": 371, "policy_modul": [371, 381, 382], "That": [371, 381], "said": 371, "briefli": [371, 381, 382], "refil": [371, 382], "easiest": [371, 375, 381, 382], "mathemat": [371, 381, 382], "tradeoff": [371, 382], "advantage_modul": 371, "lr_schedul": [371, 383], "cosineannealinglr": [371, 383], "eval_str": 371, "tensordict_data": [371, 382], "data_view": [371, 382], "subdata": [371, 381, 382], "cum_reward_str": 371, "4f": [371, 372, 383], "stepcount_str": 371, "param_group": [371, 381], "lr_str": 371, "eval_rollout": 371, "nice": [371, 373, 376], "456": [371, 383], "62it": [371, 383], "5474": 371, "0818": 371, "0003": [371, 372, 383], "454": [371, 383], "1108": [371, 383], "3000": 371, "457": [371, 383], "1564": 371, "460": [371, 383], "1797": [371, 383], "0002": [371, 383], "463": [371, 383], "28it": 371, "2120": 371, "6000": 371, "465": [371, 383], "2362": 371, "7000": 371, "2358": 371, "2376": 371, "9000": 371, "459": [371, 383], "2481": [371, 383], "462": [371, 383], "2466": [371, 383], "cap": [371, 385], "figsiz": [371, 383], "subplot": [371, 381, 383, 388], "titl": [371, 372, 382, 383], "bit": [371, 372, 373, 381, 382, 385], "84x84": 372, "accessori": 372, "stamp": 372, "assist": 372, "emb": 372, "n_cell": 372, "customiz": 372, "wouldn": 372, "qval": 372, "stoch_polici": 372, "opportun": [372, 381], "uniniti": 372, "again": [372, 373, 374, 376, 382, 384, 385, 388], "redund": 372, "strongli": 372, "sake": [372, 384, 385], "20_000": [372, 383], "longest": 372, "npai": 372, "action_spread": 372, "127": [372, 383], "0005": 372, "150": [372, 383], "36it": 372, "1618": 372, "topic": [373, 374, 375], "straight": 373, "backtrack": 373, "encapsul": [373, 374, 375], "reset_with_act": 373, "1703": 373, "tp": 373, "stepped_data": 373, "spatial": 373, "useless": 373, "policyless": 373, "appreci": 373, "monitor": 373, "examin": [373, 381], "tackl": 374, "delv": 374, "bypass": 374, "extractor": 374, "palliat": 374, "additivegaussianwrapp": [374, 381], "had": [374, 376], "exploration_polici": [374, 381], "greedili": 374, "2d": [374, 381, 382], "innov": [374, 375], "rollout_explor": 374, "sole": 375, "tradit": [375, 381], "supervis": [375, 376, 385, 388], "n_collect": 375, "get_next_batch": 375, "ddpg_loss": 375, "total_loss": 375, "prove": 375, "reliev": 375, "concern": 375, "accustom": 376, "surprisingli": 376, "fundament": 376, "art": [376, 381, 382], "pseudo": [376, 383], "multirpocess": 376, "countless": 376, "yourself": [376, 381, 382], "lightweight": 377, "portabl": 377, "everywher": 377, "log_scalar": 377, "elaps": 377, "my_scalar": 377, "saw": [377, 383, 385], "excess": 377, "lesson": 378, "voluntarili": 378, "value_mlp": 378, "100_000": 378, "init_rand_step": 378, "training_loop": 378, "video_record": 378, "arbitrarili": 378, "total_count": 378, "total_episod": 378, "t0": 378, "t1": 378, "conclud": [378, 384], "tutorials_python": 379, "tutorials_jupyt": 379, "env1_obs_kei": 380, "observation_stand": 380, "env2_obs_kei": 380, "observation_walk": 380, "tdreset1": 380, "tdreset2": 380, "lazy_stack": 380, "policy_common": 380, "policy_stand": 380, "policy_walk": 380, "But": 380, "env1_mak": 380, "env2_mak": 380, "_single_task": 380, "td_rollout": 380, "matteo": [381, 382], "bettini": [381, 382], "benchmarl": [381, 382], "simple_tag": 381, "maddpg": [381, 382], "multiagentparticleenviron": 381, "mpe": 381, "centralis": [381, 382], "tie": [381, 382], "iddpg": [381, 382], "typical": 381, "richard": 381, "andrew": 381, "mit": 381, "press": 381, "2018": 381, "mathbf": [381, 382], "pi": [381, 382, 383], "decentralis": [381, 382], "literatur": [381, 382], "overcom": [381, 382], "stationari": [381, 382], "concurr": [381, 382], "establish": 381, "gui": [381, 382], "multiagentmlp": [381, 382], "is_sphinx": 381, "__sphinx_build__": 381, "n_iter": [381, 382], "evad": 381, "iteration_when_stop_training_evad": 381, "memory_s": 381, "n_optimiser_step": 381, "train_batch_s": 381, "polyak_tau": 381, "chaser": 381, "red": 381, "circl": [381, 382], "touch": [381, 383], "penal": 381, "acceler": [381, 382], "obstacl": 381, "drag": [381, 382], "elast": [381, 382], "collis": [381, 382], "imped": 381, "n_chaser": 381, "n_evad": 381, "n_obstacl": 381, "use_vma": 381, "simple_tag_v3": 381, "num_good": 381, "num_adversari": 381, "num_obstacl": 381, "max_cycl": 381, "num_vmas_env": [381, 382], "num_good_ag": 381, "num_landmark": 381, "adversary_1": 381, "four": [381, 382, 383], "n_agents_in_that_group": 381, "stress": [381, 382], "paramount": [381, 382], "n_rollout_step": [381, 382], "evolut": [381, 382], "group_nam": 381, "n_agents_in_group": 381, "minor": 381, "agents_exploration_polici": 381, "utilis": [381, 382], "withing": 381, "n_obs_per_ag": [381, 382], "n_actions_per_ag": [381, 382], "share_parameters_polici": [381, 382], "policy_net": [381, 382], "_agent": 381, "grant": [381, 382], "converg": [381, 382], "share_parameters_crit": [381, 382], "obs_act": 381, "cat_modul": 381, "critic_modul": 381, "fantast": [381, 382], "reset_td": 381, "interfer": 381, "flatten_kei": 381, "process_batch": 381, "group_shap": 381, "get_item_shap": [381, 382], "nested_done_kei": 381, "nested_terminated_kei": 381, "desc": [381, 382], "episode_reward_mean_": 381, "episode_reward_mean_map": 381, "train_group_map": 381, "deepcopi": 381, "group_batch": 381, "_group": 381, "loss_nam": 381, "episode_reward_mean": [381, 382], "episode_reward_mean_adversari": 381, "episode_reward_mean_ag": 381, "proce": 381, "screen": 381, "fig": 381, "set_ylabel": 381, "axvlin": 381, "color": 381, "orang": 381, "set_xlabel": 381, "video_logg": 381, "vmas_log": 381, "env_with_rend": 381, "vmas_rend": 381, "print_log_dir": 381, "profici": [381, 382], "lidar": 382, "sensor": 382, "mappo": 382, "ippo": 382, "phase": [382, 385], "analys": 382, "visualis": 382, "vmas_devic": 382, "6_000": 382, "minibatch_s": 382, "generalis": 382, "simd": 382, "parallelis": 382, "warp": 382, "todai": 382, "surround": 382, "dot": [382, 383], "collid": 382, "penalis": 382, "scenario_nam": 382, "final_rew": 382, "agent_collis": 382, "denot": 382, "critic_net": 382, "minibatch": 382, "episode_reward_mean_list": 382, "critic_network_param": 382, "target_critic_network_param": 382, "4579917788505554": 382, "14524875581264496": 382, "168386459350586": 382, "3613134622573853": 382, "921463131904602": 382, "2106335163116455": 382, "1925103664398193": 382, "664064407348633": 382, "6539173126220703": 382, "743558168411255": 382, "xvfb": 382, "pyvirtualdisplai": 382, "1400": [382, 383], "900": 382, "pil": 382, "rendering_callback": 382, "fromarrai": 382, "gif": 382, "save_al": 382, "append_imag": 382, "freeli": 383, "undertaken": 383, "broader": 383, "wider": 383, "algebra": 383, "acquaint": 383, "avenu": 383, "_apply_to_composit": 383, "default_x": 383, "default_i": 383, "torqu": 383, "upward": 383, "angular": 383, "sin": 383, "rad": 383, "sec": 383, "gravit": 383, "angl": 383, "deleg": 383, "new_th": 383, "new_thdot": 383, "thdot": 383, "g_forc": 383, "max_torqu": 383, "angle_norm": 383, "max_spe": 383, "albeit": 383, "gen_param": 383, "high_th": 383, "high_thdot": 383, "low_th": 383, "low_thdot": 383, "trivial": 383, "shortcut": [383, 388], "irrelev": 383, "_make_spec": 383, "td_param": 383, "render_fp": 383, "random_": 383, "_make_step": 383, "staticmethod": 383, "showcas": 383, "skeleton": 383, "_apply_transform": [383, 388], "_inv_apply_transform": [383, 388], "subset": [383, 384], "sine": 383, "cosin": 383, "sintransform": 383, "costransform": 383, "t_sin": 383, "t_co": 383, "cat_transform": 383, "simple_rollout": 383, "unexplor": 383, "init_td": 383, "traj_return": 383, "last_reward": 383, "is_ipython": 383, "inlin": 383, "get_backend": 383, "ion": 383, "gcf": 383, "clear_output": 383, "625": 383, "0748": 383, "519": 383, "0499": 383, "4472": 383, "073": 383, "0685": 383, "0408": 383, "552": 383, "5154": 383, "9086": 383, "9385": 383, "155": 383, "2568": 383, "4981": 383, "8929": 383, "4491": 383, "581": 383, "3233": 383, "0664": 383, "596": 383, "1021": 383, "5263": 383, "9579": 383, "5807": 383, "8075": 383, "212": 383, "2009": 383, "5525": 383, "914": 383, "2894": 383, "0115": 383, "0977": 383, "1845": 383, "1830": 383, "4858": 383, "233": 383, "2863": 383, "0297": 383, "464": 383, "4617": 383, "5997": 383, "904": 383, "1647": 383, "0777": 383, "901": 383, "4709": 383, "6813": 383, "8317": 383, "3221": 383, "5554": 383, "276": 383, "3353": 383, "701": 383, "8570": 383, "6656": 383, "7779": 383, "6911": 383, "875": 383, "0796": 383, "7082": 383, "308": 383, "0421": 383, "1496": 383, "5037": 383, "1755": 383, "5029": 383, "9454": 383, "665": 383, "9330": 383, "2118": 383, "444": 383, "0995": 383, "6294": 383, "3146": 383, "2909": 383, "461": 383, "9720": 383, "1298": 383, "9923": 383, "0345": 383, "3438": 383, "424": 383, "6953": 383, "5233": 383, "411": 383, "8011": 383, "5329": 383, "2677": 383, "6969": 383, "7010": 383, "376": 383, "9352": 383, "7707": 383, "6178": 383, "5646": 383, "348": 383, "7304": 383, "9407": 383, "942": 383, "3882": 383, "7604": 383, "3507": 383, "8928": 383, "258": 383, "6978": 383, "4641": 383, "549": 383, "6047": 383, "5005": 383, "4136": 383, "2993": 383, "3222": 383, "4046": 383, "7314": 383, "275": [383, 388], "6331": 383, "9318": 383, "961": 383, "8331": 383, "1604": 383, "4099": 383, "4761": 383, "125": 383, "4262": 383, "6363": 383, "382": 383, "3593": 383, "7377": 383, "2847": 383, "3443": 383, "867": 383, "3592": 383, "4760": 383, "441": 383, "9950": 383, "8021": 383, "3528": 383, "1214": 383, "708": 383, "4023": 383, "3583": 383, "041": 383, "3801": 383, "0310": 383, "120": 383, "4244": 383, "2039": 383, "4850": 383, "8748": 383, "706": 383, "4897": 383, "9210": 383, "8964": 383, "0832": 383, "3934": 383, "8971": 383, "2933": 383, "3377": 383, "6996": 383, "2274": 383, "8916": 383, "098": 383, "2660": 383, "9110": 383, "4503": 383, "6956": 383, "9172": 383, "4026": 383, "946": 383, "9229": 383, "5205": 383, "294": 383, "8872": 383, "6637": 383, "019": 383, "9281": 383, "2082": 383, "724": 383, "8561": 383, "6574": 383, "357": 383, "4138": 383, "5230": 383, "4065": 383, "5642": 383, "921": 383, "9786": 383, "4129": 383, "5831": 383, "266": 383, "7723": 383, "4152": 383, "0898": 383, "389": 383, "5155": 383, "5376": 383, "5616": 383, "4094": 383, "283": 383, "5333": 383, "4803": 383, "895": 383, "6566": 383, "2588": 383, "662": 383, "4732": 383, "7503": 383, "068": 383, "0714": 383, "3370": 383, "059": 383, "8612": 383, "1915": 383, "3855": 383, "0349": 383, "9644": 383, "4538": 383, "445": 383, "0392": 383, "4080": 383, "1648": 383, "9599": 383, "143": 383, "4284": 383, "5946": 383, "2590": 383, "9181": 383, "4621": 383, "9075": 383, "674": 383, "1772": 383, "9444": 383, "351": 383, "9391": 383, "5595": 383, "8673": 383, "6240": 383, "5919": 383, "1071": 383, "9127": 383, "251": 383, "9799": 383, "3131": 383, "9612": 383, "9705": 383, "8741": 383, "2230": 383, "0972": 383, "0337": 383, "0350": 383, "0654": 383, "2441": 383, "4596": 383, "362": 383, "103": 383, "4362": 383, "104": 383, "4041": 383, "6907": 383, "105": 383, "4664": 383, "2760": 383, "0299": 383, "9712": 383, "349": 383, "107": 383, "3332": 383, "4479": 383, "772": 383, "108": 383, "4357": 383, "9591": 383, "543": 383, "109": 383, "6216": 383, "692": 383, "6261": 383, "7086": 383, "496": 383, "111": 383, "68it": 383, "7758": 383, "9818": 383, "112": 383, "7772": 383, "5055": 383, "113": 383, "5840": 383, "3180": 383, "2083": 383, "115": [383, 385], "5275": 383, "6873": 383, "116": 383, "4107": 383, "1624": 383, "117": 383, "6372": 383, "2571": 383, "118": 383, "4039": 383, "4428": 383, "119": 383, "4728": 383, "5628": 383, "6767": 383, "522": 383, "121": [383, 385, 388], "5873": 383, "5072": 383, "6548": 383, "3766": 383, "123": 383, "5134": 383, "1955": 383, "124": [383, 385], "64it": 383, "0591": 383, "4500": 383, "3368": 383, "126": 383, "63it": 383, "9708": 383, "7059": 383, "3031": 383, "2534": 383, "3327": 383, "6193": 383, "129": 383, "4831": 383, "1172": 383, "2593": 383, "4219": 383, "962": 383, "8380": 383, "899": 383, "132": [383, 385], "2721": 383, "9048": 383, "166": 383, "133": 383, "2419": 383, "5248": 383, "2139": 383, "4278": 383, "135": 383, "17it": 383, "0690": 383, "5140": 383, "136": 383, "1140": 383, "7402": 383, "137": 383, "5356": 383, "1636": 383, "138": 383, "0671": 383, "8798": 383, "139": 383, "8918": 383, "3298": 383, "307": 383, "1779": 383, "141": [383, 385], "1771": 383, "3624": 383, "936": 383, "142": 383, "59it": 383, "1683": 383, "4810": 383, "9373": 383, "4435": 383, "4396": 383, "8092": 383, "2572": 383, "146": 383, "4212": 383, "0260": 383, "147": 383, "0939": 383, "6478": 383, "605": 383, "148": 383, "6606": 383, "7289": 383, "149": 383, "9300": 383, "7193": 383, "563": 383, "1166": 383, "8514": 383, "151": 383, "9108": 383, "0672": 383, "292": 383, "8591": 383, "3768": 383, "153": 383, "9976": 383, "154": 383, "0576": 383, "0067": 383, "935": 383, "4199": 383, "1722": 383, "8310": 383, "3466": 383, "157": 383, "8631": 383, "2492": 383, "8763": 383, "1277": 383, "159": 383, "5562": 383, "7446": 383, "1082": 383, "9830": 383, "161": 383, "0946": 383, "5229": 383, "162": 383, "4574": 383, "6900": 383, "163": [383, 384], "2229": 383, "0318": 383, "482": 383, "164": 383, "0543": 383, "0817": 383, "761": 383, "165": 383, "2809": 383, "5118": 383, "1142": 383, "5635": 383, "167": 383, "1949": 383, "2327": 383, "982": 383, "168": 383, "0967": 383, "0387": 383, "169": 383, "0782": 383, "2150": 383, "170": 383, "5222": 383, "3725": 383, "9288": 383, "9837": 383, "1416": 383, "1099": 383, "173": 383, "8620": 383, "8475": 383, "174": 383, "1807": 383, "4375": 383, "175": 383, "1148": 383, "0645": 383, "2751": 383, "8313": 383, "177": 383, "9286": 383, "9770": 383, "178": 383, "5735": 383, "2837": 383, "179": 383, "2926": 383, "9489": 383, "180": [383, 385], "1507": 383, "181": 383, "8724": 383, "3567": 383, "182": [383, 388], "3574": 383, "6140": 383, "183": 383, "7895": 383, "2518": 383, "184": 383, "6146": 383, "185": 383, "8776": 383, "7358": 383, "186": 383, "3722": 383, "8428": 383, "187": [383, 388], "7955": 383, "188": 383, "0092": 383, "7106": 383, "829": 383, "189": 383, "2264": 383, "6919": 383, "190": 383, "1438": 383, "1362": 383, "191": 383, "0618": 383, "8217": 383, "9420": 383, "6765": 383, "193": 383, "7745": 383, "0709": 383, "194": 383, "9478": 383, "6867": 383, "195": 383, "6507": 383, "6225": 383, "196": 383, "2244": 383, "2195": 383, "197": 383, "5385": 383, "9263": 383, "198": 383, "1878": 383, "2374": 383, "8054": 383, "3504": 383, "557": 383, "0766": 383, "201": 383, "2011": 383, "8393": 383, "202": 383, "0803": 383, "7815": 383, "203": 383, "8363": 383, "2460": 383, "204": 383, "8643": 383, "2191": 383, "593": 383, "0773": 383, "1343": 383, "206": 383, "8657": 383, "207": 383, "9304": 383, "7584": 383, "208": 383, "8752": 383, "2307": 383, "209": 383, "5250": 383, "4869": 383, "7837": 383, "5762": 383, "211": 383, "6661": 383, "8600": 383, "2502": 383, "1752": 383, "3075": 383, "8871": 383, "9406": 383, "8090": 383, "6291": 383, "8923": 383, "876": 383, "216": 383, "9504": 383, "21e": 383, "217": 383, "7431": 383, "7880": 383, "218": 383, "4463": 383, "5432": 383, "219": [383, 388], "3793": 383, "3313": 383, "8843": 383, "0369": 383, "065": 383, "221": 383, "4828": 383, "8391": 383, "222": 383, "6265": 383, "2913": 383, "947": 383, "5541": 383, "1252": 383, "7342": 383, "2396": 383, "225": 383, "5936": 383, "1924": 383, "226": 383, "9975": 383, "2045": 383, "227": 383, "8367": 383, "9540": 383, "228": 383, "7259": 383, "6743": 383, "229": 383, "4827": 383, "7528": 383, "230": 383, "7361": 383, "8756": 383, "231": 383, "7646": 383, "1116": 383, "232": 383, "5426": 383, "8385": 383, "5662": 383, "8585": 383, "234": 383, "8234": 383, "7930": 383, "235": 383, "2648": 383, "9309": 383, "236": 383, "6817": 383, "237": 383, "19it": 383, "0943": 383, "1533": 383, "238": 383, "3045": 383, "0483": 383, "239": 383, "6415": 383, "0201": 383, "241": 383, "4437": 383, "4365": 383, "242": 383, "0358": 383, "4943": 383, "243": 383, "1272": 383, "5003": 383, "1180": 383, "2637": 383, "245": 383, "7197": 383, "0873": 383, "246": 383, "2917": 383, "247": 383, "0160": 383, "0738": 383, "3689": 383, "0120": 383, "5570": 383, "0475": 383, "250": 383, "4423": 383, "2220": 383, "6803": 383, "252": 383, "1465": 383, "7214": 383, "253": 383, "8801": 383, "7034": 383, "9136": 383, "4076": 383, "7589": 383, "5013": 383, "8150": 383, "2241": 383, "257": 383, "0753": 383, "8081": 383, "1951": 383, "8314": 383, "259": 383, "0038": 383, "260": 383, "0889": 383, "4616": 383, "261": 383, "0655": 383, "262": 383, "8333": 383, "9476": 383, "263": 383, "7554": 383, "3798": 383, "264": 383, "3717": 383, "3947": 383, "529": 383, "265": 383, "3060": 383, "6495": 383, "7467": 383, "8889": 383, "267": 383, "8457": 383, "591": 383, "7137": 383, "0536": 383, "771": 383, "269": 383, "1651": 383, "388": 383, "270": 383, "8246": 383, "5709": 383, "281": 383, "271": 383, "7502": 383, "0521": 383, "032": 383, "272": 383, "5475": 383, "7253": 383, "273": 383, "2856": 383, "7130": 383, "274": 383, "2778": 383, "4122": 383, "8368": 383, "1841": 383, "9622": 383, "1603": 383, "003e": 383, "277": 383, "0247": 383, "346": 383, "278": 383, "2238": 383, "6418": 383, "279": 383, "0626": 383, "2538": 383, "280": 383, "0149": 383, "7380": 383, "2167": 383, "8911": 383, "282": 383, "8725": 383, "1983": 383, "8142": 383, "3709": 383, "284": 383, "4989": 383, "285": 383, "6464": 383, "6210": 383, "286": 383, "9726": 383, "0820": 383, "287": 383, "6975": 383, "9091": 383, "4926": 383, "4791": 383, "289": 383, "0905": 383, "3500": 383, "290": 383, "2287": 383, "291": 383, "9918": 383, "5543": 383, "9245": 383, "6444": 383, "631": 383, "293": 383, "0448": 383, "4769": 383, "8566": 383, "7208": 383, "295": 383, "0966": 383, "296": 383, "5303": 383, "1537": 383, "023": 383, "297": 383, "2682": 383, "564": 383, "298": 383, "4318": 383, "5063": 383, "299": 383, "7475": 383, "4190": 383, "8186": 383, "5077": 383, "301": 383, "1883": 383, "5291": 383, "472": 383, "302": 383, "3998": 383, "303": 383, "3622": 383, "0930": 383, "626": 383, "304": 383, "9500": 383, "5664": 383, "305": 383, "5697": 383, "3024": 383, "306": 383, "3117": 383, "0052": 383, "006": 383, "0981": 383, "9312": 383, "3873": 383, "309": 383, "0411": 383, "2650": 383, "1656": 383, "0228": 383, "004": 383, "311": 383, "1196": 383, "2478": 383, "312": 383, "7353": 383, "0812": 383, "313": 383, "3022": 383, "758": 383, "314": 383, "1406": 383, "4626": 383, "315": 383, "2156": 383, "851": 383, "316": 383, "1953": 383, "3774": 383, "317": 383, "6385": 383, "9917": 383, "318": 383, "48it": 383, "2764": 383, "905": 383, "319": 383, "6391": 383, "9317": 383, "9748": 383, "2679": 383, "321": 383, "8495": 383, "5125": 383, "8177": 383, "6602": 383, "323": 383, "0704": 383, "5776": 383, "324": 383, "9833": [383, 387], "1339": 383, "402": 383, "325": 383, "1238": 383, "326": 383, "9299": 383, "0227": 383, "327": 383, "7727": 383, "1607": 383, "336": 383, "328": 383, "3958": 383, "3223": 383, "763": 383, "329": 383, "4742": 383, "0144": 383, "0085": 383, "791": 383, "331": 383, "8284": 383, "0428": 383, "332": 383, "7365": 383, "333": 383, "4566": 383, "0781": 383, "086": 383, "334": 383, "3355": 383, "0230": 383, "335": 383, "9346": 383, "0423": 383, "076": 383, "3711": 383, "1335": 383, "6855": 383, "337": 383, "0304": 383, "0023": 383, "8459": 383, "338": 383, "9998": 383, "4399": 383, "339": 383, "2303": 383, "1346": 383, "340": 383, "2915": 383, "7116": 383, "341": 383, "5560": 383, "0487": 383, "342": 383, "5119": 383, "061": 383, "343": 383, "3305": 383, "3705": 383, "957": 383, "344": 383, "6068": 383, "345": 383, "5731": 383, "3897": 383, "0376": 383, "347": 383, "0434": 383, "012": 383, "1300": 383, "1215": 383, "0968": 383, "0885": 383, "350": 383, "1348": 383, "0073": 383, "5052": 383, "4184": 383, "2817": 383, "8887": 383, "353": 383, "4779": 383, "1009": 383, "354": 383, "0604": 383, "599": 383, "355": 383, "4486": 383, "1176": 383, "656": 383, "356": 383, "2436": 383, "0668": 383, "8849": 383, "0012": 383, "358": 383, "7511": 383, "8804": 383, "359": 383, "8870": 383, "6728": 383, "360": 383, "8841": 383, "5508": 383, "361": 383, "5242": 383, "0013": 383, "6185": 383, "363": 383, "1378": 383, "0204": 383, "364": 383, "0355": 383, "685": 383, "365": 383, "4884": 383, "0231": 383, "0014": 383, "6793": 383, "367": 383, "9834": 383, "863": 383, "368": 383, "6709": 383, "369": 383, "5199": 383, "9790": 383, "370": 383, "9401": 383, "7802": 383, "371": 383, "6723": 383, "372": 383, "2678": 383, "6201": 383, "373": 383, "2184": 383, "7385": 383, "374": 383, "6344": 383, "617": 383, "375": 383, "9945": 383, "0772": 383, "567": 383, "7576": 383, "0398": 383, "377": 383, "3396": 383, "0022": 383, "094": 383, "378": 383, "3073": 383, "4018": 383, "379": 383, "1869": 383, "380": 383, "0481": 383, "1117": 383, "381": 383, "6823": 383, "981": 383, "8305": 383, "0210": 383, "383": 383, "4908": 383, "0272": 383, "538": 383, "3267": 383, "0111": 383, "7965": 383, "1796": 383, "0039": 383, "5396": 383, "386": 383, "3757": 383, "0490": 383, "387": 383, "1394": 383, "4187": 383, "2986": 383, "7954": 383, "1274": 383, "0063": 383, "813": 383, "390": 383, "8706": 383, "0114": 383, "391": 383, "6922": 383, "2423": 383, "392": 383, "9115": 383, "2602": 383, "393": 383, "2449": 383, "0783": 383, "394": 383, "0631": 383, "0057": 383, "7444": 383, "395": 383, "3339": 383, "0167": 383, "396": 383, "4806": 383, "397": 383, "4171": 383, "067": 383, "398": 383, "2618": 383, "5809": 383, "399": 383, "0054": 383, "3364": 383, "8733": 383, "0184": 383, "401": 383, "9137": 383, "0113": 383, "025": 383, "0386": 383, "0625": 383, "403": 383, "1332": 383, "0582": 383, "7816": 383, "404": 383, "8341": 383, "0941": 383, "854": 383, "405": 383, "8615": 383, "588": 383, "406": 383, "3849": 383, "008": 383, "407": 383, "9395": 383, "0765": 383, "055": 383, "408": 383, "2685": 383, "2235": 383, "688": 383, "409": 383, "3052": 383, "4249": 383, "410": 383, "6806": 383, "6383": 383, "3721": 383, "9981": 383, "1862": 383, "822": 383, "413": 383, "9811": 383, "0171": 383, "013": 383, "414": 383, "0252": 383, "0049": 383, "6205": 383, "415": 383, "4921": 383, "9142": 383, "8130": 383, "417": 383, "1725": 383, "0036": 383, "3196": 383, "418": 383, "7795": 383, "0242": 383, "799": 383, "419": 383, "7737": 383, "0138": 383, "420": 383, "1462": 383, "0053": 383, "421": 383, "9226": 383, "6139": 383, "422": 383, "9889": 383, "0403": 383, "423": 383, "6194": 383, "0032": 383, "3989": 383, "0104": 383, "425": 383, "9960": 383, "0009": 383, "6009": 383, "426": 383, "2697": 383, "0914": 383, "427": 383, "1114": 383, "428": 383, "9862": 383, "1932": 383, "429": 383, "0637": 383, "0623": 383, "082": 383, "430": 383, "9906": 383, "2031": 383, "431": 383, "9948": 383, "0895": 383, "432": 383, "1970": 383, "0256": 383, "4231": 383, "0449": 383, "644": 383, "434": 383, "1039": 383, "1973": 383, "435": 383, "4561": 383, "1225": 383, "436": 383, "0211": 383, "2125": 383, "437": 383, "3866": 383, "0050": 383, "7202": 383, "438": 383, "6388": 383, "0072": 383, "439": 383, "1187": 383, "0015": 383, "5116": 383, "440": 383, "0432": 383, "0025": 383, "7809": 383, "1925": 383, "0103": 383, "442": 383, "9570": 383, "443": 383, "0871": 383, "5601": 383, "0165": 383, "0047": 383, "6061": 383, "2746": 383, "0027": 383, "7887": 383, "446": 383, "1835": 383, "0035": 383, "855": 383, "447": 383, "8420": 383, "548": 383, "2653": 383, "0126": 383, "9736": 383, "449": 383, "0594": 383, "0119": 383, "6196": 383, "450": 383, "4509": 383, "0373": 383, "451": 383, "0620": 383, "452": 383, "6898": 383, "3235": 383, "687": 383, "453": 383, "5879": 383, "8406": 383, "0694": 383, "8259": 383, "0235": 383, "8500": 383, "0024": 383, "4054": 383, "458": 383, "2027": 383, "0894": 383, "5966": 383, "6942": 383, "0016": 383, "4254": 383, "6703": 383, "0145": 383, "8124": 383, "0218": 383, "9196": 383, "0188": 383, "8986": 383, "0884": 383, "0084": 383, "5624": 383, "8862": 383, "0006": 383, "5384": 383, "466": 383, "5837": 383, "467": 383, "8954": 383, "0101": 383, "6751": 383, "468": 383, "8063": 383, "0122": 383, "9635": 383, "469": 383, "0692": 383, "4216": 383, "470": 383, "1227": 383, "0586": 383, "162e": 383, "471": 383, "9690": 383, "4166": 383, "6324": 383, "473": 383, "0778": 383, "474": 383, "8548": 383, "0017": 383, "4408": 383, "475": 383, "8125": 383, "1515": 383, "476": 383, "2733": 383, "0044": 383, "2836": 383, "477": 383, "7497": 383, "7681": 383, "478": 383, "8547": 383, "0105": 383, "7212": 383, "479": 383, "9848": 383, "0019": 383, "6498": 383, "1987": 383, "0011": 383, "5473": 383, "481": 383, "8991": 383, "6091": 383, "9189": 383, "5771": 383, "483": 383, "6781": 383, "7542": 383, "5959": 383, "0064": 383, "485": 383, "2547": 383, "486": 383, "0636": 383, "547": 383, "487": 383, "0065": 383, "488": 383, "1694": 383, "0083": 383, "5759": 383, "489": 383, "0493": 383, "0021": 383, "7805": 383, "490": 383, "0950": 383, "497": 383, "491": 383, "9717": 383, "3672": 383, "492": 383, "0207": 383, "493": 383, "8266": 383, "5365": 383, "494": 383, "2623": 383, "5078": 383, "495": 383, "4545": 383, "09636": 383, "8754": 383, "0010": 383, "498": 383, "0031": 383, "8269": 383, "499": 383, "6642": 383, "2284": 383, "501": 383, "9130": 383, "0008": 383, "502": 383, "503": 383, "7624": 383, "0056": 383, "3858": 383, "504": 383, "0890": 383, "0042": 383, "505": 383, "7505": 383, "2157": 383, "506": 383, "8394": 383, "3413": 383, "507": 383, "9609": 383, "0041": 383, "6905": 383, "508": 383, "8467": 383, "4409": 383, "509": 383, "510": 383, "8128": 383, "3559": 383, "511": 383, "1479": 383, "0264": 383, "1589": 383, "566": 383, "513": 383, "2756": 383, "0046": 383, "5266": 383, "514": 383, "9873": 383, "0112": 383, "9314": 383, "515": 383, "3791": 383, "0721": 383, "516": 383, "4580": 383, "0758": 383, "6114": 383, "517": 383, "2431": 383, "518": 383, "1958": 383, "5553": 383, "8924": 383, "0097": 383, "520": 383, "3737": 383, "0234": 383, "521": 383, "9125": 383, "4623": 383, "3230": 383, "0589": 383, "3784": 383, "9482": 383, "0051": 383, "524": 383, "1979": 383, "0045": 383, "6401": 383, "525": 383, "1588": 383, "0048": 383, "6255": 383, "526": 383, "6084": 383, "3477": 383, "1475": 383, "0209": 383, "528": 383, "7611": 383, "1040": 383, "0099": 383, "0173": 383, "643": 383, "530": 383, "8189": 383, "4358": 383, "531": 383, "9897": 383, "1548": 383, "9751": 383, "533": 383, "6362": 383, "7495": 383, "534": 383, "1749": 383, "9513": 383, "535": 383, "7708": 383, "0371": 383, "536": 383, "2649": 383, "0437": 383, "537": 383, "5491": 383, "0276": 383, "6426": 383, "7294": 383, "078e": 383, "539": 383, "9928": 383, "7937": 383, "0124": 383, "9664": 383, "541": 383, "3342": 383, "542": 383, "2046": 383, "5496": 383, "0956": 383, "0059": 383, "545": 383, "9028": 383, "5843": 383, "546": 383, "0674": 383, "0178": 383, "797": 383, "2815": 383, "0599": 383, "1587": 383, "9276": 383, "8228": 383, "6164": 383, "551": 383, "6850": 383, "9167": 383, "3092": 383, "0670": 383, "9177": 383, "553": 383, "1599": 383, "0043": 383, "554": 383, "6367": 383, "555": 383, "3657": 383, "556": 383, "6694": 383, "2622": 383, "0372": 383, "4841": 383, "558": 383, "2707": 383, "757": 383, "559": 383, "2267": 383, "5415": 383, "560": 383, "4556": 383, "0163": 383, "561": 383, "1839": 383, "0809": 383, "6262": 383, "562": 383, "0278": 383, "1112": 383, "6155": 383, "565": 383, "1427": 383, "3582": 383, "624": 383, "7870": 383, "9490": 383, "0439": 383, "8796": 383, "568": 383, "8026": 383, "612": 383, "569": [383, 388], "3147": 383, "8486": 383, "570": 383, "7917": 383, "0129": 383, "571": [383, 388], "9553": 383, "0020": 383, "6871": 383, "3132": 383, "0159": 383, "8646": 383, "573": 383, "5320": 383, "0269": 383, "574": 383, "2955": 383, "0245": 383, "575": 383, "3347": 383, "0179": 383, "9718": 383, "1629": 383, "804": 383, "577": 383, "4164": 383, "0070": 383, "4335": 383, "578": 383, "579": 383, "3049": 383, "9063": 383, "580": 383, "8785": 383, "3295": 383, "5184": 383, "0546": 383, "582": 383, "4589": 383, "583": 383, "4697": 383, "2476": 383, "584": 383, "2397": 383, "585": 383, "4953": 383, "1775": 383, "586": 383, "2258": 383, "0110": 383, "7671": 383, "587": 383, "3981": 383, "8590": 383, "0007": 383, "589": 383, "9820": 383, "4221": 383, "590": 383, "1293": 383, "0116": 383, "868": 383, "1675": 383, "5931": 383, "592": 383, "2910": 383, "5219": 383, "2124": 383, "1730": 383, "737": 383, "594": 383, "2914": 383, "0206": 383, "595": 383, "0172": 383, "3982": 383, "0945": 383, "0121": 383, "4789": 383, "597": 383, "3805": 383, "4074": 383, "598": 383, "3310": 383, "5065": 383, "6028": 383, "6316": 383, "6724": 383, "6523": 383, "601": 383, "0136": 383, "4298": 383, "602": 383, "3524": 383, "2629": 383, "603": 383, "2635": 383, "7839": 383, "604": 383, "6041": 383, "8027": 383, "4170": 383, "4675": 383, "606": 383, "3153": 383, "9316": 383, "607": 383, "0649": 383, "9722": 383, "7989": 383, "0329": 383, "609": 383, "1976": 383, "6852": 383, "610": 383, "4793": 383, "1255": 383, "611": 383, "4581": 383, "0394": 383, "2047": 383, "0326": 383, "613": 383, "8967": 383, "8619": 383, "614": 383, "5906": 383, "6491": 383, "615": 383, "6634": 383, "4394": 383, "616": 383, "0624": 383, "0061": 383, "5676": 383, "3259": 383, "0131": 383, "7733": 383, "618": 383, "7515": 383, "0189": 383, "5575": 383, "619": 383, "9313": 383, "6286": 383, "620": 383, "4325": 383, "7832": 383, "621": 383, "1134": 383, "622": 383, "4572": 383, "0500": 383, "5838": 383, "623": 383, "3818": 383, "8623": 383, "1253": 383, "6622": 383, "subject": 383, "explain": 384, "semat": 384, "r3mtransform": 384, "env_transform": [384, 388], "s3": 384, "amazonaw": 384, "r3m_50": 384, "374m": 384, "9m": 384, "4mb": 384, "5mb": 384, "6mb": 384, "2m": 384, "3mb": 384, "0m": 384, "2mb": 384, "1mb": 384, "105m": 384, "115m": 384, "7mb": 384, "130m": 384, "138m": 384, "148m": 384, "162m": 384, "9mb": 384, "170m": 384, "179m": 384, "186m": 384, "195m": 384, "200m": 384, "213m": 384, "229m": 384, "8mb": 384, "235m": 384, "246m": 384, "262m": 384, "0mb": 384, "268m": 384, "277m": 384, "283m": 384, "293m": 384, "298m": 384, "310m": 384, "315m": 384, "326m": 384, "332m": 384, "342m": 384, "350m": 384, "360m": 384, "373m": 384, "wiser": 384, "batteri": 385, "buffer_list": 385, "lowest": 385, "medium": 385, "buffer_lazytensor": 385, "buffer_lazymemmap": 385, "tempdir": 385, "tmpeq__sodw": 385, "fullest": 385, "mydata": 385, "background": 385, "question": [385, 387], "_i": 385, "artifici": 385, "0893e": 385, "hamper": 385, "she": 385, "pars": 385, "proport": 385, "hist": 385, "barcontain": 385, "artist": 385, "reappear": 385, "unfold": 385, "problemat": 385, "4th": 385, "prioritizedslicesampl": 385, "tensordictmaxvaluewrit": 385, "demo": 387, "icml": 387, "vmoen": 387, "fb": 387, "invest": 387, "platform": 387, "media": 387, "predominantli": 387, "tensordict1": 387, "tensordict2": 387, "tensordict_sampl": 387, "_sampler": 387, "_sum_tre": 387, "modulenotfounderror": 387, "28791671991348267": 387, "noopresetenv": [387, 388], "backbone_modul": 387, "params_expand": 387, "exec_sequ": 387, "tensordict_exp": 387, "base_modul": 387, "0137": 387, "1524": 387, "0641": 387, "viewbackward0": 387, "asstridedbackward0": 387, "8728": 387, "1334": 387, "3494": 387, "6887": 387, "6402": 387, "_safetanhbackward": 387, "1132": 387, "1762": 387, "3430": 387, "2668": 387, "2918": 387, "6239": 387, "roughli": 387, "tensordicts_prealloc": 387, "tensordicts_stack": 387, "tensordict_rollout": [387, 388], "disclaim": 387, "concatmodul": 387, "loss_td": 387, "year": 387, "roadmap": 387, "compris": 387, "contributor": 387, "curiou": 387, "nascent": 387, "unsupervis": 388, "unifi": 388, "_build_env": 388, "bipedalwalk": 388, "bipedalwalkerhardcor": 388, "blackjack": 388, "carrac": 388, "1596": 388, "deserv": 388, "__episode__": 388, "__trajectory__": 388, "void": 388, "reproduct": 388, "reset_data": 388, "tensordict_tprim": 388, "imshow": 388, "axesimag": 388, "0x7fb8386dddc0": 388, "traceback": 388, "1371": 388, "784": 388, "3047": 388, "1423": 388, "_check_version_exist": 388, "ns": 388, "_check_name_exist": 388, "_check_namespace_exist": 388, "namespacenotfound": 388, "suggestion_msg": 388, "wrapper1": 388, "wrapper2": 388, "obviou": 388, "truth": 388, "env0": 388, "env_transformed_bi": 388, "stanc": 388, "transformeddistribut": 388, "base_dist": 388, "concat": 388, "mofidi": 388, "transformedenviron": 388, "moderet": 388, "computation": 388, "legitim": 388, "incom": 388, "amongst": 388, "has_cuda": 388, "wor": 388, "convention": 388, "markovian": 388, "constain": 388, "bar_": 388, "get_someth": 388, "aargh": 388, "is_clos": 388, "foo_list": 388, "parallen": 388, "particularili": 388, "evolv": 388, "steadi": 388, "approx": 388, "_extra_st": 388, "observation_ssq": 388, "observation_sum": 388, "dispach": 388, "absor": 388}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "BinaryDiscreteTensorSpec"], [26, 0, 1, "", "BoundedTensorSpec"], [27, 0, 1, "", "CompositeSpec"], [28, 0, 1, "", "ConstantKLController"], [29, 0, 1, "", "DiscreteTensorSpec"], [30, 0, 1, "", "Flat2TED"], [31, 0, 1, "", "H5Combine"], [32, 0, 1, "", "H5Split"], [33, 0, 1, "", "LazyStackedCompositeSpec"], [34, 0, 1, "", "LazyStackedTensorSpec"], [35, 0, 1, "", "MultiDiscreteTensorSpec"], [36, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [37, 0, 1, "", "MultiStep"], [38, 0, 1, "", "Nested2TED"], [39, 0, 1, "", "NonTensorSpec"], [40, 0, 1, "", "OneHotDiscreteTensorSpec"], [41, 0, 1, "", "PairwiseDataset"], [42, 0, 1, "", "PrioritizedReplayBuffer"], [43, 0, 1, "", "PromptData"], [44, 0, 1, "", "PromptTensorDictTokenizer"], [45, 0, 1, "", "ReplayBuffer"], [46, 0, 1, "", "RewardData"], [47, 0, 1, "", "RolloutFromModel"], [48, 0, 1, "", "TED2Flat"], [49, 0, 1, "", "TED2Nested"], [50, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [51, 0, 1, "", "TensorDictReplayBuffer"], [52, 0, 1, "", "TensorDictTokenizer"], [53, 0, 1, "", "TensorSpec"], [54, 0, 1, "", "TokenizedDatasetLoader"], [55, 0, 1, "", "UnboundedContinuousTensorSpec"], [56, 0, 1, "", "UnboundedDiscreteTensorSpec"], [57, 0, 1, "", "check_no_exclusive_keys"], [58, 0, 1, "", "consolidate_spec"], [59, 0, 1, "", "contains_lazy_spec"], [60, 0, 1, "", "create_infinite_iterator"], [70, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 3, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 3, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 3, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 3, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "empty"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "get"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_empty"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "items"], [33, 1, 1, "", "keys"], [33, 1, 1, "", "lock_"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 3, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unlock_"], [33, 1, 1, "", "values"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 3, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 3, 1, "", "sample"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 3, 1, "", "sample"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to_categorical"], [36, 1, 1, "", "to_categorical_spec"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[37, 1, 1, "", "add_module"], [37, 1, 1, "", "apply"], [37, 1, 1, "", "bfloat16"], [37, 1, 1, "", "buffers"], [37, 1, 1, "", "children"], [37, 1, 1, "", "compile"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 1, 1, "", "double"], [37, 1, 1, "", "eval"], [37, 1, 1, "", "extra_repr"], [37, 1, 1, "", "float"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_buffer"], [37, 1, 1, "", "get_extra_state"], [37, 1, 1, "", "get_parameter"], [37, 1, 1, "", "get_submodule"], [37, 1, 1, "", "half"], [37, 1, 1, "", "ipu"], [37, 1, 1, "", "load_state_dict"], [37, 1, 1, "", "modules"], [37, 1, 1, "", "named_buffers"], [37, 1, 1, "", "named_children"], [37, 1, 1, "", "named_modules"], [37, 1, 1, "", "named_parameters"], [37, 1, 1, "", "parameters"], [37, 1, 1, "", "register_backward_hook"], [37, 1, 1, "", "register_buffer"], [37, 1, 1, "", "register_forward_hook"], [37, 1, 1, "", "register_forward_pre_hook"], [37, 1, 1, "", "register_full_backward_hook"], [37, 1, 1, "", "register_full_backward_pre_hook"], [37, 1, 1, "", "register_load_state_dict_post_hook"], [37, 1, 1, "", "register_module"], [37, 1, 1, "", "register_parameter"], [37, 1, 1, "", "register_state_dict_pre_hook"], [37, 1, 1, "", "requires_grad_"], [37, 1, 1, "", "set_extra_state"], [37, 1, 1, "", "set_submodule"], [37, 1, 1, "", "share_memory"], [37, 1, 1, "", "state_dict"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_empty"], [37, 1, 1, "", "train"], [37, 1, 1, "", "type"], [37, 1, 1, "", "xpu"], [37, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 3, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 3, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[41, 3, 1, "", "batch_size"], [41, 3, 1, "", "device"], [41, 1, 1, "", "from_dataset"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "gather"], [41, 1, 1, "", "get"], [41, 1, 1, "", "is_memmap"], [41, 1, 1, "", "is_shared"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 3, 1, "", "names"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "numel"], [41, 1, 1, "", "replace"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dump"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "load"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "register_load_hook"], [42, 1, 1, "", "register_save_hook"], [42, 1, 1, "", "sample"], [42, 3, 1, "", "sampler"], [42, 1, 1, "", "save"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"], [42, 3, 1, "", "storage"], [42, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[43, 3, 1, "", "batch_size"], [43, 3, 1, "", "device"], [43, 1, 1, "", "from_dataset"], [43, 1, 1, "", "from_tensordict"], [43, 1, 1, "", "gather"], [43, 1, 1, "", "get"], [43, 1, 1, "", "is_memmap"], [43, 1, 1, "", "is_shared"], [43, 1, 1, "", "load"], [43, 1, 1, "", "load_"], [43, 1, 1, "", "load_memmap"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "memmap"], [43, 1, 1, "", "memmap_"], [43, 1, 1, "", "memmap_like"], [43, 1, 1, "", "memmap_refresh_"], [43, 3, 1, "", "names"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "numel"], [43, 1, 1, "", "replace"], [43, 1, 1, "", "save"], [43, 1, 1, "", "set"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to_tensordict"], [43, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[45, 1, 1, "", "add"], [45, 1, 1, "", "append_transform"], [45, 1, 1, "", "dump"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "empty"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "insert_transform"], [45, 1, 1, "", "load"], [45, 1, 1, "", "loads"], [45, 1, 1, "", "register_load_hook"], [45, 1, 1, "", "register_save_hook"], [45, 1, 1, "", "sample"], [45, 3, 1, "", "sampler"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set_sampler"], [45, 1, 1, "", "set_storage"], [45, 1, 1, "", "set_writer"], [45, 3, 1, "", "storage"], [45, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[46, 3, 1, "", "batch_size"], [46, 3, 1, "", "device"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "gather"], [46, 1, 1, "", "get"], [46, 1, 1, "", "is_memmap"], [46, 1, 1, "", "is_shared"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 3, 1, "", "names"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "numel"], [46, 1, 1, "", "replace"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[47, 1, 1, "", "create_rollout_td"], [47, 1, 1, "", "generate"], [47, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "append_transform"], [50, 1, 1, "", "dump"], [50, 1, 1, "", "dumps"], [50, 1, 1, "", "empty"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "insert_transform"], [50, 1, 1, "", "load"], [50, 1, 1, "", "loads"], [50, 1, 1, "", "register_load_hook"], [50, 1, 1, "", "register_save_hook"], [50, 1, 1, "", "sample"], [50, 3, 1, "", "sampler"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set_sampler"], [50, 1, 1, "", "set_storage"], [50, 1, 1, "", "set_writer"], [50, 3, 1, "", "storage"], [50, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 3, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[54, 1, 1, "", "dataset_to_tensordict"], [54, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 3, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 3, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"]], "torchrl.data.datasets": [[61, 0, 1, "", "AtariDQNExperienceReplay"], [62, 0, 1, "", "BaseDatasetExperienceReplay"], [63, 0, 1, "", "D4RLExperienceReplay"], [64, 0, 1, "", "GenDGRLExperienceReplay"], [65, 0, 1, "", "MinariExperienceReplay"], [66, 0, 1, "", "OpenMLExperienceReplay"], [67, 0, 1, "", "OpenXExperienceReplay"], [68, 0, 1, "", "RobosetExperienceReplay"], [69, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 3, 1, "", "data_path"], [63, 3, 1, "", "data_path_root"], [63, 1, 1, "", "delete"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "preprocess"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 3, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 3, 1, "", "storage"], [63, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 3, 1, "", "data_path"], [64, 3, 1, "", "data_path_root"], [64, 1, 1, "", "delete"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "preprocess"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 3, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 3, 1, "", "storage"], [64, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 3, 1, "", "data_path"], [65, 3, 1, "", "data_path_root"], [65, 1, 1, "", "delete"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "preprocess"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 3, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 3, 1, "", "storage"], [65, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 3, 1, "", "data_path"], [66, 3, 1, "", "data_path_root"], [66, 1, 1, "", "delete"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "preprocess"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 3, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 3, 1, "", "storage"], [66, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 3, 1, "", "data_path"], [67, 3, 1, "", "data_path_root"], [67, 1, 1, "", "delete"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "preprocess"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 3, 1, "", "data_path"], [68, 3, 1, "", "data_path_root"], [68, 1, 1, "", "delete"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "preprocess"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 3, 1, "", "data_path"], [69, 3, 1, "", "data_path_root"], [69, 1, 1, "", "delete"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "preprocess"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 3, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 3, 1, "", "storage"], [69, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[71, 0, 1, "", "FlatStorageCheckpointer"], [72, 0, 1, "", "H5StorageCheckpointer"], [73, 0, 1, "", "ImmutableDatasetWriter"], [74, 0, 1, "", "LazyMemmapStorage"], [75, 0, 1, "", "LazyTensorStorage"], [76, 0, 1, "", "ListStorage"], [77, 0, 1, "", "ListStorageCheckpointer"], [78, 0, 1, "", "NestedStorageCheckpointer"], [79, 0, 1, "", "PrioritizedSampler"], [80, 0, 1, "", "PrioritizedSliceSampler"], [81, 0, 1, "", "RandomSampler"], [82, 0, 1, "", "ReplayBufferEnsemble"], [83, 0, 1, "", "RoundRobinWriter"], [84, 0, 1, "", "Sampler"], [85, 0, 1, "", "SamplerEnsemble"], [86, 0, 1, "", "SamplerWithoutReplacement"], [87, 0, 1, "", "SliceSampler"], [88, 0, 1, "", "SliceSamplerWithoutReplacement"], [89, 0, 1, "", "Storage"], [90, 0, 1, "", "StorageCheckpointerBase"], [91, 0, 1, "", "StorageEnsemble"], [92, 0, 1, "", "StorageEnsembleCheckpointer"], [93, 0, 1, "", "TensorDictMaxValueWriter"], [94, 0, 1, "", "TensorDictRoundRobinWriter"], [95, 0, 1, "", "TensorStorage"], [96, 0, 1, "", "TensorStorageCheckpointer"], [97, 0, 1, "", "Writer"], [98, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[73, 1, 1, "", "add"], [73, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[74, 1, 1, "", "attach"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "load"], [74, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[75, 1, 1, "", "attach"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "load"], [75, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[76, 1, 1, "", "attach"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "load"], [76, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[79, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[80, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 3, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 3, 1, "", "storage"], [82, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[83, 1, 1, "", "add"], [83, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[89, 1, 1, "", "attach"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "load"], [89, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[91, 1, 1, "", "attach"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "load"], [91, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"], [93, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[94, 1, 1, "", "add"], [94, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[98, 1, 1, "", "add"], [98, 1, 1, "", "extend"]], "torchrl.envs": [[99, 2, 1, "", "BraxEnv"], [100, 2, 1, "", "BraxWrapper"], [101, 2, 1, "", "DMControlEnv"], [102, 2, 1, "", "DMControlWrapper"], [103, 0, 1, "", "EnvBase"], [104, 0, 1, "", "EnvCreator"], [105, 0, 1, "", "EnvMetaData"], [106, 2, 1, "", "GymEnv"], [107, 0, 1, "", "GymLikeEnv"], [108, 2, 1, "", "GymWrapper"], [109, 2, 1, "", "HabitatEnv"], [110, 2, 1, "", "IsaacGymEnv"], [111, 2, 1, "", "IsaacGymWrapper"], [112, 2, 1, "", "JumanjiEnv"], [113, 2, 1, "", "JumanjiWrapper"], [114, 2, 1, "", "MOGymEnv"], [115, 2, 1, "", "MOGymWrapper"], [116, 2, 1, "", "MarlGroupMapType"], [117, 2, 1, "", "MeltingpotEnv"], [118, 2, 1, "", "MeltingpotWrapper"], [119, 2, 1, "", "ModelBasedEnvBase"], [120, 2, 1, "", "MultiThreadedEnv"], [121, 2, 1, "", "MultiThreadedEnvWrapper"], [122, 2, 1, "", "OpenMLEnv"], [123, 0, 1, "", "ParallelEnv"], [124, 2, 1, "", "PettingZooEnv"], [125, 2, 1, "", "PettingZooWrapper"], [126, 2, 1, "", "RoboHiveEnv"], [127, 2, 1, "", "SMACv2Env"], [128, 2, 1, "", "SMACv2Wrapper"], [129, 0, 1, "", "SerialEnv"], [130, 2, 1, "", "VmasEnv"], [131, 2, 1, "", "VmasWrapper"], [132, 2, 1, "", "check_marl_grouping"], [133, 2, 1, "", "gym_backend"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "rollout"], [136, 2, 1, "", "set_gym_backend"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "add_truncated_keys"], [103, 1, 1, "", "append_transform"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "batch_size"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "maybe_reset"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "id0", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "id1", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "id2", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "id3", "set_seed"], [103, 1, 1, "", "set_submodule"], [103, 3, 1, "", "shape"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_keys"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "id4", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "add_truncated_keys"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "apply"], [107, 1, 1, "", "auto_register_info_dict"], [107, 3, 1, "", "batch_locked"], [107, 3, 1, "", "batch_size"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "close"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_reset"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "read_action"], [107, 1, 1, "", "read_done"], [107, 1, 1, "", "read_obs"], [107, 1, 1, "", "read_reward"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_gym"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_info_dict_reader"], [107, 1, 1, "", "set_seed"], [107, 1, 1, "", "set_submodule"], [107, 3, 1, "", "shape"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_keys"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[123, 3, 1, "", "action_key"], [123, 3, 1, "", "action_keys"], [123, 3, 1, "", "action_spec"], [123, 1, 1, "", "add_module"], [123, 1, 1, "", "add_truncated_keys"], [123, 1, 1, "", "append_transform"], [123, 1, 1, "", "apply"], [123, 3, 1, "", "batch_locked"], [123, 3, 1, "", "batch_size"], [123, 1, 1, "", "bfloat16"], [123, 1, 1, "", "buffers"], [123, 1, 1, "", "children"], [123, 1, 1, "", "compile"], [123, 1, 1, "", "cpu"], [123, 1, 1, "", "cuda"], [123, 3, 1, "", "done_key"], [123, 3, 1, "", "done_keys"], [123, 3, 1, "", "done_keys_groups"], [123, 3, 1, "", "done_spec"], [123, 1, 1, "", "double"], [123, 1, 1, "", "empty_cache"], [123, 1, 1, "", "eval"], [123, 1, 1, "", "extra_repr"], [123, 1, 1, "", "fake_tensordict"], [123, 1, 1, "", "float"], [123, 1, 1, "", "forward"], [123, 3, 1, "", "full_action_spec"], [123, 3, 1, "", "full_done_spec"], [123, 3, 1, "", "full_reward_spec"], [123, 3, 1, "", "full_state_spec"], [123, 1, 1, "", "get_buffer"], [123, 1, 1, "", "get_extra_state"], [123, 1, 1, "", "get_parameter"], [123, 1, 1, "", "get_submodule"], [123, 1, 1, "", "half"], [123, 3, 1, "", "input_spec"], [123, 1, 1, "", "ipu"], [123, 1, 1, "", "load_state_dict"], [123, 1, 1, "", "maybe_reset"], [123, 1, 1, "", "modules"], [123, 1, 1, "", "named_buffers"], [123, 1, 1, "", "named_children"], [123, 1, 1, "", "named_modules"], [123, 1, 1, "", "named_parameters"], [123, 3, 1, "", "observation_spec"], [123, 3, 1, "", "output_spec"], [123, 1, 1, "", "parameters"], [123, 1, 1, "", "rand_action"], [123, 1, 1, "", "rand_step"], [123, 1, 1, "", "register_backward_hook"], [123, 1, 1, "", "register_buffer"], [123, 1, 1, "", "register_forward_hook"], [123, 1, 1, "", "register_forward_pre_hook"], [123, 1, 1, "", "register_full_backward_hook"], [123, 1, 1, "", "register_full_backward_pre_hook"], [123, 1, 1, "", "register_gym"], [123, 1, 1, "", "register_load_state_dict_post_hook"], [123, 1, 1, "", "register_module"], [123, 1, 1, "", "register_parameter"], [123, 1, 1, "", "register_state_dict_pre_hook"], [123, 1, 1, "", "requires_grad_"], [123, 1, 1, "", "reset"], [123, 3, 1, "", "reset_keys"], [123, 3, 1, "", "reward_key"], [123, 3, 1, "", "reward_keys"], [123, 3, 1, "", "reward_spec"], [123, 1, 1, "", "rollout"], [123, 1, 1, "", "set_extra_state"], [123, 1, 1, "", "set_seed"], [123, 1, 1, "", "set_submodule"], [123, 3, 1, "", "shape"], [123, 1, 1, "", "share_memory"], [123, 3, 1, "", "specs"], [123, 1, 1, "", "state_dict"], [123, 3, 1, "", "state_keys"], [123, 3, 1, "", "state_spec"], [123, 1, 1, "", "step"], [123, 1, 1, "", "step_and_maybe_reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "to_empty"], [123, 1, 1, "", "train"], [123, 1, 1, "", "type"], [123, 1, 1, "", "update_kwargs"], [123, 1, 1, "", "xpu"], [123, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[129, 3, 1, "", "action_key"], [129, 3, 1, "", "action_keys"], [129, 3, 1, "", "action_spec"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 3, 1, "", "batch_locked"], [129, 3, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "children"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 3, 1, "", "done_key"], [129, 3, 1, "", "done_keys"], [129, 3, 1, "", "done_keys_groups"], [129, 3, 1, "", "done_spec"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 3, 1, "", "full_action_spec"], [129, 3, 1, "", "full_done_spec"], [129, 3, 1, "", "full_reward_spec"], [129, 3, 1, "", "full_state_spec"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 3, 1, "", "input_spec"], [129, 1, 1, "", "ipu"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 3, 1, "", "observation_spec"], [129, 3, 1, "", "output_spec"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "", "rand_step"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "", "reset"], [129, 3, 1, "", "reset_keys"], [129, 3, 1, "", "reward_key"], [129, 3, 1, "", "reward_keys"], [129, 3, 1, "", "reward_spec"], [129, 1, 1, "", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "set_submodule"], [129, 3, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 3, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 3, 1, "", "state_keys"], [129, 3, 1, "", "state_spec"], [129, 1, 1, "", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "update_kwargs"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[134, 2, 1, "", "DreamerDecoder"], [135, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[137, 0, 1, "", "ActionDiscretizer"], [138, 0, 1, "", "ActionMask"], [139, 0, 1, "", "AutoResetEnv"], [140, 0, 1, "", "AutoResetTransform"], [141, 0, 1, "", "BatchSizeTransform"], [142, 0, 1, "", "BinarizeReward"], [143, 0, 1, "", "BurnInTransform"], [144, 0, 1, "", "CatFrames"], [145, 0, 1, "", "CatTensors"], [146, 0, 1, "", "CenterCrop"], [147, 0, 1, "", "ClipTransform"], [148, 0, 1, "", "Compose"], [149, 0, 1, "", "DTypeCastTransform"], [150, 0, 1, "", "DeviceCastTransform"], [151, 0, 1, "", "DiscreteActionProjection"], [152, 0, 1, "", "DoubleToFloat"], [153, 0, 1, "", "EndOfLifeTransform"], [154, 0, 1, "", "ExcludeTransform"], [155, 0, 1, "", "FiniteTensorDictCheck"], [156, 0, 1, "", "FlattenObservation"], [157, 0, 1, "", "FrameSkipTransform"], [158, 0, 1, "", "GrayScale"], [159, 0, 1, "", "InitTracker"], [160, 0, 1, "", "KLRewardTransform"], [161, 0, 1, "", "NoopResetEnv"], [162, 0, 1, "", "ObservationNorm"], [163, 0, 1, "", "ObservationTransform"], [164, 0, 1, "", "PermuteTransform"], [165, 0, 1, "", "PinMemoryTransform"], [166, 0, 1, "", "R3MTransform"], [167, 0, 1, "", "RandomCropTensorDict"], [168, 0, 1, "", "RemoveEmptySpecs"], [169, 0, 1, "", "RenameTransform"], [170, 0, 1, "", "Resize"], [171, 0, 1, "", "Reward2GoTransform"], [172, 0, 1, "", "RewardClipping"], [173, 0, 1, "", "RewardScaling"], [174, 0, 1, "", "RewardSum"], [175, 0, 1, "", "SelectTransform"], [176, 0, 1, "", "SignTransform"], [177, 0, 1, "", "SqueezeTransform"], [178, 0, 1, "", "StepCounter"], [179, 0, 1, "", "TargetReturn"], [180, 0, 1, "", "TensorDictPrimer"], [181, 0, 1, "", "TimeMaxPool"], [182, 0, 1, "", "ToTensorImage"], [183, 0, 1, "", "Transform"], [184, 0, 1, "", "TransformedEnv"], [185, 0, 1, "", "UnsqueezeTransform"], [186, 0, 1, "", "VC1Transform"], [187, 0, 1, "", "VIPRewardTransform"], [188, 0, 1, "", "VIPTransform"], [189, 0, 1, "", "VecGymEnvTransform"], [190, 0, 1, "", "VecNorm"], [191, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[137, 0, 1, "", "SamplingStrategy"], [137, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[138, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[139, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "transform_env_batch_size"], [141, 1, 1, "", "transform_input_spec"], [141, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[142, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[143, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[147, 1, 1, "", "transform_observation_spec"], [147, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[148, 1, 1, "", "append"], [148, 1, 1, "", "forward"], [148, 1, 1, "", "insert"], [148, 1, 1, "", "to"], [148, 1, 1, "", "transform_env_batch_size"], [148, 1, 1, "", "transform_env_device"], [148, 1, 1, "", "transform_input_spec"], [148, 1, 1, "", "transform_observation_spec"], [148, 1, 1, "", "transform_output_spec"], [148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"], [149, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_done_spec"], [150, 1, 1, "", "transform_env_device"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"], [150, 1, 1, "", "transform_output_spec"], [150, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[151, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "register_keys"], [153, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[155, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[157, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[162, 1, 1, "", "init_stats"], [162, 1, 1, "", "transform_input_spec"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[165, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[166, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[167, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[168, 1, 1, "", "forward"], [168, 1, 1, "", "transform_input_spec"], [168, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "transform_input_spec"], [169, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[171, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[172, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[173, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "transform_input_spec"], [174, 1, 1, "", "transform_observation_spec"], [174, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "transform_input_spec"], [178, 1, 1, "", "transform_observation_spec"], [178, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "to"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[183, 3, 1, "", "container"], [183, 1, 1, "", "forward"], [183, 3, 1, "", "parent"], [183, 1, 1, "", "to"], [183, 1, 1, "", "transform_done_spec"], [183, 1, 1, "", "transform_env_batch_size"], [183, 1, 1, "", "transform_env_device"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_output_spec"], [183, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[184, 1, 1, "", "add_truncated_keys"], [184, 1, 1, "", "append_transform"], [184, 3, 1, "", "batch_locked"], [184, 3, 1, "", "batch_size"], [184, 1, 1, "", "empty_cache"], [184, 1, 1, "", "eval"], [184, 3, 1, "", "input_spec"], [184, 1, 1, "", "insert_transform"], [184, 1, 1, "", "load_state_dict"], [184, 3, 1, "", "output_spec"], [184, 1, 1, "", "set_missing_tolerance"], [184, 1, 1, "", "set_seed"], [184, 1, 1, "", "state_dict"], [184, 1, 1, "", "to"], [184, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_observation_spec"], [185, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "make_noload_model"], [186, 1, 1, "", "to"], [186, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[188, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[190, 1, 1, "", "build_td_for_shared_vecnorm"], [190, 1, 1, "", "forward"], [190, 1, 1, "", "freeze"], [190, 1, 1, "", "frozen_copy"], [190, 1, 1, "", "get_extra_state"], [190, 3, 1, "", "loc"], [190, 3, 1, "", "scale"], [190, 1, 1, "", "set_extra_state"], [190, 3, 1, "", "standard_normal"], [190, 1, 1, "", "to_observation_norm"], [190, 1, 1, "", "transform_observation_spec"], [190, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[192, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[192, 1, 1, "", "add_module"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "children"], [192, 1, 1, "", "compile"], [192, 3, 1, "", "container"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 1, 1, "", "double"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 1, 1, "", "ipu"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "modules"], [192, 3, 1, "", "n_steps"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 1, 1, "", "parameters"], [192, 3, 1, "", "parent"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_submodule"], [192, 1, 1, "", "share_memory"], [192, 1, 1, "", "state_dict"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "transform_done_spec"], [192, 1, 1, "", "transform_env_batch_size"], [192, 1, 1, "", "transform_env_device"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "transform_output_spec"], [192, 1, 1, "", "transform_reward_spec"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[193, 2, 1, "", "RandomPolicy"], [194, 2, 1, "", "check_env_specs"], [195, 2, 1, "", "exploration_mode"], [196, 2, 1, "", "exploration_type"], [197, 2, 1, "", "get_available_libraries"], [198, 2, 1, "", "make_composite_from_td"], [199, 2, 1, "", "set_exploration_mode"], [200, 2, 1, "", "set_exploration_type"], [201, 2, 1, "", "step_mdp"], [202, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[203, 0, 1, "", "CEMPlanner"], [204, 0, 1, "", "Conv3dNet"], [205, 0, 1, "", "ConvNet"], [206, 0, 1, "", "DTActor"], [207, 0, 1, "", "DdpgCnnActor"], [208, 0, 1, "", "DdpgCnnQNet"], [209, 0, 1, "", "DdpgMlpActor"], [210, 0, 1, "", "DdpgMlpQNet"], [211, 0, 1, "", "DecisionTransformer"], [212, 0, 1, "", "Delta"], [213, 0, 1, "", "DistributionalDQNnet"], [214, 0, 1, "", "DistributionalQValueHook"], [215, 0, 1, "", "DreamerActor"], [216, 0, 1, "", "DuelingCnnDQNet"], [217, 0, 1, "", "GRU"], [218, 0, 1, "", "GRUCell"], [219, 0, 1, "", "GRUModule"], [220, 0, 1, "", "IndependentNormal"], [221, 0, 1, "", "LSTM"], [222, 0, 1, "", "LSTMCell"], [223, 0, 1, "", "LSTMModule"], [224, 0, 1, "", "MLP"], [225, 0, 1, "", "MPCPlannerBase"], [226, 0, 1, "", "MPPIPlanner"], [227, 0, 1, "", "MaskedCategorical"], [228, 0, 1, "", "MaskedOneHotCategorical"], [229, 0, 1, "", "MultiAgentConvNet"], [230, 0, 1, "", "MultiAgentMLP"], [231, 0, 1, "", "NoisyLazyLinear"], [232, 0, 1, "", "NoisyLinear"], [233, 0, 1, "", "NormalParamWrapper"], [234, 0, 1, "", "ObsDecoder"], [235, 0, 1, "", "ObsEncoder"], [236, 0, 1, "", "OneHotCategorical"], [237, 0, 1, "", "OnlineDTActor"], [238, 0, 1, "", "QMixer"], [239, 0, 1, "", "QValueHook"], [240, 0, 1, "", "RSSMPosterior"], [241, 0, 1, "", "RSSMPrior"], [242, 0, 1, "", "Squeeze2dLayer"], [243, 0, 1, "", "SqueezeLayer"], [244, 0, 1, "", "TanhDelta"], [245, 0, 1, "", "TanhNormal"], [246, 0, 1, "", "TruncatedNormal"], [247, 0, 1, "", "VDNMixer"], [248, 0, 1, "", "VmapModule"], [249, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[203, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[204, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[205, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[206, 1, 1, "", "default_config"], [206, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[207, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[208, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[209, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[210, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[211, 0, 1, "", "DTConfig"], [211, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[212, 1, 1, "", "log_prob"], [212, 3, 1, "", "mean"], [212, 3, 1, "", "mode"], [212, 1, 1, "", "rsample"], [212, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[213, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[215, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[216, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[217, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[218, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[219, 1, 1, "", "forward"], [219, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[220, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[221, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[222, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[223, 1, 1, "", "forward"], [223, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.MLP": [[224, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[226, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[227, 1, 1, "", "log_prob"], [227, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[228, 1, 1, "", "log_prob"], [228, 1, 1, "", "rsample"], [228, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[231, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[233, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[234, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[235, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[236, 1, 1, "", "log_prob"], [236, 3, 1, "", "mode"], [236, 1, 1, "", "rsample"], [236, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[237, 1, 1, "", "default_config"], [237, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[238, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[240, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[241, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[243, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[244, 3, 1, "", "mean"], [244, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[245, 1, 1, "", "get_mode"], [245, 3, 1, "", "mean"], [245, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[246, 1, 1, "", "log_prob"], [246, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[247, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[248, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[250, 0, 1, "", "Actor"], [251, 0, 1, "", "ActorCriticOperator"], [252, 0, 1, "", "ActorCriticWrapper"], [253, 0, 1, "", "ActorValueOperator"], [254, 0, 1, "", "AdditiveGaussianWrapper"], [255, 0, 1, "", "DecisionTransformerInferenceWrapper"], [256, 0, 1, "", "DistributionalQValueActor"], [257, 0, 1, "", "DistributionalQValueModule"], [258, 0, 1, "", "EGreedyModule"], [259, 0, 1, "", "EGreedyWrapper"], [260, 0, 1, "", "LMHeadActorValueOperator"], [261, 0, 1, "", "MultiStepActorWrapper"], [262, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [263, 0, 1, "", "ProbabilisticActor"], [264, 0, 1, "", "QValueActor"], [265, 0, 1, "", "QValueModule"], [266, 0, 1, "", "SafeModule"], [267, 0, 1, "", "SafeProbabilisticModule"], [268, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [269, 0, 1, "", "SafeSequential"], [270, 0, 1, "", "TanhModule"], [271, 0, 1, "", "ValueOperator"], [272, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[251, 1, 1, "", "get_critic_operator"], [251, 1, 1, "", "get_policy_head"], [251, 1, 1, "", "get_value_head"], [251, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[252, 1, 1, "", "get_policy_head"], [252, 1, 1, "", "get_policy_operator"], [252, 1, 1, "", "get_value_head"], [252, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[253, 1, 1, "", "get_policy_head"], [253, 1, 1, "", "get_policy_operator"], [253, 1, 1, "", "get_value_head"], [253, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "mask_context"], [255, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[257, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[261, 1, 1, "", "forward"], [261, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[265, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[266, 1, 1, "", "random"], [266, 1, 1, "", "random_sample"], [266, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[267, 1, 1, "", "random"], [267, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[270, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[272, 1, 1, "", "get_reward_operator"], [272, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[273, 0, 1, "", "biased_softplus"], [274, 0, 1, "", "get_primers_from_module"], [275, 0, 1, "", "inv_softplus"], [276, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[273, 1, 1, "", "forward"]], "torchrl.objectives": [[277, 0, 1, "", "A2CLoss"], [278, 0, 1, "", "CQLLoss"], [279, 0, 1, "", "ClipPPOLoss"], [280, 0, 1, "", "DDPGLoss"], [281, 0, 1, "", "DQNLoss"], [282, 0, 1, "", "DTLoss"], [283, 0, 1, "", "DiscreteCQLLoss"], [284, 0, 1, "", "DiscreteIQLLoss"], [285, 0, 1, "", "DiscreteSACLoss"], [286, 0, 1, "", "DistributionalDQNLoss"], [287, 0, 1, "", "DreamerActorLoss"], [288, 0, 1, "", "DreamerModelLoss"], [289, 0, 1, "", "DreamerValueLoss"], [290, 0, 1, "", "HardUpdate"], [291, 0, 1, "", "IQLLoss"], [292, 0, 1, "", "KLPENPPOLoss"], [293, 0, 1, "", "LossModule"], [294, 0, 1, "", "OnlineDTLoss"], [295, 0, 1, "", "PPOLoss"], [296, 0, 1, "", "REDQLoss"], [297, 0, 1, "", "ReinforceLoss"], [298, 0, 1, "", "SACLoss"], [299, 0, 1, "", "SoftUpdate"], [300, 0, 1, "", "TD3BCLoss"], [301, 0, 1, "", "TD3Loss"], [302, 0, 1, "", "ValueEstimators"], [303, 0, 1, "", "default_value_kwargs"], [304, 0, 1, "", "distance_loss"], [305, 0, 1, "", "hold_out_net"], [306, 0, 1, "", "hold_out_params"], [308, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[279, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[282, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[284, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[288, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[289, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "loss_value_diff"], [291, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[292, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[293, 1, 1, "", "convert_to_functional"], [293, 1, 1, "", "forward"], [293, 1, 1, "", "make_value_estimator"], [293, 1, 1, "", "named_parameters"], [293, 1, 1, "", "parameters"], [293, 1, 1, "", "set_keys"], [293, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[294, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[296, 1, 1, "", "forward"], [296, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[298, 1, 1, "", "forward"], [298, 1, 1, "", "load_state_dict"], [298, 1, 1, "", "make_value_estimator"], [298, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[300, 1, 1, "", "actor_loss"], [300, 1, 1, "", "forward"], [300, 1, 1, "", "make_value_estimator"], [300, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[301, 1, 1, "", "forward"], [301, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[307, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[309, 0, 1, "", "GAE"], [310, 0, 1, "", "TD0Estimator"], [311, 0, 1, "", "TD1Estimator"], [312, 0, 1, "", "TDLambdaEstimator"], [313, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[311, 1, 1, "", "forward"], [311, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[312, 1, 1, "", "forward"], [312, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "set_keys"], [313, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[314, 0, 1, "", "generalized_advantage_estimate"], [315, 0, 1, "", "reward2go"], [316, 0, 1, "", "td0_advantage_estimate"], [317, 0, 1, "", "td0_return_estimate"], [318, 0, 1, "", "td1_advantage_estimate"], [319, 0, 1, "", "td1_return_estimate"], [320, 0, 1, "", "td_lambda_advantage_estimate"], [321, 0, 1, "", "td_lambda_return_estimate"], [322, 0, 1, "", "vec_generalized_advantage_estimate"], [323, 0, 1, "", "vec_td1_advantage_estimate"], [324, 0, 1, "", "vec_td1_return_estimate"], [325, 0, 1, "", "vec_td_lambda_advantage_estimate"], [326, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[327, 2, 1, "", "PixelRenderTransform"], [328, 2, 1, "", "TensorDictRecorder"], [329, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[330, 2, 1, "", "Logger"], [332, 2, 1, "", "generate_exp_name"], [333, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[331, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[334, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[335, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[336, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[337, 0, 1, "", "BatchSubSampler"], [338, 0, 1, "", "ClearCudaCache"], [339, 0, 1, "", "CountFramesLog"], [340, 0, 1, "", "LogReward"], [341, 0, 1, "", "OptimizerHook"], [342, 0, 1, "", "Recorder"], [343, 0, 1, "", "ReplayBufferTrainer"], [344, 0, 1, "", "RewardNormalizer"], [345, 0, 1, "", "SelectKeys"], [346, 0, 1, "", "Trainer"], [347, 0, 1, "", "TrainerHookBase"], [348, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[337, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[338, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[339, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[340, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[341, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[342, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[343, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[344, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[345, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[347, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[348, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[349, 2, 1, "", "correct_for_frame_skip"], [350, 2, 1, "", "get_stats_random_rollout"], [351, 2, 1, "", "make_collector_offpolicy"], [352, 2, 1, "", "make_collector_onpolicy"], [353, 2, 1, "", "make_dqn_loss"], [354, 2, 1, "", "make_replay_buffer"], [355, 2, 1, "", "make_target_updater"], [356, 2, 1, "", "make_trainer"], [357, 2, 1, "", "parallel_env_constructor"], [358, 2, 1, "", "sync_async_collector"], [359, 2, 1, "", "sync_sync_collector"], [360, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 364, 365, 366, 367, 369, 370, 371, 374, 381, 382, 383, 387, 388], "instal": [0, 6, 7, 387], "get": [0, 373, 374, 375, 376, 377, 378], "start": [0, 373, 374, 375, 376, 377, 378], "tutori": [0, 371, 381, 382], "basic": [0, 385], "intermedi": [0, 8], "advanc": 0, "refer": [0, 362], "knowledg": [0, 363], "base": [0, 2, 7, 363], "indic": 0, "tabl": 0, "collector": [1, 369, 370, 371, 372, 376, 378, 381, 382, 387], "packag": [1, 2, 3, 364, 365, 366, 367], "batch": [1, 369, 383, 385], "size": [1, 369, 385], "replai": [1, 2, 369, 370, 371, 372, 376, 378, 381, 382, 385, 387], "buffer": [1, 2, 369, 370, 371, 372, 376, 378, 381, 382, 385, 387], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 369, 370, 371, 376, 378, 381, 382, 387], "distribut": [1, 364], "helper": [1, 3], "function": [1, 4, 365, 370, 371, 375, 381, 382, 387], "compos": [2, 148], "support": 2, "type": 2, "choos": 2, "storag": [2, 89, 369, 376, 385], "sampl": [2, 385], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 370, 385], "trajectori": [2, 385], "checkpoint": [2, 366], "episod": [2, 4], "format": 2, "ted": [2, 373], "The": [2, 369], "rational": 2, "behind": 2, "structur": [2, 385], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 364, 385, 387], "special": [2, 374, 387], "case": 2, "footnot": 2, "multi": [2, 3, 364, 365, 380, 381, 382], "agent": [2, 3, 4, 364, 365, 381, 382], "present": 2, "polici": [2, 4, 369, 371, 372, 374, 378, 380, 381, 382, 383], "rnn": 2, "transform": [2, 3, 183, 369, 371, 373, 381, 382, 383, 385, 387, 388], "step": [2, 369, 371, 373, 376, 381, 382, 385, 388], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 53], "reinforc": [2, 365, 371, 381, 382], "learn": [2, 4, 371, 381, 382], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 364, 365, 366, 381], "env": [3, 383, 387, 388], "vector": [3, 387], "environ": [3, 4, 6, 7, 369, 370, 371, 372, 373, 378, 380, 381, 382, 383, 387, 388], "auto": 3, "reset": [3, 383, 388], "dynam": [3, 4, 385], "spec": [3, 383, 388], "clone": [3, 7], "mask": 3, "action": [3, 4, 372, 383], "record": [3, 342, 366, 369, 377], "video": [3, 11, 377], "domain": [3, 364], "specif": [3, 364, 380], "librari": [3, 387], "thing": [4, 369, 383], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 373, 375, 387], "gener": [4, 11, 364], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 369, 378, 383], "algorithm": [4, 364], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 369, 370, 375, 378], "return": [4, 365], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 387], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 380], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 369, 370, 371], "standard": 4, "explor": [4, 364, 369, 370, 374], "valu": [4, 364, 365, 369, 371, 372, 374], "loss": [4, 369, 370, 371, 372, 378, 381, 382], "earli": 4, "train": [4, 8, 365, 369, 371, 372, 375, 378, 381, 382, 383], "roughli": 4, "uniformli": 4, "random": [4, 381, 382], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 370], "increas": 4, "an": [4, 371, 372, 373, 383], "can": 4, "low": 4, "forward": [4, 369], "model": [4, 364, 369, 370, 372, 375, 384, 387], "also": 4, "us": [4, 6, 9, 372, 384, 385, 387], "offlin": 4, "observ": [4, 369], "space": 4, "effect": [4, 383], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 388], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 369], "render": [7, 11, 378, 381, 382, 388], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 369], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 383], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "custom": [11, 383, 385], "exampl": [11, 370, 385], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binarydiscretetensorspec": 25, "boundedtensorspec": 26, "compositespec": 27, "constantklcontrol": 28, "discretetensorspec": 29, "flat2t": 30, "h5combin": 31, "h5split": 32, "lazystackedcompositespec": 33, "lazystackedtensorspec": 34, "multidiscretetensorspec": 35, "multionehotdiscretetensorspec": 36, "multistep": 37, "nested2t": 38, "nontensorspec": 39, "onehotdiscretetensorspec": 40, "pairwisedataset": 41, "prioritizedreplaybuff": 42, "promptdata": 43, "prompttensordicttoken": 44, "replaybuff": 45, "rewarddata": 46, "rolloutfrommodel": 47, "ted2flat": 48, "ted2nest": 49, "tensordictprioritizedreplaybuff": 50, "tensordictreplaybuff": 51, "tensordicttoken": 52, "tokenizeddatasetload": 54, "unboundedcontinuoustensorspec": 55, "unboundeddiscretetensorspec": 56, "check_no_exclusive_kei": 57, "consolidate_spec": 58, "contains_lazy_spec": 59, "create_infinite_iter": 60, "ataridqnexperiencereplai": 61, "basedatasetexperiencereplai": 62, "d4rlexperiencereplai": 63, "gendgrlexperiencereplai": 64, "minariexperiencereplai": 65, "openmlexperiencereplai": 66, "openxexperiencereplai": 67, "robosetexperiencereplai": 68, "vd4rlexperiencereplai": 69, "get_dataload": 70, "flatstoragecheckpoint": 71, "h5storagecheckpoint": 72, "immutabledatasetwrit": 73, "lazymemmapstorag": 74, "lazytensorstorag": 75, "liststorag": 76, "liststoragecheckpoint": 77, "nestedstoragecheckpoint": 78, "prioritizedsampl": 79, "prioritizedslicesampl": 80, "randomsampl": 81, "replaybufferensembl": 82, "roundrobinwrit": 83, "sampler": 84, "samplerensembl": 85, "samplerwithoutreplac": 86, "slicesampl": 87, "slicesamplerwithoutreplac": 88, "storagecheckpointerbas": 90, "storageensembl": 91, "storageensemblecheckpoint": 92, "tensordictmaxvaluewrit": 93, "tensordictroundrobinwrit": 94, "tensorstorag": 95, "tensorstoragecheckpoint": 96, "writer": 97, "writerensembl": 98, "braxenv": 99, "braxwrapp": 100, "dmcontrolenv": 101, "dmcontrolwrapp": 102, "envbas": [103, 383], "envcreat": 104, "envmetadata": 105, "gymenv": 106, "gymlikeenv": 107, "gymwrapp": 108, "habitatenv": 109, "isaacgymenv": 110, "isaacgymwrapp": 111, "jumanjienv": 112, "jumanjiwrapp": 113, "mogymenv": 114, "mogymwrapp": 115, "marlgroupmaptyp": 116, "meltingpotenv": 117, "meltingpotwrapp": 118, "modelbasedenvbas": 119, "multithreadedenv": 120, "multithreadedenvwrapp": 121, "openmlenv": 122, "parallelenv": 123, "pettingzooenv": 124, "pettingzoowrapp": 125, "robohiveenv": 126, "smacv2env": 127, "smacv2wrapp": 128, "serialenv": 129, "vmasenv": 130, "vmaswrapp": 131, "check_marl_group": 132, "gym_backend": 133, "dreamerdecod": 134, "dreamerenv": 135, "set_gym_backend": 136, "actiondiscret": 137, "actionmask": 138, "autoresetenv": 139, "autoresettransform": 140, "batchsizetransform": 141, "binarizereward": 142, "burnintransform": 143, "catfram": [144, 385], "cattensor": 145, "centercrop": 146, "cliptransform": 147, "dtypecasttransform": 149, "devicecasttransform": 150, "discreteactionproject": 151, "doubletofloat": 152, "endoflifetransform": 153, "excludetransform": 154, "finitetensordictcheck": 155, "flattenobserv": 156, "frameskiptransform": 157, "grayscal": 158, "inittrack": 159, "klrewardtransform": 160, "noopresetenv": 161, "observationnorm": 162, "observationtransform": 163, "permutetransform": 164, "pinmemorytransform": 165, "r3mtransform": 166, "randomcroptensordict": 167, "removeemptyspec": 168, "renametransform": 169, "resiz": 170, "reward2gotransform": 171, "rewardclip": 172, "rewardsc": 173, "rewardsum": 174, "selecttransform": 175, "signtransform": 176, "squeezetransform": 177, "stepcount": 178, "targetreturn": 179, "tensordictprim": 180, "timemaxpool": 181, "totensorimag": 182, "transformedenv": 184, "unsqueezetransform": 185, "vc1transform": 186, "viprewardtransform": 187, "viptransform": 188, "vecgymenvtransform": 189, "vecnorm": [190, 388], "gsdenois": 191, "multisteptransform": 192, "randompolici": 193, "check_env_spec": 194, "exploration_mod": 195, "exploration_typ": 196, "get_available_librari": 197, "make_composite_from_td": 198, "set_exploration_mod": 199, "set_exploration_typ": 200, "step_mdp": 201, "terminated_or_trunc": 202, "cemplann": 203, "conv3dnet": 204, "convnet": 205, "dtactor": 206, "ddpgcnnactor": 207, "ddpgcnnqnet": 208, "ddpgmlpactor": 209, "ddpgmlpqnet": 210, "decisiontransform": 211, "delta": 212, "distributionaldqnnet": 213, "distributionalqvaluehook": 214, "dreameractor": 215, "duelingcnndqnet": 216, "gru": 217, "grucel": 218, "grumodul": 219, "independentnorm": 220, "lstm": [221, 372], "lstmcell": 222, "lstmmodul": 223, "mlp": [224, 372], "mpcplannerbas": 225, "mppiplann": 226, "maskedcategor": 227, "maskedonehotcategor": 228, "multiagentconvnet": 229, "multiagentmlp": 230, "noisylazylinear": 231, "noisylinear": 232, "normalparamwrapp": 233, "obsdecod": 234, "obsencod": 235, "onehotcategor": 236, "onlinedtactor": 237, "qmixer": [238, 365], "qvaluehook": 239, "rssmposterior": 240, "rssmprior": 241, "squeeze2dlay": 242, "squeezelay": 243, "tanhdelta": 244, "tanhnorm": 245, "truncatednorm": 246, "vdnmixer": 247, "vmapmodul": 248, "reset_nois": 249, "actor": [250, 364, 369, 374], "actorcriticoper": 251, "actorcriticwrapp": 252, "actorvalueoper": 253, "additivegaussianwrapp": 254, "decisiontransformerinferencewrapp": 255, "distributionalqvalueactor": 256, "distributionalqvaluemodul": 257, "egreedymodul": 258, "egreedywrapp": 259, "lmheadactorvalueoper": 260, "multistepactorwrapp": 261, "ornsteinuhlenbeckprocesswrapp": 262, "probabilisticactor": 263, "qvalueactor": 264, "qvaluemodul": 265, "safemodul": [266, 364], "safeprobabilisticmodul": 267, "safeprobabilistictensordictsequenti": 268, "safesequenti": 269, "tanhmodul": 270, "valueoper": 271, "worldmodelwrapp": 272, "biased_softplu": 273, "get_primers_from_modul": 274, "inv_softplu": 275, "map": [276, 381], "a2closs": 277, "cqlloss": 278, "clipppoloss": 279, "ddpgloss": 280, "dqnloss": 281, "dtloss": 282, "discretecqlloss": 283, "discreteiqlloss": 284, "discretesacloss": 285, "distributionaldqnloss": 286, "dreameractorloss": 287, "dreamermodelloss": 288, "dreamervalueloss": 289, "hardupd": 290, "iqlloss": 291, "klpenppoloss": 292, "lossmodul": [293, 369, 375], "onlinedtloss": 294, "ppoloss": 295, "redqloss": 296, "reinforceloss": 297, "sacloss": 298, "softupd": 299, "td3bcloss": 300, "td3loss": 301, "valueestim": 302, "default_value_kwarg": 303, "distance_loss": 304, "hold_out_net": 305, "hold_out_param": 306, "qmixerloss": 307, "next_state_valu": 308, "gae": 309, "td0estim": 310, "td1estim": 311, "tdlambdaestim": 312, "valueestimatorbas": 313, "generalized_advantage_estim": 314, "reward2go": 315, "td0_advantage_estim": 316, "td0_return_estim": 317, "td1_advantage_estim": 318, "td1_return_estim": 319, "td_lambda_advantage_estim": 320, "td_lambda_return_estim": 321, "vec_generalized_advantage_estim": 322, "vec_td1_advantage_estim": 323, "vec_td1_return_estim": 324, "vec_td_lambda_advantage_estim": 325, "vec_td_lambda_return_estim": 326, "pixelrendertransform": 327, "tensordictrecord": 328, "videorecord": 329, "logger": [330, 366, 377, 378], "csvlogger": 331, "generate_exp_nam": 332, "get_logg": 333, "mlflowlogg": 334, "tensorboardlogg": 335, "wandblogg": 336, "batchsubsampl": 337, "clearcudacach": 338, "countframeslog": 339, "logreward": 340, "optimizerhook": 341, "replaybuffertrain": 343, "rewardnorm": 344, "selectkei": 345, "trainer": [346, 366, 370], "trainerhookbas": 347, "updateweight": 348, "correct_for_frame_skip": 349, "get_stats_random_rollout": 350, "make_collector_offpolici": 351, "make_collector_onpolici": 352, "make_dqn_loss": 353, "make_replay_buff": 354, "make_target_updat": 355, "make_train": 356, "parallel_env_constructor": 357, "sync_async_collector": 358, "sync_sync_collector": 359, "transformed_env_constructor": 360, "readm": [361, 379], "tuto": [361, 379], "api": 362, "contribut": [363, 387], "content": 363, "modul": [364, 369, 372, 374, 378, 387], "tensordictmodul": [364, 374, 387], "wrapper": [364, 374], "probabilist": [364, 374], "q": [364, 370, 372, 374], "oper": 364, "join": 364, "hook": [364, 366, 370], "regular": 364, "planner": 364, "object": [365, 369, 375, 387], "dqn": [365, 370, 372], "ddpg": [365, 369, 381], "sac": 365, "redq": 365, "crossq": 365, "iql": 365, "cql": 365, "dt": 365, "td3": 365, "bc": 365, "ppo": [365, 371, 382], "a2c": 365, "dreamer": 365, "builder": 366, "_util": 367, "comput": [368, 370, 383, 386], "time": [368, 369, 386], "code": [369, 383], "overview": [369, 372], "setup": [369, 372], "__init__": 369, "method": 369, "estim": 369, "put": 369, "togeth": [369, 383], "call": 369, "parallel": [369, 380, 388], "execut": [369, 380, 383], "stat": 369, "build": [369, 370, 378, 385], "evalu": 369, "construct": 369, "target": [369, 370, 375], "network": [369, 370, 371, 372, 374, 381, 382], "updat": 369, "experi": [369, 383], "result": [369, 371, 381, 382], "conclus": [369, 370, 371, 372, 381, 382, 383, 385], "next": [369, 371, 373, 376, 381, 382, 385], "A": [370, 385], "deep": 370, "collect": [370, 371, 376], "paramet": [370, 371, 375], "hyperparamet": [370, 371, 381, 382], "regist": 370, "possibl": 370, "improv": 370, "defin": [371, 381, 382], "loop": [371, 372, 378, 381, 382, 383], "recurr": 372, "convolut": 372, "select": 372, "further": [372, 375], "read": 372, "creat": 373, "run": [373, 388], "rollout": [373, 380, 381, 382, 383, 388], "s": [374, 375], "output": 375, "consider": 375, "log": 377, "own": 378, "first": 378, "design": 378, "divers": 380, "competit": 381, "group": 381, "critic": [381, 382], "pendulum": 383, "write": 383, "_step": 383, "simul": 383, "_reset": 383, "metadata": 383, "_spec": 383, "shape": 383, "seed": [383, 388], "wrap": 383, "class": [383, 387], "test": 383, "our": 383, "simpl": 383, "pretrain": 384, "vanilla": 385, "integr": 385, "tensorclass": 385, "other": 385, "tensor": 385, "pytre": 385, "iter": 385, "over": 385, "fix": 385, "priorit": 385, "save": 385, "raw": 385, "imag": 385, "more": 385, "complex": 385, "introduct": 387, "config": 387, "sequenc": 387, "program": 387, "ensembl": 387, "meta": 387, "state": 387, "frame_skip": 388, "deepmind": 388, "control": 388, "devic": 388, "close": 388, "access": 388, "attribut": 388, "kwarg": 388}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})