Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 99, 101, 102, 104, 106, 108, 110, 112, 113, 114, 116, 117, 120, 121, 122, 123, 125, 126, 127, 128, 138, 139, 141, 144, 145, 146, 147, 148, 151, 152, 153, 157, 162, 163, 165, 166, 168, 169, 171, 175, 177, 178, 181, 187, 188, 192, 193, 194, 195, 197, 205, 206, 207, 208, 209, 210, 212, 215, 216, 218, 220, 228, 229, 232, 233, 235, 236, 237, 238, 245, 247, 249, 251, 253, 254, 255, 259, 260, 262, 271, 272, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 303, 307, 308, 309, 310, 311, 313, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 342, 343, 344, 345, 346, 360, 362, 365, 369, 374, 375, 379, 380, 383, 390, 391, 392, 393, 396, 397, 398, 402, 403, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421], "open": [0, 5, 7, 12, 50, 52, 57, 86, 93, 403, 414, 415, 420], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "reinforc": [0, 3, 9, 83, 136, 137, 169, 235, 236, 237, 238, 242, 271, 272, 291, 308, 309, 311, 314, 315, 316, 318, 323, 324, 330, 331, 332, 333, 395, 401, 403, 406, 407, 412, 416, 419, 420], "learn": [0, 3, 7, 8, 9, 18, 45, 83, 84, 85, 87, 88, 122, 136, 137, 141, 144, 151, 169, 235, 236, 237, 238, 242, 256, 263, 270, 271, 272, 291, 308, 309, 311, 314, 315, 316, 318, 322, 323, 324, 329, 330, 331, 332, 333, 395, 397, 398, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 420, 421], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 80, 138, 205, 263, 285, 294, 302, 308, 310, 325, 326, 328, 330, 370, 394, 396, 397, 398, 399, 402, 403, 404, 409, 412, 414, 415, 417, 418, 421], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 53, 67, 120, 121, 130, 139, 222, 395, 396, 397, 400, 402, 403, 404, 406, 407, 409, 414, 415, 416, 421], "pytorch": [0, 1, 2, 3, 23, 84, 155, 156, 208, 220, 247, 251, 262, 263, 379, 394, 396, 397, 399, 402, 404, 405, 408, 412, 414, 415, 416, 417, 418, 420, 421], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 45, 54, 55, 59, 64, 67, 83, 122, 126, 130, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 161, 216, 218, 251, 270, 369, 396, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 101, 105, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 135, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 161, 162, 163, 165, 166, 168, 169, 172, 173, 175, 177, 178, 179, 187, 188, 192, 193, 197, 200, 204, 205, 206, 209, 210, 212, 214, 216, 218, 220, 226, 228, 230, 231, 232, 233, 235, 245, 246, 247, 249, 250, 251, 253, 255, 256, 259, 260, 261, 263, 264, 281, 283, 285, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 360, 362, 369, 375, 391, 392, 393, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "directli": [0, 3, 4, 8, 23, 80, 101, 118, 119, 122, 125, 126, 138, 144, 145, 151, 152, 188, 197, 215, 326, 333, 393, 397, 403, 404, 406, 414, 415, 416, 418], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 110, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 165, 166, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 218, 219, 223, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 267, 269, 270, 271, 272, 273, 274, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 333, 334, 336, 340, 341, 342, 343, 344, 345, 348, 360, 361, 362, 370, 376, 379, 382, 383, 387, 389, 390, 393, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "pypi": [0, 2, 420], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 106, 122, 126, 129, 132, 136, 137, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 173, 192, 206, 208, 209, 210, 212, 214, 216, 217, 218, 231, 232, 233, 247, 249, 250, 251, 253, 254, 260, 261, 262, 270, 273, 281, 282, 286, 288, 294, 297, 298, 311, 322, 326, 333, 362, 369, 376, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 418, 421], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 112, 122, 125, 126, 127, 129, 130, 132, 136, 137, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 208, 212, 217, 218, 227, 228, 229, 231, 242, 251, 254, 262, 264, 285, 290, 291, 297, 302, 308, 318, 326, 328, 342, 347, 355, 369, 374, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 421], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 67, 84, 87, 88, 122, 144, 151, 398, 402, 403, 404, 406, 407, 408, 409, 410, 411, 414, 415, 416, 418, 420, 421], "instruct": [0, 6, 7, 10, 22, 82, 177, 179, 402, 403, 404, 405, 414, 415, 418], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 56, 65, 66, 101, 144, 151, 286, 287, 288, 397, 402, 406, 408, 409, 411, 413, 415], "section": [0, 2, 3, 4, 24, 247, 251, 403, 406, 411, 414, 415], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 56, 59, 64, 71, 89, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 232, 233, 247, 250, 251, 254, 260, 281, 294, 297, 376, 402, 403, 404, 405, 406, 414, 416], "pip": [0, 10, 85, 406, 407, 408, 409, 410, 411, 415, 420, 421], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 38, 41, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 99, 100, 101, 104, 106, 107, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 162, 166, 168, 169, 170, 171, 172, 174, 175, 178, 182, 187, 188, 190, 192, 193, 196, 197, 200, 201, 205, 206, 207, 210, 211, 212, 214, 215, 216, 218, 226, 228, 232, 233, 239, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 272, 283, 285, 291, 293, 294, 295, 296, 301, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 366, 370, 376, 383, 389, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 59, 64, 140, 153, 154, 161, 247, 248, 249, 251, 252, 253, 257, 258, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 41, 42, 43, 44, 54, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 106, 107, 112, 114, 122, 125, 126, 127, 132, 144, 145, 151, 152, 165, 166, 169, 170, 182, 188, 192, 193, 208, 210, 212, 233, 247, 249, 251, 253, 254, 260, 262, 266, 285, 289, 290, 291, 294, 295, 297, 298, 310, 320, 325, 326, 328, 361, 362, 378, 397, 401, 402, 403, 404, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "low": [0, 3, 28, 31, 55, 64, 69, 71, 99, 122, 126, 144, 145, 151, 152, 162, 172, 177, 223, 279, 280, 281, 289, 291, 294, 301, 402, 403, 404, 405, 414, 415, 416, 420, 421], "high": [0, 3, 9, 28, 31, 50, 52, 57, 65, 71, 99, 122, 126, 144, 145, 151, 152, 162, 172, 177, 187, 223, 279, 280, 281, 289, 291, 294, 301, 342, 347, 355, 402, 403, 404, 405, 414, 415, 416, 418, 420, 421], "level": [0, 2, 3, 4, 22, 31, 32, 39, 51, 56, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 125, 127, 169, 204, 325, 402, 403, 409, 420], "abstract": [0, 3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 47, 48, 60, 61, 68, 69, 71, 72, 73, 74, 75, 80, 81, 85, 116, 122, 189, 255, 346, 371, 380, 399, 404, 416, 420], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 101, 104, 105, 107, 108, 110, 112, 114, 122, 123, 125, 126, 127, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 164, 165, 166, 168, 169, 172, 173, 175, 176, 177, 178, 179, 181, 182, 186, 187, 190, 192, 197, 200, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 223, 225, 226, 230, 238, 240, 245, 247, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 263, 267, 272, 273, 276, 289, 290, 293, 294, 295, 297, 298, 299, 300, 301, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 337, 340, 341, 342, 343, 344, 345, 346, 360, 369, 376, 389, 393, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 70, 71, 72, 73, 74, 75, 168, 177, 283, 326, 397, 420], "effici": [0, 1, 2, 4, 8, 247, 263, 311, 397, 402, 403, 404, 405, 408, 409, 411, 413, 414, 415, 417, 418, 420], "modular": [0, 80, 300, 418, 420], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 45, 54, 55, 59, 64, 86, 122, 126, 142, 143, 144, 145, 151, 152, 153, 154, 210, 218, 394, 403, 405, 406, 409, 412, 420], "properli": [0, 1, 71, 122, 126, 144, 145, 151, 152, 225, 249, 253, 404, 410, 414, 415, 416, 420], "test": [0, 3, 5, 118, 119, 131, 132, 136, 137, 212, 220, 249, 253, 375, 389, 404, 405, 420], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 98, 99, 101, 104, 106, 107, 108, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 156, 162, 165, 166, 168, 169, 173, 175, 178, 179, 180, 188, 190, 192, 197, 199, 200, 201, 204, 205, 206, 209, 210, 212, 214, 215, 216, 218, 220, 225, 226, 227, 229, 230, 235, 236, 237, 238, 239, 242, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 263, 264, 268, 270, 271, 272, 274, 275, 276, 285, 286, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 348, 360, 362, 364, 367, 368, 369, 370, 374, 389, 391, 392, 395, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 420, 421], "code": [0, 3, 5, 7, 8, 14, 15, 55, 59, 86, 122, 126, 144, 145, 151, 152, 192, 210, 212, 229, 247, 248, 249, 251, 252, 253, 294, 300, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421], "aim": [0, 2, 3, 7, 60, 61, 192, 212, 214, 254, 382, 396, 397, 398, 402, 403, 420], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 54, 57, 64, 85, 88, 89, 93, 94, 108, 110, 114, 115, 117, 118, 119, 125, 127, 131, 139, 141, 144, 146, 148, 166, 169, 179, 188, 206, 207, 209, 222, 242, 268, 270, 280, 283, 290, 291, 294, 297, 300, 318, 326, 342, 343, 344, 345, 367, 395, 397, 399, 404, 405, 406, 407, 415, 416, 418, 420], "research": [0, 7, 9, 136, 137, 229, 420], "most": [0, 1, 2, 3, 7, 8, 14, 15, 45, 106, 107, 122, 126, 144, 145, 151, 152, 177, 215, 220, 402, 404, 406, 407, 408, 409, 410, 411, 416, 420, 421], "written": [0, 1, 2, 3, 12, 35, 50, 51, 52, 54, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 99, 101, 106, 107, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 162, 169, 179, 186, 200, 204, 207, 215, 218, 225, 226, 231, 271, 272, 285, 294, 297, 298, 302, 308, 310, 325, 328, 330, 341, 360, 361, 362, 397, 398, 399, 402, 405, 407, 413, 416, 420], "highli": [0, 2, 406, 420, 421], "wai": [0, 1, 2, 3, 4, 80, 84, 101, 112, 130, 192, 195, 214, 215, 249, 251, 253, 328, 342, 343, 344, 345, 397, 402, 403, 404, 406, 408, 409, 413, 414, 415, 416, 417, 418, 420, 421], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 398, 402, 403, 404, 406, 407, 408, 411, 414, 415, 420, 421], "swap": [0, 1, 3, 125, 215, 404, 417, 420], "compon": [0, 1, 2, 3, 51, 55, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 242, 274, 290, 291, 296, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 374, 379, 402, 403, 404, 405, 407, 408, 411, 413, 414, 415, 416, 417, 420], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 51, 53, 56, 58, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 110, 115, 122, 123, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 231, 234, 235, 239, 242, 243, 249, 253, 269, 273, 274, 280, 282, 289, 292, 293, 301, 304, 305, 307, 314, 327, 360, 362, 376, 393, 395, 401, 403, 405, 407, 409, 410, 411, 412, 417, 419], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 51, 53, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 117, 122, 123, 126, 130, 135, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 175, 178, 206, 210, 216, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 282, 283, 289, 291, 293, 296, 301, 304, 325, 362, 402, 403, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "write": [0, 2, 3, 8, 23, 45, 50, 51, 52, 53, 56, 57, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 110, 117, 122, 126, 172, 190, 191, 200, 202, 204, 208, 211, 226, 285, 297, 298, 300, 302, 311, 312, 313, 315, 316, 317, 324, 329, 331, 333, 334, 341, 346, 362, 397, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 105, 122, 126, 139, 144, 145, 149, 150, 151, 152, 166, 200, 209, 216, 218, 225, 226, 247, 249, 253, 271, 272, 297, 298, 303, 308, 309, 310, 313, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 369, 398, 402, 404, 405, 406, 408, 414, 415, 416, 420, 421], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 170, 173, 175, 176, 178, 188, 192, 197, 206, 209, 210, 212, 214, 218, 219, 257, 258, 270, 283, 297, 308, 309, 311, 312, 324, 328, 329, 331, 333, 334, 348, 402, 404, 414, 415, 416, 418, 420, 421], "littl": [0, 1, 3, 67, 122, 126, 144, 145, 151, 152, 210, 308, 310, 325, 328, 330, 404, 405, 409, 418, 420, 421], "effort": [0, 3, 416, 418, 420], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 112, 114, 115, 117, 118, 119, 122, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 141, 144, 145, 146, 147, 151, 152, 153, 155, 156, 161, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 192, 193, 194, 195, 197, 200, 201, 202, 204, 206, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 278, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 340, 342, 343, 344, 345, 346, 360, 361, 369, 370, 372, 375, 376, 379, 381, 382, 383, 389, 393, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "repo": [0, 6, 82, 169, 207, 212, 396, 415, 420], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 106, 107, 120, 121, 125, 127, 128, 148, 228, 246, 272, 313, 316, 324, 340, 408, 420], "align": [0, 247, 251, 420], "exist": [0, 2, 3, 4, 12, 18, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 93, 122, 126, 144, 145, 151, 152, 170, 176, 210, 218, 311, 331, 383, 393, 414, 415, 420, 421], "ecosystem": [0, 409, 420], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 86, 93, 94, 101, 104, 106, 112, 114, 122, 123, 126, 130, 136, 137, 144, 145, 151, 152, 155, 156, 166, 169, 204, 205, 206, 207, 210, 218, 227, 228, 246, 247, 249, 251, 253, 259, 261, 272, 280, 291, 293, 298, 308, 311, 325, 326, 328, 330, 362, 402, 403, 404, 405, 406, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "dataset": [0, 37, 50, 51, 52, 53, 56, 57, 58, 63, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 99, 101, 104, 106, 107, 141, 216, 362, 395, 402, 403, 406, 417, 418, 420, 421], "pillar": [0, 420], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 55, 59, 60, 61, 69, 71, 72, 73, 74, 75, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 165, 166, 168, 169, 170, 175, 176, 177, 178, 183, 187, 188, 192, 193, 194, 197, 200, 204, 205, 206, 207, 209, 210, 212, 215, 216, 220, 228, 230, 231, 249, 253, 255, 256, 272, 293, 315, 319, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 370, 372, 375, 382, 383, 384, 385, 389, 390, 391, 392, 393, 395, 396, 397, 401, 407, 408, 409, 410, 412, 417, 418, 419], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 70, 122, 126, 138, 144, 145, 151, 152, 175, 192, 206, 212, 214, 217, 218, 232, 233, 234, 239, 241, 249, 253, 254, 255, 256, 260, 261, 269, 273, 282, 286, 287, 288, 292, 297, 303, 305, 308, 309, 310, 311, 313, 314, 315, 316, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 340, 379, 384, 385, 386, 395, 396, 398, 399, 401, 404, 406, 409, 412, 414, 415, 416, 418, 419, 421], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 163, 166, 168, 169, 175, 176, 178, 180, 186, 188, 194, 197, 204, 210, 215, 218, 219, 220, 223, 226, 230, 242, 245, 246, 249, 253, 256, 259, 260, 271, 272, 274, 283, 285, 290, 293, 294, 295, 297, 300, 301, 302, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 360, 362, 369, 370, 376, 379, 381, 384, 389, 391, 392, 393, 395, 397, 398, 399, 401, 405, 406, 407, 408, 412, 416, 417, 418, 419, 421], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 45, 54, 55, 56, 58, 59, 64, 118, 119, 122, 126, 131, 132, 137, 144, 145, 146, 147, 151, 152, 157, 169, 192, 197, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 239, 247, 249, 251, 253, 304, 305, 306, 307, 326, 389, 395, 400, 402, 404, 407, 408, 409, 415, 416, 418, 420, 421], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 93, 94, 98, 99, 112, 114, 122, 123, 126, 144, 145, 151, 152, 155, 166, 168, 170, 173, 174, 182, 188, 192, 200, 206, 209, 210, 212, 214, 218, 220, 247, 249, 250, 251, 253, 256, 260, 264, 274, 280, 281, 289, 291, 293, 294, 296, 297, 298, 308, 310, 311, 312, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 341, 342, 343, 344, 345, 360, 370, 382, 392, 397, 403, 404, 407, 408, 410, 414, 415, 417, 418, 420, 421], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 112, 122, 123, 126, 144, 145, 151, 152, 155, 166, 168, 170, 173, 182, 188, 192, 200, 206, 209, 210, 212, 214, 218, 220, 247, 249, 250, 251, 252, 253, 256, 260, 280, 281, 289, 294, 297, 298, 311, 331, 341, 351, 352, 353, 354, 356, 357, 358, 359, 360, 392, 397, 403, 404, 407, 410, 414, 415, 416, 417, 418, 420, 421], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 45, 58, 62, 80, 86, 122, 126, 144, 145, 151, 152, 166, 169, 197, 204, 218, 219, 249, 253, 271, 272, 376, 379, 381, 384, 385, 389, 391, 392, 395, 398, 399, 418, 421], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 98, 99, 101, 102, 104, 106, 107, 108, 113, 116, 117, 122, 126, 138, 144, 145, 151, 152, 162, 173, 175, 178, 192, 206, 209, 210, 212, 214, 215, 216, 218, 225, 226, 230, 232, 233, 247, 248, 251, 252, 254, 256, 259, 260, 285, 290, 291, 294, 296, 297, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 348, 366, 370, 382, 389, 390, 391, 392, 393, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 420, 421], "etc": [0, 2, 3, 7, 8, 12, 27, 38, 45, 54, 55, 59, 64, 69, 86, 122, 126, 144, 145, 151, 152, 186, 210, 218, 254, 260, 280, 403, 404, 409, 418, 420, 421], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 108, 122, 126, 144, 145, 146, 147, 151, 152, 162, 165, 169, 175, 178, 179, 186, 187, 188, 204, 209, 210, 216, 218, 220, 226, 232, 233, 254, 259, 260, 261, 283, 293, 299, 300, 308, 310, 325, 328, 330, 333, 337, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 370, 379, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "few": [0, 2, 8, 126, 362, 370, 404, 405, 407, 414, 415, 418, 420, 421], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 50, 52, 71, 125, 127, 128, 148, 155, 156, 175, 178, 302, 328, 397, 402, 404, 405, 414, 415, 416, 420, 421], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 54, 55, 59, 60, 64, 83, 86, 88, 99, 106, 112, 122, 126, 144, 145, 151, 152, 162, 173, 192, 206, 209, 210, 212, 214, 218, 232, 233, 247, 248, 251, 252, 297, 360, 375, 379, 397, 402, 404, 405, 407, 409, 410, 414, 415, 416, 418, 420, 421], "standard": [0, 3, 188, 199, 216, 227, 228, 229, 230, 243, 256, 262, 263, 269, 289, 333, 334, 342, 343, 344, 345, 402, 403, 406, 407, 415, 418, 420], "numpi": [0, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 127, 144, 145, 151, 152, 208, 379, 416, 418, 420, 421], "common": [0, 2, 3, 4, 21, 69, 126, 131, 163, 286, 287, 288, 292, 308, 309, 310, 311, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 389, 396, 397, 399, 402, 404, 407, 410, 413, 414, 415, 416, 417, 420, 421], "openai": [0, 7, 24, 125, 127, 148, 404, 416, 420, 421], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 122, 123, 125, 126, 127, 128, 130, 136, 137, 139, 140, 144, 145, 148, 151, 152, 155, 156, 158, 161, 165, 169, 172, 179, 185, 186, 188, 190, 195, 197, 200, 206, 209, 215, 216, 218, 389, 396, 402, 403, 404, 405, 406, 410, 411, 416, 417, 418, 420], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 99, 101, 106, 107, 114, 120, 121, 122, 125, 126, 127, 128, 130, 132, 139, 140, 144, 145, 146, 147, 148, 151, 152, 162, 165, 169, 170, 172, 173, 175, 177, 178, 182, 188, 192, 193, 197, 204, 205, 206, 207, 209, 210, 212, 214, 216, 218, 251, 253, 259, 260, 285, 289, 290, 294, 295, 297, 298, 299, 300, 308, 310, 311, 312, 316, 317, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 362, 369, 383, 398, 399, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 420, 421], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 279, 280, 281, 283, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 367, 369, 370, 372, 373, 374, 375, 376, 377, 379, 383, 384, 385, 386, 388, 389, 391, 392, 393, 397, 405, 406, 409, 414, 415, 416, 418, 420], "On": [0, 3, 7, 18, 19, 20, 21, 31, 83, 248, 252, 397, 403, 414, 415], "end": [0, 2, 3, 14, 15, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 101, 105, 106, 107, 122, 126, 144, 145, 151, 152, 179, 190, 204, 205, 210, 218, 232, 233, 247, 248, 251, 252, 255, 293, 311, 331, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "come": [0, 1, 2, 3, 8, 45, 112, 122, 126, 135, 144, 145, 151, 152, 175, 178, 285, 286, 287, 288, 294, 302, 308, 310, 325, 328, 330, 362, 402, 403, 404, 405, 408, 409, 410, 411, 414, 415, 418, 420, 421], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 105, 108, 114, 122, 124, 126, 127, 136, 137, 138, 144, 145, 146, 147, 151, 152, 155, 156, 161, 163, 165, 166, 169, 170, 173, 175, 178, 185, 186, 192, 197, 204, 205, 206, 207, 209, 210, 212, 214, 216, 218, 220, 224, 226, 228, 247, 249, 251, 253, 255, 259, 260, 268, 270, 280, 289, 297, 310, 311, 317, 322, 326, 328, 331, 346, 370, 375, 376, 385, 393, 396, 397, 398, 400, 402, 403, 404, 405, 407, 408, 409, 413, 414, 415, 416, 417, 418, 420, 421], "re": [0, 2, 3, 8, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 122, 126, 144, 145, 151, 152, 218, 253, 257, 258, 261, 294, 298, 369, 399, 402, 404, 405, 406, 408, 413, 414, 416, 420, 421], "usabl": [0, 399, 405, 420], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 122, 123, 126, 127, 144, 145, 151, 152, 161, 165, 166, 175, 178, 210, 216, 218, 220, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 265, 266, 267, 269, 271, 272, 275, 276, 278, 281, 283, 286, 287, 288, 289, 291, 293, 294, 296, 297, 298, 300, 301, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 389, 395, 397, 402, 405, 406, 407, 410, 413, 416, 418, 421], "cost": [0, 2, 30, 86, 308, 310, 325, 328, 330, 398, 402, 403, 414, 415, 416, 418], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 99, 101, 102, 104, 106, 107, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 155, 156, 158, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 225, 226, 230, 234, 235, 236, 237, 238, 240, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 264, 267, 269, 273, 275, 276, 279, 280, 281, 282, 285, 286, 287, 288, 289, 293, 294, 296, 297, 298, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 337, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 366, 379, 382, 384, 389, 390, 391, 392, 393, 395, 397, 399, 402, 403, 404, 405, 407, 408, 410, 413, 414, 415, 416, 417, 418, 420, 421], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 51, 52, 54, 55, 57, 59, 64, 67, 70, 80, 83, 87, 88, 98, 99, 106, 122, 123, 126, 130, 135, 139, 144, 145, 146, 147, 151, 152, 168, 175, 178, 206, 208, 216, 218, 249, 253, 259, 260, 271, 272, 291, 296, 395, 399, 402, 403, 405, 406, 414, 415, 416, 417, 418, 420, 421], "good": [0, 1, 4, 9, 144, 402, 404, 405, 407, 415, 420, 421], "runtim": [0, 2, 3, 23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 416], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 157, 175, 178, 187, 210, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 261, 264, 265, 266, 269, 270, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 310, 311, 320, 328, 331, 375, 379, 398, 402, 403, 404, 405, 406, 409, 411, 413, 414, 415, 416, 421], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 101, 106, 107, 110, 117, 118, 119, 122, 125, 126, 127, 131, 132, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 204, 206, 216, 218, 231, 249, 253, 271, 272, 286, 287, 288, 311, 317, 322, 326, 333, 362, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 420, 421], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 51, 53, 56, 58, 61, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 101, 108, 110, 114, 122, 125, 126, 127, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 190, 191, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 218, 226, 231, 267, 285, 286, 287, 288, 290, 293, 294, 297, 298, 300, 302, 303, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 342, 343, 344, 345, 346, 362, 375, 379, 397, 402, 403, 404, 406, 407, 413, 414, 415, 416, 417, 421], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 399, 402, 406, 409, 413, 417, 421], "beyond": [0, 122, 126, 144, 145, 151, 152], "api": [0, 2, 3, 5, 23, 54, 64, 69, 146, 147, 148, 192, 214, 216, 397, 398, 399, 406, 407, 408, 409, 410, 414, 415, 416, 418, 420, 421], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 78, 90, 91, 97, 106, 122, 123, 125, 126, 127, 138, 144, 145, 151, 152, 157, 169, 170, 181, 186, 193, 206, 208, 210, 218, 220, 249, 253, 285, 290, 291, 294, 295, 296, 297, 298, 311, 322, 333, 362, 394, 397, 398, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421], "paper": [0, 83, 86, 118, 119, 120, 121, 128, 131, 132, 136, 137, 139, 140, 148, 155, 156, 192, 212, 214, 247, 273, 282, 315, 323, 333, 402, 404, 414, 415], "releas": [0, 4, 7, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331, 420], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 381, 389, 399, 402, 420], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 151, 152, 206, 216, 218, 299, 300, 402, 404, 405, 408, 411, 414, 415, 416, 421], "make": [0, 2, 3, 4, 7, 11, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 104, 108, 110, 117, 122, 126, 127, 130, 132, 134, 140, 144, 145, 151, 152, 162, 180, 188, 192, 193, 197, 204, 212, 218, 220, 229, 231, 247, 248, 249, 251, 252, 253, 259, 260, 262, 290, 298, 308, 310, 325, 328, 330, 342, 343, 344, 345, 360, 376, 385, 393, 397, 398, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "sure": [0, 3, 4, 7, 85, 108, 126, 130, 197, 290, 393, 397, 402, 404, 405, 408, 414, 415, 416, 418, 420, 421], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 69, 71, 80, 89, 90, 91, 97, 122, 126, 144, 145, 151, 152, 186, 187, 216, 218, 318, 326, 397, 398, 403, 404, 405, 414, 415, 416, 418], "enjoi": [0, 2, 3, 86, 409], "latest": [0, 2, 3, 10, 139, 142, 143, 146, 147, 376, 404, 414, 415, 416, 420], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 54, 64, 69, 70, 84, 99, 106, 107, 122, 126, 135, 144, 145, 146, 147, 149, 150, 151, 152, 166, 169, 182, 186, 190, 206, 207, 211, 216, 220, 229, 232, 233, 243, 244, 247, 248, 249, 251, 252, 253, 254, 259, 262, 263, 298, 305, 308, 310, 325, 328, 330, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 393, 397, 402, 403, 404, 405, 407, 408, 409, 411, 416, 418, 421], "recent": [0, 7, 12, 215, 420, 421], "version": [0, 1, 2, 3, 6, 12, 26, 27, 29, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 50, 52, 54, 55, 58, 59, 64, 72, 73, 74, 75, 83, 88, 106, 122, 125, 126, 127, 128, 139, 140, 144, 145, 146, 148, 151, 152, 155, 156, 215, 216, 218, 225, 229, 261, 268, 288, 308, 310, 325, 326, 328, 330, 331, 342, 345, 396, 397, 398, 402, 404, 405, 406, 408, 411, 414, 415, 416, 417, 421], "although": [0, 1, 3, 8, 27, 38, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 399, 402, 403, 409, 418], "core": [0, 3, 8, 399, 405, 407, 420], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 94, 95, 108, 110, 114, 122, 126, 144, 145, 151, 152, 216, 218, 409, 420], "backward": [0, 8, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 216, 218, 247, 248, 251, 252, 270, 308, 309, 311, 312, 316, 317, 324, 328, 329, 330, 331, 333, 334, 402, 404, 405, 408, 409, 411, 414, 415, 416], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 27, 38, 45, 54, 55, 59, 64, 82, 101, 104, 106, 107, 108, 112, 122, 126, 128, 141, 144, 145, 151, 152, 169, 204, 212, 216, 218, 247, 248, 249, 251, 252, 253, 295, 308, 309, 311, 312, 313, 315, 316, 317, 324, 326, 328, 329, 330, 331, 333, 334, 337, 402, 405, 418, 420], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 122, 123, 126, 131, 132, 135, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 165, 166, 168, 170, 173, 175, 176, 177, 178, 186, 188, 190, 192, 194, 197, 200, 204, 205, 206, 209, 210, 212, 214, 216, 218, 223, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 264, 269, 270, 271, 272, 280, 283, 289, 290, 291, 293, 297, 301, 302, 308, 309, 310, 311, 312, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 341, 342, 343, 344, 345, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 370, 397, 398, 401, 402, 403, 404, 405, 407, 408, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 114, 118, 119, 122, 125, 126, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 152, 162, 163, 165, 167, 169, 170, 172, 173, 174, 176, 177, 186, 187, 188, 192, 197, 200, 202, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 218, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 264, 267, 270, 271, 272, 275, 276, 279, 280, 281, 283, 285, 289, 291, 296, 297, 300, 301, 304, 305, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 348, 349, 350, 370, 377, 389, 393, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 51, 54, 56, 64, 65, 66, 82, 84, 85, 86, 87, 88, 126, 144, 151, 192, 195, 209, 214, 311, 314, 326, 398, 399, 402, 403, 404, 405, 407, 409, 418, 421], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 106, 107, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 223, 225, 226, 227, 228, 230, 231, 241, 242, 245, 246, 249, 253, 255, 256, 259, 260, 271, 272, 273, 274, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 360, 361, 370, 374, 375, 376, 378, 379, 395, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 421], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 186, 194, 286, 287, 288, 297, 316, 324, 333, 395, 402, 414, 416, 420], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 101, 109, 115, 122, 126, 144, 145, 151, 152, 153, 161, 192, 214, 218, 256, 364, 369, 379, 399, 403, 411, 414], "root": [0, 2, 3, 31, 32, 39, 51, 56, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 144, 169, 207, 225, 249, 250, 253, 280, 281, 405, 406, 414, 415, 416, 417, 418, 421], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 51, 67, 80, 83, 84, 85, 86, 87, 88, 98, 99, 118, 119, 120, 121, 128, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 153, 154, 155, 156, 169, 192, 212, 229, 234, 235, 236, 237, 238, 239, 242, 243, 244, 251, 256, 257, 258, 263, 265, 266, 270, 271, 272, 273, 275, 276, 282, 291, 308, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 342, 347, 355, 394, 412, 417, 420], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 80, 83, 84, 86, 118, 119, 120, 121, 125, 128, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 166, 212, 229, 407, 411, 414, 415, 420], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 83, 86, 87, 118, 119, 120, 121, 128, 130, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 229, 417, 420], "setup": [0, 7, 118, 119, 130, 131, 132, 153], "py": [0, 3, 24, 125, 127, 161, 273, 282, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "develop": [0, 3, 4, 7, 130, 402, 420], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 108, 112, 113, 114, 115, 116, 122, 124, 126, 128, 129, 144, 145, 148, 151, 152, 159, 162, 164, 165, 166, 168, 172, 177, 183, 186, 192, 193, 195, 202, 206, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 225, 227, 228, 230, 231, 232, 233, 242, 245, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 260, 261, 263, 264, 270, 283, 289, 290, 291, 293, 294, 295, 298, 300, 301, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 340, 342, 343, 344, 345, 346, 348, 360, 363, 364, 367, 369, 372, 379, 381, 389, 398, 401, 402, 404, 407, 408, 409, 412, 416, 419, 421], "seri": [0, 2, 3, 7, 8, 92, 102, 112, 113, 116, 117, 151, 187, 209, 362, 397, 398, 402, 403, 404, 410, 411, 414, 415, 418, 421], "quick": [0, 80], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 58, 82, 88, 122, 126, 144, 145, 151, 152, 165, 168, 207, 209, 218, 229, 328, 396, 397, 398, 402, 403, 404, 405, 407, 411, 414, 415, 416, 418, 421], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 101, 104, 105, 106, 107, 112, 114, 120, 121, 122, 123, 125, 126, 127, 128, 130, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 162, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 186, 187, 188, 192, 193, 196, 197, 200, 201, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 225, 226, 228, 231, 232, 233, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 260, 261, 271, 272, 283, 285, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 356, 357, 358, 359, 360, 366, 369, 374, 376, 379, 381, 383, 389, 393, 396, 398, 402, 403, 404, 405, 406, 408, 410, 411, 413, 414, 415, 416, 418, 420, 421], "hurri": [0, 406], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 60, 61, 69, 71, 72, 73, 74, 75, 82, 105, 106, 107, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 162, 165, 168, 182, 188, 193, 205, 207, 208, 227, 228, 232, 233, 245, 247, 249, 251, 253, 254, 257, 258, 265, 277, 280, 283, 289, 293, 298, 311, 342, 344, 345, 403, 404, 405, 406, 407, 414, 415, 416, 417, 418, 420, 421], "item": [0, 2, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 105, 112, 162, 181, 257, 258, 312, 313, 315, 370, 398, 399, 402, 404, 405, 408, 409, 414, 415, 416, 418], "navig": [0, 415], "previou": [0, 3, 4, 10, 45, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 206, 218, 226, 247, 251, 276, 289, 404, 405, 406, 407, 411, 416, 421], "whenev": [0, 1, 2, 3, 23, 45, 51, 54, 56, 64, 65, 66, 80, 86, 98, 99, 106, 107, 120, 121, 125, 127, 128, 136, 137, 148, 155, 156, 161, 185, 210, 215, 326, 342, 343, 344, 345, 360, 381, 397, 410, 418], "want": [0, 2, 3, 6, 7, 8, 54, 64, 107, 188, 270, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 397, 402, 403, 404, 405, 406, 408, 409, 410, 414, 415, 416, 417, 418, 420, 421], "ted": [0, 35, 46, 62, 63, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 395, 401, 412, 419], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 106, 107, 112, 118, 119, 122, 126, 130, 131, 132, 136, 137, 139, 144, 145, 146, 147, 151, 152, 155, 156, 169, 173, 192, 204, 206, 208, 209, 210, 212, 214, 216, 218, 220, 227, 228, 232, 233, 245, 249, 253, 258, 259, 260, 263, 270, 273, 280, 282, 286, 288, 291, 293, 294, 297, 298, 301, 309, 311, 316, 322, 324, 326, 331, 333, 342, 343, 344, 345, 346, 360, 397, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 112, 118, 119, 122, 126, 135, 138, 141, 144, 145, 151, 152, 161, 168, 173, 177, 179, 186, 192, 193, 205, 206, 209, 210, 212, 214, 216, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 342, 343, 344, 345, 346, 360, 379, 386, 389, 395, 398, 399, 401, 403, 404, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421], "optim": [0, 1, 2, 8, 27, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 210, 218, 230, 256, 262, 263, 270, 280, 309, 311, 326, 327, 328, 331, 374, 375, 379, 389, 398, 399, 401, 404, 405, 406, 407, 409, 412, 414, 415, 416, 419], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 122, 126, 144, 145, 148, 151, 152, 166, 169, 188, 192, 214, 220, 271, 272, 293, 309, 312, 315, 317, 329, 331, 333, 334, 362, 370, 376, 379, 381, 382, 383, 389, 399, 401, 402, 405, 406, 407, 408, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421], "storag": [0, 1, 8, 27, 35, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 109, 110, 111, 112, 114, 115, 122, 124, 126, 144, 145, 151, 152, 168, 169, 175, 178, 197, 218, 395, 399, 401, 403, 404, 405, 406, 408, 411, 412, 414, 415, 417, 419], "log": [0, 3, 4, 8, 11, 58, 240, 241, 242, 257, 258, 267, 280, 281, 290, 291, 294, 298, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 334, 340, 369, 372, 373, 375, 379, 389, 397, 398, 399, 401, 402, 403, 404, 406, 407, 411, 412, 414, 415, 416, 419, 420], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 27, 38, 45, 54, 55, 59, 64, 122, 126, 130, 135, 144, 145, 146, 147, 151, 152, 216, 218, 393, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 418, 419, 420], "own": [0, 1, 3, 14, 15, 17, 22, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 146, 147, 151, 152, 218, 362, 401, 403, 404, 406, 412, 414, 415, 416, 419], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 70, 80, 83, 89, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 175, 183, 192, 205, 210, 212, 214, 218, 220, 227, 228, 229, 235, 237, 245, 246, 249, 253, 271, 272, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 342, 379, 381, 389, 395, 397, 399, 401, 403, 406, 409, 410, 412, 417, 418, 419, 421], "loop": [0, 8, 50, 52, 57, 122, 126, 144, 145, 151, 152, 225, 227, 228, 245, 246, 270, 271, 272, 328, 379, 398, 399, 401, 402, 403, 406, 408, 409, 410, 412, 413, 418, 419], "ppo": [0, 4, 8, 294, 298, 310, 325, 328, 395, 397, 401, 402, 403, 407, 408, 412, 414, 419], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 112, 120, 121, 122, 123, 125, 126, 127, 139, 144, 145, 151, 152, 169, 172, 173, 180, 185, 186, 188, 195, 197, 202, 204, 206, 207, 209, 210, 216, 218, 231, 249, 253, 389, 397, 401, 403, 404, 406, 407, 408, 412, 419, 420, 421], "introduct": [0, 398, 401, 406, 412, 414, 415, 419, 421], "multi": [0, 1, 7, 9, 27, 38, 45, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 90, 91, 97, 122, 126, 136, 137, 144, 145, 149, 150, 151, 152, 210, 218, 247, 249, 251, 253, 254, 259, 260, 261, 293, 340, 342, 343, 344, 345, 395, 401, 402, 403, 404, 405, 406, 407, 412, 416, 419, 420], "agent": [0, 9, 60, 61, 135, 136, 137, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 204, 205, 257, 258, 259, 260, 261, 263, 273, 282, 340, 395, 401, 406, 412, 416, 419], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 38, 45, 54, 55, 58, 59, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 249, 253, 255, 256, 293, 297, 326, 360, 361, 362, 383, 384, 385, 389, 391, 392, 393, 395, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 97, 98, 99, 100, 101, 106, 107, 112, 114, 118, 119, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 220, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 239, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 267, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 355, 360, 362, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 389, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421], "pretrain": [0, 401, 412, 419], "recurr": [0, 2, 168, 247, 248, 249, 251, 253, 276, 401, 403, 407, 412, 418, 419], "dqn": [0, 2, 80, 162, 179, 242, 290, 291, 308, 309, 311, 312, 313, 315, 317, 318, 319, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 340, 386, 395, 397, 401, 407, 408, 411, 412, 419], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 45, 62, 118, 119, 122, 126, 138, 144, 145, 151, 152, 177, 186, 205, 219, 224, 227, 228, 231, 242, 245, 246, 249, 253, 259, 260, 263, 271, 272, 274, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 308, 309, 310, 311, 312, 316, 317, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 375, 381, 384, 385, 389, 391, 392, 395, 397, 398, 399, 401, 403, 406, 408, 409, 412, 417, 418, 419, 420, 421], "replai": [0, 8, 16, 45, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 112, 113, 117, 168, 169, 177, 193, 197, 206, 218, 311, 312, 313, 315, 316, 317, 324, 329, 331, 333, 334, 376, 379, 387, 389, 395, 399, 401, 412, 416, 417, 419], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 117, 122, 126, 138, 144, 145, 151, 152, 168, 169, 173, 177, 192, 193, 197, 206, 209, 210, 212, 214, 218, 297, 300, 311, 312, 313, 315, 316, 317, 324, 329, 331, 333, 334, 376, 379, 387, 389, 395, 399, 401, 410, 412, 416, 417, 419, 421], "competit": [0, 3, 136, 137, 401, 412, 415, 419], "ddpg": [0, 235, 236, 237, 238, 312, 323, 332, 395, 397, 401, 403, 408, 412, 415, 419], "task": [0, 2, 3, 9, 58, 60, 61, 70, 83, 86, 120, 121, 122, 126, 129, 136, 137, 144, 145, 146, 147, 148, 151, 152, 155, 156, 192, 204, 210, 212, 214, 316, 324, 401, 402, 403, 404, 405, 406, 407, 412, 414, 415, 416, 419, 420, 421], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 126, 142, 143, 144, 151, 155, 206, 239, 249, 253, 289, 308, 326, 328, 330, 362, 379, 395, 398, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 418, 419], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 45, 47, 50, 52, 54, 55, 57, 59, 64, 69, 70, 93, 94, 95, 101, 104, 108, 110, 114, 117, 122, 126, 131, 144, 145, 151, 152, 162, 175, 178, 179, 188, 192, 209, 210, 212, 216, 218, 219, 249, 253, 256, 259, 260, 273, 280, 282, 285, 286, 294, 297, 298, 299, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 383, 384, 385, 388, 389, 393, 395, 397, 399, 401, 403, 404, 405, 409, 411, 412, 414, 415, 416, 418, 419, 421], "loss": [0, 3, 8, 52, 179, 270, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 374, 379, 386, 389, 398, 399, 401, 406, 408, 409, 410, 412, 416, 418, 419, 420], "trainer": [0, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 401, 402, 412, 419], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 185, 186, 188, 190, 192, 194, 195, 196, 197, 200, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 219, 223, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 261, 264, 267, 269, 270, 271, 272, 273, 274, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 301, 302, 305, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 335, 336, 340, 342, 343, 344, 345, 348, 360, 362, 370, 371, 372, 373, 374, 376, 377, 378, 381, 389, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421], "packag": [0, 6, 7, 10, 161, 395, 396, 420, 421], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 45, 50, 51, 52, 53, 56, 57, 58, 65, 66, 67, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 100, 101, 105, 106, 107, 112, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 138, 139, 141, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 166, 169, 173, 182, 188, 190, 193, 197, 206, 209, 210, 211, 215, 216, 218, 226, 229, 240, 247, 248, 249, 251, 252, 253, 257, 258, 259, 260, 261, 262, 267, 271, 272, 273, 279, 283, 293, 297, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 370, 373, 376, 377, 378, 379, 381, 391, 392, 393, 395, 397, 398, 399, 403, 404, 405, 406, 409, 411, 413, 414, 415, 417, 420, 421], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 105, 106, 107, 108, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 168, 170, 173, 174, 175, 178, 179, 180, 182, 190, 192, 194, 195, 197, 201, 203, 204, 206, 208, 209, 210, 211, 214, 216, 218, 223, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 302, 305, 308, 309, 311, 312, 313, 315, 316, 317, 324, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 362, 370, 376, 395, 397, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 420, 421], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 86, 93, 122, 126, 144, 145, 151, 152, 165, 195, 205, 210, 216, 218, 225, 249, 253, 261, 289, 311, 326, 331, 360, 395, 398, 402, 403, 405, 406, 414, 418], "interoper": [0, 14, 15, 395], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 36, 38, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 122, 125, 126, 136, 137, 144, 145, 151, 152, 155, 156, 162, 169, 170, 192, 197, 210, 214, 218, 232, 233, 247, 248, 249, 251, 252, 253, 254, 260, 296, 300, 309, 310, 311, 313, 315, 317, 318, 324, 325, 328, 329, 331, 333, 334, 342, 343, 344, 345, 351, 352, 353, 354, 356, 357, 358, 359, 360, 393, 395, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 50, 52, 57, 61, 88, 395, 409], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 56, 65, 66, 101, 146, 147, 186, 188, 227, 228, 230, 240, 241, 242, 243, 250, 256, 257, 258, 264, 267, 268, 269, 270, 275, 276, 279, 280, 281, 289, 290, 291, 294, 298, 299, 308, 309, 310, 311, 316, 317, 318, 324, 325, 328, 329, 330, 331, 333, 334, 395, 399, 403, 404, 407, 409, 414, 415, 416, 420, 421], "helper": [0, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 402, 403, 405, 414, 416], "compos": [0, 3, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 100, 101, 102, 103, 112, 113, 122, 126, 144, 145, 151, 152, 169, 196, 209, 210, 216, 218, 292, 293, 311, 320, 331, 362, 395, 402, 403, 404, 405, 409, 413, 415, 416, 418, 420, 421], "episod": [0, 3, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 106, 107, 122, 126, 144, 145, 151, 152, 165, 197, 200, 205, 225, 230, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 395, 403, 406, 411, 414, 415, 418], "format": [0, 3, 27, 35, 38, 43, 44, 45, 46, 49, 54, 55, 59, 62, 63, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 104, 112, 122, 126, 144, 145, 146, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 362, 395, 402, 403, 406, 408, 410, 421], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 122, 126, 138, 144, 145, 151, 152, 155, 156, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 226, 227, 228, 245, 246, 271, 272, 276, 285, 289, 290, 291, 294, 295, 296, 297, 298, 299, 301, 309, 311, 313, 316, 317, 329, 331, 333, 334, 340, 395, 416], "tree": [0, 1, 50, 52, 57, 122, 126, 144, 145, 151, 152, 395, 414, 418], "forest": [0, 395], "human": [0, 24, 84, 395, 416], "feedback": [0, 395, 411, 420], "rlhf": [0, 58, 70, 89, 186, 395, 397], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 123, 126, 144, 145, 151, 152, 163, 166, 175, 178, 187, 194, 195, 209, 210, 216, 218, 220, 230, 249, 253, 255, 256, 375, 383, 384, 385, 389, 391, 392, 393, 395, 406], "gymlikeenv": [0, 125, 127, 395], "envmetadata": [0, 395], "vector": [0, 1, 8, 25, 118, 119, 127, 131, 132, 135, 146, 147, 148, 155, 156, 177, 215, 235, 237, 247, 248, 251, 252, 254, 342, 345, 355, 356, 357, 358, 359, 395, 398, 402, 403, 405, 413, 414, 415, 416, 417, 421], "custom": [0, 2, 5, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 212, 218, 259, 260, 301, 318, 328, 335, 393, 395, 397, 402, 403, 404, 405, 407, 408, 410, 414, 415], "nativ": [0, 1, 7, 9, 84, 122, 126, 144, 145, 151, 152, 169, 362, 395, 405, 418], "auto": [0, 94, 114, 164, 165, 215, 271, 272, 309, 311, 317, 327, 329, 331, 333, 334, 395, 398, 414, 415], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 164, 165, 166, 169, 179, 182, 185, 187, 192, 200, 204, 205, 206, 207, 209, 210, 212, 215, 216, 218, 220, 226, 231, 247, 249, 253, 261, 271, 272, 284, 293, 326, 361, 395, 398, 402, 403, 404, 405, 406, 409, 413, 414, 415, 420], "dynam": [0, 2, 7, 14, 15, 16, 83, 86, 88, 122, 144, 151, 218, 316, 324, 395, 404, 406, 416], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 76, 77, 78, 82, 118, 119, 122, 124, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 223, 225, 226, 227, 228, 242, 245, 246, 249, 253, 271, 272, 274, 276, 285, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 395, 397, 402, 403, 404, 405, 406, 407, 411, 413, 414, 415, 420], "mask": [0, 1, 4, 23, 25, 26, 30, 34, 41, 42, 43, 44, 49, 146, 147, 152, 163, 193, 218, 231, 242, 245, 246, 257, 258, 274, 289, 290, 291, 295, 296, 376, 395, 403, 405, 421], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 58, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 162, 163, 166, 172, 175, 177, 178, 179, 180, 183, 186, 187, 190, 194, 195, 197, 201, 204, 210, 215, 219, 223, 225, 227, 228, 230, 231, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 269, 271, 272, 273, 274, 276, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 298, 301, 302, 308, 309, 311, 312, 313, 315, 316, 317, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 389, 393, 395, 397, 398, 399, 402, 403, 404, 406, 407, 408, 409, 410, 413, 414, 415, 417, 418, 420, 421], "record": [0, 2, 11, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 159, 162, 186, 218, 328, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389, 395, 403, 404, 407, 411, 414], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 177, 206, 223, 285, 290, 291, 294, 295, 296, 297, 298, 299, 300, 305, 395, 404, 405, 407, 408, 414, 415, 416, 420, 421], "actor": [0, 3, 4, 21, 186, 219, 230, 234, 235, 237, 242, 243, 245, 246, 256, 269, 271, 272, 274, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 340, 395, 398, 403, 405, 406, 408, 411, 414, 417, 420], "explor": [0, 1, 217, 227, 228, 245, 246, 263, 271, 272, 285, 290, 291, 294, 295, 296, 297, 298, 308, 326, 375, 384, 385, 389, 395, 404, 405, 406, 408, 409, 411, 414, 415, 416], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 101, 106, 107, 112, 122, 126, 135, 144, 145, 151, 152, 161, 162, 165, 167, 169, 170, 172, 175, 176, 177, 178, 179, 187, 188, 192, 193, 196, 197, 198, 200, 202, 206, 207, 209, 210, 214, 216, 218, 223, 226, 227, 228, 229, 231, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 249, 250, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 267, 271, 272, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 370, 372, 373, 374, 375, 376, 379, 389, 395, 399, 403, 408, 409, 410, 413, 414, 415, 416, 418, 420, 421], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 54, 56, 58, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 103, 105, 122, 123, 126, 136, 137, 138, 141, 144, 145, 146, 147, 149, 150, 151, 152, 166, 173, 175, 176, 180, 186, 188, 194, 195, 200, 201, 204, 206, 209, 215, 218, 226, 231, 240, 249, 253, 257, 258, 267, 285, 294, 298, 302, 303, 322, 329, 336, 342, 347, 355, 365, 379, 395, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "hook": [0, 2, 27, 35, 38, 45, 51, 54, 55, 56, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 115, 122, 126, 144, 145, 151, 152, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 274, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 395], "planner": [0, 230, 256, 395], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 102, 105, 106, 107, 112, 113, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 170, 173, 175, 176, 177, 178, 179, 180, 186, 188, 190, 192, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 219, 223, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 305, 306, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 347, 348, 352, 354, 355, 357, 359, 360, 364, 370, 377, 378, 389, 395, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "vmap": [0, 247, 248, 251, 252, 261, 283, 297, 300, 326, 395, 397, 420], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 58, 60, 61, 69, 71, 72, 73, 74, 75, 86, 88, 100, 112, 122, 126, 138, 144, 145, 151, 152, 162, 177, 187, 188, 206, 219, 220, 231, 245, 247, 249, 251, 253, 294, 297, 298, 305, 309, 326, 329, 375, 383, 395, 397, 402, 403, 404, 405, 406, 407, 409, 416, 417, 418, 420, 421], "sac": [0, 317, 329, 331, 395], "redq": [0, 329, 395], "crossq": [0, 311, 395], "iql": [0, 316, 324, 395, 402, 414, 415], "cql": [0, 309, 315, 395], "gail": [0, 322, 395], "dt": [0, 145, 271, 272, 395, 416], "td3": [0, 333, 334, 395], "bc": [0, 5, 333, 395, 420], "a2c": [0, 308, 395], "dreamer": [0, 159, 160, 243, 319, 320, 321, 395, 397], "checkpoint": [0, 56, 91, 93, 96, 108, 109, 111, 115, 395, 417, 418], "builder": [0, 395, 403, 421], "logger": [0, 3, 11, 360, 362, 364, 365, 366, 367, 368, 369, 373, 379, 389, 393, 395, 403, 414], "_util": [0, 3, 12, 395, 411], "implement_for": [0, 3, 395], "thing": [0, 3, 7, 8, 122, 126, 144, 145, 151, 152, 259, 260, 396, 404, 405, 406, 407, 408, 409, 410, 414, 415, 418, 421], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 59, 61, 64, 65, 66, 93, 94, 114, 122, 126, 144, 145, 151, 152, 177, 216, 218, 240, 259, 260, 279, 309, 311, 324, 329, 331, 333, 334, 342, 344, 345, 396, 402, 406, 407, 408, 416, 418], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 114, 122, 123, 125, 126, 127, 135, 136, 137, 139, 141, 144, 145, 146, 147, 151, 152, 155, 156, 163, 165, 168, 169, 173, 175, 177, 178, 186, 187, 188, 192, 193, 200, 206, 209, 210, 212, 214, 215, 216, 218, 224, 225, 229, 230, 242, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 270, 274, 280, 293, 294, 297, 298, 300, 304, 309, 310, 311, 313, 318, 324, 325, 326, 328, 329, 331, 333, 334, 335, 340, 341, 342, 343, 344, 345, 360, 361, 362, 364, 376, 393, 396, 397, 398, 399, 402, 403, 404, 405, 407, 409, 410, 414, 415, 416, 417, 418, 421], "debug": [0, 6, 8, 58, 80, 81, 82, 83, 84, 85, 86, 87, 88, 396, 421], "work": [0, 1, 2, 3, 4, 8, 12, 27, 38, 45, 54, 55, 56, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 99, 104, 106, 107, 110, 117, 122, 125, 126, 127, 130, 144, 145, 148, 151, 152, 170, 186, 192, 212, 215, 216, 218, 225, 232, 233, 254, 291, 296, 301, 310, 325, 328, 379, 396, 397, 402, 403, 404, 405, 406, 409, 413, 414, 415, 416, 417, 418, 420, 421], "habitat": [0, 3, 128, 396, 417], "lab": [0, 3, 120, 121, 128, 396], "mujoco": [0, 6, 8, 148, 396, 402, 404, 405], "error": [0, 1, 3, 7, 10, 12, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 57, 59, 60, 64, 93, 122, 126, 144, 145, 151, 152, 153, 157, 193, 218, 220, 326, 396, 398, 402, 404, 414, 415, 421], "solut": [0, 2, 3, 6, 7, 9, 21, 396, 397, 399, 420], "resourc": [0, 1, 21, 128, 396, 402, 404, 414, 415], "issu": [0, 3, 4, 5, 8, 80, 84, 91, 93, 94, 114, 125, 130, 169, 193, 207, 225, 285, 290, 291, 294, 295, 296, 297, 298, 396, 420], "customis": [0, 396, 403, 410], "video": [0, 4, 9, 362, 364, 375, 393, 395, 396, 411, 414, 415], "render": [0, 3, 8, 132, 155, 360, 362, 375, 396, 402, 403, 404, 406, 410, 420], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 98, 99, 101, 102, 104, 110, 112, 113, 114, 116, 117, 122, 126, 136, 137, 142, 143, 144, 145, 151, 152, 155, 156, 164, 169, 173, 177, 210, 225, 257, 258, 395, 406, 413, 414, 415, 418, 420], "search": [0, 141, 226, 403], "page": [0, 7, 24, 369, 408], "somewhat": [1, 2, 398, 407, 421], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 166, 176, 179, 210, 218, 242, 251, 254, 274, 290, 291, 295, 296, 328, 376, 409, 420, 421], "dataload": [1, 89, 105, 107, 403, 409, 418], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 122, 126, 144, 145, 151, 152, 169, 181, 197, 205, 206, 207, 210, 218, 227, 228, 245, 246, 247, 249, 251, 253, 267, 271, 272, 308, 311, 326, 328, 331, 362, 397, 403, 406, 414, 418, 420, 421], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 183, 186, 188, 190, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 219, 223, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 267, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 345, 348, 350, 351, 352, 356, 357, 359, 360, 362, 370, 375, 376, 377, 389, 393, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 122, 125, 126, 127, 135, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 165, 168, 181, 186, 192, 201, 209, 210, 214, 218, 253, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 376, 379, 397, 398, 399, 402, 403, 404, 405, 408, 413, 414, 415, 416, 417, 418, 420, 421], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 86, 99, 101, 105, 106, 122, 126, 136, 137, 144, 145, 151, 152, 162, 177, 188, 200, 207, 218, 225, 270, 280, 283, 300, 318, 320, 326, 348, 360, 382, 399, 402, 403, 404, 406, 407, 408, 409, 414, 415, 416, 421], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 45, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 86, 95, 122, 126, 144, 145, 146, 147, 151, 152, 166, 167, 173, 182, 192, 206, 209, 210, 211, 212, 214, 218, 225, 231, 247, 249, 251, 253, 259, 297, 298, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 397, 402, 405, 414, 415, 416, 418, 421], "static": [1, 12, 54, 58, 64, 70, 99, 106, 107, 128, 145, 216, 324, 406, 416, 418], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 45, 47, 51, 54, 55, 56, 59, 61, 64, 65, 66, 70, 95, 101, 107, 122, 126, 128, 135, 144, 145, 146, 147, 151, 152, 179, 206, 208, 218, 220, 247, 251, 260, 292, 308, 310, 325, 328, 329, 330, 398, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 421], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 60, 64, 89, 112, 115, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 168, 175, 177, 178, 187, 195, 206, 210, 218, 224, 245, 249, 253, 271, 272, 310, 311, 325, 326, 328, 331, 362, 376, 381, 391, 392, 393, 397, 402, 403, 404, 405, 409, 414, 415, 416, 418], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 56, 59, 64, 71, 83, 84, 87, 88, 89, 122, 126, 138, 144, 145, 151, 152, 164, 169, 173, 182, 192, 200, 206, 209, 210, 211, 212, 214, 218, 254, 283, 297, 298, 299, 311, 331, 362, 399, 404, 406, 410, 418, 421], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 86, 101, 105, 107, 122, 126, 144, 145, 151, 152, 166, 188, 192, 214, 218, 238, 247, 249, 251, 253, 259, 260, 277, 280, 298, 325, 333, 337, 375, 379, 398, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 418, 420, 421], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 88, 123, 298, 379, 397, 398, 402, 403, 413, 421], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 104, 105, 106, 107, 110, 112, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 165, 166, 170, 172, 173, 176, 192, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 218, 225, 227, 228, 229, 231, 232, 233, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 262, 271, 272, 283, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 334, 336, 340, 342, 343, 344, 345, 346, 350, 360, 361, 362, 369, 372, 382, 389, 390, 393, 402, 403, 404, 405, 406, 407, 409, 414, 415, 416, 418, 421], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 104, 105, 106, 107, 108, 110, 120, 121, 122, 125, 126, 127, 128, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 167, 168, 172, 175, 176, 178, 186, 188, 190, 192, 200, 202, 208, 210, 211, 212, 214, 216, 218, 225, 231, 232, 233, 235, 241, 244, 249, 253, 254, 257, 258, 265, 274, 291, 293, 295, 296, 298, 300, 301, 302, 309, 311, 324, 326, 329, 331, 333, 334, 339, 342, 345, 360, 361, 375, 376, 391, 392, 397, 398, 402, 404, 406, 407, 408, 409, 413, 414, 416, 417, 418, 420, 421], "constructor": [1, 2, 16, 18, 19, 20, 21, 56, 70, 86, 98, 112, 122, 126, 139, 144, 145, 151, 152, 155, 165, 209, 232, 233, 254, 294, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 390, 393, 397, 402, 403, 404, 406, 409, 414, 415, 418], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 101, 105, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 180, 188, 201, 218, 229, 231, 232, 233, 254, 259, 260, 278, 285, 290, 294, 295, 297, 299, 300, 302, 326, 339, 375, 378, 379, 398, 399, 402, 404, 405, 409, 411, 414, 415, 416], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 53, 54, 55, 56, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 118, 119, 122, 123, 126, 127, 128, 130, 131, 132, 138, 139, 144, 145, 148, 151, 152, 153, 163, 210, 218, 245, 247, 249, 251, 253, 261, 293, 299, 300, 326, 333, 383, 393, 397, 399, 401, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 418, 419, 421], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 58, 80, 90, 91, 97, 99, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 163, 168, 182, 185, 188, 204, 205, 206, 207, 210, 215, 218, 225, 226, 227, 228, 229, 230, 243, 245, 246, 247, 249, 251, 253, 255, 256, 270, 271, 272, 293, 294, 298, 308, 319, 328, 341, 342, 343, 344, 345, 348, 349, 350, 361, 364, 370, 375, 379, 399, 403, 405, 407, 408, 410, 411, 413, 416, 417, 420], "queri": [1, 3, 14, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 192, 209, 212, 216, 218, 300, 398, 402, 408, 416, 420], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 122, 126, 144, 145, 151, 152, 193, 205, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 261, 264, 265, 266, 269, 270, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 305, 313, 315, 326, 342, 343, 344, 345, 346, 361, 390, 402, 403, 405, 408, 411, 416, 418, 421], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 104, 106, 107, 114, 118, 119, 122, 125, 126, 127, 131, 132, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 155, 156, 162, 168, 169, 177, 183, 187, 188, 199, 204, 207, 210, 216, 218, 227, 228, 229, 230, 232, 233, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 264, 265, 266, 271, 272, 273, 275, 276, 279, 280, 281, 282, 285, 289, 293, 294, 297, 298, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 370, 372, 375, 379, 381, 382, 383, 391, 392, 393, 397, 398, 402, 403, 404, 405, 406, 407, 409, 411, 414, 415, 416, 417, 418, 420, 421], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 85, 105, 112, 122, 126, 127, 144, 145, 151, 152, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 218, 220, 247, 249, 253, 254, 262, 263, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 343, 344, 345, 376, 402, 404, 405, 409, 410, 414, 415, 416, 418, 421], "deliv": [1, 2, 3, 16, 86, 402, 403, 406, 409, 420], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 40, 50, 51, 52, 56, 57, 61, 64, 65, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 101, 122, 125, 126, 127, 135, 144, 145, 146, 147, 151, 152, 216, 247, 249, 251, 252, 253, 293, 299, 300, 309, 311, 324, 329, 331, 333, 334, 361, 370, 395, 397, 403, 406, 413, 414, 416, 420], "user": [1, 2, 3, 5, 8, 23, 27, 38, 45, 54, 55, 59, 64, 80, 82, 86, 88, 99, 107, 122, 126, 144, 145, 151, 152, 153, 170, 205, 210, 218, 220, 239, 311, 328, 331, 333, 362, 390, 398, 399, 402, 403, 406, 408, 409, 416, 420, 421], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 58, 105, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 204, 227, 228, 245, 246, 271, 272, 402, 404, 411, 414, 415, 420, 421], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 60, 61, 62, 64, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 101, 106, 107, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 175, 176, 178, 179, 180, 187, 188, 190, 194, 195, 197, 199, 201, 204, 206, 207, 209, 210, 216, 218, 225, 226, 230, 247, 249, 253, 256, 280, 293, 308, 309, 310, 311, 312, 313, 315, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 397, 398, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 45, 51, 54, 55, 56, 58, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 165, 168, 169, 170, 172, 179, 188, 195, 204, 205, 209, 210, 216, 218, 220, 225, 226, 230, 234, 239, 243, 247, 248, 249, 251, 252, 253, 254, 256, 261, 265, 269, 273, 275, 276, 282, 286, 293, 297, 303, 308, 310, 311, 315, 325, 326, 328, 329, 330, 331, 340, 341, 342, 343, 344, 345, 346, 393, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 414, 415, 416, 421], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 80, 101, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 225, 227, 228, 229, 245, 247, 249, 253, 262, 290, 295, 311, 320, 331, 333, 403, 404, 405, 406, 407, 409, 411, 414, 415, 416, 417, 418, 421], "predefin": [1, 403, 405, 409, 418], "becaus": [1, 3, 4, 7, 50, 52, 57, 58, 80, 122, 126, 144, 145, 151, 152, 179, 186, 204, 209, 215, 218, 238, 260, 285, 290, 291, 293, 294, 295, 296, 297, 298, 308, 328, 397, 402, 403, 405, 407, 408, 409, 413, 414, 415, 416, 418, 421], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 416, 418], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 188, 202, 210, 213, 218, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 264, 265, 266, 267, 269, 271, 272, 275, 276, 278, 280, 281, 283, 286, 289, 291, 293, 294, 296, 298, 301, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 383, 398, 402, 404, 405, 406, 407, 413, 414, 415, 417, 418], "heavi": [1, 8, 80, 418], "crucial": [1, 2, 3, 227, 228, 245, 246, 271, 272, 316, 324, 326, 402, 403, 404, 405, 406, 408, 410, 414, 415, 416, 421], "configur": [1, 8, 21, 22, 58, 186, 234, 239, 269, 326, 328, 397, 402, 403, 404, 408, 414, 415, 416], "hyperparamet": [1, 104, 218, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 402, 410, 416, 418], "appropri": [1, 3, 4, 7, 92, 102, 112, 113, 116, 117, 144, 151, 179, 390, 393, 402, 410, 418], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 104, 105, 108, 110, 112, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393, 397, 398, 402, 405, 407, 411, 414, 415, 416, 417], "take": [1, 2, 3, 8, 23, 27, 38, 54, 55, 58, 59, 64, 83, 109, 115, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 172, 204, 207, 209, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 292, 293, 294, 296, 301, 304, 307, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 370, 381, 397, 399, 402, 403, 404, 406, 407, 408, 414, 415, 416, 418, 421], "consider": [1, 2, 3, 8, 125, 127, 403, 414, 415, 418], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 122, 126, 132, 136, 137, 138, 144, 145, 146, 147, 151, 152, 155, 156, 165, 175, 178, 205, 210, 216, 218, 226, 232, 233, 249, 253, 254, 302, 308, 309, 310, 311, 312, 313, 315, 317, 318, 322, 325, 326, 328, 329, 330, 331, 333, 334, 340, 342, 345, 402, 403, 404, 406, 414, 415, 416, 420, 421], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 99, 101, 106, 107, 108, 112, 115, 120, 121, 122, 125, 126, 127, 128, 132, 135, 138, 144, 145, 146, 147, 151, 152, 155, 156, 162, 165, 166, 169, 172, 173, 175, 176, 179, 180, 182, 186, 188, 193, 194, 195, 197, 200, 201, 204, 205, 207, 209, 210, 215, 216, 218, 220, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 294, 296, 297, 298, 301, 304, 308, 310, 311, 317, 323, 325, 326, 328, 329, 330, 332, 333, 341, 342, 343, 344, 345, 346, 362, 364, 374, 375, 376, 379, 389, 391, 392, 393, 397, 399, 402, 403, 404, 405, 407, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "occur": [1, 8, 15, 54, 60, 61, 64, 80, 122, 126, 128, 144, 145, 151, 152, 170, 180, 188, 193, 215, 226, 229, 285, 290, 291, 294, 295, 296, 297, 298, 320, 418, 421], "serial": [1, 2, 3, 27, 38, 45, 51, 54, 55, 56, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 216, 218], "parallel": [1, 3, 8, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 210, 215, 220, 249, 253, 308, 390, 391, 392, 393, 403, 404, 414, 415], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 249, 253, 389, 392, 395, 402, 403, 404, 405, 409, 411, 414, 415, 418], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 135, 138, 141, 144, 145, 146, 147, 148, 151, 152, 153, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 391, 392, 393, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 418, 421], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 50, 52, 57, 69, 70, 83, 88, 89, 123, 139, 144, 151, 216, 391, 392, 393, 402, 403, 404, 420, 421], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 392, 395, 404, 409, 420], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 37, 50, 52, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 106, 107, 135, 146, 147, 247, 251, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 397, 399, 404, 407, 418, 420], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 55, 56, 59, 65, 66, 99, 106, 107, 118, 119, 120, 121, 125, 127, 128, 130, 131, 132, 139, 140, 144, 148, 152, 216, 218, 249, 253, 259, 270, 271, 272, 326, 381, 395, 397, 398, 402, 406, 410, 414, 415, 416], "aggreg": [1, 3, 27, 54, 80, 99, 112, 146, 147, 226, 232, 233, 235, 236, 300], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 105, 106, 107, 122, 123, 126, 144, 145, 151, 152, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 220, 225, 226, 227, 245, 247, 249, 251, 253, 254, 259, 274, 280, 289, 291, 296, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 381, 397, 398, 403, 405, 406, 407, 410, 411, 416, 417, 420, 421], "final": [1, 2, 3, 4, 21, 50, 52, 57, 58, 206, 215, 227, 228, 245, 246, 247, 249, 251, 253, 259, 271, 272, 292, 299, 342, 375, 397, 402, 403, 404, 410, 411, 414, 415, 416, 421], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 391, 395, 402, 403, 404, 409, 420], "sever": [1, 2, 3, 8, 27, 38, 41, 45, 54, 55, 59, 64, 70, 83, 122, 126, 144, 145, 151, 152, 170, 172, 210, 218, 328, 402, 404, 410, 411, 418, 421], "gather": [1, 3, 18, 20, 21, 70, 89, 93, 94, 99, 106, 114, 193, 258, 261, 267, 326, 341, 383, 396, 403, 404, 405, 409, 414, 415, 416, 418, 421], "continu": [1, 2, 9, 28, 31, 71, 72, 73, 107, 122, 126, 144, 145, 146, 147, 151, 152, 155, 156, 162, 223, 235, 236, 237, 238, 270, 271, 272, 300, 305, 309, 332, 342, 347, 355, 397, 402, 404, 405, 407, 414, 415, 416, 418, 421], "concomitantli": [1, 122, 126, 144, 145, 151, 152], "network": [1, 4, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 135, 144, 145, 146, 147, 151, 152, 218, 232, 233, 235, 236, 237, 238, 241, 243, 244, 251, 254, 259, 260, 261, 263, 265, 266, 268, 270, 273, 275, 276, 277, 282, 286, 287, 288, 289, 297, 301, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 340, 342, 343, 344, 345, 346, 388, 389, 397, 398, 399, 408, 411, 413, 416, 421], "impli": [1, 421], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 58, 59, 64, 99, 101, 104, 118, 119, 122, 126, 144, 145, 149, 150, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 247, 248, 249, 251, 252, 253, 259, 261, 263, 297, 308, 309, 310, 311, 317, 320, 331, 333, 381, 388, 397, 399, 402, 403, 404, 405, 413, 416, 418, 420], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 82, 88, 91, 99, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 186, 188, 201, 210, 211, 216, 218, 220, 229, 249, 253, 254, 259, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 414, 415, 416, 417, 418, 420, 421], "slightli": [1, 23, 80, 397, 398, 405, 414, 416, 417, 418, 421], "lag": [1, 402, 403, 404], "therefor": [1, 2, 3, 7, 51, 56, 65, 66, 87, 88, 122, 126, 144, 145, 151, 152, 197, 328, 340, 408, 414, 421], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 46, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 99, 101, 106, 107, 112, 114, 115, 122, 126, 135, 138, 141, 144, 145, 146, 147, 151, 152, 162, 163, 166, 169, 179, 186, 192, 197, 200, 204, 205, 207, 209, 211, 214, 215, 225, 226, 227, 228, 245, 246, 247, 248, 249, 251, 252, 253, 257, 258, 259, 268, 270, 271, 272, 294, 297, 298, 307, 308, 309, 310, 311, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 398, 399, 402, 403, 404, 406, 413, 414, 415, 416, 418, 421], "asynchron": [1, 9, 15, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 308, 391, 402, 403, 404], "off": [1, 2, 4, 250, 281, 290, 331, 360, 375, 384, 397, 399, 402, 403, 404, 407, 408, 414, 415, 417, 421], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 114, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 153, 155, 175, 178, 182, 188, 205, 210, 215, 218, 220, 242, 247, 249, 251, 253, 260, 262, 286, 288, 289, 291, 295, 308, 316, 318, 324, 328, 375, 397, 399, 402, 403, 404, 405, 406, 407, 409, 410, 414, 415, 416, 417, 418, 421], "remot": [1, 2, 18, 19, 20, 21, 144, 151, 421], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 58, 64, 112, 118, 119, 122, 126, 128, 129, 131, 132, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 162, 163, 165, 166, 169, 172, 175, 178, 179, 180, 186, 190, 194, 195, 200, 201, 202, 204, 205, 207, 216, 218, 220, 230, 231, 249, 253, 256, 271, 272, 293, 308, 360, 362, 383, 397, 402, 404, 405, 407, 408, 409, 410, 411, 417, 418, 420], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 201, 329, 342, 343, 344, 345, 346, 398, 402, 404, 407, 408, 409], "synchronis": [1, 123, 414, 415], "either": [1, 2, 5, 22, 25, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 101, 122, 126, 144, 145, 151, 152, 204, 205, 218, 303, 326, 333, 334, 366, 399, 402, 403, 405, 414, 417, 418, 420, 421], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 402, 415, 420], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98, 99, 101, 104, 105, 106, 107, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 177, 180, 182, 185, 186, 187, 188, 192, 193, 195, 196, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 216, 218, 220, 223, 225, 226, 228, 229, 230, 232, 233, 235, 236, 237, 238, 244, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 270, 272, 280, 281, 285, 286, 287, 288, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 337, 342, 343, 344, 345, 348, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 369, 372, 373, 375, 376, 379, 393, 397, 398, 399, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "second": [1, 3, 8, 23, 41, 42, 43, 44, 80, 83, 112, 166, 247, 249, 251, 253, 291, 310, 325, 328, 331, 364, 378, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 173, 175, 176, 178, 179, 180, 186, 190, 191, 192, 194, 195, 197, 201, 204, 206, 208, 209, 210, 212, 214, 216, 218, 223, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 262, 263, 269, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 302, 305, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 360, 376, 381, 387, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 99, 106, 122, 126, 144, 145, 151, 152, 166, 182, 186, 209, 218, 241, 242, 248, 252, 264, 286, 287, 288, 290, 291, 292, 297, 303, 308, 310, 312, 313, 318, 325, 328, 330, 340, 341, 342, 343, 344, 345, 379, 395, 398, 399, 402, 403, 404, 405, 406, 407, 413, 414, 415, 416, 421], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 97, 99, 101, 106, 107, 114, 121, 122, 123, 125, 126, 127, 138, 144, 145, 151, 152, 169, 188, 206, 209, 210, 216, 218, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 304, 309, 311, 313, 316, 317, 324, 326, 329, 331, 333, 334, 340, 342, 343, 344, 345, 360, 362, 366, 375, 383, 384, 385, 389, 391, 392, 397, 398, 399, 402, 404, 405, 406, 407, 416, 418, 421], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 162, 166, 173, 175, 176, 178, 179, 180, 190, 192, 194, 195, 197, 201, 204, 206, 209, 210, 212, 214, 218, 223, 225, 230, 231, 241, 247, 248, 249, 251, 252, 253, 256, 262, 263, 271, 273, 274, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 302, 305, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 360, 376, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "slower": [1, 414], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 54, 80, 82, 86, 99, 106, 107, 110, 112, 122, 126, 130, 142, 143, 144, 145, 148, 151, 152, 195, 227, 228, 238, 249, 251, 253, 254, 264, 283, 285, 290, 297, 302, 326, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 396, 398, 402, 403, 404, 406, 408, 409, 414, 415, 416, 418, 420, 421], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 166, 169, 172, 175, 176, 177, 178, 187, 188, 192, 197, 200, 203, 205, 206, 207, 209, 210, 211, 214, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 260, 261, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 278, 283, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 302, 304, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 340, 342, 343, 344, 345, 349, 350, 364, 372, 374, 375, 379, 383, 393, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 421], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 118, 119, 122, 126, 128, 129, 130, 144, 145, 151, 152, 173, 186, 191, 192, 206, 209, 210, 212, 214, 218, 247, 248, 251, 252, 297, 371, 402, 403, 404, 405, 414, 415, 417, 421], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 54, 67, 101, 118, 119, 131, 132, 144, 151, 152, 170, 172, 177, 185, 187, 197, 200, 204, 209, 216, 247, 251, 253, 259, 262, 263, 285, 290, 294, 295, 297, 298, 301, 310, 317, 325, 328, 348, 393, 397, 398, 399, 402, 403, 404, 406, 408, 409, 414, 415, 416, 418, 420], "infer": [1, 144, 151, 169, 216, 249, 253, 262, 289, 294, 315, 360, 402, 404, 409, 411, 418], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 27, 38, 45, 54, 55, 59, 64, 80, 83, 99, 106, 107, 118, 119, 120, 121, 122, 125, 126, 131, 132, 138, 139, 140, 144, 145, 151, 152, 187, 188, 210, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 299, 300, 301, 304, 311, 331, 362, 369, 375, 391, 392, 393, 396, 399, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420], "dispatch": [1, 18, 19, 20, 21, 54, 64, 283, 293, 362, 402], "avail": [1, 2, 3, 4, 6, 21, 51, 56, 65, 66, 80, 83, 88, 99, 105, 106, 107, 120, 121, 130, 136, 137, 142, 143, 144, 146, 147, 148, 153, 154, 155, 156, 162, 165, 168, 186, 242, 274, 294, 298, 326, 362, 391, 392, 397, 402, 403, 404, 405, 406, 407, 414, 415, 416, 418, 421], "speed": [1, 2, 4, 8, 30, 122, 126, 144, 145, 151, 152, 398, 402, 403, 404, 405, 414, 415, 416, 418], "avoid": [1, 2, 3, 27, 38, 45, 54, 55, 59, 64, 93, 94, 114, 122, 126, 144, 145, 151, 152, 161, 210, 216, 218, 229, 280, 285, 297, 302, 310, 311, 325, 328, 331, 382, 404, 415], "oom": [1, 3, 50, 52, 57, 93, 94, 114], "choic": [1, 2, 82, 88, 144, 264, 397, 398, 402, 403, 408, 414, 415], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 58, 59, 61, 64, 65, 66, 69, 70, 80, 83, 84, 86, 87, 88, 91, 93, 94, 99, 101, 106, 107, 112, 114, 122, 123, 124, 126, 127, 135, 139, 144, 145, 146, 147, 151, 152, 155, 165, 166, 175, 178, 195, 209, 211, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 262, 264, 265, 266, 269, 271, 272, 273, 275, 276, 278, 282, 283, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 309, 310, 311, 324, 325, 326, 328, 329, 331, 333, 334, 342, 343, 344, 345, 346, 360, 376, 391, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 418, 421], "ie": [1, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 86, 98, 107, 122, 126, 130, 141, 144, 145, 151, 152, 162, 169, 182, 211, 216, 226, 249, 253, 289, 397, 398, 403, 415], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 99, 101, 106, 112, 114, 122, 126, 144, 145, 151, 152, 215, 216, 218, 230, 256, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 369, 395, 399, 402, 404, 405, 407, 409, 411, 414, 415, 417, 421], "while": [1, 2, 3, 7, 8, 23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 197, 210, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 311, 316, 324, 325, 328, 331, 397, 398, 402, 404, 405, 407, 409, 410, 414, 415, 416, 417, 418, 420], "wait": [1, 20, 21, 22, 153, 405, 416], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 56, 57, 59, 64, 65, 69, 80, 83, 84, 86, 87, 88, 89, 93, 94, 99, 101, 106, 107, 112, 114, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 161, 165, 166, 168, 169, 177, 188, 195, 197, 200, 201, 204, 206, 210, 218, 225, 232, 233, 247, 251, 276, 293, 294, 299, 300, 301, 308, 309, 311, 312, 313, 315, 316, 317, 322, 324, 328, 331, 333, 342, 349, 350, 360, 362, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 418, 421], "impact": [1, 2, 3, 86, 132, 175, 178, 229, 308, 310, 325, 328, 330, 403, 405, 414, 415], "memori": [1, 3, 8, 21, 27, 30, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 82, 83, 84, 86, 87, 88, 91, 93, 97, 122, 123, 126, 130, 144, 145, 151, 152, 169, 173, 192, 206, 209, 210, 212, 214, 216, 218, 251, 252, 297, 393, 395, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "manag": [1, 8, 338, 339, 342, 343, 344, 345, 375, 397, 408], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 90, 98, 99, 101, 104, 106, 107, 112, 122, 126, 131, 132, 144, 145, 146, 147, 151, 152, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 191, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 225, 226, 227, 228, 230, 231, 241, 242, 245, 246, 249, 253, 255, 256, 271, 272, 274, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 360, 362, 373, 374, 375, 377, 378, 379, 383, 398, 399, 402, 404, 405, 406, 408, 413, 414, 415, 416, 418, 420, 421], "control": [1, 3, 5, 8, 16, 23, 24, 33, 56, 65, 66, 99, 101, 106, 120, 121, 122, 126, 135, 144, 145, 146, 147, 151, 152, 177, 225, 235, 236, 237, 238, 249, 253, 255, 256, 271, 272, 276, 283, 297, 298, 299, 308, 310, 311, 325, 326, 328, 332, 342, 347, 355, 360, 397, 399, 402, 403, 404, 406, 407, 408, 414, 415, 416, 418, 420], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 101, 104, 105, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 169, 170, 175, 178, 183, 186, 187, 188, 192, 193, 195, 204, 206, 207, 209, 210, 212, 216, 218, 220, 241, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 268, 270, 281, 286, 287, 288, 289, 293, 294, 297, 298, 300, 308, 309, 310, 311, 313, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 337, 340, 342, 343, 344, 345, 360, 362, 370, 374, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418, 421], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 403, 415], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 41, 42, 43, 44, 49, 51, 52, 55, 56, 58, 59, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 99, 101, 104, 106, 122, 126, 144, 145, 146, 147, 151, 152, 165, 166, 169, 172, 175, 178, 180, 183, 190, 202, 210, 211, 216, 218, 229, 231, 249, 253, 260, 342, 344, 345, 375, 379, 398, 402, 403, 404, 405, 407, 408, 409, 411, 414, 415, 416, 418, 421], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 272, 293, 402, 409, 421], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 82, 104, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 263, 328, 333, 342, 343, 344, 345, 346, 361, 396, 397, 399, 402, 403, 404, 405, 407, 409, 410, 415, 418, 421], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 82, 86, 105, 106, 110, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 139, 140, 144, 145, 146, 147, 148, 151, 152, 162, 169, 175, 177, 178, 183, 187, 188, 209, 210, 216, 218, 232, 233, 248, 249, 252, 253, 254, 257, 258, 259, 260, 271, 272, 280, 289, 301, 309, 311, 324, 326, 329, 331, 333, 334, 398, 402, 403, 404, 406, 407, 409, 413, 414, 415, 417, 418, 421], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 104, 105, 106, 107, 112, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 190, 192, 193, 197, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 272, 274, 275, 276, 278, 279, 280, 281, 285, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 302, 304, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 337, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 389, 393, 398, 399, 402, 403, 404, 405, 407, 414, 417, 418, 420, 421], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 45, 54, 55, 59, 64, 69, 86, 122, 126, 144, 145, 151, 152, 170, 175, 178, 188, 193, 205, 210, 218, 225, 229, 249, 250, 253, 281, 316, 324, 333, 360, 375, 397, 403, 405, 414, 415, 416, 418], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 169, 175, 178, 188, 206, 207, 253, 270, 294, 298, 299, 300, 381, 391, 392, 397, 402, 403, 406, 407, 415, 416, 421], "choos": [1, 11, 135, 249, 253, 328, 395, 397, 398, 402, 403, 404, 414, 415, 418], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 45, 50, 52, 53, 54, 55, 57, 58, 59, 64, 69, 80, 82, 83, 84, 85, 86, 87, 88, 99, 118, 119, 122, 125, 126, 127, 131, 132, 138, 141, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 165, 186, 192, 212, 216, 218, 232, 233, 247, 249, 251, 253, 254, 291, 294, 295, 296, 307, 308, 309, 310, 311, 312, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 362, 379, 397, 398, 399, 402, 403, 404, 405, 408, 409, 413, 414, 415, 416, 418, 420, 421], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 382, 402, 404, 420], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 45, 80, 169, 183, 218, 227, 228, 245, 271, 272, 293, 361, 362, 364, 372, 375, 379, 382, 383, 402, 403, 404, 405, 407, 414, 415, 418, 420, 421], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 100, 101, 105, 106, 108, 110, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 153, 154, 165, 166, 169, 172, 173, 177, 180, 182, 185, 186, 188, 190, 191, 192, 200, 202, 206, 209, 210, 211, 212, 214, 215, 216, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 260, 261, 262, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 297, 298, 300, 301, 304, 310, 311, 325, 326, 328, 331, 333, 341, 342, 343, 344, 345, 360, 361, 364, 375, 398, 399, 403, 404, 405, 406, 407, 409, 410, 414, 415, 416, 418, 420, 421], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 249, 253, 382, 402, 403, 404, 405, 409, 411, 414, 415, 418, 420], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 37, 38, 41, 43, 45, 46, 54, 55, 56, 58, 59, 63, 64, 65, 80, 82, 83, 86, 99, 101, 104, 106, 107, 109, 112, 122, 123, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 162, 185, 192, 197, 200, 204, 205, 206, 207, 214, 216, 218, 227, 228, 242, 245, 247, 248, 249, 251, 253, 259, 260, 265, 273, 274, 282, 290, 291, 296, 300, 348, 351, 352, 353, 354, 356, 357, 358, 359, 362, 375, 376, 391, 392, 397, 398, 402, 403, 404, 405, 407, 408, 409, 411, 414, 415, 416, 417, 418, 420, 421], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 382, 402, 403, 411], "rand_step": [1, 2, 3, 35, 62, 120, 121, 122, 123, 125, 126, 127, 133, 134, 138, 139, 140, 144, 145, 151, 152, 185, 206, 216, 416, 420, 421], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 402], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 82, 84, 86, 87, 88, 402, 403, 404], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 45, 46, 63, 65, 80, 82, 83, 84, 86, 87, 88, 98, 99, 106, 107, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 193, 204, 209, 218, 230, 253, 256, 271, 272, 328, 342, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 370, 395, 398, 402, 403, 404, 405, 406, 409, 411, 416, 420, 421], "pad": [1, 2, 3, 23, 53, 67, 82, 84, 86, 87, 88, 169, 232, 233, 235, 236, 253, 257, 258, 259, 376], "along": [1, 2, 3, 14, 15, 23, 25, 50, 52, 57, 58, 60, 61, 70, 82, 84, 86, 87, 88, 94, 99, 101, 106, 107, 112, 114, 125, 127, 168, 169, 170, 188, 190, 193, 200, 208, 253, 254, 257, 258, 263, 290, 294, 297, 298, 311, 326, 333, 397, 402, 403, 405, 406, 408, 414, 415, 416, 418], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 85, 92, 98, 99, 102, 112, 113, 116, 117, 122, 126, 144, 145, 151, 152, 162, 165, 168, 169, 173, 192, 205, 206, 208, 209, 210, 212, 214, 218, 255, 297, 307, 318, 379, 396, 403, 404, 413, 414, 415, 416, 418, 421], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 107, 126, 165, 193, 204, 226, 228, 257, 258, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 399, 405], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 61, 62, 64, 65, 84, 120, 121, 122, 125, 126, 127, 144, 145, 151, 152, 155, 156, 183, 193, 216, 218, 242, 257, 258, 274, 280, 290, 291, 295, 296, 298, 337, 342, 376, 402, 404, 405, 406, 407, 408, 414, 415], "valid": [1, 2, 3, 23, 50, 52, 53, 70, 89, 112, 157, 165, 193, 210, 218, 227, 228, 232, 233, 254, 257, 258, 271, 272, 325, 342, 343, 344, 345, 376, 399, 421], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 375, 395, 397, 402, 403], "strategi": [1, 2, 16, 86, 104, 135, 162, 245, 258, 267, 397, 399, 402, 403, 407, 414, 415, 418], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 69, 71, 72, 73, 74, 75, 77, 101, 122, 126, 132, 138, 144, 145, 146, 147, 151, 152, 155, 157, 166, 168, 169, 179, 186, 204, 205, 206, 209, 210, 215, 216, 218, 227, 228, 232, 233, 257, 258, 259, 260, 270, 290, 294, 295, 298, 301, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 334, 340, 362, 379, 389, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 421], "organ": [1, 2, 416, 418], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 122, 125, 126, 127, 144, 145, 148, 151, 152, 166, 169, 175, 178, 179, 197, 204, 215, 216, 218, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 305, 313, 318, 333, 340, 360, 362, 397, 398, 403, 406, 407, 408, 409, 410, 411, 414, 416, 420], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 82, 83, 86, 101, 104, 118, 119, 122, 126, 131, 132, 135, 144, 145, 146, 147, 151, 152, 165, 169, 176, 177, 188, 195, 210, 211, 218, 242, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 261, 274, 324, 326, 328, 337, 342, 343, 344, 348, 349, 350, 375, 379, 381, 391, 392, 397, 398, 399, 402, 403, 404, 406, 408, 410, 413, 414, 415, 416, 417, 418, 421], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 45, 51, 54, 55, 59, 64, 65, 86, 98, 99, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 218, 261, 294, 308, 310, 323, 325, 326, 328, 362, 364, 379, 396, 397, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "tabl": [1, 27, 397, 403, 407], "summar": [1, 3, 416], "what": [1, 3, 8, 11, 33, 51, 69, 80, 99, 106, 122, 126, 144, 145, 151, 152, 179, 206, 220, 225, 295, 311, 322, 326, 333, 396, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 420, 421], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 45, 54, 55, 56, 59, 64, 69, 70, 99, 105, 106, 122, 126, 138, 141, 144, 145, 151, 152, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 220, 247, 248, 249, 251, 252, 253, 259, 260, 271, 272, 291, 297, 300, 308, 309, 310, 311, 312, 313, 315, 316, 317, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 383, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 409, 414, 415, 416, 418, 421], "n": [1, 2, 3, 6, 7, 25, 26, 27, 30, 34, 38, 43, 44, 45, 49, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 169, 177, 182, 211, 218, 247, 248, 251, 256, 268, 270, 271, 272, 293, 298, 308, 309, 317, 326, 341, 376, 397, 399, 403, 405, 407, 414, 415, 418, 421], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 50, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 93, 112, 247, 248, 251, 252, 259, 260, 262, 263, 273, 282, 301, 342, 343, 344, 345, 346, 348, 362, 397, 403, 417, 418], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 98, 99, 101, 105, 112, 122, 123, 125, 126, 139, 140, 144, 145, 151, 152, 162, 165, 169, 175, 178, 179, 192, 196, 197, 205, 207, 214, 216, 218, 220, 225, 247, 251, 271, 272, 290, 297, 308, 332, 342, 343, 344, 345, 346, 348, 362, 369, 379, 381, 393, 396, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "p": [1, 2, 4, 101, 104, 123, 149, 150, 231], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 45, 54, 55, 59, 64, 80, 82, 84, 86, 87, 88, 118, 119, 122, 126, 131, 132, 144, 145, 146, 147, 151, 152, 173, 175, 176, 178, 185, 192, 197, 201, 205, 206, 208, 209, 210, 212, 214, 215, 218, 247, 250, 251, 254, 259, 276, 280, 281, 297, 300, 307, 308, 309, 311, 312, 313, 315, 316, 317, 324, 326, 328, 329, 330, 331, 333, 334, 381, 391, 392, 393, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 421], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 98, 99, 101, 112, 122, 125, 126, 144, 145, 151, 152, 175, 176, 178, 185, 188, 208, 210, 220, 253, 254, 260, 261, 294, 297, 298, 300, 301, 307, 308, 309, 311, 312, 313, 315, 316, 317, 324, 326, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345, 362, 370, 381, 391, 392, 393, 395, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410, 414, 415, 416, 418, 421], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 69, 70, 71, 72, 73, 74, 75, 82, 84, 86, 87, 88, 93, 94, 99, 106, 107, 112, 114, 120, 121, 122, 125, 126, 127, 128, 144, 145, 151, 152, 155, 156, 162, 168, 169, 170, 182, 188, 190, 193, 200, 203, 208, 211, 216, 232, 233, 234, 239, 249, 251, 253, 254, 257, 258, 259, 262, 263, 269, 273, 277, 278, 279, 280, 283, 290, 293, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 393, 397, 402, 403, 404, 405, 406, 414, 415, 416, 418], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 101, 112, 118, 119, 122, 123, 126, 131, 132, 135, 141, 144, 145, 146, 147, 148, 151, 152, 161, 168, 170, 193, 200, 206, 207, 210, 216, 218, 225, 231, 243, 247, 251, 253, 271, 272, 293, 309, 310, 311, 317, 320, 324, 325, 326, 328, 329, 331, 333, 334, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 379, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "adapt": [1, 24, 163, 204, 229, 325, 402, 416], "equal": [1, 14, 15, 17, 27, 80, 99, 106, 107, 139, 142, 143, 144, 151, 187, 188, 232, 233, 247, 249, 251, 253, 254, 260, 332, 337, 370, 391, 392, 402, 404, 417], "introduc": [1, 2, 144, 151, 247, 249, 251, 253, 271, 272, 402, 414], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 82, 88, 93, 94, 101, 112, 114, 118, 119, 122, 125, 126, 127, 131, 132, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 165, 192, 206, 210, 212, 218, 220, 235, 249, 253, 278, 298, 299, 300, 362, 370, 382, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 418, 420, 421], "confus": [1, 25, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 86, 87, 88, 93, 94, 95, 101, 104, 105, 106, 107, 108, 110, 114, 122, 125, 126, 127, 138, 144, 145, 151, 152, 172, 176, 177, 194, 201, 208, 212, 216, 218, 245, 247, 249, 253, 263, 264, 289, 291, 296, 298, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 342, 360, 376, 391, 392, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 420, 421], "better": [1, 3, 8, 9, 14, 15, 23, 249, 253, 398, 404, 406, 416, 420], "consist": [1, 2, 3, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 83, 86, 122, 126, 144, 145, 151, 152, 186, 215, 218, 233, 254, 402, 403, 404, 416, 417, 421], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 86, 122, 126, 136, 137, 144, 145, 151, 152, 210, 294, 298, 402, 404, 406, 407, 409, 414, 415, 416, 421], "keep": [1, 3, 4, 7, 8, 15, 51, 56, 65, 66, 101, 105, 112, 144, 151, 188, 192, 214, 216, 218, 225, 271, 272, 372, 379, 402, 403, 404, 405, 409, 410, 411, 415, 416, 418, 420, 421], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 80, 83, 192, 214, 309, 312, 315, 317, 329, 331, 333, 334, 398, 402, 403, 407, 408, 414, 415, 418, 421], "interchang": [1, 259, 260, 404, 406, 410, 417, 418], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 105, 106, 107, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 177, 187, 198, 210, 216, 218, 220, 232, 233, 241, 247, 249, 253, 254, 259, 260, 291, 294, 298, 308, 310, 311, 312, 315, 316, 317, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 337, 342, 375, 379, 398, 402, 403, 405, 409, 414, 415, 416, 418, 421], "wherea": [1, 2, 22, 86, 118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 177, 218, 326, 399, 410], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 69, 71, 72, 73, 74, 75, 83, 86, 88, 98, 99, 122, 126, 138, 144, 145, 151, 152, 192, 206, 210, 214, 216, 218, 245, 246, 249, 251, 253, 257, 258, 271, 272, 294, 298, 311, 313, 316, 317, 331, 340, 342, 343, 344, 345, 346, 402, 403, 404, 406, 408, 409, 410, 414, 415, 416, 417], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 80, 86, 99, 106, 112, 122, 126, 144, 145, 151, 152, 193, 299, 300, 370, 379, 397, 402, 403, 404, 409, 413, 420, 421], "doesn": [1, 4, 12, 112, 139, 175, 178, 406], "understood": [1, 3, 402], "serv": [1, 18, 20, 21, 128, 418, 421], "basi": [1, 112, 259, 418], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 31, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 82, 86, 88, 93, 105, 107, 112, 118, 119, 122, 123, 126, 130, 131, 132, 144, 145, 151, 152, 169, 186, 192, 195, 212, 215, 216, 218, 220, 230, 253, 259, 260, 261, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 362, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "anoth": [1, 2, 3, 8, 64, 69, 86, 99, 106, 122, 125, 126, 127, 130, 144, 145, 151, 152, 166, 175, 176, 178, 206, 209, 254, 294, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 397, 398, 402, 404, 405, 407, 408, 413, 414, 415, 416, 421], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 82, 84, 86, 98, 99, 106, 107, 122, 126, 130, 139, 144, 145, 148, 151, 152, 166, 173, 192, 206, 209, 210, 212, 214, 218, 249, 253, 254, 261, 283, 297, 299, 300, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 360, 362, 364, 397, 399, 402, 403, 404, 405, 406, 407, 408, 410, 414, 415, 416, 418, 421], "method": [1, 2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 106, 107, 108, 109, 110, 112, 114, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 165, 166, 169, 173, 175, 176, 179, 180, 182, 186, 188, 192, 194, 195, 196, 197, 201, 204, 206, 209, 210, 212, 214, 218, 219, 227, 230, 231, 245, 249, 253, 259, 260, 261, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 305, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 322, 324, 326, 328, 329, 330, 331, 333, 334, 340, 346, 360, 361, 390, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 414, 416, 418, 421], "op": [1, 25, 26, 28, 29, 30, 34, 41, 42, 43, 44, 47, 48, 49, 69, 71, 72, 73, 74, 75, 187, 215, 227, 228, 245, 362, 381], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 88, 98, 99, 107, 112, 122, 126, 144, 145, 146, 147, 148, 151, 152, 218, 220, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 290, 291, 293, 295, 296, 301, 304, 360, 362, 398, 402, 403, 404, 405, 406, 407, 408, 414, 416, 417, 418, 420, 421], "goal": [1, 3, 4, 80, 81, 82, 83, 84, 85, 86, 87, 88, 205, 402, 403, 404, 405, 415, 416], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 403], "explicitli": [1, 2, 3, 4, 30, 90, 91, 97, 165, 270, 294, 398, 403, 405, 409, 414, 415, 418], "do": [1, 2, 3, 4, 7, 88, 122, 126, 144, 145, 151, 152, 155, 156, 162, 193, 215, 216, 225, 249, 253, 260, 262, 287, 326, 342, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 420, 421], "deepcopi": [1, 261, 326, 414], "structur": [1, 3, 7, 50, 51, 52, 56, 57, 58, 65, 66, 69, 70, 112, 122, 126, 144, 145, 151, 152, 175, 178, 226, 259, 271, 272, 308, 328, 342, 343, 344, 345, 346, 395, 398, 402, 404, 405, 406, 409, 414, 415, 416, 417], "place": [1, 2, 3, 24, 27, 31, 32, 33, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 93, 94, 101, 104, 114, 122, 123, 126, 144, 145, 151, 152, 155, 156, 165, 173, 179, 192, 206, 209, 210, 212, 214, 215, 216, 218, 226, 261, 289, 293, 297, 376, 381, 382, 398, 403, 404, 407, 410, 414, 415, 416, 418], "instanti": [1, 2, 3, 14, 15, 21, 50, 51, 52, 56, 57, 65, 66, 69, 98, 99, 130, 165, 209, 260, 360, 402, 403, 407, 408, 410, 414, 415, 416, 418, 421], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 120, 121, 122, 123, 125, 126, 127, 128, 136, 137, 138, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 162, 168, 169, 172, 173, 175, 176, 178, 181, 186, 187, 188, 192, 200, 202, 206, 207, 209, 210, 212, 214, 216, 218, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 297, 298, 300, 301, 304, 305, 308, 309, 311, 320, 324, 326, 328, 329, 330, 331, 333, 334, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 374, 379, 382, 391, 392, 393, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 420, 421], "graph": [1, 3, 4, 8, 54, 64, 118, 119, 131, 132, 338, 339, 402, 416], "reli": [1, 3, 11, 23, 55, 59, 206, 247, 248, 249, 251, 252, 253, 308, 328, 398, 402, 404, 407, 409, 416, 421], "third": [1, 188, 291, 414, 415], "parti": 1, "try": [1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 50, 52, 57, 61, 403, 404, 405, 408, 409, 414, 415, 416, 420, 421], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 138, 144, 145, 151, 152, 169, 186, 308, 310, 325, 326, 328, 330, 398, 402, 403, 405, 414, 415, 416], "chart": 1, "show": [1, 2, 3, 11, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 260, 362, 397, 402, 404, 405, 414, 415, 416, 418, 420], "decis": [1, 2, 3, 234, 269, 289, 314, 327, 405, 406, 407, 414, 415, 418, 421], "simplest": [1, 54, 64, 112, 301, 402, 404, 405, 407, 414, 415, 418, 421], "scenario": [1, 2, 136, 137, 144, 155, 156, 360, 402, 407, 414, 415, 416], "transit": [1, 27, 38, 45, 54, 55, 59, 64, 82, 86, 99, 107, 112, 122, 126, 144, 145, 151, 152, 218, 229, 303, 402, 405, 406, 407, 409, 414, 416, 418], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 58, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 100, 101, 104, 105, 106, 107, 110, 112, 114, 122, 126, 138, 141, 144, 145, 151, 152, 162, 168, 169, 193, 197, 221, 224, 227, 228, 230, 240, 245, 246, 250, 256, 257, 258, 267, 269, 270, 271, 272, 275, 280, 281, 285, 290, 291, 292, 294, 295, 296, 297, 298, 308, 309, 310, 311, 312, 313, 315, 325, 327, 328, 333, 334, 370, 376, 379, 382, 395, 397, 402, 403, 404, 405, 406, 407, 409, 411, 414, 415, 417, 420, 421], "attent": [1, 2, 8, 402, 405, 421], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 122, 126, 138, 142, 143, 144, 145, 151, 152, 153, 154, 173, 177, 188, 192, 206, 209, 210, 212, 214, 216, 218, 225, 230, 231, 242, 243, 245, 247, 249, 251, 253, 256, 261, 272, 274, 278, 285, 290, 291, 293, 296, 297, 298, 299, 300, 302, 307, 312, 313, 315, 326, 341, 342, 343, 344, 345, 346, 348, 371, 375, 389, 397, 399, 402, 403, 404, 406, 407, 408, 409, 410, 415, 416, 421], "built": [1, 2, 3, 5, 7, 101, 118, 119, 125, 131, 132, 141, 142, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 335, 340, 387, 389, 390, 393, 402, 403, 404, 405, 408, 410, 416, 418, 421], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 112, 166, 182, 376, 395, 405, 415], "suffici": [1, 3, 4, 402], "preprocess": [1, 2, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 403], "popul": [1, 2, 3, 14, 15, 16, 51, 56, 63, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 185, 206, 261, 326, 402, 404, 405, 407, 409, 416, 418], "replaybuff": [1, 2, 14, 15, 16, 35, 51, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 101, 106, 116, 169, 193, 197, 218, 313, 318, 340, 387, 389, 395, 404, 409, 411, 414, 415, 417, 418, 420], "lazytensorstorag": [1, 2, 51, 56, 64, 65, 66, 98, 112, 197, 218, 404, 411, 414, 415, 418], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 54, 56, 64, 112, 122, 123, 126, 144, 145, 151, 152, 161, 166, 186, 206, 218, 231, 283, 290, 293, 294, 295, 319, 321, 322, 333, 342, 345, 353, 354, 358, 359, 360, 389, 398, 402, 414, 415, 418, 420, 421], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 86, 106, 112, 166, 249, 253, 254, 270, 360, 404, 414, 415], "extend": [1, 2, 8, 35, 51, 54, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 98, 99, 101, 102, 106, 107, 110, 112, 113, 116, 117, 168, 197, 218, 229, 326, 376, 398, 399, 402, 403, 404, 405, 409, 411, 414, 415, 417, 418, 420], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 162, 168, 418], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 52, 56, 57, 65, 66, 112, 130, 261, 409, 414, 415], "achiev": [1, 2, 3, 4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 130, 144, 145, 151, 152, 205, 218, 226, 231, 294, 376, 399, 402, 403, 404, 405, 414, 415, 416, 418, 421], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 101, 112, 122, 123, 126, 130, 144, 145, 146, 151, 152, 155, 156, 166, 169, 192, 209, 210, 212, 215, 216, 218, 223, 225, 232, 233, 235, 236, 237, 238, 239, 244, 249, 253, 254, 255, 259, 260, 289, 298, 305, 311, 313, 318, 329, 331, 340, 362, 376, 383, 384, 385, 389, 391, 392, 397, 402, 403, 404, 405, 407, 410, 414, 415, 416, 417, 418, 420, 421], "multidimension": [1, 2, 65, 98, 99, 418], "slicesampl": [1, 2, 80, 99, 418], "sampler": [1, 2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 114, 193, 270, 313, 318, 340, 402, 404, 414, 415, 418], "One": [1, 2, 4, 8, 25, 26, 30, 34, 43, 44, 49, 70, 112, 118, 119, 144, 151, 169, 197, 212, 227, 228, 267, 297, 301, 332, 337, 366, 402, 403, 418, 421], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 101, 106, 107, 108, 109, 110, 112, 114, 118, 122, 123, 126, 131, 142, 144, 145, 146, 147, 148, 151, 152, 153, 155, 162, 165, 166, 169, 172, 179, 183, 186, 188, 190, 201, 205, 206, 207, 210, 211, 216, 218, 232, 233, 242, 249, 253, 254, 257, 258, 259, 260, 274, 285, 290, 291, 293, 294, 295, 296, 297, 298, 301, 302, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 332, 333, 334, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 398, 402, 403, 404, 405, 407, 413, 416, 418, 420], "ensur": [1, 2, 3, 27, 38, 45, 51, 54, 55, 59, 64, 65, 98, 99, 105, 122, 126, 144, 145, 151, 152, 162, 169, 192, 204, 210, 212, 216, 218, 249, 253, 290, 397, 403, 404, 416, 418], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 101, 112, 114, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 168, 170, 175, 178, 179, 180, 186, 188, 190, 194, 195, 197, 201, 204, 206, 208, 216, 217, 218, 220, 223, 225, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 244, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 264, 267, 268, 269, 270, 271, 273, 274, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 301, 302, 305, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 370, 376, 379, 389, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420, 421], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 80, 250, 280, 281, 307, 396, 402, 403, 404, 405, 408, 414, 415, 417, 421], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 52, 54, 55, 59, 64, 69, 108, 112, 122, 126, 130, 135, 144, 145, 146, 147, 151, 152, 169, 172, 182, 192, 195, 207, 210, 214, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 262, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 294, 295, 296, 297, 301, 304, 307, 317, 330, 331, 341, 346, 362, 379, 393, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 418, 420, 421], "dimension": [1, 51, 55, 56, 64, 65, 66, 177, 249, 253, 342, 347, 355, 415], "num_slic": [1, 2, 80, 86, 99, 106, 107, 418], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 43, 44, 45, 51, 54, 56, 58, 59, 61, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 106, 107, 114, 118, 119, 120, 121, 122, 126, 131, 132, 133, 134, 135, 138, 140, 144, 145, 149, 150, 151, 152, 162, 163, 165, 166, 169, 179, 197, 204, 205, 216, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 256, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 302, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 360, 361, 397, 401, 402, 403, 404, 405, 407, 409, 410, 414, 415, 416, 417, 418, 419, 420, 421], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 62, 166, 197, 405, 409, 418], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 379, 382, 389, 399, 402, 403, 404, 405, 409, 411, 414, 415, 418, 420], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 169, 170, 190, 203, 206, 211, 216, 252, 278, 283, 293, 393, 403, 404, 414, 416, 418], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 93, 94, 98, 99, 112, 114, 122, 126, 144, 145, 151, 152, 218, 293], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 112, 122, 126, 139, 145, 146, 147, 148, 151, 152, 360, 390, 395, 402, 403, 404, 406, 413, 420, 421], "make_env": [1, 3, 144, 151, 156, 216, 360, 384, 385, 402, 403, 420, 421], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 98, 104, 122, 126, 144, 145, 151, 152, 210, 229, 241, 274, 291, 295, 296, 297, 298, 318, 328, 381, 395, 399, 402, 403, 406, 407, 411, 418, 421], "behav": [1, 3, 128, 138, 247, 251, 267, 316, 324, 326, 417], "iif": 1, "accordingli": [1, 2, 99, 204, 205, 251, 295, 405], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 107, 112, 114, 120, 121, 122, 125, 126, 127, 128, 129, 135, 136, 137, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 163, 165, 166, 169, 173, 177, 179, 180, 186, 188, 190, 192, 194, 195, 197, 200, 201, 204, 205, 206, 208, 209, 210, 212, 214, 218, 219, 223, 229, 230, 231, 232, 233, 235, 236, 237, 239, 242, 244, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 261, 264, 267, 270, 273, 283, 285, 286, 287, 288, 290, 291, 294, 296, 297, 300, 301, 302, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 348, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 378, 397, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 414, 415, 416, 417, 418, 419, 420, 421], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 86, 98, 112, 165, 179, 220, 290, 297, 407, 408, 410, 414, 415], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 99, 101, 107, 122, 126, 128, 139, 142, 143, 144, 145, 151, 152, 165, 166, 169, 193, 205, 206, 207, 209, 210, 218, 221, 225, 243, 271, 272, 276, 280, 293, 308, 310, 311, 318, 325, 328, 330, 331, 365, 399, 402, 403, 404, 405, 408, 414, 415, 416, 418, 420, 421], "fulli": [1, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 248, 252, 403, 408, 416, 418], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 101, 102, 105, 107, 108, 110, 112, 113, 114, 116, 117, 122, 123, 126, 139, 144, 145, 146, 147, 151, 152, 153, 155, 156, 163, 165, 182, 192, 193, 197, 210, 212, 216, 218, 220, 226, 231, 232, 233, 239, 254, 263, 270, 289, 293, 297, 298, 299, 300, 308, 309, 311, 312, 313, 315, 316, 317, 324, 326, 328, 329, 330, 331, 333, 334, 342, 344, 345, 360, 367, 379, 396, 398, 402, 403, 404, 407, 408, 414, 415, 416, 418, 420, 421], "consecut": [1, 3, 80, 105, 130, 253, 271, 272, 362, 405, 406, 409, 415, 418, 421], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 86, 122, 123, 125, 126, 139, 140, 144, 145, 151, 152, 192, 214, 218, 308, 379, 393, 403, 404, 406, 407], "therebi": [1, 24, 360, 398, 402, 403], "interrupt": [1, 2, 126, 293, 348], "These": [1, 2, 7, 58, 83, 88, 115, 155, 192, 214, 397, 398, 402, 404, 414, 415, 416, 418, 421], "tool": [1, 2, 3, 5, 405, 406, 414, 416, 418, 421], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 122, 125, 126, 144, 145, 151, 152, 158, 161, 399, 402, 404, 405, 406, 409, 410, 416], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 395], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 395], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 56, 65, 66, 80, 88, 101, 123, 124, 144, 151, 216, 402, 403, 404, 405, 414, 415, 416, 417, 421], "synchron": [1, 14, 19, 21, 50, 52, 57, 139, 391, 392, 403, 404, 414], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 139, 144, 145, 151, 152, 175, 178, 205, 210, 216, 218, 240, 249, 250, 253, 258, 267, 279, 280, 281, 294, 298, 326, 360, 375, 397, 398, 402, 403, 405, 414, 415, 420, 421], "find": [1, 4, 6, 7, 18, 19, 20, 51, 53, 67, 106, 107, 227, 228, 251, 271, 272, 373, 377, 402, 403, 407, 408, 414, 415], "folder": [1, 2, 50, 52, 57, 155, 403], "variou": [1, 2, 3, 249, 253, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 335, 340, 362, 391, 392, 402, 403, 404, 406, 407, 408, 410, 414, 415, 418, 421], "machin": [1, 2, 7, 18, 19, 20, 45, 85, 130, 414, 415, 420], "wonder": 1, "why": [1, 2, 3, 225, 414, 416, 421], "instead": [1, 4, 7, 8, 12, 14, 15, 16, 25, 27, 38, 45, 54, 55, 59, 64, 68, 86, 122, 126, 144, 145, 151, 152, 182, 206, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 308, 310, 311, 313, 316, 317, 318, 324, 325, 328, 329, 330, 331, 340, 342, 346, 350, 393, 397, 398, 406, 407, 411, 416, 418, 421], "lower": [1, 2, 3, 21, 27, 28, 172, 216, 275, 276, 301, 404, 414, 416], "io": [1, 11, 80, 86, 131, 132, 139, 142, 143, 153, 154, 251, 252], "footprint": [1, 2, 418], "commun": [1, 2, 3, 144, 151, 396, 404, 421], "yet": [1, 118, 119, 131, 417], "plai": [1, 3, 146, 147, 152, 169, 403, 404, 408, 418, 421], "role": [1, 3, 137, 403, 408, 421], "opposit": [1, 414], "direct": [1, 2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 247, 251, 326, 403, 408], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 87, 88, 139, 342, 343, 344, 345, 405, 414, 415], "share": [1, 3, 6, 8, 23, 50, 52, 56, 57, 65, 66, 69, 91, 93, 94, 95, 99, 101, 106, 108, 110, 114, 123, 144, 151, 216, 249, 253, 259, 260, 286, 287, 288, 308, 309, 310, 311, 312, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 393, 395, 397, 404, 405, 411, 413, 414, 415, 420, 421], "among": [1, 3, 146, 147, 414, 415], "prohibit": [1, 3, 112], "slow": [1, 3, 4, 11, 50, 52, 57], "compar": [1, 3, 86, 112, 309, 311, 324, 329, 331, 333, 334, 375, 398, 402, 404, 407, 408, 414, 415, 418, 421], "gpu": [1, 7, 8, 27, 38, 45, 54, 55, 59, 64, 93, 94, 114, 122, 126, 127, 130, 144, 145, 151, 152, 218, 402, 404, 405, 414, 415, 421], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 65, 69, 80, 98, 99, 106, 112, 118, 119, 126, 152, 165, 188, 216, 227, 228, 229, 230, 240, 243, 247, 249, 251, 253, 256, 269, 270, 279, 280, 294, 298, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 397, 398, 402, 403, 404, 407, 414, 415, 416, 418, 420, 421], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 104, 106, 107, 110, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 165, 166, 170, 172, 173, 176, 192, 200, 201, 206, 208, 209, 210, 211, 212, 214, 218, 227, 228, 229, 231, 245, 246, 249, 253, 257, 258, 259, 260, 271, 272, 285, 289, 290, 293, 294, 295, 297, 298, 301, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 334, 336, 340, 342, 343, 344, 345, 346, 350, 360, 369, 390, 402, 403, 404, 407, 410, 414, 415, 418, 421], "build": [1, 3, 7, 23, 27, 31, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 127, 128, 131, 132, 136, 137, 139, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 197, 216, 218, 230, 249, 253, 256, 292, 294, 298, 379, 386, 387, 388, 397, 399, 404, 405, 407, 408, 409, 410, 414, 415, 416, 417, 420, 421], "mani": [1, 2, 3, 4, 56, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 139, 140, 148, 308, 310, 317, 325, 328, 397, 402, 403, 404, 406, 407, 409, 411, 414, 415, 416, 418, 421], "eg": [1, 2, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 93, 94, 95, 108, 110, 114, 120, 121, 122, 125, 126, 127, 128, 130, 144, 145, 148, 151, 152, 177, 204, 210, 259, 289, 362], "gymnasium": [1, 2, 3, 5, 12, 64, 122, 125, 126, 127, 133, 134, 144, 145, 151, 152, 158, 161, 180, 201, 204, 215, 403, 404, 416, 420], "warn": [1, 3, 55, 59, 227, 228, 245, 246, 271, 272, 403], "quickli": [1, 3, 403, 414, 415, 421], "becom": [1, 3, 4, 21, 247, 251, 414, 415, 421], "quit": [1, 3, 11, 80, 122, 126, 144, 145, 151, 152, 397, 402, 403, 404, 407, 414, 415, 421], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 61, 120, 121, 122, 125, 126, 127, 128, 136, 137, 144, 145, 146, 147, 148, 151, 152, 155, 156, 283, 298, 326, 375, 393, 398, 402, 414, 417, 418, 421], "filter": [1, 2, 3, 4, 70, 99, 106, 107, 308, 309, 311, 312, 316, 317, 324, 328, 329, 331, 406], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 82, 86, 91, 99, 106, 107, 122, 126, 144, 145, 146, 147, 151, 152, 206, 218, 220, 247, 248, 251, 257, 258, 261, 262, 263, 272, 285, 289, 290, 291, 294, 295, 296, 297, 298, 326, 338, 339, 398, 399, 402, 403, 404, 405, 406, 407, 409, 414, 415, 416, 418, 420, 421], "still": [1, 2, 3, 9, 54, 64, 71, 86, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 228, 325, 326, 402, 403, 405, 413, 416, 418, 421], "wish": [1, 3, 11, 14, 15, 17, 86, 161, 408, 418], "displai": [1, 3, 7, 122, 126, 144, 145, 151, 152, 379, 399, 402, 403, 415, 416], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 101, 104, 105, 106, 107, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 170, 173, 175, 178, 179, 180, 182, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 216, 218, 220, 225, 226, 228, 229, 230, 231, 232, 233, 235, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 271, 272, 273, 274, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 337, 340, 342, 343, 344, 345, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 369, 372, 373, 375, 376, 377, 379, 393, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "central": [2, 259, 260, 261, 402, 403, 406, 414, 415, 418], "part": [2, 3, 4, 8, 27, 38, 45, 54, 55, 58, 59, 64, 80, 83, 84, 86, 87, 88, 118, 122, 126, 131, 142, 144, 145, 151, 152, 168, 188, 197, 200, 218, 225, 249, 253, 302, 370, 393, 402, 404, 405, 411, 414, 416, 421], "algorithm": [2, 3, 8, 9, 138, 162, 308, 328, 329, 331, 395, 398, 399, 402, 403, 404, 405, 407, 408, 409, 410, 414, 415, 417, 418, 420], "implement": [2, 3, 9, 12, 14, 15, 16, 27, 38, 45, 54, 55, 59, 64, 68, 96, 108, 109, 122, 126, 138, 139, 144, 145, 151, 152, 166, 173, 175, 176, 180, 183, 186, 194, 195, 201, 204, 209, 210, 216, 218, 232, 247, 248, 249, 250, 251, 252, 253, 279, 280, 281, 308, 309, 311, 314, 315, 316, 322, 324, 326, 327, 328, 330, 331, 333, 360, 370, 384, 397, 399, 402, 403, 404, 405, 414, 415, 416, 420], "wide": [2, 3, 5], "give": [2, 3, 7, 65, 83, 122, 126, 138, 144, 145, 151, 152, 169, 396, 398, 402, 403, 414, 415, 416, 417, 420], "abil": [2, 326, 416, 418], "panel": [2, 404], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 82, 88, 91, 112, 166, 169, 179, 249, 253, 311, 316, 324, 331, 335, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 45, 54, 55, 59, 64, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 108, 110, 114, 122, 126, 138, 142, 143, 144, 145, 151, 152, 205, 210, 216, 218, 249, 253, 308, 311, 326, 331, 382, 397, 399, 402, 403, 404, 405, 414, 415, 416, 418, 421], "almost": [2, 405], "physic": [2, 6, 7, 91, 144, 145, 148, 399, 402, 414, 415, 416], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 80, 93, 94, 95, 108, 110, 114, 122, 125, 126, 127, 144, 145, 151, 152, 218, 261, 271, 272, 313, 326, 340, 402, 403, 405, 414, 415, 417, 418], "liststorag": [2, 51, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 418], "veri": [2, 3, 131, 132, 403, 406, 409, 414, 416, 418, 420, 421], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 80, 86, 99, 101, 104, 106, 107, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 165, 166, 195, 218, 225, 254, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 335, 337, 340, 397, 399, 402, 404, 405, 406, 407, 408, 414, 415, 416, 418, 421], "complex": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 402, 403, 406, 407], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 175, 177, 178, 179, 180, 182, 185, 188, 190, 192, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 306, 308, 309, 311, 312, 313, 315, 316, 317, 320, 321, 324, 326, 328, 329, 330, 331, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 397, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 420, 421], "contigu": [2, 3, 8, 28, 31, 38, 71, 83, 86, 87, 122, 126, 144, 145, 151, 152, 223, 404, 405, 414, 415, 416, 418, 420, 421], "tensorstorag": [2, 56, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 112, 115, 409, 418], "lazymemmapstorag": [2, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 168, 169, 402, 403, 405, 409, 414, 417, 418], "citizen": 2, "pytre": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 115], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 99, 101, 106, 110, 112, 120, 121, 122, 125, 126, 127, 144, 145, 151, 152, 186, 188, 218, 231, 235, 241, 242, 249, 252, 253, 254, 261, 264, 269, 273, 274, 290, 291, 295, 296, 301, 308, 309, 311, 312, 316, 317, 319, 324, 326, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345, 373, 375, 377, 386, 418], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 99, 104, 106, 107, 122, 125, 126, 127, 136, 137, 144, 145, 151, 152, 155, 156, 206, 210, 218, 294, 298, 311, 331, 333, 375, 391, 392, 393, 399, 403, 404, 406, 408, 414, 416, 421], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 45, 46, 50, 52, 54, 55, 56, 57, 59, 61, 62, 63, 64, 76, 93, 94, 97, 101, 114, 122, 125, 126, 127, 144, 145, 151, 152, 169, 204, 207, 218, 226, 293, 342, 343, 344, 345, 346, 360, 399, 403, 404, 415, 416, 418, 420], "construct": [2, 3, 5, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 101, 122, 125, 126, 144, 145, 146, 151, 152, 175, 178, 218, 220, 249, 253, 276, 298, 379, 397, 403, 404, 405, 407, 414, 416, 418, 421], "ram": [2, 125, 127, 410, 418, 421], "prealloc": [2, 3, 144, 151, 416], "ve": [2, 58, 402, 405, 411], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 101, 105, 122, 126, 130, 136, 137, 144, 145, 151, 152, 186, 204, 205, 209, 228, 246, 247, 251, 261, 272, 293, 308, 326, 328, 330, 402, 403, 404, 405, 413, 414, 415, 416, 418, 421], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 87, 88, 112, 120, 121, 122, 126, 130, 144, 145, 146, 147, 151, 152, 169, 261, 369, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 411, 414, 415, 416, 418, 420, 421], "start": [2, 3, 4, 5, 14, 21, 24, 69, 70, 80, 88, 99, 106, 107, 123, 126, 135, 144, 151, 174, 225, 374, 401, 402, 403, 412, 415, 416, 418, 419, 421], "replay_buff": [2, 8, 14, 15, 16, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 376, 389, 402, 403, 404, 409, 414, 415, 418], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 35, 45, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 134, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 162, 163, 165, 166, 168, 169, 172, 179, 180, 185, 186, 188, 190, 192, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 209, 214, 216, 218, 219, 223, 225, 226, 230, 231, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 261, 264, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 301, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 360, 362, 372, 375, 389, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "rb": [2, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 106, 107, 112, 169, 197, 218, 403, 405, 409, 411, 415, 417, 418, 420], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 41, 45, 51, 56, 58, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 101, 106, 107, 112, 114, 118, 119, 122, 123, 126, 131, 132, 138, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 162, 163, 166, 168, 169, 205, 207, 208, 218, 230, 231, 234, 235, 237, 239, 241, 245, 246, 247, 248, 249, 251, 252, 253, 256, 269, 271, 272, 283, 294, 301, 305, 309, 313, 315, 322, 328, 329, 330, 334, 340, 342, 343, 344, 345, 348, 362, 370, 399, 402, 403, 404, 405, 406, 407, 411, 414, 415, 416, 418, 420, 421], "add": [2, 3, 4, 6, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 98, 101, 102, 112, 113, 116, 117, 122, 126, 144, 145, 151, 152, 169, 186, 210, 218, 249, 253, 262, 292, 308, 374, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 418, 420], "string": [2, 18, 19, 20, 27, 38, 45, 53, 54, 55, 59, 64, 70, 89, 122, 126, 136, 142, 144, 145, 151, 152, 161, 192, 204, 214, 218, 249, 253, 290, 293, 294, 295, 307, 361, 378, 398, 402, 404, 405, 418], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 43, 51, 56, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 101, 106, 107, 112, 114, 141, 144, 151, 162, 169, 193, 202, 205, 206, 227, 228, 232, 233, 247, 248, 251, 285, 290, 293, 297, 298, 302, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 370, 398, 402, 404, 407, 409, 418, 421], "30": [2, 3, 56, 64, 84, 165, 187, 275, 276, 360, 364, 401, 403, 404, 409, 414, 415, 416, 418, 419], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 106, 107, 108, 110, 112, 114, 122, 123, 125, 126, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 182, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 271, 272, 273, 274, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 373, 374, 375, 376, 377, 378, 379, 383, 384, 385, 389, 391, 392, 393, 397, 399, 402, 403, 405, 406, 407, 408, 409, 410, 413, 416, 418, 420, 421], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 106, 107, 108, 112, 113, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 155, 156, 162, 164, 165, 166, 168, 169, 170, 171, 173, 174, 177, 182, 183, 187, 188, 190, 192, 193, 196, 203, 204, 207, 210, 211, 212, 214, 218, 220, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 289, 290, 291, 293, 294, 296, 297, 298, 308, 309, 310, 317, 319, 320, 325, 326, 327, 328, 329, 333, 334, 342, 344, 345, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 370, 371, 372, 375, 376, 379, 381, 387, 391, 392, 393, 416, 418], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 45, 50, 52, 53, 54, 55, 57, 59, 61, 62, 64, 70, 77, 82, 83, 84, 85, 87, 88, 106, 107, 120, 121, 122, 125, 126, 127, 128, 136, 137, 144, 145, 148, 151, 152, 155, 156, 165, 169, 171, 172, 174, 175, 176, 178, 179, 182, 185, 188, 190, 192, 195, 197, 200, 202, 204, 205, 206, 211, 214, 216, 218, 225, 226, 249, 257, 258, 289, 290, 293, 295, 296, 309, 311, 331, 342, 343, 344, 345, 397, 402, 404, 405, 406, 407, 408, 410, 414, 415, 416, 417, 418, 421], "onto": [2, 8, 50, 52, 57, 176, 223, 227, 228, 271, 272, 285, 290, 291, 294, 295, 296, 297, 298, 405, 416], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 98, 99, 101, 102, 104, 105, 106, 107, 112, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 155, 156, 162, 169, 170, 204, 205, 206, 207, 210, 218, 226, 232, 233, 254, 257, 258, 260, 271, 272, 293, 295, 296, 304, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 383, 393, 396, 399, 404, 405, 409, 410, 411, 416, 418, 421], "without": [2, 3, 7, 9, 14, 15, 16, 27, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 69, 80, 82, 86, 106, 107, 122, 126, 144, 145, 151, 152, 155, 156, 163, 165, 175, 178, 208, 218, 247, 248, 251, 252, 287, 288, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 341, 342, 343, 344, 345, 346, 389, 396, 397, 402, 403, 404, 406, 407, 408, 409, 414, 415, 416, 418, 421], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 51, 52, 54, 55, 57, 58, 59, 64, 65, 98, 99, 122, 126, 138, 144, 145, 146, 147, 151, 152, 153, 154, 163, 165, 166, 175, 177, 178, 194, 204, 205, 210, 213, 216, 218, 226, 227, 228, 230, 245, 246, 247, 249, 253, 256, 261, 271, 272, 294, 295, 296, 297, 298, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 340, 342, 343, 344, 345, 346, 375, 379, 381, 384, 385, 388, 389, 399, 403, 404, 405, 408, 411, 414, 415, 416, 418, 420, 421], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 58, 60, 61, 67, 69, 70, 71, 72, 73, 74, 75, 80, 86, 89, 99, 106, 107, 110, 122, 126, 131, 132, 144, 145, 151, 152, 162, 193, 216, 230, 232, 233, 235, 237, 239, 247, 251, 254, 256, 259, 260, 285, 297, 302, 370, 376, 402, 404, 405, 409, 411, 416, 418, 421], "cursor": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "afterward": [2, 27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 414, 421], "tell": [2, 3, 4, 7, 146, 147, 402, 405, 409, 414, 415], "our": [2, 3, 7, 8, 11, 18, 56, 169, 362, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 420], "far": [2, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 250, 280, 281, 411, 416, 421], "restrict": [2, 3, 403, 417, 418, 421], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 122, 126, 141, 144, 145, 151, 152, 175, 178, 192, 194, 207, 210, 212, 214, 218, 223, 366, 402, 416], "64": [2, 3, 50, 52, 57, 80, 86, 101, 169, 196, 235, 236, 244, 249, 253, 260, 261, 273, 340, 402, 403, 404, 405, 407, 411, 413, 416, 418, 420, 421], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 106, 107, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 166, 167, 173, 175, 176, 177, 178, 179, 180, 186, 188, 190, 192, 194, 195, 197, 201, 204, 206, 208, 209, 210, 212, 214, 218, 220, 223, 225, 226, 230, 231, 241, 242, 247, 248, 249, 251, 252, 253, 256, 262, 263, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 302, 305, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 348, 397, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "unit8": 2, "img": 2, "randint": [2, 70, 101, 208, 418], "255": [2, 101, 208, 416, 418], "uint8": [2, 3, 31, 50, 52, 57, 80, 86, 120, 121, 136, 137, 179, 190, 208, 403, 410, 417, 418, 420, 421], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 45, 51, 56, 58, 61, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 99, 101, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 136, 137, 138, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 162, 165, 166, 168, 169, 175, 178, 179, 180, 185, 186, 190, 194, 195, 197, 200, 201, 204, 206, 215, 216, 218, 223, 225, 230, 248, 249, 252, 253, 256, 276, 293, 303, 305, 308, 309, 311, 312, 313, 315, 316, 317, 318, 324, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 362, 373, 375, 377, 403, 405, 407, 410, 411, 413, 416, 417, 420, 421], "ask": [2, 8, 80, 86, 99, 106, 107, 362, 404, 405, 406, 407, 414, 415, 417, 421], "automat": [2, 3, 5, 28, 69, 71, 88, 93, 94, 101, 114, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 165, 175, 178, 188, 206, 215, 232, 249, 253, 285, 293, 294, 360, 397, 402, 404, 406, 407, 414, 415, 416, 418, 420], "hand": [2, 3, 7, 21, 31, 414, 415, 416], "look": [2, 3, 5, 7, 8, 27, 38, 45, 54, 55, 59, 64, 99, 122, 126, 135, 144, 145, 146, 147, 151, 152, 192, 193, 212, 218, 294, 298, 299, 300, 398, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 420, 421], "assum": [2, 3, 6, 14, 15, 16, 31, 58, 59, 65, 66, 82, 84, 86, 87, 88, 90, 91, 97, 106, 122, 126, 144, 145, 151, 152, 168, 171, 174, 182, 192, 193, 200, 206, 210, 212, 214, 223, 231, 249, 253, 283, 301, 313, 318, 331, 340, 351, 352, 353, 354, 356, 357, 358, 359, 362, 402, 404, 405, 413, 416], "lead": [2, 3, 4, 8, 10, 12, 23, 31, 32, 39, 45, 51, 56, 61, 65, 66, 82, 105, 120, 121, 122, 125, 127, 128, 206, 250, 273, 280, 281, 402, 405, 414, 415, 416, 418, 420], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 56, 57, 60, 61, 69, 71, 72, 73, 74, 75, 122, 220, 226, 402, 409, 418], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 110, 120, 121, 122, 123, 125, 126, 127, 128, 144, 145, 151, 152, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 232, 233, 240, 249, 253, 254, 259, 260, 279, 285, 289, 290, 294, 295, 297, 298, 301, 302, 309, 311, 317, 325, 327, 329, 331, 376, 381, 397, 402, 404, 413, 415, 416, 418, 421], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 169, 403, 404, 409, 418, 420, 421], "throw": [2, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 218, 421], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 100, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 168, 169, 173, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 209, 210, 218, 219, 225, 226, 230, 231, 239, 241, 242, 245, 246, 249, 253, 256, 271, 272, 273, 274, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 301, 302, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 362, 370, 376, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "max": [2, 23, 52, 65, 70, 89, 98, 99, 112, 177, 207, 271, 272, 281, 309, 310, 311, 317, 327, 329, 331, 402, 404, 405, 411], "label": [2, 52, 53, 58, 70, 402, 414, 418], "100": [2, 14, 15, 16, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 172, 179, 188, 197, 202, 204, 218, 259, 291, 293, 362, 371, 389, 403, 404, 405, 406, 408, 411, 413, 414, 415, 416, 417, 418, 420, 421], "rb_pytre": 2, "randn": [2, 51, 54, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 107, 114, 168, 188, 223, 231, 234, 235, 239, 241, 242, 247, 248, 251, 252, 257, 258, 259, 264, 267, 269, 274, 285, 286, 287, 288, 289, 290, 294, 295, 297, 300, 301, 302, 308, 309, 311, 312, 313, 315, 316, 317, 324, 326, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345, 378, 397, 418, 420, 421], "c": [2, 3, 6, 7, 31, 50, 52, 54, 56, 57, 64, 65, 66, 85, 188, 208, 251, 252, 403, 418], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 106, 107, 112, 114, 122, 126, 144, 145, 151, 152, 166, 168, 170, 175, 177, 178, 188, 194, 197, 218, 223, 225, 229, 230, 236, 237, 238, 244, 245, 246, 247, 248, 249, 251, 252, 253, 257, 258, 260, 261, 271, 272, 273, 282, 296, 304, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 348, 405, 418, 420], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 126, 129, 144, 151, 161, 162, 166, 169, 172, 175, 178, 186, 195, 202, 216, 220, 223, 231, 260, 264, 283, 342, 343, 344, 345, 370, 378, 409, 413, 418, 421], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 114, 190, 232, 233, 254, 260, 402, 409, 411, 414, 416, 417, 418, 420], "ambigu": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 110, 122, 126, 144, 145, 151, 152, 166, 173, 192, 206, 209, 210, 212, 214, 218, 297, 398, 402, 406, 416], "deal": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 326, 398, 402, 404, 415, 418], "interpret": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 403], "put": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 126, 136, 137, 152, 155, 156, 216, 369, 393, 397, 403, 404, 405, 406, 414, 416], "solv": [2, 4, 9, 10, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 396, 402, 403, 404, 409, 411, 414, 415, 416, 418], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 45, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 130, 144, 145, 151, 152, 218, 371, 406, 409], "cut": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "distinct": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 166, 408, 413], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 218, 242, 247, 251, 254, 406, 416, 418, 420, 421], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 51, 55, 56, 59, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 125, 126, 127, 130, 131, 132, 135, 144, 145, 146, 147, 151, 152, 165, 175, 178, 193, 231, 254, 273, 293, 294, 298, 299, 300, 304, 326, 342, 343, 344, 345, 397, 398, 402, 403, 404, 406, 408, 413, 414, 415, 416, 417, 418, 421], "collate_fn": [2, 51, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 418, 420], "__init__": [2, 3, 7, 122, 138, 153, 161, 163, 166, 175, 178, 194, 230, 242, 247, 251, 256, 302, 309, 311, 312, 317, 324, 329, 331, 333, 334, 399, 416, 421], "major": 2, "worri": [2, 67], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 94, 95, 99, 106, 108, 110, 114, 122, 123, 126, 130, 144, 145, 151, 152, 165, 226, 402, 404, 406, 414, 415, 416, 421], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 254, 404, 414, 415], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 54, 58, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 187, 206, 250, 280, 281, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 403, 407, 410, 416, 418, 421], "latter": [2, 18, 19, 20, 27, 38, 45, 54, 55, 59, 64, 82, 122, 126, 144, 145, 151, 152, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 328, 391, 392], "inv": [2, 3, 172, 177, 180, 190, 197, 202, 211, 416], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 55, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 91, 122, 126, 144, 145, 151, 152, 177, 180, 201, 208, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 257, 258, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 342, 418], "multithread": [2, 3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 89, 139, 140, 409, 418], "thread": [2, 14, 15, 17, 50, 52, 57, 118, 119, 131, 132, 144, 151], "prefetch": [2, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 89, 402, 403, 405, 418], "advis": [2, 11, 83, 410, 421], "benchmark": [2, 3, 9, 118, 119, 131, 132], "techniqu": [2, 8, 144, 151, 403, 409, 418], "real": [2, 5, 86, 298, 398, 405, 416], "life": [2, 179], "adopt": [2, 3, 5, 402, 421], "throughput": [2, 9, 132, 402], "constant": [2, 11, 33, 169, 188, 205, 399, 402, 404, 405, 421], "throughout": [2, 3, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 404, 414, 421], "further": [2, 3, 5, 24, 402, 404, 406], "refin": [2, 86, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340], "coupl": [2, 405, 407, 408, 416, 418], "get": [2, 3, 4, 6, 7, 8, 9, 31, 32, 39, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 80, 82, 86, 93, 94, 99, 106, 107, 108, 110, 112, 114, 122, 123, 126, 144, 145, 151, 152, 163, 168, 170, 175, 177, 178, 186, 188, 193, 205, 206, 208, 210, 216, 245, 246, 285, 294, 295, 298, 305, 342, 343, 344, 345, 346, 362, 366, 397, 401, 402, 403, 404, 405, 412, 414, 415, 416, 418, 419, 420, 421], "first_elt": 2, "128": [2, 80, 82, 86, 107, 118, 119, 131, 132, 236, 239, 403, 405, 411, 414, 416, 417, 418], "wa": [2, 3, 5, 7, 51, 54, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 105, 106, 122, 126, 144, 145, 151, 152, 210, 220, 226, 251, 308, 310, 323, 325, 328, 330, 332, 348, 398, 403, 404, 406, 407, 413, 414, 418, 420], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 31, 32, 35, 38, 39, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 101, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 158, 161, 162, 165, 166, 169, 170, 175, 176, 177, 178, 185, 188, 194, 195, 197, 200, 204, 206, 207, 208, 216, 218, 223, 225, 226, 232, 233, 235, 236, 237, 238, 239, 242, 244, 245, 246, 249, 253, 254, 257, 258, 259, 260, 264, 267, 270, 271, 272, 274, 285, 286, 287, 288, 289, 290, 293, 294, 295, 297, 300, 302, 305, 326, 360, 389, 397, 399, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 170], "larger": [2, 4, 64, 249, 253, 316, 324, 420], "volum": 2, "due": [2, 3, 5, 23, 408, 417, 418, 421], "memorymappedtensor": [2, 35, 50, 52, 62, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 364, 409, 417], "well": [2, 3, 8, 21, 23, 27, 38, 45, 51, 53, 54, 55, 56, 59, 64, 65, 66, 69, 99, 104, 108, 115, 122, 126, 144, 145, 151, 152, 210, 218, 235, 251, 275, 276, 326, 333, 346, 402, 403, 405, 406, 407, 408, 410, 417, 418, 420, 421], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 174, 175, 176, 178, 200, 203, 205, 211, 218, 230, 251, 297, 298, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 369, 397, 402, 404, 405, 409, 414], "file": [2, 6, 7, 8, 50, 52, 57, 80, 82, 83, 84, 86, 87, 88, 91, 155, 361, 362, 364, 399, 401, 403, 414, 418, 419, 420, 421], "locat": [2, 7, 50, 52, 57, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 174, 179, 188, 199, 250, 264, 280, 281, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 402, 403, 404, 410, 414, 415, 418], "improv": [2, 4, 11, 183, 308, 398, 414, 415, 418], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 144, 151, 404, 414, 418], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 82, 83, 84, 86, 87, 88, 106, 107, 120, 121, 122, 125, 126, 127, 130, 144, 145, 151, 152, 163, 169, 197, 200, 207, 216, 218, 226, 245, 246, 259, 260, 294, 298, 325, 326, 328, 402, 403, 405, 406, 408, 410, 416, 418], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 60, 61, 69, 71, 72, 73, 74, 75, 93, 99, 142, 143, 177, 229, 251, 252, 316, 405, 409, 418], "sharabl": [2, 144, 151], "collabor": [2, 86], "rather": [2, 4, 110, 142, 143, 195, 402, 403, 404, 406, 408, 414, 415, 418], "incur": [2, 118, 119, 131, 132], "transmiss": 2, "overhead": [2, 118, 119, 131, 132, 144, 151], "content": [2, 8, 16, 31, 32, 39, 50, 51, 52, 56, 57, 61, 65, 66, 105, 122, 125, 126, 127, 139, 144, 145, 151, 152, 194, 232, 233, 254, 259, 260, 294, 326, 404, 416, 420], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 97, 98, 99, 122, 126, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 157, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 218, 223, 242, 264, 285, 286, 287, 288, 290, 294, 295, 297, 298, 300, 301, 302, 303, 311, 331, 340, 375, 395, 397, 398, 402, 403, 404, 405, 407, 408, 417, 420], "writer": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 99, 101, 102, 106, 112, 113, 117, 404, 418], "tensordictroundrobinwrit": [2, 101], "goe": [2, 4, 146, 147, 402, 404, 414, 415, 421], "prioritizedsampl": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 313, 318, 340, 402, 418], "access": [2, 3, 7, 8, 11, 27, 38, 45, 51, 54, 55, 59, 64, 83, 85, 122, 126, 144, 145, 151, 152, 192, 212, 218, 393, 396, 402, 406, 414, 415, 416, 418], "tensordictreplaybuff": [2, 51, 56, 65, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 106, 107, 112, 168, 169, 376, 389, 395, 402, 403, 405, 418], "mp": [2, 18, 19, 20, 80, 81, 82, 83, 84, 85, 86, 87, 88, 123, 216], "def": [2, 3, 12, 22, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 138, 144, 145, 151, 152, 161, 163, 165, 166, 175, 178, 194, 210, 218, 230, 242, 247, 248, 251, 252, 256, 261, 293, 294, 302, 309, 311, 312, 317, 324, 326, 329, 331, 333, 334, 360, 399, 402, 403, 413, 414, 415, 416, 418, 420, 421], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 50, 51, 52, 54, 56, 57, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 112, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 142, 143, 144, 145, 151, 152, 153, 154, 163, 166, 168, 170, 175, 176, 177, 178, 185, 186, 188, 197, 200, 206, 208, 210, 216, 219, 225, 230, 231, 241, 242, 245, 246, 249, 253, 255, 256, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 294, 295, 297, 300, 302, 340, 343, 344, 345, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 370, 378, 397, 398, 402, 405, 415, 416, 420, 421], "__name__": [2, 3, 14, 15, 22, 123, 360, 403, 420], "__main__": [2, 3, 14, 15, 22, 123, 360, 420], "21": [2, 86, 87, 107, 144, 146, 147, 151, 401, 403, 409, 413, 415, 416, 417, 419], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 144, 145, 151, 152, 205, 209, 218, 270, 297, 298, 308, 309, 310, 311, 312, 313, 315, 317, 318, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 345, 346, 382, 388, 389, 398, 399, 405, 411, 414, 416], "arg": [2, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 99, 101, 106, 107, 108, 110, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163, 164, 173, 192, 194, 203, 206, 209, 210, 211, 213, 214, 218, 227, 228, 230, 231, 232, 233, 241, 245, 246, 249, 253, 254, 255, 256, 271, 272, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 369, 372, 376, 379, 393, 403, 420], "join": [2, 123, 395, 403, 404, 414], "now": [2, 3, 7, 51, 56, 65, 66, 101, 142, 143, 144, 169, 260, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 417, 418, 421], "20": [2, 64, 70, 87, 106, 107, 112, 122, 126, 130, 142, 143, 144, 145, 151, 152, 205, 218, 244, 247, 248, 251, 252, 270, 289, 370, 402, 403, 404, 405, 414, 415, 416, 418, 421], "_data": [2, 416], "It": [2, 3, 4, 7, 23, 27, 38, 45, 53, 54, 55, 58, 59, 64, 65, 67, 70, 82, 88, 101, 104, 112, 117, 122, 126, 128, 138, 139, 144, 145, 146, 147, 151, 152, 155, 156, 166, 168, 179, 186, 188, 193, 205, 210, 215, 218, 220, 227, 235, 237, 243, 245, 259, 260, 270, 271, 272, 273, 275, 276, 282, 283, 291, 293, 296, 298, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 332, 334, 340, 341, 342, 360, 369, 375, 396, 397, 398, 402, 403, 405, 406, 414, 415, 416, 417, 418, 420, 421], "difficult": [2, 4, 144, 410], "pai": [2, 8, 402, 405], "word": [2, 3, 11, 58, 80, 82, 84, 86, 87, 88, 326, 402, 409, 416, 421], "1m": [2, 80, 86, 382, 402, 404, 405], "doe": [2, 3, 18, 50, 51, 52, 57, 65, 70, 80, 82, 86, 90, 91, 97, 98, 99, 106, 108, 110, 117, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 216, 239, 247, 248, 249, 251, 252, 253, 262, 270, 283, 289, 299, 300, 308, 310, 318, 325, 326, 328, 341, 379, 397, 399, 402, 403, 404, 405, 406, 409, 414, 416, 418, 421], "howev": [2, 3, 5, 7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 169, 200, 205, 210, 218, 308, 310, 311, 325, 328, 330, 331, 397, 402, 403, 405, 408, 416, 418, 421], "capac": [2, 51, 56, 65, 66, 93, 94, 98, 106, 114, 404, 409], "There": [2, 10, 101, 249, 253, 308, 328, 397, 399, 404, 405, 407, 409, 414, 415, 416, 418, 421], "circumv": 2, "account": [2, 93, 94, 114, 125, 127, 152, 165, 169, 257, 258, 397, 403, 405, 418, 421], "save": [2, 3, 8, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 101, 108, 109, 110, 114, 115, 122, 126, 144, 145, 151, 152, 215, 218, 361, 362, 364, 369, 379, 399, 409, 410, 411, 414, 415], "convent": [2, 3, 80, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 155, 156, 398, 402, 405, 414, 415, 416], "overridden": [2, 3, 27, 38, 54, 55, 59, 64, 80, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 342, 344, 345, 405, 414], "dim_extend": [2, 51, 56, 65, 66], "obtain": [2, 7, 58, 80, 122, 126, 144, 145, 151, 152, 168, 192, 205, 214, 230, 231, 270, 273, 376, 402, 404, 406, 407, 408, 414, 415], "counterpart": 2, "desir": [2, 3, 11, 27, 30, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 164, 166, 173, 188, 190, 192, 193, 206, 209, 210, 212, 214, 218, 224, 232, 233, 254, 260, 285, 290, 291, 294, 295, 296, 297, 298, 397, 402, 414, 415, 416, 418], "diversifi": 2, "offer": [2, 3, 7, 118, 119, 122, 126, 131, 132, 136, 137, 144, 145, 151, 152, 360, 397, 402, 403, 406, 408, 409, 414, 416, 418, 421], "accomplish": [2, 220, 406], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 80, 81, 83, 169, 220, 309, 315, 316, 324, 333, 369, 399, 406, 417, 418, 420], "docstr": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 406, 407], "extens": [2, 51, 56, 65, 66, 107, 399, 418], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 208, 210, 218, 242, 247, 251, 261, 270, 291, 308, 318, 326, 328, 396, 399, 403, 409, 413, 418], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 122, 126, 144, 145, 151, 152, 175, 178, 216, 218, 226, 247, 249, 251, 253, 271, 272, 294, 298, 318, 403, 407, 413, 414, 415, 421], "happi": 2, "concaten": [2, 8, 14, 15, 21, 41, 43, 86, 169, 170, 188, 209, 251, 254, 300, 402, 403, 407, 414, 415, 416, 418, 421], "schedul": [2, 4, 7, 58, 375, 404, 416], "transformedenv": [2, 3, 11, 45, 122, 123, 126, 144, 145, 151, 152, 162, 163, 166, 169, 172, 173, 175, 178, 179, 180, 182, 185, 186, 187, 188, 190, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 209, 216, 218, 249, 253, 293, 362, 402, 403, 404, 405, 406, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "stepcount": [2, 45, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 209, 218, 231, 402, 403, 404, 405, 406, 411, 414, 415, 420], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 45, 62, 64, 112, 122, 123, 126, 128, 144, 145, 151, 152, 162, 165, 166, 169, 172, 173, 179, 185, 186, 188, 190, 195, 196, 197, 200, 202, 205, 206, 207, 209, 210, 216, 218, 231, 249, 253, 293, 360, 362, 389, 395, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 417, 418, 420, 421], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 169, 197, 395, 409, 418], "cartpol": [2, 3, 11, 35, 45, 62, 64, 120, 121, 122, 126, 144, 145, 151, 152, 165, 166, 169, 200, 205, 216, 218, 293, 360, 403, 405, 407, 409, 410, 411, 418, 421], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 45, 62, 64, 82, 84, 112, 122, 123, 125, 126, 127, 131, 132, 139, 144, 145, 151, 152, 165, 166, 169, 172, 180, 185, 186, 188, 195, 197, 200, 202, 204, 205, 206, 207, 209, 216, 218, 231, 249, 253, 293, 337, 351, 352, 353, 354, 356, 357, 358, 359, 360, 397, 403, 405, 406, 407, 408, 409, 410, 411, 416, 418, 420, 421], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 45, 118, 119, 122, 126, 131, 132, 138, 144, 145, 146, 147, 151, 152, 162, 163, 166, 169, 175, 178, 186, 194, 197, 219, 230, 242, 256, 274, 276, 285, 290, 294, 295, 309, 311, 313, 315, 329, 331, 333, 334, 389, 397, 402, 403, 404, 405, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 420, 421], "8": [2, 3, 6, 7, 45, 50, 52, 56, 57, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 106, 107, 118, 119, 120, 121, 122, 126, 142, 143, 144, 145, 151, 152, 153, 162, 165, 205, 232, 233, 235, 236, 244, 254, 286, 287, 288, 294, 297, 300, 324, 401, 402, 403, 409, 414, 415, 416, 417, 418, 419, 420], "traj_kei": [2, 99, 106, 107, 418], "truncated_kei": [2, 99, 106, 107, 197, 204], "strict_length": [2, 80, 86, 99, 106, 107, 362], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 45, 51, 54, 55, 56, 59, 61, 62, 64, 66, 67, 93, 94, 98, 99, 106, 107, 114, 122, 126, 144, 145, 151, 152, 174, 192, 197, 200, 210, 214, 218, 248, 252, 264, 274, 291, 293, 294, 296, 297, 298, 308, 310, 311, 312, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345, 370, 382, 402, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 416, 418, 420, 421], "enumer": [2, 14, 15, 16, 21, 27, 35, 38, 45, 54, 55, 56, 59, 62, 64, 66, 107, 122, 126, 144, 145, 151, 152, 218, 335, 398, 402, 403, 404, 405, 411, 414, 418, 420], "break": [2, 5, 14, 15, 16, 21, 27, 38, 45, 54, 55, 56, 59, 64, 66, 80, 83, 84, 86, 87, 88, 89, 99, 106, 107, 112, 122, 126, 144, 145, 151, 152, 166, 169, 197, 216, 218, 249, 253, 280, 362, 403, 409, 411, 418, 420], "step_count": [2, 14, 15, 16, 45, 122, 126, 131, 132, 144, 145, 151, 152, 204, 218, 404, 405, 406, 411], "32": [2, 22, 31, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 149, 150, 155, 156, 232, 233, 234, 235, 236, 238, 239, 244, 254, 259, 260, 265, 266, 269, 273, 282, 340, 360, 401, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421], "33": [2, 27, 31, 38, 45, 54, 55, 59, 64, 101, 122, 126, 144, 145, 151, 152, 218, 232, 233, 254, 403, 405, 416], "34": [2, 232, 233, 254, 403, 405, 416], "35": [2, 232, 233, 254, 403, 404, 416, 417], "36": [2, 403, 414, 416], "37": [2, 168, 403, 405, 416, 417], "38": [2, 7, 403, 415, 416, 418], "39": [2, 84, 131, 132, 401, 402, 403, 416, 417, 419], "40": [2, 64, 131, 132, 402, 403, 404, 414, 415, 416], "41": [2, 402, 403, 416], "11": [2, 10, 23, 64, 70, 93, 94, 98, 107, 114, 123, 162, 208, 218, 230, 256, 402, 403, 404, 414, 415, 416, 418], "12": [2, 10, 64, 87, 93, 94, 107, 114, 131, 132, 144, 149, 150, 151, 218, 403, 404, 405, 414, 416, 418], "13": [2, 5, 12, 64, 106, 107, 148, 215, 218, 402, 403, 416, 417, 418], "14": [2, 6, 12, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 107, 122, 126, 144, 145, 151, 152, 188, 218, 401, 402, 403, 404, 405, 410, 414, 416, 418, 419], "15": [2, 23, 80, 81, 82, 83, 84, 85, 86, 87, 88, 107, 122, 126, 144, 145, 151, 152, 218, 271, 272, 289, 319, 402, 403, 414, 416, 418], "16": [2, 3, 27, 38, 45, 54, 55, 59, 64, 87, 99, 107, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 169, 218, 402, 403, 404, 405, 414, 415, 416, 417, 418], "17": [2, 11, 87, 107, 126, 144, 162, 218, 402, 403, 414, 416], "could": [2, 3, 4, 6, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 403, 404, 410, 414, 415, 417, 421], "sai": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 259, 414, 417, 421], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 32, 39, 43, 61, 95, 99, 106, 107, 122, 125, 126, 127, 130, 144, 145, 151, 152, 175, 178, 193, 200, 259, 260, 295, 308, 328, 403, 404, 405, 414, 415, 416], "handl": [2, 3, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 215, 216, 218, 253, 254, 308, 326, 328, 379, 391, 392, 402, 403, 404, 406, 408, 415, 418], "suggest": [2, 340, 402, 415], "serialenv": [2, 3, 122, 126, 144, 145, 152, 206, 218, 231, 293, 395, 420, 421], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 165, 166, 169, 203, 205, 232, 233, 277, 278, 402, 416, 418], "6": [2, 3, 7, 14, 15, 16, 17, 23, 45, 56, 59, 64, 80, 87, 88, 99, 107, 120, 121, 126, 144, 149, 150, 162, 165, 188, 190, 205, 231, 232, 233, 235, 236, 237, 240, 244, 248, 254, 259, 260, 261, 265, 279, 293, 294, 302, 401, 402, 403, 409, 414, 415, 416, 418, 419, 420, 421], "5": [2, 3, 14, 15, 23, 31, 32, 39, 41, 42, 43, 44, 45, 51, 56, 59, 61, 64, 65, 66, 80, 101, 106, 107, 112, 122, 123, 126, 131, 132, 136, 137, 139, 144, 145, 149, 150, 151, 152, 155, 156, 162, 165, 166, 168, 197, 204, 205, 218, 229, 230, 231, 232, 233, 235, 236, 241, 242, 243, 244, 247, 250, 251, 254, 256, 259, 260, 265, 270, 274, 280, 281, 289, 290, 293, 295, 301, 325, 328, 330, 333, 334, 360, 397, 401, 402, 403, 405, 407, 409, 411, 414, 415, 416, 418, 419, 420, 421], "7": [2, 3, 6, 10, 45, 51, 56, 64, 65, 99, 107, 122, 126, 136, 137, 144, 145, 151, 152, 162, 165, 205, 230, 231, 232, 233, 236, 254, 256, 259, 348, 401, 402, 403, 405, 409, 414, 415, 416, 418, 419, 420], "9": [2, 3, 7, 23, 27, 45, 51, 56, 64, 65, 87, 88, 99, 107, 112, 120, 121, 135, 146, 147, 152, 162, 165, 205, 216, 218, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 335, 340, 398, 401, 402, 403, 404, 409, 414, 415, 416, 417, 418, 419], "18": [2, 87, 107, 149, 150, 155, 156, 218, 260, 401, 402, 403, 404, 414, 415, 416, 417, 419], "19": [2, 87, 106, 107, 112, 218, 402, 403, 404, 416], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 83, 144, 151, 209, 211, 260, 308, 328, 398, 399, 402, 403, 415, 418, 420], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 83, 85, 88, 89, 118, 120, 122, 126, 131, 135, 136, 137, 139, 142, 144, 145, 146, 147, 148, 151, 152, 155, 156, 157, 176, 177, 180, 195, 200, 201, 204, 210, 212, 215, 218, 226, 249, 253, 290, 295, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 342, 344, 345, 346, 360, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 399, 402, 403, 404, 405, 408, 410, 414, 415, 416, 421], "randomcroptensordict": [2, 402], "unlik": [2, 25, 105, 126, 136, 137, 155, 156, 229, 293, 318, 328, 362, 397, 403, 407, 409, 420], "stop": [2, 3, 16, 21, 58, 88, 99, 106, 107, 122, 126, 144, 145, 151, 152, 404, 409, 414, 415, 420, 421], "signal": [2, 3, 14, 15, 16, 17, 23, 80, 82, 84, 86, 87, 88, 99, 106, 107, 112, 126, 136, 137, 155, 156, 169, 179, 204, 207, 226, 398, 402, 404, 414, 415, 418, 421], "disk": [2, 3, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 379, 399, 402, 403, 405, 409, 410, 414, 418], "dump": [2, 3, 11, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 101, 108, 110, 114, 360, 361, 362, 410, 411, 414], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 101, 108, 109, 110, 114, 115, 121, 122, 126, 144, 145, 151, 152, 153, 161, 216, 218, 393, 399, 402, 404, 418], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 82, 122, 126, 144, 145, 151, 152, 311, 333, 404, 406, 408, 409, 414, 415, 421], "anticip": [2, 175, 178], "compli": [2, 86, 397], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 60, 61, 69, 71, 72, 73, 74, 75, 82, 215, 220, 261, 285, 290, 291, 294, 295, 296, 297, 298, 404, 414, 415, 416, 418], "exact": [2, 3, 23, 144, 251], "statu": [2, 3, 122], "prioriti": [2, 4, 51, 65, 66, 93, 94, 95, 98, 99, 108, 110, 114, 311, 312, 313, 315, 316, 317, 318, 324, 329, 331, 333, 334, 340, 399, 402, 403, 418], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 45, 54, 55, 58, 59, 64, 80, 82, 83, 84, 86, 87, 88, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 218, 285, 290, 291, 294, 295, 296, 297, 298, 326, 342, 343, 344, 345, 346, 362, 398, 402, 403, 407, 414, 416, 421], "hood": [2, 21, 80, 122, 126, 144, 145, 151, 152, 416], "naiv": [2, 212, 406], "just": [2, 3, 4, 12, 110, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 165, 172, 226, 260, 370, 397, 399, 402, 403, 404, 405, 406, 407, 409, 414, 415, 416, 418, 420, 421], "public": [2, 85, 109, 192, 214], "serializ": 2, "consum": [2, 105, 107, 293, 403, 404, 409, 415, 418], "much": [2, 8, 14, 15, 17, 51, 65, 86, 98, 99, 144, 151, 325, 328, 404, 406, 410, 414, 415, 416, 418, 421], "duplic": [2, 27, 38, 45, 54, 55, 59, 64, 105, 122, 126, 144, 145, 151, 152, 218, 309, 311, 313, 318, 324, 326, 329, 331, 333, 334, 340], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 45, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 159, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 189, 190, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 225, 231, 234, 235, 236, 237, 238, 239, 242, 245, 246, 249, 253, 259, 265, 266, 269, 270, 271, 272, 274, 275, 285, 286, 287, 288, 289, 290, 293, 294, 295, 302, 303, 308, 309, 310, 311, 312, 313, 315, 316, 317, 320, 324, 325, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 360, 362, 389, 397, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 420, 421], "plu": [2, 14, 15, 17, 58, 144, 151, 416], "enabl": [2, 7, 8, 82, 93, 94, 105, 114, 166, 249, 253, 271, 272, 293, 360, 362, 375, 404, 406, 414, 415, 416, 418], "three": [2, 25, 26, 30, 34, 41, 42, 43, 44, 49, 54, 89, 311, 397, 399, 404, 406, 407, 414, 415, 416, 418, 421], "flatstoragecheckpoint": 2, "discard": [2, 3, 70, 82, 84, 126, 212, 225, 361, 418, 421], "compress": 2, "At": [2, 245, 255, 403, 404, 405, 409, 413, 416, 417], "correct": [2, 4, 50, 52, 57, 122, 126, 144, 145, 151, 152, 186, 382, 404, 405], "addit": [2, 3, 4, 27, 38, 45, 54, 55, 59, 64, 82, 122, 126, 144, 145, 151, 152, 155, 173, 192, 206, 209, 210, 212, 214, 218, 227, 228, 247, 289, 293, 297, 307, 326, 342, 360, 398, 402, 403, 406, 414, 415, 418], "nestedstoragecheckpoint": 2, "represent": [2, 27, 38, 45, 54, 55, 59, 60, 61, 64, 122, 126, 144, 145, 151, 152, 192, 212, 214, 218, 308, 328, 402, 416, 417, 421], "appar": [2, 3, 372], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 90, 91, 97, 122, 125, 126, 127, 144, 145, 151, 152, 162, 172, 177, 223, 227, 228, 239, 242, 246, 259, 266, 271, 272, 274, 285, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 305, 308, 313, 315, 316, 317, 328, 333, 334, 340, 397, 403, 404, 405, 406, 407, 408, 414, 415, 416, 421], "assumpt": [2, 3, 69, 416, 418], "accur": [2, 7, 82, 88, 403, 416, 418], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 45, 46, 53, 62, 64, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 106, 107, 120, 121, 122, 125, 126, 127, 136, 137, 144, 145, 146, 147, 151, 152, 153, 155, 156, 162, 179, 180, 187, 194, 197, 204, 210, 218, 226, 249, 253, 281, 293, 348, 402, 404, 405, 406, 407, 409, 410, 413, 414, 417, 418, 420, 421], "marl": [2, 135, 157, 169, 207, 259, 260, 261, 406, 414, 415], "extra": [2, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 169, 216, 218, 225, 369, 397, 404, 405, 418], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 144, 163, 220], "concret": [2, 402, 404], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 45, 62, 64, 118, 119, 122, 126, 131, 132, 138, 144, 145, 151, 152, 165, 188, 195, 200, 205, 207, 210, 218, 409, 411, 416, 420, 421], "manual_se": [2, 3, 25, 35, 41, 42, 51, 56, 62, 64, 65, 66, 83, 87, 88, 106, 107, 118, 119, 122, 126, 144, 145, 151, 152, 163, 165, 177, 188, 197, 200, 205, 207, 218, 245, 246, 257, 258, 267, 270, 271, 272, 285, 291, 301, 308, 309, 311, 312, 316, 324, 331, 409, 411, 414, 415, 416, 420, 421], "200": [2, 14, 15, 16, 21, 27, 35, 38, 45, 54, 55, 59, 62, 64, 80, 122, 125, 126, 127, 144, 145, 151, 152, 155, 156, 197, 218, 235, 236, 243, 275, 276, 360, 362, 402, 405, 409, 411, 416, 418], "22": [2, 86, 106, 107, 215, 401, 403, 411, 414, 416, 419], "rb_test": 2, "_storag": [2, 417, 418], "max_siz": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 108, 112, 114, 404, 409], "102": [2, 416], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 50, 52, 57, 139, 239, 257, 258, 259, 307, 311, 360, 402, 404, 414, 415], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 259, 260, 311, 331, 393, 399, 402, 403, 421], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 311, 331, 399, 402], "drawback": 2, "struggl": 2, "big": [2, 404, 409, 418, 421], "sequenti": [2, 9, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 168, 186, 218, 286, 287, 288, 294, 299, 300, 305, 308, 309, 311, 317, 324, 328, 329, 330, 331, 333, 397, 404, 405, 407, 415, 416, 417, 420, 421], "known": [2, 3, 5, 7, 8, 64, 126, 349, 350, 402, 403, 406], "seamless": [2, 254], "integr": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 238, 249, 253, 256, 297, 397, 406, 407, 409, 414, 415, 416, 417], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 229, 402, 403, 408], "essenti": [2, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 403, 406, 414, 416, 418], "understand": [2, 3, 8, 402, 403, 406, 407, 414, 415], "purpos": [2, 3, 7, 11, 122, 126, 144, 145, 151, 152, 169, 247, 308, 310, 322, 325, 328, 330, 389, 402, 404, 405, 408, 410, 414, 415, 417, 421], "guid": [2, 11, 146, 147, 149, 150, 205, 396, 402, 415], "explan": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "effect": [2, 3, 27, 31, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 86, 99, 101, 104, 106, 107, 122, 126, 144, 145, 151, 152, 165, 169, 210, 218, 379, 397, 402, 407, 414, 418, 421], "realm": [2, 407], "As": [2, 3, 4, 45, 56, 65, 66, 69, 80, 101, 122, 126, 135, 144, 145, 146, 147, 151, 152, 197, 298, 342, 397, 402, 403, 404, 405, 406, 408, 409, 414, 415, 416, 417, 418, 420, 421], "practition": 2, "often": [2, 3, 8, 261, 323, 326, 379, 402, 403, 406, 408, 416, 418, 421], "encount": [2, 4, 86, 293, 396, 403, 407, 416], "situat": [2, 136, 137], "sometim": [2, 3, 69, 405, 421], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 59, 60, 61, 69, 71, 72, 73, 74, 75, 80, 83, 84, 87, 88, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 136, 137, 140, 141, 142, 143, 148, 153, 154, 155, 156, 247, 248, 249, 251, 252, 253, 256, 286, 287, 288, 326, 329, 399, 403], "immedi": [2, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 218, 341, 414, 415], "199": [2, 416], "info": [2, 3, 14, 15, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 104, 106, 107, 120, 121, 122, 125, 126, 127, 128, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 212, 215, 217, 369, 406, 411, 414, 415, 418, 420], "glanc": [2, 406], "seem": [2, 402, 405, 406], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 54, 58, 60, 61, 122, 126, 135, 144, 145, 146, 147, 151, 152, 169, 193, 247, 249, 251, 253, 282, 286, 287, 288, 303, 397, 403, 405, 406, 414], "less": [2, 139, 283, 391, 392, 398, 404, 405, 418, 420], "omit": [2, 374, 404, 408, 416, 418], "proper": [2, 3, 4, 6, 7, 342, 343, 344, 345, 403, 404, 414, 415, 418], "imposs": [2, 3, 112, 220, 308, 310, 325, 328, 330], "determin": [2, 51, 65, 82, 98, 99, 122, 126, 144, 145, 151, 152, 155, 156, 192, 214, 259, 271, 272, 403, 407, 414, 415], "complic": [2, 54, 64, 416, 418, 421], "matter": [2, 33, 409], "inconsist": [2, 421], "miss": [2, 3, 4, 6, 7, 12, 27, 31, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 225, 299, 300, 308, 311, 331, 396, 402, 405], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 409], "elimin": [2, 3, 406], "upon": [2, 3, 8, 414, 416], "canon": 2, "definit": [2, 108, 259], "markov": [2, 3, 406, 421], "mdp": [2, 406, 416], "context": [2, 3, 5, 8, 27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 141, 144, 145, 151, 152, 206, 211, 218, 260, 262, 289, 338, 339, 342, 343, 344, 345, 347, 355, 362, 375, 397, 398, 402, 403, 404, 414, 415, 416, 417, 418], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 70, 71, 72, 73, 74, 75, 205, 216, 290, 291, 293, 295, 296, 307, 402, 414, 416, 418], "complet": [2, 7, 9, 105, 122, 125, 126, 127, 144, 145, 151, 152, 169, 204, 396, 398, 402, 404, 406, 413], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 45, 46, 58, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 120, 121, 122, 125, 126, 127, 131, 132, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 165, 166, 179, 194, 218, 226, 230, 249, 253, 256, 293, 299, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 45, 46, 50, 57, 58, 62, 64, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 156, 162, 163, 166, 167, 172, 173, 175, 176, 178, 179, 180, 186, 190, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 209, 210, 211, 213, 214, 216, 218, 223, 225, 230, 249, 256, 289, 293, 303, 308, 309, 311, 312, 313, 315, 316, 317, 320, 324, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 372, 373, 375, 377, 393, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "imit": [2, 3, 322], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 86, 122, 123, 126, 129, 132, 144, 145, 151, 152, 218, 231, 232, 233, 254, 260, 397, 398, 399, 402, 403, 404, 405, 406, 414, 415, 416, 418], "stateless": [2, 3, 122, 126, 144, 145, 151, 152, 166, 209, 326, 360, 402, 406, 416, 421], "simul": [2, 3, 5, 7, 8, 69, 118, 119, 128, 131, 132, 148, 155, 156, 160, 230, 256, 397, 402, 404, 406, 410, 414, 415], "furthermor": [2, 414, 415], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 122, 126, 144, 145, 151, 152, 161, 183, 204, 210, 218, 245, 248, 252, 325, 397, 402, 403, 404, 411, 414, 415, 421], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 77, 104, 110, 117, 122, 124, 126, 138, 144, 145, 151, 152, 163, 166, 175, 176, 177, 178, 180, 186, 194, 195, 201, 204, 206, 209, 218, 223, 226, 227, 228, 230, 256, 285, 294, 300, 301, 305, 308, 328, 395, 402, 404, 405, 407, 414, 415, 416, 421], "accommod": [2, 3, 406, 407], "uniform": [2, 51, 65, 98, 99, 414], "unambigu": 2, "distinguish": [2, 136, 137, 155, 156], "happen": [2, 3, 122, 126, 144, 145, 151, 152, 228, 403, 408, 409, 410, 417, 421], "everyth": [2, 403, 404, 405, 410, 411], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 86, 215, 216, 397, 402, 409, 415], "rule": [2, 64, 144, 175, 178, 298, 397, 404], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 45, 50, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 210, 218, 225, 230, 231, 241, 242, 249, 253, 256, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 302, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 383, 396, 397, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "taken": [2, 3, 25, 26, 30, 34, 41, 42, 43, 44, 49, 122, 126, 144, 145, 151, 152, 162, 196, 246, 257, 258, 398, 402, 404, 405, 407, 414, 415, 416], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 50, 52, 53, 54, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 216, 225, 230, 231, 241, 242, 249, 253, 256, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 302, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 397, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "brought": [2, 404, 405, 407], "step_mdp": [2, 3, 122, 126, 144, 145, 151, 152, 249, 253, 395, 405, 406, 416, 420, 421], "count": [2, 3, 45, 122, 123, 204, 271, 272, 375, 379, 382, 402, 403, 404, 405, 418, 421], "trigger": [2, 7, 54, 64], "partial": [2, 3, 122, 126, 144, 145, 151, 152, 168, 169, 205, 206, 207, 294, 379, 405], "turn": [2, 18, 19, 20, 21, 50, 52, 55, 57, 59, 152, 184, 211, 215, 290, 360, 375, 398, 402, 403, 405, 407, 416, 417], "retain": 2, "regard": [2, 82, 88, 242, 291, 308, 318, 328, 402, 404, 416], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 270, 362, 398, 410, 418, 421], "eas": [2, 3, 414, 415], "flat": [2, 112], "manner": [2, 126, 192, 212, 397, 402, 403, 404, 409, 413, 416, 418], "ted2flat": [2, 35, 395], "flat2t": [2, 395], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 166, 293], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 120, 121, 122, 126, 144, 145, 151, 152, 182, 183, 203, 204, 207, 210, 211, 218, 264, 311, 331, 398, 404, 414, 415, 416, 418], "both": [2, 3, 7, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 86, 122, 123, 125, 126, 136, 137, 144, 145, 146, 147, 151, 152, 153, 162, 169, 195, 210, 218, 226, 232, 233, 249, 252, 253, 254, 259, 260, 286, 287, 288, 291, 296, 308, 310, 311, 312, 316, 317, 324, 325, 326, 328, 329, 330, 331, 333, 334, 375, 397, 402, 404, 406, 408, 414, 415, 416, 417, 418, 421], "mark": [2, 3, 16, 88, 122, 126, 144, 145, 151, 152, 249, 253, 342, 344, 345, 409, 418], "identifi": [2, 53], "abov": [2, 3, 7, 27, 38, 45, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 218, 250, 280, 281, 307, 398, 399, 402, 404, 406, 407, 414, 415, 416, 421], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 82, 83, 84, 85, 86, 87, 88, 99, 106, 107, 120, 121, 122, 125, 126, 127, 128, 132, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 166, 167, 169, 172, 173, 174, 175, 176, 178, 180, 186, 188, 192, 194, 195, 200, 201, 204, 207, 209, 210, 212, 214, 215, 218, 220, 226, 227, 228, 232, 233, 234, 235, 236, 239, 241, 242, 243, 247, 248, 249, 251, 252, 253, 254, 259, 260, 264, 268, 270, 271, 272, 274, 283, 285, 286, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 360, 362, 370, 397, 398, 402, 403, 404, 405, 406, 407, 410, 413, 414, 415, 416, 417, 420, 421], "typic": [2, 3, 4, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 179, 205, 218, 268, 270, 294, 309, 311, 326, 328, 331, 397, 398, 399, 404, 406, 408, 409, 414, 415, 416], "adjust": [2, 11, 402, 414, 415, 416], "grumodul": [2, 168, 305], "lstmmodul": [2, 249, 405], "skip": [2, 3, 27, 38, 45, 54, 55, 59, 64, 80, 122, 126, 144, 145, 151, 152, 183, 210, 218, 220, 294, 298, 311, 326, 331, 342, 343, 344, 345, 361, 362, 372, 375, 402, 403, 416], "accumul": [2, 8, 218], "upcom": [2, 326, 351, 352, 353, 354, 356, 357, 358, 359, 402], "popular": [2, 3, 397, 405, 408, 415], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 218, 395, 403], "shift": [2, 35, 37, 45, 46, 62, 90, 91, 97, 304, 342, 343, 344, 345, 404], "approxim": [2, 415, 421], "would": [2, 3, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 218, 247, 249, 251, 253, 254, 259, 399, 403, 404, 405, 406, 408, 409, 416, 418, 420, 421], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 169, 239, 269, 308, 314, 327, 328, 370, 393, 404, 405, 415, 418], "2x": 2, "small": [2, 212, 229, 402, 404, 414, 415, 421], "clearer": [2, 407], "lazi": [2, 60, 61, 77, 78, 122, 126, 144, 145, 151, 152, 155, 156, 192, 212, 232, 259, 262, 299, 300, 402, 403, 407, 409, 413, 418, 421], "certainli": 2, "benefici": 2, "welcom": [2, 406], "wrapper": [2, 3, 12, 17, 50, 52, 57, 58, 65, 66, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 215, 219, 228, 231, 246, 264, 272, 283, 289, 293, 298, 303, 342, 367, 368, 369, 393, 395, 404, 405, 406, 414, 415, 417, 420, 421], "around": [2, 5, 7, 17, 65, 66, 138, 219, 270, 293, 298, 342, 402, 403, 415, 421], "selecttransform": [2, 122, 126, 144, 145, 151, 152], "excludetransform": [2, 87, 201, 418], "promptli": 2, "virtual": [2, 3, 125], "instal": [2, 3, 5, 10, 18, 19, 20, 55, 64, 82, 85, 122, 126, 144, 145, 146, 147, 149, 150, 151, 152, 364, 379, 396, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 421], "respons": [2, 3, 8, 99, 106, 122, 126, 144, 145, 151, 152, 379, 408, 409, 421], "d4rl": [2, 82, 88], "repositori": [2, 7, 83, 84, 85, 88, 156, 414, 415], "wheel": [2, 404], "publish": 2, "openml": [2, 85, 141], "scikit": [2, 85, 141], "panda": [2, 85], "raw": [2, 3, 4, 58, 250, 280, 281, 403, 409, 416], "go": [2, 3, 7, 47, 135, 144, 193, 197, 289, 348, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "natur": [2, 3, 402, 405, 407, 408, 409, 418], "modifi": [2, 3, 7, 8, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 70, 122, 126, 144, 145, 151, 152, 166, 173, 182, 186, 192, 206, 209, 210, 212, 214, 218, 261, 271, 272, 289, 297, 382, 398, 402, 403, 404, 406, 414, 415, 416], "fly": [2, 216, 325, 398, 404, 416, 418, 421], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 122, 172, 410, 421], "pre": [2, 7, 22, 27, 38, 45, 54, 55, 59, 64, 70, 86, 94, 122, 126, 144, 145, 151, 152, 192, 212, 214, 218, 421], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 218, 247, 251, 261, 280, 290, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 327, 328, 329, 330, 331, 333, 334, 342, 360, 374, 399, 402, 403, 404, 409, 414, 416, 420, 421], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 83, 99, 106, 112, 130, 131, 132, 144, 146, 147, 172, 200, 232, 233, 243, 245, 259, 260, 293, 364, 379, 391, 392, 402, 403, 404, 405, 407, 408, 411, 414, 415, 418, 420], "pipelin": [2, 3, 7, 397, 404], "replac": [2, 3, 6, 7, 31, 32, 39, 45, 61, 80, 86, 99, 106, 107, 165, 177, 179, 185, 225, 245, 397, 414, 418], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 86, 101, 122, 126, 144, 145, 151, 152, 165, 197, 210, 218, 227, 228, 246, 271, 272, 293, 377, 397, 399, 403, 404, 405, 407, 410, 416, 418, 421], "produc": [2, 162, 165, 166, 232, 233, 254, 260, 267, 286, 288, 289, 362, 404, 405, 406, 407, 409, 418, 421], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 90, 105, 122, 126, 144, 145, 146, 147, 151, 152, 210, 218, 308, 309, 311, 324, 326, 328, 329, 330, 331, 333, 334, 404], "download": [2, 7, 10, 80, 82, 83, 84, 86, 87, 88, 130, 192, 214, 362, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 145, 403, 414, 415, 416], "robosetexperiencereplai": [2, 106, 107], "fk1": [2, 87], "v4": [2, 87, 126, 144, 162, 196, 351, 352, 353, 354, 356, 357, 358, 359, 402, 404, 417], "expert": [2, 87], "fk1_microopenrandom_v2d": [2, 87], "func": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88, 217], "obs_norm": 2, "norm": [2, 4, 8, 118, 119, 229, 379, 402, 403, 404, 414, 415, 416], "num_work": [2, 50, 52, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 139, 144, 151, 402, 403], "os": [2, 52, 70, 89, 403], "cpu_count": [2, 52, 70, 89], "num_chunk": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88], "1000": [2, 4, 56, 64, 93, 98, 106, 107, 122, 126, 144, 145, 151, 152, 169, 216, 227, 245, 270, 271, 272, 294, 298, 323, 402, 403, 404, 405, 407, 409, 411, 417, 418], "mp_start_method": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88, 144, 151, 403, 420], "fork": [2, 5, 80, 81, 82, 83, 84, 85, 86, 87, 88, 402, 403, 404, 405, 414, 415, 417, 420], "recreat": [2, 416], "customari": [2, 397], "moreov": [2, 3], "fine": [2, 3, 24, 56, 65, 66, 99, 101, 106, 122, 126, 144, 145, 151, 152, 166, 186, 409, 417], "grain": [2, 3, 56, 65, 66, 99, 101, 106, 122, 126, 144, 145, 151, 152, 166], "nomenclatur": 2, "compact": [2, 62, 90, 91, 97], "propos": [2, 169, 179, 255, 323, 332, 397, 405, 418], "replaybufferensembl": [2, 80, 104, 110, 117], "primit": [2, 3, 4, 86, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 99, 101, 112, 122, 126, 136, 137, 144, 145, 151, 152, 218, 402, 415], "dummi": [2, 3, 152, 360, 402, 409, 421], "semant": [2, 60, 61, 125, 127, 397], "ident": [2, 3, 14, 15, 16, 45, 50, 52, 56, 57, 64, 65, 66, 93, 101, 106, 122, 125, 126, 127, 139, 144, 145, 151, 152, 179, 229, 259, 260, 309, 311, 324, 329, 331, 333, 334, 342, 343, 344, 345, 391, 392, 403, 406, 414, 415], "another_kei": [2, 101], "renam": [2, 3, 50, 52, 57, 101, 195, 197, 225, 402], "resiz": [2, 3, 88, 101, 169, 403, 405, 406, 418, 421], "imag": [2, 3, 4, 7, 11, 86, 171, 174, 192, 208, 214, 254, 360, 362, 402, 403, 406, 410, 415, 417, 421], "comops": 2, "totensorimag": [2, 3, 88, 101, 169, 196, 403, 405, 418, 420, 421], "renametransform": [2, 3, 101, 122, 126, 144, 145, 151, 152], "rb0": [2, 101], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 138, 144, 145, 151, 152, 159, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 182, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 209, 210, 211, 212, 214, 216, 230, 231, 241, 249, 253, 256, 273, 282, 283, 285, 286, 287, 288, 289, 290, 293, 294, 295, 297, 298, 300, 301, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 322, 324, 325, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 361, 362, 389, 397, 402, 403, 404, 405, 407, 408, 411, 413, 414, 415, 416, 417, 418, 420, 421], "pixel": [2, 3, 7, 31, 88, 101, 120, 121, 125, 127, 128, 148, 169, 171, 174, 179, 182, 184, 188, 190, 192, 196, 208, 212, 214, 235, 265, 266, 360, 362, 397, 402, 403, 405, 410, 414, 417, 418, 420, 421], "rb1": [2, 101], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 138, 144, 145, 151, 152, 159, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 182, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 209, 211, 212, 214, 216, 230, 231, 241, 242, 249, 253, 256, 273, 274, 282, 283, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 305, 308, 309, 310, 311, 316, 317, 322, 324, 325, 328, 329, 330, 331, 333, 340, 342, 343, 344, 345, 360, 362, 375, 389, 397, 402, 403, 404, 405, 407, 411, 413, 414, 415, 416, 417, 418, 420, 421], "pixels33": [2, 101], "data0": [2, 101], "244": [2, 101, 192, 214, 416], "data1": [2, 101], "_": [2, 8, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 123, 130, 155, 156, 170, 175, 177, 178, 186, 188, 195, 208, 216, 218, 270, 285, 297, 302, 307, 308, 309, 311, 312, 316, 317, 324, 328, 329, 331, 333, 334, 342, 343, 344, 345, 364, 402, 403, 404, 405, 411, 414, 415, 416, 418, 420], "rang": [2, 3, 4, 8, 12, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 112, 122, 123, 126, 136, 137, 144, 145, 151, 152, 197, 208, 216, 218, 248, 252, 270, 325, 333, 334, 398, 399, 402, 404, 405, 408, 409, 411, 414, 415, 416, 418, 420], "parent": [2, 3, 21, 31, 32, 37, 39, 61, 69, 81, 101, 110, 117, 122, 126, 144, 145, 151, 152, 162, 166, 169, 170, 173, 176, 179, 182, 183, 188, 192, 200, 204, 205, 206, 207, 209, 211, 212, 218, 249, 253, 286, 305, 326, 328, 346, 360, 362, 402, 409, 416, 420, 421], "basic": [2, 138, 397, 404, 408, 409, 411, 414, 421], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 165, 209, 210, 216, 218, 240, 250, 258, 262, 267, 279, 280, 281, 293, 308, 311, 326, 328, 330, 331, 407, 409, 416, 418], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 109, 115, 122, 126, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 225, 226, 229, 231, 232, 233, 235, 236, 237, 238, 241, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 262, 263, 271, 272, 274, 275, 276, 277, 278, 280, 283, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 373, 377, 382, 389, 397, 398, 399, 402, 403, 404, 405, 406, 414, 415, 416, 420, 421], "send": [2, 3, 8, 369, 420], "receiv": [2, 3, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 209, 210, 218, 254, 348, 398, 402, 404, 408, 413, 416], "spawn": [2, 3, 4, 18, 22, 130, 139, 144, 151, 403, 414, 415], "check_env_spec": [2, 3, 126, 144, 162, 194, 360, 395, 404, 414, 415, 416], "saniti": [2, 3, 7, 220, 404], "automati": 2, "make_composite_from_td": [2, 69, 395, 416], "fall": [2, 4, 82], "categori": [2, 31, 83, 397, 399], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 45, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 172, 187, 216, 218, 219, 245, 246, 271, 272, 275, 276, 285, 290, 291, 294, 295, 296, 297, 298, 301, 308, 309, 311, 312, 324, 328, 329, 331, 333, 334, 395, 397, 402, 403, 404, 414, 416, 420, 421], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 163, 166, 175, 178, 194, 206, 223, 230, 256, 285, 297, 300, 302, 330, 395, 416, 418], "boundeddiscret": [2, 28, 31, 404], "boundedcontinu": [2, 22, 28, 31, 122, 126, 144, 145, 151, 152, 404, 414, 415, 416, 421], "unboundeddiscret": [2, 71, 145, 395, 416, 421], "unboundedcontinu": [2, 71, 122, 126, 144, 145, 151, 152, 194, 223, 300, 305, 395, 404, 405, 414, 415, 416, 421], "implicitli": 2, "onehot": [2, 25, 26, 30, 34, 43, 44, 49, 118, 119, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 242, 274, 290, 295, 313, 315, 316, 317, 340, 397, 407], "multionehot": [2, 41, 42, 44, 313, 316, 317, 340, 395], "multicategor": [2, 42, 43, 44, 395], "binari": [2, 3, 7, 26, 27, 153, 163, 167, 242, 274, 290, 291, 295, 296, 313, 316, 317, 340, 395], "concept": [2, 122, 126, 144, 145, 151, 152, 270, 403, 418], "arbitrari": [2, 3, 25, 56, 122, 126, 144, 145, 151, 152, 165, 397, 402, 403, 416, 418], "combin": [2, 4, 36, 55, 209, 333, 403, 410, 418], "relat": [2, 3, 4, 10, 51, 144, 182, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 403, 411, 416], "nevertheless": [2, 3, 404, 406, 418], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 93, 106, 107, 166, 297, 300, 309, 311, 324, 326, 329, 331, 333, 334, 414, 415, 416, 418, 420], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 106, 107, 118, 119, 122, 125, 126, 127, 128, 131, 132, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 169, 170, 177, 188, 205, 206, 207, 210, 216, 218, 229, 247, 250, 251, 259, 260, 280, 281, 290, 295, 301, 309, 311, 320, 326, 327, 331, 342, 344, 345, 375, 376, 399, 402, 403, 404, 405, 416, 421], "similarli": [2, 21, 27, 38, 45, 54, 55, 59, 64, 105, 110, 122, 126, 144, 145, 151, 152, 218, 259, 299, 300, 316, 324, 421], "possess": [2, 69, 82], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 99, 163, 166, 169, 170, 208, 211, 223, 402, 405, 414, 415, 416], "move": [2, 4, 27, 38, 45, 54, 55, 59, 64, 69, 88, 122, 126, 127, 144, 145, 151, 152, 162, 173, 176, 192, 206, 209, 210, 212, 214, 216, 218, 225, 254, 297, 377, 402, 403, 405, 406, 420, 421], "unbind": [2, 50, 51, 52, 56, 57, 65, 66, 249, 253], "said": [2, 404], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 54, 65, 69, 98, 99, 169, 182, 193, 211, 319, 342, 344, 345, 398, 404, 414, 415, 416], "seen": [2, 18, 19, 20, 21, 31, 32, 39, 61, 122, 126, 144, 145, 151, 152, 176, 398, 402, 403, 405, 408, 414, 415, 418], "predict": [2, 3, 45, 58, 241, 243, 255, 256, 289, 303, 308, 310, 315, 318, 320, 321, 325, 328, 330, 341, 397, 402, 403, 408], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 54, 55, 59, 64, 73, 75, 122, 126, 144, 145, 151, 152, 210, 218, 246, 308, 310, 311, 313, 316, 317, 318, 324, 325, 328, 329, 330, 331, 340, 342, 343, 344, 345, 350, 421], "utmost": 2, "commonli": [2, 99, 106, 107, 421], "emploi": [2, 263], "languag": [2, 24, 58], "scarc": 2, "address": [2, 418], "subdomain": 2, "facilit": [2, 3, 7, 191, 192, 206, 212, 214, 286, 287, 288, 397, 402, 405, 407, 416], "extern": [2, 3, 175, 178, 414, 421], "token": [2, 52, 53, 58, 67, 70, 89], "dm": [3, 402, 421], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 59, 60, 61, 65, 66, 69, 70, 71, 72, 73, 74, 75, 86, 103, 109, 112, 113, 115, 116, 118, 119, 122, 126, 130, 131, 132, 138, 139, 140, 144, 145, 151, 152, 155, 176, 197, 206, 212, 213, 259, 261, 286, 292, 308, 309, 311, 312, 313, 315, 316, 317, 319, 324, 328, 329, 330, 331, 333, 334, 343, 344, 369, 379, 397, 398, 399, 402, 403, 405, 406, 407, 408, 410, 414, 415, 416, 418, 421], "abl": [3, 135, 146, 147, 249, 253, 402, 404, 405, 407, 413, 414, 415, 416, 418, 420], "experi": [3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 98, 99, 220, 364, 365, 366, 367, 368, 369, 396, 403, 404, 409, 410, 414, 415, 418], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 125, 127, 261, 326], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 122, 123, 126, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 169, 172, 179, 185, 186, 188, 190, 195, 197, 200, 206, 209, 215, 216, 218, 360, 389, 402, 403, 404, 405, 413, 415, 417, 418, 420, 421], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 173, 177, 179, 186, 192, 206, 209, 210, 212, 214, 218, 221, 230, 231, 232, 233, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 293, 294, 295, 297, 298, 299, 300, 302, 305, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 389, 397, 398, 402, 403, 404, 405, 407, 408, 411, 413, 414, 415, 416, 417, 420], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 54, 55, 59, 64, 71, 101, 122, 126, 144, 145, 151, 152, 164, 165, 209, 215, 220, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 297, 298, 299, 301, 304, 326, 328, 403, 405, 409, 416, 418], "organis": [3, 87, 122, 126, 144, 145, 151, 152, 210, 403], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 86, 122, 125, 126, 127, 144, 145, 151, 152, 162, 179, 192, 212, 216, 218, 249, 253, 298, 308, 309, 311, 312, 313, 315, 317, 318, 319, 322, 324, 326, 328, 329, 330, 331, 333, 334, 340, 402, 405, 416], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 179, 218], "actual": [3, 4, 7, 50, 52, 57, 80, 82, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 215, 382, 398, 402, 404, 414, 415, 416], "retriev": [3, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 104, 122, 125, 126, 127, 144, 145, 151, 152, 170, 176, 179, 188, 225, 230, 232, 256, 293, 294, 298, 301, 305, 308, 309, 310, 311, 313, 325, 328, 329, 331, 333, 334, 340, 342, 343, 344, 345, 393, 399, 403, 404, 407, 416, 421], "care": [3, 8, 27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 362, 402, 404, 414, 415, 416, 418], "parametr": [3, 263, 298, 309, 311, 316, 324, 331, 402, 404], "hardwar": 3, "observation_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 184, 185, 186, 188, 190, 192, 194, 196, 200, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 218, 230, 249, 253, 256, 383, 389, 402, 404, 408, 413, 414, 415, 416, 421], "pair": [3, 45, 50, 52, 54, 57, 64, 82, 120, 121, 122, 126, 144, 145, 151, 152, 197, 206, 249, 286, 294, 298, 326, 342, 343, 344, 345, 346, 397, 398, 402, 403, 404, 407, 408, 413, 416, 421], "state_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 230, 256, 416, 421], "reward_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 166, 167, 172, 173, 175, 176, 178, 194, 198, 199, 200, 202, 209, 211, 218, 230, 256, 404, 414, 415, 416, 421], "done_spec": [3, 122, 126, 144, 145, 151, 152, 175, 176, 178, 179, 194, 209, 218, 226, 414, 415, 416, 421], "flag": [3, 8, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 185, 271, 272, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 397, 414, 415, 416, 417], "input_spec": [3, 122, 126, 138, 144, 145, 151, 152, 162, 166, 173, 175, 176, 177, 188, 190, 194, 195, 200, 201, 204, 205, 206, 209, 210, 211, 213, 218, 404, 416], "full_action_spec": [3, 122, 126, 142, 143, 144, 145, 151, 152, 153, 154, 162, 230, 256, 404, 414, 415], "full_state_spec": [3, 122, 126, 144, 145, 151, 152, 162, 230, 256, 404], "lock": [3, 31, 32, 39, 50, 52, 57, 61, 122, 126, 144, 145, 151, 152, 166, 206, 216, 416], "output_spec": [3, 122, 126, 144, 145, 151, 152, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 210, 218, 416], "full_observation_spec": [3, 122, 126, 144, 145, 151, 152, 230, 256], "full_reward_spec": [3, 122, 126, 144, 145, 151, 152, 166, 176, 194, 414, 415], "full_done_spec": [3, 122, 126, 144, 145, 151, 152, 166, 176, 194, 226, 414, 415], "carri": [3, 21, 43, 70, 122, 126, 144, 145, 151, 152, 206, 326, 403, 405, 414, 415, 416, 418], "nontensorspec": [3, 395], "importantli": [3, 294, 298], "action_s": 3, "help": [3, 4, 27, 38, 45, 54, 55, 59, 64, 69, 122, 126, 144, 145, 151, 152, 179, 218, 308, 310, 325, 328, 330, 396, 398, 402, 403, 404, 405, 414, 415], "With": [3, 131, 132, 135, 205, 399, 403, 413, 414, 415, 418, 421], "necessarili": [3, 122, 126, 144, 145, 151, 152, 421], "present": [3, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 105, 122, 125, 126, 144, 145, 151, 152, 180, 197, 201, 206, 210, 218, 225, 226, 234, 235, 236, 237, 238, 244, 249, 251, 253, 263, 269, 271, 272, 293, 297, 298, 299, 300, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 393, 399, 402, 411, 413, 414, 415, 418, 420], "0s": [3, 80, 86, 206, 405], "step_and_maybe_reset": [3, 122, 126, 144, 145, 151, 152, 406], "done_kei": [3, 23, 35, 37, 46, 62, 90, 91, 97, 122, 126, 144, 145, 151, 152, 165, 169, 179, 197, 204, 218, 225, 414, 415], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 122, 126, 144, 145, 151, 152, 210, 218, 311, 312, 313, 315, 331, 404, 407, 414, 415, 418], "_reset": [3, 122, 126, 138, 144, 145, 151, 152, 163, 165, 166, 169, 175, 178, 185, 194, 226, 230, 256, 414, 420], "data_": [3, 122, 126, 144, 145, 151, 152], "append": [3, 8, 11, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 144, 145, 151, 152, 165, 172, 173, 197, 206, 210, 215, 248, 249, 252, 253, 290, 295, 402, 403, 404, 405, 414, 415, 416, 417, 418, 420], "seed": [3, 14, 15, 16, 17, 21, 56, 65, 66, 87, 101, 122, 126, 138, 144, 145, 146, 147, 151, 152, 155, 156, 163, 166, 175, 178, 194, 210, 220, 360, 379, 414], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 224, 234, 243, 246, 265, 276, 285, 294, 297, 298, 301, 309, 326, 375, 397, 402, 403, 404, 405, 407, 408, 411, 414, 416, 420, 421], "preced": [3, 45, 405], "risk": [3, 193], "overlap": [3, 65, 112], "reproduc": [3, 55, 59, 169, 220, 402, 404, 415], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 45, 50, 52, 53, 58, 67, 70, 71, 89, 93, 94, 95, 98, 99, 114, 122, 126, 144, 145, 151, 152, 177, 198, 204, 205, 207, 229, 279, 280, 281, 301, 309, 311, 316, 317, 324, 326, 327, 331, 362, 376, 402, 403, 404, 405, 407, 414, 415, 418], "max_step": [3, 11, 112, 122, 126, 136, 137, 138, 144, 145, 151, 152, 155, 156, 204, 218, 360, 406, 407, 408, 410, 411, 414, 415, 420, 421], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 58, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 168, 186, 228, 231, 242, 246, 249, 253, 256, 272, 273, 274, 282, 283, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 309, 311, 312, 316, 317, 319, 320, 321, 322, 324, 326, 329, 331, 333, 334, 340, 341, 342, 343, 344, 345, 375, 389, 395, 402, 404, 405, 408, 411, 413, 414, 415, 416, 417, 421], "trail": [3, 216], "treat": [3, 45, 398, 407, 408], "figur": [3, 402, 404, 405, 415, 416, 421], "brief": [3, 404, 406, 408, 418], "deliveri": 3, "design": [3, 27, 38, 45, 54, 55, 59, 64, 104, 110, 117, 122, 126, 136, 137, 144, 145, 151, 152, 162, 169, 193, 210, 218, 289, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 402, 403, 404, 405, 406, 407, 408, 413, 414, 415, 416, 418, 421], "metaclass": 3, "everi": [3, 8, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 59, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 108, 122, 126, 144, 145, 151, 152, 204, 205, 216, 218, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 259, 260, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 326, 379, 399, 402, 403, 404, 405, 406, 407, 414, 415, 416], "flank": [3, 405], "dual": 3, "strictli": [3, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331, 402, 404], "refer": [3, 7, 8, 9, 11, 21, 24, 27, 38, 45, 54, 55, 58, 59, 64, 122, 125, 126, 127, 144, 145, 151, 152, 210, 216, 218, 230, 242, 243, 256, 257, 258, 259, 260, 261, 265, 266, 275, 276, 291, 308, 311, 318, 319, 320, 321, 328, 331, 342, 347, 355, 401, 402, 404, 407, 408, 409, 410, 414, 415, 418, 420, 421], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 98, 99, 106, 122, 126, 144, 145, 151, 152, 173, 188, 192, 197, 199, 206, 210, 212, 214, 216, 218, 225, 232, 233, 234, 235, 236, 237, 238, 240, 244, 254, 257, 258, 259, 260, 262, 263, 267, 269, 273, 279, 280, 281, 282, 297, 315, 317, 323, 329, 332, 355, 373, 375, 376, 384, 385, 387, 389, 390, 391, 392, 393], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 136, 137, 157, 402], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 80, 86, 99, 106, 107, 395], "adjac": [3, 23, 182, 293], "junction": 3, "inittrack": [3, 249, 253, 293, 402, 405], "tutori": [3, 145, 394, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421], "scratch": [3, 8, 403, 416], "gym3": 3, "envpool": [3, 139, 140], "interfac": [3, 129, 141, 254, 262, 397, 398, 402, 404, 410, 416, 418], "simultan": [3, 20, 139, 140, 144, 151, 416], "advantag": [3, 8, 244, 308, 310, 325, 328, 330, 342, 343, 344, 345, 346, 347, 349, 351, 353, 355, 356, 358, 398, 399, 402, 403, 404, 405, 415, 416, 421], "scale": [3, 4, 24, 82, 122, 126, 144, 145, 151, 152, 169, 186, 188, 199, 205, 208, 216, 229, 243, 250, 264, 275, 276, 280, 281, 286, 287, 288, 294, 298, 300, 308, 309, 311, 324, 328, 329, 330, 331, 377, 383, 393, 397, 402, 403, 404, 405, 407, 415, 420], "varieti": [3, 11], "inherit": [3, 122, 126, 144, 145, 151, 152, 255, 259, 260, 326, 399, 404, 414, 415], "Of": [3, 7, 396, 416, 421], "cours": [3, 4, 396, 416, 421], "from_pixel": [3, 11, 118, 119, 120, 121, 125, 127, 128, 131, 132, 148, 169, 196, 360, 362, 402, 403, 405, 406, 410, 411, 417, 418, 420, 421], "81": [3, 402, 403, 416, 417], "simpli": [3, 6, 50, 52, 57, 70, 110, 112, 117, 180, 201, 215, 326, 342, 397, 398, 402, 404, 408, 414, 415, 421], "d": [3, 51, 54, 56, 64, 65, 66, 83, 85, 87, 88, 89, 98, 99, 229, 247, 251, 294, 298, 420], "privat": [3, 122, 126, 144, 145, 151, 152, 215, 416, 421], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 41, 43, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 112, 310, 325, 328, 370, 372, 375, 379, 382, 383, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 58, 101, 104, 153, 154, 188, 199, 250, 262, 275, 280, 281, 340, 397, 407, 408, 414, 416, 418], "inner": [3, 122, 126, 144, 145, 151, 152, 177, 399, 403, 404, 415, 421], "logic": [3, 414], "kept": [3, 23, 105, 107, 177, 201, 209, 220, 225, 250, 280, 281, 408, 414], "mind": [3, 80, 86, 99, 106, 107, 122, 126, 144, 145, 151, 152, 414, 415], "desig": 3, "wherev": 3, "expos": [3, 148, 175, 178, 299, 403], "modif": [3, 5, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 182, 218, 226, 326, 398, 404, 416], "lost": [3, 8, 215], "eras": [3, 25, 26, 28, 29, 30, 34, 41, 42, 43, 44, 47, 48, 49, 69, 71, 72, 73, 74, 75, 99, 106, 122, 126, 144, 145, 151, 152, 210], "intern": [3, 68, 400], "face": [3, 5, 8, 9, 406, 421], "NOT": [3, 90, 91, 97, 193], "outsid": [3, 16, 176, 398, 410, 414, 415, 416], "right": [3, 6, 7, 23, 58, 99, 106, 403, 404, 415, 416, 421], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 210, 218, 220, 342, 343, 344, 345, 414], "preclud": 3, "presenc": [3, 54, 64, 408], "annihil": 3, "reason": [3, 4, 8, 27, 38, 45, 54, 55, 59, 64, 86, 122, 126, 144, 145, 146, 147, 151, 152, 192, 212, 218, 253, 398, 402, 403, 404, 408, 409, 414, 416, 418], "advanc": [3, 21, 51, 56, 65, 66, 126, 406, 409, 418], "superse": 3, "pettingzoowrapp": [3, 395], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 71, 72, 73, 74, 75, 80, 122, 126, 135, 136, 137, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 397, 403, 407, 409, 415, 418], "associ": [3, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 218, 275, 393, 402, 418], "environemtn": 3, "__not__": [3, 294, 309, 311, 324, 329, 331, 333, 334], "constrain": [3, 186, 249, 253, 328], "li": 3, "fact": [3, 7, 8, 402, 404, 406, 414, 415, 416, 417, 418, 421], "know": [3, 4, 9, 51, 56, 65, 66, 125, 127, 227, 228, 326, 329, 375, 402, 403, 404, 405, 406, 407, 408, 409, 414, 415, 418], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "perfectli": [3, 399, 402, 416], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 408, 420], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 56, 60, 61, 69, 71, 72, 73, 74, 75, 80, 122, 126, 144, 145, 151, 152, 165, 393, 397], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 98, 99, 101, 104, 105, 106, 107, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 170, 175, 177, 178, 179, 180, 182, 186, 187, 188, 190, 192, 194, 195, 197, 199, 200, 201, 204, 206, 208, 210, 211, 212, 214, 216, 218, 220, 223, 225, 226, 229, 230, 231, 232, 233, 235, 236, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 262, 263, 272, 280, 281, 285, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 337, 340, 342, 343, 344, 345, 348, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 369, 372, 373, 375, 376, 377, 379, 393, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "500": [3, 402, 403, 416, 420, 421], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 80, 83, 144, 151], "bottleneck": [3, 8, 99, 106, 107], "great": [3, 7, 8, 414, 420], "speedup": [3, 8, 414, 421], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 175, 178, 225, 248, 252, 402, 404], "misspecifi": 3, "caus": [3, 7, 8, 93, 94, 114, 122, 126, 130, 144, 145, 151, 152, 193, 421], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 93, 122, 126, 144, 145, 151, 152, 153, 157, 169, 181, 187, 197, 205, 206, 207, 210, 218, 220, 227, 228, 245, 246, 271, 272, 311, 326, 331, 402, 404, 414, 415, 418], "mismatch": [3, 54, 403], "subprocess": [3, 14, 15, 17, 123, 144, 151], "multithreadedenv": [3, 395], "underneath": 3, "higher": [3, 4, 99, 172, 301, 402, 403, 404, 414, 418, 421], "flexibl": [3, 9, 139, 335, 398, 399, 402, 418, 421], "cover": [3, 125, 127, 396, 404, 406, 409, 410, 416, 420], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 88, 89, 101, 122, 126, 135, 138, 141, 144, 145, 146, 147, 151, 152, 166, 173, 175, 176, 179, 180, 186, 192, 194, 195, 201, 204, 206, 209, 210, 212, 214, 216, 218, 221, 224, 227, 228, 232, 233, 254, 259, 260, 263, 273, 282, 290, 294, 297, 298, 305, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 336, 340, 348, 360, 391, 395, 397, 402, 403, 404, 409, 414, 415, 416, 418, 421], "atari": [3, 4, 80, 169, 362, 410, 421], "classic": [3, 138, 147, 403], "benchmark_batched_env": 3, "seamlessli": [3, 416], "infrastructur": [3, 414, 415], "act": [3, 4, 106, 107, 146, 147, 210, 241, 260, 309, 311, 312, 324, 329, 331, 333, 334, 405, 414, 415, 418], "world": [3, 5, 138, 303, 320, 410, 414, 415, 416, 421], "paradigm": [3, 17, 415], "decpodp": 3, "game": [3, 4, 5, 80, 136, 137, 142, 143, 362, 410], "thank": [3, 402, 406], "carrier": [3, 404, 405, 406, 418], "particular": [3, 27, 38, 45, 54, 55, 59, 64, 70, 82, 83, 122, 126, 144, 145, 151, 152, 210, 218, 398, 399, 403, 405, 406, 413, 415, 418], "thu": [3, 325, 415], "let": [3, 6, 7, 11, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 67, 122, 126, 144, 145, 146, 147, 151, 152, 169, 218, 249, 253, 259, 260, 290, 375, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "vma": [3, 155, 156, 360, 414, 415], "robot": [3, 5, 7, 86, 192, 212, 214, 415], "vmasenv": [3, 360, 395, 414, 415], "balanc": [3, 120, 121, 402, 403, 421], "num_env": [3, 21, 125, 129, 140, 155, 156, 360, 414, 415], "n_agent": [3, 155, 156, 259, 260, 261, 273, 282, 340, 360, 414, 415], "ground_rew": 3, "pos_rew": [3, 415], "style": [3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88], "vari": [3, 125, 127, 128, 146, 147, 148, 155, 193, 415], "creation": [3, 144, 151, 421], "info_spec": [3, 144], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 34, 43, 44, 49, 118, 119, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 179, 194, 226, 242, 267, 270, 274, 290, 291, 294, 295, 296, 313, 316, 317, 340, 395, 405, 414, 415, 421], "simpl": [3, 9, 27, 38, 45, 54, 55, 59, 64, 69, 122, 126, 144, 145, 151, 152, 218, 235, 293, 298, 313, 315, 326, 330, 397, 398, 402, 403, 404, 406, 407, 408, 414, 415, 418, 421], "prefix": [3, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 122, 126, 144, 145, 151, 152, 210, 218, 294, 311, 326, 331, 361, 405, 408, 421], "exactli": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 128, 144, 145, 151, 152, 210, 218, 247, 251, 267, 311, 331, 402, 405, 409, 414, 415], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 122, 126, 144, 145, 151, 152, 162, 163, 177, 219, 225, 227, 228, 230, 245, 246, 255, 256, 271, 272, 293, 414, 415], "reward_kei": [3, 35, 37, 46, 62, 90, 91, 97, 122, 126, 144, 145, 151, 152, 218, 225, 230, 256, 373, 377, 414, 415], "set_kei": [3, 179, 308, 310, 311, 313, 316, 317, 318, 324, 325, 326, 328, 329, 330, 331, 340, 346, 402, 414, 415], "awai": [3, 404, 406, 414, 415], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 41, 42, 43, 44, 47, 48, 49, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 185, 204, 298], "full": [3, 122, 126, 144, 145, 151, 152, 249, 253, 291, 370, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "autoresettransform": 3, "invalid": [3, 27, 38, 45, 54, 55, 59, 64, 112, 122, 126, 144, 145, 151, 152, 157, 218, 257, 258], "nan": [3, 165, 215], "auto_reset": [3, 122, 126, 144, 145, 151, 152, 165, 218, 416], "auto_reset_replac": [3, 165], "placehold": [3, 128, 179, 210], "set_gym_backend": [3, 122, 125, 126, 144, 145, 151, 152, 158, 165, 395, 406, 420], "autoresettinggymenv": [3, 165], "_step": [3, 122, 126, 144, 145, 151, 152, 163, 165, 166, 175, 178, 182, 194, 195, 420], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 122, 126, 138, 144, 145, 151, 152, 163, 165, 166, 173, 175, 178, 192, 194, 206, 209, 210, 212, 214, 218, 227, 228, 230, 242, 245, 256, 259, 260, 273, 282, 294, 297, 302, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 399, 402, 416, 420], "super": [3, 138, 163, 165, 166, 175, 178, 194, 230, 242, 256, 302, 309, 311, 312, 317, 324, 329, 331, 333, 334, 402, 416, 420], "td_reset": [3, 165], "exclud": [3, 8, 64, 82, 87, 122, 126, 144, 145, 151, 152, 165, 169, 180, 225, 273, 310, 328, 414, 415, 418], "r": [3, 4, 45, 162, 163, 165, 172, 188, 202, 216, 229, 231, 248, 298, 307, 341, 360, 397, 403, 416, 421], "break_when_any_don": [3, 122, 126, 144, 145, 151, 152, 165, 218, 231, 293, 415], "3633e": [3, 165], "02": [3, 122, 126, 144, 145, 151, 152, 165, 401, 402, 403, 404, 405, 411, 414, 416, 417, 419], "4877e": [3, 165], "01": [3, 165, 188, 229, 271, 272, 304, 308, 310, 325, 328, 401, 402, 403, 405, 414, 416, 417, 419], "2849e": [3, 165], "7584e": [3, 165], "6609e": [3, 165], "6166e": [3, 165], "8366e": [3, 165], "2761e": [3, 165], "5685e": [3, 165], "4102e": [3, 165], "8111e": [3, 165], "9959e": [3, 165], "0865e": [3, 165], "5644e": [3, 165], "2119e": [3, 165], "2542e": [3, 165], "03": [3, 122, 126, 144, 145, 151, 152, 165, 188, 401, 402, 403, 405, 416, 417, 419], "9952e": [3, 165], "4059e": [3, 165], "2094e": [3, 165], "9009e": [3, 165], "5140e": [3, 165], "3554e": [3, 165], "2920e": [3, 165], "7893e": [3, 165], "6429e": [3, 165], "3057e": [3, 165], "2867e": [3, 165], "6963e": [3, 165], "3818e": [3, 165], "2576e": [3, 165], "2679e": [3, 165], "1640e": [3, 165], "00": [3, 118, 119, 165, 401, 402, 403, 404, 405, 414, 415, 416, 417, 419], "6972e": [3, 165], "0212e": [3, 165], "5959e": [3, 165], "4637e": [3, 165], "3121e": [3, 165], "2168e": [3, 165], "5232e": [3, 165], "7704e": [3, 165], "7457e": [3, 165], "4127e": [3, 165], "1064e": [3, 165], "0854e": [3, 165], "5712e": [3, 165], "2189e": [3, 165], "5235e": [3, 165], "8289e": [3, 165], "0009e": [3, 165], "0257e": [3, 165], "8893e": [3, 165], "5872e": [3, 165], "9405e": [3, 165], "7766e": [3, 165], "0403e": [3, 165], "0626e": [3, 165], "2959e": [3, 165], "7263e": [3, 165], "2775e": [3, 165], "9564e": [3, 165], "0411e": [3, 165], "6769e": [3, 165], "6354e": [3, 165], "8698e": [3, 165], "1765e": [3, 165], "6292e": [3, 165], "5375e": [3, 165], "1820e": [3, 165], "7023e": [3, 165], "5836e": [3, 165], "9016e": [3, 165], "4826e": [3, 165], "6191e": [3, 165], "6387e": [3, 165], "8667e": [3, 165], "2056e": [3, 165], "1147e": [3, 165], "5991e": [3, 165], "0278e": [3, 165], "5219e": [3, 165], "3067e": [3, 165], "6617e": [3, 165], "3322e": [3, 165], "2629e": [3, 165], "4599e": [3, 165], "7298e": [3, 165], "5848e": [3, 165], "0148e": [3, 165], "5745e": [3, 165], "6982e": [3, 165], "7877e": [3, 165], "3527e": [3, 165], "7285e": [3, 165], "6668e": [3, 165], "0583e": [3, 165], "6956e": [3, 165], "3962e": [3, 165], "9845e": [3, 165], "5015e": [3, 165], "5903e": [3, 165], "9993e": [3, 165], "9418e": [3, 165], "0196e": [3, 165], "6557e": [3, 165], "2109e": [3, 165], "8997e": [3, 165], "1507e": [3, 165], "7363e": [3, 165], "0310e": [3, 165], "9574e": [3, 165], "8980e": [3, 165], "0090e": [3, 165], "forecast": 3, "awar": [3, 7, 93, 94, 95, 108, 110, 114, 249, 253, 403, 405], "detect": [3, 88, 326, 398], "return_contigu": [3, 122, 126, 144, 145, 151, 152, 220, 413], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 57, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 112, 122, 124, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 179, 180, 181, 182, 185, 186, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 210, 215, 216, 218, 225, 226, 227, 228, 230, 245, 249, 253, 255, 256, 271, 272, 289, 291, 293, 296, 297, 298, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 379, 402, 414, 416], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 45, 51, 54, 55, 58, 59, 64, 65, 71, 86, 98, 99, 101, 122, 126, 144, 145, 151, 152, 162, 165, 169, 173, 175, 178, 186, 188, 192, 197, 198, 199, 205, 206, 208, 209, 210, 212, 214, 216, 218, 227, 228, 229, 231, 240, 243, 247, 250, 251, 254, 257, 258, 262, 263, 270, 275, 276, 279, 281, 297, 301, 304, 306, 307, 308, 309, 310, 311, 315, 316, 317, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 341, 347, 348, 349, 350, 351, 352, 353, 354, 355, 377, 402, 403, 418, 421], "_set_se": [3, 163, 166, 175, 178, 194, 416], "lazystackedtensordict": [3, 61, 80, 122, 126, 138, 144, 145, 151, 152, 413], "float32": [3, 14, 15, 16, 28, 31, 35, 50, 51, 52, 54, 57, 58, 62, 64, 65, 66, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 99, 114, 118, 119, 122, 125, 126, 127, 131, 132, 138, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 188, 190, 194, 195, 197, 201, 204, 206, 208, 223, 225, 230, 231, 241, 242, 249, 253, 256, 271, 272, 273, 274, 282, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 300, 302, 305, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 340, 397, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421], "exclusive_field": [3, 80, 413], "stack_dim": [3, 80, 413], "dramat": 3, "carefulli": [3, 414, 415, 421], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 218, 220, 285, 290, 291, 294, 295, 296, 297, 298, 309, 311, 324, 329, 331, 333, 334, 404, 414, 415], "plain": [3, 8, 406], "larg": [3, 4, 30, 50, 52, 57, 175, 178, 212, 308, 310, 325, 328, 330, 403, 404, 414, 415, 418], "expens": [3, 99, 106, 107, 360, 418], "absent": [3, 31, 32, 39, 61, 64, 82, 122, 126, 144, 145, 151, 152, 210], "torchvis": [3, 11, 192, 214, 364, 414, 420, 421], "base_env": [3, 119, 122, 126, 127, 132, 143, 144, 145, 151, 152, 154, 162, 163, 166, 172, 175, 177, 178, 186, 190, 194, 196, 202, 204, 206, 207, 210, 218, 362, 402, 403, 404, 414, 417, 420, 421], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 138, 144, 145, 151, 152, 161, 164, 166, 173, 179, 206, 210, 218, 232, 233, 254, 261, 307, 326, 360, 384, 385, 391, 392, 393, 403, 418], "bring": [3, 404, 406, 421], "signific": [3, 5, 8, 404, 421], "kind": [3, 56, 69, 225, 408, 414, 418], "consult": 3, "interest": [3, 294, 298, 397, 403, 404, 406, 415, 416, 421], "resize_par": 3, "easi": [3, 5, 11, 80, 85, 120, 121, 122, 126, 131, 132, 144, 145, 151, 152, 227, 228, 245, 246, 271, 272, 397, 398, 402, 403, 404, 415, 417, 418, 421], "revers": [3, 251], "order": [3, 11, 16, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 107, 122, 126, 144, 145, 151, 152, 170, 175, 178, 190, 210, 218, 270, 285, 290, 297, 299, 300, 302, 308, 309, 311, 312, 316, 317, 324, 328, 329, 330, 331, 333, 334, 403, 414, 415], "chain": [3, 50, 51, 52, 56, 57, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 173, 177, 232, 233, 300, 421], "in_keys_inv": [3, 159, 172, 175, 176, 178, 188, 189, 190, 194, 195, 197, 202, 209, 211, 402, 413, 416, 421], "append_transform": [3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 159, 162, 168, 192, 206, 210, 212, 216, 231, 249, 253, 360, 402, 405, 414, 416, 418, 420, 421], "doubletofloat": [3, 402, 404, 413], "float64": [3, 27, 38, 45, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 120, 121, 122, 126, 136, 137, 144, 145, 151, 152, 162, 173, 175, 178, 192, 206, 209, 210, 212, 214, 218, 297, 413, 421], "constrast": 3, "out_keys_inv": [3, 159, 172, 175, 176, 178, 188, 189, 190, 194, 195, 202, 209, 211, 416], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 93, 94, 95, 99, 105, 106, 108, 110, 114, 122, 126, 144, 145, 151, 152, 166, 173, 175, 176, 178, 180, 186, 194, 195, 201, 204, 209, 210, 216, 218, 251, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 398, 402, 405, 414, 415, 416, 417, 418, 421], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 125, 126, 127, 144, 145, 151, 152, 153, 154, 175, 178, 179, 200, 210, 218, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 360, 362, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 399, 402, 404, 406, 418], "manipul": [3, 4, 8, 120, 121, 192, 212, 421], "third_transform": 3, "unexpect": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 421], "behviour": 3, "fortun": [3, 405, 406, 407, 410], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 80, 93, 122, 126, 144, 145, 151, 152, 206, 218, 226, 298, 342, 343, 344, 345, 402, 404, 410, 414, 415], "catfram": [3, 293, 403], "hold": [3, 338, 339, 416, 418], "notic": [3, 112, 169, 404, 411, 416], "parenthood": 3, "henc": [3, 51, 193, 226, 259, 397, 402, 404, 414, 415, 416], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 144, 151, 360, 416], "discret": [3, 25, 26, 28, 30, 31, 34, 41, 42, 43, 44, 49, 71, 74, 75, 122, 125, 126, 127, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 162, 177, 267, 270, 274, 315, 316, 317, 318, 397, 403, 404, 407, 414, 415, 416, 421], "might": [3, 50, 52, 53, 57, 366, 396, 402, 406, 421], "action_mask": [3, 131, 132, 146, 147, 149, 150, 163], "unavail": [3, 146, 147], "probabl": [3, 4, 8, 58, 101, 104, 231, 240, 242, 245, 247, 249, 251, 253, 254, 257, 258, 267, 280, 281, 294, 298, 311, 397, 403, 407, 420], "probabilistictensordictmodul": [3, 186, 298, 299, 420], "tensordictsequenti": [3, 54, 64, 231, 245, 249, 253, 271, 290, 293, 299, 305, 397, 402, 403, 405, 407, 411, 413, 414, 417, 420], "maskedcategor": [3, 258, 395], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 173, 186, 192, 206, 209, 210, 212, 214, 218, 230, 231, 232, 233, 235, 236, 237, 238, 242, 244, 245, 246, 254, 256, 259, 260, 262, 263, 264, 271, 272, 274, 275, 276, 285, 286, 287, 288, 292, 293, 294, 295, 297, 300, 302, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 389, 397, 403, 413, 417, 420], "in_feat": 3, "out_feat": 3, "logit": [3, 52, 58, 241, 257, 258, 267, 270, 291, 294, 316, 317, 397], "dist": [3, 10, 257, 258, 267, 407], "distribution_class": [3, 186, 286, 287, 288, 289, 294, 298, 300, 308, 309, 311, 316, 317, 324, 328, 329, 330, 331, 397, 402, 404, 407, 414, 415, 420], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 84, 118, 119, 122, 126, 127, 131, 132, 137, 140, 142, 143, 144, 145, 146, 147, 151, 152, 154, 156, 218, 220, 228, 246, 249, 253, 272, 283, 286, 287, 288, 293, 295, 303, 326, 340, 397, 402, 403, 404, 405, 408, 411, 414, 415, 421], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 163, 193, 218], "enviorn": [3, 136, 146, 147, 155, 156], "itself": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 158, 165, 218, 326, 333, 404, 406], "ey": 3, "report": [3, 118, 119, 131, 132, 410], "foremost": 3, "callback": [3, 122, 126, 144, 145, 151, 152, 415], "ad": [3, 4, 16, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 122, 126, 144, 145, 151, 152, 200, 210, 218, 229, 262, 263, 271, 272, 308, 310, 311, 313, 318, 325, 328, 331, 340, 403, 405, 407, 414, 418, 421], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 66, 98, 99, 105, 200, 216, 218, 271, 272, 293, 367, 372, 403, 405, 406, 409, 415, 416, 418], "tensordictrecord": [3, 395], "videorecord": [3, 11, 360, 395, 404, 410, 411, 414], "csvlogger": [3, 11, 360, 362, 395, 403, 410, 411, 414], "wandblogg": [3, 395, 410], "tensorboardlogg": [3, 389, 395, 410], "tag": [3, 7, 11, 360, 362, 364, 367, 393, 410, 411, 414], "mp4": [3, 360, 362, 364, 411, 414], "video_format": [3, 360, 362, 364, 411, 414], "whc": 3, "cwh": 3, "exp": [3, 264, 307], "al": [3, 24, 125, 127, 179, 190, 230, 421], "pong": [3, 80, 140, 190, 421], "v5": [3, 125, 127, 140, 179, 190, 421], "cach": [3, 50, 52, 70, 80, 82, 83, 84, 86, 87, 88, 89, 99, 106, 122, 126, 144, 145, 151, 152, 165, 175, 178, 192, 210, 214, 225, 371, 417], "grow": 3, "until": [3, 7, 21, 207, 209, 218, 404, 405, 411, 414, 415], "dumpi": 3, "tediou": [3, 406], "workspac": [3, 122, 126, 144, 145, 151, 152], "pixelrendertransform": [3, 395, 414], "stream": [3, 86], "alik": [3, 360], "envcreat": [3, 16, 22, 144, 151, 360, 389, 390, 393, 395, 402, 403, 420, 421], "render_mod": [3, 360, 416], "rgb_arrai": [3, 360, 414, 415, 416], "uncom": [3, 410], "line": [3, 7, 27, 38, 45, 54, 55, 59, 64, 80, 122, 126, 144, 145, 151, 152, 218, 403, 410, 414, 415, 420, 421], "comment": [3, 399, 403, 420], "pixels_record": [3, 360], "close": [3, 16, 126, 139, 186, 308, 310, 325, 328, 360, 402, 403, 406, 413, 414, 416, 420], "mission": 3, "irrespect": [3, 297, 298], "dmcontrol": [3, 122, 126, 144, 145, 151, 152], "jumanji": [3, 122, 126, 131, 132, 144, 145, 151, 152], "special": [3, 72, 74, 395, 397, 402, 405, 421], "framework": [3, 4, 9, 22, 118, 119, 122, 126, 131, 132, 138, 144, 145, 151, 152, 247, 420, 421], "Its": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 216, 218, 297, 346], "success": [3, 80, 81, 82, 83, 84, 85, 86, 87, 88, 169, 209, 245, 311, 333, 403, 409, 411, 416, 418, 420], "foundat": [3, 5, 146, 147, 404, 415], "inspir": [3, 416], "gone": [3, 4, 5, 293], "hard": [3, 7, 112, 120, 121, 144, 323, 403, 421], "prefer": [3, 14, 15, 17, 20, 23, 24, 51, 56, 65, 66, 193, 201, 328, 333, 376, 397, 404, 414, 415, 418], "maintain": [3, 5, 9, 33, 416], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 403, 404, 405, 409, 414, 415, 416, 418, 421], "decor": [3, 8, 12, 161, 326, 342, 343, 344, 345, 420], "relev": [3, 58, 342, 343, 344, 345, 346, 369, 416], "gym_backend": [3, 161, 395], "env1": [3, 231, 413], "venv": 3, "python3": [3, 6, 7, 10, 420], "site": [3, 6, 7, 87, 161, 420], "env2": [3, 413], "_env": [3, 6, 125, 420, 421], "classic_control": [3, 420], "pendulumenv": [3, 395, 416], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 134, 158], "handi": [3, 122, 126, 144, 145, 151, 152, 410], "side": [3, 4, 421], "v0": [3, 14, 15, 50, 52, 57, 122, 126, 128, 131, 132, 133, 134, 144, 145, 151, 152, 173, 210, 216, 389], "26": [3, 122, 126, 144, 145, 151, 152, 401, 403, 404, 408, 414, 416, 419], "fun": [3, 12, 161, 404, 414, 415], "reveal": 4, "bug": [4, 420], "curv": 4, "exploit": [4, 407], "cv": 4, "flip": 4, "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 169, 175, 178, 180, 188, 195, 197, 218, 306, 316, 324, 395, 416], "prescript": 4, "tune": [4, 24, 186, 414, 415, 417], "coeffici": [4, 24, 33, 58, 186, 415], "bonu": [4, 308, 310, 325, 328], "beta": [4, 51, 65, 98, 99, 316, 324, 325, 402, 403, 418, 420], "reduc": [4, 6, 30, 112, 205, 229, 280, 395, 403, 414], "downstream": [4, 398, 402], "formul": [4, 414, 415], "ob": [4, 8, 23, 31, 32, 39, 51, 56, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 101, 106, 107, 112, 122, 126, 144, 145, 151, 152, 163, 165, 175, 176, 178, 188, 202, 208, 223, 225, 235, 236, 237, 238, 259, 260, 261, 295, 302, 309, 311, 312, 317, 324, 329, 331, 333, 334, 342, 343, 344, 345, 403, 413, 414, 416, 418, 420, 421], "rate": [4, 11, 80, 216, 341, 403, 404, 414, 415], "gradient": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 250, 258, 263, 267, 280, 281, 308, 310, 311, 312, 316, 317, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 341, 342, 343, 344, 345, 379, 402, 404, 414, 415, 416], "easier": [4, 55, 397, 402], "local": [4, 7, 10, 16, 21, 27, 38, 45, 54, 55, 59, 64, 99, 106, 122, 126, 144, 145, 151, 152, 210, 218, 259, 260, 273, 282, 340, 367, 369, 410, 411, 414, 415], "optima": 4, "sens": [4, 50, 52, 57, 409, 416], "product": [4, 9, 247, 248, 251, 252, 391, 392], "sum": [4, 21, 27, 43, 64, 112, 118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 168, 200, 257, 258, 280, 282, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 327, 328, 329, 330, 331, 333, 334, 341, 348, 398, 402, 403, 404, 405, 408, 411, 414, 415, 416, 421], "stat": [4, 188, 216, 383, 393, 403, 404], "w": [4, 101, 142, 143, 169, 171, 174, 196, 208, 247, 271, 272, 362, 403, 405, 418], "yield": [4, 14, 15, 16, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 326, 402, 408], "insight": 4, "auxiliari": [4, 408], "credit": 4, "futur": [4, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 90, 91, 97, 122, 126, 144, 145, 151, 152, 192, 210, 214, 218, 254, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 396, 420], "past": [4, 293, 403, 418], "spars": [4, 405], "intermedi": [4, 14, 15, 54, 64, 168, 231, 249, 253, 291, 402, 417], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 402], "discov": 4, "score": [4, 58, 268, 270], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 420], "select": [4, 51, 54, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 136, 137, 146, 147, 155, 156, 163, 165, 166, 168, 169, 170, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 212, 213, 215, 216, 218, 219, 230, 249, 253, 290, 295, 378, 402, 406, 414, 418], "explicit": [4, 12, 70, 101, 418], "mechan": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 403, 408, 416], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 122, 126, 144, 145, 151, 152, 251, 316, 324, 404, 415], "addition": 4, "timestep": [4, 58, 82, 197, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 414, 415], "realli": 4, "huge": [4, 260, 405], "std": [4, 188, 216, 227, 228, 264, 269, 402, 421], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 401, 405, 406, 408, 409, 410, 411, 412, 413, 417, 418, 419], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 122, 126, 142, 143, 144, 145, 151, 152, 153, 168, 188, 192, 206, 209, 210, 212, 217, 218, 227, 228, 229, 230, 245, 246, 247, 248, 251, 252, 256, 259, 260, 261, 262, 263, 271, 272, 293, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 340, 393, 397, 398, 402, 403, 405, 406, 407, 409, 414, 416, 421], "estim": [4, 80, 99, 106, 107, 179, 186, 235, 280, 286, 287, 288, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "unseen": 4, "extrins": 4, "wrong": [4, 99, 106], "bonus": 4, "denser": 4, "prior": [4, 59, 276, 320, 415], "freshli": 4, "drop": [4, 105, 107, 225], "meant": [4, 45, 138], "encourag": [4, 144, 270, 402, 403, 418], "measur": [4, 93, 94, 114, 118, 119, 131, 132, 404, 409], "novelti": 4, "revisit": 4, "previous": [4, 404, 421], "diminish": 4, "decreas": [4, 24, 407], "ideal": [4, 188, 416], "down": [4, 14, 15, 16, 17, 398, 405, 406], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "distil": 4, "nois": [4, 217, 263, 271, 272, 284, 329, 333, 334, 375, 393, 402, 414], "exploratori": [4, 308, 310, 325, 328], "misalign": 4, "trade": [4, 407], "unavoid": 4, "divers": [4, 144, 151], "bootstrap": [4, 318, 343, 349, 350, 402, 405], "noisi": [4, 262, 263, 284, 397], "unstabl": [4, 250, 280, 281], "inher": [4, 308, 328], "stochast": [4, 186, 243, 263, 265, 276, 309, 311, 314, 316, 317, 322, 324, 327, 329, 331, 397, 404, 407, 415], "enemi": 4, "pomdp": [4, 418], "loos": [4, 397, 403, 404], "nonexist": 4, "architectur": [4, 239, 408, 414, 415], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 41, 43, 51, 53, 54, 56, 58, 61, 64, 67, 70, 86, 89, 92, 101, 102, 104, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 159, 167, 168, 169, 170, 171, 174, 175, 177, 178, 182, 184, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 209, 216, 232, 233, 240, 242, 247, 251, 254, 257, 258, 259, 260, 267, 274, 278, 289, 299, 300, 314, 361, 362, 374, 375, 376, 378, 379, 397, 402, 404, 405, 413, 414, 415, 421], "lstm": [4, 206, 252, 253, 264], "rel": [4, 101, 206, 240, 279, 402, 403, 414, 415, 418], "tend": 4, "stabl": [4, 9, 10, 141], "compens": 4, "descent": [4, 263], "minimum": [4, 71, 144, 151, 198, 243, 264, 279, 280, 281, 301, 304, 307, 309, 311, 317, 326, 327, 331, 370, 402, 404, 411, 414, 415], "manual": [4, 11, 18, 20, 21, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 126, 127, 402, 405, 418], "deviat": [4, 188, 216, 227, 228, 230, 243, 256, 262, 263, 269, 270, 328, 333, 334, 402, 407, 415], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 99, 106, 165, 247, 248, 251, 252, 406, 407, 408, 409, 410, 411], "stabil": [4, 183, 308, 310, 325, 328, 330], "stage": [4, 402, 416], "never": [4, 14, 15, 17, 28, 71, 99, 409], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 41, 42, 43, 44, 49, 61, 91, 216, 250, 280, 281, 308, 310, 325, 328, 330, 377, 410, 418], "entir": [4, 86, 122, 126, 144, 145, 151, 152, 259, 404, 406, 416, 418], "submit": [4, 125, 166, 396, 420], "system": [4, 5, 91, 404, 414, 415, 416], "adequ": [4, 220, 404, 414, 415], "infeas": 4, "allevi": [4, 397], "prune": 4, "fire": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "illeg": 4, "chess": [4, 142, 143], "grasp": 4, "top": [4, 112, 118, 119, 131, 132, 174, 230, 256, 407], "wherein": 4, "cumul": [4, 200, 205, 230, 348, 404], "q": [4, 9, 122, 126, 144, 145, 151, 152, 235, 236, 237, 238, 241, 242, 244, 273, 274, 282, 288, 291, 295, 296, 309, 311, 312, 313, 315, 316, 317, 318, 323, 324, 329, 331, 333, 334, 340, 395, 402, 408], "flow": [4, 402, 404, 414, 415, 416, 418], "reparameter": [4, 240, 258, 267], "soft": [4, 323, 331, 332, 414], "critic": [4, 8, 286, 292, 308, 310, 311, 312, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 402, 408], "clip": [4, 58, 172, 198, 308, 310, 325, 328, 330, 333, 334, 379, 404, 415, 416], "oppos": [4, 70], "incorrect": 4, "thought": [4, 122, 126, 144, 145, 151, 152], "region": 4, "squash": [4, 405, 420], "tanh": [4, 232, 233, 247, 248, 250, 251, 252, 254, 260, 279, 280, 281, 301, 404, 407, 414, 415, 416, 417], "prob": [4, 257, 258, 267, 270, 404, 415], "rememb": [4, 414], "remap": 4, "origin": [4, 8, 50, 52, 54, 57, 58, 64, 130, 176, 177, 186, 192, 210, 214, 218, 247, 294, 297, 298, 309, 311, 323, 324, 326, 328, 329, 331, 333, 334, 402, 413, 416, 421], "histor": 5, "ceas": 5, "farama": [5, 84, 133, 134, 146, 147, 404, 416], "best": [5, 9, 130, 249, 253, 414, 415, 418, 420], "gymwrapp": [5, 122, 126, 144, 145, 151, 152, 180, 201, 204, 215, 395, 404, 420], "feel": [5, 396, 411, 420], "free": [5, 7, 175, 178, 308, 320, 328, 399, 404, 411, 415, 420], "gladli": 5, "prepar": [6, 37, 83, 404], "conda": [6, 7, 396], "cmake": 6, "activ": [6, 7, 9, 232, 233, 239, 243, 254, 259, 260, 310, 325, 328, 397, 416, 420], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 83, 396], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 128], "y": [6, 7, 54, 56, 64, 141, 244, 259, 283, 402, 415, 418], "facebookresearch": [6, 83, 128], "subdirectori": 6, "verbos": [6, 411], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 77, 122, 126, 144, 145, 151, 152, 194, 203, 218, 326, 414, 415, 420, 421], "command": [6, 7, 10, 152, 404, 414, 415, 416, 421], "readm": [6, 7, 155], "md": [6, 7], "habitatenv": [6, 395], "_has_habitat": 6, "available_env": [6, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 136, 137, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 421], "startswith": [6, 231, 398, 402, 408], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 123, 326, 402], "env_nam": [6, 118, 120, 122, 125, 126, 128, 131, 133, 139, 144, 145, 148, 151, 152, 402, 404, 421], "llvmlite": 6, "config": [6, 7, 192, 214, 234, 239, 269, 383, 384, 385, 387, 390], "var": [6, 7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 326, 331], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 290, 326], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 326, 331, 418], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 122, 403, 411], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 82], "stand": [7, 36, 120, 121, 144, 151, 413, 416, 421], "joint": [7, 403], "contact": [7, 53, 414], "engin": [7, 148, 416], "biomechan": 7, "graphic": 7, "anim": [7, 415], "area": 7, "demand": [7, 410, 421], "fast": [7, 9, 118, 119, 195, 225, 329, 402, 403, 404], "articul": 7, "acquir": [7, 404], "deepmind": [7, 8, 9, 86, 120, 121, 122, 126, 136, 137, 142, 143, 144, 145, 151, 152, 179, 404, 406], "whomev": 7, "licenc": 7, "incorpor": [7, 122, 126, 144, 145, 151, 152, 227, 228, 245, 246, 271, 272, 333, 405, 407, 416], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 396], "tip": [7, 396], "glfw": [7, 402], "osmesa": 7, "egl": 7, "advic": [7, 86, 421], "sudo": [7, 396], "apt": [7, 415], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 286, 287, 288], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 402, 404, 405, 414, 415, 418], "roboti": 7, "html": [7, 14, 15, 139, 141, 142, 143], "wget": 7, "mujoco210": 7, "tar": [7, 83], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 144, 151], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 50, 52, 70, 89], "bin": [7, 242, 270, 291, 397], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 238, 294, 298, 402, 404, 418], "nvidia": [7, 130], "older": [7, 12], "hack": [7, 402], "adatp": 7, "script": [7, 83, 220, 389, 393, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "unnot": [7, 193], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 91, 403, 418], "troubleshoot": 7, "gl": 7, "h": [7, 101, 169, 171, 174, 196, 208, 247, 248, 249, 251, 252, 253, 256, 362, 403, 405, 418], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 43, 44, 49], "directori": [7, 50, 52, 57, 70, 80, 82, 83, 84, 86, 87, 88, 93, 367, 369, 399, 402, 407, 410, 414], "devel": 7, "ubuntu": [7, 130], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 403, 405, 413], "libstdc": 7, "glibcxx_3": 7, "29": [7, 403, 416], "compil": [7, 14, 15, 16, 23, 27, 38, 45, 54, 55, 59, 64, 99, 106, 107, 122, 126, 144, 145, 151, 152, 218, 247, 248, 251, 252, 280], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 215, 404, 413], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 187, 210, 218, 311, 331, 398, 421], "job": [7, 18, 19, 20, 22, 56, 65, 66, 101, 418, 420], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 118, 119, 401, 403, 404, 405, 406, 407, 414, 416, 417, 419], "114": [7, 416], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 416], "offscreenopenglcontext": 7, "opengl": [7, 414, 415], "global": [7, 27, 38, 45, 54, 55, 56, 59, 64, 65, 66, 101, 122, 126, 144, 145, 146, 147, 151, 152, 218, 273, 282, 294, 298, 340, 399, 402, 414, 415], "cuda_visible_devic": 7, "id": [7, 23, 58, 99, 101, 106, 107, 122, 125, 126, 144, 145, 151, 152, 153, 154, 271, 272, 311, 329, 365, 369, 409, 418], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 414], "onscreen": 7, "101": [7, 416], "correctli": [7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "lgl": 7, "libegl": 7, "x11": [7, 415], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 399], "n_training_step": 8, "datapoint": [8, 70, 418], "n_data_per_train": 8, "no_grad": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 186, 218, 247, 248, 251, 252, 342, 343, 344, 345, 404, 405, 415], "loss_fn": [8, 405, 408, 409, 420], "zero_grad": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 270, 399, 402, 404, 405, 408, 411, 414, 415, 416], "backpropag": [8, 118, 119, 131, 132, 144, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 334, 340, 408, 415, 416], "differenti": [8, 70, 118, 119, 186, 311, 333, 342, 343, 344, 345, 405, 407, 408, 414, 415, 416], "denomin": 8, "artifact": 8, "numer": [8, 56, 126, 216, 250, 280, 281, 285, 290, 291, 294, 295, 296, 297, 298, 377, 404, 418, 421], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 71, 80, 86, 99, 106, 107, 416, 418], "compuat": 8, "fix": [8, 33, 144, 206, 309, 311, 327, 331, 403, 411, 416, 421], "retain_graph": [8, 118, 119], "discuss": [8, 9, 409, 414, 415], "inplac": [8, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 218, 402], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 191, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 212, 213, 215, 216, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 259, 260, 261, 262, 264, 265, 266, 269, 271, 272, 273, 275, 276, 278, 282, 283, 289, 291, 293, 294, 296, 297, 298, 301, 302, 304, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 340, 342, 343, 344, 345, 346, 395, 398, 416, 420], "submodul": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 158, 206, 218, 249, 253, 305, 326], "param": [8, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 138, 144, 145, 151, 152, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 218, 240, 242, 259, 260, 261, 279, 289, 294, 297, 300, 326, 336, 339, 342, 343, 344, 345, 346, 402, 411, 414, 415, 416, 417, 420], "grad": [8, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 218, 402, 404], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 264, 273, 297], "factor": [8, 11, 24, 45, 197, 218, 227, 228, 229, 245, 246, 250, 263, 271, 272, 280, 281, 309, 315, 318, 319, 321, 332, 348, 402, 403, 407, 411, 414, 415, 418, 421], "fit": [8, 12, 55, 188, 206, 398, 399, 402], "bottlneck": 8, "brax": [8, 118, 119, 122, 126, 144, 145, 151, 152, 195, 406, 421], "jax": [8, 12, 118, 119, 131, 132], "improperli": 8, "underli": [8, 122, 126, 144, 145, 151, 152, 326, 406, 408, 410, 416], "tedeiou": 8, "priorit": [8, 51, 65, 98, 99, 311, 312, 313, 315, 316, 317, 324, 329, 331, 333, 334, 402, 403, 409], "amount": [8, 271, 272, 403, 418], "costli": [8, 416], "constitut": [8, 403, 415, 416], "profil": 8, "frequent": [8, 418], "program": [8, 316, 324, 421], "functorch": [8, 10], "incl": 8, "suit": [8, 121, 404, 406, 420, 421], "mujoco_instal": 8, "valueerror": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 105, 190, 420, 421], "idea": [9, 329, 399, 405, 407, 414, 415], "introductori": 9, "intro": [9, 404, 405], "dai": [9, 420], "2022": [9, 10, 416, 420], "spin": [9, 120, 121, 421], "deep": [9, 169, 235, 236, 237, 238, 241, 271, 272, 308, 311, 323, 331, 332, 402, 414], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 407], "summari": [9, 188, 216, 402, 403, 404, 405], "reddit": 9, "reagent": 9, "orient": [9, 88, 421], "baselines3": 9, "tf": 9, "bandit": [9, 141], "tensorflow": [9, 257, 258], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 411], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 420], "grade": 9, "factori": [9, 67, 402], "cherri": 9, "jaxrl": 9, "mbrl": [9, 138, 397], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 416], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 404, 405, 414, 415], "notebook": [10, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "24": [10, 87, 107, 125, 139, 140, 270, 293, 402, 403, 404, 405, 414, 416], "pip3": [10, 402, 404, 405, 414, 415], "url": [10, 128], "org": [10, 14, 15, 24, 51, 83, 84, 86, 88, 98, 99, 118, 119, 120, 121, 128, 131, 132, 136, 137, 139, 140, 141, 148, 155, 156, 169, 192, 212, 229, 234, 235, 236, 237, 238, 239, 242, 243, 244, 251, 256, 257, 258, 263, 265, 266, 270, 271, 272, 273, 275, 276, 282, 291, 308, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 330, 331, 332, 333, 342, 347, 355, 394, 412, 417], "whl": 10, "u": [10, 85, 247, 248, 251, 252, 416], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 404, 414, 415, 416, 418], "power": [11, 403], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 395], "ultim": [11, 250, 280, 281], "ffmpeg": 11, "whatev": [11, 398, 402], "fed": [11, 415, 418], "feed": [11, 192, 214, 326, 397, 402, 414, 415, 418], "suppos": [11, 144, 375, 399, 421], "snippet": [11, 192, 212, 402], "gave": 11, "extrem": [11, 144, 151, 308, 310, 325, 328, 330], "blurri": 11, "stitch": 11, "exp_nam": [11, 362, 363, 364, 367, 368, 369, 389, 403, 410, 411], "my_exp": [11, 410], "pixels_onli": [11, 120, 121, 125, 127, 128, 148, 402, 403, 410, 411, 420, 421], "my_video": [11, 410], "record_env": [11, 410, 411], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 288, 397], "module_nam": [12, 326], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 98, 99, 101, 112, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 165, 169, 179, 185, 186, 192, 196, 204, 205, 210, 212, 214, 215, 216, 218, 226, 230, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 249, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 269, 273, 274, 282, 285, 290, 291, 294, 295, 296, 297, 298, 301, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 337, 340, 341, 342, 343, 344, 345, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 387, 393, 403, 404], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 249, 253, 420], "longer": [12, 403, 411, 414, 415, 418], "x": [12, 23, 45, 54, 55, 56, 58, 59, 64, 86, 107, 186, 208, 229, 231, 233, 242, 244, 247, 248, 249, 251, 252, 253, 254, 256, 259, 260, 283, 290, 294, 295, 304, 307, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 379, 402, 414, 416, 418, 420], "23": [12, 87, 107, 403, 414, 416], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 87, 118, 119, 126, 131, 132, 252, 307, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 402, 403, 404, 405, 411, 414, 415, 416, 418, 421], "classmethod": [12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 212, 234, 269], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 87, 91, 99, 106, 107, 122, 123, 124, 125, 126, 127, 136, 137, 139, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 186, 206, 210, 215, 216, 218, 232, 233, 234, 235, 236, 237, 238, 239, 244, 254, 269, 294, 298, 311, 331, 333, 366, 367, 375, 384, 385, 391, 392, 393, 402, 403, 404, 418, 421], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 123, 144, 151, 402, 420], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 403], "create_env_kwarg": [14, 15, 16, 17, 21, 123, 139, 144, 151, 402, 421], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 45, 197, 403, 418], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 221, 224, 294, 298, 375], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 50, 52, 57, 144, 151], "num_sub_thread": [14, 15, 17, 144, 151], "set_trunc": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152], "use_buff": [14, 15, 16, 144, 151], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 122, 126, 144, 145, 151, 152], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "datacollector": [14, 15, 16, 17, 45, 298, 328, 404, 409, 418], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 228, 272, 280, 285, 290, 291, 294, 295, 296, 297, 298, 300, 397, 420], "sota": [14, 15, 138, 183, 330, 370, 384, 402, 403, 420], "guard": [14, 15], "doc": [14, 15, 67, 128, 131, 132, 141, 148, 369, 403, 414, 415, 418, 420, 421], "env_mak": [14, 15, 16, 21, 389, 421], "2000": [14, 15, 16, 45, 70, 129, 270, 362, 404, 418], "50": [14, 15, 16, 21, 53, 58, 80, 88, 106, 107, 136, 137, 218, 401, 403, 404, 405, 413, 414, 415, 416, 418, 419], "shutdown": [14, 15, 16, 17, 21, 166, 402, 420], "del": [14, 15, 16, 402, 403, 404, 413, 414, 420, 421], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 41, 42, 43, 44, 49, 50, 52, 53, 54, 57, 58, 62, 65, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 122, 126, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 162, 166, 179, 190, 197, 204, 242, 271, 272, 274, 290, 291, 294, 295, 296, 397, 404, 405, 406, 407, 409, 410, 416, 418, 420], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 168, 283, 290, 293, 295, 405], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 70], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 403], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 80, 86, 99, 106, 107, 229, 415], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 126, 165, 206, 215, 253, 405, 416, 417], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 381, 403], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 89, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 173, 175, 178, 186, 192, 206, 209, 210, 212, 214, 216, 218, 297, 414, 421], "span": [14, 15, 16, 17, 18, 19, 20, 21, 86, 99, 106], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 45, 218, 293, 403, 404, 414, 415], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 58, 369, 397, 414, 415, 416], "round": [14, 15, 16, 17, 18, 19, 20, 21, 80], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 84, 122, 126, 144, 145, 151, 152, 218], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 294, 326, 375, 397, 402, 403, 404, 405, 407, 414, 420], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 215, 420], "ratio": [14, 15, 17, 58, 402, 404], "finish": [14, 15, 17, 21, 126, 197, 421], "rest": [14, 15, 17, 397, 404, 405, 414, 416, 420], "earli": [14, 15, 17, 45, 126, 204, 420], "safeti": [14, 15, 17, 138, 144, 151], "harm": [14, 15, 17, 144, 151], "exclus": [14, 15, 76, 77, 80, 86, 99, 106, 107, 166, 180, 182, 247, 249, 251, 253, 257, 258, 290, 291, 295, 296, 332, 333, 334, 342, 343, 344, 345, 346, 369, 393, 397], "add_truncated_kei": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152, 210], "trust": [14, 15, 16, 122, 126, 136, 137, 144, 145, 151, 152, 253], "cudagraphmodul": [14, 15, 16, 122, 126, 144, 145, 151, 152], "behaviour": [14, 15, 16, 54, 64], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 97, 98, 99, 101, 106, 107, 108, 110, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163, 164, 166, 173, 192, 194, 203, 206, 209, 210, 211, 213, 214, 217, 218, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 241, 244, 245, 246, 249, 250, 253, 254, 255, 256, 259, 260, 261, 267, 271, 272, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 340, 341, 342, 343, 344, 345, 346, 360, 362, 366, 367, 369, 372, 379, 384, 385, 390, 391, 392, 398, 404, 415, 420], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 311, 331, 403], "form": [14, 15, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 122, 126, 144, 145, 151, 152, 216, 218, 247, 249, 251, 253, 307, 308, 310, 325, 328, 379, 397, 407, 415], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 122, 126, 144, 145, 151, 152, 210], "integ": [14, 15, 16, 17, 23, 38, 41, 43, 45, 54, 55, 58, 59, 99, 106, 107, 108, 122, 126, 144, 145, 151, 152, 162, 165, 179, 183, 188, 204, 232, 233, 254, 259, 260, 311, 316, 324, 331, 418], "increment": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152, 188, 325], "env_fn": [14, 15, 16, 17, 123, 391, 392], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 106, 107, 237, 238, 416], "out_se": [14, 15, 16, 17, 421], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 328], "whole": [16, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 70, 122, 126, 144, 145, 151, 152, 210, 218, 294, 311, 331, 370, 402, 404], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 407], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 68, 379], "respect": [18, 19, 20, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 167, 173, 175, 178, 192, 193, 202, 206, 209, 210, 212, 214, 218, 247, 251, 259, 276, 297, 302, 308, 310, 325, 328, 330, 342, 344, 345, 374, 404, 405, 414, 415], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 396, 403, 404, 407, 410, 413, 418], "fashion": [18, 20, 21, 50, 52, 57, 107], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 182], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 51, 54, 55, 56, 59, 64, 65, 66, 82, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304, 402], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 416], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 153], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 270, 402], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 80, 294, 298], "tensorpiperpcbackendopt": 20, "_td": [21, 123], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 391, 392, 402, 403], "coordin": [21, 174], "init": [21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218, 259, 260, 261, 369, 403, 404], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 239, 403, 418], "equat": [21, 54, 86, 126, 216, 271, 272, 307, 310, 332, 404, 406, 416], "exce": [21, 418], "indefinit": [21, 79], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 229, 379, 402, 404, 405], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 333, 408], "jump": [22, 406], "host": [22, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 234, 239, 269, 289], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "_nestedkei": [23, 99, 106, 107], "nestedkei": [23, 25, 26, 28, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 54, 57, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 99, 106, 107, 122, 126, 144, 145, 151, 152, 159, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 216, 218, 219, 225, 226, 227, 228, 231, 242, 245, 246, 271, 272, 274, 289, 293, 298, 313, 340, 360, 362], "as_nest": 23, "durat": [23, 415], "meta": [23, 50, 52, 57, 69, 82, 124, 128, 308, 310, 325, 328, 330, 399, 404, 414, 415, 418], "aren": [23, 205, 405], "eventu": [23, 273, 405, 416], "supersed": 23, "recov": [23, 82, 84, 86, 87, 88, 106, 107, 228, 246, 272, 299, 316, 324, 413], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 125, 127], "stride": [23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 232, 233, 235, 236, 244, 259, 403, 414, 420], "jag": 23, "focu": [23, 402, 403, 404, 407, 408, 409, 414], "team": [23, 414, 415, 420], "cat": [23, 302, 309, 311, 312, 324, 329, 331, 333, 334, 414, 418, 420], "arang": [23, 99, 162, 242, 258, 290, 370, 397, 418], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 66, 71, 80, 86, 106, 131, 132, 142, 143, 152, 223, 293, 418], "data_split": 23, "got": [23, 409], "init_kl_coef": 24, "horizon": [24, 136, 137, 155, 156, 230, 256, 404], "kl": [24, 33, 58, 186, 320, 325], "describ": [24, 69, 170, 209, 219, 279, 280, 313, 365, 398, 402, 404, 414, 415, 416, 421], "ziegler": 24, "et": [24, 230], "relax": [24, 360], "penalti": [24, 58, 322, 325], "strai": [24, 58], "greater": [24, 80, 99, 106, 107, 249, 253, 311, 402, 403, 420], "increas": [24, 91, 207, 271, 272, 414, 415], "pull": [24, 418], "toward": [24, 214], "aggress": 24, "kl_coef": [24, 33, 58], "arxiv": [24, 51, 83, 86, 88, 98, 99, 118, 119, 120, 121, 131, 132, 136, 137, 139, 140, 148, 155, 156, 169, 192, 212, 229, 234, 235, 236, 237, 238, 239, 242, 243, 244, 251, 256, 263, 265, 266, 270, 271, 272, 273, 275, 276, 282, 291, 308, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 331, 332, 333, 342, 347, 355, 417], "pdf": [24, 169, 234, 235, 236, 237, 238, 242, 270, 271, 272, 291, 311, 318, 322, 329, 332, 333, 342, 347, 355], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 414, 415], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 186], "newest": 24, "int8": [25, 122, 135, 146, 147, 167], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 118, 119, 122, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 162, 177, 266, 267, 270, 275, 307, 397, 403, 404, 405, 407, 416, 418], "null": [25, 28, 29, 31, 32, 39, 40, 47, 48, 51, 60, 61, 65, 69, 71, 72, 73, 74, 75, 98, 99, 167], "denot": [25, 415], "nmber": 25, "clariti": 25, "rand": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 131, 132, 138, 142, 143, 153, 154, 163, 166, 175, 178, 194, 219, 230, 256, 294, 308, 309, 311, 312, 313, 315, 316, 317, 324, 326, 328, 329, 331, 333, 334, 416, 420, 421], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 421], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 126, 271, 272, 301, 360, 414], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 58, 60, 61, 69, 71, 72, 73, 74, 75, 98, 122, 126, 127, 144, 145, 151, 152, 179, 247, 248, 251, 252, 402, 414, 418], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 126, 301, 360, 414, 416], "broadcast": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 232, 233, 254, 277, 278], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 63, 64, 69, 70, 71, 72, 73, 74, 75, 118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 173, 175, 178, 192, 206, 209, 210, 212, 214, 216, 218, 297, 307, 326, 402, 403, 404, 416, 418], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 416, 421], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 402], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 397], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 258, 267, 294, 398], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 60, 61, 69, 71, 72, 73, 74, 75, 177, 227, 228, 251, 271, 272, 285, 290, 291, 294, 295, 296, 297, 298, 369, 397, 420, 421], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 100, 326, 421], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 188, 216, 227, 228, 229, 232, 233, 250, 254, 257, 258, 264, 280, 281, 294, 298, 310, 311, 325, 328, 375, 377, 393, 397, 399, 405, 407, 415, 421], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 206, 245, 294, 298, 404, 414, 415], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 64, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 192, 212, 214, 297], "to_categor": [25, 26, 30, 34, 41, 42, 43, 44, 49], "to_categorical_spec": [25, 26, 30, 34, 41, 42, 43, 44, 49], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 209, 210, 264, 279, 393], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "to_one_hot": [25, 26, 30, 34, 41, 42, 43, 44, 49], "hot": [25, 26, 30, 34, 41, 42, 43, 44, 49, 118, 119, 125, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 162, 163, 177, 242, 267, 268, 274, 290, 291, 295, 296, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 405], "categ": [25, 26, 30, 34, 43, 44, 294], "categ_sampl": [25, 26, 30, 34, 43, 44, 49], "onehot_sampl": [25, 26, 30, 34, 43, 44], "to_one_hot_spec": [25, 26, 30, 34, 41, 42, 43, 44, 49], "categoricalbox": [25, 26, 30, 34, 43, 44, 49, 145, 407, 414, 415, 421], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "update_mask": [25, 26, 30, 34, 41, 42, 43, 44, 49], "outcom": [25, 26, 30, 34, 41, 42, 43, 44, 49, 240, 279, 326, 414], "disabl": [25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 250, 281, 360, 402, 414], "unmask": [25, 26, 30, 34, 41, 42, 43, 44, 49], "ts": [25, 26, 30, 34, 41, 42, 43, 44, 49], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 404, 405, 406, 414, 415, 418], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "child": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 403], "fn": [27, 38, 45, 53, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 218, 264, 391, 392], "recurs": [27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 76, 77, 122, 126, 144, 145, 151, 152, 218, 326], "children": [27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 218], "init_weight": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "m": [27, 38, 41, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 177, 218, 231, 298, 397, 403, 416], "fill_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 403, 405, 421], "net": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 236, 238, 241, 244, 260, 308, 309, 311, 317, 324, 328, 329, 330, 331, 389, 403, 416, 417, 420], "in_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 232, 233, 235, 236, 237, 238, 244, 254, 259, 260, 262, 263, 286, 297, 305, 313, 315, 407, 408], "out_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 138, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 230, 232, 233, 235, 236, 237, 238, 243, 244, 249, 253, 254, 256, 259, 260, 262, 263, 286, 290, 297, 305, 313, 315, 397, 402, 405, 407, 408, 411, 420], "bia": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 229, 232, 233, 235, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 260, 262, 263, 264, 271, 272, 297, 304, 306, 307, 311, 326, 331, 398, 402, 403, 404, 405, 415], "requires_grad": [27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 186, 210, 218, 270, 311, 331], "bfloat16": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "datatyp": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 418], "member": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 326, 362], "xdoctest": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 311, 326, 331], "buf": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "20l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 326], "1l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 326], "5l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 326], "__call__": [27, 38, 45, 53, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 298, 399], "doubl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 175, 176, 178, 192, 206, 209, 210, 212, 214, 218, 297, 313, 318, 323, 329, 332, 340, 402, 403, 404, 405, 421], "eval": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 397, 402, 403, 404], "evalu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 127, 136, 137, 144, 145, 151, 152, 210, 218, 240, 257, 258, 267, 281, 329, 384, 385, 403, 404, 411], "dropout": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 231, 247, 249, 251, 253, 254, 397, 405], "batchnorm": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 229], "comparison": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 326, 402, 403], "similar": [27, 38, 45, 50, 52, 54, 55, 56, 57, 59, 64, 86, 122, 126, 144, 145, 146, 147, 151, 152, 173, 192, 206, 209, 210, 212, 213, 214, 216, 218, 286, 288, 294, 297, 298, 398, 402, 403, 404, 405, 407, 408, 409, 410, 416, 418, 421], "extra_repr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "recip": [27, 38, 53, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304], "silent": [27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 261, 264, 265, 266, 269, 271, 272, 275, 276, 278, 283, 289, 291, 293, 296, 301, 304], "get_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "get_submodul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "qualifi": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "referenc": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "attributeerror": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "resolv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "someth": [27, 38, 45, 54, 55, 59, 64, 122, 126, 135, 144, 145, 151, 152, 218, 396, 403, 404, 416, 421], "get_extra_st": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "set_extra_st": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "picklabl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "pickl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "get_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "net_b": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "net_c": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "conv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 232, 233, 403], "conv2d": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 233, 235, 236, 244, 259], "kernel_s": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 232, 233, 235, 236, 244, 259, 265, 403, 420], "diagram": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "degre": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "named_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "o": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 252], "half": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 402], "ipu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "strict": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "descend": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "get_swap_module_params_on_convers": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "persist": [27, 36, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 225, 311, 331], "enforc": [27, 38, 45, 54, 55, 59, 64, 105, 122, 126, 144, 145, 151, 152, 210, 218, 299, 311, 331, 416], "preserv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "missing_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "unexpected_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "namedtupl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 247, 251, 341, 404, 416], "idx": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "mtia": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "named_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "remove_dupl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 326], "prepend": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 326], "running_var": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "named_children": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "conv4": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "conv5": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "memo": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "named_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 186, 218, 326], "register_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "removablehandl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "favor": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 404], "register_full_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "running_mean": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "alongsid": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 410], "num_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 229], "register_forward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 242, 274], "with_kwarg": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "always_cal": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_module_forward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "regardless": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 310, 325, 328], "register_forward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "invok": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "And": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 408], "forward_pr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_module_forward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "grad_input": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "grad_output": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "subsequ": [27, 38, 45, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 165, 218, 405, 414], "technic": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 403, 405, 407], "caller": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_module_full_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_full_backward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "backward_pr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_module_full_backward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_load_state_dict_post_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "incompatible_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "thrown": [27, 38, 45, 54, 55, 59, 60, 64, 122, 126, 144, 145, 151, 152, 218, 418], "register_load_state_dict_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "local_metadata": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "error_msg": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "noqa": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "b950": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 399], "alia": [27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 122, 126, 144, 145, 151, 152, 218], "register_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_state_dict_post_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "register_state_dict_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "keep_var": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "requires_grad_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "autograd": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331], "freez": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 218], "finetun": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "gan": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "set_submodul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "overid": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "share_memori": [27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 144, 145, 151, 152, 218, 402], "share_memory_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218, 420], "destin": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 168, 175, 176, 178, 210, 212, 216, 218, 225, 311, 331, 362], "averag": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 216, 218, 271, 272, 311, 319, 320, 331, 377, 402, 404], "shallow": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 331, 405], "pleas": [27, 38, 45, 54, 55, 59, 64, 68, 84, 122, 125, 126, 144, 145, 146, 147, 151, 152, 166, 169, 207, 210, 218, 259, 260, 261, 311, 331, 396], "detach": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 218, 311, 322, 326, 331, 333, 342, 343, 344, 345, 402], "non_block": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 405], "memory_format": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "channels_last": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "unchang": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 177, 192, 206, 209, 210, 212, 214, 218, 245, 297, 376, 402, 418], "tri": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 410], "pin": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "4d": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "ignore_w": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "1913": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "3420": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "5113": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "2325": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "torch_doctest_cuda1": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "gpu1": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "1914": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "5112": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 416], "2324": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "float16": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 248, 252, 297], "cdoubl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "3741": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "j": [27, 38, 45, 51, 54, 55, 59, 64, 98, 99, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 399, 408], "2382": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "5593": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297, 416], "4443": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "complex128": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "6122": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "1150": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 212, 214, 218, 297], "to_empti": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "dst_type": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "xpu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "set_to_non": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 218], "upper": [28, 104, 187], "continuousbox": [28, 31, 71, 122, 126, 144, 145, 151, 152, 223, 404, 405, 414, 415, 416, 421], "inst": 30, "descript": [31, 155, 165, 403, 404], "akin": 31, "unnam": 31, "compositespec": [31, 395, 416, 421], "constraint": [31, 138, 280, 404, 414, 415], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 170, 402], "_nodefault": [31, 32, 39, 50, 52, 57, 61], "is_empti": [31, 32, 39, 61, 416], "include_nest": [31, 32, 39, 61], "leaves_onli": [31, 32, 39, 61], "is_leaf": [31, 32, 39, 61], "_compositespecitemsview": [31, 32, 39, 61], "_compositespeckeysview": [31, 32, 39, 61], "reflect": [31, 32, 39, 61, 127, 146, 147, 215, 225, 326, 382, 403, 404, 405, 415], "lock_": [31, 32, 39, 61], "succeed": [31, 32, 39, 61], "selected_kei": [31, 32, 39, 61, 201, 402], "unlock_": [31, 32, 39, 61], "unlock": [31, 32, 39, 50, 52, 57, 61], "_compositespecvaluesview": [31, 32, 39, 61], "multipli": [33, 247, 251, 308, 309, 310, 311, 317, 325, 327, 328, 329, 331, 377, 402, 414], "calcul": [33, 58, 197, 247, 308, 310, 315, 325, 328, 330, 333], "shift_kei": [35, 37, 46, 62], "is_full_kei": [35, 37, 46, 62], "is_ful": [35, 37, 46, 62], "tempfil": [35, 50, 51, 52, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 389, 402, 403, 414, 418], "register_save_hook": [35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "temporarydirectori": [35, 50, 51, 52, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 402, 403, 414, 418], "tmpdir": [35, 51, 56, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 402, 403, 414], "rb_load": [35, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "register_load_hook": [35, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "filesystem": [36, 418], "ted2nest": [37, 395], "hash": [38, 54, 55, 59, 64], "stackedcomposit": [39, 395], "nvec": [41, 43], "remove_singleton": 41, "cardin": [41, 43, 242, 274, 290, 291, 296, 404], "ax": [41, 262, 263, 414], "Not": [41, 42, 56, 118, 119, 131, 249, 253], "neither": [41, 42, 43, 44, 86, 153, 416], "use_regist": 43, "mone_hot": [43, 44], "boxlist": [43, 44], "gamma": [45, 197, 218, 256, 308, 309, 311, 312, 313, 315, 317, 318, 319, 321, 324, 326, 328, 329, 330, 331, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 389, 398, 402, 403, 404, 414, 415, 420], "sutton": [45, 398, 414, 415], "1988": 45, "tempor": [45, 249, 253, 256, 343, 344, 349, 350], "44": [45, 403, 415, 416], "discount": [45, 86, 123, 197, 218, 309, 315, 318, 319, 321, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 398, 403, 404, 414, 415], "ahead": [45, 218, 421], "bias": [45, 247, 248, 251, 252, 304, 398, 402], "mitig": 45, "multisteptransform": [45, 395], "99": [45, 197, 216, 256, 321, 336, 341, 348, 389, 402, 403, 404, 408, 411, 414, 415, 416, 420], "nontermin": 45, "original_reward": 45, "newli": [45, 122, 126, 144, 145, 151, 152], "OR": 45, "row": [46, 63, 131, 132], "shae": 47, "nontensordata": [47, 80, 86, 142, 143, 360], "nontensor": [48, 395], "one_hot": [49, 242, 258, 274], "one_hot_sampl": 49, "chosen_data": [50, 89], "rewarddata": [50, 89, 395], "rejected_data": [50, 89], "from_dataset": [50, 52, 89], "dataset_nam": [50, 52, 58, 70, 89, 141], "max_length": [50, 52, 53, 67, 70, 89, 411], "550": [50, 52, 58, 70, 89, 106, 107, 416], "root_dir": [50, 52, 70, 89], "from_disk": [50, 52, 70, 89], "carperai": [50, 52, 58, 70], "openai_summarize_comparison": [50, 52, 70], "sequen": [50, 52], "load_from_disk": [50, 52, 70, 89], "load_dataset": [50, 52, 70, 89], "attention_mask": [50, 52, 53, 57, 58, 67, 70, 89], "92534": 50, "input_id": [50, 52, 53, 57, 58, 67, 70, 89], "end_scor": [50, 57, 58, 89], "sub_data": [50, 52], "from_tensordict": [50, 52, 57], "non_tensordict": [50, 52, 57], "getattr": [50, 52, 57], "tensorclass": [50, 52, 57, 89, 93, 94, 114], "pathlib": [50, 52, 57, 93], "load_memmap": [50, 52, 57], "load_": [50, 52, 57], "load_memmap_": [50, 52, 57], "fetch": [50, 52, 57, 118, 119, 120, 121, 186, 407, 417, 418, 421], "fromkei": [50, 52, 57], "memmap": [50, 52, 57, 93, 144, 151, 216, 362, 364, 376, 418], "saved_td": [50, 52, 57], "td_load": [50, 52, 57], "fake": [50, 52, 57, 122, 126, 144, 145, 151, 152, 402, 403], "_subclass": [50, 52, 57], "faketensormod": [50, 52, 57], "faketensor": [50, 52, 57], "from_flatten": [50, 52, 57], "attemptedli": [50, 52, 57], "copy_exist": [50, 52, 57], "return_earli": [50, 52, 57], "share_non_tensor": [50, 52, 57], "existsok": [50, 52, 57, 93], "mimic": [50, 52, 57, 122, 126, 144, 145, 151, 152], "cross": [50, 52, 57, 230], "anymor": [50, 52, 57, 210, 297], "tensordictfutur": [50, 52, 57], "serialis": [50, 52, 57], "deepli": [50, 52, 57], "insid": [50, 52, 57, 144, 421], "memmap_": [50, 52, 57, 216], "memmap_lik": [50, 52, 57], "contentless": [50, 52, 57], "1_000_000": [50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 106, 402, 405, 414], "alloc": [50, 52, 57, 94, 257, 258, 402], "memmap_refresh_": [50, 52, 57], "refresh": [50, 52, 57, 411, 414, 415], "saved_path": [50, 52, 57], "setattr": [50, 52, 57], "tent": [50, 52, 57, 70], "to_tensordict": [50, 52, 57, 405], "retain_non": [50, 52, 57], "discrard": [50, 52, 57], "switch": [50, 52, 57, 250, 281, 360], "alpha": [51, 65, 98, 99, 232, 233, 235, 236, 237, 238, 244, 259, 309, 311, 317, 327, 329, 331, 333, 402, 418, 420], "ep": [51, 65, 98, 99, 188, 216, 229, 271, 272, 310, 332, 377, 402, 403, 405, 408, 411], "1e": [51, 65, 98, 99, 188, 216, 229, 240, 243, 264, 279, 402, 403, 404, 415], "08": [51, 65, 98, 99, 402, 403, 404, 414, 416], "pin_memori": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 191, 402, 420], "schaul": [51, 98, 99], "quan": [51, 98, 99], "antonogl": [51, 98, 99], "silver": [51, 98, 99], "2015": [51, 98, 99], "ab": [51, 83, 86, 88, 98, 99, 118, 119, 120, 121, 131, 132, 136, 137, 139, 140, 148, 155, 156, 168, 192, 212, 216, 229, 234, 239, 243, 244, 251, 256, 263, 265, 266, 273, 275, 276, 282, 308, 309, 313, 314, 315, 316, 319, 320, 321, 323, 324, 327, 328, 331, 417], "1511": [51, 98, 99, 244], "05952": [51, 98, 99], "expon": [51, 65, 98, 99], "\u03b1": [51, 65, 98, 99], "delta": [51, 65, 98, 99, 247, 251, 279, 294, 298, 395, 398, 414], "1_000": [51, 56, 65, 66, 414, 418], "merg": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 416], "mini": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 415], "decid": [51, 56, 65, 66, 414, 420], "meth": [51, 56, 65, 66, 249, 253, 326, 416], "incompat": [51, 56, 65, 66, 330, 418], "drop_last": [51, 56, 65, 66, 105, 107], "notion": [51, 56, 65, 66, 270], "caution": [51, 56, 65, 66, 105, 220, 421], "codebas": [51, 56, 65, 66, 416], "approach": [51, 56, 65, 66, 188, 229, 259, 260, 333, 402, 404, 408, 409, 414, 421], "return_info": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 418], "tensordictprioritizedreplaybuff": [51, 395, 420], "simplifi": [51, 407, 416, 418], "_weight": [51, 65, 98, 99, 418, 420], "update_prior": [51, 98, 99, 376, 399, 403, 418, 420], "36278465": 51, "invert": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 306, 404], "tqdm": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 379, 402, 404, 405, 414, 415, 416], "randomsampl": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 402, 414], "td_error": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 311, 312, 313, 315, 316, 317, 318, 324, 326, 329, 331, 333, 334, 340, 402, 408, 418, 420], "update_tensordict_prior": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 402, 418, 420], "insert_transform": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 164, 210], "insert": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 101, 102, 112, 113, 116, 117, 164, 173, 210, 211], "set_sampl": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "set_storag": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "set_writ": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "write_count": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "prompt_rindex": [52, 53, 58], "promptdatatldr": 52, "116722": 52, "prompt": [53, 58], "return_tensordict": [53, 67], "text": [53, 58, 67, 84, 247, 248, 251, 252, 271, 272, 404], "tensodict": [53, 67], "orign": [53, 54, 64, 67], "valid_sampl": 53, "eough": 53, "toknen": 53, "meet": 53, "criterion": 53, "autotoken": [53, 67, 70], "from_pretrain": [53, 58, 67], "gpt2": [53, 58, 67, 70, 234, 239, 269], "pad_token": [53, 67], "eos_token": 53, "enough": [53, 418], "inde": [53, 177, 404, 416], "index_kei": [54, 64], "_index": [54, 64], "hash_kei": 54, "_hash": 54, "hash_modul": [54, 59, 64], "siphash": [54, 55, 64, 395], "hash_to_int": 54, "hashtoint": [54, 395], "query_modul": [54, 64], "key1": [54, 64, 170, 370, 378], "key2": [54, 64, 170, 370, 378], "write_hash": 54, "is_tdmodule_compat": [54, 64], "reset_out_kei": [54, 64], "mod": [54, 64, 186, 231, 249, 253, 293, 301, 405, 411], "select_out_kei": [54, 64, 308, 309, 311, 312, 316, 317, 324, 328, 329, 331, 333, 334], "reset_parameters_recurs": [54, 64], "relu": [54, 64, 138, 230, 239, 256, 264, 307], "old_param": [54, 64], "bork": [54, 64], "dork": [54, 64], "reset_paramet": [54, 64, 261], "from_modul": [54, 64, 242, 297, 300, 420], "rid": [54, 64], "out_keys_sourc": [54, 64], "rubric": [54, 64, 132, 188, 300], "revert": [54, 64, 220, 407, 418], "seq": [54, 64, 231, 247, 249, 251, 253, 293, 405, 411, 413], "z": [54, 64, 248], "n_compon": 55, "dtype_cast": 55, "as_tensor": [55, 59], "init_method": 55, "emb": [55, 405], "sklearn": [55, 85, 141], "byte": [55, 59], "builtin": [55, 59], "pythonhashse": [55, 59], "todo": [55, 122, 126, 144, 145, 151, 152], "storagecheckpointerbas": [56, 108], "roundrobinwrit": [56, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88], "depth": [56, 69, 122, 126, 138, 144, 145, 148, 151, 152, 230, 232, 233, 235, 236, 237, 238, 243, 244, 254, 256, 259, 260, 261, 265, 266, 290, 397, 403, 406, 408, 409, 413, 414, 415, 418], "_pytre": [56, 418], "tree_map": [56, 418], "did": [56, 215, 348, 403, 404, 409, 418, 421], "assert0": [56, 418], "ref_model": 58, "reward_model": [58, 303], "max_new_token": 58, "score_clip": 58, "kl_schedul": 58, "klcontrollerbas": 58, "num_step": 58, "causal": 58, "sentenc": 58, "frozen": [58, 186, 216], "gpt2rewardmodel": 58, "get_dataload": [58, 395], "promptdata": [58, 395], "gpt2lmheadmodel": 58, "dl": 58, "block_siz": [58, 89], "tensorclass_typ": [58, 89], "openai_summarize_tldr": 58, "config_class": 58, "model_path": 58, "rollout_from_model": 58, "rollout_from_data": 58, "600": [58, 410, 416, 418], "reward_kl": [58, 186], "reward_raw": 58, "sample_log_prob": [58, 286, 287, 288, 294, 298, 300, 328, 404, 407, 415], "create_rollout_td": 58, "log_prob": [58, 240, 257, 258, 267, 270, 281, 298, 311], "log_ratio": 58, "replic": [58, 398], "rindex": 58, "eo": 58, "term": [58, 186, 251, 252, 262, 263, 307, 308, 317, 381, 403, 404, 406, 407, 415], "generation_config": 58, "generationconfig": 58, "ti": [58, 351, 352, 353, 354, 356, 357, 358, 359, 403], "log_probs_gen": 58, "logprobs_of_label": 58, "hash_a": 59, "4669941682990263259": 59, "3778166555168484291": 59, "9122128731510687521": 59, "hash_b": 59, "heterogen": [60, 61, 135, 146, 147, 220, 259, 260, 402, 403], "220": [62, 416], "resembl": 64, "querymodul": [64, 395], "tensormap": [64, 395], "collat": [64, 101], "subtyp": 64, "embedding_storag": 64, "tensor_dict_storag": 64, "new_index": 64, "key3": 64, "retrieve_valu": 64, "from_tensordict_pair": 64, "storage_constructor": 64, "write_fn": 64, "tensordictstorag": 64, "thumb": [64, 144, 404], "lazydynamicstorag": 64, "fixedstorag": 64, "randomprojectionhash": [64, 395], "priority_kei": [65, 66, 81, 98, 311, 313, 316, 317, 318, 324, 326, 329, 331, 333, 334, 340, 418, 420], "reduct": [65, 98, 99, 112, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 327, 328, 329, 330, 331, 333, 334], "prioritizedreplaybuff": [65, 395, 420], "min": [65, 98, 99, 112, 271, 272, 281, 309, 310, 311, 317, 327, 329, 331, 403, 404], "median": [65, 98, 99, 112, 131, 132, 162, 294, 298], "include_info": [65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88], "huggingfac": [67, 83, 88, 292], "co": [67, 179, 416], "pad_trunc": 67, "am": 67, "me": 67, "reassur": 67, "ok": 67, "tensor_spec": [69, 163, 219, 226, 316, 317, 328, 330], "primarili": [69, 193, 407], "dataclass": [69, 326], "educ": 69, "guess": 69, "knowledg": [69, 122, 126, 144, 145, 151, 152, 408, 410], "tokenizer_fn": 70, "tensordicttoken": [70, 395], "pre_tokenization_hook": 70, "valid_s": 70, "tokenizer_class": 70, "tokenizer_model_nam": 70, "tokein": 70, "elementwis": 70, "vocabulari": 70, "loader": [70, 404], "185068": 70, "dataset_to_tensordict": 70, "data_dir": 70, "batch_dim": [70, 393], "valid_mask_kei": 70, "conver": 70, "batch_dimens": 70, "filder": 70, "from_dict": 70, "data_memmap": 70, "recurse_through_entri": 77, "recurse_through_stack": 77, "consolid": 77, "dataset_id": [80, 82, 83, 84, 86, 87, 88], "num_proc": 80, "slice_len": [80, 86, 99, 106, 107, 362], "strict_len": 80, "arari": 80, "2600": 80, "million": [80, 405], "consequ": [80, 91, 251, 409], "50x10": 80, "available_dataset": [80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 107], "ataridqn": 80, "immutabledatasetwrit": [80, 81, 82, 83, 84, 85, 86, 87, 88], "shorter": [80, 86, 99, 106, 107], "Be": [80, 86, 99, 106, 107], "game_nam": 80, "krull": 80, "1d": [80, 98, 99, 106, 107, 112], "cheapli": 80, "invalid_rang": 80, "999998": 80, "999999": 80, "add_count": 80, "84": [80, 196, 402, 403, 405, 416, 417], "valueestim": [80, 308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 336, 340, 395, 398, 402, 414, 415], "convolut": [80, 232, 233, 235, 236, 259, 277, 407], "2657628": 80, "2657629": 80, "2657630": 80, "2657631": 80, "2657632": 80, "2657633": 80, "2657634": 80, "2657635": 80, "2657636": 80, "2657637": 80, "2657638": 80, "2657639": 80, "2657640": 80, "2657641": 80, "2657642": 80, "2657643": 80, "2657644": 80, "2657645": 80, "2657646": 80, "2657647": 80, "2657648": 80, "2657649": 80, "2657650": 80, "2657651": 80, "2657652": 80, "2657653": 80, "2657654": 80, "2657655": 80, "2657656": 80, "2657657": 80, "2657658": 80, "2657659": 80, "2657660": 80, "2657661": 80, "2657662": 80, "2657663": 80, "2657664": 80, "2657665": 80, "2657666": 80, "2657667": 80, "2657668": 80, "2657669": 80, "2657670": 80, "2657671": 80, "2657672": 80, "2657673": 80, "2657674": 80, "2657675": 80, "2657676": 80, "2657677": 80, "2657678": 80, "2657679": 80, "2657680": 80, "2657681": 80, "2657682": 80, "2657683": 80, "2657684": 80, "2657685": 80, "2657686": 80, "2657687": 80, "2657688": 80, "2657689": 80, "2657690": 80, "2657691": 80, "1995687": 80, "1995688": 80, "1995689": 80, "1995690": 80, "1995691": 80, "1995692": 80, "1995693": 80, "1995694": 80, "1995695": 80, "1995696": 80, "1995697": 80, "1995698": 80, "1995699": 80, "1995700": 80, "1995701": 80, "1995702": 80, "1995703": 80, "1995704": 80, "1995705": 80, "1995706": 80, "1995707": 80, "1995708": 80, "1995709": 80, "1995710": 80, "1995711": 80, "1995712": 80, "1995713": 80, "1995714": 80, "1995715": 80, "1995716": 80, "1995717": 80, "1995718": 80, "1995719": 80, "1995720": 80, "1995721": 80, "1995722": 80, "1995723": 80, "1995724": 80, "1995725": 80, "1995726": 80, "1995727": 80, "1995728": 80, "1995729": 80, "1995730": 80, "1995731": 80, "1995732": 80, "1995733": 80, "1995734": 80, "1995735": 80, "1995736": 80, "1995737": 80, "1995738": 80, "1995739": 80, "1995740": 80, "1995741": 80, "1995742": 80, "1995743": 80, "1995744": 80, "1995745": 80, "1995746": 80, "1995747": 80, "1995748": 80, "1995749": 80, "1995750": 80, "left": [80, 82, 86, 99, 106, 166, 173, 174, 175, 176, 180, 186, 192, 194, 195, 201, 204, 207, 209, 212, 214, 218, 245, 259, 403, 404, 409, 410], "untouch": [80, 86, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 218], "_max_run": 80, "dataset_asterix": 80, "asterix": 80, "dataset_pong": 80, "sample_from_al": [80, 101, 104], "buffer_id": [80, 104, 110], "hidden": [80, 144, 151, 168, 235, 243, 247, 248, 249, 251, 252, 253, 265, 266, 275, 276, 286, 287, 288, 289, 297, 300, 310, 325, 328, 397, 405, 413, 420], "data_path": [80, 81, 82, 83, 84, 85, 86, 87, 88], "data_path_root": [80, 81, 82, 83, 84, 85, 86, 87, 88], "delet": [80, 81, 82, 83, 84, 85, 86, 87, 88, 170, 369], "chunksiz": [80, 81, 82, 83, 84, 85, 86, 87, 88], "pool": [80, 81, 82, 83, 84, 85, 86, 87, 88, 207], "max_tasks_per_child": [80, 81, 82, 83, 84, 85, 86, 87, 88], "worker_thread": [80, 81, 82, 83, 84, 85, 86, 87, 88], "index_with_gener": [80, 81, 82, 83, 84, 85, 86, 87, 88], "pbar": [80, 81, 82, 83, 84, 85, 86, 87, 88, 402, 404, 405, 414, 415, 416], "num_fram": [80, 81, 82, 83, 84, 85, 86, 87, 88], "unitari": [80, 81, 82, 83, 84, 85, 86, 87, 88, 416], "minariexperiencereplai": [80, 81, 82, 83, 85, 86, 87, 88], "1000000": [80, 81, 82, 83, 84, 85, 86, 87, 88], "distance_from_origin": [80, 81, 82, 83, 84, 85, 86, 87, 88], "forward_reward": [80, 81, 82, 83, 84, 85, 86, 87, 88], "qpo": [80, 81, 82, 83, 84, 85, 86, 87, 88], "qvel": [80, 81, 82, 83, 84, 85, 86, 87, 88], "reward_ctrl": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "reward_forward": [80, 81, 82, 83, 84, 85, 86, 87, 88], "reward_surv": [80, 81, 82, 83, 84, 85, 86, 87, 88], "x_posit": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "x_veloc": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "y_posit": [80, 81, 82, 83, 84, 85, 86, 87, 88], "y_veloc": [80, 81, 82, 83, 84, 85, 86, 87, 88], "achieved_go": [80, 81, 82, 83, 84, 85, 86, 87, 88], "desired_go": [80, 81, 82, 83, 84, 85, 86, 87, 88], "27": [80, 81, 82, 83, 84, 85, 86, 87, 88, 118, 119, 144, 151, 401, 402, 403, 415, 416, 419, 421], "_collate_id": [80, 81, 82, 83, 84, 85, 86, 87, 88], "0x120e21dc0": [80, 81, 82, 83, 84, 85, 86, 87, 88], "cattensor": [80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 402, 413, 416, 421], "cat_tensor": [80, 81, 82, 83, 84, 85, 86, 87, 88], "cat_next_tensor": [80, 81, 82, 83, 84, 85, 86, 87, 88], "new_storag": [80, 81, 82, 83, 84, 85, 86, 87, 88], "31": [80, 81, 82, 83, 84, 85, 86, 87, 88, 131, 132, 403, 405, 416, 417], "full_storag": [80, 81, 82, 83, 84, 85, 86, 87, 88], "0x168406fc0": [80, 81, 82, 83, 84, 85, 86, 87, 88], "from_env": 82, "use_truncated_as_don": 82, "direct_download": 82, "terminate_on_end": 82, "env_kwarg": [82, 87, 88, 166, 391, 392, 402], "reconstruct": [82, 106, 107, 320, 402, 421], "get_dataset": 82, "qlearning_dataset": 82, "fewer": [82, 99, 106], "unexpectedli": 82, "traj_split": 82, "observationnorm": [82, 216, 393, 402, 403, 404, 405, 420], "maze2d": 82, "umaz": 82, "loc": [82, 122, 126, 144, 145, 151, 152, 186, 188, 199, 216, 250, 264, 280, 281, 286, 287, 288, 294, 298, 300, 308, 309, 311, 324, 328, 329, 330, 331, 383, 393, 397, 402, 403, 404, 405, 407, 415, 420], "gen": 83, "dgrl": 83, "accompani": [83, 166, 204], "gap": 83, "2312": 83, "05742": 83, "gen_dgrl": 83, "procgen": 83, "bigfish": 83, "bossfight": 83, "1m_e": 83, "1m_": 83, "comma": 83, "npy": 83, "extract": [83, 165, 292, 402, 404, 420], "mmap": [83, 87, 88], "minut": [83, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "internet": [83, 88], "connect": [83, 88, 153], "minari": 84, "websit": [84, 86], "currenrtli": 84, "minari_data": 84, "door": 84, "torchrl_logg": [84, 411], "28": [84, 259, 403, 404, 416, 417, 418], "door_body_po": 84, "dua": 85, "graff": 85, "2017": 85, "uci": 85, "archiv": 85, "ic": 85, "edu": 85, "ml": [85, 153, 154], "adult_num": [85, 141], "adult_onehot": [85, 141], "mushroom_num": [85, 141], "mushroom_onehot": [85, 141], "covertyp": [85, 141], "shuttl": [85, 141], "magic": [85, 141, 406], "shuffl": [86, 105, 107, 415], "embodi": [86, 417], "institut": 86, "demonstr": [86, 404, 409, 414, 415, 416, 418, 421], "527": [86, 416], "skill": 86, "160266": 86, "googl": [86, 87, 118, 119, 136, 137, 142, 143, 229, 404, 405, 414, 415], "open_x_embodi": 86, "2310": [86, 148], "08864": 86, "language_instruct": 86, "get_non_tensor": 86, "nor": [86, 153], "insuffici": 86, "chosen": [86, 155, 156, 205, 206, 273, 274, 282, 296, 362, 397, 410], "openx": 86, "__will": 86, "change__": 86, "randomli": [86, 105, 152, 187, 188, 206, 245, 294, 298, 407, 414, 415, 416, 418], "crop": [86, 171, 193, 362], "modal": [86, 402], "cmu_stretch": [86, 362], "is_init": [86, 88, 168, 185, 249, 253, 271, 272, 293, 305, 405], "language_embed": 86, "512": [86, 244, 403, 416], "lift": 86, "green": [86, 414], "garbag": 86, "lid": 86, "roboset": 87, "h5": [87, 88, 91], "roboh": [87, 148], "concis": [87, 408], "75": [87, 402, 403, 405, 416, 417], "totensor": 88, "image_s": 88, "v": [88, 216, 247, 248, 251, 252, 286, 316, 324, 331, 397, 402, 403], "npz": 88, "2206": [88, 139, 140], "04779": [88, 309, 315], "vd4rl": 88, "squar": [88, 171, 174, 250, 280, 281, 362], "rectangular": [88, 232, 233], "walker_walk": 88, "64px": 88, "height": [88, 171, 174, 196], "veloc": [88, 120, 121, 122, 126, 144, 145, 151, 152, 169, 414, 415, 416, 421], "infinit": [89, 136, 137, 155, 156, 409, 418], "block": [89, 92, 117, 397, 405, 414], "pairwisedataset": [89, 395], "256": [89, 136, 137, 239, 403, 404, 414, 415, 416], "checkpoint_fil": 91, "h5_kwarg": 91, "iff": 91, "suffix": [91, 375], "h5py": 91, "create_dataset": 91, "temporarili": [91, 220, 409, 418], "immut": [92, 122, 126, 144, 151, 195, 210], "piec": [92, 102, 113, 116, 117, 402, 403, 404, 410, 414, 415, 416, 418], "scratch_dir": [93, 402, 418], "sent": [93, 94, 114, 216], "mistak": [93, 94, 114], "overewritten": 93, "tensorstoragecheckpoint": 93, "main_ckpt_dir": 93, "rb_memmap": 93, "10_000_000": 93, "myclass": [93, 94, 114], "foo": [93, 94, 114, 289, 418, 421], "bar": [93, 94, 114, 289, 372, 373, 375, 379, 399, 403], "attach": [93, 94, 95, 108, 110, 114, 403], "entiti": [93, 94, 95, 108, 110, 114], "zero_": [94, 114, 223], "unlimit": 95, "liststoag": 96, "max_capac": [98, 99, 402, 418], "max_priority_within_buff": [98, 99], "data_0": 98, "data_1": 98, "smoothen": 98, "tdrb": 98, "pack": [98, 247, 251, 404, 406, 421], "nd": [98, 99], "sum_tre": [98, 99], "min_tre": [98, 99], "end_kei": [99, 106, 107], "cache_valu": [99, 106, 107], "closer": 99, "readili": [99, 106, 107], "conjunct": [99, 106, 107, 403], "Will": [99, 106, 139, 362], "buffer0": [99, 106], "immutablewrit": [99, 106], "buffer1": [99, 106], "other_sampl": [99, 106], "short": [99, 106, 107, 118, 119, 131, 132, 144, 220, 251, 252, 403, 404, 406, 407, 415, 418], "tolist": 99, "120110917137936e": 99, "06": [99, 240, 279, 402, 403, 404, 416], "storageensembl": [101, 104], "samplerensembl": 101, "writerensembl": [101, 110], "num_buffer_sampl": [101, 104], "ensembl": [101, 104, 110, 111, 117, 297, 329], "forbidden": 101, "0x13a2ef430": 101, "0x13a2f9310": 101, "interpol": [101, 196, 403, 405], "interpolationmod": [101, 405], "bilinear": [101, 196, 405], "0x13a2f9220": 101, "0x13a2f9f70": 101, "0x13a2d9b50": 101, "0x13a2f95b0": 101, "0x128648260": 101, "kw": [102, 113], "roundrobin": [102, 113], "incomplet": [105, 107], "fresh": 105, "haven": [105, 417], "remain": [105, 168, 176, 177, 186, 205, 263, 408], "draw": [105, 245], "slicesamplerwithoutreplac": [106, 418], "320": [106, 107, 120, 121, 401, 403, 416, 419, 421], "700": [106, 107, 401, 410, 419], "uniqu": [106, 107, 136, 137, 169, 179, 205, 206, 207, 293, 369, 409, 418], "dataid": [106, 107], "__len__": 108, "rank_kei": 112, "rank": [112, 230], "samplerwithoutreplac": [112, 404, 415, 418], "get_insert_index": 112, "convers": [118, 119, 131, 132, 398], "2106": [118, 119, 314, 333], "13281": [118, 119], "categorical_action_encod": [118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152], "frame_skip": [118, 119, 120, 121, 125, 126, 127, 128, 131, 132, 133, 134, 139, 140, 148, 183, 372, 375, 382, 399, 402, 403, 404, 420], "repeat": [118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 230, 404, 414, 415, 416], "allow_done_after_reset": [118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154], "toler": [118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 240, 279], "availalb": [118, 119, 131, 132], "is_avail": [118, 119, 402, 403, 404, 405, 414, 415, 417], "els": [118, 119, 166, 247, 248, 251, 252, 265, 397, 399, 402, 403, 404, 405, 414, 415, 416, 417], "ant": [118, 119, 122, 126, 129, 144, 145, 151, 152, 417], "87": [118, 119, 403, 414, 416, 417], "acrobot": [118, 119, 120, 121, 421], "advant": [118, 119, 131, 132], "timer": [118, 119, 131, 132], "timeit": [118, 119, 131, 132], "310": [118, 119, 416], "ms": [118, 119, 131, 132], "268": [118, 119, 416], "433": [118, 119, 416], "80": [118, 119, 402, 403, 404, 414, 415, 416, 417], "213": [118, 119, 416], "8605": [118, 119], "pipelineenv": 119, "get_environ": 119, "dm_control": [120, 121, 402, 413, 421], "2006": [120, 121, 309, 315, 416], "12983": [120, 121], "task_nam": [120, 122, 126, 144, 145, 151, 152], "cheetah": [120, 121, 122, 126, 144, 145, 151, 152, 362, 402, 421], "240": [120, 121, 416, 420, 421], "swingup": [120, 121, 421], "swingup_spars": [120, 121, 421], "ball_in_cup": [120, 121, 421], "catch": [120, 121, 421], "balance_spars": [120, 121, 421], "three_pol": [120, 121, 421], "two_pol": [120, 121, 421], "finger": [120, 121, 421], "turn_easi": [120, 121, 421], "turn_hard": [120, 121, 421], "fish": [120, 121, 421], "upright": [120, 121, 403, 421], "swim": [120, 121, 421], "hopper": [120, 121, 421], "hop": [120, 121, 421], "humanoid": [120, 121, 144, 151, 413, 421], "walk": [120, 121, 144, 151, 403, 413, 421], "run_pure_st": [120, 121, 421], "bring_bal": [120, 121, 421], "bring_peg": [120, 121, 421], "insert_bal": [120, 121, 421], "insert_peg": [120, 121, 421], "point_mass": [120, 121, 421], "reacher": [120, 121, 421], "swimmer": [120, 121, 421], "swimmer6": [120, 121, 421], "swimmer15": [120, 121, 421], "walker": [120, 121, 421], "dog": [120, 121, 421], "trot": [120, 121, 421], "humanoid_cmu": [120, 121, 421], "lqr": [120, 121, 421], "lqr_2_1": [120, 121, 421], "lqr_6_2": [120, 121, 421], "quadrup": [120, 121, 421], "escap": [120, 121, 421], "stacker": [120, 121, 421], "stack_2": [120, 121, 421], "stack_4": [120, 121, 421], "deviceless": 122, "run_type_check": [122, 138], "counterenv": 122, "discretebox": [122, 126, 144, 145, 151, 152], "sort": [122, 126, 144, 145, 151, 152, 170, 271, 272], "another_act": [122, 126, 144, 145, 151, 152], "mutabl": [122, 126, 144, 145, 151, 152], "_callabletransform": [122, 126, 144, 145, 151, 152], "batch_lock": [122, 124, 126, 144, 151, 166, 206, 210, 416], "done_keys_group": [122, 126, 144, 145, 151, 152], "outer": [122, 126, 144, 145, 151, 152, 399, 402, 403, 421], "another_don": [122, 126, 144, 145, 151, 152], "empty_cach": [122, 126, 144, 145, 151, 152, 210], "fake_tensordict": [122, 126, 144, 145, 151, 152, 403], "braxenv": [122, 126, 144, 145, 151, 152, 195, 395, 406], "envnam": [122, 126, 144, 145, 151, 152], "pipeline_st": [122, 126, 144, 145, 151, 152], "attibut": [122, 126, 144, 145, 151, 152], "maybe_reset": [122, 126, 144, 145, 151, 152], "speak": [122, 126, 144, 145, 151, 152, 402], "rand_act": [122, 126, 135, 144, 145, 146, 147, 151, 152, 166, 406], "register_gym": [122, 126, 144, 145, 151, 152, 406], "entry_point": [122, 126, 144, 145, 151, 152], "info_kei": [122, 126, 144, 145, 151, 152], "reward_threshold": [122, 126, 144, 145, 151, 152], "nondeterminist": [122, 126, 144, 145, 151, 152], "max_episode_step": [122, 125, 126, 127, 144, 145, 151, 152], "order_enforc": [122, 126, 144, 145, 151, 152, 420], "autoreset": [122, 126, 144, 145, 151, 152], "disable_env_check": [122, 125, 126, 139, 140, 144, 145, 151, 152], "apply_api_compat": [122, 126, 144, 145, 151, 152], "nasium": [122, 126, 144, 145, 151, 152], "scope": [122, 126, 144, 145, 151, 152, 421], "dmcontrolenv": [122, 126, 144, 145, 151, 152, 362, 395, 402, 406, 413, 421], "dmc": [122, 126, 144, 145, 151, 152], "removeemptyspec": [122, 126, 144, 145, 151, 152], "threshold": [122, 126, 144, 145, 151, 152, 245, 309, 310, 404], "learnt": [122, 126, 144, 145, 151, 152, 389], "checker": [122, 125, 126, 139, 140, 144, 145, 151, 152], "stepapicompat": [122, 126, 144, 145, 151, 152], "deem": [122, 126, 136, 137, 144, 145, 151, 152, 155, 156], "envgym": [122, 126, 144, 145, 151, 152], "0855": [122, 126, 144, 145, 151, 152], "0215": [122, 126, 144, 145, 151, 152], "0881": [122, 126, 144, 145, 151, 152], "0412": [122, 126, 144, 145, 151, 152], "1101": [122, 126, 144, 145, 151, 152], "0080": [122, 126, 144, 145, 151, 152], "0254": [122, 126, 144, 145, 151, 152], "0424": [122, 126, 144, 145, 151, 152], "9609e": [122, 126, 144, 145, 151, 152], "9776e": [122, 126, 144, 145, 151, 152], "04": [122, 126, 130, 144, 145, 151, 152, 402, 403, 404, 416, 417], "6347e": [122, 126, 144, 145, 151, 152], "3842e": [122, 126, 144, 145, 151, 152], "5338e": [122, 126, 144, 145, 151, 152], "3064e": [122, 126, 144, 145, 151, 152], "0381e": [122, 126, 144, 145, 151, 152], "6656e": [122, 126, 144, 145, 151, 152], "05": [122, 126, 144, 145, 151, 152, 229, 401, 402, 403, 405, 414, 415, 416, 419], "0204e": [122, 126, 144, 145, 151, 152], "action_spac": [122, 126, 144, 145, 151, 152, 179, 242, 274, 290, 291, 295, 296, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 405, 407, 411], "0833": [122, 126, 144, 145, 151, 152], "0275": [122, 126, 144, 145, 151, 152], "0612": [122, 126, 144, 145, 151, 152], "0770": [122, 126, 144, 145, 151, 152, 416], "1256": [122, 126, 144, 145, 151, 152, 416], "0082": [122, 126, 144, 145, 151, 152], "0186": [122, 126, 144, 145, 151, 152], "0476": [122, 126, 144, 145, 151, 152], "2221": [122, 126, 144, 145, 151, 152], "2256": [122, 126, 144, 145, 151, 152], "5930": [122, 126, 144, 145, 151, 152], "6937": [122, 126, 144, 145, 151, 152], "5865": [122, 126, 144, 145, 151, 152], "5479": [122, 126, 144, 145, 151, 152], "0187": [122, 126, 144, 145, 151, 152], "6825": [122, 126, 144, 145, 151, 152, 416], "5224": [122, 126, 144, 145, 151, 152], "0018": [122, 126, 144, 145, 151, 152, 416], "1005": [122, 126, 144, 145, 151, 152], "0335": [122, 126, 144, 145, 151, 152], "0268": [122, 126, 144, 145, 151, 152, 416], "0133": [122, 126, 144, 145, 151, 152], "0627": [122, 126, 144, 145, 151, 152], "0074": [122, 126, 144, 145, 151, 152, 416], "0488": [122, 126, 144, 145, 151, 152, 416], "0353": [122, 126, 144, 145, 151, 152], "0075": [122, 126, 144, 145, 151, 152, 416], "0069": [122, 126, 144, 145, 151, 152, 416], "0098": [122, 126, 144, 145, 151, 152, 416], "0058": [122, 126, 144, 145, 151, 152, 416], "0033": [122, 126, 144, 145, 151, 152, 416], "0157": [122, 126, 144, 145, 151, 152], "0004": [122, 126, 144, 145, 151, 152, 405, 416], "0381": [122, 126, 144, 145, 151, 152], "0452": [122, 126, 144, 145, 151, 152], "11355747": [122, 126, 144, 145, 151, 152], "04257728": [122, 126, 144, 145, 151, 152], "00408397": [122, 126, 144, 145, 151, 152], "04155852": [122, 126, 144, 145, 151, 152], "0389733": [122, 126, 144, 145, 151, 152], "01409826": [122, 126, 144, 145, 151, 152], "0978704": [122, 126, 144, 145, 151, 152], "08808327": [122, 126, 144, 145, 151, 152], "03970837": [122, 126, 144, 145, 151, 152], "00535434": [122, 126, 144, 145, 151, 152], "02353762": [122, 126, 144, 145, 151, 152], "05116226": [122, 126, 144, 145, 151, 152], "02788907": [122, 126, 144, 145, 151, 152], "06848346": [122, 126, 144, 145, 151, 152], "05154399": [122, 126, 144, 145, 151, 152], "0371798": [122, 126, 144, 145, 151, 152], "05128025": [122, 126, 144, 145, 151, 152], "dydact": [122, 126, 144, 145, 151, 152], "gym_env": [122, 126, 144, 145, 151, 152, 420], "reset_kei": [122, 126, 144, 145, 151, 152, 169, 200, 205, 206, 207, 414], "multitask": [122, 126, 144, 145, 151, 152], "multiag": [122, 126, 135, 144, 145, 146, 147, 151, 152, 226, 260, 273, 282, 340], "another_reward": [122, 126, 144, 145, 151, 152], "auto_cast_to_devic": [122, 126, 144, 145, 151, 152, 415], "break_when_all_don": [122, 126, 144, 145, 151, 152], "soon": [122, 126, 144, 145, 146, 147, 151, 152], "__sort": [122, 126, 144, 145, 151, 152], "as__": [122, 126, 144, 145, 151, 152], "argmaxmodul": [122, 126, 144, 145, 151, 152], "argmax": [122, 126, 144, 145, 151, 152, 242, 274, 291, 296, 407], "n_ob": [122, 126, 144, 145, 151, 152, 186, 293, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 408], "n_act": [122, 126, 144, 145, 151, 152, 186, 308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 408], "ourselv": [122, 126, 144, 145, 151, 152, 404, 421], "emul": [122, 126, 144, 145, 151, 152], "epoch": [122, 126, 144, 145, 151, 152, 379, 404, 414, 415], "input_td": [122, 126, 144, 145, 151, 152], "rollout_td": [122, 126, 144, 145, 151, 152], "state_kei": [122, 126, 144, 145, 151, 152], "prevail": [122, 126, 144, 145, 151, 152, 170, 200, 226], "creator": [123, 384, 385, 391, 392, 393], "substitut": [123, 205, 216, 407], "vecnorm": [123, 393], "env_creat": [123, 402], "test_env1": 123, "observation_count": [123, 421], "test_env2": 123, "sleep": [123, 421], "ps": 123, "p1": 123, "p2": 123, "9934": 123, "env_str": 124, "device_map": 124, "accross": [125, 127], "registri": [125, 153], "asyncvectorenv": 125, "involv": [125, 127, 128, 136, 137, 148, 166, 249, 253, 406, 408], "pixel_observ": [125, 127, 128, 148, 420], "pixelobservationwrapp": [125, 127, 128, 148], "adventur": [125, 127, 421], "airraid": [125, 127, 421], "alien": [125, 127, 421], "time_limit": 125, "timelimit": [125, 136, 137, 155, 156], "default_info_dict_read": [125, 126, 127, 144], "reader": [125, 126, 127, 144, 403], "set_info_dict_read": [125, 126, 127, 144, 406], "info_dict": [125, 126, 127, 144], "auto_register_info_dict": [125, 126, 127, 144], "multibinari": [125, 127], "multidiscret": [125, 127], "rag": [125, 127], "gym_conversion_exampl": [125, 127], "info_dict_read": [126, 144], "ignore_priv": 126, "baseinfodictread": 126, "tensordictprim": [126, 144, 231, 249, 253, 305, 405], "succe": [126, 144], "underscor": 126, "primer": [126, 206, 231, 249, 253, 305, 405], "halfcheetah": [126, 144, 162, 196, 402], "reward_run": [126, 144], "read_act": 126, "read_don": 126, "nonsens": 126, "fallback": 126, "broken": [126, 220], "read_ob": 126, "dictat": [126, 294, 298, 328, 402, 416], "read_reward": 126, "hoc": [126, 144, 407], "dict_read": 126, "my_info_kei": 126, "some_env": 126, "vecenv": 127, "vectorenv": 127, "convert_actions_to_numpi": 127, "isaaclab": 127, "secur": 128, "habitat3": 128, "ai": [128, 417], "habitatrenderpick": 128, "isaacgym": [129, 130], "isaacgymwrapp": [129, 395], "isaacgymenv": [130, 395], "webpag": 130, "isaac": 130, "essenc": [130, 406], "instadeepai": [131, 132], "2306": [131, 132], "09884": [131, 132], "snake": [131, 132], "grid": [131, 132, 362], "bodi": [131, 132], "body_st": [131, 132], "fruit_posit": [131, 132], "col": [131, 132], "head_posit": [131, 132], "tail": [131, 132], "game2048": [131, 132], "maze": [131, 132], "cleaner": [131, 132], "cvrp": [131, 132], "multicvrp": [131, 132], "minesweep": [131, 132], "rubikscub": [131, 132], "knapsack": [131, 132], "sudoku": [131, 132], "tsp": [131, 132], "connector": [131, 132], "v2": [131, 132, 149, 150, 337, 351, 352, 353, 354, 356, 357, 358, 359, 405], "mmst": [131, 132], "graphcolor": [131, 132], "partli": [131, 132], "scrambl": [131, 132], "robotwarehous": [131, 132], "tetri": [131, 132], "binpack": [131, 132], "jobshop": [131, 132], "0x1fca91910": 131, "122": [131, 132, 416, 418, 421], "0x1ff9baee0": 131, "134": [131, 132, 416, 418], "0x1ff9ba7c0": 131, "172": [131, 132, 416], "drastic": [132, 144, 418], "mo": [133, 134], "minecart": [133, 134], "mo_gym": 134, "qualnam": 135, "leverag": [135, 146, 147, 402, 415, 421], "neural": [135, 146, 147, 232, 233, 268, 270, 277, 297, 397, 403, 404, 405, 407, 414, 415, 416, 421], "group_map": [135, 136, 137, 142, 143, 146, 147, 153, 154, 155, 156, 157, 414], "constructiuon": [135, 146, 147], "premad": [135, 136, 137, 146, 147, 155, 156, 340], "all_in_one_group": [135, 142, 143, 157], "agent_0": [135, 146, 147, 153, 157, 414], "agent_1": [135, 146, 147, 153, 157], "agent_2": [135, 146, 147, 153, 157], "agent_3": [135, 153], "one_group_per_ag": [135, 146, 147], "meltingpot": [136, 137], "2211": [136, 137], "13746": [136, 137], "melt": [136, 137], "pot": [136, 137], "novel": [136, 137, 408], "social": [136, 137], "familiar": [136, 137, 403, 415, 421], "unfamiliar": [136, 137], "broad": [136, 137], "cooper": [136, 137, 414, 415], "decept": [136, 137], "reciproc": [136, 137], "stubborn": [136, 137], "substrat": [136, 137], "ml_collect": 136, "config_dict": 136, "configdict": 136, "categorical_act": [136, 137, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156], "marlgroupmaptyp": [136, 137, 142, 143, 146, 147, 153, 154, 155, 156, 157, 395, 414], "agent_nam": [136, 137, 155, 156, 157], "agent_names_to_indices_map": [136, 137, 155, 156], "env_torchrl": [136, 137], "commons_harvest__open": [136, 137], "rgb": [136, 137], "144": [136, 137, 416], "192": [136, 137, 403, 416], "collective_reward": [136, 137], "ready_to_shoot": [136, 137], "88": [136, 137, 149, 150, 402, 403, 416, 417], "substrate_config": 137, "get_config": 137, "mp_env": 137, "build_from_config": 137, "default_player_rol": 137, "environn": 138, "mymbenv": [138, 230, 256], "world_model": [138, 230, 256, 320], "hidden_observ": [138, 230, 256], "mlp": [138, 230, 232, 233, 235, 236, 237, 238, 244, 249, 253, 256, 260, 261, 286, 290, 305, 313, 315, 397, 403, 407, 408, 411, 413, 417, 420], "worldmodelwrapp": [138, 230, 256], "activation_class": [138, 230, 232, 233, 235, 236, 237, 238, 243, 244, 254, 256, 259, 260, 403, 407, 414, 415, 420], "activate_last_lay": [138, 230, 238, 254, 256], "sail": [139, 140], "sg": [139, 140], "10558": [139, 140], "readthedoc": [139, 142, 143], "en": [139, 142, 143], "python_interfac": 139, "envpoolmixin": 140, "env_bas": 140, "task_id": 140, "env_typ": 140, "gym_reset_return_info": 140, "envpool_env": 140, "www": [141, 257, 258], "fetch_openml": 141, "106": [141, 416], "openspiel": [142, 143], "open_spiel": [142, 143], "game_str": 142, "return_st": [142, 143, 146, 147], "4672": [142, 143, 403, 416], "current_play": [142, 143], "fen": [142, 143], "rnbqkbnr": [142, 143], "pppppppp": [142, 143], "kqkq": [142, 143], "674": [142, 416], "2048": [142, 143, 403, 417], "add_nois": [142, 143], "amazon": [142, 143], "backgammon": [142, 143], "restor": [142, 143], "td_restor": [142, 143], "pyspiel": 143, "load_gam": 143, "new_initial_st": 143, "3009": 143, "my_env_fun": [144, 151], "custom_attribute_list": [144, 151], "custom_attribut": [144, 151], "custom_method_list": [144, 151], "custom_method": [144, 151], "deploi": [144, 151, 166], "slight": [144, 151, 403], "share_individual_td": [144, 151], "shared_memori": [144, 151], "policy_proof": [144, 151], "ll": [144, 151, 247, 248, 251, 252, 402, 403, 404, 405, 406, 407, 408, 409, 411, 415, 421], "serial_for_singl": [144, 151, 403], "circular": [144, 151, 402], "list_of_kwarg": [144, 151], "com_veloc": [144, 151], "head_height": [144, 151], "joint_angl": [144, 151], "torso_vert": [144, 151], "stringent": [144, 404, 414, 415], "inter": 144, "penv": 144, "env_fix": 144, "influenc": 144, "myenv": [144, 166, 175, 178], "pipe": 144, "update_kwarg": [144, 151], "th": [145, 182, 211, 247, 251, 416], "thdot": [145, 416], "max_spe": [145, 416], "max_torqu": [145, 416], "gen_param": [145, 416], "gravit": [145, 416], "torqu": [145, 416], "pettingzoo": [146, 147, 414, 415], "pet": [146, 147], "zoo": [146, 147], "__": [146, 147], "aecenv": [146, 147], "use_mask": [146, 147], "dead": [146, 147], "done_on_ani": [146, 147, 414], "compulsori": [146, 147], "adversary_0": [146, 147, 414], "adversari": [146, 147, 322, 414], "sisl": 146, "multiwalker_v9": 146, "aec": [146, 147], "n_piston": [146, 147], "pistonball_v6": [146, 147], "piston": [146, 147], "piston_0": [146, 147], "piston_1": [146, 147], "piston_20": [146, 147], "tictactoe_v3": [146, 147], "player": [146, 147, 152], "player_1": [146, 147], "player_2": [146, 147], "butterfli": 147, "parallel_env": [147, 402, 420, 421], "vikashplu": 148, "wiki": 148, "06828": 148, "from_depth": 148, "smacv2": [149, 150], "starcraft": [149, 150], "challeng": [149, 150, 406, 416, 417], "10gen_terran": [149, 150], "10gen_zerg": [149, 150], "10gen_protoss": [149, 150], "3m": [149, 150], "8m": [149, 150], "25m": [149, 150], "5m_vs_6m": [149, 150], "8m_vs_9m": [149, 150], "10m_vs_11m": [149, 150], "27m_vs_30m": [149, 150], "mmm": [149, 150], "mmm2": [149, 150], "2s3z": [149, 150], "3s5z": [149, 150], "3s5z_vs_3s6z": [149, 150], "3s_vs_3z": [149, 150], "3s_vs_4z": [149, 150], "3s_vs_5z": [149, 150], "1c3s5z": [149, 150], "2m_vs_1z": [149, 150], "corridor": [149, 150], "6h_vs_8z": [149, 150], "2s_vs_1sc": [149, 150], "so_many_banel": [149, 150], "bane_vs_ban": [149, 150], "2c_vs_64zg": [149, 150], "old": [149, 150, 325, 421], "smac": [149, 150], "map_nam": [149, 150], "176": [149, 150, 416], "battle_won": [149, 150], "dead_al": [149, 150], "dead_enemi": [149, 150], "episode_limit": [149, 150], "322": [149, 150, 401, 413, 416, 419], "Or": [149, 150, 259], "procedur": [149, 150], "distribution_config": [149, 150], "n_unit": [149, 150], "n_enemi": [149, 150], "team_gen": [149, 150], "dist_typ": [149, 150], "weighted_team": [149, 150], "unit_typ": [149, 150], "marin": [149, 150], "maraud": [149, 150], "medivac": [149, 150], "exception_unit_typ": [149, 150], "start_posit": [149, 150], "surrounded_and_reflect": [149, 150], "map_x": [149, 150], "map_i": [149, 150], "capability_config": [149, 150], "131": [149, 150, 416], "starcraft2env": 150, "tic": 152, "tac": 152, "toe": 152, "single_play": 152, "player1": 152, "desired_batch_s": 152, "board": 152, "player0": 152, "uniti": [153, 154], "technolog": [153, 154], "llapi": [153, 154], "mlagents_env": [153, 154], "unityenviron": [153, 154], "file_nam": 153, "registered_nam": 153, "localhost": 153, "3dball": 153, "group_0": 153, "vectorsensor_size8": 153, "continuous_act": [153, 155, 156, 360, 414, 415], "agent_10": 153, "agent_11": 153, "agent_4": 153, "agent_5": 153, "agent_6": 153, "agent_7": 153, "agent_8": 153, "agent_9": 153, "group_reward": 153, "proroklab": [155, 156], "vectorizedmultiagentsimul": [155, 156], "2207": [155, 156], "03530": [155, 156], "basescenario": 155, "perfrom": [155, 156], "defaultt": 155, "repositiori": 155, "sparsiti": 155, "unbatched_action_spec": [155, 156, 415], "unbatched_observation_spec": [155, 156], "unbatched_reward_spec": [155, 156], "het_spec": [155, 156], "het_specs_map": [155, 156], "flock": [155, 156, 360], "agent_collision_rew": [155, 156], "agent_distance_rew": [155, 156], "ca": 157, "environment4": 157, "get_group_map": 157, "sumbodul": 158, "model_bas": [159, 160, 230, 256], "decod": [159, 265], "model_based_env": [159, 319], "dreamerenv": [159, 319, 395], "model_based_env_ev": 159, "num_interv": 162, "out_action_kei": 162, "samplingstrategi": 162, "optino": 162, "intenum": 162, "interv": [162, 361, 362, 371, 381, 403, 416], "action_disc": 162, "transform_input_spec": [162, 166, 173, 175, 176, 177, 188, 190, 194, 195, 200, 204, 205, 206, 209, 211, 213, 218], "masker": 163, "maskedenv": 163, "ones_lik": 163, "scatter": 163, "fill_float": 165, "fill_int": 165, "fill_bool": 165, "someenvclass": 165, "autoresetenv": 165, "argumet": 165, "fooenv": 165, "sign": [165, 202, 342, 414], "envtyp": 165, "reshape_fn": 166, "reset_func": 166, "environmt": 166, "request": [166, 193], "tensordict_batch_s": 166, "tensordict_reset": [166, 416, 420], "transform_env_batch_s": [166, 173, 209, 218], "transform_output_spec": [166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 218], "transform_observation_spec": [166, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 218, 416], "transform_reward_spec": [166, 167, 172, 173, 175, 176, 180, 186, 194, 195, 198, 199, 200, 201, 202, 204, 209, 211, 218], "transformfull_done_spec": [166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 209, 218], "biner": 167, "burn_in": 168, "burn": 168, "date": [168, 365], "retur": 168, "burnt": 168, "gru_modul": [168, 249, 305], "input_s": [168, 247, 248, 249, 251, 252, 253, 305, 405], "hidden_s": [168, 247, 248, 249, 251, 252, 253, 305, 405], "set_recurrent_mod": [168, 249, 253, 405], "burn_in_transform": 168, "gru": [168, 206, 248, 249, 305], "num_lay": [168, 247, 249, 251, 253, 265, 266, 305], "86": [168, 402, 403, 416, 418], "3008": [168, 403], "0344": 168, "padding_valu": [169, 257, 258], "as_invers": 169, "movement": 169, "1312": [169, 403], "5602": 169, "unsqueezetransform": [169, 416, 418], "consumpt": [169, 395], "followin": 169, "pictur": 169, "pixels_trsf": [169, 418], "grayscal": [169, 403, 405, 418, 421], "data_exclud": [169, 418], "del_kei": [170, 212, 413, 416], "unsqueeze_if_oor": 170, "observation_posit": 170, "observation_veloc": 170, "center": [171, 270, 362], "width": [171, 174, 196], "scalar": [172, 198, 227, 228, 236, 238, 245, 246, 262, 263, 271, 272, 304, 308, 309, 310, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 340, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 397, 403, 408, 416], "permit": [172, 182, 211, 308, 310, 325, 328, 330], "rewardsc": [173, 210, 402, 403, 405], "rewardclip": 173, "transformed_env": [173, 209, 210, 406], "transform_env_devic": [173, 176, 209, 218], "dtype_in": 175, "dtype_out": 175, "scan": [175, 178, 299, 300], "resp": [175, 178], "not_transform": [175, 178], "constructedw": [175, 178], "orig_devic": 176, "unspecifi": 176, "transform_done_spec": [176, 209, 218], "num_actions_effect": 177, "max_act": 177, "include_forward": 177, "num_act": [177, 317, 407], "action_out": 177, "_call": [177, 182, 416], "eol_kei": 179, "lives_kei": 179, "eol_attribut": 179, "unwrap": 179, "breakout": 179, "210": [179, 190, 416, 421], "160": [179, 190, 403, 416, 421], "eol_transform": 179, "eol": 179, "dqnloss": [179, 308, 309, 311, 312, 315, 317, 318, 319, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 386, 395, 398, 403, 405, 411], "register_kei": 179, "loss_or_advantag": 179, "lossmodul": [179, 379, 388, 389, 395, 398], "valueestimatorbas": [179, 326, 395], "excluded_kei": 180, "finit": [181, 270, 407, 418], "first_dim": 182, "last_dim": 182, "allow_positive_dim": [182, 211], "frameskip": 182, "repeatedli": [183, 404, 415], "init_kei": [185, 293], "tracker": 185, "pi_curr": 186, "pi_0": 186, "overfit": 186, "probabilist": [186, 221, 294, 308, 328, 395, 404, 420], "get_dist": [186, 298, 299], "normalparamextractor": [186, 286, 287, 288, 294, 300, 308, 309, 311, 317, 324, 328, 329, 330, 331, 333, 334, 397, 404, 407, 415, 420], "probabilisticactor": [186, 286, 287, 288, 289, 308, 309, 311, 314, 316, 317, 324, 327, 328, 329, 330, 331, 333, 334, 397, 402, 404, 407, 414, 415], "tanhnorm": [186, 286, 287, 288, 294, 300, 308, 309, 311, 324, 328, 329, 330, 331, 333, 334, 395, 404, 415, 420], "return_log_prob": [186, 286, 287, 288, 294, 298, 300, 330, 397, 404, 407, 414, 415, 420], "apply_": 186, "copy_": [186, 402], "formulat": 186, "diverg": [186, 249, 253, 294, 298, 320, 325], "noop": [187, 420], "trial": 187, "standard_norm": [188, 199, 216, 402, 403, 405], "affin": [188, 199, 216], "layer": [188, 216, 229, 232, 233, 235, 236, 241, 243, 247, 248, 249, 251, 252, 253, 254, 259, 260, 262, 263, 265, 266, 277, 278, 284, 292, 301, 397, 403, 404, 405, 407, 414, 417], "epsilon": [188, 227, 228, 245, 246, 271, 272, 332, 377, 403, 404, 405, 407], "recover": 188, "set_default_tensor_typ": 188, "doubletensor": 188, "isclos": 188, "next_ob": [188, 342, 343, 344, 345, 420], "init_stat": [188, 402, 403, 404, 405], "3752e": 188, "5087e": 188, "9294e": 188, "9636": 188, "5608": 188, "6408": 188, "num_it": [188, 403, 404], "reduce_dim": [188, 402, 403, 404, 405], "cat_dim": [188, 402, 403, 404, 405], "keep_dim": [188, 403, 405], "statist": [188, 216, 229, 330, 393, 402, 403, 404, 421], "gaussian": [188, 206, 227, 228, 230, 256, 262, 263, 269, 404, 414], "empir": [188, 230, 256, 294, 298, 402, 404, 415], "3d": [188, 232], "reorder": 190, "in_keys_in": [190, 211], "channel": [190, 208, 259, 265, 266, 403], "r3m": [192, 417], "resnet": [192, 212, 214], "visual": [192, 212, 214, 362, 404, 414, 416], "embed": [192, 212, 213, 214, 235, 273, 285, 286, 287, 288, 297, 302, 417], "ego4d": [192, 212, 214], "univers": [192, 212, 214, 406], "suraj": [192, 212], "nair": [192, 212], "aravind": [192, 212], "rajeswaran": [192, 212], "vikash": [192, 212, 214], "kumar": [192, 212, 214], "chelsea": [192, 212], "finn": [192, 212], "abhinav": [192, 212], "gupta": [192, 212], "2203": [192, 212, 256, 417], "12601": [192, 212, 417], "_init": [192, 212, 402], "resnet50": [192, 214, 417], "model_nam": [192, 212, 214, 365], "resnet34": 192, "resnet18": 192, "r3m_vec": [192, 417], "stack_imag": [192, 214], "tread": [192, 214], "separet": [192, 214], "hub": [192, 214, 406, 417], "resnet50_weight": [192, 214], "imagenet1k_v1": [192, 214], "download_path": [192, 214], "tensor_pixels_kei": [192, 214], "sub_seq_len": 193, "sample_dim": [193, 402], "hesit": 193, "robust": [193, 229], "mix": [193, 273, 282, 340, 402, 414, 415], "improp": 193, "dummyenv": 194, "another_oth": 194, "other_reward": 194, "create_copi": 195, "stuff": [195, 409], "newnam": 195, "r2g": 197, "reward_to_go": 197, "bernoulli_": 197, "9010": 197, "9404": [197, 348], "9701": [197, 348], "9900": [197, 348], "0000": [197, 207, 245, 246, 270, 301, 348, 404, 405, 416, 420], "crash": 197, "clamp_min": 198, "clamp_max": 198, "clip_min": 198, "clip_max": 198, "episode_": 200, "reward1": 200, "reward2": 200, "episode_reward": [200, 414, 415], "keep_reward": 201, "keep_don": 201, "logical_or": 202, "step_count_kei": 204, "update_don": 204, "disjunct": 204, "recognis": 204, "target_return": 205, "subtract": 205, "default_valu": [206, 305, 405], "unit": [206, 230, 243, 247, 248, 265, 266, 275, 276, 404], "transfomedenv": 206, "mykei": 206, "__unless": 206, "exists__": 206, "get_primers_from_modul": [206, 231, 249, 253, 395], "10th": 207, "0216": 207, "1149": 207, "1990": 207, "2749": 207, "3281": 207, "9290": 207, "3702": 207, "8978": 207, "from_int": 208, "shape_toler": 208, "permuat": 208, "ri": 208, "principl": 209, "cattransform": 209, "notabl": 209, "rewardsum": [209, 218, 225, 414, 415], "smoothli": [210, 229], "add_1": 210, "cache_spec": 210, "set_missing_toler": 210, "keyerror": [210, 421], "danger": 211, "vc1": 212, "vc1_vec": 212, "untrain": 212, "make_noload_model": 212, "vip": [213, 214, 417], "implicit": [214, 316, 324, 418], "jason": 214, "ma": 214, "shagun": 214, "sodhani": 214, "dinesh": 214, "jayaraman": 214, "osbert": 214, "bastani": 214, "ami": 214, "zhang": 214, "vip_vec": 214, "final_nam": 215, "sb3": 215, "terminal_obs_read": 215, "truli": [215, 420], "till": 215, "shared_td": 216, "decai": [216, 227, 228, 245, 332, 377, 402, 403, 405, 421], "9999": [216, 416], "0001": [216, 243, 264, 404, 416], "to_observation_norm": 216, "frozen_copi": 216, "race": 216, "underflow": [216, 377], "build_td_for_shared_vecnorm": 216, "memmori": 216, "queue": [216, 418], "td_share": 216, "unfreez": 216, "train_env": 216, "eval_env": 216, "state_dim": [217, 234, 239, 269, 275, 276, 289], "action_dim": [217, 234, 235, 237, 239, 269, 289, 402, 413], "gsde": [217, 329, 393], "gsdemodul": 217, "rb_transform": 218, "resist": 218, "insensit": 218, "sensit": [218, 403], "_orig": 218, "95": [218, 256, 336, 402, 403, 404, 405, 416], "tdreset": [218, 413], "window": [218, 293, 414, 418, 420], "edit": [218, 409], "cube": 219, "check_dtyp": 220, "discrep": [220, 308, 310, 312, 313, 325, 328, 330, 340], "rng": [220, 416], "unsqueeze_null_shap": 223, "probabilistictdmodul": [224, 254, 294, 298, 341, 375], "next_tensordict": [225, 420], "keep_oth": [225, 416], "exclude_reward": 225, "exclude_don": 225, "exclude_act": 225, "next_": 225, "funtion": 225, "_stepmdp": 225, "write_full_fals": 226, "_terminated_or_trunc": 226, "po": [227, 228, 246], "sigma_init": [227, 228, 414], "sigma_end": [227, 228, 414], "annealing_num_step": [227, 228, 245, 246, 271, 272, 402, 403, 405, 407, 411, 414], "sigma": [227, 228, 247, 248, 250, 251, 252, 271, 272, 280, 281, 404, 414], "captur": [227, 228, 245, 246, 271, 272], "omiss": [227, 228, 245, 246, 271, 272], "ommit": [227, 228, 245, 246, 271, 272], "momentum": 229, "max_r": 229, "max_d": 229, "warmup_step": 229, "batchrenorm": 229, "1702": 229, "03275": 229, "corenet": 229, "enhanc": 229, "warmup": 229, "phase": [229, 415, 418], "outlier": 229, "period": 229, "varianc": [229, 230, 250, 264, 280, 281, 398, 402, 404, 415], "warm": 229, "renorm": 229, "entropi": [230, 308, 309, 310, 311, 316, 317, 324, 325, 327, 328, 329, 331, 333, 334, 415], "botev": 230, "2013": 230, "cem": 230, "plan": [230, 255, 256], "k": [230, 231, 247, 248, 251, 252], "maximis": [230, 235, 237, 256, 397, 403, 404, 415], "modelbasedenv": [230, 256], "planning_horizon": [230, 256], "optim_step": [230, 256, 403, 411], "mpc": [230, 255, 256], "num_candid": [230, 256], "candid": [230, 256], "top_k": [230, 256], "modelbasedenvbas": [230, 255, 256, 395], "safemodul": [230, 255, 286, 288, 298, 308, 309, 311, 316, 317, 324, 328, 329, 330, 331, 333, 334, 384, 385, 389, 395, 420], "consistentdropout": 231, "input_shap": 231, "batcht": 231, "make_tensordict_prim": [231, 249, 253, 405], "input_dtyp": 231, "pase": 231, "get_default_dtyp": [231, 377], "mask_6127171760": 231, "env0": [231, 421], "num_cel": [232, 233, 235, 236, 237, 238, 243, 244, 249, 253, 254, 259, 260, 286, 305, 403, 404, 405, 407, 408, 411, 414, 415, 420], "elu": [232, 233, 235, 236, 237, 238, 243, 244, 259, 403, 420], "activation_kwarg": [232, 233, 254], "norm_class": [232, 233, 235, 236, 254], "norm_kwarg": [232, 233, 254], "bias_last_lay": [232, 233, 235, 236, 237, 238, 244, 254], "aggregator_class": [232, 233, 235, 236, 403, 405, 420], "squashdim": [232, 233, 235, 244, 259, 420], "aggregator_kwarg": [232, 233, 235, 236, 403, 405], "squeeze_output": [232, 233, 235, 236, 403, 405], "cell": [232, 233, 247, 248, 249, 251, 252, 253, 254, 259, 260, 404, 406, 407, 408, 409, 410, 411], "kernel": [232, 233, 244, 259], "cnet": [232, 233], "conv3d": 232, "lazyconv2d": [233, 235, 236, 244, 259], "transformer_config": [234, 269, 289], "dtconfig": [234, 239, 269], "2202": [234, 239, 327], "05607": [234, 239, 327], "decisiontransform": [234, 269], "return_to_go": [234, 239, 269, 289], "conv_net_kwarg": [235, 236], "mlp_net_kwarg": [235, 236, 237], "use_avg_pool": [235, 236], "WITH": [235, 236, 237, 238, 271, 272, 332], "1509": [235, 236, 237, 238, 256, 271, 272, 313, 323, 332, 416], "02971": [235, 236, 237, 238, 271, 272, 332], "reus": [235, 369], "convnet": [235, 236, 244, 259, 405, 407, 420], "ndims_in": 235, "avgpool": [235, 236], "lazylinear": [235, 236, 237, 238, 244, 254, 397, 404, 407, 416, 417], "2304": [235, 403], "adaptiveavgpool2d": [236, 403, 405], "output_s": [236, 403, 405], "squeeze2dlay": 236, "400": [237, 238, 410, 415, 416, 418], "mlp_net_kwargs_net1": 238, "mlp_net_kwargs_net2": 238, "mlp1": 238, "mlp2": 238, "decion": 239, "desdescrib": 239, "n_embd": 239, "n_layer": [239, 247, 251], "n_head": 239, "n_inner": 239, "n_posit": 239, "resid_pdrop": 239, "attn_pdrop": 239, "gpt2config": 239, "atol": [240, 279], "rtol": [240, 279], "batch_shap": [240, 279], "event_shap": [240, 279], "absolut": [240, 279, 402], "densiti": [240, 257, 258, 267, 281], "mass": [240, 257, 258, 267, 281, 416], "rsampl": [240, 258, 267, 298], "sample_shap": [240, 257, 258, 267], "softmax": [241, 258, 267, 290, 291], "action_valu": [241, 242, 274, 290, 291, 295, 296, 317, 326, 340, 397, 405, 407, 411], "var_num": [242, 274, 290, 291, 296], "action_value_kei": [242, 274, 290, 291, 295, 296, 326, 340], "action_mask_kei": [242, 245, 246, 274, 290, 291, 295, 296], "perspect": [242, 291, 318, 404], "1707": [242, 291, 318, 328], "06887": [242, 291, 318], "mult": [242, 260, 274, 290, 291, 295, 296], "tensordict_modul": [242, 247, 248, 251, 252, 274, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 311, 312, 316, 317, 324, 328, 329, 330, 331, 333, 334, 397], "nbin": [242, 290, 397], "customdistributionalqv": 242, "log_softmax": [242, 290], "qvalue_actor": [242, 274, 290, 295, 397], "to_modul": [242, 297, 300, 402, 420], "std_bia": 243, "std_min_val": 243, "belief": [243, 265, 275, 276], "1912": [243, 319, 320, 321], "01603": [243, 319, 320, 321], "softplu": [243, 264, 304, 306, 307], "out_features_valu": 244, "cnn_kwarg": [244, 403], "mlp_kwarg": [244, 403], "duel": 244, "cnn": [244, 259, 403, 407, 420], "06581": 244, "greedi": [245, 246, 274, 291, 296, 403, 405, 407], "eps_init": [245, 246, 271, 272, 403, 405, 407, 411], "eps_end": [245, 246, 271, 272, 403], "explorative_polici": [245, 246, 271, 272], "9055": [245, 246, 416], "9277": [245, 246], "6295": [245, 246], "2532": [245, 246], "grad_fn": [245, 246, 285], "addbackward0": [245, 246], "batch_first": [247, 249, 251, 253, 405], "bidirect": [247, 251, 405], "cudnn": [247, 248, 251, 252, 405], "rnn": [247, 248, 249, 251, 252, 253, 405, 407], "device_count": [247, 248, 251, 252, 421], "n_in": [247, 248, 251, 252], "n_out": [247, 248, 251, 252], "h0": [247, 248, 251, 252], "h1": [247, 248, 251, 252], "vectoris": [247, 248, 251, 252], "call_gru": [247, 248], "h_out": [247, 248, 251, 252], "batched_cal": [247, 248, 251, 252], "gate": [247, 248, 251], "r_t": 247, "w_": [247, 248, 251, 252], "ir": [247, 248], "x_t": [247, 251], "b_": [247, 248, 251, 252], "hr": [247, 248, 251], "h_": [247, 248, 251], "z_t": 247, "iz": [247, 248], "hz": [247, 248], "n_t": 247, "odot": [247, 248, 251, 252], "hn": [247, 248, 251], "h_t": [247, 251], "sigmoid": [247, 248, 251, 252], "hadamard": [247, 248, 251, 252], "multilay": [247, 251], "_t": [247, 251, 415, 416], "ge": [247, 251], "bernoulli": [247, 251], "b_ih": [247, 248, 251, 252, 253], "b_hh": [247, 248, 251, 252, 253], "h_0": [247, 251, 252], "unbatch": [247, 251], "pack_padded_sequ": [247, 251], "pack_sequ": [247, 251], "num": [247, 251, 411], "_layer": [247, 251], "_size": [247, 248, 251, 252], "h_n": [247, 251], "packedsequ": [247, 251], "weight_ih_l": [247, 251], "learnabl": [247, 248, 251, 252], "w_ir": 247, "w_iz": 247, "w_in": 247, "num_direct": [247, 251], "weight_hh_l": [247, 251], "w_hr": 247, "w_hz": 247, "w_hn": 247, "bias_ih_l": [247, 251], "b_ir": 247, "b_iz": 247, "b_in": 247, "bias_hh_l": [247, 251], "b_hr": 247, "b_hz": 247, "b_hn": 247, "mathcal": [247, 248, 251, 252], "sqrt": [247, 248, 251, 252, 271, 272], "frac": [247, 248, 251, 252, 404], "seq_len": [247, 251], "subtli": 247, "matrix": [247, 251, 262, 263], "contrast": [247, 270, 323, 418], "hx": [247, 248, 251, 252], "lstmcell": [248, 253], "gru_cel": 248, "weight_ih": [248, 252], "weight_hh": [248, 252], "bias_ih": [248, 252], "bias_hh": [248, 252], "rocm": [248, 252], "embedd": [249, 253], "grucel": [249, 297], "python_bas": [249, 253], "recurrent_st": [249, 253, 305, 405], "custom_kei": [249, 253], "recurrent_mod": [249, 253], "rs": [249, 402], "gru_module_train": 249, "policy_train": [249, 253], "traj_td": [249, 253], "supplementari": [249, 253, 404, 421], "That": [249, 253, 404, 414], "dealt": [249, 253], "poorli": [249, 253], "data_collector": [249, 253, 403], "policy_infer": [249, 253], "td_inf": [249, 253], "assert_clos": [249, 253], "upscal": [250, 280, 281], "tanh_loc": [250, 280, 281], "event_dim": [250, 279, 280], "poor": [250, 280, 281], "explos": [250, 280, 281], "formula": [250, 280, 281, 308, 310, 325, 328, 398, 404], "proj_siz": 251, "c0": [251, 252], "c1": [251, 252], "call_lstm": [251, 252], "c_out": [251, 252], "i_t": 251, "ii": [251, 252], "hi": [251, 252], "f_t": 251, "hf": [251, 252], "g_t": 251, "ig": [251, 252], "hg": [251, 252], "o_t": 251, "ho": [251, 252], "c_t": 251, "c_": 251, "forget": 251, "1402": 251, "1128": 251, "c_0": [251, 252], "proj": 251, "c_n": 251, "w_ii": 251, "w_if": 251, "w_ig": 251, "w_io": 251, "w_hi": 251, "w_hf": 251, "w_hg": 251, "w_ho": 251, "b_ii": 251, "b_if": 251, "b_ig": 251, "b_io": 251, "b_hi": 251, "b_hf": 251, "b_hg": 251, "b_ho": 251, "weight_hr_l": 251, "_revers": 251, "analog": [251, 407], "cn": 251, "lstm_cell": 252, "h_1": 252, "c_1": 252, "time_step": [252, 293], "cx": 252, "correspont": 253, "recurrent_state_h": [253, 405], "recurrent_state_c": [253, 405], "triplet": [253, 295, 296], "lstm_modul": 253, "rs_h": 253, "rs_c": 253, "hidden0": 253, "hidden1": 253, "single_bias_last_lay": 254, "layer_class": 254, "layer_kwarg": 254, "perceptron": [254, 407], "aslo": 254, "42": [254, 270, 308, 309, 311, 312, 316, 324, 331, 403, 416], "noisylinear": [254, 262, 395, 403], "noisylazylinear": [254, 395], "mpcplanner": 255, "tensordict_out": [255, 421], "mppi": 256, "covari": 256, "william": [256, 330], "aldrich": 256, "theodor": 256, "01149": 256, "hansen": 256, "wang": 256, "su": 256, "04955": 256, "valueoper": [256, 286, 287, 288, 308, 309, 310, 311, 312, 317, 324, 325, 328, 329, 330, 331, 333, 334, 389, 397, 402, 404, 408], "tdlambdaestim": [256, 395, 402], "value_net": [256, 313, 315, 330, 342, 343, 344, 345, 404, 407, 408, 411], "adv": 256, "lmbda": [256, 336, 342, 345, 347, 353, 354, 355, 358, 359, 398, 402, 404, 415], "value_network": [256, 312, 313, 315, 316, 318, 324, 331, 342, 343, 344, 345, 398, 402, 404, 408, 411, 414], "temperatur": [256, 309, 316, 324], "neg_inf": [257, 258], "inf": [257, 258], "api_doc": [257, 258], "tf_agent": [257, 258], "event": [257, 258, 267, 351, 352, 353, 354, 356, 357, 358, 359, 418], "unnorm": [257, 258, 267], "sparse_mask": [257, 258], "dens": [257, 258], "0831": [257, 258], "1203": [257, 258], "0928": [257, 258], "1972": [257, 258], "grad_method": [258, 267], "reparamgradientstrategi": [258, 267], "passthrough": [258, 267], "relaxedonehot": [258, 267], "zeros_lik": [258, 416], "sample_non_valid": 258, "share_param": [259, 260, 261, 414, 415], "use_td_param": [259, 260, 261], "get_stateful_net": [259, 260, 261, 326, 397, 398], "from_stateful_net": [259, 260, 261, 326, 398], "homogen": [259, 260, 414, 415], "tensordictparam": [259, 260], "_empty_net": [259, 260], "roughli": [259, 260, 420], "agent_network": [259, 260], "modulelist": [259, 260], "2592": [259, 403], "decentr": 259, "n_agent_input": [260, 261, 414, 415], "n_agent_output": [260, 261, 414, 415], "lazili": [260, 416], "toech": 260, "centalis": 260, "shown": [260, 397, 413, 414, 415, 418], "agent_dim": 261, "vmap_random": [261, 326, 398], "stateful_net": [261, 326], "Such": [261, 326], "multiagentmlp": [261, 414, 415], "snet": 261, "hasattr": [261, 402], "kaiming_normal_": 261, "std_init": [262, 263], "device_typ": [262, 263], "initialize_paramet": 262, "isol": [262, 326], "1706": [263, 282], "10295v3": 263, "induc": 263, "aid": 263, "scale_map": 264, "biased_softplus_1": 264, "scale_lb": [264, 275, 276], "module_norm": 264, "1803": [265, 266, 273], "10122": [265, 266], "rnn_hidden": 265, "latent": 266, "ordin": [268, 395], "parametris": [268, 270], "inres": 269, "mu": [269, 271, 272, 404], "impos": [270, 397], "proxim": [270, 328, 404, 415], "atom": 270, "tang": 270, "agraw": 270, "2020": 270, "1901": 270, "10500": 270, "discretis": 270, "num_atom": 270, "num_sampl": 270, "middl": 270, "adam": [270, 280, 402, 403, 404, 405, 408, 411, 414, 415, 416], "lr": [270, 402, 403, 404, 405, 411, 414, 415, 416], "optimis": [270, 414, 415], "minimis": 270, "penalis": 270, "0308": 270, "1586": 270, "4727": 270, "2260": 270, "1120": [270, 403], "histogram": 270, "return_typ": 270, "hist": [270, 418], "158": [270, 416], "478": [270, 416], "228": [270, 416], "112": [270, 416], "bin_edg": 270, "8000": [270, 402, 404], "6000": [270, 404], "4000": [270, 402, 403, 404], "ornstein": [271, 272, 402], "uhlenbeck": [271, 272, 402], "ou": [271, 272, 402], "correl": [271, 272], "noise_t": [271, 272], "noise_": [271, 272], "theta": [271, 272, 404, 416], "sigma_t": [271, 272], "sigma_": [271, 272], "anneal": [271, 272, 403, 407, 414], "ou_prev_nois": [271, 272], "ou_step": [271, 272], "x0": [271, 272], "sigma_min": [271, 272], "n_steps_ann": [271, 272], "is_init_kei": [271, 272], "_ou_prev_nois": [271, 272], "_ou_step": [271, 272], "state_shap": [273, 340], "mixing_embed_dim": [273, 340], "qmix": [273, 414, 415], "mixer": [273, 282, 340], "monoton": 273, "hyper": 273, "11485": 273, "qmixerloss": [273, 282], "qmix_vdn": [273, 282], "chosen_action_valu": [273, 274, 282, 295, 296, 340, 397, 405, 407], "vdn": [273, 282], "hidden_dim": [275, 276], "posterior": [275, 320], "rssm": [275, 276, 320], "1811": [275, 276], "04551": [275, 276], "obs_embed": 275, "rnn_hidden_dim": 276, "dream": 276, "safe_tanh": 280, "tanhtransform": 280, "overflow": [280, 285, 290, 291, 294, 295, 296, 297, 298], "get_mod": 280, "decomposit": 282, "05296": 282, "hide": [283, 404, 414, 415], "satisfi": [283, 397], "vmap_dim": 283, "lam": 283, "sample_in": 283, "sample_in_td": 283, "vm": 283, "translat": [285, 294], "character": [285, 290, 294, 295, 297, 418], "td_modul": [285, 286, 287, 288, 294, 297, 298, 300, 302, 407, 420], "3635": 285, "0340": 285, "1476": 285, "3911": [285, 416], "1664": [285, 403, 416], "5455": 285, "2247": 285, "4583": 285, "2916": 285, "2160": 285, "5337": 285, "5193": 285, "addmmbackward0": 285, "actorvalueoper": [286, 310, 325, 328, 397, 407], "get_policy_oper": [286, 287, 288, 310, 325, 328, 397], "standalon": [286, 287, 288, 407], "tdmodul": [286, 287, 288, 389], "get_critic_oper": 286, "common_oper": [286, 288], "policy_oper": [286, 287, 288], "value_oper": [286, 287, 288], "module_hidden": [286, 288], "td_module_hidden": [286, 288], "module_act": [286, 288], "td_module_act": [286, 287, 288], "module_valu": [286, 287, 288], "td_module_valu": [286, 287, 288], "state_action_valu": [286, 302, 309, 311, 316, 324, 331, 341, 389, 397, 402, 414, 420], "td_clone": [286, 287, 288], "tensordictmodulewrapp": [286, 384, 385, 389], "get_policy_head": [286, 287, 288], "safesequenti": [286, 287, 288, 340], "head": [286, 288, 305, 310, 325, 328], "get_value_head": [286, 287, 288], "get_value_oper": [286, 287, 288, 310, 325, 328], "action_modul": 287, "state_valu": [287, 288, 302, 310, 316, 324, 325, 328, 329, 331, 342, 343, 344, 345, 347, 349, 351, 353, 355, 356, 358, 397, 402, 404, 415], "actorcriticoper": [288, 397, 407], "embeddig": 288, "refet": 288, "actorcriticwrapp": [288, 397, 402], "inferec": 289, "set_tensor_kei": 289, "dt_inference_wrapp": 289, "baz": 289, "inference_context": 289, "obs_dim": 289, "tanhdelta": [289, 395, 402, 414], "dtactor": 289, "actor_modul": [289, 420], "dist_class": 289, "dist_kwarg": 289, "distribution_kwarg": [289, 294, 298, 404, 414, 415], "inference_actor": 289, "sequence_length": 289, "mask_context": 289, "out_act": 289, "qvaluemodul": [290, 295, 340, 405, 407, 411], "distributionaldqnnet": 290, "make_log_softmax": 290, "my_action_valu": [291, 296], "chanc": 291, "thid": 291, "lmheadmodel": 292, "actor_head": [292, 310, 325, 328], "base_model": 292, "lm_head": 292, "macro": 293, "lookahead": 293, "n_action": [293, 309, 311, 313, 315, 327, 331], "reshape_cat": 293, "actor_bas": 293, "obs_cat": 293, "obs_cat_reshap": 293, "action_orig": 293, "counter": [293, 372, 399], "default_interaction_typ": [294, 298, 407], "interaction_typ": [294, 298], "datacollectorbas": [294, 381, 384, 385, 389, 395], "set_interaction_typ": [294, 298], "compositedistribut": [294, 308, 328, 407], "distribution_map": 294, "name_map": 294, "cache_dist": [294, 298], "n_empirical_estim": [294, 298], "compound": [294, 407], "chose": 296, "functionalmodul": 297, "functionalmodulewithbuff": 297, "td_fmodul": 297, "td_function": 297, "td_state": 297, "params_repeat": 297, "td_vmap": [297, 300], "random_sampl": [297, 298], "suppli": 298, "fist": 298, "log_prob_kei": [298, 415], "probabilistictensordictsequenti": [299, 308, 310, 325, 328, 330, 384, 385, 420], "partial_toler": [299, 300, 413], "who": [299, 300], "AND": [299, 300, 311], "tensordictsequenci": 300, "tensordictsequ": 300, "safeprobabilisticmodul": [300, 397], "spec1": 300, "net1": 300, "module1": 300, "td_module1": 300, "spec2": 300, "module2": 300, "td_module2": 300, "clamp": [301, 320, 379, 414, 416], "boundari": [301, 404, 414, 415], "resolut": 301, "9944": 301, "9991": 301, "3020": 301, "2299": [301, 416], "5418": 301, "2989": 301, "6849": 301, "3169": 301, "2690": 301, "9649": [301, 416], "5686": 301, "8602": 301, "0315": 301, "8455": [301, 416], "6027": 301, "4746": 301, "7843": 301, "7782": 301, "2111": 301, "5115": 301, "4687": 301, "5760": 301, "custommodul": 302, "imaginari": 303, "imagin": 303, "transition_model": 303, "get_reward_oper": 303, "get_transition_model_oper": 303, "min_val": [304, 307], "_bia": 304, "surject": 307, "expln": 307, "biased_softplu": [307, 395], "beggin": 307, "biased_softplus_": 307, "syntax": [307, 402], "met": [307, 414, 416], "1602": 308, "01783v2": 308, "actor_network": [308, 309, 310, 311, 312, 314, 316, 317, 324, 325, 327, 328, 329, 330, 331, 333, 334, 398, 402, 404, 408, 414, 415], "critic_network": [308, 310, 325, 328, 330, 404, 415], "entropy_bonu": [308, 310, 325, 328, 404], "favour": [308, 310, 325, 328], "samples_mc_entropi": [308, 310, 325, 327, 328], "mont": [308, 310, 325, 328, 402], "carlo": [308, 310, 325, 328, 402], "entropy_coef": [308, 310, 325, 328, 404, 415], "critic_coef": [308, 310, 325, 328, 404], "loss_critic_typ": [308, 310, 325, 328, 330, 404], "l1": [308, 310, 312, 313, 317, 325, 328, 329, 330, 333, 334, 337, 340, 397, 402], "l2": [308, 310, 312, 313, 314, 315, 317, 320, 321, 325, 328, 329, 330, 333, 334, 337, 340, 402, 414], "smooth_l1": [308, 309, 310, 311, 312, 313, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 337, 340, 404], "separate_loss": [308, 310, 311, 312, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334], "propag": [308, 310, 311, 312, 316, 317, 324, 325, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345, 404, 414, 415], "advantage_kei": [308, 310, 325, 328, 330, 342, 343, 344, 345], "value_target_kei": [308, 310, 325, 328, 330, 342, 343, 344, 345], "value_target": [308, 310, 325, 328, 330, 342, 343, 344, 345, 404, 415], "ddp": [308, 310, 325, 328, 330], "fsdp": [308, 310, 325, 328, 330], "divid": [308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 327, 328, 329, 330, 331, 333, 334, 382, 397, 402, 414, 415, 416], "clip_valu": [308, 310, 325, 328, 330], "loss_crit": [308, 328, 404, 415], "loss_entropi": [308, 328, 404, 415], "loss_object": [308, 328, 404, 415], "recur": [308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345, 346, 407], "next_reward": [308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345], "next_don": [308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345], "next_termin": [308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345], "loss_obj": 308, "next_observ": [308, 309, 311, 312, 313, 315, 316, 317, 324, 328, 329, 330, 331, 333, 334, 413], "sacloss": [308, 323, 332, 395], "fraction": 308, "make_value_estim": [308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 335, 340, 398, 402, 403, 414, 415, 420], "value_typ": [308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 336, 340, 402], "hyperparam": [308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 402], "enum": [308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 336, 340, 402], "default_value_estim": [308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 402, 420], "default_value_kwarg": [308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 395, 402], "dqn_loss": [308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 335, 340], "td1": [308, 309, 311, 312, 313, 315, 317, 318, 319, 324, 326, 328, 329, 330, 331, 333, 334, 340, 402], "conserv": [309, 315], "qvalue_network": [309, 311, 316, 317, 324, 329, 331, 333, 334], "unti": [309, 311, 324, 329, 331, 333, 334], "loss_funct": [309, 311, 312, 313, 314, 315, 316, 317, 324, 329, 331, 333, 334, 337, 340, 402, 414], "alpha_init": [309, 311, 317, 327, 329, 331], "min_alpha": [309, 311, 317, 327, 329, 331], "max_alpha": [309, 311, 317, 327, 329, 331], "fixed_alpha": [309, 311, 317, 327, 329, 331], "target_entropi": [309, 311, 317, 327, 329, 331], "prod": [309, 311, 327, 331], "delay_actor": [309, 312, 331, 333, 334], "delay_qvalu": [309, 317, 329, 331, 333, 334], "min_q_weight": 309, "max_q_backup": 309, "backup": 309, "deterministic_backup": 309, "num_random": 309, "with_lagrang": 309, "lagrang": 309, "lagrange_thresh": 309, "valueclass": [309, 311, 312, 317, 329, 331, 333, 334], "qvalu": [309, 311, 316, 317, 324, 329, 331, 333, 334], "loss_actor": [309, 311, 312, 316, 317, 324, 329, 330, 331, 333, 334, 374, 402, 408, 414], "loss_actor_bc": 309, "loss_alpha": [309, 311, 317, 329, 331], "loss_cql": [309, 315], "loss_qvalu": [309, 311, 315, 316, 317, 324, 329, 331, 333, 334], "loss_alpha_prim": 309, "clip_epsilon": [310, 404, 415], "normalize_advantag": [310, 325, 328, 415], "value_kei": [310, 325, 328, 342, 343, 344, 345, 402], "somemodul": [310, 325, 328], "someactor": [310, 325, 328], "value_head": [310, 325, 328], "somevalu": [310, 325, 328], "loss_modul": [310, 323, 325, 326, 328, 332, 379, 388, 389, 398, 399, 402, 403, 404, 414, 415, 418], "IN": 311, "FOR": 311, "simplic": [311, 403, 404, 409, 417, 418, 420], "openreview": [311, 329], "pczqttstix": 311, "qvalue_loss": [311, 333], "actor_loss": [311, 333], "alpha_loss": 311, "num_qvalue_net": [311, 316, 317, 324, 329, 331, 333, 334], "target_entropy_buff": 311, "delay_valu": [312, 313, 315, 318, 330, 331, 340, 403, 405, 411, 414], "loss_valu": [312, 316, 324, 330, 331, 402, 404, 408, 414, 415], "pred_valu": [312, 315, 333, 334, 402, 408], "pred_value_max": [312, 402, 408], "target_valu": [312, 315, 329, 333, 334, 341, 398, 402, 408], "target_value_max": [312, 402, 408], "qvalueactor": [313, 315, 340, 397, 403, 405], "double_dqn": 313, "06461": [313, 323], "mult_one_hot": [313, 316, 317, 340], "loss_val": [313, 315, 398, 402, 404, 405, 408, 409, 411, 414, 415, 418], "01345": 314, "distanc": [315, 325, 337, 341, 342, 415], "dcql_loss": 315, "2110": [316, 324], "06169": [316, 324], "expectil": [316, 324], "tau": [316, 324, 332, 402, 403, 414], "antmaz": [316, 324], "sticht": [316, 324], "onehotcategor": [316, 317, 395], "target_entropy_weight": 317, "disctount": 318, "distributionalqvalueactor": [318, 397], "input_tensordict": [318, 402], "actor_model": 319, "value_model": [319, 321], "imagination_horizon": 319, "unrol": [319, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359], "discount_loss": [319, 321], "lambda_kl": 320, "lambda_reco": 320, "lambda_reward": 320, "reco_loss": 320, "reward_loss": 320, "free_nat": 320, "nat": 320, "delayed_clamp": 320, "global_averag": 320, "value_loss": 321, "fake_data": 321, "1606": 322, "03476": 322, "discriminator_network": 322, "use_grad_penalti": 322, "gp_lambda": 322, "discrimin": 322, "ddpgloss": [323, 332, 389, 395, 402, 408, 414, 420], "td3loss": [323, 332, 395], "value_network_update_interv": 323, "qvalueclass": 324, "loss_value_diff": 324, "diff": 324, "old_polici": 325, "new_polici": 325, "apart": [325, 415], "dtarg": 325, "samples_mc_kl": 325, "analyt": 325, "decrement": 325, "loss_": [326, 374, 398, 402, 408], "equip": [326, 405, 407], "gh": 326, "_acceptedkei": 326, "_forward_value_estimator_kei": 326, "alter": [326, 397], "value_estim": [326, 342, 343, 344, 345, 346, 398, 402, 415], "myloss": 326, "action2": 326, "augment": [326, 409, 411, 418], "set_exploration_typ": [326, 375, 395, 397, 404, 405, 407, 414, 420], "deterministic_sampling_mod": 326, "convert_to_funct": [326, 402], "expand_dim": 326, "create_target_param": [326, 402], "compare_against": [326, 402], "_param": 326, "expans": 326, "resampl": 326, "_target_param": 326, "network_nam": 326, "blend": 326, "add_random_modul": [326, 398], "flavor": [328, 402, 414, 415, 420], "clipppoloss": [328, 395, 404, 415], "klpenppoloss": [328, 395], "06347": 328, "gae": [328, 395, 398, 402, 404, 415], "ppo_loss": 328, "tdlambda": [328, 336, 398, 402], "base_lay": 328, "randn_lik": 328, "samplelogprob": 328, "ay8zfzm0tdd": 329, "sub_sample_len": 329, "subsampl": [329, 370, 399], "action_log_prob_actor": 329, "state_action_value_actor": [329, 333, 334], "connectionist": 330, "1992": 330, "doi": 330, "1007": 330, "bf00992696": 330, "actor_net": [330, 402, 404], "1801": 331, "01290": 331, "applic": [331, 340, 406, 407, 416], "1812": 331, "05905": 331, "redqloss": [332, 395], "math": 332, "theta_t": [332, 416], "theta_": [332, 416], "polyak": 332, "minimalist": 333, "06860": 333, "policy_nois": [333, 334], "noise_clip": [333, 334], "td3_bc": 333, "bc_loss": 333, "lmbd": 333, "next_state_valu": [333, 334, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 395], "td0": [335, 402, 414], "strict_shap": 337, "view_a": 337, "qmixer": [340, 395], "local_valu": 340, "visibl": [340, 415], "dafault": 340, "acceptedkei": 340, "global_valu": 340, "penultim": 340, "local_value_network": 340, "mixer_network": 340, "value_modul": [340, 404, 420], "qnet": [340, 402], "next_val_kei": 341, "pred_next_v": 341, "usus": 341, "mse": 341, "q_valu": 341, "n_steps_to_next": 341, "value_next_st": 341, "1506": [342, 347, 355], "02438": [342, 347, 355], "exponenti": [342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 377], "average_ga": [342, 404], "skip_exist": [342, 343, 344, 345], "time_dim": [342, 344, 345, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359], "gradient_mod": 342, "value_error": [342, 343, 344, 345, 346], "target_param": [342, 343, 344, 345, 346, 402, 415], "98": [342, 343, 344, 345, 403, 416, 417], "94": [342, 345, 403, 416], "unpack": [342, 343, 344, 345], "tensor_kei": [342, 343, 344, 345, 346], "next_valu": [342, 343, 344, 345, 346], "aka": [343, 403, 414], "average_reward": [343, 344, 345], "tdestim": [343, 344, 346], "infti": 344, "valuefunctionbas": 346, "old_stat": [347, 349, 351, 353, 355, 356, 358], "new_stat": [347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359], "rolling_gamma": [351, 352, 353, 354, 356, 357, 358, 359], "g1": [351, 352, 353, 354, 356, 357, 358, 359], "g2": [351, 352, 353, 354, 356, 357, 358, 359], "g3": [351, 352, 353, 354, 356, 357, 358, 359], "g4": [351, 352, 353, 354, 356, 357, 358, 359], "v3": [351, 352, 353, 354, 356, 357, 358, 359], "preproc": [360, 414], "as_non_tensor": [360, 414], "render_method": 360, "pass_tensordict": 360, "syntat": 360, "sugar": 360, "out_file_bas": 361, "skip_reset": 361, "center_crop": 362, "make_grid": 362, "csv": [362, 364, 366, 403, 410, 411], "wandb": [362, 366, 369, 410, 420], "tensorboard": [362, 366, 368, 410, 420], "log_dir": [362, 363, 364, 366, 368, 369, 403, 411], "cheetah_video": 362, "run_video": 362, "openxexperiencereplai": 362, "run_video_0": 362, "templat": 363, "pt": [364, 399, 417], "video_fp": 364, "minim": [364, 418], "dependeci": 364, "cur_dir": 364, "csv_log": 364, "add_video": 364, "video_": 364, "experiment_nam": [365, 366], "uuid": [365, 403, 421], "logger_typ": 366, "logger_nam": 366, "mlflow": [366, 367], "wandb_kwarg": 366, "mlflow_kwarg": 366, "tracking_uri": 367, "uri": 367, "datastor": 367, "tb_log": 368, "tensoarboard": 368, "td_log": 368, "save_dir": 369, "resum": 369, "uncategor": 369, "sub_traj_len": 370, "min_sub_traj_len": 370, "register_op": [370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 399, 403], "process_optim_batch": [370, 376, 377, 399], "td_out": [370, 378], "_process_optim_batch_hook": [370, 399], "batch_subsampl": 370, "clear_cuda": 371, "pre_optim_step": [371, 399], "log_pbar": [372, 373, 375, 377, 399, 403], "progress": [372, 373, 375, 379, 399, 403, 405, 421], "count_fram": 372, "pre_steps_log": [372, 373, 399], "count_frames_log": 372, "lognam": 373, "r_train": [373, 403], "log_reward": [373, 403], "loss_compon": 374, "appl": 374, "optimizer_hook": 374, "record_interv": [375, 402, 403], "record_fram": [375, 382, 402, 403], "policy_explor": [375, 389, 402, 403, 407, 411], "log_kei": [375, 403], "underestim": 375, "r_evalu": [375, 402], "flatten_tensordict": [376, 403], "max_dim": 376, "rb_trainer": 376, "batch_process": [376, 377, 378, 399], "post_loss": [376, 399], "999": [377, 403], "jitter": 377, "finfo": 377, "default_dtyp": 377, "reward_norm": 377, "update_reward_stat": 377, "normalize_reward": 377, "make_train": [378, 395], "_process_batch_hook": [378, 399], "select_kei": [378, 399], "versatil": [379, 406], "optim_steps_per_batch": [379, 399, 403], "clip_grad_norm": 379, "clip_norm": 379, "progress_bar": 379, "save_trainer_interv": 379, "log_interv": [379, 403], "save_trainer_fil": [379, 399], "update_weights_interv": [381, 403], "update_weight": 381, "post_step": [381, 399, 403], "cfg": [382, 383, 384, 385, 386, 387, 388, 389, 390, 393], "dictconfig": [382, 383, 384, 385, 387, 388, 389, 390, 393], "unknowingli": 382, "annealing_fram": [382, 402], "init_env_step": [382, 383, 402], "proof_environ": [383, 402], "sta": 383, "ot": 383, "actor_model_explor": [384, 385, 402], "make_env_kwarg": [384, 385], "targetnetupdat": [386, 388, 389], "replayargsconfig": 387, "target_net_updat": [389, 402, 403], "constitu": 389, "egreedywrapp": 389, "env_proof": 389, "obs_spec": 389, "net_valu": 389, "dir": [389, 399, 403], "gettempdir": 389, "argpars": [390, 393], "namespac": [390, 393], "parser": [390, 393], "transformed_env_constructor": [390, 395], "num_env_per_collector": [391, 392], "video_tag": 393, "norm_obs_onli": 393, "use_env_cr": 393, "custom_env_mak": 393, "custom_env": 393, "return_transformed_env": 393, "action_dim_gsd": 393, "state_dim_gsd": 393, "obs_norm_state_dict": 393, "wheter": 393, "maker": [393, 403], "asyncdatacollector": 395, "distributedsyncdatacollector": 395, "submitit_delayed_launch": 395, "raycollector": 395, "rational": 395, "footnot": 395, "binarydiscretetensorspec": 395, "boundedtensorspec": 395, "discretetensorspec": 395, "lazystackedcompositespec": 395, "lazystackedtensorspec": 395, "multidiscretetensorspec": 395, "multionehotdiscretetensorspec": 395, "onehotdiscretetensorspec": 395, "unboundedcontinuoustensorspec": 395, "unboundeddiscretetensorspec": 395, "binarytodecim": 395, "tensordictmap": 395, "prompttensordicttoken": 395, "rolloutfrommodel": 395, "tokenizeddatasetload": 395, "create_infinite_iter": 395, "constantklcontrol": 395, "adaptiveklcontrol": 395, "consolidate_spec": 395, "check_no_exclusive_kei": 395, "contains_lazy_spec": 395, "nested2t": 395, "h5combin": 395, "h5split": 395, "tictactoeenv": 395, "check_marl_group": 395, "get_available_librari": 395, "terminated_or_trunc": 395, "dreamerdecod": 395, "braxwrapp": 395, "dmcontrolwrapp": 395, "jumanjienv": 395, "jumanjiwrapp": 395, "meltingpotenv": 395, "meltingpotwrapp": 395, "mogymenv": 395, "mogymwrapp": 395, "multithreadedenvwrapp": 395, "openmlenv": 395, "openspielwrapp": 395, "openspielenv": 395, "pettingzooenv": [395, 414], "robohiveenv": 395, "smacv2env": 395, "smacv2wrapp": 395, "unitymlagentsenv": 395, "unitymlagentswrapp": 395, "vmaswrapp": 395, "qvaluehook": 395, "distributionalqvaluehook": 395, "reset_nois": 395, "cemplann": 395, "mpcplannerbas": 395, "mppiplann": 395, "independentnorm": 395, "normalparamwrapp": 395, "truncatednorm": 395, "maskedonehotcategor": 395, "onehotordin": 395, "inv_softplu": 395, "vmapmodul": 395, "distributionaldqnloss": [395, 403], "discretesacloss": 395, "crossqloss": 395, "iqlloss": 395, "discreteiqlloss": 395, "cqlloss": 395, "discretecqlloss": 395, "gailloss": 395, "dtloss": 395, "onlinedtloss": 395, "td3bcloss": 395, "ppoloss": 395, "a2closs": 395, "reinforceloss": 395, "dreameractorloss": 395, "dreamermodelloss": 395, "dreamervalueloss": 395, "td0estim": [395, 402], "td1estim": [395, 402], "td0_return_estim": 395, "td0_advantage_estim": 395, "td1_return_estim": 395, "vec_td1_return_estim": 395, "td1_advantage_estim": 395, "vec_td1_advantage_estim": 395, "td_lambda_return_estim": 395, "vec_td_lambda_return_estim": 395, "td_lambda_advantage_estim": 395, "vec_td_lambda_advantage_estim": 395, "generalized_advantage_estim": 395, "vec_generalized_advantage_estim": 395, "reward2go": 395, "distance_loss": [395, 402], "hold_out_net": 395, "hold_out_param": [395, 402], "softupd": [395, 402, 403, 405, 408, 411, 414], "hardupd": [395, 402, 408], "batchsubsampl": [395, 399], "clearcudacach": 395, "countframeslog": 395, "logreward": [395, 399, 403], "optimizerhook": [395, 403], "replaybuffertrain": [395, 399, 403], "rewardnorm": 395, "selectkei": [395, 399], "trainerhookbas": [395, 399, 403], "updateweight": [395, 399, 403], "make_collector_offpolici": 395, "make_collector_onpolici": 395, "make_dqn_loss": 395, "make_replay_buff": [395, 402], "make_target_updat": 395, "parallel_env_constructor": [395, 402], "sync_async_collector": 395, "sync_sync_collector": 395, "correct_for_frame_skip": 395, "get_stats_random_rollout": 395, "mlflowlogg": 395, "get_logg": 395, "generate_exp_nam": 395, "journei": 396, "textbook": 396, "highlight": [396, 414], "ever": [396, 415], "bump": 396, "think": [396, 404, 414, 415, 421], "benefit": [396, 406, 414, 415, 418], "pr": 396, "ground": [397, 402, 416], "recycl": [397, 418], "noisier": 397, "Their": [397, 414, 415], "consistentdropoutmodul": 397, "sd": 397, "prob_modul": 397, "pick": [397, 402, 403, 407], "hopefulli": [397, 403], "functional_modul": 397, "make_funct": 397, "mathbb": [397, 403], "rightarrow": [397, 403], "soften": 397, "backbon": [397, 405, 407, 413, 420], "make_actor": 397, "make_valu": 397, "shared_param": 397, "make_common": 397, "reusabl": [398, 402, 418], "swappabl": [398, 402], "characterist": [398, 402, 416], "trainabl": [398, 402, 408, 417], "smth": [398, 402], "metric": [398, 402], "plenti": 398, "amort": [398, 403, 404], "told": [398, 404], "pseudo": [398, 409, 416], "buri": 398, "str_valu": 398, "nutshel": [398, 402], "barto": [398, 414, 415], "chapter": [398, 410], "significantli": [398, 402, 403, 408, 415], "next_stat": 398, "value_net_loss": 398, "pow": [398, 402], "room": 398, "signifi": [398, 414, 415], "underperform": 398, "thin": 398, "intric": [398, 407], "believ": 399, "scheme": [399, 421], "substenti": 399, "_pre_steps_log_hook": 399, "_pre_optim_hook": 399, "sub_batch": 399, "_post_loss_hook": 399, "_post_optim_hook": 399, "post_optim": [399, 403], "_post_optim_log": 399, "post_optim_log": 399, "_post_steps_hook": 399, "_post_steps_log_hook": 399, "post_steps_log": 399, "reserv": 399, "logginghook": 399, "logging_hook": 399, "save_dict": 399, "some_valu": 399, "torchsnapshot": 399, "ckpt_backend": 399, "filepath": 399, "save_train": 399, "load_from_fil": 399, "52": [401, 403, 416, 417, 419], "953": [401, 419], "galleri": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "mem": [401, 419], "mb": [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421], "torchrl_env": [401, 419, 421], "482": [401, 404, 416, 419, 421], "4890": [401, 419], "dqn_with_rnn": [401, 405, 419], "692": [401, 405, 416, 419], "2192": [401, 405, 419], "rb_tutori": [401, 418, 419], "55": [401, 403, 415, 416, 418, 419], "570": [401, 404, 416, 418, 419], "529": [401, 416, 418, 419], "49": [401, 402, 403, 415, 416, 417, 419], "796": [401, 416, 419], "coding_dqn": [401, 403, 419], "040": [401, 403, 419], "1264": [401, 403, 419], "coding_ddpg": [401, 402, 419], "51": [401, 402, 403, 415, 416, 419, 420], "810": [401, 402, 419], "330": [401, 416, 419], "multiagent_ppo": [401, 415, 419], "592": [401, 415, 416, 419], "torchrl_demo": [401, 419, 420], "948": [401, 419, 420], "5373": [401, 419], "multiagent_competitive_ddpg": [401, 414, 419], "649": [401, 414, 419], "325": [401, 411, 416, 419], "coding_ppo": [401, 404, 419], "25": [401, 402, 403, 404, 405, 414, 416, 417, 419], "321": [401, 404, 406, 407, 408, 416, 419], "pretrained_model": [401, 417, 419], "53": [401, 403, 416, 417, 418, 419], "159": [401, 416, 417, 419], "4415": [401, 417, 419], "multi_task": [401, 413, 419], "965": [401, 413, 419], "263": [401, 406, 416, 419], "214": [401, 402, 407, 416, 419], "805": [401, 408, 419], "730": [401, 411, 419], "969": [401, 409, 419], "354": [401, 416, 419], "author": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 418, 421], "vincent": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 416, 418, 421], "moen": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 416, 418, 421], "assembl": 402, "focus": [402, 408], "straightforward": [402, 403, 406, 407, 408, 409, 418], "maxim": [402, 408, 416], "transpar": [402, 405], "illustr": [402, 403, 407, 418], "bash": 402, "is_fork": [402, 403, 404, 405, 414, 415, 417], "get_start_method": [402, 403, 404, 405, 414, 415, 417], "collector_devic": 402, "loss_dict": 402, "oblivi": [402, 404, 418], "elementari": 402, "didact": 402, "dilut": 402, "pessimist": [402, 403, 404], "target_actor_network_param": 402, "actor_in_kei": 402, "actor_crit": 402, "noth": [402, 404], "compromis": 402, "hp": 402, "_value_estim": 402, "elif": [402, 403], "notimplementederror": 402, "unknown": 402, "_loss_actor": 402, "td_copi": 402, "actor_network_param": [402, 414], "value_network_param": [402, 414], "_loss_valu": 402, "pred_val": 402, "target_value_network_param": 402, "glue": 402, "_forward": 402, "remaind": 402, "env_librari": 402, "env_task": 402, "env_arg": [402, 403], "friendli": 402, "torchr": 402, "rescal": 402, "presum": 402, "make_transformed_env": 402, "reward_sc": 402, "marker": 402, "env_per_collector": 402, "transform_state_dict": 402, "make_t_env": 402, "cheat": 402, "10m": 402, "cautiou": 402, "magnitud": [402, 414], "thousand": [402, 405], "get_env_stat": 402, "proof_env": 402, "5000": [402, 403, 404, 411], "recal": [402, 404, 418], "ddpgmlpactor": 402, "ddpgmlpqnet": 402, "materi": 402, "ornsteinuhlenbeckprocessmodul": [402, 407], "make_ddpg_actor": 402, "q_net": 402, "tight": 402, "decoupl": [402, 408], "10_000": [402, 404], "traj_len": [402, 405], "make_record": 402, "recorder_obj": 402, "buffer_s": [402, 403], "random_crop_len": 402, "prb": 402, "buffer_scratch_dir": 402, "temporari": 402, "dataflow": 402, "ceil_div": 402, "utd": [402, 405], "update_to_data": 402, "realiz": 402, "_must_": 402, "001": [402, 416], "outdat": 402, "trick": [402, 403], "despit": 402, "optimizer_actor": 402, "weight_decai": [402, 403], "optimizer_valu": 402, "total_collection_step": 402, "pretti": [402, 406, 410, 418], "rewards_ev": 402, "collected_fram": 402, "r0": 402, "numel": [402, 404, 405, 411, 414, 417, 418], "current_fram": [402, 414], "sampled_tensordict": 402, "gn1": 402, "clip_grad_norm_": [402, 404, 414, 415, 416], "gn2": 402, "gn": [402, 416], "td_record": 402, "rn": 402, "set_descript": [402, 404, 405, 414, 415, 416], "2f": 402, "800": [402, 403], "2918": 402, "12it": [402, 403], "1600": [402, 403], "09": [402, 403, 416], "880": 402, "79it": [402, 403], "2400": [402, 403], "1271": 402, "17it": [402, 403], "3200": [402, 403], "1612": 402, "87it": [402, 403], "1891": 402, "62it": [402, 403, 416], "48": [402, 403, 415, 416, 417], "4800": [402, 403, 416], "2113": 402, "27it": 402, "56": [402, 403, 416], "5600": 402, "2278": 402, "53it": [402, 403, 416], "77": [402, 403, 416, 417], "72": [402, 403, 416, 417, 418], "79": [402, 403, 416, 418], "377": [402, 416], "96": [402, 403, 414, 416, 417], "6400": 402, "886": 402, "50it": [402, 403, 416], "69": [402, 403, 416, 417], "207": [402, 416], "85": [402, 403, 416, 417], "266": [402, 416], "45": [402, 403, 405, 416], "63": [402, 403, 416], "7200": 402, "07": [402, 403, 416], "621": [402, 416], "28it": [402, 403, 404], "208": [402, 416], "89": [402, 403, 416, 417], "432": [402, 416], "516": [402, 416], "18it": [402, 403], "43": [402, 403, 405, 415, 416, 417], "104": [402, 416, 418], "290": [402, 416], "8800": 402, "461": [402, 416], "57it": [402, 416], "47": [402, 403, 415, 416], "182": [402, 416, 418], "60": [402, 403, 404, 414, 415, 416, 420], "83": [402, 403, 416, 417], "74": [402, 403, 414, 416, 417], "73": [402, 403, 416], "9600": 402, "367": [402, 416], "44it": [402, 403, 416], "61": [402, 403, 416, 417, 418], "161": [402, 416], "62": [402, 403, 416], "10400it": 402, "337": [402, 416], "03it": [402, 403, 404], "82": [402, 403, 416, 417], "115": [402, 416], "187": [402, 416, 420], "97": [402, 403, 416], "plot": [402, 404, 405, 414, 415, 416], "mention": [402, 405, 418, 421], "matplotlib": [402, 404, 405, 414, 415, 416, 418, 421], "pyplot": [402, 404, 405, 414, 415, 416, 418, 421], "plt": [402, 404, 405, 414, 415, 416, 418, 421], "zip": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "legend": [402, 414], "xlabel": [402, 405, 415, 416], "ylabel": [402, 415], "tight_layout": 402, "takeawai": [402, 403], "distpatch": 402, "331": [402, 416], "jupyt": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "ipynb": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421], "sphinx": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421], "road": 403, "aspect": [403, 408], "highest": [403, 407], "prerequisit": [403, 405], "lookup": 403, "cart": 403, "pole": 403, "un": 403, "actuat": 403, "frictionless": 403, "duelingcnndqnet": 403, "egreedymodul": [403, 405, 407, 411], "is_notebook": 403, "shell": 403, "get_ipython": 403, "__class__": 403, "zmqinteractiveshel": 403, "qtconsol": 403, "terminalinteractiveshel": 403, "ipython": [403, 415, 416], "nameerror": [403, 414], "umbrella": 403, "misplac": 403, "misus": 403, "orchestr": [403, 408, 410], "five": 403, "64x64": 403, "motion": [403, 416], "obs_norm_sd": 403, "mp_context": 403, "simpler": [403, 406], "get_norm_stat": 403, "test_env": 403, "make_model": 403, "dummy_env": 403, "init_bia": 403, "exploration_modul": [403, 405, 407, 411], "eps_greedy_v": 403, "eps_greedy_val_env": 403, "actor_explor": 403, "get_replay_buff": 403, "n_optim": [403, 408, 409], "themselv": 403, "parametriz": 403, "get_collector": 403, "cl": 403, "bunch": 403, "ubiquit": [403, 406], "get_loss_modul": 403, "target_updat": [403, 414], "995": [403, 416], "variat": 403, "2e": [403, 416], "wd": 403, "upd": 403, "harder": [403, 420], "5_000": 403, "500000": 403, "100000": 403, "005": [403, 414], "mandatori": [403, 404, 415, 416], "fairer": 403, "budget": 403, "dqn_exp_": 403, "uuid1": [403, 421], "9895": 403, "0737": 403, "registr": 403, "cumbersom": 403, "buffer_hook": 403, "weight_updat": 403, "aliv": 403, "total_reward": 403, "04it": 403, "3991": 403, "9259": 403, "58": [403, 414, 416], "4082": [403, 416], "3444": 403, "3688": [403, 416], "52it": [403, 416], "45it": 403, "3657": [403, 416], "224": [403, 416], "3172": 403, "3566": 403, "288": [403, 416], "65": [403, 416, 417], "90it": [403, 416], "02it": 403, "3869": 403, "352": [403, 416], "59": [403, 416], "64it": [403, 416], "3445": 403, "384": [403, 416], "57": [403, 416, 417], "46it": 403, "416": [403, 416], "34it": [403, 416], "448": [403, 416], "3353": [403, 416], "480": [403, 416, 417], "26it": [403, 404], "3535": 403, "74it": [403, 416], "544": [403, 416], "576": [403, 416], "20it": 403, "608": [403, 416], "39it": [403, 416], "640": 403, "90": [403, 404, 414, 415, 416, 417], "14it": [403, 404, 416], "3718": 403, "672": 403, "05it": [403, 405], "704": 403, "94it": [403, 416], "736": 403, "49it": [403, 416], "768": 403, "92it": [403, 416], "832": 403, "72it": [403, 416], "3778": 403, "864": 403, "86it": 403, "3475": 403, "896": 403, "91": [403, 416], "4295": [403, 416], "928": 403, "71it": [403, 416], "960": 403, "22it": 403, "4021": 403, "992": [403, 416], "68it": [403, 416], "76it": [403, 416], "1056": 403, "30it": [403, 404, 416], "4173": 403, "1088": 403, "77it": [403, 416], "92": [403, 416, 417], "55it": 403, "1152": 403, "88it": 403, "1184": 403, "13it": 403, "1216": 403, "1248": 403, "00it": 403, "1280": 403, "1344": 403, "93": [403, 416, 417], "1376": 403, "1408": 403, "41it": [403, 416], "1440": 403, "07it": 403, "1472": 403, "95it": [403, 404], "1504": 403, "1536": 403, "25it": [403, 404], "1568": 403, "19it": [403, 416], "1632": 403, "63it": [403, 416], "59it": [403, 416], "1696": 403, "37it": [403, 416], "1728": 403, "58it": 403, "1760": 403, "1792": 403, "98it": [403, 416], "1824": 403, "1856": 403, "91it": 403, "1888": 403, "1920": 403, "65it": [403, 416], "1952": 403, "1984": 403, "2016": 403, "67it": [403, 416], "2080": 403, "2112": [403, 416], "2144": 403, "2176": 403, "2208": 403, "75it": [403, 416], "2240": 403, "2272": 403, "54it": 403, "2336": 403, "2368": 403, "93it": 403, "2432": 403, "2464": 403, "2496": 403, "23it": 403, "2528": [403, 416], "60it": [403, 416], "2560": 403, "2624": 403, "2656": [403, 416], "54": [403, 415, 416, 417], "2688": 403, "01it": 403, "2720": [403, 416], "96it": 403, "2752": 403, "36it": 403, "2784": 403, "2816": 403, "2848": 403, "2880": 403, "2912": 403, "2944": [403, 416], "2976": [403, 416], "3040": 403, "3072": 403, "3104": 403, "3136": 403, "3168": 403, "33it": [403, 416], "3232": [403, 416], "32it": 403, "6667": 403, "3264": 403, "80it": 403, "66": [403, 416, 417, 418], "3296": 403, "67": [403, 413, 416], "3328": 403, "3360": 403, "68": [403, 416], "3392": 403, "66it": [403, 416], "3424": 403, "3456": [403, 416], "70": [403, 404, 414, 415, 416, 417], "3488": 403, "3520": 403, "71": [403, 416], "3552": 403, "3584": 403, "3616": 403, "3648": 403, "3680": 403, "3712": 403, "81it": 403, "3744": 403, "76": [403, 416], "3776": 403, "3808": 403, "3840": 403, "3872": 403, "06it": 403, "78": [403, 416, 417, 418], "3904": 403, "43it": 403, "3936": 403, "61it": [403, 416], "3968": 403, "78it": [403, 416], "4032": 403, "4064": 403, "08it": 403, "4096": 403, "4128": [403, 416], "4160": 403, "4192": 403, "4224": 403, "4256": [403, 416], "4288": [403, 416], "4320": 403, "4352": 403, "4384": 403, "4416": 403, "4448": 403, "47it": [403, 416], "4480": 403, "38it": 403, "4512": 403, "4544": 403, "4576": 403, "4608": 403, "4640": 403, "4704": 403, "4736": 403, "4768": 403, "84it": [403, 405], "4832": 403, "4864": 403, "4896": 403, "4928": 403, "4960": 403, "4992": 403, "5024it": 403, "print_csv_files_in_fold": 403, "folder_path": 403, "csv_file": 403, "output_str": 403, "dirpath": 403, "endswith": 403, "strip": 403, "tmp": [403, 418], "tmpth7qfbqo": 403, "dqn_exp_6f80772a": 403, "95f6": 403, "11ef": [403, 421], "b72e": [403, 421], "0242ac110002": [403, 421], "3171951472759247": 403, "39912933111190796": 403, "36880597472190857": 403, "40213119983673096": 403, "42945271730422974": 403, "3037633001804352": 403, "17112766206264496": 403, "1603367030620575": 403, "22013020515441895": 403, "2943096160888672": 403, "2690333425998688": 403, "23378317058086395": 403, "29923030734062195": 403, "2921545207500458": 403, "grad_norm_0": 403, "1862595081329346": 403, "5882649421691895": 403, "7796403169631958": 403, "6038806438446045": 403, "8670899868011475": 403, "198943614959717": 403, "0508410930633545": 403, "547001361846924": 403, "2963216304779053": 403, "10000000894069672": 403, "666666507720947": 403, "qvaluenetwork": 403, "worst": 403, "accuraci": 403, "fanci": [403, 409], "talk": 404, "repetit": [404, 406, 409], "six": 404, "sophist": [404, 415], "invent": 404, "overview": [404, 408, 414, 415, 420], "theta_k": 404, "pi_": 404, "exceed": 404, "discourag": [404, 416], "indispens": 404, "analyz": 404, "lingua": 404, "franca": 404, "defaultdict": [404, 416], "3e": [404, 405, 414, 415], "max_grad_norm": [404, 414, 415], "sub_batch_s": 404, "num_epoch": [404, 415], "entropy_ep": [404, 415], "charact": 404, "inverteddoublependulum": 404, "transmit": 404, "stai": 404, "confid": [404, 414, 415], "ran": 404, "f_": 404, "mu_": 404, "difficulti": [404, 421], "d_ob": 404, "d_action": 404, "policy_modul": [404, 414, 415], "briefli": [404, 414, 415], "refil": [404, 415], "easiest": [404, 408, 414, 415], "mathemat": [404, 414, 415], "tradeoff": [404, 415], "advantage_modul": 404, "lr_schedul": [404, 416], "cosineannealinglr": [404, 416], "eval_str": 404, "tensordict_data": [404, 415], "data_view": [404, 415], "subdata": [404, 414, 415], "cum_reward_str": 404, "4f": [404, 405, 416], "stepcount_str": 404, "param_group": [404, 414], "lr_str": 404, "eval_rollout": 404, "nice": [404, 406, 409], "477": [404, 416], "231": [404, 416, 420], "9353": 404, "0862": 404, "0003": [404, 416], "476": [404, 416], "1206": 404, "3000": 404, "1548": [404, 416], "479": [404, 416], "82it": 404, "1764": 404, "0002": [404, 416], "42it": 404, "2086": 404, "484": [404, 416], "2150": [404, 416], "7000": 404, "487": [404, 416], "2210": 404, "474": [404, 416], "2469": 404, "9000": 404, "85it": 404, "2430": 404, "481": [404, 416], "2565": 404, "cap": [404, 418], "figsiz": [404, 416], "subplot": [404, 414, 416, 421], "titl": [404, 405, 415, 416], "84x84": 405, "accessori": 405, "stamp": 405, "assist": 405, "n_cell": 405, "customiz": 405, "wouldn": 405, "qval": 405, "stoch_polici": 405, "opportun": [405, 414], "uniniti": 405, "again": [405, 406, 407, 409, 415, 417, 418, 421], "redund": 405, "strongli": 405, "sake": [405, 417, 418], "20_000": [405, 416], "longest": 405, "npai": 405, "action_spread": 405, "137": [405, 416], "35it": [405, 416], "0006": [405, 416], "70it": [405, 416], "150": [405, 416], "0007": [405, 416], "topic": [406, 407, 408], "straight": 406, "backtrack": 406, "encapsul": [406, 407, 408], "reset_with_act": 406, "4981": [406, 416], "tp": 406, "stepped_data": 406, "spatial": 406, "useless": 406, "policyless": 406, "appreci": 406, "monitor": 406, "examin": [406, 414], "tackl": 407, "delv": 407, "bypass": 407, "extractor": 407, "palliat": 407, "additivegaussianmodul": [407, 414], "had": [407, 409], "exploration_polici": [407, 414], "greedili": 407, "2d": [407, 414, 415], "innov": [407, 408], "rollout_explor": 407, "sole": 408, "tradit": [408, 414], "supervis": [408, 409, 418, 421], "n_collect": 408, "get_next_batch": 408, "ddpg_loss": 408, "total_loss": 408, "prove": 408, "reliev": 408, "concern": 408, "accustom": 409, "surprisingli": 409, "fundament": 409, "art": [409, 414, 415], "multirpocess": 409, "countless": 409, "yourself": [409, 414, 415], "323": [409, 415, 416], "lightweight": 410, "portabl": 410, "everywher": 410, "log_scalar": 410, "elaps": 410, "my_scalar": 410, "saw": [410, 416, 418], "excess": 410, "355": [410, 416], "lesson": 411, "voluntarili": 411, "value_mlp": 411, "100_000": 411, "init_rand_step": 411, "training_loop": 411, "video_record": 411, "arbitrarili": 411, "total_count": 411, "total_episod": 411, "t0": 411, "t1": 411, "conclud": [411, 417], "tutorials_python": 412, "tutorials_jupyt": 412, "env1_obs_kei": 413, "observation_stand": 413, "env2_obs_kei": 413, "observation_walk": 413, "tdreset1": 413, "tdreset2": 413, "lazy_stack": 413, "policy_common": 413, "policy_stand": 413, "policy_walk": 413, "But": 413, "env1_mak": 413, "env2_mak": 413, "_single_task": 413, "td_rollout": 413, "matteo": [414, 415], "bettini": [414, 415], "benchmarl": [414, 415], "simple_tag": 414, "maddpg": [414, 415], "multiagentparticleenviron": 414, "mpe": 414, "centralis": [414, 415], "tie": [414, 415], "iddpg": [414, 415], "typical": 414, "richard": 414, "andrew": 414, "mit": 414, "press": 414, "2018": 414, "mathbf": [414, 415], "pi": [414, 415, 416], "decentralis": [414, 415], "literatur": [414, 415], "overcom": [414, 415], "stationari": [414, 415], "concurr": [414, 415], "establish": 414, "gui": [414, 415], "is_sphinx": 414, "__sphinx_build__": 414, "n_iter": [414, 415], "evad": 414, "iteration_when_stop_training_evad": 414, "memory_s": 414, "n_optimiser_step": 414, "train_batch_s": 414, "polyak_tau": 414, "chaser": 414, "red": 414, "circl": [414, 415], "touch": [414, 416], "penal": [414, 415], "acceler": [414, 415], "obstacl": 414, "drag": [414, 415], "elast": [414, 415], "collis": [414, 415], "imped": 414, "n_chaser": 414, "n_evad": 414, "n_obstacl": 414, "use_vma": 414, "simple_tag_v3": 414, "num_good": 414, "num_adversari": 414, "num_obstacl": 414, "max_cycl": 414, "num_vmas_env": [414, 415], "num_good_ag": 414, "num_landmark": 414, "adversary_1": 414, "four": [414, 415, 416], "n_agents_in_that_group": 414, "stress": [414, 415], "paramount": [414, 415], "n_rollout_step": [414, 415], "evolut": [414, 415], "group_nam": 414, "n_agents_in_group": 414, "minor": 414, "agents_exploration_polici": 414, "utilis": [414, 415], "withing": 414, "n_obs_per_ag": [414, 415], "n_actions_per_ag": [414, 415], "share_parameters_polici": [414, 415], "policy_net": [414, 415], "_agent": 414, "grant": [414, 415], "converg": [414, 415], "share_parameters_crit": [414, 415], "obs_act": 414, "cat_modul": 414, "critic_modul": 414, "fantast": [414, 415], "reset_td": 414, "interfer": 414, "subject": [414, 416], "flatten_kei": 414, "process_batch": 414, "group_shap": 414, "get_item_shap": [414, 415], "nested_done_kei": 414, "nested_terminated_kei": 414, "desc": [414, 415], "episode_reward_mean_": 414, "episode_reward_mean_map": 414, "train_group_map": 414, "group_batch": 414, "_group": 414, "loss_nam": 414, "episode_reward_mean": [414, 415], "episode_reward_mean_adversari": 414, "episode_reward_mean_ag": 414, "proce": 414, "screen": 414, "fig": 414, "set_ylabel": 414, "axvlin": 414, "color": 414, "orang": 414, "set_xlabel": 414, "video_logg": 414, "vmas_log": 414, "env_with_rend": 414, "vmas_rend": 414, "print_log_dir": 414, "profici": [414, 415], "326": [414, 416], "lidar": 415, "sensor": 415, "mappo": 415, "ippo": 415, "analys": 415, "visualis": 415, "vmas_devic": 415, "6_000": 415, "minibatch_s": 415, "generalis": 415, "simd": 415, "warp": 415, "todai": 415, "surround": 415, "dot": [415, 416], "collid": 415, "scenario_nam": 415, "final_rew": 415, "agent_collis": 415, "critic_net": 415, "minibatch": 415, "episode_reward_mean_list": 415, "critic_network_param": 415, "target_critic_network_param": 415, "4579917788505554": 415, "23260341584682465": 415, "1713813543319702": 415, "386345624923706": 415, "8939578533172607": 415, "2214083671569824": 415, "1770293712615967": 415, "6274709701538086": 415, "73148250579834": 415, "737316608428955": 415, "xvfb": 415, "pyvirtualdisplai": 415, "1400": [415, 416], "900": 415, "pil": 415, "rendering_callback": 415, "fromarrai": 415, "gif": 415, "save_al": 415, "append_imag": 415, "freeli": 416, "undertaken": 416, "broader": 416, "wider": 416, "algebra": 416, "acquaint": 416, "avenu": 416, "_apply_to_composit": 416, "default_x": 416, "default_i": 416, "upward": 416, "angular": 416, "sin": 416, "rad": 416, "sec": 416, "angl": 416, "deleg": 416, "new_th": 416, "new_thdot": 416, "g_forc": 416, "angle_norm": 416, "albeit": 416, "high_th": 416, "high_thdot": 416, "low_th": 416, "low_thdot": 416, "trivial": 416, "irrelev": 416, "_make_spec": 416, "td_param": 416, "render_fp": 416, "random_": 416, "_make_step": 416, "staticmethod": 416, "showcas": 416, "skeleton": 416, "_apply_transform": [416, 421], "_inv_apply_transform": [416, 421], "subset": [416, 417], "sine": 416, "cosin": 416, "sintransform": 416, "costransform": 416, "t_sin": 416, "t_co": 416, "cat_transform": 416, "simple_rollout": 416, "unexplor": 416, "init_td": 416, "traj_return": 416, "last_reward": 416, "is_ipython": 416, "inlin": 416, "get_backend": 416, "ion": 416, "gcf": 416, "clear_output": 416, "625": 416, "0748": 416, "519": 416, "0499": 416, "4472": 416, "073": 416, "0685": 416, "0408": 416, "552": 416, "5154": 416, "9086": 416, "9385": 416, "155": 416, "69it": 416, "2568": 416, "223": 416, "8929": 416, "4491": 416, "581": 416, "3233": 416, "0664": 416, "596": 416, "1021": 416, "5263": 416, "9579": 416, "5807": 416, "8075": 416, "212": 416, "2009": 416, "5525": 416, "914": 416, "2894": 416, "0115": 416, "0977": 416, "1845": 416, "1830": 416, "4858": 416, "233": 416, "2863": 416, "0297": 416, "464": 416, "4617": 416, "5997": 416, "904": 416, "1647": 416, "0777": 416, "901": 416, "73it": 416, "4709": 416, "6813": 416, "8317": 416, "3221": 416, "5554": 416, "276": 416, "701": 416, "8570": 416, "6656": 416, "463": 416, "7779": 416, "6911": 416, "875": 416, "0796": 416, "7082": 416, "308": [416, 420], "0421": 416, "1496": 416, "5037": 416, "1755": 416, "5029": 416, "9454": 416, "665": 416, "9330": 416, "2118": 416, "444": 416, "0995": 416, "6294": 416, "3146": 416, "2909": 416, "9720": 416, "1298": 416, "9923": 416, "0345": 416, "3438": 416, "424": [416, 420], "6953": 416, "5233": 416, "411": 416, "8011": 416, "5329": 416, "2677": 416, "6969": 416, "7010": 416, "376": 416, "9352": 416, "7707": 416, "6178": 416, "5646": 416, "348": 416, "7304": 416, "9407": 416, "942": 416, "3882": 416, "7604": 416, "3507": 416, "8928": 416, "258": 416, "6978": 416, "4641": 416, "549": 416, "6047": 416, "5005": 416, "4136": 416, "2993": 416, "3222": 416, "4046": 416, "7314": 416, "275": 416, "6331": 416, "9318": 416, "961": 416, "8331": 416, "1604": 416, "4099": 416, "4761": 416, "125": 416, "4262": 416, "6363": 416, "382": 416, "3593": 416, "7377": 416, "2847": 416, "3443": 416, "867": 416, "3592": 416, "4760": 416, "441": 416, "9950": 416, "8021": 416, "3528": 416, "1214": 416, "708": 416, "4023": 416, "3583": 416, "041": 416, "3801": 416, "0310": 416, "120": 416, "4244": 416, "2039": 416, "4850": 416, "8748": 416, "706": 416, "4897": 416, "9210": 416, "8964": 416, "0832": 416, "3934": 416, "456": 416, "8971": 416, "2933": 416, "3377": 416, "6996": 416, "2274": 416, "8916": 416, "098": 416, "2660": 416, "9110": 416, "4503": 416, "6956": 416, "9172": 416, "4026": 416, "946": 416, "9229": 416, "5205": 416, "294": 416, "8872": 416, "6637": 416, "019": 416, "9281": 416, "2082": 416, "724": 416, "8561": 416, "6574": 416, "357": 416, "4138": 416, "5230": 416, "385": [416, 420], "4065": 416, "5642": 416, "921": 416, "9786": 416, "4129": 416, "5831": 416, "7723": 416, "4152": 416, "0898": 416, "389": 416, "5155": 416, "5376": 416, "5616": 416, "4094": 416, "283": 416, "5333": 416, "4803": 416, "895": 416, "6566": 416, "2588": 416, "662": 416, "4732": 416, "7503": 416, "068": 416, "0714": 416, "3370": 416, "059": 416, "8612": 416, "1915": 416, "3855": 416, "0349": 416, "9644": 416, "4538": 416, "445": 416, "0392": 416, "4080": 416, "1648": 416, "9599": 416, "143": 416, "4284": 416, "5946": 416, "2590": 416, "9181": 416, "4621": 416, "9075": 416, "1772": 416, "9444": 416, "351": 416, "9391": 416, "5595": 416, "8673": 416, "6240": 416, "5919": 416, "1071": 416, "9127": 416, "251": 416, "9799": 416, "3131": 416, "9612": 416, "9705": 416, "8741": 416, "2230": 416, "0972": 416, "0337": 416, "0350": 416, "0654": 416, "2441": 416, "4596": 416, "362": 416, "103": 416, "4362": 416, "171": 416, "4041": 416, "6907": 416, "105": 416, "4664": 416, "2760": 416, "0299": 416, "9712": 416, "349": 416, "107": 416, "3332": 416, "4479": 416, "772": 416, "108": 416, "4357": 416, "9591": 416, "543": 416, "109": 416, "6216": 416, "1353": 416, "110": 416, "6261": 416, "7086": 416, "496": 416, "111": 416, "7758": 416, "9818": 416, "7772": 416, "5055": 416, "113": 416, "5840": 416, "3180": 416, "2083": 416, "5275": 416, "6873": 416, "116": 416, "4107": 416, "1624": 416, "117": 416, "6372": 416, "2571": 416, "118": 416, "4039": 416, "4428": 416, "119": [416, 418], "4728": 416, "5628": 416, "6767": 416, "2466": 416, "522": 416, "121": [416, 421], "5873": 416, "5072": 416, "6548": 416, "3766": 416, "123": 416, "5134": 416, "1955": 416, "124": [416, 418], "2481": 416, "0591": 416, "4500": 416, "3368": 416, "126": 416, "9708": 416, "7059": 416, "127": 416, "3031": 416, "2534": 416, "843": 416, "3327": 416, "6193": 416, "129": 416, "4831": 416, "1172": 416, "2593": 416, "4219": 416, "962": 416, "8380": 416, "899": 416, "132": 416, "2721": 416, "9048": 416, "166": [416, 418], "133": 416, "2419": 416, "5248": 416, "2139": 416, "4278": 416, "135": 416, "0690": 416, "5140": 416, "136": 416, "1140": 416, "7402": 416, "5356": 416, "1636": 416, "138": 416, "0671": 416, "8798": 416, "139": [416, 418], "8918": 416, "3298": 416, "307": 416, "140": 416, "1779": 416, "141": 416, "1771": 416, "3624": 416, "936": 416, "142": [416, 418], "1683": 416, "4810": 416, "9373": 416, "4435": 416, "4396": 416, "8092": 416, "145": 416, "2572": 416, "146": 416, "4212": 416, "0260": 416, "147": 416, "0939": 416, "6478": 416, "605": 416, "148": 416, "6606": 416, "7289": 416, "149": 416, "9300": 416, "7193": 416, "563": 416, "1166": 416, "8514": 416, "151": 416, "9108": 416, "0672": 416, "292": 416, "152": 416, "8591": 416, "3768": 416, "153": 416, "9976": 416, "154": 416, "0576": 416, "0067": 416, "935": 416, "4199": 416, "1722": 416, "156": 416, "8310": 416, "3466": 416, "157": 416, "8631": 416, "2492": 416, "8763": 416, "1277": 416, "5562": 416, "7446": 416, "1082": 416, "9830": 416, "0946": 416, "5229": 416, "162": 416, "4574": 416, "6900": 416, "163": [416, 417], "2229": 416, "0318": 416, "164": 416, "0543": 416, "0817": 416, "761": 416, "165": 416, "2809": 416, "5118": 416, "366": 416, "1142": 416, "5635": 416, "167": 416, "1949": 416, "2327": 416, "982": 416, "168": 416, "0967": 416, "0387": 416, "457": 416, "169": 416, "0782": 416, "170": 416, "5222": 416, "3725": 416, "9288": 416, "9837": 416, "1416": 416, "1099": 416, "173": 416, "8620": 416, "8475": 416, "174": [416, 420], "1807": 416, "4375": 416, "175": 416, "1148": 416, "0645": 416, "2751": 416, "8313": 416, "177": 416, "9286": 416, "9770": 416, "178": 416, "5735": 416, "2837": 416, "179": 416, "2926": 416, "9489": 416, "180": 416, "1507": 416, "181": 416, "8724": 416, "3567": 416, "3574": 416, "6140": 416, "183": 416, "7895": 416, "2518": 416, "184": 416, "6146": 416, "185": 416, "8776": 416, "7358": 416, "186": [416, 420], "3722": 416, "8428": 416, "7955": 416, "188": 416, "0092": 416, "7106": 416, "829": 416, "189": 416, "2264": 416, "6919": 416, "190": 416, "1438": 416, "1362": 416, "191": 416, "0618": 416, "8217": 416, "9420": 416, "6765": 416, "193": 416, "7745": 416, "0709": 416, "194": 416, "9478": 416, "6867": 416, "195": 416, "6507": 416, "6225": 416, "196": 416, "15it": 416, "2244": 416, "2195": 416, "197": 416, "29it": 416, "5385": 416, "9263": 416, "198": 416, "1878": 416, "2374": 416, "8054": 416, "3504": 416, "557": 416, "0766": 416, "201": 416, "2011": 416, "8393": 416, "202": [416, 418], "0803": 416, "7815": 416, "203": 416, "8363": 416, "2460": 416, "204": [416, 420], "8643": 416, "2191": 416, "593": 416, "205": 416, "0773": 416, "1343": 416, "206": 416, "8657": 416, "9304": 416, "7584": 416, "8752": 416, "2307": 416, "209": 416, "5250": 416, "4869": 416, "7837": 416, "5762": 416, "211": 416, "6661": 416, "8600": 416, "2502": 416, "1752": 416, "3075": 416, "8871": 416, "9406": 416, "8090": 416, "215": 416, "6291": 416, "8923": 416, "876": 416, "216": 416, "9504": 416, "21e": 416, "217": 416, "7431": 416, "7880": 416, "218": 416, "4463": 416, "5432": 416, "219": 416, "3793": 416, "3313": 416, "8843": 416, "0369": 416, "065": 416, "221": 416, "4828": 416, "8391": 416, "222": 416, "6265": 416, "2913": 416, "947": 416, "5541": 416, "1252": 416, "7342": 416, "2396": 416, "225": 416, "5936": 416, "1924": 416, "226": 416, "9975": 416, "2045": 416, "227": 416, "8367": 416, "9540": 416, "7259": 416, "6743": 416, "229": 416, "4827": 416, "7528": 416, "230": 416, "7361": 416, "8756": 416, "7646": 416, "1116": 416, "232": 416, "5426": 416, "8385": 416, "5662": 416, "8585": 416, "234": 416, "8234": 416, "7930": 416, "235": 416, "2648": 416, "9309": 416, "236": 416, "6817": 416, "237": 416, "0943": 416, "1533": 416, "238": 416, "3045": 416, "0483": 416, "239": 416, "6415": 416, "0201": 416, "241": 416, "4437": 416, "4365": 416, "242": 416, "0358": 416, "4943": 416, "243": 416, "1272": 416, "5003": 416, "1180": 416, "2637": 416, "245": 416, "7197": 416, "0873": 416, "246": 416, "2917": 416, "247": 416, "0160": 416, "0738": 416, "248": 416, "3689": 416, "0120": 416, "249": 416, "5570": 416, "0475": 416, "250": 416, "4423": 416, "2220": 416, "6803": 416, "252": 416, "1465": 416, "7214": 416, "253": 416, "8801": 416, "7034": 416, "254": 416, "9136": 416, "4076": 416, "7589": 416, "5013": 416, "8150": 416, "2241": 416, "257": 416, "0753": 416, "8081": 416, "1951": 416, "8314": 416, "259": 416, "0038": 416, "260": 416, "0889": 416, "4616": 416, "261": 416, "0655": 416, "262": 416, "8333": 416, "9476": 416, "7554": 416, "3798": 416, "264": 416, "3717": 416, "3947": 416, "265": 416, "3060": 416, "6495": 416, "7467": 416, "8889": 416, "267": 416, "8457": 416, "591": 416, "7137": 416, "0536": 416, "771": 416, "269": 416, "1651": 416, "388": 416, "270": 416, "8246": 416, "5709": 416, "281": 416, "271": 416, "7502": 416, "0521": 416, "032": 416, "272": 416, "5475": 416, "7253": 416, "273": 416, "2856": 416, "7130": 416, "274": 416, "2778": 416, "4122": 416, "8368": 416, "1841": 416, "9622": 416, "1603": 416, "003e": 416, "277": 416, "0247": 416, "346": 416, "278": 416, "2238": 416, "6418": 416, "279": 416, "0626": 416, "2538": 416, "280": 416, "0149": 416, "7380": 416, "2167": 416, "8911": 416, "282": 416, "8725": 416, "1983": 416, "8142": 416, "3709": 416, "284": 416, "4989": 416, "285": 416, "6464": 416, "6210": 416, "286": 416, "9726": 416, "0820": 416, "287": 416, "6975": 416, "9091": 416, "4926": 416, "4791": 416, "289": 416, "0905": 416, "3500": 416, "2287": 416, "291": 416, "9918": 416, "5543": 416, "9245": 416, "6444": 416, "631": 416, "293": 416, "0448": 416, "4769": 416, "8566": 416, "7208": 416, "295": 416, "0966": 416, "296": 416, "5303": 416, "1537": 416, "023": 416, "297": 416, "2682": 416, "564": 416, "298": 416, "4318": 416, "5063": 416, "299": 416, "7475": 416, "4190": 416, "8186": 416, "5077": 416, "301": 416, "1883": 416, "5291": 416, "472": 416, "302": 416, "3998": 416, "303": 416, "3622": 416, "0930": 416, "626": 416, "304": 416, "9500": 416, "5664": 416, "305": 416, "5697": 416, "3024": 416, "306": 416, "3117": 416, "0052": 416, "006": 416, "0981": 416, "9312": 416, "3873": 416, "309": 416, "0411": 416, "2650": 416, "1656": 416, "0228": 416, "004": 416, "311": 416, "1196": 416, "2478": 416, "312": 416, "7353": 416, "0812": 416, "313": 416, "3022": 416, "758": 416, "314": 416, "1406": 416, "4626": 416, "315": 416, "2156": 416, "851": 416, "316": 416, "1953": 416, "3774": 416, "317": 416, "6385": 416, "9917": 416, "318": 416, "2764": 416, "905": 416, "319": 416, "6391": 416, "9317": 416, "9748": 416, "2679": 416, "8495": 416, "5125": 416, "8177": 416, "6602": 416, "0704": 416, "5776": 416, "324": 416, "9833": 416, "1339": 416, "402": 416, "1238": 416, "9299": 416, "0227": 416, "327": 416, "7727": 416, "1607": 416, "336": 416, "328": 416, "3958": 416, "3223": 416, "763": 416, "329": [416, 420], "4742": 416, "1797": 416, "0144": 416, "0085": 416, "791": 416, "8284": 416, "0428": 416, "332": 416, "7365": 416, "333": 416, "4566": 416, "0781": 416, "086": 416, "334": 416, "3355": 416, "0230": 416, "335": 416, "9346": 416, "0423": 416, "076": 416, "3711": 416, "1335": 416, "6855": 416, "0304": 416, "0023": 416, "8459": 416, "338": 416, "9998": 416, "4399": 416, "339": 416, "2303": 416, "1346": 416, "340": 416, "2915": 416, "7116": 416, "341": 416, "5560": 416, "0487": 416, "342": 416, "5119": 416, "061": 416, "343": 416, "3305": 416, "3705": 416, "957": 416, "344": 416, "6068": 416, "345": 416, "5731": 416, "3897": 416, "0376": 416, "347": 416, "0434": 416, "012": 416, "1300": 416, "1215": 416, "0968": 416, "0885": 416, "350": 416, "1348": 416, "0073": 416, "5052": 416, "4184": 416, "2817": 416, "8887": 416, "353": 416, "4779": 416, "1009": 416, "0604": 416, "599": 416, "4486": 416, "1176": 416, "656": 416, "356": 416, "2436": 416, "0668": 416, "8849": 416, "0012": 416, "358": 416, "7511": 416, "8804": 416, "359": 416, "8870": 416, "6728": 416, "360": 416, "8841": 416, "5508": 416, "361": 416, "5242": 416, "0013": 416, "6185": 416, "363": 416, "1378": 416, "0204": 416, "364": 416, "0355": 416, "685": 416, "365": 416, "4884": 416, "0231": 416, "0014": 416, "6793": 416, "9834": 416, "863": 416, "368": 416, "6709": 416, "462": 416, "369": 416, "5199": 416, "9790": 416, "370": 416, "9401": 416, "7802": 416, "371": 416, "6723": 416, "372": 416, "2678": 416, "6201": 416, "373": 416, "2184": 416, "7385": 416, "374": 416, "6344": 416, "617": 416, "375": 416, "9945": 416, "0772": 416, "567": 416, "7576": 416, "0398": 416, "3396": 416, "0022": 416, "094": 416, "378": 416, "3073": 416, "4018": 416, "379": 416, "1869": 416, "380": 416, "0481": 416, "1117": 416, "381": 416, "6823": 416, "981": 416, "8305": 416, "0210": 416, "383": 416, "4908": 416, "0272": 416, "538": 416, "3267": 416, "0111": 416, "7965": 416, "1796": 416, "0039": 416, "5396": 416, "386": 416, "3757": 416, "0490": 416, "387": 416, "1394": 416, "4187": 416, "2986": 416, "7954": 416, "1274": 416, "0063": 416, "813": 416, "390": 416, "8706": 416, "0114": 416, "391": 416, "56it": 416, "6922": 416, "2423": 416, "392": 416, "9115": 416, "2602": 416, "393": 416, "2449": 416, "0783": 416, "394": 416, "0631": 416, "0057": 416, "7444": 416, "395": 416, "3339": 416, "0167": 416, "396": 416, "4806": 416, "397": 416, "4171": 416, "067": 416, "398": 416, "2618": 416, "5809": 416, "399": 416, "0054": 416, "3364": 416, "8733": 416, "0184": 416, "401": 416, "9137": 416, "0113": 416, "025": 416, "0386": 416, "0625": 416, "403": 416, "1332": 416, "0582": 416, "7816": 416, "404": 416, "8341": 416, "0941": 416, "854": 416, "405": 416, "8615": 416, "588": 416, "406": 416, "3849": 416, "008": 416, "407": 416, "9395": 416, "0765": 416, "055": 416, "408": 416, "2685": 416, "2235": 416, "688": 416, "409": 416, "3052": 416, "4249": 416, "410": 416, "6806": 416, "6383": 416, "3721": 416, "9981": 416, "412": 416, "1862": 416, "822": 416, "413": 416, "9811": 416, "0171": 416, "013": 416, "414": 416, "0252": 416, "0049": 416, "6205": 416, "415": 416, "1108": 416, "4921": 416, "9142": 416, "8130": 416, "417": 416, "1725": 416, "0036": 416, "3196": 416, "418": 416, "7795": 416, "0242": 416, "799": 416, "419": 416, "7737": 416, "0138": 416, "420": 416, "1462": 416, "0053": 416, "421": 416, "9226": 416, "6139": 416, "422": 416, "9889": 416, "0403": 416, "423": 416, "6194": 416, "0032": 416, "3989": 416, "0104": 416, "425": 416, "9960": 416, "0009": 416, "6009": 416, "426": 416, "2697": 416, "0914": 416, "427": 416, "1114": 416, "428": 416, "9862": 416, "1932": 416, "429": 416, "0637": 416, "0623": 416, "082": 416, "430": 416, "9906": 416, "2031": 416, "431": 416, "9948": 416, "0895": 416, "1970": 416, "0256": 416, "4231": 416, "0449": 416, "644": 416, "434": 416, "1039": 416, "1973": 416, "435": 416, "4561": 416, "1225": 416, "436": 416, "0211": 416, "2125": 416, "437": 416, "3866": 416, "0050": 416, "7202": 416, "438": 416, "6388": 416, "0072": 416, "439": 416, "1187": 416, "0015": 416, "5116": 416, "440": 416, "0432": 416, "0025": 416, "7809": 416, "1925": 416, "0103": 416, "442": 416, "9570": 416, "443": 416, "0871": 416, "5601": 416, "0165": 416, "0047": 416, "6061": 416, "2746": 416, "0027": 416, "7887": 416, "446": 416, "1835": 416, "0035": 416, "855": 416, "447": 416, "8420": 416, "548": 416, "2653": 416, "0126": 416, "9736": 416, "449": 416, "0594": 416, "0119": 416, "6196": 416, "450": 416, "4509": 416, "0373": 416, "451": 416, "0620": 416, "452": 416, "6898": 416, "3235": 416, "687": 416, "453": 416, "5879": 416, "454": 416, "8406": 416, "0694": 416, "455": 416, "8259": 416, "0235": 416, "8500": 416, "0024": 416, "4054": 416, "458": 416, "2027": 416, "0894": 416, "459": 416, "5966": 416, "460": 416, "6942": 416, "0016": 416, "4254": 416, "6703": 416, "0145": 416, "8124": 416, "0218": 416, "9196": 416, "0188": 416, "8986": 416, "0884": 416, "0084": 416, "5624": 416, "465": 416, "8862": 416, "5384": 416, "466": 416, "5837": 416, "467": 416, "8954": 416, "0101": 416, "6751": 416, "468": 416, "8063": 416, "0122": 416, "9635": 416, "469": 416, "0692": 416, "4216": 416, "470": 416, "1227": 416, "0586": 416, "162e": 416, "471": 416, "9690": 416, "4166": 416, "6324": 416, "473": 416, "0778": 416, "8548": 416, "0017": 416, "4408": 416, "475": 416, "8125": 416, "1515": 416, "2733": 416, "0044": 416, "2836": 416, "7497": 416, "7681": 416, "8547": 416, "0105": 416, "7212": 416, "9848": 416, "0019": 416, "6498": 416, "1987": 416, "0011": 416, "5473": 416, "8991": 416, "6091": 416, "9189": 416, "5771": 416, "483": 416, "6781": 416, "7542": 416, "5959": 416, "0064": 416, "485": 416, "2547": 416, "486": 416, "0636": 416, "547": 416, "0065": 416, "488": 416, "1694": 416, "0083": 416, "5759": 416, "489": 416, "0493": 416, "0021": 416, "7805": 416, "490": 416, "0950": 416, "497": 416, "491": 416, "9717": 416, "3672": 416, "492": 416, "0207": 416, "493": 416, "8266": 416, "5365": 416, "494": 416, "2623": 416, "5078": 416, "495": 416, "4545": 416, "09636": 416, "8754": 416, "0010": 416, "498": 416, "0031": 416, "8269": 416, "499": 416, "6642": 416, "2284": 416, "501": 416, "9130": 416, "0008": 416, "502": 416, "503": 416, "7624": 416, "0056": 416, "3858": 416, "504": 416, "0890": 416, "0042": 416, "505": 416, "7505": 416, "2157": 416, "506": 416, "8394": 416, "3413": 416, "507": 416, "9609": 416, "0041": 416, "6905": 416, "508": 416, "8467": 416, "4409": 416, "509": 416, "510": 416, "8128": 416, "3559": 416, "511": 416, "1479": 416, "0264": 416, "1589": 416, "566": 416, "513": 416, "2756": [416, 421], "0046": 416, "5266": 416, "514": 416, "9873": 416, "0112": 416, "9314": 416, "515": 416, "3791": 416, "0721": 416, "4580": 416, "0758": 416, "6114": 416, "517": 416, "2431": 416, "518": 416, "1958": 416, "5553": 416, "8924": 416, "0097": 416, "520": 416, "3737": 416, "0234": 416, "521": 416, "9125": 416, "4623": 416, "3230": 416, "0589": 416, "3784": 416, "523": 416, "9482": 416, "0051": 416, "524": 416, "1979": 416, "0045": 416, "6401": 416, "525": 416, "1588": 416, "0048": 416, "6255": 416, "526": 416, "6084": 416, "3477": 416, "1475": 416, "0209": 416, "528": 416, "7611": 416, "1040": 416, "0099": 416, "0173": 416, "643": 416, "530": 416, "8189": 416, "4358": 416, "531": 416, "9897": 416, "532": 416, "9751": 416, "533": 416, "6362": 416, "7495": 416, "534": 416, "1749": 416, "9513": 416, "535": 416, "7708": 416, "0371": 416, "536": 416, "2649": 416, "0437": 416, "537": 416, "5491": 416, "0276": 416, "6426": 416, "7294": 416, "078e": 416, "539": 416, "9928": 416, "540": 416, "7937": 416, "0124": 416, "9664": 416, "541": 416, "3342": 416, "542": 416, "2046": 416, "5496": 416, "0956": 416, "0059": 416, "545": 416, "9028": 416, "5843": 416, "546": 416, "0674": 416, "0178": 416, "797": 416, "2815": 416, "0599": 416, "1587": 416, "9276": 416, "8228": 416, "6164": 416, "551": 416, "6850": 416, "9167": 416, "3092": 416, "0670": 416, "9177": 416, "553": 416, "1599": 416, "0043": 416, "554": 416, "6367": 416, "555": 416, "556": 416, "6694": 416, "2622": 416, "0372": 416, "4841": 416, "558": 416, "2707": 416, "757": 416, "559": 416, "2267": 416, "5415": 416, "560": 416, "4556": 416, "0163": 416, "561": 416, "1839": 416, "0809": 416, "6262": 416, "562": 416, "0278": 416, "1112": 416, "6155": 416, "565": 416, "1427": 416, "3582": 416, "624": 416, "7870": 416, "9490": 416, "0439": 416, "8796": 416, "568": 416, "8026": 416, "612": 416, "569": 416, "3147": 416, "8486": 416, "7917": 416, "0129": 416, "571": 416, "9553": 416, "0020": 416, "6871": 416, "572": 416, "3132": 416, "0159": 416, "8646": 416, "573": 416, "5320": 416, "0269": 416, "574": 416, "2955": 416, "0245": 416, "575": 416, "3347": 416, "0179": 416, "9718": 416, "1629": 416, "804": 416, "577": 416, "4164": 416, "0070": 416, "4335": 416, "578": 416, "579": 416, "3049": 416, "9063": 416, "580": 416, "8785": 416, "3295": 416, "5184": 416, "0546": 416, "582": 416, "4589": 416, "583": 416, "4697": 416, "2476": 416, "584": 416, "2397": 416, "585": 416, "4953": 416, "1775": 416, "586": 416, "2258": 416, "0110": 416, "7671": 416, "587": 416, "3981": 416, "8590": 416, "589": 416, "9820": 416, "4221": 416, "590": 416, "1293": 416, "0116": 416, "868": 416, "1675": 416, "5931": 416, "2910": 416, "5219": 416, "2124": 416, "1730": 416, "737": 416, "594": 416, "2914": 416, "0206": 416, "595": 416, "0172": 416, "3982": 416, "0945": 416, "0121": 416, "4789": 416, "597": 416, "3805": 416, "4074": 416, "598": 416, "3310": 416, "5065": 416, "6028": 416, "6316": 416, "6724": 416, "6523": 416, "601": 416, "0136": 416, "4298": 416, "602": 416, "3524": 416, "2629": 416, "603": 416, "2635": 416, "7839": 416, "604": 416, "6041": 416, "8027": 416, "4170": 416, "4675": 416, "606": 416, "3153": 416, "9316": 416, "607": 416, "0649": 416, "9722": 416, "7989": 416, "0329": 416, "609": 416, "1976": 416, "6852": 416, "610": 416, "4793": 416, "1255": 416, "611": 416, "4581": 416, "0394": 416, "2047": 416, "0326": 416, "613": 416, "8967": 416, "8619": 416, "614": 416, "5906": 416, "6491": 416, "615": 416, "6634": 416, "4394": 416, "616": 416, "0624": 416, "0061": 416, "5676": 416, "3259": 416, "0131": 416, "7733": 416, "618": 416, "7515": 416, "0189": 416, "5575": 416, "619": 416, "9313": 416, "6286": 416, "620": 416, "4325": 416, "7832": 416, "1134": [416, 420], "622": 416, "4572": 416, "0500": 416, "5838": 416, "623": 416, "3818": 416, "8623": 416, "1253": 416, "6622": 416, "explain": 417, "semat": 417, "r3mtransform": 417, "env_transform": [417, 421], "s3": 417, "amazonaw": 417, "r3m_50": 417, "374m": 417, "5m": 417, "159mb": 417, "9m": 417, "101mb": 417, "2m": 417, "106mb": 417, "6m": 417, "116mb": 417, "4m": 417, "122mb": 417, "108mb": 417, "103m": 417, "115m": 417, "7mb": 417, "130m": 417, "2mb": 417, "138m": 417, "8mb": 417, "148m": 417, "162m": 417, "1mb": 417, "171m": 417, "4mb": 417, "180m": 417, "0mb": 417, "195m": 417, "203m": 417, "3mb": 417, "213m": 417, "229m": 417, "6mb": 417, "246m": 417, "104mb": 417, "262m": 417, "118mb": 417, "277m": 417, "111mb": 417, "288m": 417, "298m": 417, "311m": 417, "328m": 417, "344m": 417, "360m": 417, "9mb": 417, "5mb": 417, "wiser": 417, "batteri": 418, "buffer_list": 418, "lowest": 418, "medium": 418, "buffer_lazytensor": 418, "buffer_lazymemmap": 418, "tempdir": 418, "tmp0l0lctyn": 418, "fullest": 418, "mydata": 418, "background": 418, "question": [418, 420], "_i": 418, "artifici": 418, "0893e": 418, "hamper": 418, "she": 418, "pars": 418, "proport": 418, "barcontain": 418, "artist": 418, "reappear": 418, "unfold": 418, "problemat": 418, "4th": 418, "prioritizedslicesampl": 418, "tensordictmaxvaluewrit": 418, "demo": 420, "icml": 420, "vmoen": 420, "fb": 420, "invest": 420, "platform": 420, "media": 420, "predominantli": 420, "tensordict1": 420, "tensordict2": 420, "tensordict_sampl": 420, "_sampler": 420, "_sum_tre": 420, "modulenotfounderror": 420, "28791671991348267": 420, "06984967738389969": 420, "noopresetenv": [420, 421], "traceback": [420, 421], "2165": 420, "819": 420, "4529": 420, "2322": 420, "1505": 420, "784": 420, "tensordict_in": 420, "gym_lik": 420, "_output_transform": 420, "_add_pixel_observ": 420, "dictcomp": 420, "pixel_kei": 420, "_render": 420, "_render_kwarg": 420, "scale_img": 420, "pygam": 420, "smoothscal": 420, "typeerror": 420, "backbone_modul": 420, "params_expand": 420, "exec_sequ": 420, "tensordict_exp": 420, "base_modul": 420, "tensordicts_prealloc": 420, "tensordicts_stack": 420, "tensordict_rollout": [420, 421], "disclaim": 420, "concatmodul": 420, "loss_td": 420, "year": 420, "roadmap": 420, "compris": 420, "contributor": 420, "curiou": 420, "nascent": 420, "5374": 420, "unsupervis": 421, "unifi": 421, "_build_env": 421, "amidar": 421, "assault": 421, "3541": 421, "deserv": 421, "__episode__": 421, "__trajectory__": 421, "void": 421, "reproduct": 421, "reset_data": 421, "tensordict_tprim": 421, "imshow": 421, "axesimag": 421, "0x7fa91ad3e7d0": 421, "wrapper1": 421, "wrapper2": 421, "obviou": 421, "truth": 421, "env_transformed_bi": 421, "stanc": 421, "transformeddistribut": 421, "base_dist": 421, "concat": 421, "mofidi": 421, "transformedenviron": 421, "moderet": 421, "computation": 421, "legitim": 421, "incom": 421, "amongst": 421, "has_cuda": 421, "wor": 421, "convention": 421, "markovian": 421, "3288080526": 421, "constain": 421, "bar_": 421, "get_someth": 421, "bar_9562608a": 421, "95f5": 421, "aargh": 421, "is_clos": 421, "foo_list": 421, "batched_env": 421, "_dispatch_caller_parallel": 421, "0x7fa906bcf760": 421, "bar_99d6ca84": 421, "8151": 421, "bar_99d583d6": 421, "8a60": 421, "bar_99ce4670": 421, "937d": 421, "particularili": 421, "evolv": 421, "steadi": 421, "approx": 421, "4269": 421, "0273": 421, "0952": 421, "1910": 421, "3397": 421, "_extra_st": 421, "observation_ssq": 421, "observation_sum": 421, "697": 421, "dispach": 421, "absor": 421, "4891": 421}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MultiCategorical"], [42, 0, 1, "", "MultiDiscreteTensorSpec"], [43, 0, 1, "", "MultiOneHot"], [44, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [45, 0, 1, "", "MultiStep"], [46, 0, 1, "", "Nested2TED"], [47, 0, 1, "", "NonTensor"], [48, 0, 1, "", "NonTensorSpec"], [49, 0, 1, "", "OneHotDiscreteTensorSpec"], [50, 0, 1, "", "PairwiseDataset"], [51, 0, 1, "", "PrioritizedReplayBuffer"], [52, 0, 1, "", "PromptData"], [53, 0, 1, "", "PromptTensorDictTokenizer"], [54, 0, 1, "", "QueryModule"], [55, 0, 1, "", "RandomProjectionHash"], [56, 0, 1, "", "ReplayBuffer"], [57, 0, 1, "", "RewardData"], [58, 0, 1, "", "RolloutFromModel"], [59, 0, 1, "", "SipHash"], [60, 0, 1, "", "Stacked"], [61, 0, 1, "", "StackedComposite"], [62, 0, 1, "", "TED2Flat"], [63, 0, 1, "", "TED2Nested"], [64, 0, 1, "", "TensorDictMap"], [65, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [66, 0, 1, "", "TensorDictReplayBuffer"], [67, 0, 1, "", "TensorDictTokenizer"], [68, 0, 1, "", "TensorMap"], [69, 0, 1, "", "TensorSpec"], [70, 0, 1, "", "TokenizedDatasetLoader"], [71, 0, 1, "", "Unbounded"], [72, 0, 1, "", "UnboundedContinuous"], [73, 0, 1, "", "UnboundedContinuousTensorSpec"], [74, 0, 1, "", "UnboundedDiscrete"], [75, 0, 1, "", "UnboundedDiscreteTensorSpec"], [76, 0, 1, "", "check_no_exclusive_keys"], [77, 0, 1, "", "consolidate_spec"], [78, 0, 1, "", "contains_lazy_spec"], [79, 0, 1, "", "create_infinite_iterator"], [89, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MultiCategorical": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 3, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 4, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "compile"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "mtia"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_load_state_dict_pre_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_post_hook"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_submodule"], [45, 1, 1, "", "share_memory"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 4, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 3, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_categorical"], [49, 1, 1, "", "to_categorical_spec"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "to_one_hot"], [49, 1, 1, "", "to_one_hot_spec"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "update_mask"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[50, 4, 1, "", "batch_size"], [50, 4, 1, "", "device"], [50, 1, 1, "", "from_dataset"], [50, 1, 1, "", "from_tensordict"], [50, 1, 1, "", "get"], [50, 1, 1, "", "load"], [50, 1, 1, "", "load_"], [50, 1, 1, "", "load_memmap"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "memmap"], [50, 1, 1, "", "memmap_"], [50, 1, 1, "", "memmap_like"], [50, 1, 1, "", "memmap_refresh_"], [50, 4, 1, "", "names"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to_tensordict"], [50, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 4, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 4, 1, "", "storage"], [51, 4, 1, "", "write_count"], [51, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[52, 4, 1, "", "batch_size"], [52, 4, 1, "", "device"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 4, 1, "", "names"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[54, 1, 1, "", "add_module"], [54, 1, 1, "", "apply"], [54, 1, 1, "", "bfloat16"], [54, 1, 1, "", "buffers"], [54, 1, 1, "", "children"], [54, 1, 1, "", "compile"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 1, 1, "", "double"], [54, 1, 1, "", "eval"], [54, 1, 1, "", "extra_repr"], [54, 1, 1, "", "float"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "get_buffer"], [54, 1, 1, "", "get_extra_state"], [54, 1, 1, "", "get_parameter"], [54, 1, 1, "", "get_submodule"], [54, 1, 1, "", "half"], [54, 1, 1, "", "ipu"], [54, 1, 1, "", "is_tdmodule_compatible"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "modules"], [54, 1, 1, "", "mtia"], [54, 1, 1, "", "named_buffers"], [54, 1, 1, "", "named_children"], [54, 1, 1, "", "named_modules"], [54, 1, 1, "", "named_parameters"], [54, 1, 1, "", "parameters"], [54, 1, 1, "", "register_backward_hook"], [54, 1, 1, "", "register_buffer"], [54, 1, 1, "", "register_forward_hook"], [54, 1, 1, "", "register_forward_pre_hook"], [54, 1, 1, "", "register_full_backward_hook"], [54, 1, 1, "", "register_full_backward_pre_hook"], [54, 1, 1, "", "register_load_state_dict_post_hook"], [54, 1, 1, "", "register_load_state_dict_pre_hook"], [54, 1, 1, "", "register_module"], [54, 1, 1, "", "register_parameter"], [54, 1, 1, "", "register_state_dict_post_hook"], [54, 1, 1, "", "register_state_dict_pre_hook"], [54, 1, 1, "", "requires_grad_"], [54, 1, 1, "", "reset_out_keys"], [54, 1, 1, "", "reset_parameters_recursive"], [54, 1, 1, "", "select_out_keys"], [54, 1, 1, "", "set_extra_state"], [54, 1, 1, "", "set_submodule"], [54, 1, 1, "", "share_memory"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_empty"], [54, 1, 1, "", "train"], [54, 1, 1, "", "type"], [54, 1, 1, "", "xpu"], [54, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dump"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "load"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "register_load_hook"], [56, 1, 1, "", "register_save_hook"], [56, 1, 1, "", "sample"], [56, 4, 1, "", "sampler"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 4, 1, "", "storage"], [56, 4, 1, "", "write_count"], [56, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[57, 4, 1, "", "batch_size"], [57, 4, 1, "", "device"], [57, 1, 1, "", "from_tensordict"], [57, 1, 1, "", "get"], [57, 1, 1, "", "load"], [57, 1, 1, "", "load_"], [57, 1, 1, "", "load_memmap"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "memmap"], [57, 1, 1, "", "memmap_"], [57, 1, 1, "", "memmap_like"], [57, 1, 1, "", "memmap_refresh_"], [57, 4, 1, "", "names"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to_tensordict"], [57, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[58, 1, 1, "", "create_rollout_td"], [58, 1, 1, "", "generate"], [58, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[59, 1, 1, "", "add_module"], [59, 1, 1, "", "apply"], [59, 1, 1, "", "bfloat16"], [59, 1, 1, "", "buffers"], [59, 1, 1, "", "children"], [59, 1, 1, "", "compile"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 1, 1, "", "double"], [59, 1, 1, "", "eval"], [59, 1, 1, "", "extra_repr"], [59, 1, 1, "", "float"], [59, 1, 1, "", "forward"], [59, 1, 1, "", "get_buffer"], [59, 1, 1, "", "get_extra_state"], [59, 1, 1, "", "get_parameter"], [59, 1, 1, "", "get_submodule"], [59, 1, 1, "", "half"], [59, 1, 1, "", "ipu"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "modules"], [59, 1, 1, "", "mtia"], [59, 1, 1, "", "named_buffers"], [59, 1, 1, "", "named_children"], [59, 1, 1, "", "named_modules"], [59, 1, 1, "", "named_parameters"], [59, 1, 1, "", "parameters"], [59, 1, 1, "", "register_backward_hook"], [59, 1, 1, "", "register_buffer"], [59, 1, 1, "", "register_forward_hook"], [59, 1, 1, "", "register_forward_pre_hook"], [59, 1, 1, "", "register_full_backward_hook"], [59, 1, 1, "", "register_full_backward_pre_hook"], [59, 1, 1, "", "register_load_state_dict_post_hook"], [59, 1, 1, "", "register_load_state_dict_pre_hook"], [59, 1, 1, "", "register_module"], [59, 1, 1, "", "register_parameter"], [59, 1, 1, "", "register_state_dict_post_hook"], [59, 1, 1, "", "register_state_dict_pre_hook"], [59, 1, 1, "", "requires_grad_"], [59, 1, 1, "", "set_extra_state"], [59, 1, 1, "", "set_submodule"], [59, 1, 1, "", "share_memory"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_empty"], [59, 1, 1, "", "train"], [59, 1, 1, "", "type"], [59, 1, 1, "", "xpu"], [59, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 4, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "get"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_empty"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "items"], [61, 1, 1, "", "keys"], [61, 1, 1, "", "lock_"], [61, 1, 1, "", "make_neg_dim"], [61, 4, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unlock_"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "values"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[64, 1, 1, "", "add_module"], [64, 1, 1, "", "apply"], [64, 1, 1, "", "bfloat16"], [64, 1, 1, "", "buffers"], [64, 1, 1, "", "children"], [64, 1, 1, "", "compile"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 1, 1, "", "double"], [64, 1, 1, "", "eval"], [64, 1, 1, "", "extra_repr"], [64, 1, 1, "", "float"], [64, 1, 1, "", "forward"], [64, 1, 1, "", "from_tensordict_pair"], [64, 1, 1, "", "get_buffer"], [64, 1, 1, "", "get_extra_state"], [64, 1, 1, "", "get_parameter"], [64, 1, 1, "", "get_submodule"], [64, 1, 1, "", "half"], [64, 1, 1, "", "ipu"], [64, 1, 1, "", "is_tdmodule_compatible"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "modules"], [64, 1, 1, "", "mtia"], [64, 1, 1, "", "named_buffers"], [64, 1, 1, "", "named_children"], [64, 1, 1, "", "named_modules"], [64, 1, 1, "", "named_parameters"], [64, 1, 1, "", "parameters"], [64, 1, 1, "", "register_backward_hook"], [64, 1, 1, "", "register_buffer"], [64, 1, 1, "", "register_forward_hook"], [64, 1, 1, "", "register_forward_pre_hook"], [64, 1, 1, "", "register_full_backward_hook"], [64, 1, 1, "", "register_full_backward_pre_hook"], [64, 1, 1, "", "register_load_state_dict_post_hook"], [64, 1, 1, "", "register_load_state_dict_pre_hook"], [64, 1, 1, "", "register_module"], [64, 1, 1, "", "register_parameter"], [64, 1, 1, "", "register_state_dict_post_hook"], [64, 1, 1, "", "register_state_dict_pre_hook"], [64, 1, 1, "", "requires_grad_"], [64, 1, 1, "", "reset_out_keys"], [64, 1, 1, "", "reset_parameters_recursive"], [64, 1, 1, "", "select_out_keys"], [64, 1, 1, "", "set_extra_state"], [64, 1, 1, "", "set_submodule"], [64, 1, 1, "", "share_memory"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_empty"], [64, 1, 1, "", "train"], [64, 1, 1, "", "type"], [64, 1, 1, "", "xpu"], [64, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 4, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 4, 1, "", "storage"], [65, 4, 1, "", "write_count"], [65, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 4, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 4, 1, "", "storage"], [66, 4, 1, "", "write_count"], [66, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[69, 1, 1, "", "assert_is_in"], [69, 1, 1, "", "clear_device_"], [69, 1, 1, "", "clone"], [69, 1, 1, "", "contains"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 4, 1, "", "device"], [69, 1, 1, "", "encode"], [69, 1, 1, "", "expand"], [69, 1, 1, "", "flatten"], [69, 1, 1, "", "implements_for_spec"], [69, 1, 1, "", "index"], [69, 1, 1, "", "is_in"], [69, 1, 1, "", "make_neg_dim"], [69, 4, 1, "", "ndim"], [69, 1, 1, "", "ndimension"], [69, 1, 1, "", "one"], [69, 1, 1, "", "ones"], [69, 1, 1, "", "project"], [69, 1, 1, "", "rand"], [69, 1, 1, "", "reshape"], [69, 1, 1, "", "sample"], [69, 1, 1, "", "squeeze"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_numpy"], [69, 1, 1, "", "type_check"], [69, 1, 1, "", "unflatten"], [69, 1, 1, "", "unsqueeze"], [69, 1, 1, "", "view"], [69, 1, 1, "", "zero"], [69, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[70, 1, 1, "", "dataset_to_tensordict"], [70, 1, 1, "", "load"]], "torchrl.data.Unbounded": [[71, 1, 1, "", "assert_is_in"], [71, 1, 1, "", "clear_device_"], [71, 1, 1, "", "clone"], [71, 1, 1, "", "contains"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 4, 1, "", "device"], [71, 1, 1, "", "encode"], [71, 1, 1, "", "expand"], [71, 1, 1, "", "flatten"], [71, 1, 1, "", "implements_for_spec"], [71, 1, 1, "", "index"], [71, 1, 1, "", "is_in"], [71, 1, 1, "", "make_neg_dim"], [71, 4, 1, "", "ndim"], [71, 1, 1, "", "ndimension"], [71, 1, 1, "", "one"], [71, 1, 1, "", "ones"], [71, 1, 1, "", "project"], [71, 1, 1, "", "rand"], [71, 1, 1, "", "reshape"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "squeeze"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_numpy"], [71, 1, 1, "", "type_check"], [71, 1, 1, "", "unflatten"], [71, 1, 1, "", "unsqueeze"], [71, 1, 1, "", "view"], [71, 1, 1, "", "zero"], [71, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[72, 1, 1, "", "assert_is_in"], [72, 1, 1, "", "clear_device_"], [72, 1, 1, "", "clone"], [72, 1, 1, "", "contains"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 4, 1, "", "device"], [72, 1, 1, "", "encode"], [72, 1, 1, "", "expand"], [72, 1, 1, "", "flatten"], [72, 1, 1, "", "implements_for_spec"], [72, 1, 1, "", "index"], [72, 1, 1, "", "is_in"], [72, 1, 1, "", "make_neg_dim"], [72, 4, 1, "", "ndim"], [72, 1, 1, "", "ndimension"], [72, 1, 1, "", "one"], [72, 1, 1, "", "ones"], [72, 1, 1, "", "project"], [72, 1, 1, "", "rand"], [72, 1, 1, "", "reshape"], [72, 1, 1, "", "sample"], [72, 1, 1, "", "squeeze"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_numpy"], [72, 1, 1, "", "type_check"], [72, 1, 1, "", "unflatten"], [72, 1, 1, "", "unsqueeze"], [72, 1, 1, "", "view"], [72, 1, 1, "", "zero"], [72, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 4, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 4, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[80, 0, 1, "", "AtariDQNExperienceReplay"], [81, 0, 1, "", "BaseDatasetExperienceReplay"], [82, 0, 1, "", "D4RLExperienceReplay"], [83, 0, 1, "", "GenDGRLExperienceReplay"], [84, 0, 1, "", "MinariExperienceReplay"], [85, 0, 1, "", "OpenMLExperienceReplay"], [86, 0, 1, "", "OpenXExperienceReplay"], [87, 0, 1, "", "RobosetExperienceReplay"], [88, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 4, 1, "", "data_path"], [80, 4, 1, "", "data_path_root"], [80, 1, 1, "", "delete"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "preprocess"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 4, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 4, 1, "", "storage"], [80, 4, 1, "", "write_count"], [80, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 4, 1, "", "data_path"], [81, 4, 1, "", "data_path_root"], [81, 1, 1, "", "delete"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "preprocess"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 4, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 4, 1, "", "storage"], [81, 4, 1, "", "write_count"], [81, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 4, 1, "", "data_path"], [82, 4, 1, "", "data_path_root"], [82, 1, 1, "", "delete"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "preprocess"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 4, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 4, 1, "", "storage"], [82, 4, 1, "", "write_count"], [82, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[83, 1, 1, "", "add"], [83, 1, 1, "", "append_transform"], [83, 4, 1, "", "data_path"], [83, 4, 1, "", "data_path_root"], [83, 1, 1, "", "delete"], [83, 1, 1, "", "dump"], [83, 1, 1, "", "dumps"], [83, 1, 1, "", "empty"], [83, 1, 1, "", "extend"], [83, 1, 1, "", "insert_transform"], [83, 1, 1, "", "load"], [83, 1, 1, "", "loads"], [83, 1, 1, "", "preprocess"], [83, 1, 1, "", "register_load_hook"], [83, 1, 1, "", "register_save_hook"], [83, 1, 1, "", "sample"], [83, 4, 1, "", "sampler"], [83, 1, 1, "", "save"], [83, 1, 1, "", "set_sampler"], [83, 1, 1, "", "set_storage"], [83, 1, 1, "", "set_writer"], [83, 4, 1, "", "storage"], [83, 4, 1, "", "write_count"], [83, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[84, 1, 1, "", "add"], [84, 1, 1, "", "append_transform"], [84, 4, 1, "", "data_path"], [84, 4, 1, "", "data_path_root"], [84, 1, 1, "", "delete"], [84, 1, 1, "", "dump"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "empty"], [84, 1, 1, "", "extend"], [84, 1, 1, "", "insert_transform"], [84, 1, 1, "", "load"], [84, 1, 1, "", "loads"], [84, 1, 1, "", "preprocess"], [84, 1, 1, "", "register_load_hook"], [84, 1, 1, "", "register_save_hook"], [84, 1, 1, "", "sample"], [84, 4, 1, "", "sampler"], [84, 1, 1, "", "save"], [84, 1, 1, "", "set_sampler"], [84, 1, 1, "", "set_storage"], [84, 1, 1, "", "set_writer"], [84, 4, 1, "", "storage"], [84, 4, 1, "", "write_count"], [84, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[85, 1, 1, "", "add"], [85, 1, 1, "", "append_transform"], [85, 4, 1, "", "data_path"], [85, 4, 1, "", "data_path_root"], [85, 1, 1, "", "delete"], [85, 1, 1, "", "dump"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "empty"], [85, 1, 1, "", "extend"], [85, 1, 1, "", "insert_transform"], [85, 1, 1, "", "load"], [85, 1, 1, "", "loads"], [85, 1, 1, "", "preprocess"], [85, 1, 1, "", "register_load_hook"], [85, 1, 1, "", "register_save_hook"], [85, 1, 1, "", "sample"], [85, 4, 1, "", "sampler"], [85, 1, 1, "", "save"], [85, 1, 1, "", "set_sampler"], [85, 1, 1, "", "set_storage"], [85, 1, 1, "", "set_writer"], [85, 4, 1, "", "storage"], [85, 4, 1, "", "write_count"], [85, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[86, 1, 1, "", "add"], [86, 1, 1, "", "append_transform"], [86, 4, 1, "", "data_path"], [86, 4, 1, "", "data_path_root"], [86, 1, 1, "", "delete"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "dumps"], [86, 1, 1, "", "empty"], [86, 1, 1, "", "extend"], [86, 1, 1, "", "insert_transform"], [86, 1, 1, "", "load"], [86, 1, 1, "", "loads"], [86, 1, 1, "", "preprocess"], [86, 1, 1, "", "register_load_hook"], [86, 1, 1, "", "register_save_hook"], [86, 1, 1, "", "sample"], [86, 4, 1, "", "sampler"], [86, 1, 1, "", "save"], [86, 1, 1, "", "set_sampler"], [86, 1, 1, "", "set_storage"], [86, 1, 1, "", "set_writer"], [86, 4, 1, "", "storage"], [86, 4, 1, "", "write_count"], [86, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[87, 1, 1, "", "add"], [87, 1, 1, "", "append_transform"], [87, 4, 1, "", "data_path"], [87, 4, 1, "", "data_path_root"], [87, 1, 1, "", "delete"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "empty"], [87, 1, 1, "", "extend"], [87, 1, 1, "", "insert_transform"], [87, 1, 1, "", "load"], [87, 1, 1, "", "loads"], [87, 1, 1, "", "preprocess"], [87, 1, 1, "", "register_load_hook"], [87, 1, 1, "", "register_save_hook"], [87, 1, 1, "", "sample"], [87, 4, 1, "", "sampler"], [87, 1, 1, "", "save"], [87, 1, 1, "", "set_sampler"], [87, 1, 1, "", "set_storage"], [87, 1, 1, "", "set_writer"], [87, 4, 1, "", "storage"], [87, 4, 1, "", "write_count"], [87, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[88, 1, 1, "", "add"], [88, 1, 1, "", "append_transform"], [88, 4, 1, "", "data_path"], [88, 4, 1, "", "data_path_root"], [88, 1, 1, "", "delete"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "dumps"], [88, 1, 1, "", "empty"], [88, 1, 1, "", "extend"], [88, 1, 1, "", "insert_transform"], [88, 1, 1, "", "load"], [88, 1, 1, "", "loads"], [88, 1, 1, "", "preprocess"], [88, 1, 1, "", "register_load_hook"], [88, 1, 1, "", "register_save_hook"], [88, 1, 1, "", "sample"], [88, 4, 1, "", "sampler"], [88, 1, 1, "", "save"], [88, 1, 1, "", "set_sampler"], [88, 1, 1, "", "set_storage"], [88, 1, 1, "", "set_writer"], [88, 4, 1, "", "storage"], [88, 4, 1, "", "write_count"], [88, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[90, 0, 1, "", "FlatStorageCheckpointer"], [91, 0, 1, "", "H5StorageCheckpointer"], [92, 0, 1, "", "ImmutableDatasetWriter"], [93, 0, 1, "", "LazyMemmapStorage"], [94, 0, 1, "", "LazyTensorStorage"], [95, 0, 1, "", "ListStorage"], [96, 0, 1, "", "ListStorageCheckpointer"], [97, 0, 1, "", "NestedStorageCheckpointer"], [98, 0, 1, "", "PrioritizedSampler"], [99, 0, 1, "", "PrioritizedSliceSampler"], [100, 0, 1, "", "RandomSampler"], [101, 0, 1, "", "ReplayBufferEnsemble"], [102, 0, 1, "", "RoundRobinWriter"], [103, 0, 1, "", "Sampler"], [104, 0, 1, "", "SamplerEnsemble"], [105, 0, 1, "", "SamplerWithoutReplacement"], [106, 0, 1, "", "SliceSampler"], [107, 0, 1, "", "SliceSamplerWithoutReplacement"], [108, 0, 1, "", "Storage"], [109, 0, 1, "", "StorageCheckpointerBase"], [110, 0, 1, "", "StorageEnsemble"], [111, 0, 1, "", "StorageEnsembleCheckpointer"], [112, 0, 1, "", "TensorDictMaxValueWriter"], [113, 0, 1, "", "TensorDictRoundRobinWriter"], [114, 0, 1, "", "TensorStorage"], [115, 0, 1, "", "TensorStorageCheckpointer"], [116, 0, 1, "", "Writer"], [117, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[92, 1, 1, "", "add"], [92, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[98, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[99, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[101, 1, 1, "", "add"], [101, 1, 1, "", "append_transform"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "dumps"], [101, 1, 1, "", "empty"], [101, 1, 1, "", "extend"], [101, 1, 1, "", "insert_transform"], [101, 1, 1, "", "load"], [101, 1, 1, "", "loads"], [101, 1, 1, "", "register_load_hook"], [101, 1, 1, "", "register_save_hook"], [101, 1, 1, "", "sample"], [101, 4, 1, "", "sampler"], [101, 1, 1, "", "save"], [101, 1, 1, "", "set_sampler"], [101, 1, 1, "", "set_storage"], [101, 1, 1, "", "set_writer"], [101, 4, 1, "", "storage"], [101, 4, 1, "", "write_count"], [101, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[102, 1, 1, "", "add"], [102, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[108, 1, 1, "", "attach"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "load"], [108, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[110, 1, 1, "", "attach"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "load"], [110, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[112, 1, 1, "", "add"], [112, 1, 1, "", "extend"], [112, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[114, 1, 1, "", "attach"], [114, 1, 1, "", "dump"], [114, 1, 1, "", "load"], [114, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.envs": [[118, 2, 1, "", "BraxEnv"], [119, 2, 1, "", "BraxWrapper"], [120, 2, 1, "", "DMControlEnv"], [121, 2, 1, "", "DMControlWrapper"], [122, 0, 1, "", "EnvBase"], [123, 0, 1, "", "EnvCreator"], [124, 0, 1, "", "EnvMetaData"], [125, 2, 1, "", "GymEnv"], [126, 0, 1, "", "GymLikeEnv"], [127, 2, 1, "", "GymWrapper"], [128, 2, 1, "", "HabitatEnv"], [129, 2, 1, "", "IsaacGymEnv"], [130, 2, 1, "", "IsaacGymWrapper"], [131, 2, 1, "", "JumanjiEnv"], [132, 2, 1, "", "JumanjiWrapper"], [133, 2, 1, "", "MOGymEnv"], [134, 2, 1, "", "MOGymWrapper"], [135, 2, 1, "", "MarlGroupMapType"], [136, 2, 1, "", "MeltingpotEnv"], [137, 2, 1, "", "MeltingpotWrapper"], [138, 2, 1, "", "ModelBasedEnvBase"], [139, 2, 1, "", "MultiThreadedEnv"], [140, 2, 1, "", "MultiThreadedEnvWrapper"], [141, 2, 1, "", "OpenMLEnv"], [142, 2, 1, "", "OpenSpielEnv"], [143, 2, 1, "", "OpenSpielWrapper"], [144, 0, 1, "", "ParallelEnv"], [145, 0, 1, "", "PendulumEnv"], [146, 2, 1, "", "PettingZooEnv"], [147, 2, 1, "", "PettingZooWrapper"], [148, 2, 1, "", "RoboHiveEnv"], [149, 2, 1, "", "SMACv2Env"], [150, 2, 1, "", "SMACv2Wrapper"], [151, 0, 1, "", "SerialEnv"], [152, 0, 1, "", "TicTacToeEnv"], [153, 2, 1, "", "UnityMLAgentsEnv"], [154, 2, 1, "", "UnityMLAgentsWrapper"], [155, 2, 1, "", "VmasEnv"], [156, 2, 1, "", "VmasWrapper"], [157, 2, 1, "", "check_marl_grouping"], [158, 2, 1, "", "gym_backend"], [138, 1, 1, "", "rand_step"], [138, 1, 1, "", "reset"], [138, 1, 1, "", "rollout"], [161, 2, 1, "", "set_gym_backend"], [138, 1, 1, "", "set_seed"], [138, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[122, 4, 1, "", "action_key"], [122, 4, 1, "", "action_keys"], [122, 4, 1, "", "action_spec"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 4, 1, "", "batch_locked"], [122, 4, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "children"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 4, 1, "", "done_key"], [122, 4, 1, "", "done_keys"], [122, 4, 1, "", "done_keys_groups"], [122, 4, 1, "", "done_spec"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 4, 1, "", "full_action_spec"], [122, 4, 1, "", "full_done_spec"], [122, 4, 1, "", "full_reward_spec"], [122, 4, 1, "", "full_state_spec"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 4, 1, "", "input_spec"], [122, 1, 1, "", "ipu"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "mtia"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 4, 1, "", "observation_spec"], [122, 4, 1, "", "output_spec"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "id0", "rand_step"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_load_state_dict_pre_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_post_hook"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "id1", "reset"], [122, 4, 1, "", "reset_keys"], [122, 4, 1, "", "reward_key"], [122, 4, 1, "", "reward_keys"], [122, 4, 1, "", "reward_spec"], [122, 1, 1, "id2", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "id3", "set_seed"], [122, 1, 1, "", "set_submodule"], [122, 4, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 4, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 4, 1, "", "state_keys"], [122, 4, 1, "", "state_spec"], [122, 1, 1, "id4", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[126, 4, 1, "", "action_key"], [126, 4, 1, "", "action_keys"], [126, 4, 1, "", "action_spec"], [126, 1, 1, "", "add_module"], [126, 1, 1, "", "add_truncated_keys"], [126, 1, 1, "", "append_transform"], [126, 1, 1, "", "apply"], [126, 1, 1, "", "auto_register_info_dict"], [126, 4, 1, "", "batch_locked"], [126, 4, 1, "", "batch_size"], [126, 1, 1, "", "bfloat16"], [126, 1, 1, "", "buffers"], [126, 1, 1, "", "children"], [126, 1, 1, "", "close"], [126, 1, 1, "", "compile"], [126, 1, 1, "", "cpu"], [126, 1, 1, "", "cuda"], [126, 4, 1, "", "done_key"], [126, 4, 1, "", "done_keys"], [126, 4, 1, "", "done_keys_groups"], [126, 4, 1, "", "done_spec"], [126, 1, 1, "", "double"], [126, 1, 1, "", "empty_cache"], [126, 1, 1, "", "eval"], [126, 1, 1, "", "extra_repr"], [126, 1, 1, "", "fake_tensordict"], [126, 1, 1, "", "float"], [126, 1, 1, "", "forward"], [126, 4, 1, "", "full_action_spec"], [126, 4, 1, "", "full_done_spec"], [126, 4, 1, "", "full_reward_spec"], [126, 4, 1, "", "full_state_spec"], [126, 1, 1, "", "get_buffer"], [126, 1, 1, "", "get_extra_state"], [126, 1, 1, "", "get_parameter"], [126, 1, 1, "", "get_submodule"], [126, 1, 1, "", "half"], [126, 4, 1, "", "input_spec"], [126, 1, 1, "", "ipu"], [126, 1, 1, "", "load_state_dict"], [126, 1, 1, "", "maybe_reset"], [126, 1, 1, "", "modules"], [126, 1, 1, "", "mtia"], [126, 1, 1, "", "named_buffers"], [126, 1, 1, "", "named_children"], [126, 1, 1, "", "named_modules"], [126, 1, 1, "", "named_parameters"], [126, 4, 1, "", "observation_spec"], [126, 4, 1, "", "output_spec"], [126, 1, 1, "", "parameters"], [126, 1, 1, "", "rand_action"], [126, 1, 1, "", "rand_step"], [126, 1, 1, "", "read_action"], [126, 1, 1, "", "read_done"], [126, 1, 1, "", "read_obs"], [126, 1, 1, "", "read_reward"], [126, 1, 1, "", "register_backward_hook"], [126, 1, 1, "", "register_buffer"], [126, 1, 1, "", "register_forward_hook"], [126, 1, 1, "", "register_forward_pre_hook"], [126, 1, 1, "", "register_full_backward_hook"], [126, 1, 1, "", "register_full_backward_pre_hook"], [126, 1, 1, "", "register_gym"], [126, 1, 1, "", "register_load_state_dict_post_hook"], [126, 1, 1, "", "register_load_state_dict_pre_hook"], [126, 1, 1, "", "register_module"], [126, 1, 1, "", "register_parameter"], [126, 1, 1, "", "register_state_dict_post_hook"], [126, 1, 1, "", "register_state_dict_pre_hook"], [126, 1, 1, "", "requires_grad_"], [126, 1, 1, "", "reset"], [126, 4, 1, "", "reset_keys"], [126, 4, 1, "", "reward_key"], [126, 4, 1, "", "reward_keys"], [126, 4, 1, "", "reward_spec"], [126, 1, 1, "", "rollout"], [126, 1, 1, "", "set_extra_state"], [126, 1, 1, "", "set_info_dict_reader"], [126, 1, 1, "", "set_seed"], [126, 1, 1, "", "set_submodule"], [126, 4, 1, "", "shape"], [126, 1, 1, "", "share_memory"], [126, 4, 1, "", "specs"], [126, 1, 1, "", "state_dict"], [126, 4, 1, "", "state_keys"], [126, 4, 1, "", "state_spec"], [126, 1, 1, "", "step"], [126, 1, 1, "", "step_and_maybe_reset"], [126, 1, 1, "", "to"], [126, 1, 1, "", "to_empty"], [126, 1, 1, "", "train"], [126, 1, 1, "", "type"], [126, 1, 1, "", "xpu"], [126, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[144, 4, 1, "", "action_key"], [144, 4, 1, "", "action_keys"], [144, 4, 1, "", "action_spec"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 4, 1, "", "batch_locked"], [144, 4, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "children"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 4, 1, "", "done_key"], [144, 4, 1, "", "done_keys"], [144, 4, 1, "", "done_keys_groups"], [144, 4, 1, "", "done_spec"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 4, 1, "", "full_action_spec"], [144, 4, 1, "", "full_done_spec"], [144, 4, 1, "", "full_reward_spec"], [144, 4, 1, "", "full_state_spec"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 4, 1, "", "input_spec"], [144, 1, 1, "", "ipu"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 4, 1, "", "observation_spec"], [144, 4, 1, "", "output_spec"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 4, 1, "", "reset_keys"], [144, 4, 1, "", "reward_key"], [144, 4, 1, "", "reward_keys"], [144, 4, 1, "", "reward_spec"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_submodule"], [144, 4, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 4, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 4, 1, "", "state_keys"], [144, 4, 1, "", "state_spec"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "update_kwargs"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[145, 4, 1, "", "action_key"], [145, 4, 1, "", "action_keys"], [145, 4, 1, "", "action_spec"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 4, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 4, 1, "", "done_key"], [145, 4, 1, "", "done_keys"], [145, 4, 1, "", "done_keys_groups"], [145, 4, 1, "", "done_spec"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 4, 1, "", "full_action_spec"], [145, 4, 1, "", "full_done_spec"], [145, 4, 1, "", "full_reward_spec"], [145, 4, 1, "", "full_state_spec"], [145, 1, 1, "", "gen_params"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 4, 1, "", "input_spec"], [145, 1, 1, "", "ipu"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 4, 1, "", "observation_spec"], [145, 4, 1, "", "output_spec"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 4, 1, "", "reset_keys"], [145, 4, 1, "", "reward_key"], [145, 4, 1, "", "reward_keys"], [145, 4, 1, "", "reward_spec"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_submodule"], [145, 4, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 4, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 4, 1, "", "state_keys"], [145, 4, 1, "", "state_spec"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[151, 4, 1, "", "action_key"], [151, 4, 1, "", "action_keys"], [151, 4, 1, "", "action_spec"], [151, 1, 1, "", "add_module"], [151, 1, 1, "", "add_truncated_keys"], [151, 1, 1, "", "append_transform"], [151, 1, 1, "", "apply"], [151, 4, 1, "", "batch_locked"], [151, 4, 1, "", "batch_size"], [151, 1, 1, "", "bfloat16"], [151, 1, 1, "", "buffers"], [151, 1, 1, "", "children"], [151, 1, 1, "", "compile"], [151, 1, 1, "", "cpu"], [151, 1, 1, "", "cuda"], [151, 4, 1, "", "done_key"], [151, 4, 1, "", "done_keys"], [151, 4, 1, "", "done_keys_groups"], [151, 4, 1, "", "done_spec"], [151, 1, 1, "", "double"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 1, 1, "", "extra_repr"], [151, 1, 1, "", "fake_tensordict"], [151, 1, 1, "", "float"], [151, 1, 1, "", "forward"], [151, 4, 1, "", "full_action_spec"], [151, 4, 1, "", "full_done_spec"], [151, 4, 1, "", "full_reward_spec"], [151, 4, 1, "", "full_state_spec"], [151, 1, 1, "", "get_buffer"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "get_parameter"], [151, 1, 1, "", "get_submodule"], [151, 1, 1, "", "half"], [151, 4, 1, "", "input_spec"], [151, 1, 1, "", "ipu"], [151, 1, 1, "", "load_state_dict"], [151, 1, 1, "", "maybe_reset"], [151, 1, 1, "", "modules"], [151, 1, 1, "", "mtia"], [151, 1, 1, "", "named_buffers"], [151, 1, 1, "", "named_children"], [151, 1, 1, "", "named_modules"], [151, 1, 1, "", "named_parameters"], [151, 4, 1, "", "observation_spec"], [151, 4, 1, "", "output_spec"], [151, 1, 1, "", "parameters"], [151, 1, 1, "", "rand_action"], [151, 1, 1, "", "rand_step"], [151, 1, 1, "", "register_backward_hook"], [151, 1, 1, "", "register_buffer"], [151, 1, 1, "", "register_forward_hook"], [151, 1, 1, "", "register_forward_pre_hook"], [151, 1, 1, "", "register_full_backward_hook"], [151, 1, 1, "", "register_full_backward_pre_hook"], [151, 1, 1, "", "register_gym"], [151, 1, 1, "", "register_load_state_dict_post_hook"], [151, 1, 1, "", "register_load_state_dict_pre_hook"], [151, 1, 1, "", "register_module"], [151, 1, 1, "", "register_parameter"], [151, 1, 1, "", "register_state_dict_post_hook"], [151, 1, 1, "", "register_state_dict_pre_hook"], [151, 1, 1, "", "requires_grad_"], [151, 1, 1, "", "reset"], [151, 4, 1, "", "reset_keys"], [151, 4, 1, "", "reward_key"], [151, 4, 1, "", "reward_keys"], [151, 4, 1, "", "reward_spec"], [151, 1, 1, "", "rollout"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "set_submodule"], [151, 4, 1, "", "shape"], [151, 1, 1, "", "share_memory"], [151, 4, 1, "", "specs"], [151, 1, 1, "", "state_dict"], [151, 4, 1, "", "state_keys"], [151, 4, 1, "", "state_spec"], [151, 1, 1, "", "step"], [151, 1, 1, "", "step_and_maybe_reset"], [151, 1, 1, "", "to"], [151, 1, 1, "", "to_empty"], [151, 1, 1, "", "train"], [151, 1, 1, "", "type"], [151, 1, 1, "", "update_kwargs"], [151, 1, 1, "", "xpu"], [151, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[152, 4, 1, "", "action_key"], [152, 4, 1, "", "action_keys"], [152, 4, 1, "", "action_spec"], [152, 1, 1, "", "add_module"], [152, 1, 1, "", "add_truncated_keys"], [152, 1, 1, "", "append_transform"], [152, 1, 1, "", "apply"], [152, 4, 1, "", "batch_size"], [152, 1, 1, "", "bfloat16"], [152, 1, 1, "", "buffers"], [152, 1, 1, "", "children"], [152, 1, 1, "", "compile"], [152, 1, 1, "", "cpu"], [152, 1, 1, "", "cuda"], [152, 4, 1, "", "done_key"], [152, 4, 1, "", "done_keys"], [152, 4, 1, "", "done_keys_groups"], [152, 4, 1, "", "done_spec"], [152, 1, 1, "", "double"], [152, 1, 1, "", "empty_cache"], [152, 1, 1, "", "eval"], [152, 1, 1, "", "extra_repr"], [152, 1, 1, "", "fake_tensordict"], [152, 1, 1, "", "float"], [152, 1, 1, "", "forward"], [152, 4, 1, "", "full_action_spec"], [152, 4, 1, "", "full_done_spec"], [152, 4, 1, "", "full_reward_spec"], [152, 4, 1, "", "full_state_spec"], [152, 1, 1, "", "get_buffer"], [152, 1, 1, "", "get_extra_state"], [152, 1, 1, "", "get_parameter"], [152, 1, 1, "", "get_submodule"], [152, 1, 1, "", "half"], [152, 4, 1, "", "input_spec"], [152, 1, 1, "", "ipu"], [152, 1, 1, "", "load_state_dict"], [152, 1, 1, "", "maybe_reset"], [152, 1, 1, "", "modules"], [152, 1, 1, "", "mtia"], [152, 1, 1, "", "named_buffers"], [152, 1, 1, "", "named_children"], [152, 1, 1, "", "named_modules"], [152, 1, 1, "", "named_parameters"], [152, 4, 1, "", "observation_spec"], [152, 4, 1, "", "output_spec"], [152, 1, 1, "", "parameters"], [152, 1, 1, "", "rand_action"], [152, 1, 1, "", "rand_step"], [152, 1, 1, "", "register_backward_hook"], [152, 1, 1, "", "register_buffer"], [152, 1, 1, "", "register_forward_hook"], [152, 1, 1, "", "register_forward_pre_hook"], [152, 1, 1, "", "register_full_backward_hook"], [152, 1, 1, "", "register_full_backward_pre_hook"], [152, 1, 1, "", "register_gym"], [152, 1, 1, "", "register_load_state_dict_post_hook"], [152, 1, 1, "", "register_load_state_dict_pre_hook"], [152, 1, 1, "", "register_module"], [152, 1, 1, "", "register_parameter"], [152, 1, 1, "", "register_state_dict_post_hook"], [152, 1, 1, "", "register_state_dict_pre_hook"], [152, 1, 1, "", "requires_grad_"], [152, 1, 1, "", "reset"], [152, 4, 1, "", "reset_keys"], [152, 4, 1, "", "reward_key"], [152, 4, 1, "", "reward_keys"], [152, 4, 1, "", "reward_spec"], [152, 1, 1, "", "rollout"], [152, 1, 1, "", "set_extra_state"], [152, 1, 1, "", "set_seed"], [152, 1, 1, "", "set_submodule"], [152, 4, 1, "", "shape"], [152, 1, 1, "", "share_memory"], [152, 4, 1, "", "specs"], [152, 1, 1, "", "state_dict"], [152, 4, 1, "", "state_keys"], [152, 4, 1, "", "state_spec"], [152, 1, 1, "", "step"], [152, 1, 1, "", "step_and_maybe_reset"], [152, 1, 1, "", "to"], [152, 1, 1, "", "to_empty"], [152, 1, 1, "", "train"], [152, 1, 1, "", "type"], [152, 1, 1, "", "xpu"], [152, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[159, 2, 1, "", "DreamerDecoder"], [160, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[162, 0, 1, "", "ActionDiscretizer"], [163, 0, 1, "", "ActionMask"], [164, 0, 1, "", "AutoResetEnv"], [165, 0, 1, "", "AutoResetTransform"], [166, 0, 1, "", "BatchSizeTransform"], [167, 0, 1, "", "BinarizeReward"], [168, 0, 1, "", "BurnInTransform"], [169, 0, 1, "", "CatFrames"], [170, 0, 1, "", "CatTensors"], [171, 0, 1, "", "CenterCrop"], [172, 0, 1, "", "ClipTransform"], [173, 0, 1, "", "Compose"], [174, 0, 1, "", "Crop"], [175, 0, 1, "", "DTypeCastTransform"], [176, 0, 1, "", "DeviceCastTransform"], [177, 0, 1, "", "DiscreteActionProjection"], [178, 0, 1, "", "DoubleToFloat"], [179, 0, 1, "", "EndOfLifeTransform"], [180, 0, 1, "", "ExcludeTransform"], [181, 0, 1, "", "FiniteTensorDictCheck"], [182, 0, 1, "", "FlattenObservation"], [183, 0, 1, "", "FrameSkipTransform"], [184, 0, 1, "", "GrayScale"], [185, 0, 1, "", "InitTracker"], [186, 0, 1, "", "KLRewardTransform"], [187, 0, 1, "", "NoopResetEnv"], [188, 0, 1, "", "ObservationNorm"], [189, 0, 1, "", "ObservationTransform"], [190, 0, 1, "", "PermuteTransform"], [191, 0, 1, "", "PinMemoryTransform"], [192, 0, 1, "", "R3MTransform"], [193, 0, 1, "", "RandomCropTensorDict"], [194, 0, 1, "", "RemoveEmptySpecs"], [195, 0, 1, "", "RenameTransform"], [196, 0, 1, "", "Resize"], [197, 0, 1, "", "Reward2GoTransform"], [198, 0, 1, "", "RewardClipping"], [199, 0, 1, "", "RewardScaling"], [200, 0, 1, "", "RewardSum"], [201, 0, 1, "", "SelectTransform"], [202, 0, 1, "", "SignTransform"], [203, 0, 1, "", "SqueezeTransform"], [204, 0, 1, "", "StepCounter"], [205, 0, 1, "", "TargetReturn"], [206, 0, 1, "", "TensorDictPrimer"], [207, 0, 1, "", "TimeMaxPool"], [208, 0, 1, "", "ToTensorImage"], [209, 0, 1, "", "Transform"], [210, 0, 1, "", "TransformedEnv"], [211, 0, 1, "", "UnsqueezeTransform"], [212, 0, 1, "", "VC1Transform"], [213, 0, 1, "", "VIPRewardTransform"], [214, 0, 1, "", "VIPTransform"], [215, 0, 1, "", "VecGymEnvTransform"], [216, 0, 1, "", "VecNorm"], [217, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[162, 0, 1, "", "SamplingStrategy"], [162, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[163, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[164, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[165, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_env_batch_size"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[167, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[168, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[171, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[172, 1, 1, "", "transform_observation_spec"], [172, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[173, 1, 1, "", "append"], [173, 1, 1, "", "forward"], [173, 1, 1, "", "insert"], [173, 1, 1, "", "to"], [173, 1, 1, "", "transform_env_batch_size"], [173, 1, 1, "", "transform_env_device"], [173, 1, 1, "", "transform_input_spec"], [173, 1, 1, "", "transform_observation_spec"], [173, 1, 1, "", "transform_output_spec"], [173, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "transform_input_spec"], [175, 1, 1, "", "transform_observation_spec"], [175, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_done_spec"], [176, 1, 1, "", "transform_env_device"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_output_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[177, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "register_keys"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[181, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[183, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[188, 1, 1, "", "init_stats"], [188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[190, 1, 1, "", "transform_input_spec"], [190, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[191, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[192, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[193, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[197, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[198, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[199, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[202, 1, 1, "", "transform_observation_spec"], [202, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_observation_spec"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "to"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[209, 4, 1, "", "container"], [209, 1, 1, "", "forward"], [209, 4, 1, "", "parent"], [209, 1, 1, "", "to"], [209, 1, 1, "", "transform_done_spec"], [209, 1, 1, "", "transform_env_batch_size"], [209, 1, 1, "", "transform_env_device"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"], [209, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[210, 1, 1, "", "add_truncated_keys"], [210, 1, 1, "", "append_transform"], [210, 4, 1, "", "batch_locked"], [210, 4, 1, "", "batch_size"], [210, 1, 1, "", "empty_cache"], [210, 1, 1, "", "eval"], [210, 4, 1, "", "input_spec"], [210, 1, 1, "", "insert_transform"], [210, 1, 1, "", "load_state_dict"], [210, 4, 1, "", "output_spec"], [210, 1, 1, "", "set_missing_tolerance"], [210, 1, 1, "", "set_seed"], [210, 1, 1, "", "state_dict"], [210, 1, 1, "", "to"], [210, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[211, 1, 1, "", "transform_input_spec"], [211, 1, 1, "", "transform_observation_spec"], [211, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "make_noload_model"], [212, 1, 1, "", "to"], [212, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[214, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[216, 1, 1, "", "build_td_for_shared_vecnorm"], [216, 1, 1, "", "forward"], [216, 1, 1, "", "freeze"], [216, 1, 1, "", "frozen_copy"], [216, 1, 1, "", "get_extra_state"], [216, 4, 1, "", "loc"], [216, 4, 1, "", "scale"], [216, 1, 1, "", "set_extra_state"], [216, 4, 1, "", "standard_normal"], [216, 1, 1, "", "to_observation_norm"], [216, 1, 1, "", "transform_observation_spec"], [216, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[218, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[218, 1, 1, "", "add_module"], [218, 1, 1, "", "apply"], [218, 1, 1, "", "bfloat16"], [218, 1, 1, "", "buffers"], [218, 1, 1, "", "children"], [218, 1, 1, "", "compile"], [218, 4, 1, "", "container"], [218, 1, 1, "", "cpu"], [218, 1, 1, "", "cuda"], [218, 1, 1, "", "double"], [218, 1, 1, "", "eval"], [218, 1, 1, "", "extra_repr"], [218, 1, 1, "", "float"], [218, 1, 1, "", "forward"], [218, 1, 1, "", "get_buffer"], [218, 1, 1, "", "get_extra_state"], [218, 1, 1, "", "get_parameter"], [218, 1, 1, "", "get_submodule"], [218, 1, 1, "", "half"], [218, 1, 1, "", "ipu"], [218, 1, 1, "", "load_state_dict"], [218, 1, 1, "", "modules"], [218, 1, 1, "", "mtia"], [218, 4, 1, "", "n_steps"], [218, 1, 1, "", "named_buffers"], [218, 1, 1, "", "named_children"], [218, 1, 1, "", "named_modules"], [218, 1, 1, "", "named_parameters"], [218, 1, 1, "", "parameters"], [218, 4, 1, "", "parent"], [218, 1, 1, "", "register_backward_hook"], [218, 1, 1, "", "register_buffer"], [218, 1, 1, "", "register_forward_hook"], [218, 1, 1, "", "register_forward_pre_hook"], [218, 1, 1, "", "register_full_backward_hook"], [218, 1, 1, "", "register_full_backward_pre_hook"], [218, 1, 1, "", "register_load_state_dict_post_hook"], [218, 1, 1, "", "register_load_state_dict_pre_hook"], [218, 1, 1, "", "register_module"], [218, 1, 1, "", "register_parameter"], [218, 1, 1, "", "register_state_dict_post_hook"], [218, 1, 1, "", "register_state_dict_pre_hook"], [218, 1, 1, "", "requires_grad_"], [218, 1, 1, "", "set_extra_state"], [218, 1, 1, "", "set_submodule"], [218, 1, 1, "", "share_memory"], [218, 1, 1, "", "state_dict"], [218, 1, 1, "", "to"], [218, 1, 1, "", "to_empty"], [218, 1, 1, "", "train"], [218, 1, 1, "", "transform_done_spec"], [218, 1, 1, "", "transform_env_batch_size"], [218, 1, 1, "", "transform_env_device"], [218, 1, 1, "", "transform_input_spec"], [218, 1, 1, "", "transform_observation_spec"], [218, 1, 1, "", "transform_output_spec"], [218, 1, 1, "", "transform_reward_spec"], [218, 1, 1, "", "type"], [218, 1, 1, "", "xpu"], [218, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[219, 2, 1, "", "RandomPolicy"], [220, 2, 1, "", "check_env_specs"], [221, 2, 1, "", "exploration_type"], [222, 2, 1, "", "get_available_libraries"], [223, 2, 1, "", "make_composite_from_td"], [224, 2, 1, "", "set_exploration_type"], [225, 2, 1, "", "step_mdp"], [226, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[227, 0, 1, "", "AdditiveGaussianModule"], [228, 0, 1, "", "AdditiveGaussianWrapper"], [229, 0, 1, "", "BatchRenorm1d"], [230, 0, 1, "", "CEMPlanner"], [231, 0, 1, "", "ConsistentDropoutModule"], [232, 0, 1, "", "Conv3dNet"], [233, 0, 1, "", "ConvNet"], [234, 0, 1, "", "DTActor"], [235, 0, 1, "", "DdpgCnnActor"], [236, 0, 1, "", "DdpgCnnQNet"], [237, 0, 1, "", "DdpgMlpActor"], [238, 0, 1, "", "DdpgMlpQNet"], [239, 0, 1, "", "DecisionTransformer"], [240, 0, 1, "", "Delta"], [241, 0, 1, "", "DistributionalDQNnet"], [242, 0, 1, "", "DistributionalQValueHook"], [243, 0, 1, "", "DreamerActor"], [244, 0, 1, "", "DuelingCnnDQNet"], [245, 0, 1, "", "EGreedyModule"], [246, 0, 1, "", "EGreedyWrapper"], [247, 0, 1, "", "GRU"], [248, 0, 1, "", "GRUCell"], [249, 0, 1, "", "GRUModule"], [250, 0, 1, "", "IndependentNormal"], [251, 0, 1, "", "LSTM"], [252, 0, 1, "", "LSTMCell"], [253, 0, 1, "", "LSTMModule"], [254, 0, 1, "", "MLP"], [255, 0, 1, "", "MPCPlannerBase"], [256, 0, 1, "", "MPPIPlanner"], [257, 0, 1, "", "MaskedCategorical"], [258, 0, 1, "", "MaskedOneHotCategorical"], [259, 0, 1, "", "MultiAgentConvNet"], [260, 0, 1, "", "MultiAgentMLP"], [261, 0, 1, "", "MultiAgentNetBase"], [262, 0, 1, "", "NoisyLazyLinear"], [263, 0, 1, "", "NoisyLinear"], [264, 0, 1, "", "NormalParamWrapper"], [265, 0, 1, "", "ObsDecoder"], [266, 0, 1, "", "ObsEncoder"], [267, 0, 1, "", "OneHotCategorical"], [268, 0, 1, "", "OneHotOrdinal"], [269, 0, 1, "", "OnlineDTActor"], [270, 0, 1, "", "Ordinal"], [271, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [272, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [273, 0, 1, "", "QMixer"], [274, 0, 1, "", "QValueHook"], [275, 0, 1, "", "RSSMPosterior"], [276, 0, 1, "", "RSSMPrior"], [277, 0, 1, "", "Squeeze2dLayer"], [278, 0, 1, "", "SqueezeLayer"], [279, 0, 1, "", "TanhDelta"], [280, 0, 1, "", "TanhNormal"], [281, 0, 1, "", "TruncatedNormal"], [282, 0, 1, "", "VDNMixer"], [283, 0, 1, "", "VmapModule"], [284, 0, 1, "", "reset_noise"]], "torchrl.modules.AdditiveGaussianModule": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[229, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[230, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropoutModule": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[232, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[233, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[234, 1, 1, "", "default_config"], [234, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[235, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[236, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[237, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[238, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[239, 0, 1, "", "DTConfig"], [239, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[240, 1, 1, "", "log_prob"], [240, 4, 1, "", "mean"], [240, 4, 1, "", "mode"], [240, 1, 1, "", "rsample"], [240, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[241, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[243, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[244, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "step"]], "torchrl.modules.GRU": [[247, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[248, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[249, 1, 1, "", "forward"], [249, 1, 1, "id0", "make_tensordict_primer"], [249, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[250, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[251, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[252, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[253, 1, 1, "", "forward"], [253, 1, 1, "id0", "make_tensordict_primer"], [253, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[254, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[256, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[257, 1, 1, "", "log_prob"], [257, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[258, 1, 1, "", "log_prob"], [258, 4, 1, "", "mode"], [258, 1, 1, "", "rsample"], [258, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "from_stateful_net"], [261, 1, 1, "", "get_stateful_net"], [261, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[262, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[264, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[265, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[266, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[267, 1, 1, "", "log_prob"], [267, 4, 1, "", "mode"], [267, 1, 1, "", "rsample"], [267, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[269, 1, 1, "", "default_config"], [269, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[273, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[275, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[276, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[278, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[279, 4, 1, "", "mean"], [279, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[280, 1, 1, "", "get_mode"], [280, 4, 1, "", "mean"], [280, 4, 1, "", "mode"], [280, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[281, 1, 1, "", "log_prob"], [281, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[282, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[283, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[285, 0, 1, "", "Actor"], [286, 0, 1, "", "ActorCriticOperator"], [287, 0, 1, "", "ActorCriticWrapper"], [288, 0, 1, "", "ActorValueOperator"], [289, 0, 1, "", "DecisionTransformerInferenceWrapper"], [290, 0, 1, "", "DistributionalQValueActor"], [291, 0, 1, "", "DistributionalQValueModule"], [292, 0, 1, "", "LMHeadActorValueOperator"], [293, 0, 1, "", "MultiStepActorWrapper"], [294, 0, 1, "", "ProbabilisticActor"], [295, 0, 1, "", "QValueActor"], [296, 0, 1, "", "QValueModule"], [297, 0, 1, "", "SafeModule"], [298, 0, 1, "", "SafeProbabilisticModule"], [299, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [300, 0, 1, "", "SafeSequential"], [301, 0, 1, "", "TanhModule"], [302, 0, 1, "", "ValueOperator"], [303, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[286, 1, 1, "", "get_critic_operator"], [286, 1, 1, "", "get_policy_head"], [286, 1, 1, "", "get_value_head"], [286, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[287, 1, 1, "", "get_policy_head"], [287, 1, 1, "", "get_policy_operator"], [287, 1, 1, "", "get_value_head"], [287, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[288, 1, 1, "", "get_policy_head"], [288, 1, 1, "", "get_policy_operator"], [288, 1, 1, "", "get_value_head"], [288, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "mask_context"], [289, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[291, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[293, 1, 1, "", "forward"], [293, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[296, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[297, 1, 1, "", "random"], [297, 1, 1, "", "random_sample"], [297, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[298, 1, 1, "", "random"], [298, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[301, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[303, 1, 1, "", "get_reward_operator"], [303, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[304, 0, 1, "", "biased_softplus"], [305, 0, 1, "", "get_primers_from_module"], [306, 0, 1, "", "inv_softplus"], [307, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[304, 1, 1, "", "forward"]], "torchrl.objectives": [[308, 0, 1, "", "A2CLoss"], [309, 0, 1, "", "CQLLoss"], [310, 0, 1, "", "ClipPPOLoss"], [311, 0, 1, "", "CrossQLoss"], [312, 0, 1, "", "DDPGLoss"], [313, 0, 1, "", "DQNLoss"], [314, 0, 1, "", "DTLoss"], [315, 0, 1, "", "DiscreteCQLLoss"], [316, 0, 1, "", "DiscreteIQLLoss"], [317, 0, 1, "", "DiscreteSACLoss"], [318, 0, 1, "", "DistributionalDQNLoss"], [319, 0, 1, "", "DreamerActorLoss"], [320, 0, 1, "", "DreamerModelLoss"], [321, 0, 1, "", "DreamerValueLoss"], [322, 0, 1, "", "GAILLoss"], [323, 0, 1, "", "HardUpdate"], [324, 0, 1, "", "IQLLoss"], [325, 0, 1, "", "KLPENPPOLoss"], [326, 0, 1, "", "LossModule"], [327, 0, 1, "", "OnlineDTLoss"], [328, 0, 1, "", "PPOLoss"], [329, 0, 1, "", "REDQLoss"], [330, 0, 1, "", "ReinforceLoss"], [331, 0, 1, "", "SACLoss"], [332, 0, 1, "", "SoftUpdate"], [333, 0, 1, "", "TD3BCLoss"], [334, 0, 1, "", "TD3Loss"], [335, 0, 1, "", "ValueEstimators"], [336, 0, 1, "", "default_value_kwargs"], [337, 0, 1, "", "distance_loss"], [338, 0, 1, "", "hold_out_net"], [339, 0, 1, "", "hold_out_params"], [341, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[308, 1, 1, "", "forward"], [308, 4, 1, "", "functional"], [308, 1, 1, "", "loss_critic"], [308, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[310, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[311, 1, 1, "", "actor_loss"], [311, 1, 1, "", "alpha_loss"], [311, 1, 1, "", "forward"], [311, 1, 1, "", "load_state_dict"], [311, 1, 1, "", "make_value_estimator"], [311, 1, 1, "", "qvalue_loss"], [311, 1, 1, "", "state_dict"], [311, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[312, 1, 1, "", "forward"], [312, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[314, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[316, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[318, 1, 1, "", "forward"], [318, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[320, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[321, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[322, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[324, 1, 1, "", "forward"], [324, 1, 1, "", "loss_value_diff"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[325, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[326, 1, 1, "", "convert_to_functional"], [326, 1, 1, "", "forward"], [326, 1, 1, "", "from_stateful_net"], [326, 4, 1, "", "functional"], [326, 1, 1, "", "get_stateful_net"], [326, 1, 1, "", "make_value_estimator"], [326, 1, 1, "", "named_parameters"], [326, 1, 1, "", "parameters"], [326, 1, 1, "", "set_keys"], [326, 4, 1, "", "value_estimator"], [326, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[327, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[328, 1, 1, "", "forward"], [328, 4, 1, "", "functional"], [328, 1, 1, "", "loss_critic"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[329, 1, 1, "", "forward"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[330, 1, 1, "", "forward"], [330, 4, 1, "", "functional"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[331, 1, 1, "", "forward"], [331, 1, 1, "", "load_state_dict"], [331, 1, 1, "", "make_value_estimator"], [331, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[333, 1, 1, "", "actor_loss"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "make_value_estimator"], [333, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[334, 1, 1, "", "forward"], [334, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[340, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[340, 1, 1, "", "forward"], [340, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[342, 0, 1, "", "GAE"], [343, 0, 1, "", "TD0Estimator"], [344, 0, 1, "", "TD1Estimator"], [345, 0, 1, "", "TDLambdaEstimator"], [346, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[342, 1, 1, "", "forward"], [342, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[343, 1, 1, "", "forward"], [343, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[344, 1, 1, "", "forward"], [344, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[345, 1, 1, "", "forward"], [345, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[346, 1, 1, "", "forward"], [346, 1, 1, "", "set_keys"], [346, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[347, 0, 1, "", "generalized_advantage_estimate"], [348, 0, 1, "", "reward2go"], [349, 0, 1, "", "td0_advantage_estimate"], [350, 0, 1, "", "td0_return_estimate"], [351, 0, 1, "", "td1_advantage_estimate"], [352, 0, 1, "", "td1_return_estimate"], [353, 0, 1, "", "td_lambda_advantage_estimate"], [354, 0, 1, "", "td_lambda_return_estimate"], [355, 0, 1, "", "vec_generalized_advantage_estimate"], [356, 0, 1, "", "vec_td1_advantage_estimate"], [357, 0, 1, "", "vec_td1_return_estimate"], [358, 0, 1, "", "vec_td_lambda_advantage_estimate"], [359, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[360, 2, 1, "", "PixelRenderTransform"], [361, 2, 1, "", "TensorDictRecorder"], [362, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[363, 2, 1, "", "Logger"], [365, 2, 1, "", "generate_exp_name"], [366, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[364, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[367, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[368, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[369, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[370, 0, 1, "", "BatchSubSampler"], [371, 0, 1, "", "ClearCudaCache"], [372, 0, 1, "", "CountFramesLog"], [373, 0, 1, "", "LogReward"], [374, 0, 1, "", "OptimizerHook"], [375, 0, 1, "", "Recorder"], [376, 0, 1, "", "ReplayBufferTrainer"], [377, 0, 1, "", "RewardNormalizer"], [378, 0, 1, "", "SelectKeys"], [379, 0, 1, "", "Trainer"], [380, 0, 1, "", "TrainerHookBase"], [381, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[370, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[371, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[372, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[373, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[374, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[375, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[376, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[377, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[378, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[380, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[381, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[382, 2, 1, "", "correct_for_frame_skip"], [383, 2, 1, "", "get_stats_random_rollout"], [384, 2, 1, "", "make_collector_offpolicy"], [385, 2, 1, "", "make_collector_onpolicy"], [386, 2, 1, "", "make_dqn_loss"], [387, 2, 1, "", "make_replay_buffer"], [388, 2, 1, "", "make_target_updater"], [389, 2, 1, "", "make_trainer"], [390, 2, 1, "", "parallel_env_constructor"], [391, 2, 1, "", "sync_async_collector"], [392, 2, 1, "", "sync_sync_collector"], [393, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 397, 398, 399, 400, 402, 403, 404, 407, 414, 415, 416, 420, 421], "instal": [0, 6, 7, 420], "get": [0, 406, 407, 408, 409, 410, 411], "start": [0, 406, 407, 408, 409, 410, 411], "tutori": [0, 404, 414, 415], "basic": [0, 418], "intermedi": [0, 8], "advanc": 0, "refer": [0, 395], "knowledg": [0, 396], "base": [0, 2, 7, 396], "indic": 0, "tabl": 0, "collector": [1, 402, 403, 404, 405, 409, 411, 414, 415, 420], "packag": [1, 2, 3, 397, 398, 399, 400], "batch": [1, 402, 416, 418], "size": [1, 402, 418], "polici": [1, 2, 4, 402, 404, 405, 407, 411, 413, 414, 415, 416], "copi": 1, "replai": [1, 2, 402, 403, 404, 405, 409, 411, 414, 415, 418, 420], "buffer": [1, 2, 402, 403, 404, 405, 409, 411, 414, 415, 418, 420], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 402, 403, 404, 409, 411, 414, 415, 420], "distribut": [1, 397], "helper": [1, 3], "function": [1, 4, 398, 403, 404, 408, 414, 415, 420], "compos": [2, 173], "support": 2, "type": 2, "choos": 2, "storag": [2, 108, 402, 409, 418], "sampl": [2, 418], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 403, 418], "trajectori": [2, 418], "checkpoint": [2, 399], "episod": [2, 4], "format": 2, "ted": [2, 406], "The": [2, 402], "rational": 2, "behind": 2, "structur": [2, 418], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 397, 418, 420], "special": [2, 407, 420], "case": 2, "footnot": 2, "multi": [2, 3, 397, 398, 413, 414, 415], "agent": [2, 3, 4, 397, 398, 414, 415], "present": 2, "rnn": 2, "transform": [2, 3, 209, 402, 404, 406, 414, 415, 416, 418, 420, 421], "step": [2, 402, 404, 406, 409, 414, 415, 418, 421], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 69], "numer": 2, "subclass": 2, "categor": [2, 30], "tree": 2, "forest": 2, "reinforc": [2, 398, 404, 414, 415], "learn": [2, 4, 404, 414, 415], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 397, 398, 399, 414], "env": [3, 416, 420, 421], "vector": [3, 420], "custom": [3, 11, 416, 418], "nativ": 3, "environ": [3, 4, 6, 7, 402, 403, 404, 405, 406, 411, 413, 414, 415, 416, 420, 421], "auto": 3, "reset": [3, 416, 421], "dynam": [3, 4, 418], "spec": [3, 416, 421], "forward": [3, 4, 402], "invers": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 405, 416], "record": [3, 375, 399, 402, 410], "video": [3, 11, 410], "domain": [3, 397], "specif": [3, 397, 413], "librari": [3, 420], "thing": [4, 402, 416], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 406, 408, 420], "gener": [4, 11, 397], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 402, 411, 416], "algorithm": [4, 397], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 402, 403, 408, 411], "return": [4, 398], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 420], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 413], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 402, 403, 404], "standard": 4, "explor": [4, 397, 402, 403, 407], "valu": [4, 397, 398, 402, 404, 405, 407], "loss": [4, 402, 403, 404, 405, 411, 414, 415], "earli": 4, "train": [4, 8, 398, 402, 404, 405, 408, 411, 414, 415, 416], "roughli": 4, "uniformli": 4, "random": [4, 398, 414, 415], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 403], "increas": 4, "an": [4, 404, 405, 406, 416], "can": 4, "low": 4, "model": [4, 397, 402, 403, 405, 408, 417, 420], "also": 4, "us": [4, 6, 9, 405, 417, 418, 420], "offlin": 4, "observ": [4, 402], "space": 4, "effect": [4, 416], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 421], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 402], "render": [7, 11, 411, 414, 415, 421], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 402], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 416], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 403, 418], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": 25, "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 41, "multidiscretetensorspec": 42, "multionehot": 43, "multionehotdiscretetensorspec": 44, "multistep": 45, "nested2t": 46, "nontensor": 47, "nontensorspec": 48, "onehotdiscretetensorspec": 49, "pairwisedataset": 50, "prioritizedreplaybuff": 51, "promptdata": 52, "prompttensordicttoken": 53, "querymodul": 54, "randomprojectionhash": 55, "replaybuff": 56, "rewarddata": 57, "rolloutfrommodel": 58, "siphash": 59, "stack": 60, "stackedcomposit": 61, "ted2flat": 62, "ted2nest": 63, "tensordictmap": 64, "tensordictprioritizedreplaybuff": 65, "tensordictreplaybuff": 66, "tensordicttoken": 67, "tensormap": 68, "tokenizeddatasetload": 70, "unbound": 71, "unboundedcontinu": 72, "unboundedcontinuoustensorspec": 73, "unboundeddiscret": 74, "unboundeddiscretetensorspec": 75, "check_no_exclusive_kei": 76, "consolidate_spec": 77, "contains_lazy_spec": 78, "create_infinite_iter": 79, "ataridqnexperiencereplai": 80, "basedatasetexperiencereplai": 81, "d4rlexperiencereplai": 82, "gendgrlexperiencereplai": 83, "minariexperiencereplai": 84, "openmlexperiencereplai": 85, "openxexperiencereplai": 86, "robosetexperiencereplai": 87, "vd4rlexperiencereplai": 88, "get_dataload": 89, "flatstoragecheckpoint": 90, "h5storagecheckpoint": 91, "immutabledatasetwrit": 92, "lazymemmapstorag": 93, "lazytensorstorag": 94, "liststorag": 95, "liststoragecheckpoint": 96, "nestedstoragecheckpoint": 97, "prioritizedsampl": 98, "prioritizedslicesampl": 99, "randomsampl": 100, "replaybufferensembl": 101, "roundrobinwrit": 102, "sampler": 103, "samplerensembl": 104, "samplerwithoutreplac": 105, "slicesampl": 106, "slicesamplerwithoutreplac": 107, "storagecheckpointerbas": 109, "storageensembl": 110, "storageensemblecheckpoint": 111, "tensordictmaxvaluewrit": 112, "tensordictroundrobinwrit": 113, "tensorstorag": 114, "tensorstoragecheckpoint": 115, "writer": 116, "writerensembl": 117, "braxenv": 118, "braxwrapp": 119, "dmcontrolenv": 120, "dmcontrolwrapp": 121, "envbas": [122, 416], "envcreat": 123, "envmetadata": 124, "gymenv": 125, "gymlikeenv": 126, "gymwrapp": 127, "habitatenv": 128, "isaacgymenv": 129, "isaacgymwrapp": 130, "jumanjienv": 131, "jumanjiwrapp": 132, "mogymenv": 133, "mogymwrapp": 134, "marlgroupmaptyp": 135, "meltingpotenv": 136, "meltingpotwrapp": 137, "modelbasedenvbas": 138, "multithreadedenv": 139, "multithreadedenvwrapp": 140, "openmlenv": 141, "openspielenv": 142, "openspielwrapp": 143, "parallelenv": 144, "pendulumenv": 145, "pettingzooenv": 146, "pettingzoowrapp": 147, "robohiveenv": 148, "smacv2env": 149, "smacv2wrapp": 150, "serialenv": 151, "tictactoeenv": 152, "unitymlagentsenv": 153, "unitymlagentswrapp": 154, "vmasenv": 155, "vmaswrapp": 156, "check_marl_group": 157, "gym_backend": 158, "dreamerdecod": 159, "dreamerenv": 160, "set_gym_backend": 161, "actiondiscret": 162, "actionmask": 163, "autoresetenv": 164, "autoresettransform": 165, "batchsizetransform": 166, "binarizereward": 167, "burnintransform": 168, "catfram": [169, 418], "cattensor": 170, "centercrop": 171, "cliptransform": 172, "crop": 174, "dtypecasttransform": 175, "devicecasttransform": 176, "discreteactionproject": 177, "doubletofloat": 178, "endoflifetransform": 179, "excludetransform": 180, "finitetensordictcheck": 181, "flattenobserv": 182, "frameskiptransform": 183, "grayscal": 184, "inittrack": 185, "klrewardtransform": 186, "noopresetenv": 187, "observationnorm": 188, "observationtransform": 189, "permutetransform": 190, "pinmemorytransform": 191, "r3mtransform": 192, "randomcroptensordict": 193, "removeemptyspec": 194, "renametransform": 195, "resiz": 196, "reward2gotransform": 197, "rewardclip": 198, "rewardsc": 199, "rewardsum": 200, "selecttransform": 201, "signtransform": 202, "squeezetransform": 203, "stepcount": 204, "targetreturn": 205, "tensordictprim": 206, "timemaxpool": 207, "totensorimag": 208, "transformedenv": 210, "unsqueezetransform": 211, "vc1transform": 212, "viprewardtransform": 213, "viptransform": 214, "vecgymenvtransform": 215, "vecnorm": [216, 421], "gsdenois": 217, "multisteptransform": 218, "randompolici": 219, "check_env_spec": 220, "exploration_typ": 221, "get_available_librari": 222, "make_composite_from_td": 223, "set_exploration_typ": 224, "step_mdp": 225, "terminated_or_trunc": 226, "additivegaussianmodul": 227, "additivegaussianwrapp": 228, "batchrenorm1d": 229, "cemplann": 230, "consistentdropoutmodul": 231, "conv3dnet": 232, "convnet": 233, "dtactor": 234, "ddpgcnnactor": 235, "ddpgcnnqnet": 236, "ddpgmlpactor": 237, "ddpgmlpqnet": 238, "decisiontransform": 239, "delta": 240, "distributionaldqnnet": 241, "distributionalqvaluehook": 242, "dreameractor": 243, "duelingcnndqnet": 244, "egreedymodul": 245, "egreedywrapp": 246, "gru": 247, "grucel": 248, "grumodul": 249, "independentnorm": 250, "lstm": [251, 405], "lstmcell": 252, "lstmmodul": 253, "mlp": [254, 405], "mpcplannerbas": 255, "mppiplann": 256, "maskedcategor": 257, "maskedonehotcategor": 258, "multiagentconvnet": 259, "multiagentmlp": 260, "multiagentnetbas": 261, "noisylazylinear": 262, "noisylinear": 263, "normalparamwrapp": 264, "obsdecod": 265, "obsencod": 266, "onehotcategor": 267, "onehotordin": 268, "onlinedtactor": 269, "ordin": 270, "ornsteinuhlenbeckprocessmodul": 271, "ornsteinuhlenbeckprocesswrapp": 272, "qmixer": [273, 398], "qvaluehook": 274, "rssmposterior": 275, "rssmprior": 276, "squeeze2dlay": 277, "squeezelay": 278, "tanhdelta": 279, "tanhnorm": 280, "truncatednorm": 281, "vdnmixer": 282, "vmapmodul": 283, "reset_nois": 284, "actor": [285, 397, 402, 407], "actorcriticoper": 286, "actorcriticwrapp": 287, "actorvalueoper": 288, "decisiontransformerinferencewrapp": 289, "distributionalqvalueactor": 290, "distributionalqvaluemodul": 291, "lmheadactorvalueoper": 292, "multistepactorwrapp": 293, "probabilisticactor": 294, "qvalueactor": 295, "qvaluemodul": 296, "safemodul": [297, 397], "safeprobabilisticmodul": 298, "safeprobabilistictensordictsequenti": 299, "safesequenti": 300, "tanhmodul": 301, "valueoper": 302, "worldmodelwrapp": 303, "biased_softplu": 304, "get_primers_from_modul": 305, "inv_softplu": 306, "map": [307, 414], "a2closs": 308, "cqlloss": 309, "clipppoloss": 310, "crossqloss": 311, "ddpgloss": 312, "dqnloss": 313, "dtloss": 314, "discretecqlloss": 315, "discreteiqlloss": 316, "discretesacloss": 317, "distributionaldqnloss": 318, "dreameractorloss": 319, "dreamermodelloss": 320, "dreamervalueloss": 321, "gailloss": 322, "hardupd": 323, "iqlloss": 324, "klpenppoloss": 325, "lossmodul": [326, 402, 408], "onlinedtloss": 327, "ppoloss": 328, "redqloss": 329, "reinforceloss": 330, "sacloss": 331, "softupd": 332, "td3bcloss": 333, "td3loss": 334, "valueestim": 335, "default_value_kwarg": 336, "distance_loss": 337, "hold_out_net": 338, "hold_out_param": 339, "qmixerloss": 340, "next_state_valu": 341, "gae": 342, "td0estim": 343, "td1estim": 344, "tdlambdaestim": 345, "valueestimatorbas": 346, "generalized_advantage_estim": 347, "reward2go": 348, "td0_advantage_estim": 349, "td0_return_estim": 350, "td1_advantage_estim": 351, "td1_return_estim": 352, "td_lambda_advantage_estim": 353, "td_lambda_return_estim": 354, "vec_generalized_advantage_estim": 355, "vec_td1_advantage_estim": 356, "vec_td1_return_estim": 357, "vec_td_lambda_advantage_estim": 358, "vec_td_lambda_return_estim": 359, "pixelrendertransform": 360, "tensordictrecord": 361, "videorecord": 362, "logger": [363, 399, 410, 411], "csvlogger": 364, "generate_exp_nam": 365, "get_logg": 366, "mlflowlogg": 367, "tensorboardlogg": 368, "wandblogg": 369, "batchsubsampl": 370, "clearcudacach": 371, "countframeslog": 372, "logreward": 373, "optimizerhook": 374, "replaybuffertrain": 376, "rewardnorm": 377, "selectkei": 378, "trainer": [379, 399, 403], "trainerhookbas": 380, "updateweight": 381, "correct_for_frame_skip": 382, "get_stats_random_rollout": 383, "make_collector_offpolici": 384, "make_collector_onpolici": 385, "make_dqn_loss": 386, "make_replay_buff": 387, "make_target_updat": 388, "make_train": 389, "parallel_env_constructor": 390, "sync_async_collector": 391, "sync_sync_collector": 392, "transformed_env_constructor": 393, "readm": [394, 412], "tuto": [394, 412], "api": 395, "contribut": [396, 420], "content": 396, "modul": [397, 402, 405, 407, 411, 420], "tensordictmodul": [397, 407, 420], "wrapper": [397, 407], "probabilist": [397, 407], "q": [397, 403, 405, 407], "oper": 397, "join": 397, "hook": [397, 399, 403], "regular": 397, "planner": 397, "object": [398, 402, 408, 420], "torch": 398, "vmap": 398, "dqn": [398, 403, 405], "ddpg": [398, 402, 414], "sac": 398, "redq": 398, "crossq": 398, "iql": 398, "cql": 398, "gail": 398, "dt": 398, "td3": 398, "bc": 398, "ppo": [398, 404, 415], "a2c": 398, "dreamer": 398, "builder": 399, "_util": 400, "comput": [401, 403, 416, 419], "time": [401, 402, 419], "code": [402, 416], "overview": [402, 405], "setup": [402, 405], "__init__": 402, "method": 402, "estim": 402, "put": 402, "togeth": [402, 416], "call": 402, "parallel": [402, 413, 421], "execut": [402, 413, 416], "stat": 402, "build": [402, 403, 411, 418], "evalu": 402, "construct": 402, "target": [402, 403, 408], "network": [402, 403, 404, 405, 407, 414, 415], "updat": 402, "experi": [402, 416], "result": [402, 404, 414, 415], "conclus": [402, 403, 404, 405, 414, 415, 416, 418], "next": [402, 404, 406, 409, 414, 415, 418], "A": [403, 418], "deep": 403, "collect": [403, 404, 409], "paramet": [403, 404, 408], "hyperparamet": [403, 404, 414, 415], "regist": 403, "possibl": 403, "improv": 403, "defin": [404, 414, 415], "loop": [404, 405, 411, 414, 415, 416], "recurr": 405, "convolut": 405, "select": 405, "further": [405, 408], "read": 405, "creat": 406, "run": [406, 421], "rollout": [406, 413, 414, 415, 416, 421], "s": [407, 408], "output": 408, "consider": 408, "log": 410, "own": 411, "first": 411, "design": 411, "divers": 413, "competit": 414, "group": 414, "critic": [414, 415], "pendulum": 416, "write": 416, "_step": 416, "simul": 416, "_reset": 416, "metadata": 416, "_spec": 416, "shape": 416, "seed": [416, 421], "wrap": 416, "class": [416, 420], "test": 416, "our": 416, "simpl": 416, "pretrain": 417, "vanilla": 418, "integr": 418, "tensorclass": 418, "other": 418, "tensor": 418, "pytre": 418, "iter": 418, "over": 418, "fix": 418, "priorit": 418, "save": 418, "raw": 418, "imag": 418, "more": 418, "complex": 418, "introduct": 420, "config": 420, "sequenc": 420, "program": 420, "ensembl": 420, "meta": 420, "state": 420, "frame_skip": 421, "deepmind": 421, "control": 421, "devic": 421, "close": 421, "access": 421, "attribut": 421, "kwarg": 421}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})