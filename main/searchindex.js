Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 105, 106, 108, 109, 110, 111, 112, 115, 118, 123, 125, 126, 128, 129, 131, 134, 136, 137, 140, 146, 147, 151, 152, 153, 154, 156, 164, 165, 166, 167, 168, 169, 171, 174, 175, 177, 179, 189, 190, 192, 193, 194, 195, 202, 204, 206, 208, 209, 210, 214, 215, 216, 227, 228, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 257, 261, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 311, 313, 316, 320, 325, 326, 330, 331, 334, 341, 342, 343, 344, 347, 348, 349, 353, 354, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 371, 372], "open": [0, 5, 7, 11, 36, 38, 41, 60, 354, 365, 366, 371], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372], "reinforc": [0, 3, 9, 57, 103, 104, 129, 192, 193, 194, 195, 199, 242, 247, 262, 263, 267, 268, 269, 271, 275, 276, 282, 283, 284, 346, 352, 354, 357, 358, 363, 367, 370, 371], "learn": [0, 3, 7, 8, 9, 17, 33, 57, 58, 59, 61, 62, 103, 104, 108, 129, 192, 193, 194, 195, 199, 211, 217, 242, 247, 262, 263, 267, 268, 269, 271, 275, 276, 281, 282, 283, 284, 346, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 371, 372], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 54, 105, 164, 217, 235, 248, 256, 262, 264, 277, 278, 280, 282, 321, 345, 347, 348, 349, 350, 353, 354, 355, 360, 361, 363, 365, 366, 368, 369, 372], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 39, 45, 87, 88, 97, 106, 182, 346, 347, 348, 351, 353, 354, 355, 357, 358, 360, 365, 366, 367, 372], "pytorch": [0, 1, 2, 3, 58, 116, 117, 167, 179, 202, 206, 216, 217, 330, 345, 347, 350, 353, 355, 356, 357, 359, 360, 361, 363, 365, 366, 367, 368, 371, 372], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 33, 45, 57, 89, 93, 97, 102, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 122, 175, 177, 206, 320, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 92, 93, 97, 98, 99, 102, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 122, 123, 125, 126, 128, 129, 132, 133, 134, 136, 137, 138, 146, 147, 151, 152, 156, 159, 163, 164, 165, 168, 169, 171, 173, 175, 177, 179, 187, 188, 189, 190, 192, 202, 204, 205, 206, 208, 210, 211, 214, 215, 217, 218, 231, 233, 235, 239, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 311, 313, 320, 326, 342, 343, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "directli": [0, 3, 4, 8, 22, 54, 71, 85, 86, 89, 92, 93, 105, 109, 115, 156, 174, 278, 344, 348, 354, 355, 357, 365, 366, 367, 369], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 144, 145, 147, 149, 151, 152, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 183, 186, 187, 188, 189, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 218, 221, 222, 223, 224, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 285, 287, 291, 292, 293, 294, 295, 296, 299, 311, 312, 313, 321, 327, 330, 333, 334, 338, 340, 341, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372], "pypi": [0, 2, 371], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 76, 89, 93, 96, 99, 103, 104, 106, 109, 110, 111, 112, 115, 116, 117, 133, 151, 165, 167, 168, 169, 171, 173, 176, 177, 189, 190, 202, 205, 206, 209, 215, 216, 223, 231, 232, 236, 238, 251, 252, 313, 320, 327, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 369, 372], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 80, 89, 93, 96, 97, 99, 103, 104, 109, 110, 111, 112, 115, 116, 117, 167, 171, 176, 177, 199, 206, 209, 216, 218, 235, 239, 241, 242, 251, 256, 262, 271, 278, 280, 293, 298, 306, 320, 325, 347, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 372], "about": [0, 3, 5, 7, 9, 17, 18, 19, 45, 58, 61, 62, 349, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 371, 372], "instruct": [0, 6, 7, 10, 21, 56, 136, 138, 353, 354, 355, 356, 365, 366, 369], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 109, 115, 236, 237, 238, 348, 353, 357, 359, 360, 362, 364, 366], "section": [0, 2, 3, 4, 23, 202, 206, 354, 357, 362, 365, 366], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 40, 63, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 189, 190, 202, 205, 206, 209, 215, 231, 251, 327, 353, 354, 355, 356, 357, 365, 367], "pip": [0, 10, 59, 357, 358, 359, 360, 361, 362, 366, 371, 372], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 47, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 70, 71, 74, 76, 77, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 105, 106, 107, 109, 110, 111, 112, 115, 126, 128, 129, 130, 131, 132, 134, 137, 141, 146, 147, 149, 151, 152, 155, 156, 159, 160, 164, 165, 166, 169, 171, 173, 174, 175, 177, 187, 189, 190, 196, 199, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 233, 235, 239, 242, 243, 244, 246, 247, 248, 249, 250, 255, 262, 263, 264, 265, 266, 268, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 317, 321, 327, 334, 340, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "python": [0, 3, 5, 6, 7, 10, 13, 14, 20, 107, 122, 202, 203, 204, 206, 207, 208, 212, 213, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 76, 77, 80, 82, 89, 93, 99, 109, 115, 125, 126, 129, 130, 141, 147, 151, 152, 167, 169, 171, 190, 202, 204, 206, 208, 209, 214, 215, 216, 220, 235, 240, 241, 242, 248, 249, 251, 252, 264, 273, 277, 278, 280, 312, 313, 329, 348, 352, 353, 354, 355, 356, 357, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "low": [0, 25, 89, 93, 109, 115, 132, 136, 183, 242, 248, 255, 353, 354, 355, 365, 366, 367, 371, 372], "high": [0, 9, 25, 36, 38, 41, 43, 89, 93, 109, 115, 132, 136, 146, 183, 242, 248, 255, 293, 298, 306, 353, 354, 355, 365, 366, 367, 369, 371, 372], "level": [0, 2, 3, 4, 21, 26, 29, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 129, 163, 277, 353, 354, 360, 371], "abstract": [0, 3, 8, 24, 25, 26, 28, 29, 30, 31, 34, 46, 48, 49, 54, 55, 59, 83, 89, 148, 210, 297, 322, 331, 350, 355, 367, 371], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 74, 75, 77, 78, 79, 80, 82, 89, 90, 92, 93, 94, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 124, 125, 126, 128, 129, 132, 133, 134, 136, 137, 138, 140, 141, 145, 146, 149, 151, 156, 159, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 183, 186, 187, 188, 195, 197, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 217, 221, 223, 226, 240, 241, 243, 246, 247, 248, 249, 251, 252, 253, 254, 255, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 295, 296, 297, 311, 320, 327, 340, 344, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 47, 128, 136, 233, 278, 348, 371], "effici": [0, 1, 2, 4, 8, 202, 217, 348, 353, 354, 355, 356, 359, 360, 362, 364, 365, 366, 368, 369, 371], "modular": [0, 54, 254, 369, 371], "document": [0, 2, 5, 7, 17, 18, 20, 33, 60, 89, 93, 109, 115, 169, 177, 345, 354, 356, 357, 360, 363, 371], "properli": [0, 1, 89, 93, 109, 115, 186, 355, 361, 365, 366, 367, 371], "test": [0, 3, 5, 85, 86, 98, 99, 103, 104, 171, 179, 204, 208, 326, 340, 355, 356, 371], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 74, 76, 77, 78, 80, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 106, 107, 109, 110, 111, 112, 115, 116, 117, 125, 126, 128, 129, 133, 134, 137, 138, 139, 147, 149, 151, 156, 158, 159, 160, 163, 164, 165, 168, 169, 171, 173, 174, 177, 179, 186, 187, 188, 192, 193, 194, 195, 196, 199, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 224, 225, 226, 235, 236, 240, 241, 242, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 299, 311, 313, 315, 318, 319, 320, 321, 325, 340, 342, 343, 346, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 371, 372], "code": [0, 3, 5, 7, 8, 13, 14, 60, 89, 93, 109, 115, 151, 169, 171, 202, 203, 204, 206, 207, 208, 254, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372], "aim": [0, 2, 3, 7, 29, 30, 151, 171, 173, 209, 333, 347, 348, 349, 353, 354, 371], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 36, 38, 41, 59, 62, 63, 65, 66, 78, 79, 82, 84, 85, 86, 94, 98, 106, 108, 109, 110, 112, 126, 129, 138, 147, 165, 166, 168, 182, 199, 233, 241, 242, 248, 251, 254, 271, 293, 294, 295, 296, 318, 346, 348, 350, 355, 356, 357, 358, 366, 367, 369, 371], "research": [0, 7, 9, 103, 104, 371], "most": [0, 1, 2, 3, 7, 8, 13, 14, 33, 76, 77, 89, 93, 109, 115, 136, 174, 179, 353, 355, 357, 358, 359, 360, 361, 362, 367, 371, 372], "written": [0, 1, 3, 11, 36, 38, 41, 47, 56, 57, 60, 65, 69, 71, 76, 77, 87, 88, 89, 92, 93, 94, 95, 109, 112, 115, 129, 138, 145, 159, 163, 166, 174, 177, 186, 187, 235, 247, 248, 251, 252, 256, 262, 264, 277, 280, 282, 292, 311, 312, 313, 348, 349, 350, 353, 356, 358, 364, 367, 371], "highli": [0, 2, 357, 371, 372], "wai": [0, 1, 2, 3, 4, 54, 58, 71, 80, 97, 151, 154, 173, 174, 206, 280, 293, 294, 295, 296, 348, 353, 354, 355, 357, 359, 360, 364, 365, 366, 367, 368, 369, 371, 372], "easili": [0, 1, 2, 3, 7, 89, 93, 109, 115, 349, 353, 354, 355, 357, 358, 359, 362, 365, 366, 371, 372], "swap": [0, 1, 3, 92, 174, 355, 368, 371], "compon": [0, 1, 2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 71, 78, 79, 82, 199, 224, 241, 242, 250, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 325, 330, 353, 354, 355, 356, 358, 359, 362, 364, 365, 366, 367, 368, 371], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 39, 40, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 79, 89, 90, 93, 103, 104, 109, 110, 111, 115, 116, 117, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 186, 191, 192, 196, 199, 200, 204, 208, 222, 223, 224, 232, 240, 245, 246, 255, 258, 259, 261, 267, 279, 311, 313, 327, 344, 346, 352, 354, 356, 358, 360, 361, 362, 363, 368, 370], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 37, 39, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 84, 89, 90, 93, 97, 102, 103, 104, 109, 110, 111, 115, 116, 117, 134, 137, 165, 169, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 232, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 277, 313, 353, 354, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "write": [0, 2, 3, 8, 22, 33, 36, 37, 38, 39, 40, 41, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 79, 84, 89, 93, 132, 149, 150, 159, 161, 163, 167, 187, 235, 251, 252, 254, 256, 265, 266, 268, 269, 270, 276, 281, 283, 285, 292, 297, 313, 348, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 75, 89, 93, 106, 109, 113, 114, 115, 126, 159, 168, 175, 177, 186, 187, 202, 204, 208, 247, 251, 252, 257, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 320, 353, 355, 356, 357, 359, 365, 366, 367, 371, 372], "ones": [0, 2, 22, 26, 33, 37, 40, 43, 44, 89, 93, 109, 110, 111, 115, 130, 133, 134, 135, 137, 147, 151, 156, 165, 168, 169, 171, 173, 177, 178, 212, 213, 233, 251, 262, 263, 265, 276, 280, 281, 283, 285, 299, 353, 355, 365, 366, 367, 369, 371, 372], "littl": [0, 1, 3, 45, 89, 93, 109, 115, 169, 262, 264, 277, 280, 282, 355, 356, 360, 369, 371, 372], "effort": [0, 3, 367, 369, 371], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 89, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 115, 116, 117, 122, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147, 151, 152, 153, 154, 156, 159, 160, 161, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 297, 311, 312, 320, 321, 323, 326, 327, 330, 332, 333, 334, 340, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "repo": [0, 6, 56, 129, 166, 171, 347, 366, 371], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 76, 77, 87, 88, 92, 94, 95, 112, 239, 244, 247, 266, 269, 276, 291, 359, 371], "align": [0, 202, 206, 371], "exist": [0, 2, 3, 4, 11, 17, 20, 33, 36, 38, 41, 47, 89, 93, 109, 115, 130, 135, 169, 177, 283, 334, 344, 365, 366, 371, 372], "ecosystem": [0, 360, 371], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 44, 46, 48, 49, 54, 60, 65, 66, 71, 74, 76, 80, 82, 89, 90, 93, 97, 103, 104, 109, 115, 116, 117, 126, 129, 163, 164, 165, 166, 169, 177, 202, 204, 206, 208, 214, 239, 242, 244, 246, 247, 252, 277, 313, 353, 354, 355, 356, 357, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "dataset": [0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 71, 74, 76, 77, 108, 175, 313, 346, 353, 354, 357, 368, 369, 371, 372], "pillar": [0, 371], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 125, 126, 128, 129, 130, 134, 135, 136, 137, 142, 146, 147, 151, 152, 153, 156, 159, 163, 164, 165, 166, 168, 169, 171, 174, 175, 179, 188, 204, 208, 210, 211, 239, 246, 247, 268, 272, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 321, 323, 326, 333, 334, 335, 336, 340, 341, 342, 343, 344, 346, 347, 348, 352, 358, 359, 360, 361, 363, 368, 369, 370], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 36, 38, 41, 42, 47, 89, 93, 105, 109, 115, 134, 151, 165, 171, 173, 176, 177, 189, 190, 191, 196, 198, 204, 208, 209, 210, 211, 215, 222, 223, 232, 236, 237, 238, 245, 251, 257, 259, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 291, 330, 335, 336, 337, 346, 347, 350, 352, 355, 357, 360, 363, 365, 366, 367, 369, 370, 372], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 115, 123, 126, 128, 129, 134, 135, 137, 139, 145, 147, 153, 156, 163, 169, 174, 177, 178, 179, 183, 187, 188, 199, 204, 208, 211, 214, 215, 224, 233, 235, 241, 243, 244, 246, 247, 248, 249, 251, 254, 255, 256, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 311, 313, 320, 321, 327, 330, 332, 335, 340, 342, 343, 344, 346, 348, 349, 350, 352, 356, 357, 358, 359, 363, 367, 368, 369, 370, 372], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 40, 42, 86, 89, 93, 98, 99, 104, 109, 110, 111, 115, 118, 129, 151, 156, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 196, 202, 206, 258, 259, 260, 261, 278, 340, 346, 351, 353, 355, 358, 359, 360, 366, 367, 369, 371, 372], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 35, 36, 38, 41, 65, 66, 68, 69, 80, 82, 89, 90, 93, 109, 115, 116, 126, 128, 130, 133, 141, 147, 151, 159, 165, 168, 169, 171, 173, 177, 179, 202, 204, 205, 206, 208, 211, 215, 218, 224, 230, 231, 240, 242, 246, 248, 250, 251, 252, 283, 292, 293, 294, 295, 296, 311, 321, 333, 343, 348, 354, 355, 358, 359, 361, 365, 366, 368, 369, 371, 372], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 36, 38, 41, 80, 89, 90, 93, 109, 115, 116, 126, 128, 130, 133, 141, 147, 151, 159, 165, 168, 169, 171, 173, 177, 179, 202, 204, 205, 206, 207, 208, 211, 215, 230, 231, 240, 248, 251, 252, 283, 292, 302, 303, 304, 305, 307, 308, 309, 310, 311, 343, 348, 354, 355, 358, 361, 365, 366, 367, 368, 369, 371, 372], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 42, 54, 60, 126, 129, 156, 163, 177, 178, 247, 327, 330, 332, 335, 336, 340, 342, 343, 346, 350, 369, 372], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 26, 29, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 69, 71, 72, 74, 76, 77, 78, 81, 83, 84, 89, 93, 105, 109, 115, 133, 134, 137, 151, 165, 168, 169, 171, 173, 174, 175, 177, 186, 187, 188, 189, 190, 202, 203, 206, 207, 209, 211, 215, 235, 241, 242, 248, 250, 251, 256, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 299, 317, 321, 333, 340, 341, 342, 343, 344, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 371, 372], "etc": [0, 2, 3, 7, 8, 11, 33, 48, 49, 60, 89, 93, 109, 115, 145, 169, 177, 209, 215, 354, 355, 360, 369, 371, 372], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 78, 89, 93, 109, 110, 111, 115, 125, 129, 134, 137, 138, 145, 146, 147, 163, 168, 169, 175, 177, 179, 187, 189, 190, 209, 214, 215, 233, 246, 253, 254, 262, 264, 277, 280, 282, 288, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 321, 330, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "few": [0, 2, 8, 93, 313, 321, 355, 356, 358, 365, 366, 369, 371, 372], "depend": [0, 1, 2, 3, 4, 7, 8, 36, 38, 92, 94, 95, 112, 116, 117, 134, 137, 256, 280, 348, 353, 355, 356, 365, 366, 367, 371, 372], "possibl": [0, 2, 3, 4, 22, 28, 30, 33, 35, 57, 60, 62, 76, 80, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 189, 190, 202, 203, 206, 207, 251, 311, 326, 330, 348, 353, 355, 356, 358, 360, 361, 365, 366, 367, 369, 371, 372], "standard": [0, 3, 147, 158, 175, 188, 200, 211, 216, 217, 222, 239, 240, 285, 293, 294, 295, 296, 353, 354, 357, 358, 366, 369, 371], "numpi": [0, 3, 11, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 89, 93, 109, 115, 167, 330, 367, 369, 371, 372], "common": [0, 2, 3, 4, 93, 98, 123, 236, 237, 238, 245, 262, 263, 264, 269, 270, 276, 277, 280, 281, 282, 283, 285, 340, 347, 348, 350, 353, 355, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 371, 372], "openai": [0, 7, 23, 92, 94, 112, 355, 367, 371, 372], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 89, 90, 92, 93, 94, 95, 97, 103, 104, 106, 107, 109, 112, 115, 116, 117, 119, 122, 125, 129, 132, 138, 144, 145, 147, 149, 154, 156, 159, 165, 168, 174, 175, 177, 340, 347, 353, 354, 355, 356, 357, 361, 362, 367, 368, 369, 371], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 77, 82, 87, 88, 89, 92, 93, 94, 95, 97, 99, 106, 107, 109, 110, 111, 112, 115, 125, 129, 130, 132, 133, 134, 136, 137, 141, 147, 151, 152, 156, 163, 164, 165, 166, 168, 169, 171, 173, 175, 177, 206, 208, 214, 215, 235, 240, 241, 248, 249, 251, 252, 253, 254, 262, 264, 265, 269, 270, 276, 277, 278, 280, 281, 282, 283, 284, 285, 293, 294, 295, 296, 297, 313, 320, 334, 350, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 79, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 231, 233, 235, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 320, 321, 323, 324, 325, 326, 327, 328, 330, 334, 335, 336, 337, 339, 340, 342, 343, 344, 348, 356, 357, 360, 365, 366, 367, 369, 371], "On": [0, 3, 7, 17, 18, 19, 20, 26, 57, 203, 207, 348, 354, 365, 366], "end": [0, 2, 3, 13, 14, 16, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 75, 76, 77, 89, 93, 109, 115, 138, 149, 163, 164, 169, 177, 189, 190, 202, 203, 206, 207, 210, 246, 283, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "come": [0, 1, 2, 3, 8, 33, 80, 89, 93, 102, 109, 115, 134, 137, 235, 236, 237, 238, 248, 256, 262, 264, 277, 280, 282, 313, 353, 354, 355, 356, 359, 360, 361, 362, 365, 366, 369, 371, 372], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 33, 35, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 75, 78, 82, 89, 91, 93, 103, 104, 105, 109, 110, 111, 115, 116, 117, 122, 123, 125, 126, 129, 130, 133, 134, 137, 144, 145, 151, 156, 163, 164, 165, 166, 168, 169, 171, 173, 175, 177, 179, 184, 185, 187, 202, 204, 206, 208, 210, 214, 215, 239, 240, 251, 270, 278, 280, 283, 297, 321, 326, 327, 336, 344, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "re": [0, 2, 3, 8, 33, 75, 89, 93, 109, 115, 177, 208, 212, 213, 248, 252, 320, 350, 353, 355, 356, 357, 359, 364, 365, 367, 371, 372], "usabl": [0, 350, 356, 371], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 71, 78, 79, 82, 89, 90, 93, 109, 115, 122, 125, 126, 134, 137, 169, 175, 177, 179, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 221, 222, 225, 226, 228, 231, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 248, 250, 251, 252, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 340, 346, 348, 353, 356, 357, 358, 361, 364, 367, 369, 372], "cost": [0, 2, 28, 60, 262, 264, 277, 280, 282, 353, 354, 365, 366, 367, 369], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 119, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 186, 187, 188, 191, 192, 193, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 221, 222, 223, 225, 226, 229, 230, 231, 232, 235, 236, 237, 238, 240, 246, 248, 250, 251, 252, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 317, 330, 333, 335, 340, 341, 342, 343, 344, 346, 348, 350, 353, 354, 355, 356, 358, 359, 361, 364, 365, 366, 367, 368, 369, 371, 372], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 41, 45, 47, 54, 57, 61, 62, 68, 69, 76, 89, 90, 93, 97, 102, 106, 109, 110, 111, 115, 128, 134, 137, 165, 167, 175, 177, 214, 215, 242, 247, 250, 346, 350, 353, 354, 356, 357, 365, 366, 367, 368, 369, 371, 372], "good": [0, 1, 4, 9, 109, 353, 355, 356, 358, 366, 371, 372], "runtim": [0, 2, 3, 33, 89, 93, 109, 115, 177, 367], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 47, 48, 49, 87, 88, 89, 92, 93, 94, 95, 109, 112, 115, 118, 134, 137, 146, 169, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 264, 273, 280, 283, 326, 330, 349, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 367, 372], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 79, 84, 85, 86, 89, 92, 93, 94, 98, 99, 102, 109, 110, 111, 112, 113, 114, 115, 116, 163, 165, 175, 177, 204, 208, 236, 237, 238, 247, 270, 278, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 371, 372], "read": [0, 2, 3, 7, 22, 37, 39, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 71, 78, 79, 82, 89, 92, 93, 94, 109, 115, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 149, 150, 152, 153, 154, 156, 159, 160, 161, 163, 164, 165, 166, 168, 171, 172, 174, 175, 177, 187, 221, 235, 236, 237, 238, 241, 246, 248, 251, 252, 254, 256, 257, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 313, 326, 330, 348, 353, 354, 355, 357, 358, 364, 365, 366, 367, 368, 372], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 350, 353, 357, 360, 364, 368, 372], "beyond": [0, 89, 93, 109, 115], "api": [0, 2, 3, 5, 110, 111, 112, 151, 173, 349, 350, 357, 358, 359, 360, 361, 365, 366, 367, 369, 371, 372], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 46, 48, 49, 50, 52, 76, 89, 90, 93, 105, 109, 115, 118, 129, 130, 140, 145, 152, 165, 167, 169, 177, 179, 204, 208, 235, 241, 242, 248, 249, 250, 251, 252, 313, 345, 348, 349, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372], "paper": [0, 57, 60, 85, 86, 87, 88, 95, 98, 99, 103, 104, 106, 107, 112, 116, 117, 151, 171, 173, 202, 223, 232, 268, 275, 353, 355, 365, 366], "releas": [0, 4, 7, 10, 33, 89, 93, 109, 115, 169, 177, 283, 371], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 332, 340, 350, 353, 371], "so": [0, 2, 3, 4, 6, 7, 10, 33, 36, 38, 41, 42, 89, 93, 103, 104, 109, 115, 165, 175, 177, 253, 254, 353, 355, 356, 359, 362, 365, 366, 367, 372], "make": [0, 2, 3, 4, 7, 33, 36, 37, 38, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 74, 78, 79, 84, 89, 93, 94, 97, 99, 101, 107, 109, 115, 139, 147, 151, 152, 156, 163, 171, 177, 179, 202, 203, 206, 207, 214, 215, 216, 241, 252, 262, 264, 277, 280, 282, 293, 294, 295, 296, 311, 327, 336, 344, 348, 349, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "sure": [0, 3, 4, 7, 59, 78, 93, 97, 156, 241, 344, 348, 353, 355, 356, 359, 365, 366, 367, 369, 371, 372], "alwai": [0, 2, 3, 13, 14, 19, 26, 29, 33, 54, 63, 89, 93, 109, 115, 145, 146, 177, 271, 278, 348, 349, 354, 355, 356, 365, 366, 367, 369], "enjoi": [0, 2, 3, 60, 360], "latest": [0, 2, 3, 10, 106, 110, 111, 327, 355, 365, 366, 367, 371], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 35, 47, 58, 69, 76, 77, 89, 93, 102, 109, 110, 111, 113, 114, 115, 126, 129, 141, 145, 149, 165, 166, 170, 175, 179, 189, 190, 200, 201, 202, 203, 204, 206, 207, 208, 209, 214, 216, 217, 252, 259, 262, 264, 277, 280, 282, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 344, 348, 353, 354, 355, 356, 358, 359, 360, 362, 367, 369, 372], "recent": [0, 7, 11, 174, 372], "version": [0, 1, 2, 3, 6, 11, 33, 36, 38, 42, 57, 62, 76, 89, 92, 93, 94, 95, 106, 107, 109, 110, 112, 115, 116, 117, 174, 177, 186, 238, 262, 264, 277, 278, 280, 282, 283, 293, 296, 347, 348, 353, 355, 356, 357, 359, 362, 365, 366, 367, 368, 372], "although": [0, 1, 3, 8, 89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 350, 353, 354, 360, 369], "core": [0, 3, 8, 350, 356, 358, 371], "guarante": [0, 2, 33, 36, 38, 41, 65, 66, 67, 78, 79, 82, 89, 93, 109, 115, 175, 177, 360, 371], "backward": [0, 8, 33, 85, 86, 89, 93, 109, 115, 175, 177, 202, 203, 206, 207, 262, 263, 265, 269, 270, 276, 280, 281, 282, 283, 285, 353, 355, 356, 359, 360, 362, 365, 366, 367], "compat": [0, 2, 3, 7, 11, 13, 14, 33, 56, 71, 74, 76, 77, 78, 80, 89, 93, 95, 108, 109, 115, 129, 163, 171, 175, 177, 202, 203, 204, 206, 207, 208, 249, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 288, 353, 356, 369, 371], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 80, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 145, 147, 149, 151, 152, 153, 154, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 178, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 268, 269, 270, 273, 276, 277, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 299, 301, 302, 303, 307, 308, 310, 311, 313, 321, 326, 327, 328, 340, 344, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372], "13": [0, 2, 5, 10, 11, 76, 77, 112, 174, 177, 352, 353, 354, 355, 356, 361, 366, 367, 368, 369, 370], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 37, 40, 43, 44, 56, 58, 59, 60, 61, 62, 93, 109, 151, 168, 173, 267, 278, 349, 350, 353, 354, 355, 356, 358, 360, 369, 372], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 74, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 183, 186, 187, 188, 198, 199, 204, 208, 210, 211, 223, 224, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 311, 312, 321, 325, 326, 327, 329, 330, 346, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 372], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 26, 29, 145, 153, 236, 237, 238, 251, 269, 276, 346, 353, 365, 367, 371], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 33, 36, 37, 38, 40, 41, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 71, 89, 93, 109, 115, 122, 151, 173, 177, 211, 315, 320, 330, 350, 354, 362, 365], "root": [0, 2, 3, 26, 29, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 109, 129, 166, 186, 205, 230, 231, 356, 357, 365, 366, 367, 368, 369, 372], "http": [0, 2, 5, 6, 7, 10, 13, 14, 17, 18, 19, 23, 37, 45, 54, 57, 58, 59, 60, 61, 62, 68, 69, 85, 86, 87, 88, 95, 97, 98, 99, 103, 104, 106, 107, 108, 110, 111, 112, 116, 117, 129, 151, 171, 191, 192, 193, 194, 195, 196, 199, 200, 201, 206, 211, 212, 213, 217, 219, 220, 223, 225, 226, 232, 242, 247, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 293, 298, 306, 345, 350, 363, 368, 371], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 54, 57, 58, 60, 85, 86, 87, 88, 95, 98, 99, 103, 104, 106, 107, 110, 111, 112, 116, 117, 126, 171, 350, 358, 362, 365, 366, 371], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 57, 60, 61, 85, 86, 87, 88, 95, 97, 98, 99, 103, 104, 106, 107, 110, 111, 112, 116, 117, 350, 368, 371], "setup": [0, 7, 85, 86, 97, 98, 99], "py": [0, 3, 23, 122, 223, 232, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372], "develop": [0, 3, 4, 7, 97, 353, 371], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 89, 91, 93, 95, 96, 109, 112, 115, 120, 124, 125, 126, 128, 132, 136, 142, 145, 151, 152, 154, 161, 165, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 186, 188, 189, 190, 199, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 233, 239, 240, 241, 242, 243, 246, 248, 249, 252, 254, 255, 258, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 288, 291, 293, 294, 295, 296, 297, 299, 311, 314, 315, 318, 320, 323, 330, 332, 340, 349, 352, 353, 355, 358, 359, 360, 363, 367, 370, 372], "seri": [0, 2, 7, 8, 35, 64, 72, 80, 81, 83, 84, 115, 146, 168, 313, 348, 349, 353, 354, 355, 361, 362, 365, 366, 369, 372], "quick": [0, 54], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 28, 42, 56, 62, 89, 93, 109, 115, 125, 128, 166, 168, 177, 280, 347, 348, 349, 353, 354, 355, 356, 358, 362, 365, 366, 367, 369, 372], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 71, 74, 75, 76, 77, 80, 82, 87, 88, 89, 90, 92, 93, 94, 95, 97, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 145, 146, 147, 151, 152, 155, 156, 159, 160, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 186, 187, 189, 190, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 215, 233, 235, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 307, 308, 309, 310, 311, 317, 320, 325, 327, 330, 332, 334, 340, 344, 347, 353, 354, 355, 356, 357, 359, 362, 364, 365, 366, 367, 369, 371, 372], "hurri": [0, 357], "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 46, 48, 49, 56, 75, 76, 77, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 125, 128, 141, 147, 152, 164, 166, 167, 189, 190, 202, 204, 206, 208, 209, 212, 213, 219, 227, 233, 239, 240, 243, 246, 252, 293, 295, 296, 354, 355, 356, 357, 358, 365, 366, 367, 368, 369, 371, 372], "item": [0, 8, 13, 26, 29, 40, 47, 63, 75, 80, 140, 212, 213, 265, 266, 268, 321, 349, 350, 353, 355, 356, 359, 360, 365, 366, 367, 369], "navig": [0, 366], "previou": [0, 3, 4, 10, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 165, 177, 187, 202, 206, 226, 240, 355, 356, 357, 358, 362, 367, 372], "whenev": [0, 1, 2, 3, 22, 33, 37, 40, 43, 44, 54, 60, 69, 76, 77, 87, 88, 92, 94, 95, 103, 104, 112, 116, 117, 122, 144, 169, 174, 278, 293, 294, 295, 296, 311, 332, 348, 369], "want": [0, 2, 3, 6, 7, 8, 77, 147, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 348, 353, 354, 355, 356, 357, 359, 360, 361, 365, 366, 367, 368, 369, 371, 372], "ted": [0, 54, 56, 57, 58, 59, 60, 61, 62, 346, 352, 363, 370], "s": [0, 1, 2, 3, 6, 7, 8, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 76, 77, 80, 85, 86, 89, 93, 97, 98, 99, 103, 104, 106, 109, 110, 111, 115, 116, 117, 129, 133, 151, 163, 165, 167, 168, 169, 171, 173, 175, 177, 179, 189, 190, 204, 208, 213, 214, 215, 217, 223, 232, 236, 238, 239, 242, 243, 246, 248, 251, 252, 255, 263, 269, 276, 278, 283, 293, 294, 295, 296, 297, 311, 348, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 42, 80, 85, 86, 89, 93, 102, 105, 108, 109, 115, 122, 128, 133, 136, 138, 145, 151, 152, 164, 165, 168, 169, 171, 173, 175, 176, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 291, 293, 294, 295, 296, 297, 311, 330, 337, 340, 346, 349, 350, 352, 354, 355, 357, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370], "optim": [0, 1, 2, 8, 33, 42, 85, 86, 89, 93, 109, 115, 169, 177, 188, 211, 216, 217, 263, 278, 279, 280, 283, 325, 330, 340, 349, 350, 352, 355, 356, 357, 358, 360, 363, 365, 366, 367, 370], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 89, 93, 109, 112, 115, 126, 129, 147, 151, 173, 179, 246, 247, 263, 265, 268, 270, 281, 283, 285, 313, 321, 327, 330, 332, 333, 334, 340, 350, 352, 353, 356, 357, 358, 359, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372], "storag": [0, 1, 8, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 75, 76, 77, 79, 80, 82, 89, 91, 93, 109, 115, 128, 129, 134, 137, 156, 177, 346, 350, 352, 354, 355, 356, 357, 359, 362, 363, 365, 366, 368, 370], "log": [0, 3, 4, 8, 42, 197, 198, 199, 212, 213, 221, 231, 241, 242, 248, 252, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 320, 323, 324, 326, 330, 340, 348, 349, 350, 352, 353, 354, 355, 357, 358, 362, 363, 365, 366, 367, 370, 371], "your": [0, 2, 3, 7, 8, 10, 13, 14, 17, 33, 89, 93, 97, 102, 109, 110, 111, 115, 175, 177, 344, 347, 348, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 369, 370, 371], "own": [0, 1, 3, 13, 14, 16, 21, 33, 89, 93, 109, 110, 111, 115, 177, 313, 352, 354, 355, 357, 363, 365, 366, 367, 370], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 36, 38, 41, 42, 47, 54, 57, 63, 89, 93, 103, 104, 109, 110, 111, 115, 134, 142, 151, 164, 169, 171, 173, 177, 179, 192, 194, 204, 208, 239, 243, 244, 247, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 330, 332, 340, 346, 350, 352, 354, 357, 360, 361, 363, 368, 369, 370, 372], "loop": [0, 8, 36, 38, 41, 89, 93, 109, 115, 186, 239, 243, 244, 247, 280, 330, 350, 352, 353, 354, 357, 359, 360, 361, 363, 364, 369, 370], "ppo": [0, 4, 8, 248, 252, 264, 277, 280, 346, 348, 352, 353, 354, 358, 359, 363, 365, 370], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 80, 87, 88, 89, 90, 92, 93, 94, 106, 109, 115, 129, 132, 133, 139, 144, 145, 147, 154, 156, 161, 163, 165, 166, 168, 169, 175, 177, 204, 208, 340, 348, 352, 354, 355, 357, 358, 359, 363, 370, 371, 372], "introduct": [0, 349, 352, 357, 363, 365, 366, 370, 372], "multi": [0, 1, 7, 9, 29, 30, 33, 37, 40, 43, 44, 89, 93, 103, 104, 109, 113, 114, 115, 169, 177, 202, 204, 206, 208, 209, 214, 215, 246, 291, 293, 294, 295, 296, 346, 352, 353, 354, 355, 356, 357, 358, 363, 367, 370, 371], "agent": [0, 9, 29, 30, 102, 103, 104, 110, 111, 113, 114, 116, 117, 118, 163, 164, 212, 213, 214, 215, 217, 223, 232, 291, 346, 352, 357, 363, 367, 370], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 204, 208, 210, 211, 246, 251, 278, 311, 312, 313, 334, 335, 336, 340, 342, 343, 344, 346, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 76, 77, 80, 82, 85, 86, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 147, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 221, 222, 223, 224, 230, 231, 232, 233, 235, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 306, 311, 313, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338, 340, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372], "pretrain": [0, 352, 363, 370], "recurr": [0, 2, 128, 202, 203, 204, 206, 208, 226, 352, 354, 358, 363, 369, 370], "dqn": [0, 2, 54, 138, 199, 241, 242, 262, 263, 265, 266, 268, 270, 271, 272, 275, 276, 278, 280, 281, 282, 283, 284, 285, 291, 337, 346, 348, 352, 358, 359, 362, 363, 370], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 85, 86, 89, 93, 105, 109, 115, 136, 145, 164, 178, 184, 185, 199, 204, 208, 214, 215, 217, 224, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 255, 262, 263, 264, 265, 269, 270, 276, 277, 279, 280, 281, 282, 283, 285, 326, 332, 335, 336, 340, 342, 343, 348, 349, 350, 352, 354, 357, 359, 360, 363, 368, 369, 370, 371, 372], "replai": [0, 8, 15, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 84, 128, 129, 136, 152, 156, 165, 177, 265, 266, 268, 269, 270, 276, 281, 283, 285, 327, 330, 338, 340, 346, 350, 352, 363, 367, 368, 370], "buffer": [0, 3, 4, 8, 15, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 93, 105, 109, 115, 128, 129, 133, 136, 151, 152, 156, 165, 168, 169, 171, 173, 177, 251, 254, 265, 266, 268, 269, 270, 276, 281, 283, 285, 327, 330, 338, 340, 346, 350, 352, 361, 363, 367, 368, 370, 372], "competit": [0, 3, 103, 104, 352, 363, 366, 370], "ddpg": [0, 192, 193, 194, 195, 265, 275, 284, 346, 348, 352, 354, 359, 363, 366, 370], "task": [0, 2, 3, 9, 29, 30, 42, 47, 57, 60, 87, 88, 89, 93, 96, 103, 104, 109, 110, 111, 112, 115, 116, 117, 151, 163, 169, 171, 173, 269, 276, 352, 353, 354, 355, 356, 357, 358, 363, 365, 366, 367, 370, 371, 372], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 43, 44, 93, 109, 115, 116, 165, 196, 204, 208, 240, 313, 330, 346, 349, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 369, 370], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 29, 33, 36, 38, 41, 47, 65, 66, 67, 71, 74, 78, 79, 82, 84, 89, 93, 98, 109, 115, 134, 137, 138, 147, 151, 168, 169, 171, 175, 177, 178, 211, 223, 232, 235, 236, 248, 251, 252, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 334, 335, 336, 339, 340, 344, 346, 348, 350, 352, 354, 355, 356, 360, 362, 363, 365, 366, 367, 369, 370, 372], "loss": [0, 3, 8, 38, 138, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 293, 325, 330, 337, 340, 349, 350, 352, 357, 359, 360, 361, 363, 367, 369, 370, 371], "trainer": [0, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 352, 353, 363, 370], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 24, 26, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 80, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 147, 149, 151, 153, 154, 155, 156, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 178, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 214, 215, 218, 221, 222, 223, 224, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 256, 259, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 287, 291, 293, 294, 295, 296, 299, 311, 313, 321, 322, 323, 324, 325, 327, 328, 329, 332, 340, 348, 349, 350, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372], "packag": [0, 6, 7, 10, 122, 346, 347, 372], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 28, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 80, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 105, 106, 108, 109, 115, 116, 117, 126, 129, 133, 141, 147, 149, 152, 156, 165, 168, 169, 170, 174, 175, 177, 187, 197, 202, 203, 204, 206, 207, 208, 212, 213, 214, 215, 216, 221, 223, 229, 233, 246, 247, 251, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 321, 324, 327, 328, 329, 330, 332, 342, 343, 344, 346, 350, 354, 355, 356, 357, 360, 362, 364, 365, 366, 368, 371, 372], "size": [0, 2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 128, 130, 133, 134, 137, 138, 139, 141, 149, 151, 153, 154, 156, 160, 162, 163, 165, 167, 168, 169, 170, 173, 175, 177, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 221, 222, 223, 224, 225, 226, 229, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 254, 256, 259, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 313, 321, 327, 346, 348, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 371, 372], "interoper": [0, 13, 14, 346], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 40, 41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 89, 92, 93, 103, 104, 109, 115, 116, 117, 129, 130, 151, 156, 169, 173, 177, 189, 190, 202, 203, 204, 206, 207, 208, 209, 215, 250, 254, 264, 266, 268, 270, 271, 277, 280, 281, 285, 293, 294, 295, 296, 302, 303, 304, 305, 307, 308, 309, 310, 311, 344, 346, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369], "node": [0, 2, 17, 18, 19, 20, 21, 36, 38, 41, 62, 346, 360], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 110, 111, 145, 147, 188, 197, 198, 199, 200, 205, 211, 212, 213, 218, 221, 222, 225, 226, 229, 230, 231, 239, 240, 241, 242, 248, 252, 253, 262, 263, 264, 269, 270, 271, 276, 277, 280, 281, 282, 283, 285, 346, 350, 354, 355, 358, 360, 365, 366, 367, 371, 372], "helper": [0, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 353, 354, 356, 365, 367], "compos": [0, 3, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 71, 72, 73, 80, 81, 89, 93, 109, 115, 129, 155, 168, 169, 175, 177, 245, 246, 273, 283, 313, 346, 353, 354, 355, 356, 360, 364, 366, 367, 369, 371, 372], "episod": [0, 3, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 76, 77, 89, 93, 109, 115, 125, 156, 159, 164, 186, 188, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 346, 354, 357, 362, 365, 366, 369], "format": [0, 3, 32, 33, 35, 54, 55, 56, 57, 58, 59, 60, 61, 62, 74, 80, 89, 93, 109, 110, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 313, 346, 353, 354, 357, 359, 361, 372], "tensorspec": [0, 3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 48, 49, 50, 51, 52, 89, 93, 105, 109, 115, 116, 117, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 187, 226, 235, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 255, 263, 266, 269, 270, 281, 283, 285, 291, 346, 367], "human": [0, 23, 58, 346, 367], "feedback": [0, 346, 362, 371], "rlhf": [0, 42, 47, 63, 145, 346, 348], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 90, 93, 109, 115, 123, 126, 134, 137, 146, 153, 154, 168, 169, 175, 177, 179, 188, 210, 211, 326, 334, 335, 336, 340, 342, 343, 344, 346, 357], "gymlikeenv": [0, 92, 94, 346], "envmetadata": [0, 346], "vector": [0, 1, 8, 24, 28, 35, 85, 86, 98, 99, 102, 110, 111, 112, 116, 117, 136, 174, 192, 194, 202, 203, 206, 207, 209, 293, 296, 306, 307, 308, 309, 310, 346, 353, 354, 356, 364, 365, 366, 367, 368, 372], "auto": [0, 66, 82, 124, 125, 174, 247, 263, 270, 279, 281, 283, 285, 346, 349, 365, 366], "reset": [0, 1, 2, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 115, 124, 125, 126, 129, 138, 141, 144, 146, 151, 159, 163, 164, 165, 166, 168, 169, 171, 174, 175, 177, 179, 187, 202, 204, 208, 234, 246, 247, 312, 346, 353, 354, 355, 356, 357, 360, 364, 365, 366, 371], "mask": [0, 1, 4, 22, 28, 31, 32, 35, 110, 111, 123, 152, 177, 199, 212, 213, 224, 240, 241, 242, 243, 244, 249, 250, 327, 346, 354, 356, 372], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 28, 35, 42, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 126, 132, 134, 136, 137, 138, 139, 142, 145, 146, 149, 153, 154, 156, 160, 163, 169, 174, 178, 183, 186, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 204, 208, 209, 210, 211, 212, 213, 214, 222, 223, 224, 226, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 255, 256, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 340, 344, 346, 348, 349, 350, 353, 354, 355, 357, 358, 359, 360, 361, 364, 365, 366, 368, 369, 371, 372], "record": [0, 2, 33, 89, 93, 109, 115, 120, 145, 177, 280, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 340, 346, 354, 355, 358, 362, 365], "domain": [0, 2, 8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 89, 93, 109, 115, 136, 165, 183, 235, 241, 242, 248, 249, 250, 251, 252, 253, 254, 259, 346, 355, 356, 358, 359, 365, 366, 367, 371, 372], "actor": [0, 3, 4, 20, 145, 178, 188, 191, 192, 194, 199, 200, 211, 222, 224, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 291, 346, 349, 354, 356, 357, 359, 362, 365, 368, 371], "explor": [0, 1, 176, 217, 235, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 262, 326, 335, 336, 340, 346, 355, 356, 357, 359, 360, 362, 365, 366, 367], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 76, 77, 80, 89, 93, 102, 109, 115, 122, 125, 127, 129, 130, 132, 134, 136, 137, 138, 146, 147, 151, 152, 155, 156, 157, 159, 161, 165, 166, 168, 169, 173, 175, 177, 183, 187, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 221, 223, 224, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 321, 323, 324, 325, 326, 327, 330, 340, 346, 350, 354, 357, 359, 360, 361, 364, 365, 366, 367, 369, 371, 372], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 37, 40, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 73, 75, 89, 90, 93, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 126, 133, 134, 135, 139, 145, 147, 153, 154, 159, 160, 163, 165, 168, 174, 177, 187, 197, 204, 208, 212, 213, 221, 235, 248, 252, 256, 257, 281, 287, 293, 298, 306, 316, 330, 346, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372], "hook": [0, 33, 89, 93, 109, 115, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 224, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 346], "planner": [0, 188, 211, 346], "sac": [0, 270, 281, 283, 346], "redq": [0, 281, 346], "iql": [0, 269, 276, 346, 353, 365, 366], "cql": [0, 263, 268, 346], "dt": [0, 247, 346, 367], "td3": [0, 285, 346], "a2c": [0, 262, 346], "dreamer": [0, 120, 121, 200, 272, 273, 274, 346, 348], "checkpoint": [0, 346, 368], "builder": [0, 346, 354, 372], "logger": [0, 3, 311, 313, 315, 316, 317, 318, 319, 320, 324, 330, 340, 344, 346, 354, 365], "_util": [0, 3, 11, 346, 362], "implement_for": [0, 3, 346], "thing": [0, 3, 7, 8, 89, 93, 109, 115, 347, 355, 356, 357, 358, 359, 360, 361, 365, 366, 369, 372], "consid": [0, 1, 2, 3, 8, 19, 33, 37, 40, 43, 44, 65, 66, 82, 89, 93, 109, 115, 136, 175, 177, 197, 214, 229, 293, 295, 296, 347, 353, 357, 358, 359, 367, 369], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 79, 82, 89, 90, 93, 102, 103, 104, 106, 108, 109, 110, 111, 115, 116, 117, 123, 125, 128, 129, 133, 134, 136, 137, 145, 146, 147, 151, 152, 159, 165, 168, 169, 171, 173, 174, 175, 177, 184, 185, 186, 188, 199, 202, 203, 206, 207, 209, 210, 211, 212, 213, 216, 224, 230, 246, 248, 251, 252, 254, 258, 264, 266, 271, 277, 280, 283, 286, 291, 292, 293, 294, 295, 296, 311, 312, 313, 327, 344, 347, 348, 350, 353, 354, 355, 356, 358, 360, 361, 365, 366, 367, 368, 369, 372], "debug": [0, 6, 8, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 347, 372], "work": [0, 1, 2, 3, 4, 8, 11, 33, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 74, 76, 77, 79, 84, 89, 92, 93, 94, 97, 109, 112, 115, 130, 145, 151, 171, 174, 175, 177, 186, 189, 190, 209, 242, 250, 255, 264, 277, 280, 330, 347, 348, 353, 354, 355, 356, 357, 360, 364, 365, 366, 367, 368, 369, 371, 372], "habitat": [0, 3, 95, 347, 368], "lab": [0, 3, 87, 88, 95, 347], "mujoco": [0, 6, 8, 112, 347, 353, 355, 356], "error": [0, 1, 3, 7, 10, 11, 30, 33, 36, 38, 41, 89, 93, 109, 115, 118, 152, 177, 179, 347, 353, 355, 365, 366, 372], "solut": [0, 2, 3, 6, 7, 9, 20, 347, 348, 350, 371], "resourc": [0, 1, 20, 95, 347, 353, 355, 365, 366], "issu": [0, 3, 4, 5, 8, 54, 58, 65, 66, 82, 97, 129, 152, 166, 186, 235, 241, 242, 248, 249, 250, 251, 252, 347, 371], "index": [0, 3, 7, 8, 10, 15, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 71, 72, 74, 79, 80, 81, 82, 83, 84, 89, 93, 103, 104, 109, 115, 116, 117, 124, 129, 133, 136, 169, 186, 212, 213, 346, 357, 364, 365, 366, 369, 371], "search": [0, 108, 187, 354], "page": [0, 7, 23, 320, 359], "somewhat": [1, 2, 349, 358, 372], "equival": [1, 3, 24, 26, 28, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 85, 86, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 126, 135, 138, 169, 177, 199, 206, 209, 224, 241, 242, 249, 250, 280, 327, 360, 371, 372], "dataload": [1, 63, 75, 77, 354, 360, 369], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 60, 89, 93, 109, 115, 129, 140, 156, 164, 165, 166, 169, 177, 202, 204, 206, 208, 221, 239, 243, 244, 247, 283, 313, 348, 354, 357, 365, 369, 371, 372], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 60, 89, 93, 102, 103, 104, 109, 110, 111, 115, 116, 117, 125, 128, 140, 145, 151, 160, 168, 169, 173, 177, 208, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 327, 330, 348, 349, 350, 353, 354, 355, 356, 359, 364, 365, 366, 367, 368, 369, 371, 372], "over": [1, 2, 3, 4, 8, 13, 14, 33, 40, 44, 45, 47, 53, 54, 60, 75, 76, 89, 93, 103, 104, 109, 115, 136, 147, 159, 166, 177, 186, 233, 254, 271, 273, 278, 299, 311, 333, 350, 353, 354, 355, 357, 358, 359, 360, 365, 366, 367, 372], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 33, 34, 36, 37, 38, 41, 43, 44, 60, 67, 89, 93, 109, 110, 111, 115, 126, 127, 133, 141, 151, 165, 168, 169, 170, 171, 173, 177, 186, 202, 204, 206, 208, 214, 251, 252, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 348, 353, 356, 365, 366, 367, 369, 372], "static": [1, 11, 42, 47, 69, 76, 77, 95, 175, 276, 357, 367, 369], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 23, 26, 29, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 80, 82, 85, 86, 89, 90, 93, 98, 99, 102, 108, 109, 110, 111, 113, 114, 115, 116, 117, 125, 126, 128, 130, 133, 134, 135, 136, 137, 145, 147, 149, 151, 153, 156, 159, 163, 164, 165, 168, 169, 171, 173, 175, 177, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 215, 218, 222, 233, 240, 241, 242, 243, 244, 246, 247, 251, 255, 256, 262, 263, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 292, 293, 294, 295, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 321, 348, 349, 352, 353, 354, 355, 356, 358, 359, 360, 361, 364, 365, 366, 367, 369, 370, 371, 372], "like": [1, 2, 3, 4, 7, 20, 26, 29, 33, 37, 40, 43, 44, 47, 67, 71, 77, 89, 93, 95, 102, 109, 110, 111, 115, 138, 165, 167, 177, 179, 202, 206, 215, 245, 262, 264, 277, 280, 281, 282, 349, 353, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 372], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 63, 80, 89, 92, 93, 94, 95, 109, 112, 115, 128, 134, 136, 137, 146, 154, 165, 169, 177, 184, 185, 204, 208, 243, 247, 264, 277, 280, 283, 313, 327, 332, 342, 343, 344, 348, 353, 354, 355, 356, 360, 365, 366, 367, 369], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 40, 57, 58, 61, 62, 63, 89, 93, 105, 109, 115, 124, 129, 133, 141, 151, 159, 165, 168, 169, 170, 171, 173, 177, 209, 233, 251, 252, 253, 283, 313, 350, 355, 357, 361, 369, 372], "two": [1, 2, 3, 4, 8, 10, 33, 37, 40, 42, 43, 44, 60, 71, 75, 77, 89, 93, 109, 115, 126, 147, 151, 173, 177, 195, 202, 204, 206, 208, 227, 252, 277, 288, 326, 330, 349, 353, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 369, 371, 372], "main": [1, 2, 3, 5, 13, 14, 19, 21, 62, 90, 252, 330, 348, 349, 353, 354, 364, 372], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 69, 71, 74, 75, 76, 77, 79, 80, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 106, 107, 109, 110, 112, 115, 116, 117, 125, 126, 130, 132, 133, 151, 159, 160, 163, 165, 167, 168, 169, 171, 173, 177, 186, 189, 190, 202, 204, 206, 208, 209, 212, 213, 214, 215, 216, 233, 235, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 279, 280, 281, 282, 283, 285, 287, 291, 293, 294, 295, 296, 297, 301, 311, 312, 313, 320, 323, 333, 340, 341, 344, 353, 354, 355, 356, 357, 358, 360, 365, 366, 367, 369, 372], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 71, 74, 75, 76, 77, 78, 79, 87, 88, 89, 92, 93, 94, 95, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 118, 127, 128, 132, 134, 137, 145, 147, 149, 151, 159, 161, 167, 169, 171, 173, 175, 177, 186, 189, 190, 192, 198, 201, 204, 208, 209, 212, 213, 219, 224, 242, 246, 249, 250, 252, 254, 255, 256, 278, 283, 290, 293, 296, 311, 312, 326, 327, 342, 343, 348, 353, 355, 357, 358, 359, 360, 364, 365, 367, 368, 369, 371, 372], "constructor": [1, 2, 15, 17, 18, 19, 20, 40, 47, 60, 68, 80, 89, 93, 106, 109, 115, 116, 125, 168, 189, 190, 209, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 341, 344, 348, 353, 354, 355, 357, 360, 365, 366, 369], "iter": [1, 2, 3, 11, 14, 15, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 71, 75, 85, 86, 89, 93, 98, 99, 109, 115, 139, 147, 160, 177, 189, 190, 209, 214, 215, 228, 235, 241, 248, 249, 251, 253, 254, 256, 278, 290, 326, 329, 330, 349, 350, 353, 355, 356, 360, 362, 365, 366, 367], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 39, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 89, 90, 93, 94, 95, 97, 98, 99, 105, 106, 109, 112, 115, 123, 169, 177, 202, 204, 206, 208, 243, 246, 253, 254, 334, 344, 348, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 369, 370, 372], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 42, 54, 69, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 105, 106, 107, 109, 110, 111, 112, 115, 123, 128, 141, 144, 147, 163, 164, 165, 166, 169, 174, 177, 186, 187, 188, 200, 202, 204, 206, 208, 210, 211, 239, 243, 244, 246, 247, 248, 252, 262, 272, 280, 292, 293, 294, 295, 296, 299, 300, 301, 312, 315, 321, 326, 330, 350, 354, 356, 358, 359, 361, 362, 364, 367, 368, 371], "queri": [1, 3, 13, 33, 36, 38, 41, 89, 93, 109, 115, 151, 168, 171, 175, 177, 254, 353, 359, 367, 371], "defin": [1, 2, 11, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 60, 89, 93, 109, 115, 152, 164, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 214, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 259, 266, 268, 278, 293, 294, 295, 296, 297, 312, 341, 353, 354, 356, 359, 362, 367, 369, 372], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 28, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 76, 77, 82, 85, 86, 89, 92, 93, 94, 98, 99, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 128, 129, 136, 142, 146, 147, 158, 163, 166, 169, 175, 177, 188, 189, 190, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 218, 219, 220, 223, 225, 226, 229, 230, 231, 232, 235, 239, 240, 243, 244, 246, 247, 248, 251, 252, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 279, 280, 281, 282, 283, 285, 321, 323, 326, 330, 332, 333, 334, 342, 343, 344, 348, 353, 354, 355, 356, 357, 358, 360, 362, 365, 366, 367, 368, 369, 372], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 33, 47, 59, 75, 80, 89, 93, 109, 115, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 179, 202, 204, 208, 209, 216, 217, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 294, 295, 296, 327, 353, 355, 356, 360, 361, 365, 366, 367, 369, 372], "deliv": [1, 2, 3, 15, 60, 353, 354, 357, 360, 371], "stack": [1, 2, 3, 7, 8, 13, 14, 17, 19, 20, 29, 30, 36, 37, 38, 40, 41, 43, 44, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 71, 89, 93, 102, 109, 110, 111, 115, 175, 202, 204, 206, 207, 208, 246, 253, 254, 312, 321, 348, 354, 357, 364, 365, 367, 371], "user": [1, 2, 3, 5, 8, 33, 54, 56, 60, 62, 77, 89, 93, 109, 115, 130, 164, 169, 177, 179, 196, 280, 283, 313, 341, 349, 350, 353, 354, 357, 359, 360, 367, 371, 372], "reach": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 75, 89, 93, 103, 104, 109, 115, 116, 117, 163, 239, 243, 244, 247, 353, 355, 362, 365, 366, 371, 372], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 129, 134, 135, 137, 138, 139, 146, 147, 149, 153, 154, 156, 158, 160, 163, 165, 166, 168, 169, 175, 177, 186, 187, 188, 202, 204, 208, 211, 246, 262, 263, 264, 265, 266, 268, 269, 270, 276, 277, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 349, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "state": [1, 2, 3, 4, 13, 14, 15, 16, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 105, 109, 110, 111, 112, 113, 114, 115, 125, 128, 129, 130, 132, 138, 147, 154, 163, 164, 168, 169, 175, 177, 179, 186, 187, 188, 191, 196, 200, 202, 203, 204, 206, 207, 208, 209, 211, 219, 222, 223, 225, 226, 232, 236, 246, 251, 257, 262, 264, 268, 277, 278, 280, 281, 282, 283, 291, 292, 293, 294, 295, 296, 297, 344, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 372], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 26, 33, 36, 38, 41, 42, 54, 71, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 106, 107, 109, 112, 115, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 186, 202, 204, 208, 216, 239, 241, 243, 249, 273, 283, 354, 355, 356, 357, 358, 360, 362, 365, 366, 367, 368, 369, 372], "predefin": [1, 354, 356, 360, 369], "becaus": [1, 3, 4, 7, 36, 38, 41, 42, 54, 89, 93, 109, 115, 138, 145, 163, 168, 174, 177, 195, 215, 235, 241, 242, 246, 248, 249, 250, 251, 252, 353, 354, 356, 358, 359, 360, 364, 365, 366, 367, 369, 372], "potenti": [1, 2, 367, 369], "comput": [1, 3, 4, 8, 13, 15, 20, 28, 33, 42, 85, 86, 89, 93, 98, 99, 109, 115, 147, 161, 169, 172, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 218, 219, 220, 221, 222, 225, 226, 228, 230, 231, 233, 236, 239, 240, 242, 243, 246, 247, 248, 250, 252, 255, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 334, 349, 353, 355, 356, 357, 358, 364, 365, 366, 368, 369], "heavi": [1, 8, 54, 369], "crucial": [1, 2, 3, 239, 243, 244, 247, 269, 276, 278, 353, 354, 355, 356, 357, 359, 361, 365, 366, 367, 372], "configur": [1, 8, 20, 21, 42, 145, 191, 196, 222, 278, 280, 348, 353, 354, 355, 359, 365, 366, 367], "hyperparamet": [1, 74, 177, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 353, 367, 369], "appropri": [1, 3, 4, 7, 64, 72, 80, 81, 83, 84, 109, 115, 138, 341, 344, 353, 361, 369], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 348, 349, 353, 356, 358, 362, 365, 366, 367, 368, 371], "take": [1, 2, 3, 8, 22, 42, 57, 85, 86, 89, 93, 98, 99, 109, 115, 132, 163, 166, 168, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 214, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 255, 258, 261, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 321, 332, 348, 350, 353, 354, 355, 357, 358, 359, 365, 366, 367, 369, 372], "consider": [1, 2, 3, 8, 354, 365, 366, 369], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 99, 103, 104, 105, 109, 110, 111, 115, 116, 117, 125, 134, 137, 164, 169, 177, 187, 189, 190, 204, 208, 209, 256, 262, 263, 264, 265, 266, 268, 270, 271, 277, 278, 280, 281, 282, 283, 285, 291, 293, 296, 353, 354, 355, 357, 365, 366, 367, 372], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 69, 71, 76, 77, 78, 80, 87, 88, 89, 92, 93, 94, 95, 99, 102, 105, 109, 110, 111, 115, 116, 117, 125, 126, 129, 132, 133, 134, 135, 138, 139, 141, 145, 147, 152, 153, 154, 156, 159, 160, 163, 164, 166, 168, 169, 174, 175, 177, 179, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 215, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 248, 250, 251, 252, 255, 258, 262, 264, 270, 275, 277, 278, 280, 281, 282, 284, 292, 293, 294, 295, 296, 297, 313, 315, 325, 326, 327, 330, 340, 342, 343, 344, 348, 350, 353, 354, 355, 356, 358, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "occur": [1, 8, 14, 29, 30, 54, 89, 93, 95, 109, 115, 130, 139, 147, 152, 174, 187, 235, 241, 242, 248, 249, 250, 251, 252, 273, 369, 372], "serial": [1, 2, 3, 33, 89, 93, 109, 115, 175, 177], "parallel": [1, 3, 8, 89, 92, 93, 94, 109, 110, 111, 115, 169, 174, 179, 262, 341, 342, 343, 344, 354, 355, 365, 366], "syncdatacollector": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 33, 126, 129, 156, 340, 343, 346, 353, 354, 355, 356, 360, 362, 365, 366, 369], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 102, 105, 108, 109, 110, 111, 112, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 342, 343, 344, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 369, 372], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 38, 41, 47, 57, 62, 63, 90, 106, 109, 115, 175, 342, 343, 344, 353, 354, 355, 371, 372], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 343, 346, 355, 360, 371], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 76, 77, 102, 110, 111, 202, 206, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 348, 350, 355, 358, 369, 371], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 37, 40, 43, 44, 69, 76, 77, 85, 86, 87, 88, 92, 94, 95, 97, 98, 99, 106, 107, 109, 112, 175, 177, 214, 247, 332, 346, 348, 353, 357, 361, 365, 366, 367], "aggreg": [1, 3, 54, 80, 110, 111, 187, 189, 190, 192, 193, 254], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 39, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 75, 76, 77, 89, 90, 93, 109, 115, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 186, 187, 202, 204, 206, 208, 209, 214, 224, 240, 242, 243, 250, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 332, 348, 354, 356, 357, 358, 359, 360, 361, 362, 367, 368, 371, 372], "final": [1, 2, 3, 4, 20, 36, 38, 41, 42, 165, 174, 202, 204, 206, 208, 214, 239, 243, 244, 245, 247, 253, 293, 326, 348, 353, 354, 355, 361, 362, 365, 366, 367, 372], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 342, 346, 353, 354, 355, 360, 371], "sever": [1, 2, 3, 8, 31, 33, 47, 57, 89, 93, 109, 115, 130, 132, 169, 177, 280, 353, 355, 361, 362, 369, 372], "gather": [1, 3, 17, 19, 20, 47, 63, 65, 66, 76, 82, 152, 213, 221, 292, 334, 347, 354, 355, 356, 360, 365, 366, 367, 369, 372], "continu": [1, 9, 25, 48, 77, 89, 93, 109, 110, 111, 115, 116, 117, 183, 192, 193, 194, 195, 247, 254, 259, 262, 263, 270, 276, 280, 281, 282, 283, 284, 285, 293, 298, 306, 348, 353, 355, 356, 358, 365, 366, 367, 369, 371, 372], "concomitantli": 1, "network": [1, 4, 8, 33, 89, 93, 102, 109, 110, 111, 115, 177, 189, 190, 192, 193, 194, 195, 198, 200, 201, 206, 209, 214, 215, 217, 219, 220, 223, 225, 226, 227, 232, 236, 237, 238, 240, 251, 255, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 297, 339, 340, 348, 349, 350, 359, 362, 364, 367, 372], "impli": [1, 372], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 42, 69, 71, 74, 85, 86, 89, 93, 109, 113, 114, 115, 133, 151, 165, 168, 169, 171, 173, 177, 202, 203, 204, 206, 207, 208, 214, 217, 251, 262, 263, 264, 270, 273, 283, 332, 339, 348, 350, 353, 354, 355, 356, 364, 367, 369, 371], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 33, 36, 38, 41, 56, 62, 89, 92, 93, 94, 95, 109, 112, 115, 145, 147, 160, 169, 170, 175, 177, 179, 209, 214, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 371, 372], "slightli": [1, 54, 348, 349, 356, 365, 367, 368, 369, 372], "lag": [1, 353, 354, 355], "therefor": [1, 2, 3, 7, 37, 40, 43, 44, 61, 62, 89, 93, 109, 115, 156, 280, 291, 359, 365, 372], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 71, 76, 77, 80, 82, 89, 93, 102, 105, 108, 109, 110, 111, 115, 123, 126, 129, 138, 145, 151, 156, 159, 163, 164, 166, 168, 170, 173, 174, 186, 187, 202, 203, 206, 207, 212, 213, 214, 239, 243, 244, 247, 248, 251, 252, 261, 262, 263, 264, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 349, 350, 353, 354, 355, 357, 364, 365, 366, 367, 369, 372], "asynchron": [1, 9, 14, 20, 33, 36, 38, 41, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 262, 342, 353, 354, 355], "off": [1, 2, 4, 205, 231, 241, 283, 311, 326, 335, 348, 350, 353, 354, 355, 358, 359, 365, 366, 368, 372], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 82, 89, 93, 109, 110, 111, 115, 116, 134, 137, 141, 147, 164, 169, 174, 177, 179, 199, 202, 204, 206, 208, 215, 216, 236, 238, 240, 242, 249, 262, 269, 271, 276, 280, 326, 348, 350, 353, 354, 355, 356, 357, 358, 360, 361, 365, 366, 367, 368, 369, 372], "remot": [1, 2, 17, 18, 19, 20, 109, 115, 372], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 42, 80, 85, 86, 89, 93, 95, 96, 98, 99, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 129, 132, 134, 137, 138, 139, 145, 149, 153, 154, 159, 160, 161, 163, 164, 166, 177, 179, 188, 204, 208, 211, 246, 247, 262, 311, 313, 334, 348, 353, 355, 356, 358, 359, 360, 361, 362, 368, 369, 371], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 54, 57, 58, 60, 61, 62, 89, 93, 103, 104, 109, 115, 116, 117, 160, 281, 293, 294, 295, 296, 297, 349, 353, 355, 358, 359, 360], "synchronis": [1, 90, 365, 366], "either": [1, 2, 5, 21, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 71, 89, 93, 109, 115, 163, 164, 177, 257, 285, 317, 350, 353, 354, 356, 365, 368, 369, 371, 372], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 353, 366, 371], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 128, 129, 130, 133, 136, 139, 141, 144, 145, 146, 147, 151, 152, 154, 155, 158, 159, 160, 163, 165, 167, 168, 169, 170, 171, 173, 175, 177, 179, 183, 186, 187, 188, 189, 190, 192, 193, 194, 195, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 230, 231, 235, 236, 237, 238, 239, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 293, 294, 295, 296, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 320, 323, 324, 326, 327, 330, 344, 348, 349, 350, 353, 354, 355, 356, 357, 358, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "second": [1, 3, 8, 54, 57, 80, 126, 202, 204, 206, 208, 242, 264, 277, 280, 283, 315, 329, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 133, 134, 135, 137, 138, 139, 145, 149, 150, 151, 153, 154, 156, 160, 163, 165, 167, 168, 169, 171, 173, 177, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 214, 215, 216, 217, 222, 223, 224, 232, 235, 236, 237, 238, 240, 241, 242, 246, 247, 248, 249, 250, 251, 254, 256, 259, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 311, 327, 332, 338, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 46, 47, 48, 49, 69, 76, 89, 93, 109, 115, 126, 141, 145, 168, 177, 198, 199, 203, 207, 218, 236, 237, 238, 241, 242, 245, 251, 257, 262, 264, 265, 266, 271, 277, 280, 282, 291, 292, 293, 294, 295, 296, 330, 346, 350, 353, 354, 355, 356, 357, 358, 364, 365, 366, 367, 372], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 77, 82, 88, 89, 90, 93, 105, 109, 115, 129, 147, 165, 168, 169, 175, 177, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 266, 269, 270, 278, 291, 293, 294, 295, 296, 311, 313, 317, 326, 334, 335, 336, 340, 342, 343, 348, 349, 350, 353, 355, 356, 357, 358, 367, 369, 372], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 24, 26, 29, 33, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 82, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 133, 134, 135, 137, 138, 139, 149, 151, 153, 154, 156, 160, 163, 165, 168, 169, 171, 173, 177, 183, 186, 188, 198, 202, 203, 204, 206, 207, 208, 211, 216, 217, 223, 224, 232, 235, 236, 237, 238, 240, 241, 242, 246, 248, 249, 250, 251, 254, 256, 259, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 311, 327, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 54, 56, 60, 69, 76, 77, 79, 80, 89, 93, 97, 109, 112, 115, 154, 195, 204, 206, 208, 209, 218, 233, 235, 239, 241, 251, 256, 278, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 347, 349, 353, 354, 355, 357, 359, 360, 365, 366, 367, 369, 371, 372], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 69, 71, 72, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 123, 126, 129, 132, 134, 135, 136, 137, 146, 147, 151, 156, 159, 162, 164, 165, 166, 168, 169, 170, 173, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 215, 218, 219, 220, 221, 222, 224, 225, 226, 228, 233, 235, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 300, 301, 315, 323, 325, 326, 330, 334, 344, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 372], "cuda": [1, 2, 3, 7, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 89, 93, 95, 96, 97, 109, 115, 133, 145, 150, 151, 165, 168, 169, 171, 173, 177, 202, 203, 206, 207, 251, 322, 353, 354, 355, 356, 365, 366, 368, 372], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 28, 45, 71, 85, 86, 98, 99, 109, 115, 130, 132, 136, 146, 156, 159, 163, 168, 175, 202, 206, 208, 214, 216, 217, 235, 241, 248, 249, 251, 252, 255, 264, 270, 277, 280, 281, 285, 299, 344, 348, 350, 353, 354, 355, 357, 359, 360, 365, 366, 367, 369, 371], "infer": [1, 109, 115, 129, 175, 204, 208, 216, 240, 268, 311, 353, 355, 360, 362, 369], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 33, 54, 57, 69, 76, 77, 85, 86, 87, 88, 89, 92, 93, 98, 99, 105, 106, 107, 109, 115, 146, 147, 169, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 253, 254, 255, 258, 283, 313, 320, 326, 342, 343, 344, 347, 350, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371], "dispatch": [1, 17, 18, 19, 20, 233, 246, 313, 353], "avail": [1, 3, 4, 6, 20, 37, 40, 43, 44, 54, 57, 62, 69, 75, 76, 77, 87, 88, 97, 103, 104, 109, 110, 111, 112, 116, 117, 125, 128, 145, 199, 224, 248, 252, 278, 313, 342, 343, 348, 353, 354, 355, 356, 357, 358, 365, 366, 367, 369, 372], "speed": [1, 2, 4, 8, 28, 89, 93, 109, 115, 349, 353, 354, 355, 356, 365, 366, 367, 369], "avoid": [1, 2, 3, 33, 65, 66, 82, 89, 93, 109, 115, 122, 169, 175, 177, 235, 251, 256, 264, 277, 280, 283, 333, 355, 366], "oom": [1, 3, 36, 38, 41, 65, 66, 82], "choic": [1, 2, 56, 62, 109, 218, 348, 349, 353, 354, 359, 365, 366], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 29, 33, 37, 40, 42, 43, 44, 47, 54, 57, 58, 60, 61, 62, 65, 66, 69, 71, 76, 77, 80, 82, 89, 90, 91, 93, 102, 106, 109, 110, 111, 115, 116, 125, 126, 134, 137, 154, 168, 170, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 214, 215, 216, 218, 219, 220, 222, 223, 225, 226, 228, 232, 233, 235, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 264, 277, 278, 280, 293, 294, 295, 296, 297, 311, 327, 342, 343, 344, 348, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 369, 372], "ie": [1, 3, 17, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 43, 46, 47, 48, 49, 60, 68, 77, 89, 93, 97, 108, 109, 115, 129, 141, 170, 175, 187, 204, 208, 240, 262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 293, 294, 295, 296, 348, 349, 354, 366], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 76, 80, 82, 89, 93, 109, 115, 174, 175, 177, 188, 211, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 320, 346, 350, 353, 355, 356, 358, 360, 362, 365, 366, 368, 372], "while": [1, 2, 3, 7, 8, 33, 89, 93, 109, 115, 156, 169, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 269, 276, 277, 280, 283, 348, 353, 355, 356, 358, 360, 361, 365, 366, 367, 368, 369, 371], "wait": [1, 19, 20, 21, 356, 367], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 33, 36, 38, 40, 41, 43, 54, 57, 58, 60, 61, 62, 63, 65, 66, 69, 71, 76, 77, 80, 82, 89, 93, 103, 104, 109, 110, 111, 115, 116, 117, 122, 125, 126, 128, 129, 136, 147, 154, 156, 159, 160, 163, 165, 169, 177, 186, 189, 190, 202, 206, 226, 246, 248, 253, 254, 255, 262, 263, 265, 266, 268, 269, 270, 276, 280, 283, 293, 300, 301, 311, 313, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 369, 372], "impact": [1, 60, 99, 134, 137, 262, 264, 277, 280, 282, 354, 356, 365, 366], "memori": [1, 3, 8, 20, 28, 33, 36, 38, 41, 47, 54, 56, 57, 58, 60, 61, 62, 65, 89, 90, 93, 97, 109, 115, 129, 133, 151, 165, 168, 169, 171, 173, 175, 177, 206, 207, 251, 344, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "manag": [1, 8, 289, 290, 293, 294, 295, 296, 326, 359], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 68, 69, 71, 74, 76, 77, 80, 89, 93, 98, 99, 109, 110, 111, 115, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 150, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 186, 187, 188, 198, 199, 204, 208, 210, 211, 224, 235, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 311, 313, 324, 325, 326, 328, 329, 330, 334, 349, 350, 353, 355, 356, 357, 359, 364, 365, 366, 367, 369, 371, 372], "control": [1, 3, 5, 8, 15, 23, 27, 76, 87, 88, 89, 93, 102, 109, 110, 111, 115, 136, 186, 192, 193, 194, 195, 204, 208, 210, 211, 226, 233, 247, 251, 252, 253, 262, 264, 277, 280, 284, 293, 298, 306, 311, 348, 350, 353, 354, 355, 357, 358, 359, 365, 366, 367, 369], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 71, 74, 75, 80, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 103, 104, 106, 107, 109, 112, 115, 116, 117, 129, 130, 134, 137, 142, 145, 146, 147, 151, 152, 163, 165, 166, 168, 169, 171, 177, 179, 198, 202, 203, 205, 206, 207, 208, 212, 213, 214, 231, 236, 237, 238, 240, 246, 248, 251, 252, 254, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 311, 313, 321, 325, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369, 372], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 354, 366], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 37, 38, 40, 42, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 69, 71, 74, 76, 89, 93, 109, 110, 111, 115, 125, 126, 129, 132, 134, 137, 139, 142, 149, 161, 169, 177, 204, 208, 215, 293, 295, 296, 326, 330, 349, 353, 354, 355, 356, 358, 359, 360, 362, 365, 366, 367, 369, 372], "heurist": [1, 4, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 246, 247, 353, 360, 372], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 56, 74, 80, 85, 86, 89, 93, 98, 99, 109, 115, 217, 280, 293, 294, 295, 296, 297, 312, 347, 348, 350, 353, 354, 355, 356, 358, 360, 361, 366, 369, 372], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 26, 29, 30, 33, 36, 38, 41, 45, 47, 56, 60, 75, 76, 79, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 106, 107, 109, 110, 111, 112, 115, 129, 134, 136, 137, 142, 146, 147, 168, 169, 175, 177, 189, 190, 203, 204, 207, 208, 209, 212, 213, 214, 215, 240, 247, 255, 283, 353, 354, 355, 357, 358, 360, 364, 365, 366, 368, 369, 372], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 74, 75, 76, 77, 80, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 141, 145, 146, 147, 149, 151, 152, 156, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 177, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 235, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 340, 344, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 368, 369, 371, 372], "behaviour": [1, 3, 13, 14, 20, 60, 93, 130, 134, 137, 147, 152, 164, 186, 204, 205, 208, 231, 311, 326, 348, 354, 365, 369], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 29, 89, 93, 109, 115, 129, 134, 137, 147, 165, 166, 208, 248, 252, 253, 254, 332, 342, 343, 348, 353, 354, 357, 358, 366, 367, 372], "choos": [1, 102, 204, 208, 280, 346, 348, 349, 353, 354, 355, 365, 366, 369], "follow": [1, 2, 3, 6, 7, 8, 33, 36, 38, 39, 41, 42, 54, 56, 57, 58, 59, 60, 61, 62, 69, 85, 86, 89, 93, 98, 99, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 125, 145, 151, 171, 177, 189, 190, 202, 204, 206, 208, 209, 242, 249, 250, 261, 262, 263, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 313, 330, 348, 349, 350, 353, 354, 355, 356, 359, 360, 364, 365, 366, 367, 369, 371, 372], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 333, 353, 355, 371], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 54, 129, 142, 177, 239, 243, 246, 247, 312, 313, 315, 323, 326, 330, 333, 334, 353, 354, 355, 356, 358, 365, 366, 369, 371, 372], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 75, 76, 78, 79, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 106, 107, 108, 109, 112, 115, 125, 126, 129, 132, 133, 136, 139, 141, 144, 145, 147, 149, 150, 151, 159, 161, 165, 168, 169, 171, 173, 174, 175, 177, 179, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 215, 216, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 244, 246, 247, 250, 251, 252, 254, 255, 258, 264, 277, 280, 283, 292, 293, 294, 295, 296, 311, 312, 326, 350, 354, 355, 356, 357, 358, 360, 361, 365, 366, 367, 369, 371, 372], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 126, 129, 156, 333, 353, 354, 355, 356, 360, 362, 365, 366, 369, 371], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 32, 33, 40, 42, 43, 54, 56, 57, 60, 71, 74, 76, 77, 80, 89, 90, 93, 103, 104, 109, 110, 111, 115, 116, 117, 151, 156, 159, 163, 164, 165, 166, 173, 175, 177, 199, 202, 203, 204, 206, 208, 214, 215, 219, 223, 224, 232, 239, 241, 242, 243, 250, 254, 299, 302, 303, 304, 305, 307, 308, 309, 310, 313, 326, 327, 342, 343, 348, 353, 354, 355, 356, 358, 359, 360, 362, 365, 366, 367, 368, 369, 371, 372], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 333, 353, 354, 362], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 42, 46, 48, 49, 60, 62, 70, 80, 89, 93, 105, 109, 115, 136, 146, 147, 165, 178, 179, 202, 204, 206, 208, 243, 248, 251, 252, 259, 263, 281, 326, 334, 348, 353, 354, 355, 356, 357, 358, 360, 367, 368, 369, 371, 372], "rand_step": [1, 3, 87, 88, 89, 90, 92, 93, 94, 100, 101, 105, 106, 107, 109, 115, 144, 165, 175, 367, 371, 372], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 353], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 56, 58, 60, 61, 62, 353, 354, 355], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 33, 43, 54, 56, 57, 58, 60, 61, 62, 68, 69, 76, 77, 80, 85, 86, 89, 93, 98, 99, 109, 115, 152, 163, 168, 177, 188, 208, 211, 247, 280, 293, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 321, 346, 349, 353, 354, 355, 356, 357, 360, 362, 367, 371, 372], "pad": [1, 2, 3, 22, 39, 45, 56, 58, 60, 61, 62, 129, 189, 190, 192, 193, 208, 212, 213, 214, 327], "along": [1, 2, 3, 13, 14, 22, 29, 30, 36, 38, 41, 42, 47, 56, 58, 60, 61, 62, 66, 69, 71, 76, 77, 80, 82, 128, 129, 130, 147, 149, 152, 159, 167, 208, 209, 212, 213, 217, 241, 248, 251, 252, 278, 348, 353, 354, 356, 357, 359, 365, 366, 367, 369], "point": [1, 2, 3, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 59, 64, 68, 69, 72, 80, 81, 83, 84, 89, 93, 109, 115, 125, 128, 129, 133, 151, 164, 165, 167, 168, 169, 171, 173, 177, 210, 251, 261, 271, 330, 347, 354, 355, 364, 365, 366, 367, 369, 372], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 48, 49, 69, 76, 77, 93, 125, 152, 163, 187, 212, 213, 239, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 350, 356], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 43, 58, 87, 88, 89, 93, 109, 115, 116, 117, 142, 152, 175, 177, 199, 212, 213, 224, 241, 242, 249, 250, 252, 288, 293, 327, 353, 355, 356, 357, 358, 359, 365, 366], "valid": [1, 2, 3, 22, 36, 38, 39, 47, 63, 80, 118, 125, 152, 169, 177, 189, 190, 209, 212, 213, 239, 247, 277, 293, 294, 295, 296, 327, 350, 372], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 326, 346, 353, 354], "strategi": [1, 2, 15, 60, 74, 102, 213, 221, 243, 348, 350, 353, 354, 358, 365, 366, 369], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 46, 48, 49, 51, 71, 89, 93, 99, 105, 109, 110, 111, 115, 116, 118, 126, 128, 129, 138, 145, 163, 164, 165, 168, 169, 174, 175, 177, 189, 190, 212, 213, 214, 215, 239, 241, 248, 249, 252, 255, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 313, 330, 340, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 372], "organ": [1, 2, 367, 369], "within": [1, 2, 3, 13, 14, 16, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 112, 115, 126, 129, 134, 137, 138, 156, 163, 174, 175, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 259, 266, 271, 291, 311, 313, 348, 354, 357, 358, 359, 360, 361, 362, 365, 367, 371], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 47, 48, 49, 56, 57, 60, 74, 85, 86, 89, 93, 98, 99, 102, 109, 110, 111, 115, 125, 129, 136, 147, 154, 169, 170, 177, 199, 202, 203, 204, 206, 207, 208, 209, 211, 214, 215, 224, 276, 280, 288, 293, 294, 295, 299, 300, 301, 326, 330, 332, 342, 343, 348, 349, 350, 353, 354, 355, 357, 359, 361, 364, 365, 366, 367, 368, 369, 372], "how": [1, 2, 3, 17, 18, 19, 23, 33, 37, 43, 60, 68, 69, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 177, 262, 264, 275, 277, 280, 313, 315, 330, 347, 348, 353, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "tabl": [1, 348, 354, 358], "summar": [1, 3, 367], "what": [1, 3, 8, 27, 37, 46, 54, 76, 89, 93, 109, 115, 138, 165, 179, 186, 249, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 362, 365, 366, 367, 368, 369, 371, 372], "expect": [1, 2, 3, 4, 7, 26, 33, 40, 46, 47, 69, 75, 76, 89, 93, 105, 108, 109, 115, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 147, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 202, 203, 204, 206, 207, 208, 214, 215, 242, 247, 251, 254, 262, 263, 264, 265, 266, 268, 269, 270, 276, 277, 278, 280, 281, 282, 283, 285, 291, 334, 347, 348, 349, 350, 353, 355, 356, 357, 358, 359, 360, 365, 366, 367, 369, 372], "n": [1, 2, 3, 6, 7, 24, 28, 33, 35, 42, 89, 93, 109, 115, 129, 136, 141, 170, 177, 202, 203, 206, 211, 246, 247, 252, 262, 270, 278, 292, 327, 348, 350, 354, 356, 358, 365, 366, 369, 372], "b": [1, 2, 3, 7, 8, 22, 26, 29, 36, 38, 40, 41, 42, 43, 44, 80, 202, 203, 206, 207, 214, 215, 216, 217, 223, 232, 255, 293, 294, 295, 296, 297, 299, 313, 348, 354, 368, 369], "cat_result": [1, 13, 14], "na": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 82, 85, 86, 89, 92, 93, 95, 96, 98, 99, 105, 106, 107, 109, 112, 113, 114, 115, 123, 125, 127, 129, 130, 132, 133, 135, 136, 145, 146, 147, 151, 156, 159, 161, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 188, 189, 190, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 221, 225, 226, 229, 230, 231, 233, 235, 239, 240, 242, 243, 244, 247, 250, 251, 254, 255, 258, 259, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 291, 292, 293, 294, 295, 296, 299, 300, 301, 321, 328, 340, 344, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372], "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 75, 80, 89, 90, 92, 93, 106, 107, 109, 115, 125, 129, 134, 137, 138, 151, 155, 156, 164, 166, 173, 175, 177, 179, 186, 202, 206, 241, 247, 251, 284, 293, 294, 295, 296, 297, 299, 313, 320, 330, 332, 344, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "p": [1, 2, 4, 71, 74, 90, 113, 114], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 54, 56, 58, 60, 61, 62, 85, 86, 89, 93, 98, 99, 109, 110, 111, 115, 133, 134, 135, 137, 151, 156, 160, 164, 165, 167, 168, 169, 171, 173, 174, 177, 202, 205, 206, 209, 214, 226, 230, 231, 251, 254, 261, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 332, 342, 343, 344, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 372], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 80, 89, 93, 109, 115, 134, 135, 137, 167, 169, 179, 208, 209, 215, 248, 251, 252, 254, 255, 261, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296, 313, 321, 332, 342, 343, 344, 346, 348, 350, 353, 354, 355, 356, 357, 358, 360, 361, 365, 366, 367, 369, 372], "dimens": [1, 2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 46, 47, 48, 49, 56, 58, 60, 61, 62, 65, 66, 69, 76, 77, 80, 82, 87, 88, 89, 92, 93, 94, 95, 109, 115, 116, 117, 128, 129, 130, 141, 147, 149, 152, 159, 162, 167, 170, 175, 189, 190, 191, 196, 204, 206, 208, 209, 212, 213, 214, 216, 217, 222, 223, 227, 228, 229, 230, 233, 241, 246, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 344, 348, 353, 354, 355, 356, 357, 365, 366, 367, 369], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 85, 86, 89, 90, 93, 98, 99, 102, 108, 109, 110, 111, 112, 115, 122, 128, 130, 152, 159, 165, 166, 169, 175, 177, 186, 200, 202, 206, 208, 246, 247, 264, 270, 273, 277, 278, 280, 281, 285, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 330, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "adapt": [1, 23, 123, 163, 277, 353, 367], "equal": [1, 13, 14, 16, 54, 69, 76, 77, 106, 109, 115, 146, 147, 189, 190, 202, 204, 206, 208, 209, 215, 284, 288, 321, 342, 343, 353, 355, 368], "introduc": [1, 2, 109, 115, 202, 204, 206, 208, 247, 353, 365], "some": [1, 2, 3, 4, 7, 8, 9, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 46, 47, 48, 49, 56, 62, 65, 66, 71, 80, 82, 85, 86, 89, 93, 98, 99, 103, 104, 109, 110, 111, 115, 116, 117, 125, 151, 165, 169, 171, 177, 179, 192, 204, 208, 228, 252, 253, 254, 313, 321, 333, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 369, 371, 372], "confus": [1, 33, 89, 93, 109, 115, 169, 177], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 33, 36, 37, 38, 41, 43, 44, 47, 54, 56, 58, 60, 61, 62, 65, 66, 67, 71, 74, 75, 76, 77, 78, 79, 82, 89, 92, 93, 94, 105, 109, 115, 132, 135, 136, 153, 160, 167, 171, 175, 177, 202, 204, 208, 217, 218, 240, 242, 243, 250, 252, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 311, 327, 342, 343, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 368, 371, 372], "better": [1, 3, 8, 9, 13, 14, 204, 208, 349, 355, 357, 367, 371], "consist": [1, 2, 3, 33, 37, 40, 43, 44, 57, 60, 89, 93, 109, 115, 145, 174, 177, 190, 209, 353, 354, 355, 367, 368, 372], "interact": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 60, 89, 93, 103, 104, 109, 115, 169, 248, 252, 353, 355, 357, 358, 360, 365, 366, 367, 372], "keep": [1, 3, 4, 7, 8, 14, 37, 40, 43, 44, 75, 80, 109, 115, 147, 151, 173, 175, 177, 186, 247, 323, 330, 353, 354, 355, 356, 360, 361, 362, 366, 367, 369, 371, 372], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 54, 57, 151, 173, 263, 265, 268, 270, 281, 283, 285, 353, 354, 358, 359, 365, 366, 369, 372], "interchang": [1, 355, 357, 361, 368, 369], "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 23, 33, 36, 37, 38, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 75, 76, 77, 89, 93, 103, 104, 109, 115, 116, 117, 136, 146, 157, 169, 177, 179, 189, 190, 198, 202, 204, 208, 209, 214, 215, 242, 248, 252, 262, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 293, 326, 330, 349, 353, 354, 356, 360, 365, 366, 367, 369, 372], "wherea": [1, 2, 21, 60, 85, 86, 87, 88, 92, 94, 95, 98, 99, 106, 107, 112, 136, 177, 278, 350, 361], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 46, 48, 49, 57, 60, 62, 68, 69, 89, 93, 105, 109, 115, 151, 165, 169, 173, 175, 177, 204, 206, 208, 212, 213, 243, 244, 247, 248, 252, 266, 269, 270, 283, 291, 293, 294, 295, 296, 297, 353, 354, 355, 357, 359, 360, 361, 365, 366, 367, 368], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 54, 60, 69, 76, 80, 89, 93, 109, 115, 152, 253, 254, 321, 330, 348, 353, 354, 355, 360, 364, 371, 372], "doesn": [1, 4, 11, 80, 106, 134, 137, 357], "understood": [1, 353], "serv": [1, 17, 19, 20, 95, 369, 372], "basi": [1, 80, 214, 369], "simplest": [1, 80, 255, 353, 355, 356, 358, 365, 366, 369, 372], "scenario": [1, 2, 103, 104, 109, 116, 117, 311, 353, 358, 365, 366, 367], "transit": [1, 33, 56, 60, 77, 80, 89, 93, 109, 115, 177, 257, 353, 356, 357, 358, 360, 365, 367, 369], "sampl": [1, 4, 8, 9, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 82, 89, 93, 105, 108, 109, 115, 128, 129, 152, 156, 180, 181, 184, 185, 188, 197, 205, 211, 212, 213, 221, 222, 225, 230, 231, 235, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 268, 277, 279, 280, 285, 321, 327, 330, 333, 346, 348, 353, 354, 355, 356, 357, 358, 360, 362, 365, 366, 368, 371, 372], "attent": [1, 2, 8, 353, 356, 372], "given": [1, 2, 3, 13, 14, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 89, 93, 105, 109, 115, 133, 136, 147, 151, 165, 168, 169, 171, 173, 177, 186, 188, 199, 200, 202, 206, 211, 224, 228, 235, 241, 242, 243, 246, 247, 250, 251, 252, 253, 254, 256, 261, 265, 266, 268, 292, 293, 294, 295, 296, 297, 299, 322, 326, 340, 348, 350, 353, 354, 355, 357, 358, 359, 360, 361, 366, 367, 372], "built": [1, 2, 3, 5, 7, 71, 85, 86, 92, 98, 99, 108, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 291, 338, 340, 341, 344, 353, 354, 355, 356, 359, 361, 369, 372], "flatten": [1, 2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 46, 48, 49, 80, 126, 141, 327, 356, 366], "suffici": [1, 3, 4, 353], "preprocess": [1, 2, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 354], "popul": [1, 2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 144, 165, 353, 355, 356, 358, 360, 367, 369], "replaybuff": [1, 2, 37, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 76, 83, 129, 152, 156, 177, 266, 271, 291, 338, 340, 346, 355, 360, 362, 365, 366, 368, 369, 371], "lazytensorstorag": [1, 2, 37, 40, 43, 44, 68, 80, 156, 177, 355, 362, 366, 369], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 40, 80, 89, 90, 93, 109, 115, 122, 126, 145, 165, 177, 233, 241, 246, 249, 272, 274, 293, 296, 304, 305, 309, 310, 311, 340, 349, 353, 365, 366, 369, 371, 372], "reshap": [1, 2, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 60, 76, 80, 126, 204, 208, 209, 311, 355, 365, 366], "extend": [1, 2, 8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 71, 72, 76, 77, 79, 80, 81, 83, 84, 128, 156, 177, 327, 350, 353, 354, 355, 356, 360, 362, 365, 366, 368, 369, 371], "slice": [1, 2, 3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 128, 369], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 37, 38, 40, 41, 43, 44, 80, 97, 360, 365, 366], "achiev": [1, 2, 3, 4, 33, 89, 93, 97, 109, 115, 164, 177, 187, 327, 350, 353, 354, 355, 356, 365, 366, 367, 369, 372], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 36, 37, 38, 40, 41, 43, 44, 47, 60, 62, 63, 80, 89, 90, 93, 97, 109, 110, 115, 116, 117, 126, 129, 151, 168, 169, 171, 174, 175, 177, 183, 186, 189, 190, 192, 193, 194, 195, 196, 201, 204, 208, 209, 210, 214, 215, 240, 252, 259, 266, 271, 281, 283, 291, 313, 327, 334, 335, 336, 340, 342, 343, 348, 353, 354, 355, 356, 358, 361, 365, 366, 367, 368, 369, 371, 372], "multidimension": [1, 2, 43, 68, 69, 369], "slicesampl": [1, 2, 54, 69, 369], "sampler": [1, 2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 152, 266, 271, 291, 353, 355, 365, 366, 369], "One": [1, 2, 4, 8, 32, 35, 47, 80, 85, 86, 109, 115, 129, 156, 171, 221, 239, 251, 255, 284, 288, 317, 353, 354, 369, 372], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 76, 77, 78, 79, 80, 82, 85, 89, 90, 93, 98, 109, 110, 111, 112, 115, 116, 125, 126, 129, 132, 138, 142, 145, 147, 149, 160, 164, 165, 166, 169, 170, 175, 177, 189, 190, 199, 204, 208, 209, 212, 213, 214, 215, 224, 235, 241, 242, 246, 248, 249, 250, 251, 252, 255, 256, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 353, 354, 355, 356, 358, 364, 367, 369], "ensur": [1, 2, 3, 33, 37, 43, 68, 69, 75, 89, 93, 109, 115, 129, 151, 163, 169, 171, 175, 177, 241, 348, 354, 355, 367, 369], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 80, 82, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 108, 109, 110, 111, 113, 114, 115, 116, 117, 126, 128, 130, 134, 137, 138, 139, 145, 147, 149, 153, 154, 156, 160, 163, 165, 167, 175, 176, 177, 179, 183, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 229, 232, 235, 236, 237, 238, 240, 241, 242, 246, 248, 249, 250, 251, 254, 255, 256, 259, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 321, 327, 330, 340, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 371, 372], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 54, 205, 230, 231, 261, 347, 353, 354, 355, 356, 359, 365, 366, 368, 372], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 23, 27, 33, 36, 38, 78, 80, 89, 93, 97, 102, 109, 110, 111, 115, 129, 132, 141, 151, 154, 166, 169, 173, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 216, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 249, 250, 251, 255, 258, 261, 270, 281, 282, 283, 285, 292, 297, 313, 330, 344, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 371, 372], "dimension": [1, 37, 40, 43, 44, 136, 204, 208, 293, 298, 306, 366], "num_slic": [1, 2, 54, 60, 69, 76, 77, 369], "4": [1, 2, 3, 7, 24, 26, 28, 29, 33, 35, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 76, 77, 82, 85, 86, 87, 88, 89, 93, 98, 99, 100, 101, 102, 105, 107, 109, 113, 114, 115, 123, 125, 126, 129, 138, 156, 163, 164, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 206, 207, 209, 211, 214, 215, 218, 219, 220, 221, 222, 223, 224, 232, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 254, 256, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 311, 312, 348, 352, 353, 354, 355, 356, 358, 360, 361, 365, 366, 367, 368, 369, 370, 371, 372], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 126, 156, 356, 360, 369, 371], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 126, 129, 156, 330, 333, 340, 350, 353, 354, 355, 356, 360, 362, 365, 366, 369, 371], "dim": [1, 2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 76, 129, 130, 149, 165, 170, 175, 207, 228, 233, 246, 344, 354, 355, 365, 367, 369], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 46, 47, 48, 49, 56, 58, 60, 69, 76, 77, 89, 93, 97, 106, 109, 112, 115, 126, 133, 151, 165, 168, 169, 171, 173, 177, 204, 208, 209, 233, 251, 253, 254, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 311, 313, 315, 348, 350, 353, 354, 355, 356, 357, 358, 359, 361, 365, 366, 367, 369, 372], "ndim": [1, 2, 37, 40, 43, 44, 65, 66, 80, 82, 89, 93, 109, 115, 177, 246], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 80, 89, 93, 106, 110, 111, 112, 115, 311, 341, 346, 353, 354, 355, 357, 364, 371, 372], "make_env": [1, 3, 109, 115, 117, 175, 311, 335, 336, 353, 354, 372], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 41, 68, 74, 89, 93, 109, 115, 169, 198, 224, 242, 249, 250, 251, 252, 271, 332, 346, 350, 353, 354, 357, 358, 362, 369, 372], "behav": [1, 3, 95, 105, 202, 206, 221, 269, 276, 368], "iif": 1, "accordingli": [1, 163, 164, 206, 249, 356, 357, 359, 360, 361], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 77, 80, 82, 87, 88, 89, 92, 93, 94, 95, 96, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 123, 125, 126, 129, 133, 136, 138, 139, 145, 147, 149, 151, 153, 154, 156, 159, 160, 163, 164, 165, 167, 168, 169, 171, 173, 177, 178, 183, 188, 189, 190, 192, 193, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 214, 215, 218, 221, 223, 233, 235, 236, 237, 238, 241, 242, 248, 250, 251, 254, 255, 256, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 329, 348, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 365, 366, 367, 368, 369, 370, 371, 372], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 41, 60, 68, 80, 125, 138, 179, 241, 251, 358, 359, 361, 365, 366], "current": [1, 2, 3, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 48, 49, 77, 89, 93, 95, 106, 109, 115, 125, 126, 129, 152, 164, 165, 166, 168, 169, 177, 180, 181, 186, 200, 226, 246, 247, 262, 264, 271, 277, 280, 282, 283, 316, 350, 353, 354, 355, 356, 357, 359, 360, 361, 365, 366, 367, 369, 371, 372], "fulli": [1, 8, 33, 89, 93, 109, 115, 177, 203, 207, 354, 359, 367, 369], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 106, 109, 110, 111, 115, 116, 117, 123, 125, 141, 151, 152, 156, 169, 171, 175, 177, 179, 187, 189, 190, 196, 209, 217, 240, 246, 251, 252, 253, 254, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 293, 295, 296, 311, 318, 330, 347, 353, 354, 355, 358, 359, 365, 366, 367, 369, 371, 372], "consecut": [1, 3, 54, 75, 97, 208, 247, 313, 356, 357, 360, 366, 369, 372], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 38, 41, 60, 89, 90, 92, 93, 106, 107, 109, 115, 151, 173, 177, 330, 344, 354, 355, 357, 358], "therebi": [1, 23, 311, 349, 353, 354], "interrupt": [1, 2, 93, 246, 299], "These": [1, 2, 7, 33, 42, 57, 62, 89, 93, 109, 115, 116, 151, 173, 177, 348, 349, 353, 355, 365, 366, 367, 369, 372], "tool": [1, 2, 3, 5, 356, 357, 365, 367, 369, 372], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 89, 92, 93, 109, 115, 119, 122, 350, 353, 355, 356, 357, 360, 361, 367], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 346], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 346], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 178, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 260, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 321, 328, 329, 340, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "multiprocess": [1, 2, 3, 13, 14, 17, 18, 19, 54, 62, 90, 91, 109, 115, 175, 353, 354, 355, 356, 365, 366, 367, 368, 372], "synchron": [1, 13, 18, 20, 36, 38, 41, 106, 342, 343, 354, 355, 365], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 33, 89, 93, 106, 109, 115, 134, 137, 164, 169, 175, 177, 180, 184, 185, 197, 204, 205, 208, 221, 229, 230, 231, 248, 252, 278, 311, 326, 353, 354, 356, 365, 366, 371, 372], "find": [1, 4, 6, 7, 17, 18, 19, 37, 39, 45, 76, 77, 206, 239, 247, 324, 328, 353, 354, 358, 359, 365, 366], "folder": [1, 2, 36, 38, 41, 116, 354], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 87, 88, 89, 90, 92, 93, 94, 95, 103, 104, 105, 109, 110, 111, 115, 116, 117, 118, 128, 129, 132, 133, 134, 135, 137, 140, 145, 146, 147, 151, 159, 161, 165, 166, 168, 169, 171, 173, 175, 177, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 214, 215, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 251, 252, 254, 255, 258, 259, 273, 278, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 325, 330, 333, 342, 343, 344, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 371, 372], "variou": [1, 2, 3, 204, 208, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 286, 291, 313, 342, 343, 353, 354, 355, 357, 358, 359, 361, 365, 366, 369, 372], "machin": [1, 2, 7, 17, 18, 19, 33, 59, 97, 365, 366, 371], "wonder": 1, "why": [1, 2, 3, 186, 365, 367, 372], "instead": [1, 4, 7, 8, 11, 28, 33, 60, 89, 93, 109, 115, 141, 165, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 262, 264, 266, 269, 270, 271, 276, 277, 280, 281, 282, 283, 291, 293, 297, 301, 344, 348, 357, 358, 362, 367, 369, 372], "lower": [1, 2, 3, 20, 25, 132, 175, 225, 226, 255, 355, 365, 367], "io": [1, 54, 60, 98, 99, 106, 206, 207], "footprint": [1, 2, 369], "commun": [1, 2, 3, 109, 347, 355, 372], "yet": [1, 85, 86, 98, 368], "spec": [1, 2, 3, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 50, 51, 52, 56, 85, 86, 89, 91, 92, 93, 94, 95, 98, 99, 105, 106, 107, 109, 112, 115, 116, 117, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 183, 186, 187, 199, 224, 226, 235, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 348, 353, 354, 355, 356, 357, 358, 362, 364, 365, 366, 371], "plai": [1, 3, 110, 111, 129, 354, 355, 359, 369, 372], "role": [1, 3, 104, 354, 359, 372], "opposit": [1, 365], "direct": [1, 2, 33, 89, 93, 109, 115, 177, 202, 206, 278, 354, 359], "sinc": [1, 2, 3, 4, 5, 7, 33, 37, 40, 43, 44, 54, 62, 77, 80, 89, 93, 109, 110, 111, 112, 115, 177, 179, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 214, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 255, 258, 311, 313, 353, 354, 355, 356, 357, 358, 359, 365, 367, 368, 369, 371, 372], "faster": [1, 2, 4, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 61, 62, 106, 293, 294, 295, 296, 356, 365, 366], "share": [1, 3, 6, 8, 22, 36, 38, 41, 65, 66, 67, 69, 76, 78, 79, 82, 90, 109, 115, 175, 204, 208, 214, 215, 236, 237, 238, 262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 344, 346, 348, 355, 356, 362, 364, 365, 366, 371, 372], "among": [1, 3, 110, 111, 365, 366], "prohibit": [1, 3, 80], "slow": [1, 3, 4, 36, 38, 41], "compar": [1, 3, 60, 80, 326, 349, 353, 355, 358, 359, 365, 366, 369, 372], "gpu": [1, 7, 8, 33, 65, 66, 82, 89, 93, 97, 109, 115, 177, 353, 355, 356, 365, 366, 372], "nativ": [1, 7, 9, 58, 89, 93, 109, 115, 129, 313, 356, 369], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 41, 43, 54, 68, 69, 76, 80, 85, 86, 93, 125, 147, 175, 188, 197, 200, 202, 204, 206, 208, 211, 222, 229, 239, 248, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 348, 349, 353, 354, 355, 358, 365, 366, 367, 369, 371, 372], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 69, 71, 74, 76, 77, 79, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 106, 107, 109, 112, 115, 116, 117, 125, 126, 130, 132, 133, 151, 159, 160, 165, 167, 168, 169, 171, 173, 177, 204, 208, 212, 213, 214, 235, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 252, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 279, 280, 281, 282, 283, 285, 287, 291, 293, 294, 295, 296, 297, 301, 311, 320, 341, 353, 354, 355, 358, 361, 365, 366, 369, 372], "build": [1, 3, 7, 22, 26, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 89, 93, 94, 95, 98, 99, 103, 104, 106, 109, 112, 115, 116, 117, 156, 175, 177, 188, 204, 208, 211, 245, 248, 252, 330, 337, 338, 339, 348, 350, 355, 356, 358, 359, 360, 361, 365, 366, 367, 368, 371, 372], "mani": [1, 2, 3, 4, 40, 85, 86, 87, 88, 89, 92, 94, 95, 98, 99, 106, 107, 112, 262, 264, 270, 277, 280, 281, 285, 348, 353, 354, 355, 357, 358, 360, 362, 365, 366, 367, 369, 372], "eg": [1, 2, 3, 11, 36, 38, 41, 65, 66, 67, 78, 79, 82, 87, 88, 89, 92, 93, 94, 95, 97, 109, 112, 115, 136, 163, 169, 214, 240, 313], "gymnasium": [1, 3, 5, 11, 89, 92, 93, 94, 100, 101, 109, 115, 119, 122, 139, 160, 163, 174, 354, 355, 367, 371], "warn": [1, 3, 239, 243, 244, 247, 354, 357, 359, 360, 361], "quickli": [1, 3, 354, 365, 366, 372], "becom": [1, 3, 4, 20, 202, 206, 365, 366, 372], "quit": [1, 3, 54, 89, 93, 109, 115, 348, 353, 354, 355, 358, 365, 366, 372], "annoi": [1, 3], "By": [1, 2, 3, 35, 87, 88, 89, 92, 93, 94, 95, 103, 104, 109, 110, 111, 112, 115, 116, 117, 233, 252, 278, 326, 344, 353, 365, 368, 369, 372], "filter": [1, 2, 3, 4, 47, 69, 76, 77, 262, 263, 265, 269, 270, 276, 280, 281, 283, 357], "out": [1, 2, 3, 4, 5, 9, 20, 33, 47, 56, 60, 69, 76, 77, 89, 93, 109, 110, 111, 115, 165, 177, 179, 202, 203, 206, 212, 213, 216, 217, 235, 240, 241, 242, 247, 248, 249, 250, 251, 252, 289, 290, 350, 353, 354, 355, 356, 357, 358, 360, 365, 366, 367, 369, 371, 372], "still": [1, 2, 3, 9, 60, 85, 86, 89, 93, 98, 99, 109, 115, 239, 277, 278, 353, 354, 356, 364, 367, 369, 372], "wish": [1, 3, 13, 14, 16, 60, 122, 359, 369], "displai": [1, 3, 7, 89, 93, 109, 115, 330, 350, 353, 354, 366, 367], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 74, 75, 76, 77, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 129, 130, 133, 134, 137, 138, 139, 141, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 158, 159, 160, 163, 165, 167, 168, 169, 170, 171, 173, 175, 177, 179, 186, 187, 188, 189, 190, 192, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 223, 224, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 320, 323, 324, 326, 327, 328, 330, 344, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "central": [2, 214, 353, 354, 357, 365, 366, 369], "part": [2, 3, 4, 8, 33, 42, 54, 57, 58, 60, 61, 62, 85, 89, 93, 98, 109, 115, 128, 147, 156, 159, 177, 186, 204, 208, 256, 321, 344, 353, 355, 356, 362, 365, 367, 372], "algorithm": [2, 3, 8, 9, 105, 262, 280, 281, 283, 346, 349, 350, 353, 354, 355, 356, 359, 360, 361, 365, 366, 368, 369], "implement": [2, 3, 9, 11, 13, 14, 15, 33, 78, 89, 93, 105, 106, 109, 115, 126, 133, 134, 135, 139, 142, 145, 153, 154, 160, 163, 168, 169, 175, 177, 189, 202, 203, 204, 205, 206, 207, 208, 229, 230, 231, 262, 263, 267, 268, 269, 276, 278, 279, 280, 282, 283, 311, 321, 335, 348, 350, 353, 354, 355, 356, 358, 359, 360, 365, 366, 367, 371], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 23, 26, 33, 37, 40, 42, 43, 44, 54, 56, 60, 62, 75, 77, 80, 85, 86, 89, 90, 93, 97, 98, 99, 109, 115, 129, 145, 151, 154, 171, 174, 175, 177, 179, 188, 208, 214, 215, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 313, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "give": [2, 3, 7, 43, 57, 89, 93, 105, 109, 115, 129, 347, 349, 353, 354, 365, 366, 367, 368, 371], "abil": [2, 278, 367, 369], "panel": [2, 355], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 56, 62, 80, 126, 129, 138, 204, 208, 269, 276, 283, 286, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "includ": [2, 3, 4, 7, 9, 20, 33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 78, 79, 82, 89, 93, 105, 109, 115, 164, 169, 175, 177, 204, 208, 278, 283, 333, 348, 350, 353, 354, 355, 356, 365, 366, 367, 369, 372], "almost": [2, 356], "physic": [2, 6, 7, 109, 112, 350, 353, 365, 366, 367], "theori": 2, "crude": 2, "made": [2, 3, 33, 40, 54, 65, 66, 67, 78, 79, 82, 89, 93, 109, 115, 177, 247, 266, 291, 353, 354, 356, 365, 366, 368, 369], "liststorag": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 369], "veri": [2, 3, 98, 99, 354, 357, 360, 365, 367, 369, 371, 372], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 29, 30, 33, 35, 36, 38, 41, 54, 60, 69, 71, 74, 76, 77, 85, 86, 89, 93, 98, 99, 109, 115, 125, 126, 154, 177, 186, 209, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 288, 291, 348, 350, 353, 355, 356, 357, 358, 359, 365, 366, 367, 369, 372], "complex": [2, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 353, 354, 357, 358], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 123, 125, 126, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 144, 147, 149, 151, 152, 153, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 177, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 260, 262, 263, 265, 266, 268, 269, 270, 273, 274, 276, 278, 280, 281, 282, 283, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 348, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 371, 372], "contigu": [2, 8, 57, 60, 61, 89, 93, 109, 115, 183, 355, 365, 366, 367, 369, 371, 372], "tensorstorag": [2, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 80, 360, 369], "lazymemmapstorag": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 128, 129, 353, 354, 356, 360, 365, 368, 369], "citizen": 2, "pytre": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 71], "tupl": [2, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 71, 76, 79, 80, 87, 88, 89, 93, 109, 115, 123, 136, 138, 144, 145, 147, 152, 160, 177, 186, 192, 198, 199, 204, 207, 208, 209, 218, 222, 223, 224, 241, 242, 246, 249, 250, 255, 262, 263, 265, 269, 270, 272, 276, 278, 280, 281, 282, 283, 285, 293, 294, 295, 296, 324, 326, 328, 337, 369], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 26, 33, 36, 38, 41, 47, 69, 74, 76, 77, 89, 92, 93, 94, 103, 104, 109, 115, 116, 117, 165, 169, 177, 248, 252, 283, 326, 342, 343, 344, 350, 354, 355, 357, 359, 365, 367, 372], "nest": [2, 3, 26, 29, 33, 36, 38, 40, 41, 50, 65, 66, 71, 82, 89, 92, 93, 94, 109, 115, 129, 163, 166, 177, 187, 246, 293, 294, 295, 296, 297, 311, 350, 354, 355, 366, 367, 369, 371], "construct": [2, 3, 5, 33, 37, 40, 43, 44, 54, 71, 89, 92, 93, 109, 110, 115, 134, 137, 177, 179, 204, 208, 226, 252, 330, 348, 354, 355, 356, 358, 365, 367, 369, 372], "ram": [2, 92, 94, 369, 372], "prealloc": [2, 3, 367], "ve": [2, 42, 353, 356, 362], "been": [2, 3, 5, 7, 8, 17, 19, 20, 42, 71, 75, 89, 93, 97, 103, 104, 109, 115, 145, 163, 164, 168, 202, 206, 239, 244, 246, 247, 353, 354, 355, 356, 364, 365, 366, 367, 369, 372], "here": [2, 3, 4, 7, 8, 9, 10, 13, 14, 61, 62, 80, 87, 88, 89, 93, 97, 109, 110, 111, 115, 129, 320, 348, 349, 350, 353, 354, 355, 356, 357, 358, 360, 362, 365, 366, 367, 369, 371, 372], "start": [2, 3, 4, 5, 13, 20, 23, 47, 54, 62, 69, 76, 77, 90, 93, 102, 109, 115, 186, 325, 352, 353, 354, 363, 366, 367, 369, 370, 372], "replay_buff": [2, 8, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 327, 340, 353, 354, 355, 360, 365, 366, 369], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 80, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 122, 123, 125, 126, 128, 129, 132, 138, 139, 144, 145, 147, 149, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 173, 175, 177, 178, 183, 186, 187, 188, 192, 193, 194, 195, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 214, 215, 218, 223, 224, 232, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 256, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 311, 313, 323, 326, 340, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "rb": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 76, 77, 80, 129, 156, 177, 354, 356, 360, 362, 366, 368, 369, 371], "10": [2, 3, 7, 21, 22, 26, 33, 37, 40, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 71, 76, 77, 80, 82, 85, 86, 89, 90, 93, 98, 99, 105, 109, 110, 111, 113, 114, 115, 116, 117, 123, 126, 128, 129, 164, 166, 167, 177, 188, 191, 192, 194, 196, 198, 202, 203, 206, 207, 211, 222, 233, 243, 244, 247, 248, 255, 259, 263, 266, 268, 280, 281, 282, 285, 291, 293, 294, 295, 296, 299, 313, 321, 350, 352, 353, 354, 355, 356, 357, 358, 362, 365, 366, 367, 369, 370, 371, 372], "add": [2, 3, 4, 6, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 71, 72, 80, 81, 83, 84, 89, 93, 109, 115, 129, 145, 169, 177, 204, 208, 216, 245, 262, 325, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 371], "string": [2, 17, 18, 19, 33, 39, 47, 63, 89, 93, 103, 109, 115, 122, 151, 163, 173, 177, 204, 208, 241, 246, 248, 249, 261, 312, 329, 349, 353, 355, 356, 369], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 32, 35, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 76, 77, 80, 82, 108, 109, 115, 129, 152, 161, 164, 165, 189, 190, 202, 203, 206, 235, 239, 241, 246, 251, 252, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285, 321, 353, 355, 358, 360, 369, 372], "30": [2, 3, 40, 58, 125, 146, 225, 226, 311, 315, 352, 353, 354, 355, 360, 365, 366, 367, 369, 370], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 82, 89, 90, 92, 93, 102, 103, 104, 105, 109, 110, 111, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 334, 335, 336, 340, 342, 343, 344, 348, 350, 353, 354, 355, 356, 357, 359, 360, 361, 365, 366, 367, 369, 371, 372], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 124, 125, 126, 128, 129, 130, 131, 133, 136, 141, 142, 146, 147, 149, 151, 152, 155, 162, 163, 166, 169, 170, 171, 173, 177, 179, 183, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 262, 263, 264, 270, 272, 273, 277, 278, 279, 280, 281, 285, 293, 295, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 321, 322, 323, 326, 327, 330, 332, 338, 342, 343, 344, 367, 369], "tell": [2, 3, 4, 7, 110, 111, 353, 356, 360, 365, 366], "our": [2, 3, 7, 8, 17, 40, 129, 313, 348, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 366, 368, 369, 371], "far": [2, 42, 205, 230, 231, 362, 367, 372], "restrict": [2, 3, 354, 368, 369, 372], "empti": [2, 3, 26, 29, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 71, 89, 93, 108, 109, 115, 134, 137, 151, 153, 166, 169, 171, 173, 317, 353, 367], "64": [2, 3, 36, 38, 41, 54, 60, 71, 129, 155, 192, 193, 201, 204, 208, 215, 223, 291, 353, 354, 355, 356, 358, 362, 364, 367, 369, 371, 372], "dtype": [2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 76, 77, 82, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 123, 126, 127, 133, 134, 135, 136, 137, 138, 139, 145, 147, 149, 151, 153, 154, 156, 160, 163, 165, 167, 168, 169, 171, 173, 177, 179, 183, 186, 187, 188, 198, 199, 202, 203, 204, 206, 207, 208, 211, 216, 217, 223, 224, 232, 235, 236, 237, 238, 240, 241, 242, 246, 247, 248, 249, 250, 251, 254, 256, 259, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 299, 348, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "unit8": 2, "img": 2, "randint": [2, 47, 71, 167, 369], "255": [2, 71, 167, 367, 369], "uint8": [2, 3, 36, 38, 41, 49, 54, 60, 87, 88, 103, 104, 138, 149, 167, 354, 361, 368, 369, 371, 372], "next": [2, 3, 4, 8, 13, 14, 15, 22, 26, 29, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 76, 77, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 103, 104, 105, 109, 113, 114, 115, 116, 117, 125, 126, 128, 129, 134, 137, 138, 139, 144, 145, 149, 153, 154, 156, 159, 160, 163, 165, 174, 175, 177, 183, 186, 188, 203, 204, 207, 208, 211, 226, 246, 257, 259, 262, 263, 265, 266, 268, 269, 270, 271, 276, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 313, 324, 326, 328, 354, 356, 358, 361, 362, 364, 367, 368, 371, 372], "ask": [2, 8, 54, 60, 69, 76, 77, 313, 355, 356, 357, 358, 365, 366, 368, 372], "do": [2, 3, 4, 7, 62, 89, 93, 109, 115, 116, 117, 152, 174, 175, 186, 215, 216, 237, 293, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372], "automat": [2, 3, 5, 62, 65, 66, 71, 82, 89, 92, 93, 94, 109, 110, 111, 115, 125, 134, 137, 147, 165, 174, 189, 204, 208, 235, 246, 248, 311, 348, 353, 355, 357, 358, 365, 366, 367, 369, 371], "hand": [2, 3, 7, 20, 26, 365, 366, 367], "look": [2, 3, 5, 7, 8, 33, 89, 93, 102, 109, 110, 111, 115, 151, 152, 171, 177, 248, 252, 253, 254, 349, 355, 356, 357, 358, 359, 360, 362, 365, 366, 367, 368, 369, 371, 372], "assum": [2, 3, 6, 26, 35, 42, 43, 44, 56, 58, 60, 61, 62, 76, 89, 93, 109, 115, 128, 131, 141, 151, 152, 159, 165, 169, 171, 173, 183, 204, 208, 233, 255, 266, 271, 283, 291, 302, 303, 304, 305, 307, 308, 309, 310, 313, 353, 355, 356, 364, 367], "lead": [2, 3, 4, 8, 10, 11, 22, 26, 29, 33, 37, 40, 43, 44, 56, 75, 87, 88, 89, 92, 94, 95, 165, 205, 223, 230, 231, 353, 356, 365, 366, 367, 369, 371], "leav": [2, 26, 36, 38, 40, 41, 89, 179, 187, 353, 360, 369], "tree": [2, 36, 38, 41, 89, 93, 109, 115, 365, 369], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 79, 87, 88, 89, 90, 92, 93, 94, 95, 109, 115, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 189, 190, 197, 204, 208, 209, 214, 215, 229, 235, 240, 241, 248, 249, 251, 252, 255, 256, 263, 270, 277, 279, 281, 283, 327, 332, 348, 353, 355, 364, 366, 367, 369, 372], "don": [2, 3, 4, 6, 7, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 129, 354, 355, 360, 369, 371, 372], "throw": [2, 33, 36, 38, 41, 89, 93, 109, 115, 177, 372], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 26, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 76, 77, 80, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 128, 129, 133, 134, 137, 138, 139, 149, 153, 154, 156, 160, 163, 165, 168, 169, 177, 178, 186, 187, 188, 196, 198, 199, 204, 208, 211, 223, 224, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 256, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 313, 321, 327, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "max": [2, 22, 35, 38, 43, 47, 63, 68, 69, 80, 136, 166, 229, 230, 231, 240, 247, 263, 264, 270, 279, 281, 283, 353, 355, 356, 362, 365, 366], "label": [2, 38, 39, 42, 47, 353, 365, 369], "100": [2, 13, 14, 15, 16, 33, 37, 40, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 80, 85, 86, 89, 93, 98, 99, 109, 115, 132, 138, 147, 156, 161, 163, 177, 214, 242, 246, 313, 322, 340, 354, 355, 356, 357, 359, 362, 364, 365, 366, 367, 368, 369, 371, 372], "rb_pytre": 2, "randn": [2, 26, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 77, 82, 128, 147, 183, 191, 192, 196, 198, 199, 202, 203, 206, 207, 212, 213, 214, 218, 221, 222, 224, 235, 236, 237, 238, 240, 241, 248, 249, 251, 254, 255, 256, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296, 329, 348, 369, 371, 372], "c": [2, 3, 6, 7, 26, 36, 38, 40, 41, 43, 44, 59, 147, 167, 206, 207, 354, 369], "zero": [2, 3, 4, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 71, 76, 77, 80, 82, 89, 93, 109, 115, 126, 128, 130, 134, 136, 137, 147, 153, 156, 177, 183, 186, 188, 193, 194, 195, 201, 202, 203, 204, 206, 207, 208, 212, 213, 215, 223, 232, 243, 244, 247, 250, 258, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 299, 356, 369, 371], "assert": [2, 3, 6, 15, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 93, 96, 109, 115, 122, 126, 129, 132, 134, 137, 145, 154, 161, 175, 179, 183, 215, 218, 233, 293, 294, 295, 296, 321, 329, 360, 364, 369, 372], "len": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 82, 149, 189, 190, 209, 215, 353, 360, 362, 365, 367, 368, 369, 371], "ambigu": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 79, 89, 93, 109, 115, 126, 133, 151, 165, 168, 169, 171, 173, 177, 251, 349, 353, 357, 367], "deal": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 353, 355, 366, 369], "interpret": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 354], "put": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 93, 103, 104, 116, 117, 175, 320, 344, 348, 354, 355, 356, 357, 365, 367], "solv": [2, 4, 9, 10, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 347, 353, 354, 355, 360, 362, 365, 366, 367, 369], "clear": [2, 3, 26, 29, 30, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 97, 109, 115, 177, 322, 357, 360], "cut": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "distinct": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 126, 359, 364], "view": [2, 3, 8, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 123, 177, 199, 202, 206, 209, 357, 367, 369, 371, 372], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 116, 117, 129, 130, 163, 164, 165, 166, 169, 177, 187, 189, 190, 209, 212, 213, 215, 246, 247, 249, 250, 258, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 334, 344, 347, 350, 355, 356, 360, 361, 362, 367, 369, 372], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 26, 29, 60, 85, 86, 89, 93, 97, 98, 99, 102, 109, 110, 111, 115, 125, 134, 137, 152, 209, 223, 246, 248, 252, 253, 254, 258, 293, 294, 295, 296, 348, 353, 354, 355, 357, 359, 364, 365, 366, 367, 368, 369, 372], "collate_fn": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 369, 371], "__init__": [2, 3, 7, 89, 105, 122, 123, 126, 134, 137, 153, 188, 199, 202, 206, 211, 256, 263, 265, 270, 276, 281, 283, 285, 350, 367, 372], "major": 2, "worri": [2, 45], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 65, 66, 67, 69, 76, 78, 79, 82, 89, 90, 93, 97, 109, 115, 125, 187, 353, 355, 357, 365, 366, 367, 372], "though": [2, 4, 89, 93, 109, 115, 209, 355, 365, 366], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 42, 46, 48, 49, 89, 93, 109, 115, 146, 165, 205, 230, 231, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 354, 358, 361, 367, 369, 372], "latter": [2, 17, 18, 19, 33, 56, 89, 93, 109, 115, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 280, 342, 343], "inv": [2, 3, 132, 136, 139, 149, 156, 161, 367], "method": [2, 3, 4, 11, 15, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 76, 77, 78, 79, 80, 82, 89, 92, 93, 94, 95, 109, 112, 115, 125, 126, 129, 133, 134, 135, 138, 139, 141, 145, 147, 151, 153, 154, 155, 156, 160, 163, 165, 168, 169, 171, 173, 177, 178, 188, 204, 208, 235, 236, 237, 238, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 259, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 297, 311, 312, 341, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 365, 367, 369, 372], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 45, 46, 48, 49, 89, 93, 109, 115, 136, 139, 160, 167, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 293, 369], "multithread": [2, 3, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 63, 106, 107, 360, 369], "thread": [2, 13, 14, 16, 36, 38, 41, 85, 86, 98, 99, 109, 115], "prefetch": [2, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 63, 353, 354, 356, 369], "advis": [2, 57, 372], "benchmark": [2, 3, 9, 86, 98, 99], "techniqu": [2, 8, 109, 115, 354, 360, 369], "real": [2, 5, 60, 252, 349, 356, 367], "life": [2, 138], "adopt": [2, 3, 5, 353, 372], "throughput": [2, 9, 99, 353], "constant": [2, 27, 129, 147, 164, 350, 353, 355, 356, 372], "throughout": [2, 3, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 355, 365, 372], "further": [2, 3, 5, 23, 353, 355, 357], "refin": [2, 60, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291], "coupl": [2, 356, 358, 359, 367, 369], "get": [2, 3, 4, 6, 7, 8, 9, 26, 29, 36, 37, 38, 40, 41, 54, 56, 60, 65, 66, 69, 76, 77, 78, 79, 80, 82, 89, 90, 93, 109, 115, 123, 128, 130, 134, 136, 137, 145, 147, 152, 164, 165, 167, 169, 175, 235, 243, 244, 248, 249, 252, 259, 293, 294, 295, 296, 297, 313, 317, 348, 352, 353, 354, 355, 356, 363, 365, 366, 367, 369, 370, 371, 372], "first_elt": 2, "128": [2, 54, 56, 60, 77, 85, 86, 98, 99, 193, 196, 354, 356, 362, 365, 367, 368, 369], "wa": [2, 3, 5, 7, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 76, 89, 93, 109, 115, 169, 179, 187, 206, 262, 264, 275, 277, 280, 282, 284, 299, 349, 354, 355, 357, 358, 359, 360, 361, 364, 365, 369, 371], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 24, 26, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 76, 77, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 122, 125, 126, 129, 130, 134, 135, 136, 137, 144, 147, 153, 154, 156, 159, 163, 165, 166, 167, 175, 177, 183, 186, 187, 189, 190, 192, 193, 194, 195, 196, 199, 201, 204, 209, 212, 213, 214, 215, 218, 221, 224, 235, 236, 237, 238, 240, 241, 243, 244, 246, 247, 249, 251, 254, 256, 259, 278, 311, 340, 348, 350, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 130], "larger": [2, 4, 204, 208, 269, 276, 371], "volum": 2, "due": [2, 3, 5, 359, 368, 369, 372], "serialis": [2, 36, 38, 41], "memorymappedtensor": [2, 36, 38, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 315, 360, 368], "well": [2, 3, 8, 20, 22, 33, 37, 39, 40, 43, 44, 74, 78, 89, 93, 109, 115, 169, 177, 192, 206, 225, 226, 278, 297, 353, 354, 356, 357, 358, 359, 361, 368, 369, 371, 372], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 103, 104, 109, 110, 111, 115, 116, 117, 134, 135, 137, 159, 162, 164, 170, 177, 188, 206, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 320, 348, 353, 355, 356, 360, 365], "file": [2, 6, 7, 8, 36, 38, 41, 54, 56, 57, 58, 60, 61, 62, 116, 312, 313, 315, 350, 352, 354, 365, 369, 370], "locat": [2, 7, 36, 38, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 138, 147, 158, 205, 218, 230, 231, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 353, 354, 355, 361, 365, 366, 369], "improv": [2, 4, 142, 262, 349, 365, 366, 369], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 109, 115, 355, 365, 369], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 26, 33, 36, 38, 41, 47, 54, 56, 57, 58, 60, 61, 62, 76, 77, 87, 88, 89, 92, 93, 94, 97, 109, 115, 123, 129, 156, 159, 166, 175, 177, 187, 243, 244, 248, 252, 277, 278, 280, 353, 354, 356, 357, 359, 361, 369], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 46, 48, 49, 69, 136, 206, 207, 269, 356, 360, 369], "sharabl": [2, 109, 115], "collabor": [2, 60], "rather": [2, 4, 79, 154, 353, 354, 355, 357, 359, 365, 366, 369], "incur": [2, 85, 86, 98, 99], "transmiss": 2, "overhead": [2, 85, 86, 98, 99, 109, 115], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 71, 89, 93, 109, 115, 124, 125, 168, 174, 179, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 251, 252, 253, 255, 258, 278, 280, 354, 356, 360, 367, 369], "instanti": [2, 3, 13, 14, 20, 36, 37, 38, 40, 41, 43, 44, 97, 125, 168, 215, 311, 353, 354, 358, 359, 361, 365, 366, 367, 369, 372], "content": [2, 8, 15, 26, 29, 36, 37, 38, 40, 41, 43, 44, 75, 89, 92, 93, 94, 106, 109, 115, 153, 189, 190, 209, 214, 215, 248, 278, 355, 367, 371], "map": [2, 3, 8, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 89, 93, 102, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 183, 199, 218, 235, 236, 237, 238, 241, 248, 249, 251, 252, 254, 255, 256, 257, 283, 291, 326, 346, 348, 349, 353, 354, 355, 356, 358, 359, 368, 371], "writer": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 71, 72, 76, 80, 81, 84, 355, 369], "tensordictroundrobinwrit": [2, 71], "goe": [2, 4, 110, 111, 353, 355, 365, 366, 372], "prioritizedsampl": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 266, 271, 291, 353, 369], "access": [2, 3, 7, 8, 33, 37, 57, 59, 89, 93, 109, 115, 151, 171, 177, 344, 347, 353, 357, 365, 366, 367, 369], "show": [2, 33, 89, 93, 109, 115, 177, 215, 313, 348, 353, 355, 356, 365, 366, 367, 369, 371], "tensordictreplaybuff": [2, 37, 40, 43, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 76, 77, 80, 128, 129, 327, 340, 346, 353, 354, 356, 369], "mp": [2, 17, 18, 19, 54, 55, 56, 57, 58, 59, 60, 61, 62, 90, 175], "def": [2, 3, 11, 21, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 90, 93, 105, 109, 115, 122, 123, 125, 126, 134, 137, 153, 169, 177, 188, 199, 202, 203, 206, 207, 211, 246, 248, 256, 263, 265, 270, 276, 278, 281, 283, 285, 311, 350, 353, 354, 364, 365, 366, 367, 369, 371, 372], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 36, 37, 38, 41, 42, 43, 68, 69, 89, 93, 105, 109, 110, 111, 115, 123, 125, 126, 134, 136, 137, 153, 163, 164, 169, 172, 175, 177, 187, 188, 202, 204, 208, 211, 239, 243, 244, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 268, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 297, 326, 330, 332, 335, 336, 339, 340, 350, 354, 355, 356, 359, 362, 365, 366, 367, 369, 371, 372], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 100, 101, 109, 115, 123, 126, 128, 130, 134, 135, 136, 137, 144, 145, 147, 156, 159, 165, 167, 169, 175, 178, 186, 188, 198, 199, 204, 208, 210, 211, 223, 224, 232, 235, 236, 237, 238, 240, 241, 243, 244, 247, 248, 249, 251, 254, 256, 291, 294, 295, 296, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 321, 329, 348, 349, 353, 356, 366, 367, 371, 372], "__name__": [2, 3, 13, 14, 21, 90, 311, 354, 371], "__main__": [2, 3, 13, 14, 21, 90, 311, 371], "21": [2, 60, 61, 77, 109, 110, 111, 115, 352, 353, 354, 355, 356, 359, 364, 365, 366, 367, 370], "proc": 2, "target": [2, 4, 8, 20, 23, 33, 89, 90, 93, 109, 115, 164, 168, 177, 251, 252, 262, 263, 264, 265, 266, 268, 270, 271, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 333, 339, 340, 349, 350, 356, 362, 365, 367], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 76, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 133, 151, 153, 162, 165, 168, 169, 170, 172, 173, 177, 188, 189, 190, 198, 204, 208, 209, 210, 211, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 320, 323, 327, 330, 344, 354], "join": [2, 90, 346, 354, 355, 365], "now": [2, 3, 7, 37, 109, 129, 215, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 369, 372], "length": [2, 19, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 42, 45, 46, 47, 48, 49, 54, 60, 63, 69, 76, 77, 79, 89, 93, 98, 99, 109, 115, 152, 175, 188, 189, 190, 192, 194, 196, 202, 206, 209, 211, 214, 215, 235, 251, 256, 321, 327, 353, 355, 356, 360, 362, 367, 369, 372], "20": [2, 47, 61, 76, 77, 80, 89, 93, 97, 109, 115, 164, 177, 201, 202, 203, 206, 207, 240, 321, 352, 353, 354, 355, 356, 365, 366, 367, 369, 370, 371, 372], "_data": [2, 367], "It": [2, 3, 4, 7, 22, 33, 39, 42, 43, 45, 47, 56, 62, 71, 74, 80, 84, 89, 93, 95, 105, 106, 109, 110, 111, 115, 116, 117, 126, 128, 138, 145, 147, 152, 164, 169, 174, 177, 179, 192, 194, 200, 214, 215, 223, 225, 226, 232, 233, 242, 243, 246, 247, 250, 252, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 292, 293, 311, 320, 326, 347, 348, 349, 353, 354, 356, 357, 365, 366, 367, 368, 369, 371, 372], "difficult": [2, 4, 109, 361], "pai": [2, 8, 353, 356], "word": [2, 3, 42, 54, 56, 58, 60, 61, 62, 278, 353, 360, 367, 372], "1m": [2, 54, 60, 333, 353, 355, 356, 368], "doe": [2, 3, 17, 36, 37, 38, 41, 43, 47, 54, 56, 60, 68, 69, 76, 78, 79, 84, 89, 93, 103, 104, 109, 115, 116, 117, 196, 202, 203, 204, 206, 207, 208, 216, 233, 240, 253, 254, 262, 264, 271, 277, 280, 292, 330, 348, 350, 353, 354, 355, 356, 357, 360, 365, 367, 369, 372], "howev": [2, 3, 5, 7, 33, 89, 93, 109, 115, 129, 159, 164, 169, 177, 262, 264, 277, 280, 282, 283, 348, 353, 354, 356, 359, 367, 369, 372], "capac": [2, 37, 40, 43, 44, 65, 66, 68, 76, 82, 355, 360], "There": [2, 10, 71, 204, 208, 348, 350, 355, 356, 358, 360, 365, 366, 367, 369, 372], "circumv": 2, "account": [2, 65, 66, 82, 125, 129, 212, 213, 348, 354, 356, 369, 372], "save": [2, 3, 8, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 174, 177, 312, 313, 315, 320, 330, 350, 360, 361, 362, 365, 366], "convent": [2, 3, 54, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 116, 117, 349, 353, 356, 365, 366, 367], "overridden": [2, 3, 54, 57, 58, 60, 61, 62, 89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 293, 295, 296, 356, 365], "dim_extend": [2, 37, 40, 43, 44], "obtain": [2, 7, 42, 54, 89, 93, 109, 115, 128, 151, 164, 173, 188, 223, 327, 353, 355, 357, 358, 359, 365, 366], "counterpart": 2, "desir": [2, 3, 33, 89, 93, 109, 115, 124, 126, 133, 147, 149, 151, 152, 165, 168, 169, 171, 173, 177, 184, 185, 189, 190, 209, 215, 235, 241, 242, 248, 249, 250, 251, 252, 348, 353, 365, 366, 367, 369], "diversifi": 2, "offer": [2, 3, 7, 85, 86, 89, 93, 98, 99, 103, 104, 109, 115, 311, 348, 353, 354, 357, 359, 360, 365, 367, 369, 372], "accomplish": [2, 179, 357], "anoth": [2, 3, 8, 60, 69, 76, 89, 92, 93, 94, 97, 109, 115, 126, 134, 135, 137, 165, 168, 209, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 348, 349, 353, 355, 356, 358, 359, 364, 365, 366, 367, 372], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 54, 55, 57, 129, 179, 263, 268, 269, 276, 320, 350, 357, 368, 369, 371], "docstr": [2, 33, 89, 93, 109, 115, 177, 357, 358], "extens": [2, 37, 40, 43, 44, 77, 350, 369], "detail": [2, 3, 5, 6, 7, 33, 89, 93, 109, 110, 111, 115, 167, 169, 177, 199, 202, 206, 242, 262, 271, 280, 347, 350, 354, 360, 364, 369], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 89, 93, 109, 115, 134, 137, 175, 177, 187, 202, 204, 206, 208, 247, 248, 252, 271, 354, 358, 364, 365, 366, 372], "without": [2, 3, 7, 9, 33, 36, 38, 41, 42, 54, 56, 60, 76, 77, 89, 93, 109, 115, 116, 117, 123, 125, 134, 137, 167, 177, 202, 203, 206, 207, 237, 238, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 292, 293, 294, 295, 296, 297, 340, 347, 348, 353, 354, 355, 357, 358, 359, 360, 365, 366, 367, 369, 372], "happi": 2, "concaten": [2, 8, 13, 14, 20, 31, 32, 60, 129, 130, 147, 168, 206, 209, 254, 353, 354, 358, 365, 366, 367, 369, 372], "schedul": [2, 4, 7, 42, 326, 355, 367], "transformedenv": [2, 3, 33, 89, 90, 93, 109, 115, 123, 126, 129, 132, 133, 134, 137, 138, 139, 141, 144, 145, 146, 147, 149, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 175, 177, 204, 208, 246, 313, 353, 354, 355, 356, 357, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "stepcount": [2, 33, 89, 93, 103, 104, 109, 115, 116, 117, 168, 177, 353, 354, 355, 356, 357, 362, 365, 366, 371], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 33, 80, 89, 90, 93, 95, 109, 115, 125, 126, 129, 132, 133, 138, 144, 145, 147, 149, 154, 155, 156, 159, 161, 164, 165, 166, 168, 169, 175, 177, 204, 208, 246, 311, 313, 340, 346, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 368, 369, 371, 372], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 129, 156, 346, 360, 369], "cartpol": [2, 3, 33, 87, 88, 89, 93, 109, 115, 125, 126, 129, 159, 164, 177, 246, 311, 354, 356, 358, 360, 361, 362, 369, 372], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 33, 56, 58, 80, 89, 90, 92, 93, 94, 98, 99, 106, 109, 115, 125, 126, 129, 132, 139, 144, 145, 147, 154, 156, 159, 161, 163, 164, 165, 166, 168, 177, 204, 208, 246, 288, 302, 303, 304, 305, 307, 308, 309, 310, 311, 348, 354, 356, 357, 358, 359, 360, 361, 362, 367, 369, 371, 372], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 85, 86, 89, 93, 98, 99, 105, 109, 110, 111, 115, 123, 126, 129, 134, 137, 145, 153, 156, 178, 188, 199, 211, 224, 226, 235, 241, 248, 249, 263, 266, 268, 281, 283, 285, 340, 348, 353, 354, 355, 356, 358, 359, 360, 362, 364, 365, 366, 367, 368, 369, 371, 372], "8": [2, 3, 6, 7, 33, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 76, 77, 85, 86, 87, 88, 89, 93, 109, 115, 125, 164, 189, 190, 192, 193, 201, 209, 236, 237, 238, 248, 251, 254, 276, 352, 353, 354, 355, 356, 358, 360, 365, 366, 367, 368, 369, 370, 371], "traj_kei": [2, 69, 76, 77, 369], "truncated_kei": [2, 69, 76, 77, 156, 163], "strict_length": [2, 54, 60, 69, 76, 77, 313], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 37, 40, 44, 45, 65, 66, 68, 69, 76, 77, 82, 89, 93, 109, 115, 151, 156, 159, 169, 173, 177, 203, 207, 218, 224, 242, 246, 248, 250, 251, 252, 293, 294, 295, 296, 321, 333, 353, 354, 355, 356, 358, 359, 360, 362, 365, 366, 367, 369, 371, 372], "enumer": [2, 13, 14, 15, 20, 33, 40, 44, 77, 89, 93, 109, 115, 177, 286, 349, 353, 354, 355, 356, 362, 365, 369, 371], "break": [2, 5, 13, 14, 15, 20, 33, 40, 44, 54, 57, 58, 60, 61, 62, 63, 69, 76, 77, 80, 89, 93, 109, 115, 126, 129, 156, 175, 177, 313, 354, 360, 362, 369, 371], "step_count": [2, 13, 14, 15, 33, 89, 93, 98, 99, 109, 115, 163, 177, 355, 356, 357, 362, 371], "32": [2, 21, 26, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 77, 113, 114, 116, 117, 189, 190, 191, 192, 193, 195, 196, 201, 209, 214, 215, 219, 220, 222, 223, 232, 291, 311, 353, 354, 355, 356, 358, 359, 365, 367, 368, 369, 371, 372], "33": [2, 26, 33, 71, 89, 93, 109, 115, 177, 189, 190, 209, 353, 354, 356, 367], "34": [2, 189, 190, 209, 354, 367], "35": [2, 189, 190, 209, 353, 354, 366, 367, 368], "36": [2, 353, 354, 367], "37": [2, 128, 353, 354, 355, 367, 368, 369], "38": [2, 7, 352, 354, 367, 370, 372], "39": [2, 58, 98, 99, 353, 354, 356, 367], "40": [2, 98, 99, 352, 353, 354, 355, 356, 365, 366, 367, 368, 370], "41": [2, 353, 354, 355, 367], "11": [2, 10, 22, 28, 35, 47, 65, 66, 68, 77, 82, 90, 167, 177, 188, 211, 352, 353, 354, 355, 365, 366, 367, 369, 370], "12": [2, 10, 61, 65, 66, 77, 82, 98, 99, 109, 113, 114, 115, 177, 353, 354, 355, 365, 367, 369], "14": [2, 6, 11, 54, 55, 56, 57, 58, 59, 60, 61, 62, 76, 77, 89, 93, 109, 115, 147, 177, 353, 354, 355, 356, 365, 366, 367, 369], "15": [2, 22, 54, 55, 56, 57, 58, 59, 60, 61, 62, 77, 89, 93, 109, 115, 177, 240, 247, 272, 352, 354, 355, 356, 362, 365, 367, 369, 370, 371], "16": [2, 3, 33, 61, 69, 77, 85, 86, 89, 93, 98, 99, 109, 115, 129, 177, 353, 354, 356, 365, 367, 368, 369], "17": [2, 61, 77, 109, 177, 353, 354, 355, 356, 366, 367], "could": [2, 3, 4, 6, 22, 354, 355, 361, 365, 366, 368, 372], "sai": [2, 33, 89, 93, 109, 115, 177, 214, 365, 368, 372], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 26, 28, 29, 32, 35, 67, 69, 76, 77, 89, 92, 93, 94, 97, 109, 115, 134, 137, 152, 159, 249, 354, 355, 356, 365, 366, 367], "handl": [2, 3, 20, 33, 89, 93, 109, 115, 174, 175, 177, 208, 209, 330, 342, 343, 353, 354, 355, 357, 359, 366, 369], "suggest": [2, 291, 353, 366], "serialenv": [2, 3, 89, 93, 109, 165, 177, 246, 346, 371, 372], "squeez": [2, 3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 125, 126, 129, 162, 164, 189, 190, 227, 228, 353, 367, 369], "6": [2, 3, 7, 13, 14, 15, 16, 22, 33, 40, 54, 61, 62, 69, 77, 87, 88, 109, 113, 114, 125, 147, 149, 164, 189, 190, 192, 193, 194, 197, 201, 203, 209, 214, 215, 219, 229, 246, 248, 256, 353, 354, 360, 365, 366, 367, 369, 371, 372], "5": [2, 3, 13, 14, 22, 24, 26, 29, 33, 37, 40, 43, 44, 54, 71, 76, 77, 80, 89, 90, 93, 98, 99, 103, 104, 106, 109, 113, 114, 115, 116, 117, 125, 126, 128, 156, 163, 164, 177, 188, 189, 190, 192, 193, 198, 199, 200, 201, 202, 205, 206, 209, 211, 214, 215, 219, 224, 230, 231, 240, 241, 246, 249, 255, 277, 280, 282, 285, 311, 348, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 370, 371, 372], "7": [2, 3, 6, 10, 28, 33, 35, 37, 40, 43, 69, 77, 89, 93, 103, 104, 109, 115, 125, 164, 188, 189, 190, 193, 209, 211, 214, 299, 353, 354, 360, 365, 366, 367, 369, 371], "9": [2, 3, 7, 22, 33, 37, 40, 43, 61, 62, 69, 77, 80, 87, 88, 102, 110, 111, 125, 164, 175, 177, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 291, 349, 352, 353, 354, 355, 357, 360, 364, 365, 366, 367, 368, 369, 370], "18": [2, 61, 77, 113, 114, 116, 117, 177, 215, 352, 353, 354, 355, 360, 365, 366, 367, 370, 372], "19": [2, 61, 76, 77, 80, 177, 354, 355, 356, 367, 368], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 57, 109, 115, 168, 170, 215, 349, 350, 353, 354, 366, 369, 371], "congruent": 2, "custom": [2, 3, 5, 33, 89, 93, 109, 115, 171, 177, 214, 215, 255, 271, 280, 286, 344, 348, 353, 354, 355, 356, 358, 359, 361, 365, 366], "name": [2, 3, 6, 7, 11, 15, 33, 36, 38, 41, 47, 54, 57, 59, 62, 63, 85, 87, 89, 93, 98, 102, 103, 104, 106, 109, 110, 111, 112, 115, 116, 117, 118, 136, 139, 154, 159, 160, 163, 169, 171, 174, 177, 187, 204, 208, 241, 249, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 295, 296, 297, 311, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 350, 353, 354, 355, 356, 359, 361, 365, 366, 367, 372], "randomcroptensordict": [2, 353], "unlik": [2, 75, 103, 104, 116, 117, 246, 271, 280, 313, 354, 358, 360, 371], "stop": [2, 3, 15, 20, 42, 62, 69, 76, 77, 89, 93, 109, 115, 355, 360, 365, 366, 371, 372], "signal": [2, 3, 13, 14, 15, 16, 22, 54, 56, 58, 60, 61, 62, 69, 76, 77, 80, 93, 103, 104, 116, 117, 129, 138, 163, 166, 187, 349, 353, 355, 365, 366, 369, 372], "disk": [2, 3, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 330, 350, 353, 354, 356, 360, 361, 369], "dump": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 311, 312, 313, 361, 362, 365], "load": [2, 6, 7, 13, 14, 15, 16, 33, 36, 37, 38, 40, 41, 42, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 88, 89, 93, 109, 115, 122, 175, 177, 344, 350, 353, 355, 369], "json": 2, "metadata": [2, 54, 56, 355, 357, 359, 360, 365, 366, 372], "anticip": [2, 134, 137], "compli": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 60], "back": [2, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 46, 48, 49, 56, 174, 179, 235, 241, 242, 248, 249, 250, 251, 252, 355, 365, 366, 367, 369], "exact": [2, 3, 109, 206], "statu": [2, 3, 89], "prioriti": [2, 4, 37, 43, 44, 65, 66, 67, 68, 69, 78, 79, 82, 265, 266, 268, 269, 270, 271, 276, 281, 283, 285, 291, 350, 353, 354, 369], "heap": 2, "under": [2, 3, 4, 20, 33, 42, 54, 56, 57, 58, 60, 61, 62, 87, 88, 89, 92, 93, 94, 95, 109, 112, 115, 177, 235, 241, 242, 248, 249, 250, 251, 252, 278, 293, 294, 295, 296, 297, 313, 349, 353, 354, 358, 365, 367, 372], "hood": [2, 20, 54, 89, 93, 109, 115, 367], "just": [2, 3, 4, 11, 79, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 106, 107, 109, 110, 111, 112, 115, 125, 132, 187, 215, 321, 348, 350, 353, 354, 355, 356, 357, 358, 360, 365, 366, 367, 369, 371, 372], "public": [2, 59, 151, 173], "serializ": 2, "altern": [2, 4, 28, 36, 38, 41, 106, 196, 212, 213, 214, 261, 311, 353, 355, 365, 366], "state_dict": [2, 13, 14, 15, 16, 20, 33, 36, 38, 41, 89, 93, 109, 115, 169, 175, 177, 283, 344, 350, 353, 354, 372], "load_state_dict": [2, 13, 14, 15, 16, 20, 33, 36, 38, 41, 89, 93, 109, 115, 169, 175, 177, 283, 350, 353], "drawback": 2, "struggl": 2, "big": [2, 355, 360, 369, 372], "sequenti": [2, 9, 33, 89, 93, 109, 115, 128, 145, 177, 253, 254, 259, 280, 348, 355, 356, 358, 366, 367, 368, 372], "known": [2, 3, 5, 7, 8, 300, 301, 353, 354, 357], "seamless": [2, 209], "integr": [2, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 195, 204, 208, 211, 251, 348, 357, 358, 360, 365, 366, 367, 368], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 353, 354, 359], "essenti": [2, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 354, 357, 365, 367, 369], "understand": [2, 3, 8, 353, 354, 357, 358, 365, 366], "purpos": [2, 3, 7, 89, 93, 109, 115, 129, 202, 262, 264, 277, 280, 282, 340, 353, 355, 356, 359, 361, 365, 366, 368, 372], "guid": [2, 110, 111, 113, 114, 164, 347, 353, 366], "explan": [2, 33, 89, 93, 109, 115, 177], "effect": [2, 3, 26, 33, 37, 40, 43, 44, 54, 60, 69, 71, 74, 76, 77, 89, 93, 109, 115, 125, 129, 169, 177, 330, 353, 358, 365, 369, 372], "realm": [2, 358], "As": [2, 3, 4, 33, 54, 89, 93, 102, 109, 110, 111, 115, 156, 252, 293, 348, 353, 354, 355, 356, 357, 359, 360, 365, 366, 367, 368, 369, 371, 372], "practition": 2, "often": [2, 3, 8, 275, 330, 353, 354, 357, 359, 367, 369, 372], "encount": [2, 4, 60, 246, 347, 354, 358, 367], "situat": [2, 103, 104], "sometim": [2, 3, 356, 372], "discard": [2, 3, 47, 56, 58, 93, 171, 186, 312, 369, 372], "variabl": [2, 3, 4, 7, 8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 54, 57, 58, 61, 62, 85, 86, 87, 88, 89, 92, 94, 95, 98, 99, 103, 104, 107, 108, 112, 116, 117, 202, 203, 204, 206, 207, 208, 211, 236, 237, 238, 278, 281, 350, 354], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 23, 33, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 147, 148, 149, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 186, 191, 192, 193, 194, 195, 196, 199, 204, 208, 214, 219, 220, 222, 224, 225, 235, 236, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 256, 257, 262, 263, 264, 265, 266, 268, 269, 270, 273, 276, 277, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 311, 313, 340, 348, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 371, 372], "immedi": [2, 26, 29, 33, 89, 93, 109, 115, 177, 292, 365, 366], "200": [2, 13, 14, 15, 20, 33, 54, 89, 92, 93, 94, 109, 115, 116, 117, 156, 177, 192, 193, 200, 225, 226, 311, 313, 353, 356, 360, 362, 367, 369], "199": [2, 367], "info": [2, 3, 13, 14, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 74, 76, 77, 87, 88, 89, 92, 93, 94, 95, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 171, 174, 176, 320, 357, 362, 365, 366, 369], "At": [2, 210, 243, 354, 355, 356, 360, 364, 367, 368], "glanc": [2, 357], "seem": [2, 353, 356, 357], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 42, 89, 93, 102, 109, 110, 111, 115, 129, 152, 202, 204, 206, 208, 232, 236, 237, 238, 257, 348, 354, 356, 357, 365], "less": [2, 106, 233, 342, 343, 349, 355, 356, 369, 371], "omit": [2, 325, 355, 359, 367, 369], "proper": [2, 3, 4, 6, 7, 293, 294, 295, 296, 354, 355, 365, 366, 369], "imposs": [2, 3, 80, 179, 262, 264, 277, 280, 282], "determin": [2, 37, 43, 56, 68, 69, 89, 93, 109, 115, 116, 117, 151, 173, 214, 247, 354, 358, 365, 366], "complic": [2, 367, 369, 372], "matter": [2, 27, 360], "inconsist": [2, 372], "miss": [2, 3, 4, 6, 7, 11, 26, 33, 89, 93, 109, 115, 169, 177, 186, 253, 254, 283, 347, 353, 356], "behavior": [2, 4, 33, 89, 93, 109, 115, 169, 177, 269, 276, 356, 366, 367], "primari": [2, 360], "elimin": [2, 3, 357], "represent": [2, 29, 30, 33, 89, 93, 109, 115, 151, 171, 173, 177, 353, 367, 368, 372], "upon": [2, 3, 8, 365, 367], "canon": 2, "definit": [2, 35, 78, 214], "markov": [2, 3, 357, 372], "decis": [2, 3, 191, 222, 240, 267, 279, 356, 357, 358, 365, 366, 369, 372], "mdp": [2, 357, 367], "context": [2, 3, 5, 8, 33, 89, 90, 93, 108, 109, 115, 165, 170, 177, 215, 216, 240, 289, 290, 293, 294, 295, 296, 298, 306, 313, 326, 348, 349, 353, 354, 355, 365, 366, 367, 368, 369], "condit": [2, 47, 164, 241, 242, 246, 249, 250, 261, 353, 365, 367, 369], "complet": [2, 7, 9, 75, 89, 93, 109, 115, 129, 163, 347, 349, 353, 355, 357, 364], "termin": [2, 3, 7, 13, 14, 15, 16, 33, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 87, 88, 89, 92, 93, 94, 98, 99, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 125, 126, 138, 153, 177, 187, 188, 204, 208, 211, 246, 253, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 353, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "truncat": [2, 3, 13, 14, 15, 16, 33, 39, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 76, 77, 87, 88, 89, 92, 93, 94, 103, 104, 109, 110, 111, 115, 116, 117, 138, 139, 146, 153, 156, 163, 169, 177, 187, 204, 208, 231, 246, 299, 353, 355, 356, 357, 358, 360, 361, 364, 365, 368, 369, 371, 372], "reward": [2, 3, 13, 14, 15, 27, 33, 36, 41, 42, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 80, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 123, 126, 127, 132, 133, 134, 135, 137, 138, 139, 145, 149, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 168, 169, 170, 172, 173, 175, 177, 183, 186, 188, 204, 211, 240, 246, 257, 262, 263, 265, 266, 268, 269, 270, 273, 276, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 323, 324, 326, 328, 344, 349, 350, 353, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "imit": [2, 3], "addit": [2, 3, 4, 33, 56, 89, 93, 109, 115, 116, 133, 151, 165, 168, 169, 171, 173, 177, 202, 239, 240, 246, 251, 261, 278, 293, 311, 349, 353, 354, 357, 365, 366, 369], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 45, 46, 48, 49, 60, 89, 90, 93, 96, 99, 109, 115, 177, 189, 190, 209, 215, 349, 350, 353, 354, 355, 356, 357, 365, 366, 367, 369], "stateless": [2, 3, 89, 93, 109, 115, 126, 168, 278, 311, 353, 357, 367, 372], "simul": [2, 3, 5, 7, 8, 85, 86, 95, 98, 99, 112, 116, 117, 121, 188, 211, 348, 353, 355, 357, 361, 365, 366], "furthermor": [2, 365, 366], "certain": [2, 4, 17, 18, 19, 20, 33, 47, 89, 93, 109, 115, 122, 142, 163, 169, 177, 203, 207, 243, 277, 348, 353, 354, 355, 362, 365, 366, 372], "composit": [2, 3, 26, 29, 74, 79, 84, 89, 93, 109, 115, 355, 358, 367], "accommod": [2, 3, 357, 358], "uniform": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 43, 46, 48, 49, 68, 69, 365], "unambigu": 2, "distinguish": [2, 103, 104, 116, 117], "happen": [2, 3, 89, 93, 109, 115, 239, 354, 359, 360, 361, 368, 372], "limit": [2, 42, 89, 93, 105, 109, 115, 129, 145, 262, 264, 277, 280, 282, 353, 354, 356, 365, 366, 367], "everyth": [2, 354, 355, 356, 361, 362], "belong": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 54, 60, 174, 175, 348, 353, 360, 366], "rule": [2, 109, 134, 137, 252, 348, 355], "entri": [2, 3, 13, 14, 16, 22, 26, 29, 33, 36, 38, 39, 41, 47, 51, 56, 57, 58, 59, 61, 62, 76, 77, 87, 88, 89, 92, 93, 94, 95, 103, 104, 109, 112, 115, 116, 117, 125, 129, 131, 132, 134, 137, 138, 141, 144, 147, 149, 151, 154, 156, 159, 161, 163, 164, 165, 173, 175, 177, 186, 187, 204, 212, 213, 240, 241, 246, 249, 250, 263, 283, 293, 294, 295, 296, 348, 353, 355, 356, 357, 358, 359, 361, 365, 366, 367, 368, 369, 372], "field": [2, 3, 13, 14, 15, 16, 22, 26, 33, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 82, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 126, 134, 137, 138, 139, 149, 153, 154, 156, 160, 163, 165, 169, 177, 186, 188, 198, 199, 204, 208, 211, 223, 224, 232, 235, 236, 237, 238, 240, 241, 242, 246, 247, 248, 249, 250, 251, 254, 256, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 334, 347, 348, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "taken": [2, 3, 89, 93, 109, 115, 155, 212, 213, 244, 349, 353, 355, 356, 358, 365, 366, 367], "is_shar": [2, 3, 13, 14, 15, 22, 26, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 82, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 126, 134, 137, 138, 139, 149, 153, 154, 156, 160, 163, 165, 175, 186, 188, 198, 199, 204, 208, 211, 223, 224, 232, 235, 236, 237, 238, 240, 241, 242, 246, 247, 248, 249, 250, 251, 254, 256, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 348, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "brought": [2, 355, 356, 358], "step_mdp": [2, 3, 89, 93, 109, 115, 204, 208, 346, 356, 357, 367, 371, 372], "count": [2, 3, 33, 89, 90, 163, 247, 326, 330, 333, 353, 354, 355, 356, 369, 372], "trigger": [2, 7], "partial": [2, 3, 89, 93, 109, 115, 128, 129, 164, 165, 166, 330, 356], "turn": [2, 17, 18, 19, 20, 36, 38, 41, 143, 170, 174, 241, 311, 326, 349, 353, 354, 356, 358, 367, 368], "retain": 2, "regard": [2, 56, 62, 199, 242, 262, 271, 280, 353, 355, 367], "posit": [2, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 87, 88, 89, 93, 109, 115, 141, 142, 162, 163, 166, 169, 170, 177, 218, 283, 349, 355, 365, 366, 367, 369], "both": [2, 3, 7, 33, 37, 40, 43, 44, 60, 89, 90, 92, 93, 103, 104, 109, 110, 111, 115, 129, 154, 169, 177, 187, 189, 190, 204, 207, 208, 209, 214, 215, 236, 237, 238, 242, 250, 262, 264, 265, 269, 270, 276, 277, 278, 280, 281, 282, 283, 285, 326, 348, 353, 355, 357, 359, 365, 366, 367, 368, 369, 372], "mark": [2, 3, 15, 62, 89, 93, 109, 115, 204, 208, 293, 295, 296, 360, 369], "identifi": [2, 39], "marl": [2, 102, 118, 129, 166, 214, 357, 365, 366], "abov": [2, 3, 7, 33, 89, 93, 109, 115, 177, 205, 230, 231, 261, 349, 350, 353, 355, 357, 358, 365, 366, 367, 372], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 69, 76, 77, 87, 88, 89, 92, 93, 94, 95, 99, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 126, 127, 129, 132, 133, 134, 135, 137, 139, 145, 147, 151, 153, 154, 159, 160, 163, 166, 168, 169, 171, 173, 174, 177, 179, 187, 189, 190, 191, 192, 193, 196, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 214, 215, 218, 224, 233, 235, 236, 239, 240, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 311, 313, 321, 348, 349, 353, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 368, 371, 372], "typic": [2, 3, 4, 8, 33, 89, 93, 109, 115, 138, 164, 177, 248, 263, 278, 280, 283, 348, 349, 350, 355, 357, 359, 360, 365, 366, 367], "adjust": [2, 353, 365, 366, 367], "grumodul": [2, 128, 259], "lstmmodul": [2, 356], "skip": [2, 3, 33, 54, 89, 93, 109, 115, 142, 169, 177, 179, 248, 252, 278, 283, 293, 294, 295, 296, 312, 313, 323, 326, 353, 354, 367], "accumul": [2, 8, 177], "upcom": [2, 278, 302, 303, 304, 305, 307, 308, 309, 310, 353], "popular": [2, 3, 348, 356, 359, 366], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 177, 346, 354], "fail": [2, 7, 21, 26, 29, 109, 123, 179], "shift": [2, 33, 258, 293, 294, 295, 296, 355], "naiv": [2, 171, 357], "consum": [2, 75, 77, 246, 354, 355, 360, 366, 369], "approxim": [2, 366, 372], "twice": [2, 8], "flat": [2, 80], "would": [2, 3, 33, 42, 89, 93, 109, 115, 177, 202, 204, 206, 208, 209, 214, 350, 354, 355, 356, 357, 359, 360, 367, 369, 371, 372], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 129, 196, 222, 262, 267, 279, 280, 321, 344, 355, 356, 366, 369], "2x": 2, "small": [2, 171, 353, 355, 365, 366, 372], "clearer": [2, 358], "lazi": [2, 29, 30, 51, 52, 89, 93, 109, 115, 116, 117, 151, 171, 189, 214, 216, 253, 254, 353, 354, 358, 360, 364, 369, 372], "certainli": 2, "benefici": 2, "welcom": [2, 357], "wrapper": [2, 3, 11, 16, 36, 38, 41, 42, 43, 44, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 174, 178, 218, 233, 239, 240, 244, 246, 247, 252, 257, 293, 318, 319, 320, 344, 346, 355, 356, 357, 359, 360, 361, 365, 366, 368, 372], "around": [2, 5, 7, 16, 43, 44, 105, 178, 246, 252, 293, 353, 354, 366, 372], "selecttransform": [2, 89, 93, 109, 115], "excludetransform": [2, 61, 160, 369], "promptli": 2, "virtual": [2, 3, 92], "instal": [2, 3, 5, 10, 17, 18, 19, 56, 59, 89, 93, 109, 110, 111, 113, 114, 115, 315, 330, 347, 353, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 372], "respons": [2, 3, 8, 69, 76, 89, 93, 109, 115, 330, 359, 360, 372], "d4rl": [2, 56, 62], "repositori": [2, 7, 57, 58, 59, 62, 117, 365, 366], "wheel": [2, 355], "publish": 2, "openml": [2, 59, 108], "scikit": [2, 59, 108], "panda": [2, 59], "raw": [2, 3, 4, 42, 205, 230, 231, 354, 360, 367], "go": [2, 3, 7, 102, 109, 152, 156, 240, 299, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "natur": [2, 3, 353, 356, 358, 359, 360, 369], "modifi": [2, 3, 7, 8, 26, 29, 33, 47, 89, 93, 109, 115, 126, 133, 141, 145, 151, 165, 168, 169, 171, 173, 177, 240, 247, 251, 333, 353, 354, 355, 357, 365, 366, 367], "fly": [2, 175, 277, 349, 355, 367, 369, 372], "extra": [2, 10, 33, 89, 93, 109, 115, 129, 175, 177, 186, 320, 348, 355, 356, 369], "least": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 76, 89, 132, 361, 372], "pre": [2, 7, 21, 33, 47, 60, 66, 89, 93, 109, 115, 151, 171, 173, 177, 372], "appli": [2, 3, 4, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 150, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 169, 171, 172, 174, 175, 177, 202, 206, 230, 241, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285, 293, 311, 325, 350, 353, 354, 355, 360, 365, 367, 371, 372], "conisder": 2, "space": [2, 9, 35, 46, 89, 93, 109, 115, 132, 136, 183, 196, 199, 214, 220, 224, 235, 239, 241, 242, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 266, 268, 269, 270, 285, 291, 348, 354, 355, 356, 357, 358, 359, 365, 366, 367, 371, 372], "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 57, 76, 80, 97, 98, 99, 109, 110, 111, 132, 159, 189, 190, 200, 214, 215, 243, 246, 315, 330, 342, 343, 353, 354, 355, 356, 358, 359, 362, 365, 366, 369, 371], "pipelin": [2, 3, 7, 348, 355], "replac": [2, 3, 6, 7, 26, 29, 33, 54, 60, 69, 76, 77, 125, 136, 138, 186, 243, 348, 365, 369], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 38, 41, 60, 71, 89, 93, 109, 115, 125, 156, 169, 177, 239, 244, 246, 247, 328, 350, 354, 355, 356, 358, 361, 367, 369, 372], "produc": [2, 125, 126, 189, 190, 209, 215, 221, 236, 238, 240, 313, 355, 356, 357, 358, 360, 369, 372], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 60, 75, 89, 93, 109, 110, 111, 115, 169, 177, 283, 355], "download": [2, 7, 10, 54, 56, 57, 58, 60, 61, 62, 97, 151, 173, 313, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 54, 57, 58, 60, 61, 62, 354, 365, 366, 367], "robosetexperiencereplai": [2, 76, 77], "fk1": [2, 61], "v4": [2, 61, 93, 109, 155, 302, 303, 304, 305, 307, 308, 309, 310, 353, 355, 368], "expert": [2, 61], "fk1_microopenrandom_v2d": [2, 61], "func": [2, 54, 55, 56, 57, 58, 59, 60, 61, 62, 176], "obs_norm": 2, "norm": [2, 4, 8, 85, 86, 330, 353, 354, 355, 365, 366, 367], "num_work": [2, 36, 38, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 106, 109, 115, 353, 354], "os": [2, 38, 47, 63, 354], "cpu_count": [2, 38, 47, 63], "num_chunk": [2, 54, 55, 56, 57, 58, 59, 60, 61, 62], "1000": [2, 4, 40, 68, 76, 77, 89, 93, 109, 115, 129, 175, 243, 247, 248, 252, 275, 353, 354, 355, 356, 358, 360, 362, 368, 369], "mp_start_method": [2, 54, 55, 56, 57, 58, 59, 60, 61, 62, 109, 115, 354, 371], "fork": [2, 5, 54, 55, 56, 57, 58, 59, 60, 61, 62, 353, 354, 355, 356, 365, 366, 368, 371], "recreat": [2, 367], "customari": [2, 348], "moreov": [2, 3], "fine": [2, 3, 23, 76, 89, 93, 109, 115, 126, 145, 360, 368], "grain": [2, 3, 76, 89, 93, 109, 115, 126], "nomenclatur": 2, "compact": 2, "propos": [2, 129, 138, 210, 275, 284, 348, 356, 369], "replaybufferensembl": [2, 54, 74, 79, 84], "primit": [2, 3, 4, 60, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285], "individu": [2, 4, 17, 18, 19, 20, 33, 47, 71, 80, 89, 93, 103, 104, 109, 115, 177, 353, 366], "dummi": [2, 3, 311, 353, 360, 372], "semant": [2, 29, 30, 348], "ident": [2, 3, 13, 14, 15, 33, 36, 38, 41, 76, 89, 93, 106, 109, 115, 138, 214, 215, 293, 294, 295, 296, 342, 343, 354, 357, 365, 366], "another_kei": [2, 71], "renam": [2, 36, 38, 41, 71, 154, 156, 186, 353], "resiz": [2, 3, 62, 71, 129, 354, 356, 357, 369, 372], "imag": [2, 3, 4, 7, 60, 131, 151, 167, 173, 209, 311, 313, 353, 354, 357, 361, 366, 368, 372], "comops": 2, "totensorimag": [2, 3, 62, 71, 129, 155, 354, 356, 369, 371, 372], "renametransform": [2, 71, 89, 93, 109, 115], "rb0": [2, 71], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 89, 93, 105, 109, 115, 120, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 171, 173, 175, 188, 198, 204, 208, 211, 223, 232, 233, 235, 236, 237, 238, 240, 241, 246, 248, 249, 251, 252, 254, 255, 256, 259, 262, 263, 264, 265, 266, 268, 269, 270, 276, 277, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 312, 313, 340, 348, 353, 354, 355, 356, 358, 359, 362, 364, 365, 366, 367, 368, 369, 371, 372], "pixel": [2, 3, 7, 26, 62, 71, 87, 88, 92, 94, 95, 112, 129, 131, 138, 141, 143, 147, 149, 151, 155, 167, 171, 173, 192, 219, 220, 311, 313, 348, 353, 354, 356, 361, 365, 368, 369, 371, 372], "rb1": [2, 71], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 89, 93, 105, 109, 115, 120, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 143, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 171, 173, 175, 188, 198, 199, 204, 208, 211, 223, 224, 232, 233, 235, 236, 237, 238, 240, 242, 246, 248, 249, 250, 251, 252, 254, 255, 256, 259, 262, 263, 264, 269, 270, 276, 277, 280, 281, 282, 283, 291, 293, 294, 295, 296, 311, 313, 326, 340, 348, 353, 354, 355, 356, 358, 362, 364, 365, 366, 367, 368, 369, 371, 372], "pixels33": [2, 71], "data0": [2, 71], "244": [2, 71, 151, 173, 353, 367], "data1": [2, 71], "_": [2, 8, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 90, 97, 116, 117, 130, 134, 136, 137, 145, 147, 154, 167, 175, 177, 235, 251, 256, 261, 262, 263, 265, 269, 270, 276, 280, 281, 283, 285, 293, 294, 295, 296, 315, 350, 353, 354, 355, 356, 362, 365, 366, 367, 369, 371], "rang": [2, 3, 4, 8, 11, 28, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 80, 89, 90, 93, 103, 104, 109, 115, 156, 167, 175, 177, 203, 207, 277, 285, 349, 350, 353, 355, 356, 359, 360, 362, 365, 366, 367, 369, 371], "parent": [2, 3, 20, 26, 29, 46, 55, 71, 79, 84, 89, 93, 109, 115, 126, 129, 130, 133, 135, 138, 141, 142, 147, 151, 159, 163, 164, 165, 166, 168, 170, 171, 177, 204, 208, 236, 259, 278, 280, 297, 311, 313, 353, 360, 367, 371, 372], "basic": [2, 105, 348, 355, 359, 360, 362, 365, 372], "properti": [2, 3, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 105, 109, 115, 125, 168, 169, 177, 197, 205, 216, 221, 229, 230, 231, 246, 278, 283, 358, 360, 367, 369], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 46, 48, 49, 89, 93, 103, 104, 105, 108, 109, 110, 111, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 186, 187, 189, 190, 192, 193, 194, 195, 198, 199, 202, 203, 204, 206, 207, 208, 209, 214, 215, 216, 217, 224, 225, 226, 227, 228, 233, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 324, 328, 333, 340, 348, 349, 350, 353, 354, 355, 356, 357, 365, 366, 367, 371, 372], "send": [2, 3, 8, 320, 371], "receiv": [2, 3, 33, 42, 89, 93, 109, 115, 168, 169, 177, 209, 299, 349, 353, 355, 359, 364, 367], "spawn": [2, 3, 4, 17, 21, 97, 106, 109, 115, 354, 365, 366], "check_env_spec": [2, 3, 93, 109, 153, 311, 346, 355, 365, 366, 367], "saniti": [2, 3, 7, 179, 355], "utmost": 2, "commonli": [2, 69, 76, 77, 372], "emploi": [2, 217], "languag": [2, 23, 42], "scarc": 2, "address": [2, 369], "subdomain": 2, "facilit": [2, 3, 7, 150, 151, 165, 171, 173, 236, 237, 238, 348, 353, 356, 358, 367], "extern": [2, 3, 134, 137, 365, 372], "token": [2, 38, 39, 42, 45, 47, 63], "manner": [2, 93, 151, 171, 348, 353, 354, 355, 360, 364, 367, 369], "dm": [3, 353, 372], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 36, 37, 38, 40, 41, 43, 44, 47, 60, 73, 80, 81, 83, 85, 86, 89, 93, 97, 98, 99, 105, 106, 107, 109, 115, 116, 156, 165, 171, 172, 214, 236, 245, 262, 263, 265, 266, 268, 269, 270, 272, 276, 280, 281, 282, 283, 285, 320, 330, 348, 349, 350, 353, 354, 356, 357, 358, 359, 365, 366, 367, 369, 372], "goal": [3, 4, 54, 55, 56, 57, 58, 59, 60, 61, 62, 164, 353, 354, 355, 356, 366, 367], "abl": [3, 102, 110, 111, 353, 355, 356, 358, 364, 365, 366, 367, 369, 371], "experi": [3, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 68, 69, 179, 315, 316, 317, 318, 319, 320, 347, 354, 355, 360, 361, 365, 366, 369], "box": [3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 89, 90, 93, 103, 104, 109, 110, 111, 113, 114, 115, 129, 132, 138, 144, 145, 147, 149, 154, 156, 159, 165, 168, 174, 175, 177, 311, 340, 353, 354, 355, 356, 364, 366, 368, 369, 371, 372], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 42, 85, 86, 89, 93, 105, 109, 115, 133, 136, 138, 145, 151, 165, 168, 169, 171, 173, 177, 188, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 213, 214, 215, 218, 223, 224, 232, 235, 236, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 256, 259, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 340, 348, 349, 353, 354, 355, 356, 358, 359, 362, 364, 365, 366, 367, 368, 371], "organis": [3, 61, 89, 93, 109, 115, 169, 354], "arbitrari": [3, 35, 40, 89, 93, 109, 115, 125, 348, 353, 354, 367, 369], "structur": [3, 7, 36, 37, 38, 40, 41, 42, 43, 44, 47, 80, 89, 93, 109, 115, 134, 137, 187, 214, 247, 293, 294, 295, 296, 297, 346, 349, 353, 355, 356, 357, 360, 365, 366, 367, 368], "attribut": [3, 4, 23, 27, 33, 36, 38, 41, 47, 60, 89, 92, 93, 94, 109, 115, 138, 151, 171, 177, 204, 208, 252, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 353, 356, 367], "live": [3, 12, 13, 14, 15, 16, 18, 19, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 105, 109, 115, 138, 177], "actual": [3, 4, 7, 36, 38, 41, 54, 56, 57, 58, 60, 61, 62, 89, 93, 109, 115, 174, 333, 349, 353, 355, 365, 366, 367], "retriev": [3, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 74, 89, 92, 93, 94, 109, 115, 130, 135, 138, 147, 186, 188, 189, 211, 246, 248, 252, 255, 259, 262, 263, 264, 266, 277, 280, 281, 283, 285, 291, 293, 294, 295, 296, 344, 350, 354, 355, 358, 367, 372], "care": [3, 8, 89, 93, 109, 115, 168, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 313, 353, 355, 365, 366, 367, 369], "parametr": [3, 217, 252, 263, 269, 276, 283, 353, 355], "hardwar": 3, "observation_spec": [3, 89, 93, 105, 109, 115, 123, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 143, 144, 145, 147, 149, 151, 153, 155, 159, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 177, 188, 204, 208, 211, 334, 340, 353, 355, 359, 364, 365, 366, 367, 372], "compositespec": [3, 29, 30, 51, 89, 91, 93, 105, 109, 115, 123, 126, 134, 135, 136, 137, 139, 145, 153, 154, 160, 163, 165, 168, 177, 183, 187, 188, 211, 235, 239, 248, 254, 255, 259, 346, 353, 355, 356, 365, 366, 367, 372], "pair": [3, 33, 36, 38, 41, 56, 87, 88, 89, 93, 109, 115, 156, 165, 204, 236, 248, 252, 278, 293, 294, 295, 296, 297, 348, 349, 353, 354, 355, 358, 359, 364, 367, 372], "state_spec": [3, 89, 93, 105, 109, 115, 123, 188, 211, 367, 372], "reward_spec": [3, 89, 93, 105, 109, 115, 123, 126, 127, 132, 133, 134, 135, 137, 153, 157, 158, 159, 161, 168, 170, 177, 188, 211, 355, 365, 366, 367, 372], "done_spec": [3, 89, 93, 109, 115, 134, 135, 137, 138, 153, 168, 177, 187, 365, 366, 367, 372], "flag": [3, 8, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 103, 104, 109, 115, 116, 117, 247, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 348, 365, 366, 367, 368], "input_spec": [3, 89, 93, 105, 109, 115, 126, 133, 134, 135, 136, 147, 149, 153, 154, 159, 160, 163, 164, 165, 168, 169, 170, 172, 177, 355, 367], "full_action_spec": [3, 89, 93, 109, 115, 188, 211, 355, 365, 366], "full_state_spec": [3, 89, 93, 109, 115, 188, 211, 355], "lock": [3, 26, 29, 36, 38, 41, 89, 93, 109, 115, 126, 165, 175, 367], "output_spec": [3, 89, 93, 109, 115, 126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 169, 177, 367], "full_observation_spec": [3, 89, 93, 109, 115, 188, 211], "full_reward_spec": [3, 89, 93, 109, 115, 126, 135, 153, 365, 366], "full_done_spec": [3, 89, 93, 109, 115, 126, 135, 153, 187, 365, 366], "importantli": [3, 248, 252], "action_s": 3, "help": [3, 4, 33, 89, 93, 109, 115, 138, 177, 262, 264, 277, 280, 282, 347, 349, 353, 354, 355, 356, 365, 366], "With": [3, 98, 99, 102, 164, 350, 354, 357, 359, 360, 361, 364, 365, 366, 369, 372], "necessarili": [3, 89, 93, 109, 115, 372], "present": [3, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 75, 89, 92, 93, 109, 115, 139, 156, 160, 165, 169, 177, 186, 187, 191, 192, 193, 194, 195, 201, 204, 206, 208, 217, 222, 246, 247, 251, 252, 253, 254, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 344, 350, 353, 362, 364, 365, 366, 369, 371], "0s": [3, 54, 60, 165, 356], "step_and_maybe_reset": [3, 89, 93, 109, 115, 357], "done_kei": [3, 22, 89, 93, 109, 115, 125, 129, 138, 156, 163, 177, 186, 365, 366], "assign": [3, 4, 13, 14, 16, 33, 36, 38, 41, 89, 93, 109, 115, 169, 177, 265, 266, 268, 283, 355, 358, 365, 366, 369], "_reset": [3, 89, 93, 105, 109, 115, 123, 125, 126, 129, 134, 137, 153, 187, 188, 211, 365], "data_": [3, 89, 93, 109, 115], "append": [3, 8, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 90, 93, 109, 115, 125, 132, 133, 156, 165, 169, 174, 203, 204, 207, 208, 241, 249, 353, 354, 355, 356, 365, 366, 367, 368, 369, 371], "set_se": [3, 13, 14, 15, 16, 20, 33, 85, 86, 89, 93, 98, 99, 105, 109, 115, 125, 147, 154, 159, 164, 166, 169, 177, 360, 362, 367, 371, 372], "seed": [3, 13, 14, 15, 16, 20, 61, 89, 93, 105, 109, 110, 111, 115, 116, 117, 123, 126, 134, 137, 153, 169, 179, 311, 330, 365], "determinist": [3, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 191, 200, 219, 226, 235, 244, 251, 252, 255, 263, 348, 353, 354, 356, 358, 359, 362, 365, 367, 372], "preced": [3, 33, 356], "risk": [3, 152], "overlap": [3, 43, 80], "reproduc": [3, 129, 179, 353, 355, 366], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 38, 39, 42, 45, 47, 63, 65, 66, 67, 68, 82, 89, 93, 109, 115, 136, 157, 163, 164, 166, 229, 230, 231, 255, 263, 269, 270, 276, 278, 279, 283, 313, 327, 353, 354, 355, 356, 358, 365, 366, 369], "max_step": [3, 80, 89, 93, 103, 104, 105, 109, 115, 116, 117, 163, 177, 311, 357, 358, 359, 361, 362, 365, 366, 371, 372], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 42, 85, 86, 89, 93, 105, 109, 115, 128, 145, 199, 204, 208, 211, 223, 224, 232, 233, 236, 237, 238, 239, 240, 241, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 259, 263, 265, 269, 270, 272, 273, 274, 276, 278, 281, 283, 285, 291, 292, 293, 294, 295, 296, 326, 340, 346, 353, 355, 356, 359, 362, 364, 365, 366, 367, 368, 372], "trail": [3, 175], "treat": [3, 33, 358, 359], "figur": [3, 353, 355, 356, 366, 367, 372], "brief": [3, 355, 357, 359, 369], "deliveri": 3, "design": [3, 33, 35, 74, 79, 84, 89, 93, 103, 104, 109, 115, 129, 152, 169, 177, 240, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 353, 354, 355, 356, 357, 358, 359, 364, 365, 366, 367, 369, 372], "metaclass": 3, "everi": [3, 8, 26, 29, 33, 35, 78, 89, 93, 109, 115, 163, 164, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 214, 215, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 330, 350, 353, 354, 355, 356, 357, 358, 365, 366, 367], "flank": [3, 356], "dual": 3, "strictli": [3, 8, 33, 89, 93, 109, 115, 169, 177, 283, 353, 355], "refer": [3, 7, 8, 9, 20, 23, 33, 42, 89, 92, 93, 94, 109, 115, 169, 175, 177, 188, 199, 200, 211, 212, 213, 214, 219, 220, 225, 226, 242, 262, 271, 272, 273, 274, 280, 283, 293, 298, 306, 352, 353, 355, 358, 359, 360, 361, 365, 366, 369], "union": [3, 11, 13, 15, 16, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 68, 69, 89, 93, 109, 115, 123, 136, 138, 144, 147, 151, 152, 156, 158, 160, 171, 173, 175, 177, 186, 190, 197, 199, 212, 213, 214, 215, 216, 217, 221, 223, 224, 229, 230, 231, 232, 246, 251, 268, 270, 275, 281, 284, 306, 324, 326, 327, 335, 336, 338, 340, 341, 342, 343, 344], "carri": [3, 20, 47, 89, 93, 109, 115, 165, 278, 354, 356, 365, 366, 367, 369], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 103, 104, 118, 353], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 54, 60, 69, 76, 77, 346], "adjac": [3, 22, 141, 246], "reli": [3, 165, 202, 203, 204, 206, 207, 208, 262, 349, 353, 355, 358, 360, 367, 372], "junction": 3, "inittrack": [3, 204, 208, 246, 353, 356], "tutori": [3, 345, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 372], "scratch": [3, 8, 354, 367], "gym3": 3, "envpool": [3, 106, 107], "interfac": [3, 96, 108, 209, 216, 348, 353, 355, 361, 367, 369], "simultan": [3, 19, 106, 107, 109, 115, 367], "advantag": [3, 8, 201, 262, 264, 277, 280, 282, 293, 294, 295, 296, 297, 298, 300, 302, 304, 306, 307, 309, 349, 350, 353, 354, 355, 356, 366, 367, 372], "scale": [3, 4, 23, 56, 89, 93, 109, 115, 129, 145, 147, 158, 164, 167, 200, 205, 218, 225, 226, 230, 231, 236, 237, 238, 248, 252, 254, 262, 263, 276, 280, 281, 282, 283, 328, 334, 344, 348, 353, 354, 355, 356, 358, 366, 371], "varieti": 3, "inherit": [3, 89, 93, 109, 115, 210, 278, 350, 355, 365, 366], "Of": [3, 7, 347, 367, 372], "cours": [3, 4, 347, 367, 372], "from_pixel": [3, 85, 86, 87, 88, 92, 94, 95, 98, 99, 112, 129, 155, 311, 313, 353, 354, 356, 357, 361, 362, 368, 369, 371, 372], "81": [3, 353, 354, 367, 368], "simpli": [3, 6, 36, 38, 41, 47, 79, 80, 84, 139, 160, 174, 278, 348, 349, 353, 355, 359, 365, 366, 372], "d": [3, 37, 40, 43, 44, 57, 59, 61, 62, 63, 68, 69, 202, 206, 248, 252, 371], "privat": [3, 89, 93, 109, 115, 174, 367, 372], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 31, 32, 35, 36, 38, 41, 54, 77, 80, 264, 277, 280, 321, 323, 326, 330, 333, 334, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 41, 42, 71, 74, 147, 158, 205, 216, 225, 230, 231, 291, 348, 358, 359, 365, 367, 369], "inner": [3, 89, 93, 109, 115, 136, 350, 354, 355, 366, 372], "logic": [3, 365], "nevertheless": [3, 355, 357, 369], "kept": [3, 22, 75, 77, 136, 160, 168, 179, 186, 205, 230, 231, 359, 365], "mind": [3, 54, 60, 69, 76, 77, 89, 93, 109, 115, 365, 366], "desig": 3, "wherev": 3, "expos": [3, 112, 134, 137, 253, 354], "modif": [3, 5, 26, 29, 33, 89, 93, 109, 115, 141, 177, 187, 278, 355, 367], "lost": [3, 8, 174], "eras": [3, 69, 76, 89, 93, 109, 115, 169], "intern": [3, 351], "face": [3, 5, 8, 9, 357, 372], "NOT": [3, 152], "outsid": [3, 15, 361, 365, 366, 367], "right": [3, 6, 7, 22, 42, 76, 354, 355, 366, 367, 372], "preliminari": 3, "warranti": 3, "affect": [3, 8, 33, 89, 93, 109, 115, 168, 169, 177, 179, 293, 294, 295, 296, 365], "assumpt": [3, 367, 369], "preclud": 3, "presenc": [3, 359], "annihil": 3, "reason": [3, 4, 8, 33, 60, 89, 93, 109, 110, 111, 115, 151, 171, 177, 208, 349, 353, 354, 355, 359, 360, 365, 367, 369], "advanc": [3, 20, 37, 40, 43, 44, 357, 360, 369], "explicitli": [3, 4, 125, 354, 356, 360, 365, 366, 369], "place": [3, 23, 26, 27, 29, 33, 36, 38, 41, 65, 66, 71, 74, 82, 89, 90, 93, 109, 115, 116, 117, 125, 133, 138, 151, 165, 168, 169, 171, 173, 174, 175, 177, 187, 240, 246, 251, 327, 332, 333, 354, 355, 358, 361, 365, 366, 367, 369], "superse": 3, "pettingzoowrapp": [3, 346], "group": [3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 54, 89, 93, 102, 103, 104, 109, 110, 111, 115, 116, 117, 118, 348, 354, 358, 360, 366, 369], "associ": [3, 33, 36, 38, 41, 89, 93, 109, 115, 177, 225, 344, 353, 369], "environemtn": 3, "__not__": 3, "constrain": [3, 145, 204, 208, 280], "li": 3, "fact": [3, 7, 8, 353, 355, 357, 365, 366, 367, 368, 369, 372], "predict": [3, 33, 42, 198, 200, 210, 211, 240, 257, 262, 264, 268, 271, 273, 274, 277, 280, 282, 292, 348, 353, 354, 359], "know": [3, 4, 9, 37, 40, 43, 44, 239, 281, 326, 353, 354, 355, 356, 357, 358, 359, 360, 365, 366, 369], "meaning": 3, "perfectli": [3, 350, 353, 367], "meaningless": 3, "val": [3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 359, 371], "agent0": 3, "agent1": 3, "overrid": [3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 40, 46, 48, 49, 54, 89, 93, 109, 115, 125, 344, 348], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 129, 130, 134, 136, 137, 138, 139, 141, 145, 146, 147, 149, 151, 153, 154, 156, 158, 159, 160, 163, 165, 167, 169, 170, 171, 173, 175, 177, 179, 186, 187, 188, 189, 190, 192, 193, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 230, 231, 235, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 320, 323, 324, 326, 327, 328, 330, 344, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "500": [3, 353, 354, 367, 371, 372], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 54, 57, 109, 115], "bottleneck": [3, 8, 69, 76, 77], "great": [3, 7, 8, 365, 371], "speedup": [3, 8, 365, 372], "precis": [3, 134, 137, 186, 203, 207, 353, 355], "misspecifi": 3, "caus": [3, 7, 8, 65, 66, 82, 89, 93, 97, 109, 115, 152, 372], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 60, 89, 93, 109, 115, 118, 129, 140, 146, 156, 164, 165, 166, 169, 177, 179, 239, 243, 244, 247, 283, 353, 355, 365, 366, 369], "mismatch": [3, 354], "mostli": [3, 16, 313, 349, 361, 369, 372], "subprocess": [3, 13, 14, 16, 90, 109, 115], "multithreadedenv": [3, 346], "underneath": 3, "higher": [3, 4, 132, 255, 353, 354, 355, 365, 369, 372], "flexibl": [3, 9, 106, 286, 349, 350, 353, 369, 372], "cover": [3, 347, 355, 357, 360, 361, 367, 371], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 62, 63, 71, 89, 93, 102, 105, 108, 109, 110, 111, 115, 126, 133, 134, 135, 138, 139, 145, 151, 153, 154, 160, 163, 165, 168, 169, 171, 173, 175, 177, 181, 185, 189, 190, 209, 214, 215, 217, 223, 232, 239, 241, 248, 251, 252, 259, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 291, 299, 311, 342, 346, 348, 353, 354, 355, 360, 365, 366, 367, 369, 372], "atari": [3, 4, 54, 129, 313, 361, 372], "classic": [3, 105, 111, 354], "benchmark_batched_env": 3, "seamlessli": [3, 367], "infrastructur": [3, 365, 366], "act": [3, 4, 76, 77, 110, 111, 169, 198, 215, 263, 265, 276, 281, 283, 285, 356, 365, 366, 369], "world": [3, 5, 105, 257, 273, 361, 365, 366, 367, 372], "paradigm": [3, 16, 366], "decpodp": 3, "game": [3, 4, 5, 54, 103, 104, 313, 361], "thank": [3, 353, 357], "carrier": [3, 355, 356, 357, 369], "particular": [3, 33, 47, 56, 57, 89, 93, 109, 115, 169, 177, 349, 350, 354, 356, 357, 364, 366, 369], "thu": [3, 277, 366], "let": [3, 6, 7, 33, 37, 40, 43, 44, 45, 89, 93, 109, 110, 111, 115, 129, 177, 204, 208, 214, 215, 241, 326, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "vma": [3, 116, 117, 311, 365, 366], "robot": [3, 5, 7, 60, 151, 171, 173, 366], "vmasenv": [3, 311, 346, 365, 366], "balanc": [3, 87, 88, 353, 354, 372], "num_env": [3, 20, 92, 96, 107, 116, 117, 311, 365, 366], "n_agent": [3, 116, 117, 214, 215, 223, 232, 291, 311, 365, 366], "ground_rew": 3, "pos_rew": [3, 366], "style": [3, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62], "relat": [3, 4, 10, 37, 109, 141, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 354, 362, 367], "vari": [3, 92, 94, 95, 110, 111, 112, 116, 152, 366], "creation": [3, 109, 115, 372], "info_spec": [3, 109], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 35, 85, 86, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 123, 153, 187, 266, 269, 270, 291, 346, 365, 366, 372], "simpl": [3, 9, 33, 35, 89, 93, 109, 115, 177, 192, 246, 252, 266, 268, 278, 282, 293, 348, 349, 353, 354, 355, 357, 358, 359, 365, 366, 369, 372], "prefix": [3, 22, 33, 36, 38, 41, 47, 89, 93, 109, 115, 169, 177, 278, 283, 312, 356, 359, 372], "exactli": [3, 33, 89, 93, 95, 109, 115, 169, 177, 202, 206, 283, 353, 356, 360, 365, 366], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 89, 93, 109, 115, 123, 136, 178, 186, 188, 210, 211, 239, 243, 244, 246, 247, 365, 366], "reward_kei": [3, 89, 93, 109, 115, 177, 186, 188, 211, 324, 328, 365, 366], "set_kei": [3, 138, 262, 264, 266, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 291, 297, 353, 365, 366], "awai": [3, 355, 357, 365, 366], "eas": [3, 365, 366], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 31, 32, 34, 35, 46, 48, 49, 89, 93, 109, 115, 163, 252], "full": [3, 89, 93, 109, 115, 204, 208, 242, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "autoresettransform": 3, "copi": [3, 11, 17, 18, 19, 20, 33, 36, 38, 41, 42, 47, 60, 89, 93, 109, 115, 125, 154, 164, 169, 177, 186, 204, 208, 240, 278, 283, 311, 349, 353, 354, 356, 357, 365, 369], "invalid": [3, 33, 80, 89, 93, 109, 115, 118, 177, 212, 213], "nan": [3, 125, 174], "auto_reset": [3, 89, 93, 109, 115, 125, 177, 367], "auto_reset_replac": [3, 125], "placehold": [3, 95, 138, 169], "set_gym_backend": [3, 89, 92, 93, 109, 115, 119, 125, 346, 357], "manual_se": [3, 37, 40, 43, 44, 57, 61, 62, 76, 77, 85, 86, 89, 93, 109, 115, 123, 125, 136, 147, 156, 159, 164, 166, 177, 212, 213, 221, 235, 242, 243, 244, 247, 255, 262, 263, 265, 269, 276, 283, 360, 362, 365, 366, 367, 371, 372], "autoresettinggymenv": [3, 125], "_step": [3, 89, 93, 109, 115, 123, 125, 126, 134, 137, 141, 153, 154], "self": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 29, 33, 36, 38, 41, 89, 93, 105, 109, 115, 123, 125, 126, 133, 134, 137, 151, 153, 165, 168, 169, 171, 173, 177, 188, 199, 211, 223, 232, 239, 243, 248, 251, 256, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 350, 353, 367, 371], "super": [3, 105, 123, 125, 126, 134, 137, 153, 188, 199, 211, 256, 263, 265, 270, 276, 281, 283, 285, 353, 367, 371], "td_reset": [3, 125], "exclud": [3, 8, 56, 61, 89, 93, 109, 115, 125, 129, 139, 186, 223, 365, 366, 369], "r": [3, 4, 33, 123, 125, 132, 147, 161, 203, 252, 261, 292, 311, 348, 354, 367, 372], "break_when_any_don": [3, 89, 93, 109, 115, 125, 177, 246, 366], "3633e": [3, 125], "02": [3, 89, 93, 109, 115, 125, 352, 353, 354, 355, 362, 367, 368, 370], "4877e": [3, 125], "01": [3, 125, 147, 247, 258, 264, 277, 280, 352, 353, 354, 356, 366, 367, 368, 370], "2849e": [3, 125], "7584e": [3, 125], "6609e": [3, 125], "6166e": [3, 125], "8366e": [3, 125], "2761e": [3, 125], "5685e": [3, 125], "4102e": [3, 125], "8111e": [3, 125], "9959e": [3, 125], "0865e": [3, 125], "5644e": [3, 125], "2119e": [3, 125], "2542e": [3, 125], "03": [3, 89, 93, 109, 115, 125, 147, 352, 353, 354, 365, 366, 367, 368, 370], "9952e": [3, 125], "4059e": [3, 125], "2094e": [3, 125], "9009e": [3, 125], "5140e": [3, 125], "3554e": [3, 125], "2920e": [3, 125], "7893e": [3, 125], "6429e": [3, 125], "3057e": [3, 125], "2867e": [3, 125], "6963e": [3, 125], "3818e": [3, 125], "2576e": [3, 125], "2679e": [3, 125], "1640e": [3, 125], "00": [3, 85, 86, 125, 352, 353, 354, 355, 356, 365, 366, 367, 368, 370], "6972e": [3, 125], "0212e": [3, 125], "5959e": [3, 125], "4637e": [3, 125], "3121e": [3, 125], "2168e": [3, 125], "5232e": [3, 125], "7704e": [3, 125], "7457e": [3, 125], "4127e": [3, 125], "1064e": [3, 125], "0854e": [3, 125], "5712e": [3, 125], "2189e": [3, 125], "5235e": [3, 125], "8289e": [3, 125], "0009e": [3, 125], "0257e": [3, 125], "8893e": [3, 125], "5872e": [3, 125], "9405e": [3, 125], "7766e": [3, 125], "0403e": [3, 125], "0626e": [3, 125], "2959e": [3, 125], "7263e": [3, 125], "2775e": [3, 125], "9564e": [3, 125], "0411e": [3, 125], "6769e": [3, 125], "6354e": [3, 125], "8698e": [3, 125], "1765e": [3, 125], "6292e": [3, 125], "5375e": [3, 125], "1820e": [3, 125], "7023e": [3, 125], "5836e": [3, 125], "9016e": [3, 125], "4826e": [3, 125], "6191e": [3, 125], "6387e": [3, 125], "8667e": [3, 125], "2056e": [3, 125], "1147e": [3, 125], "5991e": [3, 125], "0278e": [3, 125], "5219e": [3, 125], "3067e": [3, 125], "6617e": [3, 125], "3322e": [3, 125], "2629e": [3, 125], "4599e": [3, 125], "7298e": [3, 125], "5848e": [3, 125], "0148e": [3, 125], "5745e": [3, 125], "6982e": [3, 125], "7877e": [3, 125], "3527e": [3, 125], "7285e": [3, 125], "6668e": [3, 125], "0583e": [3, 125], "6956e": [3, 125], "3962e": [3, 125], "9845e": [3, 125], "5015e": [3, 125], "5903e": [3, 125], "9993e": [3, 125], "9418e": [3, 125], "0196e": [3, 125], "6557e": [3, 125], "2109e": [3, 125], "8997e": [3, 125], "1507e": [3, 125], "7363e": [3, 125], "0310e": [3, 125], "9574e": [3, 125], "8980e": [3, 125], "0090e": [3, 125], "torchvis": [3, 151, 173, 315, 365, 371, 372], "base_env": [3, 86, 89, 93, 94, 99, 109, 115, 123, 126, 132, 134, 136, 137, 145, 149, 153, 155, 161, 163, 165, 166, 169, 177, 313, 353, 354, 355, 365, 368, 371, 372], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 90, 93, 105, 109, 115, 122, 124, 126, 133, 138, 165, 169, 177, 189, 190, 209, 261, 311, 335, 336, 342, 343, 344, 354, 369], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 29, 30, 33, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 80, 89, 91, 93, 109, 115, 123, 125, 126, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 144, 145, 150, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 169, 174, 175, 177, 186, 187, 188, 204, 208, 210, 211, 239, 240, 242, 243, 246, 247, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 330, 353, 365, 367], "appar": [3, 323], "bring": [3, 355, 357, 372], "signific": [3, 5, 8, 355, 372], "kind": [3, 40, 46, 186, 359, 365, 369], "consult": 3, "interest": [3, 248, 252, 348, 354, 355, 357, 366, 367, 372], "resize_par": 3, "easi": [3, 5, 54, 59, 87, 88, 89, 93, 98, 99, 109, 115, 239, 243, 244, 247, 348, 349, 353, 354, 355, 366, 368, 369, 372], "graph": [3, 4, 8, 85, 86, 98, 99, 289, 290, 353, 367], "revers": [3, 206], "order": [3, 15, 33, 35, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 77, 89, 93, 109, 115, 130, 134, 137, 149, 169, 177, 235, 241, 251, 253, 254, 256, 262, 263, 265, 269, 270, 276, 280, 281, 282, 283, 285, 354, 365, 366], "chain": [3, 36, 37, 38, 40, 41, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 133, 136, 189, 190, 254, 372], "invers": [3, 4, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 129, 134, 137, 139, 147, 156, 177, 260, 269, 276, 367], "in_keys_inv": [3, 120, 132, 134, 135, 137, 147, 148, 149, 153, 154, 156, 161, 168, 353, 364, 367, 372], "append_transform": [3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 120, 128, 151, 165, 169, 171, 311, 353, 356, 365, 367, 369, 371, 372], "doubletofloat": [3, 353, 355, 364], "float32": [3, 13, 14, 15, 26, 36, 37, 38, 41, 42, 43, 44, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 82, 85, 86, 89, 92, 93, 94, 98, 99, 105, 108, 109, 113, 114, 115, 116, 117, 126, 134, 137, 138, 139, 147, 149, 153, 154, 156, 160, 163, 165, 167, 183, 186, 188, 198, 199, 204, 208, 211, 223, 224, 232, 235, 236, 237, 238, 240, 241, 246, 247, 248, 249, 250, 251, 254, 256, 259, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 348, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 371, 372], "float64": [3, 33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 87, 88, 89, 93, 103, 104, 109, 115, 133, 134, 137, 151, 165, 168, 169, 171, 173, 177, 251, 364, 372], "regist": [3, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 57, 89, 92, 93, 94, 109, 115, 134, 137, 138, 159, 169, 177, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 311, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 350, 353, 355, 357, 369], "manipul": [3, 4, 8, 87, 88, 151, 171, 372], "third_transform": 3, "unexpect": [3, 33, 89, 93, 109, 115, 177, 372], "behviour": 3, "fortun": [3, 356, 357, 358, 361], "alreadi": [3, 8, 11, 33, 36, 38, 41, 47, 54, 89, 93, 109, 115, 165, 177, 187, 252, 293, 294, 295, 296, 353, 355, 361, 365, 366], "chang": [3, 5, 7, 33, 37, 40, 43, 44, 54, 65, 66, 67, 69, 75, 76, 78, 79, 82, 89, 93, 109, 115, 126, 133, 134, 135, 137, 139, 145, 153, 154, 160, 163, 168, 169, 175, 177, 206, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 349, 353, 356, 365, 366, 367, 368, 369, 372], "catfram": [3, 246, 354], "hold": [3, 289, 290, 367, 369], "notic": [3, 80, 129, 355, 362, 367], "parenthood": 3, "henc": [3, 37, 152, 187, 214, 348, 353, 355, 365, 366, 367], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 109, 115, 311, 367], "discret": [3, 24, 28, 31, 32, 35, 49, 89, 93, 103, 104, 109, 110, 111, 115, 116, 117, 136, 221, 224, 268, 269, 270, 271, 348, 354, 358, 365, 366, 367, 372], "might": [3, 36, 38, 39, 41, 317, 347, 353, 357, 372], "action_mask": [3, 98, 99, 110, 111, 113, 114, 123], "unavail": [3, 110, 111], "probabl": [3, 4, 8, 42, 71, 74, 197, 199, 202, 204, 206, 208, 209, 212, 213, 221, 231, 243, 248, 252, 348, 354, 358, 371], "categor": [3, 28, 32, 35, 85, 86, 92, 94, 95, 98, 99, 103, 104, 106, 107, 110, 111, 112, 116, 117, 123, 138, 199, 221, 224, 241, 242, 248, 249, 250, 266, 269, 270, 291, 356], "probabilistictensordictmodul": [3, 145, 252, 253, 371], "tensordictsequenti": [3, 204, 208, 241, 243, 246, 253, 259, 348, 353, 354, 356, 358, 362, 364, 365, 368, 371], "maskedcategor": [3, 213, 346], "linear": [3, 13, 14, 15, 16, 20, 33, 85, 86, 89, 93, 105, 109, 115, 133, 145, 151, 165, 168, 169, 171, 173, 177, 188, 189, 190, 192, 193, 194, 195, 199, 201, 209, 211, 214, 215, 216, 217, 218, 224, 225, 226, 235, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 251, 254, 256, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 340, 348, 354, 364, 368, 371], "in_feat": 3, "out_feat": 3, "logit": [3, 38, 42, 198, 212, 213, 221, 242, 248, 269, 270, 348], "dist": [3, 10, 212, 213, 221, 358], "distribution_class": [3, 145, 236, 237, 238, 240, 248, 252, 254, 262, 263, 269, 270, 276, 280, 281, 282, 283, 348, 353, 355, 358, 365, 366, 371], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 42, 58, 85, 86, 89, 93, 94, 98, 99, 104, 107, 109, 110, 111, 115, 117, 177, 179, 204, 208, 233, 236, 237, 238, 239, 244, 246, 247, 249, 257, 291, 348, 353, 354, 355, 356, 359, 362, 365, 366, 372], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 123, 152, 177], "enviorn": [3, 103, 110, 111, 116, 117], "itself": [3, 33, 89, 93, 109, 115, 119, 125, 177, 278, 355, 357], "ey": 3, "report": [3, 85, 86, 98, 99, 361], "foremost": 3, "callback": [3, 89, 93, 109, 115, 366], "ad": [3, 4, 15, 22, 33, 37, 40, 43, 44, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 89, 93, 109, 115, 159, 169, 177, 216, 217, 247, 262, 264, 266, 271, 277, 280, 283, 291, 354, 356, 358, 365, 369, 372], "track": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 44, 75, 159, 175, 177, 246, 247, 318, 323, 354, 356, 357, 360, 366, 367, 369], "tensordictrecord": [3, 346], "render": [3, 8, 99, 116, 311, 313, 326, 353, 354, 355, 357, 361], "videorecord": [3, 311, 346, 355, 361, 362, 365], "csvlogger": [3, 311, 313, 346, 354, 361, 362, 365], "wandblogg": [3, 346, 361], "tensorboardlogg": [3, 340, 346, 361], "tag": [3, 7, 311, 313, 315, 318, 344, 361, 362, 365], "mp4": [3, 311, 313, 315, 362, 365], "video_format": [3, 311, 313, 315, 362, 365], "detect": [3, 62], "whc": 3, "cwh": 3, "exp": [3, 218, 261], "al": [3, 23, 92, 94, 138, 149, 188, 372], "pong": [3, 54, 107, 149, 372], "v5": [3, 92, 94, 107, 138, 149, 372], "cach": [3, 36, 38, 47, 54, 56, 57, 58, 60, 61, 62, 63, 69, 76, 89, 93, 109, 115, 125, 134, 137, 151, 169, 173, 186, 322, 368], "grow": 3, "until": [3, 7, 20, 166, 168, 177, 355, 356, 362, 365, 366], "dumpi": 3, "tediou": [3, 357], "expens": [3, 69, 76, 77, 311, 369], "workspac": [3, 89, 93, 109, 115], "pixelrendertransform": [3, 346, 365], "stream": [3, 60], "alik": [3, 311], "envcreat": [3, 15, 21, 109, 115, 311, 340, 341, 344, 346, 353, 354, 371, 372], "render_mod": [3, 311, 367], "rgb_arrai": [3, 311, 365, 366, 367], "uncom": [3, 361], "line": [3, 7, 33, 54, 89, 93, 109, 115, 177, 354, 361, 365, 366], "comment": [3, 350, 354, 371], "pixels_record": [3, 311], "close": [3, 15, 93, 106, 145, 262, 264, 277, 280, 311, 353, 354, 357, 364, 365, 367, 371], "mission": 3, "irrespect": [3, 251, 252], "dmcontrol": [3, 89, 93, 109, 115], "jumanji": [3, 89, 93, 98, 99, 109, 115], "special": [3, 346, 348, 353, 356, 372], "framework": [3, 4, 9, 21, 85, 86, 89, 93, 98, 99, 105, 109, 115, 202, 371, 372], "Its": [3, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 175, 177, 251, 297], "success": [3, 54, 55, 56, 57, 58, 59, 60, 61, 62, 129, 168, 243, 354, 360, 362, 367, 369, 371], "foundat": [3, 5, 110, 111, 355, 366], "inspir": [3, 367], "gone": [3, 4, 5, 246], "hard": [3, 7, 80, 87, 88, 109, 275, 354, 372], "prefer": [3, 13, 14, 16, 19, 22, 23, 37, 40, 43, 44, 152, 160, 280, 327, 348, 355, 365, 366, 369], "maintain": [3, 5, 9, 27, 367], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 354, 355, 356, 360, 365, 366, 367, 369, 372], "decor": [3, 8, 11, 122, 278, 293, 294, 295, 296, 371], "relev": [3, 42, 293, 294, 295, 296, 297, 320, 367], "gym_backend": [3, 122, 346], "env1": [3, 364], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 61, 122], "env2": [3, 364], "_env": [3, 6, 92, 372], "classic_control": 3, "pendulumenv": [3, 367], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 101, 119], "handi": [3, 89, 93, 109, 115, 361], "side": [3, 4, 372], "v0": [3, 13, 14, 89, 93, 95, 98, 99, 100, 101, 109, 115, 133, 169, 175, 340, 357, 359, 360, 361], "26": [3, 89, 93, 109, 115, 354, 367, 368, 369], "fun": [3, 11, 122, 355, 365, 366], "reveal": 4, "bug": [4, 371], "curv": 4, "exploit": [4, 358], "video": [4, 9, 313, 315, 326, 344, 346, 362, 365, 366], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 23, 145, 365, 366, 368], "coeffici": [4, 23, 27, 42, 145, 366], "bonu": [4, 262, 264, 277, 280], "beta": [4, 37, 43, 68, 69, 269, 276, 277, 353, 354, 369, 371], "reduc": [4, 6, 28, 80, 164, 354, 365], "downstream": [4, 353], "formul": [4, 365, 366], "ob": [4, 8, 22, 26, 29, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 71, 76, 77, 80, 89, 93, 109, 115, 123, 125, 134, 135, 137, 147, 161, 167, 183, 186, 192, 193, 194, 195, 214, 215, 249, 256, 263, 265, 270, 276, 281, 283, 285, 293, 294, 295, 296, 354, 364, 365, 367, 369, 371, 372], "rate": [4, 54, 175, 292, 354, 355, 365, 366], "gradient": [4, 33, 89, 93, 109, 115, 169, 177, 205, 213, 217, 221, 230, 231, 262, 264, 265, 269, 270, 276, 277, 278, 280, 281, 282, 283, 285, 292, 293, 294, 295, 296, 330, 353, 355, 365, 366, 367], "easier": [4, 348, 353], "local": [4, 7, 10, 15, 20, 33, 69, 76, 89, 93, 109, 115, 169, 177, 214, 215, 223, 232, 291, 318, 320, 361, 362, 365, 366], "optima": 4, "sens": [4, 36, 38, 41, 360, 367], "product": [4, 9, 202, 203, 206, 207, 342, 343], "sum": [4, 20, 32, 35, 80, 85, 86, 87, 88, 92, 94, 95, 98, 99, 106, 107, 112, 128, 159, 212, 213, 232, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 279, 280, 281, 282, 283, 285, 292, 299, 349, 353, 354, 355, 356, 359, 362, 365, 366, 367, 372], "stat": [4, 147, 334, 344, 354, 355], "w": [4, 71, 129, 131, 155, 167, 202, 247, 313, 354, 356, 369], "yield": [4, 15, 20, 33, 89, 93, 109, 115, 177, 278, 353, 359], "insight": 4, "auxiliari": [4, 359], "credit": 4, "futur": [4, 33, 36, 38, 41, 89, 93, 109, 115, 151, 169, 173, 177, 209, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 347, 371], "past": [4, 246, 354, 369], "spars": [4, 356], "intermedi": [4, 13, 14, 128, 204, 208, 242, 353, 368], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 353], "discov": 4, "score": [4, 42], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 371], "select": [4, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 103, 104, 110, 111, 116, 117, 123, 125, 126, 128, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 150, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 171, 172, 174, 175, 177, 178, 188, 204, 208, 241, 249, 329, 353, 357, 369], "fall": [4, 56], "explicit": [4, 11, 47, 71, 369], "mechan": [4, 33, 89, 93, 109, 115, 169, 177, 354, 359, 367], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 23, 89, 93, 109, 115, 206, 269, 276, 355, 366], "addition": 4, "timestep": [4, 42, 56, 156, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 365, 366], "realli": 4, "larg": [4, 28, 36, 38, 41, 134, 137, 171, 262, 264, 277, 280, 282, 354, 355, 365, 366, 369], "huge": [4, 215, 356], "std": [4, 147, 175, 218, 222, 239, 353, 372], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 352, 356, 357, 359, 360, 361, 362, 363, 364, 368, 369, 370], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 33, 36, 38, 41, 42, 80, 89, 93, 109, 115, 128, 147, 151, 165, 168, 169, 171, 176, 177, 188, 202, 203, 206, 207, 211, 216, 217, 239, 243, 244, 246, 247, 262, 263, 265, 266, 268, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 344, 353, 354, 356, 357, 358, 360, 365, 367, 372], "estim": [4, 54, 69, 76, 77, 138, 145, 192, 236, 237, 238, 262, 263, 264, 265, 266, 268, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "unseen": 4, "extrins": 4, "wrong": [4, 69, 76], "bonus": 4, "denser": 4, "prior": [4, 226, 273, 366], "freshli": 4, "drop": [4, 75, 77, 186], "meant": [4, 33, 105], "encourag": [4, 109, 353, 354, 369], "measur": [4, 65, 66, 82, 85, 86, 98, 99, 355, 360], "novelti": 4, "revisit": 4, "previous": [4, 355, 372], "diminish": 4, "decreas": [4, 23, 358], "ideal": [4, 147, 367], "down": [4, 13, 14, 15, 16, 356, 357], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 36, 38, 41, 354, 355, 356, 359, 360, 365, 366, 367, 371, 372], "distil": 4, "nois": [4, 176, 217, 234, 247, 281, 285, 326, 344, 353, 365], "exploratori": [4, 262, 264, 277, 280], "misalign": 4, "trade": [4, 358], "unavoid": 4, "divers": [4, 109, 115], "bootstrap": [4, 271, 294, 300, 301, 353, 356], "noisi": [4, 216, 217, 234, 348], "unstabl": [4, 205, 230, 231], "inher": 4, "stochast": [4, 145, 200, 217, 219, 226, 263, 267, 269, 270, 276, 279, 281, 283, 348, 355, 358, 366], "enemi": 4, "pomdp": [4, 369], "loos": [4, 348, 354, 355], "nonexist": 4, "architectur": [4, 196, 359, 365, 366], "sequenc": [4, 13, 14, 15, 16, 23, 26, 29, 31, 32, 37, 39, 40, 42, 45, 47, 60, 63, 64, 71, 72, 74, 79, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 120, 127, 128, 129, 130, 131, 134, 136, 137, 141, 143, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 164, 166, 167, 168, 175, 189, 190, 197, 199, 202, 206, 209, 212, 213, 214, 215, 221, 224, 228, 240, 253, 254, 267, 312, 313, 325, 326, 327, 329, 330, 348, 353, 355, 356, 364, 365, 366, 372], "lstm": [4, 165, 207, 208, 218], "rel": [4, 71, 165, 197, 229, 353, 354, 365, 366, 369], "tend": 4, "stabl": [4, 9, 10, 108], "compens": 4, "descent": [4, 217], "minimum": [4, 109, 115, 157, 200, 218, 229, 230, 231, 255, 258, 261, 263, 270, 278, 279, 283, 321, 353, 355, 362, 365, 366], "manual": [4, 17, 19, 20, 93, 353, 356, 369], "deviat": [4, 147, 175, 188, 200, 211, 216, 217, 222, 239, 280, 285, 353, 358, 366], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 76, 125, 202, 203, 206, 207, 357, 358, 359, 360, 361, 362], "stabil": [4, 142, 262, 264, 277, 280, 282], "stage": [4, 353, 367], "never": [4, 13, 14, 16, 360], "prevent": [4, 26, 29, 205, 230, 231, 262, 264, 277, 280, 282, 328, 369], "entir": [4, 60, 89, 93, 109, 115, 214, 355, 357, 367, 369], "submit": [4, 126, 347, 371], "system": [4, 5, 355, 365, 366, 367], "adequ": [4, 179, 355, 365, 366], "infeas": 4, "allevi": [4, 348], "prune": 4, "fire": [4, 33, 89, 93, 109, 115, 177], "illeg": 4, "move": [4, 33, 62, 89, 93, 109, 115, 133, 135, 151, 165, 168, 169, 171, 173, 175, 177, 186, 209, 251, 328, 353, 354, 356, 357, 371, 372], "chess": 4, "combin": [4, 168, 354, 361, 369], "grasp": 4, "top": [4, 80, 85, 86, 98, 99, 188, 211, 358], "wherein": 4, "cumul": [4, 159, 164, 188, 299, 355], "q": [4, 9, 89, 93, 109, 115, 192, 193, 194, 195, 198, 199, 201, 223, 224, 232, 238, 242, 249, 250, 263, 265, 266, 268, 269, 270, 271, 275, 276, 281, 283, 285, 291, 346, 353, 359], "flow": [4, 353, 355, 365, 366, 367, 369], "reparameter": [4, 197, 213, 221], "soft": [4, 275, 283, 284, 365], "critic": [4, 8, 236, 245, 262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 353, 359], "clip": [4, 42, 132, 157, 262, 264, 277, 280, 282, 285, 330, 355, 366, 367], "oppos": [4, 47], "incorrect": 4, "thought": [4, 89, 93, 109, 115], "bound": [4, 20, 25, 26, 33, 89, 93, 109, 115, 132, 146, 175, 177, 225, 226, 235, 241, 242, 247, 248, 249, 250, 251, 252, 255, 285, 348, 353, 354, 355, 365, 372], "region": 4, "squash": [4, 356, 371], "tanh": [4, 189, 190, 202, 203, 205, 206, 207, 209, 215, 229, 230, 231, 255, 355, 358, 365, 366, 367, 368, 371], "correct": [4, 36, 38, 41, 89, 93, 109, 115, 145, 333, 355, 356], "prob": [4, 212, 213, 221, 355, 366], "rememb": [4, 365], "remap": 4, "origin": [4, 8, 36, 38, 41, 42, 97, 135, 136, 145, 151, 169, 173, 177, 202, 248, 251, 252, 275, 278, 280, 353, 364, 367, 372], "histor": 5, "ceas": 5, "farama": [5, 58, 100, 101, 110, 111, 355, 367], "bc": [5, 371], "against": [5, 7, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 89, 93, 109, 115, 177, 179, 235, 241, 242, 248, 249, 250, 251, 252, 355, 365, 366], "best": [5, 9, 97, 204, 208, 365, 366, 369, 371], "gymwrapp": [5, 89, 93, 109, 115, 139, 160, 163, 174, 346, 355, 371], "feel": [5, 347, 362, 371], "free": [5, 7, 134, 137, 262, 273, 280, 350, 355, 362, 366, 371], "gladli": 5, "prepar": [6, 57, 355], "conda": [6, 7, 347], "cmake": 6, "activ": [6, 7, 9, 189, 190, 196, 200, 209, 214, 215, 264, 277, 280, 348, 367, 371], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 57, 347], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 95], "y": [6, 7, 40, 108, 201, 214, 233, 353, 366, 369], "facebookresearch": [6, 57, 95], "subdirectori": 6, "verbos": [6, 362], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 51, 89, 93, 109, 115, 153, 162, 177, 278, 365, 366, 371, 372], "command": [6, 7, 10, 355, 365, 366, 367, 372], "readm": [6, 7, 116], "md": [6, 7], "habitatenv": [6, 346], "_has_habitat": 6, "available_env": [6, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 103, 104, 108, 109, 112, 113, 114, 115, 116, 117, 372], "startswith": [6, 349, 353, 359], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 90, 278, 353], "env_nam": [6, 85, 87, 89, 92, 93, 95, 98, 100, 106, 109, 112, 115, 353, 355, 372], "llvmlite": 6, "config": [6, 7, 151, 173, 191, 196, 222, 334, 335, 336, 338, 341], "var": [6, 7, 33, 89, 93, 109, 115, 169, 177, 278, 283], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 241], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 33, 89, 93, 109, 115, 169, 177, 278, 283, 369], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 89, 354, 362], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 56], "stand": [7, 87, 88, 109, 115, 364, 367, 372], "joint": [7, 354], "dynam": [7, 57, 60, 62, 177, 269, 276, 355, 357, 367], "contact": [7, 39, 365], "engin": [7, 112, 367], "biomechan": 7, "graphic": 7, "anim": [7, 366], "area": 7, "demand": [7, 361, 372], "fast": [7, 9, 85, 86, 154, 186, 281, 353, 354, 355], "accur": [7, 56, 62, 354, 367, 369], "articul": 7, "acquir": [7, 355], "deepmind": [7, 8, 9, 60, 87, 88, 89, 93, 103, 104, 109, 115, 138, 355, 357], "whomev": 7, "licenc": 7, "incorpor": [7, 89, 93, 109, 115, 239, 243, 244, 247, 356, 358, 367], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 347], "tip": [7, 347], "glfw": [7, 353], "osmesa": 7, "egl": 7, "advic": [7, 60, 372], "sudo": [7, 347], "enabl": [7, 8, 56, 65, 66, 75, 82, 126, 204, 208, 246, 247, 311, 313, 326, 355, 357, 365, 366, 367, 369], "apt": [7, 366], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 65, 66, 67, 78, 79, 82, 354, 356], "workflow": [7, 236, 237, 238], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 24, 28, 35, 127, 199, 224, 241, 242, 249, 250, 266, 269, 270, 291], "mkdir": 7, "earlier": [7, 353, 355, 356, 365, 366, 369], "roboti": 7, "html": [7, 13, 14, 106, 108], "wget": 7, "mujoco210": 7, "tar": [7, 57], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 109, 115], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 36, 38, 47, 63], "bin": [7, 199, 242, 348], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 195, 248, 252, 353, 355, 369], "nvidia": [7, 97], "older": [7, 11], "hack": [7, 353], "adatp": 7, "script": [7, 57, 179, 340, 344, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "unnot": [7, 152], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 354, 369], "troubleshoot": 7, "gl": 7, "h": [7, 71, 129, 131, 155, 167, 202, 203, 204, 206, 207, 208, 211, 313, 354, 356, 369], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 36, 38, 41, 47, 54, 56, 57, 58, 60, 61, 62, 65, 318, 320, 350, 353, 358, 361, 365], "devel": 7, "ubuntu": [7, 97], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 354, 356, 364], "libstdc": 7, "glibcxx_3": 7, "29": [7, 352, 353, 354, 355, 367, 368, 370], "compil": [7, 33, 69, 76, 77, 89, 93, 109, 115, 177, 202, 203, 206, 207], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 174, 355, 364], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 29, 33, 89, 93, 109, 115, 146, 169, 177, 283, 372], "job": [7, 17, 18, 19, 21, 40, 369, 371], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 85, 86, 354, 355, 367, 368], "114": [7, 367], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 352, 367, 369, 370], "offscreenopenglcontext": 7, "opengl": [7, 365, 366], "global": [7, 33, 89, 93, 109, 110, 111, 115, 177, 223, 232, 248, 252, 291, 350, 353, 365, 366], "cuda_visible_devic": 7, "id": [7, 22, 42, 69, 71, 76, 77, 89, 92, 93, 109, 115, 247, 281, 316, 320, 360, 369], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 365], "onscreen": 7, "101": [7, 367], "correctli": [7, 33, 89, 93, 109, 115, 177], "lgl": 7, "libegl": 7, "x11": [7, 366], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 350], "n_training_step": 8, "datapoint": [8, 47, 369], "n_data_per_train": 8, "no_grad": [8, 33, 89, 93, 109, 115, 145, 177, 202, 203, 206, 207, 293, 294, 295, 296, 355, 356, 366], "loss_fn": [8, 356, 359, 360, 371], "zero_grad": [8, 33, 89, 93, 109, 115, 177, 350, 353, 355, 356, 359, 362, 365, 366, 367], "backpropag": [8, 85, 86, 98, 99, 109, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 359, 366, 367], "differenti": [8, 47, 85, 86, 145, 293, 294, 295, 296, 356, 358, 359, 365, 366, 367], "denomin": 8, "artifact": 8, "numer": [8, 40, 93, 175, 205, 230, 231, 235, 241, 242, 248, 249, 250, 251, 252, 328, 355, 369, 372], "misconcept": 8, "freed": 8, "appear": [8, 35, 54, 60, 69, 76, 77, 367, 369], "compuat": 8, "fix": [8, 27, 109, 165, 263, 279, 283, 354, 362, 367, 372], "retain_graph": [8, 85, 86], "discuss": [8, 9, 360, 365, 366], "inplac": [8, 33, 36, 38, 41, 89, 93, 109, 115, 177, 353], "onto": [8, 35, 36, 38, 41, 183, 235, 239, 241, 242, 247, 248, 249, 250, 251, 252, 356, 367], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 150, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 171, 172, 174, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 214, 215, 216, 218, 219, 220, 222, 223, 225, 226, 228, 232, 233, 239, 240, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 349, 367, 371], "submodul": [8, 33, 89, 93, 109, 115, 119, 165, 177, 204, 208, 259, 278], "param": [8, 33, 42, 89, 93, 105, 109, 115, 126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 177, 197, 199, 229, 240, 248, 251, 254, 278, 287, 290, 293, 294, 295, 296, 297, 353, 362, 365, 366, 367, 368, 371], "grad": [8, 33, 85, 86, 89, 93, 109, 115, 177, 353, 355], "whose": [8, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 48, 49, 89, 93, 109, 110, 111, 115, 133, 151, 165, 168, 169, 171, 173, 177, 218, 223, 251], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 37, 43, 68, 69, 129, 141, 152, 170, 272, 293, 295, 296, 349, 355, 365, 366, 367], "much": [8, 13, 14, 16, 37, 43, 60, 68, 69, 109, 115, 277, 280, 355, 357, 361, 365, 366, 367, 369, 372], "factor": [8, 23, 33, 156, 177, 205, 217, 230, 231, 239, 243, 244, 247, 263, 268, 271, 272, 274, 284, 299, 353, 354, 358, 362, 365, 366, 369, 372], "fit": [8, 11, 147, 165, 349, 350, 353], "bottlneck": 8, "brax": [8, 85, 86, 89, 93, 109, 115, 154, 357, 372], "jax": [8, 11, 85, 86, 98, 99], "improperli": 8, "underli": [8, 89, 93, 109, 115, 278, 357, 359, 361, 367], "tedeiou": 8, "priorit": [8, 37, 43, 68, 69, 265, 266, 268, 269, 270, 276, 281, 283, 285, 353, 354, 360], "amount": [8, 247, 354, 369], "costli": [8, 367], "constitut": [8, 354, 366, 367], "plain": [8, 357], "profil": 8, "frequent": [8, 369], "program": [8, 269, 276, 372], "functorch": [8, 10], "incl": 8, "suit": [8, 88, 355, 357, 371, 372], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 46, 48, 49, 76, 77, 126, 251, 254, 278, 365, 366, 367, 369, 371], "new_shap": 8, "permut": [8, 75, 149, 371, 372], "idea": [9, 281, 350, 356, 358, 365, 366], "introductori": 9, "intro": [9, 355, 356], "dai": [9, 371], "2022": [9, 10, 367, 371], "spin": [9, 87, 88, 372], "deep": [9, 129, 192, 193, 194, 195, 198, 247, 262, 275, 283, 284, 353, 365], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 358], "summari": [9, 147, 175, 353, 354, 355, 356], "reddit": 9, "reagent": 9, "orient": [9, 62, 372], "baselines3": 9, "tf": 9, "bandit": [9, 108], "tensorflow": [9, 212, 213], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 362], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 371], "grade": 9, "factori": [9, 45, 353], "cherri": 9, "jaxrl": 9, "mbrl": [9, 105, 348], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 367], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 355, 356, 365, 366], "notebook": [10, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372], "24": [10, 61, 77, 92, 106, 107, 246, 353, 354, 365, 367], "pip3": [10, 353, 355, 356, 365, 366], "url": [10, 95], "org": [10, 13, 14, 23, 37, 57, 58, 60, 62, 68, 69, 85, 86, 87, 88, 95, 98, 99, 103, 104, 106, 107, 108, 112, 116, 117, 129, 151, 171, 191, 192, 193, 194, 195, 196, 199, 200, 201, 206, 211, 212, 213, 217, 219, 220, 223, 225, 226, 232, 242, 247, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 280, 282, 283, 284, 293, 298, 306, 345, 363, 368], "whl": 10, "u": [10, 59, 202, 203, 206, 207, 367], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 278], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 71, 80, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 103, 104, 106, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 123, 125, 129, 136, 138, 144, 145, 147, 151, 152, 155, 160, 163, 164, 169, 171, 173, 174, 175, 177, 180, 184, 186, 187, 188, 198, 199, 204, 208, 210, 211, 214, 215, 216, 217, 218, 223, 224, 232, 235, 241, 242, 246, 248, 249, 250, 251, 252, 255, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 295, 296, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 338, 344, 354, 355], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 204, 208, 371], "longer": [11, 354, 362, 365, 366, 369], "x": [11, 22, 26, 33, 40, 42, 60, 77, 145, 167, 190, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 214, 215, 233, 241, 248, 249, 258, 261, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 330, 353, 365, 367, 369, 371], "23": [11, 61, 77, 352, 353, 354, 356, 359, 367, 370], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 61, 85, 86, 93, 98, 99, 207, 261, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 353, 354, 355, 356, 362, 365, 366, 367, 369, 372], "otherwis": [11, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 76, 77, 85, 86, 89, 92, 93, 94, 95, 98, 99, 102, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 129, 130, 136, 147, 164, 165, 166, 169, 175, 177, 202, 205, 206, 214, 215, 230, 231, 241, 249, 255, 263, 273, 278, 279, 283, 293, 295, 296, 326, 327, 350, 353, 354, 355, 356, 367, 372], "classmethod": [11, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 46, 48, 49, 89, 93, 109, 115, 171, 191, 222], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 29, 30, 31, 33, 36, 38, 40, 41, 61, 69, 76, 77, 89, 90, 91, 93, 103, 104, 106, 109, 110, 111, 115, 116, 117, 118, 145, 165, 169, 174, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 201, 209, 222, 248, 252, 283, 317, 318, 326, 335, 336, 342, 343, 344, 353, 354, 355, 369, 372], "setter": 11, "setter_dict": 11, "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 90, 109, 115, 353, 371], "device_typ": [13, 15, 16, 28, 31, 34, 35, 189, 190, 191, 192, 193, 194, 195, 201, 209, 214, 215, 216, 217, 222], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 354], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 354], "create_env_kwarg": [13, 14, 15, 16, 20, 90, 106, 109, 115, 353, 372], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 33, 156, 354, 369], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 278, 326, 353, 354, 355, 356, 358, 365, 371], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 181, 185, 248, 252, 326], "exploration_mod": [13, 15, 16, 17, 18, 19, 346, 348], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 23, 25, 27, 28, 33, 35, 37, 42, 43, 48, 60, 68, 69, 71, 89, 93, 109, 115, 125, 129, 133, 134, 137, 145, 147, 151, 156, 157, 158, 164, 165, 167, 168, 169, 171, 173, 175, 177, 197, 200, 202, 205, 206, 209, 212, 213, 216, 217, 225, 226, 229, 231, 239, 251, 255, 258, 260, 261, 262, 263, 264, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 328, 353, 354, 369, 372], "num_thread": [13, 14, 16, 36, 38, 41, 109, 115], "num_sub_thread": [13, 14, 16, 109, 115], "set_trunc": [13, 14, 15, 16, 89, 93, 109, 115], "datacollector": [13, 14, 15, 16, 33, 252, 280, 355, 360, 369], "recept": 13, "safe": [13, 14, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 69, 76, 235, 239, 241, 242, 247, 248, 249, 250, 251, 252, 254, 348, 371], "sota": [13, 14, 105, 142, 282, 321, 335, 353, 354, 355, 358, 359, 360, 365, 366, 371], "guard": [13, 14], "doc": [13, 14, 45, 95, 98, 99, 108, 112, 320, 354, 365, 366], "env_mak": [13, 14, 15, 20, 340, 372], "2000": [13, 14, 15, 33, 47, 96, 313, 355, 369], "50": [13, 14, 15, 20, 39, 42, 54, 62, 76, 77, 103, 104, 177, 352, 353, 354, 355, 356, 365, 366, 367, 368, 369, 370], "shutdown": [13, 14, 15, 16, 20, 126, 353, 371], "del": [13, 14, 15, 353, 354, 355, 364, 365, 371, 372], "int64": [13, 14, 15, 22, 28, 31, 36, 38, 39, 41, 42, 43, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 89, 93, 102, 103, 104, 108, 109, 110, 111, 113, 114, 115, 126, 138, 149, 156, 163, 199, 224, 241, 242, 247, 248, 249, 250, 348, 355, 356, 357, 358, 360, 361, 367, 369, 371, 372], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 128, 233, 241, 246, 249, 356], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 47], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 354], "divis": [13, 14, 15, 16, 17, 18, 19, 54, 60, 69, 76, 77, 366], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 54, 93, 125, 165, 174, 208, 356, 367, 368], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 332, 354], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 63, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 106, 107, 109, 112, 115, 133, 134, 137, 145, 151, 165, 168, 169, 171, 173, 175, 177, 251, 357, 359, 360, 361, 365, 372], "span": [13, 14, 15, 16, 17, 18, 19, 20, 60, 76], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 33, 177, 246, 354, 355, 365, 366], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 42, 320, 348, 365, 366, 367], "round": [13, 14, 15, 16, 17, 18, 19, 20, 54], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 33, 58, 89, 93, 109, 115, 177], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 174, 371], "ratio": [13, 14, 16, 42, 353, 355], "finish": [13, 14, 16, 20, 93, 156, 372], "rest": [13, 14, 16, 348, 355, 356, 365, 367, 371], "earli": [13, 14, 16, 33, 93, 163, 371], "plu": [13, 14, 16, 42, 109, 115, 367], "safeti": [13, 14, 16, 105, 109, 115], "harm": [13, 14, 16, 109, 115], "exclus": [13, 14, 50, 51, 54, 60, 69, 76, 77, 126, 139, 141, 202, 204, 206, 208, 212, 213, 241, 242, 249, 250, 284, 285, 293, 294, 295, 296, 297, 320, 344, 348], "add_truncated_kei": [13, 14, 15, 16, 89, 93, 109, 115, 169], "ordereddict": [13, 14, 15, 16, 20, 33, 89, 93, 109, 115, 169, 175, 177, 283, 354], "form": [13, 14, 16, 33, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 175, 177, 202, 204, 206, 208, 261, 262, 264, 277, 280, 330, 348, 358, 366], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 89, 93, 109, 115, 169], "integ": [13, 14, 15, 16, 22, 31, 32, 33, 35, 42, 49, 69, 76, 77, 78, 89, 93, 109, 115, 125, 138, 142, 147, 163, 189, 190, 209, 214, 215, 269, 276, 283, 369], "increment": [13, 14, 15, 16, 89, 93, 109, 115, 277], "env_fn": [13, 14, 15, 16, 90, 342, 343], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 76, 77, 194, 195, 353, 367], "out_se": [13, 14, 15, 16, 372], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 25, 26, 33, 34, 48, 54, 56, 57, 68, 69, 71, 76, 77, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 126, 133, 151, 153, 162, 165, 168, 169, 170, 172, 173, 176, 177, 188, 189, 190, 192, 193, 194, 195, 198, 201, 204, 205, 208, 209, 210, 211, 214, 215, 221, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 291, 292, 293, 294, 295, 296, 297, 311, 313, 317, 318, 320, 323, 330, 335, 336, 341, 342, 343, 349, 355, 366], "return_same_td": 15, "interruptor": 15, "cautious": [15, 280], "whole": [15, 26, 29, 33, 47, 89, 93, 109, 115, 169, 177, 248, 283, 321, 353, 355], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 358], "policy_state_dict": 15, "env_state_dict": 15, "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 330], "respect": [17, 18, 19, 33, 89, 93, 109, 115, 127, 133, 134, 137, 151, 152, 161, 165, 168, 169, 171, 173, 177, 202, 206, 214, 226, 251, 256, 262, 264, 277, 280, 282, 293, 295, 296, 325, 355, 356, 365, 366], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 347, 354, 355, 358, 361, 364, 369], "fashion": [17, 19, 20, 36, 38, 41, 77], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 54, 57, 58, 60, 61, 62, 89, 93, 109, 115, 141], "seen": [17, 18, 19, 20, 89, 93, 109, 115, 349, 353, 354, 356, 359, 365, 366, 369], "submitit_delai": [17, 21], "former": [17, 18, 19, 37, 40, 43, 44, 56, 89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 353], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 367], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 353], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 35, 54, 248, 252], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 342, 343, 353, 354], "coordin": 20, "init": [20, 33, 89, 93, 109, 115, 177, 320, 354, 355], "autodetect": 20, "similarli": [20, 33, 75, 79, 89, 93, 109, 115, 177, 214, 253, 254, 269, 276, 372], "num_cpu": 20, "num_gpu": 20, "1024": [20, 196, 354, 369], "equat": [20, 60, 93, 247, 261, 264, 284, 355, 357, 367], "exce": [20, 369], "indefinit": [20, 53], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 330, 353, 355, 356], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 359], "jump": [21, 357], "host": [21, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 191, 196, 222, 240], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 26, 89, 93, 109, 115, 178, 243, 244, 247, 248, 255, 262, 263, 265, 276, 280, 281, 283, 285, 346, 355, 365, 366, 367, 371, 372], "rollout_tensordict": 22, "nestedkei": [22, 47, 69, 76, 77, 89, 93, 109, 115, 120, 123, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 141, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 175, 177, 178, 186, 187, 239, 240, 243, 244, 246, 247, 252, 266, 291, 311, 313], "durat": [22, 366], "meta": [22, 36, 38, 41, 46, 56, 91, 95, 262, 264, 277, 280, 282, 350, 355, 365, 366, 369], "aren": [22, 164, 356], "deprec": [22, 33, 89, 93, 109, 115, 169, 177, 180, 184, 244, 262, 264, 266, 269, 270, 271, 276, 277, 280, 281, 282, 283, 291, 293, 294, 295, 296, 301, 372], "eventu": [22, 223, 356, 367], "supersed": 22, "recov": [22, 56, 58, 60, 61, 62, 76, 77, 239, 244, 247, 253, 269, 276, 364], "cat": [22, 256, 263, 265, 276, 281, 283, 285, 365, 369, 371], "arang": [22, 28, 35, 69, 199, 213, 241, 321, 348, 369], "obs_": 22, "trajectory_id": 22, "int32": [22, 44, 54, 60, 76, 98, 99, 183, 246, 369], "data_split": 22, "got": [22, 360], "init_kl_coef": 23, "horizon": [23, 103, 104, 116, 117, 188, 211, 355], "kl": [23, 27, 42, 145, 273, 277], "describ": [23, 46, 130, 168, 178, 229, 230, 266, 316, 349, 353, 355, 365, 366, 367, 372], "ziegler": 23, "et": [23, 188], "relax": [23, 311], "penalti": [23, 42, 277], "strai": [23, 42], "greater": [23, 54, 69, 76, 77, 204, 208, 353, 354, 371], "increas": [23, 166, 247, 365, 366], "pull": [23, 369], "toward": [23, 173], "aggress": 23, "kl_coef": [23, 27, 42], "arxiv": [23, 37, 57, 60, 62, 68, 69, 85, 86, 87, 88, 98, 99, 103, 104, 106, 107, 112, 116, 117, 129, 151, 171, 191, 192, 193, 194, 195, 196, 199, 200, 201, 206, 211, 217, 219, 220, 223, 225, 226, 232, 242, 247, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 280, 283, 284, 293, 298, 306, 368], "pdf": [23, 129, 191, 192, 193, 194, 195, 199, 242, 247, 271, 281, 284, 293, 298, 306], "1909": 23, "08593": 23, "lm": 23, "blob": 23, "master": [23, 365, 366], "lm_human_prefer": 23, "train_polici": 23, "kl_valu": 23, "coef": [23, 145], "newest": 23, "int8": [24, 89, 102, 110, 111, 127], "assert_is_in": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "clear_device_": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "op": [24, 25, 28, 31, 32, 34, 35, 46, 48, 49, 146, 174, 239, 243, 313, 332], "encod": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 43, 44, 46, 48, 49, 85, 86, 89, 92, 94, 95, 98, 99, 106, 107, 112, 136, 220, 221, 225, 261, 348, 354, 355, 356, 358, 367, 369], "ndarrai": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 93, 247, 255, 311, 365], "ignore_devic": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "np": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 93, 255, 311, 365, 367], "complient": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "singleton": [24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 189, 190, 209, 227, 228], "start_dim": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "end_dim": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "implements_for_spec": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "torch_funct": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "tensor_to_index": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "is_in": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 372], "project": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 136, 206, 235, 239, 241, 242, 247, 248, 249, 250, 251, 252, 320, 348, 371, 372], "rand": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 98, 99, 105, 123, 126, 134, 137, 153, 178, 188, 211, 248, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 283, 285, 367, 371, 372], "unbound": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 165, 183, 367, 369], "to_numpi": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 89, 93, 109, 115], "transformed_in": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 168, 169, 218, 229, 344], "check_spec_encod": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "to_one_hot": [24, 28, 31], "hot": [24, 28, 31, 32, 35, 85, 86, 92, 94, 95, 98, 99, 103, 104, 106, 107, 110, 111, 112, 116, 117, 123, 136, 199, 221, 224, 241, 242, 249, 250, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 356], "to_one_hot_spec": [24, 28, 31], "onehotdiscretetensorspec": [24, 28, 199, 224, 241, 249, 266, 268, 269, 270, 291, 346, 348, 358], "convert": [24, 28, 31, 32, 33, 35, 36, 38, 41, 47, 85, 86, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 133, 134, 137, 151, 165, 168, 169, 171, 173, 175, 177, 251, 261, 278, 353, 354, 355, 367, 369], "type_check": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "unflatten": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 126, 246], "upper": [25, 74, 146], "unnam": 26, "constraint": [26, 105, 355, 366], "pixels_spec": 26, "observation_vector_spec": 26, "composite_spec": 26, "observation_vector": [26, 130, 353], "td_project": 26, "absent": [26, 29, 56, 89, 93, 109, 115, 169], "is_empti": [26, 29, 367], "include_nest": [26, 29], "leaves_onli": [26, 29], "itemsview": 26, "children": [26, 29, 33, 89, 93, 109, 115, 177], "keysview": [26, 29], "reflect": [26, 29, 94, 110, 111, 174, 186, 278, 333, 354, 355, 356, 366], "lock_": [26, 29], "recurs": [26, 29, 33, 50, 51, 89, 93, 109, 115, 177, 278], "succeed": [26, 29], "selected_kei": [26, 29, 160, 353], "unlock_": [26, 29], "unlock": [26, 29, 36, 38, 41], "valuesview": 26, "multipli": [27, 202, 206, 263, 264, 270, 277, 279, 280, 281, 283, 328, 353, 365], "calcul": [27, 42, 156, 202, 262, 264, 268, 277, 280, 282], "onehottensorspec": [28, 85, 86, 92, 94, 95, 98, 99, 106, 107, 112], "action_valu": [28, 35, 198, 199, 224, 241, 242, 249, 250, 270, 278, 291, 348, 356, 358, 362], "argmax": [28, 89, 93, 109, 115, 199, 224, 242, 250, 358], "chosen_action_valu": [28, 35, 223, 224, 232, 249, 250, 291, 348, 356, 358], "outcom": [28, 35, 197, 229, 365], "drawn": [29, 30, 165, 243, 248, 252, 355, 365, 366], "lazystackedtensordict": [29, 54, 89, 93, 105, 109, 115, 364], "heterogen": [29, 30, 102, 110, 111, 179, 214, 215, 353, 354], "thrown": [30, 33, 89, 93, 109, 115, 177, 369], "nvec": [31, 32], "cardin": [31, 32, 199, 224, 241, 242, 250, 355], "ax": [31, 216, 217, 365], "m": [31, 33, 89, 93, 109, 115, 136, 177, 252, 348, 354, 367], "ts": [31, 32], "multionehotdiscretetensorspec": [31, 266, 269, 270, 291, 346], "use_regist": [32, 35], "to_categor": [32, 35], "to_categorical_spec": [32, 35], "multidiscretetensorspec": [32, 346], "gamma": [33, 156, 177, 211, 262, 263, 265, 266, 268, 270, 271, 272, 274, 276, 278, 280, 281, 282, 283, 285, 286, 287, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 340, 349, 353, 354, 355, 365, 366, 371], "sutton": [33, 349, 365, 366], "1988": 33, "tempor": [33, 204, 208, 211, 294, 295, 300, 301], "44": [33, 352, 354, 361, 367, 368, 370], "discount": [33, 60, 90, 156, 177, 263, 268, 271, 272, 274, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 349, 354, 355, 365, 366], "ahead": [33, 177, 372], "bias": [33, 202, 203, 206, 207, 258, 349, 353], "mitig": 33, "pleas": [33, 58, 89, 93, 109, 110, 111, 115, 126, 129, 166, 169, 177, 283, 347, 357, 359, 360, 361], "multisteptransform": [33, 346], "99": [33, 156, 175, 211, 274, 287, 292, 299, 340, 353, 354, 355, 359, 362, 365, 366, 367, 371], "add_modul": [33, 89, 93, 109, 115, 177], "child": [33, 89, 93, 109, 115, 177, 354], "fn": [33, 39, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 177, 218, 342, 343], "init_weight": [33, 89, 93, 109, 115, 177], "fill_": [33, 89, 93, 109, 115, 177, 354, 356, 372], "net": [33, 89, 93, 109, 115, 177, 193, 195, 198, 201, 215, 262, 263, 270, 276, 280, 281, 282, 283, 340, 354, 367, 368, 371], "in_featur": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 189, 190, 192, 193, 194, 195, 201, 209, 214, 215, 216, 217, 236, 251, 259, 266, 268, 358, 359, 371], "out_featur": [33, 89, 93, 105, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 188, 189, 190, 192, 193, 194, 195, 200, 201, 204, 208, 209, 211, 214, 215, 216, 217, 236, 241, 251, 259, 266, 268, 348, 353, 356, 358, 359, 362, 371], "bia": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 189, 190, 192, 193, 194, 195, 200, 201, 202, 203, 204, 206, 207, 208, 209, 215, 216, 217, 218, 243, 244, 247, 251, 258, 260, 261, 278, 283, 349, 353, 354, 355, 356, 366, 371], "requires_grad": [33, 85, 86, 89, 93, 109, 115, 145, 169, 177, 283], "bfloat16": [33, 89, 93, 109, 115, 177], "datatyp": [33, 89, 93, 109, 115, 177, 369], "member": [33, 89, 93, 109, 115, 177, 278, 313], "xdoctest": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 278, 283], "buf": [33, 89, 93, 109, 115, 177], "20l": [33, 89, 93, 109, 115, 177, 278], "1l": [33, 89, 93, 109, 115, 177, 278], "5l": [33, 89, 93, 109, 115, 177, 278], "__call__": [33, 39, 89, 93, 109, 115, 177, 252, 350], "doubl": [33, 48, 89, 93, 109, 115, 133, 134, 135, 137, 151, 165, 168, 169, 171, 173, 177, 251, 266, 271, 275, 281, 284, 291, 353, 354, 355, 356, 372], "eval": [33, 89, 93, 109, 115, 169, 175, 177, 353, 354, 355], "evalu": [33, 89, 93, 103, 104, 109, 115, 169, 177, 197, 212, 213, 221, 231, 281, 335, 336, 354, 355, 362], "dropout": [33, 89, 93, 109, 115, 169, 177, 202, 204, 206, 208, 209, 356], "batchnorm": [33, 89, 93, 109, 115, 169, 177], "disabl": [33, 89, 93, 109, 115, 169, 177, 205, 231, 311, 353, 365], "comparison": [33, 89, 93, 109, 115, 169, 177, 278, 353, 354], "similar": [33, 36, 38, 40, 41, 60, 89, 93, 109, 110, 111, 115, 133, 151, 165, 168, 169, 171, 172, 173, 175, 177, 236, 238, 248, 251, 252, 349, 353, 354, 355, 356, 358, 359, 360, 361, 367, 369, 372], "extra_repr": [33, 89, 93, 109, 115, 177], "nontermin": 33, "original_reward": 33, "newli": [33, 89, 93, 109, 115], "OR": 33, "get_buff": [33, 89, 93, 109, 115, 177], "get_submodul": [33, 89, 93, 109, 115, 177], "qualifi": [33, 89, 93, 109, 115, 177], "referenc": [33, 89, 93, 109, 115, 177], "attributeerror": [33, 89, 93, 109, 115, 177], "resolv": [33, 89, 93, 109, 115, 177], "someth": [33, 89, 93, 102, 109, 115, 177, 347, 354, 355, 367, 372], "get_extra_st": [33, 89, 93, 109, 115, 175, 177], "set_extra_st": [33, 89, 93, 109, 115, 175, 177], "picklabl": [33, 89, 93, 109, 115, 175, 177], "pickl": [33, 89, 93, 109, 115, 175, 177], "get_paramet": [33, 89, 93, 109, 115, 177], "net_b": [33, 89, 93, 109, 115, 177], "net_c": [33, 89, 93, 109, 115, 177], "conv": [33, 89, 93, 109, 115, 177, 189, 190, 354], "conv2d": [33, 89, 93, 109, 115, 177, 190, 192, 193, 201, 214, 371], "kernel_s": [33, 89, 93, 109, 115, 177, 189, 190, 192, 193, 201, 214, 219, 354, 371], "stride": [33, 89, 93, 109, 115, 177, 189, 190, 192, 193, 201, 214, 354, 365, 371], "diagram": [33, 89, 93, 109, 115, 177], "degre": [33, 89, 93, 109, 115, 177], "named_modul": [33, 89, 93, 109, 115, 177], "o": [33, 89, 93, 109, 115, 177, 207], "half": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 353], "ipu": [33, 89, 93, 109, 115, 177], "strict": [33, 36, 38, 41, 89, 93, 109, 115, 169, 177, 283], "descend": [33, 89, 93, 109, 115, 169, 177, 283], "get_swap_module_params_on_convers": [33, 89, 93, 109, 115, 169, 177, 283], "persist": [33, 89, 93, 109, 115, 169, 177, 186, 283], "enforc": [33, 75, 89, 93, 109, 115, 169, 177, 253, 283, 367], "preserv": [33, 89, 93, 109, 115, 169, 177, 283], "missing_kei": [33, 89, 93, 109, 115, 169, 177, 283], "unexpected_kei": [33, 89, 93, 109, 115, 169, 177, 283], "namedtupl": [33, 89, 93, 109, 115, 169, 177, 283], "duplic": [33, 75, 89, 93, 109, 115, 177, 266, 271, 278, 291], "l": [33, 89, 93, 109, 115, 177, 202, 206, 292, 355, 367], "idx": [33, 89, 93, 109, 115, 177], "named_buff": [33, 89, 93, 109, 115, 177], "remove_dupl": [33, 89, 93, 109, 115, 177, 278], "prepend": [33, 89, 93, 109, 115, 177, 278], "running_var": [33, 89, 93, 109, 115, 177], "named_children": [33, 89, 93, 109, 115, 177], "conv4": [33, 89, 93, 109, 115, 177], "conv5": [33, 89, 93, 109, 115, 177], "memo": [33, 89, 93, 109, 115, 177], "named_paramet": [33, 89, 93, 109, 115, 145, 177, 278], "register_backward_hook": [33, 89, 93, 109, 115, 177], "removablehandl": [33, 89, 93, 109, 115, 177], "favor": [33, 89, 93, 109, 115, 177, 355], "register_full_backward_hook": [33, 89, 93, 109, 115, 177], "register_buff": [33, 89, 93, 109, 115, 177], "running_mean": [33, 89, 93, 109, 115, 177], "alongsid": [33, 89, 93, 109, 115, 177, 361], "num_featur": [33, 89, 93, 109, 115, 177], "register_forward_hook": [33, 89, 93, 109, 115, 177, 199, 224], "with_kwarg": [33, 89, 93, 109, 115, 177], "always_cal": [33, 89, 93, 109, 115, 177], "register_module_forward_hook": [33, 89, 93, 109, 115, 177], "regardless": [33, 89, 93, 109, 115, 177, 264, 277, 280], "register_forward_pre_hook": [33, 89, 93, 109, 115, 177], "invok": [33, 89, 93, 109, 115, 177], "And": [33, 89, 93, 109, 115, 177, 359], "forward_pr": [33, 89, 93, 109, 115, 177], "register_module_forward_pre_hook": [33, 89, 93, 109, 115, 177], "grad_input": [33, 89, 93, 109, 115, 177], "grad_output": [33, 89, 93, 109, 115, 177], "subsequ": [33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 125, 177, 356, 365], "technic": [33, 89, 93, 109, 115, 177, 354, 356, 358], "caller": [33, 89, 93, 109, 115, 177], "register_module_full_backward_hook": [33, 89, 93, 109, 115, 177], "register_full_backward_pre_hook": [33, 89, 93, 109, 115, 177], "backward_pr": [33, 89, 93, 109, 115, 177], "register_module_full_backward_pre_hook": [33, 89, 93, 109, 115, 177], "register_load_state_dict_post_hook": [33, 89, 93, 109, 115, 177], "incompatible_kei": [33, 89, 93, 109, 115, 177], "register_modul": [33, 89, 93, 109, 115, 177, 350], "alia": [33, 89, 93, 109, 115, 177], "register_paramet": [33, 89, 93, 109, 115, 177], "register_state_dict_pre_hook": [33, 89, 93, 109, 115, 177], "keep_var": [33, 36, 38, 41, 89, 93, 109, 115, 169, 177, 283], "requires_grad_": [33, 89, 93, 109, 115, 177], "autograd": [33, 89, 93, 109, 115, 169, 177, 283], "freez": [33, 89, 93, 109, 115, 177], "finetun": [33, 89, 93, 109, 115, 177], "gan": [33, 89, 93, 109, 115, 177], "share_memori": [33, 89, 90, 93, 109, 115, 177, 353], "share_memory_": [33, 89, 93, 109, 115, 177, 371], "destin": [33, 36, 38, 41, 89, 93, 109, 115, 128, 134, 135, 137, 169, 171, 175, 177, 186, 283, 313], "averag": [33, 89, 93, 109, 115, 169, 175, 177, 247, 272, 273, 283, 328, 353, 355], "shallow": [33, 89, 93, 109, 115, 169, 177, 283, 356], "detach": [33, 89, 93, 109, 115, 169, 177, 278, 283, 293, 294, 295, 296, 353], "non_block": [33, 36, 38, 41, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 356], "memory_format": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "channels_last": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "unchang": [33, 89, 93, 109, 115, 133, 136, 151, 165, 168, 169, 171, 173, 177, 243, 251, 327, 353, 369], "tri": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 361], "pin": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "4d": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "ignore_w": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "1913": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "3420": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "5113": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "2325": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "torch_doctest_cuda1": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "gpu1": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "1914": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "5112": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 367], "2324": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "float16": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 203, 207, 251], "cdoubl": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "3741": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "j": [33, 37, 68, 69, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 350, 359], "2382": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "5593": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251, 367], "4443": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "complex128": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "6122": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "1150": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 251], "to_empti": [33, 89, 93, 109, 115, 177], "dst_type": [33, 89, 93, 109, 115, 177], "xpu": [33, 89, 93, 109, 115, 177], "set_to_non": [33, 89, 93, 109, 115, 177], "unidimension": 35, "keepdim": 35, "user_regist": 35, "priori": 35, "uniqu": [35, 76, 77, 103, 104, 129, 138, 164, 165, 166, 246, 320, 360, 369], "discretebox": [35, 89, 93, 109, 115, 358, 365, 366, 372], "chosen_data": [36, 63], "rewarddata": [36, 63, 346], "rejected_data": [36, 63], "from_dataset": [36, 38, 63], "dataset_nam": [36, 38, 42, 47, 63, 108], "max_length": [36, 38, 39, 45, 47, 63, 362], "550": [36, 38, 42, 47, 63, 76, 77, 367], "root_dir": [36, 38, 47, 63], "from_disk": [36, 38, 47, 63], "carperai": [36, 38, 42, 47], "openai_summarize_comparison": [36, 38, 47], "sequen": [36, 38], "load_from_disk": [36, 38, 47, 63], "load_dataset": [36, 38, 47, 63], "attention_mask": [36, 38, 39, 41, 42, 45, 47, 63], "92534": 36, "input_id": [36, 38, 39, 41, 42, 45, 47, 63], "end_scor": [36, 41, 42, 63], "sub_data": [36, 38], "from_tensordict": [36, 38, 41], "non_tensordict": [36, 38, 41], "_nodefault": [36, 38, 41], "getattr": [36, 38, 41], "tensorclass": [36, 38, 41, 63, 65, 66, 82], "load_memmap": [36, 38, 41], "fetch": [36, 38, 41, 85, 86, 87, 88, 145, 358, 368, 369, 372], "fromkei": [36, 38, 41], "memmap": [36, 38, 41, 65, 109, 115, 175, 313, 315, 327, 369], "saved_td": [36, 38, 41], "td_load": [36, 38, 41], "fake": [36, 38, 41, 89, 93, 109, 115, 353, 354], "tempfil": [36, 37, 38, 40, 41, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 340, 353, 354, 365, 369], "temporarydirectori": [36, 37, 38, 40, 41, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 353, 354, 365, 369], "_subclass": [36, 38, 41], "faketensormod": [36, 38, 41], "faketensor": [36, 38, 41], "from_flatten": [36, 38, 41], "attemptedli": [36, 38, 41], "copy_exist": [36, 38, 41], "return_earli": [36, 38, 41], "share_non_tensor": [36, 38, 41], "mimic": [36, 38, 41, 89, 93, 109, 115], "cross": [36, 38, 41, 188], "anymor": [36, 38, 41, 169, 251], "tensordictfutur": [36, 38, 41], "deepli": [36, 38, 41], "insid": [36, 38, 41, 109, 372], "memmap_": [36, 38, 41, 175], "memmap_lik": [36, 38, 41], "contentless": [36, 38, 41], "1_000_000": [36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 76, 353, 356, 365], "alloc": [36, 38, 41, 66, 212, 213, 353], "setattr": [36, 38, 41], "tent": [36, 38, 41, 47], "to_tensordict": [36, 38, 41, 356], "unbind": [36, 37, 38, 40, 41, 43, 44, 204, 208], "alpha": [37, 43, 68, 69, 189, 190, 192, 193, 194, 195, 201, 214, 263, 270, 279, 281, 283, 353, 369, 371], "ep": [37, 43, 68, 69, 175, 247, 264, 284, 328, 353, 354, 356, 359, 362], "1e": [37, 43, 68, 69, 175, 197, 200, 218, 229, 353, 354, 355, 366], "08": [37, 43, 68, 69, 353, 354, 355, 366, 367], "pin_memori": [37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 150, 353, 371], "schaul": [37, 68, 69], "quan": [37, 68, 69], "antonogl": [37, 68, 69], "silver": [37, 68, 69], "2015": [37, 68, 69], "ab": [37, 57, 60, 62, 68, 69, 85, 86, 87, 88, 98, 99, 103, 104, 106, 107, 112, 116, 117, 128, 151, 171, 175, 191, 196, 200, 201, 206, 211, 217, 219, 220, 223, 225, 226, 232, 262, 263, 266, 267, 268, 269, 272, 273, 274, 275, 276, 279, 280, 283, 368], "1511": [37, 68, 69, 201], "05952": [37, 68, 69], "expon": [37, 43, 68, 69], "\u03b1": [37, 43, 68, 69], "delta": [37, 43, 68, 69, 202, 206, 229, 248, 252, 346, 349, 365], "null": [37, 43, 68, 69, 127], "max_siz": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 78, 80, 82, 355, 360], "1_000": [37, 40, 43, 44, 365, 369], "merg": [37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 367], "mini": [37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 366], "decid": [37, 40, 43, 44, 365, 371], "meth": [37, 40, 43, 44, 278, 367], "incompat": [37, 40, 43, 44, 282, 369], "drop_last": [37, 40, 43, 44, 75, 77], "notion": [37, 40, 43, 44], "caution": [37, 40, 43, 44, 75, 179, 372], "codebas": [37, 40, 43, 44, 367], "approach": [37, 40, 43, 44, 147, 353, 355, 359, 360, 365, 372], "return_info": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 369], "tensordictprioritizedreplaybuff": [37, 346, 371], "simplifi": [37, 358, 367, 369], "_weight": [37, 43, 68, 69, 369, 371], "arrai": [37, 42, 68, 89, 93, 109, 115, 138, 202, 203, 206, 207, 353, 365, 369], "update_prior": [37, 68, 69, 327, 350, 354, 369, 371], "36278465": 37, "invert": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 260, 355], "tqdm": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 330, 353, 355, 356, 365, 366, 367], "randomsampl": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 353, 365], "td_error": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 265, 266, 268, 269, 270, 271, 276, 278, 281, 283, 285, 291, 353, 359, 369, 371], "update_tensordict_prior": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 353, 369, 371], "tmpdir": [37, 40, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 353, 354, 365], "rb_load": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "cursor": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "insert_transform": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 124, 169], "insert": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 71, 72, 80, 81, 83, 84, 124, 133, 169, 170], "set_sampl": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "set_storag": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "set_writ": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "prompt_rindex": [38, 39, 42], "promptdatatldr": 38, "116722": 38, "prompt": [39, 42], "return_tensordict": [39, 45], "recip": [39, 89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258], "text": [39, 42, 45, 58, 202, 203, 206, 207, 247, 355], "tensodict": [39, 45], "orign": [39, 45], "valid_sampl": 39, "eough": 39, "toknen": 39, "meet": 39, "criterion": 39, "autotoken": [39, 45, 47], "from_pretrain": [39, 42, 45], "gpt2": [39, 42, 45, 47, 191, 196, 222], "pad_token": [39, 45], "eos_token": 39, "enough": [39, 369], "inde": [39, 136, 355, 367], "roundrobinwrit": [40, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62], "Not": [40, 85, 86, 98], "depth": [40, 89, 93, 105, 109, 112, 115, 188, 189, 190, 192, 193, 194, 195, 200, 201, 209, 211, 214, 215, 219, 220, 241, 348, 354, 357, 359, 360, 364, 365, 366, 369], "_pytre": [40, 369], "tree_map": [40, 369], "did": [40, 174, 299, 354, 355, 360, 369, 372], "assert0": [40, 369], "ref_model": 42, "reward_model": [42, 257], "max_new_token": 42, "score_clip": 42, "kl_schedul": 42, "klcontrollerbas": 42, "num_step": 42, "causal": 42, "sentenc": 42, "frozen": [42, 145], "gpt2rewardmodel": 42, "get_dataload": [42, 346], "promptdata": [42, 346], "gpt2lmheadmodel": 42, "dl": 42, "block_siz": [42, 63], "tensorclass_typ": [42, 63], "openai_summarize_tldr": 42, "config_class": 42, "model_path": 42, "rollout_from_model": 42, "rollout_from_data": 42, "600": [42, 361, 367, 369], "reward_kl": [42, 145], "reward_raw": 42, "sample_log_prob": [42, 236, 237, 238, 248, 252, 254, 280, 355, 358, 366, 371], "create_rollout_td": 42, "log_prob": [42, 197, 212, 213, 221, 231, 252], "log_ratio": 42, "replic": 42, "rindex": 42, "eo": 42, "term": [42, 145, 206, 207, 216, 217, 261, 262, 270, 332, 354, 355, 357, 358, 366], "generation_config": 42, "generationconfig": 42, "ti": [42, 302, 303, 304, 305, 307, 308, 309, 310, 354], "log_probs_gen": 42, "logprobs_of_label": 42, "priority_kei": [43, 44, 55, 68, 266, 269, 270, 271, 276, 278, 281, 283, 285, 291, 369, 371], "reduct": [43, 68, 69, 80, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285], "prioritizedreplaybuff": [43, 346, 371], "min": [43, 68, 69, 80, 229, 230, 231, 240, 247, 263, 264, 270, 279, 281, 283, 354, 355, 365, 366], "median": [43, 68, 69, 80, 98, 99, 248, 252], "include_info": [43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62], "kw": [44, 55, 72, 81], "huggingfac": [45, 57, 62, 245], "co": [45, 138, 367], "pad_trunc": 45, "am": 45, "me": 45, "reassur": 45, "ok": 45, "tokenizer_fn": 47, "tensordicttoken": [47, 346], "pre_tokenization_hook": 47, "valid_s": 47, "tokenizer_class": 47, "tokenizer_model_nam": 47, "tokein": 47, "elementwis": 47, "vocabulari": 47, "loader": [47, 355], "185068": 47, "dataset_to_tensordict": 47, "data_dir": 47, "batch_dim": [47, 344], "valid_mask_kei": 47, "conver": 47, "batch_dimens": 47, "filder": 47, "from_dict": 47, "data_memmap": 47, "recurse_through_entri": 51, "recurse_through_stack": 51, "consolid": 51, "dataset_id": [54, 56, 57, 58, 60, 61, 62], "num_proc": 54, "slice_len": [54, 60, 69, 76, 77, 313], "strict_len": 54, "arari": 54, "2600": 54, "million": [54, 356], "consequ": [54, 206, 360], "50x10": 54, "available_dataset": [54, 55, 56, 57, 58, 59, 60, 61, 62, 76, 77], "ataridqn": 54, "immutabledatasetwrit": [54, 55, 56, 57, 58, 59, 60, 61, 62], "shorter": [54, 60, 69, 76, 77], "Be": [54, 60, 69, 76, 77], "game_nam": 54, "krull": 54, "1d": [54, 69, 76, 77, 80], "cheapli": 54, "nontensordata": [54, 60, 311], "invalid_rang": 54, "999998": 54, "999999": 54, "add_count": 54, "84": [54, 155, 353, 354, 356, 367, 368], "valueestim": [54, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 291, 346, 349, 353, 365, 366], "convolut": [54, 189, 190, 192, 193, 214, 227, 358], "2657628": 54, "2657629": 54, "2657630": 54, "2657631": 54, "2657632": 54, "2657633": 54, "2657634": 54, "2657635": 54, "2657636": 54, "2657637": 54, "2657638": 54, "2657639": 54, "2657640": 54, "2657641": 54, "2657642": 54, "2657643": 54, "2657644": 54, "2657645": 54, "2657646": 54, "2657647": 54, "2657648": 54, "2657649": 54, "2657650": 54, "2657651": 54, "2657652": 54, "2657653": 54, "2657654": 54, "2657655": 54, "2657656": 54, "2657657": 54, "2657658": 54, "2657659": 54, "2657660": 54, "2657661": 54, "2657662": 54, "2657663": 54, "2657664": 54, "2657665": 54, "2657666": 54, "2657667": 54, "2657668": 54, "2657669": 54, "2657670": 54, "2657671": 54, "2657672": 54, "2657673": 54, "2657674": 54, "2657675": 54, "2657676": 54, "2657677": 54, "2657678": 54, "2657679": 54, "2657680": 54, "2657681": 54, "2657682": 54, "2657683": 54, "2657684": 54, "2657685": 54, "2657686": 54, "2657687": 54, "2657688": 54, "2657689": 54, "2657690": 54, "2657691": 54, "1995687": 54, "1995688": 54, "1995689": 54, "1995690": 54, "1995691": 54, "1995692": 54, "1995693": 54, "1995694": 54, "1995695": 54, "1995696": 54, "1995697": 54, "1995698": 54, "1995699": 54, "1995700": 54, "1995701": 54, "1995702": 54, "1995703": 54, "1995704": 54, "1995705": 54, "1995706": 54, "1995707": 54, "1995708": 54, "1995709": 54, "1995710": 54, "1995711": 54, "1995712": 54, "1995713": 54, "1995714": 54, "1995715": 54, "1995716": 54, "1995717": 54, "1995718": 54, "1995719": 54, "1995720": 54, "1995721": 54, "1995722": 54, "1995723": 54, "1995724": 54, "1995725": 54, "1995726": 54, "1995727": 54, "1995728": 54, "1995729": 54, "1995730": 54, "1995731": 54, "1995732": 54, "1995733": 54, "1995734": 54, "1995735": 54, "1995736": 54, "1995737": 54, "1995738": 54, "1995739": 54, "1995740": 54, "1995741": 54, "1995742": 54, "1995743": 54, "1995744": 54, "1995745": 54, "1995746": 54, "1995747": 54, "1995748": 54, "1995749": 54, "1995750": 54, "left": [54, 56, 60, 76, 126, 133, 134, 135, 139, 145, 151, 153, 154, 160, 163, 166, 168, 171, 173, 177, 214, 243, 354, 355, 360, 361], "untouch": [54, 60, 126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 177], "_max_run": 54, "dataset_asterix": 54, "asterix": 54, "dataset_pong": 54, "sample_from_al": [54, 71, 74], "buffer_id": [54, 74, 79], "hidden": [54, 109, 115, 128, 192, 200, 202, 203, 204, 206, 207, 208, 219, 220, 225, 226, 236, 237, 238, 240, 251, 254, 264, 277, 280, 348, 356, 364, 371], "exclusive_field": [54, 364], "stack_dim": [54, 364], "data_path": [54, 55, 56, 57, 58, 59, 60, 61, 62], "data_path_root": [54, 55, 56, 57, 58, 59, 60, 61, 62], "delet": [54, 55, 56, 57, 58, 59, 60, 61, 62, 130, 320], "chunksiz": [54, 55, 56, 57, 58, 59, 60, 61, 62], "pool": [54, 55, 56, 57, 58, 59, 60, 61, 62, 166], "max_tasks_per_child": [54, 55, 56, 57, 58, 59, 60, 61, 62], "worker_thread": [54, 55, 56, 57, 58, 59, 60, 61, 62], "index_with_gener": [54, 55, 56, 57, 58, 59, 60, 61, 62], "pbar": [54, 55, 56, 57, 58, 59, 60, 61, 62, 353, 355, 356, 365, 366, 367], "dest": [54, 55, 56, 57, 58, 59, 60, 61, 62, 151, 171, 173, 251], "num_fram": [54, 55, 56, 57, 58, 59, 60, 61, 62], "unitari": [54, 55, 56, 57, 58, 59, 60, 61, 62, 367], "minariexperiencereplai": [54, 55, 56, 57, 59, 60, 61, 62], "1000000": [54, 55, 56, 57, 58, 59, 60, 61, 62], "distance_from_origin": [54, 55, 56, 57, 58, 59, 60, 61, 62], "forward_reward": [54, 55, 56, 57, 58, 59, 60, 61, 62], "qpo": [54, 55, 56, 57, 58, 59, 60, 61, 62], "qvel": [54, 55, 56, 57, 58, 59, 60, 61, 62], "reward_ctrl": [54, 55, 56, 57, 58, 59, 60, 61, 62, 109], "reward_forward": [54, 55, 56, 57, 58, 59, 60, 61, 62], "reward_surv": [54, 55, 56, 57, 58, 59, 60, 61, 62], "x_posit": [54, 55, 56, 57, 58, 59, 60, 61, 62, 109], "x_veloc": [54, 55, 56, 57, 58, 59, 60, 61, 62, 109], "y_posit": [54, 55, 56, 57, 58, 59, 60, 61, 62], "y_veloc": [54, 55, 56, 57, 58, 59, 60, 61, 62], "achieved_go": [54, 55, 56, 57, 58, 59, 60, 61, 62], "desired_go": [54, 55, 56, 57, 58, 59, 60, 61, 62], "27": [54, 55, 56, 57, 58, 59, 60, 61, 62, 85, 86, 109, 115, 352, 353, 354, 355, 360, 365, 367, 370, 372], "_collate_id": [54, 55, 56, 57, 58, 59, 60, 61, 62], "0x120e21dc0": [54, 55, 56, 57, 58, 59, 60, 61, 62], "cattensor": [54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 353, 364, 367, 372], "cat_tensor": [54, 55, 56, 57, 58, 59, 60, 61, 62], "cat_next_tensor": [54, 55, 56, 57, 58, 59, 60, 61, 62], "new_storag": [54, 55, 56, 57, 58, 59, 60, 61, 62], "31": [54, 55, 56, 57, 58, 59, 60, 61, 62, 98, 99, 353, 354, 365, 367, 369], "full_storag": [54, 55, 56, 57, 58, 59, 60, 61, 62], "0x168406fc0": [54, 55, 56, 57, 58, 59, 60, 61, 62], "from_env": 56, "use_truncated_as_don": 56, "direct_download": 56, "terminate_on_end": 56, "env_kwarg": [56, 61, 62, 126, 342, 343, 353], "reconstruct": [56, 76, 77, 273, 353, 372], "get_dataset": 56, "qlearning_dataset": 56, "fewer": [56, 76], "possess": 56, "unexpectedli": 56, "traj_split": 56, "observationnorm": [56, 175, 344, 353, 354, 355, 356, 371], "maze2d": 56, "umaz": 56, "loc": [56, 89, 93, 109, 115, 145, 147, 158, 205, 218, 230, 231, 236, 237, 238, 248, 252, 254, 262, 263, 276, 280, 281, 282, 283, 334, 344, 348, 353, 354, 355, 356, 358, 366, 371], "gen": 57, "dgrl": 57, "accompani": [57, 126, 163], "gap": 57, "2312": 57, "05742": 57, "gen_dgrl": 57, "procgen": 57, "bigfish": 57, "bossfight": 57, "categori": [57, 348, 350], "1m_e": 57, "1m_": 57, "comma": 57, "npy": 57, "extract": [57, 125, 245, 353, 355, 371], "mmap": [57, 61, 62], "minut": [57, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "internet": [57, 62], "connect": [57, 62], "minari": 58, "websit": [58, 60], "currenrtli": 58, "minari_data": 58, "door": 58, "torchrl_logg": [58, 362], "28": [58, 214, 354, 365, 366, 367], "door_body_po": 58, "dua": 59, "graff": 59, "2017": 59, "uci": 59, "archiv": 59, "ic": 59, "edu": 59, "ml": 59, "sklearn": [59, 108], "adult_num": [59, 108], "adult_onehot": [59, 108], "mushroom_num": [59, 108], "mushroom_onehot": [59, 108], "covertyp": [59, 108], "shuttl": [59, 108], "magic": [59, 108, 357], "shuffl": [60, 75, 77, 366], "embodi": [60, 368], "22": [60, 76, 77, 174, 352, 353, 354, 362, 367, 368, 370], "institut": 60, "demonstr": [60, 355, 360, 365, 366, 367, 369, 372], "527": [60, 367], "skill": 60, "160266": 60, "googl": [60, 61, 85, 86, 103, 104, 355, 356, 365, 366], "open_x_embodi": 60, "2310": [60, 112], "08864": 60, "language_instruct": 60, "get_non_tensor": 60, "neither": [60, 367], "nor": 60, "insuffici": 60, "chosen": [60, 116, 117, 164, 165, 223, 224, 232, 250, 313, 348, 361], "openx": 60, "__will": 60, "change__": 60, "randomli": [60, 75, 146, 147, 165, 243, 248, 252, 358, 365, 366, 367, 369], "crop": [60, 131, 152, 313], "modal": [60, 353], "cmu_stretch": [60, 313], "is_init": [60, 62, 128, 144, 204, 208, 246, 247, 259, 356], "language_embed": 60, "512": [60, 201, 354, 367], "lift": 60, "green": [60, 365], "garbag": 60, "lid": 60, "roboset": 61, "h5": [61, 62], "roboh": [61, 112], "concis": [61, 359], "75": [61, 354, 356, 367], "totensor": 62, "image_s": 62, "v": [62, 175, 202, 203, 206, 207, 236, 269, 276, 283, 348, 353, 354], "npz": 62, "2206": [62, 106, 107], "04779": [62, 263, 268], "vd4rl": 62, "squar": [62, 131, 205, 230, 231, 313], "rectangular": [62, 189, 190], "walker_walk": 62, "64px": 62, "height": [62, 131, 155], "veloc": [62, 87, 88, 89, 93, 109, 115, 129, 365, 366, 367, 372], "infinit": [63, 103, 104, 116, 117, 360, 369], "three": [63, 348, 350, 355, 357, 358, 365, 366, 367, 369, 372], "block": [63, 64, 84, 348, 356, 365], "pairwisedataset": [63, 346], "256": [63, 103, 104, 196, 352, 354, 355, 365, 366, 367, 369, 370], "immut": [64, 89, 93, 109, 115, 154, 169], "piec": [64, 72, 81, 83, 84, 353, 354, 355, 361, 365, 366, 367, 369], "scratch_dir": [65, 353, 369], "sent": [65, 66, 82, 175], "mistak": [65, 66, 82], "myclass": [65, 66, 82], "foo": [65, 66, 82, 240, 369, 372], "bar": [65, 66, 82, 240, 323, 324, 326, 330, 350, 354], "attach": [65, 66, 67, 78, 79, 82, 354], "entiti": [65, 66, 67, 78, 79, 82], "zero_": [66, 82, 183], "max_capac": [68, 69, 353, 369], "data_0": 68, "data_1": 68, "smoothen": 68, "tdrb": 68, "pack": [68, 202, 206, 355, 357, 372], "end_kei": [69, 76, 77], "cache_valu": [69, 76, 77], "readili": [69, 76, 77], "conjunct": [69, 76, 77, 354], "Will": [69, 76, 106, 313], "buffer0": [69, 76], "immutablewrit": [69, 76], "buffer1": [69, 76], "other_sampl": [69, 76], "short": [69, 76, 77, 85, 86, 98, 99, 109, 179, 206, 207, 354, 355, 357, 358, 366, 369], "unsqueez": [69, 123, 126, 129, 130, 167, 170, 353, 356, 365, 366, 367], "tolist": 69, "120110917137936e": 69, "06": [69, 197, 229, 353, 354, 355, 365, 366, 367], "uniformli": [70, 278, 372], "storageensembl": [71, 74], "samplerensembl": 71, "writerensembl": [71, 79], "num_buffer_sampl": [71, 74], "ensembl": [71, 74, 79, 84, 251, 281], "forbidden": 71, "collat": 71, "0x13a2ef430": 71, "0x13a2f9310": 71, "interpol": [71, 155, 354, 356], "interpolationmod": [71, 356], "bilinear": [71, 155, 356], "0x13a2f9220": 71, "0x13a2f9f70": 71, "0x13a2d9b50": 71, "0x13a2f95b0": 71, "0x128648260": 71, "roundrobin": [72, 81], "incomplet": [75, 77], "fresh": 75, "haven": [75, 368], "remain": [75, 128, 135, 136, 145, 164, 217, 359], "draw": [75, 243], "slicesamplerwithoutreplac": [76, 369], "320": [76, 77, 87, 88, 354, 367, 372], "700": [76, 77], "dataid": [76, 77], "__len__": 78, "rank_kei": 80, "rank": [80, 188], "samplerwithoutreplac": [80, 355, 366, 369], "get_insert_index": 80, "convers": [85, 86, 98, 99, 349], "2106": [85, 86, 267], "13281": [85, 86], "categorical_action_encod": [85, 86, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115], "frame_skip": [85, 86, 87, 88, 92, 93, 94, 95, 98, 99, 100, 101, 106, 107, 112, 142, 323, 326, 333, 350, 353, 354, 355, 371], "repeat": [85, 86, 87, 88, 92, 94, 95, 98, 99, 106, 107, 112, 188, 355, 365, 366, 367], "allow_done_after_reset": [85, 86, 87, 88, 89, 92, 94, 95, 98, 99, 106, 107, 112], "toler": [85, 86, 87, 88, 92, 94, 95, 98, 99, 106, 107, 112, 197, 229], "availalb": [85, 86, 98, 99], "ant": [85, 86, 89, 93, 96, 109, 115, 368], "87": [85, 86, 354, 367, 368], "acrobot": [85, 86, 87, 88, 372], "advant": [85, 86, 98, 99], "timer": [85, 86, 98, 99], "timeit": [85, 86, 98, 99], "310": [85, 86, 367], "ms": [85, 86, 98, 99], "268": [85, 86, 367], "433": [85, 86, 367], "80": [85, 86, 353, 354, 355, 365, 366, 367], "213": [85, 86, 367], "8605": [85, 86], "pipelineenv": 86, "get_environ": 86, "dm_control": [87, 88, 353, 364, 372], "2006": [87, 88, 263, 268, 367], "12983": [87, 88], "task_nam": [87, 89, 93, 109, 115], "pixels_onli": [87, 88, 92, 94, 95, 112, 353, 354, 361, 362, 371, 372], "cheetah": [87, 88, 89, 93, 109, 115, 313, 353, 372], "240": [87, 88, 367, 371, 372], "swingup": [87, 88, 372], "swingup_spars": [87, 88, 372], "ball_in_cup": [87, 88, 372], "catch": [87, 88, 372], "balance_spars": [87, 88, 372], "three_pol": [87, 88, 372], "two_pol": [87, 88, 372], "finger": [87, 88, 372], "turn_easi": [87, 88, 372], "turn_hard": [87, 88, 372], "fish": [87, 88, 372], "upright": [87, 88, 354, 372], "swim": [87, 88, 372], "hopper": [87, 88, 372], "hop": [87, 88, 372], "humanoid": [87, 88, 109, 115, 364, 372], "walk": [87, 88, 109, 115, 354, 364, 372], "run_pure_st": [87, 88, 372], "bring_bal": [87, 88, 372], "bring_peg": [87, 88, 372], "insert_bal": [87, 88, 372], "insert_peg": [87, 88, 372], "point_mass": [87, 88, 372], "reacher": [87, 88, 372], "swimmer": [87, 88, 372], "swimmer6": [87, 88, 372], "swimmer15": [87, 88, 372], "walker": [87, 88, 372], "dog": [87, 88, 372], "trot": [87, 88, 372], "humanoid_cmu": [87, 88, 372], "lqr": [87, 88, 372], "lqr_2_1": [87, 88, 372], "lqr_6_2": [87, 88, 372], "quadrup": [87, 88, 372], "escap": [87, 88, 372], "stacker": [87, 88, 372], "stack_2": [87, 88, 372], "stack_4": [87, 88, 372], "deviceless": [89, 357, 359, 360, 361], "run_type_check": [89, 105], "counterenv": 89, "unboundedcontinuoustensorspec": [89, 93, 105, 109, 115, 123, 126, 134, 137, 153, 165, 183, 188, 211, 235, 251, 254, 256, 259, 282, 346, 355, 356, 365, 366, 367, 372], "continuousbox": [89, 93, 109, 115, 183, 355, 365, 366, 367, 371, 372], "sort": [89, 93, 109, 115, 130, 247], "another_act": [89, 93, 109, 115], "mutabl": [89, 93, 109, 115], "_callabletransform": [89, 93, 109, 115], "batch_lock": [89, 91, 93, 109, 115, 126, 165, 169, 367], "done_keys_group": [89, 93, 109, 115], "outer": [89, 93, 109, 115, 350, 353, 354, 372], "another_don": [89, 93, 109, 115], "empty_cach": [89, 93, 109, 115, 169], "fake_tensordict": [89, 93, 109, 115, 354], "afterward": [89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258, 365, 372], "silent": [89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 218, 219, 220, 222, 225, 226, 228, 233, 239, 240, 242, 243, 246, 247, 250, 255, 258], "braxenv": [89, 93, 109, 115, 154, 346, 357], "envnam": [89, 93, 109, 115], "pipeline_st": [89, 93, 109, 115], "attibut": [89, 93, 109, 115], "maybe_reset": [89, 93, 109, 115], "speak": [89, 93, 109, 115, 353], "rand_act": [89, 93, 102, 109, 110, 111, 115, 126, 357], "register_gym": [89, 93, 109, 115, 357], "entry_point": [89, 93, 109, 115], "info_kei": [89, 93, 109, 115], "reward_threshold": [89, 93, 109, 115], "nondeterminist": [89, 93, 109, 115], "max_episode_step": [89, 92, 93, 94, 109, 115], "order_enforc": [89, 93, 109, 115], "autoreset": [89, 93, 109, 115], "disable_env_check": [89, 92, 93, 106, 107, 109, 115], "apply_api_compat": [89, 93, 109, 115], "nasium": [89, 93, 109, 115], "scope": [89, 93, 109, 115, 372], "dmcontrolenv": [89, 93, 109, 115, 313, 346, 353, 357, 364, 372], "dmc": [89, 93, 109, 115], "removeemptyspec": [89, 93, 109, 115], "threshold": [89, 93, 109, 115, 243, 263, 264, 355], "learnt": [89, 93, 109, 115, 340], "knowledg": [89, 93, 109, 115, 359], "checker": [89, 92, 93, 106, 107, 109, 115], "stepapicompat": [89, 93, 109, 115], "concept": [89, 93, 109, 115, 354, 369], "deem": [89, 93, 103, 104, 109, 115, 116, 117], "envgym": [89, 93, 109, 115], "0855": [89, 93, 109, 115], "0215": [89, 93, 109, 115], "0881": [89, 93, 109, 115], "0412": [89, 93, 109, 115], "1101": [89, 93, 109, 115], "0080": [89, 93, 109, 115], "0254": [89, 93, 109, 115], "0424": [89, 93, 109, 115], "9609e": [89, 93, 109, 115], "9776e": [89, 93, 109, 115], "04": [89, 93, 97, 109, 115, 353, 354, 355, 365, 367], "6347e": [89, 93, 109, 115], "3842e": [89, 93, 109, 115], "5338e": [89, 93, 109, 115], "3064e": [89, 93, 109, 115], "0381e": [89, 93, 109, 115], "6656e": [89, 93, 109, 115], "05": [89, 93, 109, 115, 353, 354, 367], "0204e": [89, 93, 109, 115], "action_spac": [89, 93, 109, 115, 138, 199, 224, 241, 242, 249, 250, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 356, 358, 362], "0833": [89, 93, 109, 115], "0275": [89, 93, 109, 115], "0612": [89, 93, 109, 115], "0770": [89, 93, 109, 115, 367], "1256": [89, 93, 109, 115, 367], "0082": [89, 93, 109, 115], "0186": [89, 93, 109, 115], "0476": [89, 93, 109, 115], "2221": [89, 93, 109, 115], "2256": [89, 93, 109, 115], "5930": [89, 93, 109, 115], "6937": [89, 93, 109, 115], "5865": [89, 93, 109, 115], "5479": [89, 93, 109, 115], "0187": [89, 93, 109, 115], "6825": [89, 93, 109, 115, 367], "5224": [89, 93, 109, 115], "0018": [89, 93, 109, 115, 367], "1005": [89, 93, 109, 115], "0335": [89, 93, 109, 115], "0268": [89, 93, 109, 115, 367], "0133": [89, 93, 109, 115], "0627": [89, 93, 109, 115], "0074": [89, 93, 109, 115, 367], "0488": [89, 93, 109, 115, 367], "0353": [89, 93, 109, 115], "0075": [89, 93, 109, 115, 367], "0069": [89, 93, 109, 115, 367], "0098": [89, 93, 109, 115, 367], "0058": [89, 93, 109, 115, 367], "0033": [89, 93, 109, 115, 367], "0157": [89, 93, 109, 115], "0004": [89, 93, 109, 115, 356, 367], "0381": [89, 93, 109, 115], "0452": [89, 93, 109, 115], "11355747": [89, 93, 109, 115], "04257728": [89, 93, 109, 115], "00408397": [89, 93, 109, 115], "04155852": [89, 93, 109, 115], "0389733": [89, 93, 109, 115], "01409826": [89, 93, 109, 115], "0978704": [89, 93, 109, 115], "08808327": [89, 93, 109, 115], "03970837": [89, 93, 109, 115], "00535434": [89, 93, 109, 115], "02353762": [89, 93, 109, 115], "05116226": [89, 93, 109, 115], "02788907": [89, 93, 109, 115], "06848346": [89, 93, 109, 115], "05154399": [89, 93, 109, 115], "0371798": [89, 93, 109, 115], "05128025": [89, 93, 109, 115], "dydact": [89, 93, 109, 115], "gym_env": [89, 93, 109, 115, 371], "reset_kei": [89, 93, 109, 115, 129, 159, 164, 165, 166, 365], "multitask": [89, 93, 109, 115], "multiag": [89, 93, 102, 109, 110, 111, 115, 187, 215, 223, 232, 291], "another_reward": [89, 93, 109, 115], "auto_cast_to_devic": [89, 93, 109, 115, 366], "return_contigu": [89, 93, 109, 115, 179, 364], "soon": [89, 93, 109, 110, 111, 115], "__sort": [89, 93, 109, 115], "as__": [89, 93, 109, 115], "normal": [89, 93, 109, 115, 147, 175, 189, 190, 205, 209, 212, 213, 218, 230, 231, 239, 248, 252, 264, 277, 280, 326, 328, 344, 348, 350, 356, 358, 366, 372], "argmaxmodul": [89, 93, 109, 115], "n_ob": [89, 93, 109, 115, 145, 246, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 359], "n_act": [89, 93, 109, 115, 145, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 359], "ourselv": [89, 93, 109, 115, 355, 372], "emul": [89, 93, 109, 115], "epoch": [89, 93, 109, 115, 330, 355, 365, 366], "input_td": [89, 93, 109, 115], "rollout_td": [89, 93, 109, 115], "concomitt": [89, 93, 109, 115], "prevail": [89, 93, 109, 115, 130, 159, 187], "creator": [90, 335, 336, 342, 343, 344], "substitut": [90, 164, 175, 358], "vecnorm": [90, 344], "env_creat": [90, 353], "test_env1": 90, "_td": 90, "observation_count": [90, 372], "test_env2": 90, "sleep": [90, 372], "ps": 90, "p1": 90, "p2": 90, "9934": 90, "env_str": 91, "device_map": 91, "accross": [92, 94], "registri": 92, "asyncvectorenv": 92, "involv": [92, 94, 95, 103, 104, 112, 126, 357, 359], "pixel_observ": [92, 94, 95, 112], "pixelobservationwrapp": [92, 94, 95, 112], "adventur": [92, 94, 372], "airraid": [92, 94, 372], "alien": [92, 94, 372], "time_limit": 92, "timelimit": [92, 103, 104, 116, 117], "default_info_dict_read": [92, 93, 94, 109], "reader": [92, 93, 94, 109, 354], "set_info_dict_read": [92, 93, 94, 109, 357], "info_dict": [92, 93, 94, 109], "auto_register_info_dict": [92, 93, 94, 109], "info_dict_read": [93, 109], "ignore_priv": 93, "succe": [93, 109], "underscor": 93, "halfcheetah": [93, 109, 155, 353], "register_info_dict": 93, "read_act": 93, "read_don": 93, "nonsens": 93, "fallback": 93, "broken": [93, 179], "read_ob": 93, "dictat": [93, 248, 252, 280, 353, 367], "read_reward": 93, "baseinfodictread": 93, "hoc": [93, 109, 358], "dict_read": 93, "my_info_kei": 93, "some_env": 93, "vecenv": 94, "vectorenv": 94, "secur": 95, "habitat3": 95, "ai": [95, 368], "habitatrenderpick": 95, "isaacgym": [96, 97], "isaacgymwrapp": [96, 346], "isaacgymenv": [97, 346], "webpag": 97, "isaac": 97, "essenc": [97, 357], "instadeepai": [98, 99], "2306": [98, 99], "09884": [98, 99], "snake": [98, 99], "grid": [98, 99, 313], "bodi": [98, 99], "body_st": [98, 99], "fruit_posit": [98, 99], "col": [98, 99], "row": [98, 99], "head_posit": [98, 99], "tail": [98, 99], "game2048": [98, 99], "maze": [98, 99], "cleaner": [98, 99], "cvrp": [98, 99], "multicvrp": [98, 99], "minesweep": [98, 99], "rubikscub": [98, 99], "knapsack": [98, 99], "sudoku": [98, 99], "tsp": [98, 99], "connector": [98, 99], "v2": [98, 99, 113, 114, 288, 302, 303, 304, 305, 307, 308, 309, 310, 356], "mmst": [98, 99], "graphcolor": [98, 99], "partli": [98, 99], "scrambl": [98, 99], "robotwarehous": [98, 99], "tetri": [98, 99], "binpack": [98, 99], "jobshop": [98, 99], "0x1fca91910": 98, "122": [98, 99, 367, 372], "0x1ff9baee0": 98, "134": [98, 99, 367], "0x1ff9ba7c0": 98, "172": [98, 99, 367], "drastic": [99, 109, 369], "rubric": [99, 147, 254], "mo": [100, 101], "minecart": [100, 101], "mo_gym": 101, "qualnam": 102, "leverag": [102, 110, 111, 353, 366, 372], "neural": [102, 110, 111, 189, 190, 227, 251, 348, 354, 355, 356, 358, 365, 366, 367, 372], "group_map": [102, 103, 104, 110, 111, 116, 117, 118, 365], "constructiuon": [102, 110, 111], "premad": [102, 103, 104, 110, 111, 116, 117, 291], "all_in_one_group": [102, 118], "agent_0": [102, 110, 111, 118, 365], "agent_1": [102, 110, 111, 118], "agent_2": [102, 110, 111, 118], "agent_3": 102, "one_group_per_ag": [102, 110, 111], "meltingpot": [103, 104], "2211": [103, 104], "13746": [103, 104], "melt": [103, 104], "pot": [103, 104], "novel": [103, 104, 359], "social": [103, 104], "familiar": [103, 104, 354, 366, 372], "unfamiliar": [103, 104], "broad": [103, 104], "cooper": [103, 104, 365, 366], "decept": [103, 104], "reciproc": [103, 104], "trust": [103, 104, 208], "stubborn": [103, 104], "substrat": [103, 104], "ml_collect": 103, "config_dict": 103, "configdict": 103, "categorical_act": [103, 104, 110, 111, 113, 114, 116, 117], "marlgroupmaptyp": [103, 104, 110, 111, 116, 117, 118, 346, 365], "agent_nam": [103, 104, 116, 117, 118], "agent_names_to_indices_map": [103, 104, 116, 117], "env_torchrl": [103, 104], "commons_harvest__open": [103, 104], "rgb": [103, 104], "144": [103, 104, 367], "192": [103, 104, 354, 367], "collective_reward": [103, 104], "ready_to_shoot": [103, 104], "88": [103, 104, 113, 114, 353, 354, 367], "substrate_config": 104, "get_config": 104, "mp_env": 104, "build_from_config": 104, "default_player_rol": 104, "environn": 105, "mymbenv": [105, 188, 211], "world_model": [105, 188, 211, 273], "hidden_observ": [105, 188, 211], "mlp": [105, 188, 189, 190, 192, 193, 194, 195, 201, 204, 208, 211, 215, 236, 241, 259, 266, 268, 348, 354, 358, 359, 362, 364, 368, 371], "worldmodelwrapp": [105, 188, 211], "activation_class": [105, 188, 189, 190, 192, 193, 194, 195, 200, 201, 209, 211, 214, 215, 354, 358, 365, 366, 371], "relu": [105, 188, 196, 211, 218, 261], "activate_last_lay": [105, 188, 195, 209, 211], "sail": [106, 107], "sg": [106, 107], "10558": [106, 107], "readthedoc": 106, "en": 106, "python_interfac": 106, "envpoolmixin": 107, "env_bas": 107, "task_id": 107, "env_typ": 107, "gym_reset_return_info": 107, "envpool_env": 107, "www": [108, 212, 213], "fetch_openml": 108, "106": [108, 367], "my_env_fun": [109, 115], "custom_attribute_list": [109, 115], "custom_attribut": [109, 115], "custom_method_list": [109, 115], "custom_method": [109, 115], "deploi": [109, 115, 126], "slight": [109, 115, 354], "share_individual_td": [109, 115], "shared_memori": [109, 115], "policy_proof": [109, 115], "ll": [109, 115, 202, 203, 206, 207, 353, 354, 355, 356, 357, 358, 359, 360, 362, 366, 372], "serial_for_singl": [109, 115, 354], "list_of_kwarg": [109, 115], "com_veloc": [109, 115], "extrem": [109, 115, 262, 264, 277, 280, 282], "head_height": [109, 115], "joint_angl": [109, 115], "torso_vert": [109, 115], "stringent": [109, 355, 365, 366], "inter": 109, "penv": 109, "tensordictprim": [109, 204, 208, 259, 356], "reward_run": 109, "env_fix": 109, "influenc": 109, "thumb": [109, 355], "suppos": [109, 326, 350, 372], "myenv": [109, 126, 134, 137], "pipe": 109, "update_kwarg": [109, 115], "pettingzoo": [110, 111, 365, 366], "pet": [110, 111], "zoo": [110, 111], "__": [110, 111], "aecenv": [110, 111], "use_mask": [110, 111], "dead": [110, 111], "done_on_ani": [110, 111, 365], "compulsori": [110, 111], "adversary_0": [110, 111, 365], "adversari": [110, 111, 365], "vectoris": [110, 111, 202, 203, 206, 207], "sisl": 110, "multiwalker_v9": 110, "return_st": [110, 111], "aec": [110, 111], "n_piston": [110, 111], "pistonball_v6": [110, 111], "piston": [110, 111], "piston_0": [110, 111], "piston_1": [110, 111], "piston_20": [110, 111], "tictactoe_v3": [110, 111], "player": [110, 111], "player_1": [110, 111], "player_2": [110, 111], "butterfli": 111, "parallel_env": [111, 353, 371, 372], "vikashplu": 112, "wiki": 112, "06828": 112, "from_depth": 112, "smacv2": [113, 114], "starcraft": [113, 114], "challeng": [113, 114, 357, 367, 368], "10gen_terran": [113, 114], "10gen_zerg": [113, 114], "10gen_protoss": [113, 114], "3m": [113, 114], "8m": [113, 114], "25m": [113, 114], "5m_vs_6m": [113, 114], "8m_vs_9m": [113, 114], "10m_vs_11m": [113, 114], "27m_vs_30m": [113, 114], "mmm": [113, 114], "mmm2": [113, 114], "2s3z": [113, 114], "3s5z": [113, 114], "3s5z_vs_3s6z": [113, 114], "3s_vs_3z": [113, 114], "3s_vs_4z": [113, 114], "3s_vs_5z": [113, 114], "1c3s5z": [113, 114], "2m_vs_1z": [113, 114], "corridor": [113, 114], "6h_vs_8z": [113, 114], "2s_vs_1sc": [113, 114], "so_many_banel": [113, 114], "bane_vs_ban": [113, 114], "2c_vs_64zg": [113, 114], "old": [113, 114, 277, 372], "smac": [113, 114], "map_nam": [113, 114], "176": [113, 114, 367], "battle_won": [113, 114], "dead_al": [113, 114], "dead_enemi": [113, 114], "episode_limit": [113, 114], "322": [113, 114, 367], "Or": [113, 114, 214], "procedur": [113, 114], "distribution_config": [113, 114], "n_unit": [113, 114], "n_enemi": [113, 114], "team_gen": [113, 114], "dist_typ": [113, 114], "weighted_team": [113, 114], "unit_typ": [113, 114], "marin": [113, 114], "maraud": [113, 114], "medivac": [113, 114], "exception_unit_typ": [113, 114], "start_posit": [113, 114], "surrounded_and_reflect": [113, 114], "map_x": [113, 114], "map_i": [113, 114], "capability_config": [113, 114], "131": [113, 114, 367], "starcraft2env": 114, "proroklab": [116, 117], "vectorizedmultiagentsimul": [116, 117], "2207": [116, 117], "03530": [116, 117], "basescenario": 116, "descript": [116, 125, 354, 355], "perfrom": [116, 117], "defaultt": 116, "continuous_act": [116, 117, 311, 365, 366], "repositiori": 116, "sparsiti": 116, "unbatched_action_spec": [116, 117, 366], "unbatched_observation_spec": [116, 117], "unbatched_reward_spec": [116, 117], "het_spec": [116, 117], "het_specs_map": [116, 117], "flock": [116, 117, 311], "agent_collision_rew": [116, 117], "agent_distance_rew": [116, 117], "ca": 118, "environment4": 118, "get_group_map": 118, "sumbodul": 119, "model_bas": [120, 121, 188, 211], "out_keys_inv": [120, 132, 134, 135, 137, 147, 148, 149, 153, 154, 161, 168, 367], "decod": [120, 219], "model_based_env": [120, 272], "dreamerenv": [120, 272, 346], "model_based_env_ev": 120, "masker": 123, "tensor_spec": [123, 178, 187, 269, 270, 280, 282], "binarydiscretetensorspec": [123, 266, 269, 270, 291, 346], "maskedenv": 123, "ones_lik": 123, "scatter": 123, "_set_se": [123, 126, 134, 137, 153, 367], "fill_float": 125, "fill_int": 125, "fill_bool": 125, "someenvclass": 125, "autoresetenv": 125, "argumet": 125, "fooenv": 125, "sign": [125, 161, 293, 365], "envtyp": 125, "reshape_fn": 126, "reset_func": 126, "environmt": 126, "request": [126, 152], "tensordict_batch_s": 126, "els": [126, 202, 203, 206, 207, 219, 348, 350, 353, 354, 355, 356, 365, 366, 367, 368], "tensordict_reset": [126, 367], "transform_env_batch_s": [126, 133, 168, 177], "transform_input_spec": [126, 133, 134, 135, 136, 147, 149, 153, 154, 159, 163, 164, 165, 168, 170, 172, 177], "transform_output_spec": [126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 177], "transform_observation_spec": [126, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 147, 149, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 177, 367], "transform_reward_spec": [126, 127, 132, 133, 134, 135, 139, 145, 153, 154, 157, 158, 159, 160, 161, 163, 168, 170, 177], "transformfull_done_spec": [126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 177], "biner": 127, "burn_in": 128, "burn": 128, "date": [128, 316], "retur": 128, "burnt": 128, "gru_modul": [128, 204, 259], "input_s": [128, 202, 203, 204, 206, 207, 208, 259, 356], "hidden_s": [128, 202, 203, 204, 206, 207, 208, 259, 356], "set_recurrent_mod": [128, 204, 208, 356], "burn_in_transform": 128, "gru": [128, 165, 203, 204, 259], "num_lay": [128, 202, 204, 206, 208, 219, 220, 259], "86": [128, 353, 354, 367], "3008": [128, 354], "0344": 128, "padding_valu": [129, 212, 213], "as_invers": 129, "movement": 129, "1312": [129, 354], "5602": 129, "unsqueezetransform": [129, 367, 369], "consumpt": 129, "followin": 129, "pictur": 129, "pixels_trsf": [129, 369], "grayscal": [129, 354, 356, 369, 372], "data_exclud": [129, 369], "del_kei": [130, 171, 364, 367], "unsqueeze_if_oor": 130, "observation_posit": 130, "observation_veloc": 130, "key1": [130, 321, 329], "key2": [130, 321, 329], "center": [131, 313], "width": [131, 155], "scalar": [132, 157, 193, 195, 216, 217, 239, 243, 244, 247, 258, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 348, 354, 359, 367], "permit": [132, 141, 170, 262, 264, 277, 280, 282], "rewardsc": [133, 169, 353, 354, 356], "rewardclip": 133, "transformed_env": [133, 168, 169, 357], "transform_env_devic": [133, 135, 168, 177], "dtype_in": 134, "dtype_out": 134, "scan": [134, 137, 253, 254], "resp": [134, 137], "not_transform": [134, 137], "constructedw": [134, 137], "orig_devic": 135, "unspecifi": 135, "transform_done_spec": [135, 168, 177], "num_actions_effect": 136, "max_act": 136, "include_forward": 136, "num_act": [136, 270, 358], "action_out": 136, "_call": [136, 141, 367], "eol_kei": 138, "lives_kei": 138, "eol_attribut": 138, "unwrap": 138, "breakout": 138, "210": [138, 149, 367, 372], "160": [138, 149, 354, 367, 372], "eol_transform": 138, "eol": 138, "dqnloss": [138, 262, 263, 265, 268, 270, 271, 272, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 291, 337, 346, 349, 354, 356, 362], "register_kei": 138, "loss_or_advantag": 138, "lossmodul": [138, 330, 339, 340, 346], "valueestimatorbas": [138, 278, 346], "excluded_kei": 139, "finit": [140, 358, 369], "first_dim": 141, "last_dim": 141, "allow_positive_dim": [141, 170], "th": [141, 170, 202, 206, 367], "frameskip": 141, "repeatedli": [142, 355, 366], "init_kei": [144, 246], "tracker": 144, "pi_curr": 145, "pi_0": 145, "overfit": 145, "probabilist": [145, 248, 346, 355, 371], "get_dist": [145, 252, 253], "mod": [145, 204, 208, 246, 255, 356, 362], "normalparamextractor": [145, 348, 355, 358, 366], "probabilisticactor": [145, 236, 237, 238, 240, 262, 263, 267, 269, 270, 276, 279, 280, 281, 282, 283, 285, 348, 353, 355, 358, 365, 366], "tanhnorm": [145, 236, 237, 238, 248, 254, 262, 263, 276, 280, 281, 282, 283, 285, 346, 355, 366, 371], "return_log_prob": [145, 236, 237, 238, 248, 252, 254, 282, 348, 355, 358, 365, 366, 371], "apply_": 145, "copy_": [145, 353], "formulat": 145, "diverg": [145, 204, 208, 248, 252, 273, 277], "noop": [146, 371], "trial": 146, "standard_norm": [147, 158, 353, 354, 356], "affin": [147, 158], "layer": [147, 175, 189, 190, 192, 193, 198, 200, 202, 203, 204, 206, 207, 208, 209, 214, 215, 216, 217, 219, 220, 227, 228, 234, 245, 255, 348, 354, 355, 356, 358, 365, 368], "set_default_tensor_typ": 147, "doubletensor": 147, "isclos": 147, "next_ob": [147, 293, 294, 295, 296, 371], "init_stat": [147, 353, 354, 355, 356], "3752e": 147, "5087e": 147, "9294e": 147, "9636": 147, "5608": 147, "6408": 147, "num_it": [147, 354, 355], "reduce_dim": [147, 353, 354, 355, 356], "cat_dim": [147, 353, 354, 355, 356], "keep_dim": [147, 354, 356], "statist": [147, 175, 282, 344, 353, 354, 355, 372], "gaussian": [147, 165, 188, 211, 216, 217, 222, 239, 355, 365], "empir": [147, 188, 211, 248, 252, 353, 355, 366], "3d": [147, 189], "third": [147, 242, 365, 366], "reorder": 149, "in_keys_in": 149, "channel": [149, 167, 214, 219, 220, 354], "r3m": [151, 368], "resnet": [151, 171, 173], "visual": [151, 171, 173, 313, 355, 365, 367], "embed": [151, 171, 172, 173, 192, 223, 235, 236, 237, 238, 251, 256, 368], "ego4d": [151, 171, 173], "univers": [151, 171, 173, 357], "suraj": [151, 171], "nair": [151, 171], "aravind": [151, 171], "rajeswaran": [151, 171], "vikash": [151, 171, 173], "kumar": [151, 171, 173], "chelsea": [151, 171], "finn": [151, 171], "abhinav": [151, 171], "gupta": [151, 171], "2203": [151, 171, 211, 368], "12601": [151, 171, 368], "_init": [151, 171, 353], "snippet": [151, 171, 353], "resnet50": [151, 173, 368], "model_nam": [151, 171, 173, 316], "resnet34": 151, "resnet18": 151, "r3m_vec": [151, 368], "feed": [151, 173, 278, 348, 353, 365, 366, 369], "stack_imag": [151, 173], "tread": [151, 173], "separet": [151, 173], "hub": [151, 173, 357, 368], "resnet50_weight": [151, 173], "imagenet1k_v1": [151, 173], "download_path": [151, 173], "tensor_pixels_kei": [151, 173], "sub_seq_len": 152, "sample_dim": [152, 353], "primarili": [152, 358], "hesit": 152, "robust": 152, "mix": [152, 223, 232, 291, 353, 365, 366], "improp": 152, "dummyenv": 153, "another_oth": 153, "other_reward": 153, "create_copi": 154, "stuff": [154, 360], "newnam": 154, "r2g": 156, "reward_to_go": 156, "bernoulli_": 156, "9010": 156, "9404": [156, 299], "9701": [156, 299], "9900": [156, 299], "0000": [156, 166, 243, 244, 255, 299, 355, 356, 367, 371], "crash": 156, "clamp_min": 157, "clamp_max": 157, "clip_min": 157, "clip_max": 157, "episode_": 159, "reward1": 159, "reward2": 159, "episode_reward": [159, 365, 366], "keep_reward": 160, "keep_don": 160, "logical_or": 161, "squeeze_dim": 162, "step_count_kei": 163, "update_don": 163, "disjunct": 163, "recognis": 163, "target_return": 164, "subtract": 164, "primer": [165, 204, 208, 259, 356], "default_valu": [165, 259, 356], "unit": [165, 188, 200, 202, 203, 219, 220, 225, 226, 355], "transfomedenv": 165, "mykei": 165, "__unless": 165, "exists__": 165, "get_primers_from_modul": [165, 204, 208, 346], "10th": 166, "0216": 166, "1149": 166, "1990": 166, "2749": 166, "3281": 166, "9290": 166, "3702": 166, "8978": 166, "from_int": 167, "shape_toler": 167, "permuat": 167, "ri": 167, "principl": 168, "cattransform": 168, "notabl": 168, "rewardsum": [168, 177, 186, 365, 366], "smoothli": 169, "add_1": 169, "cache_spec": 169, "set_missing_toler": 169, "keyerror": 169, "unsqueeze_dim": [170, 367], "danger": 170, "vc1": 171, "vc1_vec": 171, "untrain": 171, "make_noload_model": 171, "vip": [172, 173, 368], "implicit": [173, 269, 276, 369], "jason": 173, "ma": 173, "shagun": 173, "sodhani": 173, "dinesh": 173, "jayaraman": 173, "osbert": 173, "bastani": 173, "ami": 173, "zhang": 173, "vip_vec": 173, "final_nam": 174, "sb3": 174, "terminal_obs_read": 174, "truli": [174, 371], "till": 174, "shared_td": 175, "decai": [175, 239, 243, 284, 328, 353, 354, 356, 372], "9999": [175, 367], "0001": [175, 200, 218, 355, 367], "to_observation_norm": 175, "underflow": [175, 328], "build_td_for_shared_vecnorm": 175, "memmori": 175, "queue": [175, 369], "td_share": 175, "state_dim": [176, 191, 196, 222, 225, 226, 240], "action_dim": [176, 191, 192, 194, 196, 222, 240, 353, 364], "gsde": [176, 281, 344], "gsdemodul": 176, "rb_transform": 177, "resist": 177, "insensit": 177, "sensit": [177, 354], "_orig": 177, "95": [177, 211, 287, 354, 355, 356, 367, 368], "tdreset": [177, 364], "window": [177, 246, 365, 369, 371], "edit": [177, 360], "cube": 178, "check_dtyp": 179, "discrep": [179, 262, 264, 265, 266, 277, 280, 282, 291], "temporarili": [179, 360, 369], "rng": [179, 367], "revert": [179, 358, 369], "probabilistictdmodul": [184, 185, 209, 248, 252, 292, 326], "next_tensordict": 186, "keep_oth": [186, 367], "exclude_reward": 186, "exclude_don": 186, "exclude_act": 186, "next_": 186, "funtion": 186, "_stepmdp": 186, "write_full_fals": 187, "_terminated_or_trunc": 187, "entropi": [188, 262, 263, 264, 269, 270, 276, 277, 279, 280, 281, 283, 285, 366], "botev": 188, "2013": 188, "cem": 188, "plan": [188, 210, 211], "varianc": [188, 205, 218, 230, 231, 349, 353, 355, 366], "k": [188, 202, 203, 206, 207], "maximis": [188, 192, 194, 211, 348, 354, 355, 366], "modelbasedenv": [188, 211], "planning_horizon": [188, 211], "optim_step": [188, 211, 354, 362], "mpc": [188, 210, 211], "num_candid": [188, 211], "candid": [188, 211], "top_k": [188, 211], "modelbasedenvbas": [188, 210, 211, 346], "safemodul": [188, 210, 236, 238, 252, 262, 263, 269, 270, 276, 280, 281, 282, 283, 285, 335, 336, 340, 346, 371], "num_cel": [189, 190, 192, 193, 194, 195, 200, 201, 204, 208, 209, 214, 215, 236, 259, 354, 355, 356, 358, 359, 362, 365, 366, 371], "elu": [189, 190, 192, 193, 194, 195, 200, 201, 214, 354, 371], "activation_kwarg": [189, 190, 209], "norm_class": [189, 190, 192, 193, 209], "norm_kwarg": [189, 190, 209], "bias_last_lay": [189, 190, 192, 193, 194, 195, 201, 209], "aggregator_class": [189, 190, 192, 193, 354, 356, 371], "squashdim": [189, 190, 192, 201, 214, 371], "aggregator_kwarg": [189, 190, 192, 193, 354, 356], "squeeze_output": [189, 190, 192, 193, 354, 356], "cell": [189, 190, 202, 203, 204, 206, 207, 208, 209, 214, 215, 355, 357, 358, 359, 360, 361, 362], "kernel": [189, 190, 201, 214], "cnet": [189, 190], "conv3d": 189, "lazyconv2d": [190, 192, 193, 201, 214, 371], "transformer_config": [191, 222, 240], "decisiontransform": [191, 222], "dtconfig": [191, 196, 222], "2202": [191, 196, 279], "05607": [191, 196, 279], "return_to_go": [191, 196, 222, 240], "conv_net_kwarg": [192, 193], "mlp_net_kwarg": [192, 193, 194], "use_avg_pool": [192, 193], "WITH": [192, 193, 194, 195, 247, 284], "1509": [192, 193, 194, 195, 211, 247, 266, 275, 284, 367], "02971": [192, 193, 194, 195, 247, 284], "reus": [192, 320], "convnet": [192, 193, 201, 214, 356, 358, 371], "ndims_in": 192, "avgpool": [192, 193], "lazylinear": [192, 193, 194, 195, 201, 209, 348, 355, 358, 367, 368, 371], "2304": [192, 354], "adaptiveavgpool2d": [193, 354, 356], "output_s": [193, 354, 356], "squeeze2dlay": 193, "400": [194, 195, 361, 366, 367, 369], "mlp_net_kwargs_net1": 195, "mlp_net_kwargs_net2": 195, "mlp1": 195, "mlp2": 195, "decion": 196, "desdescrib": 196, "n_embd": 196, "n_layer": [196, 202, 206], "n_head": 196, "n_inner": 196, "n_posit": 196, "resid_pdrop": 196, "attn_pdrop": 196, "gpt2config": 196, "atol": [197, 229], "rtol": [197, 229], "batch_shap": [197, 229], "event_shap": [197, 229], "absolut": [197, 229, 353], "densiti": [197, 212, 213, 221, 231], "mass": [197, 212, 213, 221, 231, 367], "rsampl": [197, 213, 221, 252], "sample_shap": [197, 212, 213, 221], "softmax": [198, 213, 221, 241, 242], "var_num": [199, 224, 241, 242, 250], "action_value_kei": [199, 224, 241, 242, 249, 250, 278, 291], "action_mask_kei": [199, 224, 241, 242, 243, 244, 249, 250], "perspect": [199, 242, 271, 355], "1707": [199, 242, 271, 280], "06887": [199, 242, 271], "mult": [199, 215, 224, 241, 242, 249, 250], "tensordict_modul": [199, 202, 203, 206, 207, 224, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 265, 269, 270, 276, 280, 281, 282, 283, 285, 348], "nbin": [199, 241, 348], "customdistributionalqv": 199, "log_softmax": [199, 241], "from_modul": [199, 251, 254, 371], "one_hot": [199, 213, 224], "qvalue_actor": [199, 224, 241, 249, 348], "to_modul": [199, 251, 254, 353, 371], "std_bia": 200, "std_min_val": 200, "belief": [200, 219, 225, 226], "1912": [200, 272, 273, 274], "01603": [200, 272, 273, 274], "softplu": [200, 218, 258, 260, 261], "out_features_valu": 201, "cnn_kwarg": [201, 354], "mlp_kwarg": [201, 354], "duel": 201, "cnn": [201, 214, 354, 358, 371], "06581": 201, "batch_first": [202, 204, 206, 208, 356], "bidirect": [202, 206, 356], "cudnn": [202, 203, 206, 207, 356], "vmap": [202, 203, 206, 207, 233, 251, 254, 371], "rnn": [202, 203, 206, 207, 356, 358], "device_count": [202, 203, 206, 207, 372], "n_in": [202, 203, 206, 207], "n_out": [202, 203, 206, 207], "h0": [202, 203, 206, 207], "h1": [202, 203, 206, 207], "call_gru": [202, 203], "h_out": [202, 203, 206, 207], "batched_cal": [202, 203, 206, 207], "gate": [202, 203, 206], "r_t": 202, "sigma": [202, 203, 205, 206, 207, 230, 231, 239, 247, 355, 365], "w_": [202, 203, 206, 207], "ir": [202, 203], "x_t": [202, 206], "b_": [202, 203, 206, 207], "hr": [202, 203, 206], "h_": [202, 203, 206], "z_t": 202, "iz": [202, 203], "hz": [202, 203], "n_t": 202, "odot": [202, 203, 206, 207], "hn": [202, 203, 206], "h_t": [202, 206], "sigmoid": [202, 203, 206, 207], "hadamard": [202, 203, 206, 207], "multilay": [202, 206], "_t": [202, 206, 366, 367], "ge": [202, 206], "bernoulli": [202, 206], "b_ih": [202, 203, 206, 207, 208], "b_hh": [202, 203, 206, 207, 208], "seq": [202, 204, 206, 208, 246, 356, 362, 364], "h_0": [202, 206, 207], "unbatch": [202, 206], "pack_padded_sequ": [202, 206], "pack_sequ": [202, 206], "num": [202, 206, 362], "_layer": [202, 206], "_size": [202, 203, 206, 207], "h_n": [202, 206], "packedsequ": [202, 206], "weight_ih_l": [202, 206], "learnabl": [202, 203, 206, 207], "w_ir": 202, "w_iz": 202, "w_in": 202, "num_direct": [202, 206], "weight_hh_l": [202, 206], "w_hr": 202, "w_hz": 202, "w_hn": 202, "bias_ih_l": [202, 206], "b_ir": 202, "b_iz": 202, "b_in": 202, "bias_hh_l": [202, 206], "b_hr": 202, "b_hz": 202, "b_hn": 202, "mathcal": [202, 203, 206, 207], "sqrt": [202, 203, 206, 207, 247], "frac": [202, 203, 206, 207, 355], "seq_len": [202, 206], "subtli": 202, "matrix": [202, 206, 216, 217], "contrast": [202, 275, 369], "hx": [202, 203, 206, 207], "lstmcell": [203, 208], "gru_cel": 203, "z": 203, "weight_ih": [203, 207], "weight_hh": [203, 207], "bias_ih": [203, 207], "bias_hh": [203, 207], "rocm": [203, 207], "embedd": [204, 208], "grucel": [204, 251], "python_bas": [204, 208], "recurrent_st": [204, 208, 259, 356], "custom_kei": [204, 208], "recurrent_mod": [204, 208], "make_tensordict_prim": [204, 208, 356], "rs": [204, 353], "gru_module_train": 204, "policy_train": [204, 208], "traj_td": [204, 208], "policy_infer": [204, 208], "td_inf": [204, 208], "assert_clos": [204, 208], "upscal": [205, 230, 231], "tanh_loc": [205, 230, 231], "event_dim": [205, 229, 230], "ultim": [205, 230, 231], "poor": [205, 230, 231], "explos": [205, 230, 231], "switch": [205, 231, 311], "formula": [205, 230, 231, 262, 264, 277, 280, 349, 355], "proj_siz": 206, "c0": [206, 207], "c1": [206, 207], "call_lstm": [206, 207], "c_out": [206, 207], "i_t": 206, "ii": [206, 207], "hi": [206, 207], "f_t": 206, "hf": [206, 207], "g_t": 206, "ig": [206, 207], "hg": [206, 207], "o_t": 206, "ho": [206, 207], "c_t": 206, "c_": 206, "forget": 206, "1402": 206, "1128": 206, "c_0": [206, 207], "proj": 206, "c_n": 206, "w_ii": 206, "w_if": 206, "w_ig": 206, "w_io": 206, "w_hi": 206, "w_hf": 206, "w_hg": 206, "w_ho": 206, "b_ii": 206, "b_if": 206, "b_ig": 206, "b_io": 206, "b_hi": 206, "b_hf": 206, "b_hg": 206, "b_ho": 206, "weight_hr_l": 206, "_revers": 206, "analog": [206, 358], "cn": 206, "lstm_cell": 207, "h_1": 207, "c_1": 207, "time_step": [207, 246], "cx": 207, "correspont": 208, "recurrent_state_h": [208, 356], "recurrent_state_c": [208, 356], "triplet": [208, 249, 250], "lstm_modul": 208, "rs_h": 208, "rs_c": 208, "hidden0": 208, "hidden1": 208, "single_bias_last_lay": 209, "layer_class": 209, "layer_kwarg": 209, "perceptron": [209, 358], "aslo": 209, "42": [209, 262, 263, 265, 269, 276, 283, 353, 354, 356, 366, 367], "noisylinear": [209, 216, 346, 354], "noisylazylinear": [209, 346], "mpcplanner": 210, "tensordict_out": [210, 372], "mppi": 211, "covari": 211, "william": [211, 282], "aldrich": 211, "theodor": 211, "01149": 211, "hansen": 211, "wang": 211, "su": 211, "04955": 211, "valueoper": [211, 236, 237, 238, 262, 263, 264, 265, 270, 276, 277, 280, 281, 282, 283, 285, 340, 348, 353, 355, 359], "tdlambdaestim": [211, 346, 353], "value_net": [211, 266, 268, 282, 293, 294, 295, 296, 355, 358, 359, 362], "adv": 211, "lmbda": [211, 287, 293, 296, 298, 304, 305, 306, 309, 310, 349, 353, 355, 366], "value_network": [211, 265, 266, 268, 269, 271, 276, 283, 293, 294, 295, 296, 349, 353, 355, 359, 362, 365], "temperatur": [211, 263, 269, 276], "neg_inf": [212, 213], "inf": [212, 213], "api_doc": [212, 213], "tf_agent": [212, 213], "event": [212, 213, 221, 302, 303, 304, 305, 307, 308, 309, 310, 369], "unnorm": [212, 213, 221], "sparse_mask": [212, 213], "dens": [212, 213], "0831": [212, 213], "1203": [212, 213], "0928": [212, 213], "1972": [212, 213], "grad_method": [213, 221], "reparamgradientstrategi": [213, 221], "passthrough": [213, 221], "proxi": [213, 221, 349], "relaxedonehot": [213, 221], "zeros_lik": [213, 367], "sample_non_valid": 213, "centralis": [214, 215, 365, 366], "share_param": [214, 215, 365, 366], "homogen": [214, 215, 365, 366], "agent_network": [214, 215], "modulelist": [214, 215, 371], "2592": [214, 354], "decentralis": [214, 365, 366], "n_agent_input": [215, 365, 366], "n_agent_output": [215, 365, 366], "lazili": [215, 367], "toech": 215, "centalis": 215, "shown": [215, 348, 364, 365, 366, 369], "std_init": [216, 217], "initialize_paramet": 216, "isol": [216, 278], "1706": [217, 232], "10295v3": 217, "induc": 217, "aid": 217, "scale_map": 218, "biased_softplus_1": 218, "scale_lb": [218, 225, 226], "module_norm": 218, "1803": [219, 220, 223], "10122": [219, 220], "rnn_hidden": 219, "latent": 220, "excacli": 221, "inres": 222, "mu": [222, 247, 355], "state_shap": [223, 291], "mixing_embed_dim": [223, 291], "qmix": [223, 365, 366], "mixer": [223, 232, 291], "monoton": 223, "hyper": 223, "11485": 223, "qmixerloss": [223, 232], "qmix_vdn": [223, 232], "vdn": [223, 232], "greedi": [224, 242, 243, 244, 250, 354, 356, 358], "hidden_dim": [225, 226], "posterior": [225, 273], "rssm": [225, 226, 273], "1811": [225, 226], "04551": [225, 226], "obs_embed": 225, "rnn_hidden_dim": 226, "dream": 226, "tanhtransform": 230, "decomposit": 232, "05296": 232, "hide": [233, 355, 365, 366], "satisfi": [233, 348], "vmap_dim": 233, "lam": 233, "sample_in": 233, "sample_in_td": 233, "vm": 233, "translat": [235, 248], "character": [235, 241, 248, 249, 251, 369], "overflow": [235, 241, 242, 248, 249, 250, 251, 252], "td_modul": [235, 236, 237, 238, 248, 251, 252, 254, 256, 358, 371], "3635": 235, "0340": 235, "1476": 235, "3911": [235, 367], "1664": [235, 354, 367], "5455": 235, "2247": 235, "4583": 235, "2916": 235, "2160": 235, "5337": 235, "5193": 235, "grad_fn": [235, 243, 244, 371], "addmmbackward0": 235, "actorvalueoper": [236, 348, 358], "get_policy_oper": [236, 237, 238, 264, 277, 280, 348], "standalon": [236, 237, 238, 358], "tdmodul": [236, 237, 238, 340], "get_critic_oper": 236, "common_oper": [236, 238], "policy_oper": [236, 237, 238], "value_oper": [236, 237, 238], "normalparamwrapp": [236, 237, 238, 248, 254, 262, 263, 270, 276, 280, 281, 282, 283, 285, 346, 371], "module_hidden": [236, 238], "td_module_hidden": [236, 238], "module_act": [236, 238], "td_module_act": [236, 237, 238], "module_valu": [236, 237, 238], "td_module_valu": [236, 237, 238], "state_action_valu": [236, 256, 263, 269, 276, 283, 292, 340, 348, 353, 365, 371], "td_clone": [236, 237, 238], "tensordictmodulewrapp": [236, 335, 336, 340], "get_policy_head": [236, 237, 238], "safesequenti": [236, 237, 238, 291], "head": [236, 238, 259, 264, 277, 280], "get_value_head": [236, 237, 238], "get_value_oper": [236, 237, 238, 264, 277, 280], "action_modul": 237, "state_valu": [237, 238, 256, 264, 269, 276, 277, 280, 281, 283, 293, 294, 295, 296, 298, 300, 302, 304, 306, 307, 309, 348, 353, 355, 366], "qualiti": [238, 348], "actorcriticoper": [238, 264, 277, 280, 348, 358], "embeddig": 238, "refet": 238, "actorcriticwrapp": [238, 348, 353], "po": [239, 244], "sigma_init": [239, 365], "epsilon": [239, 243, 244, 247, 284, 328, 354, 355, 356, 358], "sigma_end": [239, 365], "annealing_num_step": [239, 243, 244, 247, 353, 354, 356, 358, 362, 365], "captur": [239, 243, 244, 247], "omiss": [239, 243, 244, 247], "ommit": [239, 243, 244, 247], "inferec": 240, "set_tensor_kei": 240, "dt_inference_wrapp": 240, "baz": 240, "inference_context": 240, "obs_dim": 240, "tanhdelta": [240, 346, 353, 365], "dtactor": 240, "actor_modul": [240, 371], "dist_class": 240, "dist_kwarg": 240, "distribution_kwarg": [240, 248, 252, 355, 365, 366], "inference_actor": 240, "sequence_length": 240, "mask_context": 240, "out_act": 240, "qvaluemodul": [241, 249, 291, 356, 358, 362], "distributionaldqnnet": 241, "make_log_softmax": 241, "my_action_valu": [242, 250], "chanc": 242, "thid": 242, "eps_init": [243, 244, 247, 354, 356, 358, 362], "eps_end": [243, 244, 247, 354], "explorative_polici": [243, 244, 247], "9055": [243, 244, 367], "9277": [243, 244], "6295": [243, 244], "2532": [243, 244], "addbackward0": [243, 244], "lmheadmodel": 245, "actor_head": [245, 264, 277, 280], "base_model": 245, "lm_head": 245, "macro": 246, "lookahead": 246, "n_action": [246, 263, 266, 268, 279, 283], "reshape_cat": 246, "actor_bas": 246, "obs_cat": 246, "obs_cat_reshap": 246, "action_orig": 246, "counter": [246, 323, 350], "ornstein": [247, 353], "uhlenbeck": [247, 353], "ou": [247, 353], "correl": 247, "noise_t": 247, "noise_": 247, "theta": [247, 355, 367], "sigma_t": 247, "sigma_": 247, "anneal": [247, 354, 358, 365], "ou_prev_nois": 247, "ou_step": 247, "x0": 247, "sigma_min": 247, "n_steps_ann": 247, "is_init_kei": 247, "_ou_prev_nois": 247, "_ou_step": 247, "default_interaction_typ": [248, 252, 358], "interaction_typ": [248, 252], "datacollectorbas": [248, 332, 335, 336, 340, 346], "set_interaction_typ": [248, 252], "cache_dist": [248, 252], "n_empirical_estim": [248, 252], "compound": [248, 358], "compositedistribut": [248, 358], "categ": 248, "distribution_map": 248, "chose": 250, "functionalmodul": 251, "functionalmodulewithbuff": 251, "td_fmodul": 251, "td_function": 251, "td_state": 251, "params_repeat": 251, "td_vmap": [251, 254], "random_sampl": [251, 252], "suppli": 252, "fist": 252, "log_prob_kei": [252, 366], "probabilistictensordictsequenti": [253, 262, 264, 277, 280, 282, 335, 336, 371], "partial_toler": [253, 254, 364], "who": [253, 254], "AND": [253, 254], "tensordictsequenci": 254, "tensordictsequ": 254, "safeprobabilisticmodul": [254, 348], "spec1": 254, "net1": 254, "module1": 254, "td_module1": 254, "spec2": 254, "module2": 254, "td_module2": 254, "clamp": [255, 273, 330, 365, 367], "boundari": [255, 355, 365, 366], "resolut": 255, "9944": 255, "9991": 255, "3020": 255, "2299": [255, 367], "5418": 255, "2989": [255, 357, 359, 360, 361], "6849": 255, "3169": 255, "2690": 255, "9649": [255, 367], "5686": 255, "8602": 255, "0315": 255, "8455": [255, 367], "6027": 255, "4746": 255, "7843": 255, "7782": 255, "2111": [255, 353], "5115": 255, "4687": 255, "5760": 255, "custommodul": 256, "imaginari": 257, "imagin": 257, "transition_model": 257, "get_reward_oper": 257, "get_transition_model_oper": 257, "min_val": [258, 261], "_bia": 258, "surject": 261, "expln": 261, "biased_softplu": [261, 346], "beggin": 261, "biased_softplus_": 261, "syntax": [261, 353], "met": [261, 365, 367], "1602": 262, "01783v2": 262, "actor_network": [262, 263, 264, 265, 267, 269, 270, 276, 277, 279, 280, 281, 282, 283, 285, 353, 355, 359, 365, 366], "critic_network": [262, 264, 277, 280, 282, 355, 366], "entropy_bonu": [262, 264, 277, 280, 355], "favour": [262, 264, 277, 280], "samples_mc_entropi": [262, 264, 277, 279, 280], "mont": [262, 264, 277, 280, 353], "carlo": [262, 264, 277, 280, 353], "entropy_coef": [262, 264, 277, 280, 355, 366], "critic_coef": [262, 264, 277, 280, 355], "loss_critic_typ": [262, 264, 277, 280, 282, 355], "l1": [262, 264, 265, 266, 270, 277, 280, 281, 282, 285, 288, 291, 348, 353], "l2": [262, 264, 265, 266, 267, 268, 270, 273, 274, 277, 280, 281, 282, 285, 288, 291, 353, 365], "smooth_l1": [262, 263, 264, 265, 266, 269, 270, 276, 277, 280, 281, 282, 283, 285, 288, 291, 355], "separate_loss": [262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285], "propag": [262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 293, 294, 295, 296, 355, 365, 366], "advantage_kei": [262, 264, 277, 280, 282, 293, 294, 295, 296], "value_target_kei": [262, 264, 277, 280, 282, 293, 294, 295, 296], "value_target": [262, 264, 277, 280, 282, 293, 294, 295, 296, 355, 366], "ddp": [262, 264, 277, 280, 282], "fsdp": [262, 264, 277, 280, 282], "divid": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285, 333, 348, 353, 365, 366, 367], "clip_valu": [262, 264, 277, 280, 282], "loss_crit": [262, 280, 355, 366], "loss_entropi": [262, 280, 355, 366], "loss_object": [262, 280, 355, 366], "recur": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296, 297, 358], "next_reward": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296], "next_don": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296], "next_termin": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296], "loss_obj": 262, "next_observ": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 364], "sacloss": [262, 275, 284, 346], "select_out_kei": [262, 263, 265, 269, 270, 276, 280, 281, 283, 285], "make_value_estim": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 291, 349, 353, 354, 365, 366, 371], "value_typ": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 291, 353], "hyperparam": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 353], "enum": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 291, 353], "default_value_estim": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 353, 371], "default_value_kwarg": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 346, 353], "dqn_loss": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 291], "td1": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 353], "conserv": [263, 268], "qvalue_network": [263, 269, 270, 276, 281, 283, 285], "loss_funct": [263, 265, 266, 267, 268, 269, 270, 276, 281, 283, 285, 288, 291, 353, 365], "alpha_init": [263, 270, 279, 281, 283], "min_alpha": [263, 270, 279, 281, 283], "max_alpha": [263, 270, 279, 281, 283], "fixed_alpha": [263, 270, 279, 281, 283], "target_entropi": [263, 270, 279, 281, 283], "prod": [263, 279, 283], "delay_actor": [263, 265, 283, 285], "delay_qvalu": [263, 270, 281, 283, 285], "min_q_weight": 263, "max_q_backup": 263, "backup": 263, "deterministic_backup": 263, "num_random": 263, "with_lagrang": 263, "lagrang": 263, "lagrange_thresh": 263, "valueclass": [263, 265, 270, 281, 283, 285], "qvalu": [263, 269, 270, 276, 281, 283, 285], "loss_actor": [263, 265, 269, 270, 276, 281, 282, 283, 285, 325, 353, 359, 365, 371], "loss_actor_bc": 263, "loss_alpha": [263, 270, 281, 283], "loss_cql": [263, 268], "loss_qvalu": [263, 268, 269, 270, 276, 281, 283, 285], "loss_alpha_prim": 263, "clip_epsilon": [264, 355, 366], "normalize_advantag": [264, 277, 280, 366], "value_kei": [264, 277, 280, 293, 294, 295, 296, 353], "somemodul": [264, 277, 280], "someactor": [264, 277, 280], "value_head": [264, 277, 280], "somevalu": [264, 277, 280], "loss_modul": [264, 275, 277, 278, 280, 284, 330, 339, 340, 349, 350, 353, 354, 355, 365, 366, 369], "ppoloss": [264, 277, 346], "delay_valu": [265, 266, 268, 271, 282, 283, 291, 354, 356, 362, 365], "loss_valu": [265, 269, 276, 282, 283, 353, 355, 359, 365, 366, 371], "pred_valu": [265, 268, 285, 353, 359, 371], "pred_value_max": [265, 353, 359, 371], "target_valu": [265, 268, 281, 285, 292, 349, 353, 359, 371], "target_value_max": [265, 353, 359, 371], "qvalueactor": [266, 268, 291, 348, 354, 356], "double_dqn": 266, "06461": [266, 275], "mult_one_hot": [266, 269, 270, 291], "loss_val": [266, 268, 349, 353, 355, 356, 359, 360, 362, 365, 366, 369], "01345": 267, "distanc": [268, 277, 288, 292, 293, 366], "dcql_loss": 268, "2110": [269, 276], "06169": [269, 276], "num_qvalue_net": [269, 270, 276, 281, 283, 285], "expectil": [269, 276], "tau": [269, 276, 284, 353, 354, 365], "antmaz": [269, 276], "sticht": [269, 276], "onehotcategor": [269, 270, 346], "target_entropy_weight": 270, "disctount": 271, "distributionalqvalueactor": [271, 348], "input_tensordict": [271, 353], "actor_model": 272, "value_model": [272, 274], "imagination_horizon": 272, "unrol": [272, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310], "discount_loss": [272, 274], "lambda_kl": 273, "lambda_reco": 273, "lambda_reward": 273, "reco_loss": 273, "reward_loss": 273, "free_nat": 273, "nat": 273, "delayed_clamp": 273, "global_averag": 273, "value_loss": 274, "fake_data": 274, "ddpgloss": [275, 284, 340, 346, 353, 359, 365, 371], "td3loss": [275, 284, 346], "value_network_update_interv": 275, "qvalueclass": 276, "loss_value_diff": 276, "diff": 276, "old_polici": 277, "new_polici": 277, "apart": [277, 366], "dtarg": 277, "samples_mc_kl": 277, "analyt": 277, "decrement": 277, "loss_": [278, 325, 349, 353, 359], "equip": [278, 356, 358], "gh": 278, "_acceptedkei": 278, "dataclass": 278, "_forward_value_estimator_kei": 278, "alter": [278, 348], "value_estim": [278, 293, 294, 295, 296, 297, 349, 353, 366], "myloss": 278, "action2": 278, "convert_to_funct": [278, 353], "expand_dim": 278, "create_target_param": [278, 353], "compare_against": [278, 353], "_param": 278, "expans": 278, "resampl": 278, "_target_param": 278, "blend": 278, "proxim": [280, 355, 366], "optimis": [280, 326, 355, 365, 366], "flavour": [280, 365, 366, 371], "clipppoloss": [280, 346, 355, 366], "klpenppoloss": [280, 346], "regularis": 280, "06347": 280, "gae": [280, 346, 349, 353, 355, 366], "ppo_loss": 280, "tdlambda": [280, 287, 349, 353], "base_lay": 280, "randn_lik": 280, "samplelogprob": 280, "openreview": 281, "ay8zfzm0tdd": 281, "sub_sample_len": 281, "subsampl": [281, 321, 350], "action_log_prob_actor": 281, "state_action_value_actor": [281, 285], "connectionist": 282, "1992": 282, "doi": 282, "1007": 282, "bf00992696": 282, "actor_net": [282, 353, 355], "1801": 283, "01290": 283, "applic": [283, 291, 357, 358, 367], "1812": 283, "05905": 283, "redqloss": [284, 346], "math": 284, "theta_t": [284, 367], "theta_": [284, 367], "polyak": 284, "policy_nois": 285, "noise_clip": 285, "next_state_valu": [285, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 346], "td0": [286, 353, 365], "strict_shap": 288, "view_a": 288, "qmixer": [291, 346], "local_valu": 291, "visibl": [291, 366], "dafault": 291, "acceptedkei": 291, "global_valu": 291, "penultim": 291, "local_value_network": 291, "mixer_network": 291, "value_modul": [291, 355, 371], "qnet": [291, 353], "next_val_kei": 292, "pred_next_v": 292, "usus": 292, "mse": 292, "q_valu": 292, "n_steps_to_next": 292, "value_next_st": 292, "1506": [293, 298, 306], "02438": [293, 298, 306], "exponenti": [293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 328], "average_ga": [293, 355], "skip_exist": [293, 294, 295, 296], "time_dim": [293, 295, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310], "advang": 293, "gradient_mod": 293, "value_error": [293, 294, 295, 296, 297], "target_param": [293, 294, 295, 296, 297, 353, 366], "98": [293, 294, 295, 296, 353, 354, 367, 368], "94": [293, 296, 354, 365, 367, 368], "unpack": [293, 294, 295, 296], "tensor_kei": [293, 294, 295, 296, 297], "next_valu": [293, 294, 295, 296, 297], "aka": [294, 354, 365], "average_reward": [294, 295, 296], "tdestim": [294, 295, 297], "infti": 295, "valuefunctionbas": 297, "old_stat": [298, 300, 302, 304, 306, 307, 309], "new_stat": [298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "rolling_gamma": [302, 303, 304, 305, 307, 308, 309, 310], "g1": [302, 303, 304, 305, 307, 308, 309, 310], "g2": [302, 303, 304, 305, 307, 308, 309, 310], "g3": [302, 303, 304, 305, 307, 308, 309, 310], "g4": [302, 303, 304, 305, 307, 308, 309, 310], "v3": [302, 303, 304, 305, 307, 308, 309, 310], "preproc": [311, 365], "as_non_tensor": [311, 365], "render_method": 311, "pass_tensordict": 311, "syntat": 311, "sugar": 311, "out_file_bas": 312, "skip_reset": 312, "interv": [312, 313, 322, 332, 354, 367], "center_crop": 313, "make_grid": 313, "csv": [313, 315, 317, 354, 361, 362], "wandb": [313, 317, 320, 361, 371], "tensorboard": [313, 317, 319, 361, 371], "exp_nam": [313, 314, 315, 318, 319, 320, 340, 354, 361, 362], "log_dir": [313, 314, 315, 317, 319, 320, 354, 362], "cheetah_video": 313, "run_video": 313, "openxexperiencereplai": 313, "run_video_0": 313, "templat": 314, "pt": [315, 350, 368], "video_fp": 315, "minim": [315, 369], "dependeci": 315, "cur_dir": 315, "csv_log": 315, "video_": 315, "experiment_nam": [316, 317], "uuid": [316, 354, 372], "logger_typ": 317, "logger_nam": 317, "mlflow": [317, 318], "wandb_kwarg": 317, "mlflow_kwarg": 317, "tracking_uri": 318, "uri": 318, "datastor": 318, "tb_log": 319, "tensoarboard": 319, "td_log": 319, "save_dir": 320, "resum": 320, "uncategor": 320, "sub_traj_len": 321, "min_sub_traj_len": 321, "register_op": [321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 350, 354], "process_optim_batch": [321, 327, 328, 350], "td_out": [321, 329], "_process_optim_batch_hook": [321, 350], "batch_subsampl": 321, "clear_cuda": 322, "pre_optim_step": [322, 350], "log_pbar": [323, 324, 326, 328, 350, 354], "progress": [323, 324, 326, 330, 350, 354, 356, 372], "count_fram": 323, "pre_steps_log": [323, 324, 350], "count_frames_log": 323, "lognam": 324, "r_train": [324, 354], "log_reward": [324, 354], "loss_compon": 325, "appl": 325, "optimizer_hook": 325, "record_interv": [326, 353, 354], "record_fram": [326, 333, 353, 354], "policy_explor": [326, 340, 353, 354, 358, 362], "log_kei": [326, 354], "suffix": 326, "underestim": 326, "set_exploration_typ": [326, 346, 355, 356, 358, 365, 371], "r_evalu": [326, 353], "flatten_tensordict": [327, 354], "max_dim": 327, "rb_trainer": 327, "batch_process": [327, 328, 329, 350], "post_loss": [327, 350], "999": [328, 354], "jitter": 328, "finfo": 328, "default_dtyp": 328, "get_default_dtyp": 328, "reward_norm": 328, "update_reward_stat": 328, "normalize_reward": 328, "make_train": [329, 346], "_process_batch_hook": [329, 350], "select_kei": [329, 350], "versatil": [330, 357], "optim_steps_per_batch": [330, 350, 354], "clip_grad_norm": 330, "clip_norm": 330, "progress_bar": 330, "save_trainer_interv": 330, "log_interv": [330, 354], "save_trainer_fil": [330, 350], "update_weights_interv": [332, 354], "update_weight": 332, "post_step": [332, 350, 354], "cfg": [333, 334, 335, 336, 337, 338, 339, 340, 341, 344], "dictconfig": [333, 334, 335, 336, 338, 339, 340, 341, 344], "unknowingli": 333, "annealing_fram": [333, 353], "init_env_step": [333, 334, 353], "proof_environ": [334, 353], "sta": 334, "ot": 334, "actor_model_explor": [335, 336, 353], "make_env_kwarg": [335, 336], "targetnetupdat": [337, 339, 340], "replayargsconfig": 338, "target_net_updat": [340, 353, 354], "constitu": 340, "egreedywrapp": 340, "env_proof": 340, "obs_spec": 340, "net_valu": 340, "dir": [340, 350, 354], "gettempdir": 340, "argpars": [341, 344], "namespac": [341, 344], "parser": [341, 344], "transformed_env_constructor": [341, 346], "num_env_per_collector": [342, 343], "video_tag": 344, "norm_obs_onli": 344, "use_env_cr": 344, "custom_env_mak": 344, "custom_env": 344, "return_transformed_env": 344, "action_dim_gsd": 344, "state_dim_gsd": 344, "obs_norm_state_dict": 344, "wheter": 344, "maker": [344, 354], "asyncdatacollector": 346, "distributedsyncdatacollector": 346, "submitit_delayed_launch": 346, "raycollector": 346, "rational": 346, "behind": 346, "footnot": 346, "nontensorspec": 346, "unboundeddiscretetensorspec": [346, 372], "lazystackedtensorspec": 346, "lazystackedcompositespec": 346, "prompttensordicttoken": 346, "rolloutfrommodel": 346, "tokenizeddatasetload": 346, "create_infinite_iter": 346, "constantklcontrol": 346, "adaptiveklcontrol": 346, "consolidate_spec": 346, "check_no_exclusive_kei": 346, "contains_lazy_spec": 346, "check_marl_group": 346, "get_available_librari": 346, "make_composite_from_td": [346, 367], "set_exploration_mod": 346, "terminated_or_trunc": 346, "dreamerdecod": 346, "braxwrapp": 346, "dmcontrolwrapp": 346, "jumanjienv": 346, "jumanjiwrapp": 346, "meltingpotenv": 346, "meltingpotwrapp": 346, "mogymenv": 346, "mogymwrapp": 346, "multithreadedenvwrapp": 346, "openmlenv": 346, "pettingzooenv": [346, 365], "robohiveenv": 346, "smacv2env": 346, "smacv2wrapp": 346, "vmaswrapp": 346, "qvaluehook": 346, "distributionalqvaluehook": 346, "reset_nois": 346, "cemplann": 346, "mpcplannerbas": 346, "mppiplann": 346, "independentnorm": 346, "truncatednorm": 346, "maskedonehotcategor": 346, "inv_softplu": 346, "vmapmodul": 346, "distributionaldqnloss": [346, 354], "discretesacloss": 346, "iqlloss": 346, "discreteiqlloss": 346, "cqlloss": 346, "discretecqlloss": 346, "dtloss": 346, "onlinedtloss": 346, "a2closs": 346, "reinforceloss": 346, "dreameractorloss": 346, "dreamermodelloss": 346, "dreamervalueloss": 346, "td0estim": [346, 353], "td1estim": [346, 353], "td0_return_estim": 346, "td0_advantage_estim": 346, "td1_return_estim": 346, "vec_td1_return_estim": 346, "td1_advantage_estim": 346, "vec_td1_advantage_estim": 346, "td_lambda_return_estim": 346, "vec_td_lambda_return_estim": 346, "td_lambda_advantage_estim": 346, "vec_td_lambda_advantage_estim": 346, "generalized_advantage_estim": 346, "vec_generalized_advantage_estim": 346, "reward2go": 346, "distance_loss": [346, 353], "hold_out_net": 346, "hold_out_param": [346, 353], "softupd": [346, 353, 354, 356, 359, 362, 365], "hardupd": [346, 353, 359], "batchsubsampl": [346, 350], "clearcudacach": 346, "countframeslog": 346, "logreward": [346, 350, 354], "optimizerhook": [346, 354], "replaybuffertrain": [346, 350, 354], "rewardnorm": 346, "selectkei": [346, 350], "trainerhookbas": [346, 350, 354], "updateweight": [346, 350, 354], "make_collector_offpolici": 346, "make_collector_onpolici": 346, "make_dqn_loss": 346, "make_replay_buff": [346, 353], "make_target_updat": 346, "parallel_env_constructor": [346, 353], "sync_async_collector": 346, "sync_sync_collector": 346, "correct_for_frame_skip": 346, "get_stats_random_rollout": 346, "mlflowlogg": 346, "get_logg": 346, "generate_exp_nam": 346, "journei": 347, "textbook": 347, "highlight": [347, 365], "ever": [347, 366], "bump": 347, "think": [347, 355, 365, 366, 372], "benefit": [347, 357, 365, 366, 369], "pr": 347, "ground": [348, 353, 367], "recycl": [348, 369], "impos": 348, "violat": 348, "noisier": 348, "Their": [348, 365, 366], "sd": 348, "prob_modul": 348, "pick": [348, 353, 354, 358], "hopefulli": [348, 354], "functional_modul": 348, "make_funct": 348, "mathbb": [348, 354], "rightarrow": [348, 354], "soften": 348, "backbon": [348, 356, 358, 364, 371], "make_actor": 348, "make_valu": 348, "shared_param": 348, "make_common": 348, "reusabl": [349, 353, 369], "swappabl": [349, 353], "characterist": [349, 353, 367], "trainabl": [349, 353, 359, 368], "whatev": [349, 353], "smth": [349, 353], "metric": [349, 353], "nutshel": [349, 353], "barto": [349, 365, 366], "chapter": [349, 361], "significantli": [349, 353, 354, 359, 366], "next_stat": 349, "value_net_loss": 349, "pow": [349, 353], "room": 349, "signifi": [349, 365, 366], "underperform": 349, "thin": 349, "intric": [349, 358], "believ": 350, "scheme": [350, 372], "substenti": 350, "_pre_steps_log_hook": 350, "_pre_optim_hook": 350, "sub_batch": 350, "_post_loss_hook": 350, "_post_optim_hook": 350, "post_optim": [350, 354], "_post_optim_log": 350, "post_optim_log": 350, "_post_steps_hook": 350, "_post_steps_log_hook": 350, "post_steps_log": 350, "reserv": 350, "logginghook": 350, "logging_hook": 350, "save_dict": 350, "some_valu": 350, "torchsnapshot": 350, "ckpt_backend": 350, "filepath": 350, "save_train": 350, "load_from_fil": 350, "883": [352, 370], "galleri": [352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372], "mem": [352, 370], "mb": [352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372], "torchrl_demo": [352, 370, 371], "54": [352, 354, 367, 368, 370, 371], "026": [352, 370, 371], "torchrl_env": [352, 370, 372], "858": [352, 370, 372], "rb_tutori": [352, 369, 370], "coding_dqn": [352, 354, 370], "43": [352, 354, 357, 367, 369, 370], "155": [352, 354, 367, 370], "720": [352, 370], "051": [352, 367, 370], "dqn_with_rnn": [352, 356, 370], "921": [352, 356, 367, 370], "1597": [352, 356, 370], "multiagent_ppo": [352, 366, 370], "589": [352, 366, 367, 370], "coding_ddpg": [352, 353, 370], "58": [352, 353, 354, 367, 370], "753": [352, 353, 364, 370], "multiagent_competitive_ddpg": [352, 365, 370], "498": [352, 365, 367, 370], "coding_ppo": [352, 355, 370], "238": [352, 355, 367, 370], "pretrained_model": [352, 368, 370], "970": [352, 368, 370], "3715": [352, 370], "multi_task": [352, 364, 370], "49": [352, 353, 354, 364, 366, 367, 368, 370], "47": [352, 353, 354, 358, 367, 370], "950": [352, 358, 370], "373": [352, 357, 367, 370], "698": [352, 359, 370], "049": [352, 362, 370], "979": [352, 360, 370], "766": [352, 361, 370], "author": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 372], "vincent": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 369, 372], "moen": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 367, 369, 372], "assembl": 353, "focus": [353, 359], "straightforward": [353, 354, 357, 358, 359, 360, 369], "maxim": [353, 359, 367], "transpar": [353, 356], "illustr": [353, 354, 358, 369], "bash": 353, "is_fork": [353, 354, 355, 356, 365, 366, 368], "get_start_method": [353, 354, 355, 356, 365, 366, 368], "is_avail": [353, 354, 355, 356, 365, 366, 368], "collector_devic": 353, "loss_dict": 353, "oblivi": [353, 355, 369], "elementari": 353, "didact": 353, "dilut": 353, "pessimist": [353, 354, 355], "target_actor_network_param": 353, "actor_in_kei": 353, "actor_crit": 353, "noth": [353, 355], "compromis": 353, "hp": 353, "hasattr": 353, "_value_estim": 353, "elif": [353, 354], "notimplementederror": 353, "unknown": 353, "ifgg": 353, "_loss_actor": 353, "td_copi": 353, "actor_network_param": [353, 365], "value_network_param": [353, 365], "_loss_valu": 353, "pred_val": 353, "target_value_network_param": 353, "glue": 353, "_forward": 353, "ndimens": 353, "remaind": 353, "focu": [353, 354, 355, 358, 359, 360, 365], "env_librari": 353, "env_task": 353, "env_arg": [353, 354], "friendli": 353, "torchr": 353, "rescal": 353, "presum": 353, "make_transformed_env": 353, "reward_sc": 353, "marker": 353, "env_per_collector": 353, "transform_state_dict": 353, "make_t_env": 353, "cheat": 353, "10m": 353, "cautiou": 353, "magnitud": [353, 365], "thousand": [353, 356], "get_env_stat": 353, "proof_env": 353, "5000": [353, 354, 355, 362], "recal": [353, 355, 369], "ddpgmlpactor": 353, "ddpgmlpqnet": 353, "materi": 353, "ornsteinuhlenbeckprocesswrapp": [353, 358], "make_ddpg_actor": 353, "q_net": 353, "tight": 353, "decoupl": [353, 359], "10_000": [353, 355], "traj_len": [353, 356], "make_record": 353, "recorder_obj": 353, "flavor": 353, "circular": 353, "buffer_s": [353, 354], "random_crop_len": 353, "prb": 353, "buffer_scratch_dir": 353, "temporari": 353, "25": [353, 354, 355, 356, 365, 367], "dataflow": 353, "ceil_div": 353, "utd": [353, 356], "update_to_data": 353, "realiz": 353, "_must_": 353, "001": [353, 367], "outdat": 353, "trick": [353, 354], "despit": 353, "adam": [353, 354, 355, 356, 359, 362, 365, 366, 367], "optimizer_actor": 353, "lr": [353, 354, 355, 356, 362, 365, 366, 367], "weight_decai": [353, 354], "optimizer_valu": 353, "total_collection_step": 353, "pretti": [353, 357, 361, 369], "rewards_ev": 353, "collected_fram": 353, "r0": 353, "numel": [353, 355, 356, 362, 365, 368, 369], "current_fram": [353, 365], "sampled_tensordict": 353, "gn1": 353, "clip_grad_norm_": [353, 355, 365, 366, 367], "gn2": 353, "gn": [353, 367], "td_record": 353, "rn": 353, "set_descript": [353, 355, 356, 365, 366, 367], "2f": 353, "800": [353, 354], "3079": 353, "87it": [353, 354, 355, 367], "1600": [353, 354], "947": [353, 367], "48it": [353, 354, 367], "2400": [353, 354], "1410": 353, "04it": [353, 354, 355, 367], "3200": [353, 354], "1833": 353, "72it": 353, "4000": [353, 354, 355], "48": [353, 354, 367, 368], "4800": [353, 354, 367], "2346": 353, "76it": [353, 354, 367], "56": [353, 354, 366, 367, 369], "5600": 353, "2507": 353, "80it": [353, 354, 367], "260": [353, 367], "6400": [353, 371], "830": 353, "24it": [353, 354, 356], "72": [353, 354, 367, 368], "216": [353, 367, 369], "7200": 353, "07": [353, 354, 365, 366, 367], "521": [353, 367], "02it": 353, "51": [353, 354, 355, 367], "124": [353, 356, 367], "45": [353, 354, 356, 367], "267": [353, 367], "59": [353, 354, 356, 367, 368, 369], "09": [353, 354, 365, 366, 367], "8000": [353, 355], "415": [353, 367], "75it": [353, 354, 367], "97": [353, 354, 367, 368], "93": [353, 354, 367], "8800": 353, "366": [353, 367], "27it": [353, 354, 367], "92": [353, 354, 367, 368], "201": [353, 367], "52": [353, 354, 365, 367, 368], "290": [353, 367], "96": [353, 354, 367, 368], "9600": 353, "66it": [353, 354, 367], "57": [353, 354, 365, 367, 368], "133": [353, 367], "219": [353, 367], "68": [353, 354, 367, 368], "10400it": 353, "285": [353, 367], "28it": [353, 355], "208": [353, 367], "209": [353, 367], "82": [353, 354, 355, 367], "plot": [353, 355, 356, 365, 366, 367], "mention": [353, 356, 369, 372], "matplotlib": [353, 355, 356, 365, 366, 367, 369, 372], "pyplot": [353, 355, 356, 365, 366, 367, 369, 372], "plt": [353, 355, 356, 365, 366, 367, 369, 372], "zip": [353, 363], "legend": [353, 365], "xlabel": [353, 356, 366, 367], "ylabel": [353, 366], "tight_layout": 353, "concret": [353, 355], "takeawai": [353, 354], "distpatch": 353, "jupyt": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372], "ipynb": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372], "sphinx": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372], "customis": [354, 365, 366], "road": 354, "aspect": [354, 359], "highest": [354, 358], "prerequisit": [354, 356], "lookup": 354, "amort": [354, 355], "cart": 354, "pole": 354, "un": 354, "actuat": 354, "frictionless": 354, "duelingcnndqnet": 354, "egreedymodul": [354, 356, 358, 362], "is_notebook": 354, "shell": 354, "get_ipython": 354, "__class__": 354, "zmqinteractiveshel": 354, "qtconsol": 354, "terminalinteractiveshel": 354, "ipython": [354, 366, 367], "nameerror": [354, 365], "umbrella": 354, "misplac": 354, "misus": 354, "orchestr": [354, 359, 361], "five": 354, "64x64": 354, "motion": [354, 367], "obs_norm_sd": 354, "mp_context": 354, "simpler": [354, 357], "get_norm_stat": 354, "test_env": 354, "make_model": 354, "dummy_env": 354, "init_bia": 354, "exploration_modul": [354, 356, 358, 362], "eps_greedy_v": 354, "eps_greedy_val_env": 354, "actor_explor": 354, "get_replay_buff": 354, "n_optim": [354, 359, 360], "themselv": 354, "parametriz": 354, "simplic": [354, 355, 360, 368, 369, 371], "get_collector": 354, "cl": 354, "data_collector": 354, "bunch": 354, "power": 354, "ubiquit": [354, 357], "get_loss_modul": 354, "target_updat": [354, 365], "995": [354, 367], "variat": 354, "2e": [354, 367], "wd": 354, "upd": 354, "harder": [354, 371], "5_000": 354, "500000": 354, "100000": 354, "005": [354, 365], "mandatori": [354, 355, 366, 367], "fairer": 354, "budget": 354, "dqn_exp_": 354, "uuid1": [354, 372], "9895": 354, "0737": 354, "registr": 354, "cumbersom": 354, "buffer_hook": 354, "weight_updat": 354, "aliv": 354, "total_reward": 354, "10it": 354, "3688": [354, 367], "9259": 354, "64it": [354, 367], "3323": 354, "94it": [354, 367], "3232": [354, 367], "93it": [354, 355, 367], "41it": 354, "4295": [354, 367], "224": [354, 367], "47it": 354, "97it": [354, 367], "3991": 354, "288": [354, 367], "37it": 354, "69": [354, 367], "69it": [354, 367], "352": [354, 367], "76": [354, 367, 368, 369], "31it": 354, "384": [354, 367], "77": [354, 367, 368], "89it": [354, 367], "3869": 354, "416": [354, 367], "42it": 354, "448": [354, 367], "83": [354, 367, 368], "3778": 354, "480": [354, 367, 368], "53": [354, 367], "83it": [354, 367], "32it": 354, "544": [354, 367], "33it": 354, "3475": 354, "576": [354, 367], "07it": 354, "3657": [354, 367], "608": [354, 367], "85": [354, 367], "23it": [354, 356], "640": 354, "672": 354, "77it": [354, 367], "704": 354, "34it": 354, "3718": 354, "736": 354, "768": 354, "60it": [354, 367], "65it": 354, "832": 354, "40it": 354, "864": 354, "16it": [354, 367], "896": 354, "928": 354, "30it": [354, 367], "960": 354, "68it": 354, "992": [354, 367], "56it": 354, "58it": 354, "1056": 354, "78it": [354, 367], "4173": 354, "1088": 354, "90": [354, 355, 365, 366, 367, 369], "1120": 354, "54it": 354, "1152": 354, "89": [354, 367, 368, 369], "1184": 354, "49it": 354, "1216": 354, "1248": 354, "52it": 354, "4021": 354, "1280": 354, "21it": [354, 367], "1344": 354, "29it": [354, 367], "1376": 354, "1408": 354, "1440": 354, "91": [354, 367], "81it": [354, 367], "4082": [354, 367], "1472": 354, "45it": [354, 367], "1504": 354, "35it": 354, "1536": 354, "1568": 354, "90it": [354, 356, 367], "1632": 354, "1696": 354, "1728": 354, "1760": 354, "53it": 354, "1792": 354, "61it": [354, 355, 367], "1824": 354, "1856": 354, "43it": 354, "1888": 354, "67it": [354, 367], "1920": 354, "55it": 354, "1952": 354, "1984": 354, "2016": 354, "2048": [354, 368], "2080": 354, "2112": [354, 367], "22it": 354, "2144": 354, "44it": [354, 356], "2176": 354, "2208": 354, "2240": 354, "18it": 354, "2272": 354, "03it": 354, "2336": 354, "98it": [354, 367], "2368": 354, "38it": 354, "2432": 354, "82it": [354, 367], "2464": 354, "2496": 354, "2528": [354, 367], "2560": 354, "14it": 354, "2624": 354, "73it": 354, "2656": [354, 367], "2688": 354, "2720": [354, 367], "55": [354, 367], "2752": 354, "08it": 354, "2784": 354, "2816": 354, "2848": 354, "2880": 354, "2912": 354, "2944": [354, 367], "60": [354, 355, 365, 366, 367, 371], "2976": [354, 367], "96it": [354, 367], "91it": [354, 367], "61": [354, 367, 368], "3040": 354, "3072": 354, "59it": [354, 367], "62": [354, 365, 367, 368], "3104": 354, "63": [354, 367], "3136": 354, "15it": 354, "3168": 354, "46it": [354, 367], "65": [354, 365, 367, 368], "1111": 354, "3264": 354, "66": [354, 367], "3296": 354, "67": [354, 364, 365, 367], "3328": 354, "3360": 354, "25it": [354, 367], "3392": 354, "3424": 354, "3456": [354, 367], "70": [354, 355, 365, 366, 367], "3488": 354, "63it": [354, 355], "3520": 354, "71": [354, 367, 368], "86it": [354, 355, 367], "3552": 354, "36it": [354, 367], "3584": 354, "74it": 354, "3616": 354, "73": [354, 367, 368], "3648": 354, "74": [354, 367, 369], "3680": 354, "3712": 354, "3744": 354, "3776": 354, "3808": 354, "3840": 354, "3872": 354, "19it": 354, "78": [354, 367], "3904": 354, "79": [354, 367, 368, 369], "3936": 354, "3968": 354, "4032": 354, "4064": 354, "4051": 354, "4096": 354, "4128": [354, 367], "13it": 354, "4160": 354, "79it": [354, 367], "4192": 354, "4224": 354, "99it": [354, 367], "4256": [354, 367], "95it": [354, 367], "4288": [354, 367], "4320": 354, "92it": [354, 367], "4352": 354, "09it": 354, "4384": 354, "4416": 354, "26it": [354, 367], "4448": 354, "4480": 354, "4512": 354, "57it": 354, "4544": 354, "4576": 354, "4608": 354, "4640": 354, "4672": [354, 367], "4704": 354, "4736": 354, "4768": 354, "88it": [354, 367], "4832": 354, "12it": 354, "4864": 354, "39it": 354, "4896": 354, "50it": 354, "4928": 354, "4960": 354, "4992": 354, "5024it": 354, "print_csv_files_in_fold": 354, "folder_path": 354, "csv_file": 354, "output_str": 354, "dirpath": 354, "endswith": 354, "strip": 354, "tmp": [354, 369], "tmpxj2m5y5i": 354, "dqn_exp_4dbce846": 354, "0bc0": 354, "11ef": [354, 372], "8d42": [354, 372], "0242ac110002": [354, 372], "39912936091423035": 354, "39912933111190796": 354, "42945271730422974": 354, "40816524624824524": 354, "18674567341804504": 354, "29162728786468506": 354, "19009381532669067": 354, "2882998585700989": 354, "2517382502555847": 354, "27001553773880005": 354, "40991583466529846": 354, "389102965593338": 354, "3620031177997589": 354, "grad_norm_0": 354, "8979103565216064": 354, "4094583988189697": 354, "422654628753662": 354, "407569646835327": 354, "593309164047241": 354, "253044605255127": 354, "04334020614624": 354, "23225212097168": 354, "409215450286865": 354, "10000000894069672": 354, "11111068725586": 354, "qvaluenetwork": 354, "worst": 354, "accuraci": 354, "fanci": [354, 360], "721": 354, "talk": 355, "repetit": [355, 357, 360], "six": 355, "sophist": [355, 366], "invent": 355, "overview": [355, 359, 365, 366, 371], "theta_k": 355, "pi_": 355, "exceed": 355, "discourag": [355, 367], "indispens": 355, "analyz": 355, "lingua": 355, "franca": 355, "defaultdict": [355, 367], "3e": [355, 356, 365, 366], "max_grad_norm": [355, 365, 366], "sub_batch_s": 355, "num_epoch": [355, 366], "entropy_ep": [355, 366], "charact": 355, "inverteddoublependulum": 355, "transmit": 355, "stai": 355, "supplementari": [355, 372], "told": 355, "confid": [355, 365, 366], "ran": 355, "f_": 355, "mu_": 355, "difficulti": [355, 372], "d_ob": 355, "d_action": 355, "policy_modul": [355, 365, 366], "That": [355, 365], "said": 355, "briefli": [355, 365, 366], "refil": [355, 366], "conveni": [355, 365, 366, 367, 369], "easiest": [355, 359, 365, 366], "mathemat": [355, 365, 366], "tradeoff": [355, 366], "advantage_modul": 355, "lr_schedul": [355, 367], "cosineannealinglr": [355, 367], "eval_str": 355, "tensordict_data": [355, 366], "data_view": [355, 366], "subdata": [355, 365, 366], "cum_reward_str": 355, "4f": [355, 356, 367], "stepcount_str": 355, "param_group": [355, 365], "lr_str": 355, "eval_rollout": 355, "nice": [355, 357, 360], "459": [355, 367], "8786": 355, "0786": 355, "0003": [355, 367], "460": [355, 367], "1178": 355, "3000": 355, "462": [355, 367], "71it": [355, 367], "1491": 355, "467": [355, 367], "11it": 355, "1861": 355, "0002": [355, 367], "470": [355, 367], "2132": 355, "6000": 355, "472": [355, 367], "2375": 355, "7000": 355, "474": [355, 367], "2456": 355, "463": [355, 367], "2583": 355, "9000": 355, "469": [355, 367], "05it": 355, "2579": 355, "471": [355, 367], "2584": 355, "cap": [355, 369], "figsiz": [355, 367], "subplot": [355, 365, 367, 372], "titl": [355, 356, 366, 367], "bit": [355, 356, 357, 365, 366, 369], "84x84": 356, "accessori": 356, "stamp": 356, "assist": 356, "emb": 356, "n_cell": 356, "customiz": 356, "wouldn": 356, "qval": 356, "stoch_polici": 356, "opportun": [356, 365], "uniniti": 356, "again": [356, 357, 358, 360, 366, 368, 369, 372], "redund": 356, "strongli": 356, "sake": [356, 368, 369], "20_000": [356, 367], "longest": 356, "npai": 356, "action_spread": 356, "150": [356, 367], "topic": [357, 358, 359], "straight": 357, "backtrack": 357, "encapsul": [357, 358, 359], "deprecationwarn": [357, 359, 360, 361], "reset_with_act": 357, "9039": 357, "tp": 357, "stepped_data": 357, "spatial": 357, "useless": 357, "policyless": 357, "appreci": 357, "monitor": 357, "examin": [357, 365], "tackl": 358, "delv": 358, "bypass": 358, "extractor": 358, "palliat": 358, "additivegaussianwrapp": [358, 365], "had": [358, 360], "exploration_polici": [358, 365], "greedili": 358, "2d": [358, 365, 366], "innov": [358, 359], "rollout_explor": 358, "sole": 359, "tradit": [359, 365], "supervis": [359, 360, 369, 372], "n_collect": 359, "get_next_batch": 359, "ddpg_loss": 359, "total_loss": 359, "prove": 359, "reliev": 359, "concern": 359, "accustom": 360, "surprisingli": 360, "fundament": 360, "augment": [360, 362, 369], "art": 360, "pseudo": [360, 367], "multirpocess": 360, "countless": 360, "yourself": [360, 365, 366], "lightweight": 361, "portabl": 361, "everywher": 361, "hyperapamet": 361, "my_exp": 361, "log_scalar": 361, "elaps": 361, "my_scalar": 361, "saw": [361, 367, 369], "my_video": 361, "record_env": [361, 362], "lesson": 362, "voluntarili": 362, "refresh": [362, 365, 366], "value_mlp": 362, "100_000": 362, "init_rand_step": 362, "training_loop": 362, "video_record": 362, "arbitrarili": 362, "total_count": 362, "total_episod": 362, "t0": 362, "t1": 362, "conclud": [362, 368], "tutorials_python": 363, "tutorials_jupyt": 363, "env1_obs_kei": 364, "observation_stand": 364, "env2_obs_kei": 364, "observation_walk": 364, "tdreset1": 364, "tdreset2": 364, "lazy_stack": 364, "policy_common": 364, "policy_stand": 364, "policy_walk": 364, "But": 364, "env1_mak": 364, "env2_mak": 364, "_single_task": 364, "td_rollout": 364, "matteo": [365, 366], "bettini": [365, 366], "simple_tag": 365, "maddpg": [365, 366], "multiagentparticleenviron": 365, "mpe": 365, "tie": [365, 366], "iddpg": [365, 366], "typical": 365, "richard": 365, "andrew": 365, "mit": 365, "press": 365, "2018": 365, "mathbf": [365, 366], "pi": [365, 366, 367], "literatur": [365, 366], "overcom": [365, 366], "stationari": [365, 366], "concurr": [365, 366], "establish": 365, "gui": [365, 366], "multiagentmlp": [365, 366], "is_sphinx": 365, "__sphinx_build__": 365, "team": [365, 366, 371], "n_iter": [365, 366], "evad": 365, "iteration_when_stop_training_evad": 365, "memory_s": 365, "n_optimiser_step": 365, "train_batch_s": 365, "polyak_tau": 365, "chaser": 365, "red": 365, "circl": [365, 366], "touch": [365, 367], "penal": 365, "acceler": [365, 366], "obstacl": 365, "drag": [365, 366], "elast": [365, 366], "collis": [365, 366], "imped": 365, "n_chaser": 365, "n_evad": 365, "n_obstacl": 365, "use_vma": 365, "simple_tag_v3": 365, "num_good": 365, "num_adversari": 365, "num_obstacl": 365, "max_cycl": 365, "num_vmas_env": [365, 366], "num_good_ag": 365, "num_landmark": 365, "adversary_1": 365, "four": [365, 366, 367], "n_agents_in_that_group": 365, "stress": [365, 366], "paramount": [365, 366], "n_rollout_step": [365, 366], "evolut": [365, 366], "group_nam": 365, "n_agents_in_group": 365, "minor": 365, "agents_exploration_polici": 365, "utilis": [365, 366], "withing": 365, "n_obs_per_ag": [365, 366], "n_actions_per_ag": [365, 366], "share_parameters_polici": [365, 366], "policy_net": [365, 366], "_agent": 365, "carefulli": [365, 366, 372], "grant": [365, 366], "converg": [365, 366], "share_parameters_crit": [365, 366], "obs_act": 365, "cat_modul": 365, "critic_modul": 365, "fantast": [365, 366], "reset_td": 365, "interfer": 365, "flatten_kei": 365, "process_batch": 365, "group_shap": 365, "get_item_shap": [365, 366], "nested_done_kei": 365, "nested_terminated_kei": 365, "desc": [365, 366], "episode_reward_mean_": 365, "episode_reward_mean_map": 365, "train_group_map": 365, "deepcopi": 365, "group_batch": 365, "_group": 365, "loss_nam": 365, "episode_reward_mean": [365, 366], "episode_reward_mean_adversari": 365, "episode_reward_mean_ag": 365, "proce": 365, "screen": 365, "fig": 365, "set_ylabel": 365, "axvlin": 365, "color": 365, "orang": 365, "set_xlabel": 365, "video_logg": 365, "vmas_log": 365, "env_with_rend": 365, "vmas_rend": 365, "print_log_dir": 365, "profici": [365, 366], "lidar": 366, "sensor": 366, "mappo": 366, "ippo": 366, "phase": [366, 369], "fed": [366, 369], "analys": 366, "visualis": 366, "vmas_devic": 366, "6_000": 366, "minibatch_s": 366, "generalis": 366, "simd": 366, "parallelis": 366, "warp": 366, "todai": 366, "surround": 366, "dot": [366, 367], "collid": 366, "penalis": 366, "scenario_nam": 366, "final_rew": 366, "agent_collis": 366, "denot": 366, "critic_net": 366, "minibatch": 366, "episode_reward_mean_list": 366, "critic_network_param": 366, "target_critic_network_param": 366, "4579917788505554": 366, "14524875581264496": 366, "168386459350586": 366, "3613134622573853": 366, "921463131904602": 366, "2106335163116455": 366, "1925103664398193": 366, "664064407348633": 366, "6539173126220703": 366, "743558168411255": 366, "xvfb": 366, "pyvirtualdisplai": 366, "1400": [366, 367], "900": 366, "pil": 366, "rendering_callback": 366, "fromarrai": 366, "gif": 366, "save_al": 366, "append_imag": 366, "freeli": 367, "undertaken": 367, "broader": 367, "wider": 367, "algebra": 367, "acquaint": 367, "avenu": 367, "_apply_to_composit": 367, "default_x": 367, "default_i": 367, "torqu": 367, "upward": 367, "angular": 367, "sin": 367, "rad": 367, "sec": 367, "gravit": 367, "angl": 367, "deleg": 367, "new_th": 367, "new_thdot": 367, "thdot": 367, "g_forc": 367, "max_torqu": 367, "angle_norm": 367, "max_spe": 367, "albeit": 367, "gen_param": 367, "high_th": 367, "high_thdot": 367, "low_th": 367, "low_thdot": 367, "trivial": 367, "shortcut": [367, 372], "irrelev": 367, "_make_spec": 367, "td_param": 367, "render_fp": 367, "random_": 367, "_make_step": 367, "staticmethod": 367, "showcas": 367, "skeleton": 367, "_apply_transform": [367, 372], "_inv_apply_transform": [367, 372], "subset": [367, 368], "sine": 367, "cosin": 367, "sintransform": 367, "costransform": 367, "t_sin": 367, "t_co": 367, "cat_transform": 367, "simple_rollout": 367, "unexplor": 367, "init_td": 367, "traj_return": 367, "last_reward": 367, "is_ipython": 367, "inlin": 367, "get_backend": 367, "ion": 367, "gcf": 367, "clear_output": 367, "625": 367, "0748": 367, "519": 367, "0499": 367, "4472": 367, "073": 367, "0685": 367, "0408": 367, "552": 367, "5154": 367, "9086": 367, "9385": 367, "2568": 367, "4981": 367, "223": 367, "8929": 367, "4491": 367, "581": 367, "3233": 367, "0664": 367, "596": 367, "1021": 367, "5263": 367, "9579": 367, "5807": 367, "8075": 367, "212": 367, "2009": 367, "5525": 367, "914": 367, "2894": 367, "0115": 367, "0977": 367, "1845": 367, "1830": 367, "4858": 367, "233": 367, "2863": 367, "0297": 367, "464": 367, "4617": 367, "5997": 367, "904": 367, "1647": 367, "0777": 367, "901": 367, "4709": 367, "6813": 367, "8317": 367, "3221": 367, "5554": 367, "276": 367, "3353": 367, "701": 367, "8570": 367, "6656": 367, "7779": 367, "6911": 367, "875": 367, "0796": 367, "7082": 367, "308": 367, "0421": 367, "1496": 367, "5037": 367, "1755": 367, "5029": 367, "9454": 367, "665": 367, "9330": 367, "2118": 367, "444": 367, "0995": 367, "6294": 367, "3146": 367, "2909": 367, "461": 367, "9720": 367, "1298": 367, "9923": 367, "0345": 367, "3438": 367, "424": 367, "6953": 367, "5233": 367, "411": 367, "8011": 367, "5329": 367, "2677": 367, "6969": 367, "7010": 367, "376": 367, "9352": 367, "7707": 367, "6178": 367, "5646": 367, "348": 367, "7304": 367, "9407": 367, "942": 367, "3882": 367, "7604": 367, "3507": 367, "8928": 367, "258": 367, "6978": 367, "4641": 367, "549": 367, "6047": 367, "5005": 367, "4136": 367, "2993": 367, "3222": 367, "4046": 367, "7314": 367, "275": 367, "6331": 367, "9318": 367, "961": 367, "8331": 367, "1604": 367, "4099": 367, "4761": 367, "125": 367, "4262": 367, "6363": 367, "382": 367, "3593": 367, "7377": 367, "2847": 367, "3443": 367, "867": 367, "3592": 367, "4760": 367, "441": 367, "9950": 367, "8021": 367, "3528": 367, "1214": 367, "708": 367, "4023": 367, "3583": 367, "041": 367, "3801": 367, "0310": 367, "120": 367, "4244": 367, "2039": 367, "4850": 367, "8748": 367, "706": 367, "4897": 367, "9210": 367, "8964": 367, "0832": 367, "3934": 367, "456": 367, "8971": 367, "2933": 367, "3377": 367, "6996": 367, "2274": 367, "8916": 367, "098": 367, "2660": 367, "9110": 367, "4503": 367, "6956": 367, "9172": 367, "4026": 367, "946": 367, "9229": 367, "5205": 367, "294": 367, "8872": 367, "6637": 367, "019": 367, "9281": 367, "2082": 367, "724": 367, "8561": 367, "6574": 367, "357": 367, "4138": 367, "5230": 367, "385": 367, "4065": 367, "5642": 367, "9786": 367, "4129": 367, "5831": 367, "266": 367, "7723": 367, "4152": 367, "0898": 367, "389": 367, "5155": 367, "5376": 367, "5616": 367, "4094": 367, "283": 367, "5333": 367, "4803": 367, "895": 367, "6566": 367, "2588": 367, "662": 367, "4732": 367, "7503": 367, "068": 367, "0714": 367, "3370": 367, "059": 367, "8612": 367, "1915": 367, "3855": 367, "0349": 367, "9644": 367, "4538": 367, "445": 367, "0392": 367, "4080": 367, "1648": 367, "9599": 367, "143": 367, "4284": 367, "5946": 367, "2590": 367, "9181": 367, "4621": 367, "9075": 367, "674": 367, "1772": 367, "9444": 367, "351": 367, "9391": 367, "5595": 367, "8673": 367, "6240": 367, "5919": 367, "1071": 367, "9127": 367, "251": 367, "9799": 367, "3131": 367, "9612": 367, "9705": 367, "8741": 367, "2230": 367, "0972": 367, "0337": 367, "0350": 367, "0654": 367, "102": 367, "2441": 367, "4596": 367, "362": 367, "103": 367, "4362": 367, "171": 367, "104": [367, 369], "4041": 367, "6907": 367, "105": 367, "4664": 367, "2760": 367, "0299": 367, "9712": 367, "349": 367, "107": 367, "3332": 367, "4479": 367, "772": 367, "108": 367, "4357": 367, "9591": 367, "543": 367, "109": 367, "6216": 367, "1353": 367, "692": 367, "110": 367, "6261": 367, "7086": 367, "496": 367, "111": 367, "7758": 367, "9818": 367, "112": 367, "7772": 367, "5055": 367, "113": 367, "5840": 367, "3180": 367, "2083": 367, "115": 367, "5275": 367, "6873": 367, "116": 367, "4107": 367, "1624": 367, "117": 367, "6372": 367, "2571": 367, "118": 367, "4039": 367, "4428": 367, "119": 367, "4728": 367, "5628": 367, "6767": 367, "2466": 367, "522": 367, "121": [367, 372], "5873": 367, "5072": 367, "6548": 367, "3766": 367, "123": 367, "5134": 367, "1955": 367, "2481": 367, "0591": 367, "20it": 367, "4500": 367, "3368": 367, "126": 367, "9708": 367, "7059": 367, "127": 367, "3031": 367, "2534": 367, "843": 367, "3327": 367, "6193": 367, "129": 367, "4831": 367, "1172": 367, "2593": 367, "4219": 367, "962": 367, "8380": 367, "899": 367, "132": [367, 369], "2721": 367, "9048": 367, "166": 367, "2419": 367, "5248": 367, "2139": 367, "4278": 367, "135": 367, "0690": 367, "5140": 367, "136": 367, "1140": 367, "7402": 367, "137": 367, "5356": 367, "1636": 367, "138": 367, "0671": 367, "8798": 367, "139": 367, "8918": 367, "3298": 367, "307": 367, "140": 367, "1779": 367, "141": 367, "1771": 367, "3624": 367, "936": 367, "142": [367, 369], "1683": 367, "4810": 367, "9373": 367, "4435": 367, "4396": 367, "8092": 367, "145": 367, "2572": 367, "146": 367, "4212": 367, "0260": 367, "147": 367, "0939": 367, "6478": 367, "605": 367, "148": 367, "6606": 367, "7289": 367, "149": 367, "9300": 367, "7193": 367, "563": 367, "1166": 367, "8514": 367, "151": 367, "9108": 367, "0672": 367, "292": 367, "152": 367, "8591": 367, "3768": 367, "153": 367, "9976": 367, "154": 367, "0576": 367, "0067": 367, "935": 367, "4199": 367, "1722": 367, "156": 367, "8310": 367, "3466": 367, "157": 367, "8631": 367, "2492": 367, "158": 367, "8763": 367, "1277": 367, "159": 367, "5562": 367, "7446": 367, "1082": 367, "9830": 367, "161": 367, "0946": 367, "5229": 367, "162": 367, "4574": 367, "6900": 367, "163": [367, 368], "2229": 367, "0318": 367, "482": 367, "164": 367, "0543": 367, "0817": 367, "761": 367, "165": 367, "2809": 367, "5118": 367, "1142": 367, "5635": 367, "167": 367, "1949": 367, "2327": 367, "982": 367, "168": 367, "0967": 367, "0387": 367, "457": 367, "169": 367, "0782": 367, "2150": 367, "170": 367, "5222": 367, "3725": 367, "9288": 367, "9837": 367, "1416": 367, "1099": 367, "173": [367, 369], "8620": 367, "8475": 367, "174": 367, "1807": 367, "4375": 367, "175": 367, "1148": 367, "0645": 367, "2751": 367, "8313": 367, "177": 367, "9286": 367, "9770": 367, "178": 367, "85it": 367, "5735": 367, "2837": 367, "179": 367, "84it": 367, "2926": 367, "9489": 367, "180": 367, "1507": 367, "181": 367, "8724": 367, "3567": 367, "182": 367, "3574": 367, "6140": 367, "183": 367, "7895": 367, "2518": 367, "184": 367, "6146": 367, "185": 367, "8776": 367, "7358": 367, "186": 367, "3722": 367, "8428": 367, "187": 367, "7955": 367, "188": 367, "0092": 367, "7106": 367, "829": 367, "189": 367, "2264": 367, "6919": 367, "190": 367, "1438": 367, "1362": 367, "191": 367, "0618": 367, "8217": 367, "9420": 367, "6765": 367, "193": 367, "7745": 367, "0709": 367, "194": 367, "9478": 367, "6867": 367, "195": 367, "6507": 367, "6225": 367, "196": 367, "2244": 367, "2195": 367, "197": [367, 369], "5385": 367, "9263": 367, "198": 367, "1878": 367, "2374": 367, "8054": 367, "3504": 367, "557": 367, "0766": 367, "2011": 367, "8393": 367, "202": 367, "0803": 367, "7815": 367, "203": 367, "8363": 367, "2460": 367, "204": 367, "8643": 367, "2191": 367, "593": 367, "205": 367, "0773": 367, "1343": 367, "206": 367, "8657": 367, "207": 367, "9304": 367, "7584": 367, "8752": 367, "2307": 367, "5250": 367, "4869": 367, "7837": 367, "5762": 367, "211": 367, "6661": 367, "8600": 367, "2502": 367, "1752": 367, "3075": 367, "8871": 367, "214": 367, "9406": 367, "8090": 367, "215": 367, "6291": 367, "8923": 367, "876": 367, "9504": 367, "21e": 367, "217": 367, "7431": 367, "7880": 367, "218": 367, "4463": 367, "5432": 367, "3793": 367, "3313": 367, "220": 367, "8843": 367, "0369": 367, "065": 367, "221": 367, "4828": 367, "8391": 367, "222": 367, "70it": 367, "6265": 367, "2913": 367, "5541": 367, "1252": 367, "7342": 367, "2396": 367, "225": 367, "5936": 367, "1924": 367, "226": 367, "9975": 367, "2045": 367, "227": 367, "8367": 367, "9540": 367, "228": 367, "7259": 367, "6743": 367, "229": 367, "4827": 367, "7528": 367, "230": 367, "7361": 367, "8756": 367, "231": 367, "7646": 367, "1116": 367, "232": 367, "5426": 367, "8385": 367, "5662": 367, "8585": 367, "234": [367, 369], "8234": 367, "7930": 367, "235": 367, "2648": 367, "9309": 367, "236": 367, "6817": 367, "237": 367, "0943": 367, "1533": 367, "3045": 367, "0483": 367, "239": 367, "6415": 367, "0201": 367, "241": 367, "4437": 367, "4365": 367, "242": 367, "0358": 367, "4943": 367, "243": 367, "1272": 367, "5003": 367, "1180": 367, "2637": 367, "245": 367, "7197": 367, "0873": 367, "246": 367, "2917": 367, "247": 367, "0160": 367, "0738": 367, "248": 367, "3689": 367, "0120": 367, "249": 367, "5570": 367, "0475": 367, "250": 367, "4423": 367, "2220": 367, "6803": 367, "252": 367, "1465": 367, "7214": 367, "253": 367, "8801": 367, "7034": 367, "254": 367, "9136": 367, "4076": 367, "7589": 367, "5013": 367, "8150": 367, "2241": 367, "257": 367, "0753": 367, "8081": 367, "1951": 367, "8314": 367, "259": 367, "0038": 367, "0889": 367, "4616": 367, "261": 367, "0655": 367, "262": 367, "8333": 367, "9476": 367, "263": 367, "7554": 367, "3798": 367, "264": 367, "3717": 367, "3947": 367, "529": 367, "265": 367, "3060": 367, "6495": 367, "7467": 367, "8889": 367, "8457": 367, "591": 367, "7137": 367, "0536": 367, "771": 367, "269": 367, "1651": 367, "388": 367, "270": 367, "8246": 367, "5709": 367, "281": 367, "271": 367, "7502": 367, "0521": 367, "032": 367, "272": 367, "5475": 367, "7253": 367, "273": 367, "2856": 367, "7130": 367, "274": 367, "2778": 367, "4122": 367, "8368": 367, "1841": 367, "9622": 367, "1603": 367, "003e": 367, "277": 367, "0247": 367, "346": 367, "278": 367, "2238": 367, "6418": 367, "279": 367, "0626": 367, "2538": 367, "280": 367, "0149": 367, "7380": 367, "2167": 367, "8911": 367, "282": 367, "8725": 367, "1983": 367, "8142": 367, "3709": 367, "284": 367, "4989": 367, "6464": 367, "6210": 367, "286": 367, "9726": 367, "0820": 367, "287": 367, "6975": 367, "9091": 367, "4926": 367, "4791": 367, "289": 367, "0905": 367, "3500": 367, "2287": 367, "291": 367, "9918": 367, "5543": 367, "9245": 367, "6444": 367, "631": 367, "293": 367, "0448": 367, "4769": 367, "8566": 367, "7208": 367, "295": 367, "0966": 367, "296": 367, "5303": 367, "1537": 367, "023": 367, "297": 367, "2682": 367, "564": 367, "298": 367, "4318": 367, "5063": 367, "299": 367, "7475": 367, "4190": 367, "8186": 367, "5077": 367, "301": 367, "1883": 367, "5291": 367, "302": 367, "3998": 367, "303": 367, "3622": 367, "0930": 367, "626": 367, "304": 367, "9500": 367, "5664": 367, "305": 367, "5697": 367, "3024": 367, "306": 367, "3117": 367, "0052": 367, "006": 367, "0981": 367, "9312": 367, "3873": 367, "309": 367, "0411": 367, "2650": 367, "1656": 367, "0228": 367, "004": 367, "311": 367, "1196": 367, "2478": 367, "312": 367, "7353": 367, "0812": 367, "313": 367, "3022": 367, "758": 367, "314": 367, "1406": 367, "4626": 367, "315": 367, "2156": 367, "851": 367, "316": 367, "1953": 367, "3774": 367, "317": 367, "6385": 367, "9917": 367, "318": 367, "2764": 367, "905": 367, "319": 367, "6391": 367, "9317": 367, "9748": 367, "2679": 367, "321": 367, "8495": 367, "5125": 367, "8177": 367, "6602": 367, "323": 367, "0704": 367, "5776": 367, "324": 367, "9833": [367, 371], "1339": 367, "402": 367, "325": 367, "1238": 367, "326": 367, "9299": 367, "0227": 367, "327": 367, "7727": 367, "1607": 367, "336": 367, "328": 367, "3958": 367, "3223": 367, "763": 367, "329": 367, "4742": 367, "1797": 367, "330": 367, "0144": 367, "0085": 367, "791": 367, "331": 367, "8284": 367, "0428": 367, "332": 367, "7365": 367, "333": 367, "4566": 367, "0781": 367, "086": 367, "334": 367, "3355": 367, "0230": 367, "335": 367, "9346": 367, "0423": 367, "076": 367, "3711": 367, "1335": 367, "6855": 367, "337": 367, "0304": 367, "0023": 367, "8459": 367, "338": 367, "9998": 367, "4399": 367, "339": 367, "2303": 367, "1346": 367, "340": 367, "2915": 367, "7116": 367, "341": 367, "5560": 367, "0487": 367, "342": 367, "5119": 367, "061": 367, "343": 367, "3305": 367, "3705": 367, "957": 367, "344": 367, "6068": 367, "345": 367, "5731": 367, "3897": 367, "0376": 367, "347": 367, "0434": 367, "012": 367, "1300": 367, "1215": 367, "0968": 367, "0885": 367, "350": 367, "1348": 367, "0073": 367, "5052": 367, "4184": 367, "2817": 367, "8887": 367, "353": 367, "4779": 367, "1009": 367, "354": 367, "0604": 367, "599": 367, "355": 367, "4486": 367, "1176": 367, "656": 367, "356": 367, "2436": 367, "0668": 367, "8849": 367, "0012": 367, "358": 367, "7511": 367, "8804": 367, "359": 367, "8870": 367, "6728": 367, "360": 367, "8841": 367, "5508": 367, "361": 367, "5242": 367, "0013": 367, "6185": 367, "363": 367, "1378": 367, "0204": 367, "364": 367, "0355": 367, "685": 367, "365": 367, "4884": 367, "0231": 367, "0014": 367, "6793": 367, "367": 367, "9834": 367, "863": 367, "368": 367, "6709": 367, "369": 367, "5199": 367, "9790": 367, "370": 367, "9401": 367, "7802": 367, "371": 367, "6723": 367, "372": 367, "2678": 367, "6201": 367, "2184": 367, "7385": 367, "374": 367, "01it": 367, "6344": 367, "617": 367, "375": 367, "9945": 367, "0772": 367, "567": 367, "7576": 367, "0398": 367, "377": 367, "3396": 367, "0022": 367, "094": 367, "378": 367, "3073": 367, "4018": 367, "379": 367, "1869": 367, "380": 367, "0481": 367, "1117": 367, "381": 367, "6823": 367, "981": 367, "8305": 367, "0210": 367, "383": 367, "4908": 367, "0272": 367, "538": 367, "3267": 367, "0111": 367, "7965": 367, "1796": 367, "0039": 367, "5396": 367, "386": 367, "3757": 367, "0490": 367, "387": 367, "1394": 367, "4187": 367, "2986": 367, "7954": 367, "1274": 367, "0063": 367, "813": 367, "390": 367, "8706": 367, "0114": 367, "391": 367, "6922": 367, "2423": 367, "392": 367, "9115": 367, "2602": 367, "393": 367, "2449": 367, "0783": 367, "394": 367, "0631": 367, "0057": 367, "7444": 367, "395": 367, "3339": 367, "0167": 367, "396": 367, "4806": 367, "397": 367, "4171": 367, "067": 367, "398": 367, "2618": 367, "5809": 367, "399": 367, "0054": 367, "3364": 367, "8733": 367, "0184": 367, "401": 367, "9137": 367, "0113": 367, "025": 367, "0386": 367, "0625": 367, "403": 367, "1332": 367, "0582": 367, "7816": 367, "404": 367, "8341": 367, "0941": 367, "854": 367, "405": 367, "8615": 367, "588": 367, "406": 367, "3849": 367, "008": 367, "407": 367, "9395": 367, "0765": 367, "055": 367, "408": 367, "2685": 367, "2235": 367, "688": 367, "409": 367, "3052": 367, "4249": 367, "410": 367, "6806": 367, "6383": 367, "3721": 367, "9981": 367, "412": 367, "1862": 367, "822": 367, "413": 367, "9811": 367, "0171": 367, "013": 367, "414": 367, "0252": 367, "0049": 367, "6205": 367, "1108": 367, "4921": 367, "9142": 367, "8130": 367, "417": 367, "1725": 367, "0036": 367, "3196": 367, "418": 367, "7795": 367, "0242": 367, "799": 367, "419": 367, "7737": 367, "0138": 367, "420": 367, "1462": 367, "0053": 367, "421": 367, "9226": 367, "6139": 367, "422": 367, "9889": 367, "0403": 367, "423": 367, "6194": 367, "0032": 367, "3989": 367, "0104": 367, "425": 367, "9960": 367, "0009": 367, "6009": 367, "426": 367, "2697": 367, "0914": 367, "427": 367, "1114": 367, "428": 367, "9862": 367, "1932": 367, "429": 367, "0637": 367, "0623": 367, "082": 367, "430": 367, "9906": 367, "2031": 367, "431": 367, "9948": 367, "0895": 367, "432": 367, "1970": 367, "0256": 367, "4231": 367, "0449": 367, "644": 367, "434": 367, "1039": 367, "1973": 367, "435": 367, "4561": 367, "1225": 367, "436": 367, "0211": 367, "2125": 367, "437": 367, "3866": 367, "0050": 367, "7202": 367, "438": 367, "6388": 367, "0072": 367, "439": 367, "1187": 367, "0015": 367, "5116": 367, "440": 367, "0432": 367, "0025": 367, "7809": 367, "1925": 367, "0103": 367, "442": 367, "9570": 367, "443": 367, "0871": 367, "5601": 367, "0165": 367, "0047": 367, "6061": 367, "2746": 367, "0027": 367, "7887": 367, "446": 367, "1835": 367, "0035": 367, "855": 367, "447": 367, "8420": 367, "548": 367, "2653": 367, "0126": 367, "9736": 367, "449": 367, "0594": 367, "0119": 367, "6196": 367, "450": 367, "4509": 367, "0373": 367, "451": 367, "0620": 367, "452": 367, "6898": 367, "3235": 367, "687": 367, "453": 367, "5879": 367, "454": 367, "8406": 367, "0694": 367, "455": 367, "8259": 367, "0235": 367, "8500": 367, "0024": 367, "4054": 367, "458": 367, "2027": 367, "0894": 367, "5966": 367, "6942": 367, "0016": 367, "4254": 367, "6703": 367, "0145": 367, "8124": 367, "0218": 367, "9196": 367, "0188": 367, "8986": 367, "0884": 367, "0084": 367, "5624": 367, "465": 367, "8862": 367, "0006": 367, "5384": 367, "466": 367, "5837": 367, "8954": 367, "0101": 367, "6751": 367, "468": 367, "8063": 367, "0122": 367, "9635": 367, "0692": 367, "4216": 367, "1227": 367, "0586": 367, "162e": 367, "9690": 367, "4166": 367, "6324": 367, "473": 367, "0778": 367, "8548": 367, "0017": 367, "4408": 367, "475": 367, "8125": 367, "1515": 367, "476": 367, "2733": 367, "0044": 367, "2836": 367, "477": 367, "7497": 367, "7681": 367, "478": 367, "8547": 367, "0105": 367, "7212": 367, "479": 367, "9848": 367, "0019": 367, "6498": 367, "1987": 367, "0011": 367, "5473": 367, "481": 367, "8991": 367, "6091": 367, "9189": 367, "5771": 367, "483": 367, "6781": 367, "7542": 367, "484": 367, "5959": 367, "0064": 367, "485": 367, "2547": 367, "486": 367, "0636": 367, "547": 367, "487": 367, "0065": 367, "488": 367, "1694": 367, "0083": 367, "5759": 367, "489": 367, "0493": 367, "0021": 367, "7805": 367, "490": 367, "0950": 367, "497": 367, "491": 367, "9717": 367, "3672": 367, "492": 367, "0207": 367, "493": 367, "8266": 367, "5365": 367, "494": 367, "2623": 367, "5078": 367, "495": 367, "4545": 367, "09636": 367, "8754": 367, "0010": 367, "0031": 367, "8269": 367, "499": 367, "6642": 367, "2284": 367, "501": 367, "9130": 367, "0008": 367, "502": 367, "503": 367, "7624": 367, "0056": 367, "3858": 367, "504": 367, "0890": 367, "0042": 367, "505": 367, "7505": 367, "2157": 367, "506": 367, "8394": 367, "3413": 367, "507": 367, "9609": 367, "0041": 367, "6905": 367, "508": 367, "8467": 367, "4409": 367, "509": 367, "510": 367, "8128": 367, "3559": 367, "511": 367, "1479": 367, "0264": 367, "1589": 367, "566": 367, "513": 367, "2756": 367, "0046": 367, "5266": 367, "514": 367, "9873": 367, "0112": 367, "9314": 367, "515": 367, "3791": 367, "0721": 367, "516": 367, "4580": 367, "0758": 367, "6114": 367, "517": 367, "2431": 367, "518": 367, "1958": 367, "5553": 367, "8924": 367, "0097": 367, "520": 367, "3737": 367, "0234": 367, "9125": 367, "4623": 367, "3230": 367, "0589": 367, "3784": 367, "523": 367, "9482": 367, "0051": 367, "524": 367, "1979": 367, "0045": 367, "6401": 367, "525": 367, "1588": 367, "0048": 367, "6255": 367, "526": 367, "6084": 367, "3477": 367, "1475": 367, "0209": 367, "528": 367, "7611": 367, "1040": 367, "0099": 367, "0173": 367, "643": 367, "530": 367, "8189": 367, "4358": 367, "531": 367, "9897": 367, "532": 367, "1548": 367, "9751": 367, "533": 367, "6362": 367, "7495": 367, "534": 367, "1749": 367, "9513": 367, "535": 367, "7708": 367, "0371": 367, "536": 367, "2649": 367, "0437": 367, "537": 367, "5491": 367, "0276": 367, "6426": 367, "7294": 367, "078e": 367, "539": 367, "9928": 367, "540": 367, "7937": 367, "0124": 367, "9664": 367, "541": 367, "3342": 367, "542": 367, "2046": 367, "5496": 367, "0956": 367, "0059": 367, "545": 367, "9028": 367, "5843": 367, "546": 367, "0674": 367, "0178": 367, "797": 367, "2815": 367, "0599": 367, "1587": 367, "9276": 367, "8228": 367, "6164": 367, "551": 367, "6850": 367, "9167": 367, "3092": 367, "0670": 367, "9177": 367, "553": 367, "1599": 367, "0043": 367, "554": 367, "6367": 367, "555": 367, "556": 367, "6694": 367, "2622": 367, "0372": 367, "4841": 367, "558": 367, "2707": [367, 372], "757": 367, "559": 367, "2267": 367, "5415": 367, "560": 367, "4556": 367, "0163": 367, "561": 367, "1839": 367, "0809": 367, "6262": 367, "562": 367, "0278": 367, "1112": 367, "6155": 367, "565": 367, "1427": 367, "3582": 367, "624": 367, "7870": 367, "9490": 367, "0439": 367, "8796": 367, "568": 367, "8026": 367, "612": 367, "569": 367, "3147": 367, "8486": 367, "570": 367, "7917": 367, "0129": 367, "571": 367, "9553": 367, "0020": 367, "6871": 367, "572": 367, "3132": 367, "0159": 367, "8646": 367, "573": 367, "5320": 367, "0269": 367, "574": 367, "2955": 367, "0245": 367, "575": 367, "3347": 367, "0179": 367, "9718": 367, "1629": 367, "804": 367, "577": 367, "4164": 367, "0070": 367, "4335": 367, "578": 367, "579": 367, "3049": 367, "9063": 367, "580": 367, "8785": 367, "3295": 367, "5184": 367, "0546": 367, "582": 367, "4589": 367, "583": 367, "4697": 367, "2476": 367, "584": 367, "2397": 367, "585": 367, "4953": 367, "1775": 367, "586": 367, "2258": 367, "0110": 367, "7671": 367, "587": 367, "3981": 367, "8590": 367, "0007": 367, "9820": 367, "4221": 367, "590": 367, "1293": 367, "0116": 367, "868": 367, "1675": 367, "5931": 367, "592": 367, "2910": 367, "5219": 367, "2124": 367, "1730": 367, "737": 367, "594": 367, "2914": 367, "0206": 367, "595": 367, "0172": 367, "3982": 367, "0945": 367, "0121": 367, "4789": 367, "597": 367, "3805": 367, "4074": 367, "598": 367, "3310": 367, "5065": 367, "6028": 367, "6316": 367, "6724": 367, "6523": 367, "601": 367, "0136": 367, "4298": 367, "602": 367, "3524": 367, "2629": 367, "603": 367, "2635": 367, "7839": 367, "604": 367, "6041": 367, "8027": 367, "4170": 367, "4675": 367, "606": 367, "3153": 367, "9316": 367, "607": 367, "0649": 367, "9722": 367, "7989": 367, "0329": 367, "609": 367, "1976": 367, "6852": 367, "610": 367, "4793": 367, "1255": 367, "611": 367, "4581": 367, "0394": 367, "2047": 367, "0326": 367, "613": 367, "8967": 367, "8619": 367, "614": 367, "5906": 367, "6491": 367, "615": 367, "6634": 367, "4394": 367, "616": 367, "0624": 367, "0061": 367, "5676": 367, "3259": 367, "0131": 367, "7733": 367, "618": 367, "7515": 367, "0189": 367, "5575": 367, "619": 367, "9313": 367, "6286": 367, "620": 367, "4325": 367, "7832": 367, "621": 367, "1134": 367, "622": 367, "4572": 367, "0500": 367, "5838": 367, "623": 367, "3818": 367, "8623": 367, "1253": 367, "6622": 367, "subject": 367, "explain": 368, "semat": 368, "r3mtransform": 368, "env_transform": [368, 372], "s3": 368, "amazonaw": 368, "r3m_50": 368, "374m": 368, "5m": 368, "112mb": 368, "9m": 368, "114mb": 368, "130mb": 368, "0m": 368, "117mb": 368, "4m": 368, "6mb": 368, "109mb": 368, "109m": 368, "106mb": 368, "120m": 368, "103mb": 368, "130m": 368, "104mb": 368, "140m": 368, "102mb": 368, "150m": 368, "3mb": 368, "163m": 368, "173m": 368, "183m": 368, "193m": 368, "203m": 368, "101mb": 368, "213m": 368, "223m": 368, "4mb": 368, "232m": 368, "0mb": 368, "244m": 368, "254m": 368, "265m": 368, "275m": 368, "285m": 368, "294m": 368, "304m": 368, "314m": 368, "100mb": 368, "324m": 368, "333m": 368, "343m": 368, "1mb": 368, "360m": 368, "7mb": 368, "wiser": 368, "_storag": [368, 369], "3716": 368, "batteri": 369, "filesystem": 369, "buffer_list": 369, "lowest": 369, "medium": 369, "buffer_lazytensor": 369, "buffer_lazymemmap": 369, "tempdir": 369, "tmpr8gq9hl": 369, "fullest": 369, "mydata": 369, "background": 369, "question": [369, 371], "_i": 369, "artifici": 369, "0893e": 369, "hamper": 369, "she": 369, "pars": 369, "proport": 369, "hist": 369, "barcontain": 369, "artist": 369, "reappear": 369, "unfold": 369, "problemat": 369, "4th": 369, "prioritizedslicesampl": 369, "tensordictmaxvaluewrit": 369, "demo": 371, "icml": 371, "vmoen": 371, "fb": 371, "invest": 371, "platform": 371, "media": 371, "predominantli": 371, "tensordict1": 371, "tensordict2": 371, "tensordict_sampl": 371, "_sampler": 371, "_sum_tre": 371, "modulenotfounderror": 371, "28791671991348267": 371, "noopresetenv": [371, 372], "backbone_modul": 371, "params_expand": 371, "exec_sequ": 371, "tensordict_exp": 371, "base_modul": 371, "0137": 371, "1524": 371, "0641": 371, "viewbackward0": 371, "asstridedbackward0": 371, "8728": 371, "1334": 371, "3494": 371, "6887": 371, "6402": 371, "_safetanhbackward": 371, "1132": 371, "1762": 371, "3430": 371, "2668": 371, "2918": 371, "6239": 371, "roughli": 371, "tensordicts_prealloc": 371, "tensordicts_stack": 371, "tensordict_rollout": [371, 372], "disclaim": 371, "concatmodul": 371, "loss_td": 371, "year": 371, "roadmap": 371, "compris": 371, "contributor": 371, "curiou": 371, "nascent": 371, "unsupervis": 372, "unifi": 372, "_build_env": 372, "amidar": 372, "assault": 372, "4712": 372, "deserv": 372, "__episode__": 372, "__trajectory__": 372, "void": 372, "reproduct": 372, "reset_data": 372, "tensordict_tprim": 372, "imshow": 372, "axesimag": 372, "0x7f4e5aa2b6a0": 372, "wrapper1": 372, "wrapper2": 372, "obviou": 372, "truth": 372, "env0": 372, "env_transformed_bi": 372, "stanc": 372, "transformeddistribut": 372, "base_dist": 372, "concat": 372, "mofidi": 372, "transformedenviron": 372, "moderet": 372, "computation": 372, "legitim": 372, "incom": 372, "amongst": 372, "has_cuda": 372, "wor": 372, "convention": 372, "markovian": 372, "3288080526": 372, "constain": 372, "bar_": 372, "get_someth": 372, "bar_a03e2ee6": 372, "0bbf": 372, "aargh": 372, "is_clos": 372, "foo_list": 372, "batched_env": 372, "_dispatch_caller_parallel": 372, "0x7f4e5aa40ca0": 372, "bar_a5f02bdc": 372, "b67b": 372, "bar_a5f43e70": 372, "892b": 372, "bar_a5f78102": 372, "a126": 372, "parallen": 372, "particularili": 372, "evolv": 372, "steadi": 372, "approx": 372, "1236": 372, "1247": 372, "6230": 372, "1415": 372, "1095": 372, "0535": 372, "_extra_st": 372, "observation_ssq": 372, "observation_sum": 372, "1485": 372, "0193": 372, "1622": 372, "1978": 372, "3317": 372, "dispach": 372, "absor": 372}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "AdaptiveKLController"], [24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "ConstantKLController"], [28, 0, 1, "", "DiscreteTensorSpec"], [29, 0, 1, "", "LazyStackedCompositeSpec"], [30, 0, 1, "", "LazyStackedTensorSpec"], [31, 0, 1, "", "MultiDiscreteTensorSpec"], [32, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [33, 0, 1, "", "MultiStep"], [34, 0, 1, "", "NonTensorSpec"], [35, 0, 1, "", "OneHotDiscreteTensorSpec"], [36, 0, 1, "", "PairwiseDataset"], [37, 0, 1, "", "PrioritizedReplayBuffer"], [38, 0, 1, "", "PromptData"], [39, 0, 1, "", "PromptTensorDictTokenizer"], [40, 0, 1, "", "ReplayBuffer"], [41, 0, 1, "", "RewardData"], [42, 0, 1, "", "RolloutFromModel"], [43, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [44, 0, 1, "", "TensorDictReplayBuffer"], [45, 0, 1, "", "TensorDictTokenizer"], [46, 0, 1, "", "TensorSpec"], [47, 0, 1, "", "TokenizedDatasetLoader"], [48, 0, 1, "", "UnboundedContinuousTensorSpec"], [49, 0, 1, "", "UnboundedDiscreteTensorSpec"], [50, 0, 1, "", "check_no_exclusive_keys"], [51, 0, 1, "", "consolidate_spec"], [52, 0, 1, "", "contains_lazy_spec"], [53, 0, 1, "", "create_infinite_iterator"], [63, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[23, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "get"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "to_one_hot"], [28, 1, 1, "", "to_one_hot_spec"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "empty"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "get"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_empty"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "items"], [29, 1, 1, "", "keys"], [29, 1, 1, "", "lock_"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unlock_"], [29, 1, 1, "", "values"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "to_one_hot"], [31, 1, 1, "", "to_one_hot_spec"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[33, 1, 1, "", "add_module"], [33, 1, 1, "", "apply"], [33, 1, 1, "", "bfloat16"], [33, 1, 1, "", "buffers"], [33, 1, 1, "", "children"], [33, 1, 1, "", "compile"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 1, 1, "", "double"], [33, 1, 1, "", "eval"], [33, 1, 1, "", "extra_repr"], [33, 1, 1, "", "float"], [33, 1, 1, "", "forward"], [33, 1, 1, "", "get_buffer"], [33, 1, 1, "", "get_extra_state"], [33, 1, 1, "", "get_parameter"], [33, 1, 1, "", "get_submodule"], [33, 1, 1, "", "half"], [33, 1, 1, "", "ipu"], [33, 1, 1, "", "load_state_dict"], [33, 1, 1, "", "modules"], [33, 1, 1, "", "named_buffers"], [33, 1, 1, "", "named_children"], [33, 1, 1, "", "named_modules"], [33, 1, 1, "", "named_parameters"], [33, 1, 1, "", "parameters"], [33, 1, 1, "", "register_backward_hook"], [33, 1, 1, "", "register_buffer"], [33, 1, 1, "", "register_forward_hook"], [33, 1, 1, "", "register_forward_pre_hook"], [33, 1, 1, "", "register_full_backward_hook"], [33, 1, 1, "", "register_full_backward_pre_hook"], [33, 1, 1, "", "register_load_state_dict_post_hook"], [33, 1, 1, "", "register_module"], [33, 1, 1, "", "register_parameter"], [33, 1, 1, "", "register_state_dict_pre_hook"], [33, 1, 1, "", "requires_grad_"], [33, 1, 1, "", "set_extra_state"], [33, 1, 1, "", "share_memory"], [33, 1, 1, "", "state_dict"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_empty"], [33, 1, 1, "", "train"], [33, 1, 1, "", "type"], [33, 1, 1, "", "xpu"], [33, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_memmap"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 3, 1, "", "names"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "dumps"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "loads"], [37, 1, 1, "", "sample"], [37, 3, 1, "", "sampler"], [37, 1, 1, "", "set_sampler"], [37, 1, 1, "", "set_storage"], [37, 1, 1, "", "set_writer"], [37, 3, 1, "", "storage"], [37, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[38, 3, 1, "", "batch_size"], [38, 3, 1, "", "device"], [38, 1, 1, "", "from_dataset"], [38, 1, 1, "", "from_tensordict"], [38, 1, 1, "", "get"], [38, 1, 1, "", "load_memmap"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "memmap"], [38, 1, 1, "", "memmap_"], [38, 1, 1, "", "memmap_like"], [38, 3, 1, "", "names"], [38, 1, 1, "", "set"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to_tensordict"], [38, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "loads"], [40, 1, 1, "", "sample"], [40, 3, 1, "", "sampler"], [40, 1, 1, "", "set_sampler"], [40, 1, 1, "", "set_storage"], [40, 1, 1, "", "set_writer"], [40, 3, 1, "", "storage"], [40, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[41, 3, 1, "", "batch_size"], [41, 3, 1, "", "device"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 3, 1, "", "names"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[42, 1, 1, "", "create_rollout_td"], [42, 1, 1, "", "generate"], [42, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[43, 1, 1, "", "add"], [43, 1, 1, "", "append_transform"], [43, 1, 1, "", "dumps"], [43, 1, 1, "", "empty"], [43, 1, 1, "", "extend"], [43, 1, 1, "", "insert_transform"], [43, 1, 1, "", "loads"], [43, 1, 1, "", "sample"], [43, 3, 1, "", "sampler"], [43, 1, 1, "", "set_sampler"], [43, 1, 1, "", "set_storage"], [43, 1, 1, "", "set_writer"], [43, 3, 1, "", "storage"], [43, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[44, 1, 1, "", "add"], [44, 1, 1, "", "append_transform"], [44, 1, 1, "", "dumps"], [44, 1, 1, "", "empty"], [44, 1, 1, "", "extend"], [44, 1, 1, "", "insert_transform"], [44, 1, 1, "", "loads"], [44, 1, 1, "", "sample"], [44, 3, 1, "", "sampler"], [44, 1, 1, "", "set_sampler"], [44, 1, 1, "", "set_storage"], [44, 1, 1, "", "set_writer"], [44, 3, 1, "", "storage"], [44, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[47, 1, 1, "", "dataset_to_tensordict"], [47, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"]], "torchrl.data.datasets": [[54, 0, 1, "", "AtariDQNExperienceReplay"], [55, 0, 1, "", "BaseDatasetExperienceReplay"], [56, 0, 1, "", "D4RLExperienceReplay"], [57, 0, 1, "", "GenDGRLExperienceReplay"], [58, 0, 1, "", "MinariExperienceReplay"], [59, 0, 1, "", "OpenMLExperienceReplay"], [60, 0, 1, "", "OpenXExperienceReplay"], [61, 0, 1, "", "RobosetExperienceReplay"], [62, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 3, 1, "", "data_path"], [54, 3, 1, "", "data_path_root"], [54, 1, 1, "", "delete"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "preprocess"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 3, 1, "", "data_path"], [55, 3, 1, "", "data_path_root"], [55, 1, 1, "", "delete"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "preprocess"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 3, 1, "", "data_path"], [56, 3, 1, "", "data_path_root"], [56, 1, 1, "", "delete"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "preprocess"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 3, 1, "", "data_path"], [57, 3, 1, "", "data_path_root"], [57, 1, 1, "", "delete"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "preprocess"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 3, 1, "", "data_path"], [58, 3, 1, "", "data_path_root"], [58, 1, 1, "", "delete"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "preprocess"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 3, 1, "", "data_path"], [59, 3, 1, "", "data_path_root"], [59, 1, 1, "", "delete"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "preprocess"], [59, 1, 1, "", "sample"], [59, 3, 1, "", "sampler"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 3, 1, "", "storage"], [59, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 3, 1, "", "data_path"], [60, 3, 1, "", "data_path_root"], [60, 1, 1, "", "delete"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "preprocess"], [60, 1, 1, "", "sample"], [60, 3, 1, "", "sampler"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 3, 1, "", "storage"], [60, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[64, 0, 1, "", "ImmutableDatasetWriter"], [65, 0, 1, "", "LazyMemmapStorage"], [66, 0, 1, "", "LazyTensorStorage"], [67, 0, 1, "", "ListStorage"], [68, 0, 1, "", "PrioritizedSampler"], [69, 0, 1, "", "PrioritizedSliceSampler"], [70, 0, 1, "", "RandomSampler"], [71, 0, 1, "", "ReplayBufferEnsemble"], [72, 0, 1, "", "RoundRobinWriter"], [73, 0, 1, "", "Sampler"], [74, 0, 1, "", "SamplerEnsemble"], [75, 0, 1, "", "SamplerWithoutReplacement"], [76, 0, 1, "", "SliceSampler"], [77, 0, 1, "", "SliceSamplerWithoutReplacement"], [78, 0, 1, "", "Storage"], [79, 0, 1, "", "StorageEnsemble"], [80, 0, 1, "", "TensorDictMaxValueWriter"], [81, 0, 1, "", "TensorDictRoundRobinWriter"], [82, 0, 1, "", "TensorStorage"], [83, 0, 1, "", "Writer"], [84, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[66, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[67, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[68, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[69, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[71, 1, 1, "", "add"], [71, 1, 1, "", "append_transform"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "empty"], [71, 1, 1, "", "extend"], [71, 1, 1, "", "insert_transform"], [71, 1, 1, "", "loads"], [71, 1, 1, "", "sample"], [71, 3, 1, "", "sampler"], [71, 1, 1, "", "set_sampler"], [71, 1, 1, "", "set_storage"], [71, 1, 1, "", "set_writer"], [71, 3, 1, "", "storage"], [71, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[72, 1, 1, "", "add"], [72, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[78, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[79, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[82, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[83, 1, 1, "", "add"], [83, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[84, 1, 1, "", "add"], [84, 1, 1, "", "extend"]], "torchrl.envs": [[85, 2, 1, "", "BraxEnv"], [86, 2, 1, "", "BraxWrapper"], [87, 2, 1, "", "DMControlEnv"], [88, 2, 1, "", "DMControlWrapper"], [89, 0, 1, "", "EnvBase"], [90, 0, 1, "", "EnvCreator"], [91, 0, 1, "", "EnvMetaData"], [92, 2, 1, "", "GymEnv"], [93, 0, 1, "", "GymLikeEnv"], [94, 2, 1, "", "GymWrapper"], [95, 2, 1, "", "HabitatEnv"], [96, 2, 1, "", "IsaacGymEnv"], [97, 2, 1, "", "IsaacGymWrapper"], [98, 2, 1, "", "JumanjiEnv"], [99, 2, 1, "", "JumanjiWrapper"], [100, 2, 1, "", "MOGymEnv"], [101, 2, 1, "", "MOGymWrapper"], [102, 2, 1, "", "MarlGroupMapType"], [103, 2, 1, "", "MeltingpotEnv"], [104, 2, 1, "", "MeltingpotWrapper"], [105, 2, 1, "", "ModelBasedEnvBase"], [106, 2, 1, "", "MultiThreadedEnv"], [107, 2, 1, "", "MultiThreadedEnvWrapper"], [108, 2, 1, "", "OpenMLEnv"], [109, 0, 1, "", "ParallelEnv"], [110, 2, 1, "", "PettingZooEnv"], [111, 2, 1, "", "PettingZooWrapper"], [112, 2, 1, "", "RoboHiveEnv"], [113, 2, 1, "", "SMACv2Env"], [114, 2, 1, "", "SMACv2Wrapper"], [115, 0, 1, "", "SerialEnv"], [116, 2, 1, "", "VmasEnv"], [117, 2, 1, "", "VmasWrapper"], [118, 2, 1, "", "check_marl_grouping"], [119, 2, 1, "", "gym_backend"], [105, 1, 1, "", "rand_step"], [105, 1, 1, "", "reset"], [105, 1, 1, "", "rollout"], [122, 2, 1, "", "set_gym_backend"], [105, 1, 1, "", "set_seed"], [105, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[89, 3, 1, "", "action_key"], [89, 3, 1, "", "action_keys"], [89, 3, 1, "", "action_spec"], [89, 1, 1, "", "add_module"], [89, 1, 1, "", "add_truncated_keys"], [89, 1, 1, "", "append_transform"], [89, 1, 1, "", "apply"], [89, 3, 1, "", "batch_locked"], [89, 3, 1, "", "batch_size"], [89, 1, 1, "", "bfloat16"], [89, 1, 1, "", "buffers"], [89, 1, 1, "", "children"], [89, 1, 1, "", "compile"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 3, 1, "", "done_key"], [89, 3, 1, "", "done_keys"], [89, 3, 1, "", "done_keys_groups"], [89, 3, 1, "", "done_spec"], [89, 1, 1, "", "double"], [89, 1, 1, "", "empty_cache"], [89, 1, 1, "", "eval"], [89, 1, 1, "", "extra_repr"], [89, 1, 1, "", "fake_tensordict"], [89, 1, 1, "", "float"], [89, 1, 1, "", "forward"], [89, 3, 1, "", "full_action_spec"], [89, 3, 1, "", "full_done_spec"], [89, 3, 1, "", "full_reward_spec"], [89, 3, 1, "", "full_state_spec"], [89, 1, 1, "", "get_buffer"], [89, 1, 1, "", "get_extra_state"], [89, 1, 1, "", "get_parameter"], [89, 1, 1, "", "get_submodule"], [89, 1, 1, "", "half"], [89, 3, 1, "", "input_spec"], [89, 1, 1, "", "ipu"], [89, 1, 1, "", "load_state_dict"], [89, 1, 1, "", "maybe_reset"], [89, 1, 1, "", "modules"], [89, 1, 1, "", "named_buffers"], [89, 1, 1, "", "named_children"], [89, 1, 1, "", "named_modules"], [89, 1, 1, "", "named_parameters"], [89, 3, 1, "", "observation_spec"], [89, 3, 1, "", "output_spec"], [89, 1, 1, "", "parameters"], [89, 1, 1, "", "rand_action"], [89, 1, 1, "id0", "rand_step"], [89, 1, 1, "", "register_backward_hook"], [89, 1, 1, "", "register_buffer"], [89, 1, 1, "", "register_forward_hook"], [89, 1, 1, "", "register_forward_pre_hook"], [89, 1, 1, "", "register_full_backward_hook"], [89, 1, 1, "", "register_full_backward_pre_hook"], [89, 1, 1, "", "register_gym"], [89, 1, 1, "", "register_load_state_dict_post_hook"], [89, 1, 1, "", "register_module"], [89, 1, 1, "", "register_parameter"], [89, 1, 1, "", "register_state_dict_pre_hook"], [89, 1, 1, "", "requires_grad_"], [89, 1, 1, "id1", "reset"], [89, 3, 1, "", "reset_keys"], [89, 3, 1, "", "reward_key"], [89, 3, 1, "", "reward_keys"], [89, 3, 1, "", "reward_spec"], [89, 1, 1, "id2", "rollout"], [89, 1, 1, "", "set_extra_state"], [89, 1, 1, "id3", "set_seed"], [89, 3, 1, "", "shape"], [89, 1, 1, "", "share_memory"], [89, 3, 1, "", "specs"], [89, 1, 1, "", "state_dict"], [89, 3, 1, "", "state_spec"], [89, 1, 1, "id4", "step"], [89, 1, 1, "", "step_and_maybe_reset"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_empty"], [89, 1, 1, "", "train"], [89, 1, 1, "", "type"], [89, 1, 1, "", "xpu"], [89, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[93, 3, 1, "", "action_key"], [93, 3, 1, "", "action_keys"], [93, 3, 1, "", "action_spec"], [93, 1, 1, "", "add_module"], [93, 1, 1, "", "add_truncated_keys"], [93, 1, 1, "", "append_transform"], [93, 1, 1, "", "apply"], [93, 1, 1, "", "auto_register_info_dict"], [93, 3, 1, "", "batch_locked"], [93, 3, 1, "", "batch_size"], [93, 1, 1, "", "bfloat16"], [93, 1, 1, "", "buffers"], [93, 1, 1, "", "children"], [93, 1, 1, "", "close"], [93, 1, 1, "", "compile"], [93, 1, 1, "", "cpu"], [93, 1, 1, "", "cuda"], [93, 3, 1, "", "done_key"], [93, 3, 1, "", "done_keys"], [93, 3, 1, "", "done_keys_groups"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "double"], [93, 1, 1, "", "empty_cache"], [93, 1, 1, "", "eval"], [93, 1, 1, "", "extra_repr"], [93, 1, 1, "", "fake_tensordict"], [93, 1, 1, "", "float"], [93, 1, 1, "", "forward"], [93, 3, 1, "", "full_action_spec"], [93, 3, 1, "", "full_done_spec"], [93, 3, 1, "", "full_reward_spec"], [93, 3, 1, "", "full_state_spec"], [93, 1, 1, "", "get_buffer"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "get_parameter"], [93, 1, 1, "", "get_submodule"], [93, 1, 1, "", "half"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "ipu"], [93, 1, 1, "", "load_state_dict"], [93, 1, 1, "", "maybe_reset"], [93, 1, 1, "", "modules"], [93, 1, 1, "", "named_buffers"], [93, 1, 1, "", "named_children"], [93, 1, 1, "", "named_modules"], [93, 1, 1, "", "named_parameters"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 1, 1, "", "parameters"], [93, 1, 1, "", "rand_action"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "read_action"], [93, 1, 1, "", "read_done"], [93, 1, 1, "", "read_obs"], [93, 1, 1, "", "read_reward"], [93, 1, 1, "", "register_backward_hook"], [93, 1, 1, "", "register_buffer"], [93, 1, 1, "", "register_forward_hook"], [93, 1, 1, "", "register_forward_pre_hook"], [93, 1, 1, "", "register_full_backward_hook"], [93, 1, 1, "", "register_full_backward_pre_hook"], [93, 1, 1, "", "register_gym"], [93, 1, 1, "", "register_load_state_dict_post_hook"], [93, 1, 1, "", "register_module"], [93, 1, 1, "", "register_parameter"], [93, 1, 1, "", "register_state_dict_pre_hook"], [93, 1, 1, "", "requires_grad_"], [93, 1, 1, "", "reset"], [93, 3, 1, "", "reset_keys"], [93, 3, 1, "", "reward_key"], [93, 3, 1, "", "reward_keys"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "rollout"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "set_info_dict_reader"], [93, 1, 1, "", "set_seed"], [93, 3, 1, "", "shape"], [93, 1, 1, "", "share_memory"], [93, 3, 1, "", "specs"], [93, 1, 1, "", "state_dict"], [93, 3, 1, "", "state_spec"], [93, 1, 1, "", "step"], [93, 1, 1, "", "step_and_maybe_reset"], [93, 1, 1, "", "to"], [93, 1, 1, "", "to_empty"], [93, 1, 1, "", "train"], [93, 1, 1, "", "type"], [93, 1, 1, "", "xpu"], [93, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[109, 3, 1, "", "action_key"], [109, 3, 1, "", "action_keys"], [109, 3, 1, "", "action_spec"], [109, 1, 1, "", "add_module"], [109, 1, 1, "", "add_truncated_keys"], [109, 1, 1, "", "append_transform"], [109, 1, 1, "", "apply"], [109, 3, 1, "", "batch_locked"], [109, 3, 1, "", "batch_size"], [109, 1, 1, "", "bfloat16"], [109, 1, 1, "", "buffers"], [109, 1, 1, "", "children"], [109, 1, 1, "", "compile"], [109, 1, 1, "", "cpu"], [109, 1, 1, "", "cuda"], [109, 3, 1, "", "done_key"], [109, 3, 1, "", "done_keys"], [109, 3, 1, "", "done_keys_groups"], [109, 3, 1, "", "done_spec"], [109, 1, 1, "", "double"], [109, 1, 1, "", "empty_cache"], [109, 1, 1, "", "eval"], [109, 1, 1, "", "extra_repr"], [109, 1, 1, "", "fake_tensordict"], [109, 1, 1, "", "float"], [109, 1, 1, "", "forward"], [109, 3, 1, "", "full_action_spec"], [109, 3, 1, "", "full_done_spec"], [109, 3, 1, "", "full_reward_spec"], [109, 3, 1, "", "full_state_spec"], [109, 1, 1, "", "get_buffer"], [109, 1, 1, "", "get_extra_state"], [109, 1, 1, "", "get_parameter"], [109, 1, 1, "", "get_submodule"], [109, 1, 1, "", "half"], [109, 3, 1, "", "input_spec"], [109, 1, 1, "", "ipu"], [109, 1, 1, "", "load_state_dict"], [109, 1, 1, "", "maybe_reset"], [109, 1, 1, "", "modules"], [109, 1, 1, "", "named_buffers"], [109, 1, 1, "", "named_children"], [109, 1, 1, "", "named_modules"], [109, 1, 1, "", "named_parameters"], [109, 3, 1, "", "observation_spec"], [109, 3, 1, "", "output_spec"], [109, 1, 1, "", "parameters"], [109, 1, 1, "", "rand_action"], [109, 1, 1, "", "rand_step"], [109, 1, 1, "", "register_backward_hook"], [109, 1, 1, "", "register_buffer"], [109, 1, 1, "", "register_forward_hook"], [109, 1, 1, "", "register_forward_pre_hook"], [109, 1, 1, "", "register_full_backward_hook"], [109, 1, 1, "", "register_full_backward_pre_hook"], [109, 1, 1, "", "register_gym"], [109, 1, 1, "", "register_load_state_dict_post_hook"], [109, 1, 1, "", "register_module"], [109, 1, 1, "", "register_parameter"], [109, 1, 1, "", "register_state_dict_pre_hook"], [109, 1, 1, "", "requires_grad_"], [109, 1, 1, "", "reset"], [109, 3, 1, "", "reset_keys"], [109, 3, 1, "", "reward_key"], [109, 3, 1, "", "reward_keys"], [109, 3, 1, "", "reward_spec"], [109, 1, 1, "", "rollout"], [109, 1, 1, "", "set_extra_state"], [109, 1, 1, "", "set_seed"], [109, 3, 1, "", "shape"], [109, 1, 1, "", "share_memory"], [109, 3, 1, "", "specs"], [109, 1, 1, "", "state_dict"], [109, 3, 1, "", "state_spec"], [109, 1, 1, "", "step"], [109, 1, 1, "", "step_and_maybe_reset"], [109, 1, 1, "", "to"], [109, 1, 1, "", "to_empty"], [109, 1, 1, "", "train"], [109, 1, 1, "", "type"], [109, 1, 1, "", "update_kwargs"], [109, 1, 1, "", "xpu"], [109, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[115, 3, 1, "", "action_key"], [115, 3, 1, "", "action_keys"], [115, 3, 1, "", "action_spec"], [115, 1, 1, "", "add_module"], [115, 1, 1, "", "add_truncated_keys"], [115, 1, 1, "", "append_transform"], [115, 1, 1, "", "apply"], [115, 3, 1, "", "batch_locked"], [115, 3, 1, "", "batch_size"], [115, 1, 1, "", "bfloat16"], [115, 1, 1, "", "buffers"], [115, 1, 1, "", "children"], [115, 1, 1, "", "compile"], [115, 1, 1, "", "cpu"], [115, 1, 1, "", "cuda"], [115, 3, 1, "", "done_key"], [115, 3, 1, "", "done_keys"], [115, 3, 1, "", "done_keys_groups"], [115, 3, 1, "", "done_spec"], [115, 1, 1, "", "double"], [115, 1, 1, "", "empty_cache"], [115, 1, 1, "", "eval"], [115, 1, 1, "", "extra_repr"], [115, 1, 1, "", "fake_tensordict"], [115, 1, 1, "", "float"], [115, 1, 1, "", "forward"], [115, 3, 1, "", "full_action_spec"], [115, 3, 1, "", "full_done_spec"], [115, 3, 1, "", "full_reward_spec"], [115, 3, 1, "", "full_state_spec"], [115, 1, 1, "", "get_buffer"], [115, 1, 1, "", "get_extra_state"], [115, 1, 1, "", "get_parameter"], [115, 1, 1, "", "get_submodule"], [115, 1, 1, "", "half"], [115, 3, 1, "", "input_spec"], [115, 1, 1, "", "ipu"], [115, 1, 1, "", "load_state_dict"], [115, 1, 1, "", "maybe_reset"], [115, 1, 1, "", "modules"], [115, 1, 1, "", "named_buffers"], [115, 1, 1, "", "named_children"], [115, 1, 1, "", "named_modules"], [115, 1, 1, "", "named_parameters"], [115, 3, 1, "", "observation_spec"], [115, 3, 1, "", "output_spec"], [115, 1, 1, "", "parameters"], [115, 1, 1, "", "rand_action"], [115, 1, 1, "", "rand_step"], [115, 1, 1, "", "register_backward_hook"], [115, 1, 1, "", "register_buffer"], [115, 1, 1, "", "register_forward_hook"], [115, 1, 1, "", "register_forward_pre_hook"], [115, 1, 1, "", "register_full_backward_hook"], [115, 1, 1, "", "register_full_backward_pre_hook"], [115, 1, 1, "", "register_gym"], [115, 1, 1, "", "register_load_state_dict_post_hook"], [115, 1, 1, "", "register_module"], [115, 1, 1, "", "register_parameter"], [115, 1, 1, "", "register_state_dict_pre_hook"], [115, 1, 1, "", "requires_grad_"], [115, 1, 1, "", "reset"], [115, 3, 1, "", "reset_keys"], [115, 3, 1, "", "reward_key"], [115, 3, 1, "", "reward_keys"], [115, 3, 1, "", "reward_spec"], [115, 1, 1, "", "rollout"], [115, 1, 1, "", "set_extra_state"], [115, 1, 1, "", "set_seed"], [115, 3, 1, "", "shape"], [115, 1, 1, "", "share_memory"], [115, 3, 1, "", "specs"], [115, 1, 1, "", "state_dict"], [115, 3, 1, "", "state_spec"], [115, 1, 1, "", "step"], [115, 1, 1, "", "step_and_maybe_reset"], [115, 1, 1, "", "to"], [115, 1, 1, "", "to_empty"], [115, 1, 1, "", "train"], [115, 1, 1, "", "type"], [115, 1, 1, "", "update_kwargs"], [115, 1, 1, "", "xpu"], [115, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[120, 2, 1, "", "DreamerDecoder"], [121, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[123, 0, 1, "", "ActionMask"], [124, 0, 1, "", "AutoResetEnv"], [125, 0, 1, "", "AutoResetTransform"], [126, 0, 1, "", "BatchSizeTransform"], [127, 0, 1, "", "BinarizeReward"], [128, 0, 1, "", "BurnInTransform"], [129, 0, 1, "", "CatFrames"], [130, 0, 1, "", "CatTensors"], [131, 0, 1, "", "CenterCrop"], [132, 0, 1, "", "ClipTransform"], [133, 0, 1, "", "Compose"], [134, 0, 1, "", "DTypeCastTransform"], [135, 0, 1, "", "DeviceCastTransform"], [136, 0, 1, "", "DiscreteActionProjection"], [137, 0, 1, "", "DoubleToFloat"], [138, 0, 1, "", "EndOfLifeTransform"], [139, 0, 1, "", "ExcludeTransform"], [140, 0, 1, "", "FiniteTensorDictCheck"], [141, 0, 1, "", "FlattenObservation"], [142, 0, 1, "", "FrameSkipTransform"], [143, 0, 1, "", "GrayScale"], [144, 0, 1, "", "InitTracker"], [145, 0, 1, "", "KLRewardTransform"], [146, 0, 1, "", "NoopResetEnv"], [147, 0, 1, "", "ObservationNorm"], [148, 0, 1, "", "ObservationTransform"], [149, 0, 1, "", "PermuteTransform"], [150, 0, 1, "", "PinMemoryTransform"], [151, 0, 1, "", "R3MTransform"], [152, 0, 1, "", "RandomCropTensorDict"], [153, 0, 1, "", "RemoveEmptySpecs"], [154, 0, 1, "", "RenameTransform"], [155, 0, 1, "", "Resize"], [156, 0, 1, "", "Reward2GoTransform"], [157, 0, 1, "", "RewardClipping"], [158, 0, 1, "", "RewardScaling"], [159, 0, 1, "", "RewardSum"], [160, 0, 1, "", "SelectTransform"], [161, 0, 1, "", "SignTransform"], [162, 0, 1, "", "SqueezeTransform"], [163, 0, 1, "", "StepCounter"], [164, 0, 1, "", "TargetReturn"], [165, 0, 1, "", "TensorDictPrimer"], [166, 0, 1, "", "TimeMaxPool"], [167, 0, 1, "", "ToTensorImage"], [168, 0, 1, "", "Transform"], [169, 0, 1, "", "TransformedEnv"], [170, 0, 1, "", "UnsqueezeTransform"], [171, 0, 1, "", "VC1Transform"], [172, 0, 1, "", "VIPRewardTransform"], [173, 0, 1, "", "VIPTransform"], [174, 0, 1, "", "VecGymEnvTransform"], [175, 0, 1, "", "VecNorm"], [176, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[123, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[124, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[125, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "transform_env_batch_size"], [126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[127, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[128, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[132, 1, 1, "", "transform_observation_spec"], [132, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[133, 1, 1, "", "append"], [133, 1, 1, "", "forward"], [133, 1, 1, "", "insert"], [133, 1, 1, "", "to"], [133, 1, 1, "", "transform_env_batch_size"], [133, 1, 1, "", "transform_env_device"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"], [133, 1, 1, "", "transform_output_spec"], [133, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "transform_input_spec"], [134, 1, 1, "", "transform_observation_spec"], [134, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_done_spec"], [135, 1, 1, "", "transform_env_device"], [135, 1, 1, "", "transform_input_spec"], [135, 1, 1, "", "transform_observation_spec"], [135, 1, 1, "", "transform_output_spec"], [135, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[136, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "register_keys"], [138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[147, 1, 1, "", "init_stats"], [147, 1, 1, "", "transform_input_spec"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[150, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[151, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[152, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_input_spec"], [153, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_input_spec"], [154, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[156, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[157, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[158, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_input_spec"], [159, 1, 1, "", "transform_observation_spec"], [159, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[161, 1, 1, "", "transform_observation_spec"], [161, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "transform_input_spec"], [163, 1, 1, "", "transform_observation_spec"], [163, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[165, 1, 1, "", "forward"], [165, 1, 1, "", "to"], [165, 1, 1, "", "transform_input_spec"], [165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[167, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[168, 3, 1, "", "container"], [168, 1, 1, "", "forward"], [168, 3, 1, "", "parent"], [168, 1, 1, "", "to"], [168, 1, 1, "", "transform_done_spec"], [168, 1, 1, "", "transform_env_batch_size"], [168, 1, 1, "", "transform_env_device"], [168, 1, 1, "", "transform_input_spec"], [168, 1, 1, "", "transform_observation_spec"], [168, 1, 1, "", "transform_output_spec"], [168, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[169, 1, 1, "", "add_truncated_keys"], [169, 1, 1, "", "append_transform"], [169, 3, 1, "", "batch_locked"], [169, 3, 1, "", "batch_size"], [169, 1, 1, "", "empty_cache"], [169, 1, 1, "", "eval"], [169, 3, 1, "", "input_spec"], [169, 1, 1, "", "insert_transform"], [169, 1, 1, "", "load_state_dict"], [169, 3, 1, "", "output_spec"], [169, 1, 1, "", "set_missing_tolerance"], [169, 1, 1, "", "set_seed"], [169, 1, 1, "", "state_dict"], [169, 1, 1, "", "to"], [169, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[170, 1, 1, "", "transform_input_spec"], [170, 1, 1, "", "transform_observation_spec"], [170, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "make_noload_model"], [171, 1, 1, "", "to"], [171, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[173, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[175, 1, 1, "", "build_td_for_shared_vecnorm"], [175, 1, 1, "", "forward"], [175, 1, 1, "", "get_extra_state"], [175, 1, 1, "", "set_extra_state"], [175, 1, 1, "", "to_observation_norm"], [175, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.rb_transforms": [[177, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[177, 1, 1, "", "add_module"], [177, 1, 1, "", "apply"], [177, 1, 1, "", "bfloat16"], [177, 1, 1, "", "buffers"], [177, 1, 1, "", "children"], [177, 1, 1, "", "compile"], [177, 3, 1, "", "container"], [177, 1, 1, "", "cpu"], [177, 1, 1, "", "cuda"], [177, 1, 1, "", "double"], [177, 1, 1, "", "eval"], [177, 1, 1, "", "extra_repr"], [177, 1, 1, "", "float"], [177, 1, 1, "", "forward"], [177, 1, 1, "", "get_buffer"], [177, 1, 1, "", "get_extra_state"], [177, 1, 1, "", "get_parameter"], [177, 1, 1, "", "get_submodule"], [177, 1, 1, "", "half"], [177, 1, 1, "", "ipu"], [177, 1, 1, "", "load_state_dict"], [177, 1, 1, "", "modules"], [177, 3, 1, "", "n_steps"], [177, 1, 1, "", "named_buffers"], [177, 1, 1, "", "named_children"], [177, 1, 1, "", "named_modules"], [177, 1, 1, "", "named_parameters"], [177, 1, 1, "", "parameters"], [177, 3, 1, "", "parent"], [177, 1, 1, "", "register_backward_hook"], [177, 1, 1, "", "register_buffer"], [177, 1, 1, "", "register_forward_hook"], [177, 1, 1, "", "register_forward_pre_hook"], [177, 1, 1, "", "register_full_backward_hook"], [177, 1, 1, "", "register_full_backward_pre_hook"], [177, 1, 1, "", "register_load_state_dict_post_hook"], [177, 1, 1, "", "register_module"], [177, 1, 1, "", "register_parameter"], [177, 1, 1, "", "register_state_dict_pre_hook"], [177, 1, 1, "", "requires_grad_"], [177, 1, 1, "", "set_extra_state"], [177, 1, 1, "", "share_memory"], [177, 1, 1, "", "state_dict"], [177, 1, 1, "", "to"], [177, 1, 1, "", "to_empty"], [177, 1, 1, "", "train"], [177, 1, 1, "", "transform_done_spec"], [177, 1, 1, "", "transform_env_batch_size"], [177, 1, 1, "", "transform_env_device"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"], [177, 1, 1, "", "transform_output_spec"], [177, 1, 1, "", "transform_reward_spec"], [177, 1, 1, "", "type"], [177, 1, 1, "", "xpu"], [177, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[178, 2, 1, "", "RandomPolicy"], [179, 2, 1, "", "check_env_specs"], [180, 2, 1, "", "exploration_mode"], [181, 2, 1, "", "exploration_type"], [182, 2, 1, "", "get_available_libraries"], [183, 2, 1, "", "make_composite_from_td"], [184, 2, 1, "", "set_exploration_mode"], [185, 2, 1, "", "set_exploration_type"], [186, 2, 1, "", "step_mdp"], [187, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[188, 0, 1, "", "CEMPlanner"], [189, 0, 1, "", "Conv3dNet"], [190, 0, 1, "", "ConvNet"], [191, 0, 1, "", "DTActor"], [192, 0, 1, "", "DdpgCnnActor"], [193, 0, 1, "", "DdpgCnnQNet"], [194, 0, 1, "", "DdpgMlpActor"], [195, 0, 1, "", "DdpgMlpQNet"], [196, 0, 1, "", "DecisionTransformer"], [197, 0, 1, "", "Delta"], [198, 0, 1, "", "DistributionalDQNnet"], [199, 0, 1, "", "DistributionalQValueHook"], [200, 0, 1, "", "DreamerActor"], [201, 0, 1, "", "DuelingCnnDQNet"], [202, 0, 1, "", "GRU"], [203, 0, 1, "", "GRUCell"], [204, 0, 1, "", "GRUModule"], [205, 0, 1, "", "IndependentNormal"], [206, 0, 1, "", "LSTM"], [207, 0, 1, "", "LSTMCell"], [208, 0, 1, "", "LSTMModule"], [209, 0, 1, "", "MLP"], [210, 0, 1, "", "MPCPlannerBase"], [211, 0, 1, "", "MPPIPlanner"], [212, 0, 1, "", "MaskedCategorical"], [213, 0, 1, "", "MaskedOneHotCategorical"], [214, 0, 1, "", "MultiAgentConvNet"], [215, 0, 1, "", "MultiAgentMLP"], [216, 0, 1, "", "NoisyLazyLinear"], [217, 0, 1, "", "NoisyLinear"], [218, 0, 1, "", "NormalParamWrapper"], [219, 0, 1, "", "ObsDecoder"], [220, 0, 1, "", "ObsEncoder"], [221, 0, 1, "", "OneHotCategorical"], [222, 0, 1, "", "OnlineDTActor"], [223, 0, 1, "", "QMixer"], [224, 0, 1, "", "QValueHook"], [225, 0, 1, "", "RSSMPosterior"], [226, 0, 1, "", "RSSMPrior"], [227, 0, 1, "", "Squeeze2dLayer"], [228, 0, 1, "", "SqueezeLayer"], [229, 0, 1, "", "TanhDelta"], [230, 0, 1, "", "TanhNormal"], [231, 0, 1, "", "TruncatedNormal"], [232, 0, 1, "", "VDNMixer"], [233, 0, 1, "", "VmapModule"], [234, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[188, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[189, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[190, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[191, 1, 1, "", "default_config"], [191, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[192, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[193, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[194, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[195, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[196, 0, 1, "", "DTConfig"], [196, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[197, 1, 1, "", "log_prob"], [197, 3, 1, "", "mean"], [197, 3, 1, "", "mode"], [197, 1, 1, "", "rsample"], [197, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[198, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[200, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[201, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[202, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[203, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[204, 1, 1, "", "forward"], [204, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[205, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[206, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[207, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[208, 1, 1, "", "forward"], [208, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.MLP": [[209, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[211, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[212, 1, 1, "", "log_prob"], [212, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[213, 1, 1, "", "log_prob"], [213, 1, 1, "", "rsample"], [213, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[216, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[218, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[219, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[220, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[221, 1, 1, "", "log_prob"], [221, 3, 1, "", "mode"], [221, 1, 1, "", "rsample"], [221, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[222, 1, 1, "", "default_config"], [222, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[223, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[225, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[226, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[228, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[229, 3, 1, "", "mean"], [229, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[230, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[231, 1, 1, "", "log_prob"], [231, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[232, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[233, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[235, 0, 1, "", "Actor"], [236, 0, 1, "", "ActorCriticOperator"], [237, 0, 1, "", "ActorCriticWrapper"], [238, 0, 1, "", "ActorValueOperator"], [239, 0, 1, "", "AdditiveGaussianWrapper"], [240, 0, 1, "", "DecisionTransformerInferenceWrapper"], [241, 0, 1, "", "DistributionalQValueActor"], [242, 0, 1, "", "DistributionalQValueModule"], [243, 0, 1, "", "EGreedyModule"], [244, 0, 1, "", "EGreedyWrapper"], [245, 0, 1, "", "LMHeadActorValueOperator"], [246, 0, 1, "", "MultiStepActorWrapper"], [247, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [248, 0, 1, "", "ProbabilisticActor"], [249, 0, 1, "", "QValueActor"], [250, 0, 1, "", "QValueModule"], [251, 0, 1, "", "SafeModule"], [252, 0, 1, "", "SafeProbabilisticModule"], [253, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [254, 0, 1, "", "SafeSequential"], [255, 0, 1, "", "TanhModule"], [256, 0, 1, "", "ValueOperator"], [257, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[236, 1, 1, "", "get_critic_operator"], [236, 1, 1, "", "get_policy_head"], [236, 1, 1, "", "get_value_head"], [236, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[237, 1, 1, "", "get_policy_head"], [237, 1, 1, "", "get_policy_operator"], [237, 1, 1, "", "get_value_head"], [237, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[238, 1, 1, "", "get_policy_head"], [238, 1, 1, "", "get_policy_operator"], [238, 1, 1, "", "get_value_head"], [238, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "mask_context"], [240, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[242, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[246, 1, 1, "", "forward"], [246, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[250, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[251, 1, 1, "", "random"], [251, 1, 1, "", "random_sample"], [251, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[252, 1, 1, "", "random"], [252, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[255, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[257, 1, 1, "", "get_reward_operator"], [257, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[258, 0, 1, "", "biased_softplus"], [259, 0, 1, "", "get_primers_from_module"], [260, 0, 1, "", "inv_softplus"], [261, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[258, 1, 1, "", "forward"]], "torchrl.objectives": [[262, 0, 1, "", "A2CLoss"], [263, 0, 1, "", "CQLLoss"], [264, 0, 1, "", "ClipPPOLoss"], [265, 0, 1, "", "DDPGLoss"], [266, 0, 1, "", "DQNLoss"], [267, 0, 1, "", "DTLoss"], [268, 0, 1, "", "DiscreteCQLLoss"], [269, 0, 1, "", "DiscreteIQLLoss"], [270, 0, 1, "", "DiscreteSACLoss"], [271, 0, 1, "", "DistributionalDQNLoss"], [272, 0, 1, "", "DreamerActorLoss"], [273, 0, 1, "", "DreamerModelLoss"], [274, 0, 1, "", "DreamerValueLoss"], [275, 0, 1, "", "HardUpdate"], [276, 0, 1, "", "IQLLoss"], [277, 0, 1, "", "KLPENPPOLoss"], [278, 0, 1, "", "LossModule"], [279, 0, 1, "", "OnlineDTLoss"], [280, 0, 1, "", "PPOLoss"], [281, 0, 1, "", "REDQLoss"], [282, 0, 1, "", "ReinforceLoss"], [283, 0, 1, "", "SACLoss"], [284, 0, 1, "", "SoftUpdate"], [285, 0, 1, "", "TD3Loss"], [286, 0, 1, "", "ValueEstimators"], [287, 0, 1, "", "default_value_kwargs"], [288, 0, 1, "", "distance_loss"], [289, 0, 1, "", "hold_out_net"], [290, 0, 1, "", "hold_out_params"], [292, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[264, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[267, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[269, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[273, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[274, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "loss_value_diff"], [276, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[277, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[278, 1, 1, "", "convert_to_functional"], [278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"], [278, 1, 1, "", "named_parameters"], [278, 1, 1, "", "parameters"], [278, 1, 1, "", "set_keys"], [278, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[279, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "load_state_dict"], [283, 1, 1, "", "make_value_estimator"], [283, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[291, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[293, 0, 1, "", "GAE"], [294, 0, 1, "", "TD0Estimator"], [295, 0, 1, "", "TD1Estimator"], [296, 0, 1, "", "TDLambdaEstimator"], [297, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[294, 1, 1, "", "forward"], [294, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[296, 1, 1, "", "forward"], [296, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "set_keys"], [297, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[298, 0, 1, "", "generalized_advantage_estimate"], [299, 0, 1, "", "reward2go"], [300, 0, 1, "", "td0_advantage_estimate"], [301, 0, 1, "", "td0_return_estimate"], [302, 0, 1, "", "td1_advantage_estimate"], [303, 0, 1, "", "td1_return_estimate"], [304, 0, 1, "", "td_lambda_advantage_estimate"], [305, 0, 1, "", "td_lambda_return_estimate"], [306, 0, 1, "", "vec_generalized_advantage_estimate"], [307, 0, 1, "", "vec_td1_advantage_estimate"], [308, 0, 1, "", "vec_td1_return_estimate"], [309, 0, 1, "", "vec_td_lambda_advantage_estimate"], [310, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[311, 2, 1, "", "PixelRenderTransform"], [312, 2, 1, "", "TensorDictRecorder"], [313, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[314, 2, 1, "", "Logger"], [316, 2, 1, "", "generate_exp_name"], [317, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[315, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[318, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[319, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[320, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[321, 0, 1, "", "BatchSubSampler"], [322, 0, 1, "", "ClearCudaCache"], [323, 0, 1, "", "CountFramesLog"], [324, 0, 1, "", "LogReward"], [325, 0, 1, "", "OptimizerHook"], [326, 0, 1, "", "Recorder"], [327, 0, 1, "", "ReplayBufferTrainer"], [328, 0, 1, "", "RewardNormalizer"], [329, 0, 1, "", "SelectKeys"], [330, 0, 1, "", "Trainer"], [331, 0, 1, "", "TrainerHookBase"], [332, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[321, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[322, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[323, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[324, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[325, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[326, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[327, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[328, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[329, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[331, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[332, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[333, 2, 1, "", "correct_for_frame_skip"], [334, 2, 1, "", "get_stats_random_rollout"], [335, 2, 1, "", "make_collector_offpolicy"], [336, 2, 1, "", "make_collector_onpolicy"], [337, 2, 1, "", "make_dqn_loss"], [338, 2, 1, "", "make_replay_buffer"], [339, 2, 1, "", "make_target_updater"], [340, 2, 1, "", "make_trainer"], [341, 2, 1, "", "parallel_env_constructor"], [342, 2, 1, "", "sync_async_collector"], [343, 2, 1, "", "sync_sync_collector"], [344, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 348, 349, 350, 351, 353, 354, 355, 358, 365, 366, 367, 371, 372], "instal": [0, 6, 7, 371], "get": [0, 357, 358, 359, 360, 361, 362], "start": [0, 357, 358, 359, 360, 361, 362], "tutori": [0, 355, 365, 366], "basic": [0, 369], "intermedi": [0, 8], "advanc": 0, "refer": [0, 346], "knowledg": [0, 347], "base": [0, 2, 7, 347], "indic": 0, "tabl": 0, "collector": [1, 353, 354, 355, 356, 360, 362, 365, 366, 371], "packag": [1, 2, 3, 348, 349, 350, 351], "batch": [1, 353, 367, 369], "size": [1, 353, 369], "replai": [1, 2, 353, 354, 355, 356, 360, 362, 365, 366, 369, 371], "buffer": [1, 2, 353, 354, 355, 356, 360, 362, 365, 366, 369, 371], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 353, 354, 355, 360, 362, 365, 366, 371], "distribut": [1, 348], "helper": [1, 3], "function": [1, 4, 349, 354, 355, 359, 365, 366, 371], "compos": [2, 133], "support": 2, "type": 2, "choos": 2, "storag": [2, 78, 353, 360, 369], "sampl": [2, 369], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 354, 369], "trajectori": [2, 369], "checkpoint": [2, 350], "episod": [2, 4], "format": 2, "ted": [2, 357], "The": [2, 353], "rational": 2, "behind": 2, "structur": [2, 369], "dimension": [2, 4], "tensordict": [2, 348, 369, 371], "special": [2, 358, 371], "case": 2, "footnot": 2, "multi": [2, 3, 348, 349, 364, 365, 366], "agent": [2, 3, 4, 348, 349, 365, 366], "present": 2, "memori": 2, "polici": [2, 4, 353, 355, 356, 358, 362, 364, 365, 366, 367], "rnn": 2, "transform": [2, 3, 168, 353, 355, 357, 365, 366, 367, 369, 371, 372], "step": [2, 353, 355, 357, 360, 365, 366, 369, 372], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 46], "reinforc": [2, 349, 355, 365, 366], "learn": [2, 4, 355, 365, 366], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 348, 349, 350, 365], "env": [3, 367, 371, 372], "vector": [3, 371], "environ": [3, 4, 6, 7, 353, 354, 355, 356, 357, 362, 364, 365, 366, 367, 371, 372], "auto": 3, "reset": [3, 367, 372], "clone": [3, 7], "mask": 3, "action": [3, 4, 356, 367], "record": [3, 326, 350, 353, 361], "video": [3, 361], "domain": [3, 348], "specif": [3, 348, 364], "librari": [3, 371], "thing": [4, 353, 367], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 357, 359, 371], "gener": [4, 348], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 353, 362, 367], "algorithm": [4, 348], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 353, 354, 359, 362], "return": [4, 349], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 371], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 364], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 353, 354, 355], "standard": 4, "explor": [4, 348, 353, 354, 358], "valu": [4, 348, 349, 353, 355, 356, 358], "loss": [4, 353, 354, 355, 356, 362, 365, 366], "earli": 4, "train": [4, 8, 349, 353, 355, 356, 359, 362, 365, 366, 367], "roughli": 4, "uniformli": 4, "random": [4, 365, 366], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 354], "increas": 4, "an": [4, 355, 356, 357, 367], "dynam": [4, 369], "can": 4, "low": 4, "forward": [4, 353], "model": [4, 348, 353, 354, 356, 359, 368, 371], "also": 4, "us": [4, 6, 9, 356, 368, 369, 371], "offlin": 4, "observ": [4, 353], "space": 4, "effect": [4, 367], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 372], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 353], "render": [7, 362, 365, 366, 372], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 353], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 367], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "adaptiveklcontrol": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "constantklcontrol": 27, "discretetensorspec": 28, "lazystackedcompositespec": 29, "lazystackedtensorspec": 30, "multidiscretetensorspec": 31, "multionehotdiscretetensorspec": 32, "multistep": 33, "nontensorspec": 34, "onehotdiscretetensorspec": 35, "pairwisedataset": 36, "prioritizedreplaybuff": 37, "promptdata": 38, "prompttensordicttoken": 39, "replaybuff": 40, "rewarddata": 41, "rolloutfrommodel": 42, "tensordictprioritizedreplaybuff": 43, "tensordictreplaybuff": 44, "tensordicttoken": 45, "tokenizeddatasetload": 47, "unboundedcontinuoustensorspec": 48, "unboundeddiscretetensorspec": 49, "check_no_exclusive_kei": 50, "consolidate_spec": 51, "contains_lazy_spec": 52, "create_infinite_iter": 53, "ataridqnexperiencereplai": 54, "basedatasetexperiencereplai": 55, "d4rlexperiencereplai": 56, "gendgrlexperiencereplai": 57, "minariexperiencereplai": 58, "openmlexperiencereplai": 59, "openxexperiencereplai": 60, "robosetexperiencereplai": 61, "vd4rlexperiencereplai": 62, "get_dataload": 63, "immutabledatasetwrit": 64, "lazymemmapstorag": 65, "lazytensorstorag": 66, "liststorag": 67, "prioritizedsampl": 68, "prioritizedslicesampl": 69, "randomsampl": 70, "replaybufferensembl": 71, "roundrobinwrit": 72, "sampler": 73, "samplerensembl": 74, "samplerwithoutreplac": 75, "slicesampl": 76, "slicesamplerwithoutreplac": 77, "storageensembl": 79, "tensordictmaxvaluewrit": 80, "tensordictroundrobinwrit": 81, "tensorstorag": 82, "writer": 83, "writerensembl": 84, "braxenv": 85, "braxwrapp": 86, "dmcontrolenv": 87, "dmcontrolwrapp": 88, "envbas": [89, 367], "envcreat": 90, "envmetadata": 91, "gymenv": 92, "gymlikeenv": 93, "gymwrapp": 94, "habitatenv": 95, "isaacgymenv": 96, "isaacgymwrapp": 97, "jumanjienv": 98, "jumanjiwrapp": 99, "mogymenv": 100, "mogymwrapp": 101, "marlgroupmaptyp": 102, "meltingpotenv": 103, "meltingpotwrapp": 104, "modelbasedenvbas": 105, "multithreadedenv": 106, "multithreadedenvwrapp": 107, "openmlenv": 108, "parallelenv": 109, "pettingzooenv": 110, "pettingzoowrapp": 111, "robohiveenv": 112, "smacv2env": 113, "smacv2wrapp": 114, "serialenv": 115, "vmasenv": 116, "vmaswrapp": 117, "check_marl_group": 118, "gym_backend": 119, "dreamerdecod": 120, "dreamerenv": 121, "set_gym_backend": 122, "actionmask": 123, "autoresetenv": 124, "autoresettransform": 125, "batchsizetransform": 126, "binarizereward": 127, "burnintransform": 128, "catfram": [129, 369], "cattensor": 130, "centercrop": 131, "cliptransform": 132, "dtypecasttransform": 134, "devicecasttransform": 135, "discreteactionproject": 136, "doubletofloat": 137, "endoflifetransform": 138, "excludetransform": 139, "finitetensordictcheck": 140, "flattenobserv": 141, "frameskiptransform": 142, "grayscal": 143, "inittrack": 144, "klrewardtransform": 145, "noopresetenv": 146, "observationnorm": 147, "observationtransform": 148, "permutetransform": 149, "pinmemorytransform": 150, "r3mtransform": 151, "randomcroptensordict": 152, "removeemptyspec": 153, "renametransform": 154, "resiz": 155, "reward2gotransform": 156, "rewardclip": 157, "rewardsc": 158, "rewardsum": 159, "selecttransform": 160, "signtransform": 161, "squeezetransform": 162, "stepcount": 163, "targetreturn": 164, "tensordictprim": 165, "timemaxpool": 166, "totensorimag": 167, "transformedenv": 169, "unsqueezetransform": 170, "vc1transform": 171, "viprewardtransform": 172, "viptransform": 173, "vecgymenvtransform": 174, "vecnorm": [175, 372], "gsdenois": 176, "multisteptransform": 177, "randompolici": 178, "check_env_spec": 179, "exploration_mod": 180, "exploration_typ": 181, "get_available_librari": 182, "make_composite_from_td": 183, "set_exploration_mod": 184, "set_exploration_typ": 185, "step_mdp": 186, "terminated_or_trunc": 187, "cemplann": 188, "conv3dnet": 189, "convnet": 190, "dtactor": 191, "ddpgcnnactor": 192, "ddpgcnnqnet": 193, "ddpgmlpactor": 194, "ddpgmlpqnet": 195, "decisiontransform": 196, "delta": 197, "distributionaldqnnet": 198, "distributionalqvaluehook": 199, "dreameractor": 200, "duelingcnndqnet": 201, "gru": 202, "grucel": 203, "grumodul": 204, "independentnorm": 205, "lstm": [206, 356], "lstmcell": 207, "lstmmodul": 208, "mlp": [209, 356], "mpcplannerbas": 210, "mppiplann": 211, "maskedcategor": 212, "maskedonehotcategor": 213, "multiagentconvnet": 214, "multiagentmlp": 215, "noisylazylinear": 216, "noisylinear": 217, "normalparamwrapp": 218, "obsdecod": 219, "obsencod": 220, "onehotcategor": 221, "onlinedtactor": 222, "qmixer": [223, 349], "qvaluehook": 224, "rssmposterior": 225, "rssmprior": 226, "squeeze2dlay": 227, "squeezelay": 228, "tanhdelta": 229, "tanhnorm": 230, "truncatednorm": 231, "vdnmixer": 232, "vmapmodul": 233, "reset_nois": 234, "actor": [235, 348, 353, 358], "actorcriticoper": 236, "actorcriticwrapp": 237, "actorvalueoper": 238, "additivegaussianwrapp": 239, "decisiontransformerinferencewrapp": 240, "distributionalqvalueactor": 241, "distributionalqvaluemodul": 242, "egreedymodul": 243, "egreedywrapp": 244, "lmheadactorvalueoper": 245, "multistepactorwrapp": 246, "ornsteinuhlenbeckprocesswrapp": 247, "probabilisticactor": 248, "qvalueactor": 249, "qvaluemodul": 250, "safemodul": [251, 348], "safeprobabilisticmodul": 252, "safeprobabilistictensordictsequenti": 253, "safesequenti": 254, "tanhmodul": 255, "valueoper": 256, "worldmodelwrapp": 257, "biased_softplu": 258, "get_primers_from_modul": 259, "inv_softplu": 260, "map": [261, 365], "a2closs": 262, "cqlloss": 263, "clipppoloss": 264, "ddpgloss": 265, "dqnloss": 266, "dtloss": 267, "discretecqlloss": 268, "discreteiqlloss": 269, "discretesacloss": 270, "distributionaldqnloss": 271, "dreameractorloss": 272, "dreamermodelloss": 273, "dreamervalueloss": 274, "hardupd": 275, "iqlloss": 276, "klpenppoloss": 277, "lossmodul": [278, 353, 359], "onlinedtloss": 279, "ppoloss": 280, "redqloss": 281, "reinforceloss": 282, "sacloss": 283, "softupd": 284, "td3loss": 285, "valueestim": 286, "default_value_kwarg": 287, "distance_loss": 288, "hold_out_net": 289, "hold_out_param": 290, "qmixerloss": 291, "next_state_valu": 292, "gae": 293, "td0estim": 294, "td1estim": 295, "tdlambdaestim": 296, "valueestimatorbas": 297, "generalized_advantage_estim": 298, "reward2go": 299, "td0_advantage_estim": 300, "td0_return_estim": 301, "td1_advantage_estim": 302, "td1_return_estim": 303, "td_lambda_advantage_estim": 304, "td_lambda_return_estim": 305, "vec_generalized_advantage_estim": 306, "vec_td1_advantage_estim": 307, "vec_td1_return_estim": 308, "vec_td_lambda_advantage_estim": 309, "vec_td_lambda_return_estim": 310, "pixelrendertransform": 311, "tensordictrecord": 312, "videorecord": 313, "logger": [314, 350, 361, 362], "csvlogger": 315, "generate_exp_nam": 316, "get_logg": 317, "mlflowlogg": 318, "tensorboardlogg": 319, "wandblogg": 320, "batchsubsampl": 321, "clearcudacach": 322, "countframeslog": 323, "logreward": 324, "optimizerhook": 325, "replaybuffertrain": 327, "rewardnorm": 328, "selectkei": 329, "trainer": [330, 350, 354], "trainerhookbas": 331, "updateweight": 332, "correct_for_frame_skip": 333, "get_stats_random_rollout": 334, "make_collector_offpolici": 335, "make_collector_onpolici": 336, "make_dqn_loss": 337, "make_replay_buff": 338, "make_target_updat": 339, "make_train": 340, "parallel_env_constructor": 341, "sync_async_collector": 342, "sync_sync_collector": 343, "transformed_env_constructor": 344, "readm": [345, 363], "tuto": [345, 363], "api": 346, "contribut": [347, 371], "content": 347, "modul": [348, 353, 356, 358, 362, 371], "tensordictmodul": [348, 358, 371], "wrapper": [348, 358], "probabilist": [348, 358], "q": [348, 354, 356, 358], "oper": 348, "join": 348, "hook": [348, 350, 354], "regular": 348, "planner": 348, "object": [349, 353, 359, 371], "dqn": [349, 354, 356], "ddpg": [349, 353, 365], "sac": 349, "redq": 349, "iql": 349, "cql": 349, "dt": 349, "td3": 349, "ppo": [349, 355, 366], "a2c": 349, "dreamer": 349, "builder": 350, "_util": 351, "comput": [352, 354, 367, 370], "time": [352, 353, 370], "code": [353, 367], "overview": [353, 356], "setup": [353, 356], "__init__": 353, "method": 353, "estim": 353, "put": 353, "togeth": [353, 367], "call": 353, "parallel": [353, 364, 372], "execut": [353, 364, 367], "stat": 353, "build": [353, 354, 362, 369], "evalu": 353, "construct": 353, "target": [353, 354, 359], "network": [353, 354, 355, 356, 358, 365, 366], "updat": 353, "experi": [353, 367], "result": [353, 355, 365, 366], "conclus": [353, 354, 355, 356, 365, 366, 367, 369], "next": [353, 355, 357, 360, 365, 366, 369], "A": [354, 369], "exampl": [354, 369], "deep": 354, "collect": [354, 355, 360], "paramet": [354, 355, 359], "hyperparamet": [354, 355, 365, 366], "regist": 354, "possibl": 354, "improv": 354, "defin": [355, 365, 366], "loop": [355, 356, 362, 365, 366, 367], "recurr": 356, "convolut": 356, "select": 356, "further": [356, 359], "read": 356, "creat": 357, "run": [357, 372], "rollout": [357, 364, 365, 366, 367, 372], "s": [358, 359], "output": 359, "consider": 359, "log": 361, "own": 362, "first": 362, "design": 362, "divers": 364, "competit": 365, "group": 365, "critic": [365, 366], "pendulum": 367, "write": 367, "_step": 367, "simul": 367, "_reset": 367, "metadata": 367, "_spec": 367, "spec": [367, 372], "shape": 367, "seed": [367, 372], "wrap": 367, "class": [367, 371], "test": 367, "our": 367, "custom": [367, 369], "simpl": 367, "pretrain": 368, "vanilla": 369, "integr": 369, "tensorclass": 369, "other": 369, "tensor": 369, "pytre": 369, "iter": 369, "over": 369, "fix": 369, "priorit": 369, "save": 369, "raw": 369, "imag": 369, "more": 369, "complex": 369, "introduct": 371, "config": 371, "sequenc": 371, "program": 371, "ensembl": 371, "meta": 371, "state": 371, "frame_skip": 372, "deepmind": 372, "control": 372, "devic": 372, "close": 372, "access": 372, "attribut": 372, "kwarg": 372}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})