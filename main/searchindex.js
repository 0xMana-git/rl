Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 119, 120, 122, 123, 124, 125, 126, 127, 130, 131, 134, 139, 140, 142, 143, 145, 146, 148, 151, 153, 154, 157, 163, 164, 168, 169, 170, 171, 173, 181, 182, 183, 184, 185, 186, 188, 191, 192, 194, 196, 206, 207, 209, 210, 211, 212, 219, 221, 223, 225, 226, 227, 231, 232, 234, 245, 246, 248, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 272, 273, 277, 281, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 314, 315, 316, 317, 318, 332, 334, 337, 341, 346, 347, 351, 352, 355, 362, 363, 364, 365, 368, 369, 370, 374, 375, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 392, 393], "open": [0, 5, 7, 12, 41, 43, 46, 67, 375, 386, 387, 392], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "reinforc": [0, 3, 9, 64, 117, 118, 146, 209, 210, 211, 212, 216, 261, 266, 267, 282, 283, 287, 288, 289, 291, 295, 296, 302, 303, 304, 305, 367, 373, 375, 378, 379, 384, 388, 391, 392], "learn": [0, 3, 7, 8, 9, 18, 37, 64, 65, 66, 68, 69, 103, 117, 118, 122, 123, 130, 146, 209, 210, 211, 212, 216, 228, 235, 261, 266, 267, 282, 283, 287, 288, 289, 291, 295, 296, 301, 302, 303, 304, 305, 367, 369, 370, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 390, 391, 392, 393], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 61, 119, 181, 235, 253, 268, 276, 282, 284, 297, 298, 300, 302, 342, 366, 368, 369, 370, 371, 374, 375, 376, 381, 384, 386, 387, 389, 390, 393], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 44, 52, 101, 102, 111, 120, 199, 367, 368, 369, 372, 374, 375, 376, 378, 379, 381, 386, 387, 388, 393], "pytorch": [0, 1, 2, 3, 23, 65, 132, 133, 184, 196, 219, 223, 234, 235, 351, 366, 368, 369, 371, 374, 376, 377, 380, 384, 386, 387, 388, 389, 390, 392, 393], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 37, 52, 64, 103, 107, 111, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 138, 192, 194, 223, 341, 368, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 149, 150, 151, 153, 154, 155, 163, 164, 168, 169, 173, 176, 180, 181, 182, 185, 186, 188, 190, 192, 194, 196, 204, 205, 206, 207, 209, 219, 221, 222, 223, 225, 227, 228, 231, 232, 233, 235, 236, 249, 251, 253, 258, 260, 261, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 332, 334, 341, 347, 363, 364, 365, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "directli": [0, 3, 4, 8, 23, 61, 82, 99, 100, 103, 106, 107, 119, 123, 124, 130, 131, 164, 173, 191, 298, 305, 365, 369, 375, 376, 378, 386, 387, 388, 390], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 142, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 200, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 248, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 312, 313, 314, 315, 316, 317, 320, 332, 333, 334, 342, 348, 351, 354, 355, 359, 361, 362, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393], "pypi": [0, 2, 392], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 103, 107, 110, 113, 117, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 150, 168, 182, 184, 185, 186, 188, 190, 192, 193, 194, 206, 207, 219, 222, 223, 226, 232, 233, 234, 241, 249, 250, 254, 256, 268, 271, 272, 298, 305, 334, 341, 348, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 390, 393], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 93, 103, 106, 107, 108, 110, 111, 113, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 184, 188, 193, 194, 216, 223, 226, 234, 236, 253, 257, 258, 260, 261, 271, 276, 282, 291, 298, 300, 314, 319, 327, 341, 346, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 388, 389, 393], "about": [0, 3, 5, 7, 9, 18, 19, 20, 52, 65, 68, 69, 103, 123, 130, 370, 374, 375, 376, 378, 379, 380, 381, 382, 383, 386, 387, 388, 390, 392, 393], "instruct": [0, 6, 7, 10, 22, 63, 153, 155, 374, 375, 376, 377, 386, 387, 390], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 123, 130, 254, 255, 256, 369, 374, 378, 380, 381, 383, 385, 387], "section": [0, 2, 3, 4, 24, 219, 223, 375, 378, 383, 386, 387], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 70, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 206, 207, 219, 222, 223, 226, 232, 249, 268, 271, 348, 374, 375, 376, 377, 378, 386, 388], "pip": [0, 10, 66, 378, 379, 380, 381, 382, 383, 387, 392, 393], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 80, 81, 82, 85, 87, 88, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 143, 145, 146, 147, 148, 149, 151, 154, 158, 163, 164, 166, 168, 169, 172, 173, 176, 177, 181, 182, 183, 186, 188, 190, 191, 192, 194, 204, 206, 207, 213, 216, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 251, 253, 258, 261, 262, 263, 265, 267, 268, 269, 270, 275, 282, 283, 284, 285, 286, 288, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 338, 342, 348, 355, 361, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "python": [0, 3, 5, 6, 7, 10, 11, 14, 15, 21, 121, 138, 219, 220, 221, 223, 224, 225, 229, 230, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 35, 36, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 103, 106, 107, 108, 113, 123, 124, 130, 131, 142, 143, 146, 147, 158, 164, 168, 169, 184, 186, 188, 207, 219, 221, 223, 225, 226, 232, 234, 238, 253, 259, 260, 261, 268, 269, 271, 272, 284, 293, 297, 298, 300, 333, 334, 350, 369, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "low": [0, 3, 26, 80, 103, 107, 123, 124, 130, 131, 139, 149, 153, 200, 247, 248, 249, 259, 261, 268, 275, 374, 375, 376, 386, 387, 388, 392, 393], "high": [0, 3, 9, 26, 41, 43, 46, 50, 80, 103, 107, 123, 124, 130, 131, 139, 149, 153, 163, 200, 247, 248, 249, 259, 261, 268, 275, 314, 319, 327, 374, 375, 376, 386, 387, 388, 390, 392, 393], "level": [0, 2, 3, 4, 22, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 106, 108, 146, 180, 297, 374, 375, 381, 392], "abstract": [0, 3, 8, 25, 26, 27, 29, 33, 34, 35, 39, 53, 55, 56, 61, 62, 66, 97, 103, 165, 227, 318, 343, 352, 371, 376, 388, 392], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 82, 85, 86, 88, 89, 91, 93, 95, 103, 104, 106, 107, 108, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 141, 142, 143, 145, 146, 149, 150, 151, 153, 154, 155, 157, 158, 162, 163, 166, 168, 173, 176, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 200, 203, 204, 205, 212, 214, 219, 220, 221, 223, 224, 225, 227, 229, 230, 231, 233, 235, 239, 241, 244, 259, 260, 262, 265, 267, 268, 269, 271, 272, 273, 274, 275, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 309, 312, 313, 314, 315, 316, 317, 318, 332, 341, 348, 361, 365, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 145, 153, 251, 298, 369, 392], "effici": [0, 1, 2, 4, 8, 219, 235, 369, 374, 375, 376, 377, 380, 381, 383, 385, 386, 387, 389, 390, 392], "modular": [0, 61, 274, 390, 392], "document": [0, 2, 5, 7, 11, 18, 19, 21, 37, 67, 103, 107, 123, 124, 130, 131, 186, 194, 366, 375, 377, 378, 381, 384, 392], "properli": [0, 1, 103, 107, 123, 124, 130, 131, 203, 376, 382, 386, 387, 388, 392], "test": [0, 3, 5, 99, 100, 112, 113, 117, 118, 188, 196, 221, 225, 347, 361, 376, 377, 392], "The": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 79, 80, 82, 85, 87, 88, 89, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 142, 143, 145, 146, 150, 151, 154, 155, 156, 164, 166, 168, 173, 175, 176, 177, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 196, 203, 204, 205, 209, 210, 211, 212, 213, 216, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 235, 236, 242, 243, 244, 253, 254, 257, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 320, 332, 334, 336, 339, 340, 341, 342, 346, 361, 363, 364, 367, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 392, 393], "code": [0, 3, 5, 7, 8, 14, 15, 67, 103, 107, 123, 124, 130, 131, 168, 186, 188, 219, 220, 221, 223, 224, 225, 268, 274, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393], "aim": [0, 2, 3, 7, 33, 34, 168, 188, 190, 226, 354, 368, 369, 370, 374, 375, 392], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 41, 43, 46, 66, 69, 70, 74, 75, 89, 91, 95, 96, 98, 99, 100, 106, 108, 112, 120, 122, 123, 125, 127, 143, 146, 155, 164, 182, 183, 185, 199, 216, 251, 260, 261, 268, 271, 274, 291, 298, 314, 315, 316, 317, 339, 367, 369, 371, 376, 377, 378, 379, 387, 388, 390, 392], "research": [0, 7, 9, 117, 118, 392], "most": [0, 1, 2, 3, 7, 8, 14, 15, 37, 87, 88, 103, 107, 123, 124, 130, 131, 153, 191, 196, 374, 376, 378, 379, 380, 381, 382, 383, 386, 388, 392, 393], "written": [0, 1, 2, 3, 12, 30, 41, 43, 46, 48, 54, 63, 64, 67, 72, 74, 80, 82, 87, 88, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 139, 146, 155, 162, 176, 180, 183, 191, 194, 203, 204, 253, 266, 267, 268, 271, 272, 276, 282, 284, 297, 300, 302, 313, 332, 333, 334, 369, 370, 371, 374, 377, 379, 385, 388, 392], "highli": [0, 2, 378, 392, 393], "wai": [0, 1, 2, 3, 4, 61, 65, 82, 93, 111, 168, 171, 190, 191, 223, 300, 314, 315, 316, 317, 369, 374, 375, 376, 378, 380, 381, 385, 386, 387, 388, 389, 390, 392, 393], "easili": [0, 1, 2, 3, 7, 103, 107, 123, 124, 130, 131, 370, 374, 375, 376, 378, 379, 380, 383, 386, 387, 392, 393], "swap": [0, 1, 3, 106, 191, 376, 389, 392], "compon": [0, 1, 2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 216, 242, 260, 261, 270, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 346, 351, 374, 375, 376, 377, 379, 380, 383, 385, 386, 387, 388, 389, 392], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 91, 96, 103, 104, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 203, 208, 209, 213, 216, 217, 221, 225, 240, 241, 242, 250, 259, 264, 265, 275, 278, 279, 281, 287, 299, 332, 334, 348, 365, 367, 373, 375, 377, 379, 381, 382, 383, 384, 389, 391], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 98, 103, 104, 107, 111, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 151, 154, 182, 186, 192, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 250, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 297, 334, 374, 375, 377, 378, 379, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "write": [0, 2, 3, 8, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 91, 98, 103, 107, 149, 166, 167, 176, 178, 180, 184, 204, 253, 271, 272, 274, 276, 285, 286, 288, 289, 290, 296, 301, 303, 305, 306, 313, 318, 334, 369, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 107, 120, 123, 124, 128, 129, 130, 131, 143, 176, 185, 192, 194, 203, 204, 219, 221, 225, 266, 267, 271, 272, 277, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 341, 370, 374, 376, 377, 378, 380, 386, 387, 388, 392, 393], "ones": [0, 2, 23, 27, 37, 42, 45, 50, 51, 103, 107, 123, 124, 125, 126, 130, 131, 147, 150, 151, 152, 154, 164, 168, 173, 182, 185, 186, 188, 190, 194, 195, 229, 230, 251, 271, 282, 283, 285, 296, 300, 301, 303, 305, 306, 320, 374, 376, 386, 387, 388, 390, 392, 393], "littl": [0, 1, 3, 52, 103, 107, 123, 124, 130, 131, 186, 282, 284, 297, 300, 302, 376, 377, 381, 390, 392, 393], "effort": [0, 3, 388, 390, 392], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 96, 98, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 164, 168, 169, 170, 171, 173, 176, 177, 178, 180, 182, 183, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 312, 314, 315, 316, 317, 318, 332, 333, 341, 342, 344, 347, 348, 351, 353, 354, 355, 361, 365, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "repo": [0, 6, 63, 146, 183, 188, 368, 387, 392], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 87, 88, 101, 102, 106, 108, 109, 127, 258, 263, 267, 286, 289, 296, 312, 380, 392], "align": [0, 219, 223, 392], "exist": [0, 2, 3, 4, 12, 18, 21, 37, 41, 43, 46, 54, 103, 107, 123, 124, 130, 131, 147, 152, 186, 194, 303, 355, 365, 386, 387, 392, 393], "ecosystem": [0, 381, 392], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 61, 67, 74, 75, 82, 85, 87, 93, 95, 103, 104, 107, 111, 117, 118, 123, 124, 130, 131, 132, 133, 143, 146, 180, 181, 182, 183, 186, 194, 219, 221, 223, 225, 231, 233, 248, 257, 258, 261, 263, 265, 267, 272, 282, 297, 298, 300, 302, 334, 374, 375, 376, 377, 378, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "dataset": [0, 32, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 85, 87, 88, 122, 192, 334, 367, 374, 375, 378, 389, 390, 392, 393], "pillar": [0, 392], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 142, 143, 145, 146, 147, 151, 152, 153, 154, 159, 163, 164, 168, 169, 170, 173, 176, 180, 181, 182, 183, 185, 186, 188, 191, 192, 196, 205, 221, 225, 227, 228, 258, 265, 267, 288, 292, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 342, 344, 347, 354, 355, 356, 357, 361, 362, 363, 364, 365, 367, 368, 369, 373, 379, 380, 381, 382, 384, 389, 390, 391], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 43, 46, 47, 54, 103, 107, 119, 123, 124, 130, 131, 151, 168, 182, 188, 190, 193, 194, 206, 207, 208, 213, 215, 221, 225, 226, 227, 228, 232, 233, 240, 241, 250, 254, 255, 256, 264, 271, 277, 279, 282, 283, 284, 286, 287, 288, 289, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 312, 351, 356, 357, 358, 367, 368, 370, 371, 373, 376, 378, 381, 384, 386, 387, 388, 390, 391, 393], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 140, 143, 145, 146, 151, 152, 154, 156, 162, 164, 170, 173, 180, 186, 191, 194, 195, 196, 200, 204, 205, 216, 221, 225, 228, 231, 232, 242, 251, 253, 260, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 332, 334, 341, 342, 348, 351, 353, 356, 361, 363, 364, 365, 367, 369, 370, 371, 373, 377, 378, 379, 380, 384, 388, 389, 390, 391, 393], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 45, 47, 99, 100, 103, 107, 112, 113, 118, 123, 124, 125, 126, 130, 131, 134, 146, 168, 173, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 213, 219, 223, 278, 279, 280, 281, 298, 361, 367, 372, 374, 376, 379, 380, 381, 387, 388, 390, 392, 393], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 40, 41, 43, 46, 74, 75, 79, 80, 93, 95, 103, 104, 107, 123, 124, 130, 131, 132, 143, 145, 147, 150, 158, 164, 168, 176, 182, 185, 186, 188, 190, 194, 196, 219, 221, 222, 223, 225, 228, 232, 236, 242, 248, 249, 259, 261, 265, 268, 270, 271, 272, 282, 284, 285, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 313, 314, 315, 316, 317, 332, 342, 354, 364, 369, 375, 376, 379, 380, 382, 386, 387, 389, 390, 392, 393], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 40, 41, 43, 46, 93, 103, 104, 107, 123, 124, 130, 131, 132, 143, 145, 147, 150, 158, 164, 168, 176, 182, 185, 186, 188, 190, 194, 196, 219, 221, 222, 223, 224, 225, 228, 232, 248, 249, 259, 268, 271, 272, 303, 313, 323, 324, 325, 326, 328, 329, 330, 331, 332, 364, 369, 375, 376, 379, 382, 386, 387, 388, 389, 390, 392, 393], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 37, 47, 48, 61, 67, 143, 146, 173, 180, 194, 195, 266, 267, 348, 351, 353, 356, 357, 361, 363, 364, 367, 370, 371, 390, 393], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 80, 82, 83, 85, 87, 88, 89, 94, 97, 98, 103, 107, 119, 123, 124, 130, 131, 139, 150, 151, 154, 168, 182, 185, 186, 188, 190, 191, 192, 194, 203, 204, 205, 206, 207, 219, 220, 223, 224, 226, 228, 232, 253, 260, 261, 268, 270, 271, 276, 279, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 320, 338, 342, 354, 361, 362, 363, 364, 365, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 392, 393], "etc": [0, 2, 3, 7, 8, 12, 37, 55, 56, 67, 103, 107, 123, 124, 130, 131, 162, 186, 194, 226, 232, 248, 375, 376, 381, 390, 392, 393], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 89, 103, 107, 123, 124, 125, 126, 130, 131, 139, 142, 146, 151, 154, 155, 162, 163, 164, 180, 185, 186, 192, 194, 196, 204, 206, 207, 226, 231, 232, 233, 251, 265, 273, 274, 282, 284, 297, 300, 302, 305, 309, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 342, 351, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "few": [0, 2, 8, 107, 334, 342, 376, 377, 379, 386, 387, 390, 392, 393], "depend": [0, 1, 2, 3, 4, 7, 8, 41, 43, 106, 108, 109, 127, 132, 133, 151, 154, 276, 300, 369, 374, 376, 377, 386, 387, 388, 392, 393], "possibl": [0, 2, 3, 4, 23, 25, 29, 34, 35, 36, 37, 40, 64, 67, 69, 80, 87, 93, 103, 107, 123, 124, 130, 131, 139, 150, 168, 182, 185, 186, 188, 190, 194, 206, 207, 219, 220, 223, 224, 271, 332, 347, 351, 369, 374, 376, 377, 379, 381, 382, 386, 387, 388, 390, 392, 393], "standard": [0, 3, 164, 175, 192, 205, 217, 228, 234, 235, 240, 257, 258, 259, 305, 306, 314, 315, 316, 317, 374, 375, 378, 379, 387, 390, 392], "numpi": [0, 3, 12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 184, 351, 388, 390, 392, 393], "common": [0, 2, 3, 4, 107, 112, 140, 254, 255, 256, 264, 282, 283, 284, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 361, 368, 369, 371, 374, 376, 379, 382, 385, 386, 387, 388, 389, 392, 393], "openai": [0, 7, 24, 106, 108, 127, 376, 388, 392, 393], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 103, 104, 106, 107, 108, 109, 111, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 135, 138, 142, 146, 149, 155, 161, 162, 164, 166, 171, 173, 176, 182, 185, 191, 192, 194, 361, 368, 374, 375, 376, 377, 378, 382, 383, 388, 389, 390, 392], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 82, 87, 88, 95, 101, 102, 103, 106, 107, 108, 109, 111, 113, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 142, 146, 147, 149, 150, 151, 153, 154, 158, 164, 168, 169, 173, 180, 181, 182, 183, 185, 186, 188, 190, 192, 194, 223, 225, 231, 232, 253, 259, 260, 268, 269, 271, 272, 273, 274, 282, 284, 285, 289, 290, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 314, 315, 316, 317, 318, 334, 341, 355, 370, 371, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 392, 393], "option": [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 196, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 251, 253, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 312, 313, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 339, 341, 342, 344, 345, 346, 347, 348, 349, 351, 355, 356, 357, 358, 360, 361, 363, 364, 365, 369, 377, 378, 381, 386, 387, 388, 390, 392], "On": [0, 3, 7, 18, 19, 20, 21, 27, 64, 220, 224, 369, 375, 386, 387], "end": [0, 2, 3, 14, 15, 17, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 86, 87, 88, 103, 107, 123, 124, 130, 131, 155, 166, 180, 181, 186, 194, 206, 207, 219, 220, 223, 224, 227, 265, 303, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "come": [0, 1, 2, 3, 8, 37, 93, 103, 107, 116, 123, 124, 130, 131, 151, 154, 253, 254, 255, 256, 268, 276, 282, 284, 297, 300, 302, 334, 374, 375, 376, 377, 380, 381, 382, 383, 386, 387, 390, 392, 393], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 86, 89, 95, 103, 105, 107, 108, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 138, 140, 142, 143, 146, 147, 150, 151, 154, 161, 162, 168, 173, 180, 181, 182, 183, 185, 186, 188, 190, 192, 194, 196, 201, 202, 204, 219, 221, 223, 225, 227, 231, 232, 248, 258, 259, 271, 290, 298, 300, 303, 318, 342, 347, 348, 357, 365, 368, 369, 370, 372, 374, 375, 376, 377, 379, 380, 381, 385, 386, 387, 388, 389, 390, 392, 393], "re": [0, 2, 3, 8, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 124, 130, 131, 194, 225, 229, 230, 233, 268, 272, 341, 371, 374, 376, 377, 378, 380, 385, 386, 388, 392, 393], "usabl": [0, 371, 377, 392], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 104, 107, 123, 124, 130, 131, 138, 142, 143, 151, 154, 186, 192, 194, 196, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 243, 244, 246, 249, 251, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 267, 268, 270, 271, 272, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 361, 367, 369, 374, 377, 378, 379, 382, 385, 388, 390, 393], "cost": [0, 2, 29, 67, 282, 284, 297, 300, 302, 370, 374, 375, 386, 387, 388, 390], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 83, 85, 87, 88, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 203, 204, 205, 208, 209, 210, 211, 212, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 239, 240, 241, 243, 244, 247, 248, 249, 250, 253, 254, 255, 256, 259, 265, 268, 270, 271, 272, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 309, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 338, 351, 354, 356, 361, 362, 363, 364, 365, 367, 369, 371, 374, 375, 376, 377, 379, 380, 382, 385, 386, 387, 388, 389, 390, 392, 393], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 46, 52, 54, 61, 64, 68, 69, 79, 80, 87, 103, 104, 107, 111, 116, 120, 123, 124, 125, 126, 130, 131, 145, 151, 154, 182, 184, 192, 194, 231, 232, 261, 266, 267, 270, 367, 371, 374, 375, 377, 378, 386, 387, 388, 389, 390, 392, 393], "good": [0, 1, 4, 9, 123, 374, 376, 377, 379, 387, 392, 393], "runtim": [0, 2, 3, 23, 37, 103, 107, 123, 124, 130, 131, 194, 388], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 134, 151, 154, 163, 186, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 284, 293, 300, 303, 347, 351, 370, 374, 375, 376, 377, 378, 381, 383, 385, 386, 387, 388, 393], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 87, 88, 91, 98, 99, 100, 103, 106, 107, 108, 112, 113, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 180, 182, 192, 194, 221, 225, 254, 255, 256, 266, 267, 290, 298, 305, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 392, 393], "read": [0, 2, 3, 7, 23, 27, 30, 33, 42, 44, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 82, 89, 91, 95, 103, 106, 107, 108, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 166, 167, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 185, 188, 189, 191, 192, 194, 204, 239, 253, 254, 255, 256, 260, 265, 268, 271, 272, 274, 276, 277, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 314, 315, 316, 317, 318, 334, 347, 351, 369, 374, 375, 376, 378, 379, 385, 386, 387, 388, 389, 393], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 371, 374, 378, 381, 385, 389, 393], "beyond": [0, 103, 107, 123, 124, 130, 131], "api": [0, 2, 3, 5, 23, 125, 126, 127, 168, 190, 192, 370, 371, 378, 379, 380, 381, 382, 386, 387, 388, 390, 392, 393], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 55, 56, 57, 59, 71, 72, 78, 87, 103, 104, 106, 107, 108, 119, 123, 124, 130, 131, 134, 146, 147, 157, 162, 169, 182, 184, 186, 194, 196, 221, 225, 253, 260, 261, 268, 269, 270, 271, 272, 305, 334, 366, 369, 370, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393], "paper": [0, 64, 67, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 127, 132, 133, 168, 188, 190, 219, 241, 250, 288, 295, 305, 374, 376, 386, 387], "releas": [0, 4, 7, 10, 37, 103, 107, 123, 124, 130, 131, 186, 194, 303, 392], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 353, 361, 371, 374, 392], "so": [0, 2, 3, 4, 6, 7, 10, 11, 37, 41, 43, 46, 47, 103, 107, 117, 118, 123, 124, 130, 131, 182, 192, 194, 273, 274, 374, 376, 377, 380, 383, 386, 387, 388, 393], "make": [0, 2, 3, 4, 7, 11, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 89, 91, 98, 103, 107, 108, 111, 113, 115, 121, 123, 124, 130, 131, 139, 156, 164, 168, 169, 173, 180, 188, 194, 196, 219, 220, 223, 224, 231, 232, 234, 260, 272, 282, 284, 297, 300, 302, 314, 315, 316, 317, 332, 348, 357, 365, 369, 370, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "sure": [0, 3, 4, 7, 66, 89, 107, 111, 173, 260, 365, 369, 374, 376, 377, 380, 386, 387, 388, 390, 392, 393], "alwai": [0, 2, 3, 14, 15, 20, 27, 33, 37, 61, 70, 71, 72, 78, 103, 107, 123, 124, 130, 131, 162, 163, 192, 194, 291, 298, 369, 370, 375, 376, 377, 386, 387, 388, 390], "enjoi": [0, 2, 3, 67, 381], "latest": [0, 2, 3, 10, 120, 125, 126, 348, 376, 386, 387, 388, 392], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 40, 54, 65, 80, 87, 88, 103, 107, 116, 123, 124, 125, 126, 128, 129, 130, 131, 143, 146, 158, 162, 166, 182, 183, 187, 192, 196, 206, 207, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 234, 235, 272, 279, 282, 284, 297, 300, 302, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 365, 369, 374, 375, 376, 377, 379, 380, 381, 383, 388, 390, 393], "recent": [0, 7, 12, 191, 386, 393], "version": [0, 1, 2, 3, 6, 12, 37, 41, 43, 47, 64, 69, 87, 103, 106, 107, 108, 109, 120, 121, 123, 124, 125, 127, 130, 131, 132, 133, 191, 192, 194, 203, 233, 256, 282, 284, 297, 298, 300, 302, 303, 314, 317, 368, 369, 370, 374, 376, 377, 378, 380, 383, 386, 387, 388, 389, 393], "although": [0, 1, 3, 8, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 371, 374, 375, 381, 390], "core": [0, 3, 8, 371, 377, 379, 392], "guarante": [0, 2, 37, 41, 43, 46, 74, 75, 76, 89, 91, 95, 103, 107, 123, 124, 130, 131, 192, 194, 381, 392], "backward": [0, 8, 37, 99, 100, 103, 107, 123, 124, 130, 131, 192, 194, 219, 220, 223, 224, 282, 283, 285, 289, 290, 296, 300, 301, 302, 303, 305, 306, 374, 376, 377, 380, 381, 383, 386, 387, 388], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 37, 63, 82, 85, 87, 88, 89, 93, 103, 107, 109, 122, 123, 124, 130, 131, 146, 180, 188, 192, 194, 219, 220, 221, 223, 224, 225, 269, 282, 283, 285, 286, 288, 289, 290, 296, 298, 300, 301, 302, 303, 305, 306, 309, 374, 377, 390, 392], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 27, 29, 30, 33, 35, 36, 37, 40, 42, 43, 44, 45, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 142, 143, 145, 147, 150, 151, 152, 153, 154, 162, 164, 166, 168, 170, 173, 176, 180, 181, 182, 185, 186, 188, 190, 192, 194, 200, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 240, 248, 251, 259, 260, 261, 262, 263, 265, 266, 267, 271, 275, 276, 282, 283, 284, 285, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 313, 314, 315, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 342, 369, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 385, 386, 387, 388, 390, 391, 392, 393], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 29, 30, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 95, 99, 100, 103, 106, 107, 109, 110, 112, 113, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 139, 140, 142, 144, 146, 147, 149, 150, 152, 153, 162, 163, 164, 168, 173, 176, 178, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 205, 206, 207, 209, 210, 211, 212, 213, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 234, 235, 236, 239, 243, 244, 247, 248, 249, 251, 253, 257, 258, 259, 261, 262, 263, 266, 267, 270, 271, 274, 275, 278, 279, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 320, 321, 322, 342, 349, 361, 365, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 42, 45, 50, 51, 63, 65, 66, 67, 68, 69, 107, 123, 130, 168, 185, 190, 287, 298, 370, 371, 374, 375, 376, 377, 379, 381, 390, 393], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 200, 203, 204, 205, 215, 216, 221, 225, 227, 228, 241, 242, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 332, 333, 342, 346, 347, 348, 350, 351, 367, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 393], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 27, 33, 162, 170, 254, 255, 256, 271, 289, 296, 305, 367, 374, 386, 388, 392], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 82, 90, 96, 103, 107, 123, 124, 130, 131, 138, 168, 190, 194, 228, 336, 341, 351, 371, 375, 383, 386], "root": [0, 2, 3, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 123, 146, 183, 203, 222, 248, 249, 377, 378, 386, 387, 388, 389, 390, 393], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 42, 52, 61, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 122, 125, 126, 127, 132, 133, 146, 168, 188, 208, 209, 210, 211, 212, 213, 216, 217, 218, 223, 228, 229, 230, 235, 237, 238, 241, 243, 244, 250, 261, 266, 267, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 314, 319, 327, 366, 384, 389, 392], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 61, 64, 65, 67, 99, 100, 101, 102, 106, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 143, 188, 379, 383, 386, 387, 392], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 64, 67, 68, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 389, 392], "setup": [0, 7, 99, 100, 111, 112, 113], "py": [0, 3, 24, 106, 108, 138, 241, 250, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393], "develop": [0, 3, 4, 7, 111, 374, 392], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 89, 93, 94, 95, 96, 97, 103, 105, 107, 109, 110, 123, 124, 127, 130, 131, 136, 139, 141, 142, 143, 145, 149, 153, 159, 162, 168, 169, 171, 178, 182, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 203, 205, 206, 207, 216, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 232, 233, 235, 236, 251, 257, 258, 259, 260, 261, 262, 265, 268, 269, 272, 274, 275, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 309, 312, 314, 315, 316, 317, 318, 320, 332, 335, 336, 339, 341, 344, 351, 353, 361, 370, 373, 374, 376, 379, 380, 381, 384, 388, 391, 393], "seri": [0, 2, 3, 7, 8, 40, 73, 83, 93, 94, 97, 98, 130, 163, 185, 334, 369, 370, 374, 375, 376, 382, 383, 386, 387, 390, 393], "quick": [0, 61], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 47, 63, 69, 103, 107, 123, 124, 130, 131, 142, 145, 183, 185, 194, 300, 368, 369, 370, 374, 375, 376, 377, 379, 383, 386, 387, 388, 390, 393], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 80, 82, 85, 86, 87, 88, 93, 95, 101, 102, 103, 104, 106, 107, 108, 109, 111, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 139, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 156, 158, 162, 163, 164, 168, 169, 172, 173, 176, 177, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 203, 204, 206, 207, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 233, 251, 253, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 328, 329, 330, 331, 332, 338, 341, 346, 348, 351, 353, 355, 361, 365, 368, 370, 374, 375, 376, 377, 378, 380, 382, 383, 385, 386, 387, 388, 390, 392, 393], "hurri": [0, 378], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 53, 55, 56, 63, 86, 87, 88, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 139, 142, 145, 158, 164, 169, 181, 183, 184, 206, 207, 219, 221, 223, 225, 226, 229, 230, 237, 245, 248, 251, 257, 258, 259, 262, 265, 272, 314, 316, 317, 375, 376, 377, 378, 379, 386, 387, 388, 389, 390, 392, 393], "item": [0, 2, 8, 14, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 54, 55, 56, 70, 80, 86, 93, 139, 157, 229, 230, 285, 286, 288, 342, 370, 371, 374, 376, 377, 380, 381, 386, 387, 388, 390], "navig": [0, 387], "previou": [0, 3, 4, 10, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 182, 194, 204, 219, 223, 244, 259, 376, 377, 378, 379, 383, 388, 393], "whenev": [0, 1, 2, 3, 23, 37, 42, 45, 50, 51, 61, 67, 79, 80, 87, 88, 101, 102, 106, 108, 109, 117, 118, 127, 132, 133, 138, 161, 186, 191, 298, 314, 315, 316, 317, 332, 353, 369, 382, 390], "want": [0, 2, 3, 6, 7, 8, 88, 164, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 369, 374, 375, 376, 377, 378, 380, 381, 382, 386, 387, 388, 389, 390, 392, 393], "ted": [0, 30, 38, 48, 49, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 367, 373, 384, 391], "s": [0, 1, 2, 3, 6, 7, 8, 11, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 88, 93, 99, 100, 103, 107, 111, 112, 113, 117, 118, 120, 123, 124, 125, 126, 130, 131, 132, 133, 146, 150, 168, 180, 182, 184, 185, 186, 188, 190, 192, 194, 196, 206, 207, 221, 225, 230, 231, 232, 235, 241, 250, 254, 256, 257, 258, 261, 262, 265, 268, 271, 272, 275, 283, 289, 296, 298, 303, 305, 314, 315, 316, 317, 318, 332, 369, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 93, 99, 100, 103, 107, 116, 119, 122, 123, 124, 130, 131, 138, 145, 150, 153, 155, 162, 168, 169, 181, 182, 185, 186, 188, 190, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 314, 315, 316, 317, 318, 332, 351, 358, 361, 367, 370, 371, 373, 375, 376, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393], "optim": [0, 1, 2, 8, 37, 47, 99, 100, 103, 107, 123, 124, 130, 131, 186, 194, 205, 228, 234, 235, 248, 283, 298, 299, 300, 303, 346, 351, 361, 370, 371, 373, 376, 377, 378, 379, 381, 384, 386, 387, 388, 391], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 124, 127, 130, 131, 143, 146, 164, 168, 190, 196, 265, 266, 267, 283, 285, 288, 290, 301, 303, 305, 306, 334, 342, 348, 351, 353, 354, 355, 361, 371, 373, 374, 377, 378, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393], "storag": [0, 1, 8, 30, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 88, 90, 91, 92, 93, 95, 96, 103, 105, 107, 123, 124, 130, 131, 145, 146, 151, 154, 173, 194, 367, 371, 373, 375, 376, 377, 378, 380, 383, 384, 386, 387, 389, 391], "log": [0, 3, 4, 8, 11, 47, 214, 215, 216, 229, 230, 239, 248, 249, 260, 261, 268, 272, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 341, 344, 345, 347, 351, 361, 369, 370, 371, 373, 374, 375, 376, 378, 379, 383, 384, 386, 387, 388, 391, 392], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 37, 103, 107, 111, 116, 123, 124, 125, 126, 130, 131, 192, 194, 365, 368, 369, 370, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 390, 391, 392], "own": [0, 1, 3, 14, 15, 17, 22, 37, 103, 107, 123, 124, 125, 126, 130, 131, 194, 334, 373, 375, 376, 378, 384, 386, 387, 388, 391], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 37, 41, 43, 46, 47, 54, 61, 64, 70, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 151, 159, 168, 181, 186, 188, 190, 194, 196, 209, 211, 221, 225, 257, 258, 262, 263, 266, 267, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 314, 351, 353, 361, 367, 371, 373, 375, 378, 381, 382, 384, 389, 390, 391, 393], "loop": [0, 8, 41, 43, 46, 103, 107, 123, 124, 130, 131, 203, 257, 258, 262, 263, 266, 267, 300, 351, 370, 371, 373, 374, 375, 378, 380, 381, 382, 384, 385, 390, 391], "ppo": [0, 4, 8, 268, 272, 284, 297, 300, 367, 369, 373, 374, 375, 379, 380, 384, 386, 391], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 93, 101, 102, 103, 104, 106, 107, 108, 120, 123, 124, 130, 131, 146, 149, 150, 156, 161, 162, 164, 171, 173, 178, 180, 182, 183, 185, 186, 192, 194, 221, 225, 361, 369, 373, 375, 376, 378, 379, 380, 384, 391, 392, 393], "introduct": [0, 370, 373, 378, 384, 386, 387, 391, 393], "multi": [0, 1, 7, 9, 33, 34, 37, 42, 45, 50, 51, 71, 72, 78, 103, 107, 117, 118, 123, 124, 128, 129, 130, 131, 186, 194, 219, 221, 223, 225, 226, 231, 232, 233, 265, 312, 314, 315, 316, 317, 367, 373, 374, 375, 376, 377, 378, 379, 384, 388, 391, 392], "agent": [0, 9, 33, 34, 116, 117, 118, 125, 126, 128, 129, 132, 133, 134, 180, 181, 229, 230, 231, 232, 233, 235, 241, 250, 312, 367, 373, 378, 384, 388, 391], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 37, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 225, 227, 228, 265, 271, 298, 332, 333, 334, 355, 356, 357, 361, 363, 364, 365, 367, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 164, 168, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 239, 240, 241, 242, 248, 249, 250, 251, 253, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 327, 332, 334, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 359, 361, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393], "pretrain": [0, 373, 384, 391], "recurr": [0, 2, 145, 219, 220, 221, 223, 225, 244, 373, 375, 379, 384, 390, 391], "dqn": [0, 2, 61, 139, 155, 216, 260, 261, 282, 283, 285, 286, 288, 290, 291, 292, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 312, 358, 367, 369, 373, 379, 380, 383, 384, 391], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 30, 37, 48, 99, 100, 103, 107, 119, 123, 124, 130, 131, 153, 162, 181, 195, 201, 202, 216, 221, 225, 231, 232, 235, 242, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 275, 282, 283, 284, 285, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 347, 353, 356, 357, 361, 363, 364, 369, 370, 371, 373, 375, 378, 380, 381, 384, 389, 390, 391, 392, 393], "replai": [0, 8, 16, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 93, 94, 98, 145, 146, 153, 169, 173, 182, 194, 285, 286, 288, 289, 290, 296, 301, 303, 305, 306, 348, 351, 359, 361, 367, 371, 373, 384, 388, 389, 391], "buffer": [0, 3, 4, 8, 14, 15, 16, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 103, 107, 119, 123, 124, 130, 131, 145, 146, 150, 153, 168, 169, 173, 182, 185, 186, 188, 190, 194, 271, 274, 285, 286, 288, 289, 290, 296, 301, 303, 305, 306, 348, 351, 359, 361, 367, 371, 373, 382, 384, 388, 389, 391, 393], "competit": [0, 3, 117, 118, 373, 384, 387, 391], "ddpg": [0, 209, 210, 211, 212, 285, 295, 304, 367, 369, 373, 375, 380, 384, 387, 391], "task": [0, 2, 3, 9, 33, 34, 47, 54, 64, 67, 101, 102, 103, 107, 110, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 168, 180, 186, 188, 190, 289, 296, 373, 374, 375, 376, 377, 378, 379, 384, 386, 387, 388, 391, 392, 393], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 107, 123, 130, 132, 182, 213, 221, 225, 259, 282, 298, 300, 302, 334, 351, 367, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 390, 391], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 53, 54, 74, 75, 76, 82, 85, 89, 91, 95, 98, 103, 107, 112, 123, 124, 130, 131, 139, 151, 154, 155, 164, 168, 185, 186, 188, 192, 194, 195, 228, 241, 250, 253, 254, 268, 271, 272, 273, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 355, 356, 357, 360, 361, 365, 367, 369, 371, 373, 375, 376, 377, 381, 383, 384, 386, 387, 388, 390, 391, 393], "loss": [0, 3, 8, 43, 155, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 312, 313, 314, 346, 351, 358, 361, 370, 371, 373, 378, 380, 381, 382, 384, 388, 390, 391, 392], "trainer": [0, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 373, 374, 384, 391], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 164, 166, 168, 170, 171, 172, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 233, 236, 239, 240, 241, 242, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 279, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 307, 308, 312, 314, 315, 316, 317, 320, 332, 334, 342, 343, 344, 345, 346, 348, 349, 350, 353, 361, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393], "packag": [0, 6, 7, 10, 138, 367, 368, 386, 393], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 29, 37, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 122, 123, 124, 130, 131, 132, 133, 143, 146, 150, 158, 164, 166, 169, 173, 182, 185, 186, 187, 191, 192, 194, 204, 214, 219, 220, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 239, 241, 247, 251, 265, 266, 267, 271, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 342, 345, 348, 349, 350, 351, 353, 363, 364, 365, 367, 369, 370, 371, 375, 376, 377, 378, 381, 383, 385, 386, 387, 389, 392, 393], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 145, 147, 150, 151, 154, 155, 156, 158, 166, 168, 170, 171, 173, 177, 179, 180, 182, 184, 185, 186, 187, 190, 192, 194, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 236, 239, 240, 241, 242, 243, 244, 247, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 276, 279, 282, 283, 285, 286, 288, 289, 290, 296, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 334, 342, 348, 367, 369, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 392, 393], "interoper": [0, 14, 15, 367], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 37, 41, 42, 43, 45, 46, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 106, 107, 117, 118, 123, 124, 130, 131, 132, 133, 139, 146, 147, 168, 173, 186, 190, 194, 206, 207, 219, 220, 221, 223, 224, 225, 226, 232, 270, 274, 283, 284, 286, 288, 290, 291, 296, 297, 300, 301, 303, 305, 306, 314, 315, 316, 317, 323, 324, 325, 326, 328, 329, 330, 331, 332, 365, 367, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 388, 389, 390], "node": [0, 2, 18, 19, 20, 21, 22, 27, 33, 41, 43, 46, 69, 367, 381], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 125, 126, 162, 164, 205, 214, 215, 216, 217, 222, 228, 229, 230, 236, 239, 240, 243, 244, 247, 248, 249, 257, 258, 259, 260, 261, 268, 272, 273, 282, 283, 284, 289, 290, 291, 296, 297, 300, 301, 302, 303, 305, 306, 367, 371, 375, 376, 379, 381, 386, 387, 388, 392, 393], "helper": [0, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 374, 375, 377, 386, 388], "compos": [0, 3, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 83, 84, 93, 94, 103, 107, 123, 124, 130, 131, 146, 172, 185, 186, 192, 194, 264, 265, 293, 303, 334, 367, 374, 375, 376, 377, 381, 385, 387, 388, 390, 392, 393], "episod": [0, 3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 103, 107, 123, 124, 130, 131, 142, 173, 176, 181, 203, 205, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 367, 375, 378, 383, 386, 387, 390], "format": [0, 3, 30, 36, 37, 38, 40, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 85, 93, 103, 107, 123, 124, 125, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 334, 367, 374, 375, 378, 380, 382, 393], "tensorspec": [0, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 55, 56, 57, 58, 59, 103, 107, 119, 123, 124, 130, 131, 132, 133, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 204, 244, 253, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 283, 286, 289, 290, 301, 303, 305, 306, 312, 367, 388], "human": [0, 24, 65, 367, 388], "feedback": [0, 367, 383, 392], "rlhf": [0, 47, 54, 70, 162, 367, 369], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 104, 107, 123, 124, 130, 131, 140, 143, 151, 154, 163, 170, 171, 185, 186, 192, 194, 196, 205, 227, 228, 347, 355, 356, 357, 361, 363, 364, 365, 367, 378, 393], "gymlikeenv": [0, 106, 108, 367], "envmetadata": [0, 367], "vector": [0, 1, 8, 25, 29, 40, 99, 100, 108, 112, 113, 116, 125, 126, 127, 132, 133, 153, 191, 209, 211, 219, 220, 223, 224, 226, 314, 317, 327, 328, 329, 330, 331, 367, 370, 374, 375, 377, 385, 386, 387, 388, 389, 393], "custom": [0, 2, 5, 37, 103, 107, 123, 124, 130, 131, 188, 194, 231, 232, 275, 291, 300, 307, 365, 367, 369, 374, 375, 376, 377, 379, 380, 382, 386, 387], "nativ": [0, 1, 7, 9, 65, 103, 107, 123, 124, 130, 131, 146, 334, 367, 377, 390], "auto": [0, 75, 95, 141, 142, 191, 266, 267, 283, 290, 299, 301, 303, 305, 306, 367, 370, 386, 387], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 141, 142, 143, 146, 155, 158, 161, 163, 168, 176, 180, 181, 182, 183, 185, 186, 188, 191, 192, 194, 196, 204, 219, 221, 225, 233, 252, 265, 266, 267, 298, 333, 367, 370, 374, 375, 376, 377, 378, 381, 385, 386, 387, 392], "dynam": [0, 7, 14, 15, 16, 64, 67, 69, 103, 123, 130, 194, 289, 296, 367, 376, 378, 388], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 57, 58, 59, 63, 99, 100, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 127, 130, 131, 132, 133, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 164, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 200, 203, 204, 216, 242, 244, 253, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 274, 275, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 367, 369, 374, 375, 376, 377, 378, 379, 383, 385, 386, 387, 392], "mask": [0, 1, 4, 23, 25, 29, 35, 36, 40, 125, 126, 131, 140, 169, 194, 216, 229, 230, 242, 259, 260, 261, 262, 263, 269, 270, 348, 367, 375, 377, 393], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 29, 30, 40, 47, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 143, 149, 151, 153, 154, 155, 156, 159, 162, 163, 166, 170, 171, 173, 177, 180, 186, 191, 195, 200, 203, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 221, 225, 226, 227, 228, 229, 230, 231, 240, 241, 242, 244, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 275, 276, 282, 283, 285, 286, 288, 289, 290, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 361, 365, 367, 369, 370, 371, 374, 375, 376, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 392, 393], "record": [0, 2, 11, 37, 103, 107, 123, 124, 130, 131, 136, 139, 162, 194, 300, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 361, 367, 375, 376, 379, 383, 386], "domain": [0, 2, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 153, 182, 200, 253, 260, 261, 268, 269, 270, 271, 272, 273, 274, 279, 367, 376, 377, 379, 380, 386, 387, 388, 392, 393], "actor": [0, 3, 4, 21, 162, 195, 205, 208, 209, 211, 216, 217, 228, 240, 242, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 312, 367, 370, 375, 377, 378, 380, 383, 386, 389, 392], "explor": [0, 1, 193, 235, 253, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 282, 298, 347, 356, 357, 361, 367, 376, 377, 378, 380, 381, 383, 386, 387, 388], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 103, 107, 116, 123, 124, 130, 131, 138, 139, 142, 144, 146, 147, 149, 151, 153, 154, 155, 163, 164, 168, 169, 172, 173, 174, 176, 178, 182, 183, 185, 186, 190, 192, 194, 200, 204, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 239, 241, 242, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 342, 344, 345, 346, 347, 348, 351, 361, 367, 371, 375, 380, 381, 382, 385, 386, 387, 388, 390, 392, 393], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 84, 86, 103, 104, 107, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 143, 150, 151, 152, 156, 162, 164, 170, 171, 176, 177, 180, 182, 185, 191, 194, 204, 214, 221, 225, 229, 230, 239, 253, 268, 272, 276, 277, 301, 308, 314, 319, 327, 337, 351, 367, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "hook": [0, 2, 30, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 96, 103, 107, 123, 124, 130, 131, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 242, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 367], "planner": [0, 205, 228, 367], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 83, 86, 87, 88, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 162, 164, 166, 168, 170, 171, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 247, 248, 249, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 280, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 342, 349, 350, 361, 367, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "vmap": [0, 219, 220, 223, 224, 233, 251, 271, 274, 298, 367, 369, 392], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 47, 53, 55, 56, 67, 69, 81, 93, 103, 107, 119, 123, 124, 130, 131, 139, 153, 163, 164, 182, 195, 196, 219, 221, 223, 225, 262, 268, 271, 272, 279, 283, 298, 301, 347, 355, 367, 369, 374, 375, 376, 377, 378, 379, 381, 388, 389, 390, 392, 393], "sac": [0, 290, 301, 303, 367], "redq": [0, 301, 367], "crossq": [0, 367], "iql": [0, 289, 296, 367, 374, 386, 387], "cql": [0, 283, 288, 367], "dt": [0, 124, 266, 267, 367, 388], "td3": [0, 305, 306, 367], "bc": [0, 5, 305, 367, 392], "a2c": [0, 282, 367], "dreamer": [0, 136, 137, 217, 292, 293, 294, 367, 369], "checkpoint": [0, 45, 72, 77, 89, 90, 92, 96, 367, 389, 390], "builder": [0, 367, 375, 393], "logger": [0, 3, 11, 332, 334, 336, 337, 338, 339, 340, 341, 345, 351, 361, 365, 367, 375, 386], "_util": [0, 3, 12, 367, 383], "implement_for": [0, 3, 367], "thing": [0, 3, 7, 8, 103, 107, 123, 124, 130, 131, 368, 376, 377, 378, 379, 380, 381, 382, 386, 387, 390, 393], "consid": [0, 1, 2, 3, 8, 20, 27, 33, 37, 42, 45, 50, 51, 74, 75, 95, 103, 107, 123, 124, 130, 131, 153, 192, 194, 214, 231, 247, 283, 296, 301, 303, 305, 306, 314, 316, 317, 368, 374, 378, 379, 380, 388, 390], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 91, 95, 103, 104, 106, 107, 108, 116, 117, 118, 120, 122, 123, 124, 125, 126, 130, 131, 132, 133, 140, 142, 145, 146, 150, 151, 153, 154, 162, 163, 164, 168, 169, 176, 182, 185, 186, 188, 190, 191, 192, 194, 201, 202, 203, 205, 216, 219, 220, 223, 224, 226, 227, 228, 229, 230, 234, 242, 248, 265, 268, 271, 272, 274, 278, 283, 284, 286, 291, 296, 297, 298, 300, 301, 303, 305, 306, 307, 312, 313, 314, 315, 316, 317, 332, 333, 334, 336, 348, 365, 368, 369, 370, 371, 374, 375, 376, 377, 379, 381, 382, 386, 387, 388, 389, 390, 393], "debug": [0, 6, 8, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 368, 393], "work": [0, 1, 2, 3, 4, 8, 11, 12, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 85, 87, 88, 91, 98, 103, 106, 107, 108, 111, 123, 124, 127, 130, 131, 147, 162, 168, 188, 191, 192, 194, 203, 206, 207, 226, 261, 270, 275, 284, 297, 300, 351, 368, 369, 374, 375, 376, 377, 378, 381, 385, 386, 387, 388, 389, 390, 392, 393], "habitat": [0, 3, 109, 368, 389], "lab": [0, 3, 101, 102, 109, 368], "mujoco": [0, 6, 8, 127, 368, 374, 376, 377], "error": [0, 1, 3, 7, 10, 12, 25, 29, 34, 35, 36, 37, 40, 41, 43, 46, 103, 107, 123, 124, 130, 131, 134, 169, 194, 196, 298, 368, 370, 374, 376, 386, 387, 393], "solut": [0, 2, 3, 6, 7, 9, 21, 368, 369, 371, 392], "resourc": [0, 1, 21, 109, 368, 374, 376, 386, 387], "issu": [0, 3, 4, 5, 8, 61, 65, 72, 74, 75, 95, 106, 111, 146, 169, 183, 203, 253, 260, 261, 268, 269, 270, 271, 272, 368, 392], "customis": [0, 368, 375, 382, 386, 387], "video": [0, 4, 9, 334, 336, 347, 365, 367, 368, 383, 386, 387], "render": [0, 3, 8, 113, 132, 332, 334, 347, 368, 374, 375, 376, 378, 382], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 82, 83, 85, 91, 93, 94, 95, 97, 98, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 141, 146, 150, 153, 186, 203, 229, 230, 367, 378, 385, 386, 387, 390, 392], "search": [0, 122, 204, 375], "page": [0, 7, 24, 341, 380], "somewhat": [1, 2, 370, 379, 393], "equival": [1, 3, 25, 27, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 143, 152, 155, 186, 194, 216, 223, 226, 242, 260, 261, 269, 270, 300, 348, 381, 392, 393], "dataload": [1, 70, 86, 88, 375, 381, 390], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 146, 157, 173, 181, 182, 183, 186, 194, 219, 221, 223, 225, 239, 257, 258, 262, 263, 266, 267, 298, 303, 334, 369, 375, 378, 386, 390, 392, 393], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 164, 166, 168, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 293, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 328, 329, 331, 332, 334, 342, 347, 348, 349, 361, 365, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393], "thei": [1, 2, 3, 4, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 103, 106, 107, 108, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 142, 145, 157, 162, 168, 177, 185, 186, 190, 194, 225, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 348, 351, 369, 370, 371, 374, 375, 376, 377, 380, 385, 386, 387, 388, 389, 390, 392, 393], "over": [1, 2, 3, 4, 8, 14, 15, 37, 45, 51, 52, 54, 60, 61, 67, 80, 86, 87, 103, 107, 117, 118, 123, 124, 130, 131, 139, 153, 164, 176, 183, 194, 203, 248, 251, 274, 291, 293, 298, 320, 332, 354, 371, 374, 375, 376, 378, 379, 380, 381, 386, 387, 388, 393], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 39, 41, 42, 43, 46, 50, 51, 67, 76, 103, 107, 123, 124, 125, 126, 130, 131, 143, 144, 150, 158, 168, 182, 185, 186, 187, 188, 190, 194, 203, 219, 221, 223, 225, 231, 271, 272, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 369, 374, 377, 386, 387, 388, 390, 393], "static": [1, 12, 47, 54, 80, 87, 88, 109, 124, 192, 296, 378, 388, 390], "like": [1, 2, 3, 4, 7, 11, 21, 27, 33, 37, 42, 45, 50, 51, 54, 76, 82, 88, 103, 107, 109, 116, 123, 124, 125, 126, 130, 131, 155, 182, 184, 194, 196, 219, 223, 232, 264, 282, 284, 297, 300, 301, 302, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 393], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 70, 93, 96, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 145, 151, 153, 154, 163, 171, 182, 186, 194, 201, 202, 221, 225, 262, 266, 267, 284, 297, 298, 300, 303, 334, 348, 353, 363, 364, 365, 369, 374, 375, 376, 377, 381, 386, 387, 388, 390], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 64, 65, 68, 69, 70, 103, 107, 119, 123, 124, 130, 131, 141, 146, 150, 158, 168, 176, 182, 185, 186, 187, 188, 190, 194, 226, 251, 271, 272, 273, 303, 334, 371, 376, 378, 382, 390, 393], "two": [1, 2, 3, 4, 8, 10, 35, 36, 37, 42, 45, 47, 50, 51, 67, 82, 86, 88, 103, 107, 123, 124, 130, 131, 143, 164, 168, 190, 194, 212, 219, 221, 223, 225, 245, 248, 272, 297, 305, 309, 347, 351, 370, 374, 375, 376, 377, 378, 379, 381, 382, 385, 386, 387, 388, 390, 392, 393], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 69, 104, 272, 351, 369, 370, 374, 375, 385, 393], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 86, 87, 88, 91, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 127, 130, 131, 132, 133, 142, 143, 147, 149, 150, 168, 176, 177, 180, 182, 184, 185, 186, 188, 190, 194, 203, 206, 207, 219, 221, 223, 225, 226, 229, 230, 231, 232, 234, 251, 253, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 308, 312, 314, 315, 316, 317, 318, 322, 332, 333, 334, 341, 344, 354, 361, 362, 365, 374, 375, 376, 377, 378, 379, 381, 386, 387, 388, 390, 393], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 85, 86, 87, 88, 89, 91, 101, 102, 103, 106, 107, 108, 109, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 144, 145, 149, 151, 154, 162, 164, 166, 168, 176, 178, 184, 186, 188, 190, 192, 194, 203, 206, 207, 209, 215, 218, 221, 225, 226, 229, 230, 237, 242, 261, 265, 269, 270, 272, 274, 275, 276, 283, 296, 298, 301, 303, 305, 306, 311, 314, 317, 332, 333, 347, 348, 363, 364, 369, 370, 374, 376, 378, 379, 380, 381, 385, 386, 388, 389, 390, 392, 393], "constructor": [1, 2, 16, 18, 19, 20, 21, 45, 54, 67, 79, 93, 103, 107, 120, 123, 124, 130, 131, 132, 142, 185, 206, 207, 226, 268, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 362, 365, 369, 374, 375, 376, 378, 381, 386, 387, 390], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 82, 86, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 156, 164, 177, 194, 206, 207, 226, 231, 232, 246, 253, 260, 268, 269, 271, 273, 274, 276, 298, 311, 347, 350, 351, 370, 371, 374, 376, 377, 381, 383, 386, 387, 388], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 104, 107, 108, 109, 111, 112, 113, 119, 120, 123, 124, 127, 130, 131, 140, 186, 194, 219, 221, 223, 225, 233, 262, 265, 273, 274, 298, 305, 355, 365, 369, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 390, 391, 393], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 47, 61, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 140, 145, 158, 161, 164, 180, 181, 182, 183, 186, 191, 194, 203, 204, 205, 217, 219, 221, 223, 225, 227, 228, 257, 258, 262, 263, 265, 266, 267, 268, 272, 282, 292, 300, 313, 314, 315, 316, 317, 320, 321, 322, 333, 336, 342, 347, 351, 371, 375, 377, 379, 380, 382, 383, 385, 388, 389, 392], "queri": [1, 3, 14, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 168, 185, 188, 192, 194, 274, 370, 374, 380, 388, 392], "defin": [1, 2, 12, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 169, 181, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 279, 286, 288, 298, 314, 315, 316, 317, 318, 333, 362, 374, 375, 377, 380, 383, 388, 390, 393], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 29, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 87, 88, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 139, 145, 146, 153, 159, 163, 164, 175, 180, 183, 186, 192, 194, 205, 206, 207, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 236, 237, 238, 241, 243, 244, 247, 248, 249, 250, 253, 257, 258, 259, 262, 263, 265, 266, 267, 268, 271, 272, 276, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 342, 344, 347, 351, 353, 354, 355, 363, 364, 365, 369, 370, 374, 375, 376, 377, 378, 379, 381, 383, 386, 387, 388, 389, 390, 393], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 37, 54, 66, 86, 93, 103, 107, 123, 124, 130, 131, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 194, 196, 219, 221, 225, 226, 234, 235, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 315, 316, 317, 348, 374, 376, 377, 381, 382, 386, 387, 388, 390, 393], "deliv": [1, 2, 3, 16, 67, 374, 375, 378, 381, 392], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 33, 34, 41, 42, 43, 45, 46, 50, 51, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 103, 106, 107, 108, 116, 123, 124, 125, 126, 130, 131, 192, 219, 221, 223, 224, 225, 265, 273, 274, 283, 296, 301, 303, 305, 306, 333, 342, 369, 375, 378, 385, 386, 388, 392], "user": [1, 2, 3, 5, 8, 23, 37, 61, 63, 67, 69, 80, 88, 103, 107, 123, 124, 130, 131, 147, 181, 186, 194, 196, 213, 300, 303, 305, 334, 362, 370, 371, 374, 375, 378, 380, 381, 388, 392, 393], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 47, 86, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 180, 257, 258, 262, 263, 266, 267, 374, 376, 383, 386, 387, 392, 393], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 82, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 151, 152, 154, 155, 156, 163, 164, 166, 170, 171, 173, 175, 177, 180, 182, 183, 185, 186, 192, 194, 203, 204, 205, 219, 221, 225, 228, 265, 282, 283, 284, 285, 286, 288, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 369, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "state": [1, 2, 3, 4, 14, 15, 16, 17, 30, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 142, 145, 146, 147, 149, 155, 164, 171, 180, 181, 185, 186, 192, 194, 196, 203, 204, 205, 208, 213, 217, 219, 220, 221, 223, 224, 225, 226, 228, 233, 237, 240, 241, 243, 244, 250, 254, 265, 271, 277, 282, 284, 288, 297, 298, 300, 301, 302, 303, 312, 313, 314, 315, 316, 317, 318, 365, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 386, 387, 388, 393], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 30, 37, 41, 43, 46, 47, 61, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 127, 130, 131, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 163, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 203, 219, 221, 225, 234, 257, 258, 260, 262, 269, 293, 303, 305, 375, 376, 377, 378, 379, 381, 383, 386, 387, 388, 389, 390, 393], "predefin": [1, 375, 377, 381, 390], "becaus": [1, 3, 4, 7, 41, 43, 46, 47, 61, 103, 107, 123, 124, 130, 131, 155, 162, 180, 185, 191, 194, 212, 232, 253, 260, 261, 265, 268, 269, 270, 271, 272, 369, 374, 375, 377, 379, 380, 381, 385, 386, 387, 388, 390, 393], "potenti": [1, 2, 388, 390], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 37, 47, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 164, 178, 186, 189, 194, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 236, 237, 238, 239, 240, 243, 244, 246, 248, 249, 251, 254, 257, 258, 259, 261, 262, 265, 266, 267, 268, 270, 272, 275, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 355, 370, 374, 376, 377, 378, 379, 385, 386, 387, 389, 390], "heavi": [1, 8, 61, 390], "crucial": [1, 2, 3, 257, 258, 262, 263, 266, 267, 289, 296, 298, 374, 375, 376, 377, 378, 380, 382, 386, 387, 388, 393], "configur": [1, 8, 21, 22, 47, 162, 208, 213, 240, 298, 300, 369, 374, 375, 376, 380, 386, 387, 388], "hyperparamet": [1, 85, 194, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 374, 382, 388, 390], "appropri": [1, 3, 4, 7, 11, 73, 83, 93, 94, 97, 98, 123, 130, 155, 362, 365, 374, 382, 390], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 85, 86, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 365, 369, 370, 374, 377, 379, 383, 386, 387, 388, 389, 392], "take": [1, 2, 3, 8, 23, 47, 64, 90, 96, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 149, 180, 183, 185, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 275, 278, 281, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 342, 353, 369, 371, 374, 375, 376, 378, 379, 380, 386, 387, 388, 390, 393], "consider": [1, 2, 3, 8, 106, 108, 375, 386, 387, 390], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 113, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 142, 151, 154, 181, 186, 192, 194, 204, 206, 207, 221, 225, 226, 276, 282, 283, 284, 285, 286, 288, 290, 291, 297, 298, 300, 301, 302, 303, 305, 306, 312, 314, 317, 374, 375, 376, 378, 386, 387, 388, 393], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 80, 82, 87, 88, 89, 93, 96, 101, 102, 103, 106, 107, 108, 109, 113, 116, 119, 123, 124, 125, 126, 130, 131, 132, 133, 139, 142, 143, 146, 149, 150, 151, 152, 155, 156, 158, 162, 164, 169, 170, 171, 173, 176, 177, 180, 181, 183, 185, 186, 191, 192, 194, 196, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 232, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 268, 270, 271, 272, 275, 278, 282, 284, 290, 295, 297, 298, 300, 301, 302, 304, 305, 313, 314, 315, 316, 317, 318, 334, 336, 346, 347, 348, 351, 361, 363, 364, 365, 369, 371, 374, 375, 376, 377, 379, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "occur": [1, 8, 15, 33, 34, 61, 103, 107, 109, 123, 124, 130, 131, 147, 156, 164, 169, 191, 204, 253, 260, 261, 268, 269, 270, 271, 272, 293, 390, 393], "serial": [1, 2, 3, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 192, 194], "parallel": [1, 3, 8, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 186, 191, 196, 282, 362, 363, 364, 365, 375, 376, 386, 387], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 173, 361, 364, 367, 374, 375, 376, 377, 381, 383, 386, 387, 390], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 116, 119, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 363, 364, 365, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 390, 393], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 43, 46, 54, 64, 69, 70, 104, 120, 123, 130, 192, 363, 364, 365, 374, 375, 376, 392, 393], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 364, 367, 376, 381, 392], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 32, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 87, 88, 116, 125, 126, 219, 223, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 369, 371, 376, 379, 390, 392], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 80, 87, 88, 99, 100, 101, 102, 106, 108, 109, 111, 112, 113, 120, 121, 123, 127, 131, 192, 194, 231, 266, 267, 298, 353, 367, 369, 370, 374, 378, 382, 386, 387, 388], "aggreg": [1, 3, 61, 80, 93, 125, 126, 204, 206, 207, 209, 210, 274], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 104, 107, 123, 124, 130, 131, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 163, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 203, 204, 219, 221, 223, 225, 226, 231, 242, 248, 257, 259, 261, 262, 270, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 353, 369, 370, 375, 377, 378, 379, 382, 383, 388, 389, 392, 393], "final": [1, 2, 3, 4, 21, 41, 43, 46, 47, 182, 191, 219, 221, 223, 225, 231, 257, 258, 262, 263, 264, 266, 267, 273, 314, 347, 369, 374, 375, 376, 382, 383, 386, 387, 388, 393], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 363, 367, 374, 375, 376, 381, 392], "sever": [1, 2, 3, 8, 35, 37, 54, 64, 103, 107, 123, 124, 130, 131, 147, 149, 186, 194, 300, 374, 376, 382, 383, 390, 393], "gather": [1, 3, 18, 20, 21, 54, 70, 74, 75, 80, 87, 95, 169, 230, 233, 239, 298, 313, 355, 368, 375, 376, 377, 381, 386, 387, 388, 390, 393], "continu": [1, 2, 9, 26, 55, 88, 103, 107, 123, 124, 125, 126, 130, 131, 132, 133, 139, 200, 209, 210, 211, 212, 266, 267, 274, 279, 282, 283, 290, 296, 300, 301, 302, 303, 304, 305, 306, 314, 319, 327, 369, 374, 376, 377, 379, 386, 387, 388, 390, 392, 393], "concomitantli": [1, 103, 107, 123, 124, 130, 131], "network": [1, 4, 8, 37, 103, 107, 116, 123, 124, 125, 126, 130, 131, 194, 206, 207, 209, 210, 211, 212, 215, 217, 218, 223, 226, 231, 232, 233, 235, 237, 238, 241, 243, 244, 245, 250, 254, 255, 256, 259, 271, 275, 283, 284, 285, 286, 288, 289, 290, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 310, 312, 314, 315, 316, 317, 318, 360, 361, 369, 370, 371, 380, 383, 385, 388, 393], "impli": [1, 393], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 47, 80, 82, 85, 99, 100, 103, 107, 123, 124, 128, 129, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 219, 220, 221, 223, 224, 225, 231, 233, 235, 271, 282, 283, 284, 290, 293, 303, 305, 353, 360, 369, 371, 374, 375, 376, 377, 385, 388, 390, 392], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 34, 37, 41, 43, 46, 63, 69, 72, 80, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 162, 164, 177, 186, 187, 192, 194, 196, 226, 231, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 386, 387, 388, 389, 390, 392, 393], "slightli": [1, 23, 61, 369, 370, 377, 386, 388, 389, 390, 393], "lag": [1, 374, 375, 376], "therefor": [1, 2, 3, 7, 42, 45, 50, 51, 68, 69, 103, 107, 123, 124, 130, 131, 173, 300, 312, 380, 386, 393], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 80, 82, 87, 88, 93, 95, 96, 103, 107, 116, 119, 122, 123, 124, 125, 126, 130, 131, 139, 140, 143, 146, 155, 162, 168, 173, 176, 180, 181, 183, 185, 187, 190, 191, 203, 204, 219, 220, 223, 224, 229, 230, 231, 257, 258, 262, 263, 266, 267, 268, 271, 272, 281, 282, 283, 284, 289, 290, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 370, 371, 374, 375, 376, 378, 385, 386, 387, 388, 390, 393], "asynchron": [1, 9, 15, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 282, 363, 374, 375, 376], "off": [1, 2, 4, 222, 249, 260, 303, 332, 347, 356, 369, 371, 374, 375, 376, 379, 380, 386, 387, 389, 393], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 95, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 132, 151, 154, 158, 164, 181, 186, 191, 194, 196, 216, 219, 221, 223, 225, 232, 234, 254, 256, 259, 261, 269, 282, 289, 291, 296, 300, 347, 369, 371, 374, 375, 376, 377, 378, 379, 381, 382, 386, 387, 388, 389, 390, 393], "remot": [1, 2, 18, 19, 20, 21, 123, 130, 393], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 47, 93, 99, 100, 103, 107, 109, 110, 112, 113, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 149, 151, 154, 155, 156, 162, 166, 170, 171, 176, 177, 178, 180, 181, 183, 192, 194, 196, 205, 221, 225, 228, 265, 266, 267, 282, 332, 334, 355, 369, 374, 376, 377, 379, 380, 381, 382, 383, 389, 390, 392], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 177, 301, 314, 315, 316, 317, 318, 370, 374, 376, 379, 380, 381], "synchronis": [1, 104, 386, 387], "either": [1, 2, 5, 22, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 103, 107, 123, 124, 130, 131, 180, 181, 194, 277, 298, 305, 306, 338, 371, 374, 375, 377, 386, 389, 390, 392, 393], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 374, 387, 392], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 153, 156, 158, 161, 162, 163, 164, 168, 169, 171, 172, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 192, 194, 196, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 248, 249, 253, 254, 255, 256, 258, 260, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 314, 315, 316, 317, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 341, 344, 345, 347, 348, 351, 365, 369, 370, 371, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "second": [1, 3, 8, 23, 35, 36, 61, 64, 93, 143, 219, 221, 223, 225, 261, 284, 297, 300, 303, 336, 350, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 150, 151, 152, 154, 155, 156, 162, 166, 167, 168, 170, 171, 173, 177, 180, 182, 184, 185, 186, 188, 190, 192, 194, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 234, 235, 240, 241, 242, 250, 253, 254, 255, 256, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 274, 276, 279, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 332, 348, 353, 359, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 53, 54, 55, 56, 80, 87, 103, 107, 123, 124, 130, 131, 143, 158, 162, 185, 194, 215, 216, 220, 224, 236, 254, 255, 256, 260, 261, 264, 271, 277, 282, 284, 285, 286, 291, 297, 300, 302, 312, 313, 314, 315, 316, 317, 351, 367, 370, 371, 374, 375, 376, 377, 378, 379, 385, 386, 387, 388, 393], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 78, 80, 82, 87, 88, 95, 102, 103, 104, 106, 107, 108, 119, 123, 124, 130, 131, 146, 164, 182, 185, 186, 192, 194, 200, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 283, 286, 289, 290, 296, 298, 301, 303, 305, 306, 312, 314, 315, 316, 317, 332, 334, 338, 347, 355, 356, 357, 361, 363, 364, 369, 370, 371, 374, 376, 377, 378, 379, 388, 390, 393], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 27, 30, 33, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 150, 151, 152, 154, 155, 156, 166, 168, 170, 171, 173, 177, 180, 182, 185, 186, 188, 190, 194, 200, 203, 205, 215, 219, 220, 221, 223, 224, 225, 228, 234, 235, 241, 242, 250, 253, 254, 255, 256, 259, 260, 261, 265, 266, 268, 269, 270, 271, 274, 276, 279, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 332, 348, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 61, 63, 67, 80, 87, 88, 91, 93, 103, 107, 111, 123, 124, 127, 130, 131, 171, 212, 221, 223, 225, 226, 236, 251, 253, 257, 258, 260, 271, 276, 298, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 368, 370, 374, 375, 376, 378, 380, 381, 386, 387, 388, 390, 392, 393], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 29, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 78, 79, 80, 82, 83, 87, 88, 89, 91, 93, 94, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 143, 146, 149, 151, 152, 153, 154, 163, 164, 168, 173, 176, 179, 181, 182, 183, 185, 186, 187, 190, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 232, 233, 236, 237, 238, 239, 240, 242, 243, 244, 246, 251, 253, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 278, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 312, 314, 315, 316, 317, 321, 322, 336, 344, 346, 347, 351, 355, 365, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 393], "cuda": [1, 2, 3, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 103, 107, 109, 110, 111, 123, 124, 130, 131, 150, 162, 167, 168, 182, 185, 186, 188, 190, 194, 219, 220, 223, 224, 271, 343, 374, 375, 376, 377, 386, 387, 389, 393], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 29, 52, 82, 99, 100, 112, 113, 123, 130, 131, 147, 149, 153, 163, 173, 176, 180, 185, 192, 219, 223, 225, 231, 234, 235, 253, 260, 268, 269, 271, 272, 275, 284, 290, 297, 300, 320, 365, 369, 370, 371, 374, 375, 376, 378, 380, 381, 386, 387, 388, 390, 392], "infer": [1, 123, 130, 146, 192, 221, 225, 234, 259, 268, 288, 332, 374, 376, 381, 383, 390], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 37, 61, 64, 80, 87, 88, 99, 100, 101, 102, 103, 106, 107, 112, 113, 119, 120, 121, 123, 124, 130, 131, 163, 164, 186, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 273, 274, 275, 278, 303, 334, 341, 347, 363, 364, 365, 368, 371, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392], "dispatch": [1, 18, 19, 20, 21, 251, 265, 334, 374], "avail": [1, 2, 3, 4, 6, 21, 42, 45, 50, 51, 61, 64, 69, 80, 86, 87, 88, 101, 102, 111, 117, 118, 123, 125, 126, 127, 132, 133, 139, 142, 145, 162, 216, 242, 268, 272, 298, 334, 363, 364, 369, 374, 375, 376, 377, 378, 379, 386, 387, 388, 390, 393], "speed": [1, 2, 4, 8, 29, 103, 107, 123, 124, 130, 131, 370, 374, 375, 376, 377, 386, 387, 388, 390], "avoid": [1, 2, 3, 37, 74, 75, 95, 103, 107, 123, 124, 130, 131, 138, 186, 192, 194, 253, 271, 276, 284, 297, 300, 303, 354, 376, 387], "oom": [1, 3, 41, 43, 46, 74, 75, 95], "choic": [1, 2, 63, 69, 123, 236, 369, 370, 374, 375, 380, 386, 387], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 33, 37, 42, 45, 47, 50, 51, 54, 61, 64, 65, 67, 68, 69, 72, 74, 75, 80, 82, 87, 88, 93, 95, 103, 104, 105, 107, 116, 120, 123, 124, 125, 126, 130, 131, 132, 142, 143, 151, 154, 171, 185, 187, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 244, 246, 250, 251, 253, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 283, 284, 296, 297, 298, 300, 301, 303, 305, 306, 314, 315, 316, 317, 318, 332, 348, 363, 364, 365, 369, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 388, 390, 393], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 50, 53, 54, 55, 56, 67, 79, 88, 103, 107, 111, 122, 123, 124, 130, 131, 139, 146, 158, 187, 192, 204, 221, 225, 259, 369, 370, 375, 387], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 87, 93, 95, 103, 107, 123, 124, 130, 131, 191, 192, 194, 205, 228, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 341, 367, 371, 374, 376, 377, 379, 381, 383, 386, 387, 389, 393], "while": [1, 2, 3, 7, 8, 23, 37, 103, 107, 123, 124, 130, 131, 173, 186, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 289, 296, 297, 300, 303, 369, 370, 374, 376, 377, 379, 381, 382, 386, 387, 388, 389, 390, 392], "wait": [1, 20, 21, 22, 377, 388], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 29, 35, 36, 37, 40, 41, 43, 45, 46, 50, 61, 64, 65, 67, 68, 69, 70, 74, 75, 80, 82, 87, 88, 93, 95, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 138, 142, 143, 145, 146, 153, 164, 171, 173, 176, 177, 180, 182, 186, 194, 203, 206, 207, 219, 223, 244, 265, 268, 273, 274, 275, 282, 283, 285, 286, 288, 289, 290, 296, 300, 303, 305, 314, 321, 322, 332, 334, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 388, 390, 393], "impact": [1, 2, 3, 67, 113, 151, 154, 282, 284, 297, 300, 302, 375, 377, 386, 387], "memori": [1, 3, 8, 21, 29, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 72, 74, 78, 103, 104, 107, 111, 123, 124, 130, 131, 146, 150, 168, 182, 185, 186, 188, 190, 192, 194, 223, 224, 271, 365, 367, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "manag": [1, 8, 310, 311, 314, 315, 316, 317, 347, 380], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 71, 79, 80, 82, 85, 87, 88, 93, 103, 107, 112, 113, 123, 124, 125, 126, 130, 131, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 167, 168, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 203, 204, 205, 215, 216, 221, 225, 227, 228, 242, 253, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 332, 334, 345, 346, 347, 349, 350, 351, 355, 370, 371, 374, 376, 377, 378, 380, 385, 386, 387, 388, 390, 392, 393], "control": [1, 3, 5, 8, 16, 23, 24, 28, 80, 87, 101, 102, 103, 107, 116, 123, 124, 125, 126, 130, 131, 153, 203, 209, 210, 211, 212, 221, 225, 227, 228, 244, 251, 266, 267, 271, 272, 273, 282, 284, 297, 298, 300, 304, 314, 319, 327, 332, 369, 371, 374, 375, 376, 378, 379, 380, 386, 387, 388, 390], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 85, 86, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 146, 147, 151, 154, 159, 162, 163, 164, 168, 169, 180, 182, 183, 185, 186, 188, 192, 194, 196, 215, 219, 220, 222, 223, 224, 225, 229, 230, 231, 233, 249, 254, 255, 256, 259, 265, 268, 271, 272, 274, 282, 283, 284, 286, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 309, 312, 314, 315, 316, 317, 332, 334, 342, 346, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 388, 389, 390, 393], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 375, 387], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 29, 35, 36, 40, 42, 43, 45, 47, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 80, 82, 85, 87, 103, 107, 123, 124, 125, 126, 130, 131, 142, 143, 146, 149, 151, 154, 156, 159, 166, 178, 186, 192, 194, 221, 225, 232, 314, 316, 317, 347, 351, 370, 374, 375, 376, 377, 379, 380, 381, 383, 386, 387, 388, 390, 393], "heurist": [1, 4, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 265, 267, 374, 381, 393], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 63, 85, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 235, 300, 305, 314, 315, 316, 317, 318, 333, 368, 369, 371, 374, 375, 376, 377, 379, 381, 382, 387, 390, 393], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 52, 54, 63, 67, 86, 87, 91, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 146, 151, 153, 154, 159, 163, 164, 185, 186, 192, 194, 206, 207, 220, 221, 224, 225, 226, 229, 230, 231, 232, 248, 259, 266, 267, 275, 283, 296, 298, 301, 303, 305, 306, 370, 374, 375, 376, 378, 379, 381, 385, 386, 387, 389, 390, 393], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 79, 80, 82, 85, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 151, 153, 154, 155, 156, 158, 162, 163, 164, 166, 168, 169, 173, 175, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 196, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 246, 247, 248, 249, 253, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 278, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 361, 365, 370, 371, 374, 375, 376, 377, 379, 386, 389, 390, 392, 393], "behaviour": [1, 3, 14, 15, 21, 67, 107, 147, 151, 154, 164, 169, 181, 203, 221, 222, 225, 249, 332, 347, 369, 375, 386, 390], "besid": 1, "those": [1, 2, 3, 5, 7, 27, 33, 103, 107, 123, 124, 130, 131, 146, 151, 154, 164, 182, 183, 225, 268, 272, 273, 274, 353, 363, 364, 369, 374, 375, 378, 379, 387, 388, 393], "choos": [1, 11, 116, 221, 225, 300, 367, 369, 370, 374, 375, 376, 386, 387, 390], "follow": [1, 2, 3, 6, 7, 8, 11, 37, 41, 43, 44, 46, 47, 61, 63, 64, 65, 66, 67, 68, 69, 80, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 142, 162, 168, 188, 192, 194, 206, 207, 219, 221, 223, 225, 226, 261, 268, 269, 270, 281, 282, 283, 284, 285, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 334, 351, 369, 370, 371, 374, 375, 376, 377, 380, 381, 385, 386, 387, 388, 390, 392, 393], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 354, 374, 376, 392], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 61, 146, 159, 194, 257, 258, 262, 265, 266, 267, 333, 334, 336, 344, 347, 351, 354, 355, 374, 375, 376, 377, 379, 386, 387, 390, 392, 393], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 89, 91, 95, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 122, 123, 124, 127, 130, 131, 142, 143, 146, 149, 150, 153, 156, 158, 161, 162, 164, 166, 167, 168, 176, 178, 182, 185, 186, 188, 190, 191, 192, 194, 196, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 232, 233, 234, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 263, 265, 266, 267, 270, 271, 272, 274, 275, 278, 284, 297, 298, 300, 303, 305, 313, 314, 315, 316, 317, 332, 333, 336, 347, 370, 371, 375, 376, 377, 378, 379, 381, 382, 386, 387, 388, 390, 392, 393], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 173, 354, 374, 375, 376, 377, 381, 383, 386, 387, 390, 392], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 32, 35, 36, 37, 38, 45, 47, 49, 50, 61, 63, 64, 67, 80, 82, 85, 87, 88, 90, 93, 103, 104, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 168, 173, 176, 180, 181, 182, 183, 190, 192, 194, 216, 219, 220, 221, 223, 225, 231, 232, 237, 241, 242, 250, 257, 258, 260, 261, 262, 270, 274, 320, 323, 324, 325, 326, 328, 329, 330, 331, 334, 347, 348, 363, 364, 369, 370, 374, 375, 376, 377, 379, 380, 381, 383, 386, 387, 388, 389, 390, 392, 393], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 354, 374, 375, 383], "rand_step": [1, 2, 3, 30, 48, 101, 102, 103, 104, 106, 107, 108, 114, 115, 119, 120, 121, 123, 124, 130, 131, 161, 182, 192, 388, 392, 393], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 374], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 63, 65, 67, 68, 69, 374, 375, 376], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 32, 37, 38, 49, 50, 61, 63, 64, 65, 67, 68, 69, 79, 80, 87, 88, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 169, 180, 185, 194, 205, 225, 228, 266, 267, 300, 314, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 342, 367, 370, 374, 375, 376, 377, 378, 381, 383, 388, 392, 393], "pad": [1, 2, 3, 23, 44, 52, 63, 65, 67, 68, 69, 146, 206, 207, 209, 210, 225, 229, 230, 231, 348], "along": [1, 2, 3, 14, 15, 23, 33, 34, 41, 43, 46, 47, 54, 63, 65, 67, 68, 69, 75, 80, 82, 87, 88, 93, 95, 106, 108, 145, 146, 147, 164, 166, 169, 176, 184, 225, 226, 229, 230, 235, 260, 268, 271, 272, 298, 305, 369, 374, 375, 377, 378, 380, 386, 387, 388, 390], "point": [1, 2, 3, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 66, 73, 79, 80, 83, 93, 94, 97, 98, 103, 107, 123, 124, 130, 131, 139, 142, 145, 146, 150, 168, 181, 182, 184, 185, 186, 188, 190, 194, 227, 271, 281, 291, 351, 368, 375, 376, 385, 386, 387, 388, 390, 393], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 80, 87, 88, 107, 142, 169, 180, 204, 229, 230, 258, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 371, 377], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 48, 50, 65, 101, 102, 103, 106, 107, 108, 123, 124, 130, 131, 132, 133, 159, 169, 192, 194, 216, 229, 230, 242, 260, 261, 269, 270, 272, 309, 314, 348, 374, 376, 377, 378, 379, 380, 386, 387], "valid": [1, 2, 3, 23, 41, 43, 44, 54, 70, 93, 134, 142, 169, 186, 194, 206, 207, 226, 229, 230, 257, 258, 266, 267, 297, 314, 315, 316, 317, 348, 371, 393], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 347, 367, 374, 375], "strategi": [1, 2, 16, 67, 85, 116, 139, 230, 239, 262, 369, 371, 374, 375, 379, 386, 387, 390], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 50, 53, 55, 56, 58, 82, 103, 107, 113, 119, 123, 124, 125, 126, 130, 131, 132, 134, 143, 145, 146, 155, 162, 180, 181, 182, 185, 186, 191, 192, 194, 206, 207, 229, 230, 231, 232, 257, 258, 260, 268, 269, 272, 275, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 306, 312, 334, 351, 361, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 393], "organ": [1, 2, 388, 390], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 103, 106, 107, 108, 123, 124, 127, 130, 131, 143, 146, 151, 154, 155, 173, 180, 191, 192, 194, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 279, 286, 291, 305, 312, 332, 334, 369, 370, 375, 378, 379, 380, 381, 382, 383, 386, 388, 392], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 63, 64, 67, 85, 99, 100, 103, 107, 112, 113, 116, 123, 124, 125, 126, 130, 131, 142, 146, 153, 164, 171, 186, 187, 194, 216, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 233, 242, 296, 298, 300, 309, 314, 315, 316, 320, 321, 322, 347, 351, 353, 363, 364, 369, 370, 371, 374, 375, 376, 378, 380, 382, 385, 386, 387, 388, 389, 390, 393], "how": [1, 2, 3, 11, 18, 19, 20, 24, 37, 42, 50, 67, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 194, 233, 268, 282, 284, 295, 297, 298, 300, 334, 336, 351, 368, 369, 374, 375, 376, 377, 378, 379, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "tabl": [1, 369, 375, 379], "summar": [1, 3, 388], "what": [1, 3, 8, 11, 28, 42, 53, 61, 80, 87, 103, 107, 123, 124, 130, 131, 155, 182, 196, 203, 269, 298, 305, 368, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 383, 386, 387, 388, 389, 390, 392, 393], "expect": [1, 2, 3, 4, 7, 27, 37, 45, 53, 54, 80, 86, 87, 103, 107, 119, 122, 123, 124, 130, 131, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 164, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 219, 220, 221, 223, 224, 225, 231, 232, 261, 266, 267, 271, 274, 282, 283, 284, 285, 286, 288, 289, 290, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 355, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 386, 387, 388, 390, 393], "n": [1, 2, 3, 6, 7, 25, 29, 37, 40, 47, 103, 107, 123, 124, 130, 131, 146, 153, 158, 187, 194, 219, 220, 223, 228, 265, 266, 267, 272, 282, 283, 290, 298, 313, 348, 369, 371, 375, 377, 379, 386, 387, 390, 393], "b": [1, 2, 3, 7, 8, 23, 27, 33, 41, 43, 45, 46, 47, 50, 51, 93, 219, 220, 223, 224, 231, 232, 234, 235, 241, 250, 275, 314, 315, 316, 317, 318, 320, 334, 369, 375, 389, 390], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 79, 80, 82, 86, 93, 103, 104, 106, 107, 120, 121, 123, 124, 130, 131, 139, 142, 146, 151, 154, 155, 168, 172, 173, 181, 183, 190, 192, 194, 196, 203, 219, 223, 260, 266, 267, 271, 304, 314, 315, 316, 317, 318, 320, 334, 341, 351, 353, 365, 368, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "p": [1, 2, 4, 82, 85, 104, 128, 129], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 61, 63, 65, 67, 68, 69, 99, 100, 103, 107, 112, 113, 123, 124, 125, 126, 130, 131, 150, 151, 152, 154, 168, 173, 177, 181, 182, 184, 185, 186, 188, 190, 191, 194, 219, 222, 223, 226, 231, 244, 248, 249, 271, 274, 281, 282, 283, 285, 286, 288, 289, 290, 296, 298, 300, 301, 302, 303, 305, 306, 353, 363, 364, 365, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 393], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 79, 80, 82, 93, 103, 106, 107, 123, 124, 130, 131, 151, 152, 154, 164, 184, 186, 196, 225, 226, 232, 233, 268, 271, 272, 274, 275, 281, 282, 283, 285, 286, 288, 289, 290, 296, 298, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317, 334, 342, 353, 363, 364, 365, 367, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 386, 387, 388, 390, 393], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 53, 54, 55, 56, 63, 65, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 123, 124, 130, 131, 132, 133, 139, 145, 146, 147, 158, 164, 166, 169, 176, 179, 184, 187, 192, 206, 207, 208, 213, 221, 223, 225, 226, 229, 230, 231, 234, 235, 240, 241, 245, 246, 247, 248, 251, 260, 265, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 365, 369, 374, 375, 376, 377, 378, 386, 387, 388, 390], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 93, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 127, 130, 131, 138, 145, 147, 169, 176, 182, 183, 186, 192, 194, 203, 217, 219, 223, 225, 265, 266, 267, 283, 284, 290, 293, 296, 297, 298, 300, 301, 303, 305, 306, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 351, 369, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "adapt": [1, 24, 140, 180, 297, 374, 388], "equal": [1, 14, 15, 17, 61, 80, 87, 88, 120, 123, 130, 163, 164, 206, 207, 219, 221, 223, 225, 226, 232, 304, 309, 342, 363, 364, 374, 376, 389], "introduc": [1, 2, 123, 130, 219, 221, 223, 225, 266, 267, 374, 386], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 54, 55, 56, 63, 69, 74, 75, 82, 93, 95, 99, 100, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 142, 168, 182, 186, 188, 194, 196, 209, 221, 225, 246, 272, 273, 274, 334, 342, 354, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 390, 392, 393], "confus": [1, 37, 103, 107, 123, 124, 130, 131, 186, 194], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 46, 50, 51, 54, 61, 63, 65, 67, 68, 69, 74, 75, 76, 82, 85, 86, 87, 88, 89, 91, 95, 103, 106, 107, 108, 119, 123, 124, 130, 131, 149, 152, 153, 170, 177, 184, 188, 192, 194, 219, 221, 225, 235, 236, 259, 261, 262, 270, 272, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 314, 332, 348, 363, 364, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 392, 393], "better": [1, 3, 8, 9, 14, 15, 23, 221, 225, 370, 376, 378, 388, 392], "consist": [1, 2, 3, 37, 42, 45, 50, 51, 64, 67, 103, 107, 123, 124, 130, 131, 162, 191, 194, 207, 226, 374, 375, 376, 388, 389, 393], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 67, 103, 107, 117, 118, 123, 124, 130, 131, 186, 268, 272, 374, 376, 378, 379, 381, 386, 387, 388, 393], "keep": [1, 3, 4, 7, 8, 15, 42, 45, 50, 51, 86, 93, 123, 130, 164, 168, 190, 192, 194, 203, 266, 267, 344, 351, 374, 375, 376, 377, 381, 382, 383, 387, 388, 390, 392, 393], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 61, 64, 168, 190, 283, 285, 288, 290, 301, 303, 305, 306, 370, 374, 375, 379, 380, 386, 387, 390, 393], "interchang": [1, 376, 378, 382, 389, 390], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 153, 163, 174, 186, 192, 194, 196, 206, 207, 215, 219, 221, 225, 226, 231, 232, 261, 268, 272, 282, 284, 285, 288, 289, 290, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 309, 314, 347, 351, 370, 374, 375, 377, 381, 386, 387, 388, 390, 393], "wherea": [1, 2, 22, 67, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 153, 194, 298, 371, 382], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 50, 53, 55, 56, 64, 67, 69, 79, 80, 103, 107, 119, 123, 124, 130, 131, 168, 182, 186, 190, 192, 194, 221, 223, 225, 229, 230, 262, 263, 266, 267, 268, 272, 286, 289, 290, 303, 312, 314, 315, 316, 317, 318, 374, 375, 376, 378, 380, 381, 382, 386, 387, 388, 389], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 61, 67, 80, 87, 93, 103, 107, 123, 124, 130, 131, 169, 273, 274, 342, 351, 369, 374, 375, 376, 381, 385, 392, 393], "doesn": [1, 4, 12, 93, 120, 151, 154, 378], "understood": [1, 374], "serv": [1, 18, 20, 21, 109, 390, 393], "basi": [1, 93, 231, 390], "simplest": [1, 93, 275, 374, 376, 377, 379, 386, 387, 390, 393], "scenario": [1, 2, 117, 118, 123, 132, 133, 332, 374, 379, 386, 387, 388], "transit": [1, 37, 63, 67, 80, 88, 93, 103, 107, 123, 124, 130, 131, 194, 277, 374, 377, 378, 379, 381, 386, 388, 390], "sampl": [1, 4, 8, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 93, 95, 103, 107, 119, 122, 123, 124, 130, 131, 139, 145, 146, 169, 173, 197, 198, 201, 202, 205, 214, 222, 228, 229, 230, 239, 240, 243, 248, 249, 253, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 288, 297, 299, 300, 305, 306, 342, 348, 351, 354, 367, 369, 374, 375, 376, 377, 378, 379, 381, 383, 386, 387, 389, 392, 393], "attent": [1, 2, 8, 374, 377, 393], "given": [1, 2, 3, 14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 103, 107, 119, 123, 124, 130, 131, 150, 153, 164, 168, 182, 185, 186, 188, 190, 192, 194, 203, 205, 216, 217, 219, 223, 228, 233, 242, 246, 253, 260, 261, 262, 265, 267, 270, 271, 272, 273, 274, 276, 281, 285, 286, 288, 298, 313, 314, 315, 316, 317, 318, 320, 343, 347, 361, 369, 371, 374, 375, 376, 378, 379, 380, 381, 382, 387, 388, 393], "built": [1, 2, 3, 5, 7, 82, 99, 100, 106, 112, 113, 122, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 307, 312, 359, 361, 362, 365, 374, 375, 376, 377, 380, 382, 388, 390, 393], "flatten": [1, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 93, 143, 158, 348, 367, 377, 387], "suffici": [1, 3, 4, 374], "preprocess": [1, 2, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 375], "popul": [1, 2, 3, 42, 45, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 161, 182, 233, 298, 374, 376, 377, 379, 381, 388, 390], "replaybuff": [1, 2, 30, 42, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 97, 146, 169, 173, 194, 286, 291, 312, 359, 361, 367, 376, 381, 383, 386, 387, 389, 390, 392], "lazytensorstorag": [1, 2, 42, 45, 50, 51, 79, 93, 173, 194, 376, 383, 387, 390], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 45, 93, 103, 104, 107, 123, 124, 130, 131, 138, 143, 162, 182, 194, 251, 260, 265, 268, 269, 292, 294, 305, 314, 317, 325, 326, 330, 331, 332, 361, 370, 374, 386, 387, 390, 392, 393], "reshap": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 87, 93, 143, 221, 225, 226, 332, 376, 386, 387], "extend": [1, 2, 8, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 42, 45, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 76, 79, 80, 82, 83, 87, 88, 91, 93, 94, 97, 98, 145, 173, 194, 298, 348, 370, 371, 374, 375, 376, 377, 381, 383, 386, 387, 389, 390, 392], "slice": [1, 2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 139, 145, 390], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 42, 43, 45, 46, 50, 51, 93, 111, 233, 381, 386, 387], "achiev": [1, 2, 3, 4, 37, 103, 107, 111, 123, 124, 130, 131, 181, 194, 204, 268, 348, 371, 374, 375, 376, 377, 386, 387, 388, 390, 393], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 93, 103, 104, 107, 111, 123, 124, 125, 130, 131, 132, 133, 143, 146, 168, 185, 186, 188, 191, 192, 194, 200, 203, 206, 207, 209, 210, 211, 212, 213, 218, 221, 225, 226, 227, 231, 232, 259, 272, 279, 286, 291, 301, 303, 312, 334, 348, 355, 356, 357, 361, 363, 364, 369, 374, 375, 376, 377, 379, 382, 386, 387, 388, 389, 390, 392, 393], "multidimension": [1, 2, 50, 79, 80, 390], "slicesampl": [1, 2, 61, 80, 390], "sampler": [1, 2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 95, 169, 286, 291, 312, 374, 376, 386, 387, 390], "One": [1, 2, 4, 8, 25, 29, 36, 40, 54, 93, 99, 100, 123, 130, 146, 173, 188, 239, 257, 258, 271, 275, 304, 309, 338, 374, 375, 390, 393], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 82, 87, 88, 89, 90, 91, 93, 95, 99, 103, 104, 107, 112, 123, 124, 125, 126, 127, 130, 131, 132, 139, 142, 143, 146, 149, 155, 159, 162, 164, 166, 177, 181, 182, 183, 186, 187, 192, 194, 206, 207, 216, 221, 225, 226, 229, 230, 231, 232, 242, 253, 260, 261, 265, 268, 269, 270, 271, 272, 275, 276, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 304, 305, 306, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 370, 374, 375, 376, 377, 379, 385, 388, 390], "ensur": [1, 2, 3, 37, 42, 50, 79, 80, 86, 103, 107, 123, 124, 130, 131, 139, 146, 168, 180, 186, 188, 192, 194, 260, 369, 375, 376, 388, 390], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 82, 93, 95, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 145, 147, 151, 154, 155, 156, 162, 164, 166, 170, 171, 173, 177, 180, 182, 184, 192, 193, 194, 196, 200, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 236, 239, 240, 241, 242, 247, 248, 250, 253, 254, 255, 256, 259, 260, 261, 265, 266, 268, 269, 270, 271, 274, 275, 276, 279, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 342, 348, 351, 361, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 392, 393], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 61, 222, 248, 249, 281, 368, 374, 375, 376, 377, 380, 386, 387, 389, 393], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 28, 37, 41, 43, 89, 93, 103, 107, 111, 116, 123, 124, 125, 126, 130, 131, 146, 149, 158, 168, 171, 183, 186, 190, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 234, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 268, 269, 270, 271, 275, 278, 281, 290, 302, 303, 313, 318, 334, 351, 365, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 390, 392, 393], "dimension": [1, 42, 45, 50, 51, 153, 221, 225, 314, 319, 327, 387], "num_slic": [1, 2, 61, 67, 80, 87, 88, 390], "4": [1, 2, 3, 7, 25, 27, 29, 30, 33, 37, 40, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 87, 88, 95, 99, 100, 101, 102, 103, 107, 112, 113, 114, 115, 116, 119, 121, 123, 124, 128, 129, 130, 131, 139, 140, 142, 143, 146, 155, 173, 180, 181, 192, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 226, 228, 231, 232, 236, 237, 238, 239, 240, 241, 242, 250, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 276, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 332, 333, 369, 373, 374, 375, 376, 377, 379, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 30, 48, 143, 173, 377, 381, 390, 392], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 173, 351, 354, 361, 371, 374, 375, 376, 377, 381, 383, 386, 387, 390, 392], "dim": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 146, 147, 166, 182, 187, 192, 224, 246, 251, 265, 365, 375, 376, 386, 388, 390], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 53, 54, 55, 56, 63, 65, 67, 79, 80, 87, 88, 103, 107, 111, 120, 123, 124, 127, 130, 131, 143, 150, 168, 182, 185, 186, 188, 190, 194, 221, 225, 226, 233, 251, 271, 273, 274, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 332, 334, 336, 369, 371, 374, 375, 376, 377, 378, 379, 380, 382, 386, 387, 388, 390, 393], "ndim": [1, 2, 42, 45, 50, 51, 74, 75, 79, 80, 93, 95, 103, 107, 123, 124, 130, 131, 194, 265], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 93, 103, 107, 120, 124, 125, 126, 127, 130, 131, 332, 362, 367, 374, 375, 376, 378, 385, 392, 393], "make_env": [1, 3, 123, 130, 133, 192, 332, 356, 357, 374, 375, 393], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 79, 85, 103, 107, 123, 124, 130, 131, 186, 215, 242, 261, 269, 270, 271, 272, 291, 353, 367, 371, 374, 375, 378, 379, 383, 390, 393], "behav": [1, 3, 109, 119, 219, 223, 239, 289, 296, 298, 389], "iif": 1, "accordingli": [1, 80, 180, 181, 223, 269, 377], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 27, 29, 33, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 110, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 142, 143, 146, 150, 153, 155, 156, 162, 164, 166, 168, 170, 171, 173, 176, 177, 180, 181, 182, 184, 185, 186, 188, 190, 194, 195, 200, 205, 206, 207, 209, 210, 211, 213, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 233, 236, 239, 241, 251, 253, 254, 255, 256, 260, 261, 268, 270, 271, 274, 275, 276, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 350, 369, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 67, 79, 93, 142, 155, 196, 260, 271, 379, 380, 382, 386, 387], "current": [1, 2, 3, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 80, 82, 88, 103, 107, 109, 120, 123, 124, 130, 131, 142, 143, 146, 169, 181, 182, 183, 185, 186, 194, 197, 198, 203, 217, 244, 265, 266, 267, 282, 284, 291, 297, 300, 302, 303, 337, 371, 374, 375, 376, 377, 380, 386, 387, 388, 390, 392, 393], "fulli": [1, 8, 37, 103, 107, 123, 124, 130, 131, 194, 220, 224, 375, 380, 388, 390], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83, 86, 88, 89, 91, 93, 94, 95, 97, 98, 103, 104, 107, 120, 123, 124, 125, 126, 130, 131, 132, 133, 140, 142, 158, 168, 169, 173, 186, 188, 192, 194, 196, 204, 206, 207, 213, 226, 235, 259, 265, 271, 272, 273, 274, 282, 283, 285, 286, 288, 289, 290, 296, 298, 300, 301, 302, 303, 305, 306, 314, 316, 317, 332, 339, 351, 368, 370, 374, 375, 376, 379, 380, 386, 387, 388, 390, 392, 393], "consecut": [1, 3, 61, 86, 111, 225, 266, 267, 334, 377, 378, 381, 387, 390, 393], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 103, 104, 106, 107, 120, 121, 123, 124, 130, 131, 168, 190, 194, 351, 365, 375, 376, 378, 379], "therebi": [1, 24, 332, 370, 374, 375], "interrupt": [1, 2, 107, 265, 320], "These": [1, 2, 7, 37, 47, 64, 69, 96, 103, 107, 123, 124, 130, 131, 132, 168, 190, 194, 369, 370, 374, 376, 386, 387, 388, 390, 393], "tool": [1, 2, 3, 5, 377, 378, 386, 388, 390, 393], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 103, 106, 107, 123, 124, 130, 131, 135, 138, 371, 374, 376, 377, 378, 381, 382, 388], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 367], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 367], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 61, 69, 104, 105, 123, 130, 192, 374, 375, 376, 377, 386, 387, 388, 389, 393], "synchron": [1, 14, 19, 21, 41, 43, 46, 120, 363, 364, 375, 376, 386], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 120, 123, 124, 130, 131, 151, 154, 181, 186, 192, 194, 197, 201, 214, 221, 222, 225, 239, 247, 248, 249, 268, 272, 298, 332, 347, 370, 374, 375, 377, 386, 387, 392, 393], "find": [1, 4, 6, 7, 18, 19, 20, 42, 44, 52, 87, 88, 223, 257, 258, 266, 267, 345, 349, 374, 375, 379, 380, 386, 387], "folder": [1, 2, 41, 43, 46, 132, 375], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 104, 106, 107, 108, 109, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 134, 139, 145, 146, 149, 150, 151, 152, 154, 157, 162, 163, 164, 168, 176, 178, 182, 183, 185, 186, 188, 190, 192, 194, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 282, 283, 293, 296, 298, 300, 301, 302, 303, 305, 306, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 346, 351, 354, 363, 364, 365, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 392, 393], "variou": [1, 2, 3, 221, 225, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 307, 312, 334, 363, 364, 374, 375, 376, 378, 379, 380, 382, 386, 387, 390, 393], "machin": [1, 2, 7, 18, 19, 20, 37, 66, 111, 386, 387, 392], "wonder": 1, "why": [1, 2, 3, 203, 386, 388, 393], "instead": [1, 4, 7, 8, 12, 29, 37, 67, 103, 107, 123, 124, 130, 131, 158, 182, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 282, 284, 286, 289, 290, 291, 296, 297, 300, 301, 302, 303, 312, 314, 318, 322, 365, 369, 370, 378, 379, 383, 388, 390, 393], "lower": [1, 2, 3, 21, 26, 149, 192, 243, 244, 275, 376, 386, 388], "io": [1, 11, 61, 67, 112, 113, 120, 223, 224], "footprint": [1, 2, 390], "commun": [1, 2, 3, 123, 130, 368, 376, 393], "yet": [1, 99, 100, 112, 389], "plai": [1, 3, 125, 126, 131, 146, 375, 376, 380, 390, 393], "role": [1, 3, 118, 375, 380, 393], "opposit": [1, 386], "direct": [1, 2, 37, 103, 107, 123, 124, 130, 131, 194, 219, 223, 298, 375, 380], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 69, 79, 80, 88, 93, 103, 107, 123, 124, 125, 126, 127, 130, 131, 194, 196, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 275, 278, 332, 334, 370, 374, 375, 376, 377, 378, 379, 380, 386, 388, 389, 390, 392, 393], "faster": [1, 2, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 68, 69, 120, 314, 315, 316, 317, 377, 386, 387], "share": [1, 3, 6, 8, 23, 41, 43, 46, 72, 74, 75, 76, 80, 87, 89, 91, 95, 104, 123, 130, 192, 221, 225, 231, 232, 254, 255, 256, 282, 283, 284, 285, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 365, 367, 369, 376, 377, 383, 385, 386, 387, 392, 393], "among": [1, 3, 125, 126, 386, 387], "prohibit": [1, 3, 93], "slow": [1, 3, 4, 11, 41, 43, 46], "compar": [1, 3, 67, 93, 283, 296, 301, 303, 305, 306, 347, 370, 374, 376, 379, 380, 386, 387, 390, 393], "gpu": [1, 7, 8, 37, 74, 75, 95, 103, 107, 111, 123, 124, 130, 131, 194, 374, 376, 377, 386, 387, 393], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 50, 61, 79, 80, 87, 93, 99, 100, 107, 131, 142, 164, 192, 205, 214, 217, 219, 221, 223, 225, 228, 240, 247, 248, 257, 258, 268, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 369, 370, 374, 375, 376, 379, 386, 387, 388, 390, 392, 393], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 142, 143, 147, 149, 150, 168, 176, 177, 182, 184, 185, 186, 188, 190, 194, 221, 225, 229, 230, 231, 253, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 271, 272, 275, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 299, 300, 301, 302, 303, 305, 306, 308, 312, 314, 315, 316, 317, 318, 322, 332, 341, 362, 374, 375, 376, 379, 382, 386, 387, 390, 393], "build": [1, 3, 7, 23, 27, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 108, 109, 112, 113, 117, 118, 120, 123, 124, 127, 130, 131, 132, 133, 173, 192, 194, 205, 221, 225, 228, 264, 268, 272, 351, 358, 359, 360, 369, 371, 376, 377, 379, 380, 381, 382, 386, 387, 388, 389, 392, 393], "mani": [1, 2, 3, 4, 45, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 127, 282, 284, 290, 297, 300, 369, 374, 375, 376, 378, 379, 381, 383, 386, 387, 388, 390, 393], "eg": [1, 2, 3, 12, 41, 43, 46, 74, 75, 76, 89, 91, 95, 101, 102, 103, 106, 107, 108, 109, 111, 123, 124, 127, 130, 131, 153, 180, 186, 231, 259, 334], "gymnasium": [1, 3, 5, 12, 103, 106, 107, 108, 114, 115, 123, 124, 130, 131, 135, 138, 156, 177, 180, 191, 375, 376, 388, 392], "warn": [1, 3, 257, 258, 262, 263, 266, 267, 375], "quickli": [1, 3, 375, 386, 387, 393], "becom": [1, 3, 4, 21, 219, 223, 386, 387, 393], "quit": [1, 3, 11, 61, 103, 107, 123, 124, 130, 131, 369, 374, 375, 376, 379, 386, 387, 393], "annoi": [1, 3], "By": [1, 2, 3, 27, 33, 40, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 251, 272, 298, 347, 365, 370, 374, 386, 389, 390, 393], "filter": [1, 2, 3, 4, 54, 80, 87, 88, 282, 283, 285, 289, 290, 296, 300, 301, 303, 378], "out": [1, 2, 3, 4, 5, 9, 21, 37, 41, 43, 46, 54, 63, 67, 72, 80, 87, 88, 103, 107, 123, 124, 125, 126, 130, 131, 182, 194, 196, 219, 220, 223, 229, 230, 233, 234, 235, 253, 259, 260, 261, 267, 268, 269, 270, 271, 272, 298, 310, 311, 370, 371, 374, 375, 376, 377, 378, 379, 381, 386, 387, 388, 390, 392, 393], "still": [1, 2, 3, 9, 67, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 258, 297, 298, 374, 375, 377, 385, 388, 390, 393], "wish": [1, 3, 11, 14, 15, 17, 67, 138, 380, 390], "displai": [1, 3, 7, 103, 107, 123, 124, 130, 131, 351, 371, 374, 375, 387, 388], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 82, 85, 86, 87, 88, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 147, 150, 151, 154, 155, 156, 158, 161, 162, 163, 164, 166, 168, 169, 170, 171, 173, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 192, 194, 196, 203, 204, 205, 206, 207, 209, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 241, 242, 248, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 312, 314, 315, 316, 317, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 341, 344, 345, 347, 348, 349, 351, 365, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "central": [2, 231, 232, 233, 374, 375, 378, 386, 387, 390], "part": [2, 3, 4, 8, 37, 47, 61, 64, 65, 67, 68, 69, 99, 103, 107, 112, 123, 124, 130, 131, 145, 164, 173, 176, 194, 203, 221, 225, 276, 342, 365, 374, 376, 377, 383, 386, 388, 393], "algorithm": [2, 3, 8, 9, 119, 139, 282, 300, 301, 303, 367, 370, 371, 374, 375, 376, 377, 379, 380, 381, 382, 386, 387, 389, 390, 392], "implement": [2, 3, 9, 12, 14, 15, 16, 37, 77, 89, 90, 103, 107, 119, 120, 123, 124, 130, 131, 143, 150, 151, 152, 156, 159, 162, 170, 171, 177, 180, 185, 186, 192, 194, 206, 219, 220, 221, 222, 223, 224, 225, 247, 248, 249, 282, 283, 287, 288, 289, 296, 298, 299, 300, 302, 303, 305, 332, 342, 356, 369, 371, 374, 375, 376, 377, 386, 387, 388, 392], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 37, 42, 45, 47, 50, 51, 61, 63, 67, 69, 86, 88, 93, 99, 100, 103, 104, 107, 111, 112, 113, 123, 124, 130, 131, 146, 162, 168, 171, 188, 191, 192, 194, 196, 205, 225, 231, 232, 233, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 334, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "give": [2, 3, 7, 50, 64, 103, 107, 119, 123, 124, 130, 131, 146, 368, 370, 374, 375, 386, 387, 388, 389, 392], "abil": [2, 298, 388, 390], "panel": [2, 376], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 63, 69, 72, 93, 143, 146, 155, 221, 225, 289, 296, 303, 307, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "includ": [2, 3, 4, 7, 9, 21, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 89, 91, 95, 103, 107, 119, 123, 124, 130, 131, 181, 186, 192, 194, 221, 225, 298, 303, 354, 369, 371, 374, 375, 376, 377, 386, 387, 388, 390, 393], "almost": [2, 377], "physic": [2, 6, 7, 72, 123, 124, 127, 371, 374, 386, 387, 388], "theori": 2, "crude": 2, "made": [2, 3, 23, 37, 45, 61, 74, 75, 76, 89, 91, 95, 103, 106, 107, 108, 123, 124, 130, 131, 194, 233, 266, 267, 286, 298, 312, 374, 375, 377, 386, 387, 389, 390], "liststorag": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 390], "veri": [2, 3, 112, 113, 375, 378, 381, 386, 388, 390, 392, 393], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 37, 40, 41, 43, 46, 61, 67, 80, 82, 85, 87, 88, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 142, 143, 171, 194, 203, 226, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 307, 309, 312, 369, 371, 374, 376, 377, 378, 379, 380, 386, 387, 388, 390, 393], "complex": [2, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 374, 375, 378, 379], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 87, 88, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 151, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 170, 171, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 280, 282, 283, 285, 286, 288, 289, 290, 293, 294, 296, 298, 300, 301, 302, 303, 305, 306, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 392, 393], "contigu": [2, 3, 8, 64, 67, 68, 103, 107, 123, 124, 130, 131, 200, 376, 386, 387, 388, 390, 392, 393], "tensorstorag": [2, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 93, 96, 381, 390], "lazymemmapstorag": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 145, 146, 374, 375, 377, 381, 386, 389, 390], "citizen": 2, "pytre": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 96], "tupl": [2, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 80, 82, 87, 91, 93, 101, 102, 103, 106, 107, 108, 123, 124, 130, 131, 162, 164, 194, 209, 215, 216, 221, 224, 225, 226, 233, 236, 240, 241, 242, 260, 261, 269, 270, 275, 282, 283, 285, 289, 290, 292, 296, 298, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317, 345, 347, 349, 358, 390], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 37, 41, 43, 46, 54, 80, 85, 87, 88, 103, 106, 107, 108, 117, 118, 123, 124, 130, 131, 132, 133, 182, 186, 194, 268, 272, 303, 305, 347, 363, 364, 365, 371, 375, 376, 378, 380, 386, 388, 393], "nest": [2, 3, 23, 27, 30, 32, 33, 37, 38, 41, 43, 45, 46, 48, 49, 57, 74, 75, 78, 82, 95, 103, 106, 107, 108, 123, 124, 130, 131, 146, 180, 183, 194, 204, 265, 314, 315, 316, 317, 318, 332, 371, 375, 376, 387, 388, 390, 392], "construct": [2, 3, 5, 23, 37, 42, 45, 50, 51, 61, 82, 103, 106, 107, 123, 124, 125, 130, 131, 151, 154, 194, 196, 221, 225, 244, 272, 351, 369, 375, 376, 377, 379, 386, 388, 390, 393], "ram": [2, 106, 108, 382, 390], "prealloc": [2, 3, 123, 130, 388], "ve": [2, 47, 374, 377, 383], "been": [2, 3, 5, 7, 8, 18, 20, 21, 47, 82, 86, 103, 107, 111, 117, 118, 123, 124, 130, 131, 162, 180, 181, 185, 219, 223, 233, 258, 263, 265, 267, 282, 298, 300, 302, 374, 375, 376, 377, 385, 386, 387, 388, 390, 393], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 68, 69, 93, 101, 102, 103, 107, 111, 123, 124, 125, 126, 130, 131, 146, 233, 341, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 383, 386, 387, 388, 390, 392, 393], "start": [2, 3, 4, 5, 14, 21, 24, 54, 61, 69, 80, 87, 88, 104, 107, 116, 123, 130, 203, 346, 373, 374, 375, 384, 387, 388, 390, 391, 393], "replay_buff": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 348, 361, 374, 375, 376, 381, 386, 387, 390], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 30, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 142, 143, 145, 146, 149, 155, 156, 161, 162, 164, 166, 168, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 185, 190, 192, 194, 195, 200, 203, 204, 205, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 233, 236, 241, 242, 250, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 279, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 332, 334, 344, 347, 361, 369, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "rb": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 146, 173, 194, 375, 377, 381, 383, 387, 389, 390, 392], "10": [2, 3, 7, 22, 23, 25, 27, 29, 37, 42, 45, 47, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 119, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 143, 145, 146, 181, 183, 184, 194, 205, 208, 209, 211, 213, 215, 219, 220, 223, 224, 228, 240, 251, 262, 263, 266, 267, 268, 275, 279, 283, 286, 288, 300, 301, 302, 306, 312, 314, 315, 316, 317, 320, 334, 342, 371, 374, 375, 376, 377, 378, 379, 383, 386, 387, 388, 390, 392, 393], "add": [2, 3, 4, 6, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 82, 83, 93, 94, 97, 98, 103, 107, 123, 124, 130, 131, 146, 162, 186, 194, 221, 225, 234, 264, 282, 346, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 390, 392], "string": [2, 18, 19, 20, 37, 44, 54, 70, 103, 107, 117, 123, 124, 130, 131, 138, 168, 180, 190, 194, 221, 225, 260, 265, 268, 269, 281, 333, 350, 370, 374, 376, 377, 390], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 82, 87, 88, 93, 95, 122, 123, 130, 139, 146, 169, 178, 181, 182, 206, 207, 219, 220, 223, 253, 257, 258, 260, 265, 271, 272, 276, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 342, 370, 374, 376, 379, 381, 390, 393], "30": [2, 3, 45, 65, 142, 163, 243, 244, 332, 336, 374, 375, 376, 381, 387, 388, 389, 390], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 89, 91, 93, 95, 103, 104, 106, 107, 116, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 158, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 361, 363, 364, 365, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 390, 392, 393], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 141, 142, 143, 145, 146, 147, 148, 150, 153, 158, 159, 163, 164, 166, 168, 169, 172, 179, 180, 183, 186, 187, 188, 190, 194, 196, 200, 205, 206, 207, 208, 209, 211, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 282, 283, 284, 290, 292, 293, 297, 298, 299, 300, 301, 305, 306, 314, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 342, 343, 344, 347, 348, 351, 353, 359, 363, 364, 365, 388, 390], "entri": [2, 3, 14, 15, 17, 23, 27, 30, 33, 37, 41, 43, 44, 46, 48, 54, 58, 63, 64, 65, 66, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 127, 130, 131, 132, 133, 142, 146, 148, 149, 151, 154, 155, 158, 161, 164, 166, 168, 171, 173, 176, 178, 180, 181, 182, 190, 192, 194, 203, 204, 221, 229, 230, 259, 260, 265, 269, 270, 283, 303, 314, 315, 316, 317, 369, 374, 376, 377, 378, 379, 380, 382, 386, 387, 388, 389, 390, 393], "onto": [2, 8, 40, 41, 43, 46, 200, 253, 257, 258, 260, 261, 266, 267, 268, 269, 270, 271, 272, 377, 388], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 79, 80, 82, 83, 85, 86, 87, 88, 93, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 132, 133, 139, 146, 147, 180, 181, 182, 183, 186, 194, 204, 206, 207, 226, 229, 230, 232, 265, 266, 267, 269, 270, 278, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 355, 365, 368, 371, 376, 377, 381, 382, 383, 388, 390, 393], "without": [2, 3, 7, 9, 14, 15, 16, 37, 41, 43, 46, 47, 61, 63, 67, 87, 88, 103, 107, 123, 124, 130, 131, 132, 133, 140, 142, 151, 154, 184, 194, 219, 220, 223, 224, 255, 256, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 313, 314, 315, 316, 317, 318, 361, 368, 369, 374, 375, 376, 378, 379, 380, 381, 386, 387, 388, 390, 393], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 42, 43, 46, 47, 50, 79, 80, 103, 107, 119, 123, 124, 125, 126, 130, 131, 140, 142, 143, 151, 153, 154, 170, 180, 181, 186, 189, 192, 194, 204, 205, 219, 221, 225, 228, 233, 257, 258, 262, 263, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 285, 286, 288, 290, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 312, 314, 315, 316, 317, 318, 347, 351, 353, 356, 357, 360, 361, 371, 375, 376, 377, 380, 383, 386, 387, 388, 390, 392, 393], "length": [2, 20, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 44, 47, 52, 53, 54, 55, 56, 61, 67, 70, 80, 87, 88, 91, 103, 107, 112, 113, 123, 124, 130, 131, 139, 169, 192, 205, 206, 207, 209, 211, 213, 219, 223, 226, 228, 231, 232, 253, 271, 276, 342, 348, 374, 376, 377, 381, 383, 388, 390, 393], "cursor": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "place": [2, 3, 24, 27, 28, 33, 37, 41, 43, 46, 74, 75, 82, 85, 95, 103, 104, 107, 123, 124, 130, 131, 132, 133, 142, 150, 155, 168, 182, 185, 186, 188, 190, 191, 192, 194, 204, 233, 259, 265, 271, 348, 353, 354, 370, 375, 376, 379, 382, 386, 387, 388, 390], "afterward": [2, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 386, 393], "tell": [2, 3, 4, 7, 125, 126, 374, 377, 381, 386, 387], "our": [2, 3, 7, 8, 11, 18, 45, 146, 334, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 392], "far": [2, 47, 222, 248, 249, 383, 388, 393], "restrict": [2, 3, 375, 389, 390, 393], "empti": [2, 3, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 103, 107, 122, 123, 124, 130, 131, 151, 154, 168, 170, 183, 186, 188, 190, 194, 200, 338, 374, 388], "64": [2, 3, 41, 43, 46, 61, 67, 82, 146, 172, 209, 210, 218, 221, 225, 232, 233, 241, 312, 374, 375, 376, 377, 379, 383, 385, 388, 389, 390, 392, 393], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 87, 88, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 143, 144, 150, 151, 152, 153, 154, 155, 156, 162, 164, 166, 168, 170, 171, 173, 177, 180, 182, 184, 185, 186, 188, 190, 194, 196, 200, 203, 204, 205, 215, 216, 219, 220, 221, 223, 224, 225, 228, 234, 235, 241, 242, 250, 253, 254, 255, 256, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 274, 276, 279, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 320, 369, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "unit8": 2, "img": 2, "randint": [2, 54, 82, 184, 390], "255": [2, 82, 184, 373, 374, 388, 390, 391], "uint8": [2, 3, 41, 43, 46, 56, 61, 67, 101, 102, 117, 118, 155, 166, 184, 375, 382, 389, 390, 392, 393], "next": [2, 3, 4, 8, 14, 15, 16, 23, 27, 30, 32, 33, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 117, 118, 119, 123, 124, 128, 129, 130, 131, 132, 133, 139, 142, 143, 145, 146, 151, 154, 155, 156, 161, 162, 166, 170, 171, 173, 176, 177, 180, 182, 191, 192, 194, 200, 203, 205, 220, 221, 224, 225, 228, 244, 265, 277, 279, 282, 283, 285, 286, 288, 289, 290, 291, 296, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 334, 345, 347, 349, 375, 377, 379, 382, 383, 385, 388, 389, 392, 393], "ask": [2, 8, 61, 67, 80, 87, 88, 334, 376, 377, 378, 379, 386, 387, 389, 393], "do": [2, 3, 4, 7, 69, 103, 107, 123, 124, 130, 131, 132, 133, 139, 169, 191, 192, 203, 232, 234, 255, 298, 314, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 392, 393], "automat": [2, 3, 5, 69, 74, 75, 82, 95, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 142, 151, 154, 164, 182, 191, 206, 221, 225, 253, 265, 268, 332, 369, 374, 376, 378, 379, 386, 387, 388, 390, 392], "hand": [2, 3, 7, 21, 27, 386, 387, 388], "look": [2, 3, 5, 7, 8, 37, 80, 103, 107, 116, 123, 124, 125, 126, 130, 131, 168, 169, 188, 194, 268, 272, 273, 274, 370, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 392, 393], "assum": [2, 3, 6, 27, 40, 47, 50, 51, 63, 65, 67, 68, 69, 71, 72, 78, 87, 103, 107, 123, 124, 130, 131, 145, 148, 158, 168, 169, 176, 182, 186, 188, 190, 200, 221, 225, 251, 275, 286, 291, 303, 312, 323, 324, 325, 326, 328, 329, 330, 331, 334, 374, 376, 377, 385, 388], "lead": [2, 3, 4, 8, 10, 12, 23, 27, 33, 37, 42, 45, 50, 51, 63, 86, 101, 102, 103, 106, 108, 109, 182, 222, 241, 248, 249, 374, 377, 386, 387, 388, 390, 392], "leav": [2, 25, 27, 29, 33, 35, 36, 40, 41, 43, 45, 46, 103, 196, 204, 374, 381, 390], "tree": [2, 41, 43, 46, 103, 107, 123, 124, 130, 131, 386, 390], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 91, 101, 102, 103, 104, 106, 107, 108, 109, 123, 124, 130, 131, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 206, 207, 214, 221, 225, 226, 231, 232, 247, 253, 259, 260, 268, 269, 271, 272, 275, 276, 283, 290, 297, 299, 301, 303, 348, 353, 369, 374, 376, 385, 387, 388, 390, 393], "don": [2, 3, 4, 6, 7, 11, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 146, 375, 376, 381, 390, 392, 393], "throw": [2, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 194, 393], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 27, 30, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 145, 146, 150, 151, 154, 155, 156, 166, 170, 171, 173, 177, 180, 182, 185, 186, 194, 195, 203, 204, 205, 213, 215, 216, 221, 225, 228, 241, 242, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 334, 342, 348, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "max": [2, 23, 40, 43, 50, 54, 70, 79, 80, 93, 153, 183, 248, 249, 266, 267, 283, 284, 290, 299, 301, 303, 374, 376, 377, 383], "label": [2, 43, 44, 47, 54, 374, 386, 390], "100": [2, 14, 15, 16, 17, 37, 42, 45, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 149, 155, 164, 173, 178, 180, 194, 231, 261, 265, 334, 343, 361, 375, 376, 377, 378, 380, 383, 385, 386, 387, 388, 389, 390, 392, 393], "rb_pytre": 2, "randn": [2, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 95, 145, 164, 200, 208, 209, 213, 215, 216, 219, 220, 223, 224, 229, 230, 231, 236, 239, 240, 242, 253, 254, 255, 256, 259, 260, 268, 269, 271, 274, 275, 276, 282, 283, 285, 286, 288, 289, 290, 296, 298, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317, 350, 369, 390, 392, 393], "c": [2, 3, 6, 7, 27, 41, 43, 45, 46, 50, 51, 66, 164, 184, 223, 224, 375, 390], "zero": [2, 3, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 82, 87, 88, 93, 95, 103, 107, 123, 124, 130, 131, 143, 145, 147, 151, 153, 154, 164, 170, 173, 194, 200, 203, 205, 210, 211, 212, 218, 219, 220, 221, 223, 224, 225, 229, 230, 232, 233, 241, 250, 262, 263, 266, 267, 270, 278, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 320, 377, 390, 392], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 107, 110, 123, 130, 138, 139, 143, 146, 149, 151, 154, 162, 171, 178, 192, 196, 200, 232, 236, 251, 314, 315, 316, 317, 342, 350, 381, 385, 390, 393], "len": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 95, 166, 206, 207, 226, 232, 374, 381, 383, 386, 388, 389, 390, 392], "ambigu": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 91, 103, 107, 123, 124, 130, 131, 143, 150, 168, 182, 185, 186, 188, 190, 194, 271, 370, 374, 378, 388], "deal": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 298, 370, 374, 376, 387, 390], "interpret": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 375], "put": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 117, 118, 131, 132, 133, 192, 341, 365, 369, 375, 376, 377, 378, 386, 388], "solv": [2, 4, 9, 10, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 368, 374, 375, 376, 381, 383, 386, 387, 388, 390], "clear": [2, 3, 11, 27, 33, 34, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 111, 123, 124, 130, 131, 194, 343, 378, 381], "cut": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "distinct": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 143, 380, 385], "view": [2, 3, 8, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 194, 216, 219, 223, 226, 378, 388, 390, 392, 393], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 27, 33, 67, 99, 100, 103, 106, 107, 108, 111, 112, 113, 116, 123, 124, 125, 126, 130, 131, 142, 151, 154, 169, 226, 241, 265, 268, 272, 273, 274, 278, 298, 314, 315, 316, 317, 369, 370, 374, 375, 376, 378, 380, 385, 386, 387, 388, 389, 390, 393], "collate_fn": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 390, 392], "__init__": [2, 3, 7, 103, 119, 138, 140, 143, 151, 154, 170, 205, 216, 219, 223, 228, 276, 283, 285, 290, 296, 301, 303, 305, 306, 371, 388, 393], "major": 2, "worri": [2, 52], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 74, 75, 76, 80, 87, 89, 91, 95, 103, 104, 107, 111, 123, 124, 130, 131, 142, 204, 374, 376, 378, 386, 387, 388, 393], "though": [2, 4, 11, 103, 107, 123, 124, 130, 131, 226, 376, 386, 387], "too": [2, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 47, 53, 55, 56, 103, 107, 123, 124, 130, 131, 163, 182, 222, 248, 249, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 375, 379, 382, 388, 390, 393], "latter": [2, 18, 19, 20, 37, 63, 103, 107, 123, 124, 130, 131, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 300, 363, 364], "inv": [2, 3, 149, 153, 156, 166, 173, 178, 388], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 87, 88, 89, 90, 91, 93, 95, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 142, 143, 146, 150, 151, 152, 155, 156, 158, 162, 164, 168, 170, 171, 172, 173, 177, 180, 182, 185, 186, 188, 190, 194, 195, 205, 221, 225, 231, 232, 233, 253, 254, 255, 256, 257, 259, 260, 261, 262, 264, 268, 269, 270, 271, 272, 273, 279, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 318, 332, 333, 362, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 386, 388, 390, 393], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 52, 53, 55, 56, 72, 103, 107, 123, 124, 130, 131, 153, 156, 177, 184, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 314, 390], "multithread": [2, 3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 120, 121, 381, 390], "thread": [2, 14, 15, 17, 41, 43, 46, 99, 100, 112, 113, 123, 130], "prefetch": [2, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 374, 375, 377, 390], "advis": [2, 11, 64, 382, 393], "benchmark": [2, 3, 9, 99, 100, 112, 113], "techniqu": [2, 8, 123, 130, 375, 381, 390], "real": [2, 5, 67, 272, 370, 377, 388], "life": [2, 155], "adopt": [2, 3, 5, 374, 393], "throughput": [2, 9, 113, 374], "constant": [2, 11, 28, 146, 164, 181, 371, 374, 376, 377, 393], "throughout": [2, 3, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 376, 386, 393], "further": [2, 3, 5, 24, 374, 376, 378], "refin": [2, 67, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312], "coupl": [2, 377, 379, 380, 388, 390], "get": [2, 3, 4, 6, 7, 8, 9, 27, 33, 41, 42, 43, 45, 46, 61, 63, 67, 74, 75, 80, 87, 88, 89, 91, 93, 95, 103, 104, 107, 123, 124, 130, 131, 140, 145, 147, 151, 153, 154, 162, 164, 169, 181, 182, 184, 186, 192, 253, 262, 263, 268, 269, 272, 279, 314, 315, 316, 317, 318, 334, 338, 369, 373, 374, 375, 376, 377, 384, 386, 387, 388, 390, 391, 392, 393], "first_elt": 2, "128": [2, 61, 63, 67, 88, 99, 100, 112, 113, 210, 213, 375, 377, 383, 386, 388, 389, 390], "wa": [2, 3, 5, 7, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 103, 107, 123, 124, 130, 131, 186, 196, 204, 223, 282, 284, 295, 297, 300, 302, 304, 320, 370, 375, 376, 378, 379, 385, 386, 390, 392], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 29, 30, 33, 37, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 138, 139, 142, 143, 146, 147, 151, 152, 153, 154, 161, 164, 170, 171, 173, 176, 180, 182, 183, 184, 192, 194, 200, 203, 204, 206, 207, 209, 210, 211, 212, 213, 216, 218, 221, 226, 229, 230, 231, 232, 236, 239, 242, 253, 254, 255, 256, 259, 260, 262, 263, 265, 266, 267, 268, 269, 271, 274, 276, 279, 298, 332, 361, 369, 371, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 147], "larger": [2, 4, 221, 225, 289, 296, 392], "volum": 2, "due": [2, 3, 5, 23, 380, 389, 390, 393], "serialis": [2, 41, 43, 46], "memorymappedtensor": [2, 30, 41, 43, 48, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 336, 381, 389], "well": [2, 3, 8, 11, 21, 23, 37, 42, 44, 45, 50, 51, 80, 85, 89, 96, 103, 107, 123, 124, 130, 131, 186, 194, 209, 223, 243, 244, 298, 305, 318, 374, 375, 377, 378, 379, 380, 382, 389, 390, 392, 393], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 151, 152, 154, 176, 179, 181, 187, 194, 205, 223, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 341, 369, 374, 376, 377, 381, 386], "file": [2, 6, 7, 8, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 72, 132, 333, 334, 336, 371, 373, 375, 386, 390, 391, 393], "locat": [2, 7, 41, 43, 46, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 155, 164, 175, 222, 236, 248, 249, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 374, 375, 376, 382, 386, 387, 390], "improv": [2, 4, 11, 159, 282, 370, 386, 387, 390], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 123, 130, 376, 386, 390], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 111, 123, 124, 130, 131, 140, 146, 173, 176, 183, 192, 194, 204, 262, 263, 268, 272, 297, 298, 300, 374, 375, 377, 378, 380, 382, 388, 390, 393], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 53, 55, 56, 80, 153, 223, 224, 289, 377, 381, 390], "sharabl": [2, 123, 130], "collabor": [2, 67], "rather": [2, 4, 91, 171, 374, 375, 376, 378, 380, 386, 387, 390], "incur": [2, 99, 100, 112, 113], "transmiss": 2, "overhead": [2, 99, 100, 112, 113, 123, 130], "subclass": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 82, 103, 107, 123, 124, 130, 131, 141, 142, 185, 191, 196, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 271, 272, 273, 275, 278, 298, 300, 375, 377, 381, 388, 390], "instanti": [2, 3, 14, 15, 21, 41, 42, 43, 45, 46, 50, 51, 79, 80, 111, 142, 185, 232, 332, 374, 375, 379, 380, 382, 386, 387, 388, 390, 393], "content": [2, 8, 16, 27, 33, 41, 42, 43, 45, 46, 50, 51, 86, 103, 106, 107, 108, 120, 123, 124, 130, 131, 170, 206, 207, 226, 231, 232, 268, 298, 376, 388, 392], "map": [2, 3, 8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 78, 79, 80, 103, 107, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 194, 200, 216, 236, 253, 254, 255, 256, 260, 268, 269, 271, 272, 274, 275, 276, 277, 303, 312, 347, 367, 369, 370, 374, 375, 376, 377, 379, 380, 389, 392], "writer": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 80, 82, 83, 87, 93, 94, 98, 376, 390], "tensordictroundrobinwrit": [2, 82], "goe": [2, 4, 125, 126, 374, 376, 386, 387, 393], "prioritizedsampl": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 286, 291, 312, 374, 390], "access": [2, 3, 7, 8, 11, 37, 42, 64, 66, 103, 107, 123, 124, 130, 131, 168, 188, 194, 365, 368, 374, 378, 386, 387, 388, 390], "show": [2, 11, 37, 103, 107, 123, 124, 130, 131, 194, 232, 334, 369, 374, 376, 377, 386, 387, 388, 390, 392], "tensordictreplaybuff": [2, 42, 45, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 145, 146, 348, 361, 367, 374, 375, 377, 390], "mp": [2, 18, 19, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 104, 192], "def": [2, 3, 12, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 124, 130, 131, 138, 140, 142, 143, 151, 154, 170, 186, 194, 205, 216, 219, 220, 223, 224, 228, 233, 265, 268, 276, 283, 285, 290, 296, 298, 301, 303, 305, 306, 332, 371, 374, 375, 385, 386, 387, 388, 390, 392, 393], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 114, 115, 123, 124, 130, 131, 140, 143, 145, 147, 151, 152, 153, 154, 161, 162, 164, 173, 176, 182, 184, 186, 192, 195, 203, 205, 215, 216, 221, 225, 227, 228, 241, 242, 250, 253, 254, 255, 256, 259, 260, 262, 263, 266, 267, 268, 269, 271, 274, 276, 312, 315, 316, 317, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 342, 350, 369, 370, 374, 377, 387, 388, 392, 393], "__name__": [2, 3, 14, 15, 22, 104, 332, 375, 392], "__main__": [2, 3, 14, 15, 22, 104, 332, 392], "21": [2, 67, 68, 88, 123, 125, 126, 130, 373, 375, 377, 383, 385, 388, 391], "proc": 2, "target": [2, 4, 8, 21, 24, 37, 103, 104, 107, 123, 124, 130, 131, 181, 185, 194, 271, 272, 282, 283, 284, 285, 286, 288, 290, 291, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 312, 313, 314, 315, 316, 317, 318, 354, 360, 361, 370, 371, 377, 383, 386, 388], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 80, 82, 87, 88, 89, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 150, 168, 170, 179, 182, 185, 186, 187, 189, 190, 194, 205, 206, 207, 215, 221, 225, 226, 227, 228, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 341, 344, 348, 351, 365, 375, 393], "join": [2, 104, 367, 375, 376, 386], "now": [2, 3, 7, 42, 123, 146, 232, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 390, 393], "20": [2, 54, 68, 87, 88, 93, 103, 107, 111, 123, 124, 130, 131, 181, 194, 218, 219, 220, 223, 224, 259, 342, 373, 374, 375, 376, 377, 381, 387, 388, 390, 391, 392, 393], "_data": [2, 388], "It": [2, 3, 4, 7, 23, 37, 44, 47, 50, 52, 54, 63, 69, 82, 85, 93, 98, 103, 107, 109, 119, 120, 123, 124, 125, 126, 130, 131, 132, 133, 143, 145, 155, 162, 164, 169, 181, 186, 191, 194, 196, 209, 211, 217, 231, 232, 241, 243, 244, 250, 251, 257, 261, 262, 265, 266, 267, 270, 272, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 306, 312, 313, 314, 332, 341, 347, 368, 369, 370, 374, 375, 377, 378, 386, 387, 388, 389, 390, 392, 393], "difficult": [2, 4, 123, 382], "pai": [2, 8, 374, 377], "word": [2, 3, 11, 47, 61, 63, 65, 67, 68, 69, 298, 374, 381, 388, 393], "1m": [2, 61, 67, 354, 374, 376, 377, 389], "doe": [2, 3, 18, 41, 42, 43, 46, 50, 54, 61, 63, 67, 71, 72, 78, 79, 80, 87, 89, 91, 98, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 192, 213, 219, 220, 221, 223, 224, 225, 234, 251, 259, 273, 274, 282, 284, 291, 297, 298, 300, 313, 351, 369, 371, 374, 375, 376, 377, 378, 381, 386, 388, 390, 393], "howev": [2, 3, 5, 7, 37, 103, 107, 123, 124, 130, 131, 146, 176, 181, 186, 194, 282, 284, 297, 300, 302, 303, 369, 374, 375, 377, 380, 388, 390, 393], "capac": [2, 42, 45, 50, 51, 74, 75, 79, 87, 95, 376, 381], "There": [2, 10, 82, 221, 225, 369, 371, 376, 377, 379, 381, 386, 387, 388, 390, 393], "circumv": 2, "account": [2, 74, 75, 95, 106, 108, 131, 142, 146, 229, 230, 369, 375, 377, 390, 393], "save": [2, 3, 8, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 82, 89, 90, 91, 95, 96, 103, 107, 123, 124, 130, 131, 191, 194, 333, 334, 336, 341, 351, 371, 381, 382, 383, 386, 387], "convent": [2, 3, 61, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 132, 133, 370, 374, 377, 386, 387, 388], "overridden": [2, 3, 61, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 314, 316, 317, 377, 386], "dim_extend": [2, 42, 45, 50, 51], "obtain": [2, 7, 47, 61, 103, 107, 123, 124, 130, 131, 145, 168, 181, 190, 205, 241, 348, 374, 376, 378, 379, 380, 386, 387], "counterpart": 2, "desir": [2, 3, 11, 37, 103, 107, 123, 124, 130, 131, 141, 143, 150, 164, 166, 168, 169, 182, 185, 186, 188, 190, 194, 201, 202, 206, 207, 226, 232, 253, 260, 261, 268, 269, 270, 271, 272, 369, 374, 386, 387, 388, 390], "diversifi": 2, "offer": [2, 3, 7, 99, 100, 103, 107, 112, 113, 117, 118, 123, 124, 130, 131, 332, 369, 374, 375, 378, 380, 381, 386, 388, 390, 393], "accomplish": [2, 196, 378], "anoth": [2, 3, 8, 67, 80, 87, 103, 106, 107, 108, 111, 123, 124, 130, 131, 143, 151, 152, 154, 182, 185, 226, 268, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 369, 370, 374, 376, 377, 379, 380, 385, 386, 387, 388, 393], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 64, 146, 196, 283, 288, 289, 296, 305, 341, 371, 378, 389, 390, 392], "docstr": [2, 37, 103, 107, 123, 124, 130, 131, 194, 378, 379], "extens": [2, 42, 45, 50, 51, 88, 371, 390], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 125, 126, 130, 131, 184, 186, 194, 216, 219, 223, 233, 261, 282, 291, 298, 300, 368, 371, 375, 381, 385, 390], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 103, 107, 123, 124, 130, 131, 151, 154, 192, 194, 204, 219, 221, 223, 225, 266, 267, 268, 272, 291, 375, 379, 385, 386, 387, 393], "happi": 2, "concaten": [2, 8, 14, 15, 21, 35, 36, 67, 146, 147, 164, 185, 223, 226, 274, 374, 375, 379, 386, 387, 388, 390, 393], "schedul": [2, 4, 7, 47, 347, 376, 388], "transformedenv": [2, 3, 11, 37, 103, 104, 107, 123, 124, 130, 131, 139, 140, 143, 146, 149, 150, 151, 154, 155, 156, 158, 161, 162, 163, 164, 166, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 185, 192, 194, 221, 225, 265, 334, 374, 375, 376, 377, 378, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "stepcount": [2, 37, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 185, 194, 374, 375, 376, 377, 378, 383, 386, 387, 392], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 93, 103, 104, 107, 109, 123, 124, 130, 131, 139, 142, 143, 146, 149, 150, 155, 161, 162, 164, 166, 171, 172, 173, 176, 178, 181, 182, 183, 185, 186, 192, 194, 221, 225, 265, 332, 334, 361, 367, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 390, 392, 393], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 146, 173, 367, 381, 390], "cartpol": [2, 3, 11, 30, 37, 48, 101, 102, 103, 107, 123, 124, 130, 131, 142, 143, 146, 176, 181, 192, 194, 265, 332, 375, 377, 379, 381, 382, 383, 390, 393], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 63, 65, 93, 103, 104, 106, 107, 108, 112, 113, 120, 123, 124, 130, 131, 142, 143, 146, 149, 156, 161, 162, 164, 171, 173, 176, 178, 180, 181, 182, 183, 185, 192, 194, 221, 225, 265, 309, 323, 324, 325, 326, 328, 329, 330, 331, 332, 369, 375, 377, 378, 379, 380, 381, 382, 383, 388, 390, 392, 393], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 99, 100, 103, 107, 112, 113, 119, 123, 124, 125, 126, 130, 131, 139, 140, 143, 146, 151, 154, 162, 170, 173, 195, 205, 216, 228, 242, 244, 253, 260, 268, 269, 283, 286, 288, 301, 303, 305, 306, 361, 369, 374, 375, 376, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 392, 393], "8": [2, 3, 6, 7, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 87, 88, 99, 100, 101, 102, 103, 107, 123, 124, 130, 131, 139, 142, 181, 206, 207, 209, 210, 218, 226, 254, 255, 256, 268, 271, 274, 296, 373, 374, 375, 381, 386, 387, 388, 389, 390, 391, 392, 393], "traj_kei": [2, 80, 87, 88, 390], "truncated_kei": [2, 80, 87, 88, 173, 180], "strict_length": [2, 61, 67, 80, 87, 88, 334], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 37, 42, 45, 48, 51, 52, 74, 75, 79, 80, 87, 88, 95, 103, 107, 123, 124, 130, 131, 168, 173, 176, 186, 190, 194, 220, 224, 236, 242, 261, 265, 268, 270, 271, 272, 282, 284, 285, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317, 342, 354, 374, 375, 376, 377, 379, 380, 381, 382, 383, 386, 387, 388, 390, 392, 393], "enumer": [2, 14, 15, 16, 21, 30, 37, 45, 48, 51, 88, 103, 107, 123, 124, 130, 131, 194, 307, 370, 374, 375, 376, 377, 383, 386, 390, 392], "break": [2, 5, 14, 15, 16, 21, 37, 45, 51, 61, 64, 65, 67, 68, 69, 70, 80, 87, 88, 93, 103, 107, 123, 124, 130, 131, 143, 146, 173, 192, 194, 334, 375, 381, 383, 390, 392], "step_count": [2, 14, 15, 16, 37, 103, 107, 112, 113, 123, 124, 130, 131, 180, 194, 376, 377, 378, 383, 392], "32": [2, 22, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 128, 129, 132, 133, 206, 207, 208, 209, 210, 212, 213, 218, 226, 231, 232, 237, 238, 240, 241, 250, 312, 332, 374, 375, 377, 379, 380, 388, 389, 390, 392, 393], "33": [2, 27, 37, 82, 103, 107, 123, 124, 130, 131, 194, 206, 207, 226, 375, 387, 388], "34": [2, 206, 207, 226, 374, 375, 388, 389], "35": [2, 206, 207, 226, 374, 375, 388, 389], "36": [2, 374, 375, 376, 388, 389], "37": [2, 145, 375, 376, 388, 389], "38": [2, 7, 373, 374, 375, 377, 388, 389, 391, 393], "39": [2, 65, 112, 113, 373, 374, 375, 387, 388, 389, 391], "40": [2, 112, 113, 374, 375, 376, 387, 388, 389], "41": [2, 375, 388, 389], "11": [2, 10, 23, 29, 40, 54, 74, 75, 79, 88, 95, 104, 139, 184, 194, 205, 228, 375, 376, 377, 388, 390], "12": [2, 10, 68, 74, 75, 88, 95, 112, 113, 123, 128, 129, 130, 194, 374, 375, 376, 386, 388, 390], "13": [2, 5, 12, 87, 88, 127, 191, 194, 373, 374, 375, 376, 377, 382, 387, 388, 389, 390, 391], "14": [2, 6, 12, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88, 103, 107, 123, 124, 130, 131, 164, 194, 374, 375, 376, 386, 388, 389, 390], "15": [2, 23, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 103, 107, 123, 124, 130, 131, 194, 259, 266, 267, 292, 374, 375, 377, 388, 390], "16": [2, 3, 37, 68, 80, 88, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 146, 194, 374, 375, 376, 377, 386, 388, 390], "17": [2, 11, 68, 88, 107, 123, 139, 194, 374, 375, 388, 389], "could": [2, 3, 4, 6, 23, 375, 376, 382, 386, 387, 389, 393], "sai": [2, 37, 103, 107, 123, 124, 130, 131, 194, 231, 386, 389, 393], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 27, 29, 33, 36, 40, 76, 80, 87, 88, 103, 106, 107, 108, 111, 123, 124, 130, 131, 151, 154, 169, 176, 269, 375, 376, 377, 386, 387, 388], "handl": [2, 3, 21, 37, 103, 107, 123, 124, 130, 131, 191, 192, 194, 225, 226, 298, 351, 363, 364, 374, 375, 376, 378, 380, 387, 390], "suggest": [2, 312, 374, 387], "serialenv": [2, 3, 103, 107, 123, 124, 131, 182, 194, 265, 367, 392, 393], "squeez": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 142, 143, 146, 179, 181, 206, 207, 245, 246, 374, 388, 390], "6": [2, 3, 7, 14, 15, 16, 17, 23, 37, 45, 61, 68, 69, 80, 88, 101, 102, 107, 123, 128, 129, 139, 142, 164, 166, 181, 206, 207, 209, 210, 211, 214, 218, 220, 226, 231, 232, 233, 237, 247, 265, 268, 276, 373, 375, 377, 381, 387, 388, 389, 390, 391, 392], "5": [2, 3, 14, 15, 23, 25, 27, 33, 35, 36, 37, 42, 45, 50, 51, 61, 82, 87, 88, 93, 103, 104, 107, 112, 113, 117, 118, 120, 123, 124, 128, 129, 130, 131, 132, 133, 139, 142, 143, 145, 173, 180, 181, 194, 205, 206, 207, 209, 210, 215, 216, 217, 218, 219, 222, 223, 226, 228, 231, 232, 237, 242, 248, 249, 259, 260, 265, 269, 275, 297, 300, 302, 305, 306, 332, 369, 373, 374, 375, 377, 379, 381, 383, 386, 387, 388, 390, 391, 392, 393], "7": [2, 3, 6, 10, 29, 37, 40, 42, 45, 50, 80, 88, 103, 107, 117, 118, 123, 124, 130, 131, 139, 142, 181, 205, 206, 207, 210, 226, 228, 231, 320, 373, 374, 375, 377, 381, 387, 388, 390, 391, 392], "9": [2, 3, 7, 23, 37, 42, 45, 50, 68, 69, 80, 88, 93, 101, 102, 116, 125, 126, 131, 139, 142, 181, 192, 194, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 307, 312, 370, 373, 374, 375, 376, 381, 386, 387, 388, 389, 390, 391], "18": [2, 68, 88, 128, 129, 132, 133, 194, 232, 373, 374, 375, 376, 377, 387, 388, 391], "19": [2, 68, 87, 88, 93, 194, 374, 375, 377, 387, 388, 389], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 64, 123, 130, 185, 187, 232, 370, 371, 374, 375, 387, 390, 392], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 37, 41, 43, 46, 54, 61, 64, 66, 69, 70, 99, 101, 103, 107, 112, 116, 117, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 153, 156, 171, 176, 177, 180, 186, 188, 191, 194, 204, 221, 225, 260, 269, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 314, 316, 317, 318, 332, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 371, 374, 375, 376, 377, 380, 382, 386, 387, 388, 393], "randomcroptensordict": [2, 374], "unlik": [2, 86, 107, 117, 118, 132, 133, 265, 291, 300, 334, 375, 379, 381, 392], "stop": [2, 3, 16, 21, 47, 69, 80, 87, 88, 103, 107, 123, 124, 130, 131, 376, 381, 386, 387, 392, 393], "signal": [2, 3, 14, 15, 16, 17, 23, 61, 63, 65, 67, 68, 69, 80, 87, 88, 93, 107, 117, 118, 132, 133, 146, 155, 180, 183, 204, 370, 374, 376, 386, 387, 390, 393], "disk": [2, 3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 351, 371, 374, 375, 377, 381, 382, 390], "dump": [2, 3, 11, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 91, 95, 332, 333, 334, 382, 383, 386], "load": [2, 6, 7, 14, 15, 16, 17, 30, 37, 41, 42, 43, 45, 46, 47, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 90, 91, 95, 96, 102, 103, 107, 123, 124, 130, 131, 138, 192, 194, 365, 371, 374, 376, 390], "json": 2, "metadata": [2, 61, 63, 103, 107, 123, 124, 130, 131, 305, 376, 378, 380, 381, 386, 387, 393], "anticip": [2, 151, 154], "compli": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 67], "back": [2, 24, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 53, 55, 56, 63, 191, 196, 233, 253, 260, 261, 268, 269, 270, 271, 272, 376, 386, 387, 388, 390], "exact": [2, 3, 23, 123, 223], "statu": [2, 3, 103], "prioriti": [2, 4, 42, 50, 51, 74, 75, 76, 79, 80, 89, 91, 95, 285, 286, 288, 289, 290, 291, 296, 301, 303, 305, 306, 312, 371, 374, 375, 390], "heap": 2, "under": [2, 3, 4, 21, 37, 47, 61, 63, 64, 65, 67, 68, 69, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 194, 253, 260, 261, 268, 269, 270, 271, 272, 298, 314, 315, 316, 317, 318, 334, 370, 374, 375, 379, 386, 388, 393], "hood": [2, 21, 61, 103, 107, 123, 124, 130, 131, 388], "naiv": [2, 188, 378], "just": [2, 3, 4, 12, 91, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 127, 130, 131, 142, 149, 204, 232, 342, 369, 371, 374, 375, 376, 377, 378, 379, 381, 386, 387, 388, 390, 392, 393], "public": [2, 66, 90, 168, 190], "serializ": 2, "consum": [2, 86, 88, 265, 375, 376, 381, 387, 390], "much": [2, 8, 11, 14, 15, 17, 42, 50, 67, 79, 80, 123, 130, 297, 300, 376, 378, 382, 386, 387, 388, 390, 393], "duplic": [2, 37, 86, 103, 107, 123, 124, 130, 131, 194, 283, 286, 291, 296, 298, 301, 303, 305, 306, 312], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 30, 37, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 203, 208, 209, 210, 211, 212, 213, 216, 221, 225, 231, 237, 238, 240, 242, 243, 253, 254, 255, 256, 259, 260, 262, 263, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 285, 286, 288, 289, 290, 293, 296, 297, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 332, 334, 361, 369, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 392, 393], "plu": [2, 14, 15, 17, 47, 123, 130, 388], "enabl": [2, 7, 8, 63, 74, 75, 86, 95, 143, 221, 225, 265, 266, 267, 332, 334, 347, 376, 378, 386, 387, 388, 390], "three": [2, 25, 29, 35, 36, 40, 70, 369, 371, 376, 378, 379, 386, 387, 388, 390, 393], "flatstoragecheckpoint": 2, "discard": [2, 3, 54, 63, 65, 107, 188, 203, 333, 390, 393], "compress": 2, "At": [2, 227, 262, 375, 376, 377, 381, 385, 388, 389], "correct": [2, 4, 41, 43, 46, 103, 107, 123, 124, 130, 131, 162, 354, 376, 377], "addit": [2, 3, 4, 37, 63, 103, 107, 123, 124, 130, 131, 132, 150, 168, 182, 185, 186, 188, 190, 194, 219, 257, 258, 259, 265, 271, 281, 298, 314, 332, 370, 374, 375, 378, 386, 387, 390], "nestedstoragecheckpoint": 2, "represent": [2, 33, 34, 37, 103, 107, 123, 124, 130, 131, 168, 188, 190, 194, 374, 388, 389, 393], "appar": [2, 3, 344], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 71, 72, 78, 103, 106, 107, 108, 123, 124, 130, 131, 139, 149, 153, 200, 213, 216, 231, 238, 242, 253, 257, 258, 260, 261, 263, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 286, 288, 289, 290, 305, 306, 312, 369, 375, 376, 377, 378, 379, 380, 386, 387, 388, 392, 393], "assumpt": [2, 3, 388, 390], "accur": [2, 7, 63, 69, 375, 388, 390], "truncat": [2, 3, 14, 15, 16, 17, 30, 32, 37, 38, 44, 48, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 87, 88, 101, 102, 103, 106, 107, 108, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 155, 156, 163, 170, 173, 180, 186, 194, 204, 221, 225, 249, 265, 320, 374, 376, 377, 378, 379, 381, 382, 385, 386, 389, 390, 392, 393], "marl": [2, 116, 134, 146, 183, 231, 232, 233, 378, 386, 387], "extra": [2, 10, 37, 103, 107, 123, 124, 130, 131, 146, 192, 194, 203, 341, 369, 376, 377, 390], "fail": [2, 7, 22, 27, 33, 123, 140, 196], "concret": [2, 374, 376], "set_se": [2, 3, 14, 15, 16, 17, 21, 30, 37, 48, 99, 100, 103, 107, 112, 113, 119, 123, 124, 130, 131, 142, 164, 171, 176, 181, 183, 186, 194, 381, 383, 388, 392, 393], "manual_se": [2, 3, 30, 42, 45, 48, 50, 51, 64, 68, 69, 87, 88, 99, 100, 103, 107, 123, 124, 130, 131, 140, 142, 153, 164, 173, 176, 181, 183, 194, 229, 230, 239, 253, 261, 262, 263, 266, 267, 275, 282, 283, 285, 289, 296, 303, 381, 383, 386, 387, 388, 392, 393], "200": [2, 14, 15, 16, 21, 30, 37, 48, 61, 103, 106, 107, 108, 123, 124, 130, 131, 132, 133, 173, 194, 209, 210, 217, 243, 244, 332, 334, 374, 377, 381, 383, 388, 390], "22": [2, 67, 87, 88, 191, 374, 375, 377, 388, 389], "rb_test": 2, "_storag": [2, 389, 390], "max_siz": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 89, 93, 95, 376, 381], "102": [2, 374, 388], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 41, 43, 46, 120, 213, 229, 230, 231, 281, 332, 374, 376, 386, 387], "state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 192, 194, 303, 365, 371, 374, 375, 393], "load_state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 192, 194, 303, 371, 374], "drawback": 2, "struggl": 2, "big": [2, 376, 381, 390, 393], "sequenti": [2, 9, 37, 103, 107, 123, 124, 130, 131, 145, 162, 194, 273, 274, 279, 300, 305, 369, 376, 377, 379, 387, 388, 389, 393], "known": [2, 3, 5, 7, 8, 107, 321, 322, 374, 375, 378], "seamless": [2, 226], "integr": [2, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 212, 221, 225, 228, 271, 369, 378, 379, 381, 386, 387, 388, 389], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 374, 375, 380], "essenti": [2, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 375, 378, 386, 388, 390], "understand": [2, 3, 8, 374, 375, 378, 379, 386, 387], "purpos": [2, 3, 7, 11, 103, 107, 123, 124, 130, 131, 146, 219, 282, 284, 297, 300, 302, 361, 374, 376, 377, 380, 382, 386, 387, 389, 393], "guid": [2, 11, 125, 126, 128, 129, 181, 368, 374, 387], "explan": [2, 37, 103, 107, 123, 124, 130, 131, 194], "effect": [2, 3, 27, 37, 42, 45, 50, 51, 61, 67, 80, 82, 85, 87, 88, 103, 107, 123, 124, 130, 131, 142, 146, 186, 194, 351, 374, 379, 386, 390, 393], "realm": [2, 379], "As": [2, 3, 4, 37, 61, 103, 107, 116, 123, 124, 125, 126, 130, 131, 173, 272, 314, 369, 374, 375, 376, 377, 378, 380, 381, 386, 387, 388, 389, 390, 392, 393], "practition": 2, "often": [2, 3, 8, 233, 295, 298, 351, 374, 375, 378, 380, 388, 390, 393], "encount": [2, 4, 67, 265, 368, 375, 379, 388], "situat": [2, 117, 118], "sometim": [2, 3, 377, 393], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 64, 65, 68, 69, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 117, 118, 121, 122, 127, 132, 133, 219, 220, 221, 223, 224, 225, 228, 254, 255, 256, 298, 301, 371, 375], "immedi": [2, 27, 33, 37, 103, 107, 123, 124, 130, 131, 194, 313, 386, 387], "199": [2, 374, 388], "info": [2, 3, 14, 15, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 85, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 188, 191, 193, 341, 378, 383, 386, 387, 390], "glanc": [2, 378], "seem": [2, 374, 377, 378], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 47, 103, 107, 116, 123, 124, 125, 126, 130, 131, 146, 169, 219, 221, 223, 225, 250, 254, 255, 256, 277, 369, 375, 377, 378, 386], "less": [2, 120, 251, 363, 364, 370, 376, 377, 390, 392], "omit": [2, 346, 376, 380, 388, 390], "proper": [2, 3, 4, 6, 7, 314, 315, 316, 317, 375, 376, 386, 387, 390, 393], "imposs": [2, 3, 93, 196, 282, 284, 297, 300, 302], "determin": [2, 42, 50, 63, 79, 80, 103, 107, 123, 124, 130, 131, 132, 133, 168, 190, 231, 266, 267, 375, 379, 386, 387], "complic": [2, 388, 390, 393], "matter": [2, 11, 28, 381], "inconsist": [2, 393], "miss": [2, 3, 4, 6, 7, 12, 27, 37, 103, 107, 123, 124, 130, 131, 186, 194, 203, 273, 274, 303, 368, 374, 377], "behavior": [2, 4, 37, 103, 107, 123, 124, 130, 131, 186, 194, 289, 296, 305, 377, 387, 388], "primari": [2, 381], "elimin": [2, 3, 378], "upon": [2, 3, 8, 386, 388], "canon": 2, "definit": [2, 40, 89, 231], "markov": [2, 3, 378, 393], "decis": [2, 3, 208, 240, 259, 287, 299, 377, 378, 379, 386, 387, 390, 393], "mdp": [2, 378, 388], "context": [2, 3, 5, 8, 37, 103, 104, 107, 122, 123, 124, 130, 131, 182, 187, 194, 232, 234, 259, 310, 311, 314, 315, 316, 317, 319, 327, 334, 347, 369, 370, 374, 375, 376, 386, 387, 388, 389, 390], "condit": [2, 54, 181, 192, 260, 261, 265, 269, 270, 281, 374, 386, 388, 390], "complet": [2, 7, 9, 86, 103, 106, 107, 108, 123, 124, 130, 131, 146, 180, 368, 370, 374, 376, 378, 385], "termin": [2, 3, 7, 14, 15, 16, 17, 30, 32, 37, 38, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 101, 102, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 142, 143, 155, 170, 194, 204, 205, 221, 225, 228, 265, 273, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 374, 375, 376, 377, 378, 379, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "reward": [2, 3, 14, 15, 16, 28, 30, 32, 37, 38, 41, 46, 47, 48, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 139, 140, 143, 144, 149, 150, 151, 152, 154, 155, 156, 162, 166, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 185, 186, 187, 189, 190, 192, 194, 200, 203, 205, 221, 228, 259, 265, 277, 282, 283, 285, 286, 288, 289, 290, 293, 296, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 344, 345, 347, 349, 365, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "imit": [2, 3], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 52, 53, 55, 56, 67, 103, 104, 107, 110, 113, 123, 124, 130, 131, 194, 206, 207, 226, 232, 369, 370, 371, 374, 375, 376, 377, 378, 386, 387, 388, 390], "stateless": [2, 3, 103, 107, 123, 124, 130, 131, 143, 185, 298, 332, 374, 378, 388, 393], "simul": [2, 3, 5, 7, 8, 99, 100, 109, 112, 113, 127, 132, 133, 137, 205, 228, 369, 374, 376, 378, 382, 386, 387], "furthermor": [2, 386, 387], "certain": [2, 4, 18, 19, 20, 21, 37, 54, 103, 107, 123, 124, 130, 131, 138, 159, 180, 186, 194, 220, 224, 262, 297, 369, 374, 375, 376, 383, 386, 387, 393], "composit": [2, 3, 27, 33, 85, 91, 98, 103, 107, 123, 124, 130, 131, 268, 376, 379, 388], "accommod": [2, 3, 378, 379], "uniform": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 53, 55, 56, 79, 80, 386], "unambigu": 2, "distinguish": [2, 117, 118, 132, 133], "happen": [2, 3, 103, 107, 123, 124, 130, 131, 258, 375, 380, 381, 382, 389, 393], "limit": [2, 47, 103, 107, 119, 123, 124, 130, 131, 146, 162, 282, 284, 297, 298, 300, 302, 370, 374, 375, 377, 386, 387, 388], "everyth": [2, 375, 376, 377, 382, 383], "belong": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 67, 191, 192, 369, 374, 381, 387], "rule": [2, 123, 151, 154, 272, 369, 376], "field": [2, 3, 14, 15, 16, 17, 23, 27, 30, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 151, 154, 155, 156, 166, 170, 171, 173, 177, 180, 182, 186, 194, 203, 205, 215, 216, 221, 225, 228, 241, 242, 250, 253, 254, 255, 256, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 274, 276, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 355, 368, 369, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "taken": [2, 3, 25, 29, 35, 36, 40, 103, 107, 123, 124, 130, 131, 139, 172, 229, 230, 263, 370, 374, 376, 377, 379, 386, 387, 388], "is_shar": [2, 3, 14, 15, 16, 23, 27, 30, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 151, 154, 155, 156, 166, 170, 171, 173, 177, 180, 182, 192, 203, 205, 215, 216, 221, 225, 228, 241, 242, 250, 253, 254, 255, 256, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 274, 276, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 369, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "brought": [2, 376, 377, 379], "step_mdp": [2, 3, 103, 107, 123, 124, 130, 131, 221, 225, 367, 377, 378, 388, 392, 393], "count": [2, 3, 37, 103, 104, 180, 266, 267, 347, 351, 354, 374, 375, 376, 377, 390, 393], "trigger": [2, 7], "partial": [2, 3, 103, 107, 123, 124, 130, 131, 145, 146, 181, 182, 183, 268, 351, 377], "turn": [2, 18, 19, 20, 21, 41, 43, 46, 131, 160, 187, 191, 260, 332, 347, 370, 374, 375, 377, 379, 388, 389], "retain": 2, "regard": [2, 63, 69, 216, 261, 282, 291, 300, 374, 376, 388], "copi": [2, 3, 12, 18, 19, 20, 21, 37, 41, 43, 46, 47, 54, 67, 103, 107, 123, 124, 130, 131, 142, 171, 181, 186, 192, 194, 203, 221, 225, 233, 259, 298, 303, 332, 370, 374, 375, 377, 378, 386, 390], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 334, 370, 382, 390, 393], "eas": [2, 3, 386, 387], "flat": [2, 93], "manner": [2, 107, 168, 188, 369, 374, 375, 376, 381, 385, 388, 390], "ted2flat": [2, 30, 367], "flat2t": [2, 367], "unflatten": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 143, 265], "deseri": [2, 3, 30], "posit": [2, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 107, 123, 124, 130, 131, 158, 159, 179, 180, 183, 186, 187, 194, 236, 303, 370, 376, 386, 387, 388, 390], "both": [2, 3, 7, 37, 42, 45, 50, 51, 67, 103, 104, 106, 107, 117, 118, 123, 124, 125, 126, 130, 131, 139, 146, 171, 186, 194, 204, 206, 207, 221, 224, 225, 226, 231, 232, 254, 255, 256, 261, 270, 282, 284, 285, 289, 290, 296, 297, 298, 300, 301, 302, 303, 305, 306, 347, 369, 374, 376, 378, 380, 386, 387, 388, 389, 390, 393], "mark": [2, 3, 16, 69, 103, 107, 123, 124, 130, 131, 221, 225, 314, 316, 317, 381, 390], "identifi": [2, 44], "abov": [2, 3, 7, 37, 103, 107, 123, 124, 130, 131, 194, 222, 248, 249, 281, 370, 371, 374, 376, 378, 379, 386, 387, 388, 393], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 101, 102, 103, 106, 107, 108, 109, 113, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 143, 144, 146, 149, 150, 151, 152, 154, 156, 162, 164, 168, 170, 171, 176, 177, 180, 183, 185, 186, 188, 190, 191, 194, 196, 204, 206, 207, 208, 209, 210, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 231, 232, 236, 242, 251, 253, 254, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 332, 334, 342, 369, 370, 374, 375, 376, 377, 378, 379, 382, 385, 386, 387, 388, 389, 392, 393], "typic": [2, 3, 4, 8, 37, 103, 107, 123, 124, 130, 131, 155, 181, 194, 268, 283, 298, 300, 303, 369, 370, 371, 376, 378, 380, 381, 386, 387, 388], "adjust": [2, 11, 374, 386, 387, 388], "grumodul": [2, 145, 279], "lstmmodul": [2, 377], "skip": [2, 3, 37, 61, 103, 107, 123, 124, 130, 131, 159, 186, 194, 196, 268, 272, 298, 303, 314, 315, 316, 317, 333, 334, 344, 347, 374, 375, 388], "accumul": [2, 8, 194], "upcom": [2, 298, 323, 324, 325, 326, 328, 329, 330, 331, 374], "popular": [2, 3, 369, 377, 380, 387], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 194, 367, 375], "shift": [2, 30, 32, 37, 38, 48, 71, 72, 78, 278, 314, 315, 316, 317, 376], "approxim": [2, 387, 393], "would": [2, 3, 11, 37, 47, 103, 107, 123, 124, 130, 131, 194, 219, 221, 223, 225, 226, 231, 371, 375, 376, 377, 378, 380, 381, 388, 390, 392, 393], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 146, 213, 240, 282, 287, 299, 300, 342, 365, 376, 377, 387, 390], "2x": 2, "small": [2, 188, 374, 376, 386, 387, 393], "clearer": [2, 379], "lazi": [2, 33, 34, 58, 59, 103, 107, 123, 124, 130, 131, 132, 133, 168, 188, 206, 231, 234, 273, 274, 374, 375, 379, 381, 385, 390, 393], "certainli": 2, "benefici": 2, "welcom": [2, 378], "wrapper": [2, 3, 12, 17, 41, 43, 46, 47, 50, 51, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 191, 195, 236, 251, 258, 259, 263, 265, 267, 272, 277, 314, 339, 340, 341, 365, 367, 376, 377, 378, 386, 387, 389, 393], "around": [2, 5, 7, 17, 50, 51, 119, 195, 265, 272, 314, 374, 375, 387, 393], "selecttransform": [2, 103, 107, 123, 124, 130, 131], "excludetransform": [2, 68, 177, 390], "promptli": 2, "virtual": [2, 3, 106], "instal": [2, 3, 5, 10, 18, 19, 20, 63, 66, 103, 107, 123, 124, 125, 126, 128, 129, 130, 131, 336, 351, 368, 374, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 393], "respons": [2, 3, 8, 80, 87, 103, 107, 123, 124, 130, 131, 351, 380, 381, 393], "d4rl": [2, 63, 69], "repositori": [2, 7, 64, 65, 66, 69, 133, 386, 387], "wheel": [2, 376], "publish": 2, "openml": [2, 66, 122], "scikit": [2, 66, 122], "panda": [2, 66], "raw": [2, 3, 4, 47, 222, 248, 249, 375, 381, 388], "go": [2, 3, 7, 116, 123, 169, 173, 259, 320, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "natur": [2, 3, 374, 377, 379, 380, 381, 390], "modifi": [2, 3, 7, 8, 27, 33, 37, 54, 103, 107, 123, 124, 130, 131, 143, 150, 158, 162, 168, 182, 185, 186, 188, 190, 194, 233, 259, 266, 267, 271, 354, 370, 374, 375, 376, 378, 386, 387, 388], "fly": [2, 192, 297, 370, 376, 388, 390, 393], "least": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 103, 149, 382, 393], "pre": [2, 7, 22, 37, 54, 67, 75, 103, 107, 123, 124, 130, 131, 168, 188, 190, 194, 393], "appli": [2, 3, 4, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 167, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 194, 219, 223, 233, 248, 260, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 299, 300, 301, 302, 303, 305, 306, 314, 332, 346, 371, 374, 375, 376, 381, 386, 388, 392, 393], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 64, 80, 87, 93, 111, 112, 113, 123, 125, 126, 149, 176, 206, 207, 217, 231, 232, 262, 265, 336, 351, 363, 364, 374, 375, 376, 377, 379, 380, 383, 386, 387, 390, 392], "pipelin": [2, 3, 7, 369, 376], "replac": [2, 3, 6, 7, 27, 33, 37, 61, 67, 80, 87, 88, 142, 153, 155, 203, 262, 369, 386, 390], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 82, 103, 107, 123, 124, 130, 131, 142, 173, 186, 194, 257, 258, 263, 265, 266, 267, 349, 369, 371, 375, 376, 377, 379, 382, 388, 390, 393], "produc": [2, 139, 142, 143, 206, 207, 226, 232, 239, 254, 256, 259, 334, 376, 377, 378, 379, 381, 390, 393], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 71, 86, 103, 107, 123, 124, 125, 126, 130, 131, 186, 194, 282, 283, 296, 298, 300, 301, 302, 303, 305, 306, 376], "download": [2, 7, 10, 61, 63, 64, 65, 67, 68, 69, 111, 168, 190, 334, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 124, 375, 386, 387, 388], "robosetexperiencereplai": [2, 87, 88], "fk1": [2, 68], "v4": [2, 68, 107, 123, 139, 172, 323, 324, 325, 326, 328, 329, 330, 331, 374, 376, 389, 393], "expert": [2, 68], "fk1_microopenrandom_v2d": [2, 68], "func": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 193], "obs_norm": 2, "norm": [2, 4, 8, 99, 100, 351, 374, 375, 376, 386, 387, 388], "num_work": [2, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 120, 123, 130, 374, 375], "os": [2, 43, 54, 70, 375], "cpu_count": [2, 43, 54, 70], "num_chunk": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69], "1000": [2, 4, 45, 79, 87, 88, 103, 107, 123, 124, 130, 131, 146, 192, 257, 262, 266, 267, 268, 272, 295, 374, 375, 376, 377, 379, 381, 383, 389, 390], "mp_start_method": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 123, 130, 375, 392], "fork": [2, 5, 61, 62, 63, 64, 65, 66, 67, 68, 69, 374, 375, 376, 377, 386, 387, 389, 392], "recreat": [2, 388], "customari": [2, 369], "moreov": [2, 3], "fine": [2, 3, 24, 80, 87, 103, 107, 123, 124, 130, 131, 143, 162, 381, 389], "grain": [2, 3, 80, 87, 103, 107, 123, 124, 130, 131, 143], "nomenclatur": 2, "compact": [2, 48, 71, 72, 78], "propos": [2, 146, 155, 227, 295, 304, 369, 377, 390], "replaybufferensembl": [2, 61, 85, 91, 98], "primit": [2, 3, 4, 67, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306], "individu": [2, 4, 18, 19, 20, 21, 37, 54, 80, 82, 93, 103, 107, 117, 118, 123, 124, 130, 131, 194, 374, 387], "dummi": [2, 3, 131, 332, 374, 381, 393], "semant": [2, 33, 34, 106, 108, 369], "ident": [2, 3, 14, 15, 16, 37, 41, 43, 46, 87, 103, 106, 107, 108, 120, 123, 124, 130, 131, 155, 231, 232, 283, 296, 301, 303, 305, 306, 314, 315, 316, 317, 363, 364, 375, 378, 386, 387], "another_kei": [2, 82], "renam": [2, 41, 43, 46, 82, 171, 173, 203, 374], "resiz": [2, 3, 69, 82, 146, 375, 377, 378, 390, 393], "imag": [2, 3, 4, 7, 11, 67, 148, 168, 184, 190, 226, 332, 334, 374, 375, 378, 382, 387, 389, 393], "comops": 2, "totensorimag": [2, 3, 69, 82, 146, 172, 375, 377, 390, 392, 393], "renametransform": [2, 82, 103, 107, 123, 124, 130, 131], "rb0": [2, 82], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 124, 130, 131, 136, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 158, 160, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 178, 181, 183, 184, 185, 186, 188, 190, 192, 205, 215, 221, 225, 228, 241, 250, 251, 253, 254, 255, 256, 259, 260, 265, 268, 269, 271, 272, 274, 275, 276, 279, 282, 283, 284, 285, 286, 288, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 333, 334, 361, 369, 374, 375, 376, 377, 379, 380, 383, 385, 386, 387, 388, 389, 390, 392, 393], "pixel": [2, 3, 7, 27, 69, 82, 101, 102, 106, 108, 109, 127, 146, 148, 155, 158, 160, 164, 166, 168, 172, 184, 188, 190, 209, 237, 238, 332, 334, 369, 374, 375, 377, 382, 386, 389, 390, 392, 393], "rb1": [2, 82], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 124, 130, 131, 136, 144, 145, 146, 147, 148, 149, 151, 152, 154, 158, 160, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 178, 181, 183, 184, 185, 188, 190, 192, 205, 215, 216, 221, 225, 228, 241, 242, 250, 251, 253, 254, 255, 256, 259, 261, 265, 268, 269, 270, 271, 272, 274, 275, 276, 279, 282, 283, 284, 289, 290, 296, 297, 300, 301, 302, 303, 305, 312, 314, 315, 316, 317, 332, 334, 347, 361, 369, 374, 375, 376, 377, 379, 383, 385, 386, 387, 388, 389, 390, 392, 393], "pixels33": [2, 82], "data0": [2, 82], "244": [2, 82, 168, 190, 388], "data1": [2, 82], "_": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 104, 111, 132, 133, 147, 151, 153, 154, 162, 164, 171, 184, 192, 194, 253, 271, 276, 281, 282, 283, 285, 289, 290, 296, 300, 301, 303, 305, 306, 314, 315, 316, 317, 336, 374, 375, 376, 377, 383, 386, 387, 388, 390, 392], "rang": [2, 3, 4, 8, 12, 29, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 103, 104, 107, 117, 118, 123, 124, 130, 131, 173, 184, 192, 194, 220, 224, 297, 305, 306, 370, 371, 374, 376, 377, 380, 381, 383, 386, 387, 388, 390, 392], "parent": [2, 3, 21, 27, 32, 33, 53, 62, 82, 91, 98, 103, 107, 123, 124, 130, 131, 139, 143, 146, 147, 150, 152, 155, 158, 159, 164, 168, 176, 180, 181, 182, 183, 185, 187, 188, 194, 221, 225, 254, 279, 298, 300, 318, 332, 334, 374, 381, 388, 392, 393], "basic": [2, 119, 369, 376, 380, 381, 383, 386, 393], "properti": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 124, 130, 131, 142, 185, 186, 192, 194, 214, 222, 234, 239, 247, 248, 249, 265, 282, 298, 300, 302, 303, 379, 381, 388, 390], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 55, 56, 90, 96, 103, 107, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 203, 204, 206, 207, 209, 210, 211, 212, 215, 216, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 235, 242, 243, 244, 245, 246, 248, 251, 253, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 345, 349, 354, 361, 369, 370, 371, 374, 375, 376, 377, 378, 386, 387, 388, 392, 393], "send": [2, 3, 8, 341, 392], "receiv": [2, 3, 37, 47, 103, 107, 123, 124, 130, 131, 185, 186, 194, 226, 320, 370, 374, 376, 380, 385, 388], "spawn": [2, 3, 4, 18, 22, 111, 120, 123, 130, 375, 386, 387], "check_env_spec": [2, 3, 107, 123, 139, 170, 332, 367, 376, 386, 387, 388], "saniti": [2, 3, 7, 196, 376], "utmost": 2, "commonli": [2, 80, 87, 88, 393], "emploi": [2, 235], "languag": [2, 24, 47], "scarc": 2, "address": [2, 390], "subdomain": 2, "facilit": [2, 3, 7, 167, 168, 182, 188, 190, 254, 255, 256, 369, 374, 377, 379, 388], "extern": [2, 3, 151, 154, 386, 393], "token": [2, 43, 44, 47, 52, 54, 70], "dm": [3, 374, 393], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 54, 67, 84, 90, 93, 94, 96, 97, 99, 100, 103, 107, 111, 112, 113, 119, 120, 121, 123, 124, 130, 131, 132, 173, 182, 188, 189, 231, 233, 254, 264, 282, 283, 285, 286, 288, 289, 290, 292, 296, 300, 301, 302, 303, 305, 306, 341, 351, 369, 370, 371, 374, 375, 377, 378, 379, 380, 382, 386, 387, 388, 390, 393], "goal": [3, 4, 61, 62, 63, 64, 65, 66, 67, 68, 69, 181, 374, 375, 376, 377, 387, 388], "abl": [3, 116, 125, 126, 374, 376, 377, 379, 385, 386, 387, 388, 390, 392], "experi": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 79, 80, 196, 336, 337, 338, 339, 340, 341, 368, 375, 376, 381, 382, 386, 387, 390], "box": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 106, 108, 233, 298], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 103, 104, 107, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 146, 149, 155, 161, 162, 164, 166, 171, 173, 176, 182, 185, 191, 192, 194, 332, 361, 374, 375, 376, 377, 385, 386, 387, 389, 390, 392, 393], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 99, 100, 103, 107, 119, 123, 124, 130, 131, 150, 153, 155, 162, 168, 182, 185, 186, 188, 190, 194, 205, 206, 207, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 233, 236, 241, 242, 250, 253, 254, 255, 256, 259, 260, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 361, 369, 370, 374, 375, 376, 377, 379, 380, 383, 385, 386, 387, 388, 389, 392], "organis": [3, 68, 103, 107, 123, 124, 130, 131, 186, 375], "arbitrari": [3, 40, 45, 103, 107, 123, 124, 130, 131, 142, 369, 374, 375, 388, 390], "structur": [3, 7, 41, 42, 43, 45, 46, 47, 50, 51, 54, 93, 103, 107, 123, 124, 130, 131, 151, 154, 204, 231, 266, 267, 314, 315, 316, 317, 318, 367, 370, 374, 376, 377, 378, 381, 386, 387, 388, 389], "attribut": [3, 4, 24, 28, 30, 37, 41, 43, 46, 48, 54, 67, 103, 106, 107, 108, 123, 124, 130, 131, 139, 155, 168, 188, 192, 194, 221, 225, 272, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 374, 377, 386, 388], "live": [3, 13, 14, 15, 16, 17, 19, 20, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 124, 130, 131, 155, 194], "actual": [3, 4, 7, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 191, 354, 370, 374, 376, 386, 387, 388], "retriev": [3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 103, 106, 107, 108, 123, 124, 130, 131, 147, 152, 155, 164, 203, 205, 206, 228, 265, 268, 272, 275, 279, 282, 283, 284, 286, 297, 300, 301, 303, 305, 306, 312, 314, 315, 316, 317, 365, 371, 375, 376, 379, 388, 393], "care": [3, 8, 103, 107, 123, 124, 130, 131, 185, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 334, 374, 376, 386, 387, 388, 390], "parametr": [3, 235, 272, 283, 289, 296, 303, 374, 376], "hardwar": 3, "observation_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 160, 161, 162, 164, 166, 168, 170, 172, 176, 178, 180, 181, 182, 183, 184, 185, 187, 188, 191, 192, 194, 205, 221, 225, 228, 355, 361, 374, 376, 380, 385, 386, 387, 388, 393], "compositespec": [3, 33, 34, 58, 103, 105, 107, 119, 123, 124, 130, 131, 140, 143, 151, 152, 153, 154, 156, 162, 170, 171, 177, 180, 182, 185, 194, 200, 204, 205, 228, 253, 257, 258, 268, 274, 275, 279, 367, 374, 376, 377, 386, 387, 388, 393], "pair": [3, 37, 41, 43, 46, 63, 101, 102, 103, 107, 123, 124, 130, 131, 173, 182, 221, 254, 268, 272, 298, 314, 315, 316, 317, 318, 369, 370, 374, 375, 376, 379, 380, 385, 388, 393], "state_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 205, 228, 388, 393], "reward_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 144, 149, 150, 151, 152, 154, 170, 174, 175, 176, 178, 185, 187, 194, 205, 228, 376, 386, 387, 388, 393], "done_spec": [3, 103, 107, 123, 124, 130, 131, 151, 152, 154, 155, 170, 185, 194, 204, 386, 387, 388, 393], "flag": [3, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 266, 267, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 369, 386, 387, 388, 389], "input_spec": [3, 103, 107, 119, 123, 124, 130, 131, 139, 143, 150, 151, 152, 153, 164, 166, 170, 171, 176, 177, 180, 181, 182, 185, 186, 187, 189, 194, 376, 388], "full_action_spec": [3, 103, 107, 123, 124, 130, 131, 139, 205, 228, 376, 386, 387], "full_state_spec": [3, 103, 107, 123, 124, 130, 131, 139, 205, 228, 376], "lock": [3, 27, 33, 41, 43, 46, 103, 107, 123, 124, 130, 131, 143, 182, 192, 388], "output_spec": [3, 103, 107, 123, 124, 130, 131, 143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 186, 194, 388], "full_observation_spec": [3, 103, 107, 123, 124, 130, 131, 205, 228], "full_reward_spec": [3, 103, 107, 123, 124, 130, 131, 143, 152, 170, 386, 387], "full_done_spec": [3, 103, 107, 123, 124, 130, 131, 143, 152, 170, 204, 386, 387], "carri": [3, 21, 54, 103, 107, 123, 124, 130, 131, 182, 298, 375, 377, 386, 387, 388, 390], "nontensorspec": [3, 367], "importantli": [3, 268, 272], "action_s": 3, "help": [3, 4, 37, 103, 107, 123, 124, 130, 131, 155, 194, 282, 284, 297, 300, 302, 368, 370, 374, 375, 376, 377, 386, 387], "With": [3, 112, 113, 116, 181, 371, 375, 385, 386, 387, 390, 393], "necessarili": [3, 103, 107, 123, 124, 130, 131, 393], "present": [3, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 106, 107, 123, 124, 130, 131, 156, 173, 177, 182, 186, 194, 203, 204, 208, 209, 210, 211, 212, 218, 221, 223, 225, 235, 240, 265, 266, 267, 271, 272, 273, 274, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 365, 371, 374, 383, 385, 386, 387, 390, 392], "0s": [3, 61, 67, 182, 377], "step_and_maybe_reset": [3, 103, 107, 123, 124, 130, 131, 378], "done_kei": [3, 23, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 124, 130, 131, 142, 146, 155, 173, 180, 194, 203, 386, 387], "assign": [3, 4, 14, 15, 17, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 194, 285, 286, 288, 303, 376, 379, 386, 387, 390], "_reset": [3, 103, 107, 119, 123, 124, 130, 131, 140, 142, 143, 146, 151, 154, 170, 204, 205, 228, 386], "data_": [3, 103, 107, 123, 124, 130, 131], "append": [3, 8, 11, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 123, 124, 130, 131, 142, 149, 150, 173, 182, 186, 191, 220, 221, 224, 225, 260, 269, 374, 375, 376, 377, 386, 387, 388, 389, 390, 392], "seed": [3, 14, 15, 16, 17, 21, 68, 103, 107, 119, 123, 124, 125, 126, 130, 131, 132, 133, 140, 143, 151, 154, 170, 186, 196, 332, 351, 386], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 202, 208, 217, 237, 244, 253, 263, 268, 271, 272, 275, 283, 298, 347, 369, 374, 375, 377, 379, 380, 383, 386, 388, 393], "preced": [3, 37, 377], "risk": [3, 169], "overlap": [3, 50, 93], "reproduc": [3, 146, 196, 374, 376, 387], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 44, 47, 52, 54, 70, 74, 75, 76, 79, 80, 95, 103, 107, 123, 124, 130, 131, 153, 174, 180, 181, 183, 247, 248, 249, 275, 283, 289, 290, 296, 298, 299, 303, 334, 348, 374, 375, 376, 377, 379, 386, 387, 390], "max_step": [3, 11, 93, 103, 107, 117, 118, 119, 123, 124, 130, 131, 132, 133, 180, 194, 332, 378, 379, 380, 382, 383, 386, 387, 392, 393], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 47, 99, 100, 103, 107, 119, 123, 124, 130, 131, 145, 162, 216, 221, 225, 228, 241, 242, 250, 251, 254, 255, 256, 258, 259, 260, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 283, 285, 289, 290, 292, 293, 294, 296, 298, 301, 303, 305, 306, 312, 313, 314, 315, 316, 317, 347, 361, 367, 374, 376, 377, 380, 383, 385, 386, 387, 388, 389, 393], "trail": [3, 192], "treat": [3, 37, 370, 379, 380], "figur": [3, 374, 376, 377, 387, 388, 393], "brief": [3, 376, 378, 380, 390], "deliveri": 3, "design": [3, 37, 40, 85, 91, 98, 103, 107, 117, 118, 123, 124, 130, 131, 139, 146, 169, 186, 194, 259, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 374, 375, 376, 377, 378, 379, 380, 385, 386, 387, 388, 390, 393], "metaclass": 3, "everi": [3, 8, 27, 33, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 89, 103, 107, 123, 124, 130, 131, 180, 181, 192, 194, 200, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 298, 351, 371, 374, 375, 376, 377, 378, 379, 386, 387, 388], "flank": [3, 377], "dual": 3, "strictli": [3, 8, 37, 103, 107, 123, 124, 130, 131, 186, 194, 303, 374, 376], "refer": [3, 7, 8, 9, 11, 21, 24, 37, 47, 103, 106, 107, 108, 123, 124, 130, 131, 186, 192, 194, 205, 216, 217, 228, 229, 230, 231, 232, 233, 237, 238, 243, 244, 261, 282, 291, 292, 293, 294, 300, 303, 314, 319, 327, 373, 374, 376, 379, 380, 381, 382, 386, 387, 390, 393], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 79, 80, 103, 107, 123, 124, 130, 131, 164, 168, 173, 175, 188, 190, 192, 194, 203, 207, 214, 229, 230, 231, 232, 234, 235, 239, 241, 247, 248, 249, 250, 271, 288, 290, 295, 301, 304, 327, 345, 347, 348, 356, 357, 359, 361, 362, 363, 364, 365], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 117, 118, 134, 374], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 67, 80, 87, 88, 367], "adjac": [3, 23, 158, 265], "reli": [3, 11, 23, 182, 219, 220, 221, 223, 224, 225, 282, 370, 374, 376, 379, 381, 388, 393], "junction": 3, "inittrack": [3, 221, 225, 265, 374, 377], "tutori": [3, 124, 366, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391, 393], "scratch": [3, 8, 375, 388], "gym3": 3, "envpool": [3, 120, 121], "interfac": [3, 110, 122, 226, 234, 369, 370, 374, 376, 382, 388, 390], "simultan": [3, 20, 120, 121, 123, 130, 388], "advantag": [3, 8, 218, 282, 284, 297, 300, 302, 314, 315, 316, 317, 318, 319, 321, 323, 325, 327, 328, 330, 370, 371, 374, 375, 376, 377, 387, 388, 393], "scale": [3, 4, 24, 63, 103, 107, 123, 124, 130, 131, 146, 162, 164, 175, 181, 184, 192, 217, 222, 236, 243, 244, 248, 249, 254, 255, 256, 268, 272, 274, 282, 283, 296, 300, 301, 302, 303, 349, 355, 365, 369, 374, 375, 376, 377, 379, 387, 392], "varieti": [3, 11], "inherit": [3, 103, 107, 123, 124, 130, 131, 227, 298, 371, 376, 386, 387], "Of": [3, 7, 368, 388, 393], "cours": [3, 4, 368, 388, 393], "from_pixel": [3, 11, 99, 100, 101, 102, 106, 108, 109, 112, 113, 127, 146, 172, 332, 334, 374, 375, 377, 378, 382, 383, 389, 390, 392, 393], "81": [3, 374, 375, 388], "simpli": [3, 6, 41, 43, 46, 54, 91, 93, 98, 156, 177, 191, 298, 369, 370, 374, 376, 380, 386, 387, 393], "d": [3, 42, 45, 50, 51, 64, 66, 68, 69, 70, 79, 80, 219, 223, 268, 272, 392], "privat": [3, 103, 107, 123, 124, 130, 131, 191, 388, 393], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 35, 36, 40, 41, 43, 46, 61, 88, 93, 284, 297, 300, 342, 344, 347, 351, 354, 355, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 47, 82, 85, 164, 175, 222, 234, 243, 248, 249, 312, 369, 379, 380, 386, 388, 390], "inner": [3, 103, 107, 123, 124, 130, 131, 153, 371, 375, 376, 387, 393], "logic": [3, 386], "nevertheless": [3, 376, 378, 390], "kept": [3, 23, 86, 88, 153, 177, 185, 196, 203, 222, 248, 249, 380, 386], "mind": [3, 61, 67, 80, 87, 88, 103, 107, 123, 124, 130, 131, 386, 387], "desig": 3, "wherev": 3, "expos": [3, 127, 151, 154, 273, 375], "modif": [3, 5, 27, 33, 37, 103, 107, 123, 124, 130, 131, 158, 194, 204, 298, 370, 376, 388], "lost": [3, 8, 191], "eras": [3, 80, 87, 103, 107, 123, 124, 130, 131, 186], "intern": [3, 372], "face": [3, 5, 8, 9, 378, 393], "NOT": [3, 71, 72, 78, 169], "outsid": [3, 16, 370, 382, 386, 387, 388], "right": [3, 6, 7, 23, 47, 80, 87, 375, 376, 387, 388, 393], "preliminari": 3, "warranti": 3, "affect": [3, 8, 37, 103, 107, 123, 124, 130, 131, 185, 186, 194, 196, 314, 315, 316, 317, 386], "preclud": 3, "presenc": [3, 380], "annihil": 3, "reason": [3, 4, 8, 37, 67, 103, 107, 123, 124, 125, 126, 130, 131, 168, 188, 194, 225, 370, 374, 375, 376, 380, 381, 386, 388, 390], "advanc": [3, 21, 42, 45, 50, 51, 107, 378, 381, 390], "explicitli": [3, 4, 71, 72, 78, 142, 268, 370, 375, 377, 381, 386, 387, 390], "superse": 3, "pettingzoowrapp": [3, 367], "group": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 103, 107, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 134, 369, 375, 379, 381, 387, 390], "associ": [3, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 194, 243, 365, 374, 390], "environemtn": 3, "__not__": [3, 268, 283, 296, 301, 303, 305, 306], "constrain": [3, 162, 221, 225, 300], "li": 3, "fact": [3, 7, 8, 374, 376, 378, 386, 387, 388, 389, 390, 393], "predict": [3, 37, 47, 215, 217, 227, 228, 259, 277, 282, 284, 288, 291, 293, 294, 297, 300, 302, 313, 369, 374, 375, 380], "know": [3, 4, 9, 42, 45, 50, 51, 106, 108, 257, 258, 298, 301, 347, 374, 375, 376, 377, 378, 379, 380, 381, 386, 387, 390], "meaning": 3, "perfectli": [3, 371, 374, 388], "meaningless": 3, "val": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 380, 392], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 55, 56, 61, 103, 107, 123, 124, 130, 131, 142, 365, 369], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 147, 151, 153, 154, 155, 156, 158, 162, 163, 164, 166, 168, 170, 171, 173, 175, 176, 177, 180, 182, 184, 186, 187, 188, 190, 192, 194, 196, 200, 203, 204, 205, 206, 207, 209, 210, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 248, 249, 253, 260, 261, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 312, 314, 315, 316, 317, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 341, 344, 345, 347, 348, 349, 351, 365, 375, 376, 377, 378, 379, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "500": [3, 374, 375, 376, 388, 392, 393], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 61, 64, 123, 130], "bottleneck": [3, 8, 80, 87, 88], "great": [3, 7, 8, 386, 392], "speedup": [3, 8, 386, 393], "precis": [3, 151, 154, 203, 220, 224, 374, 376], "misspecifi": 3, "caus": [3, 7, 8, 74, 75, 95, 103, 107, 111, 123, 124, 130, 131, 169, 393], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 134, 146, 157, 163, 173, 181, 182, 183, 186, 194, 196, 257, 258, 262, 263, 266, 267, 298, 303, 374, 376, 386, 387, 390, 393], "mismatch": [3, 375], "subprocess": [3, 14, 15, 17, 104, 123, 130], "multithreadedenv": [3, 367], "underneath": 3, "higher": [3, 4, 80, 149, 275, 374, 375, 376, 386, 390, 393], "flexibl": [3, 9, 120, 307, 370, 371, 374, 390, 393], "cover": [3, 106, 108, 368, 376, 378, 381, 382, 388, 392], "type": [3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 69, 70, 82, 103, 107, 116, 119, 122, 123, 124, 125, 126, 130, 131, 143, 150, 151, 152, 155, 156, 162, 168, 170, 171, 177, 180, 182, 185, 186, 188, 190, 192, 194, 198, 202, 206, 207, 226, 231, 232, 235, 241, 250, 257, 258, 260, 268, 271, 272, 279, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 308, 312, 320, 332, 363, 367, 369, 374, 375, 376, 381, 386, 387, 388, 390, 393], "atari": [3, 4, 61, 146, 334, 382, 393], "classic": [3, 119, 126, 375], "benchmark_batched_env": 3, "seamlessli": [3, 388], "infrastructur": [3, 386, 387], "act": [3, 4, 87, 88, 125, 126, 186, 215, 232, 283, 285, 296, 301, 303, 305, 306, 377, 386, 387, 390], "world": [3, 5, 119, 277, 293, 382, 386, 387, 388, 393], "paradigm": [3, 17, 387], "decpodp": 3, "game": [3, 4, 5, 61, 117, 118, 334, 382], "thank": [3, 374, 378], "carrier": [3, 376, 377, 378, 390], "particular": [3, 37, 54, 63, 64, 103, 107, 123, 124, 130, 131, 186, 194, 370, 371, 375, 377, 378, 385, 387, 390], "thu": [3, 297, 387], "let": [3, 6, 7, 11, 23, 37, 42, 45, 50, 51, 52, 103, 107, 123, 124, 125, 126, 130, 131, 146, 194, 221, 225, 231, 232, 260, 347, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "vma": [3, 132, 133, 332, 386, 387], "robot": [3, 5, 7, 67, 168, 188, 190, 387], "vmasenv": [3, 332, 367, 386, 387], "balanc": [3, 101, 102, 374, 375], "num_env": [3, 21, 106, 110, 121, 132, 133, 332, 386, 387], "n_agent": [3, 132, 133, 231, 232, 233, 241, 250, 312, 332, 386, 387], "ground_rew": 3, "pos_rew": [3, 387], "style": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69], "relat": [3, 4, 10, 42, 123, 158, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 375, 383, 388], "vari": [3, 106, 108, 109, 125, 126, 127, 132, 169, 387], "creation": [3, 123, 130, 393], "info_spec": [3, 123], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 25, 40, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 140, 170, 204, 286, 289, 290, 312, 367, 386, 387, 393], "simpl": [3, 9, 37, 40, 103, 107, 123, 124, 130, 131, 194, 209, 265, 272, 286, 288, 298, 302, 314, 369, 370, 374, 375, 376, 378, 379, 380, 386, 387, 390, 393], "prefix": [3, 23, 37, 41, 43, 46, 54, 103, 107, 123, 124, 130, 131, 186, 194, 268, 298, 303, 333, 377, 380, 393], "exactli": [3, 37, 103, 107, 109, 123, 124, 130, 131, 186, 194, 219, 223, 303, 374, 377, 381, 386, 387], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 103, 107, 123, 124, 130, 131, 139, 140, 153, 195, 203, 205, 227, 228, 257, 258, 262, 263, 265, 266, 267, 386, 387], "reward_kei": [3, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 124, 130, 131, 194, 203, 205, 228, 345, 349, 386, 387], "set_kei": [3, 155, 282, 284, 286, 289, 290, 291, 296, 297, 298, 300, 301, 302, 303, 312, 318, 374, 386, 387], "awai": [3, 376, 378, 386, 387], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 180, 272], "full": [3, 103, 107, 123, 124, 130, 131, 221, 225, 261, 342, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "autoresettransform": 3, "invalid": [3, 37, 93, 103, 107, 123, 124, 130, 131, 134, 194, 229, 230], "nan": [3, 142, 191], "auto_reset": [3, 103, 107, 123, 124, 130, 131, 142, 194, 388], "auto_reset_replac": [3, 142], "placehold": [3, 109, 155, 186], "set_gym_backend": [3, 103, 106, 107, 123, 124, 130, 131, 135, 142, 367, 378], "autoresettinggymenv": [3, 142], "_step": [3, 103, 107, 123, 124, 130, 131, 140, 142, 143, 151, 154, 158, 170, 171], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 103, 107, 119, 123, 124, 130, 131, 140, 142, 143, 150, 151, 154, 168, 170, 182, 185, 186, 188, 190, 194, 205, 216, 228, 241, 250, 257, 258, 262, 268, 271, 276, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 371, 374, 388, 392, 393], "super": [3, 119, 140, 142, 143, 151, 154, 170, 205, 216, 228, 276, 283, 285, 290, 296, 301, 303, 305, 306, 374, 386, 388, 392, 393], "td_reset": [3, 142], "exclud": [3, 8, 63, 68, 103, 107, 123, 124, 130, 131, 142, 146, 156, 203, 241, 386, 387, 390], "r": [3, 4, 37, 139, 140, 142, 149, 164, 178, 192, 220, 272, 281, 313, 332, 369, 375, 388, 393], "break_when_any_don": [3, 103, 107, 123, 124, 130, 131, 142, 194, 265, 387], "3633e": [3, 142], "02": [3, 103, 107, 123, 124, 130, 131, 142, 373, 374, 375, 376, 383, 388, 389, 391], "4877e": [3, 142], "01": [3, 142, 164, 266, 267, 278, 284, 297, 300, 373, 374, 375, 377, 387, 388, 389, 391], "2849e": [3, 142], "7584e": [3, 142], "6609e": [3, 142], "6166e": [3, 142], "8366e": [3, 142], "2761e": [3, 142], "5685e": [3, 142], "4102e": [3, 142], "8111e": [3, 142], "9959e": [3, 142], "0865e": [3, 142], "5644e": [3, 142], "2119e": [3, 142], "2542e": [3, 142], "03": [3, 103, 107, 123, 124, 130, 131, 142, 164, 373, 374, 375, 376, 388, 389, 391], "9952e": [3, 142], "4059e": [3, 142], "2094e": [3, 142], "9009e": [3, 142], "5140e": [3, 142], "3554e": [3, 142], "2920e": [3, 142], "7893e": [3, 142], "6429e": [3, 142], "3057e": [3, 142], "2867e": [3, 142], "6963e": [3, 142], "3818e": [3, 142], "2576e": [3, 142], "2679e": [3, 142], "1640e": [3, 142], "00": [3, 99, 100, 142, 373, 374, 375, 376, 377, 387, 388, 389, 391], "6972e": [3, 142], "0212e": [3, 142], "5959e": [3, 142], "4637e": [3, 142], "3121e": [3, 142], "2168e": [3, 142], "5232e": [3, 142], "7704e": [3, 142], "7457e": [3, 142], "4127e": [3, 142], "1064e": [3, 142], "0854e": [3, 142], "5712e": [3, 142], "2189e": [3, 142], "5235e": [3, 142], "8289e": [3, 142], "0009e": [3, 142], "0257e": [3, 142], "8893e": [3, 142], "5872e": [3, 142], "9405e": [3, 142], "7766e": [3, 142], "0403e": [3, 142], "0626e": [3, 142], "2959e": [3, 142], "7263e": [3, 142], "2775e": [3, 142], "9564e": [3, 142], "0411e": [3, 142], "6769e": [3, 142], "6354e": [3, 142], "8698e": [3, 142], "1765e": [3, 142], "6292e": [3, 142], "5375e": [3, 142], "1820e": [3, 142], "7023e": [3, 142], "5836e": [3, 142], "9016e": [3, 142], "4826e": [3, 142], "6191e": [3, 142], "6387e": [3, 142], "8667e": [3, 142], "2056e": [3, 142], "1147e": [3, 142], "5991e": [3, 142], "0278e": [3, 142], "5219e": [3, 142], "3067e": [3, 142], "6617e": [3, 142], "3322e": [3, 142], "2629e": [3, 142], "4599e": [3, 142], "7298e": [3, 142], "5848e": [3, 142], "0148e": [3, 142], "5745e": [3, 142], "6982e": [3, 142], "7877e": [3, 142], "3527e": [3, 142], "7285e": [3, 142], "6668e": [3, 142], "0583e": [3, 142], "6956e": [3, 142], "3962e": [3, 142], "9845e": [3, 142], "5015e": [3, 142], "5903e": [3, 142], "9993e": [3, 142], "9418e": [3, 142], "0196e": [3, 142], "6557e": [3, 142], "2109e": [3, 142], "8997e": [3, 142], "1507e": [3, 142], "7363e": [3, 142], "0310e": [3, 142], "9574e": [3, 142], "8980e": [3, 142], "0090e": [3, 142], "forecast": 3, "awar": [3, 7, 74, 75, 76, 89, 91, 95, 375, 377], "detect": [3, 69, 298, 370], "return_contigu": [3, 103, 107, 123, 124, 130, 131, 196, 385], "unboundedcontinuoustensorspec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 151, 154, 170, 182, 200, 205, 228, 253, 271, 274, 276, 279, 302, 367, 376, 377, 386, 387, 388, 393], "boundedtensorspec": [3, 22, 27, 103, 107, 123, 124, 130, 131, 195, 262, 263, 266, 267, 268, 275, 282, 283, 285, 296, 300, 301, 303, 305, 306, 367, 376, 386, 387, 388, 392, 393], "binarydiscretetensorspec": [3, 140, 286, 289, 290, 312, 367], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 93, 103, 105, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 151, 152, 155, 156, 157, 158, 161, 162, 167, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 185, 186, 191, 192, 194, 203, 204, 205, 221, 225, 227, 228, 257, 258, 259, 261, 262, 265, 266, 267, 270, 271, 272, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 313, 314, 315, 316, 317, 318, 351, 374, 386, 388], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 26, 28, 29, 37, 40, 42, 47, 50, 55, 67, 79, 80, 82, 103, 107, 123, 124, 130, 131, 139, 142, 146, 150, 151, 154, 162, 164, 168, 173, 174, 175, 181, 182, 184, 185, 186, 188, 190, 192, 194, 214, 217, 219, 222, 223, 226, 229, 230, 234, 235, 243, 244, 247, 249, 257, 258, 271, 275, 278, 280, 281, 282, 283, 284, 288, 289, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 313, 319, 320, 321, 322, 323, 324, 325, 326, 327, 349, 374, 375, 390, 393], "_set_se": [3, 140, 143, 151, 154, 170, 388], "lazystackedtensordict": [3, 33, 61, 103, 107, 119, 123, 124, 130, 131, 385], "float32": [3, 14, 15, 16, 27, 30, 41, 42, 43, 46, 47, 48, 50, 51, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 128, 129, 130, 131, 132, 133, 139, 143, 151, 154, 155, 156, 164, 166, 170, 171, 173, 177, 180, 182, 184, 200, 203, 205, 215, 216, 221, 225, 228, 241, 242, 250, 253, 254, 255, 256, 259, 260, 265, 266, 267, 268, 269, 270, 271, 274, 276, 279, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 312, 369, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393], "exclusive_field": [3, 61, 385], "stack_dim": [3, 61, 385], "dramat": 3, "carefulli": [3, 386, 387, 393], "against": [3, 5, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 194, 196, 253, 260, 261, 268, 269, 270, 271, 272, 283, 296, 301, 303, 305, 306, 376, 386, 387], "plain": [3, 8, 378], "larg": [3, 4, 29, 41, 43, 46, 151, 154, 188, 282, 284, 297, 300, 302, 375, 376, 386, 387, 390], "expens": [3, 80, 87, 88, 332, 390], "absent": [3, 27, 33, 63, 103, 107, 123, 124, 130, 131, 186], "torchvis": [3, 11, 168, 190, 336, 386, 392, 393], "base_env": [3, 100, 103, 107, 108, 113, 123, 124, 130, 131, 139, 140, 143, 149, 151, 153, 154, 162, 166, 170, 172, 178, 180, 182, 183, 186, 194, 334, 374, 375, 376, 386, 389, 392, 393], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 124, 130, 131, 138, 141, 143, 150, 155, 182, 186, 194, 206, 207, 226, 233, 281, 298, 332, 356, 357, 363, 364, 365, 375, 390], "bring": [3, 376, 378, 393], "signific": [3, 5, 8, 376, 393], "kind": [3, 45, 53, 203, 380, 386, 390], "consult": 3, "interest": [3, 268, 272, 369, 375, 376, 378, 387, 388, 393], "resize_par": 3, "easi": [3, 5, 11, 61, 66, 101, 102, 103, 107, 112, 113, 123, 124, 130, 131, 257, 258, 262, 263, 266, 267, 369, 370, 374, 375, 376, 387, 389, 390, 393], "graph": [3, 4, 8, 99, 100, 112, 113, 310, 311, 374, 388], "revers": [3, 223], "order": [3, 11, 16, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 88, 103, 107, 123, 124, 130, 131, 147, 151, 154, 166, 186, 194, 253, 260, 271, 273, 274, 276, 282, 283, 285, 289, 290, 296, 300, 301, 302, 303, 305, 306, 375, 386, 387], "chain": [3, 41, 42, 43, 45, 46, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 150, 153, 206, 207, 274, 393], "invers": [3, 4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 146, 151, 154, 156, 164, 173, 194, 280, 289, 296, 388], "in_keys_inv": [3, 136, 149, 151, 152, 154, 164, 165, 166, 170, 171, 173, 178, 185, 374, 385, 388, 393], "append_transform": [3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 136, 139, 145, 168, 182, 186, 188, 192, 332, 374, 377, 386, 388, 390, 392, 393], "doubletofloat": [3, 374, 376, 385], "float64": [3, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 101, 102, 103, 107, 117, 118, 123, 124, 130, 131, 139, 150, 151, 154, 168, 182, 185, 186, 188, 190, 194, 271, 385], "regist": [3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 106, 107, 108, 123, 124, 130, 131, 151, 154, 155, 176, 186, 194, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 332, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 371, 374, 376, 378, 390], "manipul": [3, 4, 8, 101, 102, 168, 188], "third_transform": 3, "unexpect": [3, 37, 103, 107, 123, 124, 130, 131, 194, 393], "behviour": 3, "fortun": [3, 377, 378, 379, 382], "alreadi": [3, 8, 12, 37, 41, 43, 46, 54, 61, 103, 107, 123, 124, 130, 131, 182, 194, 204, 272, 314, 315, 316, 317, 374, 376, 382, 386, 387], "chang": [3, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 74, 75, 76, 80, 86, 87, 89, 91, 95, 103, 107, 123, 124, 130, 131, 143, 150, 151, 152, 154, 156, 162, 170, 171, 177, 180, 185, 186, 192, 194, 223, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 370, 374, 377, 386, 387, 388, 389, 390, 393], "catfram": [3, 265, 375], "hold": [3, 310, 311, 388, 390], "notic": [3, 93, 146, 376, 383, 388], "parenthood": 3, "henc": [3, 42, 169, 204, 231, 369, 374, 376, 386, 387, 388], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 123, 130, 332, 388], "discret": [3, 25, 29, 35, 36, 40, 56, 103, 106, 107, 108, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 153, 239, 242, 288, 289, 290, 291, 369, 375, 379, 386, 387, 388, 393], "might": [3, 41, 43, 44, 46, 338, 368, 374, 378, 393], "action_mask": [3, 112, 113, 125, 126, 128, 129, 140], "unavail": [3, 125, 126], "probabl": [3, 4, 8, 47, 82, 85, 214, 216, 219, 221, 223, 225, 226, 229, 230, 239, 248, 249, 262, 268, 272, 369, 375, 379, 392], "categor": [3, 29, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 139, 140, 155, 216, 239, 242, 260, 261, 268, 269, 270, 286, 289, 290, 312, 377], "probabilistictensordictmodul": [3, 162, 272, 273, 392], "tensordictsequenti": [3, 221, 225, 260, 262, 265, 266, 273, 279, 369, 374, 375, 377, 379, 383, 385, 386, 389, 392], "maskedcategor": [3, 230, 367], "linear": [3, 14, 15, 16, 17, 21, 37, 99, 100, 103, 107, 119, 123, 124, 130, 131, 150, 162, 168, 182, 185, 186, 188, 190, 194, 205, 206, 207, 209, 210, 211, 212, 216, 218, 226, 228, 231, 232, 234, 235, 236, 242, 243, 244, 253, 254, 255, 256, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 276, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 361, 369, 375, 385, 389, 392], "in_feat": 3, "out_feat": 3, "logit": [3, 43, 47, 215, 229, 230, 239, 261, 268, 289, 290, 369], "dist": [3, 10, 229, 230, 239, 379], "distribution_class": [3, 162, 254, 255, 256, 259, 268, 272, 274, 282, 283, 289, 290, 296, 300, 301, 302, 303, 369, 374, 376, 379, 386, 387, 392], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 65, 99, 100, 103, 107, 108, 112, 113, 118, 121, 123, 124, 125, 126, 130, 131, 133, 194, 196, 221, 225, 251, 254, 255, 256, 258, 263, 265, 267, 269, 277, 298, 312, 369, 374, 375, 376, 377, 380, 383, 386, 387, 393], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 140, 169, 194], "enviorn": [3, 117, 125, 126, 132, 133], "itself": [3, 37, 103, 107, 123, 124, 130, 131, 135, 142, 194, 298, 305, 376, 378], "ey": 3, "report": [3, 99, 100, 112, 113, 382], "foremost": 3, "callback": [3, 103, 107, 123, 124, 130, 131, 387], "ad": [3, 4, 16, 23, 37, 42, 45, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 103, 107, 123, 124, 130, 131, 176, 186, 194, 234, 235, 266, 267, 282, 284, 286, 291, 297, 300, 303, 312, 375, 377, 379, 386, 390, 393], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 51, 79, 80, 86, 176, 192, 194, 265, 266, 267, 339, 344, 375, 377, 378, 381, 387, 388, 390], "tensordictrecord": [3, 367], "videorecord": [3, 11, 332, 367, 376, 382, 383, 386], "csvlogger": [3, 11, 332, 334, 367, 375, 382, 383, 386], "wandblogg": [3, 367, 382], "tensorboardlogg": [3, 361, 367, 382], "tag": [3, 7, 11, 332, 334, 336, 339, 365, 382, 383, 386], "mp4": [3, 332, 334, 336, 383, 386], "video_format": [3, 332, 334, 336, 383, 386], "whc": 3, "cwh": 3, "exp": [3, 236, 281], "al": [3, 24, 106, 108, 155, 166, 205, 393], "pong": [3, 61, 121, 166, 393], "v5": [3, 106, 108, 121, 155, 166, 393], "cach": [3, 41, 43, 54, 61, 63, 64, 65, 67, 68, 69, 70, 80, 87, 103, 107, 123, 124, 130, 131, 142, 151, 154, 168, 186, 190, 203, 343, 389], "grow": 3, "until": [3, 7, 21, 183, 185, 194, 376, 377, 383, 386, 387], "dumpi": 3, "tediou": [3, 378], "workspac": [3, 103, 107, 123, 124, 130, 131], "pixelrendertransform": [3, 367, 386], "stream": [3, 67], "alik": [3, 332], "envcreat": [3, 16, 22, 123, 130, 332, 361, 362, 365, 367, 374, 375, 392, 393], "render_mod": [3, 332, 388], "rgb_arrai": [3, 332, 386, 387, 388], "uncom": [3, 382], "line": [3, 7, 37, 61, 103, 107, 123, 124, 130, 131, 194, 375, 382, 386, 387, 393], "comment": [3, 371, 375, 392], "pixels_record": [3, 332], "close": [3, 16, 107, 120, 162, 282, 284, 297, 300, 332, 374, 375, 378, 385, 386, 388, 392], "mission": 3, "irrespect": [3, 271, 272], "dmcontrol": [3, 103, 107, 123, 124, 130, 131], "jumanji": [3, 103, 107, 112, 113, 123, 124, 130, 131], "special": [3, 367, 369, 374, 377, 393], "framework": [3, 4, 9, 22, 99, 100, 103, 107, 112, 113, 119, 123, 124, 130, 131, 219, 392, 393], "Its": [3, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 192, 194, 271, 318], "success": [3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 146, 185, 262, 305, 375, 381, 383, 388, 390, 392], "foundat": [3, 5, 125, 126, 376, 387], "inspir": [3, 388], "gone": [3, 4, 5, 265], "hard": [3, 7, 93, 101, 102, 123, 295, 375, 393], "prefer": [3, 14, 15, 17, 20, 23, 24, 42, 45, 50, 51, 169, 177, 300, 305, 348, 369, 376, 386, 387, 390], "maintain": [3, 5, 9, 28, 388], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 375, 376, 377, 381, 386, 387, 388, 390, 393], "decor": [3, 8, 12, 138, 298, 314, 315, 316, 317, 392], "relev": [3, 47, 314, 315, 316, 317, 318, 341, 388], "gym_backend": [3, 138, 367], "env1": [3, 385], "venv": 3, "python3": [3, 6, 7, 10, 386, 393], "site": [3, 6, 7, 68, 138, 386, 393], "env2": [3, 385], "_env": [3, 6, 106, 393], "classic_control": 3, "pendulumenv": [3, 367, 388], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 115, 135], "handi": [3, 103, 107, 123, 124, 130, 131, 382], "side": [3, 4, 393], "v0": [3, 14, 15, 103, 107, 109, 112, 113, 114, 115, 123, 124, 130, 131, 150, 186, 192, 361, 393], "26": [3, 103, 107, 123, 124, 130, 131, 375, 387, 388, 389], "fun": [3, 12, 138, 376, 386, 387], "reveal": 4, "bug": [4, 392], "curv": 4, "exploit": [4, 379], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 162, 386, 387, 389], "coeffici": [4, 24, 28, 47, 162, 387], "bonu": [4, 282, 284, 297, 300], "beta": [4, 42, 50, 79, 80, 289, 296, 297, 374, 375, 390, 392], "reduc": [4, 6, 29, 93, 181, 248, 367, 375, 386], "downstream": [4, 370, 374], "formul": [4, 386, 387], "ob": [4, 8, 23, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 87, 88, 93, 103, 107, 123, 124, 130, 131, 140, 142, 151, 152, 154, 164, 178, 184, 200, 203, 209, 210, 211, 212, 231, 232, 233, 269, 276, 283, 285, 290, 296, 301, 303, 305, 306, 314, 315, 316, 317, 375, 385, 386, 388, 390, 392, 393], "rate": [4, 11, 61, 192, 313, 375, 376, 386, 387], "gradient": [4, 37, 103, 107, 123, 124, 130, 131, 186, 194, 222, 230, 235, 239, 248, 249, 282, 284, 285, 289, 290, 296, 297, 298, 300, 301, 302, 303, 305, 306, 313, 314, 315, 316, 317, 351, 374, 376, 386, 387, 388], "easier": [4, 369, 374], "local": [4, 7, 10, 16, 21, 37, 80, 87, 103, 107, 123, 124, 130, 131, 186, 194, 231, 232, 241, 250, 312, 339, 341, 382, 383, 386, 387], "optima": 4, "sens": [4, 41, 43, 46, 381, 388], "product": [4, 9, 219, 220, 223, 224, 363, 364], "sum": [4, 21, 36, 40, 93, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 145, 176, 229, 230, 248, 250, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 297, 299, 300, 301, 302, 303, 305, 306, 313, 320, 370, 374, 375, 376, 377, 380, 383, 386, 387, 388, 393], "stat": [4, 164, 192, 355, 365, 375, 376], "w": [4, 82, 146, 148, 172, 184, 219, 266, 267, 334, 375, 377, 390], "yield": [4, 16, 21, 37, 103, 107, 123, 124, 130, 131, 194, 298, 374, 380], "insight": 4, "auxiliari": [4, 380], "credit": 4, "futur": [4, 23, 37, 41, 43, 46, 71, 72, 78, 103, 107, 123, 124, 130, 131, 168, 186, 190, 194, 226, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 368, 392], "past": [4, 265, 375, 390], "spars": [4, 377], "intermedi": [4, 14, 15, 145, 221, 225, 261, 374, 389], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 374], "discov": 4, "score": [4, 47], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 392], "select": [4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 117, 118, 125, 126, 132, 133, 140, 142, 143, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 167, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 185, 188, 189, 191, 192, 194, 195, 205, 221, 225, 260, 269, 350, 374, 378, 390], "fall": [4, 63], "explicit": [4, 12, 54, 82, 390], "mechan": [4, 37, 103, 107, 123, 124, 130, 131, 186, 194, 375, 380, 388], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 103, 107, 123, 124, 130, 131, 223, 289, 296, 376, 387], "addition": 4, "timestep": [4, 47, 63, 173, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 386, 387], "realli": 4, "huge": [4, 232, 377], "std": [4, 164, 192, 236, 240, 257, 258, 374, 393], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 373, 377, 378, 380, 381, 382, 383, 384, 385, 389, 390, 391], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 107, 123, 124, 130, 131, 145, 164, 168, 182, 185, 186, 188, 193, 194, 205, 219, 220, 223, 224, 228, 231, 232, 233, 234, 235, 257, 258, 262, 263, 265, 266, 267, 282, 283, 285, 286, 288, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 365, 369, 370, 374, 375, 377, 378, 379, 381, 386, 388, 393], "estim": [4, 61, 80, 87, 88, 155, 162, 209, 248, 254, 255, 256, 282, 283, 284, 285, 286, 288, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "unseen": 4, "extrins": 4, "wrong": [4, 80, 87], "bonus": 4, "denser": 4, "prior": [4, 244, 293, 387], "freshli": 4, "drop": [4, 86, 88, 203], "meant": [4, 37, 119], "encourag": [4, 123, 374, 375, 390], "measur": [4, 74, 75, 95, 99, 100, 112, 113, 376, 381], "novelti": 4, "revisit": 4, "previous": [4, 376, 393], "diminish": 4, "decreas": [4, 24, 379], "ideal": [4, 164, 388], "down": [4, 14, 15, 16, 17, 370, 377, 378], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 41, 43, 46, 375, 376, 377, 380, 381, 386, 387, 388, 392, 393], "distil": 4, "nois": [4, 193, 235, 252, 266, 267, 301, 305, 306, 347, 365, 374, 386], "exploratori": [4, 282, 284, 297, 300], "misalign": 4, "trade": [4, 379], "unavoid": 4, "divers": [4, 123, 130], "bootstrap": [4, 291, 315, 321, 322, 374, 377], "noisi": [4, 234, 235, 252, 369], "unstabl": [4, 222, 248, 249], "inher": 4, "stochast": [4, 162, 217, 235, 237, 244, 283, 287, 289, 290, 296, 299, 301, 303, 369, 376, 379, 387], "enemi": 4, "pomdp": [4, 390], "loos": [4, 369, 375, 376], "nonexist": 4, "architectur": [4, 213, 380, 386, 387], "sequenc": [4, 14, 15, 16, 17, 24, 27, 33, 35, 36, 42, 44, 45, 47, 52, 54, 67, 70, 73, 82, 83, 85, 91, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 136, 144, 145, 146, 147, 148, 151, 153, 154, 158, 160, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 181, 183, 184, 185, 192, 206, 207, 214, 216, 219, 223, 226, 229, 230, 231, 232, 239, 242, 246, 259, 273, 274, 287, 333, 334, 346, 347, 348, 350, 351, 369, 374, 376, 377, 385, 386, 387, 393], "lstm": [4, 182, 224, 225, 236], "rel": [4, 82, 182, 214, 247, 374, 375, 386, 387, 390], "tend": 4, "stabl": [4, 9, 10, 122], "compens": 4, "descent": [4, 235], "minimum": [4, 123, 130, 174, 217, 236, 247, 248, 249, 275, 278, 281, 283, 290, 298, 299, 303, 342, 374, 376, 383, 386, 387], "manual": [4, 11, 18, 20, 21, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 108, 374, 377, 390], "deviat": [4, 164, 192, 205, 217, 228, 234, 235, 240, 257, 258, 300, 305, 306, 374, 379, 387], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 80, 87, 142, 219, 220, 223, 224, 378, 379, 380, 381, 382, 383], "stabil": [4, 159, 282, 284, 297, 300, 302], "stage": [4, 374, 388], "never": [4, 14, 15, 17, 80, 381], "prevent": [4, 25, 27, 29, 33, 35, 36, 40, 72, 192, 222, 248, 249, 282, 284, 297, 300, 302, 349, 382, 390], "entir": [4, 67, 103, 107, 123, 124, 130, 131, 231, 376, 378, 388, 390], "submit": [4, 106, 143, 368, 392], "system": [4, 5, 72, 376, 386, 387, 388], "adequ": [4, 196, 376, 386, 387], "infeas": 4, "allevi": [4, 369], "prune": 4, "fire": [4, 37, 103, 107, 123, 124, 130, 131, 194], "illeg": 4, "move": [4, 37, 69, 103, 107, 123, 124, 130, 131, 139, 150, 152, 168, 182, 185, 186, 188, 190, 192, 194, 203, 226, 271, 349, 374, 375, 377, 378, 392, 393], "chess": 4, "combin": [4, 31, 185, 305, 375, 382, 390], "grasp": 4, "top": [4, 93, 99, 100, 112, 113, 205, 228, 379], "wherein": 4, "cumul": [4, 176, 181, 205, 320, 376], "q": [4, 9, 103, 107, 123, 124, 130, 131, 209, 210, 211, 212, 215, 216, 218, 241, 242, 250, 256, 261, 269, 270, 283, 285, 286, 288, 289, 290, 291, 295, 296, 301, 303, 305, 306, 312, 367, 374, 380], "flow": [4, 374, 376, 386, 387, 388, 390], "reparameter": [4, 214, 230, 239], "soft": [4, 295, 303, 304, 386], "critic": [4, 8, 254, 264, 282, 284, 285, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 374, 380], "clip": [4, 47, 149, 174, 282, 284, 297, 300, 302, 305, 306, 351, 376, 387, 388], "oppos": [4, 54], "incorrect": 4, "thought": [4, 103, 107, 123, 124, 130, 131], "bound": [4, 21, 26, 27, 37, 103, 107, 123, 124, 130, 131, 149, 163, 192, 194, 243, 244, 253, 260, 261, 267, 268, 269, 270, 271, 272, 275, 305, 306, 369, 374, 375, 376, 386, 393], "region": 4, "squash": [4, 377, 392], "tanh": [4, 206, 207, 219, 220, 222, 223, 224, 226, 232, 247, 248, 249, 275, 376, 379, 386, 387, 388, 389, 392], "prob": [4, 229, 230, 239, 376, 387], "rememb": [4, 386], "remap": 4, "origin": [4, 8, 41, 43, 46, 47, 111, 152, 153, 162, 168, 186, 190, 194, 219, 268, 271, 272, 283, 295, 296, 298, 300, 301, 303, 305, 306, 374, 385, 388, 393], "histor": 5, "ceas": 5, "farama": [5, 65, 114, 115, 125, 126, 376, 388], "best": [5, 9, 111, 221, 225, 386, 387, 390, 392], "gymwrapp": [5, 103, 107, 123, 124, 130, 131, 156, 177, 180, 191, 367, 376, 392, 393], "feel": [5, 368, 383, 392], "free": [5, 7, 151, 154, 282, 293, 300, 371, 376, 383, 387, 392], "gladli": 5, "prepar": [6, 32, 64, 376], "conda": [6, 7, 368], "cmake": 6, "activ": [6, 7, 9, 206, 207, 213, 217, 226, 231, 232, 284, 297, 300, 369, 388, 392], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 64, 368], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 109], "y": [6, 7, 45, 122, 218, 231, 251, 374, 387, 390], "facebookresearch": [6, 64, 109], "subdirectori": 6, "verbos": [6, 383], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 58, 103, 107, 123, 124, 130, 131, 170, 179, 194, 298, 386, 387, 392, 393], "command": [6, 7, 10, 131, 376, 386, 387, 388, 393], "readm": [6, 7, 132], "md": [6, 7], "habitatenv": [6, 367], "_has_habitat": 6, "available_env": [6, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 393], "startswith": [6, 370, 374, 380], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 104, 298, 374], "env_nam": [6, 99, 101, 103, 106, 107, 109, 112, 114, 120, 123, 124, 127, 130, 131, 374, 376, 393], "llvmlite": 6, "config": [6, 7, 168, 190, 208, 213, 240, 355, 356, 357, 359, 362], "var": [6, 7, 37, 103, 107, 123, 124, 130, 131, 186, 194, 298, 303], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 260, 298], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 37, 103, 107, 123, 124, 130, 131, 186, 194, 298, 303, 390], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 103, 375, 383], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 63], "stand": [7, 31, 101, 102, 123, 130, 385, 388], "joint": [7, 375], "contact": [7, 44, 386], "engin": [7, 127, 388], "biomechan": 7, "graphic": 7, "anim": [7, 387], "area": 7, "demand": [7, 382, 393], "fast": [7, 9, 99, 100, 171, 203, 301, 374, 375, 376], "articul": 7, "acquir": [7, 376], "deepmind": [7, 8, 9, 67, 101, 102, 103, 107, 117, 118, 123, 124, 130, 131, 155, 376, 378], "whomev": 7, "licenc": 7, "incorpor": [7, 103, 107, 123, 124, 130, 131, 257, 258, 262, 263, 266, 267, 305, 377, 379, 388], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 368], "tip": [7, 368], "glfw": [7, 374], "osmesa": 7, "egl": 7, "advic": [7, 67, 393], "sudo": [7, 368], "apt": [7, 387], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 254, 255, 256], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 25, 29, 40, 144, 216, 242, 260, 261, 269, 270, 286, 289, 290, 312], "mkdir": 7, "earlier": [7, 374, 376, 377, 386, 387, 390], "roboti": 7, "html": [7, 14, 15, 120, 122], "wget": 7, "mujoco210": 7, "tar": [7, 64], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 123, 130], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 41, 43, 54, 70], "bin": [7, 216, 261, 369], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 212, 268, 272, 374, 376, 390], "nvidia": [7, 111], "older": [7, 12], "hack": [7, 374], "adatp": 7, "script": [7, 64, 196, 361, 365, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "unnot": [7, 169], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 72, 375, 390], "troubleshoot": 7, "gl": 7, "h": [7, 82, 146, 148, 172, 184, 219, 220, 221, 223, 224, 225, 228, 334, 375, 377, 390], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21], "directori": [7, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 74, 339, 341, 371, 374, 379, 382, 386], "devel": 7, "ubuntu": [7, 111], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 375, 377, 385], "libstdc": 7, "glibcxx_3": 7, "29": [7, 375, 377, 388], "compil": [7, 23, 37, 80, 87, 88, 103, 107, 123, 124, 130, 131, 194, 219, 220, 223, 224], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 191, 376, 385], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 33, 37, 103, 107, 123, 124, 130, 131, 163, 186, 194, 303, 370, 393], "job": [7, 18, 19, 20, 22, 45, 390, 392], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 99, 100, 374, 375, 376, 387, 388, 389], "114": [7, 388], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 388], "offscreenopenglcontext": 7, "opengl": [7, 386, 387], "global": [7, 37, 103, 107, 123, 124, 125, 126, 130, 131, 194, 241, 250, 268, 272, 312, 371, 374, 386, 387], "cuda_visible_devic": 7, "id": [7, 23, 47, 80, 82, 87, 88, 103, 106, 107, 123, 124, 130, 131, 266, 267, 301, 337, 341, 381, 390], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 386], "onscreen": 7, "101": [7, 388], "correctli": [7, 37, 103, 107, 123, 124, 130, 131, 194], "lgl": 7, "libegl": 7, "x11": [7, 387], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 371], "n_training_step": 8, "datapoint": [8, 54, 390], "n_data_per_train": 8, "no_grad": [8, 37, 103, 107, 123, 124, 130, 131, 162, 194, 219, 220, 223, 224, 314, 315, 316, 317, 376, 377, 387], "loss_fn": [8, 377, 380, 381, 392], "zero_grad": [8, 37, 103, 107, 123, 124, 130, 131, 194, 371, 374, 376, 377, 380, 383, 386, 387, 388], "backpropag": [8, 99, 100, 112, 113, 123, 282, 283, 284, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 306, 312, 380, 387, 388], "differenti": [8, 54, 99, 100, 162, 305, 314, 315, 316, 317, 377, 379, 380, 386, 387, 388], "denomin": 8, "artifact": 8, "numer": [8, 45, 107, 192, 222, 248, 249, 253, 260, 261, 268, 269, 270, 271, 272, 349, 376, 390, 393], "misconcept": 8, "freed": 8, "appear": [8, 11, 40, 61, 67, 80, 87, 88, 388, 390], "compuat": 8, "fix": [8, 28, 123, 182, 283, 299, 303, 375, 383, 388, 393], "retain_graph": [8, 99, 100], "discuss": [8, 9, 381, 386, 387], "inplac": [8, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 194, 374], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 167, 168, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 185, 188, 189, 191, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 244, 246, 250, 251, 257, 258, 259, 261, 262, 265, 266, 267, 268, 270, 271, 272, 275, 276, 278, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 314, 315, 316, 317, 318, 370, 388, 392], "submodul": [8, 37, 103, 107, 123, 124, 130, 131, 135, 182, 194, 221, 225, 279, 298], "param": [8, 37, 47, 103, 107, 119, 123, 124, 130, 131, 143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 194, 214, 216, 233, 247, 259, 268, 271, 274, 298, 308, 311, 314, 315, 316, 317, 318, 374, 383, 386, 387, 388, 389, 392], "grad": [8, 37, 99, 100, 103, 107, 123, 124, 130, 131, 194, 374, 376], "whose": [8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 103, 107, 123, 124, 125, 126, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 236, 241, 271], "neg": [8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 50, 79, 80, 146, 158, 169, 187, 292, 314, 316, 317, 370, 376, 386, 387, 388], "factor": [8, 11, 24, 37, 173, 194, 222, 235, 248, 249, 257, 258, 262, 263, 266, 267, 283, 288, 291, 292, 294, 304, 320, 374, 375, 379, 383, 386, 387, 390, 393], "fit": [8, 12, 164, 182, 370, 371, 374], "bottlneck": 8, "brax": [8, 99, 100, 103, 107, 123, 124, 130, 131, 171, 378, 393], "jax": [8, 12, 99, 100, 112, 113], "improperli": 8, "underli": [8, 103, 107, 123, 124, 130, 131, 298, 378, 380, 382, 388], "tedeiou": 8, "priorit": [8, 42, 50, 79, 80, 285, 286, 288, 289, 290, 296, 301, 303, 305, 306, 374, 375, 381], "amount": [8, 266, 267, 375, 390], "costli": [8, 388], "constitut": [8, 375, 387, 388], "profil": 8, "frequent": [8, 390], "program": [8, 289, 296, 393], "functorch": [8, 10], "incl": 8, "suit": [8, 102, 376, 378, 392, 393], "mujoco_instal": 8, "valueerror": [8, 37, 103, 107, 123, 124, 130, 131, 194], "bad": 8, "fds_to_keep": 8, "expand": [8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 87, 88, 143, 271, 274, 283, 296, 298, 301, 303, 305, 306, 386, 387, 388, 390, 392], "new_shap": 8, "permut": [8, 86, 166, 392, 393], "idea": [9, 301, 371, 377, 379, 386, 387], "introductori": 9, "intro": [9, 376, 377], "dai": [9, 392], "2022": [9, 10, 388, 392], "spin": [9, 101, 102], "deep": [9, 146, 209, 210, 211, 212, 215, 266, 267, 282, 295, 303, 304, 374, 386], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 379], "summari": [9, 164, 192, 374, 375, 376, 377], "reddit": 9, "reagent": 9, "orient": [9, 69, 393], "baselines3": 9, "tf": 9, "bandit": [9, 122], "tensorflow": [9, 229, 230], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 383], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 392], "grade": 9, "factori": [9, 52, 374], "cherri": 9, "jaxrl": 9, "mbrl": [9, 119, 369], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 388], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 376, 377, 386, 387], "notebook": [10, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "24": [10, 68, 88, 106, 120, 121, 265, 374, 375, 386, 388], "pip3": [10, 374, 376, 377, 386, 387], "url": [10, 109], "org": [10, 14, 15, 24, 42, 64, 65, 67, 69, 79, 80, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 122, 127, 132, 133, 146, 168, 188, 208, 209, 210, 211, 212, 213, 216, 217, 218, 223, 228, 229, 230, 235, 237, 238, 241, 243, 244, 250, 261, 266, 267, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 302, 303, 304, 305, 314, 319, 327, 366, 384, 389], "whl": 10, "u": [10, 66, 219, 220, 223, 224, 388], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 376, 386, 387, 388, 390], "power": [11, 375], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 367], "ultim": [11, 222, 248, 249], "ffmpeg": 11, "whatev": [11, 370, 374], "fed": [11, 387, 390], "feed": [11, 168, 190, 298, 369, 374, 386, 387, 390], "suppos": [11, 123, 347, 371, 393], "snippet": [11, 168, 188, 374], "gave": 11, "extrem": [11, 123, 130, 282, 284, 297, 300, 302], "blurri": 11, "stitch": 11, "exp_nam": [11, 334, 335, 336, 339, 340, 341, 361, 375, 382, 383], "my_exp": [11, 382], "pixels_onli": [11, 101, 102, 106, 108, 109, 127, 374, 375, 382, 383, 392, 393], "my_video": [11, 382], "record_env": [11, 382, 383], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 256, 369], "module_nam": [12, 298], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 79, 80, 82, 93, 99, 101, 102, 103, 105, 106, 107, 108, 109, 112, 117, 118, 120, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 142, 146, 155, 162, 168, 172, 180, 181, 186, 188, 190, 191, 192, 194, 197, 201, 204, 205, 215, 216, 221, 225, 227, 228, 231, 232, 233, 234, 235, 236, 241, 242, 250, 253, 260, 261, 268, 269, 270, 271, 272, 275, 276, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 312, 313, 314, 315, 316, 317, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 359, 365, 375, 376], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 221, 225, 392], "longer": [12, 375, 383, 386, 387, 390], "x": [12, 23, 27, 37, 45, 47, 67, 88, 162, 184, 207, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 251, 260, 268, 269, 278, 281, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 351, 374, 386, 388, 390, 392], "23": [12, 68, 88, 374, 375, 376, 388, 389], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 68, 99, 100, 107, 112, 113, 224, 281, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 374, 375, 376, 377, 383, 386, 387, 388, 390, 393], "otherwis": [12, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 88, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 146, 147, 153, 164, 181, 182, 183, 186, 192, 194, 219, 222, 223, 231, 232, 248, 249, 260, 269, 275, 283, 293, 298, 299, 303, 314, 316, 317, 347, 348, 371, 374, 375, 376, 377, 388, 393], "classmethod": [12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 103, 107, 123, 124, 130, 131, 188, 208, 240], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 33, 34, 35, 37, 41, 43, 45, 46, 68, 72, 80, 87, 88, 103, 104, 105, 106, 107, 108, 117, 118, 120, 123, 124, 125, 126, 130, 131, 132, 133, 134, 162, 182, 186, 191, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 218, 226, 240, 268, 272, 303, 338, 339, 347, 356, 357, 363, 364, 365, 374, 375, 376, 390, 393], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 104, 123, 130, 374, 392], "device_typ": [14, 16, 17, 29, 35, 39, 40, 206, 207, 208, 209, 210, 211, 212, 218, 226, 231, 232, 234, 235, 240], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 375], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 375], "create_env_kwarg": [14, 15, 16, 17, 21, 104, 120, 123, 130, 374, 393], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 37, 173, 375, 390], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 268, 298, 347, 374, 375, 376, 377, 379, 386, 392], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 198, 202, 268, 272, 347], "exploration_mod": [14, 16, 17, 18, 19, 20, 367, 369], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 41, 43, 46, 123, 130], "num_sub_thread": [14, 15, 17, 123, 130], "set_trunc": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131], "use_buff": [14, 15, 16, 123, 130], "datacollector": [14, 15, 16, 17, 37, 272, 300, 376, 381, 390], "recept": 14, "safe": [14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 253, 258, 260, 261, 267, 268, 269, 270, 271, 272, 274, 369, 392], "sota": [14, 15, 119, 159, 302, 342, 356, 374, 375, 392], "guard": [14, 15], "doc": [14, 15, 52, 109, 112, 113, 122, 127, 341, 375, 386, 387, 390, 393], "env_mak": [14, 15, 16, 21, 361, 393], "2000": [14, 15, 16, 37, 54, 110, 334, 376, 390], "50": [14, 15, 16, 21, 44, 47, 61, 69, 87, 88, 117, 118, 194, 374, 375, 376, 377, 387, 388, 389, 390], "shutdown": [14, 15, 16, 17, 21, 143, 374, 392], "del": [14, 15, 16, 374, 375, 376, 385, 386, 392, 393], "int64": [14, 15, 16, 23, 25, 29, 30, 35, 36, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 103, 107, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 139, 143, 155, 166, 173, 180, 216, 242, 260, 261, 266, 267, 268, 269, 270, 369, 376, 377, 378, 379, 381, 382, 388, 390, 392], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 145, 251, 260, 265, 269, 377], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 54], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 375], "divis": [14, 15, 16, 17, 18, 19, 20, 61, 67, 80, 87, 88, 387], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 107, 142, 182, 191, 225, 377, 388, 389], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 353, 375], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 70, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 120, 121, 123, 124, 127, 130, 131, 150, 151, 154, 162, 168, 182, 185, 186, 188, 190, 192, 194, 271, 386, 393], "span": [14, 15, 16, 17, 18, 19, 20, 21, 67, 80, 87], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 37, 194, 265, 375, 376, 386, 387], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 47, 341, 369, 386, 387, 388], "round": [14, 15, 16, 17, 18, 19, 20, 21, 61], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 37, 65, 103, 107, 123, 124, 130, 131, 194], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 191, 392], "ratio": [14, 15, 17, 47, 374, 376], "finish": [14, 15, 17, 21, 107, 173, 393], "rest": [14, 15, 17, 369, 376, 377, 386, 388, 392], "earli": [14, 15, 17, 37, 107, 180, 392], "safeti": [14, 15, 17, 119, 123, 130], "harm": [14, 15, 17, 123, 130], "exclus": [14, 15, 57, 58, 61, 67, 80, 87, 88, 143, 156, 158, 219, 221, 223, 225, 229, 230, 260, 261, 269, 270, 304, 305, 306, 314, 315, 316, 317, 318, 341, 365, 369], "add_truncated_kei": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131, 186], "ordereddict": [14, 15, 16, 17, 21, 37, 103, 107, 123, 124, 130, 131, 186, 192, 194, 303, 375], "form": [14, 15, 17, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 103, 107, 123, 124, 130, 131, 192, 194, 219, 221, 223, 225, 281, 282, 284, 297, 300, 351, 369, 379, 387], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 103, 107, 123, 124, 130, 131, 186], "integ": [14, 15, 16, 17, 23, 35, 36, 37, 40, 47, 56, 80, 87, 88, 89, 103, 107, 123, 124, 130, 131, 139, 142, 155, 159, 164, 180, 206, 207, 226, 231, 232, 289, 296, 303, 390], "increment": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131, 164, 297], "env_fn": [14, 15, 16, 17, 104, 363, 364], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 87, 88, 211, 212, 388], "out_se": [14, 15, 16, 17, 393], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 37, 39, 41, 42, 43, 45, 46, 49, 50, 51, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 78, 79, 80, 82, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 143, 150, 168, 170, 179, 182, 185, 186, 187, 189, 190, 193, 194, 205, 206, 207, 209, 210, 211, 212, 215, 218, 221, 222, 225, 226, 227, 228, 231, 232, 233, 239, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 312, 313, 314, 315, 316, 317, 318, 332, 334, 338, 339, 341, 344, 351, 356, 357, 362, 363, 364, 370, 376, 387], "return_same_td": 16, "interruptor": 16, "cautious": [16, 300], "whole": [16, 27, 33, 37, 54, 103, 107, 123, 124, 130, 131, 186, 194, 268, 303, 342, 374, 376], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 379], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 351], "respect": [18, 19, 20, 37, 103, 107, 123, 124, 130, 131, 144, 150, 151, 154, 168, 169, 178, 182, 185, 186, 188, 190, 194, 219, 223, 231, 244, 271, 276, 282, 284, 297, 300, 302, 314, 316, 317, 346, 376, 377, 386, 387], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 368, 375, 376, 379, 382, 385, 390], "fashion": [18, 20, 21, 41, 43, 46, 88], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 158], "seen": [18, 19, 20, 21, 27, 33, 103, 107, 123, 124, 130, 131, 370, 374, 375, 377, 380, 386, 387, 390], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 42, 45, 50, 51, 63, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278, 374], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 388], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 374], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 40, 61, 268, 272], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 363, 364, 374, 375], "coordin": 21, "init": [21, 37, 103, 107, 123, 124, 130, 131, 192, 194, 231, 232, 233, 341, 375, 376], "autodetect": 21, "similarli": [21, 37, 86, 91, 103, 107, 123, 124, 130, 131, 194, 231, 273, 274, 289, 296, 393], "num_cpu": 21, "num_gpu": 21, "1024": [21, 213, 375, 390], "equat": [21, 67, 107, 192, 266, 267, 281, 284, 304, 376, 378, 388], "exce": [21, 390], "indefinit": [21, 60], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 351, 374, 376, 377], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 305, 380], "jump": [22, 378], "host": [22, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 208, 213, 240, 259], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 48, 53, 54, 55, 56, 80, 87, 88, 103, 107, 123, 124, 130, 131, 136, 139, 140, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 160, 161, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 188, 192, 194, 195, 203, 204, 216, 242, 257, 258, 259, 262, 263, 265, 266, 267, 272, 286, 312, 332, 334], "as_nest": 23, "durat": [23, 387], "meta": [23, 41, 43, 46, 53, 63, 105, 109, 282, 284, 297, 300, 302, 371, 376, 386, 387, 390], "aren": [23, 181, 377], "deprec": [23, 37, 103, 107, 123, 124, 130, 131, 186, 194, 197, 201, 263, 282, 284, 286, 289, 290, 291, 296, 297, 300, 301, 302, 303, 312, 314, 315, 316, 317, 322, 393], "eventu": [23, 241, 377, 388], "supersed": 23, "recov": [23, 63, 65, 67, 68, 69, 87, 88, 258, 263, 267, 273, 289, 296, 385], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 106, 108], "stride": [23, 37, 103, 107, 123, 124, 130, 131, 194, 206, 207, 209, 210, 218, 231, 375, 386, 392], "jag": 23, "focu": [23, 374, 375, 376, 379, 380, 381, 386], "team": [23, 386, 387, 392], "cat": [23, 276, 283, 285, 296, 301, 303, 305, 306, 386, 390, 392], "arang": [23, 29, 40, 80, 139, 216, 230, 260, 342, 369, 390], "obs_": 23, "trajectory_id": 23, "int32": [23, 51, 61, 67, 87, 112, 113, 131, 200, 265, 390], "data_split": 23, "got": [23, 381], "init_kl_coef": 24, "horizon": [24, 117, 118, 132, 133, 205, 228, 376], "kl": [24, 28, 47, 162, 293, 297], "describ": [24, 53, 147, 185, 195, 247, 248, 286, 337, 370, 374, 376, 386, 387, 388, 393], "ziegler": 24, "et": [24, 205], "relax": [24, 332], "penalti": [24, 47, 297], "strai": [24, 47], "greater": [24, 61, 80, 87, 88, 221, 225, 374, 375, 392], "increas": [24, 72, 183, 266, 267, 386, 387], "pull": [24, 390], "toward": [24, 190], "aggress": 24, "kl_coef": [24, 28, 47], "arxiv": [24, 42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 127, 132, 133, 146, 168, 188, 208, 209, 210, 211, 212, 213, 216, 217, 218, 223, 228, 235, 237, 238, 241, 243, 244, 250, 261, 266, 267, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 303, 304, 305, 314, 319, 327, 389], "pdf": [24, 146, 208, 209, 210, 211, 212, 216, 261, 266, 267, 291, 301, 304, 305, 314, 319, 327], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 386, 387], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 162], "newest": 24, "int8": [25, 103, 116, 125, 126, 144], "assert_is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "clear_device_": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "op": [25, 26, 29, 35, 36, 39, 40, 53, 55, 56, 163, 191, 257, 258, 262, 334, 353], "is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 393], "encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 51, 53, 55, 56, 99, 100, 103, 106, 108, 109, 112, 113, 120, 121, 127, 139, 153, 238, 239, 243, 281, 369, 375, 376, 377, 379, 388, 390], "ndarrai": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 266, 267, 275, 332, 386], "ignore_devic": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "np": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 275, 332, 386, 388], "complient": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "singleton": [25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 206, 207, 226, 245, 246], "start_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "end_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "implements_for_spec": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "torch_funct": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "tensor_to_index": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "project": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 153, 223, 253, 257, 258, 260, 261, 266, 267, 268, 269, 270, 271, 272, 341, 369, 392, 393], "rand": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 112, 113, 119, 140, 143, 151, 154, 170, 195, 205, 228, 268, 282, 283, 285, 286, 288, 289, 290, 296, 298, 300, 301, 303, 305, 306, 388, 392, 393], "unbound": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 182, 200, 388, 390], "to_numpi": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131], "transformed_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 185, 186, 236, 247, 365], "check_spec_encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "to_one_hot": [25, 29, 35], "hot": [25, 29, 35, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 139, 140, 153, 216, 239, 242, 260, 261, 269, 270, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 377], "to_one_hot_spec": [25, 29, 35], "onehotdiscretetensorspec": [25, 29, 216, 242, 260, 269, 286, 288, 289, 290, 312, 367, 369, 379], "convert": [25, 29, 35, 36, 37, 38, 40, 41, 43, 46, 49, 54, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 150, 151, 154, 168, 182, 185, 186, 188, 190, 192, 194, 271, 281, 298, 374, 375, 376, 388, 390], "type_check": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "update_mask": [25, 29, 35, 36, 40], "outcom": [25, 29, 35, 36, 40, 214, 247, 298, 386], "disabl": [25, 29, 35, 36, 37, 40, 103, 107, 123, 124, 130, 131, 186, 194, 222, 249, 332, 374, 386], "unmask": [25, 29, 35, 36, 40], "ts": [25, 29, 35, 36, 40], "upper": [26, 85, 163], "unnam": 27, "constraint": [27, 119, 376, 387], "pixels_spec": 27, "observation_vector_spec": 27, "composite_spec": 27, "observation_vector": [27, 147, 374], "td_project": 27, "is_empti": [27, 33, 388], "include_nest": [27, 33], "leaves_onli": [27, 33], "is_leaf": [27, 33], "_compositespecitemsview": [27, 33], "children": [27, 33, 37, 103, 107, 123, 124, 130, 131, 194], "_compositespeckeysview": [27, 33], "reflect": [27, 33, 108, 125, 126, 191, 203, 298, 354, 375, 376, 377, 387], "lock_": [27, 33], "recurs": [27, 33, 37, 57, 58, 103, 107, 123, 124, 130, 131, 194, 298], "succeed": [27, 33], "selected_kei": [27, 33, 177, 374], "unlock_": [27, 33], "unlock": [27, 33, 41, 43, 46], "_compositespecvaluesview": [27, 33], "multipli": [28, 219, 223, 283, 284, 290, 297, 299, 300, 301, 303, 349, 374, 386], "calcul": [28, 47, 173, 219, 282, 284, 288, 297, 300, 302, 305], "onehottensorspec": [29, 99, 100, 106, 108, 109, 112, 113, 120, 121, 127], "action_valu": [29, 40, 215, 216, 242, 260, 261, 269, 270, 290, 298, 312, 369, 377, 379, 383], "argmax": [29, 103, 107, 123, 124, 130, 131, 216, 242, 261, 270, 379], "chosen_action_valu": [29, 40, 241, 242, 250, 269, 270, 312, 369, 377, 379], "shift_kei": [30, 32, 38, 48], "is_full_kei": [30, 32, 38, 48], "is_ful": [30, 32, 38, 48], "tempfil": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 361, 374, 375, 386, 390], "register_save_hook": [30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "temporarydirectori": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 374, 375, 386, 390], "tmpdir": [30, 42, 45, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 374, 375, 386], "rb_load": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "register_load_hook": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "persist": [31, 37, 103, 107, 123, 124, 130, 131, 186, 194, 203, 303], "filesystem": [31, 390], "ted2nest": [32, 367], "drawn": [33, 34, 182, 262, 268, 272, 376, 386, 387], "heterogen": [33, 34, 116, 125, 126, 196, 231, 232, 374, 375], "thrown": [34, 37, 103, 107, 123, 124, 130, 131, 194, 390], "nvec": [35, 36], "remove_singleton": 35, "cardin": [35, 36, 216, 242, 260, 261, 270, 376], "ax": [35, 234, 235, 386], "m": [35, 37, 103, 107, 123, 124, 130, 131, 153, 194, 272, 369, 375, 388], "multionehotdiscretetensorspec": [35, 286, 289, 290, 312, 367], "neither": [35, 36, 67, 388], "use_regist": [36, 40], "to_categor": [36, 40], "to_categorical_spec": [36, 40], "multidiscretetensorspec": [36, 367], "gamma": [37, 173, 194, 228, 282, 283, 285, 286, 288, 290, 291, 292, 294, 296, 298, 300, 301, 302, 303, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 361, 370, 374, 375, 376, 386, 387, 392], "sutton": [37, 370, 386, 387], "1988": 37, "tempor": [37, 221, 225, 228, 315, 316, 321, 322], "44": [37, 374, 375, 377, 388, 389], "discount": [37, 67, 104, 173, 194, 283, 288, 291, 292, 294, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 370, 375, 376, 386, 387], "ahead": [37, 194, 393], "bias": [37, 219, 220, 223, 224, 278, 370, 374], "mitig": 37, "pleas": [37, 65, 103, 106, 107, 123, 124, 125, 126, 130, 131, 143, 146, 183, 186, 194, 231, 232, 233, 303, 368], "multisteptransform": [37, 367], "99": [37, 173, 192, 228, 294, 308, 313, 320, 361, 374, 375, 376, 380, 383, 386, 387, 388, 392], "add_modul": [37, 103, 107, 123, 124, 130, 131, 194], "child": [37, 103, 107, 123, 124, 130, 131, 194, 375], "fn": [37, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 194, 236, 363, 364], "init_weight": [37, 103, 107, 123, 124, 130, 131, 194], "fill_": [37, 103, 107, 123, 124, 130, 131, 194, 375, 377, 393], "net": [37, 103, 107, 123, 124, 130, 131, 194, 210, 212, 215, 218, 232, 282, 283, 290, 296, 300, 301, 302, 303, 361, 375, 388, 389, 392], "in_featur": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 206, 207, 209, 210, 211, 212, 218, 226, 231, 232, 234, 235, 254, 271, 279, 286, 288, 379, 380, 392], "out_featur": [37, 103, 107, 119, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 205, 206, 207, 209, 210, 211, 212, 217, 218, 221, 225, 226, 228, 231, 232, 234, 235, 254, 260, 271, 279, 286, 288, 369, 374, 377, 379, 380, 383, 392], "bia": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 206, 207, 209, 210, 211, 212, 217, 218, 219, 220, 221, 223, 224, 225, 226, 232, 234, 235, 236, 262, 263, 266, 267, 271, 278, 280, 281, 298, 303, 370, 374, 375, 376, 377, 387, 392], "requires_grad": [37, 99, 100, 103, 107, 123, 124, 130, 131, 162, 186, 194, 303], "bfloat16": [37, 103, 107, 123, 124, 130, 131, 194], "datatyp": [37, 103, 107, 123, 124, 130, 131, 194, 390], "member": [37, 103, 107, 123, 124, 130, 131, 194, 298, 334], "xdoctest": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 298, 303], "buf": [37, 103, 107, 123, 124, 130, 131, 194], "20l": [37, 103, 107, 123, 124, 130, 131, 194, 298], "1l": [37, 103, 107, 123, 124, 130, 131, 194, 298], "5l": [37, 103, 107, 123, 124, 130, 131, 194, 298], "__call__": [37, 44, 103, 107, 123, 124, 130, 131, 194, 272, 371, 393], "doubl": [37, 55, 103, 107, 123, 124, 130, 131, 150, 151, 152, 154, 168, 182, 185, 186, 188, 190, 194, 271, 286, 291, 295, 301, 304, 312, 374, 375, 376, 377, 393], "eval": [37, 103, 107, 123, 124, 130, 131, 186, 192, 194, 374, 375, 376], "evalu": [37, 103, 107, 117, 118, 123, 124, 130, 131, 186, 194, 214, 229, 230, 239, 249, 301, 356, 357, 375, 376, 383], "dropout": [37, 103, 107, 123, 124, 130, 131, 186, 194, 219, 221, 223, 225, 226, 377], "batchnorm": [37, 103, 107, 123, 124, 130, 131, 186, 194], "comparison": [37, 103, 107, 123, 124, 130, 131, 186, 194, 298, 374, 375], "similar": [37, 41, 43, 45, 46, 67, 103, 107, 123, 124, 125, 126, 130, 131, 150, 168, 182, 185, 186, 188, 189, 190, 192, 194, 254, 256, 268, 271, 272, 370, 374, 375, 376, 377, 379, 380, 381, 382, 388, 390, 393], "extra_repr": [37, 103, 107, 123, 124, 130, 131, 194], "nontermin": 37, "original_reward": 37, "newli": [37, 103, 107, 123, 124, 130, 131], "OR": 37, "get_buff": [37, 103, 107, 123, 124, 130, 131, 194], "get_submodul": [37, 103, 107, 123, 124, 130, 131, 194], "qualifi": [37, 103, 107, 123, 124, 130, 131, 194], "referenc": [37, 103, 107, 123, 124, 130, 131, 194], "attributeerror": [37, 103, 107, 123, 124, 130, 131, 194, 386], "resolv": [37, 103, 107, 123, 124, 130, 131, 194], "someth": [37, 103, 107, 116, 123, 124, 130, 131, 194, 368, 375, 376, 388, 393], "get_extra_st": [37, 103, 107, 123, 124, 130, 131, 192, 194], "set_extra_st": [37, 103, 107, 123, 124, 130, 131, 192, 194], "picklabl": [37, 103, 107, 123, 124, 130, 131, 192, 194], "pickl": [37, 103, 107, 123, 124, 130, 131, 192, 194], "get_paramet": [37, 103, 107, 123, 124, 130, 131, 194], "net_b": [37, 103, 107, 123, 124, 130, 131, 194], "net_c": [37, 103, 107, 123, 124, 130, 131, 194], "conv": [37, 103, 107, 123, 124, 130, 131, 194, 206, 207, 375], "conv2d": [37, 103, 107, 123, 124, 130, 131, 194, 207, 209, 210, 218, 231, 392], "kernel_s": [37, 103, 107, 123, 124, 130, 131, 194, 206, 207, 209, 210, 218, 231, 237, 375, 392], "diagram": [37, 103, 107, 123, 124, 130, 131, 194], "degre": [37, 103, 107, 123, 124, 130, 131, 194], "named_modul": [37, 103, 107, 123, 124, 130, 131, 194], "o": [37, 103, 107, 123, 124, 130, 131, 194, 224], "half": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 374], "ipu": [37, 103, 107, 123, 124, 130, 131, 194], "strict": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 194, 303], "descend": [37, 103, 107, 123, 124, 130, 131, 186, 194, 303], "get_swap_module_params_on_convers": [37, 103, 107, 123, 124, 130, 131, 186, 194, 303], "enforc": [37, 86, 103, 107, 123, 124, 130, 131, 186, 194, 273, 303, 388], "preserv": [37, 103, 107, 123, 124, 130, 131, 186, 194, 303], "missing_kei": [37, 103, 107, 123, 124, 130, 131, 186, 194, 303], "unexpected_kei": [37, 103, 107, 123, 124, 130, 131, 186, 194, 303], "namedtupl": [37, 103, 107, 123, 124, 130, 131, 186, 194, 303], "l": [37, 103, 107, 123, 124, 130, 131, 194, 219, 223, 313, 376, 388], "idx": [37, 103, 107, 123, 124, 130, 131, 194], "named_buff": [37, 103, 107, 123, 124, 130, 131, 194], "remove_dupl": [37, 103, 107, 123, 124, 130, 131, 194, 298], "prepend": [37, 103, 107, 123, 124, 130, 131, 194, 298], "running_var": [37, 103, 107, 123, 124, 130, 131, 194], "named_children": [37, 103, 107, 123, 124, 130, 131, 194], "conv4": [37, 103, 107, 123, 124, 130, 131, 194], "conv5": [37, 103, 107, 123, 124, 130, 131, 194], "memo": [37, 103, 107, 123, 124, 130, 131, 194], "named_paramet": [37, 103, 107, 123, 124, 130, 131, 162, 194, 298], "register_backward_hook": [37, 103, 107, 123, 124, 130, 131, 194], "removablehandl": [37, 103, 107, 123, 124, 130, 131, 194], "favor": [37, 103, 107, 123, 124, 130, 131, 194, 376], "register_full_backward_hook": [37, 103, 107, 123, 124, 130, 131, 194], "register_buff": [37, 103, 107, 123, 124, 130, 131, 194], "running_mean": [37, 103, 107, 123, 124, 130, 131, 194], "alongsid": [37, 103, 107, 123, 124, 130, 131, 194, 382], "num_featur": [37, 103, 107, 123, 124, 130, 131, 194], "register_forward_hook": [37, 103, 107, 123, 124, 130, 131, 194, 216, 242], "with_kwarg": [37, 103, 107, 123, 124, 130, 131, 194], "always_cal": [37, 103, 107, 123, 124, 130, 131, 194], "register_module_forward_hook": [37, 103, 107, 123, 124, 130, 131, 194], "regardless": [37, 103, 107, 123, 124, 130, 131, 194, 284, 297, 300], "register_forward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "invok": [37, 103, 107, 123, 124, 130, 131, 194], "And": [37, 103, 107, 123, 124, 130, 131, 194, 380], "forward_pr": [37, 103, 107, 123, 124, 130, 131, 194], "register_module_forward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "grad_input": [37, 103, 107, 123, 124, 130, 131, 194], "grad_output": [37, 103, 107, 123, 124, 130, 131, 194], "subsequ": [37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 142, 194, 377, 386], "technic": [37, 103, 107, 123, 124, 130, 131, 194, 375, 377, 379], "caller": [37, 103, 107, 123, 124, 130, 131, 194], "register_module_full_backward_hook": [37, 103, 107, 123, 124, 130, 131, 194], "register_full_backward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "backward_pr": [37, 103, 107, 123, 124, 130, 131, 194], "register_module_full_backward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "register_load_state_dict_post_hook": [37, 103, 107, 123, 124, 130, 131, 194], "incompatible_kei": [37, 103, 107, 123, 124, 130, 131, 194], "register_modul": [37, 103, 107, 123, 124, 130, 131, 194, 371], "alia": [37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 107, 123, 124, 130, 131, 194], "register_paramet": [37, 103, 107, 123, 124, 130, 131, 194], "register_state_dict_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "keep_var": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 194, 303], "requires_grad_": [37, 103, 107, 123, 124, 130, 131, 194], "autograd": [37, 103, 107, 123, 124, 130, 131, 186, 194, 303], "freez": [37, 103, 107, 123, 124, 130, 131, 192, 194], "finetun": [37, 103, 107, 123, 124, 130, 131, 194], "gan": [37, 103, 107, 123, 124, 130, 131, 194], "set_submodul": [37, 103, 107, 123, 124, 130, 131, 194], "overid": [37, 103, 107, 123, 124, 130, 131, 194], "share_memori": [37, 103, 104, 107, 123, 124, 130, 131, 194, 374], "share_memory_": [37, 103, 107, 123, 124, 130, 131, 194, 392], "destin": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 145, 151, 152, 154, 186, 188, 192, 194, 203, 303, 334], "averag": [37, 103, 107, 123, 124, 130, 131, 186, 192, 194, 266, 267, 292, 293, 303, 349, 374, 376], "shallow": [37, 103, 107, 123, 124, 130, 131, 186, 194, 303, 377], "detach": [37, 103, 107, 123, 124, 130, 131, 186, 194, 298, 303, 305, 314, 315, 316, 317, 374], "non_block": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 377], "memory_format": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "channels_last": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "unchang": [37, 103, 107, 123, 124, 130, 131, 150, 153, 168, 182, 185, 186, 188, 190, 194, 262, 271, 348, 374, 390], "tri": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 382], "pin": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "4d": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "ignore_w": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "1913": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "3420": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "5113": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "2325": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "torch_doctest_cuda1": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "gpu1": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "1914": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "5112": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 388], "2324": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "float16": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 220, 224, 271], "cdoubl": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "3741": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "j": [37, 42, 79, 80, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 371, 380], "2382": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "5593": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271, 388], "4443": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "complex128": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "6122": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "1150": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 271], "to_empti": [37, 103, 107, 123, 124, 130, 131, 194], "dst_type": [37, 103, 107, 123, 124, 130, 131, 194], "xpu": [37, 103, 107, 123, 124, 130, 131, 194], "set_to_non": [37, 103, 107, 123, 124, 130, 131, 194], "row": [38, 49, 112, 113], "unidimension": 40, "keepdim": 40, "user_regist": 40, "priori": 40, "uniqu": [40, 87, 88, 117, 118, 146, 155, 181, 182, 183, 265, 341, 381, 390], "discretebox": [40, 103, 107, 123, 124, 130, 131, 379, 386, 387, 393], "chosen_data": [41, 70], "rewarddata": [41, 70, 367], "rejected_data": [41, 70], "from_dataset": [41, 43, 70], "dataset_nam": [41, 43, 47, 54, 70, 122], "max_length": [41, 43, 44, 52, 54, 70, 383], "550": [41, 43, 47, 54, 70, 87, 88, 373, 379, 388, 391], "root_dir": [41, 43, 54, 70], "from_disk": [41, 43, 54, 70], "carperai": [41, 43, 47, 54], "openai_summarize_comparison": [41, 43, 54], "sequen": [41, 43], "load_from_disk": [41, 43, 54, 70], "load_dataset": [41, 43, 54, 70], "attention_mask": [41, 43, 44, 46, 47, 52, 54, 70], "92534": 41, "input_id": [41, 43, 44, 46, 47, 52, 54, 70], "end_scor": [41, 46, 47, 70], "sub_data": [41, 43], "from_tensordict": [41, 43, 46], "non_tensordict": [41, 43, 46], "_nodefault": [41, 43, 46], "getattr": [41, 43, 46, 386], "tensorclass": [41, 43, 46, 70, 74, 75, 95], "proxi": [41, 43, 46, 230, 239, 268, 370], "load_memmap": [41, 43, 46], "load_": [41, 43, 46], "load_memmap_": [41, 43, 46], "fetch": [41, 43, 46, 99, 100, 101, 102, 162, 379, 389, 390], "fromkei": [41, 43, 46], "memmap": [41, 43, 46, 74, 123, 130, 192, 334, 336, 348, 390], "saved_td": [41, 43, 46], "td_load": [41, 43, 46], "fake": [41, 43, 46, 103, 107, 123, 124, 130, 131, 374, 375], "_subclass": [41, 43, 46], "faketensormod": [41, 43, 46], "faketensor": [41, 43, 46], "from_flatten": [41, 43, 46], "attemptedli": [41, 43, 46], "copy_exist": [41, 43, 46], "return_earli": [41, 43, 46], "share_non_tensor": [41, 43, 46], "mimic": [41, 43, 46, 103, 107, 123, 124, 130, 131], "cross": [41, 43, 46, 205], "anymor": [41, 43, 46, 186, 271], "tensordictfutur": [41, 43, 46], "deepli": [41, 43, 46], "insid": [41, 43, 46, 123, 393], "memmap_": [41, 43, 46, 192], "memmap_lik": [41, 43, 46], "contentless": [41, 43, 46], "1_000_000": [41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 374, 377, 386], "alloc": [41, 43, 46, 75, 229, 230, 374], "memmap_refresh_": [41, 43, 46], "refresh": [41, 43, 46, 383, 386, 387], "saved_path": [41, 43, 46], "setattr": [41, 43, 46], "tent": [41, 43, 46, 54], "to_tensordict": [41, 43, 46, 377], "unbind": [41, 42, 43, 45, 46, 50, 51, 221, 225], "alpha": [42, 50, 79, 80, 206, 207, 209, 210, 211, 212, 218, 231, 283, 290, 299, 301, 303, 305, 374, 390, 392], "ep": [42, 50, 79, 80, 164, 192, 266, 267, 284, 304, 349, 374, 375, 377, 380, 383], "1e": [42, 50, 79, 80, 164, 192, 214, 217, 236, 247, 374, 375, 376, 387], "08": [42, 50, 79, 80, 374, 375, 376, 388, 389], "pin_memori": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 167, 374, 392], "schaul": [42, 79, 80], "quan": [42, 79, 80], "antonogl": [42, 79, 80], "silver": [42, 79, 80], "2015": [42, 79, 80], "ab": [42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 127, 132, 133, 145, 168, 188, 192, 208, 213, 217, 218, 223, 228, 235, 237, 238, 241, 243, 244, 250, 282, 283, 286, 287, 288, 289, 292, 293, 294, 295, 296, 299, 300, 303, 389], "1511": [42, 79, 80, 218], "05952": [42, 79, 80], "expon": [42, 50, 79, 80], "\u03b1": [42, 50, 79, 80], "delta": [42, 50, 79, 80, 219, 223, 247, 268, 272, 367, 370, 386], "null": [42, 50, 79, 80, 144], "1_000": [42, 45, 50, 51, 386, 390], "merg": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 388], "mini": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 387], "decid": [42, 45, 50, 51, 386, 392], "meth": [42, 45, 50, 51, 298, 388], "incompat": [42, 45, 50, 51, 302, 390], "drop_last": [42, 45, 50, 51, 86, 88], "notion": [42, 45, 50, 51], "caution": [42, 45, 50, 51, 86, 196, 393], "codebas": [42, 45, 50, 51, 388], "approach": [42, 45, 50, 51, 164, 305, 374, 376, 380, 381, 386, 393], "return_info": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 390], "tensordictprioritizedreplaybuff": [42, 367, 392], "simplifi": [42, 379, 388, 390], "_weight": [42, 50, 79, 80, 390, 392], "arrai": [42, 47, 79, 103, 107, 123, 124, 130, 131, 155, 219, 220, 223, 224, 374, 386, 390], "update_prior": [42, 79, 80, 348, 371, 375, 390, 392], "36278465": 42, "invert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 280, 376], "tqdm": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 351, 374, 376, 377, 386, 387, 388], "randomsampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 374, 386], "td_error": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 285, 286, 288, 289, 290, 291, 296, 298, 301, 303, 305, 306, 312, 374, 380, 390, 392], "update_tensordict_prior": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 374, 390, 392], "insert_transform": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 141, 186], "insert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 82, 83, 93, 94, 97, 98, 141, 150, 186, 187], "set_sampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_storag": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_writ": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "prompt_rindex": [43, 44, 47], "promptdatatldr": 43, "116722": 43, "prompt": [44, 47], "return_tensordict": [44, 52], "recip": [44, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278], "text": [44, 47, 52, 65, 219, 220, 223, 224, 266, 267, 376], "tensodict": [44, 52], "orign": [44, 52], "valid_sampl": 44, "eough": 44, "toknen": 44, "meet": 44, "criterion": 44, "autotoken": [44, 52, 54], "from_pretrain": [44, 47, 52], "gpt2": [44, 47, 52, 54, 208, 213, 240], "pad_token": [44, 52], "eos_token": 44, "enough": [44, 390], "inde": [44, 153, 376, 388], "storagecheckpointerbas": [45, 89], "roundrobinwrit": [45, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "Not": [45, 99, 100, 112], "depth": [45, 103, 107, 119, 123, 124, 127, 130, 131, 205, 206, 207, 209, 210, 211, 212, 217, 218, 226, 228, 231, 232, 233, 237, 238, 260, 369, 375, 378, 380, 381, 385, 386, 387, 390], "_pytre": [45, 390], "tree_map": [45, 390], "did": [45, 191, 320, 375, 376, 381, 390, 393], "assert0": [45, 390], "ref_model": 47, "reward_model": [47, 277], "max_new_token": 47, "score_clip": 47, "kl_schedul": 47, "klcontrollerbas": 47, "num_step": 47, "causal": 47, "sentenc": 47, "frozen": [47, 162, 192], "gpt2rewardmodel": 47, "get_dataload": [47, 367], "promptdata": [47, 367], "gpt2lmheadmodel": 47, "dl": 47, "block_siz": [47, 70], "tensorclass_typ": [47, 70], "openai_summarize_tldr": 47, "config_class": 47, "model_path": 47, "rollout_from_model": 47, "rollout_from_data": 47, "600": [47, 382, 388, 390], "reward_kl": [47, 162], "reward_raw": 47, "sample_log_prob": [47, 254, 255, 256, 268, 272, 274, 300, 376, 379, 387, 392], "create_rollout_td": 47, "log_prob": [47, 214, 229, 230, 239, 249, 272], "log_ratio": 47, "replic": [47, 370], "rindex": 47, "eo": 47, "term": [47, 162, 223, 224, 234, 235, 281, 282, 290, 353, 375, 376, 378, 379, 387], "generation_config": 47, "generationconfig": 47, "ti": [47, 323, 324, 325, 326, 328, 329, 330, 331, 375], "log_probs_gen": 47, "logprobs_of_label": 47, "220": [48, 388], "priority_kei": [50, 51, 62, 79, 286, 289, 290, 291, 296, 298, 301, 303, 305, 306, 312, 390, 392], "reduct": [50, 79, 80, 93, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 299, 300, 301, 302, 303, 305, 306], "prioritizedreplaybuff": [50, 367, 392], "min": [50, 79, 80, 93, 248, 249, 266, 267, 283, 284, 290, 299, 301, 303, 375, 376], "median": [50, 79, 80, 93, 112, 113, 139, 268, 272], "include_info": [50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "huggingfac": [52, 64, 69, 264], "co": [52, 155, 388], "pad_trunc": 52, "am": 52, "me": 52, "reassur": 52, "ok": 52, "tokenizer_fn": 54, "tensordicttoken": [54, 367], "pre_tokenization_hook": 54, "valid_s": 54, "tokenizer_class": 54, "tokenizer_model_nam": 54, "tokein": 54, "elementwis": 54, "vocabulari": 54, "loader": [54, 376], "185068": 54, "dataset_to_tensordict": 54, "data_dir": 54, "batch_dim": [54, 365], "valid_mask_kei": 54, "conver": 54, "batch_dimens": 54, "filder": 54, "from_dict": 54, "data_memmap": 54, "recurse_through_entri": 58, "recurse_through_stack": 58, "consolid": 58, "dataset_id": [61, 63, 64, 65, 67, 68, 69], "num_proc": 61, "slice_len": [61, 67, 80, 87, 88, 334], "strict_len": 61, "arari": 61, "2600": 61, "million": [61, 377], "consequ": [61, 72, 223, 381], "50x10": 61, "available_dataset": [61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88], "ataridqn": 61, "immutabledatasetwrit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "shorter": [61, 67, 80, 87, 88], "Be": [61, 67, 80, 87, 88], "game_nam": 61, "krull": 61, "1d": [61, 79, 80, 87, 88, 93], "cheapli": 61, "nontensordata": [61, 67, 332], "invalid_rang": 61, "999998": 61, "999999": 61, "add_count": 61, "84": [61, 172, 374, 375, 377, 388, 389], "valueestim": [61, 282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 308, 312, 367, 370, 374, 386, 387], "convolut": [61, 206, 207, 209, 210, 231, 245, 379], "2657628": 61, "2657629": 61, "2657630": 61, "2657631": 61, "2657632": 61, "2657633": 61, "2657634": 61, "2657635": 61, "2657636": 61, "2657637": 61, "2657638": 61, "2657639": 61, "2657640": 61, "2657641": 61, "2657642": 61, "2657643": 61, "2657644": 61, "2657645": 61, "2657646": 61, "2657647": 61, "2657648": 61, "2657649": 61, "2657650": 61, "2657651": 61, "2657652": 61, "2657653": 61, "2657654": 61, "2657655": 61, "2657656": 61, "2657657": 61, "2657658": 61, "2657659": 61, "2657660": 61, "2657661": 61, "2657662": 61, "2657663": 61, "2657664": 61, "2657665": 61, "2657666": 61, "2657667": 61, "2657668": 61, "2657669": 61, "2657670": 61, "2657671": 61, "2657672": 61, "2657673": 61, "2657674": 61, "2657675": 61, "2657676": 61, "2657677": 61, "2657678": 61, "2657679": 61, "2657680": 61, "2657681": 61, "2657682": 61, "2657683": 61, "2657684": 61, "2657685": 61, "2657686": 61, "2657687": 61, "2657688": 61, "2657689": 61, "2657690": 61, "2657691": 61, "1995687": 61, "1995688": 61, "1995689": 61, "1995690": 61, "1995691": 61, "1995692": 61, "1995693": 61, "1995694": 61, "1995695": 61, "1995696": 61, "1995697": 61, "1995698": 61, "1995699": 61, "1995700": 61, "1995701": 61, "1995702": 61, "1995703": 61, "1995704": 61, "1995705": 61, "1995706": 61, "1995707": 61, "1995708": 61, "1995709": 61, "1995710": 61, "1995711": 61, "1995712": 61, "1995713": 61, "1995714": 61, "1995715": 61, "1995716": 61, "1995717": 61, "1995718": 61, "1995719": 61, "1995720": 61, "1995721": 61, "1995722": 61, "1995723": 61, "1995724": 61, "1995725": 61, "1995726": 61, "1995727": 61, "1995728": 61, "1995729": 61, "1995730": 61, "1995731": 61, "1995732": 61, "1995733": 61, "1995734": 61, "1995735": 61, "1995736": 61, "1995737": 61, "1995738": 61, "1995739": 61, "1995740": 61, "1995741": 61, "1995742": 61, "1995743": 61, "1995744": 61, "1995745": 61, "1995746": 61, "1995747": 61, "1995748": 61, "1995749": 61, "1995750": 61, "left": [61, 63, 67, 80, 87, 143, 150, 151, 152, 156, 162, 168, 170, 171, 177, 180, 183, 185, 188, 190, 194, 231, 262, 375, 376, 381, 382], "untouch": [61, 67, 143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 194], "_max_run": 61, "dataset_asterix": 61, "asterix": 61, "dataset_pong": 61, "sample_from_al": [61, 82, 85], "buffer_id": [61, 85, 91], "hidden": [61, 123, 130, 145, 209, 217, 219, 220, 221, 223, 224, 225, 237, 238, 243, 244, 254, 255, 256, 259, 271, 274, 284, 297, 300, 369, 377, 385, 392], "data_path": [61, 62, 63, 64, 65, 66, 67, 68, 69], "data_path_root": [61, 62, 63, 64, 65, 66, 67, 68, 69], "delet": [61, 62, 63, 64, 65, 66, 67, 68, 69, 147, 341], "chunksiz": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pool": [61, 62, 63, 64, 65, 66, 67, 68, 69, 183], "max_tasks_per_child": [61, 62, 63, 64, 65, 66, 67, 68, 69], "worker_thread": [61, 62, 63, 64, 65, 66, 67, 68, 69], "index_with_gener": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pbar": [61, 62, 63, 64, 65, 66, 67, 68, 69, 374, 376, 377, 386, 387, 388], "dest": [61, 62, 63, 64, 65, 66, 67, 68, 69, 168, 188, 190, 271], "num_fram": [61, 62, 63, 64, 65, 66, 67, 68, 69], "unitari": [61, 62, 63, 64, 65, 66, 67, 68, 69, 388], "minariexperiencereplai": [61, 62, 63, 64, 66, 67, 68, 69], "1000000": [61, 62, 63, 64, 65, 66, 67, 68, 69], "distance_from_origin": [61, 62, 63, 64, 65, 66, 67, 68, 69], "forward_reward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qpo": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qvel": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_ctrl": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "reward_forward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_surv": [61, 62, 63, 64, 65, 66, 67, 68, 69], "x_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "x_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "y_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "y_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69], "achieved_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "desired_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "27": [61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 100, 123, 130, 373, 375, 376, 388, 389, 391], "_collate_id": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x120e21dc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cattensor": [61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 374, 385, 388, 393], "cat_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cat_next_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "new_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "31": [61, 62, 63, 64, 65, 66, 67, 68, 69, 112, 113, 374, 375, 376, 388, 389], "full_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x168406fc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "from_env": 63, "use_truncated_as_don": 63, "direct_download": 63, "terminate_on_end": 63, "env_kwarg": [63, 68, 69, 143, 363, 364, 374], "reconstruct": [63, 87, 88, 293, 374, 393], "get_dataset": 63, "qlearning_dataset": 63, "fewer": [63, 80, 87], "possess": 63, "unexpectedli": 63, "traj_split": 63, "observationnorm": [63, 192, 365, 374, 375, 376, 377, 392], "maze2d": 63, "umaz": 63, "loc": [63, 103, 107, 123, 124, 130, 131, 162, 164, 175, 192, 222, 236, 248, 249, 254, 255, 256, 268, 272, 274, 282, 283, 296, 300, 301, 302, 303, 355, 365, 369, 374, 375, 376, 377, 379, 387, 392], "gen": 64, "dgrl": 64, "accompani": [64, 143, 180], "gap": 64, "2312": 64, "05742": 64, "gen_dgrl": 64, "procgen": 64, "bigfish": 64, "bossfight": 64, "categori": [64, 369, 371], "1m_e": 64, "1m_": 64, "comma": 64, "npy": 64, "extract": [64, 142, 264, 374, 376, 392], "mmap": [64, 68, 69], "minut": [64, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "internet": [64, 69], "connect": [64, 69], "minari": 65, "websit": [65, 67], "currenrtli": 65, "minari_data": 65, "door": 65, "torchrl_logg": [65, 383], "28": [65, 231, 374, 375, 388, 389, 390], "door_body_po": 65, "dua": 66, "graff": 66, "2017": 66, "uci": 66, "archiv": 66, "ic": 66, "edu": 66, "ml": 66, "sklearn": [66, 122], "adult_num": [66, 122], "adult_onehot": [66, 122], "mushroom_num": [66, 122], "mushroom_onehot": [66, 122], "covertyp": [66, 122], "shuttl": [66, 122], "magic": [66, 122, 378], "shuffl": [67, 86, 88, 387], "embodi": [67, 389], "institut": 67, "demonstr": [67, 376, 381, 386, 387, 388, 390, 393], "527": [67, 388], "skill": 67, "160266": 67, "googl": [67, 68, 99, 100, 117, 118, 376, 377, 386, 387], "open_x_embodi": 67, "2310": [67, 127], "08864": 67, "language_instruct": 67, "get_non_tensor": 67, "nor": 67, "insuffici": 67, "chosen": [67, 132, 133, 181, 182, 241, 242, 250, 270, 334, 369, 382], "openx": 67, "__will": 67, "change__": 67, "randomli": [67, 86, 131, 163, 164, 182, 262, 268, 272, 379, 386, 387, 388, 390], "crop": [67, 148, 169, 334], "modal": [67, 374], "cmu_stretch": [67, 334], "is_init": [67, 69, 145, 161, 221, 225, 265, 266, 267, 279, 377], "language_embed": 67, "512": [67, 218, 375, 388], "lift": 67, "green": [67, 386], "garbag": 67, "lid": 67, "roboset": 68, "h5": [68, 69, 72], "roboh": [68, 127], "concis": [68, 380], "75": [68, 374, 375, 377, 388, 389], "totensor": 69, "image_s": 69, "v": [69, 192, 219, 220, 223, 224, 254, 289, 296, 303, 369, 374, 375], "npz": 69, "2206": [69, 120, 121], "04779": [69, 283, 288], "vd4rl": 69, "squar": [69, 148, 222, 248, 249, 334], "rectangular": [69, 206, 207], "walker_walk": 69, "64px": 69, "height": [69, 148, 172], "veloc": [69, 101, 102, 103, 107, 123, 124, 130, 131, 146, 386, 387, 388, 393], "infinit": [70, 117, 118, 132, 133, 381, 390], "block": [70, 73, 98, 369, 377, 386], "pairwisedataset": [70, 367], "256": [70, 117, 118, 213, 375, 376, 386, 387, 388], "checkpoint_fil": 72, "h5_kwarg": 72, "iff": 72, "suffix": [72, 347], "h5py": 72, "create_dataset": 72, "temporarili": [72, 196, 381, 390], "immut": [73, 103, 107, 123, 130, 171, 186], "piec": [73, 83, 94, 97, 98, 374, 375, 376, 382, 386, 387, 388, 390], "scratch_dir": [74, 374, 390], "sent": [74, 75, 95, 192], "mistak": [74, 75, 95], "myclass": [74, 75, 95], "foo": [74, 75, 95, 259, 390, 393], "bar": [74, 75, 95, 259, 344, 345, 347, 351, 371, 375], "attach": [74, 75, 76, 89, 91, 95, 375], "entiti": [74, 75, 76, 89, 91, 95], "zero_": [75, 95, 200], "liststoag": 77, "max_capac": [79, 80, 374, 390], "max_priority_within_buff": [79, 80], "data_0": 79, "data_1": 79, "smoothen": 79, "tdrb": 79, "pack": [79, 219, 223, 376, 378, 393], "nd": [79, 80], "sum_tre": [79, 80], "min_tre": [79, 80], "end_kei": [80, 87, 88], "cache_valu": [80, 87, 88], "closer": 80, "readili": [80, 87, 88], "conjunct": [80, 87, 88, 375], "Will": [80, 87, 120, 334], "buffer0": [80, 87], "immutablewrit": [80, 87], "buffer1": [80, 87], "other_sampl": [80, 87], "short": [80, 87, 88, 99, 100, 112, 113, 123, 196, 223, 224, 375, 376, 378, 379, 387, 390], "unsqueez": [80, 140, 143, 146, 147, 184, 187, 200, 374, 377, 386, 387, 388], "tolist": 80, "120110917137936e": 80, "06": [80, 214, 247, 374, 375, 376, 387, 388, 389], "uniformli": [81, 298, 393], "storageensembl": [82, 85], "samplerensembl": 82, "writerensembl": [82, 91], "num_buffer_sampl": [82, 85], "ensembl": [82, 85, 91, 92, 98, 271, 301], "forbidden": 82, "collat": 82, "0x13a2ef430": 82, "0x13a2f9310": 82, "interpol": [82, 172, 375, 377], "interpolationmod": [82, 377], "bilinear": [82, 172, 377], "0x13a2f9220": 82, "0x13a2f9f70": 82, "0x13a2d9b50": 82, "0x13a2f95b0": 82, "0x128648260": 82, "kw": [83, 94], "roundrobin": [83, 94], "incomplet": [86, 88], "fresh": 86, "haven": [86, 389], "remain": [86, 145, 152, 153, 162, 181, 235, 380], "draw": [86, 262], "slicesamplerwithoutreplac": [87, 390], "320": [87, 88, 101, 102, 373, 375, 383, 387, 388, 391], "700": [87, 88], "dataid": [87, 88], "__len__": 89, "rank_kei": 93, "rank": [93, 205], "samplerwithoutreplac": [93, 376, 387, 390], "get_insert_index": 93, "convers": [99, 100, 112, 113, 370], "2106": [99, 100, 287, 305], "13281": [99, 100], "categorical_action_encod": [99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131], "frame_skip": [99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 120, 121, 127, 159, 344, 347, 354, 371, 374, 375, 376, 392], "repeat": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 205, 376, 386, 387, 388], "allow_done_after_reset": [99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 127], "toler": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 214, 247], "availalb": [99, 100, 112, 113], "is_avail": [99, 100, 374, 375, 376, 377, 386, 387, 389], "els": [99, 100, 143, 219, 220, 223, 224, 237, 369, 371, 374, 375, 376, 377, 386, 387, 388, 389], "ant": [99, 100, 103, 107, 110, 123, 124, 130, 131, 389, 393], "87": [99, 100, 375, 388, 389], "acrobot": [99, 100, 101, 102, 393], "advant": [99, 100, 112, 113], "timer": [99, 100, 112, 113], "timeit": [99, 100, 112, 113], "310": [99, 100, 388], "ms": [99, 100, 112, 113], "268": [99, 100, 388], "433": [99, 100, 388], "80": [99, 100, 374, 375, 376, 387, 388, 389], "213": [99, 100, 388], "8605": [99, 100], "pipelineenv": 100, "get_environ": 100, "dm_control": [101, 102, 374, 385, 393], "2006": [101, 102, 283, 288, 388], "12983": [101, 102], "task_nam": [101, 103, 107, 123, 124, 130, 131], "cheetah": [101, 102, 103, 107, 123, 124, 130, 131, 334, 374], "240": [101, 102, 388, 392], "swingup": [101, 102, 393], "swingup_spars": [101, 102], "ball_in_cup": [101, 102], "catch": [101, 102], "balance_spars": [101, 102], "three_pol": [101, 102], "two_pol": [101, 102], "finger": [101, 102], "turn_easi": [101, 102], "turn_hard": [101, 102], "fish": [101, 102], "upright": [101, 102, 375], "swim": [101, 102], "hopper": [101, 102], "hop": [101, 102], "humanoid": [101, 102, 123, 130, 385], "walk": [101, 102, 123, 130, 375, 385], "run_pure_st": [101, 102], "bring_bal": [101, 102], "bring_peg": [101, 102], "insert_bal": [101, 102], "insert_peg": [101, 102], "point_mass": [101, 102], "reacher": [101, 102], "swimmer": [101, 102], "swimmer6": [101, 102], "swimmer15": [101, 102], "walker": [101, 102], "dog": [101, 102], "trot": [101, 102], "humanoid_cmu": [101, 102], "lqr": [101, 102], "lqr_2_1": [101, 102], "lqr_6_2": [101, 102], "quadrup": [101, 102], "escap": [101, 102], "stacker": [101, 102], "stack_2": [101, 102], "stack_4": [101, 102], "deviceless": 103, "run_type_check": [103, 119], "counterenv": 103, "continuousbox": [103, 107, 123, 124, 130, 131, 200, 376, 386, 387, 388, 392, 393], "sort": [103, 107, 123, 124, 130, 131, 147, 266, 267], "another_act": [103, 107, 123, 124, 130, 131], "mutabl": [103, 107, 123, 124, 130, 131], "_callabletransform": [103, 107, 123, 124, 130, 131], "batch_lock": [103, 105, 107, 123, 130, 143, 182, 186, 388], "done_keys_group": [103, 107, 123, 124, 130, 131], "outer": [103, 107, 123, 124, 130, 131, 371, 374, 375, 393], "another_don": [103, 107, 123, 124, 130, 131], "empty_cach": [103, 107, 123, 124, 130, 131, 186], "fake_tensordict": [103, 107, 123, 124, 130, 131, 375], "silent": [103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 236, 237, 238, 240, 243, 244, 246, 251, 257, 258, 259, 261, 262, 265, 266, 267, 270, 275, 278], "braxenv": [103, 107, 123, 124, 130, 131, 171, 367, 378], "envnam": [103, 107, 123, 124, 130, 131], "pipeline_st": [103, 107, 123, 124, 130, 131], "attibut": [103, 107, 123, 124, 130, 131], "maybe_reset": [103, 107, 123, 124, 130, 131], "speak": [103, 107, 123, 124, 130, 131, 374], "rand_act": [103, 107, 116, 123, 124, 125, 126, 130, 131, 143, 378], "register_gym": [103, 107, 123, 124, 130, 131, 378], "entry_point": [103, 107, 123, 124, 130, 131], "info_kei": [103, 107, 123, 124, 130, 131], "reward_threshold": [103, 107, 123, 124, 130, 131], "nondeterminist": [103, 107, 123, 124, 130, 131], "max_episode_step": [103, 106, 107, 108, 123, 124, 130, 131], "order_enforc": [103, 107, 123, 124, 130, 131], "autoreset": [103, 107, 123, 124, 130, 131], "disable_env_check": [103, 106, 107, 120, 121, 123, 124, 130, 131], "apply_api_compat": [103, 107, 123, 124, 130, 131], "nasium": [103, 107, 123, 124, 130, 131], "scope": [103, 107, 123, 124, 130, 131, 393], "dmcontrolenv": [103, 107, 123, 124, 130, 131, 334, 367, 374, 378, 385, 393], "dmc": [103, 107, 123, 124, 130, 131], "removeemptyspec": [103, 107, 123, 124, 130, 131], "threshold": [103, 107, 123, 124, 130, 131, 262, 283, 284, 376], "learnt": [103, 107, 123, 124, 130, 131, 361], "knowledg": [103, 107, 123, 124, 130, 131, 380, 382], "checker": [103, 106, 107, 120, 121, 123, 124, 130, 131], "stepapicompat": [103, 107, 123, 124, 130, 131], "concept": [103, 107, 123, 124, 130, 131, 375, 390], "deem": [103, 107, 117, 118, 123, 124, 130, 131, 132, 133], "envgym": [103, 107, 123, 124, 130, 131], "0855": [103, 107, 123, 124, 130, 131], "0215": [103, 107, 123, 124, 130, 131], "0881": [103, 107, 123, 124, 130, 131], "0412": [103, 107, 123, 124, 130, 131], "1101": [103, 107, 123, 124, 130, 131], "0080": [103, 107, 123, 124, 130, 131], "0254": [103, 107, 123, 124, 130, 131], "0424": [103, 107, 123, 124, 130, 131], "9609e": [103, 107, 123, 124, 130, 131], "9776e": [103, 107, 123, 124, 130, 131], "04": [103, 107, 111, 123, 124, 130, 131, 374, 375, 376, 388, 389], "6347e": [103, 107, 123, 124, 130, 131], "3842e": [103, 107, 123, 124, 130, 131], "5338e": [103, 107, 123, 124, 130, 131], "3064e": [103, 107, 123, 124, 130, 131], "0381e": [103, 107, 123, 124, 130, 131], "6656e": [103, 107, 123, 124, 130, 131], "05": [103, 107, 123, 124, 130, 131, 373, 374, 375, 376, 388, 389, 391], "0204e": [103, 107, 123, 124, 130, 131], "action_spac": [103, 107, 123, 124, 130, 131, 155, 216, 242, 260, 261, 269, 270, 282, 283, 285, 286, 288, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 377, 379, 383], "0833": [103, 107, 123, 124, 130, 131], "0275": [103, 107, 123, 124, 130, 131], "0612": [103, 107, 123, 124, 130, 131], "0770": [103, 107, 123, 124, 130, 131, 388], "1256": [103, 107, 123, 124, 130, 131, 388], "0082": [103, 107, 123, 124, 130, 131], "0186": [103, 107, 123, 124, 130, 131], "0476": [103, 107, 123, 124, 130, 131], "2221": [103, 107, 123, 124, 130, 131], "2256": [103, 107, 123, 124, 130, 131], "5930": [103, 107, 123, 124, 130, 131], "6937": [103, 107, 123, 124, 130, 131], "5865": [103, 107, 123, 124, 130, 131], "5479": [103, 107, 123, 124, 130, 131], "0187": [103, 107, 123, 124, 130, 131], "6825": [103, 107, 123, 124, 130, 131, 388], "5224": [103, 107, 123, 124, 130, 131], "0018": [103, 107, 123, 124, 130, 131, 388], "1005": [103, 107, 123, 124, 130, 131], "0335": [103, 107, 123, 124, 130, 131], "0268": [103, 107, 123, 124, 130, 131, 388], "0133": [103, 107, 123, 124, 130, 131], "0627": [103, 107, 123, 124, 130, 131], "0074": [103, 107, 123, 124, 130, 131, 388], "0488": [103, 107, 123, 124, 130, 131, 388], "0353": [103, 107, 123, 124, 130, 131], "0075": [103, 107, 123, 124, 130, 131, 388], "0069": [103, 107, 123, 124, 130, 131, 388], "0098": [103, 107, 123, 124, 130, 131, 388], "0058": [103, 107, 123, 124, 130, 131, 388], "0033": [103, 107, 123, 124, 130, 131, 388], "0157": [103, 107, 123, 124, 130, 131], "0004": [103, 107, 123, 124, 130, 131, 377, 388], "0381": [103, 107, 123, 124, 130, 131], "0452": [103, 107, 123, 124, 130, 131], "11355747": [103, 107, 123, 124, 130, 131], "04257728": [103, 107, 123, 124, 130, 131], "00408397": [103, 107, 123, 124, 130, 131], "04155852": [103, 107, 123, 124, 130, 131], "0389733": [103, 107, 123, 124, 130, 131], "01409826": [103, 107, 123, 124, 130, 131], "0978704": [103, 107, 123, 124, 130, 131], "08808327": [103, 107, 123, 124, 130, 131], "03970837": [103, 107, 123, 124, 130, 131], "00535434": [103, 107, 123, 124, 130, 131], "02353762": [103, 107, 123, 124, 130, 131], "05116226": [103, 107, 123, 124, 130, 131], "02788907": [103, 107, 123, 124, 130, 131], "06848346": [103, 107, 123, 124, 130, 131], "05154399": [103, 107, 123, 124, 130, 131], "0371798": [103, 107, 123, 124, 130, 131], "05128025": [103, 107, 123, 124, 130, 131], "dydact": [103, 107, 123, 124, 130, 131], "gym_env": [103, 107, 123, 124, 130, 131, 392], "reset_kei": [103, 107, 123, 124, 130, 131, 146, 176, 181, 182, 183, 386], "multitask": [103, 107, 123, 124, 130, 131], "multiag": [103, 107, 116, 123, 124, 125, 126, 130, 131, 204, 232, 241, 250, 312], "another_reward": [103, 107, 123, 124, 130, 131], "auto_cast_to_devic": [103, 107, 123, 124, 130, 131, 387], "soon": [103, 107, 123, 124, 125, 126, 130, 131], "__sort": [103, 107, 123, 124, 130, 131], "as__": [103, 107, 123, 124, 130, 131], "normal": [103, 107, 123, 124, 130, 131, 164, 192, 206, 207, 222, 226, 229, 230, 236, 248, 249, 257, 258, 268, 272, 284, 297, 300, 347, 349, 365, 369, 371, 377, 379, 387, 393], "argmaxmodul": [103, 107, 123, 124, 130, 131], "n_ob": [103, 107, 123, 124, 130, 131, 162, 265, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 380], "n_act": [103, 107, 123, 124, 130, 131, 162, 282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 380], "ourselv": [103, 107, 123, 124, 130, 131, 376, 393], "emul": [103, 107, 123, 124, 130, 131], "epoch": [103, 107, 123, 124, 130, 131, 351, 376, 386, 387], "input_td": [103, 107, 123, 124, 130, 131], "rollout_td": [103, 107, 123, 124, 130, 131], "state_kei": [103, 107, 123, 124, 130, 131], "prevail": [103, 107, 123, 124, 130, 131, 147, 176, 204], "creator": [104, 356, 357, 363, 364, 365], "substitut": [104, 181, 192, 379], "vecnorm": [104, 365], "env_creat": [104, 374], "test_env1": 104, "_td": 104, "observation_count": [104, 393], "test_env2": 104, "sleep": [104, 393], "ps": 104, "p1": 104, "p2": 104, "9934": 104, "env_str": 105, "device_map": 105, "accross": [106, 108], "registri": 106, "asyncvectorenv": 106, "involv": [106, 108, 109, 117, 118, 127, 143, 378, 380], "pixel_observ": [106, 108, 109, 127], "pixelobservationwrapp": [106, 108, 109, 127], "adventur": [106, 108], "airraid": [106, 108, 393], "alien": [106, 108], "time_limit": 106, "timelimit": [106, 117, 118, 132, 133], "default_info_dict_read": [106, 107, 108, 123], "reader": [106, 107, 108, 123, 375], "set_info_dict_read": [106, 107, 108, 123, 378], "info_dict": [106, 107, 108, 123], "auto_register_info_dict": [106, 107, 108, 123], "multibinari": [106, 108], "multidiscret": [106, 108], "rag": [106, 108], "gym_conversion_exampl": [106, 108], "info_dict_read": [107, 123], "ignore_priv": 107, "baseinfodictread": 107, "tensordictprim": [107, 123, 221, 225, 279, 377], "succe": [107, 123], "underscor": 107, "primer": [107, 182, 221, 225, 279, 377], "halfcheetah": [107, 123, 139, 172, 374], "reward_run": [107, 123], "read_act": 107, "read_don": 107, "nonsens": 107, "fallback": 107, "broken": [107, 196], "read_ob": 107, "dictat": [107, 268, 272, 300, 374, 388], "read_reward": 107, "hoc": [107, 123, 379], "dict_read": 107, "my_info_kei": 107, "some_env": 107, "vecenv": 108, "vectorenv": 108, "secur": 109, "habitat3": 109, "ai": [109, 389], "habitatrenderpick": 109, "isaacgym": [110, 111], "isaacgymwrapp": [110, 367], "isaacgymenv": [111, 367], "webpag": 111, "isaac": 111, "essenc": [111, 378], "instadeepai": [112, 113], "2306": [112, 113], "09884": [112, 113], "snake": [112, 113], "grid": [112, 113, 334], "bodi": [112, 113], "body_st": [112, 113], "fruit_posit": [112, 113], "col": [112, 113], "head_posit": [112, 113], "tail": [112, 113], "game2048": [112, 113], "maze": [112, 113], "cleaner": [112, 113], "cvrp": [112, 113], "multicvrp": [112, 113], "minesweep": [112, 113], "rubikscub": [112, 113], "knapsack": [112, 113], "sudoku": [112, 113], "tsp": [112, 113], "connector": [112, 113], "v2": [112, 113, 128, 129, 309, 323, 324, 325, 326, 328, 329, 330, 331, 377, 393], "mmst": [112, 113], "graphcolor": [112, 113], "partli": [112, 113], "scrambl": [112, 113], "robotwarehous": [112, 113], "tetri": [112, 113], "binpack": [112, 113], "jobshop": [112, 113], "0x1fca91910": 112, "122": [112, 113, 388, 393], "0x1ff9baee0": 112, "134": [112, 113, 388], "0x1ff9ba7c0": 112, "172": [112, 113, 388], "drastic": [113, 123, 390], "rubric": [113, 164, 274], "mo": [114, 115], "minecart": [114, 115], "mo_gym": 115, "qualnam": 116, "leverag": [116, 125, 126, 374, 387, 393], "neural": [116, 125, 126, 206, 207, 245, 271, 369, 375, 376, 377, 379, 386, 387, 388, 393], "group_map": [116, 117, 118, 125, 126, 132, 133, 134, 386], "constructiuon": [116, 125, 126], "premad": [116, 117, 118, 125, 126, 132, 133, 312], "all_in_one_group": [116, 134], "agent_0": [116, 125, 126, 134, 386], "agent_1": [116, 125, 126, 134], "agent_2": [116, 125, 126, 134], "agent_3": 116, "one_group_per_ag": [116, 125, 126], "meltingpot": [117, 118], "2211": [117, 118], "13746": [117, 118], "melt": [117, 118], "pot": [117, 118], "novel": [117, 118, 380], "social": [117, 118], "familiar": [117, 118, 375, 387, 393], "unfamiliar": [117, 118], "broad": [117, 118], "cooper": [117, 118, 386, 387], "decept": [117, 118], "reciproc": [117, 118], "trust": [117, 118, 225], "stubborn": [117, 118], "substrat": [117, 118], "ml_collect": 117, "config_dict": 117, "configdict": 117, "categorical_act": [117, 118, 125, 126, 128, 129, 132, 133], "marlgroupmaptyp": [117, 118, 125, 126, 132, 133, 134, 367, 386], "agent_nam": [117, 118, 132, 133, 134], "agent_names_to_indices_map": [117, 118, 132, 133], "env_torchrl": [117, 118], "commons_harvest__open": [117, 118], "rgb": [117, 118], "144": [117, 118, 388], "192": [117, 118, 375, 388], "collective_reward": [117, 118], "ready_to_shoot": [117, 118], "88": [117, 118, 128, 129, 374, 375, 388, 389], "substrate_config": 118, "get_config": 118, "mp_env": 118, "build_from_config": 118, "default_player_rol": 118, "environn": 119, "mymbenv": [119, 205, 228], "world_model": [119, 205, 228, 293], "hidden_observ": [119, 205, 228], "mlp": [119, 205, 206, 207, 209, 210, 211, 212, 218, 221, 225, 228, 232, 233, 254, 260, 279, 286, 288, 369, 375, 379, 380, 383, 385, 389, 392], "worldmodelwrapp": [119, 205, 228], "activation_class": [119, 205, 206, 207, 209, 210, 211, 212, 217, 218, 226, 228, 231, 232, 375, 379, 386, 387, 392], "relu": [119, 205, 213, 228, 236, 281], "activate_last_lay": [119, 205, 212, 226, 228], "sail": [120, 121], "sg": [120, 121], "10558": [120, 121], "readthedoc": 120, "en": 120, "python_interfac": 120, "envpoolmixin": 121, "env_bas": 121, "task_id": 121, "env_typ": 121, "gym_reset_return_info": 121, "envpool_env": 121, "www": [122, 229, 230], "fetch_openml": 122, "106": [122, 388], "my_env_fun": [123, 130], "custom_attribute_list": [123, 130], "custom_attribut": [123, 130], "custom_method_list": [123, 130], "custom_method": [123, 130], "deploi": [123, 130, 143], "slight": [123, 130, 375], "share_individual_td": [123, 130], "shared_memori": [123, 130], "policy_proof": [123, 130], "ll": [123, 130, 219, 220, 223, 224, 374, 375, 376, 377, 378, 379, 380, 381, 383, 387, 393], "serial_for_singl": [123, 130, 375], "circular": [123, 130, 374], "list_of_kwarg": [123, 130], "com_veloc": [123, 130], "head_height": [123, 130], "joint_angl": [123, 130], "torso_vert": [123, 130], "stringent": [123, 376, 386, 387], "inter": 123, "penv": 123, "env_fix": 123, "influenc": 123, "thumb": [123, 376], "myenv": [123, 143, 151, 154], "pipe": 123, "update_kwarg": [123, 130], "th": [124, 158, 187, 219, 223, 388], "thdot": [124, 388], "max_spe": [124, 388], "max_torqu": [124, 388], "gen_param": [124, 388], "gravit": [124, 388], "torqu": [124, 388], "pettingzoo": [125, 126, 386, 387], "pet": [125, 126], "zoo": [125, 126], "__": [125, 126], "aecenv": [125, 126], "use_mask": [125, 126], "dead": [125, 126], "done_on_ani": [125, 126, 386], "compulsori": [125, 126], "adversary_0": [125, 126, 386], "adversari": [125, 126, 386], "vectoris": [125, 126, 219, 220, 223, 224], "sisl": 125, "multiwalker_v9": 125, "return_st": [125, 126], "aec": [125, 126], "n_piston": [125, 126], "pistonball_v6": [125, 126], "piston": [125, 126], "piston_0": [125, 126], "piston_1": [125, 126], "piston_20": [125, 126], "tictactoe_v3": [125, 126], "player": [125, 126, 131], "player_1": [125, 126], "player_2": [125, 126], "butterfli": 126, "parallel_env": [126, 374, 392, 393], "vikashplu": 127, "wiki": 127, "06828": 127, "from_depth": 127, "smacv2": [128, 129], "starcraft": [128, 129], "challeng": [128, 129, 378, 388, 389], "10gen_terran": [128, 129], "10gen_zerg": [128, 129], "10gen_protoss": [128, 129], "3m": [128, 129], "8m": [128, 129, 389], "25m": [128, 129], "5m_vs_6m": [128, 129], "8m_vs_9m": [128, 129], "10m_vs_11m": [128, 129], "27m_vs_30m": [128, 129], "mmm": [128, 129], "mmm2": [128, 129], "2s3z": [128, 129], "3s5z": [128, 129], "3s5z_vs_3s6z": [128, 129], "3s_vs_3z": [128, 129], "3s_vs_4z": [128, 129], "3s_vs_5z": [128, 129], "1c3s5z": [128, 129], "2m_vs_1z": [128, 129], "corridor": [128, 129], "6h_vs_8z": [128, 129], "2s_vs_1sc": [128, 129], "so_many_banel": [128, 129], "bane_vs_ban": [128, 129], "2c_vs_64zg": [128, 129], "old": [128, 129, 297, 393], "smac": [128, 129], "map_nam": [128, 129], "176": [128, 129, 388, 393], "battle_won": [128, 129], "dead_al": [128, 129], "dead_enemi": [128, 129], "episode_limit": [128, 129], "322": [128, 129, 388], "Or": [128, 129, 231], "procedur": [128, 129], "distribution_config": [128, 129], "n_unit": [128, 129], "n_enemi": [128, 129], "team_gen": [128, 129], "dist_typ": [128, 129], "weighted_team": [128, 129], "unit_typ": [128, 129], "marin": [128, 129], "maraud": [128, 129], "medivac": [128, 129], "exception_unit_typ": [128, 129], "start_posit": [128, 129], "surrounded_and_reflect": [128, 129], "map_x": [128, 129], "map_i": [128, 129], "capability_config": [128, 129], "131": [128, 129, 388], "starcraft2env": 129, "tic": 131, "tac": 131, "toe": 131, "single_play": 131, "player1": 131, "desired_batch_s": 131, "board": 131, "player0": 131, "proroklab": [132, 133], "vectorizedmultiagentsimul": [132, 133], "2207": [132, 133], "03530": [132, 133], "basescenario": 132, "descript": [132, 142, 375, 376], "perfrom": [132, 133], "defaultt": 132, "continuous_act": [132, 133, 332, 386, 387], "repositiori": 132, "sparsiti": 132, "unbatched_action_spec": [132, 133, 387], "unbatched_observation_spec": [132, 133], "unbatched_reward_spec": [132, 133], "het_spec": [132, 133], "het_specs_map": [132, 133], "flock": [132, 133, 332], "agent_collision_rew": [132, 133], "agent_distance_rew": [132, 133], "ca": 134, "environment4": 134, "get_group_map": 134, "sumbodul": 135, "model_bas": [136, 137, 205, 228], "out_keys_inv": [136, 149, 151, 152, 154, 164, 165, 166, 170, 171, 178, 185, 388], "decod": [136, 237], "model_based_env": [136, 292], "dreamerenv": [136, 292, 367], "model_based_env_ev": 136, "num_interv": 139, "out_action_kei": 139, "samplingstrategi": 139, "optino": 139, "intenum": 139, "interv": [139, 333, 334, 343, 353, 375, 388], "action_disc": 139, "transform_input_spec": [139, 143, 150, 151, 152, 153, 164, 166, 170, 171, 176, 180, 181, 182, 185, 187, 189, 194], "masker": 140, "tensor_spec": [140, 195, 204, 289, 290, 300, 302], "maskedenv": 140, "ones_lik": 140, "scatter": 140, "fill_float": 142, "fill_int": 142, "fill_bool": 142, "someenvclass": 142, "autoresetenv": 142, "argumet": 142, "fooenv": 142, "sign": [142, 178, 314, 386], "envtyp": 142, "reshape_fn": 143, "reset_func": 143, "environmt": 143, "request": [143, 169], "tensordict_batch_s": 143, "tensordict_reset": [143, 388], "transform_env_batch_s": [143, 150, 185, 194], "transform_output_spec": [143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 194], "transform_observation_spec": [143, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 164, 166, 170, 171, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 191, 192, 194, 388], "transform_reward_spec": [143, 144, 149, 150, 151, 152, 156, 162, 170, 171, 174, 175, 176, 177, 178, 180, 185, 187, 194], "transformfull_done_spec": [143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 194], "biner": 144, "burn_in": 145, "burn": 145, "date": [145, 337], "retur": 145, "burnt": 145, "gru_modul": [145, 221, 279], "input_s": [145, 219, 220, 221, 223, 224, 225, 279, 377], "hidden_s": [145, 219, 220, 221, 223, 224, 225, 279, 377], "set_recurrent_mod": [145, 221, 225, 377], "burn_in_transform": 145, "gru": [145, 182, 220, 221, 279], "num_lay": [145, 219, 221, 223, 225, 237, 238, 279], "86": [145, 374, 375, 388], "3008": [145, 375], "0344": 145, "padding_valu": [146, 229, 230], "as_invers": 146, "movement": 146, "1312": [146, 375], "5602": 146, "unsqueezetransform": [146, 388, 390], "consumpt": [146, 367], "followin": 146, "pictur": 146, "pixels_trsf": [146, 390], "grayscal": [146, 375, 377, 390, 393], "data_exclud": [146, 390], "del_kei": [147, 188, 385, 388], "unsqueeze_if_oor": 147, "observation_posit": 147, "observation_veloc": 147, "key1": [147, 342, 350], "key2": [147, 342, 350], "center": [148, 334], "width": [148, 172], "scalar": [149, 174, 210, 212, 234, 235, 257, 258, 262, 263, 266, 267, 278, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 312, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 369, 375, 380, 388], "permit": [149, 158, 187, 282, 284, 297, 300, 302], "rewardsc": [150, 186, 374, 375, 377], "rewardclip": 150, "transformed_env": [150, 185, 186, 378], "transform_env_devic": [150, 152, 185, 194], "dtype_in": 151, "dtype_out": 151, "scan": [151, 154, 273, 274], "resp": [151, 154], "not_transform": [151, 154], "constructedw": [151, 154], "orig_devic": 152, "unspecifi": 152, "transform_done_spec": [152, 185, 194], "num_actions_effect": 153, "max_act": 153, "include_forward": 153, "num_act": [153, 290, 379], "action_out": 153, "_call": [153, 158, 388], "eol_kei": 155, "lives_kei": 155, "eol_attribut": 155, "unwrap": 155, "breakout": 155, "210": [155, 166, 388], "160": [155, 166, 375, 388], "eol_transform": 155, "eol": 155, "dqnloss": [155, 282, 283, 285, 288, 290, 291, 292, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 312, 358, 367, 370, 375, 377, 383], "register_kei": 155, "loss_or_advantag": 155, "lossmodul": [155, 351, 360, 361, 367, 370], "valueestimatorbas": [155, 298, 367], "excluded_kei": 156, "finit": [157, 379, 390], "first_dim": 158, "last_dim": 158, "allow_positive_dim": [158, 187], "frameskip": 158, "repeatedli": [159, 376, 387], "init_kei": [161, 265], "tracker": 161, "pi_curr": 162, "pi_0": 162, "overfit": 162, "probabilist": [162, 268, 367, 376, 392], "get_dist": [162, 272, 273], "mod": [162, 221, 225, 265, 275, 377, 383], "normalparamextractor": [162, 369, 376, 379, 387], "probabilisticactor": [162, 254, 255, 256, 259, 282, 283, 287, 289, 290, 296, 299, 300, 301, 302, 303, 305, 306, 369, 374, 376, 379, 386, 387], "tanhnorm": [162, 254, 255, 256, 268, 274, 282, 283, 296, 300, 301, 302, 303, 305, 306, 367, 376, 387, 392], "return_log_prob": [162, 254, 255, 256, 268, 272, 274, 302, 369, 376, 379, 386, 387, 392], "apply_": 162, "copy_": [162, 374], "formulat": 162, "diverg": [162, 221, 225, 268, 272, 293, 297], "noop": [163, 392], "trial": 163, "standard_norm": [164, 175, 192, 374, 375, 377], "affin": [164, 175, 192], "layer": [164, 192, 206, 207, 209, 210, 215, 217, 219, 220, 221, 223, 224, 225, 226, 231, 232, 234, 235, 237, 238, 245, 246, 252, 264, 275, 369, 375, 376, 377, 379, 386, 389], "epsilon": [164, 257, 258, 262, 263, 266, 267, 304, 349, 375, 376, 377, 379], "recover": 164, "set_default_tensor_typ": 164, "doubletensor": 164, "isclos": 164, "next_ob": [164, 314, 315, 316, 317, 392], "init_stat": [164, 374, 375, 376, 377], "3752e": 164, "5087e": 164, "9294e": 164, "9636": 164, "5608": 164, "6408": 164, "num_it": [164, 375, 376], "reduce_dim": [164, 374, 375, 376, 377], "cat_dim": [164, 374, 375, 376, 377], "keep_dim": [164, 375, 377], "statist": [164, 192, 302, 365, 374, 375, 376, 393], "gaussian": [164, 182, 205, 228, 234, 235, 240, 257, 258, 376, 386], "empir": [164, 205, 228, 268, 272, 374, 376, 387], "3d": [164, 206], "third": [164, 261, 386, 387], "reorder": 166, "in_keys_in": 166, "channel": [166, 184, 231, 237, 238, 375], "r3m": [168, 389], "resnet": [168, 188, 190], "visual": [168, 188, 190, 334, 376, 386, 388], "embed": [168, 188, 189, 190, 209, 241, 253, 254, 255, 256, 271, 276, 389], "ego4d": [168, 188, 190], "univers": [168, 188, 190, 378], "suraj": [168, 188], "nair": [168, 188], "aravind": [168, 188], "rajeswaran": [168, 188], "vikash": [168, 188, 190], "kumar": [168, 188, 190], "chelsea": [168, 188], "finn": [168, 188], "abhinav": [168, 188], "gupta": [168, 188], "2203": [168, 188, 228, 389], "12601": [168, 188, 389], "_init": [168, 188, 374], "resnet50": [168, 190, 389], "model_nam": [168, 188, 190, 337], "resnet34": 168, "resnet18": 168, "r3m_vec": [168, 389], "stack_imag": [168, 190], "tread": [168, 190], "separet": [168, 190], "hub": [168, 190, 378, 389], "resnet50_weight": [168, 190], "imagenet1k_v1": [168, 190], "download_path": [168, 190], "tensor_pixels_kei": [168, 190], "sub_seq_len": 169, "sample_dim": [169, 374], "primarili": [169, 379], "hesit": 169, "robust": 169, "mix": [169, 241, 250, 312, 374, 386, 387], "improp": 169, "dummyenv": 170, "another_oth": 170, "other_reward": 170, "create_copi": 171, "stuff": [171, 381], "newnam": 171, "r2g": 173, "reward_to_go": 173, "bernoulli_": 173, "9010": 173, "9404": [173, 320], "9701": [173, 320], "9900": [173, 320], "0000": [173, 183, 262, 263, 275, 320, 376, 377, 388, 392], "crash": 173, "clamp_min": 174, "clamp_max": 174, "clip_min": 174, "clip_max": 174, "episode_": 176, "reward1": 176, "reward2": 176, "episode_reward": [176, 386, 387], "keep_reward": 177, "keep_don": 177, "logical_or": 178, "squeeze_dim": 179, "step_count_kei": 180, "update_don": 180, "disjunct": 180, "recognis": 180, "target_return": 181, "subtract": 181, "default_valu": [182, 279, 377], "unit": [182, 205, 217, 219, 220, 237, 238, 243, 244, 376], "transfomedenv": 182, "mykei": 182, "__unless": 182, "exists__": 182, "get_primers_from_modul": [182, 221, 225, 367], "10th": 183, "0216": 183, "1149": 183, "1990": 183, "2749": 183, "3281": 183, "9290": 183, "3702": 183, "8978": 183, "from_int": 184, "shape_toler": 184, "permuat": 184, "ri": 184, "principl": 185, "cattransform": 185, "notabl": 185, "rewardsum": [185, 194, 203, 386, 387], "smoothli": 186, "add_1": 186, "cache_spec": 186, "set_missing_toler": 186, "keyerror": 186, "unsqueeze_dim": [187, 388], "danger": 187, "vc1": 188, "vc1_vec": 188, "untrain": 188, "make_noload_model": 188, "vip": [189, 190, 389], "implicit": [190, 289, 296, 390], "jason": 190, "ma": 190, "shagun": 190, "sodhani": 190, "dinesh": 190, "jayaraman": 190, "osbert": 190, "bastani": 190, "ami": 190, "zhang": 190, "vip_vec": 190, "final_nam": 191, "sb3": 191, "terminal_obs_read": 191, "truli": [191, 392], "till": 191, "shared_td": 192, "decai": [192, 257, 258, 262, 304, 349, 374, 375, 377, 393], "9999": [192, 388], "0001": [192, 217, 236, 376, 388], "to_observation_norm": 192, "frozen_copi": 192, "race": 192, "underflow": [192, 349], "build_td_for_shared_vecnorm": 192, "memmori": 192, "queue": [192, 390], "td_share": 192, "unfreez": 192, "train_env": 192, "eval_env": 192, "state_dim": [193, 208, 213, 240, 243, 244, 259], "action_dim": [193, 208, 209, 211, 213, 240, 259, 374, 385], "gsde": [193, 301, 365], "gsdemodul": 193, "rb_transform": 194, "resist": 194, "insensit": 194, "sensit": [194, 375], "_orig": 194, "95": [194, 228, 308, 374, 375, 376, 377, 388], "tdreset": [194, 385], "window": [194, 265, 386, 390, 392], "edit": [194, 381], "cube": 195, "check_dtyp": 196, "discrep": [196, 282, 284, 285, 286, 297, 300, 302, 312], "rng": [196, 388], "revert": [196, 379, 390], "unsqueeze_null_shap": 200, "probabilistictdmodul": [201, 202, 226, 268, 272, 313, 347], "next_tensordict": 203, "keep_oth": [203, 388], "exclude_reward": 203, "exclude_don": 203, "exclude_act": 203, "next_": 203, "funtion": 203, "_stepmdp": 203, "write_full_fals": 204, "_terminated_or_trunc": 204, "entropi": [205, 282, 283, 284, 289, 290, 296, 297, 299, 300, 301, 303, 305, 306, 387], "botev": 205, "2013": 205, "cem": 205, "plan": [205, 227, 228], "varianc": [205, 222, 236, 248, 249, 370, 374, 376, 387], "k": [205, 219, 220, 223, 224], "maximis": [205, 209, 211, 228, 369, 375, 376, 387], "modelbasedenv": [205, 228], "planning_horizon": [205, 228], "optim_step": [205, 228, 375, 383], "mpc": [205, 227, 228], "num_candid": [205, 228], "candid": [205, 228], "top_k": [205, 228], "modelbasedenvbas": [205, 227, 228, 367], "safemodul": [205, 227, 254, 256, 272, 282, 283, 289, 290, 296, 300, 301, 302, 303, 305, 306, 356, 357, 361, 367, 392], "num_cel": [206, 207, 209, 210, 211, 212, 217, 218, 221, 225, 226, 231, 232, 254, 279, 375, 376, 377, 379, 380, 383, 386, 387, 392], "elu": [206, 207, 209, 210, 211, 212, 217, 218, 231, 375, 392], "activation_kwarg": [206, 207, 226], "norm_class": [206, 207, 209, 210, 226], "norm_kwarg": [206, 207, 226], "bias_last_lay": [206, 207, 209, 210, 211, 212, 218, 226], "aggregator_class": [206, 207, 209, 210, 375, 377, 392], "squashdim": [206, 207, 209, 218, 231, 392], "aggregator_kwarg": [206, 207, 209, 210, 375, 377], "squeeze_output": [206, 207, 209, 210, 375, 377], "cell": [206, 207, 219, 220, 221, 223, 224, 225, 226, 231, 232, 376, 378, 379, 380, 381, 382, 383], "kernel": [206, 207, 218, 231], "cnet": [206, 207], "conv3d": 206, "lazyconv2d": [207, 209, 210, 218, 231, 392], "transformer_config": [208, 240, 259], "decisiontransform": [208, 240], "dtconfig": [208, 213, 240], "2202": [208, 213, 299], "05607": [208, 213, 299], "return_to_go": [208, 213, 240, 259], "conv_net_kwarg": [209, 210], "mlp_net_kwarg": [209, 210, 211], "use_avg_pool": [209, 210], "WITH": [209, 210, 211, 212, 266, 267, 304], "1509": [209, 210, 211, 212, 228, 266, 267, 286, 295, 304, 388], "02971": [209, 210, 211, 212, 266, 267, 304], "reus": [209, 341], "convnet": [209, 210, 218, 231, 377, 379, 392], "ndims_in": 209, "avgpool": [209, 210], "lazylinear": [209, 210, 211, 212, 218, 226, 369, 376, 379, 388, 389, 392], "2304": [209, 375], "adaptiveavgpool2d": [210, 375, 377], "output_s": [210, 375, 377], "squeeze2dlay": 210, "400": [211, 212, 382, 387, 388, 390], "mlp_net_kwargs_net1": 212, "mlp_net_kwargs_net2": 212, "mlp1": 212, "mlp2": 212, "decion": 213, "desdescrib": 213, "n_embd": 213, "n_layer": [213, 219, 223], "n_head": 213, "n_inner": 213, "n_posit": 213, "resid_pdrop": 213, "attn_pdrop": 213, "gpt2config": 213, "atol": [214, 247], "rtol": [214, 247], "batch_shap": [214, 247], "event_shap": [214, 247], "absolut": [214, 247, 374], "densiti": [214, 229, 230, 239, 249], "mass": [214, 229, 230, 239, 249, 388], "rsampl": [214, 230, 239, 272], "sample_shap": [214, 229, 230, 239], "softmax": [215, 230, 239, 260, 261], "var_num": [216, 242, 260, 261, 270], "action_value_kei": [216, 242, 260, 261, 269, 270, 298, 312], "action_mask_kei": [216, 242, 260, 261, 262, 263, 269, 270], "perspect": [216, 261, 291, 376], "1707": [216, 261, 291, 300], "06887": [216, 261, 291], "mult": [216, 232, 242, 260, 261, 269, 270], "tensordict_modul": [216, 219, 220, 223, 224, 242, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 285, 289, 290, 296, 300, 301, 302, 303, 305, 306, 369], "nbin": [216, 260, 369], "customdistributionalqv": 216, "log_softmax": [216, 260], "from_modul": [216, 271, 274, 392], "one_hot": [216, 230, 242], "qvalue_actor": [216, 242, 260, 269, 369], "to_modul": [216, 271, 274, 374, 392], "std_bia": 217, "std_min_val": 217, "belief": [217, 237, 243, 244], "1912": [217, 292, 293, 294], "01603": [217, 292, 293, 294], "softplu": [217, 236, 278, 280, 281], "out_features_valu": 218, "cnn_kwarg": [218, 375], "mlp_kwarg": [218, 375], "duel": 218, "cnn": [218, 231, 375, 379, 392], "06581": 218, "batch_first": [219, 221, 223, 225, 377], "bidirect": [219, 223, 377], "cudnn": [219, 220, 223, 224, 377], "rnn": [219, 220, 223, 224, 377, 379], "device_count": [219, 220, 223, 224, 393], "n_in": [219, 220, 223, 224], "n_out": [219, 220, 223, 224], "h0": [219, 220, 223, 224], "h1": [219, 220, 223, 224], "call_gru": [219, 220], "h_out": [219, 220, 223, 224], "batched_cal": [219, 220, 223, 224], "gate": [219, 220, 223], "r_t": 219, "sigma": [219, 220, 222, 223, 224, 248, 249, 257, 258, 266, 267, 376, 386], "w_": [219, 220, 223, 224], "ir": [219, 220], "x_t": [219, 223], "b_": [219, 220, 223, 224], "hr": [219, 220, 223], "h_": [219, 220, 223], "z_t": 219, "iz": [219, 220], "hz": [219, 220], "n_t": 219, "odot": [219, 220, 223, 224], "hn": [219, 220, 223], "h_t": [219, 223], "sigmoid": [219, 220, 223, 224], "hadamard": [219, 220, 223, 224], "multilay": [219, 223], "_t": [219, 223, 387, 388], "ge": [219, 223], "bernoulli": [219, 223], "b_ih": [219, 220, 223, 224, 225], "b_hh": [219, 220, 223, 224, 225], "seq": [219, 221, 223, 225, 265, 377, 383, 385], "h_0": [219, 223, 224], "unbatch": [219, 223], "pack_padded_sequ": [219, 223], "pack_sequ": [219, 223], "num": [219, 223, 383], "_layer": [219, 223], "_size": [219, 220, 223, 224], "h_n": [219, 223], "packedsequ": [219, 223], "weight_ih_l": [219, 223], "learnabl": [219, 220, 223, 224], "w_ir": 219, "w_iz": 219, "w_in": 219, "num_direct": [219, 223], "weight_hh_l": [219, 223], "w_hr": 219, "w_hz": 219, "w_hn": 219, "bias_ih_l": [219, 223], "b_ir": 219, "b_iz": 219, "b_in": 219, "bias_hh_l": [219, 223], "b_hr": 219, "b_hz": 219, "b_hn": 219, "mathcal": [219, 220, 223, 224], "sqrt": [219, 220, 223, 224, 266, 267], "frac": [219, 220, 223, 224, 376], "seq_len": [219, 223], "subtli": 219, "matrix": [219, 223, 234, 235], "contrast": [219, 295, 390], "hx": [219, 220, 223, 224], "lstmcell": [220, 225], "gru_cel": 220, "z": 220, "weight_ih": [220, 224], "weight_hh": [220, 224], "bias_ih": [220, 224], "bias_hh": [220, 224], "rocm": [220, 224], "embedd": [221, 225], "grucel": [221, 271], "python_bas": [221, 225], "recurrent_st": [221, 225, 279, 377], "custom_kei": [221, 225], "recurrent_mod": [221, 225], "make_tensordict_prim": [221, 225, 377], "rs": [221, 374], "gru_module_train": 221, "policy_train": [221, 225], "traj_td": [221, 225], "policy_infer": [221, 225], "td_inf": [221, 225], "assert_clos": [221, 225], "upscal": [222, 248, 249], "tanh_loc": [222, 248, 249], "event_dim": [222, 247, 248], "poor": [222, 248, 249], "explos": [222, 248, 249], "switch": [222, 249, 332], "formula": [222, 248, 249, 282, 284, 297, 300, 370, 376], "proj_siz": 223, "c0": [223, 224], "c1": [223, 224], "call_lstm": [223, 224], "c_out": [223, 224], "i_t": 223, "ii": [223, 224], "hi": [223, 224], "f_t": 223, "hf": [223, 224], "g_t": 223, "ig": [223, 224], "hg": [223, 224], "o_t": 223, "ho": [223, 224], "c_t": 223, "c_": 223, "forget": 223, "1402": 223, "1128": 223, "c_0": [223, 224], "proj": 223, "c_n": 223, "w_ii": 223, "w_if": 223, "w_ig": 223, "w_io": 223, "w_hi": 223, "w_hf": 223, "w_hg": 223, "w_ho": 223, "b_ii": 223, "b_if": 223, "b_ig": 223, "b_io": 223, "b_hi": 223, "b_hf": 223, "b_hg": 223, "b_ho": 223, "weight_hr_l": 223, "_revers": 223, "analog": [223, 379], "cn": 223, "lstm_cell": 224, "h_1": 224, "c_1": 224, "time_step": [224, 265], "cx": 224, "correspont": 225, "recurrent_state_h": [225, 377], "recurrent_state_c": [225, 377], "triplet": [225, 269, 270], "lstm_modul": 225, "rs_h": 225, "rs_c": 225, "hidden0": 225, "hidden1": 225, "single_bias_last_lay": 226, "layer_class": 226, "layer_kwarg": 226, "perceptron": [226, 379], "aslo": 226, "42": [226, 282, 283, 285, 289, 296, 303, 375, 388], "noisylinear": [226, 234, 367, 375], "noisylazylinear": [226, 367], "mpcplanner": 227, "tensordict_out": [227, 393], "mppi": 228, "covari": 228, "william": [228, 302], "aldrich": 228, "theodor": 228, "01149": 228, "hansen": 228, "wang": 228, "su": 228, "04955": 228, "valueoper": [228, 254, 255, 256, 282, 283, 284, 285, 290, 296, 297, 300, 301, 302, 303, 305, 306, 361, 369, 374, 376, 380], "tdlambdaestim": [228, 367, 374], "value_net": [228, 286, 288, 302, 314, 315, 316, 317, 376, 379, 380, 383], "adv": 228, "lmbda": [228, 308, 314, 317, 319, 325, 326, 327, 330, 331, 370, 374, 376, 387], "value_network": [228, 285, 286, 288, 289, 291, 296, 303, 314, 315, 316, 317, 370, 374, 376, 380, 383, 386], "temperatur": [228, 283, 289, 296], "neg_inf": [229, 230], "inf": [229, 230], "api_doc": [229, 230], "tf_agent": [229, 230], "event": [229, 230, 239, 323, 324, 325, 326, 328, 329, 330, 331, 390], "unnorm": [229, 230, 239], "sparse_mask": [229, 230], "dens": [229, 230], "0831": [229, 230], "1203": [229, 230], "0928": [229, 230], "1972": [229, 230], "grad_method": [230, 239], "reparamgradientstrategi": [230, 239], "passthrough": [230, 239], "relaxedonehot": [230, 239], "zeros_lik": [230, 388], "sample_non_valid": 230, "share_param": [231, 232, 233, 386, 387], "get_stateful_net": [231, 232, 233, 298, 369, 370], "from_stateful_net": [231, 232, 233, 298, 370], "homogen": [231, 232, 386, 387], "agent_network": [231, 232], "modulelist": [231, 232, 386, 392], "2592": [231, 375], "decentr": 231, "n_agent_input": [232, 233, 386, 387], "n_agent_output": [232, 233, 386, 387], "lazili": [232, 388], "toech": 232, "centalis": 232, "shown": [232, 369, 385, 386, 387, 390], "agent_dim": 233, "vmap_random": [233, 298, 370], "stateful_net": [233, 298], "Such": [233, 298], "deepcopi": [233, 298, 386], "multiagentmlp": [233, 386, 387], "snet": 233, "hasattr": [233, 374], "kaiming_normal_": 233, "reset_paramet": 233, "std_init": [234, 235], "initialize_paramet": 234, "isol": [234, 298], "1706": [235, 250], "10295v3": 235, "induc": 235, "aid": 235, "scale_map": 236, "biased_softplus_1": 236, "scale_lb": [236, 243, 244], "module_norm": 236, "1803": [237, 238, 241], "10122": [237, 238], "rnn_hidden": 237, "latent": 238, "excacli": 239, "inres": 240, "mu": [240, 266, 267, 376], "state_shap": [241, 312], "mixing_embed_dim": [241, 312], "qmix": [241, 386, 387], "mixer": [241, 250, 312], "monoton": 241, "hyper": 241, "11485": 241, "qmixerloss": [241, 250], "qmix_vdn": [241, 250], "vdn": [241, 250], "greedi": [242, 261, 262, 263, 270, 375, 377, 379], "hidden_dim": [243, 244], "posterior": [243, 293], "rssm": [243, 244, 293], "1811": [243, 244], "04551": [243, 244], "obs_embed": 243, "rnn_hidden_dim": 244, "dream": 244, "tanhtransform": 248, "get_mod": 248, "adam": [248, 374, 375, 376, 377, 380, 383, 386, 387, 388], "decomposit": 250, "05296": 250, "hide": [251, 376, 386, 387], "satisfi": [251, 369], "vmap_dim": 251, "lam": 251, "sample_in": 251, "sample_in_td": 251, "vm": 251, "translat": [253, 268], "character": [253, 260, 268, 269, 271, 390], "overflow": [253, 260, 261, 268, 269, 270, 271, 272], "td_modul": [253, 254, 255, 256, 268, 271, 272, 274, 276, 379, 392], "3635": 253, "0340": 253, "1476": 253, "3911": [253, 388], "1664": [253, 375, 388], "5455": 253, "2247": 253, "4583": 253, "2916": 253, "2160": [253, 374], "5337": 253, "5193": 253, "grad_fn": [253, 262, 263, 392], "addmmbackward0": 253, "actorvalueoper": [254, 369, 379], "get_policy_oper": [254, 255, 256, 284, 297, 300, 369], "standalon": [254, 255, 256, 379], "tdmodul": [254, 255, 256, 361], "get_critic_oper": 254, "common_oper": [254, 256], "policy_oper": [254, 255, 256], "value_oper": [254, 255, 256], "normalparamwrapp": [254, 255, 256, 268, 274, 282, 283, 290, 296, 300, 301, 302, 303, 305, 306, 367, 392], "module_hidden": [254, 256], "td_module_hidden": [254, 256], "module_act": [254, 256], "td_module_act": [254, 255, 256], "module_valu": [254, 255, 256], "td_module_valu": [254, 255, 256], "state_action_valu": [254, 276, 283, 289, 296, 303, 313, 361, 369, 374, 386, 392], "td_clone": [254, 255, 256], "tensordictmodulewrapp": [254, 356, 357, 361], "get_policy_head": [254, 255, 256], "safesequenti": [254, 255, 256, 312], "head": [254, 256, 279, 284, 297, 300], "get_value_head": [254, 255, 256], "get_value_oper": [254, 255, 256, 284, 297, 300], "action_modul": 255, "state_valu": [255, 256, 276, 284, 289, 296, 297, 300, 301, 303, 314, 315, 316, 317, 319, 321, 323, 325, 327, 328, 330, 369, 374, 376, 387], "actorcriticoper": [256, 284, 297, 300, 369, 379], "embeddig": 256, "refet": 256, "actorcriticwrapp": [256, 369, 374], "po": [257, 258, 263], "sigma_init": [257, 258, 386], "sigma_end": [257, 258, 386], "annealing_num_step": [257, 258, 262, 263, 266, 267, 374, 375, 377, 379, 383, 386], "captur": [257, 258, 262, 263, 266, 267], "omiss": [257, 258, 262, 263, 266, 267], "ommit": [257, 258, 262, 263, 266, 267], "inferec": 259, "set_tensor_kei": 259, "dt_inference_wrapp": 259, "baz": 259, "inference_context": 259, "obs_dim": 259, "tanhdelta": [259, 367, 374, 386], "dtactor": 259, "actor_modul": [259, 392], "dist_class": 259, "dist_kwarg": 259, "distribution_kwarg": [259, 268, 272, 376, 386, 387], "inference_actor": 259, "sequence_length": 259, "mask_context": 259, "out_act": 259, "qvaluemodul": [260, 269, 312, 377, 379, 383], "distributionaldqnnet": 260, "make_log_softmax": 260, "my_action_valu": [261, 270], "chanc": 261, "thid": 261, "eps_init": [262, 263, 266, 267, 375, 377, 379, 383], "eps_end": [262, 263, 266, 267, 375], "explorative_polici": [262, 263, 266, 267], "9055": [262, 263, 388], "9277": [262, 263], "6295": [262, 263], "2532": [262, 263], "addbackward0": [262, 263], "lmheadmodel": 264, "actor_head": [264, 284, 297, 300], "base_model": 264, "lm_head": 264, "macro": 265, "lookahead": 265, "n_action": [265, 283, 286, 288, 299, 303], "reshape_cat": 265, "actor_bas": 265, "obs_cat": 265, "obs_cat_reshap": 265, "action_orig": 265, "counter": [265, 344, 371], "ornstein": [266, 267, 374], "uhlenbeck": [266, 267, 374], "ou": [266, 267, 374], "correl": [266, 267], "noise_t": [266, 267], "noise_": [266, 267], "theta": [266, 267, 376, 388], "sigma_t": [266, 267], "sigma_": [266, 267], "anneal": [266, 267, 375, 379, 386], "ou_prev_nois": [266, 267], "ou_step": [266, 267], "x0": [266, 267], "sigma_min": [266, 267], "n_steps_ann": [266, 267], "is_init_kei": [266, 267], "_ou_prev_nois": [266, 267], "_ou_step": [266, 267], "default_interaction_typ": [268, 272, 379], "interaction_typ": [268, 272], "datacollectorbas": [268, 353, 356, 357, 361, 367], "set_interaction_typ": [268, 272], "compositedistribut": [268, 379], "distribution_map": 268, "name_map": 268, "cache_dist": [268, 272], "n_empirical_estim": [268, 272], "compound": [268, 379], "categ": 268, "chose": 270, "functionalmodul": 271, "functionalmodulewithbuff": 271, "td_fmodul": 271, "td_function": 271, "td_state": 271, "params_repeat": 271, "td_vmap": [271, 274], "random_sampl": [271, 272], "suppli": 272, "fist": 272, "log_prob_kei": [272, 387], "probabilistictensordictsequenti": [273, 282, 284, 297, 300, 302, 356, 357, 392], "partial_toler": [273, 274, 385], "who": [273, 274], "AND": [273, 274], "tensordictsequenci": 274, "tensordictsequ": 274, "safeprobabilisticmodul": [274, 369], "spec1": 274, "net1": 274, "module1": 274, "td_module1": 274, "spec2": 274, "module2": 274, "td_module2": 274, "clamp": [275, 293, 351, 386, 388], "boundari": [275, 376, 386, 387], "resolut": 275, "9944": 275, "9991": 275, "3020": 275, "2299": [275, 388], "5418": 275, "2989": 275, "6849": 275, "3169": 275, "2690": 275, "9649": [275, 388], "5686": 275, "8602": 275, "0315": 275, "8455": [275, 388], "6027": 275, "4746": 275, "7843": 275, "7782": 275, "2111": 275, "5115": 275, "4687": 275, "5760": 275, "custommodul": 276, "imaginari": 277, "imagin": 277, "transition_model": 277, "get_reward_oper": 277, "get_transition_model_oper": 277, "min_val": [278, 281], "_bia": 278, "surject": 281, "expln": 281, "biased_softplu": [281, 367], "beggin": 281, "biased_softplus_": 281, "syntax": [281, 374], "met": [281, 386, 388], "1602": 282, "01783v2": 282, "actor_network": [282, 283, 284, 285, 287, 289, 290, 296, 297, 299, 300, 301, 302, 303, 305, 306, 370, 374, 376, 380, 386, 387], "critic_network": [282, 284, 297, 300, 302, 376, 387], "entropy_bonu": [282, 284, 297, 300, 376], "favour": [282, 284, 297, 300], "samples_mc_entropi": [282, 284, 297, 299, 300], "mont": [282, 284, 297, 300, 374], "carlo": [282, 284, 297, 300, 374], "entropy_coef": [282, 284, 297, 300, 376, 387], "critic_coef": [282, 284, 297, 300, 376], "loss_critic_typ": [282, 284, 297, 300, 302, 376], "l1": [282, 284, 285, 286, 290, 297, 300, 301, 302, 305, 306, 309, 312, 369, 374], "l2": [282, 284, 285, 286, 287, 288, 290, 293, 294, 297, 300, 301, 302, 305, 306, 309, 312, 374, 386], "smooth_l1": [282, 283, 284, 285, 286, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 309, 312, 376], "separate_loss": [282, 284, 285, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306], "propag": [282, 284, 285, 289, 290, 296, 297, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317, 376, 386, 387], "advantage_kei": [282, 284, 297, 300, 302, 314, 315, 316, 317], "value_target_kei": [282, 284, 297, 300, 302, 314, 315, 316, 317], "value_target": [282, 284, 297, 300, 302, 314, 315, 316, 317, 376, 387], "ddp": [282, 284, 297, 300, 302], "fsdp": [282, 284, 297, 300, 302], "divid": [282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 299, 300, 301, 302, 303, 305, 306, 354, 369, 374, 386, 387, 388], "clip_valu": [282, 284, 297, 300, 302], "loss_crit": [282, 300, 376, 387], "loss_entropi": [282, 300, 376, 387], "loss_object": [282, 300, 376, 387], "recur": [282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317, 318, 379], "next_reward": [282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317], "next_don": [282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317], "next_termin": [282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 314, 315, 316, 317], "loss_obj": 282, "next_observ": [282, 283, 285, 286, 288, 289, 290, 296, 300, 301, 302, 303, 305, 306, 385], "sacloss": [282, 295, 304, 367], "select_out_kei": [282, 283, 285, 289, 290, 296, 300, 301, 303, 305, 306], "make_value_estim": [282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 307, 312, 370, 374, 375, 386, 387, 392], "value_typ": [282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 308, 312, 374], "hyperparam": [282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 374], "enum": [282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 308, 312, 374], "default_value_estim": [282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 374, 392], "default_value_kwarg": [282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 367, 374], "dqn_loss": [282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 307, 312], "td1": [282, 283, 285, 286, 288, 290, 291, 292, 296, 298, 300, 301, 302, 303, 305, 306, 312, 374], "conserv": [283, 288], "qvalue_network": [283, 289, 290, 296, 301, 303, 305, 306], "unti": [283, 296, 301, 303, 305, 306], "loss_funct": [283, 285, 286, 287, 288, 289, 290, 296, 301, 303, 305, 306, 309, 312, 374, 386], "alpha_init": [283, 290, 299, 301, 303], "min_alpha": [283, 290, 299, 301, 303], "max_alpha": [283, 290, 299, 301, 303], "fixed_alpha": [283, 290, 299, 301, 303], "target_entropi": [283, 290, 299, 301, 303], "prod": [283, 299, 303], "delay_actor": [283, 285, 303, 305, 306], "delay_qvalu": [283, 290, 301, 303, 305, 306], "min_q_weight": 283, "max_q_backup": 283, "backup": 283, "deterministic_backup": 283, "num_random": 283, "with_lagrang": 283, "lagrang": 283, "lagrange_thresh": 283, "valueclass": [283, 285, 290, 301, 303, 305, 306], "qvalu": [283, 289, 290, 296, 301, 303, 305, 306], "loss_actor": [283, 285, 289, 290, 296, 301, 302, 303, 305, 306, 346, 374, 380, 386, 392], "loss_actor_bc": 283, "loss_alpha": [283, 290, 301, 303], "loss_cql": [283, 288], "loss_qvalu": [283, 288, 289, 290, 296, 301, 303, 305, 306], "loss_alpha_prim": 283, "clip_epsilon": [284, 376, 387], "normalize_advantag": [284, 297, 300, 387], "value_kei": [284, 297, 300, 314, 315, 316, 317, 374], "somemodul": [284, 297, 300], "someactor": [284, 297, 300], "value_head": [284, 297, 300], "somevalu": [284, 297, 300], "loss_modul": [284, 295, 297, 298, 300, 304, 351, 360, 361, 370, 371, 374, 375, 376, 386, 387, 390], "ppoloss": [284, 297, 367], "delay_valu": [285, 286, 288, 291, 302, 303, 312, 375, 377, 383, 386], "loss_valu": [285, 289, 296, 302, 303, 374, 376, 380, 386, 387, 392], "pred_valu": [285, 288, 305, 306, 374, 380, 392], "pred_value_max": [285, 374, 380, 392], "target_valu": [285, 288, 301, 305, 306, 313, 370, 374, 380, 392], "target_value_max": [285, 374, 380, 392], "qvalueactor": [286, 288, 312, 369, 375, 377], "double_dqn": 286, "06461": [286, 295], "mult_one_hot": [286, 289, 290, 312], "loss_val": [286, 288, 370, 374, 376, 377, 380, 381, 383, 386, 387, 390], "01345": 287, "distanc": [288, 297, 309, 313, 314, 387], "dcql_loss": 288, "2110": [289, 296], "06169": [289, 296], "num_qvalue_net": [289, 290, 296, 301, 303, 305, 306], "expectil": [289, 296], "tau": [289, 296, 304, 374, 375, 386], "antmaz": [289, 296], "sticht": [289, 296], "onehotcategor": [289, 290, 367], "target_entropy_weight": 290, "disctount": 291, "distributionalqvalueactor": [291, 369], "input_tensordict": [291, 374], "actor_model": 292, "value_model": [292, 294], "imagination_horizon": 292, "unrol": [292, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331], "discount_loss": [292, 294], "lambda_kl": 293, "lambda_reco": 293, "lambda_reward": 293, "reco_loss": 293, "reward_loss": 293, "free_nat": 293, "nat": 293, "delayed_clamp": 293, "global_averag": 293, "value_loss": 294, "fake_data": 294, "ddpgloss": [295, 304, 361, 367, 374, 380, 386, 392], "td3loss": [295, 304, 367], "value_network_update_interv": 295, "qvalueclass": 296, "loss_value_diff": 296, "diff": 296, "old_polici": 297, "new_polici": 297, "apart": [297, 387], "dtarg": 297, "samples_mc_kl": 297, "analyt": 297, "decrement": 297, "loss_": [298, 346, 370, 374, 380], "equip": [298, 377, 379], "gh": 298, "_acceptedkei": 298, "dataclass": 298, "_forward_value_estimator_kei": 298, "alter": [298, 369], "value_estim": [298, 314, 315, 316, 317, 318, 370, 374, 387], "myloss": 298, "action2": 298, "augment": [298, 381, 383, 390], "set_exploration_mod": [298, 367], "deterministic_sampling_mod": 298, "convert_to_funct": [298, 374], "expand_dim": 298, "create_target_param": [298, 374], "compare_against": [298, 374], "_param": 298, "expans": 298, "resampl": 298, "_target_param": 298, "network_nam": 298, "blend": 298, "add_random_modul": [298, 370], "proxim": [300, 376, 387], "optimis": [300, 347, 376, 386, 387], "flavour": [300, 386, 387, 392], "clipppoloss": [300, 367, 376, 387], "klpenppoloss": [300, 367], "regularis": 300, "06347": 300, "gae": [300, 367, 370, 374, 376, 387], "ppo_loss": 300, "tdlambda": [300, 308, 370, 374], "base_lay": 300, "randn_lik": 300, "samplelogprob": 300, "openreview": 301, "ay8zfzm0tdd": 301, "sub_sample_len": 301, "subsampl": [301, 342, 371], "action_log_prob_actor": 301, "state_action_value_actor": [301, 305, 306], "connectionist": 302, "1992": 302, "doi": 302, "1007": 302, "bf00992696": 302, "actor_net": [302, 374, 376], "1801": 303, "01290": 303, "applic": [303, 312, 378, 379, 388], "1812": 303, "05905": 303, "redqloss": [304, 367], "math": 304, "theta_t": [304, 388], "theta_": [304, 388], "polyak": 304, "minimalist": 305, "06860": 305, "qvalue_loss": 305, "actor_loss": 305, "policy_nois": [305, 306], "noise_clip": [305, 306], "td3_bc": 305, "bc_loss": 305, "lmbd": 305, "next_state_valu": [305, 306, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 367], "td0": [307, 374, 386], "strict_shap": 309, "view_a": 309, "qmixer": [312, 367], "local_valu": 312, "visibl": [312, 387], "dafault": 312, "acceptedkei": 312, "global_valu": 312, "penultim": 312, "local_value_network": 312, "mixer_network": 312, "value_modul": [312, 376, 392], "qnet": [312, 374], "next_val_kei": 313, "pred_next_v": 313, "usus": 313, "mse": 313, "q_valu": 313, "n_steps_to_next": 313, "value_next_st": 313, "1506": [314, 319, 327], "02438": [314, 319, 327], "exponenti": [314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 349], "average_ga": [314, 376], "skip_exist": [314, 315, 316, 317], "time_dim": [314, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331], "advang": 314, "gradient_mod": 314, "value_error": [314, 315, 316, 317, 318], "target_param": [314, 315, 316, 317, 318, 374, 387], "98": [314, 315, 316, 317, 375, 388], "94": [314, 317, 375, 388], "unpack": [314, 315, 316, 317], "tensor_kei": [314, 315, 316, 317, 318], "next_valu": [314, 315, 316, 317, 318], "aka": [315, 375, 386], "average_reward": [315, 316, 317], "tdestim": [315, 316, 318], "infti": 316, "valuefunctionbas": 318, "old_stat": [319, 321, 323, 325, 327, 328, 330], "new_stat": [319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331], "rolling_gamma": [323, 324, 325, 326, 328, 329, 330, 331], "g1": [323, 324, 325, 326, 328, 329, 330, 331], "g2": [323, 324, 325, 326, 328, 329, 330, 331], "g3": [323, 324, 325, 326, 328, 329, 330, 331], "g4": [323, 324, 325, 326, 328, 329, 330, 331], "v3": [323, 324, 325, 326, 328, 329, 330, 331, 393], "preproc": [332, 386], "as_non_tensor": [332, 386], "render_method": 332, "pass_tensordict": 332, "syntat": 332, "sugar": 332, "out_file_bas": 333, "skip_reset": 333, "center_crop": 334, "make_grid": 334, "csv": [334, 336, 338, 375, 382, 383], "wandb": [334, 338, 341, 382, 392], "tensorboard": [334, 338, 340, 382, 392], "log_dir": [334, 335, 336, 338, 340, 341, 375, 383], "cheetah_video": 334, "run_video": 334, "openxexperiencereplai": 334, "run_video_0": 334, "templat": 335, "pt": [336, 371, 389], "video_fp": 336, "minim": [336, 390], "dependeci": 336, "cur_dir": 336, "csv_log": 336, "add_video": 336, "video_": 336, "experiment_nam": [337, 338], "uuid": [337, 375, 393], "logger_typ": 338, "logger_nam": 338, "mlflow": [338, 339], "wandb_kwarg": 338, "mlflow_kwarg": 338, "tracking_uri": 339, "uri": 339, "datastor": 339, "tb_log": 340, "tensoarboard": 340, "td_log": 340, "save_dir": 341, "resum": 341, "uncategor": 341, "sub_traj_len": 342, "min_sub_traj_len": 342, "register_op": [342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 371, 375], "process_optim_batch": [342, 348, 349, 371], "td_out": [342, 350], "_process_optim_batch_hook": [342, 371], "batch_subsampl": 342, "clear_cuda": 343, "pre_optim_step": [343, 371], "log_pbar": [344, 345, 347, 349, 371, 375], "progress": [344, 345, 347, 351, 371, 375, 377, 393], "count_fram": 344, "pre_steps_log": [344, 345, 371], "count_frames_log": 344, "lognam": 345, "r_train": [345, 375], "log_reward": [345, 375], "loss_compon": 346, "appl": 346, "optimizer_hook": 346, "record_interv": [347, 374, 375], "record_fram": [347, 354, 374, 375], "policy_explor": [347, 361, 374, 375, 379, 383], "log_kei": [347, 375], "underestim": 347, "set_exploration_typ": [347, 367, 376, 377, 379, 386, 392], "r_evalu": [347, 374], "flatten_tensordict": [348, 375], "max_dim": 348, "rb_trainer": 348, "batch_process": [348, 349, 350, 371], "post_loss": [348, 371], "999": [349, 375], "jitter": 349, "finfo": 349, "default_dtyp": 349, "get_default_dtyp": 349, "reward_norm": 349, "update_reward_stat": 349, "normalize_reward": 349, "make_train": [350, 367], "_process_batch_hook": [350, 371], "select_kei": [350, 371], "versatil": [351, 378], "optim_steps_per_batch": [351, 371, 375], "clip_grad_norm": 351, "clip_norm": 351, "progress_bar": 351, "save_trainer_interv": 351, "log_interv": [351, 375], "save_trainer_fil": [351, 371], "update_weights_interv": [353, 375], "update_weight": 353, "post_step": [353, 371, 375], "cfg": [354, 355, 356, 357, 358, 359, 360, 361, 362, 365], "dictconfig": [354, 355, 356, 357, 359, 360, 361, 362, 365], "unknowingli": 354, "annealing_fram": [354, 374], "init_env_step": [354, 355, 374], "proof_environ": [355, 374], "sta": 355, "ot": 355, "actor_model_explor": [356, 357, 374], "make_env_kwarg": [356, 357], "targetnetupdat": [358, 360, 361], "replayargsconfig": 359, "target_net_updat": [361, 374, 375], "constitu": 361, "egreedywrapp": 361, "env_proof": 361, "obs_spec": 361, "net_valu": 361, "dir": [361, 371, 375], "gettempdir": 361, "argpars": [362, 365], "namespac": [362, 365, 393], "parser": [362, 365], "transformed_env_constructor": [362, 367], "num_env_per_collector": [363, 364], "video_tag": 365, "norm_obs_onli": 365, "use_env_cr": 365, "custom_env_mak": 365, "custom_env": 365, "return_transformed_env": 365, "action_dim_gsd": 365, "state_dim_gsd": 365, "obs_norm_state_dict": 365, "wheter": 365, "maker": [365, 375], "asyncdatacollector": 367, "distributedsyncdatacollector": 367, "submitit_delayed_launch": 367, "raycollector": 367, "rational": 367, "footnot": 367, "unboundeddiscretetensorspec": 367, "lazystackedtensorspec": 367, "lazystackedcompositespec": 367, "prompttensordicttoken": 367, "rolloutfrommodel": 367, "tokenizeddatasetload": 367, "create_infinite_iter": 367, "constantklcontrol": 367, "adaptiveklcontrol": 367, "consolidate_spec": 367, "check_no_exclusive_kei": 367, "contains_lazy_spec": 367, "nested2t": 367, "h5combin": 367, "h5split": 367, "tictactoeenv": 367, "check_marl_group": 367, "get_available_librari": 367, "make_composite_from_td": [367, 388], "terminated_or_trunc": 367, "dreamerdecod": 367, "braxwrapp": 367, "dmcontrolwrapp": 367, "jumanjienv": 367, "jumanjiwrapp": 367, "meltingpotenv": 367, "meltingpotwrapp": 367, "mogymenv": 367, "mogymwrapp": 367, "multithreadedenvwrapp": 367, "openmlenv": 367, "pettingzooenv": [367, 386], "robohiveenv": 367, "smacv2env": 367, "smacv2wrapp": 367, "vmaswrapp": 367, "qvaluehook": 367, "distributionalqvaluehook": 367, "reset_nois": 367, "cemplann": 367, "mpcplannerbas": 367, "mppiplann": 367, "independentnorm": 367, "truncatednorm": 367, "maskedonehotcategor": 367, "inv_softplu": 367, "vmapmodul": 367, "distributionaldqnloss": [367, 375], "discretesacloss": 367, "iqlloss": 367, "discreteiqlloss": 367, "cqlloss": 367, "discretecqlloss": 367, "dtloss": 367, "onlinedtloss": 367, "td3bcloss": 367, "a2closs": 367, "reinforceloss": 367, "dreameractorloss": 367, "dreamermodelloss": 367, "dreamervalueloss": 367, "td0estim": [367, 374], "td1estim": [367, 374], "td0_return_estim": 367, "td0_advantage_estim": 367, "td1_return_estim": 367, "vec_td1_return_estim": 367, "td1_advantage_estim": 367, "vec_td1_advantage_estim": 367, "td_lambda_return_estim": 367, "vec_td_lambda_return_estim": 367, "td_lambda_advantage_estim": 367, "vec_td_lambda_advantage_estim": 367, "generalized_advantage_estim": 367, "vec_generalized_advantage_estim": 367, "reward2go": 367, "distance_loss": [367, 374], "hold_out_net": 367, "hold_out_param": [367, 374], "softupd": [367, 374, 375, 377, 380, 383, 386], "hardupd": [367, 374, 380], "batchsubsampl": [367, 371], "clearcudacach": 367, "countframeslog": 367, "logreward": [367, 371, 375], "optimizerhook": [367, 375], "replaybuffertrain": [367, 371, 375], "rewardnorm": 367, "selectkei": [367, 371], "trainerhookbas": [367, 371, 375], "updateweight": [367, 371, 375], "make_collector_offpolici": 367, "make_collector_onpolici": 367, "make_dqn_loss": 367, "make_replay_buff": [367, 374], "make_target_updat": 367, "parallel_env_constructor": [367, 374], "sync_async_collector": 367, "sync_sync_collector": 367, "correct_for_frame_skip": 367, "get_stats_random_rollout": 367, "mlflowlogg": 367, "get_logg": 367, "generate_exp_nam": 367, "journei": 368, "textbook": 368, "highlight": [368, 386], "ever": [368, 387], "bump": 368, "think": [368, 376, 386, 387, 393], "benefit": [368, 378, 386, 387, 390], "pr": 368, "ground": [369, 374, 388], "recycl": [369, 390], "impos": 369, "violat": 369, "noisier": 369, "Their": [369, 386, 387], "sd": 369, "prob_modul": 369, "pick": [369, 374, 375, 379], "hopefulli": [369, 375], "functional_modul": 369, "make_funct": 369, "mathbb": [369, 375], "rightarrow": [369, 375], "soften": 369, "backbon": [369, 377, 379, 385, 392], "make_actor": 369, "make_valu": 369, "shared_param": 369, "make_common": 369, "reusabl": [370, 374, 390], "swappabl": [370, 374], "characterist": [370, 374, 388], "trainabl": [370, 374, 380, 389], "smth": [370, 374], "metric": [370, 374], "plenti": 370, "amort": [370, 375, 376], "told": [370, 376], "pseudo": [370, 381, 388], "buri": 370, "str_valu": 370, "nutshel": [370, 374], "barto": [370, 386, 387], "chapter": [370, 382], "significantli": [370, 374, 375, 380, 387], "next_stat": 370, "value_net_loss": 370, "pow": [370, 374], "room": 370, "signifi": [370, 386, 387], "underperform": 370, "thin": 370, "intric": [370, 379], "believ": 371, "scheme": [371, 393], "substenti": 371, "_pre_steps_log_hook": 371, "_pre_optim_hook": 371, "sub_batch": 371, "_post_loss_hook": 371, "_post_optim_hook": 371, "post_optim": [371, 375], "_post_optim_log": 371, "post_optim_log": 371, "_post_steps_hook": 371, "_post_steps_log_hook": 371, "post_steps_log": 371, "reserv": 371, "logginghook": 371, "logging_hook": 371, "save_dict": 371, "some_valu": 371, "torchsnapshot": 371, "ckpt_backend": 371, "filepath": 371, "save_train": 371, "load_from_fil": 371, "640": [373, 375, 391], "galleri": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "mem": [373, 391], "mb": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393], "torchrl_demo": [373, 391, 392], "53": [373, 375, 387, 388, 389, 391, 392], "664": [373, 391, 392], "324": [373, 388, 391], "rb_tutori": [373, 390, 391], "117": [373, 388, 390, 391], "479": [373, 376, 388, 391], "coding_dqn": [373, 375, 391], "567": [373, 375, 388, 391], "996": [373, 391], "214": [373, 388, 391], "317": [373, 379, 388, 391], "dqn_with_rnn": [373, 377, 391], "892": [373, 377, 391], "2037": [373, 391], "multiagent_ppo": [373, 387, 391], "838": [373, 387, 391], "coding_ddpg": [373, 374, 391], "54": [373, 374, 375, 388, 389, 390, 391], "325": [373, 388, 391, 392], "torchrl_env": [373, 391, 393], "958": [373, 391, 393], "4567": [373, 391, 393], "coding_ppo": [373, 376, 391], "485": [373, 374, 376, 388, 391], "318": [373, 378, 385, 388, 391], "multiagent_competitive_ddpg": [373, 386, 391], "953": [373, 386, 391], "4743": [373, 391], "pretrained_model": [373, 389, 391], "208": [373, 388, 389, 391], "3988": [373, 389, 391], "multi_task": [373, 385, 391], "52": [373, 374, 375, 385, 388, 389, 391], "120": [373, 385, 388, 391], "47": [373, 374, 375, 379, 388, 389, 391], "43": [373, 374, 375, 377, 378, 388, 389, 391], "464": [373, 378, 388, 391], "25": [373, 374, 375, 377, 380, 388, 389, 391], "261": [373, 380, 388, 391], "321": [373, 380, 388, 391], "516": [373, 383, 388, 391], "758": [373, 381, 388, 391], "820": [373, 382, 386, 391], "347": [373, 382, 388, 391], "author": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 390, 393], "vincent": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 390, 393], "moen": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 388, 390, 393], "assembl": 374, "focus": [374, 380], "straightforward": [374, 375, 378, 379, 380, 381, 390], "maxim": [374, 380, 388], "transpar": [374, 377], "illustr": [374, 375, 379, 390], "bash": 374, "is_fork": [374, 375, 376, 377, 386, 387, 389], "get_start_method": [374, 375, 376, 377, 386, 387, 389], "collector_devic": 374, "loss_dict": 374, "oblivi": [374, 376, 390], "elementari": 374, "didact": 374, "dilut": 374, "pessimist": [374, 375, 376], "target_actor_network_param": 374, "actor_in_kei": 374, "actor_crit": 374, "noth": [374, 376], "compromis": 374, "hp": 374, "_value_estim": 374, "elif": [374, 375], "notimplementederror": 374, "unknown": 374, "_loss_actor": 374, "td_copi": 374, "actor_network_param": [374, 386], "value_network_param": [374, 386], "_loss_valu": 374, "pred_val": 374, "target_value_network_param": 374, "glue": 374, "_forward": 374, "ndimens": 374, "remaind": 374, "env_librari": 374, "env_task": 374, "env_arg": [374, 375], "friendli": 374, "torchr": 374, "rescal": 374, "presum": 374, "make_transformed_env": 374, "reward_sc": 374, "marker": 374, "env_per_collector": 374, "transform_state_dict": 374, "make_t_env": 374, "cheat": 374, "10m": 374, "cautiou": 374, "magnitud": [374, 386], "thousand": [374, 377], "get_env_stat": 374, "proof_env": 374, "5000": [374, 375, 376, 383], "recal": [374, 376, 390], "ddpgmlpactor": 374, "ddpgmlpqnet": 374, "materi": 374, "ornsteinuhlenbeckprocessmodul": [374, 379], "make_ddpg_actor": 374, "q_net": 374, "tight": 374, "decoupl": [374, 380], "10_000": [374, 376], "traj_len": [374, 377], "make_record": 374, "recorder_obj": 374, "flavor": 374, "buffer_s": [374, 375], "random_crop_len": 374, "prb": 374, "buffer_scratch_dir": 374, "temporari": 374, "dataflow": 374, "ceil_div": 374, "utd": [374, 377], "update_to_data": 374, "realiz": 374, "_must_": 374, "001": [374, 388], "outdat": 374, "trick": [374, 375], "despit": 374, "optimizer_actor": 374, "lr": [374, 375, 376, 377, 383, 386, 387, 388], "weight_decai": [374, 375], "optimizer_valu": 374, "total_collection_step": 374, "pretti": [374, 378, 382, 390], "rewards_ev": 374, "collected_fram": 374, "r0": 374, "numel": [374, 376, 377, 383, 386, 389, 390], "current_fram": [374, 386], "sampled_tensordict": 374, "gn1": 374, "clip_grad_norm_": [374, 376, 386, 387, 388], "gn2": 374, "gn": [374, 388], "td_record": 374, "rn": 374, "set_descript": [374, 376, 377, 386, 387, 388], "2f": 374, "800": [374, 375], "3129": 374, "76it": [374, 375], "1600": [374, 375], "09": [374, 375, 388], "913": 374, "54it": [374, 375], "2400": [374, 375], "1364": 374, "50it": [374, 375], "3200": [374, 375], "1789": 374, "95it": [374, 375, 388], "4000": [374, 375, 376], "86it": [374, 376, 388], "48": [374, 375, 388, 389], "4800": [374, 375, 388], "2471": 374, "67it": [374, 375, 388], "56": [374, 375, 388], "5600": 374, "2723": 374, "01it": [374, 377, 388], "49": [374, 375, 388, 389], "73": [374, 375, 388], "219": [374, 388, 393], "71": [374, 375, 387, 388, 389], "6400": [374, 392], "936": [374, 388], "56it": [374, 375], "70": [374, 375, 376, 387, 388, 389], "51": [374, 375, 388, 390], "225": [374, 388], "60": [374, 375, 376, 387, 388, 392], "72": [374, 375, 388, 389], "7200": 374, "650": 374, "80it": [374, 375, 388], "283": [374, 388], "96": [374, 375, 388, 389, 390], "57": [374, 375, 377, 388, 389], "8000": [374, 376], "542": [374, 388], "92it": [374, 375, 388], "68": [374, 375, 387, 388, 390], "83": [374, 375, 388, 389], "182": [374, 388, 393], "8800": 374, "88it": [374, 375, 388], "89": [374, 375, 388], "9600": 374, "384": [374, 375, 388], "16it": [374, 375], "91": [374, 375, 376, 388], "90": [374, 375, 376, 387, 388], "108": [374, 388], "10400it": 374, "359": [374, 388], "72it": [374, 375, 388], "93": [374, 375, 388], "125": [374, 388, 390], "plot": [374, 376, 377, 386, 387, 388], "mention": [374, 377, 390, 393], "matplotlib": [374, 376, 377, 386, 387, 388, 390, 393], "pyplot": [374, 376, 377, 386, 387, 388, 390, 393], "plt": [374, 376, 377, 386, 387, 388, 390, 393], "zip": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "legend": [374, 386], "xlabel": [374, 377, 387, 388], "ylabel": [374, 387], "tight_layout": 374, "takeawai": [374, 375], "distpatch": 374, "326": [374, 388], "jupyt": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "ipynb": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393], "sphinx": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "road": 375, "aspect": [375, 380], "highest": [375, 379], "prerequisit": [375, 377], "lookup": 375, "cart": 375, "pole": 375, "un": 375, "actuat": 375, "frictionless": 375, "duelingcnndqnet": 375, "egreedymodul": [375, 377, 379, 383], "is_notebook": 375, "shell": 375, "get_ipython": 375, "__class__": 375, "zmqinteractiveshel": 375, "qtconsol": 375, "terminalinteractiveshel": 375, "ipython": [375, 387, 388], "nameerror": [375, 386], "umbrella": 375, "misplac": 375, "misus": 375, "orchestr": [375, 380, 382], "five": 375, "64x64": 375, "motion": [375, 388], "obs_norm_sd": 375, "mp_context": 375, "simpler": [375, 378], "get_norm_stat": 375, "test_env": 375, "make_model": 375, "dummy_env": 375, "init_bia": 375, "exploration_modul": [375, 377, 379, 383], "eps_greedy_v": 375, "eps_greedy_val_env": 375, "actor_explor": 375, "get_replay_buff": 375, "n_optim": [375, 380, 381], "themselv": 375, "parametriz": 375, "simplic": [375, 376, 381, 389, 390, 392], "get_collector": 375, "cl": 375, "data_collector": 375, "bunch": 375, "ubiquit": [375, 378], "get_loss_modul": 375, "target_updat": [375, 386], "995": [375, 388], "variat": 375, "2e": [375, 388], "wd": 375, "upd": 375, "harder": [375, 392], "5_000": 375, "500000": 375, "100000": 375, "005": [375, 386], "mandatori": [375, 376, 387, 388], "fairer": 375, "budget": 375, "dqn_exp_": 375, "uuid1": [375, 393], "9895": 375, "0737": 375, "registr": [375, 393], "cumbersom": 375, "buffer_hook": 375, "weight_updat": 375, "aliv": 375, "total_reward": 375, "07": [375, 388, 389], "29it": [375, 376], "3688": [375, 388], "9346": [375, 388], "53it": 375, "3566": 375, "3778": 375, "28it": 375, "4295": [375, 388], "99it": 375, "3991": 375, "224": [375, 388], "66it": 375, "58": [375, 388, 389], "60it": 375, "288": [375, 388], "66": [375, 387, 388, 390], "58it": [375, 388], "3718": 375, "352": [375, 388], "59": [375, 388, 389], "77": [375, 388, 390], "64it": [375, 388], "4082": [375, 388], "05it": 375, "416": [375, 388], "30it": 375, "448": [375, 388], "480": [375, 388, 389, 390], "46it": 375, "4021": 375, "544": [375, 388], "19it": 375, "576": [375, 388], "45it": 375, "608": [375, 388], "70it": 375, "65it": [375, 388], "4051": 375, "672": 375, "45": [375, 377, 388, 389], "14it": 375, "3960": 375, "704": 375, "93it": [375, 388], "736": 375, "97": [375, 388, 389], "40it": [375, 388], "768": 375, "27it": 375, "09it": 375, "832": 375, "73it": [375, 388], "3808": 375, "864": 375, "02it": [375, 376], "896": 375, "41it": 375, "928": 375, "960": 375, "3869": 375, "992": [375, 388], "63it": [375, 376], "3475": 375, "74it": [375, 388], "1056": 375, "3445": 375, "1088": 375, "77it": [375, 388], "1120": 375, "1152": 375, "49it": 375, "1184": 375, "1216": 375, "1248": 375, "44it": [375, 388], "1280": 375, "03it": 375, "92": [375, 388, 389], "47it": 375, "1344": 375, "81it": [375, 388], "1376": 375, "1408": 375, "1440": 375, "94it": [375, 388], "1472": 375, "89it": [375, 388], "1504": 375, "51it": 375, "1536": 375, "82it": [375, 388], "1568": 375, "3505": 375, "1632": 375, "00it": [375, 388], "84it": [375, 376, 388], "1696": 375, "20it": 375, "1728": 375, "18it": [375, 388], "1760": 375, "26it": [375, 388], "1792": 375, "52it": [375, 376], "1824": 375, "1856": 375, "1888": 375, "1920": 375, "1952": 375, "79it": [375, 388], "1984": 375, "21it": [375, 388], "2016": 375, "11it": [375, 376], "2048": [375, 389], "85it": [375, 388], "2080": 375, "2112": [375, 388], "2144": 375, "2176": 375, "97it": 375, "2208": 375, "2240": 375, "2272": 375, "2336": 375, "48it": 375, "2368": 375, "04it": 375, "2432": 375, "2464": 375, "2496": 375, "2528": [375, 388], "2560": 375, "2624": 375, "34it": 375, "2656": [375, 388], "2688": 375, "4173": 375, "2720": [375, 388], "23it": 375, "55": [375, 388], "2752": 375, "2784": 375, "2816": 375, "2848": 375, "2880": 375, "2912": 375, "2944": [375, 388], "25it": [375, 388], "2976": [375, 388], "06it": 375, "61": [375, 388, 389], "3040": 375, "3072": 375, "62": [375, 388], "3104": 375, "63": [375, 388, 390], "3136": 375, "43it": [375, 377, 388], "3168": 375, "65": [375, 387, 388, 389, 390], "3232": [375, 388], "8824": 375, "3264": 375, "3296": 375, "67": [375, 385, 387, 388, 389], "3328": 375, "36it": 375, "3360": 375, "3392": 375, "75it": [375, 388], "3424": 375, "69": [375, 388], "3456": [375, 388], "42it": [375, 388], "3488": 375, "3520": 375, "3552": 375, "3584": 375, "87it": [375, 388], "3616": 375, "85": [375, 388], "3648": 375, "98it": 375, "74": [375, 388, 389], "3680": 375, "3712": 375, "3744": 375, "71it": 375, "76": [375, 387, 388], "3776": 375, "08it": 375, "61it": [375, 388], "3840": 375, "3872": 375, "78": [375, 388, 389], "3904": 375, "79": [375, 388, 389], "3936": 375, "13it": 375, "3968": 375, "90it": [375, 388], "4032": 375, "4064": 375, "82": [375, 388, 389], "4096": 375, "4128": [375, 388], "55it": [375, 388], "4160": 375, "4192": 375, "22it": 375, "4224": 375, "4256": [375, 388], "4288": [375, 388], "4320": 375, "4352": 375, "4384": 375, "4416": 375, "4448": 375, "4480": 375, "38it": 375, "4512": 375, "4544": 375, "07it": 375, "4576": 375, "4608": 375, "4640": 375, "68it": [375, 388], "4672": [375, 388], "4704": 375, "4736": 375, "4768": 375, "4832": 375, "4864": 375, "4896": 375, "96it": 375, "4928": 375, "4960": 375, "4992": 375, "5024it": 375, "print_csv_files_in_fold": 375, "folder_path": 375, "csv_file": 375, "output_str": 375, "dirpath": 375, "endswith": 375, "strip": 375, "tmp": [375, 390], "tmplvng7g7c": 375, "dqn_exp_a40899e6": 375, "49fc": 375, "11ef": 375, "8266": [375, 388], "0242ac110002": 375, "42945271730422974": 375, "39912933111190796": 375, "39912936091423035": 375, "4769110679626465": 375, "302457720041275": 375, "23640137910842896": 375, "3648311495780945": 375, "3463801145553589": 375, "4967069625854492": 375, "30764904618263245": 375, "2477477341890335": 375, "3860902488231659": 375, "grad_norm_0": 375, "772162437438965": 375, "5969762802124023": 375, "287935972213745": 375, "477972984313965": 375, "681936740875244": 375, "635433197021484": 375, "2102952003479": 375, "657081127166748": 375, "660782337188721": 375, "10000000894069672": 375, "882352828979492": 375, "qvaluenetwork": 375, "worst": 375, "accuraci": 375, "fanci": [375, 381], "997": 375, "talk": 376, "repetit": [376, 378, 381], "six": 376, "sophist": [376, 387], "invent": 376, "overview": [376, 380, 386, 387, 392], "theta_k": 376, "pi_": 376, "exceed": 376, "discourag": [376, 388], "indispens": 376, "analyz": 376, "lingua": 376, "franca": 376, "defaultdict": [376, 388], "3e": [376, 377, 386, 387], "max_grad_norm": [376, 386, 387], "sub_batch_s": 376, "num_epoch": [376, 387], "entropy_ep": [376, 387], "charact": 376, "inverteddoublependulum": 376, "transmit": 376, "stai": 376, "supplementari": [376, 393], "confid": [376, 386, 387], "ran": 376, "f_": 376, "mu_": 376, "difficulti": [376, 393], "d_ob": 376, "d_action": 376, "policy_modul": [376, 386, 387], "That": [376, 386], "said": 376, "briefli": [376, 386, 387], "refil": [376, 387], "easiest": [376, 380, 386, 387], "mathemat": [376, 386, 387], "tradeoff": [376, 387], "advantage_modul": 376, "lr_schedul": [376, 388], "cosineannealinglr": [376, 388], "eval_str": 376, "tensordict_data": [376, 387], "data_view": [376, 387], "subdata": [376, 386, 387], "cum_reward_str": 376, "4f": [376, 377, 388], "stepcount_str": 376, "param_group": [376, 386], "lr_str": 376, "eval_rollout": 376, "nice": [376, 378, 381], "8684": 376, "0875": 376, "0003": [376, 388], "484": [376, 388], "78it": [376, 388], "1157": 376, "3000": 376, "489": [376, 388], "1603": [376, 388], "493": [376, 388], "1828": 376, "0002": [376, 388], "496": [376, 388], "39it": 376, "2097": 376, "6000": 376, "498": [376, 388], "2192": 376, "7000": 376, "2437": 376, "2453": 376, "9000": 376, "487": [376, 388], "2470": 376, "492": [376, 388], "2489": 376, "cap": [376, 390], "figsiz": [376, 388], "subplot": [376, 386, 388, 393], "titl": [376, 377, 387, 388], "bit": [376, 377, 378, 386, 387, 390], "319": [376, 381, 388], "84x84": 377, "accessori": 377, "stamp": 377, "assist": 377, "emb": 377, "n_cell": 377, "customiz": 377, "wouldn": 377, "qval": 377, "stoch_polici": 377, "opportun": [377, 386], "uniniti": 377, "again": [377, 378, 379, 381, 387, 389, 390, 393], "redund": 377, "strongli": 377, "sake": [377, 389, 390], "20_000": [377, 388], "longest": 377, "npai": 377, "action_spread": 377, "127": [377, 388, 390], "0005": 377, "37it": 377, "150": [377, 388], "32it": 377, "2038": 377, "topic": [378, 379, 380], "straight": 378, "backtrack": 378, "encapsul": [378, 379, 380], "reset_with_act": 378, "7132": 378, "tp": 378, "stepped_data": 378, "spatial": 378, "useless": 378, "policyless": 378, "appreci": 378, "monitor": 378, "examin": [378, 386], "tackl": 379, "delv": 379, "bypass": 379, "extractor": 379, "palliat": 379, "additivegaussianmodul": [379, 386], "had": [379, 381], "exploration_polici": [379, 386], "greedili": 379, "2d": [379, 386, 387], "innov": [379, 380], "rollout_explor": 379, "sole": 380, "tradit": [380, 386], "supervis": [380, 381, 390, 393], "n_collect": 380, "get_next_batch": 380, "ddpg_loss": 380, "total_loss": 380, "prove": 380, "reliev": 380, "concern": 380, "accustom": 381, "surprisingli": 381, "fundament": 381, "art": [381, 386, 387], "multirpocess": 381, "countless": 381, "yourself": [381, 386, 387], "lightweight": 382, "portabl": 382, "everywher": 382, "log_scalar": 382, "elaps": 382, "my_scalar": 382, "saw": [382, 388, 390], "excess": 382, "lesson": 383, "voluntarili": 383, "value_mlp": 383, "100_000": 383, "init_rand_step": 383, "training_loop": 383, "video_record": 383, "arbitrarili": 383, "total_count": 383, "total_episod": 383, "t0": 383, "t1": 383, "conclud": [383, 389], "tutorials_python": 384, "tutorials_jupyt": 384, "env1_obs_kei": 385, "observation_stand": 385, "env2_obs_kei": 385, "observation_walk": 385, "tdreset1": 385, "tdreset2": 385, "lazy_stack": 385, "policy_common": 385, "policy_stand": 385, "policy_walk": 385, "But": 385, "env1_mak": 385, "env2_mak": 385, "_single_task": 385, "td_rollout": 385, "matteo": [386, 387], "bettini": [386, 387], "benchmarl": [386, 387], "simple_tag": 386, "maddpg": [386, 387], "multiagentparticleenviron": 386, "mpe": 386, "centralis": [386, 387], "tie": [386, 387], "iddpg": [386, 387], "typical": 386, "richard": 386, "andrew": 386, "mit": 386, "press": 386, "2018": 386, "mathbf": [386, 387], "pi": [386, 387, 388], "decentralis": [386, 387], "literatur": [386, 387], "overcom": [386, 387], "stationari": [386, 387], "concurr": [386, 387], "establish": 386, "gui": [386, 387], "is_sphinx": 386, "__sphinx_build__": 386, "n_iter": [386, 387], "evad": 386, "iteration_when_stop_training_evad": 386, "memory_s": 386, "n_optimiser_step": 386, "train_batch_s": 386, "polyak_tau": 386, "chaser": 386, "red": 386, "circl": [386, 387], "touch": [386, 388], "penal": 386, "acceler": [386, 387], "obstacl": 386, "drag": [386, 387], "elast": [386, 387], "collis": [386, 387], "imped": 386, "n_chaser": 386, "n_evad": 386, "n_obstacl": 386, "use_vma": 386, "simple_tag_v3": 386, "num_good": 386, "num_adversari": 386, "num_obstacl": 386, "max_cycl": 386, "num_vmas_env": [386, 387], "num_good_ag": 386, "num_landmark": 386, "adversary_1": 386, "four": [386, 387, 388], "n_agents_in_that_group": 386, "stress": [386, 387], "paramount": [386, 387], "n_rollout_step": [386, 387], "evolut": [386, 387], "group_nam": 386, "n_agents_in_group": 386, "minor": 386, "agents_exploration_polici": 386, "utilis": [386, 387], "withing": 386, "n_obs_per_ag": [386, 387], "n_actions_per_ag": [386, 387], "share_parameters_polici": [386, 387], "policy_net": [386, 387], "_agent": 386, "grant": [386, 387], "converg": [386, 387], "share_parameters_crit": [386, 387], "obs_act": 386, "cat_modul": 386, "critic_modul": 386, "fantast": [386, 387], "reset_td": 386, "interfer": 386, "flatten_kei": 386, "process_batch": 386, "group_shap": 386, "get_item_shap": [386, 387], "nested_done_kei": 386, "nested_terminated_kei": 386, "desc": [386, 387], "episode_reward_mean_": 386, "episode_reward_mean_map": 386, "train_group_map": 386, "group_batch": 386, "_group": 386, "loss_nam": 386, "episode_reward_mean": [386, 387], "traceback": [386, 393], "1297": 386, "__getattr__": 386, "1895": 386, "proce": 386, "screen": 386, "fig": 386, "set_ylabel": 386, "axvlin": 386, "color": 386, "orang": 386, "set_xlabel": 386, "video_logg": 386, "vmas_log": 386, "env_with_rend": 386, "vmas_rend": 386, "print_log_dir": 386, "profici": [386, 387], "4744": 386, "lidar": 387, "sensor": 387, "mappo": 387, "ippo": 387, "phase": [387, 390], "analys": 387, "visualis": 387, "vmas_devic": 387, "6_000": 387, "minibatch_s": 387, "generalis": 387, "simd": 387, "parallelis": 387, "warp": 387, "todai": 387, "surround": 387, "dot": [387, 388], "collid": 387, "penalis": 387, "scenario_nam": 387, "final_rew": 387, "agent_collis": 387, "denot": 387, "critic_net": 387, "minibatch": 387, "episode_reward_mean_list": 387, "critic_network_param": 387, "target_critic_network_param": 387, "4579917788505554": 387, "14524875581264496": 387, "168386459350586": 387, "3613134622573853": 387, "921463131904602": 387, "2106335163116455": 387, "1925103664398193": 387, "664064407348633": 387, "6539173126220703": 387, "743558168411255": 387, "xvfb": 387, "pyvirtualdisplai": 387, "1400": [387, 388], "900": 387, "pil": 387, "rendering_callback": 387, "fromarrai": 387, "gif": 387, "save_al": 387, "append_imag": 387, "freeli": 388, "undertaken": 388, "broader": 388, "wider": 388, "algebra": 388, "acquaint": 388, "avenu": 388, "_apply_to_composit": 388, "default_x": 388, "default_i": 388, "upward": 388, "angular": 388, "sin": 388, "rad": 388, "sec": 388, "angl": 388, "deleg": 388, "new_th": 388, "new_thdot": 388, "g_forc": 388, "angle_norm": 388, "albeit": 388, "high_th": 388, "high_thdot": 388, "low_th": 388, "low_thdot": 388, "trivial": 388, "shortcut": [388, 393], "irrelev": 388, "_make_spec": 388, "td_param": 388, "render_fp": 388, "random_": 388, "_make_step": 388, "staticmethod": 388, "showcas": 388, "skeleton": 388, "_apply_transform": [388, 393], "_inv_apply_transform": [388, 393], "subset": [388, 389], "sine": 388, "cosin": 388, "sintransform": 388, "costransform": 388, "t_sin": 388, "t_co": 388, "cat_transform": 388, "simple_rollout": 388, "unexplor": 388, "init_td": 388, "traj_return": 388, "last_reward": 388, "is_ipython": 388, "inlin": 388, "get_backend": 388, "ion": 388, "gcf": 388, "clear_output": 388, "625": 388, "0748": 388, "519": 388, "0499": 388, "4472": 388, "073": 388, "0685": 388, "0408": 388, "552": 388, "83it": 388, "5154": 388, "9086": 388, "9385": 388, "155": 388, "2568": 388, "4981": 388, "223": 388, "8929": 388, "4491": 388, "581": 388, "91it": 388, "3233": 388, "0664": 388, "596": 388, "1021": 388, "5263": 388, "9579": 388, "5807": 388, "8075": 388, "212": [388, 390], "2009": 388, "5525": 388, "914": 388, "2894": 388, "0115": 388, "0977": 388, "1845": 388, "1830": 388, "4858": 388, "233": 388, "2863": 388, "0297": 388, "4617": 388, "5997": 388, "904": 388, "1647": 388, "0777": 388, "901": 388, "4709": 388, "6813": 388, "8317": 388, "3221": 388, "5554": 388, "276": 388, "3353": 388, "701": 388, "8570": 388, "6656": 388, "463": 388, "7779": 388, "6911": 388, "875": 388, "0796": 388, "7082": 388, "308": 388, "0421": 388, "1496": 388, "5037": 388, "1755": 388, "5029": 388, "9454": 388, "665": 388, "9330": 388, "2118": 388, "444": 388, "0995": 388, "6294": 388, "3146": 388, "2909": 388, "461": 388, "9720": 388, "1298": 388, "9923": 388, "0345": 388, "3438": 388, "424": 388, "6953": 388, "5233": 388, "411": 388, "8011": 388, "5329": 388, "2677": 388, "6969": 388, "7010": 388, "376": 388, "9352": 388, "7707": 388, "6178": 388, "5646": 388, "348": 388, "7304": 388, "9407": 388, "942": 388, "3882": 388, "7604": 388, "3507": 388, "8928": 388, "258": 388, "6978": 388, "4641": 388, "549": 388, "6047": 388, "5005": 388, "4136": 388, "2993": 388, "3222": 388, "4046": 388, "7314": 388, "275": [388, 393], "6331": 388, "9318": 388, "961": 388, "8331": 388, "1604": 388, "4099": 388, "4761": 388, "4262": 388, "6363": 388, "382": 388, "3593": 388, "7377": 388, "2847": 388, "3443": 388, "867": 388, "3592": 388, "4760": 388, "441": 388, "9950": 388, "8021": 388, "3528": 388, "1214": 388, "708": 388, "4023": 388, "3583": 388, "041": 388, "3801": 388, "0310": 388, "4244": 388, "2039": 388, "4850": 388, "8748": 388, "706": 388, "4897": 388, "9210": 388, "8964": 388, "0832": 388, "3934": 388, "456": 388, "8971": 388, "2933": 388, "3377": 388, "6996": 388, "2274": 388, "8916": 388, "098": 388, "2660": 388, "9110": 388, "4503": 388, "6956": 388, "9172": 388, "4026": 388, "946": 388, "9229": 388, "5205": 388, "294": 388, "8872": 388, "6637": 388, "019": 388, "9281": 388, "2082": 388, "724": 388, "8561": 388, "6574": 388, "357": 388, "4138": 388, "5230": 388, "385": 388, "4065": 388, "5642": 388, "921": 388, "9786": 388, "4129": 388, "5831": 388, "266": 388, "7723": 388, "4152": 388, "0898": 388, "389": 388, "5155": 388, "5376": 388, "5616": 388, "4094": 388, "5333": 388, "4803": 388, "895": 388, "6566": 388, "2588": 388, "662": 388, "4732": 388, "7503": 388, "068": 388, "0714": 388, "3370": 388, "059": 388, "8612": 388, "1915": 388, "3855": 388, "0349": 388, "9644": 388, "4538": 388, "445": 388, "0392": 388, "4080": 388, "1648": 388, "9599": 388, "143": 388, "4284": 388, "5946": 388, "2590": 388, "9181": 388, "4621": 388, "9075": 388, "674": 388, "1772": 388, "9444": 388, "351": 388, "9391": 388, "5595": 388, "8673": 388, "6240": 388, "5919": 388, "1071": 388, "9127": 388, "251": 388, "9799": 388, "3131": 388, "9612": 388, "9705": 388, "8741": 388, "2230": 388, "0972": 388, "0337": 388, "0350": 388, "0654": 388, "2441": 388, "4596": 388, "362": 388, "103": 388, "4362": 388, "171": 388, "104": 388, "4041": 388, "6907": 388, "105": 388, "4664": 388, "2760": 388, "0299": 388, "9712": 388, "349": 388, "107": 388, "3332": 388, "4479": 388, "772": 388, "4357": 388, "9591": 388, "543": 388, "109": 388, "6216": 388, "1353": 388, "692": 388, "110": 388, "6261": 388, "7086": 388, "111": 388, "7758": 388, "9818": 388, "112": [388, 390], "7772": 388, "5055": 388, "113": 388, "5840": 388, "3180": 388, "2083": 388, "115": 388, "5275": 388, "6873": 388, "116": 388, "4107": 388, "1624": 388, "6372": 388, "2571": 388, "118": 388, "4039": 388, "4428": 388, "119": 388, "4728": 388, "5628": 388, "6767": 388, "2466": 388, "522": 388, "121": [388, 393], "5873": 388, "5072": 388, "6548": 388, "3766": 388, "123": 388, "5134": 388, "1955": 388, "124": 388, "2481": 388, "0591": 388, "4500": 388, "3368": 388, "126": 388, "9708": 388, "7059": 388, "3031": 388, "2534": 388, "843": 388, "3327": 388, "6193": 388, "129": [388, 390], "4831": 388, "1172": 388, "2593": 388, "4219": 388, "962": 388, "8380": 388, "899": 388, "132": 388, "2721": 388, "9048": 388, "166": 388, "133": 388, "2419": 388, "5248": 388, "2139": 388, "4278": 388, "135": 388, "0690": 388, "5140": 388, "136": 388, "1140": 388, "7402": 388, "137": 388, "5356": 388, "1636": 388, "138": 388, "0671": 388, "8798": 388, "139": 388, "8918": 388, "3298": 388, "307": 388, "140": 388, "1779": 388, "141": [388, 390], "1771": 388, "3624": 388, "142": 388, "1683": 388, "4810": 388, "9373": 388, "4435": 388, "4396": 388, "8092": 388, "145": 388, "2572": 388, "146": 388, "4212": 388, "0260": 388, "147": [388, 390], "0939": 388, "6478": 388, "605": 388, "148": 388, "6606": 388, "7289": 388, "149": 388, "9300": 388, "7193": 388, "563": 388, "1166": 388, "8514": 388, "151": 388, "9108": 388, "0672": 388, "292": 388, "152": 388, "8591": 388, "3768": 388, "153": 388, "9976": 388, "154": 388, "0576": 388, "0067": 388, "935": 388, "4199": 388, "1722": 388, "156": 388, "8310": 388, "3466": 388, "157": 388, "8631": 388, "2492": 388, "158": 388, "8763": 388, "1277": 388, "159": 388, "5562": 388, "7446": 388, "1082": 388, "9830": 388, "161": 388, "0946": 388, "5229": 388, "162": 388, "4574": 388, "6900": 388, "163": [388, 389], "2229": 388, "0318": 388, "482": 388, "164": 388, "0543": 388, "0817": 388, "761": 388, "165": 388, "2809": 388, "5118": 388, "366": 388, "1142": 388, "5635": 388, "167": 388, "1949": 388, "2327": 388, "982": 388, "168": 388, "0967": 388, "0387": 388, "457": 388, "169": 388, "0782": 388, "2150": 388, "170": 388, "5222": 388, "3725": 388, "9288": 388, "9837": 388, "1416": 388, "1099": 388, "173": 388, "8620": 388, "8475": 388, "174": 388, "1807": 388, "4375": 388, "175": 388, "1148": 388, "0645": 388, "2751": 388, "8313": 388, "177": 388, "9286": 388, "9770": 388, "178": 388, "5735": 388, "2837": 388, "179": 388, "2926": 388, "9489": 388, "180": 388, "1507": 388, "181": 388, "8724": 388, "3567": 388, "3574": 388, "6140": 388, "183": 388, "7895": 388, "2518": 388, "184": 388, "6146": 388, "185": 388, "8776": 388, "7358": 388, "186": 388, "3722": 388, "8428": 388, "187": [388, 393], "7955": 388, "188": 388, "0092": 388, "7106": 388, "829": 388, "189": 388, "2264": 388, "6919": 388, "190": 388, "1438": 388, "1362": 388, "191": 388, "0618": 388, "8217": 388, "9420": 388, "6765": 388, "193": [388, 390], "7745": 388, "0709": 388, "194": 388, "9478": 388, "6867": 388, "195": 388, "6507": 388, "6225": 388, "196": 388, "2244": 388, "2195": 388, "197": 388, "5385": 388, "9263": 388, "198": 388, "1878": 388, "2374": 388, "8054": 388, "3504": 388, "557": 388, "0766": 388, "201": 388, "2011": 388, "8393": 388, "202": 388, "0803": 388, "7815": 388, "203": 388, "8363": 388, "2460": 388, "204": 388, "8643": 388, "2191": 388, "593": 388, "205": 388, "0773": 388, "1343": 388, "206": 388, "8657": 388, "207": 388, "9304": 388, "7584": 388, "8752": 388, "2307": 388, "209": 388, "5250": 388, "4869": 388, "7837": 388, "5762": 388, "211": 388, "6661": 388, "8600": 388, "2502": 388, "1752": 388, "3075": 388, "8871": 388, "9406": 388, "8090": 388, "215": 388, "6291": 388, "8923": 388, "876": 388, "216": 388, "9504": 388, "21e": 388, "217": 388, "7431": 388, "7880": 388, "218": 388, "4463": 388, "5432": 388, "3793": 388, "3313": 388, "8843": 388, "0369": 388, "065": 388, "221": 388, "4828": 388, "8391": 388, "222": 388, "6265": 388, "2913": 388, "947": 388, "5541": 388, "1252": 388, "7342": 388, "2396": 388, "5936": 388, "1924": 388, "226": 388, "9975": 388, "2045": 388, "227": 388, "8367": 388, "9540": 388, "228": 388, "7259": 388, "6743": 388, "229": 388, "4827": 388, "7528": 388, "230": 388, "7361": 388, "8756": 388, "231": 388, "7646": 388, "1116": 388, "232": 388, "5426": 388, "8385": 388, "5662": 388, "8585": 388, "234": 388, "8234": 388, "7930": 388, "235": 388, "2648": 388, "9309": 388, "236": 388, "6817": 388, "237": 388, "0943": 388, "1533": 388, "238": 388, "3045": 388, "0483": 388, "239": 388, "6415": 388, "0201": 388, "241": 388, "4437": 388, "4365": 388, "242": 388, "0358": 388, "4943": 388, "243": 388, "1272": 388, "5003": 388, "1180": 388, "2637": 388, "245": 388, "7197": 388, "0873": 388, "246": 388, "2917": 388, "247": 388, "0160": 388, "0738": 388, "248": 388, "3689": 388, "0120": 388, "249": 388, "5570": 388, "0475": 388, "250": 388, "4423": 388, "2220": 388, "6803": 388, "252": 388, "1465": 388, "7214": 388, "253": 388, "8801": 388, "7034": 388, "254": 388, "9136": 388, "4076": 388, "7589": 388, "5013": 388, "8150": 388, "2241": 388, "257": 388, "0753": 388, "8081": 388, "1951": 388, "8314": 388, "259": 388, "0038": 388, "260": 388, "0889": 388, "4616": 388, "0655": 388, "262": 388, "8333": 388, "9476": 388, "263": 388, "7554": 388, "3798": 388, "264": 388, "3717": 388, "3947": 388, "529": 388, "265": 388, "3060": 388, "6495": 388, "7467": 388, "8889": 388, "267": 388, "8457": 388, "591": 388, "7137": 388, "0536": 388, "771": 388, "269": 388, "1651": 388, "388": 388, "270": 388, "8246": 388, "5709": 388, "281": 388, "271": 388, "7502": 388, "0521": 388, "032": 388, "272": 388, "5475": 388, "7253": 388, "273": 388, "2856": 388, "7130": 388, "274": 388, "2778": 388, "4122": 388, "8368": 388, "1841": 388, "9622": 388, "003e": 388, "277": 388, "0247": 388, "346": 388, "278": 388, "2238": 388, "6418": 388, "279": 388, "0626": 388, "2538": 388, "280": 388, "0149": 388, "7380": 388, "2167": 388, "8911": 388, "282": 388, "8725": 388, "1983": 388, "8142": 388, "3709": 388, "284": 388, "4989": 388, "285": 388, "6464": 388, "6210": 388, "286": 388, "9726": 388, "0820": 388, "287": 388, "6975": 388, "9091": 388, "4926": 388, "4791": 388, "289": 388, "0905": 388, "3500": 388, "290": 388, "2287": 388, "291": 388, "9918": 388, "5543": 388, "9245": 388, "6444": 388, "631": 388, "293": 388, "0448": 388, "4769": 388, "8566": 388, "7208": 388, "295": 388, "0966": 388, "296": 388, "5303": 388, "1537": 388, "023": 388, "297": 388, "2682": 388, "564": 388, "298": 388, "4318": 388, "5063": 388, "299": 388, "7475": 388, "4190": 388, "8186": 388, "5077": 388, "301": 388, "1883": 388, "5291": 388, "472": 388, "302": 388, "3998": 388, "303": 388, "3622": 388, "0930": 388, "626": 388, "304": 388, "9500": 388, "5664": 388, "305": 388, "5697": 388, "3024": 388, "306": 388, "3117": 388, "0052": 388, "006": 388, "0981": 388, "9312": 388, "3873": 388, "309": 388, "0411": 388, "2650": 388, "1656": 388, "0228": 388, "004": 388, "311": 388, "1196": 388, "2478": 388, "312": 388, "7353": 388, "0812": 388, "313": 388, "3022": 388, "314": 388, "1406": 388, "4626": 388, "315": 388, "2156": 388, "851": 388, "316": 388, "1953": 388, "3774": 388, "6385": 388, "9917": 388, "2764": 388, "905": 388, "6391": 388, "9317": 388, "9748": 388, "2679": 388, "8495": 388, "5125": 388, "8177": 388, "6602": 388, "323": 388, "0704": 388, "5776": 388, "9833": [388, 392], "1339": 388, "402": 388, "1238": 388, "9299": 388, "0227": 388, "327": 388, "7727": 388, "1607": 388, "336": 388, "328": 388, "3958": 388, "3223": 388, "763": 388, "329": 388, "4742": 388, "1797": 388, "330": 388, "0144": 388, "0085": 388, "791": 388, "331": 388, "8284": 388, "0428": 388, "332": 388, "7365": 388, "333": 388, "4566": 388, "0781": 388, "086": 388, "334": 388, "3355": 388, "0230": 388, "335": 388, "0423": 388, "076": 388, "3711": 388, "1335": 388, "6855": 388, "337": 388, "0304": 388, "0023": 388, "8459": 388, "338": 388, "9998": 388, "4399": 388, "339": 388, "2303": 388, "1346": 388, "340": 388, "2915": 388, "7116": 388, "341": 388, "5560": 388, "0487": 388, "342": 388, "5119": 388, "061": 388, "343": 388, "3305": 388, "3705": 388, "957": 388, "344": 388, "6068": 388, "345": 388, "5731": 388, "3897": 388, "0376": 388, "0434": 388, "012": 388, "1300": 388, "1215": 388, "0968": 388, "0885": 388, "350": 388, "1348": 388, "0073": 388, "5052": 388, "4184": 388, "2817": 388, "8887": 388, "353": 388, "4779": 388, "1009": 388, "354": 388, "0604": 388, "599": 388, "355": 388, "69it": 388, "4486": 388, "1176": 388, "656": 388, "356": 388, "2436": 388, "0668": 388, "8849": 388, "0012": 388, "358": 388, "7511": 388, "8804": 388, "8870": 388, "6728": 388, "360": 388, "8841": 388, "5508": 388, "361": 388, "5242": 388, "0013": 388, "6185": 388, "363": 388, "1378": 388, "0204": 388, "364": 388, "0355": 388, "685": 388, "365": 388, "4884": 388, "0231": 388, "0014": 388, "6793": 388, "367": 388, "9834": 388, "863": 388, "368": 388, "6709": 388, "462": 388, "369": 388, "5199": 388, "9790": 388, "370": 388, "9401": 388, "7802": 388, "371": 388, "6723": 388, "372": 388, "2678": 388, "6201": 388, "373": 388, "2184": 388, "7385": 388, "374": 388, "6344": 388, "617": 388, "375": 388, "9945": 388, "0772": 388, "7576": 388, "0398": 388, "377": 388, "3396": 388, "0022": 388, "094": 388, "378": 388, "3073": 388, "4018": 388, "379": 388, "1869": 388, "380": 388, "0481": 388, "1117": 388, "381": 388, "6823": 388, "981": 388, "8305": 388, "0210": 388, "383": 388, "4908": 388, "0272": 388, "538": 388, "3267": 388, "0111": 388, "7965": 388, "1796": 388, "0039": 388, "5396": 388, "386": 388, "3757": 388, "0490": 388, "387": 388, "1394": 388, "4187": 388, "2986": 388, "7954": 388, "1274": 388, "0063": 388, "813": 388, "390": 388, "8706": 388, "0114": 388, "391": 388, "6922": 388, "2423": 388, "392": 388, "9115": 388, "2602": 388, "393": 388, "2449": 388, "0783": 388, "394": 388, "0631": 388, "0057": 388, "7444": 388, "395": 388, "3339": 388, "0167": 388, "396": 388, "4806": 388, "397": 388, "4171": 388, "067": 388, "398": 388, "2618": 388, "5809": 388, "399": 388, "0054": 388, "3364": 388, "8733": 388, "0184": 388, "401": 388, "9137": 388, "0113": 388, "025": 388, "0386": 388, "0625": 388, "403": 388, "1332": 388, "0582": 388, "7816": 388, "404": 388, "8341": 388, "0941": 388, "854": 388, "405": 388, "8615": 388, "588": 388, "406": 388, "3849": 388, "008": 388, "407": 388, "9395": 388, "0765": 388, "055": 388, "408": 388, "2685": 388, "2235": 388, "688": 388, "409": 388, "3052": 388, "4249": 388, "410": 388, "6806": 388, "6383": 388, "3721": 388, "9981": 388, "412": 388, "1862": 388, "822": 388, "413": 388, "9811": 388, "0171": 388, "013": 388, "414": 388, "0252": 388, "0049": 388, "6205": 388, "415": 388, "1108": 388, "4921": 388, "9142": 388, "8130": 388, "417": 388, "1725": 388, "0036": 388, "3196": 388, "418": 388, "7795": 388, "0242": 388, "799": 388, "419": 388, "7737": 388, "0138": 388, "420": 388, "1462": 388, "0053": 388, "421": 388, "9226": 388, "6139": 388, "422": 388, "9889": 388, "0403": 388, "423": 388, "6194": 388, "0032": 388, "3989": 388, "0104": 388, "425": 388, "9960": 388, "0009": 388, "6009": 388, "426": 388, "2697": 388, "0914": 388, "427": 388, "1114": 388, "428": 388, "9862": 388, "1932": 388, "429": 388, "0637": 388, "0623": 388, "082": 388, "430": 388, "9906": 388, "2031": 388, "431": 388, "9948": 388, "0895": 388, "432": 388, "1970": 388, "0256": 388, "4231": 388, "0449": 388, "644": 388, "434": 388, "1039": 388, "1973": 388, "435": 388, "4561": 388, "1225": 388, "436": 388, "0211": 388, "2125": 388, "437": 388, "3866": 388, "0050": 388, "7202": 388, "438": 388, "6388": 388, "0072": 388, "439": 388, "1187": 388, "0015": 388, "5116": 388, "440": 388, "0432": 388, "0025": 388, "7809": 388, "1925": 388, "0103": 388, "442": 388, "9570": 388, "443": 388, "0871": 388, "5601": 388, "0165": 388, "0047": 388, "6061": 388, "2746": 388, "0027": 388, "7887": 388, "446": 388, "1835": 388, "0035": 388, "855": 388, "447": 388, "8420": 388, "548": 388, "2653": 388, "0126": 388, "9736": 388, "449": 388, "0594": 388, "0119": 388, "6196": 388, "450": 388, "4509": 388, "0373": 388, "451": 388, "0620": 388, "452": 388, "6898": 388, "3235": 388, "687": 388, "453": 388, "5879": 388, "454": 388, "8406": 388, "0694": 388, "455": 388, "8259": 388, "0235": 388, "8500": 388, "0024": 388, "4054": 388, "458": 388, "2027": 388, "0894": 388, "459": 388, "5966": 388, "460": 388, "6942": 388, "0016": 388, "4254": 388, "6703": 388, "0145": 388, "8124": 388, "0218": 388, "9196": 388, "0188": 388, "8986": 388, "0884": 388, "0084": 388, "5624": 388, "465": 388, "8862": 388, "0006": 388, "5384": 388, "466": 388, "5837": 388, "467": 388, "8954": 388, "0101": 388, "6751": 388, "468": 388, "8063": 388, "0122": 388, "9635": 388, "469": 388, "0692": 388, "4216": 388, "470": 388, "1227": 388, "0586": 388, "162e": 388, "471": 388, "9690": 388, "4166": 388, "6324": 388, "473": 388, "0778": 388, "474": 388, "8548": 388, "0017": 388, "4408": 388, "475": 388, "8125": 388, "1515": 388, "476": 388, "2733": 388, "0044": 388, "2836": 388, "477": 388, "7497": 388, "7681": 388, "478": 388, "8547": 388, "0105": 388, "7212": 388, "9848": 388, "0019": 388, "6498": 388, "1987": 388, "0011": 388, "5473": 388, "481": 388, "8991": 388, "6091": 388, "9189": 388, "5771": 388, "483": 388, "6781": 388, "7542": 388, "5959": 388, "0064": 388, "2547": 388, "486": 388, "0636": 388, "547": 388, "0065": 388, "488": 388, "1694": 388, "0083": 388, "5759": 388, "0493": 388, "0021": 388, "7805": 388, "490": 388, "0950": 388, "497": 388, "491": 388, "9717": 388, "3672": 388, "0207": 388, "5365": 388, "494": 388, "2623": 388, "5078": 388, "495": 388, "4545": 388, "09636": 388, "8754": 388, "0010": 388, "0031": 388, "8269": 388, "499": 388, "6642": 388, "2284": 388, "501": 388, "9130": 388, "0008": 388, "502": 388, "503": 388, "7624": 388, "0056": 388, "3858": 388, "504": 388, "0890": 388, "0042": 388, "505": 388, "7505": 388, "2157": 388, "506": 388, "8394": 388, "3413": 388, "507": 388, "9609": 388, "0041": 388, "6905": 388, "508": 388, "8467": 388, "4409": 388, "509": 388, "510": 388, "8128": 388, "3559": 388, "511": 388, "1479": 388, "0264": 388, "1589": 388, "566": 388, "513": 388, "2756": 388, "0046": 388, "5266": 388, "514": 388, "9873": 388, "0112": 388, "9314": 388, "515": 388, "3791": 388, "0721": 388, "4580": 388, "0758": 388, "6114": 388, "517": 388, "2431": 388, "518": 388, "1958": 388, "5553": 388, "8924": 388, "0097": 388, "520": 388, "3737": 388, "0234": 388, "521": 388, "9125": 388, "4623": 388, "3230": 388, "0589": 388, "3784": 388, "523": 388, "9482": 388, "0051": 388, "524": 388, "1979": 388, "0045": 388, "6401": 388, "525": 388, "24it": 388, "1588": 388, "0048": 388, "6255": 388, "526": 388, "6084": 388, "3477": 388, "1475": 388, "0209": 388, "528": 388, "7611": 388, "1040": 388, "0099": 388, "0173": 388, "643": 388, "530": 388, "8189": 388, "4358": 388, "531": 388, "9897": 388, "532": 388, "1548": 388, "9751": 388, "533": 388, "6362": 388, "7495": 388, "534": 388, "1749": 388, "9513": 388, "535": 388, "7708": 388, "0371": 388, "536": 388, "2649": 388, "0437": 388, "537": 388, "5491": 388, "0276": 388, "6426": 388, "7294": 388, "078e": 388, "539": 388, "9928": 388, "540": 388, "7937": 388, "0124": 388, "9664": 388, "541": 388, "3342": 388, "2046": 388, "5496": 388, "0956": 388, "0059": 388, "545": 388, "9028": 388, "5843": 388, "546": 388, "0674": 388, "0178": 388, "797": 388, "2815": 388, "0599": 388, "1587": 388, "9276": 388, "8228": 388, "6164": 388, "551": 388, "6850": 388, "9167": 388, "3092": 388, "0670": 388, "9177": 388, "553": 388, "1599": 388, "0043": 388, "554": 388, "6367": 388, "555": 388, "3657": 388, "556": 388, "6694": 388, "2622": 388, "0372": 388, "4841": 388, "558": 388, "2707": 388, "757": 388, "559": 388, "2267": 388, "5415": 388, "560": 388, "4556": 388, "0163": 388, "561": 388, "1839": 388, "0809": 388, "6262": 388, "562": 388, "0278": 388, "1112": 388, "6155": 388, "565": 388, "1427": 388, "3582": 388, "624": 388, "7870": 388, "9490": 388, "0439": 388, "8796": 388, "568": 388, "8026": 388, "612": 388, "569": [388, 393], "3147": 388, "8486": 388, "570": 388, "7917": 388, "0129": 388, "571": [388, 393], "9553": 388, "0020": 388, "6871": 388, "572": 388, "3132": 388, "0159": 388, "8646": 388, "573": 388, "5320": 388, "0269": 388, "574": 388, "2955": 388, "0245": 388, "575": 388, "3347": 388, "0179": 388, "9718": 388, "1629": 388, "804": 388, "577": 388, "4164": 388, "0070": 388, "4335": 388, "578": 388, "579": 388, "3049": 388, "9063": 388, "580": 388, "8785": 388, "3295": 388, "5184": 388, "0546": 388, "582": 388, "4589": 388, "583": 388, "4697": 388, "2476": 388, "584": 388, "2397": 388, "585": 388, "4953": 388, "1775": 388, "586": 388, "2258": 388, "0110": 388, "7671": 388, "587": 388, "3981": 388, "8590": 388, "0007": 388, "589": 388, "9820": 388, "4221": 388, "590": 388, "1293": 388, "0116": 388, "868": 388, "1675": 388, "5931": 388, "592": 388, "2910": 388, "5219": 388, "2124": 388, "1730": 388, "737": 388, "594": 388, "2914": 388, "0206": 388, "595": 388, "0172": 388, "3982": 388, "0945": 388, "0121": 388, "4789": 388, "597": 388, "3805": 388, "4074": 388, "598": 388, "3310": 388, "5065": 388, "6028": 388, "6316": 388, "6724": 388, "6523": 388, "601": 388, "0136": 388, "4298": 388, "602": 388, "3524": 388, "2629": 388, "603": 388, "2635": 388, "7839": 388, "604": 388, "6041": 388, "8027": 388, "4170": 388, "4675": 388, "606": 388, "3153": 388, "9316": 388, "607": 388, "0649": 388, "9722": 388, "7989": 388, "0329": 388, "609": 388, "1976": 388, "6852": 388, "610": 388, "4793": 388, "1255": 388, "611": 388, "4581": 388, "0394": 388, "2047": 388, "0326": 388, "613": 388, "8967": 388, "8619": 388, "614": 388, "5906": 388, "6491": 388, "615": 388, "6634": 388, "4394": 388, "616": 388, "0624": 388, "0061": 388, "5676": 388, "3259": 388, "0131": 388, "7733": 388, "618": 388, "7515": 388, "0189": 388, "5575": 388, "619": 388, "9313": 388, "6286": 388, "620": 388, "4325": 388, "7832": 388, "621": 388, "1134": 388, "622": 388, "4572": 388, "0500": 388, "5838": 388, "623": 388, "3818": 388, "8623": 388, "1253": 388, "6622": 388, "subject": 388, "explain": 389, "semat": 389, "r3mtransform": 389, "env_transform": [389, 393], "s3": 389, "amazonaw": 389, "r3m_50": 389, "374m": 389, "9m": 389, "5mb": 389, "2m": 389, "2mb": 389, "4mb": 389, "0m": 389, "8mb": 389, "6mb": 389, "104m": 389, "115m": 389, "130m": 389, "139m": 389, "148m": 389, "7mb": 389, "162m": 389, "168m": 389, "179m": 389, "0mb": 389, "184m": 389, "195m": 389, "200m": 389, "212m": 389, "3mb": 389, "216m": 389, "229m": 389, "244m": 389, "249m": 389, "262m": 389, "266m": 389, "277m": 389, "9mb": 389, "281m": 389, "293m": 389, "297m": 389, "310m": 389, "314m": 389, "326m": 389, "330m": 389, "342m": 389, "345m": 389, "359m": 389, "364m": 389, "373m": 389, "wiser": 389, "batteri": 390, "buffer_list": 390, "lowest": 390, "medium": 390, "buffer_lazytensor": 390, "buffer_lazymemmap": 390, "tempdir": 390, "tmpquiklroz": 390, "fullest": 390, "mydata": 390, "background": 390, "question": [390, 392], "_i": 390, "artifici": 390, "0893e": 390, "hamper": 390, "she": 390, "pars": 390, "proport": 390, "hist": 390, "barcontain": 390, "artist": 390, "reappear": 390, "unfold": 390, "problemat": 390, "4th": 390, "prioritizedslicesampl": 390, "tensordictmaxvaluewrit": 390, "demo": 392, "icml": 392, "vmoen": 392, "fb": 392, "invest": 392, "platform": 392, "media": 392, "predominantli": 392, "tensordict1": 392, "tensordict2": 392, "tensordict_sampl": 392, "_sampler": 392, "_sum_tre": 392, "modulenotfounderror": 392, "06984967738389969": 392, "28791671991348267": 392, "noopresetenv": [392, 393], "backbone_modul": 392, "params_expand": 392, "exec_sequ": 392, "tensordict_exp": 392, "base_modul": 392, "0137": 392, "1524": 392, "0641": 392, "viewbackward0": 392, "asstridedbackward0": 392, "8728": 392, "1334": 392, "3494": 392, "6887": 392, "6402": 392, "_safetanhbackward": 392, "1132": 392, "1762": 392, "3430": 392, "2668": 392, "2918": 392, "6239": 392, "roughli": 392, "tensordicts_prealloc": 392, "tensordicts_stack": 392, "tensordict_rollout": [392, 393], "disclaim": 392, "concatmodul": 392, "loss_td": 392, "year": 392, "roadmap": 392, "compris": 392, "contributor": 392, "curiou": 392, "nascent": 392, "unsupervis": 393, "unifi": 393, "_build_env": 393, "bipedalwalk": 393, "bipedalwalkerhardcor": 393, "blackjack": 393, "carrac": 393, "7658": 393, "deserv": 393, "__episode__": 393, "__trajectory__": 393, "void": 393, "reproduct": 393, "reset_data": 393, "tensordict_tprim": 393, "imshow": 393, "axesimag": 393, "0x7f567cf575e0": 393, "1371": 393, "784": 393, "3047": 393, "1423": 393, "_check_version_exist": 393, "ns": 393, "_check_name_exist": 393, "_check_namespace_exist": 393, "namespacenotfound": 393, "suggestion_msg": 393, "wrapper1": 393, "wrapper2": 393, "obviou": 393, "truth": 393, "env0": 393, "env_transformed_bi": 393, "stanc": 393, "transformeddistribut": 393, "base_dist": 393, "concat": 393, "mofidi": 393, "transformedenviron": 393, "moderet": 393, "computation": 393, "legitim": 393, "incom": 393, "amongst": 393, "has_cuda": 393, "wor": 393, "convention": 393, "markovian": 393, "constain": 393, "bar_": 393, "get_someth": 393, "aargh": 393, "is_clos": 393, "foo_list": 393, "parallen": 393, "particularili": 393, "evolv": 393, "steadi": 393, "approx": 393, "_extra_st": 393, "observation_ssq": 393, "observation_sum": 393, "dispach": 393, "absor": 393}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "BinaryDiscreteTensorSpec"], [26, 0, 1, "", "BoundedTensorSpec"], [27, 0, 1, "", "CompositeSpec"], [28, 0, 1, "", "ConstantKLController"], [29, 0, 1, "", "DiscreteTensorSpec"], [30, 0, 1, "", "Flat2TED"], [31, 0, 1, "", "H5Combine"], [32, 0, 1, "", "H5Split"], [33, 0, 1, "", "LazyStackedCompositeSpec"], [34, 0, 1, "", "LazyStackedTensorSpec"], [35, 0, 1, "", "MultiDiscreteTensorSpec"], [36, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [37, 0, 1, "", "MultiStep"], [38, 0, 1, "", "Nested2TED"], [39, 0, 1, "", "NonTensorSpec"], [40, 0, 1, "", "OneHotDiscreteTensorSpec"], [41, 0, 1, "", "PairwiseDataset"], [42, 0, 1, "", "PrioritizedReplayBuffer"], [43, 0, 1, "", "PromptData"], [44, 0, 1, "", "PromptTensorDictTokenizer"], [45, 0, 1, "", "ReplayBuffer"], [46, 0, 1, "", "RewardData"], [47, 0, 1, "", "RolloutFromModel"], [48, 0, 1, "", "TED2Flat"], [49, 0, 1, "", "TED2Nested"], [50, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [51, 0, 1, "", "TensorDictReplayBuffer"], [52, 0, 1, "", "TensorDictTokenizer"], [53, 0, 1, "", "TensorSpec"], [54, 0, 1, "", "TokenizedDatasetLoader"], [55, 0, 1, "", "UnboundedContinuousTensorSpec"], [56, 0, 1, "", "UnboundedDiscreteTensorSpec"], [57, 0, 1, "", "check_no_exclusive_keys"], [58, 0, 1, "", "consolidate_spec"], [59, 0, 1, "", "contains_lazy_spec"], [60, 0, 1, "", "create_infinite_iterator"], [70, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 3, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 3, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 3, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 3, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "empty"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "get"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_empty"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "items"], [33, 1, 1, "", "keys"], [33, 1, 1, "", "lock_"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 3, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unlock_"], [33, 1, 1, "", "values"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 3, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 3, 1, "", "sample"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 3, 1, "", "sample"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to_categorical"], [36, 1, 1, "", "to_categorical_spec"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "update_mask"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[37, 1, 1, "", "add_module"], [37, 1, 1, "", "apply"], [37, 1, 1, "", "bfloat16"], [37, 1, 1, "", "buffers"], [37, 1, 1, "", "children"], [37, 1, 1, "", "compile"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 1, 1, "", "double"], [37, 1, 1, "", "eval"], [37, 1, 1, "", "extra_repr"], [37, 1, 1, "", "float"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_buffer"], [37, 1, 1, "", "get_extra_state"], [37, 1, 1, "", "get_parameter"], [37, 1, 1, "", "get_submodule"], [37, 1, 1, "", "half"], [37, 1, 1, "", "ipu"], [37, 1, 1, "", "load_state_dict"], [37, 1, 1, "", "modules"], [37, 1, 1, "", "named_buffers"], [37, 1, 1, "", "named_children"], [37, 1, 1, "", "named_modules"], [37, 1, 1, "", "named_parameters"], [37, 1, 1, "", "parameters"], [37, 1, 1, "", "register_backward_hook"], [37, 1, 1, "", "register_buffer"], [37, 1, 1, "", "register_forward_hook"], [37, 1, 1, "", "register_forward_pre_hook"], [37, 1, 1, "", "register_full_backward_hook"], [37, 1, 1, "", "register_full_backward_pre_hook"], [37, 1, 1, "", "register_load_state_dict_post_hook"], [37, 1, 1, "", "register_module"], [37, 1, 1, "", "register_parameter"], [37, 1, 1, "", "register_state_dict_pre_hook"], [37, 1, 1, "", "requires_grad_"], [37, 1, 1, "", "set_extra_state"], [37, 1, 1, "", "set_submodule"], [37, 1, 1, "", "share_memory"], [37, 1, 1, "", "state_dict"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_empty"], [37, 1, 1, "", "train"], [37, 1, 1, "", "type"], [37, 1, 1, "", "xpu"], [37, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 3, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 3, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[41, 3, 1, "", "batch_size"], [41, 3, 1, "", "device"], [41, 1, 1, "", "from_dataset"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 3, 1, "", "names"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dump"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "load"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "register_load_hook"], [42, 1, 1, "", "register_save_hook"], [42, 1, 1, "", "sample"], [42, 3, 1, "", "sampler"], [42, 1, 1, "", "save"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"], [42, 3, 1, "", "storage"], [42, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[43, 3, 1, "", "batch_size"], [43, 3, 1, "", "device"], [43, 1, 1, "", "from_dataset"], [43, 1, 1, "", "from_tensordict"], [43, 1, 1, "", "get"], [43, 1, 1, "", "load"], [43, 1, 1, "", "load_"], [43, 1, 1, "", "load_memmap"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "memmap"], [43, 1, 1, "", "memmap_"], [43, 1, 1, "", "memmap_like"], [43, 1, 1, "", "memmap_refresh_"], [43, 3, 1, "", "names"], [43, 1, 1, "", "save"], [43, 1, 1, "", "set"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to_tensordict"], [43, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[45, 1, 1, "", "add"], [45, 1, 1, "", "append_transform"], [45, 1, 1, "", "dump"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "empty"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "insert_transform"], [45, 1, 1, "", "load"], [45, 1, 1, "", "loads"], [45, 1, 1, "", "register_load_hook"], [45, 1, 1, "", "register_save_hook"], [45, 1, 1, "", "sample"], [45, 3, 1, "", "sampler"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set_sampler"], [45, 1, 1, "", "set_storage"], [45, 1, 1, "", "set_writer"], [45, 3, 1, "", "storage"], [45, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[46, 3, 1, "", "batch_size"], [46, 3, 1, "", "device"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 3, 1, "", "names"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[47, 1, 1, "", "create_rollout_td"], [47, 1, 1, "", "generate"], [47, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "append_transform"], [50, 1, 1, "", "dump"], [50, 1, 1, "", "dumps"], [50, 1, 1, "", "empty"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "insert_transform"], [50, 1, 1, "", "load"], [50, 1, 1, "", "loads"], [50, 1, 1, "", "register_load_hook"], [50, 1, 1, "", "register_save_hook"], [50, 1, 1, "", "sample"], [50, 3, 1, "", "sampler"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set_sampler"], [50, 1, 1, "", "set_storage"], [50, 1, 1, "", "set_writer"], [50, 3, 1, "", "storage"], [50, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 3, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[54, 1, 1, "", "dataset_to_tensordict"], [54, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 3, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 3, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"]], "torchrl.data.datasets": [[61, 0, 1, "", "AtariDQNExperienceReplay"], [62, 0, 1, "", "BaseDatasetExperienceReplay"], [63, 0, 1, "", "D4RLExperienceReplay"], [64, 0, 1, "", "GenDGRLExperienceReplay"], [65, 0, 1, "", "MinariExperienceReplay"], [66, 0, 1, "", "OpenMLExperienceReplay"], [67, 0, 1, "", "OpenXExperienceReplay"], [68, 0, 1, "", "RobosetExperienceReplay"], [69, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 3, 1, "", "data_path"], [63, 3, 1, "", "data_path_root"], [63, 1, 1, "", "delete"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "preprocess"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 3, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 3, 1, "", "storage"], [63, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 3, 1, "", "data_path"], [64, 3, 1, "", "data_path_root"], [64, 1, 1, "", "delete"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "preprocess"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 3, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 3, 1, "", "storage"], [64, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 3, 1, "", "data_path"], [65, 3, 1, "", "data_path_root"], [65, 1, 1, "", "delete"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "preprocess"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 3, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 3, 1, "", "storage"], [65, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 3, 1, "", "data_path"], [66, 3, 1, "", "data_path_root"], [66, 1, 1, "", "delete"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "preprocess"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 3, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 3, 1, "", "storage"], [66, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 3, 1, "", "data_path"], [67, 3, 1, "", "data_path_root"], [67, 1, 1, "", "delete"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "preprocess"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 3, 1, "", "data_path"], [68, 3, 1, "", "data_path_root"], [68, 1, 1, "", "delete"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "preprocess"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 3, 1, "", "data_path"], [69, 3, 1, "", "data_path_root"], [69, 1, 1, "", "delete"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "preprocess"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 3, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 3, 1, "", "storage"], [69, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[71, 0, 1, "", "FlatStorageCheckpointer"], [72, 0, 1, "", "H5StorageCheckpointer"], [73, 0, 1, "", "ImmutableDatasetWriter"], [74, 0, 1, "", "LazyMemmapStorage"], [75, 0, 1, "", "LazyTensorStorage"], [76, 0, 1, "", "ListStorage"], [77, 0, 1, "", "ListStorageCheckpointer"], [78, 0, 1, "", "NestedStorageCheckpointer"], [79, 0, 1, "", "PrioritizedSampler"], [80, 0, 1, "", "PrioritizedSliceSampler"], [81, 0, 1, "", "RandomSampler"], [82, 0, 1, "", "ReplayBufferEnsemble"], [83, 0, 1, "", "RoundRobinWriter"], [84, 0, 1, "", "Sampler"], [85, 0, 1, "", "SamplerEnsemble"], [86, 0, 1, "", "SamplerWithoutReplacement"], [87, 0, 1, "", "SliceSampler"], [88, 0, 1, "", "SliceSamplerWithoutReplacement"], [89, 0, 1, "", "Storage"], [90, 0, 1, "", "StorageCheckpointerBase"], [91, 0, 1, "", "StorageEnsemble"], [92, 0, 1, "", "StorageEnsembleCheckpointer"], [93, 0, 1, "", "TensorDictMaxValueWriter"], [94, 0, 1, "", "TensorDictRoundRobinWriter"], [95, 0, 1, "", "TensorStorage"], [96, 0, 1, "", "TensorStorageCheckpointer"], [97, 0, 1, "", "Writer"], [98, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[73, 1, 1, "", "add"], [73, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[74, 1, 1, "", "attach"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "load"], [74, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[75, 1, 1, "", "attach"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "load"], [75, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[76, 1, 1, "", "attach"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "load"], [76, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[79, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[80, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 3, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 3, 1, "", "storage"], [82, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[83, 1, 1, "", "add"], [83, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[89, 1, 1, "", "attach"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "load"], [89, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[91, 1, 1, "", "attach"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "load"], [91, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"], [93, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[94, 1, 1, "", "add"], [94, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[98, 1, 1, "", "add"], [98, 1, 1, "", "extend"]], "torchrl.envs": [[99, 2, 1, "", "BraxEnv"], [100, 2, 1, "", "BraxWrapper"], [101, 2, 1, "", "DMControlEnv"], [102, 2, 1, "", "DMControlWrapper"], [103, 0, 1, "", "EnvBase"], [104, 0, 1, "", "EnvCreator"], [105, 0, 1, "", "EnvMetaData"], [106, 2, 1, "", "GymEnv"], [107, 0, 1, "", "GymLikeEnv"], [108, 2, 1, "", "GymWrapper"], [109, 2, 1, "", "HabitatEnv"], [110, 2, 1, "", "IsaacGymEnv"], [111, 2, 1, "", "IsaacGymWrapper"], [112, 2, 1, "", "JumanjiEnv"], [113, 2, 1, "", "JumanjiWrapper"], [114, 2, 1, "", "MOGymEnv"], [115, 2, 1, "", "MOGymWrapper"], [116, 2, 1, "", "MarlGroupMapType"], [117, 2, 1, "", "MeltingpotEnv"], [118, 2, 1, "", "MeltingpotWrapper"], [119, 2, 1, "", "ModelBasedEnvBase"], [120, 2, 1, "", "MultiThreadedEnv"], [121, 2, 1, "", "MultiThreadedEnvWrapper"], [122, 2, 1, "", "OpenMLEnv"], [123, 0, 1, "", "ParallelEnv"], [124, 0, 1, "", "PendulumEnv"], [125, 2, 1, "", "PettingZooEnv"], [126, 2, 1, "", "PettingZooWrapper"], [127, 2, 1, "", "RoboHiveEnv"], [128, 2, 1, "", "SMACv2Env"], [129, 2, 1, "", "SMACv2Wrapper"], [130, 0, 1, "", "SerialEnv"], [131, 0, 1, "", "TicTacToeEnv"], [132, 2, 1, "", "VmasEnv"], [133, 2, 1, "", "VmasWrapper"], [134, 2, 1, "", "check_marl_grouping"], [135, 2, 1, "", "gym_backend"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "rollout"], [138, 2, 1, "", "set_gym_backend"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "add_truncated_keys"], [103, 1, 1, "", "append_transform"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "batch_size"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "maybe_reset"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "id0", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "id1", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "id2", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "id3", "set_seed"], [103, 1, 1, "", "set_submodule"], [103, 3, 1, "", "shape"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_keys"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "id4", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "add_truncated_keys"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "apply"], [107, 1, 1, "", "auto_register_info_dict"], [107, 3, 1, "", "batch_locked"], [107, 3, 1, "", "batch_size"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "close"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_reset"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "read_action"], [107, 1, 1, "", "read_done"], [107, 1, 1, "", "read_obs"], [107, 1, 1, "", "read_reward"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_gym"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_info_dict_reader"], [107, 1, 1, "", "set_seed"], [107, 1, 1, "", "set_submodule"], [107, 3, 1, "", "shape"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_keys"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[123, 3, 1, "", "action_key"], [123, 3, 1, "", "action_keys"], [123, 3, 1, "", "action_spec"], [123, 1, 1, "", "add_module"], [123, 1, 1, "", "add_truncated_keys"], [123, 1, 1, "", "append_transform"], [123, 1, 1, "", "apply"], [123, 3, 1, "", "batch_locked"], [123, 3, 1, "", "batch_size"], [123, 1, 1, "", "bfloat16"], [123, 1, 1, "", "buffers"], [123, 1, 1, "", "children"], [123, 1, 1, "", "compile"], [123, 1, 1, "", "cpu"], [123, 1, 1, "", "cuda"], [123, 3, 1, "", "done_key"], [123, 3, 1, "", "done_keys"], [123, 3, 1, "", "done_keys_groups"], [123, 3, 1, "", "done_spec"], [123, 1, 1, "", "double"], [123, 1, 1, "", "empty_cache"], [123, 1, 1, "", "eval"], [123, 1, 1, "", "extra_repr"], [123, 1, 1, "", "fake_tensordict"], [123, 1, 1, "", "float"], [123, 1, 1, "", "forward"], [123, 3, 1, "", "full_action_spec"], [123, 3, 1, "", "full_done_spec"], [123, 3, 1, "", "full_reward_spec"], [123, 3, 1, "", "full_state_spec"], [123, 1, 1, "", "get_buffer"], [123, 1, 1, "", "get_extra_state"], [123, 1, 1, "", "get_parameter"], [123, 1, 1, "", "get_submodule"], [123, 1, 1, "", "half"], [123, 3, 1, "", "input_spec"], [123, 1, 1, "", "ipu"], [123, 1, 1, "", "load_state_dict"], [123, 1, 1, "", "maybe_reset"], [123, 1, 1, "", "modules"], [123, 1, 1, "", "named_buffers"], [123, 1, 1, "", "named_children"], [123, 1, 1, "", "named_modules"], [123, 1, 1, "", "named_parameters"], [123, 3, 1, "", "observation_spec"], [123, 3, 1, "", "output_spec"], [123, 1, 1, "", "parameters"], [123, 1, 1, "", "rand_action"], [123, 1, 1, "", "rand_step"], [123, 1, 1, "", "register_backward_hook"], [123, 1, 1, "", "register_buffer"], [123, 1, 1, "", "register_forward_hook"], [123, 1, 1, "", "register_forward_pre_hook"], [123, 1, 1, "", "register_full_backward_hook"], [123, 1, 1, "", "register_full_backward_pre_hook"], [123, 1, 1, "", "register_gym"], [123, 1, 1, "", "register_load_state_dict_post_hook"], [123, 1, 1, "", "register_module"], [123, 1, 1, "", "register_parameter"], [123, 1, 1, "", "register_state_dict_pre_hook"], [123, 1, 1, "", "requires_grad_"], [123, 1, 1, "", "reset"], [123, 3, 1, "", "reset_keys"], [123, 3, 1, "", "reward_key"], [123, 3, 1, "", "reward_keys"], [123, 3, 1, "", "reward_spec"], [123, 1, 1, "", "rollout"], [123, 1, 1, "", "set_extra_state"], [123, 1, 1, "", "set_seed"], [123, 1, 1, "", "set_submodule"], [123, 3, 1, "", "shape"], [123, 1, 1, "", "share_memory"], [123, 3, 1, "", "specs"], [123, 1, 1, "", "state_dict"], [123, 3, 1, "", "state_keys"], [123, 3, 1, "", "state_spec"], [123, 1, 1, "", "step"], [123, 1, 1, "", "step_and_maybe_reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "to_empty"], [123, 1, 1, "", "train"], [123, 1, 1, "", "type"], [123, 1, 1, "", "update_kwargs"], [123, 1, 1, "", "xpu"], [123, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[124, 3, 1, "", "action_key"], [124, 3, 1, "", "action_keys"], [124, 3, 1, "", "action_spec"], [124, 1, 1, "", "add_module"], [124, 1, 1, "", "add_truncated_keys"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "apply"], [124, 3, 1, "", "batch_size"], [124, 1, 1, "", "bfloat16"], [124, 1, 1, "", "buffers"], [124, 1, 1, "", "children"], [124, 1, 1, "", "compile"], [124, 1, 1, "", "cpu"], [124, 1, 1, "", "cuda"], [124, 3, 1, "", "done_key"], [124, 3, 1, "", "done_keys"], [124, 3, 1, "", "done_keys_groups"], [124, 3, 1, "", "done_spec"], [124, 1, 1, "", "double"], [124, 1, 1, "", "empty_cache"], [124, 1, 1, "", "eval"], [124, 1, 1, "", "extra_repr"], [124, 1, 1, "", "fake_tensordict"], [124, 1, 1, "", "float"], [124, 1, 1, "", "forward"], [124, 3, 1, "", "full_action_spec"], [124, 3, 1, "", "full_done_spec"], [124, 3, 1, "", "full_reward_spec"], [124, 3, 1, "", "full_state_spec"], [124, 1, 1, "", "gen_params"], [124, 1, 1, "", "get_buffer"], [124, 1, 1, "", "get_extra_state"], [124, 1, 1, "", "get_parameter"], [124, 1, 1, "", "get_submodule"], [124, 1, 1, "", "half"], [124, 3, 1, "", "input_spec"], [124, 1, 1, "", "ipu"], [124, 1, 1, "", "load_state_dict"], [124, 1, 1, "", "maybe_reset"], [124, 1, 1, "", "modules"], [124, 1, 1, "", "named_buffers"], [124, 1, 1, "", "named_children"], [124, 1, 1, "", "named_modules"], [124, 1, 1, "", "named_parameters"], [124, 3, 1, "", "observation_spec"], [124, 3, 1, "", "output_spec"], [124, 1, 1, "", "parameters"], [124, 1, 1, "", "rand_action"], [124, 1, 1, "", "rand_step"], [124, 1, 1, "", "register_backward_hook"], [124, 1, 1, "", "register_buffer"], [124, 1, 1, "", "register_forward_hook"], [124, 1, 1, "", "register_forward_pre_hook"], [124, 1, 1, "", "register_full_backward_hook"], [124, 1, 1, "", "register_full_backward_pre_hook"], [124, 1, 1, "", "register_gym"], [124, 1, 1, "", "register_load_state_dict_post_hook"], [124, 1, 1, "", "register_module"], [124, 1, 1, "", "register_parameter"], [124, 1, 1, "", "register_state_dict_pre_hook"], [124, 1, 1, "", "requires_grad_"], [124, 1, 1, "", "reset"], [124, 3, 1, "", "reset_keys"], [124, 3, 1, "", "reward_key"], [124, 3, 1, "", "reward_keys"], [124, 3, 1, "", "reward_spec"], [124, 1, 1, "", "rollout"], [124, 1, 1, "", "set_extra_state"], [124, 1, 1, "", "set_seed"], [124, 1, 1, "", "set_submodule"], [124, 3, 1, "", "shape"], [124, 1, 1, "", "share_memory"], [124, 3, 1, "", "specs"], [124, 1, 1, "", "state_dict"], [124, 3, 1, "", "state_keys"], [124, 3, 1, "", "state_spec"], [124, 1, 1, "", "step"], [124, 1, 1, "", "step_and_maybe_reset"], [124, 1, 1, "", "to"], [124, 1, 1, "", "to_empty"], [124, 1, 1, "", "train"], [124, 1, 1, "", "type"], [124, 1, 1, "", "xpu"], [124, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[130, 3, 1, "", "action_key"], [130, 3, 1, "", "action_keys"], [130, 3, 1, "", "action_spec"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 3, 1, "", "batch_locked"], [130, 3, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "children"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 3, 1, "", "done_key"], [130, 3, 1, "", "done_keys"], [130, 3, 1, "", "done_keys_groups"], [130, 3, 1, "", "done_spec"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 3, 1, "", "full_action_spec"], [130, 3, 1, "", "full_done_spec"], [130, 3, 1, "", "full_reward_spec"], [130, 3, 1, "", "full_state_spec"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 3, 1, "", "input_spec"], [130, 1, 1, "", "ipu"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 3, 1, "", "observation_spec"], [130, 3, 1, "", "output_spec"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "", "rand_step"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "", "reset"], [130, 3, 1, "", "reset_keys"], [130, 3, 1, "", "reward_key"], [130, 3, 1, "", "reward_keys"], [130, 3, 1, "", "reward_spec"], [130, 1, 1, "", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "set_submodule"], [130, 3, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 3, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 3, 1, "", "state_keys"], [130, 3, 1, "", "state_spec"], [130, 1, 1, "", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "update_kwargs"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[131, 3, 1, "", "action_key"], [131, 3, 1, "", "action_keys"], [131, 3, 1, "", "action_spec"], [131, 1, 1, "", "add_module"], [131, 1, 1, "", "add_truncated_keys"], [131, 1, 1, "", "append_transform"], [131, 1, 1, "", "apply"], [131, 3, 1, "", "batch_size"], [131, 1, 1, "", "bfloat16"], [131, 1, 1, "", "buffers"], [131, 1, 1, "", "children"], [131, 1, 1, "", "compile"], [131, 1, 1, "", "cpu"], [131, 1, 1, "", "cuda"], [131, 3, 1, "", "done_key"], [131, 3, 1, "", "done_keys"], [131, 3, 1, "", "done_keys_groups"], [131, 3, 1, "", "done_spec"], [131, 1, 1, "", "double"], [131, 1, 1, "", "empty_cache"], [131, 1, 1, "", "eval"], [131, 1, 1, "", "extra_repr"], [131, 1, 1, "", "fake_tensordict"], [131, 1, 1, "", "float"], [131, 1, 1, "", "forward"], [131, 3, 1, "", "full_action_spec"], [131, 3, 1, "", "full_done_spec"], [131, 3, 1, "", "full_reward_spec"], [131, 3, 1, "", "full_state_spec"], [131, 1, 1, "", "get_buffer"], [131, 1, 1, "", "get_extra_state"], [131, 1, 1, "", "get_parameter"], [131, 1, 1, "", "get_submodule"], [131, 1, 1, "", "half"], [131, 3, 1, "", "input_spec"], [131, 1, 1, "", "ipu"], [131, 1, 1, "", "load_state_dict"], [131, 1, 1, "", "maybe_reset"], [131, 1, 1, "", "modules"], [131, 1, 1, "", "named_buffers"], [131, 1, 1, "", "named_children"], [131, 1, 1, "", "named_modules"], [131, 1, 1, "", "named_parameters"], [131, 3, 1, "", "observation_spec"], [131, 3, 1, "", "output_spec"], [131, 1, 1, "", "parameters"], [131, 1, 1, "", "rand_action"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "register_backward_hook"], [131, 1, 1, "", "register_buffer"], [131, 1, 1, "", "register_forward_hook"], [131, 1, 1, "", "register_forward_pre_hook"], [131, 1, 1, "", "register_full_backward_hook"], [131, 1, 1, "", "register_full_backward_pre_hook"], [131, 1, 1, "", "register_gym"], [131, 1, 1, "", "register_load_state_dict_post_hook"], [131, 1, 1, "", "register_module"], [131, 1, 1, "", "register_parameter"], [131, 1, 1, "", "register_state_dict_pre_hook"], [131, 1, 1, "", "requires_grad_"], [131, 1, 1, "", "reset"], [131, 3, 1, "", "reset_keys"], [131, 3, 1, "", "reward_key"], [131, 3, 1, "", "reward_keys"], [131, 3, 1, "", "reward_spec"], [131, 1, 1, "", "rollout"], [131, 1, 1, "", "set_extra_state"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "set_submodule"], [131, 3, 1, "", "shape"], [131, 1, 1, "", "share_memory"], [131, 3, 1, "", "specs"], [131, 1, 1, "", "state_dict"], [131, 3, 1, "", "state_keys"], [131, 3, 1, "", "state_spec"], [131, 1, 1, "", "step"], [131, 1, 1, "", "step_and_maybe_reset"], [131, 1, 1, "", "to"], [131, 1, 1, "", "to_empty"], [131, 1, 1, "", "train"], [131, 1, 1, "", "type"], [131, 1, 1, "", "xpu"], [131, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[136, 2, 1, "", "DreamerDecoder"], [137, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[139, 0, 1, "", "ActionDiscretizer"], [140, 0, 1, "", "ActionMask"], [141, 0, 1, "", "AutoResetEnv"], [142, 0, 1, "", "AutoResetTransform"], [143, 0, 1, "", "BatchSizeTransform"], [144, 0, 1, "", "BinarizeReward"], [145, 0, 1, "", "BurnInTransform"], [146, 0, 1, "", "CatFrames"], [147, 0, 1, "", "CatTensors"], [148, 0, 1, "", "CenterCrop"], [149, 0, 1, "", "ClipTransform"], [150, 0, 1, "", "Compose"], [151, 0, 1, "", "DTypeCastTransform"], [152, 0, 1, "", "DeviceCastTransform"], [153, 0, 1, "", "DiscreteActionProjection"], [154, 0, 1, "", "DoubleToFloat"], [155, 0, 1, "", "EndOfLifeTransform"], [156, 0, 1, "", "ExcludeTransform"], [157, 0, 1, "", "FiniteTensorDictCheck"], [158, 0, 1, "", "FlattenObservation"], [159, 0, 1, "", "FrameSkipTransform"], [160, 0, 1, "", "GrayScale"], [161, 0, 1, "", "InitTracker"], [162, 0, 1, "", "KLRewardTransform"], [163, 0, 1, "", "NoopResetEnv"], [164, 0, 1, "", "ObservationNorm"], [165, 0, 1, "", "ObservationTransform"], [166, 0, 1, "", "PermuteTransform"], [167, 0, 1, "", "PinMemoryTransform"], [168, 0, 1, "", "R3MTransform"], [169, 0, 1, "", "RandomCropTensorDict"], [170, 0, 1, "", "RemoveEmptySpecs"], [171, 0, 1, "", "RenameTransform"], [172, 0, 1, "", "Resize"], [173, 0, 1, "", "Reward2GoTransform"], [174, 0, 1, "", "RewardClipping"], [175, 0, 1, "", "RewardScaling"], [176, 0, 1, "", "RewardSum"], [177, 0, 1, "", "SelectTransform"], [178, 0, 1, "", "SignTransform"], [179, 0, 1, "", "SqueezeTransform"], [180, 0, 1, "", "StepCounter"], [181, 0, 1, "", "TargetReturn"], [182, 0, 1, "", "TensorDictPrimer"], [183, 0, 1, "", "TimeMaxPool"], [184, 0, 1, "", "ToTensorImage"], [185, 0, 1, "", "Transform"], [186, 0, 1, "", "TransformedEnv"], [187, 0, 1, "", "UnsqueezeTransform"], [188, 0, 1, "", "VC1Transform"], [189, 0, 1, "", "VIPRewardTransform"], [190, 0, 1, "", "VIPTransform"], [191, 0, 1, "", "VecGymEnvTransform"], [192, 0, 1, "", "VecNorm"], [193, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[139, 0, 1, "", "SamplingStrategy"], [139, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[141, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_env_batch_size"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[144, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[145, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[146, 1, 1, "", "forward"], [146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[148, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[149, 1, 1, "", "transform_observation_spec"], [149, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[150, 1, 1, "", "append"], [150, 1, 1, "", "forward"], [150, 1, 1, "", "insert"], [150, 1, 1, "", "to"], [150, 1, 1, "", "transform_env_batch_size"], [150, 1, 1, "", "transform_env_device"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"], [150, 1, 1, "", "transform_output_spec"], [150, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "transform_input_spec"], [151, 1, 1, "", "transform_observation_spec"], [151, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_done_spec"], [152, 1, 1, "", "transform_env_device"], [152, 1, 1, "", "transform_input_spec"], [152, 1, 1, "", "transform_observation_spec"], [152, 1, 1, "", "transform_output_spec"], [152, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[153, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "register_keys"], [155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[157, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[159, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[164, 1, 1, "", "init_stats"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[167, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[168, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[169, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_input_spec"], [170, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_input_spec"], [171, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[172, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[173, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[174, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[175, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[178, 1, 1, "", "transform_observation_spec"], [178, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_observation_spec"], [180, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "to"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[185, 3, 1, "", "container"], [185, 1, 1, "", "forward"], [185, 3, 1, "", "parent"], [185, 1, 1, "", "to"], [185, 1, 1, "", "transform_done_spec"], [185, 1, 1, "", "transform_env_batch_size"], [185, 1, 1, "", "transform_env_device"], [185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_observation_spec"], [185, 1, 1, "", "transform_output_spec"], [185, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[186, 1, 1, "", "add_truncated_keys"], [186, 1, 1, "", "append_transform"], [186, 3, 1, "", "batch_locked"], [186, 3, 1, "", "batch_size"], [186, 1, 1, "", "empty_cache"], [186, 1, 1, "", "eval"], [186, 3, 1, "", "input_spec"], [186, 1, 1, "", "insert_transform"], [186, 1, 1, "", "load_state_dict"], [186, 3, 1, "", "output_spec"], [186, 1, 1, "", "set_missing_tolerance"], [186, 1, 1, "", "set_seed"], [186, 1, 1, "", "state_dict"], [186, 1, 1, "", "to"], [186, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[187, 1, 1, "", "transform_input_spec"], [187, 1, 1, "", "transform_observation_spec"], [187, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "make_noload_model"], [188, 1, 1, "", "to"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[190, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[192, 1, 1, "", "build_td_for_shared_vecnorm"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "freeze"], [192, 1, 1, "", "frozen_copy"], [192, 1, 1, "", "get_extra_state"], [192, 3, 1, "", "loc"], [192, 3, 1, "", "scale"], [192, 1, 1, "", "set_extra_state"], [192, 3, 1, "", "standard_normal"], [192, 1, 1, "", "to_observation_norm"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[194, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[194, 1, 1, "", "add_module"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "children"], [194, 1, 1, "", "compile"], [194, 3, 1, "", "container"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 1, 1, "", "double"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 1, 1, "", "ipu"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "modules"], [194, 3, 1, "", "n_steps"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 1, 1, "", "parameters"], [194, 3, 1, "", "parent"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_submodule"], [194, 1, 1, "", "share_memory"], [194, 1, 1, "", "state_dict"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "transform_done_spec"], [194, 1, 1, "", "transform_env_batch_size"], [194, 1, 1, "", "transform_env_device"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"], [194, 1, 1, "", "transform_reward_spec"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[195, 2, 1, "", "RandomPolicy"], [196, 2, 1, "", "check_env_specs"], [197, 2, 1, "", "exploration_mode"], [198, 2, 1, "", "exploration_type"], [199, 2, 1, "", "get_available_libraries"], [200, 2, 1, "", "make_composite_from_td"], [201, 2, 1, "", "set_exploration_mode"], [202, 2, 1, "", "set_exploration_type"], [203, 2, 1, "", "step_mdp"], [204, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[205, 0, 1, "", "CEMPlanner"], [206, 0, 1, "", "Conv3dNet"], [207, 0, 1, "", "ConvNet"], [208, 0, 1, "", "DTActor"], [209, 0, 1, "", "DdpgCnnActor"], [210, 0, 1, "", "DdpgCnnQNet"], [211, 0, 1, "", "DdpgMlpActor"], [212, 0, 1, "", "DdpgMlpQNet"], [213, 0, 1, "", "DecisionTransformer"], [214, 0, 1, "", "Delta"], [215, 0, 1, "", "DistributionalDQNnet"], [216, 0, 1, "", "DistributionalQValueHook"], [217, 0, 1, "", "DreamerActor"], [218, 0, 1, "", "DuelingCnnDQNet"], [219, 0, 1, "", "GRU"], [220, 0, 1, "", "GRUCell"], [221, 0, 1, "", "GRUModule"], [222, 0, 1, "", "IndependentNormal"], [223, 0, 1, "", "LSTM"], [224, 0, 1, "", "LSTMCell"], [225, 0, 1, "", "LSTMModule"], [226, 0, 1, "", "MLP"], [227, 0, 1, "", "MPCPlannerBase"], [228, 0, 1, "", "MPPIPlanner"], [229, 0, 1, "", "MaskedCategorical"], [230, 0, 1, "", "MaskedOneHotCategorical"], [231, 0, 1, "", "MultiAgentConvNet"], [232, 0, 1, "", "MultiAgentMLP"], [233, 0, 1, "", "MultiAgentNetBase"], [234, 0, 1, "", "NoisyLazyLinear"], [235, 0, 1, "", "NoisyLinear"], [236, 0, 1, "", "NormalParamWrapper"], [237, 0, 1, "", "ObsDecoder"], [238, 0, 1, "", "ObsEncoder"], [239, 0, 1, "", "OneHotCategorical"], [240, 0, 1, "", "OnlineDTActor"], [241, 0, 1, "", "QMixer"], [242, 0, 1, "", "QValueHook"], [243, 0, 1, "", "RSSMPosterior"], [244, 0, 1, "", "RSSMPrior"], [245, 0, 1, "", "Squeeze2dLayer"], [246, 0, 1, "", "SqueezeLayer"], [247, 0, 1, "", "TanhDelta"], [248, 0, 1, "", "TanhNormal"], [249, 0, 1, "", "TruncatedNormal"], [250, 0, 1, "", "VDNMixer"], [251, 0, 1, "", "VmapModule"], [252, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[205, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[206, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[207, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[208, 1, 1, "", "default_config"], [208, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[209, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[210, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[211, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[212, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[213, 0, 1, "", "DTConfig"], [213, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[214, 1, 1, "", "log_prob"], [214, 3, 1, "", "mean"], [214, 3, 1, "", "mode"], [214, 1, 1, "", "rsample"], [214, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[215, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[217, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[218, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[219, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[220, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[221, 1, 1, "", "forward"], [221, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[222, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[223, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[224, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[225, 1, 1, "", "forward"], [225, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.MLP": [[226, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[228, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[229, 1, 1, "", "log_prob"], [229, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[230, 1, 1, "", "log_prob"], [230, 1, 1, "", "rsample"], [230, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "from_stateful_net"], [233, 1, 1, "", "get_stateful_net"], [233, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[234, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[236, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[237, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[238, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[239, 1, 1, "", "log_prob"], [239, 3, 1, "", "mode"], [239, 1, 1, "", "rsample"], [239, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[240, 1, 1, "", "default_config"], [240, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[241, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[243, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[244, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[246, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[247, 3, 1, "", "mean"], [247, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[248, 1, 1, "", "get_mode"], [248, 3, 1, "", "mean"], [248, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[249, 1, 1, "", "log_prob"], [249, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[250, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[251, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[253, 0, 1, "", "Actor"], [254, 0, 1, "", "ActorCriticOperator"], [255, 0, 1, "", "ActorCriticWrapper"], [256, 0, 1, "", "ActorValueOperator"], [257, 0, 1, "", "AdditiveGaussianModule"], [258, 0, 1, "", "AdditiveGaussianWrapper"], [259, 0, 1, "", "DecisionTransformerInferenceWrapper"], [260, 0, 1, "", "DistributionalQValueActor"], [261, 0, 1, "", "DistributionalQValueModule"], [262, 0, 1, "", "EGreedyModule"], [263, 0, 1, "", "EGreedyWrapper"], [264, 0, 1, "", "LMHeadActorValueOperator"], [265, 0, 1, "", "MultiStepActorWrapper"], [266, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [267, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [268, 0, 1, "", "ProbabilisticActor"], [269, 0, 1, "", "QValueActor"], [270, 0, 1, "", "QValueModule"], [271, 0, 1, "", "SafeModule"], [272, 0, 1, "", "SafeProbabilisticModule"], [273, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [274, 0, 1, "", "SafeSequential"], [275, 0, 1, "", "TanhModule"], [276, 0, 1, "", "ValueOperator"], [277, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[254, 1, 1, "", "get_critic_operator"], [254, 1, 1, "", "get_policy_head"], [254, 1, 1, "", "get_value_head"], [254, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[255, 1, 1, "", "get_policy_head"], [255, 1, 1, "", "get_policy_operator"], [255, 1, 1, "", "get_value_head"], [255, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[256, 1, 1, "", "get_policy_head"], [256, 1, 1, "", "get_policy_operator"], [256, 1, 1, "", "get_value_head"], [256, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianModule": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "mask_context"], [259, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[261, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[265, 1, 1, "", "forward"], [265, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[270, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[271, 1, 1, "", "random"], [271, 1, 1, "", "random_sample"], [271, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[272, 1, 1, "", "random"], [272, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[275, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[277, 1, 1, "", "get_reward_operator"], [277, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[278, 0, 1, "", "biased_softplus"], [279, 0, 1, "", "get_primers_from_module"], [280, 0, 1, "", "inv_softplus"], [281, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[278, 1, 1, "", "forward"]], "torchrl.objectives": [[282, 0, 1, "", "A2CLoss"], [283, 0, 1, "", "CQLLoss"], [284, 0, 1, "", "ClipPPOLoss"], [285, 0, 1, "", "DDPGLoss"], [286, 0, 1, "", "DQNLoss"], [287, 0, 1, "", "DTLoss"], [288, 0, 1, "", "DiscreteCQLLoss"], [289, 0, 1, "", "DiscreteIQLLoss"], [290, 0, 1, "", "DiscreteSACLoss"], [291, 0, 1, "", "DistributionalDQNLoss"], [292, 0, 1, "", "DreamerActorLoss"], [293, 0, 1, "", "DreamerModelLoss"], [294, 0, 1, "", "DreamerValueLoss"], [295, 0, 1, "", "HardUpdate"], [296, 0, 1, "", "IQLLoss"], [297, 0, 1, "", "KLPENPPOLoss"], [298, 0, 1, "", "LossModule"], [299, 0, 1, "", "OnlineDTLoss"], [300, 0, 1, "", "PPOLoss"], [301, 0, 1, "", "REDQLoss"], [302, 0, 1, "", "ReinforceLoss"], [303, 0, 1, "", "SACLoss"], [304, 0, 1, "", "SoftUpdate"], [305, 0, 1, "", "TD3BCLoss"], [306, 0, 1, "", "TD3Loss"], [307, 0, 1, "", "ValueEstimators"], [308, 0, 1, "", "default_value_kwargs"], [309, 0, 1, "", "distance_loss"], [310, 0, 1, "", "hold_out_net"], [311, 0, 1, "", "hold_out_params"], [313, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[282, 1, 1, "", "forward"], [282, 3, 1, "", "functional"], [282, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[284, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[287, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[289, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[292, 1, 1, "", "forward"], [292, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[293, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[294, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[296, 1, 1, "", "forward"], [296, 1, 1, "", "loss_value_diff"], [296, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[297, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[298, 1, 1, "", "convert_to_functional"], [298, 1, 1, "", "forward"], [298, 1, 1, "", "from_stateful_net"], [298, 3, 1, "", "functional"], [298, 1, 1, "", "get_stateful_net"], [298, 1, 1, "", "make_value_estimator"], [298, 1, 1, "", "named_parameters"], [298, 1, 1, "", "parameters"], [298, 1, 1, "", "set_keys"], [298, 3, 1, "", "value_estimator"], [298, 3, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[299, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[300, 1, 1, "", "forward"], [300, 3, 1, "", "functional"], [300, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[301, 1, 1, "", "forward"], [301, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[302, 1, 1, "", "forward"], [302, 3, 1, "", "functional"], [302, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[303, 1, 1, "", "forward"], [303, 1, 1, "", "load_state_dict"], [303, 1, 1, "", "make_value_estimator"], [303, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[305, 1, 1, "", "actor_loss"], [305, 1, 1, "", "forward"], [305, 1, 1, "", "make_value_estimator"], [305, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[306, 1, 1, "", "forward"], [306, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[312, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[312, 1, 1, "", "forward"], [312, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[314, 0, 1, "", "GAE"], [315, 0, 1, "", "TD0Estimator"], [316, 0, 1, "", "TD1Estimator"], [317, 0, 1, "", "TDLambdaEstimator"], [318, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[314, 1, 1, "", "forward"], [314, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[316, 1, 1, "", "forward"], [316, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[318, 1, 1, "", "forward"], [318, 1, 1, "", "set_keys"], [318, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[319, 0, 1, "", "generalized_advantage_estimate"], [320, 0, 1, "", "reward2go"], [321, 0, 1, "", "td0_advantage_estimate"], [322, 0, 1, "", "td0_return_estimate"], [323, 0, 1, "", "td1_advantage_estimate"], [324, 0, 1, "", "td1_return_estimate"], [325, 0, 1, "", "td_lambda_advantage_estimate"], [326, 0, 1, "", "td_lambda_return_estimate"], [327, 0, 1, "", "vec_generalized_advantage_estimate"], [328, 0, 1, "", "vec_td1_advantage_estimate"], [329, 0, 1, "", "vec_td1_return_estimate"], [330, 0, 1, "", "vec_td_lambda_advantage_estimate"], [331, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[332, 2, 1, "", "PixelRenderTransform"], [333, 2, 1, "", "TensorDictRecorder"], [334, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[335, 2, 1, "", "Logger"], [337, 2, 1, "", "generate_exp_name"], [338, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[336, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[339, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[340, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[341, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[342, 0, 1, "", "BatchSubSampler"], [343, 0, 1, "", "ClearCudaCache"], [344, 0, 1, "", "CountFramesLog"], [345, 0, 1, "", "LogReward"], [346, 0, 1, "", "OptimizerHook"], [347, 0, 1, "", "Recorder"], [348, 0, 1, "", "ReplayBufferTrainer"], [349, 0, 1, "", "RewardNormalizer"], [350, 0, 1, "", "SelectKeys"], [351, 0, 1, "", "Trainer"], [352, 0, 1, "", "TrainerHookBase"], [353, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[342, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[343, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[344, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[345, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[346, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[347, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[348, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[349, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[350, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[352, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[353, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[354, 2, 1, "", "correct_for_frame_skip"], [355, 2, 1, "", "get_stats_random_rollout"], [356, 2, 1, "", "make_collector_offpolicy"], [357, 2, 1, "", "make_collector_onpolicy"], [358, 2, 1, "", "make_dqn_loss"], [359, 2, 1, "", "make_replay_buffer"], [360, 2, 1, "", "make_target_updater"], [361, 2, 1, "", "make_trainer"], [362, 2, 1, "", "parallel_env_constructor"], [363, 2, 1, "", "sync_async_collector"], [364, 2, 1, "", "sync_sync_collector"], [365, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 369, 370, 371, 372, 374, 375, 376, 379, 386, 387, 388, 392, 393], "instal": [0, 6, 7, 392], "get": [0, 378, 379, 380, 381, 382, 383], "start": [0, 378, 379, 380, 381, 382, 383], "tutori": [0, 376, 386, 387], "basic": [0, 390], "intermedi": [0, 8], "advanc": 0, "refer": [0, 367], "knowledg": [0, 368], "base": [0, 2, 7, 368], "indic": 0, "tabl": 0, "collector": [1, 374, 375, 376, 377, 381, 383, 386, 387, 392], "packag": [1, 2, 3, 369, 370, 371, 372], "batch": [1, 374, 388, 390], "size": [1, 374, 390], "replai": [1, 2, 374, 375, 376, 377, 381, 383, 386, 387, 390, 392], "buffer": [1, 2, 374, 375, 376, 377, 381, 383, 386, 387, 390, 392], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 374, 375, 376, 381, 383, 386, 387, 392], "distribut": [1, 369], "helper": [1, 3], "function": [1, 4, 370, 375, 376, 380, 386, 387, 392], "compos": [2, 150], "support": 2, "type": 2, "choos": 2, "storag": [2, 89, 374, 381, 390], "sampl": [2, 390], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 375, 390], "trajectori": [2, 390], "checkpoint": [2, 371], "episod": [2, 4], "format": 2, "ted": [2, 378], "The": [2, 374], "rational": 2, "behind": 2, "structur": [2, 390], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 369, 390, 392], "special": [2, 379, 392], "case": 2, "footnot": 2, "multi": [2, 3, 369, 370, 385, 386, 387], "agent": [2, 3, 4, 369, 370, 386, 387], "present": 2, "polici": [2, 4, 374, 376, 377, 379, 383, 385, 386, 387, 388], "rnn": 2, "transform": [2, 3, 185, 374, 376, 378, 386, 387, 388, 390, 392, 393], "step": [2, 374, 376, 378, 381, 386, 387, 390, 393], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 53], "reinforc": [2, 370, 376, 386, 387], "learn": [2, 4, 376, 386, 387], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 369, 370, 371, 386], "env": [3, 388, 392, 393], "vector": [3, 392], "custom": [3, 11, 388, 390], "nativ": 3, "environ": [3, 4, 6, 7, 374, 375, 376, 377, 378, 383, 385, 386, 387, 388, 392, 393], "auto": 3, "reset": [3, 388, 393], "dynam": [3, 4, 390], "spec": [3, 388, 393], "clone": [3, 7], "mask": 3, "action": [3, 4, 377, 388], "record": [3, 347, 371, 374, 382], "video": [3, 11, 382], "domain": [3, 369], "specif": [3, 369, 385], "librari": [3, 392], "thing": [4, 374, 388], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 378, 380, 392], "gener": [4, 11, 369], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 374, 383, 388], "algorithm": [4, 369], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 374, 375, 380, 383], "return": [4, 370], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 392], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 385], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 374, 375, 376], "standard": 4, "explor": [4, 369, 374, 375, 379], "valu": [4, 369, 370, 374, 376, 377, 379], "loss": [4, 374, 375, 376, 377, 383, 386, 387], "earli": 4, "train": [4, 8, 370, 374, 376, 377, 380, 383, 386, 387, 388], "roughli": 4, "uniformli": 4, "random": [4, 370, 386, 387], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 375], "increas": 4, "an": [4, 376, 377, 378, 388], "can": 4, "low": 4, "forward": [4, 374], "model": [4, 369, 374, 375, 377, 380, 389, 392], "also": 4, "us": [4, 6, 9, 377, 389, 390, 392], "offlin": 4, "observ": [4, 374], "space": 4, "effect": [4, 388], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 393], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 374], "render": [7, 11, 383, 386, 387, 393], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 374], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 388], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 375, 390], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binarydiscretetensorspec": 25, "boundedtensorspec": 26, "compositespec": 27, "constantklcontrol": 28, "discretetensorspec": 29, "flat2t": 30, "h5combin": 31, "h5split": 32, "lazystackedcompositespec": 33, "lazystackedtensorspec": 34, "multidiscretetensorspec": 35, "multionehotdiscretetensorspec": 36, "multistep": 37, "nested2t": 38, "nontensorspec": 39, "onehotdiscretetensorspec": 40, "pairwisedataset": 41, "prioritizedreplaybuff": 42, "promptdata": 43, "prompttensordicttoken": 44, "replaybuff": 45, "rewarddata": 46, "rolloutfrommodel": 47, "ted2flat": 48, "ted2nest": 49, "tensordictprioritizedreplaybuff": 50, "tensordictreplaybuff": 51, "tensordicttoken": 52, "tokenizeddatasetload": 54, "unboundedcontinuoustensorspec": 55, "unboundeddiscretetensorspec": 56, "check_no_exclusive_kei": 57, "consolidate_spec": 58, "contains_lazy_spec": 59, "create_infinite_iter": 60, "ataridqnexperiencereplai": 61, "basedatasetexperiencereplai": 62, "d4rlexperiencereplai": 63, "gendgrlexperiencereplai": 64, "minariexperiencereplai": 65, "openmlexperiencereplai": 66, "openxexperiencereplai": 67, "robosetexperiencereplai": 68, "vd4rlexperiencereplai": 69, "get_dataload": 70, "flatstoragecheckpoint": 71, "h5storagecheckpoint": 72, "immutabledatasetwrit": 73, "lazymemmapstorag": 74, "lazytensorstorag": 75, "liststorag": 76, "liststoragecheckpoint": 77, "nestedstoragecheckpoint": 78, "prioritizedsampl": 79, "prioritizedslicesampl": 80, "randomsampl": 81, "replaybufferensembl": 82, "roundrobinwrit": 83, "sampler": 84, "samplerensembl": 85, "samplerwithoutreplac": 86, "slicesampl": 87, "slicesamplerwithoutreplac": 88, "storagecheckpointerbas": 90, "storageensembl": 91, "storageensemblecheckpoint": 92, "tensordictmaxvaluewrit": 93, "tensordictroundrobinwrit": 94, "tensorstorag": 95, "tensorstoragecheckpoint": 96, "writer": 97, "writerensembl": 98, "braxenv": 99, "braxwrapp": 100, "dmcontrolenv": 101, "dmcontrolwrapp": 102, "envbas": [103, 388], "envcreat": 104, "envmetadata": 105, "gymenv": 106, "gymlikeenv": 107, "gymwrapp": 108, "habitatenv": 109, "isaacgymenv": 110, "isaacgymwrapp": 111, "jumanjienv": 112, "jumanjiwrapp": 113, "mogymenv": 114, "mogymwrapp": 115, "marlgroupmaptyp": 116, "meltingpotenv": 117, "meltingpotwrapp": 118, "modelbasedenvbas": 119, "multithreadedenv": 120, "multithreadedenvwrapp": 121, "openmlenv": 122, "parallelenv": 123, "pendulumenv": 124, "pettingzooenv": 125, "pettingzoowrapp": 126, "robohiveenv": 127, "smacv2env": 128, "smacv2wrapp": 129, "serialenv": 130, "tictactoeenv": 131, "vmasenv": 132, "vmaswrapp": 133, "check_marl_group": 134, "gym_backend": 135, "dreamerdecod": 136, "dreamerenv": 137, "set_gym_backend": 138, "actiondiscret": 139, "actionmask": 140, "autoresetenv": 141, "autoresettransform": 142, "batchsizetransform": 143, "binarizereward": 144, "burnintransform": 145, "catfram": [146, 390], "cattensor": 147, "centercrop": 148, "cliptransform": 149, "dtypecasttransform": 151, "devicecasttransform": 152, "discreteactionproject": 153, "doubletofloat": 154, "endoflifetransform": 155, "excludetransform": 156, "finitetensordictcheck": 157, "flattenobserv": 158, "frameskiptransform": 159, "grayscal": 160, "inittrack": 161, "klrewardtransform": 162, "noopresetenv": 163, "observationnorm": 164, "observationtransform": 165, "permutetransform": 166, "pinmemorytransform": 167, "r3mtransform": 168, "randomcroptensordict": 169, "removeemptyspec": 170, "renametransform": 171, "resiz": 172, "reward2gotransform": 173, "rewardclip": 174, "rewardsc": 175, "rewardsum": 176, "selecttransform": 177, "signtransform": 178, "squeezetransform": 179, "stepcount": 180, "targetreturn": 181, "tensordictprim": 182, "timemaxpool": 183, "totensorimag": 184, "transformedenv": 186, "unsqueezetransform": 187, "vc1transform": 188, "viprewardtransform": 189, "viptransform": 190, "vecgymenvtransform": 191, "vecnorm": [192, 393], "gsdenois": 193, "multisteptransform": 194, "randompolici": 195, "check_env_spec": 196, "exploration_mod": 197, "exploration_typ": 198, "get_available_librari": 199, "make_composite_from_td": 200, "set_exploration_mod": 201, "set_exploration_typ": 202, "step_mdp": 203, "terminated_or_trunc": 204, "cemplann": 205, "conv3dnet": 206, "convnet": 207, "dtactor": 208, "ddpgcnnactor": 209, "ddpgcnnqnet": 210, "ddpgmlpactor": 211, "ddpgmlpqnet": 212, "decisiontransform": 213, "delta": 214, "distributionaldqnnet": 215, "distributionalqvaluehook": 216, "dreameractor": 217, "duelingcnndqnet": 218, "gru": 219, "grucel": 220, "grumodul": 221, "independentnorm": 222, "lstm": [223, 377], "lstmcell": 224, "lstmmodul": 225, "mlp": [226, 377], "mpcplannerbas": 227, "mppiplann": 228, "maskedcategor": 229, "maskedonehotcategor": 230, "multiagentconvnet": 231, "multiagentmlp": 232, "multiagentnetbas": 233, "noisylazylinear": 234, "noisylinear": 235, "normalparamwrapp": 236, "obsdecod": 237, "obsencod": 238, "onehotcategor": 239, "onlinedtactor": 240, "qmixer": [241, 370], "qvaluehook": 242, "rssmposterior": 243, "rssmprior": 244, "squeeze2dlay": 245, "squeezelay": 246, "tanhdelta": 247, "tanhnorm": 248, "truncatednorm": 249, "vdnmixer": 250, "vmapmodul": 251, "reset_nois": 252, "actor": [253, 369, 374, 379], "actorcriticoper": 254, "actorcriticwrapp": 255, "actorvalueoper": 256, "additivegaussianmodul": 257, "additivegaussianwrapp": 258, "decisiontransformerinferencewrapp": 259, "distributionalqvalueactor": 260, "distributionalqvaluemodul": 261, "egreedymodul": 262, "egreedywrapp": 263, "lmheadactorvalueoper": 264, "multistepactorwrapp": 265, "ornsteinuhlenbeckprocessmodul": 266, "ornsteinuhlenbeckprocesswrapp": 267, "probabilisticactor": 268, "qvalueactor": 269, "qvaluemodul": 270, "safemodul": [271, 369], "safeprobabilisticmodul": 272, "safeprobabilistictensordictsequenti": 273, "safesequenti": 274, "tanhmodul": 275, "valueoper": 276, "worldmodelwrapp": 277, "biased_softplu": 278, "get_primers_from_modul": 279, "inv_softplu": 280, "map": [281, 386], "a2closs": 282, "cqlloss": 283, "clipppoloss": 284, "ddpgloss": 285, "dqnloss": 286, "dtloss": 287, "discretecqlloss": 288, "discreteiqlloss": 289, "discretesacloss": 290, "distributionaldqnloss": 291, "dreameractorloss": 292, "dreamermodelloss": 293, "dreamervalueloss": 294, "hardupd": 295, "iqlloss": 296, "klpenppoloss": 297, "lossmodul": [298, 374, 380], "onlinedtloss": 299, "ppoloss": 300, "redqloss": 301, "reinforceloss": 302, "sacloss": 303, "softupd": 304, "td3bcloss": 305, "td3loss": 306, "valueestim": 307, "default_value_kwarg": 308, "distance_loss": 309, "hold_out_net": 310, "hold_out_param": 311, "qmixerloss": 312, "next_state_valu": 313, "gae": 314, "td0estim": 315, "td1estim": 316, "tdlambdaestim": 317, "valueestimatorbas": 318, "generalized_advantage_estim": 319, "reward2go": 320, "td0_advantage_estim": 321, "td0_return_estim": 322, "td1_advantage_estim": 323, "td1_return_estim": 324, "td_lambda_advantage_estim": 325, "td_lambda_return_estim": 326, "vec_generalized_advantage_estim": 327, "vec_td1_advantage_estim": 328, "vec_td1_return_estim": 329, "vec_td_lambda_advantage_estim": 330, "vec_td_lambda_return_estim": 331, "pixelrendertransform": 332, "tensordictrecord": 333, "videorecord": 334, "logger": [335, 371, 382, 383], "csvlogger": 336, "generate_exp_nam": 337, "get_logg": 338, "mlflowlogg": 339, "tensorboardlogg": 340, "wandblogg": 341, "batchsubsampl": 342, "clearcudacach": 343, "countframeslog": 344, "logreward": 345, "optimizerhook": 346, "replaybuffertrain": 348, "rewardnorm": 349, "selectkei": 350, "trainer": [351, 371, 375], "trainerhookbas": 352, "updateweight": 353, "correct_for_frame_skip": 354, "get_stats_random_rollout": 355, "make_collector_offpolici": 356, "make_collector_onpolici": 357, "make_dqn_loss": 358, "make_replay_buff": 359, "make_target_updat": 360, "make_train": 361, "parallel_env_constructor": 362, "sync_async_collector": 363, "sync_sync_collector": 364, "transformed_env_constructor": 365, "readm": [366, 384], "tuto": [366, 384], "api": 367, "contribut": [368, 392], "content": 368, "modul": [369, 374, 377, 379, 383, 392], "tensordictmodul": [369, 379, 392], "wrapper": [369, 379], "probabilist": [369, 379], "q": [369, 375, 377, 379], "oper": 369, "join": 369, "hook": [369, 371, 375], "regular": 369, "planner": 369, "object": [370, 374, 380, 392], "torch": 370, "vmap": 370, "dqn": [370, 375, 377], "ddpg": [370, 374, 386], "sac": 370, "redq": 370, "crossq": 370, "iql": 370, "cql": 370, "dt": 370, "td3": 370, "bc": 370, "ppo": [370, 376, 387], "a2c": 370, "dreamer": 370, "builder": 371, "_util": 372, "comput": [373, 375, 388, 391], "time": [373, 374, 391], "code": [374, 388], "overview": [374, 377], "setup": [374, 377], "__init__": 374, "method": 374, "estim": 374, "put": 374, "togeth": [374, 388], "call": 374, "parallel": [374, 385, 393], "execut": [374, 385, 388], "stat": 374, "build": [374, 375, 383, 390], "evalu": 374, "construct": 374, "target": [374, 375, 380], "network": [374, 375, 376, 377, 379, 386, 387], "updat": 374, "experi": [374, 388], "result": [374, 376, 386, 387], "conclus": [374, 375, 376, 377, 386, 387, 388, 390], "next": [374, 376, 378, 381, 386, 387, 390], "A": [375, 390], "deep": 375, "collect": [375, 376, 381], "paramet": [375, 376, 380], "hyperparamet": [375, 376, 386, 387], "regist": 375, "possibl": 375, "improv": 375, "defin": [376, 386, 387], "loop": [376, 377, 383, 386, 387, 388], "recurr": 377, "convolut": 377, "select": 377, "further": [377, 380], "read": 377, "creat": 378, "run": [378, 393], "rollout": [378, 385, 386, 387, 388, 393], "s": [379, 380], "output": 380, "consider": 380, "log": 382, "own": 383, "first": 383, "design": 383, "divers": 385, "competit": 386, "group": 386, "critic": [386, 387], "pendulum": 388, "write": 388, "_step": 388, "simul": 388, "_reset": 388, "metadata": 388, "_spec": 388, "shape": 388, "seed": [388, 393], "wrap": 388, "class": [388, 392], "test": 388, "our": 388, "simpl": 388, "pretrain": 389, "vanilla": 390, "integr": 390, "tensorclass": 390, "other": 390, "tensor": 390, "pytre": 390, "iter": 390, "over": 390, "fix": 390, "priorit": 390, "save": 390, "raw": 390, "imag": 390, "more": 390, "complex": 390, "introduct": 392, "config": 392, "sequenc": 392, "program": 392, "ensembl": 392, "meta": 392, "state": 392, "frame_skip": 393, "deepmind": 393, "control": 393, "devic": 393, "close": 393, "access": 393, "attribut": 393, "kwarg": 393}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})