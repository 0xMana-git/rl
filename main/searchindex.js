Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "TrajCounter", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 99, 101, 102, 104, 106, 108, 110, 112, 113, 114, 116, 117, 120, 121, 122, 123, 125, 126, 127, 128, 138, 139, 141, 144, 145, 146, 147, 148, 151, 152, 153, 157, 162, 163, 165, 166, 168, 169, 171, 175, 177, 178, 181, 187, 188, 192, 193, 194, 195, 197, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 219, 221, 229, 230, 233, 234, 236, 237, 238, 239, 246, 248, 250, 252, 254, 255, 256, 260, 261, 263, 272, 273, 278, 279, 281, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 304, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 343, 344, 345, 346, 347, 361, 363, 366, 370, 375, 376, 380, 381, 384, 391, 392, 393, 394, 397, 398, 399, 403, 404, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422], "open": [0, 5, 7, 12, 50, 52, 57, 86, 93, 404, 415, 416, 421], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "reinforc": [0, 3, 9, 83, 136, 137, 169, 236, 237, 238, 239, 243, 272, 273, 292, 309, 310, 312, 315, 316, 317, 319, 324, 325, 331, 332, 333, 334, 396, 402, 404, 407, 408, 413, 417, 420, 421], "learn": [0, 3, 7, 8, 9, 18, 45, 83, 84, 85, 87, 88, 122, 136, 137, 141, 144, 151, 169, 236, 237, 238, 239, 243, 257, 264, 271, 272, 273, 292, 309, 310, 312, 315, 316, 317, 319, 323, 324, 325, 330, 331, 332, 333, 334, 396, 399, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 421, 422], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 80, 138, 205, 264, 286, 295, 303, 309, 311, 326, 327, 329, 331, 371, 395, 397, 398, 399, 400, 403, 404, 405, 410, 413, 415, 416, 417, 418, 419, 422], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 53, 67, 120, 121, 130, 139, 223, 396, 397, 398, 401, 403, 404, 405, 407, 408, 410, 415, 416, 417, 422], "pytorch": [0, 1, 2, 3, 23, 84, 155, 156, 208, 221, 248, 252, 263, 264, 380, 395, 397, 398, 400, 403, 405, 406, 409, 413, 415, 416, 417, 418, 419, 421, 422], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 45, 54, 55, 59, 64, 67, 83, 122, 126, 130, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 161, 217, 219, 252, 271, 370, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 101, 105, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 135, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 161, 162, 163, 165, 166, 168, 169, 172, 173, 175, 177, 178, 179, 187, 188, 192, 193, 197, 200, 204, 205, 206, 209, 210, 211, 213, 215, 217, 219, 221, 227, 229, 231, 232, 233, 234, 236, 246, 247, 248, 250, 251, 252, 254, 256, 257, 260, 261, 262, 264, 265, 282, 284, 286, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 361, 363, 370, 376, 392, 393, 394, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "directli": [0, 3, 4, 8, 23, 80, 101, 118, 119, 122, 125, 126, 138, 144, 145, 151, 152, 188, 197, 216, 327, 334, 394, 404, 405, 407, 415, 416, 417, 419], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 104, 105, 106, 107, 108, 110, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 165, 166, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 224, 226, 227, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 268, 270, 271, 272, 273, 274, 275, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 325, 326, 327, 329, 330, 331, 332, 334, 335, 337, 341, 342, 343, 344, 345, 346, 349, 361, 362, 363, 371, 377, 380, 383, 384, 388, 390, 391, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422], "pypi": [0, 2, 421], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 106, 122, 126, 129, 132, 136, 137, 139, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 173, 192, 206, 208, 209, 210, 211, 213, 215, 217, 218, 219, 232, 233, 234, 248, 250, 251, 252, 254, 255, 261, 262, 263, 271, 274, 282, 283, 287, 289, 295, 298, 299, 312, 323, 327, 334, 363, 370, 377, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 419, 422], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 112, 122, 125, 126, 127, 129, 130, 132, 136, 137, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 208, 213, 218, 219, 228, 229, 230, 232, 243, 252, 255, 263, 265, 286, 291, 292, 298, 303, 309, 319, 327, 329, 343, 348, 356, 370, 375, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 422], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 67, 84, 87, 88, 122, 144, 151, 398, 399, 403, 404, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 421, 422], "instruct": [0, 6, 7, 10, 22, 82, 177, 179, 403, 404, 405, 406, 415, 416, 419], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 56, 65, 66, 101, 144, 151, 287, 288, 289, 398, 403, 407, 409, 410, 412, 414, 416], "section": [0, 2, 3, 4, 24, 248, 252, 404, 407, 412, 415, 416], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 56, 59, 64, 71, 89, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 211, 213, 215, 219, 233, 234, 248, 251, 252, 255, 261, 282, 295, 298, 377, 403, 404, 405, 406, 407, 415, 417], "pip": [0, 10, 85, 407, 408, 409, 410, 411, 412, 416, 421, 422], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 38, 41, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 99, 100, 101, 104, 106, 107, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 162, 166, 168, 169, 170, 171, 172, 174, 175, 178, 182, 187, 188, 190, 192, 193, 196, 197, 200, 201, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 219, 227, 229, 233, 234, 240, 243, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 273, 284, 286, 292, 294, 295, 296, 297, 302, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 367, 371, 377, 384, 390, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 59, 64, 140, 153, 154, 161, 248, 249, 250, 252, 253, 254, 258, 259, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "first": [0, 1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 41, 42, 43, 44, 54, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 106, 107, 112, 114, 122, 125, 126, 127, 132, 144, 145, 151, 152, 165, 166, 169, 170, 182, 188, 192, 193, 208, 211, 213, 234, 248, 250, 252, 254, 255, 261, 263, 267, 286, 290, 291, 292, 295, 296, 298, 299, 311, 321, 326, 327, 329, 362, 363, 379, 398, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "low": [0, 3, 28, 31, 55, 64, 69, 71, 99, 122, 126, 144, 145, 151, 152, 162, 172, 177, 224, 280, 281, 282, 290, 292, 295, 302, 403, 404, 405, 406, 415, 416, 417, 421, 422], "high": [0, 3, 9, 28, 31, 50, 52, 57, 65, 71, 99, 122, 126, 144, 145, 151, 152, 162, 172, 177, 187, 224, 280, 281, 282, 290, 292, 295, 302, 343, 348, 356, 403, 404, 405, 406, 415, 416, 417, 419, 421, 422], "level": [0, 2, 3, 4, 22, 31, 32, 39, 51, 56, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 125, 127, 169, 204, 326, 403, 404, 410, 421], "abstract": [0, 3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 47, 48, 60, 61, 68, 69, 71, 72, 73, 74, 75, 80, 81, 85, 116, 122, 189, 256, 347, 372, 381, 400, 405, 417, 421], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 101, 104, 105, 107, 108, 110, 112, 114, 122, 123, 125, 126, 127, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 164, 165, 166, 168, 169, 172, 173, 175, 176, 177, 178, 179, 181, 182, 186, 187, 190, 192, 197, 200, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 224, 226, 227, 231, 239, 241, 246, 248, 249, 250, 252, 253, 254, 256, 258, 259, 260, 261, 262, 264, 268, 273, 274, 277, 290, 291, 294, 295, 296, 298, 299, 300, 301, 302, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 338, 341, 342, 343, 344, 345, 346, 347, 361, 370, 377, 390, 394, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 70, 71, 72, 73, 74, 75, 168, 177, 284, 327, 398, 421], "effici": [0, 1, 2, 4, 8, 248, 264, 312, 398, 403, 404, 405, 406, 409, 410, 412, 414, 415, 416, 418, 419, 421], "modular": [0, 80, 301, 419, 421], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 45, 54, 55, 59, 64, 86, 122, 126, 142, 143, 144, 145, 151, 152, 153, 154, 211, 219, 395, 404, 406, 407, 410, 413, 421], "properli": [0, 1, 71, 122, 126, 144, 145, 151, 152, 226, 250, 254, 405, 411, 415, 416, 417, 421], "test": [0, 3, 5, 118, 119, 131, 132, 136, 137, 209, 213, 221, 250, 254, 376, 390, 405, 406, 421], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 98, 99, 101, 104, 106, 107, 108, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 156, 162, 165, 166, 168, 169, 173, 175, 178, 179, 180, 188, 190, 192, 197, 199, 200, 201, 204, 205, 206, 209, 210, 211, 213, 215, 216, 217, 219, 221, 226, 227, 228, 230, 231, 236, 237, 238, 239, 240, 243, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 269, 271, 272, 273, 275, 276, 277, 286, 287, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 349, 361, 363, 365, 368, 369, 370, 371, 375, 390, 392, 393, 396, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422], "code": [0, 3, 5, 7, 8, 14, 15, 55, 59, 86, 122, 126, 144, 145, 151, 152, 192, 211, 213, 230, 248, 249, 250, 252, 253, 254, 295, 301, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422], "aim": [0, 2, 3, 7, 60, 61, 192, 213, 215, 255, 383, 397, 398, 399, 403, 404, 421], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 54, 57, 64, 85, 88, 89, 93, 94, 108, 110, 114, 115, 117, 118, 119, 125, 127, 131, 139, 141, 144, 146, 148, 166, 169, 179, 188, 206, 207, 210, 223, 243, 269, 271, 281, 284, 291, 292, 295, 298, 301, 319, 327, 343, 344, 345, 346, 368, 396, 398, 400, 405, 406, 407, 408, 416, 417, 419, 421], "research": [0, 7, 9, 136, 137, 230, 421], "most": [0, 1, 2, 3, 7, 8, 14, 15, 45, 106, 107, 122, 126, 144, 145, 151, 152, 177, 216, 221, 403, 405, 407, 408, 409, 410, 411, 412, 417, 421, 422], "written": [0, 1, 2, 3, 12, 35, 50, 51, 52, 54, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 99, 101, 106, 107, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 162, 169, 179, 186, 200, 204, 207, 216, 219, 226, 227, 232, 272, 273, 286, 295, 298, 299, 303, 309, 311, 326, 329, 331, 342, 361, 362, 363, 398, 399, 400, 403, 406, 408, 414, 417, 421], "highli": [0, 2, 407, 421, 422], "wai": [0, 1, 2, 3, 4, 80, 84, 101, 112, 130, 192, 195, 209, 215, 216, 250, 252, 254, 329, 343, 344, 345, 346, 398, 403, 404, 405, 407, 409, 410, 414, 415, 416, 417, 418, 419, 421, 422], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 399, 403, 404, 405, 407, 408, 409, 412, 415, 416, 421, 422], "swap": [0, 1, 3, 125, 216, 405, 418, 421], "compon": [0, 1, 2, 3, 51, 55, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 243, 275, 291, 292, 297, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 375, 380, 403, 404, 405, 406, 408, 409, 412, 414, 415, 416, 417, 418, 421], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 51, 53, 56, 58, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 110, 115, 122, 123, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 226, 232, 235, 236, 240, 243, 244, 250, 254, 270, 274, 275, 281, 283, 290, 293, 294, 302, 305, 306, 308, 315, 328, 361, 363, 377, 394, 396, 402, 404, 406, 408, 410, 411, 412, 413, 418, 420], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 51, 53, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 117, 122, 123, 126, 130, 135, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 175, 178, 206, 211, 217, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 283, 284, 290, 292, 294, 297, 302, 305, 326, 363, 403, 404, 406, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "write": [0, 2, 3, 8, 23, 45, 50, 51, 52, 53, 56, 57, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 110, 117, 122, 126, 172, 190, 191, 200, 202, 204, 208, 212, 227, 286, 298, 299, 301, 303, 312, 313, 314, 316, 317, 318, 325, 330, 332, 334, 335, 342, 347, 363, 398, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 105, 122, 126, 139, 144, 145, 149, 150, 151, 152, 166, 200, 210, 217, 219, 226, 227, 248, 250, 254, 272, 273, 298, 299, 304, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 370, 399, 403, 405, 406, 407, 409, 415, 416, 417, 421, 422], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 170, 173, 175, 176, 178, 188, 192, 197, 206, 210, 211, 213, 215, 219, 220, 258, 259, 271, 284, 298, 309, 310, 312, 313, 325, 329, 330, 332, 334, 335, 349, 403, 405, 415, 416, 417, 419, 421, 422], "littl": [0, 1, 3, 67, 122, 126, 144, 145, 151, 152, 211, 309, 311, 326, 329, 331, 405, 406, 410, 419, 421, 422], "effort": [0, 3, 417, 419, 421], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 112, 114, 115, 117, 118, 119, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 141, 144, 145, 146, 147, 151, 152, 153, 155, 156, 161, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 188, 192, 193, 194, 195, 197, 200, 201, 202, 204, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 279, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 341, 343, 344, 345, 346, 347, 361, 362, 370, 371, 373, 376, 377, 380, 382, 383, 384, 390, 394, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "repo": [0, 6, 82, 169, 207, 213, 397, 416, 421], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 106, 107, 120, 121, 125, 127, 128, 148, 229, 247, 273, 314, 317, 325, 341, 409, 421], "align": [0, 248, 252, 421], "exist": [0, 2, 3, 4, 12, 18, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 93, 122, 126, 144, 145, 151, 152, 170, 176, 209, 211, 219, 312, 332, 384, 394, 415, 416, 421, 422], "ecosystem": [0, 410, 421], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 86, 93, 94, 101, 104, 106, 112, 114, 122, 123, 126, 130, 136, 137, 144, 145, 151, 152, 155, 156, 166, 169, 204, 205, 206, 207, 209, 211, 219, 228, 229, 247, 248, 250, 252, 254, 260, 262, 273, 281, 292, 294, 299, 309, 312, 326, 327, 329, 331, 363, 403, 404, 405, 406, 407, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "dataset": [0, 37, 50, 51, 52, 53, 56, 57, 58, 63, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 99, 101, 104, 106, 107, 141, 217, 363, 396, 403, 404, 407, 418, 419, 421, 422], "pillar": [0, 421], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 55, 59, 60, 61, 69, 71, 72, 73, 74, 75, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 165, 166, 168, 169, 170, 175, 176, 177, 178, 183, 187, 188, 192, 193, 194, 197, 200, 204, 205, 206, 207, 209, 210, 211, 213, 216, 217, 221, 229, 231, 232, 250, 254, 256, 257, 273, 294, 316, 320, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 371, 373, 376, 383, 384, 385, 386, 390, 391, 392, 393, 394, 396, 397, 398, 402, 408, 409, 410, 411, 413, 418, 419, 420], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 70, 122, 126, 138, 144, 145, 151, 152, 175, 192, 206, 213, 215, 218, 219, 233, 234, 235, 240, 242, 250, 254, 255, 256, 257, 261, 262, 270, 274, 283, 287, 288, 289, 293, 298, 304, 306, 309, 310, 311, 312, 314, 315, 316, 317, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 341, 380, 385, 386, 387, 396, 397, 399, 400, 402, 405, 407, 410, 413, 415, 416, 417, 419, 420, 422], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 163, 166, 168, 169, 175, 176, 178, 180, 186, 188, 194, 197, 204, 211, 216, 219, 220, 221, 224, 227, 231, 243, 246, 247, 250, 254, 257, 260, 261, 272, 273, 275, 284, 286, 291, 294, 295, 296, 298, 301, 302, 303, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 361, 363, 370, 371, 377, 380, 382, 385, 390, 392, 393, 394, 396, 398, 399, 400, 402, 406, 407, 408, 409, 413, 417, 418, 419, 420, 422], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 45, 54, 55, 56, 58, 59, 64, 118, 119, 122, 126, 131, 132, 137, 144, 145, 146, 147, 151, 152, 157, 169, 192, 197, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 240, 248, 250, 252, 254, 305, 306, 307, 308, 327, 390, 396, 401, 403, 405, 408, 409, 410, 416, 417, 419, 421, 422], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 93, 94, 98, 99, 112, 114, 122, 123, 126, 144, 145, 151, 152, 155, 166, 168, 170, 173, 174, 182, 188, 192, 200, 206, 209, 210, 211, 213, 215, 219, 221, 248, 250, 251, 252, 254, 257, 261, 265, 275, 281, 282, 290, 292, 294, 295, 297, 298, 299, 309, 311, 312, 313, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 342, 343, 344, 345, 346, 361, 371, 383, 393, 398, 404, 405, 408, 409, 411, 415, 416, 418, 419, 421, 422], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 112, 122, 123, 126, 144, 145, 151, 152, 155, 166, 168, 170, 173, 182, 188, 192, 200, 206, 209, 210, 211, 213, 215, 219, 221, 248, 250, 251, 252, 253, 254, 257, 261, 281, 282, 290, 295, 298, 299, 312, 332, 342, 352, 353, 354, 355, 357, 358, 359, 360, 361, 393, 398, 404, 405, 408, 411, 415, 416, 417, 418, 419, 421, 422], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 45, 58, 62, 80, 86, 122, 126, 144, 145, 151, 152, 166, 169, 197, 204, 219, 220, 250, 254, 272, 273, 377, 380, 382, 385, 386, 390, 392, 393, 396, 399, 400, 419, 422], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 98, 99, 101, 102, 104, 106, 107, 108, 113, 116, 117, 122, 126, 138, 144, 145, 151, 152, 162, 173, 175, 178, 192, 206, 209, 210, 211, 213, 215, 216, 217, 219, 226, 227, 231, 233, 234, 248, 249, 252, 253, 255, 257, 260, 261, 286, 291, 292, 295, 297, 298, 303, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 349, 367, 371, 383, 390, 391, 392, 393, 394, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422], "etc": [0, 2, 3, 7, 8, 12, 27, 38, 45, 54, 55, 59, 64, 69, 86, 122, 126, 144, 145, 151, 152, 186, 211, 219, 255, 261, 281, 404, 405, 410, 419, 421, 422], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 108, 122, 126, 144, 145, 146, 147, 151, 152, 162, 165, 169, 175, 178, 179, 186, 187, 188, 204, 209, 210, 211, 217, 219, 221, 227, 233, 234, 255, 260, 261, 262, 284, 294, 300, 301, 309, 311, 326, 329, 331, 334, 338, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 371, 380, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "few": [0, 2, 8, 126, 363, 371, 405, 406, 408, 415, 416, 419, 421, 422], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 50, 52, 71, 125, 127, 128, 148, 155, 156, 175, 178, 303, 329, 398, 403, 405, 406, 415, 416, 417, 421, 422], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 54, 55, 59, 60, 64, 83, 86, 88, 99, 106, 112, 122, 126, 144, 145, 151, 152, 162, 173, 192, 206, 209, 210, 211, 213, 215, 219, 233, 234, 248, 249, 252, 253, 298, 361, 376, 380, 398, 403, 405, 406, 408, 410, 411, 415, 416, 417, 419, 421, 422], "standard": [0, 3, 188, 199, 217, 228, 229, 230, 231, 244, 257, 263, 264, 270, 290, 334, 335, 343, 344, 345, 346, 403, 404, 407, 408, 416, 419, 421], "numpi": [0, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 127, 144, 145, 151, 152, 208, 380, 417, 419, 421, 422], "common": [0, 2, 3, 4, 21, 69, 126, 131, 163, 287, 288, 289, 293, 309, 310, 311, 312, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 390, 397, 398, 400, 403, 405, 408, 411, 414, 415, 416, 417, 418, 421, 422], "openai": [0, 7, 24, 125, 127, 148, 405, 417, 421, 422], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 122, 123, 125, 126, 127, 128, 130, 136, 137, 139, 140, 144, 145, 148, 151, 152, 155, 156, 158, 161, 165, 169, 172, 179, 185, 186, 188, 190, 195, 197, 200, 206, 210, 216, 217, 219, 390, 397, 403, 404, 405, 406, 407, 411, 412, 417, 418, 419, 421], "onli": [0, 1, 2, 3, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 99, 101, 106, 107, 114, 120, 121, 122, 125, 126, 127, 128, 130, 132, 139, 140, 144, 145, 146, 147, 148, 151, 152, 162, 165, 169, 170, 172, 173, 175, 177, 178, 182, 188, 192, 193, 197, 204, 205, 206, 207, 209, 210, 211, 213, 215, 217, 219, 252, 254, 260, 261, 286, 290, 291, 295, 296, 298, 299, 300, 301, 309, 311, 312, 313, 317, 318, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 343, 344, 345, 346, 347, 363, 370, 384, 399, 400, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 421, 422], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 280, 281, 282, 284, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 368, 370, 371, 373, 374, 375, 376, 377, 378, 380, 384, 385, 386, 387, 389, 390, 392, 393, 394, 398, 406, 407, 410, 415, 416, 417, 419, 421], "On": [0, 3, 7, 18, 19, 20, 21, 31, 83, 249, 253, 398, 404, 415, 416], "end": [0, 2, 3, 14, 15, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 101, 105, 106, 107, 122, 126, 144, 145, 151, 152, 179, 190, 204, 205, 209, 211, 219, 233, 234, 248, 249, 252, 253, 256, 294, 312, 332, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "come": [0, 1, 2, 3, 8, 45, 112, 122, 126, 135, 144, 145, 151, 152, 175, 178, 286, 287, 288, 289, 295, 303, 309, 311, 326, 329, 331, 363, 403, 404, 405, 406, 409, 410, 411, 412, 415, 416, 419, 421, 422], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 105, 108, 114, 122, 124, 126, 127, 136, 137, 138, 144, 145, 146, 147, 151, 152, 155, 156, 161, 163, 165, 166, 169, 170, 173, 175, 178, 185, 186, 192, 197, 204, 205, 206, 207, 209, 210, 211, 213, 215, 217, 219, 221, 225, 227, 229, 248, 250, 252, 254, 256, 260, 261, 269, 271, 281, 290, 298, 311, 312, 318, 323, 327, 329, 332, 347, 371, 376, 377, 386, 394, 397, 398, 399, 401, 403, 404, 405, 406, 408, 409, 410, 414, 415, 416, 417, 418, 419, 421, 422], "re": [0, 2, 3, 8, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 122, 126, 144, 145, 151, 152, 219, 254, 258, 259, 262, 295, 299, 370, 400, 403, 405, 406, 407, 409, 414, 415, 417, 421, 422], "usabl": [0, 400, 406, 421], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 122, 123, 126, 127, 144, 145, 151, 152, 161, 165, 166, 175, 178, 209, 211, 217, 219, 221, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 265, 266, 267, 268, 270, 272, 273, 276, 277, 279, 282, 284, 287, 288, 289, 290, 292, 294, 295, 297, 298, 299, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 390, 396, 398, 403, 406, 407, 408, 411, 414, 417, 419, 422], "cost": [0, 2, 30, 86, 309, 311, 326, 329, 331, 399, 403, 404, 415, 416, 417, 419], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 99, 101, 102, 104, 106, 107, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 155, 156, 158, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 226, 227, 231, 235, 236, 237, 238, 239, 241, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 268, 270, 274, 276, 277, 280, 281, 282, 283, 286, 287, 288, 289, 290, 294, 295, 297, 298, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 338, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 367, 380, 383, 385, 390, 391, 392, 393, 394, 396, 398, 400, 403, 404, 405, 406, 408, 409, 411, 414, 415, 416, 417, 418, 419, 421, 422], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 67, 70, 80, 83, 87, 88, 94, 98, 99, 102, 106, 114, 122, 123, 126, 130, 135, 139, 144, 145, 146, 147, 151, 152, 168, 175, 178, 206, 208, 209, 217, 219, 250, 254, 260, 261, 272, 273, 292, 297, 396, 400, 403, 404, 406, 407, 415, 416, 417, 418, 419, 421, 422], "good": [0, 1, 4, 9, 144, 403, 405, 406, 408, 416, 421, 422], "runtim": [0, 2, 3, 23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 417], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 157, 175, 178, 187, 209, 211, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 262, 265, 266, 267, 270, 271, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 311, 312, 321, 329, 332, 376, 380, 399, 403, 404, 405, 406, 407, 410, 412, 414, 415, 416, 417, 422], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 99, 101, 106, 107, 110, 117, 118, 119, 122, 125, 126, 127, 131, 132, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 204, 206, 217, 219, 232, 250, 254, 272, 273, 287, 288, 289, 312, 318, 323, 327, 334, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 51, 53, 56, 58, 61, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 101, 108, 110, 114, 122, 125, 126, 127, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 190, 191, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 209, 210, 212, 213, 214, 216, 217, 219, 227, 232, 268, 286, 287, 288, 289, 291, 294, 295, 298, 299, 301, 303, 304, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 343, 344, 345, 346, 347, 363, 376, 380, 398, 403, 404, 405, 407, 408, 414, 415, 416, 417, 418, 422], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 400, 403, 407, 410, 414, 418, 422], "beyond": [0, 122, 126, 144, 145, 151, 152], "api": [0, 2, 3, 5, 23, 54, 64, 69, 146, 147, 148, 192, 215, 217, 398, 399, 400, 407, 408, 409, 410, 411, 415, 416, 417, 419, 421, 422], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 78, 90, 91, 97, 106, 122, 123, 125, 126, 127, 138, 144, 145, 151, 152, 157, 169, 170, 181, 186, 193, 206, 208, 211, 219, 221, 250, 254, 286, 291, 292, 295, 296, 297, 298, 299, 312, 323, 334, 363, 395, 398, 399, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422], "paper": [0, 83, 86, 118, 119, 120, 121, 128, 131, 132, 136, 137, 139, 140, 148, 155, 156, 192, 213, 215, 248, 274, 283, 316, 324, 334, 403, 405, 415, 416], "releas": [0, 4, 7, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332, 421], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 382, 390, 400, 403, 421], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 151, 152, 206, 209, 217, 219, 300, 301, 403, 405, 406, 409, 412, 415, 416, 417, 422], "make": [0, 2, 3, 4, 7, 11, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 104, 108, 110, 117, 122, 126, 127, 130, 132, 134, 140, 144, 145, 151, 152, 162, 180, 188, 192, 193, 197, 204, 213, 219, 221, 230, 232, 248, 249, 250, 252, 253, 254, 260, 261, 263, 291, 299, 309, 311, 326, 329, 331, 343, 344, 345, 346, 361, 377, 386, 394, 398, 399, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "sure": [0, 3, 4, 7, 85, 108, 126, 130, 197, 291, 394, 398, 403, 405, 406, 409, 415, 416, 417, 419, 421, 422], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 69, 71, 80, 89, 90, 91, 97, 122, 126, 144, 145, 151, 152, 186, 187, 217, 219, 319, 327, 398, 399, 404, 405, 406, 415, 416, 417, 419], "enjoi": [0, 2, 3, 86, 410], "latest": [0, 2, 3, 10, 139, 142, 143, 146, 147, 377, 405, 415, 416, 417, 421], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 54, 64, 69, 70, 84, 99, 106, 107, 122, 126, 135, 144, 145, 146, 147, 149, 150, 151, 152, 166, 169, 182, 186, 190, 206, 207, 212, 217, 221, 230, 233, 234, 244, 245, 248, 249, 250, 252, 253, 254, 255, 260, 263, 264, 299, 306, 309, 311, 326, 329, 331, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 394, 398, 403, 404, 405, 406, 408, 409, 410, 412, 417, 419, 422], "recent": [0, 7, 12, 216, 417, 421, 422], "version": [0, 1, 2, 3, 6, 12, 26, 27, 29, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 50, 52, 54, 55, 58, 59, 64, 72, 73, 74, 75, 83, 88, 106, 122, 125, 126, 127, 128, 139, 140, 144, 145, 146, 148, 151, 152, 155, 156, 216, 217, 219, 226, 230, 262, 269, 289, 309, 311, 326, 327, 329, 331, 332, 343, 346, 397, 398, 399, 403, 405, 406, 407, 409, 412, 415, 416, 417, 418, 422], "although": [0, 1, 3, 8, 27, 38, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 400, 403, 404, 410, 419], "core": [0, 3, 8, 400, 406, 408, 421], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 94, 95, 108, 110, 114, 122, 126, 144, 145, 151, 152, 209, 217, 219, 410, 421], "backward": [0, 8, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 217, 219, 248, 249, 252, 253, 271, 309, 310, 312, 313, 317, 318, 325, 329, 330, 331, 332, 334, 335, 403, 405, 406, 409, 410, 412, 415, 416, 417], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 27, 38, 45, 54, 55, 59, 64, 82, 101, 104, 106, 107, 108, 112, 122, 126, 128, 141, 144, 145, 151, 152, 169, 204, 213, 217, 219, 248, 249, 250, 252, 253, 254, 296, 309, 310, 312, 313, 314, 316, 317, 318, 325, 327, 329, 330, 331, 332, 334, 335, 338, 403, 406, 419, 421], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 122, 123, 126, 131, 132, 135, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 165, 166, 168, 170, 173, 175, 176, 177, 178, 186, 188, 190, 192, 194, 197, 200, 204, 205, 206, 209, 210, 211, 213, 215, 217, 219, 224, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 265, 270, 271, 272, 273, 281, 284, 290, 291, 292, 294, 298, 302, 303, 309, 310, 311, 312, 313, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 371, 398, 399, 402, 403, 404, 405, 406, 408, 409, 410, 411, 414, 415, 416, 417, 419, 420, 421, 422], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 114, 118, 119, 122, 125, 126, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 152, 162, 163, 165, 167, 169, 170, 172, 173, 174, 176, 177, 186, 187, 188, 192, 197, 200, 202, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 263, 264, 265, 268, 271, 272, 273, 276, 277, 280, 281, 282, 284, 286, 290, 292, 297, 298, 301, 302, 305, 306, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 349, 350, 351, 371, 378, 390, 394, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 51, 54, 56, 64, 65, 66, 82, 84, 85, 86, 87, 88, 126, 144, 151, 192, 195, 210, 215, 312, 315, 327, 399, 400, 403, 404, 405, 406, 408, 410, 419, 422], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 106, 107, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 224, 226, 227, 228, 229, 231, 232, 242, 243, 246, 247, 250, 254, 256, 257, 260, 261, 272, 273, 274, 275, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 361, 362, 371, 375, 376, 377, 379, 380, 396, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 422], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 186, 194, 209, 287, 288, 289, 298, 317, 325, 334, 396, 403, 415, 417, 421], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 101, 109, 115, 122, 126, 144, 145, 151, 152, 153, 161, 192, 215, 219, 257, 365, 370, 380, 400, 404, 412, 415], "root": [0, 2, 3, 31, 32, 39, 51, 56, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 144, 169, 207, 226, 250, 251, 254, 281, 282, 406, 407, 415, 416, 417, 418, 419, 422], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 51, 67, 80, 83, 84, 85, 86, 87, 88, 98, 99, 118, 119, 120, 121, 128, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 153, 154, 155, 156, 169, 192, 213, 230, 235, 236, 237, 238, 239, 240, 243, 244, 245, 252, 257, 258, 259, 264, 266, 267, 271, 272, 273, 274, 276, 277, 283, 292, 309, 310, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 343, 348, 356, 395, 413, 418, 421], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 80, 83, 84, 86, 118, 119, 120, 121, 125, 128, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 166, 213, 230, 408, 412, 415, 416, 421], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 83, 86, 87, 118, 119, 120, 121, 128, 130, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 230, 418, 421], "setup": [0, 7, 118, 119, 130, 131, 132, 153], "py": [0, 3, 24, 125, 127, 161, 274, 283, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422], "develop": [0, 3, 4, 7, 130, 403, 421], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 108, 112, 113, 114, 115, 116, 122, 124, 126, 128, 129, 144, 145, 148, 151, 152, 159, 162, 164, 165, 166, 168, 172, 177, 183, 186, 192, 193, 195, 202, 206, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 226, 228, 229, 231, 232, 233, 234, 243, 246, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 261, 262, 264, 265, 271, 284, 290, 291, 292, 294, 295, 296, 299, 301, 302, 305, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 338, 341, 343, 344, 345, 346, 347, 349, 361, 364, 365, 368, 370, 373, 380, 382, 390, 399, 402, 403, 405, 408, 409, 410, 413, 417, 420, 422], "seri": [0, 2, 3, 7, 8, 92, 102, 112, 113, 116, 117, 151, 187, 210, 363, 398, 399, 403, 404, 405, 411, 412, 415, 416, 419, 422], "quick": [0, 80], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 58, 82, 88, 122, 126, 144, 145, 151, 152, 165, 168, 207, 210, 219, 230, 329, 397, 398, 399, 403, 404, 405, 406, 408, 412, 415, 416, 417, 419, 422], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 101, 102, 104, 105, 106, 107, 112, 114, 120, 121, 122, 123, 125, 126, 127, 128, 130, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 162, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 186, 187, 188, 192, 193, 196, 197, 200, 201, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 219, 226, 227, 229, 232, 233, 234, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 272, 273, 284, 286, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 357, 358, 359, 360, 361, 367, 370, 375, 377, 380, 382, 384, 390, 394, 397, 399, 403, 404, 405, 406, 407, 409, 411, 412, 414, 415, 416, 417, 419, 421, 422], "hurri": [0, 407], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 60, 61, 69, 71, 72, 73, 74, 75, 82, 105, 106, 107, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 162, 165, 168, 182, 188, 193, 205, 207, 208, 228, 229, 233, 234, 246, 248, 250, 252, 254, 255, 258, 259, 266, 278, 281, 284, 290, 294, 299, 312, 343, 345, 346, 404, 405, 406, 407, 408, 415, 416, 417, 418, 419, 421, 422], "item": [0, 2, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 105, 112, 162, 181, 258, 259, 313, 314, 316, 371, 399, 400, 403, 405, 406, 409, 410, 415, 416, 417, 419], "navig": [0, 416], "previou": [0, 3, 4, 10, 45, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 206, 219, 227, 248, 252, 277, 290, 405, 406, 407, 408, 412, 417, 422], "whenev": [0, 1, 2, 3, 23, 45, 51, 54, 56, 64, 65, 66, 80, 86, 98, 99, 106, 107, 120, 121, 125, 127, 128, 136, 137, 148, 155, 156, 161, 185, 211, 216, 327, 343, 344, 345, 346, 361, 382, 398, 411, 419], "want": [0, 2, 3, 6, 7, 8, 54, 64, 107, 188, 271, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 398, 403, 404, 405, 406, 407, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422], "ted": [0, 35, 46, 62, 63, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 396, 402, 413, 420], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 106, 107, 112, 118, 119, 122, 126, 130, 131, 132, 136, 137, 139, 144, 145, 146, 147, 151, 152, 155, 156, 169, 173, 192, 204, 206, 208, 209, 210, 211, 213, 215, 217, 219, 221, 228, 229, 233, 234, 246, 250, 254, 259, 260, 261, 264, 271, 274, 281, 283, 287, 289, 292, 294, 295, 298, 299, 302, 310, 312, 317, 323, 325, 327, 332, 334, 343, 344, 345, 346, 347, 361, 398, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 112, 118, 119, 122, 126, 135, 138, 141, 144, 145, 151, 152, 161, 168, 173, 177, 179, 186, 192, 193, 205, 206, 209, 210, 211, 213, 215, 217, 218, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 339, 341, 343, 344, 345, 346, 347, 361, 380, 387, 390, 396, 399, 400, 402, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422], "optim": [0, 1, 2, 8, 27, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 209, 211, 219, 231, 257, 263, 264, 271, 281, 310, 312, 327, 328, 329, 332, 375, 376, 380, 390, 399, 400, 402, 405, 406, 407, 408, 410, 413, 415, 416, 417, 420], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 122, 126, 144, 145, 148, 151, 152, 166, 169, 188, 192, 215, 221, 272, 273, 294, 310, 313, 316, 318, 330, 332, 334, 335, 363, 371, 377, 380, 382, 383, 384, 390, 400, 402, 403, 406, 407, 408, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422], "storag": [0, 1, 8, 27, 35, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 68, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 109, 110, 111, 112, 114, 115, 122, 124, 126, 144, 145, 151, 152, 168, 169, 175, 178, 197, 219, 396, 400, 402, 404, 405, 406, 407, 409, 412, 413, 415, 416, 418, 420], "log": [0, 3, 4, 8, 11, 58, 241, 242, 243, 258, 259, 268, 281, 282, 291, 292, 295, 299, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 335, 341, 370, 373, 374, 376, 380, 390, 398, 399, 400, 402, 403, 404, 405, 407, 408, 412, 413, 415, 416, 417, 420, 421], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 27, 38, 45, 54, 55, 59, 64, 122, 126, 130, 135, 144, 145, 146, 147, 151, 152, 217, 219, 394, 397, 398, 399, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 419, 420, 421], "own": [0, 1, 3, 14, 15, 17, 22, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 146, 147, 151, 152, 219, 363, 402, 404, 405, 407, 413, 415, 416, 417, 420], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 70, 80, 83, 89, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 175, 183, 192, 205, 211, 213, 215, 219, 221, 228, 229, 230, 236, 238, 246, 247, 250, 254, 272, 273, 309, 310, 311, 312, 313, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 343, 380, 382, 390, 396, 398, 400, 402, 404, 407, 410, 411, 413, 418, 419, 420, 422], "loop": [0, 8, 50, 52, 57, 122, 126, 144, 145, 151, 152, 226, 228, 229, 246, 247, 271, 272, 273, 329, 380, 399, 400, 402, 403, 404, 407, 409, 410, 411, 413, 414, 419, 420], "ppo": [0, 4, 8, 295, 299, 311, 326, 329, 396, 398, 402, 403, 404, 408, 409, 413, 415, 420], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 112, 120, 121, 122, 123, 125, 126, 127, 139, 144, 145, 151, 152, 169, 172, 173, 180, 185, 186, 188, 195, 197, 202, 204, 206, 207, 209, 210, 211, 217, 219, 232, 250, 254, 390, 398, 402, 404, 405, 407, 408, 409, 413, 420, 421, 422], "introduct": [0, 399, 402, 407, 413, 415, 416, 420, 422], "multi": [0, 1, 7, 9, 27, 38, 45, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 90, 91, 97, 122, 126, 136, 137, 144, 145, 149, 150, 151, 152, 211, 219, 248, 250, 252, 254, 255, 260, 261, 262, 294, 341, 343, 344, 345, 346, 396, 402, 403, 404, 405, 406, 407, 408, 413, 417, 420, 421], "agent": [0, 9, 60, 61, 135, 136, 137, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156, 157, 204, 205, 258, 259, 260, 261, 262, 264, 274, 283, 341, 396, 402, 407, 413, 417, 420], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 38, 45, 54, 55, 58, 59, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 250, 254, 256, 257, 294, 298, 327, 361, 362, 363, 384, 385, 386, 390, 392, 393, 394, 396, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 97, 98, 99, 100, 101, 106, 107, 112, 114, 118, 119, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 219, 221, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 268, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 356, 361, 363, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 390, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422], "pretrain": [0, 402, 413, 420], "recurr": [0, 2, 168, 248, 249, 250, 252, 254, 277, 402, 404, 408, 413, 419, 420], "dqn": [0, 2, 80, 162, 179, 243, 291, 292, 309, 310, 312, 313, 314, 316, 318, 319, 320, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 341, 387, 396, 398, 402, 408, 409, 412, 413, 420], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 45, 62, 118, 119, 122, 126, 138, 144, 145, 151, 152, 177, 186, 205, 220, 225, 228, 229, 232, 243, 246, 247, 250, 254, 260, 261, 264, 272, 273, 275, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 309, 310, 311, 312, 313, 317, 318, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 376, 382, 385, 386, 390, 392, 393, 396, 398, 399, 400, 402, 404, 407, 409, 410, 413, 418, 419, 420, 421, 422], "replai": [0, 8, 16, 45, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 112, 113, 117, 168, 169, 177, 193, 197, 206, 219, 312, 313, 314, 316, 317, 318, 325, 330, 332, 334, 335, 377, 380, 388, 390, 396, 400, 402, 413, 417, 418, 420], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 117, 122, 126, 138, 144, 145, 151, 152, 168, 169, 173, 177, 192, 193, 197, 206, 209, 210, 211, 213, 215, 219, 298, 301, 312, 313, 314, 316, 317, 318, 325, 330, 332, 334, 335, 377, 380, 388, 390, 396, 400, 402, 411, 413, 417, 418, 420, 422], "competit": [0, 3, 136, 137, 402, 413, 416, 420], "ddpg": [0, 236, 237, 238, 239, 313, 324, 333, 396, 398, 402, 404, 409, 413, 416, 420], "task": [0, 2, 3, 9, 58, 60, 61, 70, 83, 86, 120, 121, 122, 126, 129, 136, 137, 144, 145, 146, 147, 148, 151, 152, 155, 156, 192, 204, 211, 213, 215, 317, 325, 402, 403, 404, 405, 406, 407, 408, 413, 415, 416, 417, 420, 421, 422], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 126, 142, 143, 144, 151, 155, 206, 240, 250, 254, 290, 309, 327, 329, 331, 363, 380, 396, 399, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 419, 420], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 45, 47, 50, 52, 54, 55, 57, 59, 64, 69, 70, 93, 94, 95, 101, 104, 108, 110, 114, 117, 122, 126, 131, 144, 145, 151, 152, 162, 175, 178, 179, 188, 192, 209, 210, 211, 213, 217, 219, 220, 250, 254, 257, 260, 261, 274, 281, 283, 286, 287, 295, 298, 299, 300, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 384, 385, 386, 389, 390, 394, 396, 398, 400, 402, 404, 405, 406, 410, 412, 413, 415, 416, 417, 419, 420, 422], "loss": [0, 3, 8, 52, 179, 271, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 341, 342, 343, 375, 380, 387, 390, 399, 400, 402, 407, 409, 410, 411, 413, 417, 419, 420, 421], "trainer": [0, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 402, 403, 413, 420], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 185, 186, 188, 190, 192, 194, 195, 196, 197, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 219, 220, 224, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 260, 261, 262, 265, 268, 270, 271, 272, 273, 274, 275, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302, 303, 306, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 336, 337, 341, 343, 344, 345, 346, 349, 361, 363, 371, 372, 373, 374, 375, 377, 378, 379, 382, 390, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422], "packag": [0, 6, 7, 10, 161, 396, 397, 421, 422], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 45, 50, 51, 52, 53, 56, 57, 58, 65, 66, 67, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 100, 101, 105, 106, 107, 112, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 138, 139, 141, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 166, 169, 173, 182, 188, 190, 193, 197, 206, 210, 211, 212, 216, 217, 219, 227, 230, 241, 248, 249, 250, 252, 253, 254, 258, 259, 260, 261, 262, 263, 268, 272, 273, 274, 280, 284, 294, 298, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 371, 374, 377, 378, 379, 380, 382, 392, 393, 394, 396, 398, 399, 400, 404, 405, 406, 407, 410, 412, 414, 415, 416, 418, 421, 422], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 105, 106, 107, 108, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 168, 170, 173, 174, 175, 178, 179, 180, 182, 190, 192, 194, 195, 197, 201, 203, 204, 206, 208, 210, 211, 212, 215, 217, 219, 224, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 303, 306, 309, 310, 312, 313, 314, 316, 317, 318, 325, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 363, 371, 377, 396, 398, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 421, 422], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 86, 93, 122, 126, 144, 145, 151, 152, 165, 195, 205, 209, 211, 217, 219, 226, 250, 254, 262, 290, 312, 327, 332, 361, 396, 399, 403, 404, 406, 407, 415, 419], "interoper": [0, 14, 15, 396], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 36, 38, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 122, 125, 126, 136, 137, 144, 145, 151, 152, 155, 156, 162, 169, 170, 192, 197, 209, 211, 215, 219, 233, 234, 248, 249, 250, 252, 253, 254, 255, 261, 297, 301, 310, 311, 312, 314, 316, 318, 319, 325, 326, 329, 330, 332, 334, 335, 343, 344, 345, 346, 352, 353, 354, 355, 357, 358, 359, 360, 361, 394, 396, 398, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 419], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 50, 52, 57, 61, 88, 209, 396, 410], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 56, 65, 66, 101, 146, 147, 186, 188, 228, 229, 231, 241, 242, 243, 244, 251, 257, 258, 259, 265, 268, 269, 270, 271, 276, 277, 280, 281, 282, 290, 291, 292, 295, 299, 300, 309, 310, 311, 312, 317, 318, 319, 325, 326, 329, 330, 331, 332, 334, 335, 396, 400, 404, 405, 408, 410, 415, 416, 417, 421, 422], "helper": [0, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 403, 404, 406, 415, 417], "compos": [0, 3, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 100, 101, 102, 103, 112, 113, 122, 126, 144, 145, 151, 152, 169, 196, 209, 210, 211, 217, 219, 293, 294, 312, 321, 332, 363, 396, 403, 404, 405, 406, 410, 414, 416, 417, 419, 421, 422], "episod": [0, 3, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 106, 107, 122, 126, 144, 145, 151, 152, 165, 197, 200, 205, 226, 231, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 396, 404, 407, 412, 415, 416, 419], "format": [0, 3, 27, 35, 38, 43, 44, 45, 46, 49, 54, 55, 59, 62, 63, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 104, 112, 122, 126, 144, 145, 146, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298, 363, 396, 403, 404, 407, 409, 411, 422], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 122, 126, 138, 144, 145, 151, 152, 155, 156, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 227, 228, 229, 246, 247, 272, 273, 277, 286, 290, 291, 292, 295, 296, 297, 298, 299, 300, 302, 310, 312, 314, 317, 318, 330, 332, 334, 335, 341, 396, 417], "tree": [0, 1, 50, 52, 57, 122, 126, 144, 145, 151, 152, 396, 415, 419], "forest": [0, 396], "human": [0, 24, 84, 396, 417], "feedback": [0, 396, 412, 421], "rlhf": [0, 58, 70, 89, 186, 396, 398], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 123, 126, 144, 145, 151, 152, 163, 166, 175, 178, 187, 194, 195, 210, 211, 217, 219, 221, 231, 250, 254, 256, 257, 376, 384, 385, 386, 390, 392, 393, 394, 396, 407], "gymlikeenv": [0, 125, 127, 396], "envmetadata": [0, 396], "vector": [0, 1, 8, 25, 118, 119, 127, 131, 132, 135, 146, 147, 148, 155, 156, 177, 216, 236, 238, 248, 249, 252, 253, 255, 343, 346, 356, 357, 358, 359, 360, 396, 398, 399, 403, 404, 406, 414, 415, 416, 417, 418, 422], "custom": [0, 2, 5, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 213, 219, 260, 261, 302, 319, 329, 336, 394, 396, 398, 403, 404, 405, 406, 408, 409, 411, 415, 416], "nativ": [0, 1, 7, 9, 84, 122, 126, 144, 145, 151, 152, 169, 363, 396, 406, 419], "auto": [0, 94, 114, 164, 165, 216, 272, 273, 310, 312, 318, 328, 330, 332, 334, 335, 396, 399, 415, 416], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 164, 165, 166, 169, 179, 182, 185, 187, 192, 200, 204, 205, 206, 207, 209, 210, 211, 213, 216, 217, 219, 221, 227, 232, 248, 250, 254, 262, 272, 273, 285, 294, 327, 362, 396, 399, 403, 404, 405, 406, 407, 410, 414, 415, 416, 421], "dynam": [0, 2, 7, 14, 15, 16, 83, 86, 88, 122, 144, 151, 219, 317, 325, 396, 405, 407, 417], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 76, 77, 78, 82, 118, 119, 122, 124, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 224, 226, 227, 228, 229, 243, 246, 247, 250, 254, 272, 273, 275, 277, 286, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 396, 398, 403, 404, 405, 406, 407, 408, 412, 414, 415, 416, 421], "mask": [0, 1, 4, 23, 25, 26, 30, 34, 41, 42, 43, 44, 49, 146, 147, 152, 163, 193, 219, 232, 243, 246, 247, 258, 259, 275, 290, 291, 292, 296, 297, 377, 396, 404, 406, 422], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 58, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 162, 163, 166, 172, 175, 177, 178, 179, 180, 183, 186, 187, 190, 194, 195, 197, 201, 204, 211, 216, 220, 224, 226, 228, 229, 231, 232, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 270, 272, 273, 274, 275, 277, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 299, 302, 303, 309, 310, 312, 313, 314, 316, 317, 318, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 390, 394, 396, 398, 399, 400, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 416, 418, 419, 421, 422], "record": [0, 2, 11, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 159, 162, 186, 219, 329, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 390, 396, 404, 405, 408, 412, 415], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 177, 206, 224, 286, 291, 292, 295, 296, 297, 298, 299, 300, 301, 306, 396, 405, 406, 408, 409, 415, 416, 417, 421, 422], "actor": [0, 3, 4, 21, 186, 220, 231, 235, 236, 238, 243, 244, 246, 247, 257, 270, 272, 273, 275, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 341, 396, 399, 404, 406, 407, 409, 412, 415, 418, 421], "explor": [0, 1, 218, 228, 229, 246, 247, 264, 272, 273, 286, 291, 292, 295, 296, 297, 298, 299, 309, 327, 376, 385, 386, 390, 396, 405, 406, 407, 409, 410, 412, 415, 416, 417], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 101, 106, 107, 112, 122, 126, 135, 144, 145, 151, 152, 161, 162, 165, 167, 169, 170, 172, 175, 176, 177, 178, 179, 187, 188, 192, 193, 196, 197, 198, 200, 202, 206, 207, 210, 211, 215, 217, 219, 224, 227, 228, 229, 230, 232, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 250, 251, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 268, 272, 273, 274, 275, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 371, 373, 374, 375, 376, 377, 380, 390, 396, 400, 404, 409, 410, 411, 414, 415, 416, 417, 419, 421, 422], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 54, 56, 58, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 103, 105, 122, 123, 126, 136, 137, 138, 141, 144, 145, 146, 147, 149, 150, 151, 152, 166, 173, 175, 176, 180, 186, 188, 194, 195, 200, 201, 204, 206, 210, 216, 219, 227, 232, 241, 250, 254, 258, 259, 268, 286, 295, 299, 303, 304, 323, 330, 337, 343, 348, 356, 366, 380, 396, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "hook": [0, 2, 27, 35, 38, 45, 51, 54, 55, 56, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 115, 122, 126, 144, 145, 151, 152, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 275, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 396], "planner": [0, 231, 257, 396], "torch": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 102, 105, 106, 107, 112, 113, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 170, 173, 175, 176, 177, 178, 179, 180, 186, 188, 190, 192, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 215, 217, 219, 220, 224, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 306, 307, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 348, 349, 353, 355, 356, 358, 360, 361, 365, 371, 378, 379, 390, 396, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "vmap": [0, 248, 249, 252, 253, 262, 284, 298, 301, 327, 396, 398, 421], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 58, 60, 61, 69, 71, 72, 73, 74, 75, 86, 88, 100, 112, 122, 126, 138, 144, 145, 151, 152, 162, 177, 187, 188, 206, 220, 221, 232, 246, 248, 250, 252, 254, 295, 298, 299, 306, 310, 327, 330, 376, 384, 396, 398, 403, 404, 405, 406, 407, 408, 410, 417, 418, 419, 421, 422], "sac": [0, 318, 330, 332, 396], "redq": [0, 330, 396], "crossq": [0, 312, 396], "iql": [0, 317, 325, 396, 403, 415, 416], "cql": [0, 310, 316, 396], "gail": [0, 323, 396], "dt": [0, 145, 272, 273, 396, 417], "td3": [0, 334, 335, 396], "bc": [0, 5, 334, 396, 421], "a2c": [0, 309, 396], "dreamer": [0, 159, 160, 244, 320, 321, 322, 396, 398], "checkpoint": [0, 56, 91, 93, 96, 108, 109, 111, 115, 396, 418, 419], "builder": [0, 396, 404, 422], "logger": [0, 3, 11, 361, 363, 365, 366, 367, 368, 369, 370, 374, 380, 390, 394, 396, 404, 415], "_util": [0, 3, 12, 396, 412], "implement_for": [0, 3, 396], "thing": [0, 3, 7, 8, 122, 126, 144, 145, 151, 152, 260, 261, 397, 405, 406, 407, 408, 409, 410, 411, 415, 416, 419, 422], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 59, 61, 64, 65, 66, 93, 94, 114, 122, 126, 144, 145, 151, 152, 177, 217, 219, 241, 260, 261, 280, 310, 312, 325, 330, 332, 334, 335, 343, 345, 346, 397, 403, 407, 408, 409, 417, 419], "when": [0, 1, 2, 3, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 114, 122, 123, 125, 126, 127, 135, 136, 137, 139, 141, 144, 145, 146, 147, 151, 152, 155, 156, 163, 165, 168, 169, 173, 175, 177, 178, 186, 187, 188, 192, 193, 200, 206, 209, 210, 211, 213, 215, 216, 217, 219, 225, 226, 230, 231, 243, 248, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 271, 275, 281, 294, 295, 298, 299, 301, 305, 310, 311, 312, 314, 319, 325, 326, 327, 329, 330, 332, 334, 335, 336, 341, 342, 343, 344, 345, 346, 361, 362, 363, 365, 377, 394, 397, 398, 399, 400, 403, 404, 405, 406, 408, 410, 411, 415, 416, 417, 418, 419, 422], "debug": [0, 6, 8, 58, 80, 81, 82, 83, 84, 85, 86, 87, 88, 397, 422], "work": [0, 1, 2, 3, 4, 8, 12, 27, 38, 45, 54, 55, 56, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 99, 104, 106, 107, 110, 117, 122, 125, 126, 127, 130, 144, 145, 148, 151, 152, 170, 186, 192, 209, 213, 216, 217, 219, 226, 233, 234, 255, 292, 297, 302, 311, 326, 329, 380, 397, 398, 403, 404, 405, 406, 407, 410, 414, 415, 416, 417, 418, 419, 421, 422], "habitat": [0, 3, 128, 397, 418], "lab": [0, 3, 120, 121, 128, 397], "mujoco": [0, 6, 8, 148, 397, 403, 405, 406], "error": [0, 1, 3, 7, 10, 12, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 57, 59, 60, 64, 93, 122, 126, 144, 145, 151, 152, 153, 157, 193, 209, 219, 221, 327, 397, 399, 403, 405, 415, 416, 422], "solut": [0, 2, 3, 6, 7, 9, 21, 397, 398, 400, 421], "resourc": [0, 1, 21, 128, 397, 403, 405, 415, 416], "issu": [0, 3, 4, 5, 8, 80, 84, 91, 93, 94, 114, 125, 130, 169, 193, 207, 226, 286, 291, 292, 295, 296, 297, 298, 299, 397, 421], "customis": [0, 397, 404, 411], "video": [0, 4, 9, 363, 365, 376, 394, 396, 397, 412, 415, 416], "render": [0, 3, 8, 132, 155, 361, 363, 376, 397, 403, 404, 405, 407, 411, 421], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 98, 99, 101, 102, 104, 110, 112, 113, 114, 116, 117, 122, 126, 136, 137, 142, 143, 144, 145, 151, 152, 155, 156, 164, 169, 173, 177, 211, 226, 258, 259, 396, 407, 414, 415, 416, 419, 421], "search": [0, 141, 227, 404], "page": [0, 7, 24, 370, 409], "somewhat": [1, 2, 399, 408, 422], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 166, 176, 179, 211, 219, 243, 252, 255, 275, 291, 292, 296, 297, 329, 377, 410, 421, 422], "dataload": [1, 89, 105, 107, 404, 410, 419], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 122, 126, 144, 145, 151, 152, 169, 181, 197, 205, 206, 207, 209, 211, 219, 228, 229, 246, 247, 248, 250, 252, 254, 268, 272, 273, 309, 312, 327, 329, 332, 363, 398, 404, 407, 415, 419, 421, 422], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 183, 186, 188, 190, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 219, 220, 224, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 268, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 301, 302, 303, 305, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 346, 349, 351, 352, 353, 357, 358, 360, 361, 363, 371, 376, 377, 378, 390, 394, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 122, 125, 126, 127, 135, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 165, 168, 181, 186, 192, 201, 210, 211, 215, 219, 254, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 377, 380, 398, 399, 400, 403, 404, 405, 406, 409, 414, 415, 416, 417, 418, 419, 421, 422], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 79, 80, 86, 99, 101, 105, 106, 122, 126, 136, 137, 144, 145, 151, 152, 162, 177, 188, 200, 207, 219, 226, 271, 281, 284, 301, 319, 321, 327, 349, 361, 383, 398, 400, 403, 404, 405, 407, 408, 409, 410, 415, 416, 417, 422], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 45, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 86, 95, 122, 126, 144, 145, 146, 147, 151, 152, 166, 167, 173, 182, 192, 206, 210, 211, 212, 213, 215, 219, 226, 232, 248, 250, 252, 254, 260, 298, 299, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 398, 403, 406, 415, 416, 417, 419, 422], "static": [1, 12, 54, 58, 64, 70, 99, 106, 107, 128, 145, 217, 325, 407, 417, 419], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 45, 47, 51, 54, 55, 56, 59, 61, 64, 65, 66, 70, 95, 101, 107, 122, 123, 126, 128, 135, 144, 145, 146, 147, 151, 152, 179, 206, 208, 219, 221, 248, 252, 261, 293, 309, 311, 326, 329, 330, 331, 398, 399, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 422], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 60, 64, 89, 112, 115, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 168, 175, 177, 178, 187, 195, 206, 209, 211, 219, 225, 246, 250, 254, 272, 273, 311, 312, 326, 327, 329, 332, 363, 377, 382, 392, 393, 394, 398, 403, 404, 405, 406, 410, 415, 416, 417, 419], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 56, 59, 64, 71, 83, 84, 87, 88, 89, 122, 126, 138, 144, 145, 151, 152, 164, 169, 173, 182, 192, 200, 206, 209, 210, 211, 212, 213, 215, 219, 255, 284, 298, 299, 300, 312, 332, 363, 400, 405, 407, 411, 419, 422], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 86, 101, 105, 107, 122, 126, 144, 145, 151, 152, 166, 188, 192, 209, 215, 219, 239, 248, 250, 252, 254, 260, 261, 278, 281, 299, 326, 334, 338, 376, 380, 399, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 417, 419, 421, 422], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 88, 123, 299, 380, 398, 399, 403, 404, 414, 422], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 104, 105, 106, 107, 110, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 165, 166, 170, 172, 173, 176, 192, 200, 201, 204, 206, 208, 209, 210, 211, 212, 213, 215, 219, 226, 228, 229, 230, 232, 233, 234, 246, 247, 248, 250, 252, 254, 255, 258, 259, 260, 261, 263, 272, 273, 284, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 341, 343, 344, 345, 346, 347, 351, 361, 362, 363, 370, 373, 383, 390, 391, 394, 403, 404, 405, 406, 407, 408, 410, 415, 416, 417, 419, 422], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 104, 105, 106, 107, 108, 110, 120, 121, 122, 125, 126, 127, 128, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 167, 168, 172, 175, 176, 178, 186, 188, 190, 192, 200, 202, 208, 209, 211, 212, 213, 215, 217, 219, 226, 232, 233, 234, 236, 242, 245, 250, 254, 255, 258, 259, 266, 275, 292, 294, 296, 297, 299, 301, 302, 303, 310, 312, 325, 327, 330, 332, 334, 335, 340, 343, 346, 361, 362, 376, 377, 392, 393, 399, 403, 405, 407, 408, 409, 410, 414, 415, 417, 418, 419, 421, 422], "constructor": [1, 2, 16, 18, 19, 20, 21, 56, 70, 86, 98, 112, 122, 126, 139, 144, 145, 151, 152, 155, 165, 209, 210, 233, 234, 255, 295, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 391, 394, 398, 403, 404, 405, 407, 410, 415, 416, 419], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 101, 105, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 180, 188, 201, 219, 230, 232, 233, 234, 255, 260, 261, 279, 286, 291, 295, 296, 298, 300, 301, 303, 327, 340, 376, 379, 380, 399, 400, 403, 405, 406, 410, 412, 415, 416, 417], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 53, 54, 55, 56, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 118, 119, 122, 123, 126, 127, 128, 130, 131, 132, 138, 139, 144, 145, 148, 151, 152, 153, 163, 211, 219, 246, 248, 250, 252, 254, 262, 294, 300, 301, 327, 334, 384, 394, 398, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 419, 420, 422], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 58, 80, 90, 91, 97, 99, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 163, 168, 182, 185, 188, 204, 205, 206, 207, 209, 211, 216, 219, 226, 227, 228, 229, 230, 231, 244, 246, 247, 248, 250, 252, 254, 256, 257, 271, 272, 273, 294, 295, 299, 309, 320, 329, 342, 343, 344, 345, 346, 349, 350, 351, 362, 365, 371, 376, 380, 400, 404, 406, 408, 409, 411, 412, 414, 417, 418, 421], "queri": [1, 3, 14, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 192, 210, 213, 217, 219, 301, 399, 403, 409, 417, 421], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 122, 126, 144, 145, 151, 152, 193, 205, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 260, 262, 265, 266, 267, 270, 271, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 306, 314, 316, 327, 343, 344, 345, 346, 347, 362, 391, 398, 403, 404, 406, 409, 412, 417, 419, 422], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 104, 106, 107, 114, 118, 119, 122, 125, 126, 127, 131, 132, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 155, 156, 162, 168, 169, 177, 183, 187, 188, 199, 204, 207, 209, 211, 217, 219, 228, 229, 230, 231, 233, 234, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 265, 266, 267, 272, 273, 274, 276, 277, 280, 281, 282, 283, 286, 290, 294, 295, 298, 299, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 371, 373, 376, 380, 382, 383, 384, 392, 393, 394, 398, 399, 403, 404, 405, 406, 407, 408, 410, 412, 415, 416, 417, 418, 419, 421, 422], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 85, 105, 112, 122, 126, 127, 144, 145, 151, 152, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 219, 221, 248, 250, 254, 255, 263, 264, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 344, 345, 346, 377, 403, 405, 406, 410, 411, 415, 416, 417, 419, 422], "deliv": [1, 2, 3, 16, 86, 403, 404, 407, 410, 421], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 40, 50, 51, 52, 56, 57, 61, 64, 65, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 101, 122, 125, 126, 127, 135, 144, 145, 146, 147, 151, 152, 217, 248, 250, 252, 253, 254, 294, 300, 301, 310, 312, 325, 330, 332, 334, 335, 362, 371, 396, 404, 407, 414, 415, 417, 421], "user": [1, 2, 3, 5, 8, 23, 27, 38, 45, 54, 55, 59, 64, 80, 82, 86, 88, 99, 107, 122, 126, 144, 145, 151, 152, 153, 170, 205, 209, 211, 219, 221, 240, 312, 329, 332, 334, 363, 391, 399, 400, 403, 404, 407, 409, 410, 417, 421, 422], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 58, 105, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 204, 228, 229, 246, 247, 272, 273, 403, 405, 412, 415, 416, 421, 422], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 60, 61, 62, 64, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 101, 106, 107, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 175, 176, 178, 179, 180, 187, 188, 190, 194, 195, 197, 199, 201, 204, 206, 207, 209, 210, 211, 217, 219, 226, 227, 231, 248, 250, 254, 257, 281, 294, 309, 310, 311, 312, 313, 314, 316, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 398, 399, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 45, 51, 54, 55, 56, 58, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 101, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 165, 168, 169, 170, 172, 179, 188, 195, 204, 205, 209, 210, 211, 217, 219, 221, 226, 227, 231, 235, 240, 244, 248, 249, 250, 252, 253, 254, 255, 257, 262, 266, 270, 274, 276, 277, 283, 287, 294, 298, 304, 309, 311, 312, 316, 326, 327, 329, 330, 331, 332, 341, 342, 343, 344, 345, 346, 347, 394, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 415, 416, 417, 422], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 80, 101, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 226, 228, 229, 230, 246, 248, 250, 254, 263, 291, 296, 312, 321, 332, 334, 404, 405, 406, 407, 408, 410, 412, 415, 416, 417, 418, 419, 422], "predefin": [1, 404, 406, 410, 419], "becaus": [1, 3, 4, 7, 50, 52, 57, 58, 80, 122, 126, 144, 145, 151, 152, 179, 186, 204, 210, 216, 219, 239, 261, 286, 291, 292, 294, 295, 296, 297, 298, 299, 309, 329, 398, 403, 404, 406, 408, 409, 410, 414, 415, 416, 417, 419, 422], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 417, 419], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 188, 202, 211, 214, 219, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 265, 266, 267, 268, 270, 272, 273, 276, 277, 279, 281, 282, 284, 287, 290, 292, 294, 295, 297, 299, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 384, 399, 403, 405, 406, 407, 408, 414, 415, 416, 418, 419], "heavi": [1, 8, 80, 419], "crucial": [1, 2, 3, 228, 229, 246, 247, 272, 273, 317, 325, 327, 403, 404, 405, 406, 407, 409, 411, 415, 416, 417, 422], "configur": [1, 8, 21, 22, 58, 186, 235, 240, 270, 327, 329, 398, 403, 404, 405, 409, 415, 416, 417], "hyperparamet": [1, 104, 219, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 403, 411, 417, 419], "appropri": [1, 3, 4, 7, 92, 102, 112, 113, 116, 117, 144, 151, 179, 391, 394, 403, 411, 419], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 108, 110, 112, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 393, 394, 398, 399, 403, 406, 408, 412, 415, 416, 417, 418], "take": [1, 2, 3, 8, 23, 27, 38, 54, 55, 58, 59, 64, 83, 109, 115, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 172, 204, 207, 210, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 260, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 293, 294, 295, 297, 302, 305, 308, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 371, 382, 398, 400, 403, 404, 405, 407, 408, 409, 415, 416, 417, 419, 422], "consider": [1, 2, 3, 8, 125, 127, 404, 415, 416, 419], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 102, 114, 122, 126, 132, 136, 137, 138, 144, 145, 146, 147, 151, 152, 155, 156, 165, 175, 178, 205, 209, 211, 217, 219, 227, 233, 234, 250, 254, 255, 303, 309, 310, 311, 312, 313, 314, 316, 318, 319, 323, 326, 327, 329, 330, 331, 332, 334, 335, 341, 343, 346, 403, 404, 405, 407, 415, 416, 417, 421, 422], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 99, 101, 106, 107, 108, 112, 115, 120, 121, 122, 125, 126, 127, 128, 132, 135, 138, 144, 145, 146, 147, 151, 152, 155, 156, 162, 165, 166, 169, 172, 173, 175, 176, 179, 180, 182, 186, 188, 193, 194, 195, 197, 200, 201, 204, 205, 207, 210, 211, 216, 217, 219, 221, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 260, 261, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 295, 297, 298, 299, 302, 305, 309, 311, 312, 318, 324, 326, 327, 329, 330, 331, 333, 334, 342, 343, 344, 345, 346, 347, 363, 365, 375, 376, 377, 380, 390, 392, 393, 394, 398, 400, 403, 404, 405, 406, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "occur": [1, 8, 15, 54, 60, 61, 64, 80, 122, 126, 128, 144, 145, 151, 152, 170, 180, 188, 193, 216, 227, 230, 286, 291, 292, 295, 296, 297, 298, 299, 321, 419, 422], "serial": [1, 2, 3, 27, 38, 45, 51, 54, 55, 56, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 209, 217, 219], "parallel": [1, 3, 8, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 211, 216, 221, 250, 254, 309, 391, 392, 393, 394, 404, 405, 415, 416], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 250, 254, 390, 393, 396, 403, 404, 405, 406, 410, 412, 415, 416, 419], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 135, 138, 141, 144, 145, 146, 147, 148, 151, 152, 153, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 392, 393, 394, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 419, 422], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 50, 52, 57, 69, 70, 83, 88, 89, 123, 139, 144, 151, 209, 217, 392, 393, 394, 403, 404, 405, 421, 422], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 393, 396, 405, 410, 421], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 37, 50, 52, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 106, 107, 135, 146, 147, 248, 252, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 398, 400, 405, 408, 419, 421], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 55, 56, 59, 65, 66, 99, 106, 107, 118, 119, 120, 121, 125, 127, 128, 130, 131, 132, 139, 140, 144, 148, 152, 209, 217, 219, 250, 254, 260, 271, 272, 273, 327, 382, 396, 398, 399, 403, 407, 411, 415, 416, 417], "aggreg": [1, 3, 27, 54, 80, 99, 112, 146, 147, 227, 233, 234, 236, 237, 301], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 105, 106, 107, 122, 123, 126, 144, 145, 151, 152, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 226, 227, 228, 246, 248, 250, 252, 254, 255, 260, 275, 281, 290, 292, 297, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 382, 399, 404, 406, 407, 408, 411, 412, 417, 418, 421, 422], "final": [1, 2, 3, 4, 21, 50, 52, 57, 58, 206, 216, 228, 229, 246, 247, 248, 250, 252, 254, 260, 272, 273, 293, 300, 343, 376, 398, 403, 404, 405, 411, 412, 415, 416, 417, 422], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 392, 396, 403, 404, 405, 410, 421], "sever": [1, 2, 3, 8, 27, 38, 41, 45, 54, 55, 59, 64, 70, 83, 122, 126, 144, 145, 151, 152, 170, 172, 211, 219, 329, 403, 405, 411, 412, 419, 422], "gather": [1, 3, 18, 20, 21, 70, 89, 93, 94, 99, 106, 114, 193, 259, 262, 268, 327, 342, 384, 397, 404, 405, 406, 410, 415, 416, 417, 419, 422], "continu": [1, 2, 9, 28, 31, 71, 72, 73, 107, 122, 126, 144, 145, 146, 147, 151, 152, 155, 156, 162, 224, 236, 237, 238, 239, 271, 272, 273, 301, 306, 310, 333, 343, 348, 356, 398, 403, 405, 406, 408, 415, 416, 417, 419, 422], "concomitantli": [1, 122, 126, 144, 145, 151, 152], "network": [1, 4, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 135, 144, 145, 146, 147, 151, 152, 219, 233, 234, 236, 237, 238, 239, 242, 244, 245, 252, 255, 260, 261, 262, 264, 266, 267, 269, 271, 274, 276, 277, 278, 283, 287, 288, 289, 290, 298, 302, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 339, 341, 343, 344, 345, 346, 347, 389, 390, 398, 399, 400, 409, 412, 414, 417, 422], "impli": [1, 422], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 58, 59, 64, 99, 101, 104, 118, 119, 122, 126, 144, 145, 149, 150, 151, 152, 173, 192, 206, 209, 210, 211, 213, 215, 219, 248, 249, 250, 252, 253, 254, 260, 262, 264, 298, 309, 310, 311, 312, 318, 321, 332, 334, 382, 389, 398, 400, 403, 404, 405, 406, 414, 417, 419, 421], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 82, 88, 91, 99, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 186, 188, 201, 209, 211, 212, 217, 219, 221, 230, 250, 254, 255, 260, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 415, 416, 417, 418, 419, 421, 422], "slightli": [1, 23, 80, 399, 406, 415, 417, 418, 419, 422], "lag": [1, 403, 404, 405], "therefor": [1, 2, 3, 7, 51, 56, 65, 66, 87, 88, 122, 126, 144, 145, 151, 152, 197, 329, 341, 409, 415, 422], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 46, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 99, 101, 106, 107, 112, 114, 115, 122, 126, 135, 138, 141, 144, 145, 146, 147, 151, 152, 162, 163, 166, 169, 179, 186, 192, 197, 200, 204, 205, 207, 210, 212, 215, 216, 226, 227, 228, 229, 246, 247, 248, 249, 250, 252, 253, 254, 258, 259, 260, 269, 271, 272, 273, 295, 298, 299, 308, 309, 310, 311, 312, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 399, 400, 403, 404, 405, 407, 414, 415, 416, 417, 419, 422], "asynchron": [1, 9, 15, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298, 309, 392, 403, 404, 405], "off": [1, 2, 4, 251, 282, 291, 332, 361, 376, 385, 398, 400, 403, 404, 405, 408, 409, 415, 416, 418, 422], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 114, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 153, 155, 175, 178, 182, 188, 205, 211, 216, 219, 221, 243, 248, 250, 252, 254, 261, 263, 287, 289, 290, 292, 296, 309, 317, 319, 325, 329, 376, 398, 400, 403, 404, 405, 406, 407, 408, 410, 411, 415, 416, 417, 418, 419, 422], "remot": [1, 2, 18, 19, 20, 21, 144, 151, 422], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 58, 64, 112, 118, 119, 122, 126, 128, 129, 131, 132, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 162, 163, 165, 166, 169, 172, 175, 178, 179, 180, 186, 190, 194, 195, 200, 201, 202, 204, 205, 207, 209, 217, 219, 221, 231, 232, 250, 254, 257, 272, 273, 294, 309, 361, 363, 384, 398, 403, 405, 406, 408, 409, 410, 411, 412, 418, 419, 421], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 201, 330, 343, 344, 345, 346, 347, 399, 403, 405, 408, 409, 410], "synchronis": [1, 123, 415, 416], "either": [1, 2, 5, 22, 25, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 101, 122, 126, 144, 145, 151, 152, 204, 205, 219, 304, 327, 334, 335, 367, 400, 403, 404, 406, 415, 418, 419, 421, 422], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 403, 416, 421], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 98, 99, 101, 102, 104, 105, 106, 107, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 177, 180, 182, 185, 186, 187, 188, 192, 193, 195, 196, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 213, 215, 217, 219, 221, 224, 226, 227, 229, 230, 231, 233, 234, 236, 237, 238, 239, 245, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 271, 273, 281, 282, 286, 287, 288, 289, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 338, 343, 344, 345, 346, 349, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 370, 373, 374, 376, 377, 380, 394, 398, 399, 400, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "second": [1, 3, 8, 23, 41, 42, 43, 44, 80, 83, 112, 166, 248, 250, 252, 254, 292, 311, 326, 329, 332, 365, 379, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 173, 175, 176, 178, 179, 180, 186, 190, 191, 192, 194, 195, 197, 201, 204, 206, 208, 210, 211, 213, 215, 217, 219, 224, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 248, 249, 250, 252, 253, 254, 255, 257, 260, 261, 263, 264, 270, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 303, 306, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 361, 377, 382, 388, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 99, 106, 122, 126, 144, 145, 151, 152, 166, 182, 186, 210, 219, 242, 243, 249, 253, 265, 287, 288, 289, 291, 292, 293, 298, 304, 309, 311, 313, 314, 319, 326, 329, 331, 341, 342, 343, 344, 345, 346, 380, 396, 399, 400, 403, 404, 405, 406, 407, 408, 414, 415, 416, 417, 422], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 97, 99, 101, 106, 107, 114, 121, 122, 123, 125, 126, 127, 138, 144, 145, 151, 152, 169, 188, 206, 210, 211, 217, 219, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 260, 261, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 291, 292, 294, 295, 296, 297, 299, 300, 301, 302, 305, 310, 312, 314, 317, 318, 325, 327, 330, 332, 334, 335, 341, 343, 344, 345, 346, 361, 363, 367, 376, 384, 385, 386, 390, 392, 393, 398, 399, 400, 403, 405, 406, 407, 408, 417, 419, 422], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 162, 166, 173, 175, 176, 178, 179, 180, 190, 192, 194, 195, 197, 201, 204, 206, 210, 211, 213, 215, 219, 224, 226, 231, 232, 242, 248, 249, 250, 252, 253, 254, 257, 263, 264, 272, 274, 275, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 303, 306, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 361, 377, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "slower": [1, 415], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 54, 80, 82, 86, 99, 106, 107, 110, 112, 122, 126, 130, 142, 143, 144, 145, 148, 151, 152, 195, 228, 229, 239, 250, 252, 254, 255, 265, 284, 286, 291, 298, 303, 327, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 397, 398, 399, 403, 404, 405, 407, 409, 410, 415, 416, 417, 419, 421, 422], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 166, 169, 172, 175, 176, 177, 178, 187, 188, 192, 197, 200, 203, 205, 206, 207, 210, 211, 212, 215, 217, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 279, 284, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 305, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 341, 343, 344, 345, 346, 350, 351, 365, 373, 375, 376, 380, 384, 394, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 422], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 118, 119, 122, 126, 128, 129, 130, 144, 145, 151, 152, 173, 186, 191, 192, 206, 210, 211, 213, 215, 219, 248, 249, 252, 253, 298, 372, 403, 404, 405, 406, 415, 416, 418, 422], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 54, 56, 67, 94, 101, 102, 114, 118, 119, 131, 132, 144, 151, 152, 170, 172, 177, 185, 187, 197, 200, 204, 209, 210, 217, 248, 252, 254, 260, 263, 264, 286, 291, 295, 296, 298, 299, 302, 311, 318, 326, 329, 349, 394, 398, 399, 400, 403, 404, 405, 407, 409, 410, 415, 416, 417, 419, 421], "infer": [1, 144, 151, 169, 217, 250, 254, 263, 290, 295, 316, 361, 403, 405, 410, 412, 419], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 27, 38, 45, 54, 55, 59, 64, 80, 83, 99, 106, 107, 118, 119, 120, 121, 122, 125, 126, 131, 132, 138, 139, 140, 144, 145, 151, 152, 187, 188, 209, 211, 217, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 300, 301, 302, 305, 312, 332, 363, 370, 376, 392, 393, 394, 397, 398, 400, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421], "dispatch": [1, 18, 19, 20, 21, 54, 64, 284, 294, 363, 403], "avail": [1, 2, 3, 4, 6, 21, 51, 56, 65, 66, 80, 83, 88, 99, 105, 106, 107, 120, 121, 130, 136, 137, 142, 143, 144, 146, 147, 148, 153, 154, 155, 156, 162, 165, 168, 186, 243, 275, 295, 299, 327, 363, 392, 393, 403, 404, 405, 406, 407, 408, 415, 416, 417, 419, 422], "speed": [1, 2, 4, 8, 30, 122, 126, 144, 145, 151, 152, 399, 403, 404, 405, 406, 415, 416, 417, 419], "avoid": [1, 2, 3, 27, 38, 45, 54, 55, 59, 64, 93, 94, 114, 122, 126, 144, 145, 151, 152, 161, 209, 211, 217, 219, 230, 281, 286, 298, 303, 311, 312, 326, 329, 332, 383, 405, 416], "oom": [1, 3, 50, 52, 57, 93, 94, 114], "choic": [1, 2, 82, 88, 144, 265, 398, 399, 403, 404, 409, 415, 416], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 58, 59, 61, 64, 65, 66, 69, 70, 80, 83, 84, 86, 87, 88, 91, 93, 94, 99, 101, 106, 107, 112, 114, 122, 123, 124, 126, 127, 135, 139, 144, 145, 146, 147, 151, 152, 155, 165, 166, 175, 178, 195, 209, 210, 212, 217, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 260, 261, 262, 263, 265, 266, 267, 270, 272, 273, 274, 276, 277, 279, 283, 284, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 310, 311, 312, 325, 326, 327, 329, 330, 332, 334, 335, 343, 344, 345, 346, 347, 361, 377, 392, 393, 394, 398, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 419, 422], "ie": [1, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 86, 98, 107, 122, 126, 130, 141, 144, 145, 151, 152, 162, 169, 182, 212, 217, 227, 250, 254, 290, 398, 399, 404, 416], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 99, 101, 106, 112, 114, 122, 126, 144, 145, 151, 152, 216, 217, 219, 231, 257, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 370, 396, 400, 403, 405, 406, 408, 410, 412, 415, 416, 418, 422], "while": [1, 2, 3, 7, 8, 23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 197, 209, 211, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 312, 317, 325, 326, 329, 332, 398, 399, 403, 405, 406, 408, 410, 411, 415, 416, 417, 418, 419, 421], "wait": [1, 20, 21, 22, 153, 406, 417], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 56, 57, 59, 64, 65, 69, 80, 83, 84, 86, 87, 88, 89, 93, 94, 99, 101, 106, 107, 112, 114, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 161, 165, 166, 168, 169, 177, 188, 195, 197, 200, 201, 204, 206, 209, 211, 219, 226, 233, 234, 248, 252, 277, 294, 295, 300, 301, 302, 309, 310, 312, 313, 314, 316, 317, 318, 323, 325, 329, 332, 334, 343, 350, 351, 361, 363, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 419, 422], "impact": [1, 2, 3, 86, 132, 175, 178, 230, 309, 311, 326, 329, 331, 404, 406, 415, 416], "memori": [1, 3, 8, 21, 27, 30, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 82, 83, 84, 86, 87, 88, 91, 93, 97, 122, 123, 126, 130, 144, 145, 151, 152, 169, 173, 192, 206, 210, 211, 213, 215, 217, 219, 252, 253, 298, 394, 396, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "manag": [1, 8, 339, 340, 343, 344, 345, 346, 376, 398, 409], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 90, 98, 99, 101, 104, 106, 107, 112, 122, 126, 131, 132, 144, 145, 146, 147, 151, 152, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 191, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 226, 227, 228, 229, 231, 232, 242, 243, 246, 247, 250, 254, 256, 257, 272, 273, 275, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 361, 363, 374, 375, 376, 378, 379, 380, 384, 399, 400, 403, 405, 406, 407, 409, 414, 415, 416, 417, 419, 421, 422], "control": [1, 3, 5, 8, 16, 23, 24, 33, 56, 65, 66, 99, 101, 106, 120, 121, 122, 126, 135, 144, 145, 146, 147, 151, 152, 177, 226, 236, 237, 238, 239, 250, 254, 256, 257, 272, 273, 277, 284, 298, 299, 300, 309, 311, 312, 326, 327, 329, 333, 343, 348, 356, 361, 398, 400, 403, 404, 405, 407, 408, 409, 415, 416, 417, 419, 421], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 101, 104, 105, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 169, 170, 175, 178, 183, 186, 187, 188, 192, 193, 195, 204, 206, 207, 210, 211, 213, 217, 219, 221, 242, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 269, 271, 282, 287, 288, 289, 290, 294, 295, 298, 299, 301, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 338, 341, 343, 344, 345, 346, 361, 363, 371, 375, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 419, 422], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 404, 416], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 41, 42, 43, 44, 49, 51, 52, 55, 56, 58, 59, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 99, 101, 104, 106, 122, 123, 126, 144, 145, 146, 147, 151, 152, 165, 166, 169, 172, 175, 178, 180, 183, 190, 202, 209, 211, 212, 217, 219, 230, 232, 250, 254, 261, 343, 345, 346, 376, 380, 399, 403, 404, 405, 406, 408, 409, 410, 412, 415, 416, 417, 419, 422], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 273, 294, 403, 410, 422], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 82, 104, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 209, 264, 329, 334, 343, 344, 345, 346, 347, 362, 397, 398, 400, 403, 404, 405, 406, 408, 410, 411, 416, 419, 422], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 82, 86, 105, 106, 110, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 139, 140, 144, 145, 146, 147, 148, 151, 152, 162, 169, 175, 177, 178, 183, 187, 188, 209, 210, 211, 217, 219, 233, 234, 249, 250, 253, 254, 255, 258, 259, 260, 261, 272, 273, 281, 290, 302, 310, 312, 325, 327, 330, 332, 334, 335, 399, 403, 404, 405, 407, 408, 410, 414, 415, 416, 418, 419, 422], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 102, 104, 105, 106, 107, 112, 114, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 190, 192, 193, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 275, 276, 277, 279, 280, 281, 282, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 394, 399, 400, 403, 404, 405, 406, 408, 415, 418, 419, 421, 422], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 45, 54, 55, 59, 64, 69, 86, 122, 126, 144, 145, 151, 152, 170, 175, 178, 188, 193, 205, 211, 219, 226, 230, 250, 251, 254, 282, 317, 325, 334, 361, 376, 398, 404, 406, 415, 416, 417, 419], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 169, 175, 178, 188, 206, 207, 254, 271, 295, 299, 300, 301, 382, 392, 393, 398, 403, 404, 407, 408, 416, 417, 422], "choos": [1, 11, 135, 250, 254, 329, 396, 399, 403, 404, 405, 415, 416, 419], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 45, 50, 52, 53, 54, 55, 57, 58, 59, 64, 69, 80, 82, 83, 84, 85, 86, 87, 88, 99, 118, 119, 122, 125, 126, 127, 131, 132, 138, 141, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 165, 186, 192, 213, 217, 219, 233, 234, 248, 250, 252, 254, 255, 292, 295, 296, 297, 308, 309, 310, 311, 312, 313, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 363, 380, 398, 399, 400, 403, 404, 405, 406, 409, 410, 414, 415, 416, 417, 419, 421, 422], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 383, 403, 405, 421], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 45, 80, 169, 183, 219, 228, 229, 246, 272, 273, 294, 362, 363, 365, 373, 376, 380, 383, 384, 403, 404, 405, 406, 408, 415, 416, 419, 421, 422], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 100, 101, 105, 106, 108, 110, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 153, 154, 165, 166, 169, 172, 173, 177, 180, 182, 185, 186, 188, 190, 191, 192, 200, 202, 206, 209, 210, 211, 212, 213, 215, 216, 217, 219, 221, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 261, 262, 263, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 298, 299, 301, 302, 305, 311, 312, 326, 327, 329, 332, 334, 342, 343, 344, 345, 346, 361, 362, 365, 376, 399, 400, 404, 405, 406, 407, 408, 410, 411, 415, 416, 417, 419, 421, 422], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 250, 254, 383, 403, 404, 405, 406, 410, 412, 415, 416, 419, 421], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 37, 38, 41, 43, 45, 46, 54, 55, 56, 58, 59, 63, 64, 65, 80, 82, 83, 86, 99, 101, 104, 106, 107, 109, 112, 122, 123, 126, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 162, 185, 192, 197, 200, 204, 205, 206, 207, 209, 215, 217, 219, 228, 229, 243, 246, 248, 249, 250, 252, 254, 260, 261, 266, 274, 275, 283, 291, 292, 297, 301, 349, 352, 353, 354, 355, 357, 358, 359, 360, 363, 376, 377, 392, 393, 399, 403, 404, 405, 406, 408, 409, 410, 412, 415, 416, 417, 418, 419, 421, 422], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 383, 403, 404, 412], "rand_step": [1, 2, 3, 35, 62, 120, 121, 122, 123, 125, 126, 127, 133, 134, 138, 139, 140, 144, 145, 151, 152, 185, 206, 217, 417, 421, 422], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 403], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 82, 84, 86, 87, 88, 403, 404, 405], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 45, 46, 63, 65, 80, 82, 83, 84, 86, 87, 88, 98, 99, 106, 107, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 193, 204, 209, 210, 219, 231, 254, 257, 272, 273, 329, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 371, 396, 399, 403, 404, 405, 406, 407, 410, 412, 417, 421, 422], "pad": [1, 2, 3, 23, 53, 67, 82, 84, 86, 87, 88, 169, 233, 234, 236, 237, 254, 258, 259, 260, 377], "along": [1, 2, 3, 14, 15, 23, 25, 50, 52, 57, 58, 60, 61, 70, 82, 84, 86, 87, 88, 94, 99, 101, 106, 107, 112, 114, 125, 127, 168, 169, 170, 188, 190, 193, 200, 208, 254, 255, 258, 259, 264, 291, 295, 298, 299, 312, 327, 334, 403, 404, 406, 407, 409, 415, 416, 417, 419], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 85, 92, 98, 99, 102, 112, 113, 116, 117, 122, 123, 126, 144, 145, 151, 152, 162, 165, 168, 169, 173, 192, 205, 206, 208, 209, 210, 211, 213, 215, 219, 256, 298, 308, 319, 380, 397, 404, 405, 414, 415, 416, 417, 419, 422], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 107, 126, 165, 193, 204, 227, 229, 258, 259, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 400, 406], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 61, 62, 64, 65, 84, 120, 121, 122, 125, 126, 127, 144, 145, 151, 152, 155, 156, 183, 193, 217, 219, 243, 258, 259, 275, 281, 291, 292, 296, 297, 299, 338, 343, 377, 398, 403, 405, 406, 407, 408, 409, 415, 416], "valid": [1, 2, 3, 23, 50, 52, 53, 70, 89, 112, 157, 165, 193, 209, 211, 219, 228, 229, 233, 234, 255, 258, 259, 272, 273, 326, 343, 344, 345, 346, 377, 400, 422], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 376, 396, 398, 403, 404], "strategi": [1, 2, 16, 86, 104, 135, 162, 246, 259, 268, 398, 400, 403, 404, 408, 415, 416, 419], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 69, 71, 72, 73, 74, 75, 77, 101, 122, 126, 132, 138, 144, 145, 146, 147, 151, 152, 155, 157, 166, 168, 169, 179, 186, 204, 205, 206, 209, 210, 211, 216, 217, 219, 228, 229, 233, 234, 258, 259, 260, 261, 271, 291, 295, 296, 299, 302, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 335, 341, 363, 380, 390, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 422], "organ": [1, 2, 417, 419], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 122, 125, 126, 127, 144, 145, 148, 151, 152, 166, 169, 175, 178, 179, 197, 204, 209, 216, 217, 219, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 306, 314, 319, 334, 341, 361, 363, 398, 399, 404, 407, 408, 409, 410, 411, 412, 415, 417, 421], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 82, 83, 86, 101, 104, 118, 119, 122, 123, 126, 131, 132, 135, 144, 145, 146, 147, 151, 152, 165, 169, 176, 177, 188, 195, 209, 211, 212, 219, 243, 248, 249, 250, 252, 253, 254, 255, 257, 260, 261, 262, 275, 325, 327, 329, 338, 343, 344, 345, 349, 350, 351, 376, 380, 382, 392, 393, 398, 399, 400, 403, 404, 405, 407, 409, 411, 414, 415, 416, 417, 418, 419, 422], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 45, 51, 54, 55, 59, 64, 65, 86, 98, 99, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 219, 262, 295, 309, 311, 324, 326, 327, 329, 363, 365, 380, 397, 398, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "tabl": [1, 27, 398, 404, 408], "summar": [1, 3, 417], "what": [1, 3, 8, 11, 33, 51, 69, 80, 99, 106, 122, 126, 144, 145, 151, 152, 179, 206, 209, 221, 226, 296, 312, 323, 327, 334, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 421, 422], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 45, 54, 55, 56, 59, 64, 69, 70, 99, 105, 106, 122, 126, 138, 141, 144, 145, 151, 152, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 248, 249, 250, 252, 253, 254, 260, 261, 272, 273, 292, 298, 301, 309, 310, 311, 312, 313, 314, 316, 317, 318, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 384, 397, 398, 399, 400, 403, 405, 406, 407, 408, 409, 410, 415, 416, 417, 419, 422], "n": [1, 2, 3, 6, 7, 25, 26, 27, 30, 34, 38, 43, 44, 45, 49, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 169, 177, 182, 212, 219, 248, 249, 252, 257, 269, 271, 272, 273, 294, 299, 309, 310, 318, 327, 342, 377, 400, 404, 406, 408, 415, 416, 419, 422], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 50, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 93, 112, 248, 249, 252, 253, 260, 261, 263, 264, 274, 283, 302, 343, 344, 345, 346, 347, 349, 363, 404, 418, 419], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 98, 99, 101, 105, 112, 122, 123, 125, 126, 139, 140, 144, 145, 151, 152, 162, 165, 169, 175, 178, 179, 192, 196, 197, 205, 207, 209, 215, 217, 219, 221, 226, 248, 252, 272, 273, 291, 298, 309, 333, 343, 344, 345, 346, 347, 349, 363, 370, 380, 382, 394, 397, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "p": [1, 2, 4, 101, 104, 123, 149, 150, 232], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 45, 54, 55, 59, 64, 80, 82, 84, 86, 87, 88, 118, 119, 122, 126, 131, 132, 144, 145, 146, 147, 151, 152, 173, 175, 176, 178, 185, 192, 197, 201, 205, 206, 208, 209, 210, 211, 213, 215, 216, 219, 248, 251, 252, 255, 260, 277, 281, 282, 298, 301, 308, 309, 310, 312, 313, 314, 316, 317, 318, 325, 327, 329, 330, 331, 332, 334, 335, 382, 392, 393, 394, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 422], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 98, 99, 101, 112, 122, 125, 126, 144, 145, 151, 152, 175, 176, 178, 185, 188, 208, 211, 221, 254, 255, 261, 262, 295, 298, 299, 301, 302, 308, 309, 310, 312, 313, 314, 316, 317, 318, 325, 327, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 363, 371, 382, 392, 393, 394, 396, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411, 415, 416, 417, 419, 422], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 69, 70, 71, 72, 73, 74, 75, 82, 84, 86, 87, 88, 93, 94, 99, 106, 107, 112, 114, 120, 121, 122, 125, 126, 127, 128, 144, 145, 151, 152, 155, 156, 162, 168, 169, 170, 182, 188, 190, 193, 200, 203, 208, 212, 217, 233, 234, 235, 240, 250, 252, 254, 255, 258, 259, 260, 263, 264, 270, 274, 278, 279, 280, 281, 284, 291, 294, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 394, 403, 404, 405, 406, 407, 415, 416, 417, 419], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 101, 112, 118, 119, 122, 123, 126, 131, 132, 135, 141, 144, 145, 146, 147, 148, 151, 152, 161, 168, 170, 193, 200, 206, 207, 209, 211, 217, 219, 226, 232, 244, 248, 252, 254, 272, 273, 294, 310, 311, 312, 318, 321, 325, 326, 327, 329, 330, 332, 334, 335, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 380, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "adapt": [1, 24, 163, 204, 230, 326, 403, 417], "equal": [1, 14, 15, 17, 27, 80, 99, 106, 107, 139, 142, 143, 144, 151, 187, 188, 233, 234, 248, 250, 252, 254, 255, 261, 333, 338, 371, 392, 393, 403, 405, 418], "introduc": [1, 2, 144, 151, 248, 250, 252, 254, 272, 273, 403, 415], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 82, 88, 93, 94, 101, 112, 114, 118, 119, 122, 125, 126, 127, 131, 132, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 165, 192, 206, 211, 213, 219, 221, 236, 250, 254, 279, 299, 300, 301, 363, 371, 383, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 419, 421, 422], "confus": [1, 25, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 211, 219], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 82, 84, 86, 87, 88, 93, 94, 95, 101, 104, 105, 106, 107, 108, 110, 114, 122, 125, 126, 127, 138, 144, 145, 151, 152, 172, 176, 177, 194, 201, 208, 213, 217, 219, 246, 248, 250, 254, 264, 265, 290, 292, 297, 299, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 343, 361, 377, 392, 393, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 421, 422], "better": [1, 3, 8, 9, 14, 15, 23, 250, 254, 399, 405, 407, 417, 421], "consist": [1, 2, 3, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 83, 86, 122, 126, 144, 145, 151, 152, 186, 216, 219, 234, 255, 403, 404, 405, 417, 418, 422], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 86, 122, 126, 136, 137, 144, 145, 151, 152, 211, 295, 299, 403, 405, 407, 408, 410, 415, 416, 417, 422], "keep": [1, 3, 4, 7, 8, 15, 51, 56, 65, 66, 101, 105, 112, 144, 151, 188, 192, 215, 217, 219, 226, 272, 273, 373, 380, 403, 404, 405, 406, 410, 411, 412, 416, 417, 419, 421, 422], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 80, 83, 192, 215, 310, 313, 316, 318, 330, 332, 334, 335, 399, 403, 404, 408, 409, 415, 416, 419, 422], "interchang": [1, 260, 261, 405, 407, 411, 418, 419], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 99, 101, 102, 105, 106, 107, 114, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 177, 187, 198, 209, 211, 217, 219, 221, 233, 234, 242, 248, 250, 254, 255, 260, 261, 292, 295, 299, 309, 311, 312, 313, 316, 317, 318, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 338, 343, 376, 380, 399, 403, 404, 406, 410, 415, 416, 417, 419, 422], "wherea": [1, 2, 22, 86, 118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 177, 219, 327, 400, 411], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 69, 71, 72, 73, 74, 75, 83, 86, 88, 98, 99, 122, 126, 138, 144, 145, 151, 152, 192, 206, 209, 211, 215, 217, 219, 246, 247, 250, 252, 254, 258, 259, 272, 273, 295, 299, 312, 314, 317, 318, 332, 341, 343, 344, 345, 346, 347, 398, 403, 404, 405, 407, 409, 410, 411, 415, 416, 417, 418], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 80, 86, 99, 106, 112, 122, 126, 144, 145, 151, 152, 193, 209, 300, 301, 371, 380, 398, 403, 404, 405, 410, 414, 421, 422], "doesn": [1, 4, 12, 112, 139, 175, 178, 407], "understood": [1, 3, 403], "serv": [1, 18, 20, 21, 128, 419, 422], "basi": [1, 112, 260, 419], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 31, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 80, 82, 86, 88, 93, 105, 107, 112, 118, 119, 122, 123, 126, 130, 131, 132, 144, 145, 151, 152, 169, 186, 192, 195, 209, 213, 216, 217, 219, 221, 231, 254, 260, 261, 262, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 363, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "anoth": [1, 2, 3, 8, 64, 69, 86, 99, 106, 122, 125, 126, 127, 130, 144, 145, 151, 152, 166, 175, 176, 178, 206, 210, 255, 295, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 399, 403, 405, 406, 408, 409, 414, 415, 416, 417, 422], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 82, 84, 86, 98, 99, 106, 107, 122, 126, 130, 139, 144, 145, 148, 151, 152, 166, 173, 192, 206, 209, 210, 211, 213, 215, 219, 250, 254, 255, 262, 284, 298, 300, 301, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 361, 363, 365, 398, 400, 403, 404, 405, 406, 407, 408, 409, 411, 415, 416, 417, 419, 422], "method": [1, 2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99, 101, 106, 107, 108, 109, 110, 112, 114, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 165, 166, 169, 173, 175, 176, 179, 180, 182, 186, 188, 192, 194, 195, 196, 197, 201, 204, 206, 210, 211, 213, 215, 219, 220, 228, 231, 232, 246, 250, 254, 260, 261, 262, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 306, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 323, 325, 327, 329, 330, 331, 332, 334, 335, 341, 347, 361, 362, 391, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 415, 417, 419, 422], "op": [1, 25, 26, 28, 29, 30, 34, 41, 42, 43, 44, 47, 48, 49, 69, 71, 72, 73, 74, 75, 187, 216, 228, 229, 246, 363, 382], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 88, 98, 99, 107, 112, 122, 126, 144, 145, 146, 147, 148, 151, 152, 219, 221, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 260, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 291, 292, 294, 296, 297, 302, 305, 361, 363, 399, 403, 404, 405, 406, 407, 408, 409, 415, 417, 418, 419, 421, 422], "goal": [1, 3, 4, 80, 81, 82, 83, 84, 85, 86, 87, 88, 205, 403, 404, 405, 406, 416, 417], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 404], "explicitli": [1, 2, 3, 4, 30, 90, 91, 97, 165, 271, 295, 399, 404, 406, 410, 415, 416, 419], "do": [1, 2, 3, 4, 7, 88, 122, 126, 144, 145, 151, 152, 155, 156, 162, 193, 209, 216, 217, 226, 250, 254, 261, 263, 288, 327, 343, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 421, 422], "deepcopi": [1, 262, 327, 415], "structur": [1, 3, 7, 50, 51, 52, 56, 57, 58, 65, 66, 69, 70, 112, 122, 126, 144, 145, 151, 152, 175, 178, 227, 260, 272, 273, 309, 329, 343, 344, 345, 346, 347, 396, 399, 403, 405, 406, 407, 410, 415, 416, 417, 418], "place": [1, 2, 3, 24, 27, 31, 32, 33, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 93, 94, 101, 104, 114, 122, 123, 126, 144, 145, 151, 152, 155, 156, 165, 173, 179, 192, 206, 210, 211, 213, 215, 216, 217, 219, 227, 262, 290, 294, 298, 377, 382, 383, 399, 404, 405, 408, 411, 415, 416, 417, 419], "instanti": [1, 2, 3, 14, 15, 21, 50, 51, 52, 56, 57, 65, 66, 69, 98, 99, 130, 165, 210, 261, 361, 403, 404, 408, 409, 411, 415, 416, 417, 419, 422], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 120, 121, 122, 123, 125, 126, 127, 128, 136, 137, 138, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 162, 168, 169, 172, 173, 175, 176, 178, 181, 186, 187, 188, 192, 200, 202, 206, 207, 210, 211, 213, 215, 217, 219, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 260, 261, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 298, 299, 301, 302, 305, 306, 309, 310, 312, 321, 325, 327, 329, 330, 331, 332, 334, 335, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 375, 380, 383, 392, 393, 394, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 421, 422], "graph": [1, 3, 4, 8, 54, 64, 118, 119, 131, 132, 339, 340, 403, 417], "reli": [1, 3, 11, 23, 55, 59, 206, 248, 249, 250, 252, 253, 254, 309, 329, 399, 403, 405, 408, 410, 417, 422], "third": [1, 188, 292, 415, 416], "parti": 1, "try": [1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 50, 52, 57, 61, 404, 405, 406, 409, 410, 415, 416, 417, 421, 422], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 138, 144, 145, 151, 152, 169, 186, 309, 311, 326, 327, 329, 331, 399, 403, 404, 406, 415, 416, 417], "chart": 1, "show": [1, 2, 3, 11, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 261, 363, 403, 405, 406, 415, 416, 417, 419, 421], "decis": [1, 2, 3, 235, 270, 290, 315, 328, 398, 406, 407, 408, 415, 416, 419, 422], "simplest": [1, 54, 64, 112, 302, 403, 405, 406, 408, 415, 416, 419, 422], "scenario": [1, 2, 136, 137, 144, 155, 156, 209, 361, 403, 408, 415, 416, 417], "transit": [1, 27, 38, 45, 54, 55, 59, 64, 82, 86, 99, 107, 112, 122, 126, 144, 145, 151, 152, 219, 230, 304, 403, 406, 407, 408, 410, 415, 417, 419], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 58, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 100, 101, 104, 105, 106, 107, 110, 112, 114, 122, 126, 138, 141, 144, 145, 151, 152, 162, 168, 169, 193, 197, 222, 225, 228, 229, 231, 241, 246, 247, 251, 257, 258, 259, 268, 270, 271, 272, 273, 276, 281, 282, 286, 291, 292, 293, 295, 296, 297, 298, 299, 309, 310, 311, 312, 313, 314, 316, 326, 328, 329, 334, 335, 371, 377, 380, 383, 396, 398, 403, 404, 405, 406, 407, 408, 410, 412, 415, 416, 418, 421, 422], "attent": [1, 2, 8, 403, 406, 422], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 122, 126, 138, 142, 143, 144, 145, 151, 152, 153, 154, 173, 177, 188, 192, 206, 210, 211, 213, 215, 217, 219, 226, 231, 232, 243, 244, 246, 248, 250, 252, 254, 257, 262, 273, 275, 279, 286, 291, 292, 294, 297, 298, 299, 300, 301, 303, 308, 313, 314, 316, 327, 342, 343, 344, 345, 346, 347, 349, 372, 376, 390, 398, 400, 403, 404, 405, 407, 408, 409, 410, 411, 416, 417, 422], "built": [1, 2, 3, 5, 7, 101, 118, 119, 125, 131, 132, 141, 142, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 336, 341, 388, 390, 391, 394, 403, 404, 405, 406, 409, 411, 417, 419, 422], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 112, 166, 182, 377, 396, 406, 416], "suffici": [1, 3, 4, 403], "preprocess": [1, 2, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 404], "popul": [1, 2, 3, 14, 15, 16, 51, 56, 63, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 185, 206, 262, 327, 403, 405, 406, 408, 410, 417, 419], "replaybuff": [1, 2, 14, 15, 16, 35, 51, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 101, 106, 116, 169, 193, 197, 219, 314, 319, 341, 388, 390, 396, 405, 410, 412, 415, 416, 418, 419, 421], "lazytensorstorag": [1, 2, 51, 56, 64, 65, 66, 98, 112, 197, 219, 405, 412, 415, 416, 419], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 54, 56, 64, 112, 122, 123, 126, 144, 145, 151, 152, 161, 166, 186, 206, 219, 232, 284, 291, 294, 295, 296, 320, 322, 323, 334, 343, 346, 354, 355, 359, 360, 361, 390, 399, 403, 415, 416, 419, 421, 422], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 86, 106, 112, 166, 250, 254, 255, 271, 361, 405, 415, 416], "extend": [1, 2, 8, 35, 51, 54, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 98, 99, 101, 102, 106, 107, 110, 112, 113, 116, 117, 168, 197, 219, 230, 327, 377, 399, 400, 403, 404, 405, 406, 410, 412, 415, 416, 418, 419, 421], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 162, 168, 419], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 52, 56, 57, 65, 66, 112, 130, 262, 410, 415, 416], "achiev": [1, 2, 3, 4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 130, 144, 145, 151, 152, 205, 219, 227, 232, 295, 377, 400, 403, 404, 405, 406, 415, 416, 417, 419, 422], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 101, 112, 122, 123, 126, 130, 144, 145, 146, 151, 152, 155, 156, 166, 169, 192, 209, 210, 211, 213, 216, 217, 219, 224, 226, 233, 234, 236, 237, 238, 239, 240, 245, 250, 254, 255, 256, 260, 261, 290, 299, 306, 312, 314, 319, 330, 332, 341, 363, 377, 384, 385, 386, 390, 392, 393, 398, 403, 404, 405, 406, 408, 411, 415, 416, 417, 418, 419, 421, 422], "multidimension": [1, 2, 65, 98, 99, 419], "slicesampl": [1, 2, 80, 99, 419], "sampler": [1, 2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 114, 193, 271, 314, 319, 341, 403, 405, 415, 416, 419], "One": [1, 2, 4, 8, 25, 26, 30, 34, 43, 44, 49, 70, 112, 118, 119, 144, 151, 169, 197, 213, 228, 229, 268, 298, 302, 333, 338, 367, 403, 404, 419, 422], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 101, 106, 107, 108, 109, 110, 112, 114, 118, 122, 123, 126, 131, 142, 144, 145, 146, 147, 148, 151, 152, 153, 155, 162, 165, 166, 169, 172, 179, 183, 186, 188, 190, 201, 205, 206, 207, 209, 211, 212, 217, 219, 233, 234, 243, 250, 254, 255, 258, 259, 260, 261, 275, 286, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 333, 334, 335, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 399, 403, 404, 405, 406, 408, 414, 417, 419, 421], "ensur": [1, 2, 3, 27, 38, 45, 51, 54, 55, 59, 64, 65, 98, 99, 105, 122, 126, 144, 145, 151, 152, 162, 169, 192, 204, 211, 213, 217, 219, 250, 254, 291, 398, 404, 405, 417, 419], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 101, 112, 114, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 168, 170, 175, 178, 179, 180, 186, 188, 190, 194, 195, 197, 201, 204, 206, 208, 217, 218, 219, 221, 224, 226, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 265, 268, 269, 270, 271, 272, 274, 275, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302, 303, 306, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 371, 377, 380, 390, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 80, 251, 281, 282, 308, 397, 403, 404, 405, 406, 409, 415, 416, 418, 422], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 52, 54, 55, 59, 64, 69, 108, 112, 122, 126, 130, 135, 144, 145, 146, 147, 151, 152, 169, 172, 182, 192, 195, 207, 209, 211, 215, 217, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 263, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 295, 296, 297, 298, 302, 305, 308, 318, 331, 332, 342, 347, 363, 380, 394, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 421, 422], "dimension": [1, 51, 55, 56, 64, 65, 66, 177, 250, 254, 343, 348, 356, 416], "num_slic": [1, 2, 80, 86, 99, 106, 107, 419], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 43, 44, 45, 51, 54, 56, 58, 59, 61, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 106, 107, 114, 118, 119, 120, 121, 122, 126, 131, 132, 133, 134, 135, 138, 140, 144, 145, 149, 150, 151, 152, 162, 163, 165, 166, 169, 179, 197, 204, 205, 209, 217, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 252, 253, 255, 257, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 303, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 361, 362, 398, 402, 403, 404, 405, 406, 408, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 62, 166, 197, 406, 410, 419], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 45, 62, 166, 169, 197, 380, 383, 390, 400, 403, 404, 405, 406, 410, 412, 415, 416, 419, 421], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 169, 170, 190, 203, 206, 212, 217, 253, 279, 284, 294, 394, 404, 405, 415, 417, 419], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 93, 94, 98, 99, 112, 114, 122, 126, 144, 145, 151, 152, 219, 294], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 112, 122, 126, 139, 145, 146, 147, 148, 151, 152, 209, 361, 391, 396, 403, 404, 405, 407, 414, 421, 422], "make_env": [1, 3, 144, 151, 156, 209, 217, 361, 385, 386, 403, 404, 421, 422], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 98, 104, 122, 126, 144, 145, 151, 152, 211, 230, 242, 275, 292, 296, 297, 298, 299, 319, 329, 382, 396, 400, 403, 404, 407, 408, 412, 419, 422], "behav": [1, 3, 128, 138, 248, 252, 268, 317, 325, 327, 418], "iif": 1, "accordingli": [1, 2, 99, 204, 205, 252, 296, 406], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 107, 112, 114, 120, 121, 122, 125, 126, 127, 128, 129, 135, 136, 137, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 163, 165, 166, 169, 173, 177, 179, 180, 186, 188, 190, 192, 194, 195, 197, 200, 201, 204, 205, 206, 208, 209, 210, 211, 213, 215, 219, 220, 224, 230, 231, 232, 233, 234, 236, 237, 238, 240, 243, 245, 248, 249, 250, 252, 253, 254, 255, 257, 260, 261, 262, 265, 268, 271, 274, 284, 286, 287, 288, 289, 291, 292, 295, 297, 298, 301, 302, 303, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 349, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 379, 398, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 86, 98, 112, 165, 179, 221, 291, 298, 408, 409, 411, 415, 416], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 99, 101, 107, 122, 126, 128, 139, 142, 143, 144, 145, 151, 152, 165, 166, 169, 193, 205, 206, 207, 209, 210, 211, 219, 222, 226, 244, 272, 273, 277, 281, 294, 309, 311, 312, 319, 326, 329, 331, 332, 366, 400, 403, 404, 405, 406, 409, 415, 416, 417, 419, 421, 422], "fulli": [1, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 249, 253, 404, 409, 417, 419], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 101, 102, 105, 107, 108, 110, 112, 113, 114, 116, 117, 122, 123, 126, 139, 144, 145, 146, 147, 151, 152, 153, 155, 156, 163, 165, 182, 192, 193, 197, 209, 211, 213, 217, 219, 221, 227, 232, 233, 234, 240, 255, 264, 271, 290, 294, 298, 299, 300, 301, 309, 310, 312, 313, 314, 316, 317, 318, 325, 327, 329, 330, 331, 332, 334, 335, 343, 345, 346, 361, 368, 380, 397, 399, 403, 404, 405, 408, 409, 415, 416, 417, 419, 421, 422], "consecut": [1, 3, 80, 105, 130, 254, 272, 273, 363, 406, 407, 410, 416, 419, 422], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 86, 122, 123, 125, 126, 139, 140, 144, 145, 151, 152, 192, 215, 219, 309, 380, 394, 404, 405, 407, 408], "therebi": [1, 24, 361, 399, 403, 404], "interrupt": [1, 2, 126, 294, 349], "These": [1, 2, 7, 58, 83, 88, 115, 155, 192, 215, 398, 399, 403, 405, 415, 416, 417, 419, 422], "tool": [1, 2, 3, 5, 398, 406, 407, 415, 417, 419, 422], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 122, 125, 126, 144, 145, 151, 152, 158, 161, 400, 403, 405, 406, 407, 410, 411, 417], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 396], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 396], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 56, 65, 66, 80, 88, 101, 123, 124, 144, 151, 217, 403, 404, 405, 406, 415, 416, 417, 418, 422], "synchron": [1, 14, 19, 21, 50, 52, 57, 139, 392, 393, 404, 405, 415], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 139, 144, 145, 151, 152, 175, 178, 205, 211, 217, 219, 241, 250, 251, 254, 259, 268, 280, 281, 282, 295, 299, 327, 361, 376, 398, 399, 403, 404, 406, 415, 416, 421, 422], "find": [1, 4, 6, 7, 18, 19, 20, 51, 53, 67, 106, 107, 228, 229, 252, 272, 273, 374, 378, 403, 404, 408, 409, 415, 416], "folder": [1, 2, 50, 52, 57, 155, 404], "variou": [1, 2, 3, 250, 254, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 336, 341, 363, 392, 393, 403, 404, 405, 407, 408, 409, 411, 415, 416, 419, 422], "machin": [1, 2, 7, 18, 19, 20, 45, 85, 130, 415, 416, 421], "wonder": 1, "why": [1, 2, 3, 226, 415, 417, 422], "instead": [1, 4, 7, 8, 12, 14, 15, 16, 25, 27, 38, 45, 54, 55, 59, 64, 68, 86, 122, 126, 144, 145, 151, 152, 182, 206, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 309, 311, 312, 314, 317, 318, 319, 325, 326, 329, 330, 331, 332, 341, 343, 347, 351, 394, 399, 407, 408, 412, 417, 419, 422], "lower": [1, 2, 3, 21, 27, 28, 172, 217, 276, 277, 302, 405, 415, 417], "io": [1, 11, 80, 86, 131, 132, 139, 142, 143, 153, 154, 252, 253], "footprint": [1, 2, 419], "commun": [1, 2, 3, 144, 151, 397, 405, 422], "yet": [1, 118, 119, 131, 418], "plai": [1, 3, 146, 147, 152, 169, 404, 405, 409, 419, 422], "role": [1, 3, 137, 404, 409, 422], "opposit": [1, 415], "direct": [1, 2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 248, 252, 327, 404, 409], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 87, 88, 139, 343, 344, 345, 346, 406, 415, 416], "share": [1, 3, 6, 8, 23, 50, 52, 56, 57, 65, 66, 69, 91, 93, 94, 95, 99, 101, 102, 106, 108, 110, 114, 123, 144, 151, 209, 217, 250, 254, 260, 261, 287, 288, 289, 309, 310, 311, 312, 313, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 394, 396, 398, 405, 406, 412, 414, 415, 416, 421, 422], "among": [1, 3, 146, 147, 209, 415, 416], "prohibit": [1, 3, 112], "slow": [1, 3, 4, 11, 50, 52, 57], "compar": [1, 3, 86, 112, 310, 312, 325, 330, 332, 334, 335, 376, 399, 403, 405, 408, 409, 415, 416, 419, 422], "gpu": [1, 7, 8, 27, 38, 45, 54, 55, 59, 64, 93, 94, 114, 122, 126, 127, 130, 144, 145, 151, 152, 219, 403, 405, 406, 415, 416, 422], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 65, 69, 80, 98, 99, 106, 112, 118, 119, 126, 152, 165, 188, 209, 217, 228, 229, 230, 231, 241, 244, 248, 250, 252, 254, 257, 270, 271, 280, 281, 295, 299, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 398, 399, 403, 404, 405, 408, 415, 416, 417, 419, 421, 422], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 98, 99, 101, 104, 106, 107, 110, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 165, 166, 170, 172, 173, 176, 192, 200, 201, 206, 208, 209, 210, 211, 212, 213, 215, 219, 228, 229, 230, 232, 246, 247, 250, 254, 258, 259, 260, 261, 272, 273, 286, 290, 291, 294, 295, 296, 298, 299, 302, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 337, 341, 343, 344, 345, 346, 347, 351, 361, 370, 391, 403, 404, 405, 408, 411, 415, 416, 419, 422], "build": [1, 3, 7, 23, 27, 31, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 127, 128, 131, 132, 136, 137, 139, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 197, 217, 219, 231, 250, 254, 257, 293, 295, 299, 380, 387, 388, 389, 398, 400, 405, 406, 408, 409, 410, 411, 415, 416, 417, 418, 421, 422], "mani": [1, 2, 3, 4, 56, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 139, 140, 148, 309, 311, 318, 326, 329, 398, 403, 404, 405, 407, 408, 410, 412, 415, 416, 417, 419, 422], "eg": [1, 2, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 93, 94, 95, 108, 110, 114, 120, 121, 122, 125, 126, 127, 128, 130, 144, 145, 148, 151, 152, 177, 204, 211, 260, 290, 363], "gymnasium": [1, 2, 3, 5, 12, 64, 122, 125, 126, 127, 133, 134, 144, 145, 151, 152, 158, 161, 180, 201, 204, 216, 404, 405, 417, 421], "warn": [1, 3, 55, 59, 228, 229, 246, 247, 272, 273, 404], "quickli": [1, 3, 404, 415, 416, 422], "becom": [1, 3, 4, 21, 248, 252, 415, 416, 422], "quit": [1, 3, 11, 80, 122, 126, 144, 145, 151, 152, 403, 404, 405, 408, 415, 416, 422], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 61, 120, 121, 122, 125, 126, 127, 128, 136, 137, 144, 145, 146, 147, 148, 151, 152, 155, 156, 284, 299, 327, 376, 394, 399, 403, 415, 418, 419, 422], "filter": [1, 2, 3, 4, 70, 99, 106, 107, 309, 310, 312, 313, 317, 318, 325, 329, 330, 332, 407], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 82, 86, 91, 99, 106, 107, 122, 126, 144, 145, 146, 147, 151, 152, 206, 219, 221, 248, 249, 252, 258, 259, 262, 263, 264, 273, 286, 290, 291, 292, 295, 296, 297, 298, 299, 327, 339, 340, 399, 400, 403, 404, 405, 406, 407, 408, 410, 415, 416, 417, 419, 421, 422], "still": [1, 2, 3, 9, 54, 64, 71, 86, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 209, 229, 326, 327, 403, 404, 406, 414, 417, 419, 422], "wish": [1, 3, 11, 14, 15, 17, 86, 161, 409, 419], "displai": [1, 3, 7, 122, 126, 144, 145, 151, 152, 380, 400, 403, 404, 416, 417], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 170, 173, 175, 178, 179, 180, 182, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 213, 215, 217, 219, 221, 226, 227, 229, 230, 231, 232, 233, 234, 236, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 272, 273, 274, 275, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 338, 341, 343, 344, 345, 346, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 370, 373, 374, 376, 377, 378, 380, 394, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "central": [2, 260, 261, 262, 403, 404, 407, 415, 416, 419], "part": [2, 3, 4, 8, 27, 38, 45, 54, 55, 58, 59, 64, 80, 83, 84, 86, 87, 88, 118, 122, 126, 131, 142, 144, 145, 151, 152, 168, 188, 197, 200, 219, 226, 250, 254, 303, 371, 394, 403, 405, 406, 412, 415, 417, 422], "algorithm": [2, 3, 8, 9, 138, 162, 309, 329, 330, 332, 396, 399, 400, 403, 404, 405, 406, 408, 409, 410, 411, 415, 416, 418, 419, 421], "implement": [2, 3, 9, 12, 14, 15, 16, 27, 38, 45, 54, 55, 59, 64, 68, 96, 108, 109, 122, 126, 138, 139, 144, 145, 151, 152, 166, 173, 175, 176, 180, 183, 186, 194, 195, 201, 204, 210, 211, 217, 219, 233, 248, 249, 250, 251, 252, 253, 254, 280, 281, 282, 309, 310, 312, 315, 316, 317, 323, 325, 327, 328, 329, 331, 332, 334, 361, 371, 385, 398, 400, 403, 404, 405, 406, 415, 416, 417, 421], "wide": [2, 3, 5], "give": [2, 3, 7, 65, 83, 122, 126, 138, 144, 145, 151, 152, 169, 397, 399, 403, 404, 415, 416, 417, 418, 421], "abil": [2, 327, 417, 419], "panel": [2, 405], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 82, 88, 91, 112, 166, 169, 179, 250, 254, 312, 317, 325, 332, 336, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 45, 54, 55, 59, 64, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 108, 110, 114, 122, 126, 138, 142, 143, 144, 145, 151, 152, 205, 209, 211, 217, 219, 250, 254, 309, 312, 327, 332, 383, 398, 400, 403, 404, 405, 406, 415, 416, 417, 419, 422], "almost": [2, 406], "physic": [2, 6, 7, 91, 144, 145, 148, 400, 403, 415, 416, 417], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 80, 93, 94, 95, 108, 110, 114, 122, 125, 126, 127, 144, 145, 151, 152, 219, 262, 272, 273, 314, 327, 341, 403, 404, 406, 415, 416, 418, 419], "liststorag": [2, 51, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 419], "veri": [2, 3, 131, 132, 404, 407, 410, 415, 417, 419, 421, 422], "ineffici": [2, 4], "allow": [2, 3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 80, 86, 99, 101, 104, 106, 107, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 165, 166, 195, 219, 226, 255, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 336, 338, 341, 398, 400, 403, 405, 406, 407, 408, 409, 415, 416, 417, 419, 422], "complex": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298, 403, 404, 407, 408], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 106, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 165, 166, 168, 169, 170, 173, 175, 177, 178, 179, 180, 182, 185, 188, 190, 192, 193, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 219, 224, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 307, 309, 310, 312, 313, 314, 316, 317, 318, 321, 322, 325, 327, 329, 330, 331, 332, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 421, 422], "contigu": [2, 3, 8, 28, 31, 38, 71, 83, 86, 87, 122, 126, 144, 145, 151, 152, 224, 405, 406, 415, 416, 417, 419, 421, 422], "tensorstorag": [2, 56, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 98, 99, 112, 115, 410, 419], "lazymemmapstorag": [2, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 106, 107, 168, 169, 403, 404, 406, 410, 415, 418, 419], "citizen": 2, "pytre": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 115], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 99, 101, 106, 110, 112, 120, 121, 122, 125, 126, 127, 144, 145, 151, 152, 186, 188, 219, 232, 236, 242, 243, 250, 253, 254, 255, 262, 265, 270, 274, 275, 291, 292, 296, 297, 302, 309, 310, 312, 313, 317, 318, 320, 325, 327, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 374, 376, 378, 387, 419], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 99, 104, 106, 107, 122, 125, 126, 127, 136, 137, 144, 145, 151, 152, 155, 156, 206, 209, 211, 219, 295, 299, 312, 332, 334, 376, 392, 393, 394, 400, 404, 405, 407, 409, 415, 417, 422], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 45, 46, 50, 52, 54, 55, 56, 57, 59, 61, 62, 63, 64, 76, 93, 94, 97, 101, 114, 122, 125, 126, 127, 144, 145, 151, 152, 169, 204, 207, 209, 219, 227, 294, 343, 344, 345, 346, 347, 361, 400, 404, 405, 416, 417, 419, 421], "construct": [2, 3, 5, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 101, 122, 123, 125, 126, 144, 145, 146, 151, 152, 175, 178, 219, 221, 250, 254, 277, 299, 380, 398, 404, 405, 406, 408, 415, 417, 419, 422], "ram": [2, 125, 127, 411, 419, 422], "prealloc": [2, 3, 144, 151, 417], "ve": [2, 58, 403, 406, 412], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 71, 72, 73, 74, 75, 101, 105, 122, 126, 130, 136, 137, 144, 145, 151, 152, 186, 204, 205, 210, 229, 247, 248, 252, 262, 273, 294, 309, 327, 329, 331, 403, 404, 405, 406, 414, 415, 416, 417, 419, 422], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 87, 88, 112, 120, 121, 122, 126, 130, 144, 145, 146, 147, 151, 152, 169, 209, 262, 370, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 412, 415, 416, 417, 419, 421, 422], "start": [2, 3, 4, 5, 14, 21, 24, 69, 70, 80, 88, 99, 106, 107, 123, 126, 135, 144, 151, 174, 226, 375, 402, 403, 404, 413, 416, 417, 419, 420, 422], "replay_buff": [2, 8, 14, 15, 16, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 377, 390, 403, 404, 405, 410, 415, 416, 419], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 35, 45, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 134, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 162, 163, 165, 166, 168, 169, 172, 179, 180, 185, 186, 188, 190, 192, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 209, 210, 215, 217, 219, 220, 224, 226, 227, 231, 232, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 260, 261, 262, 265, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302, 303, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 361, 363, 373, 376, 390, 398, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "rb": [2, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 106, 107, 112, 169, 197, 219, 404, 406, 410, 412, 416, 418, 419, 421], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 41, 45, 51, 56, 58, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 101, 106, 107, 112, 114, 118, 119, 122, 123, 126, 131, 132, 138, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 162, 163, 166, 168, 169, 205, 207, 208, 219, 231, 232, 235, 236, 238, 240, 242, 246, 247, 248, 249, 250, 252, 253, 254, 257, 270, 272, 273, 284, 295, 302, 306, 310, 314, 316, 323, 329, 330, 331, 335, 341, 343, 344, 345, 346, 349, 363, 371, 400, 403, 404, 405, 406, 407, 408, 412, 415, 416, 417, 418, 419, 421, 422], "add": [2, 3, 4, 6, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 98, 101, 102, 112, 113, 116, 117, 122, 126, 144, 145, 151, 152, 169, 186, 211, 219, 250, 254, 263, 293, 309, 375, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 421], "string": [2, 18, 19, 20, 27, 38, 45, 53, 54, 55, 59, 64, 70, 89, 122, 126, 136, 142, 144, 145, 151, 152, 161, 192, 204, 215, 219, 250, 254, 291, 294, 295, 296, 308, 362, 379, 399, 403, 405, 406, 419], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 43, 51, 56, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 98, 99, 101, 106, 107, 112, 114, 141, 144, 151, 162, 169, 193, 202, 205, 206, 228, 229, 233, 234, 248, 249, 252, 286, 291, 294, 298, 299, 303, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 371, 399, 403, 405, 408, 410, 419, 422], "30": [2, 3, 56, 64, 84, 165, 187, 276, 277, 361, 365, 402, 404, 405, 410, 415, 416, 417, 419, 420], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 104, 106, 107, 108, 110, 112, 114, 122, 123, 125, 126, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 182, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 390, 392, 393, 394, 398, 400, 403, 404, 406, 407, 408, 409, 410, 411, 414, 417, 419, 421, 422], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 106, 107, 108, 112, 113, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 155, 156, 162, 164, 165, 166, 168, 169, 170, 171, 173, 174, 177, 182, 183, 187, 188, 190, 192, 193, 196, 203, 204, 207, 211, 212, 213, 215, 219, 221, 224, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 290, 291, 292, 294, 295, 297, 298, 299, 309, 310, 311, 318, 320, 321, 326, 327, 328, 329, 330, 334, 335, 343, 345, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 371, 372, 373, 376, 377, 380, 382, 388, 392, 393, 394, 417, 419], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 45, 50, 52, 53, 54, 55, 57, 59, 61, 62, 64, 70, 77, 82, 83, 84, 85, 87, 88, 106, 107, 120, 121, 122, 125, 126, 127, 128, 136, 137, 144, 145, 148, 151, 152, 155, 156, 165, 169, 171, 172, 174, 175, 176, 178, 179, 182, 185, 188, 190, 192, 195, 197, 200, 202, 204, 205, 206, 209, 212, 215, 217, 219, 226, 227, 250, 258, 259, 290, 291, 294, 296, 297, 310, 312, 332, 343, 344, 345, 346, 398, 403, 405, 406, 407, 408, 409, 411, 415, 416, 417, 418, 419, 422], "onto": [2, 8, 50, 52, 57, 176, 224, 228, 229, 272, 273, 286, 291, 292, 295, 296, 297, 298, 299, 406, 417], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 98, 99, 101, 102, 104, 105, 106, 107, 112, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 155, 156, 162, 169, 170, 204, 205, 206, 207, 211, 219, 227, 233, 234, 255, 258, 259, 261, 272, 273, 294, 296, 297, 305, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 384, 394, 397, 400, 405, 406, 410, 411, 412, 417, 419, 422], "without": [2, 3, 7, 9, 14, 15, 16, 27, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 69, 80, 82, 86, 106, 107, 122, 126, 144, 145, 151, 152, 155, 156, 163, 165, 175, 178, 208, 219, 248, 249, 252, 253, 288, 289, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 342, 343, 344, 345, 346, 347, 390, 397, 398, 403, 404, 405, 407, 408, 409, 410, 415, 416, 417, 419, 422], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 51, 52, 54, 55, 57, 58, 59, 64, 65, 98, 99, 122, 126, 138, 144, 145, 146, 147, 151, 152, 153, 154, 163, 165, 166, 175, 177, 178, 194, 204, 205, 209, 211, 214, 217, 219, 227, 228, 229, 231, 246, 247, 248, 250, 254, 257, 262, 272, 273, 295, 296, 297, 298, 299, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 341, 343, 344, 345, 346, 347, 376, 380, 382, 385, 386, 389, 390, 400, 404, 405, 406, 409, 412, 415, 416, 417, 419, 421, 422], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 58, 60, 61, 67, 69, 70, 71, 72, 73, 74, 75, 80, 86, 89, 99, 106, 107, 110, 122, 126, 131, 132, 144, 145, 151, 152, 162, 193, 217, 231, 233, 234, 236, 238, 240, 248, 252, 255, 257, 260, 261, 286, 298, 303, 371, 377, 403, 405, 406, 410, 412, 417, 419, 422], "cursor": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "afterward": [2, 27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 415, 422], "tell": [2, 3, 4, 7, 146, 147, 209, 403, 406, 410, 415, 416], "our": [2, 3, 7, 8, 11, 18, 56, 169, 363, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421], "far": [2, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 251, 281, 282, 412, 417, 422], "restrict": [2, 3, 404, 418, 419, 422], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 101, 122, 126, 141, 144, 145, 151, 152, 175, 178, 192, 194, 207, 211, 213, 215, 219, 224, 367, 403, 417], "64": [2, 3, 50, 52, 57, 80, 86, 101, 169, 196, 236, 237, 245, 250, 254, 261, 262, 274, 341, 403, 404, 405, 406, 408, 412, 414, 417, 418, 419, 421, 422], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 106, 107, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 163, 166, 167, 173, 175, 176, 177, 178, 179, 180, 186, 188, 190, 192, 194, 195, 197, 201, 204, 206, 208, 210, 211, 213, 215, 219, 221, 224, 226, 227, 231, 232, 242, 243, 248, 249, 250, 252, 253, 254, 257, 263, 264, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 303, 306, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 349, 398, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "unit8": 2, "img": 2, "randint": [2, 70, 101, 208, 419], "255": [2, 101, 208, 419], "uint8": [2, 3, 31, 50, 52, 57, 80, 86, 120, 121, 136, 137, 179, 190, 208, 404, 411, 418, 419, 421, 422], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 45, 51, 56, 58, 61, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 99, 101, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 136, 137, 138, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 162, 165, 166, 168, 169, 175, 178, 179, 180, 185, 186, 190, 194, 195, 197, 200, 201, 204, 206, 209, 216, 217, 219, 224, 226, 231, 249, 250, 253, 254, 257, 277, 294, 304, 306, 309, 310, 312, 313, 314, 316, 317, 318, 319, 325, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 363, 374, 376, 378, 404, 406, 408, 411, 412, 414, 417, 418, 421, 422], "ask": [2, 8, 80, 86, 99, 106, 107, 363, 405, 406, 407, 408, 415, 416, 418, 422], "automat": [2, 3, 5, 28, 69, 71, 88, 93, 94, 101, 114, 122, 125, 126, 127, 144, 145, 146, 147, 151, 152, 165, 175, 178, 188, 206, 216, 233, 250, 254, 286, 294, 295, 361, 398, 403, 405, 407, 408, 415, 416, 417, 419, 421], "hand": [2, 3, 7, 21, 31, 415, 416, 417], "look": [2, 3, 5, 7, 8, 27, 38, 45, 54, 55, 59, 64, 99, 122, 126, 135, 144, 145, 146, 147, 151, 152, 192, 193, 213, 219, 295, 299, 300, 301, 399, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422], "assum": [2, 3, 6, 14, 15, 16, 31, 58, 59, 65, 66, 82, 84, 86, 87, 88, 90, 91, 97, 106, 122, 126, 144, 145, 151, 152, 168, 171, 174, 182, 192, 193, 200, 206, 211, 213, 215, 224, 232, 250, 254, 284, 302, 314, 319, 332, 341, 352, 353, 354, 355, 357, 358, 359, 360, 363, 403, 405, 406, 414, 417], "lead": [2, 3, 4, 8, 10, 12, 23, 31, 32, 39, 45, 51, 56, 61, 65, 66, 82, 105, 120, 121, 122, 125, 127, 128, 206, 251, 274, 281, 282, 403, 406, 415, 416, 417, 419, 421], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 56, 57, 60, 61, 69, 71, 72, 73, 74, 75, 122, 221, 227, 403, 410, 419], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 110, 120, 121, 122, 123, 125, 126, 127, 128, 144, 145, 151, 152, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 233, 234, 241, 250, 254, 255, 260, 261, 280, 286, 290, 291, 295, 296, 298, 299, 302, 303, 310, 312, 318, 326, 328, 330, 332, 377, 382, 398, 403, 405, 414, 416, 417, 419, 422], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 169, 404, 405, 410, 419, 421, 422], "throw": [2, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 219, 422], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 99, 100, 101, 106, 107, 112, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 166, 168, 169, 173, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 210, 211, 219, 220, 226, 227, 231, 232, 240, 242, 243, 246, 247, 250, 254, 257, 272, 273, 274, 275, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302, 303, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 363, 371, 377, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "max": [2, 23, 52, 65, 70, 89, 98, 99, 112, 177, 207, 272, 273, 282, 310, 311, 312, 318, 328, 330, 332, 403, 405, 406, 412], "label": [2, 52, 53, 58, 70, 403, 415, 419], "100": [2, 14, 15, 16, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 67, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 112, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 172, 179, 188, 197, 202, 204, 219, 260, 292, 294, 363, 372, 390, 404, 405, 406, 407, 409, 412, 414, 415, 416, 417, 418, 419, 421, 422], "rb_pytre": 2, "randn": [2, 51, 54, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 99, 101, 106, 107, 114, 168, 188, 224, 232, 235, 236, 240, 242, 243, 248, 249, 252, 253, 258, 259, 260, 265, 268, 270, 275, 286, 287, 288, 289, 290, 291, 295, 296, 298, 301, 302, 303, 309, 310, 312, 313, 314, 316, 317, 318, 325, 327, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 379, 398, 419, 421, 422], "c": [2, 3, 6, 7, 31, 50, 52, 54, 56, 57, 64, 65, 66, 85, 188, 208, 252, 253, 404, 419], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 106, 107, 112, 114, 122, 126, 144, 145, 151, 152, 166, 168, 170, 175, 177, 178, 188, 194, 197, 219, 224, 226, 230, 231, 237, 238, 239, 245, 246, 247, 248, 249, 250, 252, 253, 254, 258, 259, 261, 262, 272, 273, 274, 283, 297, 305, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 349, 406, 419, 421], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 126, 129, 144, 151, 161, 162, 166, 169, 172, 175, 178, 186, 195, 202, 217, 221, 224, 232, 261, 265, 284, 343, 344, 345, 346, 371, 379, 410, 414, 419, 422], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 114, 190, 233, 234, 255, 261, 403, 410, 412, 415, 417, 418, 419, 421], "ambigu": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 110, 122, 126, 144, 145, 151, 152, 166, 173, 192, 206, 210, 211, 213, 215, 219, 298, 399, 403, 407, 417], "deal": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 327, 399, 403, 405, 416, 419], "interpret": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 404], "put": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 126, 136, 137, 152, 155, 156, 217, 370, 394, 398, 404, 405, 406, 407, 415, 417], "solv": [2, 4, 9, 10, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 397, 403, 404, 405, 410, 412, 415, 416, 417, 419], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 45, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 130, 144, 145, 151, 152, 219, 372, 407, 410], "cut": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "distinct": [2, 3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 166, 409, 414], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 219, 243, 248, 252, 255, 407, 417, 419, 421, 422], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 51, 55, 56, 59, 61, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 125, 126, 127, 130, 131, 132, 135, 144, 145, 146, 147, 151, 152, 165, 175, 178, 193, 232, 255, 274, 294, 295, 299, 300, 301, 305, 327, 343, 344, 345, 346, 398, 399, 403, 404, 405, 407, 409, 414, 415, 416, 417, 418, 419, 422], "collate_fn": [2, 51, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 419, 421], "__init__": [2, 3, 7, 122, 138, 153, 161, 163, 166, 175, 178, 194, 231, 243, 248, 252, 257, 303, 310, 312, 313, 318, 325, 330, 332, 334, 335, 400, 417, 422], "major": 2, "worri": [2, 67], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 64, 69, 71, 72, 73, 74, 75, 93, 94, 95, 99, 106, 108, 110, 114, 122, 123, 126, 130, 144, 145, 151, 152, 165, 227, 403, 405, 407, 415, 416, 417, 422], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 255, 405, 415, 416], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 54, 58, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 187, 206, 251, 281, 282, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 404, 408, 411, 417, 419, 422], "latter": [2, 18, 19, 20, 27, 38, 45, 54, 55, 59, 64, 82, 122, 126, 144, 145, 151, 152, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 329, 392, 393], "inv": [2, 3, 172, 177, 180, 190, 197, 202, 212, 417], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 55, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 91, 122, 126, 144, 145, 151, 152, 177, 180, 201, 208, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 258, 259, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 343, 419], "multithread": [2, 3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 89, 139, 140, 410, 419], "thread": [2, 14, 15, 17, 50, 52, 57, 118, 119, 131, 132, 144, 151], "prefetch": [2, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 89, 403, 404, 406, 419], "advis": [2, 11, 83, 411, 422], "benchmark": [2, 3, 9, 118, 119, 131, 132], "techniqu": [2, 8, 144, 151, 404, 410, 419], "real": [2, 5, 86, 299, 399, 406, 417], "life": [2, 179], "adopt": [2, 3, 5, 403, 422], "throughput": [2, 9, 132, 403], "constant": [2, 11, 33, 169, 188, 205, 400, 403, 405, 406, 422], "throughout": [2, 3, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 405, 415, 422], "further": [2, 3, 5, 24, 403, 405, 407], "refin": [2, 86, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341], "coupl": [2, 406, 408, 409, 417, 419], "get": [2, 3, 4, 6, 7, 8, 9, 31, 32, 39, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 80, 82, 86, 93, 94, 99, 106, 107, 108, 110, 112, 114, 122, 123, 126, 144, 145, 151, 152, 163, 168, 170, 175, 177, 178, 186, 188, 193, 205, 206, 208, 211, 217, 246, 247, 286, 295, 296, 299, 306, 343, 344, 345, 346, 347, 363, 367, 398, 402, 403, 404, 405, 406, 413, 415, 416, 417, 419, 420, 421, 422], "first_elt": 2, "128": [2, 80, 82, 86, 107, 118, 119, 131, 132, 237, 240, 404, 406, 412, 415, 418, 419], "wa": [2, 3, 5, 7, 51, 54, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 105, 106, 122, 126, 144, 145, 151, 152, 211, 221, 227, 252, 309, 311, 324, 326, 329, 331, 333, 349, 399, 404, 405, 407, 408, 414, 415, 419, 421], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 31, 32, 35, 38, 39, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 101, 106, 107, 112, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 158, 161, 162, 165, 166, 169, 170, 175, 176, 177, 178, 185, 188, 194, 195, 197, 200, 204, 206, 207, 208, 217, 219, 224, 226, 227, 233, 234, 236, 237, 238, 239, 240, 243, 245, 246, 247, 250, 254, 255, 258, 259, 260, 261, 265, 268, 271, 272, 273, 275, 286, 287, 288, 289, 290, 291, 294, 295, 296, 298, 301, 303, 306, 327, 361, 390, 398, 400, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 170], "larger": [2, 4, 64, 250, 254, 317, 325, 421], "volum": 2, "due": [2, 3, 5, 23, 409, 418, 419, 422], "memorymappedtensor": [2, 35, 50, 52, 62, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 365, 410, 418], "well": [2, 3, 8, 12, 21, 23, 27, 38, 45, 51, 53, 54, 55, 56, 59, 64, 65, 66, 69, 99, 104, 108, 115, 122, 126, 144, 145, 151, 152, 211, 219, 236, 252, 276, 277, 327, 334, 347, 398, 403, 404, 406, 407, 408, 409, 411, 418, 419, 421, 422], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 174, 175, 176, 178, 200, 203, 205, 212, 219, 231, 252, 298, 299, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 370, 398, 403, 405, 406, 410, 415], "file": [2, 6, 7, 8, 50, 52, 57, 80, 82, 83, 84, 86, 87, 88, 91, 155, 362, 363, 365, 400, 402, 404, 415, 417, 419, 420, 421, 422], "locat": [2, 7, 50, 52, 57, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 174, 179, 188, 199, 251, 265, 281, 282, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 403, 404, 405, 411, 415, 416, 419], "improv": [2, 4, 11, 183, 309, 399, 415, 416, 419], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 144, 151, 405, 415, 419], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 82, 83, 84, 86, 87, 88, 106, 107, 120, 121, 122, 125, 126, 127, 130, 144, 145, 151, 152, 163, 169, 197, 200, 207, 217, 219, 227, 246, 247, 260, 261, 295, 299, 326, 327, 329, 403, 404, 406, 407, 409, 411, 417, 419], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 60, 61, 69, 71, 72, 73, 74, 75, 93, 99, 142, 143, 177, 209, 230, 252, 253, 317, 406, 410, 419], "sharabl": [2, 144, 151], "collabor": [2, 86], "rather": [2, 4, 110, 142, 143, 195, 398, 403, 404, 405, 407, 409, 415, 416, 419], "incur": [2, 118, 119, 131, 132], "transmiss": 2, "overhead": [2, 118, 119, 131, 132, 144, 151], "content": [2, 8, 16, 31, 32, 39, 50, 51, 52, 56, 57, 61, 65, 66, 105, 122, 125, 126, 127, 139, 144, 145, 151, 152, 194, 233, 234, 255, 260, 261, 295, 327, 405, 417, 421], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 97, 98, 99, 122, 126, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 157, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 219, 224, 243, 265, 286, 287, 288, 289, 291, 295, 296, 298, 299, 301, 302, 303, 304, 312, 332, 341, 376, 396, 398, 399, 403, 404, 405, 406, 408, 409, 418, 421], "writer": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 94, 99, 101, 102, 106, 112, 113, 114, 117, 405, 419], "tensordictroundrobinwrit": [2, 101], "goe": [2, 4, 146, 147, 403, 405, 415, 416, 422], "prioritizedsampl": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 101, 314, 319, 341, 403, 419], "access": [2, 3, 7, 8, 11, 27, 38, 45, 51, 54, 55, 59, 64, 83, 85, 122, 126, 144, 145, 151, 152, 192, 213, 219, 394, 397, 403, 407, 415, 416, 417, 419], "tensordictreplaybuff": [2, 51, 56, 65, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 106, 107, 112, 168, 169, 377, 390, 396, 403, 404, 406, 419], "mp": [2, 18, 19, 20, 80, 81, 82, 83, 84, 85, 86, 87, 88, 123, 217], "def": [2, 3, 12, 22, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 138, 144, 145, 151, 152, 161, 163, 165, 166, 175, 178, 194, 209, 211, 219, 231, 243, 248, 249, 252, 253, 257, 262, 294, 295, 303, 310, 312, 313, 318, 325, 327, 330, 332, 334, 335, 361, 400, 403, 404, 414, 415, 416, 417, 419, 421, 422], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 50, 51, 52, 54, 56, 57, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 112, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 133, 134, 142, 143, 144, 145, 151, 152, 153, 154, 163, 166, 168, 170, 175, 176, 177, 178, 185, 186, 188, 197, 200, 206, 208, 211, 217, 220, 226, 231, 232, 242, 243, 246, 247, 250, 254, 256, 257, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 295, 296, 298, 301, 303, 341, 344, 345, 346, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 371, 379, 398, 399, 403, 406, 416, 417, 421, 422], "__name__": [2, 3, 14, 15, 22, 123, 361, 404, 421], "__main__": [2, 3, 14, 15, 22, 123, 361, 421], "21": [2, 86, 87, 107, 144, 146, 147, 151, 402, 404, 405, 410, 414, 415, 416, 418, 420], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 144, 145, 151, 152, 205, 210, 219, 271, 298, 299, 309, 310, 311, 312, 313, 314, 316, 318, 319, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 383, 389, 390, 399, 400, 406, 412, 415, 417], "arg": [2, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 99, 101, 106, 107, 108, 110, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163, 164, 173, 192, 194, 203, 206, 209, 210, 211, 212, 214, 215, 219, 228, 229, 231, 232, 233, 234, 242, 246, 247, 250, 254, 255, 256, 257, 272, 273, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 370, 373, 377, 380, 394, 404, 421], "join": [2, 123, 396, 404, 405, 415], "now": [2, 3, 7, 51, 56, 65, 66, 101, 142, 143, 144, 169, 261, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 418, 419, 422], "20": [2, 64, 70, 87, 106, 107, 112, 122, 126, 130, 142, 143, 144, 145, 151, 152, 205, 219, 245, 248, 249, 252, 253, 271, 290, 371, 403, 404, 405, 406, 415, 416, 419, 422], "_data": [2, 417], "It": [2, 3, 4, 7, 23, 27, 38, 45, 53, 54, 55, 58, 59, 64, 65, 67, 70, 82, 88, 101, 104, 112, 117, 122, 126, 128, 138, 139, 144, 145, 146, 147, 151, 152, 155, 156, 166, 168, 179, 186, 188, 193, 205, 209, 211, 216, 219, 221, 228, 236, 238, 244, 246, 260, 261, 271, 272, 273, 274, 276, 277, 283, 284, 292, 294, 297, 299, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 333, 335, 341, 342, 343, 361, 370, 376, 397, 398, 399, 403, 404, 406, 407, 415, 416, 417, 418, 419, 421, 422], "difficult": [2, 4, 144, 411], "pai": [2, 8, 403, 406], "word": [2, 3, 11, 58, 80, 82, 84, 86, 87, 88, 327, 403, 410, 417, 422], "1m": [2, 80, 86, 383, 403, 405, 406], "doe": [2, 3, 18, 50, 51, 52, 57, 65, 70, 80, 82, 86, 90, 91, 97, 98, 99, 106, 108, 110, 117, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 217, 240, 248, 249, 250, 252, 253, 254, 263, 271, 284, 290, 300, 301, 309, 311, 319, 326, 327, 329, 342, 380, 400, 403, 404, 405, 406, 407, 410, 415, 417, 419, 422], "howev": [2, 3, 5, 7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 169, 200, 205, 209, 211, 219, 309, 311, 312, 326, 329, 331, 332, 398, 403, 404, 406, 409, 417, 419, 422], "capac": [2, 51, 56, 65, 66, 93, 94, 98, 106, 114, 405, 410], "There": [2, 10, 101, 250, 254, 309, 329, 398, 400, 405, 406, 408, 410, 415, 416, 417, 419, 422], "circumv": 2, "account": [2, 93, 94, 114, 125, 127, 152, 165, 169, 258, 259, 398, 404, 406, 419, 422], "save": [2, 3, 8, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 97, 101, 108, 109, 110, 114, 115, 122, 126, 144, 145, 151, 152, 216, 219, 362, 363, 365, 370, 380, 400, 410, 411, 412, 415, 416], "convent": [2, 3, 80, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 155, 156, 399, 403, 406, 415, 416, 417], "overridden": [2, 3, 27, 38, 54, 55, 59, 64, 80, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 343, 345, 346, 406, 415], "dim_extend": [2, 51, 56, 65, 66], "obtain": [2, 7, 58, 80, 122, 126, 144, 145, 151, 152, 168, 192, 205, 215, 231, 232, 271, 274, 377, 403, 405, 407, 408, 409, 415, 416], "counterpart": 2, "desir": [2, 3, 11, 27, 30, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 164, 166, 173, 188, 190, 192, 193, 206, 210, 211, 213, 215, 219, 225, 233, 234, 255, 261, 286, 291, 292, 295, 296, 297, 298, 299, 398, 403, 415, 416, 417, 419], "diversifi": 2, "offer": [2, 3, 7, 118, 119, 122, 126, 131, 132, 136, 137, 144, 145, 151, 152, 209, 361, 398, 403, 404, 407, 409, 410, 415, 417, 419, 422], "accomplish": [2, 221, 407], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 80, 81, 83, 169, 221, 310, 316, 317, 325, 334, 370, 400, 407, 418, 419, 421], "docstr": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 407, 408], "extens": [2, 51, 56, 65, 66, 107, 400, 419], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 208, 211, 219, 243, 248, 252, 262, 271, 292, 309, 319, 327, 329, 397, 400, 404, 410, 414, 419], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 122, 126, 144, 145, 151, 152, 175, 178, 209, 217, 219, 227, 248, 250, 252, 254, 272, 273, 295, 299, 319, 404, 408, 414, 415, 416, 422], "happi": 2, "concaten": [2, 8, 14, 15, 21, 41, 43, 86, 169, 170, 188, 210, 252, 255, 301, 403, 404, 408, 415, 416, 417, 419, 422], "schedul": [2, 4, 7, 58, 376, 405, 417], "transformedenv": [2, 3, 11, 45, 122, 123, 126, 144, 145, 151, 152, 162, 163, 166, 169, 172, 173, 175, 178, 179, 180, 182, 185, 186, 187, 188, 190, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 209, 210, 217, 219, 250, 254, 294, 363, 403, 404, 405, 406, 407, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "stepcount": [2, 45, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 209, 210, 219, 232, 403, 404, 405, 406, 407, 412, 415, 416, 421], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 45, 62, 64, 112, 122, 123, 126, 128, 144, 145, 151, 152, 162, 165, 166, 169, 172, 173, 179, 185, 186, 188, 190, 195, 196, 197, 200, 202, 205, 206, 207, 209, 210, 211, 217, 219, 232, 250, 254, 294, 361, 363, 390, 396, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 418, 419, 421, 422], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 169, 197, 396, 410, 419], "cartpol": [2, 3, 11, 35, 45, 62, 64, 120, 121, 122, 123, 126, 144, 145, 151, 152, 165, 166, 169, 200, 205, 217, 219, 294, 361, 404, 406, 408, 410, 411, 412, 419, 422], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 45, 62, 64, 82, 84, 112, 122, 123, 125, 126, 127, 131, 132, 139, 144, 145, 151, 152, 165, 166, 169, 172, 180, 185, 186, 188, 195, 197, 200, 202, 204, 205, 206, 207, 209, 210, 217, 219, 232, 250, 254, 294, 338, 352, 353, 354, 355, 357, 358, 359, 360, 361, 398, 404, 406, 407, 408, 409, 410, 411, 412, 417, 419, 421, 422], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 45, 118, 119, 122, 126, 131, 132, 138, 144, 145, 146, 147, 151, 152, 162, 163, 166, 169, 175, 178, 186, 194, 197, 220, 231, 243, 257, 275, 277, 286, 291, 295, 296, 310, 312, 314, 316, 330, 332, 334, 335, 390, 398, 403, 404, 405, 406, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 421, 422], "8": [2, 3, 6, 7, 45, 50, 52, 56, 57, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 106, 107, 118, 119, 120, 121, 122, 126, 142, 143, 144, 145, 151, 152, 153, 162, 165, 205, 233, 234, 236, 237, 245, 255, 287, 288, 289, 295, 298, 301, 325, 403, 404, 405, 410, 415, 416, 417, 418, 419, 421], "traj_kei": [2, 99, 106, 107, 419], "truncated_kei": [2, 99, 106, 107, 197, 204], "strict_length": [2, 80, 86, 99, 106, 107, 363], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 45, 51, 54, 55, 56, 59, 61, 62, 64, 66, 67, 93, 94, 98, 99, 106, 107, 114, 122, 126, 144, 145, 151, 152, 174, 192, 197, 200, 209, 211, 215, 219, 249, 253, 265, 275, 292, 294, 295, 297, 298, 299, 309, 311, 312, 313, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 371, 383, 403, 404, 405, 406, 408, 409, 410, 411, 412, 415, 416, 417, 419, 421, 422], "enumer": [2, 14, 15, 16, 21, 27, 35, 38, 45, 54, 55, 56, 59, 62, 64, 66, 107, 122, 126, 144, 145, 151, 152, 219, 336, 399, 403, 404, 405, 406, 412, 415, 419, 421], "break": [2, 5, 14, 15, 16, 21, 27, 38, 45, 54, 55, 56, 59, 64, 66, 80, 83, 84, 86, 87, 88, 89, 99, 106, 107, 112, 122, 126, 144, 145, 151, 152, 166, 169, 197, 217, 219, 250, 254, 281, 363, 404, 410, 412, 419, 421], "step_count": [2, 14, 15, 16, 45, 122, 126, 131, 132, 144, 145, 151, 152, 204, 219, 405, 406, 407, 412], "32": [2, 22, 31, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 149, 150, 155, 156, 233, 234, 235, 236, 237, 239, 240, 245, 255, 260, 261, 266, 267, 270, 274, 283, 341, 361, 402, 403, 404, 406, 408, 409, 416, 417, 418, 419, 420, 421, 422], "33": [2, 27, 31, 38, 45, 54, 55, 59, 64, 101, 122, 126, 144, 145, 151, 152, 219, 233, 234, 255, 404, 406], "34": [2, 233, 234, 255, 404, 406], "35": [2, 233, 234, 255, 404, 418], "36": [2, 403, 404, 416], "37": [2, 168, 403, 404, 406, 416, 418], "38": [2, 7, 402, 403, 404, 415, 420], "39": [2, 84, 131, 132, 404, 416, 418], "40": [2, 64, 131, 132, 403, 404, 405, 415, 416], "41": [2, 404, 416, 418], "11": [2, 10, 23, 64, 70, 93, 94, 98, 107, 114, 123, 162, 208, 219, 231, 257, 403, 404, 405, 419], "12": [2, 10, 64, 87, 93, 94, 107, 114, 131, 132, 144, 149, 150, 151, 219, 404, 405, 415, 419], "13": [2, 5, 12, 64, 106, 107, 148, 216, 219, 403, 404, 406, 418, 419], "14": [2, 6, 12, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 107, 122, 126, 144, 145, 151, 152, 188, 219, 402, 403, 404, 405, 406, 411, 415, 418, 419, 420], "15": [2, 23, 80, 81, 82, 83, 84, 85, 86, 87, 88, 107, 122, 126, 144, 145, 151, 152, 219, 272, 273, 290, 320, 403, 404, 405, 415, 419], "16": [2, 3, 27, 38, 45, 54, 55, 59, 64, 87, 99, 107, 118, 119, 122, 126, 131, 132, 144, 145, 151, 152, 169, 219, 403, 404, 405, 406, 415, 416, 419], "17": [2, 11, 87, 107, 126, 144, 162, 219, 403, 404, 406, 418], "could": [2, 3, 4, 6, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 404, 405, 411, 415, 416, 418, 422], "sai": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 260, 415, 418, 422], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 32, 39, 43, 56, 61, 94, 95, 99, 102, 106, 107, 114, 122, 125, 126, 127, 130, 144, 145, 151, 152, 175, 178, 193, 200, 209, 260, 261, 296, 309, 329, 404, 405, 406, 415, 416, 417], "handl": [2, 3, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 216, 217, 219, 254, 255, 309, 327, 329, 380, 392, 393, 403, 404, 405, 407, 409, 416, 419], "suggest": [2, 341, 403, 416], "serialenv": [2, 3, 122, 126, 144, 145, 152, 206, 219, 232, 294, 396, 421, 422], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 165, 166, 169, 203, 205, 233, 234, 278, 279, 403, 417, 419], "6": [2, 3, 7, 14, 15, 16, 17, 23, 45, 56, 59, 64, 80, 87, 88, 99, 107, 120, 121, 126, 144, 149, 150, 162, 165, 188, 190, 205, 209, 232, 233, 234, 236, 237, 238, 241, 245, 249, 255, 260, 261, 262, 266, 280, 294, 295, 303, 402, 403, 404, 406, 410, 415, 416, 419, 420, 421, 422], "5": [2, 3, 14, 15, 23, 31, 32, 39, 41, 42, 43, 44, 45, 51, 56, 59, 61, 64, 65, 66, 80, 101, 106, 107, 112, 122, 123, 126, 131, 132, 136, 137, 139, 144, 145, 149, 150, 151, 152, 155, 156, 162, 165, 166, 168, 197, 204, 205, 209, 219, 230, 231, 232, 233, 234, 236, 237, 242, 243, 244, 245, 248, 251, 252, 255, 257, 260, 261, 266, 271, 275, 281, 282, 290, 291, 294, 296, 302, 326, 329, 331, 334, 335, 361, 398, 402, 403, 404, 406, 408, 410, 412, 415, 416, 417, 419, 420, 421, 422], "7": [2, 3, 6, 10, 45, 51, 56, 64, 65, 99, 107, 122, 126, 136, 137, 144, 145, 151, 152, 162, 165, 205, 231, 232, 233, 234, 237, 255, 257, 260, 349, 402, 403, 404, 410, 415, 416, 418, 419, 420, 421], "9": [2, 3, 7, 23, 27, 45, 51, 56, 64, 65, 87, 88, 99, 107, 112, 120, 121, 135, 146, 147, 152, 162, 165, 205, 217, 219, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 336, 341, 399, 402, 403, 404, 405, 410, 415, 416, 419, 420], "18": [2, 87, 107, 149, 150, 155, 156, 209, 219, 261, 402, 403, 404, 405, 415, 416, 420], "19": [2, 87, 106, 107, 112, 219, 403, 404, 418], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 83, 144, 151, 210, 212, 261, 309, 329, 399, 400, 403, 404, 416, 419, 421], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 80, 83, 85, 88, 89, 118, 120, 122, 126, 131, 135, 136, 137, 139, 142, 144, 145, 146, 147, 148, 151, 152, 155, 156, 157, 176, 177, 180, 195, 200, 201, 204, 209, 211, 213, 216, 219, 227, 250, 254, 291, 296, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 343, 345, 346, 347, 361, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 400, 403, 404, 405, 406, 409, 411, 415, 416, 417, 422], "randomcroptensordict": [2, 403], "unlik": [2, 25, 105, 126, 136, 137, 155, 156, 230, 294, 319, 329, 363, 398, 404, 408, 410, 421], "stop": [2, 3, 16, 21, 58, 88, 99, 106, 107, 122, 126, 144, 145, 151, 152, 405, 410, 415, 416, 421, 422], "signal": [2, 3, 14, 15, 16, 17, 23, 80, 82, 84, 86, 87, 88, 99, 106, 107, 112, 126, 136, 137, 155, 156, 169, 179, 204, 207, 227, 399, 403, 405, 415, 416, 419, 422], "disk": [2, 3, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 380, 400, 403, 404, 406, 410, 411, 415, 419], "dump": [2, 3, 11, 35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 101, 108, 110, 114, 361, 362, 363, 411, 412, 415], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 101, 108, 109, 110, 114, 115, 121, 122, 126, 144, 145, 151, 152, 153, 161, 217, 219, 394, 400, 403, 405, 419], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 82, 122, 123, 126, 144, 145, 151, 152, 312, 334, 405, 407, 409, 410, 415, 416, 422], "anticip": [2, 175, 178], "compli": [2, 86, 398], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 60, 61, 69, 71, 72, 73, 74, 75, 82, 216, 221, 262, 286, 291, 292, 295, 296, 297, 298, 299, 405, 415, 416, 417, 419], "exact": [2, 3, 23, 144, 252], "statu": [2, 3, 122], "prioriti": [2, 4, 51, 65, 66, 93, 94, 95, 98, 99, 108, 110, 114, 312, 313, 314, 316, 317, 318, 319, 325, 330, 332, 334, 335, 341, 400, 403, 404, 419], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 45, 54, 55, 58, 59, 64, 80, 82, 83, 84, 86, 87, 88, 120, 121, 122, 125, 126, 127, 128, 144, 145, 148, 151, 152, 219, 286, 291, 292, 295, 296, 297, 298, 299, 327, 343, 344, 345, 346, 347, 363, 399, 403, 404, 408, 415, 417, 422], "hood": [2, 21, 80, 122, 126, 144, 145, 151, 152, 417], "naiv": [2, 213, 407], "just": [2, 3, 4, 12, 110, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 165, 172, 227, 261, 371, 400, 403, 404, 405, 406, 407, 408, 410, 415, 416, 417, 419, 421, 422], "public": [2, 85, 109, 192, 215], "serializ": 2, "consum": [2, 105, 107, 294, 404, 405, 410, 416, 419], "much": [2, 8, 14, 15, 17, 51, 65, 86, 98, 99, 144, 151, 326, 329, 405, 407, 411, 415, 416, 417, 419, 422], "duplic": [2, 27, 38, 45, 54, 55, 59, 64, 105, 122, 126, 144, 145, 151, 152, 219, 310, 312, 314, 319, 325, 327, 330, 332, 334, 335, 341], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 45, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 159, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 189, 190, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 226, 232, 235, 236, 237, 238, 239, 240, 243, 246, 247, 250, 254, 260, 266, 267, 270, 271, 272, 273, 275, 276, 286, 287, 288, 289, 290, 291, 294, 295, 296, 303, 304, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 325, 326, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 361, 363, 390, 398, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 419, 421, 422], "plu": [2, 14, 15, 17, 58, 144, 151, 417], "enabl": [2, 7, 8, 82, 93, 94, 105, 114, 166, 250, 254, 272, 273, 294, 361, 363, 376, 405, 407, 415, 416, 417, 419], "three": [2, 25, 26, 30, 34, 41, 42, 43, 44, 49, 54, 89, 312, 398, 400, 405, 407, 408, 415, 416, 417, 419, 422], "flatstoragecheckpoint": 2, "discard": [2, 3, 70, 82, 84, 126, 213, 226, 362, 419, 422], "compress": 2, "At": [2, 246, 256, 404, 405, 406, 410, 414, 417, 418], "correct": [2, 4, 50, 52, 57, 122, 126, 144, 145, 151, 152, 186, 383, 405, 406], "addit": [2, 3, 4, 27, 38, 45, 54, 55, 59, 64, 82, 122, 123, 126, 144, 145, 151, 152, 155, 173, 192, 206, 210, 211, 213, 215, 219, 228, 229, 248, 290, 294, 298, 308, 327, 343, 361, 399, 403, 404, 407, 415, 416, 419], "nestedstoragecheckpoint": 2, "represent": [2, 27, 38, 45, 54, 55, 59, 60, 61, 64, 122, 126, 144, 145, 151, 152, 192, 213, 215, 219, 309, 329, 403, 417, 418, 422], "appar": [2, 3, 373], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 90, 91, 97, 122, 125, 126, 127, 144, 145, 151, 152, 162, 172, 177, 224, 228, 229, 240, 243, 247, 260, 267, 272, 273, 275, 286, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 306, 309, 314, 316, 317, 318, 329, 334, 335, 341, 398, 404, 405, 406, 407, 408, 409, 415, 416, 417, 422], "assumpt": [2, 3, 69, 417, 419], "accur": [2, 7, 82, 88, 404, 417, 419], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 45, 46, 53, 62, 64, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 99, 106, 107, 120, 121, 122, 125, 126, 127, 136, 137, 144, 145, 146, 147, 151, 152, 153, 155, 156, 162, 179, 180, 187, 194, 197, 204, 211, 219, 227, 250, 254, 282, 294, 349, 403, 405, 406, 407, 408, 410, 411, 414, 415, 418, 419, 421, 422], "marl": [2, 135, 157, 169, 207, 260, 261, 262, 407, 415, 416], "extra": [2, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 169, 217, 219, 226, 370, 398, 405, 406, 419], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 144, 163, 221, 417], "concret": [2, 403, 405], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 45, 62, 64, 118, 119, 122, 126, 131, 132, 138, 144, 145, 151, 152, 165, 188, 195, 200, 205, 207, 211, 219, 410, 412, 417, 421, 422], "manual_se": [2, 3, 25, 35, 41, 42, 51, 56, 62, 64, 65, 66, 83, 87, 88, 106, 107, 118, 119, 122, 126, 144, 145, 151, 152, 163, 165, 177, 188, 197, 200, 205, 207, 219, 246, 247, 258, 259, 268, 271, 272, 273, 286, 292, 302, 309, 310, 312, 313, 317, 325, 332, 410, 412, 415, 416, 417, 421, 422], "200": [2, 14, 15, 16, 21, 27, 35, 38, 45, 54, 55, 59, 62, 64, 80, 122, 125, 126, 127, 144, 145, 151, 152, 155, 156, 197, 219, 236, 237, 244, 276, 277, 361, 363, 403, 406, 410, 412, 419], "22": [2, 86, 106, 107, 216, 402, 403, 404, 412, 415, 420], "rb_test": 2, "_storag": [2, 418, 419], "max_siz": [2, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 108, 112, 114, 405, 410], "102": [2, 403], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 50, 52, 57, 139, 209, 240, 258, 259, 260, 308, 312, 361, 403, 405, 415, 416], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 217, 219, 260, 261, 312, 332, 394, 400, 403, 404, 422], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 217, 219, 312, 332, 400, 403], "drawback": 2, "struggl": 2, "big": [2, 405, 410, 419, 422], "sequenti": [2, 9, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 168, 186, 219, 287, 288, 289, 295, 300, 301, 306, 309, 310, 312, 318, 325, 329, 330, 331, 332, 334, 398, 405, 406, 408, 416, 417, 418, 421, 422], "known": [2, 3, 5, 7, 8, 64, 126, 350, 351, 403, 404, 407], "seamless": [2, 255], "integr": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 239, 250, 254, 257, 298, 398, 407, 408, 410, 415, 416, 417, 418], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 230, 403, 404, 409], "essenti": [2, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 404, 407, 415, 417, 419], "understand": [2, 3, 8, 403, 404, 407, 408, 415, 416], "purpos": [2, 3, 7, 11, 122, 126, 144, 145, 151, 152, 169, 248, 309, 311, 323, 326, 329, 331, 390, 403, 405, 406, 409, 411, 415, 416, 418, 422], "guid": [2, 11, 146, 147, 149, 150, 205, 397, 403, 416], "explan": [2, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "effect": [2, 3, 27, 31, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 86, 99, 101, 104, 106, 107, 122, 126, 144, 145, 151, 152, 165, 169, 211, 219, 380, 398, 403, 408, 415, 419, 422], "realm": [2, 408], "As": [2, 3, 4, 45, 56, 65, 66, 69, 80, 101, 122, 126, 135, 144, 145, 146, 147, 151, 152, 197, 299, 343, 398, 403, 404, 405, 406, 407, 409, 410, 415, 416, 417, 418, 419, 421, 422], "practition": 2, "often": [2, 3, 8, 262, 324, 327, 380, 403, 404, 407, 409, 417, 419, 422], "encount": [2, 4, 86, 294, 397, 404, 408, 417], "situat": [2, 136, 137], "sometim": [2, 3, 69, 406, 422], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 59, 60, 61, 69, 71, 72, 73, 74, 75, 80, 83, 84, 87, 88, 118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 136, 137, 140, 141, 142, 143, 148, 153, 154, 155, 156, 248, 249, 250, 252, 253, 254, 257, 287, 288, 289, 327, 330, 400, 404], "immedi": [2, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 219, 342, 415, 416], "199": 2, "info": [2, 3, 14, 15, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 104, 106, 107, 120, 121, 122, 125, 126, 127, 128, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 213, 216, 218, 370, 407, 412, 415, 416, 419, 421], "glanc": [2, 407], "seem": [2, 403, 406, 407], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 54, 58, 60, 61, 122, 126, 135, 144, 145, 146, 147, 151, 152, 169, 193, 248, 250, 252, 254, 283, 287, 288, 289, 304, 398, 404, 406, 407, 415], "less": [2, 139, 284, 392, 393, 399, 405, 406, 419, 421], "omit": [2, 375, 405, 409, 417, 419], "proper": [2, 3, 4, 6, 7, 343, 344, 345, 346, 404, 405, 415, 416, 419], "imposs": [2, 3, 112, 221, 309, 311, 326, 329, 331], "determin": [2, 51, 65, 82, 98, 99, 122, 126, 144, 145, 151, 152, 155, 156, 192, 215, 260, 272, 273, 404, 408, 415, 416], "complic": [2, 54, 64, 417, 419, 422], "matter": [2, 33, 410], "inconsist": [2, 422], "miss": [2, 3, 4, 6, 7, 12, 27, 31, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 226, 300, 301, 309, 312, 332, 397, 403, 406], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 410], "elimin": [2, 3, 407], "upon": [2, 3, 8, 415, 417], "canon": 2, "definit": [2, 108, 260], "markov": [2, 3, 407, 422], "mdp": [2, 407, 417], "context": [2, 3, 5, 8, 27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 141, 144, 145, 151, 152, 206, 212, 219, 261, 263, 290, 339, 340, 343, 344, 345, 346, 348, 356, 363, 376, 398, 399, 403, 404, 405, 415, 416, 417, 418, 419], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 70, 71, 72, 73, 74, 75, 205, 217, 291, 292, 294, 296, 297, 308, 403, 415, 417, 419], "complet": [2, 7, 9, 105, 122, 125, 126, 127, 144, 145, 151, 152, 169, 204, 397, 399, 403, 405, 407, 414], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 45, 46, 58, 62, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 120, 121, 122, 125, 126, 127, 131, 132, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 165, 166, 179, 194, 219, 227, 231, 250, 254, 257, 294, 300, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 45, 46, 50, 57, 58, 62, 64, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 112, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 156, 162, 163, 166, 167, 172, 173, 175, 176, 178, 179, 180, 186, 190, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 210, 211, 212, 214, 215, 217, 219, 224, 226, 231, 250, 257, 290, 294, 304, 309, 310, 312, 313, 314, 316, 317, 318, 321, 325, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 373, 374, 376, 378, 394, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "imit": [2, 3, 323], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 86, 122, 123, 126, 129, 132, 144, 145, 151, 152, 219, 232, 233, 234, 255, 261, 398, 399, 400, 403, 404, 405, 406, 407, 415, 416, 417, 419], "stateless": [2, 3, 122, 126, 144, 145, 151, 152, 166, 210, 327, 361, 403, 407, 417, 422], "simul": [2, 3, 5, 7, 8, 69, 118, 119, 128, 131, 132, 148, 155, 156, 160, 231, 257, 398, 403, 405, 407, 411, 415, 416], "furthermor": [2, 415, 416], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 122, 126, 144, 145, 151, 152, 161, 183, 204, 211, 219, 246, 249, 253, 326, 403, 404, 405, 412, 415, 416, 422], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 77, 104, 110, 117, 122, 124, 126, 138, 144, 145, 151, 152, 163, 166, 175, 176, 177, 178, 180, 186, 194, 195, 201, 204, 206, 209, 210, 219, 224, 227, 228, 229, 231, 257, 286, 295, 301, 302, 306, 309, 329, 396, 403, 405, 406, 408, 415, 416, 417, 422], "accommod": [2, 3, 407, 408], "uniform": [2, 51, 65, 98, 99, 415], "unambigu": 2, "distinguish": [2, 136, 137, 155, 156], "happen": [2, 3, 12, 122, 126, 144, 145, 151, 152, 229, 404, 409, 410, 411, 418, 422], "everyth": [2, 404, 405, 406, 411, 412], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 86, 216, 217, 403, 410, 416], "rule": [2, 64, 144, 175, 178, 299, 398, 405], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 45, 50, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 209, 211, 219, 226, 231, 232, 242, 243, 250, 254, 257, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 303, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 384, 397, 398, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "taken": [2, 3, 25, 26, 30, 34, 41, 42, 43, 44, 49, 122, 126, 144, 145, 151, 152, 162, 196, 247, 258, 259, 399, 403, 405, 406, 408, 415, 416, 417], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 50, 52, 53, 54, 57, 58, 62, 64, 65, 66, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 98, 114, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 190, 194, 195, 197, 201, 204, 206, 217, 226, 231, 232, 242, 243, 250, 254, 257, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 301, 303, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 398, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "brought": [2, 405, 406, 408], "step_mdp": [2, 3, 122, 126, 144, 145, 151, 152, 250, 254, 396, 406, 407, 417, 421, 422], "count": [2, 3, 45, 122, 123, 204, 209, 272, 273, 376, 380, 383, 403, 404, 405, 406, 419, 422], "trigger": [2, 7, 54, 64], "partial": [2, 3, 122, 126, 144, 145, 151, 152, 168, 169, 205, 206, 207, 295, 380, 406], "turn": [2, 18, 19, 20, 21, 50, 52, 55, 57, 59, 152, 184, 212, 216, 291, 361, 376, 399, 403, 404, 406, 408, 417, 418], "retain": 2, "regard": [2, 82, 88, 243, 292, 309, 319, 329, 403, 405, 417], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 271, 363, 399, 411, 419, 422], "eas": [2, 3, 415, 416], "flat": [2, 112], "manner": [2, 126, 192, 213, 398, 403, 404, 405, 410, 414, 417, 419], "ted2flat": [2, 35, 396], "flat2t": [2, 396], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 166, 294], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 120, 121, 122, 126, 144, 145, 151, 152, 182, 183, 203, 204, 207, 209, 211, 212, 219, 265, 312, 332, 399, 405, 415, 416, 417, 419], "both": [2, 3, 7, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 86, 122, 123, 125, 126, 136, 137, 144, 145, 146, 147, 151, 152, 153, 162, 169, 195, 209, 211, 219, 227, 233, 234, 250, 253, 254, 255, 260, 261, 287, 288, 289, 292, 297, 309, 311, 312, 313, 317, 318, 325, 326, 327, 329, 330, 331, 332, 334, 335, 376, 398, 403, 405, 407, 409, 415, 416, 417, 418, 419, 422], "mark": [2, 3, 16, 88, 122, 126, 144, 145, 151, 152, 250, 254, 343, 345, 346, 410, 419], "identifi": [2, 53], "abov": [2, 3, 7, 27, 38, 45, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 219, 251, 281, 282, 308, 399, 400, 403, 405, 407, 408, 415, 416, 417, 422], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 80, 82, 83, 84, 85, 86, 87, 88, 99, 106, 107, 120, 121, 122, 125, 126, 127, 128, 132, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 166, 167, 169, 172, 173, 174, 175, 176, 178, 180, 186, 188, 192, 194, 195, 200, 201, 204, 207, 210, 211, 213, 215, 216, 219, 221, 227, 228, 229, 233, 234, 235, 236, 237, 240, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 260, 261, 265, 269, 271, 272, 273, 275, 284, 286, 287, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 361, 363, 371, 398, 399, 403, 404, 405, 406, 407, 408, 411, 414, 415, 416, 417, 418, 421, 422], "typic": [2, 3, 4, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 179, 205, 219, 269, 271, 295, 310, 312, 327, 329, 332, 398, 399, 400, 405, 407, 409, 410, 415, 416, 417], "adjust": [2, 11, 403, 415, 416, 417], "grumodul": [2, 168, 306], "lstmmodul": [2, 250, 406], "skip": [2, 3, 27, 38, 45, 54, 55, 59, 64, 80, 122, 126, 144, 145, 151, 152, 183, 209, 211, 219, 221, 295, 299, 312, 327, 332, 343, 344, 345, 346, 362, 363, 373, 376, 403, 404, 417], "accumul": [2, 8, 219], "upcom": [2, 327, 352, 353, 354, 355, 357, 358, 359, 360, 403], "popular": [2, 3, 398, 406, 409, 416], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 219, 396, 404], "shift": [2, 35, 37, 45, 46, 62, 90, 91, 97, 305, 343, 344, 345, 346, 405], "approxim": [2, 416, 422], "would": [2, 3, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 219, 248, 250, 252, 254, 255, 260, 400, 404, 405, 406, 407, 409, 410, 417, 419, 421, 422], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 169, 240, 270, 309, 315, 328, 329, 371, 394, 405, 406, 416, 419], "2x": 2, "small": [2, 213, 230, 403, 405, 415, 416, 422], "clearer": [2, 408], "lazi": [2, 60, 61, 77, 78, 122, 126, 144, 145, 151, 152, 155, 156, 192, 213, 233, 260, 263, 300, 301, 403, 404, 408, 410, 414, 419, 422], "certainli": 2, "benefici": 2, "welcom": [2, 407], "wrapper": [2, 3, 12, 17, 50, 52, 57, 58, 65, 66, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 216, 220, 229, 232, 247, 265, 273, 284, 290, 294, 299, 304, 343, 368, 369, 370, 394, 396, 405, 406, 407, 415, 416, 418, 421, 422], "around": [2, 5, 7, 17, 65, 66, 138, 220, 271, 294, 299, 343, 403, 404, 416, 422], "selecttransform": [2, 122, 126, 144, 145, 151, 152], "excludetransform": [2, 87, 201, 419], "promptli": 2, "virtual": [2, 3, 125], "instal": [2, 3, 5, 10, 18, 19, 20, 55, 64, 82, 85, 122, 126, 144, 145, 146, 147, 149, 150, 151, 152, 365, 380, 397, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 422], "respons": [2, 3, 8, 99, 106, 122, 126, 144, 145, 151, 152, 380, 409, 410, 422], "d4rl": [2, 82, 88], "repositori": [2, 7, 83, 84, 85, 88, 156, 415, 416], "wheel": [2, 405], "publish": 2, "openml": [2, 85, 141], "scikit": [2, 85, 141], "panda": [2, 85], "raw": [2, 3, 4, 58, 251, 281, 282, 404, 410, 417], "go": [2, 3, 7, 47, 135, 144, 193, 197, 290, 349, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "natur": [2, 3, 403, 406, 408, 409, 410, 419], "modifi": [2, 3, 7, 8, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 70, 122, 126, 144, 145, 151, 152, 166, 173, 182, 186, 192, 206, 210, 211, 213, 215, 219, 262, 272, 273, 290, 298, 383, 399, 403, 404, 405, 407, 415, 416, 417], "fly": [2, 217, 326, 399, 405, 417, 419, 422], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 122, 172, 411, 422], "pre": [2, 7, 22, 27, 38, 45, 54, 55, 59, 64, 70, 86, 94, 122, 126, 144, 145, 151, 152, 192, 213, 215, 219, 422], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 210, 211, 213, 214, 216, 217, 219, 248, 252, 262, 281, 291, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335, 343, 361, 375, 400, 403, 404, 405, 410, 415, 417, 421, 422], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 83, 99, 106, 112, 130, 131, 132, 144, 146, 147, 172, 200, 233, 234, 244, 246, 260, 261, 294, 365, 380, 392, 393, 403, 404, 405, 406, 408, 409, 412, 415, 416, 419, 421], "pipelin": [2, 3, 7, 398, 405], "replac": [2, 3, 6, 7, 31, 32, 39, 45, 61, 80, 86, 99, 106, 107, 165, 177, 179, 185, 226, 246, 398, 415, 419], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 86, 101, 122, 126, 144, 145, 151, 152, 165, 197, 211, 219, 228, 229, 247, 272, 273, 294, 378, 398, 400, 404, 405, 406, 408, 411, 417, 419, 422], "produc": [2, 162, 165, 166, 233, 234, 255, 261, 268, 287, 289, 290, 363, 405, 406, 407, 408, 410, 419, 422], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 90, 105, 122, 126, 144, 145, 146, 147, 151, 152, 209, 211, 219, 309, 310, 312, 325, 327, 329, 330, 331, 332, 334, 335, 405], "download": [2, 7, 10, 80, 82, 83, 84, 86, 87, 88, 130, 192, 215, 363, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 145, 404, 415, 416, 417], "robosetexperiencereplai": [2, 106, 107], "fk1": [2, 87], "v4": [2, 87, 126, 144, 162, 196, 352, 353, 354, 355, 357, 358, 359, 360, 403, 405, 418], "expert": [2, 87], "fk1_microopenrandom_v2d": [2, 87], "func": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88, 218], "obs_norm": 2, "norm": [2, 4, 8, 118, 119, 230, 380, 403, 404, 405, 415, 416, 417], "num_work": [2, 50, 52, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 139, 144, 151, 403, 404], "os": [2, 52, 70, 89, 404], "cpu_count": [2, 52, 70, 89], "num_chunk": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88], "1000": [2, 4, 56, 64, 93, 98, 106, 107, 122, 126, 144, 145, 151, 152, 169, 217, 228, 246, 271, 272, 273, 295, 299, 324, 403, 404, 405, 406, 408, 410, 412, 418, 419], "mp_start_method": [2, 80, 81, 82, 83, 84, 85, 86, 87, 88, 144, 151, 209, 404, 421], "fork": [2, 5, 80, 81, 82, 83, 84, 85, 86, 87, 88, 403, 404, 405, 406, 415, 416, 418, 421], "recreat": [2, 417], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 56, 65, 66, 99, 101, 106, 122, 126, 144, 145, 151, 152, 166, 186, 410, 418], "grain": [2, 3, 56, 65, 66, 99, 101, 106, 122, 126, 144, 145, 151, 152, 166], "nomenclatur": 2, "compact": [2, 62, 90, 91, 97], "propos": [2, 169, 179, 256, 324, 333, 398, 406, 419], "replaybufferensembl": [2, 80, 104, 110, 117], "primit": [2, 3, 4, 86, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 99, 101, 112, 122, 126, 136, 137, 144, 145, 151, 152, 219, 403, 416], "dummi": [2, 3, 152, 361, 403, 410, 422], "semant": [2, 60, 61, 125, 127], "ident": [2, 3, 14, 15, 16, 45, 50, 52, 56, 57, 64, 65, 66, 93, 101, 106, 122, 125, 126, 127, 139, 144, 145, 151, 152, 179, 230, 260, 261, 310, 312, 325, 330, 332, 334, 335, 343, 344, 345, 346, 392, 393, 404, 407, 415, 416], "another_kei": [2, 101], "renam": [2, 3, 50, 52, 57, 101, 195, 197, 226, 403], "resiz": [2, 3, 88, 101, 169, 404, 406, 407, 419, 422], "imag": [2, 3, 4, 7, 11, 86, 171, 174, 192, 208, 215, 255, 361, 363, 403, 404, 407, 411, 416, 418, 422], "comops": 2, "totensorimag": [2, 3, 88, 101, 169, 196, 404, 406, 419, 421, 422], "renametransform": [2, 3, 101, 122, 126, 144, 145, 151, 152], "rb0": [2, 101], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 138, 144, 145, 151, 152, 159, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 182, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 210, 211, 212, 213, 215, 217, 231, 232, 242, 250, 254, 257, 274, 283, 284, 286, 287, 288, 289, 290, 291, 294, 295, 296, 298, 299, 301, 302, 303, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 323, 325, 326, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 362, 363, 390, 398, 403, 404, 405, 406, 408, 409, 412, 414, 415, 416, 417, 418, 419, 421, 422], "pixel": [2, 3, 7, 31, 88, 101, 120, 121, 125, 127, 128, 148, 169, 171, 174, 179, 182, 184, 188, 190, 192, 196, 208, 213, 215, 236, 266, 267, 361, 363, 403, 404, 406, 411, 415, 418, 419, 421, 422], "rb1": [2, 101], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 122, 126, 138, 144, 145, 151, 152, 159, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 182, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 208, 209, 210, 212, 213, 215, 217, 231, 232, 242, 243, 250, 254, 257, 274, 275, 283, 284, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 306, 309, 310, 311, 312, 317, 318, 323, 325, 326, 329, 330, 331, 332, 334, 341, 343, 344, 345, 346, 361, 363, 376, 390, 398, 403, 404, 405, 406, 408, 412, 414, 415, 416, 417, 418, 419, 421, 422], "pixels33": [2, 101], "data0": [2, 101], "244": [2, 101, 192, 215], "data1": [2, 101], "_": [2, 8, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 123, 130, 155, 156, 170, 175, 177, 178, 186, 188, 195, 208, 217, 219, 271, 286, 298, 303, 308, 309, 310, 312, 313, 317, 318, 325, 329, 330, 332, 334, 335, 343, 344, 345, 346, 365, 403, 404, 405, 406, 412, 415, 416, 417, 419, 421], "rang": [2, 3, 4, 8, 12, 51, 56, 58, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 101, 112, 122, 123, 126, 136, 137, 144, 145, 151, 152, 197, 208, 217, 219, 249, 253, 271, 326, 334, 335, 399, 400, 403, 405, 406, 409, 410, 412, 415, 416, 417, 419, 421], "parent": [2, 3, 21, 31, 32, 37, 39, 61, 69, 81, 101, 110, 117, 122, 126, 144, 145, 151, 152, 162, 166, 169, 170, 173, 176, 179, 182, 183, 188, 192, 200, 204, 205, 206, 207, 209, 210, 212, 213, 219, 250, 254, 287, 306, 327, 329, 347, 361, 363, 403, 410, 417, 421, 422], "basic": [2, 138, 398, 405, 409, 410, 412, 415, 422], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 165, 209, 210, 211, 217, 219, 241, 251, 259, 263, 268, 280, 281, 282, 294, 309, 312, 327, 329, 331, 332, 408, 410, 417, 419], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 109, 115, 122, 126, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 226, 227, 230, 232, 233, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 249, 250, 252, 253, 254, 255, 260, 261, 262, 263, 264, 272, 273, 275, 276, 277, 278, 279, 281, 284, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 374, 378, 383, 390, 398, 399, 400, 403, 404, 405, 406, 407, 415, 416, 417, 421, 422], "send": [2, 3, 8, 370, 421], "receiv": [2, 3, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 144, 145, 151, 152, 210, 211, 219, 255, 349, 399, 403, 405, 409, 414, 417], "spawn": [2, 3, 4, 18, 22, 130, 139, 144, 151, 209, 404, 415, 416], "check_env_spec": [2, 3, 126, 144, 162, 194, 361, 396, 405, 415, 416, 417], "saniti": [2, 3, 7, 221, 405], "automati": 2, "make_composite_from_td": [2, 69, 396, 417], "fall": [2, 4, 82], "categori": [2, 31, 83, 398, 400], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 45, 54, 55, 59, 64, 71, 122, 126, 144, 145, 151, 152, 172, 187, 217, 219, 220, 246, 247, 272, 273, 276, 277, 286, 291, 292, 295, 296, 297, 298, 299, 302, 309, 310, 312, 313, 325, 329, 330, 332, 334, 335, 396, 398, 403, 404, 405, 415, 417, 421, 422], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 163, 166, 175, 178, 194, 206, 224, 231, 257, 286, 298, 301, 303, 331, 396, 417, 419], "boundeddiscret": [2, 28, 31, 405], "boundedcontinu": [2, 22, 28, 31, 122, 126, 144, 145, 151, 152, 405, 415, 416, 417, 422], "unboundeddiscret": [2, 71, 145, 396, 417, 422], "unboundedcontinu": [2, 71, 122, 126, 144, 145, 151, 152, 194, 224, 301, 306, 396, 405, 406, 415, 416, 417, 422], "implicitli": 2, "onehot": [2, 25, 26, 30, 34, 43, 44, 49, 118, 119, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 243, 275, 291, 296, 314, 316, 317, 318, 341, 398, 408], "multionehot": [2, 41, 42, 44, 314, 317, 318, 341, 396], "multicategor": [2, 42, 43, 44, 396], "binari": [2, 3, 7, 26, 27, 153, 163, 167, 243, 275, 291, 292, 296, 297, 314, 317, 318, 341, 396], "concept": [2, 122, 126, 144, 145, 151, 152, 271, 404, 419], "arbitrari": [2, 3, 25, 56, 122, 126, 144, 145, 151, 152, 165, 403, 404, 417, 419], "combin": [2, 4, 36, 55, 210, 334, 404, 411, 419], "relat": [2, 3, 4, 10, 51, 144, 182, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 404, 412, 417], "nevertheless": [2, 3, 405, 407, 419], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 93, 106, 107, 166, 298, 301, 310, 312, 325, 327, 330, 332, 334, 335, 415, 416, 417, 419, 421], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 101, 106, 107, 118, 119, 122, 125, 126, 127, 128, 131, 132, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 169, 170, 177, 188, 205, 206, 207, 209, 211, 217, 219, 230, 248, 251, 252, 260, 261, 281, 282, 291, 296, 302, 310, 312, 321, 327, 328, 332, 343, 345, 346, 376, 377, 400, 403, 404, 405, 406, 417, 422], "similarli": [2, 21, 27, 38, 45, 54, 55, 59, 64, 105, 110, 122, 126, 144, 145, 151, 152, 219, 260, 300, 301, 317, 325, 422], "possess": [2, 69, 82], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 99, 163, 166, 169, 170, 208, 212, 224, 403, 406, 415, 416, 417], "move": [2, 4, 27, 38, 45, 54, 55, 59, 64, 69, 88, 122, 126, 127, 144, 145, 151, 152, 162, 173, 176, 192, 206, 210, 211, 213, 215, 217, 219, 226, 255, 298, 378, 403, 404, 406, 407, 421, 422], "unbind": [2, 50, 51, 52, 56, 57, 65, 66, 250, 254], "said": [2, 405], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 54, 65, 69, 98, 99, 169, 182, 193, 212, 320, 343, 345, 346, 399, 405, 415, 416, 417], "seen": [2, 18, 19, 20, 21, 31, 32, 39, 61, 122, 126, 144, 145, 151, 152, 176, 399, 403, 404, 406, 409, 415, 416, 419], "predict": [2, 3, 45, 58, 242, 244, 256, 257, 290, 304, 309, 311, 316, 319, 321, 322, 326, 329, 331, 342, 403, 404, 409], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 54, 55, 59, 64, 73, 75, 122, 126, 144, 145, 151, 152, 209, 211, 219, 247, 309, 311, 312, 314, 317, 318, 319, 325, 326, 329, 330, 331, 332, 341, 343, 344, 345, 346, 351, 422], "utmost": 2, "commonli": [2, 99, 106, 107, 422], "emploi": [2, 264], "languag": [2, 24, 58], "scarc": 2, "address": [2, 419], "subdomain": 2, "facilit": [2, 3, 7, 191, 192, 206, 213, 215, 287, 288, 289, 398, 403, 406, 408, 417], "extern": [2, 3, 175, 178, 415, 422], "token": [2, 52, 53, 58, 67, 70, 89], "dm": [3, 403, 422], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 59, 60, 61, 65, 66, 69, 70, 71, 72, 73, 74, 75, 86, 103, 109, 112, 113, 115, 116, 118, 119, 122, 126, 130, 131, 132, 138, 139, 140, 144, 145, 151, 152, 155, 176, 197, 206, 213, 214, 260, 262, 287, 293, 309, 310, 312, 313, 314, 316, 317, 318, 320, 325, 329, 330, 331, 332, 334, 335, 344, 345, 370, 380, 398, 399, 400, 403, 404, 406, 407, 408, 409, 411, 415, 416, 417, 419, 422], "abl": [3, 135, 146, 147, 250, 254, 403, 405, 406, 408, 414, 415, 416, 417, 419, 421], "experi": [3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 98, 99, 221, 365, 366, 367, 368, 369, 370, 397, 404, 405, 410, 411, 415, 416, 419], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 125, 127, 262, 327], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 122, 123, 126, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 169, 172, 179, 185, 186, 188, 190, 195, 197, 200, 206, 210, 216, 217, 219, 361, 390, 403, 404, 405, 406, 414, 416, 418, 419, 421, 422], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 173, 177, 179, 186, 192, 206, 210, 211, 213, 215, 219, 222, 231, 232, 233, 234, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 259, 260, 261, 262, 265, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 294, 295, 296, 298, 299, 300, 301, 303, 306, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 390, 398, 399, 403, 404, 405, 406, 408, 409, 412, 414, 415, 416, 417, 418, 421], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 54, 55, 59, 64, 71, 101, 122, 126, 144, 145, 151, 152, 164, 165, 210, 216, 221, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 298, 299, 300, 302, 305, 327, 329, 404, 406, 410, 417, 419], "organis": [3, 87, 122, 126, 144, 145, 151, 152, 211, 404], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 86, 122, 125, 126, 127, 144, 145, 151, 152, 162, 179, 192, 213, 217, 219, 250, 254, 299, 309, 310, 312, 313, 314, 316, 318, 319, 320, 323, 325, 327, 329, 330, 331, 332, 334, 335, 341, 403, 406, 417], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 138, 144, 145, 151, 152, 179, 219], "actual": [3, 4, 7, 50, 52, 57, 80, 82, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 216, 383, 399, 403, 405, 415, 416, 417], "retriev": [3, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 104, 122, 125, 126, 127, 144, 145, 151, 152, 170, 176, 179, 188, 226, 231, 233, 257, 294, 295, 299, 302, 306, 309, 310, 311, 312, 314, 326, 329, 330, 332, 334, 335, 341, 343, 344, 345, 346, 394, 400, 404, 405, 408, 417, 422], "care": [3, 8, 27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 363, 403, 405, 415, 416, 417, 419], "parametr": [3, 264, 299, 310, 312, 317, 325, 332, 403, 405], "hardwar": 3, "observation_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 184, 185, 186, 188, 190, 192, 194, 196, 200, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217, 219, 231, 250, 254, 257, 384, 390, 403, 405, 409, 414, 415, 416, 417, 422], "pair": [3, 45, 50, 52, 54, 57, 64, 82, 120, 121, 122, 126, 144, 145, 151, 152, 197, 206, 209, 250, 287, 295, 299, 327, 343, 344, 345, 346, 347, 398, 399, 403, 404, 405, 408, 409, 414, 417, 422], "state_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 231, 257, 417, 422], "reward_spec": [3, 122, 126, 138, 144, 145, 151, 152, 163, 166, 167, 172, 173, 175, 176, 178, 194, 198, 199, 200, 202, 210, 212, 219, 231, 257, 405, 415, 416, 417, 422], "done_spec": [3, 122, 126, 144, 145, 151, 152, 175, 176, 178, 179, 194, 210, 219, 227, 415, 416, 417, 422], "flag": [3, 8, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 136, 137, 144, 145, 151, 152, 155, 156, 185, 272, 273, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 398, 415, 416, 417, 418], "input_spec": [3, 122, 126, 138, 144, 145, 151, 152, 162, 166, 173, 175, 176, 177, 188, 190, 194, 195, 200, 201, 204, 205, 206, 210, 211, 212, 214, 219, 405, 417], "full_action_spec": [3, 122, 126, 142, 143, 144, 145, 151, 152, 153, 154, 162, 231, 257, 405, 415, 416], "full_state_spec": [3, 122, 126, 144, 145, 151, 152, 162, 231, 257, 405], "lock": [3, 31, 32, 39, 50, 52, 57, 61, 122, 126, 144, 145, 151, 152, 166, 206, 217, 417], "output_spec": [3, 122, 126, 144, 145, 151, 152, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 210, 211, 219, 417], "full_observation_spec": [3, 122, 126, 144, 145, 151, 152, 231, 257], "full_reward_spec": [3, 122, 126, 144, 145, 151, 152, 166, 176, 194, 415, 416], "full_done_spec": [3, 122, 126, 144, 145, 151, 152, 166, 176, 194, 227, 415, 416], "carri": [3, 21, 43, 70, 122, 126, 144, 145, 151, 152, 206, 327, 404, 406, 415, 416, 417, 419], "nontensorspec": [3, 396], "importantli": [3, 295, 299], "action_s": 3, "help": [3, 4, 27, 38, 45, 54, 55, 59, 64, 69, 122, 126, 144, 145, 151, 152, 179, 219, 309, 311, 326, 329, 331, 397, 399, 403, 404, 405, 406, 415, 416], "With": [3, 131, 132, 135, 205, 400, 404, 414, 415, 416, 419, 422], "necessarili": [3, 122, 126, 144, 145, 151, 152, 422], "present": [3, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 105, 122, 125, 126, 144, 145, 151, 152, 180, 197, 201, 206, 209, 211, 219, 226, 227, 235, 236, 237, 238, 239, 245, 250, 252, 254, 264, 270, 272, 273, 294, 298, 299, 300, 301, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 394, 400, 403, 412, 414, 415, 416, 419, 421], "0s": [3, 80, 86, 206, 406], "step_and_maybe_reset": [3, 122, 126, 144, 145, 151, 152, 407], "done_kei": [3, 23, 35, 37, 46, 62, 90, 91, 97, 122, 126, 144, 145, 151, 152, 165, 169, 179, 197, 204, 219, 226, 415, 416], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 313, 314, 316, 332, 405, 408, 415, 416, 419], "_reset": [3, 122, 126, 138, 144, 145, 151, 152, 163, 165, 166, 169, 175, 178, 185, 194, 227, 231, 257, 415, 421], "data_": [3, 122, 126, 144, 145, 151, 152], "append": [3, 8, 11, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 144, 145, 151, 152, 165, 172, 173, 197, 206, 211, 216, 249, 250, 253, 254, 291, 296, 403, 404, 405, 406, 415, 416, 417, 418, 419, 421], "seed": [3, 14, 15, 16, 17, 21, 56, 65, 66, 87, 101, 122, 126, 138, 144, 145, 146, 147, 151, 152, 155, 156, 163, 166, 175, 178, 194, 211, 221, 361, 380, 415], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 225, 235, 244, 247, 266, 277, 286, 295, 298, 299, 302, 310, 327, 376, 398, 403, 404, 405, 406, 408, 409, 412, 415, 417, 421, 422], "preced": [3, 45, 406], "risk": [3, 193], "overlap": [3, 65, 112], "reproduc": [3, 55, 59, 169, 221, 403, 405, 416], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 45, 50, 52, 53, 58, 67, 70, 71, 89, 93, 94, 95, 98, 99, 114, 122, 126, 144, 145, 151, 152, 177, 198, 204, 205, 207, 230, 280, 281, 282, 302, 310, 312, 317, 318, 325, 327, 328, 332, 363, 377, 398, 403, 404, 405, 406, 408, 415, 416, 419], "max_step": [3, 11, 112, 122, 126, 136, 137, 138, 144, 145, 151, 152, 155, 156, 204, 209, 219, 361, 407, 408, 409, 411, 412, 415, 416, 421, 422], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 58, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 168, 186, 229, 232, 243, 247, 250, 254, 257, 273, 274, 275, 283, 284, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 304, 306, 310, 312, 313, 317, 318, 320, 321, 322, 323, 325, 327, 330, 332, 334, 335, 341, 342, 343, 344, 345, 346, 376, 390, 396, 403, 405, 406, 409, 412, 414, 415, 416, 417, 418, 422], "trail": [3, 217], "treat": [3, 45, 399, 408, 409], "figur": [3, 403, 405, 406, 416, 417, 422], "brief": [3, 405, 407, 409, 419], "deliveri": 3, "design": [3, 27, 38, 45, 54, 55, 59, 64, 104, 110, 117, 122, 126, 136, 137, 144, 145, 151, 152, 162, 169, 193, 209, 211, 219, 290, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 403, 404, 405, 406, 407, 408, 409, 414, 415, 416, 417, 419, 422], "metaclass": 3, "everi": [3, 8, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 59, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 108, 122, 126, 144, 145, 151, 152, 204, 205, 217, 219, 224, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 260, 261, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 327, 380, 400, 403, 404, 405, 406, 407, 408, 415, 416, 417], "flank": [3, 406], "dual": 3, "strictli": [3, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332, 403, 405], "refer": [3, 7, 8, 9, 11, 21, 24, 27, 38, 45, 54, 55, 58, 59, 64, 122, 125, 126, 127, 144, 145, 151, 152, 209, 211, 217, 219, 231, 243, 244, 257, 258, 259, 260, 261, 262, 266, 267, 276, 277, 292, 309, 312, 319, 320, 321, 322, 329, 332, 343, 348, 356, 402, 403, 405, 408, 409, 410, 411, 415, 416, 417, 419, 421, 422], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 98, 99, 106, 122, 126, 144, 145, 151, 152, 173, 188, 192, 197, 199, 206, 211, 213, 215, 217, 219, 226, 233, 234, 235, 236, 237, 238, 239, 241, 245, 255, 258, 259, 260, 261, 263, 264, 268, 270, 274, 280, 281, 282, 283, 298, 316, 318, 324, 330, 333, 356, 374, 376, 377, 385, 386, 388, 390, 391, 392, 393, 394], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 136, 137, 157, 403], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 80, 86, 99, 106, 107, 396], "adjac": [3, 23, 182, 294], "junction": 3, "inittrack": [3, 250, 254, 294, 403, 406], "tutori": [3, 145, 395, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422], "scratch": [3, 8, 404, 417], "gym3": 3, "envpool": [3, 139, 140], "interfac": [3, 129, 141, 255, 263, 398, 399, 403, 405, 411, 417, 419], "simultan": [3, 20, 139, 140, 144, 151, 417], "advantag": [3, 8, 245, 309, 311, 326, 329, 331, 343, 344, 345, 346, 347, 348, 350, 352, 354, 356, 357, 359, 399, 400, 403, 404, 405, 406, 416, 417, 422], "scale": [3, 4, 24, 82, 122, 126, 144, 145, 151, 152, 169, 186, 188, 199, 205, 208, 217, 230, 244, 251, 265, 276, 277, 281, 282, 287, 288, 289, 295, 299, 301, 309, 310, 312, 325, 329, 330, 331, 332, 378, 384, 394, 398, 403, 404, 405, 406, 408, 416, 421], "varieti": [3, 11], "inherit": [3, 122, 126, 144, 145, 151, 152, 256, 260, 261, 327, 400, 405, 415, 416], "Of": [3, 7, 397, 417, 422], "cours": [3, 4, 397, 417, 422], "from_pixel": [3, 11, 118, 119, 120, 121, 125, 127, 128, 131, 132, 148, 169, 196, 361, 363, 403, 404, 406, 407, 411, 412, 418, 419, 421, 422], "81": [3, 404], "simpli": [3, 6, 50, 52, 57, 70, 110, 112, 117, 180, 201, 216, 327, 343, 398, 399, 403, 405, 409, 415, 416, 422], "d": [3, 51, 54, 56, 64, 65, 66, 83, 85, 87, 88, 89, 98, 99, 230, 248, 252, 295, 299, 421], "privat": [3, 122, 126, 144, 145, 151, 152, 216, 417, 422], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 41, 43, 50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 107, 112, 311, 326, 329, 371, 373, 376, 380, 383, 384, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 58, 101, 104, 153, 154, 188, 199, 251, 263, 276, 281, 282, 341, 398, 408, 409, 415, 417, 419], "inner": [3, 122, 126, 144, 145, 151, 152, 177, 400, 404, 405, 416, 422], "logic": [3, 415], "kept": [3, 23, 105, 107, 177, 201, 210, 221, 226, 251, 281, 282, 409, 415], "mind": [3, 80, 86, 99, 106, 107, 122, 126, 144, 145, 151, 152, 415, 416], "desig": 3, "wherev": 3, "expos": [3, 148, 175, 178, 300, 404], "modif": [3, 5, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 182, 219, 227, 327, 399, 405, 417], "lost": [3, 8, 216], "eras": [3, 25, 26, 28, 29, 30, 34, 41, 42, 43, 44, 47, 48, 49, 69, 71, 72, 73, 74, 75, 99, 106, 122, 126, 144, 145, 151, 152, 211], "intern": [3, 68, 401], "face": [3, 5, 8, 9, 407, 422], "NOT": [3, 90, 91, 97, 193], "outsid": [3, 16, 176, 209, 399, 411, 415, 416, 417], "right": [3, 6, 7, 23, 58, 99, 106, 404, 405, 416, 417, 422], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 210, 211, 219, 221, 343, 344, 345, 346, 415], "preclud": 3, "presenc": [3, 54, 64, 409], "annihil": 3, "reason": [3, 4, 8, 27, 38, 45, 54, 55, 59, 64, 86, 122, 126, 144, 145, 146, 147, 151, 152, 192, 213, 219, 254, 399, 403, 404, 405, 409, 410, 415, 417, 419], "advanc": [3, 21, 51, 56, 65, 66, 126, 407, 410, 419], "superse": 3, "pettingzoowrapp": [3, 396], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 71, 72, 73, 74, 75, 80, 122, 126, 135, 136, 137, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 398, 404, 408, 410, 416, 419], "associ": [3, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 209, 219, 276, 394, 403, 419], "environemtn": 3, "__not__": [3, 295, 310, 312, 325, 330, 332, 334, 335], "constrain": [3, 186, 250, 254, 329], "li": 3, "fact": [3, 7, 8, 403, 405, 407, 415, 416, 417, 418, 419, 422], "know": [3, 4, 9, 51, 56, 65, 66, 125, 127, 228, 229, 327, 330, 376, 403, 404, 405, 406, 407, 408, 409, 410, 415, 416, 419], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "perfectli": [3, 400, 403, 417], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 409, 421], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 56, 60, 61, 69, 71, 72, 73, 74, 75, 80, 122, 126, 144, 145, 151, 152, 165, 394, 398], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 101, 102, 104, 105, 106, 107, 108, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 165, 166, 169, 170, 175, 177, 178, 179, 180, 182, 186, 187, 188, 190, 192, 194, 195, 197, 199, 200, 201, 204, 206, 208, 209, 211, 212, 213, 215, 217, 219, 221, 224, 226, 227, 230, 231, 232, 233, 234, 236, 237, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 263, 264, 273, 281, 282, 286, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 338, 341, 343, 344, 345, 346, 349, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 370, 373, 374, 376, 377, 378, 380, 394, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "500": [3, 403, 404, 421, 422], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 80, 83, 144, 151], "bottleneck": [3, 8, 99, 106, 107], "great": [3, 7, 8, 415, 421], "speedup": [3, 8, 415, 422], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 175, 178, 226, 249, 253, 403, 405], "misspecifi": 3, "caus": [3, 7, 8, 93, 94, 114, 122, 126, 130, 144, 145, 151, 152, 193, 422], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 86, 93, 122, 126, 144, 145, 151, 152, 153, 157, 169, 181, 187, 197, 205, 206, 207, 209, 211, 219, 221, 228, 229, 246, 247, 272, 273, 312, 327, 332, 403, 405, 415, 416, 417, 419], "mismatch": [3, 54, 404], "subprocess": [3, 14, 15, 17, 123, 144, 151], "multithreadedenv": [3, 396], "underneath": 3, "higher": [3, 4, 99, 172, 302, 403, 404, 405, 415, 419, 422], "flexibl": [3, 9, 139, 336, 399, 400, 403, 419, 422], "cover": [3, 125, 127, 397, 405, 407, 410, 411, 417, 421], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 88, 89, 101, 122, 126, 135, 138, 141, 144, 145, 146, 147, 151, 152, 166, 173, 175, 176, 179, 180, 186, 192, 194, 195, 201, 204, 206, 209, 210, 211, 213, 215, 217, 219, 222, 225, 228, 229, 233, 234, 255, 260, 261, 264, 274, 283, 291, 295, 298, 299, 306, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 337, 341, 349, 361, 392, 396, 398, 403, 404, 405, 410, 415, 416, 417, 419, 422], "atari": [3, 4, 80, 169, 363, 411, 422], "classic": [3, 138, 147, 404], "benchmark_batched_env": 3, "seamlessli": [3, 417], "infrastructur": [3, 415, 416], "act": [3, 4, 106, 107, 146, 147, 211, 242, 261, 310, 312, 313, 325, 330, 332, 334, 335, 406, 415, 416, 419], "world": [3, 5, 138, 304, 321, 411, 415, 416, 417, 422], "paradigm": [3, 17, 416], "decpodp": 3, "game": [3, 4, 5, 80, 136, 137, 142, 143, 363, 411], "thank": [3, 403, 407], "carrier": [3, 405, 406, 407, 419], "particular": [3, 27, 38, 45, 54, 55, 59, 64, 70, 82, 83, 122, 126, 144, 145, 151, 152, 211, 219, 399, 400, 404, 406, 407, 414, 416, 419], "thu": [3, 326, 416], "let": [3, 6, 7, 11, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 67, 122, 126, 144, 145, 146, 147, 151, 152, 169, 219, 250, 254, 260, 261, 291, 376, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "vma": [3, 155, 156, 361, 415, 416], "robot": [3, 5, 7, 86, 192, 213, 215, 416], "vmasenv": [3, 361, 396, 415, 416], "balanc": [3, 120, 121, 403, 404, 422], "num_env": [3, 21, 125, 129, 140, 155, 156, 361, 415, 416], "n_agent": [3, 155, 156, 260, 261, 262, 274, 283, 341, 361, 415, 416], "ground_rew": 3, "pos_rew": [3, 416], "style": [3, 51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88], "vari": [3, 125, 127, 128, 146, 147, 148, 155, 193, 416], "creation": [3, 144, 151, 422], "info_spec": [3, 144], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 34, 43, 44, 49, 118, 119, 122, 125, 126, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 162, 163, 179, 194, 227, 243, 268, 271, 275, 291, 292, 295, 296, 297, 314, 317, 318, 341, 396, 406, 415, 416, 422], "simpl": [3, 9, 27, 38, 45, 54, 55, 59, 64, 69, 122, 126, 144, 145, 151, 152, 219, 236, 294, 299, 314, 316, 327, 331, 399, 403, 404, 405, 407, 408, 409, 415, 416, 419, 422], "prefix": [3, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 122, 126, 144, 145, 151, 152, 209, 211, 219, 295, 312, 327, 332, 362, 406, 409, 422], "exactli": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 128, 144, 145, 151, 152, 209, 211, 219, 248, 252, 268, 312, 332, 403, 406, 410, 415, 416], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 122, 126, 144, 145, 151, 152, 162, 163, 177, 220, 226, 228, 229, 231, 246, 247, 256, 257, 272, 273, 294, 415, 416], "reward_kei": [3, 35, 37, 46, 62, 90, 91, 97, 122, 126, 144, 145, 151, 152, 219, 226, 231, 257, 374, 378, 415, 416], "set_kei": [3, 179, 309, 311, 312, 314, 317, 318, 319, 325, 326, 327, 329, 330, 331, 332, 341, 347, 403, 415, 416], "awai": [3, 405, 407, 415, 416], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 41, 42, 43, 44, 47, 48, 49, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 185, 204, 299], "full": [3, 122, 126, 144, 145, 151, 152, 250, 254, 292, 371, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "autoresettransform": 3, "invalid": [3, 27, 38, 45, 54, 55, 59, 64, 112, 122, 126, 144, 145, 151, 152, 157, 219, 258, 259], "nan": [3, 165, 216], "auto_reset": [3, 122, 126, 144, 145, 151, 152, 165, 219, 417], "auto_reset_replac": [3, 165], "placehold": [3, 128, 179, 211], "set_gym_backend": [3, 122, 125, 126, 144, 145, 151, 152, 158, 165, 396, 407, 421], "autoresettinggymenv": [3, 165], "_step": [3, 122, 126, 144, 145, 151, 152, 163, 165, 166, 175, 178, 182, 194, 195, 421], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 122, 126, 138, 144, 145, 151, 152, 163, 165, 166, 173, 175, 178, 192, 194, 206, 210, 211, 213, 215, 219, 228, 229, 231, 243, 246, 257, 260, 261, 274, 283, 295, 298, 303, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 400, 403, 417, 421], "super": [3, 138, 163, 165, 166, 175, 178, 194, 231, 243, 257, 303, 310, 312, 313, 318, 325, 330, 332, 334, 335, 403, 417, 421], "td_reset": [3, 165], "exclud": [3, 8, 64, 82, 87, 122, 126, 144, 145, 151, 152, 165, 169, 180, 226, 274, 311, 329, 415, 416, 419], "r": [3, 4, 45, 162, 163, 165, 172, 188, 202, 209, 217, 230, 232, 249, 299, 308, 342, 361, 404, 417, 422], "break_when_any_don": [3, 122, 126, 144, 145, 151, 152, 165, 209, 219, 232, 294, 416], "3633e": [3, 165], "02": [3, 122, 126, 144, 145, 151, 152, 165, 402, 403, 404, 405, 406, 412, 415, 418, 420], "4877e": [3, 165], "01": [3, 165, 188, 230, 272, 273, 305, 309, 311, 326, 329, 402, 403, 404, 406, 418, 420], "2849e": [3, 165], "7584e": [3, 165], "6609e": [3, 165], "6166e": [3, 165], "8366e": [3, 165], "2761e": [3, 165], "5685e": [3, 165], "4102e": [3, 165], "8111e": [3, 165], "9959e": [3, 165], "0865e": [3, 165], "5644e": [3, 165], "2119e": [3, 165], "2542e": [3, 165], "03": [3, 122, 126, 144, 145, 151, 152, 165, 188, 402, 403, 404, 415, 418, 420], "9952e": [3, 165], "4059e": [3, 165], "2094e": [3, 165], "9009e": [3, 165], "5140e": [3, 165], "3554e": [3, 165], "2920e": [3, 165], "7893e": [3, 165], "6429e": [3, 165], "3057e": [3, 165], "2867e": [3, 165], "6963e": [3, 165], "3818e": [3, 165], "2576e": [3, 165], "2679e": [3, 165], "1640e": [3, 165], "00": [3, 118, 119, 165, 402, 403, 404, 405, 406, 415, 416, 418, 420], "6972e": [3, 165], "0212e": [3, 165], "5959e": [3, 165], "4637e": [3, 165], "3121e": [3, 165], "2168e": [3, 165], "5232e": [3, 165], "7704e": [3, 165], "7457e": [3, 165], "4127e": [3, 165], "1064e": [3, 165], "0854e": [3, 165], "5712e": [3, 165], "2189e": [3, 165], "5235e": [3, 165], "8289e": [3, 165], "0009e": [3, 165], "0257e": [3, 165], "8893e": [3, 165], "5872e": [3, 165], "9405e": [3, 165], "7766e": [3, 165], "0403e": [3, 165], "0626e": [3, 165], "2959e": [3, 165], "7263e": [3, 165], "2775e": [3, 165], "9564e": [3, 165], "0411e": [3, 165], "6769e": [3, 165], "6354e": [3, 165], "8698e": [3, 165], "1765e": [3, 165], "6292e": [3, 165], "5375e": [3, 165], "1820e": [3, 165], "7023e": [3, 165], "5836e": [3, 165], "9016e": [3, 165], "4826e": [3, 165], "6191e": [3, 165], "6387e": [3, 165], "8667e": [3, 165], "2056e": [3, 165], "1147e": [3, 165], "5991e": [3, 165], "0278e": [3, 165], "5219e": [3, 165], "3067e": [3, 165], "6617e": [3, 165], "3322e": [3, 165], "2629e": [3, 165], "4599e": [3, 165], "7298e": [3, 165], "5848e": [3, 165], "0148e": [3, 165], "5745e": [3, 165], "6982e": [3, 165], "7877e": [3, 165], "3527e": [3, 165], "7285e": [3, 165], "6668e": [3, 165], "0583e": [3, 165], "6956e": [3, 165], "3962e": [3, 165], "9845e": [3, 165], "5015e": [3, 165], "5903e": [3, 165], "9993e": [3, 165], "9418e": [3, 165], "0196e": [3, 165], "6557e": [3, 165], "2109e": [3, 165], "8997e": [3, 165], "1507e": [3, 165], "7363e": [3, 165], "0310e": [3, 165], "9574e": [3, 165], "8980e": [3, 165], "0090e": [3, 165], "forecast": 3, "awar": [3, 7, 93, 94, 95, 108, 110, 114, 250, 254, 404, 406], "detect": [3, 88, 327, 399], "return_contigu": [3, 122, 126, 144, 145, 151, 152, 221, 414], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 57, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 112, 122, 124, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 179, 180, 181, 182, 185, 186, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 210, 211, 216, 217, 219, 226, 227, 228, 229, 231, 246, 250, 254, 256, 257, 272, 273, 290, 292, 294, 297, 298, 299, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 341, 342, 343, 344, 345, 346, 347, 380, 403, 415, 417], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 45, 51, 54, 55, 58, 59, 64, 65, 71, 86, 98, 99, 101, 122, 126, 144, 145, 151, 152, 162, 165, 169, 173, 175, 178, 186, 188, 192, 197, 198, 199, 205, 206, 208, 210, 211, 213, 215, 217, 219, 228, 229, 230, 232, 241, 244, 248, 251, 252, 255, 258, 259, 263, 264, 271, 276, 277, 280, 282, 298, 302, 305, 307, 308, 309, 310, 311, 312, 316, 317, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 378, 403, 404, 419, 422], "_set_se": [3, 163, 166, 175, 178, 194, 417], "lazystackedtensordict": [3, 61, 80, 122, 126, 138, 144, 145, 151, 152, 414], "float32": [3, 14, 15, 16, 28, 31, 35, 50, 51, 52, 54, 57, 58, 62, 64, 65, 66, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 98, 99, 114, 118, 119, 122, 125, 126, 127, 131, 132, 138, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 162, 166, 175, 178, 179, 180, 188, 190, 194, 195, 197, 201, 204, 206, 208, 224, 226, 231, 232, 242, 243, 250, 254, 257, 272, 273, 274, 275, 283, 286, 287, 288, 289, 290, 291, 294, 295, 296, 297, 298, 301, 303, 306, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 341, 398, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422], "exclusive_field": [3, 80, 414], "stack_dim": [3, 80, 414], "dramat": 3, "carefulli": [3, 415, 416, 422], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 219, 221, 286, 291, 292, 295, 296, 297, 298, 299, 310, 312, 325, 330, 332, 334, 335, 405, 415, 416], "plain": [3, 8, 407], "larg": [3, 4, 30, 50, 52, 57, 175, 178, 213, 309, 311, 326, 329, 331, 404, 405, 415, 416, 419], "expens": [3, 99, 106, 107, 361, 419], "absent": [3, 31, 32, 39, 61, 64, 82, 122, 126, 144, 145, 151, 152, 211], "torchvis": [3, 11, 192, 215, 365, 415, 421, 422], "base_env": [3, 119, 122, 126, 127, 132, 143, 144, 145, 151, 152, 154, 162, 163, 166, 172, 175, 177, 178, 186, 190, 194, 196, 202, 204, 206, 207, 209, 211, 219, 363, 403, 404, 405, 415, 418, 421, 422], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 123, 126, 138, 144, 145, 151, 152, 161, 164, 166, 173, 179, 206, 211, 219, 233, 234, 255, 262, 308, 327, 361, 385, 386, 392, 393, 394, 404, 419], "bring": [3, 405, 407, 422], "signific": [3, 5, 8, 405, 422], "kind": [3, 56, 69, 226, 409, 415, 419], "consult": 3, "interest": [3, 295, 299, 398, 404, 405, 407, 416, 417, 422], "resize_par": 3, "easi": [3, 5, 11, 80, 85, 120, 121, 122, 126, 131, 132, 144, 145, 151, 152, 228, 229, 246, 247, 272, 273, 398, 399, 403, 404, 405, 416, 418, 419, 422], "revers": [3, 252], "order": [3, 11, 16, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 105, 107, 122, 126, 144, 145, 151, 152, 170, 175, 178, 190, 209, 211, 219, 271, 286, 291, 298, 300, 301, 303, 309, 310, 312, 313, 317, 318, 325, 329, 330, 331, 332, 334, 335, 404, 415, 416], "chain": [3, 50, 51, 52, 56, 57, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 173, 177, 233, 234, 301, 422], "in_keys_inv": [3, 159, 172, 175, 176, 178, 188, 189, 190, 194, 195, 197, 202, 210, 212, 403, 414, 417, 422], "append_transform": [3, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 159, 162, 168, 192, 206, 209, 211, 213, 217, 232, 250, 254, 361, 403, 406, 415, 417, 419, 421, 422], "doubletofloat": [3, 403, 405, 414], "float64": [3, 27, 38, 45, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 120, 121, 122, 126, 136, 137, 144, 145, 151, 152, 162, 173, 175, 178, 192, 206, 210, 211, 213, 215, 219, 298, 414, 422], "constrast": 3, "out_keys_inv": [3, 159, 172, 175, 176, 178, 188, 189, 190, 194, 195, 202, 210, 212, 417], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 93, 94, 95, 99, 105, 106, 108, 110, 114, 122, 126, 144, 145, 151, 152, 166, 173, 175, 176, 178, 180, 186, 194, 195, 201, 204, 210, 211, 217, 219, 252, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 399, 403, 406, 415, 416, 417, 418, 419, 422], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 125, 126, 127, 144, 145, 151, 152, 153, 154, 175, 178, 179, 200, 209, 211, 219, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 361, 363, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 400, 403, 405, 407, 419], "manipul": [3, 4, 8, 120, 121, 192, 213, 422], "third_transform": 3, "unexpect": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 422], "behviour": 3, "fortun": [3, 406, 407, 408, 411], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 80, 93, 122, 126, 144, 145, 151, 152, 206, 219, 227, 299, 343, 344, 345, 346, 403, 405, 411, 415, 416], "catfram": [3, 294, 404], "hold": [3, 339, 340, 417, 419], "notic": [3, 112, 169, 405, 412, 417], "parenthood": 3, "henc": [3, 51, 193, 227, 260, 403, 405, 415, 416, 417], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 144, 151, 361, 417], "discret": [3, 25, 26, 28, 30, 31, 34, 41, 42, 43, 44, 49, 71, 74, 75, 122, 125, 126, 127, 136, 137, 144, 145, 146, 147, 151, 152, 155, 156, 162, 177, 268, 271, 275, 316, 317, 318, 319, 398, 404, 405, 408, 415, 416, 417, 422], "might": [3, 50, 52, 53, 57, 367, 397, 403, 407, 422], "action_mask": [3, 131, 132, 146, 147, 149, 150, 163], "unavail": [3, 146, 147], "probabl": [3, 4, 8, 58, 101, 104, 232, 241, 243, 246, 248, 250, 252, 254, 255, 258, 259, 268, 281, 282, 295, 299, 312, 398, 404, 408, 421], "probabilistictensordictmodul": [3, 186, 299, 300, 421], "tensordictsequenti": [3, 54, 64, 232, 246, 250, 254, 272, 291, 294, 300, 306, 398, 403, 404, 406, 408, 412, 414, 415, 418, 421], "maskedcategor": [3, 259, 396], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 138, 144, 145, 151, 152, 173, 186, 192, 206, 210, 211, 213, 215, 219, 231, 232, 233, 234, 236, 237, 238, 239, 243, 245, 246, 247, 255, 257, 260, 261, 263, 264, 265, 272, 273, 275, 276, 277, 286, 287, 288, 289, 293, 294, 295, 296, 298, 301, 303, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 390, 398, 404, 414, 418, 421], "in_feat": 3, "out_feat": 3, "logit": [3, 52, 58, 242, 258, 259, 268, 271, 292, 295, 317, 318, 398], "dist": [3, 10, 258, 259, 268, 408], "distribution_class": [3, 186, 287, 288, 289, 290, 295, 299, 301, 309, 310, 312, 317, 318, 325, 329, 330, 331, 332, 398, 403, 405, 408, 415, 416, 421], "wrap": [3, 5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 84, 118, 119, 122, 126, 127, 131, 132, 137, 140, 142, 143, 144, 145, 146, 147, 151, 152, 154, 156, 209, 219, 221, 229, 247, 250, 254, 273, 284, 287, 288, 289, 294, 296, 304, 327, 341, 398, 403, 404, 405, 406, 409, 412, 415, 416, 422], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 163, 193, 219], "enviorn": [3, 136, 146, 147, 155, 156], "itself": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 158, 165, 219, 327, 334, 405, 407], "ey": 3, "report": [3, 118, 119, 131, 132, 411], "foremost": 3, "callback": [3, 122, 126, 144, 145, 151, 152, 416], "ad": [3, 4, 16, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 122, 126, 144, 145, 151, 152, 200, 209, 211, 219, 230, 263, 264, 272, 273, 309, 311, 312, 314, 319, 326, 329, 332, 341, 404, 406, 408, 415, 419, 422], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 66, 98, 99, 105, 200, 217, 219, 272, 273, 294, 368, 373, 404, 406, 407, 410, 416, 417, 419], "tensordictrecord": [3, 396], "videorecord": [3, 11, 361, 396, 405, 411, 412, 415], "csvlogger": [3, 11, 361, 363, 396, 404, 411, 412, 415], "wandblogg": [3, 396, 411], "tensorboardlogg": [3, 390, 396, 411], "tag": [3, 7, 11, 361, 363, 365, 368, 394, 411, 412, 415], "mp4": [3, 361, 363, 365, 412, 415], "video_format": [3, 361, 363, 365, 412, 415], "whc": 3, "cwh": 3, "exp": [3, 265, 308], "al": [3, 24, 125, 127, 179, 190, 231, 422], "pong": [3, 80, 140, 190, 422], "v5": [3, 125, 127, 140, 179, 190, 422], "cach": [3, 50, 52, 70, 80, 82, 83, 84, 86, 87, 88, 89, 99, 106, 122, 126, 144, 145, 151, 152, 165, 175, 178, 192, 211, 215, 226, 372, 418], "grow": 3, "until": [3, 7, 21, 207, 210, 219, 405, 406, 412, 415, 416], "dumpi": 3, "tediou": [3, 407], "workspac": [3, 122, 126, 144, 145, 151, 152], "pixelrendertransform": [3, 396, 415], "stream": [3, 86], "alik": [3, 361], "envcreat": [3, 16, 22, 144, 151, 209, 361, 390, 391, 394, 396, 403, 404, 421, 422], "render_mod": [3, 361, 417], "rgb_arrai": [3, 361, 415, 416, 417], "uncom": [3, 411], "line": [3, 7, 27, 38, 45, 54, 55, 59, 64, 80, 122, 126, 144, 145, 151, 152, 219, 404, 411, 415, 416, 417, 421, 422], "comment": [3, 400, 404, 421], "pixels_record": [3, 361], "close": [3, 16, 126, 139, 186, 309, 311, 326, 329, 361, 403, 404, 407, 414, 415, 417, 421], "mission": 3, "irrespect": [3, 298, 299], "dmcontrol": [3, 122, 126, 144, 145, 151, 152], "jumanji": [3, 122, 126, 131, 132, 144, 145, 151, 152], "special": [3, 72, 74, 396, 403, 406, 422], "framework": [3, 4, 9, 22, 118, 119, 122, 126, 131, 132, 138, 144, 145, 151, 152, 248, 421, 422], "Its": [3, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 217, 219, 298, 347], "success": [3, 80, 81, 82, 83, 84, 85, 86, 87, 88, 169, 210, 246, 312, 334, 404, 410, 412, 417, 419, 421], "foundat": [3, 5, 146, 147, 405, 416], "inspir": [3, 417], "gone": [3, 4, 5, 294], "hard": [3, 7, 112, 120, 121, 144, 324, 404, 422], "prefer": [3, 14, 15, 17, 20, 23, 24, 51, 56, 65, 66, 193, 201, 329, 334, 377, 398, 405, 415, 416, 419], "maintain": [3, 5, 9, 33, 417], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 404, 405, 406, 410, 415, 416, 417, 419, 422], "decor": [3, 8, 12, 161, 327, 343, 344, 345, 346, 421], "relev": [3, 58, 343, 344, 345, 346, 347, 370, 417], "gym_backend": [3, 161, 396], "env1": [3, 232, 414], "venv": 3, "python3": [3, 6, 7, 10, 421], "site": [3, 6, 7, 87, 161, 421], "env2": [3, 414], "_env": [3, 6, 125, 421, 422], "classic_control": [3, 421], "pendulumenv": [3, 396, 417], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 134, 158], "handi": [3, 122, 126, 144, 145, 151, 152, 411], "side": [3, 4, 422], "v0": [3, 14, 15, 50, 52, 57, 122, 126, 128, 131, 132, 133, 134, 144, 145, 151, 152, 173, 211, 217, 390], "26": [3, 122, 126, 144, 145, 151, 152, 402, 404, 409, 415, 416, 418, 420, 422], "fun": [3, 12, 161, 405, 415, 416], "reveal": 4, "bug": [4, 421], "curv": 4, "exploit": [4, 408], "cv": 4, "flip": 4, "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 169, 175, 178, 180, 188, 195, 197, 219, 307, 317, 325, 396, 417], "prescript": 4, "tune": [4, 24, 186, 415, 416, 418], "coeffici": [4, 24, 33, 58, 186, 416], "bonu": [4, 309, 311, 326, 329], "beta": [4, 51, 65, 98, 99, 317, 325, 326, 403, 404, 419, 421], "reduc": [4, 6, 30, 112, 205, 230, 281, 396, 404, 415], "downstream": [4, 399, 403], "formul": [4, 415, 416], "ob": [4, 8, 23, 31, 32, 39, 51, 56, 61, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 101, 106, 107, 112, 122, 126, 144, 145, 151, 152, 163, 165, 175, 176, 178, 188, 202, 208, 224, 226, 236, 237, 238, 239, 260, 261, 262, 296, 303, 310, 312, 313, 318, 325, 330, 332, 334, 335, 343, 344, 345, 346, 404, 414, 415, 417, 419, 421, 422], "rate": [4, 11, 80, 217, 342, 404, 405, 415, 416], "gradient": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 211, 219, 251, 259, 264, 268, 281, 282, 309, 311, 312, 313, 317, 318, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 342, 343, 344, 345, 346, 380, 403, 405, 415, 416, 417], "easier": [4, 55, 398, 403], "local": [4, 7, 10, 16, 21, 27, 38, 45, 54, 55, 59, 64, 99, 106, 122, 126, 144, 145, 151, 152, 211, 219, 260, 261, 274, 283, 341, 368, 370, 411, 412, 415, 416], "optima": 4, "sens": [4, 50, 52, 57, 410, 417], "product": [4, 9, 248, 249, 252, 253, 392, 393], "sum": [4, 21, 27, 43, 64, 112, 118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 168, 200, 258, 259, 281, 283, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335, 342, 349, 399, 403, 404, 405, 406, 409, 412, 415, 416, 417, 422], "stat": [4, 188, 217, 384, 394, 404, 405], "w": [4, 101, 142, 143, 169, 171, 174, 196, 208, 248, 272, 273, 363, 404, 406, 419], "yield": [4, 14, 15, 16, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 327, 403, 409], "insight": 4, "auxiliari": [4, 409], "credit": 4, "futur": [4, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 90, 91, 97, 122, 126, 144, 145, 151, 152, 192, 209, 211, 215, 219, 255, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 397, 421], "past": [4, 294, 404, 419], "spars": [4, 406], "intermedi": [4, 14, 15, 54, 64, 168, 232, 250, 254, 292, 403, 418], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 403], "discov": 4, "score": [4, 58, 269, 271], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 421], "select": [4, 51, 54, 56, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 136, 137, 146, 147, 155, 156, 163, 165, 166, 168, 169, 170, 173, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 191, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 210, 213, 214, 216, 217, 219, 220, 231, 250, 254, 291, 296, 379, 398, 403, 407, 415, 419], "explicit": [4, 12, 70, 101, 419], "mechan": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 211, 219, 404, 409, 417], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 122, 126, 144, 145, 151, 152, 252, 317, 325, 405, 416], "addition": 4, "timestep": [4, 58, 82, 197, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 415, 416], "realli": 4, "huge": [4, 261, 406], "std": [4, 188, 217, 228, 229, 265, 270, 403, 422], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 402, 406, 407, 409, 410, 411, 412, 413, 414, 418, 419, 420], "initi": [4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 112, 122, 126, 142, 143, 144, 145, 151, 152, 153, 168, 188, 192, 206, 210, 211, 213, 218, 219, 228, 229, 230, 231, 246, 247, 248, 249, 252, 253, 257, 260, 261, 262, 263, 264, 272, 273, 294, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 341, 394, 398, 399, 403, 404, 406, 407, 408, 410, 415, 417, 422], "estim": [4, 80, 99, 106, 107, 179, 186, 236, 281, 287, 288, 289, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "unseen": 4, "extrins": 4, "wrong": [4, 99, 106], "bonus": 4, "denser": 4, "prior": [4, 59, 277, 321, 416], "freshli": 4, "drop": [4, 105, 107, 226], "meant": [4, 45, 138], "encourag": [4, 144, 271, 403, 404, 419], "measur": [4, 93, 94, 114, 118, 119, 131, 132, 405, 410], "novelti": 4, "revisit": 4, "previous": [4, 405, 422], "diminish": 4, "decreas": [4, 24, 408], "ideal": [4, 188, 417], "down": [4, 14, 15, 16, 17, 399, 406, 407], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "distil": 4, "nois": [4, 218, 264, 272, 273, 285, 330, 334, 335, 376, 394, 403, 415], "exploratori": [4, 309, 311, 326, 329], "misalign": 4, "trade": [4, 408], "unavoid": 4, "divers": [4, 144, 151], "bootstrap": [4, 319, 344, 350, 351, 403, 406], "noisi": [4, 263, 264, 285, 398], "unstabl": [4, 251, 281, 282], "inher": [4, 309, 329], "stochast": [4, 186, 244, 264, 266, 277, 310, 312, 315, 317, 318, 323, 325, 328, 330, 332, 398, 405, 408, 416], "enemi": 4, "pomdp": [4, 419], "loos": [4, 398, 404, 405], "nonexist": 4, "architectur": [4, 240, 409, 415, 416], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 41, 43, 51, 53, 54, 56, 58, 61, 64, 67, 70, 86, 89, 92, 101, 102, 104, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152, 159, 167, 168, 169, 170, 171, 174, 175, 177, 178, 182, 184, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 205, 207, 208, 210, 217, 233, 234, 241, 243, 248, 252, 255, 258, 259, 260, 261, 268, 275, 279, 290, 300, 301, 315, 362, 363, 375, 376, 377, 379, 380, 398, 403, 405, 406, 414, 415, 416, 422], "lstm": [4, 206, 253, 254, 265], "rel": [4, 101, 206, 241, 280, 403, 404, 415, 416, 419], "tend": 4, "stabl": [4, 9, 10, 141], "compens": 4, "descent": [4, 264], "minimum": [4, 71, 144, 151, 198, 244, 265, 280, 281, 282, 302, 305, 308, 310, 312, 318, 327, 328, 332, 371, 403, 405, 412, 415, 416], "manual": [4, 11, 18, 20, 21, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 126, 127, 403, 406, 419], "deviat": [4, 188, 217, 228, 229, 231, 244, 257, 263, 264, 270, 271, 329, 334, 335, 403, 408, 416], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 99, 106, 165, 248, 249, 252, 253, 407, 408, 409, 410, 411, 412], "stabil": [4, 183, 309, 311, 326, 329, 331], "stage": [4, 403, 417], "never": [4, 14, 15, 17, 28, 71, 99, 410], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 41, 42, 43, 44, 49, 61, 91, 217, 251, 281, 282, 309, 311, 326, 329, 331, 378, 411, 419], "entir": [4, 86, 122, 126, 144, 145, 151, 152, 260, 405, 407, 417, 419], "submit": [4, 125, 166, 397, 421], "system": [4, 5, 91, 405, 415, 416, 417], "adequ": [4, 221, 405, 415, 416], "infeas": 4, "allevi": [4, 398], "prune": 4, "fire": [4, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "illeg": 4, "chess": [4, 142, 143], "grasp": 4, "top": [4, 112, 118, 119, 131, 132, 174, 231, 257, 408], "wherein": 4, "cumul": [4, 200, 205, 231, 349, 405], "q": [4, 9, 122, 126, 144, 145, 151, 152, 236, 237, 238, 239, 242, 243, 245, 274, 275, 283, 289, 292, 296, 297, 310, 312, 313, 314, 316, 317, 318, 319, 324, 325, 330, 332, 334, 335, 341, 396, 403, 409], "flow": [4, 403, 405, 415, 416, 417, 419], "reparameter": [4, 241, 259, 268], "soft": [4, 324, 332, 333, 415], "critic": [4, 8, 287, 293, 309, 311, 312, 313, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 403, 409], "clip": [4, 58, 172, 198, 309, 311, 326, 329, 331, 334, 335, 380, 405, 416, 417], "oppos": [4, 70], "incorrect": 4, "thought": [4, 122, 126, 144, 145, 151, 152], "region": 4, "squash": [4, 406, 421], "tanh": [4, 233, 234, 248, 249, 251, 252, 253, 255, 261, 280, 281, 282, 302, 405, 408, 415, 416, 417, 418], "prob": [4, 258, 259, 268, 271, 405, 416], "rememb": [4, 415], "remap": 4, "origin": [4, 8, 50, 52, 54, 57, 58, 64, 130, 176, 177, 186, 192, 211, 215, 219, 248, 295, 298, 299, 310, 312, 324, 325, 327, 329, 330, 332, 334, 335, 403, 414, 417, 422], "histor": 5, "ceas": 5, "farama": [5, 84, 133, 134, 146, 147, 405, 417], "best": [5, 9, 130, 250, 254, 415, 416, 419, 421], "gymwrapp": [5, 122, 126, 144, 145, 151, 152, 180, 201, 204, 216, 396, 405, 421], "feel": [5, 397, 412, 421], "free": [5, 7, 175, 178, 309, 321, 329, 400, 405, 412, 416, 421], "gladli": 5, "prepar": [6, 37, 83, 405], "conda": [6, 7, 397], "cmake": 6, "activ": [6, 7, 9, 233, 234, 240, 244, 255, 260, 261, 311, 326, 329, 398, 417, 421], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 83, 397], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 128], "y": [6, 7, 54, 56, 64, 141, 245, 260, 284, 403, 416, 419], "facebookresearch": [6, 83, 128], "subdirectori": 6, "verbos": [6, 412], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 77, 122, 126, 144, 145, 151, 152, 194, 203, 219, 327, 415, 416, 421, 422], "command": [6, 7, 10, 152, 405, 415, 416, 417, 422], "readm": [6, 7, 155], "md": [6, 7], "habitatenv": [6, 396], "_has_habitat": 6, "available_env": [6, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 136, 137, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 422], "startswith": [6, 232, 399, 403, 409], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 123, 327, 403], "env_nam": [6, 118, 120, 122, 123, 125, 126, 128, 131, 133, 139, 144, 145, 148, 151, 152, 403, 405, 422], "llvmlite": 6, "config": [6, 7, 192, 215, 235, 240, 270, 384, 385, 386, 388, 391], "var": [6, 7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 327, 332], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 291, 327], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 327, 332, 419], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 122, 404, 412], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 82], "stand": [7, 36, 120, 121, 144, 151, 414, 417, 422], "joint": [7, 404], "contact": [7, 53, 415], "engin": [7, 148, 417], "biomechan": 7, "graphic": 7, "anim": [7, 416], "area": 7, "demand": [7, 411, 422], "fast": [7, 9, 118, 119, 195, 226, 330, 403, 404, 405], "articul": 7, "acquir": [7, 405], "deepmind": [7, 8, 9, 86, 120, 121, 122, 126, 136, 137, 142, 143, 144, 145, 151, 152, 179, 405, 407], "whomev": 7, "licenc": 7, "incorpor": [7, 122, 126, 144, 145, 151, 152, 228, 229, 246, 247, 272, 273, 334, 406, 408, 417], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 397], "tip": [7, 397], "glfw": [7, 403], "osmesa": 7, "egl": 7, "advic": [7, 86, 422], "sudo": [7, 397], "apt": [7, 416], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 287, 288, 289], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 403, 405, 406, 415, 416, 419], "roboti": 7, "html": [7, 14, 15, 139, 141, 142, 143], "wget": 7, "mujoco210": 7, "tar": [7, 83], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 144, 151], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 50, 52, 70, 89], "bin": [7, 243, 271, 292, 398], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 239, 295, 299, 403, 405, 419], "nvidia": [7, 130], "older": [7, 12], "hack": [7, 403], "adatp": 7, "script": [7, 83, 221, 390, 394, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "unnot": [7, 193], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 91, 404, 419], "troubleshoot": 7, "gl": 7, "h": [7, 101, 169, 171, 174, 196, 208, 248, 249, 250, 252, 253, 254, 257, 363, 404, 406, 419], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 43, 44, 49], "directori": [7, 50, 52, 57, 70, 80, 82, 83, 84, 86, 87, 88, 93, 368, 370, 400, 403, 408, 411, 415], "devel": 7, "ubuntu": [7, 130], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 404, 406, 414], "libstdc": 7, "glibcxx_3": 7, "29": [7, 403, 404, 419], "compil": [7, 12, 14, 15, 16, 23, 27, 38, 45, 54, 55, 56, 59, 64, 92, 93, 94, 95, 99, 102, 106, 107, 108, 113, 114, 116, 122, 126, 144, 145, 151, 152, 219, 248, 249, 252, 253, 281], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 216, 405, 414], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": [7, 403], "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 187, 209, 211, 219, 312, 332, 399, 422], "job": [7, 18, 19, 20, 22, 56, 65, 66, 101, 419, 421], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 118, 119, 402, 404, 406, 418, 420], "114": [7, 403], "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 415, 416], "global": [7, 27, 38, 45, 54, 55, 56, 59, 64, 65, 66, 101, 122, 126, 144, 145, 146, 147, 151, 152, 209, 219, 274, 283, 295, 299, 341, 400, 403, 415, 416], "cuda_visible_devic": 7, "id": [7, 23, 58, 99, 101, 106, 107, 122, 125, 126, 144, 145, 151, 152, 153, 154, 272, 273, 312, 330, 366, 370, 410, 419], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 415], "onscreen": 7, "101": 7, "correctli": [7, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "lgl": 7, "libegl": 7, "x11": [7, 416], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 400], "n_training_step": 8, "datapoint": [8, 70, 419], "n_data_per_train": 8, "no_grad": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 186, 219, 248, 249, 252, 253, 343, 344, 345, 346, 405, 406, 416], "loss_fn": [8, 406, 409, 410, 421], "zero_grad": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 271, 400, 403, 405, 406, 409, 412, 415, 416, 417], "backpropag": [8, 118, 119, 131, 132, 144, 309, 310, 311, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 335, 341, 409, 416, 417], "differenti": [8, 70, 118, 119, 186, 312, 334, 343, 344, 345, 346, 406, 408, 409, 415, 416, 417], "denomin": 8, "artifact": 8, "numer": [8, 56, 126, 217, 251, 281, 282, 286, 291, 292, 295, 296, 297, 298, 299, 378, 405, 419, 422], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 71, 80, 86, 99, 106, 107, 417, 419], "compuat": 8, "fix": [8, 33, 144, 206, 310, 312, 328, 332, 404, 412, 417, 422], "retain_graph": [8, 118, 119], "discuss": [8, 9, 410, 415, 416], "inplac": [8, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 219, 403], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 122, 126, 144, 145, 151, 152, 163, 165, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 191, 192, 193, 194, 195, 197, 200, 201, 204, 205, 206, 207, 209, 210, 213, 214, 216, 217, 219, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 266, 267, 270, 272, 273, 274, 276, 277, 279, 283, 284, 290, 292, 294, 295, 297, 298, 299, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 341, 343, 344, 345, 346, 347, 396, 399, 417, 421], "submodul": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 158, 206, 219, 250, 254, 306, 327], "param": [8, 27, 38, 45, 54, 55, 58, 59, 64, 122, 126, 138, 144, 145, 151, 152, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 210, 219, 241, 243, 260, 261, 262, 280, 290, 295, 298, 301, 327, 337, 340, 343, 344, 345, 346, 347, 403, 412, 415, 416, 417, 418, 421], "grad": [8, 27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 219, 403, 405], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 146, 147, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 265, 274, 298], "factor": [8, 11, 24, 45, 197, 219, 228, 229, 230, 246, 247, 251, 264, 272, 273, 281, 282, 310, 316, 319, 320, 322, 333, 349, 403, 404, 408, 412, 415, 416, 419, 422], "fit": [8, 12, 55, 188, 206, 399, 400, 403], "bottlneck": 8, "brax": [8, 118, 119, 122, 126, 144, 145, 151, 152, 195, 407, 422], "jax": [8, 12, 118, 119, 131, 132], "improperli": 8, "underli": [8, 122, 123, 126, 144, 145, 151, 152, 327, 407, 409, 411, 417], "tedeiou": 8, "priorit": [8, 51, 65, 98, 99, 312, 313, 314, 316, 317, 318, 325, 330, 332, 334, 335, 403, 404, 410], "amount": [8, 272, 273, 404, 419], "costli": [8, 417], "constitut": [8, 404, 416, 417], "profil": 8, "frequent": [8, 419], "program": [8, 317, 325, 422], "functorch": [8, 10], "incl": 8, "suit": [8, 121, 405, 407, 421, 422], "mujoco_instal": 8, "valueerror": [8, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 105, 190, 421, 422], "idea": [9, 330, 400, 406, 408, 415, 416], "introductori": 9, "intro": [9, 405, 406], "dai": [9, 421], "2022": [9, 10, 421], "spin": [9, 120, 121, 422], "deep": [9, 169, 236, 237, 238, 239, 242, 272, 273, 309, 312, 324, 332, 333, 403, 415], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 408], "summari": [9, 188, 217, 403, 404, 405, 406], "reddit": 9, "reagent": 9, "orient": [9, 88, 422], "baselines3": 9, "tf": 9, "bandit": [9, 141], "tensorflow": [9, 258, 259], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 412], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 421], "grade": 9, "factori": [9, 67, 403], "cherri": 9, "jaxrl": 9, "mbrl": [9, 138, 398], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 405, 406, 415, 416], "notebook": [10, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "24": [10, 87, 107, 125, 139, 140, 271, 294, 402, 403, 404, 405, 406, 415, 420], "pip3": [10, 403, 405, 406, 415, 416], "url": [10, 128], "org": [10, 14, 15, 24, 51, 83, 84, 86, 88, 98, 99, 118, 119, 120, 121, 128, 131, 132, 136, 137, 139, 140, 141, 148, 155, 156, 169, 192, 213, 230, 235, 236, 237, 238, 239, 240, 243, 244, 245, 252, 257, 258, 259, 264, 266, 267, 271, 272, 273, 274, 276, 277, 283, 292, 309, 310, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 328, 329, 331, 332, 333, 334, 343, 348, 356, 395, 413, 418], "whl": 10, "u": [10, 85, 248, 249, 252, 253, 417], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 405, 415, 416, 417, 419], "power": [11, 404], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 396], "ultim": [11, 251, 281, 282], "ffmpeg": 11, "whatev": [11, 399, 403], "fed": [11, 416, 419], "feed": [11, 192, 215, 327, 398, 403, 415, 416, 419], "suppos": [11, 144, 376, 400, 422], "snippet": [11, 192, 213, 403], "gave": 11, "extrem": [11, 144, 151, 309, 311, 326, 329, 331], "blurri": 11, "stitch": 11, "exp_nam": [11, 363, 364, 365, 368, 369, 370, 390, 404, 411, 412], "my_exp": [11, 411], "pixels_onli": [11, 120, 121, 125, 127, 128, 148, 403, 404, 411, 412, 421, 422], "my_video": [11, 411], "record_env": [11, 411, 412], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 289, 398], "module_nam": [12, 327], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 98, 99, 101, 112, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 165, 169, 179, 185, 186, 192, 196, 204, 205, 209, 211, 213, 215, 216, 217, 219, 227, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 250, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 270, 274, 275, 283, 286, 291, 292, 295, 296, 297, 298, 299, 302, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 338, 341, 342, 343, 344, 345, 346, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 388, 394, 404, 405], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 250, 254, 421], "longer": [12, 404, 412, 415, 416, 419], "x": [12, 23, 45, 54, 55, 56, 58, 59, 64, 86, 107, 186, 208, 230, 232, 234, 243, 245, 248, 249, 250, 252, 253, 254, 255, 257, 260, 261, 284, 291, 295, 296, 305, 308, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 380, 403, 415, 417, 419, 421], "23": [12, 87, 107, 403, 404, 415, 418], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 87, 118, 119, 126, 131, 132, 253, 308, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 403, 404, 405, 406, 412, 415, 416, 417, 419, 422], "classmethod": [12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 64, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 213, 235, 270], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 87, 91, 99, 106, 107, 122, 123, 124, 125, 126, 127, 136, 137, 139, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 186, 206, 209, 211, 216, 217, 219, 233, 234, 235, 236, 237, 238, 239, 240, 245, 255, 270, 295, 299, 312, 332, 334, 367, 368, 376, 385, 386, 392, 393, 394, 398, 403, 404, 405, 419, 422], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 123, 144, 151, 403, 421], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 404], "create_env_kwarg": [14, 15, 16, 17, 21, 123, 139, 144, 151, 209, 403, 422], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 45, 197, 404, 419], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 222, 225, 295, 299, 376], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 50, 52, 57, 144, 151], "num_sub_thread": [14, 15, 17, 144, 151], "set_trunc": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152], "use_buff": [14, 15, 16, 144, 151], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 122, 126, 144, 145, 151, 152], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "datacollector": [14, 15, 16, 17, 45, 299, 329, 405, 410, 419], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 99, 106, 229, 273, 281, 286, 291, 292, 295, 296, 297, 298, 299, 301, 398, 421], "sota": [14, 15, 138, 183, 331, 371, 385, 403, 404, 421], "guard": [14, 15], "doc": [14, 15, 67, 128, 131, 132, 141, 148, 370, 404, 415, 416, 417, 419, 421, 422], "env_mak": [14, 15, 16, 21, 390, 422], "2000": [14, 15, 16, 45, 70, 129, 271, 363, 405, 419], "50": [14, 15, 16, 21, 53, 58, 80, 88, 106, 107, 136, 137, 219, 402, 403, 404, 405, 406, 414, 415, 416, 418, 419, 420], "shutdown": [14, 15, 16, 17, 21, 166, 403, 421], "del": [14, 15, 16, 403, 404, 405, 414, 415, 421, 422], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 41, 42, 43, 44, 49, 50, 52, 53, 54, 57, 58, 62, 65, 67, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 122, 126, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 162, 166, 179, 190, 197, 204, 243, 272, 273, 275, 291, 292, 295, 296, 297, 398, 405, 406, 407, 408, 410, 411, 417, 419, 421], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 168, 284, 291, 294, 296, 406], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 70], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 404], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 80, 86, 99, 106, 107, 230, 416], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 80, 126, 165, 206, 216, 254, 406, 417, 418], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 382, 404], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 89, 118, 119, 120, 121, 122, 125, 126, 127, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 173, 175, 178, 186, 192, 206, 210, 211, 213, 215, 217, 219, 298, 415, 422], "span": [14, 15, 16, 17, 18, 19, 20, 21, 86, 99, 106], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 45, 219, 294, 404, 405, 415, 416], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 58, 370, 398, 415, 416, 417], "round": [14, 15, 16, 17, 18, 19, 20, 21, 80], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 84, 122, 126, 144, 145, 151, 152, 219], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 295, 327, 376, 398, 403, 404, 405, 406, 408, 415, 421], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 216, 421], "ratio": [14, 15, 17, 58, 403, 405], "finish": [14, 15, 17, 21, 126, 197, 422], "rest": [14, 15, 17, 398, 405, 406, 415, 417, 421], "earli": [14, 15, 17, 45, 126, 204, 421], "safeti": [14, 15, 17, 138, 144, 151], "harm": [14, 15, 17, 144, 151], "exclus": [14, 15, 76, 77, 80, 86, 99, 106, 107, 166, 180, 182, 248, 250, 252, 254, 258, 259, 291, 292, 296, 297, 333, 334, 335, 343, 344, 345, 346, 347, 370, 394, 398], "add_truncated_kei": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152, 211], "trust": [14, 15, 16, 122, 126, 136, 137, 144, 145, 151, 152, 254], "cudagraphmodul": [14, 15, 16, 122, 126, 144, 145, 151, 152], "behaviour": [14, 15, 16, 54, 64], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 97, 98, 99, 101, 106, 107, 108, 110, 112, 114, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163, 164, 166, 173, 192, 194, 203, 206, 209, 210, 211, 212, 214, 215, 218, 219, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 242, 245, 246, 247, 250, 251, 254, 255, 256, 257, 260, 261, 262, 268, 272, 273, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 341, 342, 343, 344, 345, 346, 347, 361, 363, 367, 368, 370, 373, 380, 385, 386, 391, 392, 393, 399, 405, 416, 421], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 217, 219, 312, 332, 404], "form": [14, 15, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 122, 126, 144, 145, 151, 152, 217, 219, 248, 250, 252, 254, 308, 309, 311, 326, 329, 380, 398, 408, 416], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 122, 126, 144, 145, 151, 152, 211], "integ": [14, 15, 16, 17, 23, 38, 41, 43, 45, 54, 55, 58, 59, 99, 106, 107, 108, 122, 126, 144, 145, 151, 152, 162, 165, 179, 183, 188, 204, 233, 234, 255, 260, 261, 312, 317, 325, 332, 419], "increment": [14, 15, 16, 17, 122, 126, 144, 145, 151, 152, 188, 326], "env_fn": [14, 15, 16, 17, 123, 392, 393], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 106, 107, 238, 239], "out_se": [14, 15, 16, 17, 422], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 329], "whole": [16, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 70, 122, 126, 144, 145, 151, 152, 209, 211, 219, 295, 312, 332, 371, 403, 405], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 408], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 68, 380], "respect": [18, 19, 20, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 167, 173, 175, 178, 192, 193, 202, 206, 210, 211, 213, 215, 219, 248, 252, 260, 277, 298, 303, 309, 311, 326, 329, 331, 343, 345, 346, 375, 405, 406, 415, 416], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 397, 404, 405, 408, 411, 414, 419], "fashion": [18, 20, 21, 50, 52, 57, 107], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 80, 83, 84, 86, 87, 88, 122, 126, 144, 145, 151, 152, 182], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 51, 54, 55, 56, 59, 64, 65, 66, 82, 122, 126, 144, 145, 151, 152, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305, 403], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 417], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 153], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 271, 403], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 80, 295, 299], "tensorpiperpcbackendopt": 20, "_td": [21, 123], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 392, 393, 403, 404], "coordin": [21, 174], "init": [21, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 217, 219, 260, 261, 262, 370, 404, 405], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 240, 404, 419], "equat": [21, 54, 86, 126, 217, 272, 273, 308, 311, 333, 405, 407, 417], "exce": [21, 419], "indefinit": [21, 79], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 230, 380, 403, 405, 406], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 334, 409], "jump": [22, 407], "host": [22, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 235, 240, 270, 290], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "_nestedkei": [23, 99, 106, 107], "nestedkei": [23, 25, 26, 28, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 54, 57, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 99, 106, 107, 122, 126, 144, 145, 151, 152, 159, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 217, 219, 220, 226, 227, 228, 229, 232, 243, 246, 247, 272, 273, 275, 290, 294, 299, 314, 341, 361, 363], "as_nest": 23, "durat": [23, 416], "meta": [23, 50, 52, 57, 69, 82, 124, 128, 309, 311, 326, 329, 331, 400, 405, 415, 416, 419], "aren": [23, 205, 406], "eventu": [23, 274, 406, 417], "supersed": 23, "recov": [23, 82, 84, 86, 87, 88, 106, 107, 229, 247, 273, 300, 317, 325, 414], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 125, 127], "stride": [23, 27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 233, 234, 236, 237, 245, 260, 404, 415, 421], "jag": 23, "focu": [23, 403, 404, 405, 408, 409, 410, 415], "team": [23, 415, 416, 421], "cat": [23, 303, 310, 312, 313, 325, 330, 332, 334, 335, 415, 419, 421], "arang": [23, 99, 162, 243, 259, 291, 371, 398, 419], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 66, 71, 80, 86, 106, 131, 132, 142, 143, 152, 224, 294, 419], "data_split": 23, "got": [23, 410], "init_kl_coef": 24, "horizon": [24, 136, 137, 155, 156, 231, 257, 405], "kl": [24, 33, 58, 186, 321, 326], "describ": [24, 69, 170, 210, 220, 280, 281, 314, 366, 399, 403, 405, 415, 416, 417, 422], "ziegler": 24, "et": [24, 231], "relax": [24, 361], "penalti": [24, 58, 323, 326], "strai": [24, 58], "greater": [24, 80, 99, 106, 107, 250, 254, 312, 403, 404, 421], "increas": [24, 91, 207, 272, 273, 415, 416], "pull": [24, 419], "toward": [24, 215], "aggress": 24, "kl_coef": [24, 33, 58], "arxiv": [24, 51, 83, 86, 88, 98, 99, 118, 119, 120, 121, 131, 132, 136, 137, 139, 140, 148, 155, 156, 169, 192, 213, 230, 235, 236, 237, 238, 239, 240, 243, 244, 245, 252, 257, 264, 266, 267, 271, 272, 273, 274, 276, 277, 283, 292, 309, 310, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 328, 329, 332, 333, 334, 343, 348, 356, 418], "pdf": [24, 169, 235, 236, 237, 238, 239, 243, 271, 272, 273, 292, 312, 319, 323, 330, 333, 334, 343, 348, 356], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 415, 416], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 186], "newest": 24, "int8": [25, 122, 135, 146, 147, 167], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 118, 119, 122, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 162, 177, 267, 268, 271, 276, 308, 404, 405, 406, 408, 417, 419], "null": [25, 28, 29, 31, 32, 39, 40, 47, 48, 51, 60, 61, 65, 69, 71, 72, 73, 74, 75, 98, 99, 167], "denot": [25, 416], "nmber": 25, "clariti": 25, "rand": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 118, 119, 131, 132, 138, 142, 143, 153, 154, 163, 166, 175, 178, 194, 220, 231, 257, 295, 309, 310, 312, 313, 314, 316, 317, 318, 325, 327, 329, 330, 332, 334, 335, 417, 421, 422], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 422], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 126, 272, 273, 302, 361, 415], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 58, 60, 61, 69, 71, 72, 73, 74, 75, 98, 122, 126, 127, 144, 145, 151, 152, 179, 248, 249, 252, 253, 403, 415, 419], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 126, 302, 361, 415, 417], "broadcast": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 233, 234, 255, 278, 279], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 63, 64, 69, 70, 71, 72, 73, 74, 75, 118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 153, 154, 173, 175, 178, 192, 206, 210, 211, 213, 215, 217, 219, 298, 308, 327, 403, 404, 405, 417, 419], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 417, 422], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 403], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 398], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 259, 268, 295, 399], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 60, 61, 69, 71, 72, 73, 74, 75, 177, 228, 229, 252, 272, 273, 286, 291, 292, 295, 296, 297, 298, 299, 370, 398, 421, 422], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 100, 327, 422], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152, 188, 217, 228, 229, 230, 233, 234, 251, 255, 258, 259, 265, 281, 282, 295, 299, 311, 312, 326, 329, 376, 378, 394, 398, 400, 406, 408, 416, 422], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 206, 246, 295, 299, 405, 415, 416], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 64, 69, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 192, 213, 215, 298], "to_categor": [25, 26, 30, 34, 41, 42, 43, 44, 49], "to_categorical_spec": [25, 26, 30, 34, 41, 42, 43, 44, 49], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 122, 126, 144, 145, 151, 152], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75, 210, 211, 265, 280, 394], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "to_one_hot": [25, 26, 30, 34, 41, 42, 43, 44, 49], "hot": [25, 26, 30, 34, 41, 42, 43, 44, 49, 118, 119, 125, 127, 128, 131, 132, 136, 137, 139, 140, 142, 143, 146, 147, 148, 153, 154, 155, 156, 162, 163, 177, 243, 268, 269, 275, 291, 292, 296, 297, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 406], "categ": [25, 26, 30, 34, 43, 44, 295], "categ_sampl": [25, 26, 30, 34, 43, 44, 49], "onehot_sampl": [25, 26, 30, 34, 43, 44], "to_one_hot_spec": [25, 26, 30, 34, 41, 42, 43, 44, 49], "categoricalbox": [25, 26, 30, 34, 43, 44, 49, 145, 408, 415, 416, 422], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 71, 72, 73, 74, 75], "update_mask": [25, 26, 30, 34, 41, 42, 43, 44, 49], "outcom": [25, 26, 30, 34, 41, 42, 43, 44, 49, 241, 280, 327, 415], "disabl": [25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 211, 219, 251, 282, 361, 403, 415], "unmask": [25, 26, 30, 34, 41, 42, 43, 44, 49], "ts": [25, 26, 30, 34, 41, 42, 43, 44, 49], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 405, 406, 407, 415, 416, 419], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "child": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 404], "fn": [27, 38, 45, 53, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 219, 265, 392, 393], "recurs": [27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 76, 77, 122, 126, 144, 145, 151, 152, 219, 327], "children": [27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 122, 126, 144, 145, 151, 152, 219], "init_weight": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "m": [27, 38, 41, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 177, 219, 232, 299, 404, 417], "fill_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 404, 406, 422], "net": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 237, 239, 242, 245, 261, 309, 310, 312, 318, 325, 329, 330, 331, 332, 390, 404, 417, 418, 421], "in_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 233, 234, 236, 237, 238, 239, 245, 255, 260, 261, 263, 264, 287, 298, 306, 314, 316, 408, 409], "out_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 138, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 231, 233, 234, 236, 237, 238, 239, 244, 245, 250, 254, 255, 257, 260, 261, 263, 264, 287, 291, 298, 306, 314, 316, 398, 403, 406, 408, 409, 412, 421], "bia": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 211, 213, 215, 219, 230, 233, 234, 236, 237, 238, 239, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 261, 263, 264, 265, 272, 273, 298, 305, 307, 308, 312, 327, 332, 399, 403, 404, 405, 406, 416], "requires_grad": [27, 38, 45, 54, 55, 59, 64, 118, 119, 122, 126, 144, 145, 151, 152, 186, 209, 211, 219, 271, 312, 332], "bfloat16": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "datatyp": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 419], "member": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 327, 363], "xdoctest": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 209, 210, 211, 213, 215, 219, 298, 312, 327, 332], "buf": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "20l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 327], "1l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 327], "5l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 327], "__call__": [27, 38, 45, 53, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 299, 400], "doubl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 175, 176, 178, 192, 206, 210, 211, 213, 215, 219, 298, 314, 319, 324, 330, 333, 341, 403, 404, 405, 406, 422], "eval": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 211, 217, 219, 398, 403, 404, 405], "evalu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 127, 136, 137, 144, 145, 151, 152, 211, 219, 241, 258, 259, 268, 282, 330, 385, 386, 404, 405, 412], "dropout": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 211, 219, 232, 248, 250, 252, 254, 255, 398, 406], "batchnorm": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 211, 219, 230], "comparison": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 211, 219, 327, 403, 404], "similar": [27, 38, 45, 50, 52, 54, 55, 56, 57, 59, 64, 86, 122, 126, 144, 145, 146, 147, 151, 152, 173, 192, 206, 210, 211, 213, 214, 215, 217, 219, 287, 289, 295, 298, 299, 399, 403, 404, 405, 406, 408, 409, 410, 411, 417, 419, 422], "extra_repr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "recip": [27, 38, 53, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305], "silent": [27, 38, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 262, 265, 266, 267, 270, 272, 273, 276, 277, 279, 284, 290, 292, 294, 297, 302, 305], "get_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "get_submodul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "qualifi": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "referenc": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "attributeerror": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "resolv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "someth": [27, 38, 45, 54, 55, 59, 64, 122, 126, 135, 144, 145, 151, 152, 219, 397, 404, 405, 417, 422], "get_extra_st": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 217, 219], "set_extra_st": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 217, 219], "picklabl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 217, 219], "pickl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 217, 219], "get_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "net_b": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "net_c": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "conv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 233, 234, 404], "conv2d": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 234, 236, 237, 245, 260], "kernel_s": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 233, 234, 236, 237, 245, 260, 266, 404, 421], "diagram": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "degre": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "named_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "o": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 253], "half": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298, 403], "ipu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "strict": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "descend": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "get_swap_module_params_on_convers": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "persist": [27, 36, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 226, 312, 332], "enforc": [27, 38, 45, 54, 55, 59, 64, 105, 122, 126, 144, 145, 151, 152, 209, 211, 219, 300, 312, 332, 417], "preserv": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "missing_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "unexpected_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "namedtupl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "l": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 248, 252, 342, 405, 417], "idx": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "mtia": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "named_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "remove_dupl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 327], "prepend": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 327], "running_var": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "named_children": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "conv4": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "conv5": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "memo": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "named_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 186, 219, 327], "register_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "removablehandl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "favor": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 405], "register_full_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_buff": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "running_mean": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "alongsid": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 411], "num_featur": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 230], "register_forward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 243, 275], "with_kwarg": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "always_cal": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_module_forward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "regardless": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 311, 326, 329], "register_forward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "invok": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "And": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 409], "forward_pr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_module_forward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "grad_input": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "grad_output": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "subsequ": [27, 38, 45, 54, 55, 59, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 165, 219, 406, 415], "technic": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 404, 406, 408], "caller": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_module_full_backward_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_full_backward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "backward_pr": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_module_full_backward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_load_state_dict_post_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "incompatible_kei": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "thrown": [27, 38, 45, 54, 55, 59, 60, 64, 122, 126, 144, 145, 151, 152, 219, 419], "register_load_state_dict_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "local_metadata": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "error_msg": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "noqa": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "b950": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_modul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 400], "alia": [27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 101, 108, 110, 114, 122, 126, 144, 145, 151, 152, 219], "register_paramet": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_state_dict_post_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "register_state_dict_pre_hook": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "keep_var": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "requires_grad_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "autograd": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332], "freez": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 217, 219], "finetun": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "gan": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "set_submodul": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "overid": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "share_memori": [27, 38, 45, 54, 55, 59, 64, 122, 123, 126, 144, 145, 151, 152, 219, 403], "share_memory_": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219, 421], "destin": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 168, 175, 176, 178, 209, 211, 213, 217, 219, 226, 312, 332, 363], "averag": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 217, 219, 272, 273, 312, 320, 321, 332, 378, 403, 405], "shallow": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 332, 406], "pleas": [27, 38, 45, 54, 55, 59, 64, 68, 84, 122, 125, 126, 144, 145, 146, 147, 151, 152, 166, 169, 207, 209, 211, 219, 260, 261, 262, 312, 332, 397], "detach": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 209, 211, 219, 312, 323, 327, 332, 334, 343, 344, 345, 346, 403], "non_block": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298, 406], "memory_format": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "channels_last": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "unchang": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 177, 192, 206, 210, 211, 213, 215, 219, 246, 298, 377, 403, 419], "tri": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298, 411], "pin": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "4d": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "ignore_w": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "1913": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "3420": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "5113": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "2325": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "torch_doctest_cuda1": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "gpu1": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "1914": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "5112": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "2324": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "float16": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 249, 253, 298], "cdoubl": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "3741": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "j": [27, 38, 45, 51, 54, 55, 59, 64, 98, 99, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298, 400, 409], "2382": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "5593": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "4443": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "complex128": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "6122": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "1150": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 173, 192, 206, 210, 211, 213, 215, 219, 298], "to_empti": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "dst_type": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "xpu": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "set_to_non": [27, 38, 45, 54, 55, 59, 64, 122, 126, 144, 145, 151, 152, 219], "upper": [28, 104, 187], "continuousbox": [28, 31, 71, 122, 126, 144, 145, 151, 152, 224, 405, 406, 415, 416, 417, 422], "inst": 30, "descript": [31, 155, 165, 404, 405], "akin": 31, "unnam": 31, "compositespec": [31, 396, 417, 422], "constraint": [31, 138, 281, 405, 415, 416], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 170, 403], "_nodefault": [31, 32, 39, 50, 52, 57, 61], "is_empti": [31, 32, 39, 61, 417], "include_nest": [31, 32, 39, 61], "leaves_onli": [31, 32, 39, 61], "is_leaf": [31, 32, 39, 61], "_compositespecitemsview": [31, 32, 39, 61], "_compositespeckeysview": [31, 32, 39, 61], "reflect": [31, 32, 39, 61, 127, 146, 147, 216, 226, 327, 383, 404, 405, 406, 416], "lock_": [31, 32, 39, 61], "succeed": [31, 32, 39, 61], "selected_kei": [31, 32, 39, 61, 201, 403], "unlock_": [31, 32, 39, 61], "unlock": [31, 32, 39, 50, 52, 57, 61], "_compositespecvaluesview": [31, 32, 39, 61], "multipli": [33, 248, 252, 309, 310, 311, 312, 318, 326, 328, 329, 330, 332, 378, 403, 415], "calcul": [33, 58, 197, 248, 309, 311, 316, 326, 329, 331, 334], "shift_kei": [35, 37, 46, 62], "is_full_kei": [35, 37, 46, 62], "is_ful": [35, 37, 46, 62], "tempfil": [35, 50, 51, 52, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 101, 390, 403, 404, 415, 419], "register_save_hook": [35, 51, 56, 62, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "temporarydirectori": [35, 50, 51, 52, 56, 57, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 403, 404, 415, 419], "tmpdir": [35, 51, 56, 62, 65, 66, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 403, 404, 415], "rb_load": [35, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "register_load_hook": [35, 51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "filesystem": [36, 419], "ted2nest": [37, 396], "hash": [38, 54, 55, 59, 64], "stackedcomposit": [39, 396], "nvec": [41, 43], "remove_singleton": 41, "cardin": [41, 43, 243, 275, 291, 292, 297, 405], "ax": [41, 263, 264, 415], "Not": [41, 42, 56, 118, 119, 131, 209, 250, 254], "neither": [41, 42, 43, 44, 86, 153, 417], "use_regist": 43, "mone_hot": [43, 44], "boxlist": [43, 44], "gamma": [45, 197, 219, 257, 309, 310, 312, 313, 314, 316, 318, 319, 320, 322, 325, 327, 329, 330, 331, 332, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 390, 399, 403, 404, 405, 415, 416, 421], "sutton": [45, 399, 415, 416], "1988": 45, "tempor": [45, 250, 254, 257, 344, 345, 350, 351], "44": [45, 404, 406, 416], "discount": [45, 86, 123, 197, 219, 310, 316, 319, 320, 322, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 399, 404, 405, 415, 416], "ahead": [45, 219, 422], "bias": [45, 248, 249, 252, 253, 305, 399, 403], "mitig": 45, "multisteptransform": [45, 396], "99": [45, 197, 217, 257, 322, 337, 342, 349, 390, 403, 404, 405, 409, 412, 415, 416, 421], "nontermin": 45, "original_reward": 45, "newli": [45, 122, 126, 144, 145, 151, 152], "OR": 45, "row": [46, 63, 131, 132], "shae": 47, "nontensordata": [47, 80, 86, 142, 143, 361], "nontensor": [48, 396], "one_hot": [49, 243, 259, 275], "one_hot_sampl": 49, "chosen_data": [50, 89], "rewarddata": [50, 89, 396], "rejected_data": [50, 89], "from_dataset": [50, 52, 89], "dataset_nam": [50, 52, 58, 70, 89, 141], "max_length": [50, 52, 53, 67, 70, 89, 412], "550": [50, 52, 58, 70, 89, 106, 107], "root_dir": [50, 52, 70, 89], "from_disk": [50, 52, 70, 89], "carperai": [50, 52, 58, 70], "openai_summarize_comparison": [50, 52, 70], "sequen": [50, 52], "load_from_disk": [50, 52, 70, 89], "load_dataset": [50, 52, 70, 89], "attention_mask": [50, 52, 53, 57, 58, 67, 70, 89], "92534": 50, "input_id": [50, 52, 53, 57, 58, 67, 70, 89], "end_scor": [50, 57, 58, 89], "sub_data": [50, 52], "from_tensordict": [50, 52, 57], "non_tensordict": [50, 52, 57], "getattr": [50, 52, 57], "tensorclass": [50, 52, 57, 89, 93, 94, 114], "pathlib": [50, 52, 57, 93], "load_memmap": [50, 52, 57], "load_": [50, 52, 57], "load_memmap_": [50, 52, 57], "fetch": [50, 52, 57, 118, 119, 120, 121, 186, 408, 418, 419, 422], "fromkei": [50, 52, 57], "memmap": [50, 52, 57, 93, 144, 151, 217, 363, 365, 377, 419], "saved_td": [50, 52, 57], "td_load": [50, 52, 57], "fake": [50, 52, 57, 122, 126, 144, 145, 151, 152, 403, 404], "_subclass": [50, 52, 57], "faketensormod": [50, 52, 57], "faketensor": [50, 52, 57], "from_flatten": [50, 52, 57], "attemptedli": [50, 52, 57], "copy_exist": [50, 52, 57], "return_earli": [50, 52, 57], "share_non_tensor": [50, 52, 57], "existsok": [50, 52, 57, 93], "mimic": [50, 52, 57, 122, 126, 144, 145, 151, 152], "cross": [50, 52, 57, 231], "anymor": [50, 52, 57, 211, 298], "tensordictfutur": [50, 52, 57], "serialis": [50, 52, 57], "deepli": [50, 52, 57], "insid": [50, 52, 57, 144, 422], "memmap_": [50, 52, 57, 217], "memmap_lik": [50, 52, 57], "contentless": [50, 52, 57], "1_000_000": [50, 51, 52, 56, 57, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 106, 403, 406, 415], "alloc": [50, 52, 57, 94, 258, 259, 403], "memmap_refresh_": [50, 52, 57], "refresh": [50, 52, 57, 412, 415, 416], "saved_path": [50, 52, 57], "setattr": [50, 52, 57], "tent": [50, 52, 57, 70], "to_tensordict": [50, 52, 57, 406], "retain_non": [50, 52, 57], "discrard": [50, 52, 57], "switch": [50, 52, 57, 251, 282, 361], "alpha": [51, 65, 98, 99, 233, 234, 236, 237, 238, 239, 245, 260, 310, 312, 318, 328, 330, 332, 334, 403, 419, 421], "ep": [51, 65, 98, 99, 188, 217, 230, 272, 273, 311, 333, 378, 403, 404, 406, 409, 412], "1e": [51, 65, 98, 99, 188, 217, 230, 241, 244, 265, 280, 403, 404, 405, 416], "08": [51, 65, 98, 99, 403, 404, 405, 415], "pin_memori": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 191, 403, 421], "schaul": [51, 98, 99], "quan": [51, 98, 99], "antonogl": [51, 98, 99], "silver": [51, 98, 99], "2015": [51, 98, 99], "ab": [51, 83, 86, 88, 98, 99, 118, 119, 120, 121, 131, 132, 136, 137, 139, 140, 148, 155, 156, 168, 192, 213, 217, 230, 235, 240, 244, 245, 252, 257, 264, 266, 267, 274, 276, 277, 283, 309, 310, 314, 315, 316, 317, 320, 321, 322, 324, 325, 328, 329, 332, 418], "1511": [51, 98, 99, 245], "05952": [51, 98, 99], "expon": [51, 65, 98, 99], "\u03b1": [51, 65, 98, 99], "delta": [51, 65, 98, 99, 248, 252, 280, 295, 299, 396, 399, 415], "1_000": [51, 56, 65, 66, 415, 419], "merg": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 417], "mini": [51, 56, 65, 66, 80, 82, 83, 84, 85, 86, 87, 88, 416], "decid": [51, 56, 65, 66, 415, 421], "meth": [51, 56, 65, 66, 250, 254, 327, 417], "incompat": [51, 56, 65, 66, 331, 419], "drop_last": [51, 56, 65, 66, 105, 107], "notion": [51, 56, 65, 66, 271], "caution": [51, 56, 65, 66, 105, 221, 422], "codebas": [51, 56, 65, 66, 417], "approach": [51, 56, 65, 66, 188, 230, 260, 261, 334, 403, 405, 409, 410, 415, 422], "return_info": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 98, 99, 101, 419], "tensordictprioritizedreplaybuff": [51, 396, 421], "simplifi": [51, 408, 417, 419], "_weight": [51, 65, 98, 99, 419, 421], "update_prior": [51, 98, 99, 377, 400, 404, 419, 421], "36278465": 51, "invert": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 307, 405], "tqdm": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 380, 403, 405, 406, 415, 416, 417], "randomsampl": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 403, 415], "td_error": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 312, 313, 314, 316, 317, 318, 319, 325, 327, 330, 332, 334, 335, 341, 403, 409, 419, 421], "update_tensordict_prior": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 403, 419, 421], "insert_transform": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 164, 211], "insert": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 101, 102, 112, 113, 116, 117, 164, 173, 211, 212], "set_sampl": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "set_storag": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "set_writ": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "write_count": [51, 56, 65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101], "prompt_rindex": [52, 53, 58], "promptdatatldr": 52, "116722": 52, "prompt": [53, 58], "return_tensordict": [53, 67], "text": [53, 58, 67, 84, 248, 249, 252, 253, 272, 273, 405], "tensodict": [53, 67], "orign": [53, 54, 64, 67], "valid_sampl": 53, "eough": 53, "toknen": 53, "meet": 53, "criterion": 53, "autotoken": [53, 67, 70], "from_pretrain": [53, 58, 67], "gpt2": [53, 58, 67, 70, 235, 240, 270], "pad_token": [53, 67], "eos_token": 53, "enough": [53, 419], "inde": [53, 177, 405, 417], "index_kei": [54, 64], "_index": [54, 64], "hash_kei": 54, "_hash": 54, "hash_modul": [54, 59, 64], "siphash": [54, 55, 64, 396], "hash_to_int": 54, "hashtoint": [54, 396], "query_modul": [54, 64], "key1": [54, 64, 170, 371, 379], "key2": [54, 64, 170, 371, 379], "write_hash": 54, "is_tdmodule_compat": [54, 64], "reset_out_kei": [54, 64], "mod": [54, 64, 186, 232, 250, 254, 294, 302, 406, 412], "select_out_kei": [54, 64, 309, 310, 312, 313, 317, 318, 325, 329, 330, 332, 334, 335], "reset_parameters_recurs": [54, 64], "relu": [54, 64, 138, 231, 240, 257, 265, 308], "old_param": [54, 64], "bork": [54, 64], "dork": [54, 64], "reset_paramet": [54, 64, 262], "from_modul": [54, 64, 243, 298, 301, 421], "rid": [54, 64], "out_keys_sourc": [54, 64], "rubric": [54, 64, 132, 188, 301], "revert": [54, 64, 221, 408, 419], "seq": [54, 64, 232, 248, 250, 252, 254, 294, 406, 412, 414], "z": [54, 64, 249], "n_compon": 55, "dtype_cast": 55, "as_tensor": [55, 59], "init_method": 55, "emb": [55, 406], "sklearn": [55, 85, 141], "byte": [55, 59], "builtin": [55, 59], "pythonhashse": [55, 59], "todo": [55, 122, 126, 144, 145, 151, 152], "storagecheckpointerbas": [56, 108], "roundrobinwrit": [56, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88], "depth": [56, 69, 122, 126, 138, 144, 145, 148, 151, 152, 231, 233, 234, 236, 237, 238, 239, 244, 245, 255, 257, 260, 261, 262, 266, 267, 291, 398, 404, 407, 409, 410, 414, 415, 416, 419], "_pytre": [56, 419], "tree_map": [56, 419], "did": [56, 216, 349, 404, 405, 410, 419, 422], "assert0": [56, 419], "ref_model": 58, "reward_model": [58, 304], "max_new_token": 58, "score_clip": 58, "kl_schedul": 58, "klcontrollerbas": 58, "num_step": 58, "causal": 58, "sentenc": 58, "frozen": [58, 186, 217], "gpt2rewardmodel": 58, "get_dataload": [58, 396], "promptdata": [58, 396], "gpt2lmheadmodel": 58, "dl": 58, "block_siz": [58, 89], "tensorclass_typ": [58, 89], "openai_summarize_tldr": 58, "config_class": 58, "model_path": 58, "rollout_from_model": 58, "rollout_from_data": 58, "600": [58, 411, 419], "reward_kl": [58, 186], "reward_raw": 58, "sample_log_prob": [58, 287, 288, 289, 295, 299, 301, 329, 405, 408, 416], "create_rollout_td": 58, "log_prob": [58, 241, 258, 259, 268, 271, 282, 299, 312], "log_ratio": 58, "replic": [58, 399], "rindex": 58, "eo": 58, "term": [58, 186, 252, 253, 263, 264, 308, 309, 318, 382, 404, 405, 407, 408, 416], "generation_config": 58, "generationconfig": 58, "ti": [58, 352, 353, 354, 355, 357, 358, 359, 360, 404], "log_probs_gen": 58, "logprobs_of_label": 58, "hash_a": 59, "4669941682990263259": 59, "3778166555168484291": 59, "9122128731510687521": 59, "hash_b": 59, "heterogen": [60, 61, 135, 146, 147, 221, 260, 261, 403, 404], "220": 62, "resembl": 64, "querymodul": [64, 396], "tensormap": [64, 396], "collat": [64, 101], "subtyp": 64, "embedding_storag": 64, "tensor_dict_storag": 64, "new_index": 64, "key3": 64, "retrieve_valu": 64, "from_tensordict_pair": 64, "storage_constructor": 64, "write_fn": 64, "tensordictstorag": 64, "thumb": [64, 144, 405], "lazydynamicstorag": 64, "fixedstorag": 64, "randomprojectionhash": [64, 396], "priority_kei": [65, 66, 81, 98, 312, 314, 317, 318, 319, 325, 327, 330, 332, 334, 335, 341, 419, 421], "reduct": [65, 98, 99, 112, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335], "prioritizedreplaybuff": [65, 396, 421], "min": [65, 98, 99, 112, 272, 273, 282, 310, 311, 312, 318, 328, 330, 332, 404, 405], "median": [65, 98, 99, 112, 131, 132, 162, 295, 299], "include_info": [65, 66, 80, 81, 82, 83, 84, 85, 86, 87, 88], "huggingfac": [67, 83, 88, 293], "co": [67, 179, 417], "pad_trunc": 67, "am": 67, "me": 67, "reassur": 67, "ok": 67, "tensor_spec": [69, 163, 220, 227, 317, 318, 329, 331], "primarili": [69, 193, 408], "dataclass": [69, 327], "educ": 69, "guess": 69, "knowledg": [69, 122, 126, 144, 145, 151, 152, 409, 411], "tokenizer_fn": 70, "tensordicttoken": [70, 396], "pre_tokenization_hook": 70, "valid_s": 70, "tokenizer_class": 70, "tokenizer_model_nam": 70, "tokein": 70, "elementwis": 70, "vocabulari": 70, "loader": [70, 405], "185068": 70, "dataset_to_tensordict": 70, "data_dir": 70, "batch_dim": [70, 394], "valid_mask_kei": 70, "conver": 70, "batch_dimens": 70, "filder": 70, "from_dict": 70, "data_memmap": 70, "recurse_through_entri": 77, "recurse_through_stack": 77, "consolid": 77, "dataset_id": [80, 82, 83, 84, 86, 87, 88], "num_proc": 80, "slice_len": [80, 86, 99, 106, 107, 363], "strict_len": 80, "arari": 80, "2600": 80, "million": [80, 406], "consequ": [80, 91, 252, 410], "50x10": 80, "available_dataset": [80, 81, 82, 83, 84, 85, 86, 87, 88, 106, 107], "ataridqn": 80, "immutabledatasetwrit": [80, 81, 82, 83, 84, 85, 86, 87, 88], "shorter": [80, 86, 99, 106, 107], "Be": [80, 86, 99, 106, 107], "game_nam": 80, "krull": 80, "1d": [80, 98, 99, 106, 107, 112], "cheapli": 80, "invalid_rang": 80, "999998": 80, "999999": 80, "add_count": 80, "84": [80, 196, 404, 406], "valueestim": [80, 309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 337, 341, 396, 399, 403, 415, 416], "convolut": [80, 233, 234, 236, 237, 260, 278, 408], "2657628": 80, "2657629": 80, "2657630": 80, "2657631": 80, "2657632": 80, "2657633": 80, "2657634": 80, "2657635": 80, "2657636": 80, "2657637": 80, "2657638": 80, "2657639": 80, "2657640": 80, "2657641": 80, "2657642": 80, "2657643": 80, "2657644": 80, "2657645": 80, "2657646": 80, "2657647": 80, "2657648": 80, "2657649": 80, "2657650": 80, "2657651": 80, "2657652": 80, "2657653": 80, "2657654": 80, "2657655": 80, "2657656": 80, "2657657": 80, "2657658": 80, "2657659": 80, "2657660": 80, "2657661": 80, "2657662": 80, "2657663": 80, "2657664": 80, "2657665": 80, "2657666": 80, "2657667": 80, "2657668": 80, "2657669": 80, "2657670": 80, "2657671": 80, "2657672": 80, "2657673": 80, "2657674": 80, "2657675": 80, "2657676": 80, "2657677": 80, "2657678": 80, "2657679": 80, "2657680": 80, "2657681": 80, "2657682": 80, "2657683": 80, "2657684": 80, "2657685": 80, "2657686": 80, "2657687": 80, "2657688": 80, "2657689": 80, "2657690": 80, "2657691": 80, "1995687": 80, "1995688": 80, "1995689": 80, "1995690": 80, "1995691": 80, "1995692": 80, "1995693": 80, "1995694": 80, "1995695": 80, "1995696": 80, "1995697": 80, "1995698": 80, "1995699": 80, "1995700": 80, "1995701": 80, "1995702": 80, "1995703": 80, "1995704": 80, "1995705": 80, "1995706": 80, "1995707": 80, "1995708": 80, "1995709": 80, "1995710": 80, "1995711": 80, "1995712": 80, "1995713": 80, "1995714": 80, "1995715": 80, "1995716": 80, "1995717": 80, "1995718": 80, "1995719": 80, "1995720": 80, "1995721": 80, "1995722": 80, "1995723": 80, "1995724": 80, "1995725": 80, "1995726": 80, "1995727": 80, "1995728": 80, "1995729": 80, "1995730": 80, "1995731": 80, "1995732": 80, "1995733": 80, "1995734": 80, "1995735": 80, "1995736": 80, "1995737": 80, "1995738": 80, "1995739": 80, "1995740": 80, "1995741": 80, "1995742": 80, "1995743": 80, "1995744": 80, "1995745": 80, "1995746": 80, "1995747": 80, "1995748": 80, "1995749": 80, "1995750": 80, "left": [80, 82, 86, 99, 106, 166, 173, 174, 175, 176, 180, 186, 192, 194, 195, 201, 204, 207, 210, 213, 215, 219, 246, 260, 404, 405, 410, 411], "untouch": [80, 86, 166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 210, 219], "_max_run": 80, "dataset_asterix": 80, "asterix": 80, "dataset_pong": 80, "sample_from_al": [80, 101, 104], "buffer_id": [80, 104, 110], "hidden": [80, 144, 151, 168, 236, 244, 248, 249, 250, 252, 253, 254, 266, 267, 276, 277, 287, 288, 289, 290, 298, 301, 311, 326, 329, 398, 406, 414, 421], "data_path": [80, 81, 82, 83, 84, 85, 86, 87, 88], "data_path_root": [80, 81, 82, 83, 84, 85, 86, 87, 88], "delet": [80, 81, 82, 83, 84, 85, 86, 87, 88, 170, 370], "chunksiz": [80, 81, 82, 83, 84, 85, 86, 87, 88], "pool": [80, 81, 82, 83, 84, 85, 86, 87, 88, 207], "max_tasks_per_child": [80, 81, 82, 83, 84, 85, 86, 87, 88], "worker_thread": [80, 81, 82, 83, 84, 85, 86, 87, 88], "index_with_gener": [80, 81, 82, 83, 84, 85, 86, 87, 88], "pbar": [80, 81, 82, 83, 84, 85, 86, 87, 88, 403, 405, 406, 415, 416, 417], "num_fram": [80, 81, 82, 83, 84, 85, 86, 87, 88], "unitari": [80, 81, 82, 83, 84, 85, 86, 87, 88, 417], "minariexperiencereplai": [80, 81, 82, 83, 85, 86, 87, 88], "1000000": [80, 81, 82, 83, 84, 85, 86, 87, 88], "distance_from_origin": [80, 81, 82, 83, 84, 85, 86, 87, 88], "forward_reward": [80, 81, 82, 83, 84, 85, 86, 87, 88], "qpo": [80, 81, 82, 83, 84, 85, 86, 87, 88], "qvel": [80, 81, 82, 83, 84, 85, 86, 87, 88], "reward_ctrl": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "reward_forward": [80, 81, 82, 83, 84, 85, 86, 87, 88], "reward_surv": [80, 81, 82, 83, 84, 85, 86, 87, 88], "x_posit": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "x_veloc": [80, 81, 82, 83, 84, 85, 86, 87, 88, 126, 144], "y_posit": [80, 81, 82, 83, 84, 85, 86, 87, 88], "y_veloc": [80, 81, 82, 83, 84, 85, 86, 87, 88], "achieved_go": [80, 81, 82, 83, 84, 85, 86, 87, 88], "desired_go": [80, 81, 82, 83, 84, 85, 86, 87, 88], "27": [80, 81, 82, 83, 84, 85, 86, 87, 88, 118, 119, 144, 151, 404, 405, 415, 418], "_collate_id": [80, 81, 82, 83, 84, 85, 86, 87, 88], "0x120e21dc0": [80, 81, 82, 83, 84, 85, 86, 87, 88], "cattensor": [80, 81, 82, 83, 84, 85, 86, 87, 88, 122, 126, 144, 145, 151, 152, 403, 414, 417, 422], "cat_tensor": [80, 81, 82, 83, 84, 85, 86, 87, 88], "cat_next_tensor": [80, 81, 82, 83, 84, 85, 86, 87, 88], "new_storag": [80, 81, 82, 83, 84, 85, 86, 87, 88], "31": [80, 81, 82, 83, 84, 85, 86, 87, 88, 131, 132, 404, 406, 418], "full_storag": [80, 81, 82, 83, 84, 85, 86, 87, 88], "0x168406fc0": [80, 81, 82, 83, 84, 85, 86, 87, 88], "from_env": 82, "use_truncated_as_don": 82, "direct_download": 82, "terminate_on_end": 82, "env_kwarg": [82, 87, 88, 166, 392, 393, 403], "reconstruct": [82, 106, 107, 321, 403, 422], "get_dataset": 82, "qlearning_dataset": 82, "fewer": [82, 99, 106], "unexpectedli": 82, "traj_split": 82, "observationnorm": [82, 217, 394, 403, 404, 405, 406, 421], "maze2d": 82, "umaz": 82, "loc": [82, 122, 126, 144, 145, 151, 152, 186, 188, 199, 217, 251, 265, 281, 282, 287, 288, 289, 295, 299, 301, 309, 310, 312, 325, 329, 330, 331, 332, 384, 394, 398, 403, 404, 405, 406, 408, 416, 421], "gen": 83, "dgrl": 83, "accompani": [83, 166, 204], "gap": 83, "2312": 83, "05742": 83, "gen_dgrl": 83, "procgen": 83, "bigfish": 83, "bossfight": 83, "1m_e": 83, "1m_": 83, "comma": 83, "npy": 83, "extract": [83, 165, 293, 403, 405, 421], "mmap": [83, 87, 88], "minut": [83, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "internet": [83, 88], "connect": [83, 88, 153], "minari": 84, "websit": [84, 86], "currenrtli": 84, "minari_data": 84, "door": 84, "torchrl_logg": [84, 412], "28": [84, 260, 404, 418], "door_body_po": 84, "dua": 85, "graff": 85, "2017": 85, "uci": 85, "archiv": 85, "ic": 85, "edu": 85, "ml": [85, 153, 154], "adult_num": [85, 141], "adult_onehot": [85, 141], "mushroom_num": [85, 141], "mushroom_onehot": [85, 141], "covertyp": [85, 141], "shuttl": [85, 141], "magic": [85, 141, 407], "shuffl": [86, 105, 107, 416], "embodi": [86, 418], "institut": 86, "demonstr": [86, 405, 410, 415, 416, 417, 419, 422], "527": 86, "skill": 86, "160266": 86, "googl": [86, 87, 118, 119, 136, 137, 142, 143, 230, 405, 406, 415, 416], "open_x_embodi": 86, "2310": [86, 148], "08864": 86, "language_instruct": 86, "get_non_tensor": 86, "nor": [86, 153], "insuffici": 86, "chosen": [86, 155, 156, 205, 206, 274, 275, 283, 297, 363, 398, 411], "openx": 86, "__will": 86, "change__": 86, "randomli": [86, 105, 152, 187, 188, 206, 246, 295, 299, 408, 415, 416, 417, 419], "crop": [86, 171, 193, 363], "modal": [86, 403], "cmu_stretch": [86, 363], "is_init": [86, 88, 168, 185, 250, 254, 272, 273, 294, 306, 406], "language_embed": 86, "512": [86, 245, 404], "lift": 86, "green": [86, 415], "garbag": 86, "lid": 86, "roboset": 87, "h5": [87, 88, 91], "roboh": [87, 148], "concis": [87, 409], "75": [87, 403, 404, 406, 419], "totensor": 88, "image_s": 88, "v": [88, 217, 248, 249, 252, 253, 287, 317, 325, 332, 403, 404], "npz": 88, "2206": [88, 139, 140], "04779": [88, 310, 316], "vd4rl": 88, "squar": [88, 171, 174, 251, 281, 282, 363], "rectangular": [88, 233, 234], "walker_walk": 88, "64px": 88, "height": [88, 171, 174, 196], "veloc": [88, 120, 121, 122, 126, 144, 145, 151, 152, 169, 415, 416, 417, 422], "infinit": [89, 136, 137, 155, 156, 410, 419], "block": [89, 92, 117, 398, 406, 415], "pairwisedataset": [89, 396], "256": [89, 136, 137, 240, 404, 405, 415, 416], "checkpoint_fil": 91, "h5_kwarg": 91, "iff": 91, "suffix": [91, 376], "h5py": 91, "create_dataset": 91, "temporarili": [91, 221, 410, 419], "immut": [92, 122, 126, 144, 151, 195, 211], "piec": [92, 102, 113, 116, 117, 403, 404, 405, 411, 415, 416, 417, 419], "scratch_dir": [93, 403, 419], "sent": [93, 94, 114, 217], "mistak": [93, 94, 114], "overewritten": 93, "tensorstoragecheckpoint": 93, "main_ckpt_dir": 93, "rb_memmap": 93, "10_000_000": 93, "myclass": [93, 94, 114], "foo": [93, 94, 114, 290, 419, 422], "bar": [93, 94, 114, 290, 373, 374, 376, 380, 400, 404], "attach": [93, 94, 95, 108, 110, 114, 404], "entiti": [93, 94, 95, 108, 110, 114], "zero_": [94, 114, 224], "unlimit": 95, "liststoag": 96, "max_capac": [98, 99, 403, 419], "max_priority_within_buff": [98, 99], "data_0": 98, "data_1": 98, "smoothen": 98, "tdrb": 98, "pack": [98, 248, 252, 405, 407, 422], "nd": [98, 99], "sum_tre": [98, 99], "min_tre": [98, 99], "end_kei": [99, 106, 107], "cache_valu": [99, 106, 107], "closer": 99, "readili": [99, 106, 107], "conjunct": [99, 106, 107, 404], "Will": [99, 106, 139, 363], "buffer0": [99, 106], "immutablewrit": [99, 106], "buffer1": [99, 106], "other_sampl": [99, 106], "short": [99, 106, 107, 118, 119, 131, 132, 144, 221, 252, 253, 404, 405, 407, 408, 416, 419], "tolist": 99, "120110917137936e": 99, "06": [99, 241, 280, 403, 404, 405, 415, 418], "storageensembl": [101, 104], "samplerensembl": 101, "writerensembl": [101, 110], "num_buffer_sampl": [101, 104], "ensembl": [101, 104, 110, 111, 117, 298, 330], "forbidden": 101, "0x13a2ef430": 101, "0x13a2f9310": 101, "interpol": [101, 196, 404, 406], "interpolationmod": [101, 406], "bilinear": [101, 196, 406], "0x13a2f9220": 101, "0x13a2f9f70": 101, "0x13a2d9b50": 101, "0x13a2f95b0": 101, "0x128648260": 101, "roundrobin": [102, 113], "incomplet": [105, 107], "fresh": 105, "haven": [105, 418], "remain": [105, 168, 176, 177, 186, 205, 264, 409], "draw": [105, 246], "slicesamplerwithoutreplac": [106, 419], "320": [106, 107, 120, 121, 402, 404, 420, 422], "700": [106, 107], "uniqu": [106, 107, 136, 137, 169, 179, 205, 206, 207, 209, 294, 370, 410, 419], "dataid": [106, 107], "__len__": 108, "rank_kei": 112, "rank": [112, 231], "samplerwithoutreplac": [112, 405, 416, 419], "get_insert_index": 112, "convers": [118, 119, 131, 132, 399], "2106": [118, 119, 315, 334], "13281": [118, 119], "categorical_action_encod": [118, 119, 122, 125, 126, 127, 128, 131, 132, 139, 140, 144, 145, 148, 151, 152], "frame_skip": [118, 119, 120, 121, 125, 126, 127, 128, 131, 132, 133, 134, 139, 140, 148, 183, 373, 376, 383, 400, 403, 404, 405, 421], "repeat": [118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 148, 231, 405, 415, 416, 417], "allow_done_after_reset": [118, 119, 120, 121, 122, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154], "toler": [118, 119, 120, 121, 125, 127, 128, 131, 132, 139, 140, 142, 143, 148, 153, 154, 241, 280], "availalb": [118, 119, 131, 132], "is_avail": [118, 119, 403, 404, 405, 406, 415, 416, 418], "els": [118, 119, 166, 248, 249, 252, 253, 266, 398, 400, 403, 404, 405, 406, 415, 416, 417, 418], "ant": [118, 119, 122, 126, 129, 144, 145, 151, 152, 418], "87": [118, 119, 404, 418], "acrobot": [118, 119, 120, 121, 422], "advant": [118, 119, 131, 132], "timer": [118, 119, 131, 132], "timeit": [118, 119, 131, 132], "310": [118, 119], "ms": [118, 119, 131, 132], "268": [118, 119], "433": [118, 119], "80": [118, 119, 403, 404, 405, 415, 416, 418], "213": [118, 119], "8605": [118, 119], "pipelineenv": 119, "get_environ": 119, "dm_control": [120, 121, 403, 414, 422], "2006": [120, 121, 310, 316], "12983": [120, 121], "task_nam": [120, 122, 126, 144, 145, 151, 152], "cheetah": [120, 121, 122, 126, 144, 145, 151, 152, 363, 403, 422], "240": [120, 121, 421, 422], "swingup": [120, 121, 422], "swingup_spars": [120, 121, 422], "ball_in_cup": [120, 121, 422], "catch": [120, 121, 422], "balance_spars": [120, 121, 422], "three_pol": [120, 121, 422], "two_pol": [120, 121, 422], "finger": [120, 121, 422], "turn_easi": [120, 121, 422], "turn_hard": [120, 121, 422], "fish": [120, 121, 422], "upright": [120, 121, 404, 422], "swim": [120, 121, 422], "hopper": [120, 121, 422], "hop": [120, 121, 422], "humanoid": [120, 121, 144, 151, 414, 422], "walk": [120, 121, 144, 151, 404, 414, 422], "run_pure_st": [120, 121, 422], "bring_bal": [120, 121, 422], "bring_peg": [120, 121, 422], "insert_bal": [120, 121, 422], "insert_peg": [120, 121, 422], "point_mass": [120, 121, 422], "reacher": [120, 121, 422], "swimmer": [120, 121, 422], "swimmer6": [120, 121, 422], "swimmer15": [120, 121, 422], "walker": [120, 121, 422], "dog": [120, 121, 422], "trot": [120, 121, 422], "humanoid_cmu": [120, 121, 422], "lqr": [120, 121, 422], "lqr_2_1": [120, 121, 422], "lqr_6_2": [120, 121, 422], "quadrup": [120, 121, 422], "escap": [120, 121, 422], "stacker": [120, 121, 422], "stack_2": [120, 121, 422], "stack_4": [120, 121, 422], "deviceless": 122, "run_type_check": [122, 138], "counterenv": 122, "discretebox": [122, 126, 144, 145, 151, 152], "sort": [122, 126, 144, 145, 151, 152, 170, 272, 273], "another_act": [122, 126, 144, 145, 151, 152], "mutabl": [122, 126, 144, 145, 151, 152], "_callabletransform": [122, 126, 144, 145, 151, 152], "batch_lock": [122, 124, 126, 144, 151, 166, 206, 211, 417], "done_keys_group": [122, 126, 144, 145, 151, 152], "outer": [122, 126, 144, 145, 151, 152, 400, 403, 404, 422], "another_don": [122, 126, 144, 145, 151, 152], "empty_cach": [122, 126, 144, 145, 151, 152, 211], "fake_tensordict": [122, 126, 144, 145, 151, 152, 404], "braxenv": [122, 126, 144, 145, 151, 152, 195, 396, 407], "envnam": [122, 126, 144, 145, 151, 152], "pipeline_st": [122, 126, 144, 145, 151, 152], "attibut": [122, 126, 144, 145, 151, 152], "maybe_reset": [122, 126, 144, 145, 151, 152], "speak": [122, 126, 144, 145, 151, 152, 403], "rand_act": [122, 126, 135, 144, 145, 146, 147, 151, 152, 166, 407], "register_gym": [122, 126, 144, 145, 151, 152, 407], "entry_point": [122, 126, 144, 145, 151, 152], "info_kei": [122, 126, 144, 145, 151, 152], "reward_threshold": [122, 126, 144, 145, 151, 152], "nondeterminist": [122, 126, 144, 145, 151, 152], "max_episode_step": [122, 125, 126, 127, 144, 145, 151, 152], "order_enforc": [122, 126, 144, 145, 151, 152, 421], "autoreset": [122, 126, 144, 145, 151, 152], "disable_env_check": [122, 125, 126, 139, 140, 144, 145, 151, 152], "apply_api_compat": [122, 126, 144, 145, 151, 152], "nasium": [122, 126, 144, 145, 151, 152], "scope": [122, 126, 144, 145, 151, 152, 422], "dmcontrolenv": [122, 126, 144, 145, 151, 152, 363, 396, 403, 407, 414, 422], "dmc": [122, 126, 144, 145, 151, 152], "removeemptyspec": [122, 126, 144, 145, 151, 152], "threshold": [122, 126, 144, 145, 151, 152, 246, 310, 311, 405], "learnt": [122, 126, 144, 145, 151, 152, 390], "checker": [122, 125, 126, 139, 140, 144, 145, 151, 152], "stepapicompat": [122, 126, 144, 145, 151, 152], "deem": [122, 126, 136, 137, 144, 145, 151, 152, 155, 156], "envgym": [122, 126, 144, 145, 151, 152], "0855": [122, 126, 144, 145, 151, 152], "0215": [122, 126, 144, 145, 151, 152], "0881": [122, 126, 144, 145, 151, 152], "0412": [122, 126, 144, 145, 151, 152], "1101": [122, 126, 144, 145, 151, 152], "0080": [122, 126, 144, 145, 151, 152], "0254": [122, 126, 144, 145, 151, 152], "0424": [122, 126, 144, 145, 151, 152], "9609e": [122, 126, 144, 145, 151, 152], "9776e": [122, 126, 144, 145, 151, 152], "04": [122, 126, 130, 144, 145, 151, 152, 403, 404, 405, 406, 418], "6347e": [122, 126, 144, 145, 151, 152], "3842e": [122, 126, 144, 145, 151, 152], "5338e": [122, 126, 144, 145, 151, 152], "3064e": [122, 126, 144, 145, 151, 152], "0381e": [122, 126, 144, 145, 151, 152], "6656e": [122, 126, 144, 145, 151, 152], "05": [122, 126, 144, 145, 151, 152, 230, 402, 403, 404, 415, 416, 417, 418, 420], "0204e": [122, 126, 144, 145, 151, 152], "action_spac": [122, 126, 144, 145, 151, 152, 179, 243, 275, 291, 292, 296, 297, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 406, 408, 412], "0833": [122, 126, 144, 145, 151, 152], "0275": [122, 126, 144, 145, 151, 152], "0612": [122, 126, 144, 145, 151, 152], "0770": [122, 126, 144, 145, 151, 152], "1256": [122, 126, 144, 145, 151, 152], "0082": [122, 126, 144, 145, 151, 152], "0186": [122, 126, 144, 145, 151, 152], "0476": [122, 126, 144, 145, 151, 152], "2221": [122, 126, 144, 145, 151, 152], "2256": [122, 126, 144, 145, 151, 152, 406], "5930": [122, 126, 144, 145, 151, 152], "6937": [122, 126, 144, 145, 151, 152], "5865": [122, 126, 144, 145, 151, 152], "5479": [122, 126, 144, 145, 151, 152], "0187": [122, 126, 144, 145, 151, 152], "6825": [122, 126, 144, 145, 151, 152], "5224": [122, 126, 144, 145, 151, 152], "0018": [122, 126, 144, 145, 151, 152], "1005": [122, 126, 144, 145, 151, 152], "0335": [122, 126, 144, 145, 151, 152], "0268": [122, 126, 144, 145, 151, 152], "0133": [122, 126, 144, 145, 151, 152], "0627": [122, 126, 144, 145, 151, 152], "0074": [122, 126, 144, 145, 151, 152], "0488": [122, 126, 144, 145, 151, 152], "0353": [122, 126, 144, 145, 151, 152], "0075": [122, 126, 144, 145, 151, 152], "0069": [122, 126, 144, 145, 151, 152], "0098": [122, 126, 144, 145, 151, 152], "0058": [122, 126, 144, 145, 151, 152], "0033": [122, 126, 144, 145, 151, 152], "0157": [122, 126, 144, 145, 151, 152], "0004": [122, 126, 144, 145, 151, 152], "0381": [122, 126, 144, 145, 151, 152], "0452": [122, 126, 144, 145, 151, 152], "11355747": [122, 126, 144, 145, 151, 152], "04257728": [122, 126, 144, 145, 151, 152], "00408397": [122, 126, 144, 145, 151, 152], "04155852": [122, 126, 144, 145, 151, 152], "0389733": [122, 126, 144, 145, 151, 152], "01409826": [122, 126, 144, 145, 151, 152], "0978704": [122, 126, 144, 145, 151, 152], "08808327": [122, 126, 144, 145, 151, 152], "03970837": [122, 126, 144, 145, 151, 152], "00535434": [122, 126, 144, 145, 151, 152], "02353762": [122, 126, 144, 145, 151, 152], "05116226": [122, 126, 144, 145, 151, 152], "02788907": [122, 126, 144, 145, 151, 152], "06848346": [122, 126, 144, 145, 151, 152], "05154399": [122, 126, 144, 145, 151, 152], "0371798": [122, 126, 144, 145, 151, 152], "05128025": [122, 126, 144, 145, 151, 152], "dydact": [122, 126, 144, 145, 151, 152], "gym_env": [122, 126, 144, 145, 151, 152, 421], "reset_kei": [122, 126, 144, 145, 151, 152, 169, 200, 205, 206, 207, 415], "multitask": [122, 126, 144, 145, 151, 152], "multiag": [122, 126, 135, 144, 145, 146, 147, 151, 152, 227, 261, 274, 283, 341], "another_reward": [122, 126, 144, 145, 151, 152], "auto_cast_to_devic": [122, 126, 144, 145, 151, 152, 416], "break_when_all_don": [122, 126, 144, 145, 151, 152], "soon": [122, 126, 144, 145, 146, 147, 151, 152], "__sort": [122, 126, 144, 145, 151, 152], "as__": [122, 126, 144, 145, 151, 152], "argmaxmodul": [122, 126, 144, 145, 151, 152], "argmax": [122, 126, 144, 145, 151, 152, 243, 275, 292, 297, 408], "n_ob": [122, 126, 144, 145, 151, 152, 186, 294, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 409], "n_act": [122, 126, 144, 145, 151, 152, 186, 309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 409], "ourselv": [122, 126, 144, 145, 151, 152, 405, 422], "emul": [122, 126, 144, 145, 151, 152], "epoch": [122, 126, 144, 145, 151, 152, 380, 405, 415, 416], "input_td": [122, 126, 144, 145, 151, 152], "rollout_td": [122, 126, 144, 145, 151, 152], "state_kei": [122, 126, 144, 145, 151, 152], "prevail": [122, 126, 144, 145, 151, 152, 170, 200, 227], "creator": [123, 385, 386, 392, 393, 394], "substitut": [123, 205, 217, 408], "vecnorm": [123, 394], "env_creat": [123, 403], "test_env1": 123, "observation_count": [123, 422], "test_env2": 123, "sleep": [123, 422], "ps": 123, "p1": 123, "p2": 123, "9934": 123, "make_vari": [123, 209], "variant": [123, 209, 398], "trajcount": 123, "env_creator_pendulum": 123, "env_creator_cartpol": 123, "env_str": 124, "device_map": 124, "accross": [125, 127], "registri": [125, 153], "asyncvectorenv": 125, "involv": [125, 127, 128, 136, 137, 148, 166, 209, 250, 254, 407, 409], "pixel_observ": [125, 127, 128, 148, 421], "pixelobservationwrapp": [125, 127, 128, 148], "adventur": [125, 127, 422], "airraid": [125, 127, 422], "alien": [125, 127, 422], "time_limit": 125, "timelimit": [125, 136, 137, 155, 156], "default_info_dict_read": [125, 126, 127, 144], "reader": [125, 126, 127, 144, 404], "set_info_dict_read": [125, 126, 127, 144, 407], "info_dict": [125, 126, 127, 144], "auto_register_info_dict": [125, 126, 127, 144], "multibinari": [125, 127], "multidiscret": [125, 127], "rag": [125, 127], "gym_conversion_exampl": [125, 127], "info_dict_read": [126, 144], "ignore_priv": 126, "baseinfodictread": 126, "tensordictprim": [126, 144, 232, 250, 254, 306, 398, 406], "succe": [126, 144], "underscor": 126, "primer": [126, 206, 232, 250, 254, 306, 406], "halfcheetah": [126, 144, 162, 196, 403], "reward_run": [126, 144], "read_act": 126, "read_don": 126, "nonsens": 126, "fallback": 126, "broken": [126, 221], "read_ob": 126, "dictat": [126, 295, 299, 329, 403, 417], "read_reward": 126, "hoc": [126, 144, 408], "dict_read": 126, "my_info_kei": 126, "some_env": 126, "vecenv": 127, "vectorenv": 127, "convert_actions_to_numpi": 127, "isaaclab": 127, "secur": 128, "habitat3": 128, "ai": [128, 418], "habitatrenderpick": 128, "isaacgym": [129, 130], "isaacgymwrapp": [129, 396], "isaacgymenv": [130, 396], "webpag": 130, "isaac": 130, "essenc": [130, 407], "instadeepai": [131, 132], "2306": [131, 132], "09884": [131, 132], "snake": [131, 132], "grid": [131, 132, 363], "bodi": [131, 132], "body_st": [131, 132], "fruit_posit": [131, 132], "col": [131, 132], "head_posit": [131, 132], "tail": [131, 132], "game2048": [131, 132], "maze": [131, 132], "cleaner": [131, 132], "cvrp": [131, 132], "multicvrp": [131, 132], "minesweep": [131, 132], "rubikscub": [131, 132], "knapsack": [131, 132], "sudoku": [131, 132], "tsp": [131, 132], "connector": [131, 132], "v2": [131, 132, 149, 150, 338, 352, 353, 354, 355, 357, 358, 359, 360, 406], "mmst": [131, 132], "graphcolor": [131, 132], "partli": [131, 132], "scrambl": [131, 132], "robotwarehous": [131, 132], "tetri": [131, 132], "binpack": [131, 132], "jobshop": [131, 132], "0x1fca91910": 131, "122": [131, 132, 422], "0x1ff9baee0": 131, "134": [131, 132], "0x1ff9ba7c0": 131, "172": [131, 132, 403], "drastic": [132, 144, 419], "mo": [133, 134], "minecart": [133, 134], "mo_gym": 134, "qualnam": 135, "leverag": [135, 146, 147, 403, 416, 422], "neural": [135, 146, 147, 233, 234, 269, 271, 278, 298, 398, 404, 405, 406, 408, 415, 416, 417, 422], "group_map": [135, 136, 137, 142, 143, 146, 147, 153, 154, 155, 156, 157, 415], "constructiuon": [135, 146, 147], "premad": [135, 136, 137, 146, 147, 155, 156, 341], "all_in_one_group": [135, 142, 143, 157], "agent_0": [135, 146, 147, 153, 157, 415], "agent_1": [135, 146, 147, 153, 157], "agent_2": [135, 146, 147, 153, 157], "agent_3": [135, 153], "one_group_per_ag": [135, 146, 147], "meltingpot": [136, 137], "2211": [136, 137], "13746": [136, 137], "melt": [136, 137], "pot": [136, 137], "novel": [136, 137, 409], "social": [136, 137], "familiar": [136, 137, 404, 416, 422], "unfamiliar": [136, 137], "broad": [136, 137], "cooper": [136, 137, 415, 416], "decept": [136, 137], "reciproc": [136, 137], "stubborn": [136, 137], "substrat": [136, 137], "ml_collect": 136, "config_dict": 136, "configdict": 136, "categorical_act": [136, 137, 142, 143, 146, 147, 149, 150, 153, 154, 155, 156], "marlgroupmaptyp": [136, 137, 142, 143, 146, 147, 153, 154, 155, 156, 157, 396, 415], "agent_nam": [136, 137, 155, 156, 157], "agent_names_to_indices_map": [136, 137, 155, 156], "env_torchrl": [136, 137], "commons_harvest__open": [136, 137], "rgb": [136, 137], "144": [136, 137], "192": [136, 137, 404], "collective_reward": [136, 137], "ready_to_shoot": [136, 137], "88": [136, 137, 149, 150, 403, 404], "substrate_config": 137, "get_config": 137, "mp_env": 137, "build_from_config": 137, "default_player_rol": 137, "environn": 138, "mymbenv": [138, 231, 257], "world_model": [138, 231, 257, 321], "hidden_observ": [138, 231, 257], "mlp": [138, 231, 233, 234, 236, 237, 238, 239, 245, 250, 254, 257, 261, 262, 287, 291, 306, 314, 316, 398, 404, 408, 409, 412, 414, 418, 421], "worldmodelwrapp": [138, 231, 257], "activation_class": [138, 231, 233, 234, 236, 237, 238, 239, 244, 245, 255, 257, 260, 261, 404, 408, 415, 416, 421], "activate_last_lay": [138, 231, 239, 255, 257], "sail": [139, 140], "sg": [139, 140], "10558": [139, 140], "readthedoc": [139, 142, 143], "en": [139, 142, 143], "python_interfac": 139, "envpoolmixin": 140, "env_bas": 140, "task_id": 140, "env_typ": 140, "gym_reset_return_info": 140, "envpool_env": 140, "www": [141, 258, 259], "fetch_openml": 141, "106": 141, "openspiel": [142, 143], "open_spiel": [142, 143], "game_str": 142, "return_st": [142, 143, 146, 147], "4672": [142, 143, 404], "current_play": [142, 143], "fen": [142, 143], "rnbqkbnr": [142, 143], "pppppppp": [142, 143], "kqkq": [142, 143], "674": 142, "2048": [142, 143, 404, 418], "add_nois": [142, 143], "amazon": [142, 143], "backgammon": [142, 143], "restor": [142, 143], "td_restor": [142, 143], "pyspiel": 143, "load_gam": 143, "new_initial_st": 143, "3009": 143, "my_env_fun": [144, 151], "custom_attribute_list": [144, 151], "custom_attribut": [144, 151], "custom_method_list": [144, 151], "custom_method": [144, 151], "deploi": [144, 151, 166], "slight": [144, 151, 404], "share_individual_td": [144, 151], "shared_memori": [144, 151], "policy_proof": [144, 151], "ll": [144, 151, 248, 249, 252, 253, 403, 404, 405, 406, 407, 408, 409, 410, 412, 416, 422], "serial_for_singl": [144, 151, 404], "circular": [144, 151, 403], "list_of_kwarg": [144, 151], "com_veloc": [144, 151], "head_height": [144, 151], "joint_angl": [144, 151], "torso_vert": [144, 151], "stringent": [144, 405, 415, 416], "inter": 144, "penv": [144, 209], "env_fix": 144, "influenc": 144, "myenv": [144, 166, 175, 178], "pipe": 144, "update_kwarg": [144, 151], "th": [145, 182, 212, 248, 252, 417], "thdot": [145, 417], "max_spe": [145, 417], "max_torqu": [145, 417], "gen_param": [145, 417], "gravit": [145, 417], "torqu": [145, 417], "pettingzoo": [146, 147, 415, 416], "pet": [146, 147], "zoo": [146, 147], "__": [146, 147], "aecenv": [146, 147], "use_mask": [146, 147], "dead": [146, 147], "done_on_ani": [146, 147, 415], "compulsori": [146, 147], "adversary_0": [146, 147, 415], "adversari": [146, 147, 323, 415], "sisl": 146, "multiwalker_v9": 146, "aec": [146, 147], "n_piston": [146, 147], "pistonball_v6": [146, 147], "piston": [146, 147], "piston_0": [146, 147], "piston_1": [146, 147], "piston_20": [146, 147], "tictactoe_v3": [146, 147], "player": [146, 147, 152], "player_1": [146, 147], "player_2": [146, 147], "butterfli": 147, "parallel_env": [147, 403, 421, 422], "vikashplu": 148, "wiki": 148, "06828": 148, "from_depth": 148, "smacv2": [149, 150], "starcraft": [149, 150], "challeng": [149, 150, 407, 417, 418], "10gen_terran": [149, 150], "10gen_zerg": [149, 150], "10gen_protoss": [149, 150], "3m": [149, 150], "8m": [149, 150, 418], "25m": [149, 150], "5m_vs_6m": [149, 150], "8m_vs_9m": [149, 150], "10m_vs_11m": [149, 150], "27m_vs_30m": [149, 150], "mmm": [149, 150], "mmm2": [149, 150], "2s3z": [149, 150], "3s5z": [149, 150], "3s5z_vs_3s6z": [149, 150], "3s_vs_3z": [149, 150], "3s_vs_4z": [149, 150], "3s_vs_5z": [149, 150], "1c3s5z": [149, 150], "2m_vs_1z": [149, 150], "corridor": [149, 150], "6h_vs_8z": [149, 150], "2s_vs_1sc": [149, 150], "so_many_banel": [149, 150], "bane_vs_ban": [149, 150], "2c_vs_64zg": [149, 150], "old": [149, 150, 326, 422], "smac": [149, 150], "map_nam": [149, 150], "176": [149, 150], "battle_won": [149, 150], "dead_al": [149, 150], "dead_enemi": [149, 150], "episode_limit": [149, 150], "322": [149, 150, 402, 410, 420], "Or": [149, 150, 260], "procedur": [149, 150], "distribution_config": [149, 150], "n_unit": [149, 150], "n_enemi": [149, 150], "team_gen": [149, 150], "dist_typ": [149, 150], "weighted_team": [149, 150], "unit_typ": [149, 150], "marin": [149, 150], "maraud": [149, 150], "medivac": [149, 150], "exception_unit_typ": [149, 150], "start_posit": [149, 150], "surrounded_and_reflect": [149, 150], "map_x": [149, 150], "map_i": [149, 150], "capability_config": [149, 150], "131": [149, 150, 406], "starcraft2env": 150, "tic": 152, "tac": 152, "toe": 152, "single_play": 152, "player1": 152, "desired_batch_s": 152, "board": 152, "player0": 152, "uniti": [153, 154], "technolog": [153, 154], "llapi": [153, 154], "mlagents_env": [153, 154], "unityenviron": [153, 154], "file_nam": 153, "registered_nam": 153, "localhost": 153, "3dball": 153, "group_0": 153, "vectorsensor_size8": 153, "continuous_act": [153, 155, 156, 361, 415, 416], "agent_10": 153, "agent_11": 153, "agent_4": 153, "agent_5": 153, "agent_6": 153, "agent_7": 153, "agent_8": 153, "agent_9": 153, "group_reward": 153, "proroklab": [155, 156], "vectorizedmultiagentsimul": [155, 156], "2207": [155, 156], "03530": [155, 156], "basescenario": 155, "perfrom": [155, 156], "defaultt": 155, "repositiori": 155, "sparsiti": 155, "unbatched_action_spec": [155, 156, 416], "unbatched_observation_spec": [155, 156], "unbatched_reward_spec": [155, 156], "het_spec": [155, 156], "het_specs_map": [155, 156], "flock": [155, 156, 361], "agent_collision_rew": [155, 156], "agent_distance_rew": [155, 156], "ca": 157, "environment4": 157, "get_group_map": 157, "sumbodul": 158, "model_bas": [159, 160, 231, 257], "decod": [159, 266], "model_based_env": [159, 320], "dreamerenv": [159, 320, 396], "model_based_env_ev": 159, "num_interv": 162, "out_action_kei": 162, "samplingstrategi": 162, "optino": 162, "intenum": 162, "interv": [162, 362, 363, 372, 382, 404, 417], "action_disc": 162, "transform_input_spec": [162, 166, 173, 175, 176, 177, 188, 190, 194, 195, 200, 204, 205, 206, 210, 212, 214, 219], "masker": 163, "maskedenv": 163, "ones_lik": 163, "scatter": 163, "fill_float": 165, "fill_int": 165, "fill_bool": 165, "someenvclass": 165, "autoresetenv": 165, "argumet": 165, "fooenv": 165, "sign": [165, 202, 343, 415], "envtyp": 165, "reshape_fn": 166, "reset_func": 166, "environmt": 166, "request": [166, 193], "tensordict_batch_s": 166, "tensordict_reset": [166, 417, 421], "transform_env_batch_s": [166, 173, 210, 219], "transform_output_spec": [166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 210, 219], "transform_observation_spec": [166, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 190, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217, 219, 417], "transform_reward_spec": [166, 167, 172, 173, 175, 176, 180, 186, 194, 195, 198, 199, 200, 201, 202, 204, 210, 212, 219], "transformfull_done_spec": [166, 173, 175, 176, 180, 186, 194, 195, 201, 204, 210, 219], "biner": 167, "burn_in": 168, "burn": 168, "date": [168, 366], "retur": 168, "burnt": 168, "gru_modul": [168, 250, 306], "input_s": [168, 248, 249, 250, 252, 253, 254, 306, 406], "hidden_s": [168, 248, 249, 250, 252, 253, 254, 306, 406], "set_recurrent_mod": [168, 250, 254, 406], "burn_in_transform": 168, "gru": [168, 206, 249, 250, 306], "num_lay": [168, 248, 250, 252, 254, 266, 267, 306], "86": [168, 404, 418], "3008": [168, 404], "0344": 168, "padding_valu": [169, 258, 259], "as_invers": 169, "movement": 169, "1312": [169, 404], "5602": 169, "unsqueezetransform": [169, 417, 419], "consumpt": [169, 396], "followin": 169, "pictur": 169, "pixels_trsf": [169, 419], "grayscal": [169, 404, 406, 419, 422], "data_exclud": [169, 419], "del_kei": [170, 213, 414, 417], "unsqueeze_if_oor": 170, "observation_posit": 170, "observation_veloc": 170, "center": [171, 271, 363], "width": [171, 174, 196], "scalar": [172, 198, 228, 229, 237, 239, 246, 247, 263, 264, 272, 273, 305, 309, 310, 311, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 341, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 398, 404, 409, 417], "permit": [172, 182, 212, 309, 311, 326, 329, 331], "rewardsc": [173, 211, 403, 404, 406], "rewardclip": 173, "transformed_env": [173, 210, 211, 407], "transform_env_devic": [173, 176, 210, 219], "dtype_in": 175, "dtype_out": 175, "scan": [175, 178, 300, 301], "resp": [175, 178], "not_transform": [175, 178], "constructedw": [175, 178], "orig_devic": 176, "unspecifi": 176, "transform_done_spec": [176, 210, 219], "num_actions_effect": 177, "max_act": 177, "include_forward": 177, "num_act": [177, 318, 408], "action_out": 177, "_call": [177, 182, 417], "eol_kei": 179, "lives_kei": 179, "eol_attribut": 179, "unwrap": 179, "breakout": 179, "210": [179, 190, 422], "160": [179, 190, 404, 422], "eol_transform": 179, "eol": 179, "dqnloss": [179, 309, 310, 312, 313, 316, 318, 319, 320, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 341, 387, 396, 399, 404, 406, 412], "register_kei": 179, "loss_or_advantag": 179, "lossmodul": [179, 380, 389, 390, 396, 399], "valueestimatorbas": [179, 327, 396], "excluded_kei": 180, "finit": [181, 271, 408, 419], "first_dim": 182, "last_dim": 182, "allow_positive_dim": [182, 212], "frameskip": 182, "repeatedli": [183, 405, 416], "init_kei": [185, 294], "tracker": 185, "pi_curr": 186, "pi_0": 186, "overfit": 186, "probabilist": [186, 222, 295, 309, 329, 396, 405, 421], "get_dist": [186, 299, 300], "normalparamextractor": [186, 287, 288, 289, 295, 301, 309, 310, 312, 318, 325, 329, 330, 331, 332, 334, 335, 398, 405, 408, 416, 421], "probabilisticactor": [186, 287, 288, 289, 290, 309, 310, 312, 315, 317, 318, 325, 328, 329, 330, 331, 332, 334, 335, 398, 403, 405, 408, 415, 416], "tanhnorm": [186, 287, 288, 289, 295, 301, 309, 310, 312, 325, 329, 330, 331, 332, 334, 335, 396, 405, 416, 421], "return_log_prob": [186, 287, 288, 289, 295, 299, 301, 331, 398, 405, 408, 415, 416, 421], "apply_": 186, "copy_": [186, 403], "formulat": 186, "diverg": [186, 250, 254, 295, 299, 321, 326], "noop": [187, 421], "trial": 187, "standard_norm": [188, 199, 217, 403, 404, 406], "affin": [188, 199, 217], "layer": [188, 217, 230, 233, 234, 236, 237, 242, 244, 248, 249, 250, 252, 253, 254, 255, 260, 261, 263, 264, 266, 267, 278, 279, 285, 293, 302, 398, 404, 405, 406, 408, 415, 418], "epsilon": [188, 228, 229, 246, 247, 272, 273, 333, 378, 404, 405, 406, 408], "recover": 188, "set_default_tensor_typ": 188, "doubletensor": 188, "isclos": 188, "next_ob": [188, 343, 344, 345, 346, 421], "init_stat": [188, 403, 404, 405, 406], "3752e": 188, "5087e": 188, "9294e": 188, "9636": 188, "5608": 188, "6408": 188, "num_it": [188, 404, 405], "reduce_dim": [188, 403, 404, 405, 406], "cat_dim": [188, 403, 404, 405, 406], "keep_dim": [188, 404, 406], "statist": [188, 217, 230, 331, 394, 403, 404, 405, 422], "gaussian": [188, 206, 228, 229, 231, 257, 263, 264, 270, 405, 415], "empir": [188, 231, 257, 295, 299, 403, 405, 416], "3d": [188, 233], "reorder": 190, "in_keys_in": [190, 212], "channel": [190, 208, 260, 266, 267, 404], "r3m": [192, 418], "resnet": [192, 213, 215], "visual": [192, 213, 215, 363, 405, 415, 417], "embed": [192, 213, 214, 215, 236, 274, 286, 287, 288, 289, 298, 303, 418], "ego4d": [192, 213, 215], "univers": [192, 213, 215, 407], "suraj": [192, 213], "nair": [192, 213], "aravind": [192, 213], "rajeswaran": [192, 213], "vikash": [192, 213, 215], "kumar": [192, 213, 215], "chelsea": [192, 213], "finn": [192, 213], "abhinav": [192, 213], "gupta": [192, 213], "2203": [192, 213, 257, 418], "12601": [192, 213, 418], "_init": [192, 213, 403], "resnet50": [192, 215, 418], "model_nam": [192, 213, 215, 366], "resnet34": 192, "resnet18": 192, "r3m_vec": [192, 418], "stack_imag": [192, 215], "tread": [192, 215], "separet": [192, 215], "hub": [192, 215, 407, 418], "resnet50_weight": [192, 215], "imagenet1k_v1": [192, 215], "download_path": [192, 215], "tensor_pixels_kei": [192, 215], "sub_seq_len": 193, "sample_dim": [193, 403], "hesit": 193, "robust": [193, 230], "mix": [193, 274, 283, 341, 403, 415, 416], "improp": 193, "dummyenv": 194, "another_oth": 194, "other_reward": 194, "create_copi": 195, "stuff": [195, 410], "newnam": 195, "r2g": 197, "reward_to_go": 197, "bernoulli_": 197, "9010": 197, "9404": [197, 349], "9701": [197, 349], "9900": [197, 349], "0000": [197, 207, 246, 247, 271, 302, 349, 405, 406, 421], "crash": 197, "clamp_min": 198, "clamp_max": 198, "clip_min": 198, "clip_max": 198, "episode_": 200, "reward1": 200, "reward2": 200, "episode_reward": [200, 415, 416], "keep_reward": 201, "keep_don": 201, "logical_or": 202, "step_count_kei": 204, "update_don": 204, "disjunct": 204, "recognis": 204, "target_return": 205, "subtract": 205, "default_valu": [206, 306, 406], "unit": [206, 231, 244, 248, 249, 266, 267, 276, 277, 405], "transfomedenv": 206, "mykei": 206, "__unless": 206, "exists__": 206, "get_primers_from_modul": [206, 232, 250, 254, 396], "10th": 207, "0216": 207, "1149": 207, "1990": 207, "2749": 207, "3281": 207, "9290": 207, "3702": 207, "8978": 207, "from_int": 208, "shape_toler": 208, "permuat": 208, "ri": 208, "traj_count": 209, "counter": [209, 294, 373, 400], "traj": 209, "countingenv": 209, "mocking_class": 209, "make_env_c0": 209, "make_env_c1": 209, "principl": 210, "cattransform": 210, "notabl": 210, "rewardsum": [210, 219, 226, 415, 416], "smoothli": [211, 230], "add_1": 211, "cache_spec": 211, "set_missing_toler": 211, "keyerror": [211, 422], "danger": 212, "vc1": 213, "vc1_vec": 213, "untrain": 213, "make_noload_model": 213, "vip": [214, 215, 418], "implicit": [215, 317, 325, 419], "jason": 215, "ma": 215, "shagun": 215, "sodhani": 215, "dinesh": 215, "jayaraman": 215, "osbert": 215, "bastani": 215, "ami": 215, "zhang": 215, "vip_vec": 215, "final_nam": 216, "sb3": 216, "terminal_obs_read": 216, "truli": [216, 421], "till": 216, "shared_td": 217, "decai": [217, 228, 229, 246, 333, 378, 403, 404, 406, 422], "9999": 217, "0001": [217, 244, 265, 405], "to_observation_norm": 217, "frozen_copi": 217, "race": 217, "underflow": [217, 378], "build_td_for_shared_vecnorm": 217, "memmori": 217, "queue": [217, 419], "td_share": 217, "unfreez": 217, "train_env": 217, "eval_env": 217, "state_dim": [218, 235, 240, 270, 276, 277, 290], "action_dim": [218, 235, 236, 238, 240, 270, 290, 403, 414], "gsde": [218, 330, 394], "gsdemodul": 218, "rb_transform": 219, "resist": 219, "insensit": 219, "sensit": [219, 404], "_orig": 219, "95": [219, 257, 337, 404, 405, 406], "tdreset": [219, 414], "window": [219, 294, 415, 419, 421], "edit": [219, 410], "cube": 220, "check_dtyp": 221, "discrep": [221, 309, 311, 313, 314, 326, 329, 331, 341], "rng": [221, 417], "unsqueeze_null_shap": 224, "probabilistictdmodul": [225, 255, 295, 299, 342, 376], "next_tensordict": [226, 421], "keep_oth": [226, 417], "exclude_reward": 226, "exclude_don": 226, "exclude_act": 226, "next_": 226, "funtion": 226, "_stepmdp": 226, "write_full_fals": 227, "_terminated_or_trunc": 227, "po": [228, 229, 247], "sigma_init": [228, 229, 415], "sigma_end": [228, 229, 415], "annealing_num_step": [228, 229, 246, 247, 272, 273, 403, 404, 406, 408, 412, 415], "sigma": [228, 229, 248, 249, 251, 252, 253, 272, 273, 281, 282, 405, 415], "captur": [228, 229, 246, 247, 272, 273], "omiss": [228, 229, 246, 247, 272, 273], "ommit": [228, 229, 246, 247, 272, 273], "momentum": 230, "max_r": 230, "max_d": 230, "warmup_step": 230, "batchrenorm": 230, "1702": 230, "03275": 230, "corenet": 230, "enhanc": 230, "warmup": 230, "phase": [230, 416, 419], "outlier": 230, "period": 230, "varianc": [230, 231, 251, 265, 281, 282, 399, 403, 405, 416], "warm": 230, "renorm": 230, "entropi": [231, 309, 310, 311, 312, 317, 318, 325, 326, 328, 329, 330, 332, 334, 335, 416], "botev": 231, "2013": 231, "cem": 231, "plan": [231, 256, 257], "k": [231, 232, 248, 249, 252, 253], "maximis": [231, 236, 238, 257, 404, 405, 416], "modelbasedenv": [231, 257], "planning_horizon": [231, 257], "optim_step": [231, 257, 404, 412], "mpc": [231, 256, 257], "num_candid": [231, 257], "candid": [231, 257], "top_k": [231, 257], "modelbasedenvbas": [231, 256, 257, 396], "safemodul": [231, 256, 287, 289, 299, 309, 310, 312, 317, 318, 325, 329, 330, 331, 332, 334, 335, 385, 386, 390, 396, 421], "consistentdropout": 232, "input_shap": 232, "batcht": 232, "make_tensordict_prim": [232, 250, 254, 406], "input_dtyp": 232, "pase": 232, "get_default_dtyp": [232, 378], "mask_6127171760": 232, "env0": [232, 422], "num_cel": [233, 234, 236, 237, 238, 239, 244, 245, 250, 254, 255, 260, 261, 287, 306, 404, 405, 406, 408, 409, 412, 415, 416, 421], "elu": [233, 234, 236, 237, 238, 239, 244, 245, 260, 404, 421], "activation_kwarg": [233, 234, 255], "norm_class": [233, 234, 236, 237, 255], "norm_kwarg": [233, 234, 255], "bias_last_lay": [233, 234, 236, 237, 238, 239, 245, 255], "aggregator_class": [233, 234, 236, 237, 404, 406, 421], "squashdim": [233, 234, 236, 245, 260, 421], "aggregator_kwarg": [233, 234, 236, 237, 404, 406], "squeeze_output": [233, 234, 236, 237, 404, 406], "cell": [233, 234, 248, 249, 250, 252, 253, 254, 255, 260, 261, 405, 407, 408, 409, 410, 411, 412], "kernel": [233, 234, 245, 260], "cnet": [233, 234], "conv3d": 233, "lazyconv2d": [234, 236, 237, 245, 260], "transformer_config": [235, 270, 290], "dtconfig": [235, 240, 270], "2202": [235, 240, 328], "05607": [235, 240, 328], "decisiontransform": [235, 270], "return_to_go": [235, 240, 270, 290], "conv_net_kwarg": [236, 237], "mlp_net_kwarg": [236, 237, 238], "use_avg_pool": [236, 237], "WITH": [236, 237, 238, 239, 272, 273, 333], "1509": [236, 237, 238, 239, 257, 272, 273, 314, 324, 333], "02971": [236, 237, 238, 239, 272, 273, 333], "reus": [236, 370], "convnet": [236, 237, 245, 260, 406, 408, 421], "ndims_in": 236, "avgpool": [236, 237], "lazylinear": [236, 237, 238, 239, 245, 255, 398, 405, 408, 417, 418], "2304": [236, 404], "adaptiveavgpool2d": [237, 404, 406], "output_s": [237, 404, 406], "squeeze2dlay": 237, "400": [238, 239, 411, 416, 419], "mlp_net_kwargs_net1": 239, "mlp_net_kwargs_net2": 239, "mlp1": 239, "mlp2": 239, "decion": 240, "desdescrib": 240, "n_embd": 240, "n_layer": [240, 248, 252], "n_head": 240, "n_inner": 240, "n_posit": 240, "resid_pdrop": 240, "attn_pdrop": 240, "gpt2config": 240, "atol": [241, 280], "rtol": [241, 280], "batch_shap": [241, 280], "event_shap": [241, 280], "absolut": [241, 280, 403], "densiti": [241, 258, 259, 268, 282], "mass": [241, 258, 259, 268, 282, 417], "rsampl": [241, 259, 268, 299], "sample_shap": [241, 258, 259, 268], "softmax": [242, 259, 268, 291, 292], "action_valu": [242, 243, 275, 291, 292, 296, 297, 318, 327, 341, 398, 406, 408, 412], "var_num": [243, 275, 291, 292, 297], "action_value_kei": [243, 275, 291, 292, 296, 297, 327, 341], "action_mask_kei": [243, 246, 247, 275, 291, 292, 296, 297], "perspect": [243, 292, 319, 405], "1707": [243, 292, 319, 329], "06887": [243, 292, 319], "mult": [243, 261, 275, 291, 292, 296, 297], "tensordict_modul": [243, 248, 249, 252, 253, 275, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 310, 312, 313, 317, 318, 325, 329, 330, 331, 332, 334, 335, 398], "nbin": [243, 291, 398], "customdistributionalqv": 243, "log_softmax": [243, 291], "qvalue_actor": [243, 275, 291, 296, 398], "to_modul": [243, 298, 301, 403, 421], "std_bia": 244, "std_min_val": 244, "belief": [244, 266, 276, 277], "1912": [244, 320, 321, 322], "01603": [244, 320, 321, 322], "softplu": [244, 265, 305, 307, 308], "out_features_valu": 245, "cnn_kwarg": [245, 404], "mlp_kwarg": [245, 404], "duel": 245, "cnn": [245, 260, 404, 408, 421], "06581": 245, "greedi": [246, 247, 275, 292, 297, 404, 406, 408], "eps_init": [246, 247, 272, 273, 404, 406, 408, 412], "eps_end": [246, 247, 272, 273, 404], "explorative_polici": [246, 247, 272, 273], "9055": [246, 247], "9277": [246, 247], "6295": [246, 247], "2532": [246, 247], "grad_fn": [246, 247, 286], "addbackward0": [246, 247], "batch_first": [248, 250, 252, 254, 406], "bidirect": [248, 252, 406], "cudnn": [248, 249, 252, 253, 406], "rnn": [248, 249, 250, 252, 253, 254, 406, 408], "device_count": [248, 249, 252, 253, 422], "n_in": [248, 249, 252, 253], "n_out": [248, 249, 252, 253], "h0": [248, 249, 252, 253], "h1": [248, 249, 252, 253], "vectoris": [248, 249, 252, 253], "call_gru": [248, 249], "h_out": [248, 249, 252, 253], "batched_cal": [248, 249, 252, 253], "gate": [248, 249, 252], "r_t": 248, "w_": [248, 249, 252, 253], "ir": [248, 249], "x_t": [248, 252], "b_": [248, 249, 252, 253], "hr": [248, 249, 252], "h_": [248, 249, 252], "z_t": 248, "iz": [248, 249], "hz": [248, 249], "n_t": 248, "odot": [248, 249, 252, 253], "hn": [248, 249, 252], "h_t": [248, 252], "sigmoid": [248, 249, 252, 253], "hadamard": [248, 249, 252, 253], "multilay": [248, 252], "_t": [248, 252, 416, 417], "ge": [248, 252], "bernoulli": [248, 252], "b_ih": [248, 249, 252, 253, 254], "b_hh": [248, 249, 252, 253, 254], "h_0": [248, 252, 253], "unbatch": [248, 252], "pack_padded_sequ": [248, 252], "pack_sequ": [248, 252], "num": [248, 252, 412], "_layer": [248, 252], "_size": [248, 249, 252, 253], "h_n": [248, 252], "packedsequ": [248, 252], "weight_ih_l": [248, 252], "learnabl": [248, 249, 252, 253], "w_ir": 248, "w_iz": 248, "w_in": 248, "num_direct": [248, 252], "weight_hh_l": [248, 252], "w_hr": 248, "w_hz": 248, "w_hn": 248, "bias_ih_l": [248, 252], "b_ir": 248, "b_iz": 248, "b_in": 248, "bias_hh_l": [248, 252], "b_hr": 248, "b_hz": 248, "b_hn": 248, "mathcal": [248, 249, 252, 253], "sqrt": [248, 249, 252, 253, 272, 273], "frac": [248, 249, 252, 253, 405], "seq_len": [248, 252], "subtli": 248, "matrix": [248, 252, 263, 264], "contrast": [248, 271, 324, 419], "hx": [248, 249, 252, 253], "lstmcell": [249, 254], "gru_cel": 249, "weight_ih": [249, 253], "weight_hh": [249, 253], "bias_ih": [249, 253], "bias_hh": [249, 253], "rocm": [249, 253], "embedd": [250, 254], "grucel": [250, 298], "python_bas": [250, 254], "recurrent_st": [250, 254, 306, 406], "custom_kei": [250, 254], "recurrent_mod": [250, 254], "rs": [250, 403], "gru_module_train": 250, "policy_train": [250, 254], "traj_td": [250, 254], "supplementari": [250, 254, 405, 422], "That": [250, 254, 405, 415], "dealt": [250, 254], "poorli": [250, 254], "data_collector": [250, 254, 404], "policy_infer": [250, 254], "td_inf": [250, 254], "assert_clos": [250, 254], "upscal": [251, 281, 282], "tanh_loc": [251, 281, 282], "event_dim": [251, 280, 281], "poor": [251, 281, 282], "explos": [251, 281, 282], "formula": [251, 281, 282, 309, 311, 326, 329, 399, 405], "proj_siz": 252, "c0": [252, 253], "c1": [252, 253], "call_lstm": [252, 253], "c_out": [252, 253], "i_t": 252, "ii": [252, 253], "hi": [252, 253], "f_t": 252, "hf": [252, 253], "g_t": 252, "ig": [252, 253], "hg": [252, 253], "o_t": 252, "ho": [252, 253], "c_t": 252, "c_": 252, "forget": 252, "1402": 252, "1128": 252, "c_0": [252, 253], "proj": 252, "c_n": 252, "w_ii": 252, "w_if": 252, "w_ig": 252, "w_io": 252, "w_hi": 252, "w_hf": 252, "w_hg": 252, "w_ho": 252, "b_ii": 252, "b_if": 252, "b_ig": 252, "b_io": 252, "b_hi": 252, "b_hf": 252, "b_hg": 252, "b_ho": 252, "weight_hr_l": 252, "_revers": 252, "analog": [252, 408], "cn": 252, "lstm_cell": 253, "h_1": 253, "c_1": 253, "time_step": [253, 294], "cx": 253, "correspont": 254, "recurrent_state_h": [254, 406], "recurrent_state_c": [254, 406], "triplet": [254, 296, 297], "lstm_modul": 254, "rs_h": 254, "rs_c": 254, "hidden0": 254, "hidden1": 254, "single_bias_last_lay": 255, "layer_class": 255, "layer_kwarg": 255, "perceptron": [255, 408], "aslo": 255, "42": [255, 271, 309, 310, 312, 313, 317, 325, 332, 404, 405, 416, 418], "noisylinear": [255, 263, 396, 404], "noisylazylinear": [255, 396], "mpcplanner": 256, "tensordict_out": [256, 422], "mppi": 257, "covari": 257, "william": [257, 331], "aldrich": 257, "theodor": 257, "01149": 257, "hansen": 257, "wang": 257, "su": 257, "04955": 257, "valueoper": [257, 287, 288, 289, 309, 310, 311, 312, 313, 318, 325, 326, 329, 330, 331, 332, 334, 335, 390, 398, 403, 405, 409], "tdlambdaestim": [257, 396, 403], "value_net": [257, 314, 316, 331, 343, 344, 345, 346, 405, 408, 409, 412], "adv": 257, "lmbda": [257, 337, 343, 346, 348, 354, 355, 356, 359, 360, 399, 403, 405, 416], "value_network": [257, 313, 314, 316, 317, 319, 325, 332, 343, 344, 345, 346, 399, 403, 405, 409, 412, 415], "temperatur": [257, 310, 317, 325], "neg_inf": [258, 259], "inf": [258, 259], "api_doc": [258, 259], "tf_agent": [258, 259], "event": [258, 259, 268, 352, 353, 354, 355, 357, 358, 359, 360, 419], "unnorm": [258, 259, 268], "sparse_mask": [258, 259], "dens": [258, 259], "0831": [258, 259], "1203": [258, 259], "0928": [258, 259], "1972": [258, 259], "grad_method": [259, 268], "reparamgradientstrategi": [259, 268], "passthrough": [259, 268], "relaxedonehot": [259, 268], "zeros_lik": [259, 417], "sample_non_valid": 259, "share_param": [260, 261, 262, 415, 416], "use_td_param": [260, 261, 262], "get_stateful_net": [260, 261, 262, 327, 398, 399], "from_stateful_net": [260, 261, 262, 327, 399], "homogen": [260, 261, 415, 416], "tensordictparam": [260, 261], "_empty_net": [260, 261], "roughli": [260, 261, 421], "agent_network": [260, 261], "modulelist": [260, 261], "2592": [260, 404], "decentr": 260, "n_agent_input": [261, 262, 415, 416], "n_agent_output": [261, 262, 415, 416], "lazili": [261, 417], "toech": 261, "centalis": 261, "shown": [261, 398, 414, 415, 416, 419], "agent_dim": 262, "vmap_random": [262, 327, 399], "stateful_net": [262, 327], "Such": [262, 327], "multiagentmlp": [262, 415, 416], "snet": 262, "hasattr": [262, 403], "kaiming_normal_": 262, "std_init": [263, 264], "device_typ": [263, 264], "initialize_paramet": 263, "isol": [263, 327], "1706": [264, 283], "10295v3": 264, "induc": 264, "aid": 264, "scale_map": 265, "biased_softplus_1": 265, "scale_lb": [265, 276, 277], "module_norm": 265, "1803": [266, 267, 274], "10122": [266, 267], "rnn_hidden": 266, "latent": 267, "ordin": [269, 396], "parametris": [269, 271], "inres": 270, "mu": [270, 272, 273, 405], "impos": [271, 398], "proxim": [271, 329, 405, 416], "atom": 271, "tang": 271, "agraw": 271, "2020": 271, "1901": 271, "10500": 271, "discretis": 271, "num_atom": 271, "num_sampl": 271, "middl": 271, "adam": [271, 281, 403, 404, 405, 406, 409, 412, 415, 416, 417], "lr": [271, 403, 404, 405, 406, 412, 415, 416, 417], "optimis": [271, 415, 416], "minimis": 271, "penalis": 271, "0308": 271, "1586": 271, "4727": 271, "2260": 271, "1120": [271, 404], "histogram": 271, "return_typ": 271, "hist": [271, 419], "158": 271, "478": 271, "228": 271, "112": 271, "bin_edg": 271, "8000": [271, 403, 405], "6000": [271, 405], "4000": [271, 403, 404, 405], "ornstein": [272, 273, 403], "uhlenbeck": [272, 273, 403], "ou": [272, 273, 403], "correl": [272, 273], "noise_t": [272, 273], "noise_": [272, 273], "theta": [272, 273, 405, 417], "sigma_t": [272, 273], "sigma_": [272, 273], "anneal": [272, 273, 404, 408, 415], "ou_prev_nois": [272, 273], "ou_step": [272, 273], "x0": [272, 273], "sigma_min": [272, 273], "n_steps_ann": [272, 273], "is_init_kei": [272, 273], "_ou_prev_nois": [272, 273], "_ou_step": [272, 273], "state_shap": [274, 341], "mixing_embed_dim": [274, 341], "qmix": [274, 415, 416], "mixer": [274, 283, 341], "monoton": 274, "hyper": 274, "11485": 274, "qmixerloss": [274, 283], "qmix_vdn": [274, 283], "chosen_action_valu": [274, 275, 283, 296, 297, 341, 398, 406, 408], "vdn": [274, 283], "hidden_dim": [276, 277], "posterior": [276, 321], "rssm": [276, 277, 321], "1811": [276, 277], "04551": [276, 277], "obs_embed": 276, "rnn_hidden_dim": 277, "dream": 277, "safe_tanh": 281, "tanhtransform": 281, "overflow": [281, 286, 291, 292, 295, 296, 297, 298, 299], "get_mod": 281, "decomposit": 283, "05296": 283, "hide": [284, 405, 415, 416], "satisfi": [284, 398], "vmap_dim": 284, "lam": 284, "sample_in": 284, "sample_in_td": 284, "vm": 284, "translat": [286, 295], "character": [286, 291, 295, 296, 298, 419], "td_modul": [286, 287, 288, 289, 295, 298, 299, 301, 303, 408, 421], "3635": 286, "0340": 286, "1476": 286, "3911": 286, "1664": [286, 404], "5455": 286, "2247": 286, "4583": 286, "2916": 286, "2160": 286, "5337": 286, "5193": 286, "addmmbackward0": 286, "actorvalueoper": [287, 311, 326, 329, 398, 408], "get_policy_oper": [287, 288, 289, 311, 326, 329, 398], "standalon": [287, 288, 289, 408], "tdmodul": [287, 288, 289, 390], "get_critic_oper": 287, "common_oper": [287, 289], "policy_oper": [287, 288, 289], "value_oper": [287, 288, 289], "module_hidden": [287, 289], "td_module_hidden": [287, 289], "module_act": [287, 289], "td_module_act": [287, 288, 289], "module_valu": [287, 288, 289], "td_module_valu": [287, 288, 289], "state_action_valu": [287, 303, 310, 312, 317, 325, 332, 342, 390, 398, 403, 415, 421], "td_clone": [287, 288, 289], "tensordictmodulewrapp": [287, 385, 386, 390], "get_policy_head": [287, 288, 289], "safesequenti": [287, 288, 289, 341], "head": [287, 289, 306, 311, 326, 329], "get_value_head": [287, 288, 289], "get_value_oper": [287, 288, 289, 311, 326, 329], "action_modul": 288, "state_valu": [288, 289, 303, 311, 317, 325, 326, 329, 330, 332, 343, 344, 345, 346, 348, 350, 352, 354, 356, 357, 359, 398, 403, 405, 416], "actorcriticoper": [289, 398, 408], "embeddig": 289, "refet": 289, "actorcriticwrapp": [289, 398, 403], "inferec": 290, "set_tensor_kei": 290, "dt_inference_wrapp": 290, "baz": 290, "inference_context": 290, "obs_dim": 290, "tanhdelta": [290, 396, 403, 415], "dtactor": 290, "actor_modul": [290, 421], "dist_class": 290, "dist_kwarg": 290, "distribution_kwarg": [290, 295, 299, 405, 415, 416], "inference_actor": 290, "sequence_length": 290, "mask_context": 290, "out_act": 290, "qvaluemodul": [291, 296, 341, 406, 408, 412], "distributionaldqnnet": 291, "make_log_softmax": 291, "my_action_valu": [292, 297], "chanc": 292, "thid": 292, "lmheadmodel": 293, "actor_head": [293, 311, 326, 329], "base_model": 293, "lm_head": 293, "macro": 294, "lookahead": 294, "n_action": [294, 310, 312, 314, 316, 328, 332], "reshape_cat": 294, "actor_bas": 294, "obs_cat": 294, "obs_cat_reshap": 294, "action_orig": 294, "default_interaction_typ": [295, 299, 408], "interaction_typ": [295, 299], "datacollectorbas": [295, 382, 385, 386, 390, 396], "set_interaction_typ": [295, 299], "compositedistribut": [295, 309, 329, 408], "distribution_map": 295, "name_map": 295, "cache_dist": [295, 299], "n_empirical_estim": [295, 299], "compound": [295, 408], "chose": 297, "functionalmodul": 298, "functionalmodulewithbuff": 298, "td_fmodul": 298, "td_function": 298, "td_state": 298, "params_repeat": 298, "td_vmap": [298, 301], "random_sampl": [298, 299], "suppli": 299, "fist": 299, "log_prob_kei": [299, 416], "probabilistictensordictsequenti": [300, 309, 311, 326, 329, 331, 385, 386, 421], "partial_toler": [300, 301, 414], "who": [300, 301], "AND": [300, 301, 312], "tensordictsequenci": 301, "tensordictsequ": 301, "safeprobabilisticmodul": [301, 398], "spec1": 301, "net1": 301, "module1": 301, "td_module1": 301, "spec2": 301, "module2": 301, "td_module2": 301, "clamp": [302, 321, 380, 415, 417], "boundari": [302, 405, 415, 416], "resolut": 302, "9944": 302, "9991": 302, "3020": 302, "2299": 302, "5418": 302, "2989": 302, "6849": 302, "3169": 302, "2690": 302, "9649": 302, "5686": 302, "8602": 302, "0315": 302, "8455": 302, "6027": 302, "4746": 302, "7843": 302, "7782": 302, "2111": 302, "5115": 302, "4687": 302, "5760": 302, "custommodul": 303, "imaginari": 304, "imagin": 304, "transition_model": 304, "get_reward_oper": 304, "get_transition_model_oper": 304, "min_val": [305, 308], "_bia": 305, "surject": 308, "expln": 308, "biased_softplu": [308, 396], "beggin": 308, "biased_softplus_": 308, "syntax": [308, 403], "met": [308, 415, 417], "1602": 309, "01783v2": 309, "actor_network": [309, 310, 311, 312, 313, 315, 317, 318, 325, 326, 328, 329, 330, 331, 332, 334, 335, 399, 403, 405, 409, 415, 416], "critic_network": [309, 311, 326, 329, 331, 405, 416], "entropy_bonu": [309, 311, 326, 329, 405], "favour": [309, 311, 326, 329], "samples_mc_entropi": [309, 311, 326, 328, 329], "mont": [309, 311, 326, 329, 403], "carlo": [309, 311, 326, 329, 403], "entropy_coef": [309, 311, 326, 329, 405, 416], "critic_coef": [309, 311, 326, 329, 405], "loss_critic_typ": [309, 311, 326, 329, 331, 405], "l1": [309, 311, 313, 314, 318, 326, 329, 330, 331, 334, 335, 338, 341, 398, 403], "l2": [309, 311, 313, 314, 315, 316, 318, 321, 322, 326, 329, 330, 331, 334, 335, 338, 341, 403, 415], "smooth_l1": [309, 310, 311, 312, 313, 314, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 338, 341, 405], "separate_loss": [309, 311, 312, 313, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335], "propag": [309, 311, 312, 313, 317, 318, 325, 326, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 405, 415, 416], "advantage_kei": [309, 311, 326, 329, 331, 343, 344, 345, 346], "value_target_kei": [309, 311, 326, 329, 331, 343, 344, 345, 346], "value_target": [309, 311, 326, 329, 331, 343, 344, 345, 346, 405, 416], "ddp": [309, 311, 326, 329, 331], "fsdp": [309, 311, 326, 329, 331], "divid": [309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 326, 328, 329, 330, 331, 332, 334, 335, 383, 403, 415, 416, 417], "clip_valu": [309, 311, 326, 329, 331], "loss_crit": [309, 329, 405, 416], "loss_entropi": [309, 329, 405, 416], "loss_object": [309, 329, 405, 416], "recur": [309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346, 347, 408], "next_reward": [309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346], "next_don": [309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346], "next_termin": [309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 343, 344, 345, 346], "loss_obj": 309, "next_observ": [309, 310, 312, 313, 314, 316, 317, 318, 325, 329, 330, 331, 332, 334, 335, 414], "sacloss": [309, 324, 333, 396], "fraction": 309, "make_value_estim": [309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 336, 341, 399, 403, 404, 415, 416, 421], "value_typ": [309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 337, 341, 403], "hyperparam": [309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 403], "enum": [309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 337, 341, 403], "default_value_estim": [309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 403, 421], "default_value_kwarg": [309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 396, 403], "dqn_loss": [309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 336, 341], "td1": [309, 310, 312, 313, 314, 316, 318, 319, 320, 325, 327, 329, 330, 331, 332, 334, 335, 341, 403], "conserv": [310, 316], "qvalue_network": [310, 312, 317, 318, 325, 330, 332, 334, 335], "unti": [310, 312, 325, 330, 332, 334, 335], "loss_funct": [310, 312, 313, 314, 315, 316, 317, 318, 325, 330, 332, 334, 335, 338, 341, 403, 415], "alpha_init": [310, 312, 318, 328, 330, 332], "min_alpha": [310, 312, 318, 328, 330, 332], "max_alpha": [310, 312, 318, 328, 330, 332], "fixed_alpha": [310, 312, 318, 328, 330, 332], "target_entropi": [310, 312, 318, 328, 330, 332], "prod": [310, 312, 328, 332], "delay_actor": [310, 313, 332, 334, 335], "delay_qvalu": [310, 318, 330, 332, 334, 335], "min_q_weight": 310, "max_q_backup": 310, "backup": 310, "deterministic_backup": 310, "num_random": 310, "with_lagrang": 310, "lagrang": 310, "lagrange_thresh": 310, "valueclass": [310, 312, 313, 318, 330, 332, 334, 335], "qvalu": [310, 312, 317, 318, 325, 330, 332, 334, 335], "loss_actor": [310, 312, 313, 317, 318, 325, 330, 331, 332, 334, 335, 375, 403, 409, 415], "loss_actor_bc": 310, "loss_alpha": [310, 312, 318, 330, 332], "loss_cql": [310, 316], "loss_qvalu": [310, 312, 316, 317, 318, 325, 330, 332, 334, 335], "loss_alpha_prim": 310, "clip_epsilon": [311, 405, 416], "normalize_advantag": [311, 326, 329, 416], "value_kei": [311, 326, 329, 343, 344, 345, 346, 403], "somemodul": [311, 326, 329], "someactor": [311, 326, 329], "value_head": [311, 326, 329], "somevalu": [311, 326, 329], "loss_modul": [311, 324, 326, 327, 329, 333, 380, 389, 390, 399, 400, 403, 404, 405, 415, 416, 419], "IN": 312, "FOR": 312, "simplic": [312, 404, 405, 410, 418, 419, 421], "openreview": [312, 330], "pczqttstix": 312, "qvalue_loss": [312, 334], "actor_loss": [312, 334], "alpha_loss": 312, "num_qvalue_net": [312, 317, 318, 325, 330, 332, 334, 335], "target_entropy_buff": 312, "delay_valu": [313, 314, 316, 319, 331, 332, 341, 404, 406, 412, 415], "loss_valu": [313, 317, 325, 331, 332, 403, 405, 409, 415, 416], "pred_valu": [313, 316, 334, 335, 403, 409], "pred_value_max": [313, 403, 409], "target_valu": [313, 316, 330, 334, 335, 342, 399, 403, 409], "target_value_max": [313, 403, 409], "qvalueactor": [314, 316, 341, 404, 406], "double_dqn": 314, "06461": [314, 324], "mult_one_hot": [314, 317, 318, 341], "loss_val": [314, 316, 399, 403, 405, 406, 409, 410, 412, 415, 416, 419], "01345": 315, "distanc": [316, 326, 338, 342, 343, 416], "dcql_loss": 316, "2110": [317, 325], "06169": [317, 325], "expectil": [317, 325], "tau": [317, 325, 333, 403, 404, 415], "antmaz": [317, 325], "sticht": [317, 325], "onehotcategor": [317, 318, 396], "target_entropy_weight": 318, "disctount": 319, "distributionalqvalueactor": [319, 398], "input_tensordict": [319, 403], "actor_model": 320, "value_model": [320, 322], "imagination_horizon": 320, "unrol": [320, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360], "discount_loss": [320, 322], "lambda_kl": 321, "lambda_reco": 321, "lambda_reward": 321, "reco_loss": 321, "reward_loss": 321, "free_nat": 321, "nat": 321, "delayed_clamp": 321, "global_averag": 321, "value_loss": 322, "fake_data": 322, "1606": 323, "03476": 323, "discriminator_network": 323, "use_grad_penalti": 323, "gp_lambda": 323, "discrimin": 323, "ddpgloss": [324, 333, 390, 396, 403, 409, 415, 421], "td3loss": [324, 333, 396], "value_network_update_interv": 324, "qvalueclass": 325, "loss_value_diff": 325, "diff": 325, "old_polici": 326, "new_polici": 326, "apart": [326, 416], "dtarg": 326, "samples_mc_kl": 326, "analyt": 326, "decrement": 326, "loss_": [327, 375, 399, 403, 409], "equip": [327, 406, 408], "gh": 327, "_acceptedkei": 327, "_forward_value_estimator_kei": 327, "alter": [327, 398], "value_estim": [327, 343, 344, 345, 346, 347, 399, 403, 416], "myloss": 327, "action2": 327, "augment": [327, 410, 412, 419], "set_exploration_typ": [327, 376, 396, 398, 405, 406, 408, 415, 421], "deterministic_sampling_mod": 327, "convert_to_funct": [327, 403], "expand_dim": 327, "create_target_param": [327, 403], "compare_against": [327, 403], "_param": 327, "expans": 327, "resampl": 327, "_target_param": 327, "network_nam": 327, "blend": 327, "add_random_modul": [327, 399], "flavor": [329, 403, 415, 416, 421], "clipppoloss": [329, 396, 405, 416], "klpenppoloss": [329, 396], "06347": 329, "gae": [329, 396, 399, 403, 405, 416], "ppo_loss": 329, "tdlambda": [329, 337, 399, 403], "base_lay": 329, "randn_lik": 329, "samplelogprob": 329, "ay8zfzm0tdd": 330, "sub_sample_len": 330, "subsampl": [330, 371, 400], "action_log_prob_actor": 330, "state_action_value_actor": [330, 334, 335], "connectionist": 331, "1992": 331, "doi": 331, "1007": 331, "bf00992696": 331, "actor_net": [331, 403, 405], "1801": 332, "01290": 332, "applic": [332, 341, 407, 408, 417], "1812": 332, "05905": 332, "redqloss": [333, 396], "math": 333, "theta_t": [333, 417], "theta_": [333, 417], "polyak": 333, "minimalist": 334, "06860": 334, "policy_nois": [334, 335], "noise_clip": [334, 335], "td3_bc": 334, "bc_loss": 334, "lmbd": 334, "next_state_valu": [334, 335, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 396], "td0": [336, 403, 415], "strict_shap": 338, "view_a": 338, "qmixer": [341, 396], "local_valu": 341, "visibl": [341, 416], "dafault": 341, "acceptedkei": 341, "global_valu": 341, "penultim": 341, "local_value_network": 341, "mixer_network": 341, "value_modul": [341, 405, 421], "qnet": [341, 403], "next_val_kei": 342, "pred_next_v": 342, "usus": 342, "mse": 342, "q_valu": 342, "n_steps_to_next": 342, "value_next_st": 342, "1506": [343, 348, 356], "02438": [343, 348, 356], "exponenti": [343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 378], "average_ga": [343, 405], "skip_exist": [343, 344, 345, 346], "time_dim": [343, 345, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360], "gradient_mod": 343, "value_error": [343, 344, 345, 346, 347], "target_param": [343, 344, 345, 346, 347, 403, 416], "98": [343, 344, 345, 346, 404, 418], "94": [343, 346, 404], "unpack": [343, 344, 345, 346], "tensor_kei": [343, 344, 345, 346, 347], "next_valu": [343, 344, 345, 346, 347], "aka": [344, 404, 415], "average_reward": [344, 345, 346], "tdestim": [344, 345, 347], "infti": 345, "valuefunctionbas": 347, "old_stat": [348, 350, 352, 354, 356, 357, 359], "new_stat": [348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "rolling_gamma": [352, 353, 354, 355, 357, 358, 359, 360], "g1": [352, 353, 354, 355, 357, 358, 359, 360], "g2": [352, 353, 354, 355, 357, 358, 359, 360], "g3": [352, 353, 354, 355, 357, 358, 359, 360], "g4": [352, 353, 354, 355, 357, 358, 359, 360], "v3": [352, 353, 354, 355, 357, 358, 359, 360], "preproc": [361, 415], "as_non_tensor": [361, 415], "render_method": 361, "pass_tensordict": 361, "syntat": 361, "sugar": 361, "out_file_bas": 362, "skip_reset": 362, "center_crop": 363, "make_grid": 363, "csv": [363, 365, 367, 404, 411, 412], "wandb": [363, 367, 370, 411, 421], "tensorboard": [363, 367, 369, 411, 421], "log_dir": [363, 364, 365, 367, 369, 370, 404, 412], "cheetah_video": 363, "run_video": 363, "openxexperiencereplai": 363, "run_video_0": 363, "templat": 364, "pt": [365, 400, 418], "video_fp": 365, "minim": [365, 419], "dependeci": 365, "cur_dir": 365, "csv_log": 365, "add_video": 365, "video_": 365, "experiment_nam": [366, 367], "uuid": [366, 404, 422], "logger_typ": 367, "logger_nam": 367, "mlflow": [367, 368], "wandb_kwarg": 367, "mlflow_kwarg": 367, "tracking_uri": 368, "uri": 368, "datastor": 368, "tb_log": 369, "tensoarboard": 369, "td_log": 369, "save_dir": 370, "resum": 370, "uncategor": 370, "sub_traj_len": 371, "min_sub_traj_len": 371, "register_op": [371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 400, 404], "process_optim_batch": [371, 377, 378, 400], "td_out": [371, 379], "_process_optim_batch_hook": [371, 400], "batch_subsampl": 371, "clear_cuda": 372, "pre_optim_step": [372, 400], "log_pbar": [373, 374, 376, 378, 400, 404], "progress": [373, 374, 376, 380, 400, 404, 406, 422], "count_fram": 373, "pre_steps_log": [373, 374, 400], "count_frames_log": 373, "lognam": 374, "r_train": [374, 404], "log_reward": [374, 404], "loss_compon": 375, "appl": 375, "optimizer_hook": 375, "record_interv": [376, 403, 404], "record_fram": [376, 383, 403, 404], "policy_explor": [376, 390, 403, 404, 408, 412], "log_kei": [376, 404], "underestim": 376, "r_evalu": [376, 403], "flatten_tensordict": [377, 404], "max_dim": 377, "rb_trainer": 377, "batch_process": [377, 378, 379, 400], "post_loss": [377, 400], "999": [378, 404], "jitter": 378, "finfo": 378, "default_dtyp": 378, "reward_norm": 378, "update_reward_stat": 378, "normalize_reward": 378, "make_train": [379, 396], "_process_batch_hook": [379, 400], "select_kei": [379, 400], "versatil": [380, 407], "optim_steps_per_batch": [380, 400, 404], "clip_grad_norm": 380, "clip_norm": 380, "progress_bar": 380, "save_trainer_interv": 380, "log_interv": [380, 404], "save_trainer_fil": [380, 400], "update_weights_interv": [382, 404], "update_weight": 382, "post_step": [382, 400, 404], "cfg": [383, 384, 385, 386, 387, 388, 389, 390, 391, 394], "dictconfig": [383, 384, 385, 386, 388, 389, 390, 391, 394], "unknowingli": 383, "annealing_fram": [383, 403], "init_env_step": [383, 384, 403], "proof_environ": [384, 403], "sta": 384, "ot": 384, "actor_model_explor": [385, 386, 403], "make_env_kwarg": [385, 386], "targetnetupdat": [387, 389, 390], "replayargsconfig": 388, "target_net_updat": [390, 403, 404], "constitu": 390, "egreedywrapp": 390, "env_proof": 390, "obs_spec": 390, "net_valu": 390, "dir": [390, 400, 404], "gettempdir": 390, "argpars": [391, 394], "namespac": [391, 394], "parser": [391, 394], "transformed_env_constructor": [391, 396], "num_env_per_collector": [392, 393], "video_tag": 394, "norm_obs_onli": 394, "use_env_cr": 394, "custom_env_mak": 394, "custom_env": 394, "return_transformed_env": 394, "action_dim_gsd": 394, "state_dim_gsd": 394, "obs_norm_state_dict": 394, "wheter": 394, "maker": [394, 404], "asyncdatacollector": 396, "distributedsyncdatacollector": 396, "submitit_delayed_launch": 396, "raycollector": 396, "rational": 396, "footnot": 396, "binarydiscretetensorspec": 396, "boundedtensorspec": 396, "discretetensorspec": 396, "lazystackedcompositespec": 396, "lazystackedtensorspec": 396, "multidiscretetensorspec": 396, "multionehotdiscretetensorspec": 396, "onehotdiscretetensorspec": 396, "unboundedcontinuoustensorspec": 396, "unboundeddiscretetensorspec": 396, "binarytodecim": 396, "tensordictmap": 396, "prompttensordicttoken": 396, "rolloutfrommodel": 396, "tokenizeddatasetload": 396, "create_infinite_iter": 396, "constantklcontrol": 396, "adaptiveklcontrol": 396, "consolidate_spec": 396, "check_no_exclusive_kei": 396, "contains_lazy_spec": 396, "nested2t": 396, "h5combin": 396, "h5split": 396, "tictactoeenv": 396, "check_marl_group": 396, "get_available_librari": 396, "terminated_or_trunc": 396, "dreamerdecod": 396, "braxwrapp": 396, "dmcontrolwrapp": 396, "jumanjienv": 396, "jumanjiwrapp": 396, "meltingpotenv": 396, "meltingpotwrapp": 396, "mogymenv": 396, "mogymwrapp": 396, "multithreadedenvwrapp": 396, "openmlenv": 396, "openspielwrapp": 396, "openspielenv": 396, "pettingzooenv": [396, 415], "robohiveenv": 396, "smacv2env": 396, "smacv2wrapp": 396, "unitymlagentsenv": 396, "unitymlagentswrapp": 396, "vmaswrapp": 396, "qvaluehook": 396, "distributionalqvaluehook": 396, "reset_nois": 396, "cemplann": 396, "mpcplannerbas": 396, "mppiplann": 396, "independentnorm": 396, "normalparamwrapp": 396, "truncatednorm": 396, "maskedonehotcategor": 396, "onehotordin": 396, "inv_softplu": 396, "vmapmodul": 396, "distributionaldqnloss": [396, 404], "discretesacloss": 396, "crossqloss": 396, "iqlloss": 396, "discreteiqlloss": 396, "cqlloss": 396, "discretecqlloss": 396, "gailloss": 396, "dtloss": 396, "onlinedtloss": 396, "td3bcloss": 396, "ppoloss": 396, "a2closs": 396, "reinforceloss": 396, "dreameractorloss": 396, "dreamermodelloss": 396, "dreamervalueloss": 396, "td0estim": [396, 403], "td1estim": [396, 403], "td0_return_estim": 396, "td0_advantage_estim": 396, "td1_return_estim": 396, "vec_td1_return_estim": 396, "td1_advantage_estim": 396, "vec_td1_advantage_estim": 396, "td_lambda_return_estim": 396, "vec_td_lambda_return_estim": 396, "td_lambda_advantage_estim": 396, "vec_td_lambda_advantage_estim": 396, "generalized_advantage_estim": 396, "vec_generalized_advantage_estim": 396, "reward2go": 396, "distance_loss": [396, 403], "hold_out_net": 396, "hold_out_param": [396, 403], "softupd": [396, 403, 404, 406, 409, 412, 415], "hardupd": [396, 403, 409], "batchsubsampl": [396, 400], "clearcudacach": 396, "countframeslog": 396, "logreward": [396, 400, 404], "optimizerhook": [396, 404], "replaybuffertrain": [396, 400, 404], "rewardnorm": 396, "selectkei": [396, 400], "trainerhookbas": [396, 400, 404], "updateweight": [396, 400, 404], "make_collector_offpolici": 396, "make_collector_onpolici": 396, "make_dqn_loss": 396, "make_replay_buff": [396, 403], "make_target_updat": 396, "parallel_env_constructor": [396, 403], "sync_async_collector": 396, "sync_sync_collector": 396, "correct_for_frame_skip": 396, "get_stats_random_rollout": 396, "mlflowlogg": 396, "get_logg": 396, "generate_exp_nam": 396, "journei": 397, "textbook": 397, "highlight": [397, 415], "ever": [397, 416], "bump": 397, "think": [397, 405, 415, 416, 422], "benefit": [397, 407, 415, 416, 419], "pr": 397, "ground": [398, 403, 417], "recycl": [398, 419], "noisier": 398, "Their": [398, 415, 416], "consistentdropoutmodul": 398, "sd": 398, "prob_modul": 398, "uncertainti": 398, "soften": 398, "backbon": [398, 406, 408, 414, 421], "make_actor": 398, "make_valu": 398, "shared_param": 398, "make_common": 398, "reusabl": [399, 403, 419], "swappabl": [399, 403], "characterist": [399, 403, 417], "trainabl": [399, 403, 409, 418], "smth": [399, 403], "metric": [399, 403], "plenti": 399, "amort": [399, 404, 405], "told": [399, 405], "pseudo": [399, 410, 417], "buri": 399, "str_valu": 399, "nutshel": [399, 403], "barto": [399, 415, 416], "chapter": [399, 411], "significantli": [399, 403, 404, 409, 416], "next_stat": 399, "value_net_loss": 399, "pow": [399, 403], "room": 399, "signifi": [399, 415, 416], "underperform": 399, "thin": 399, "intric": [399, 408], "believ": 400, "scheme": [400, 422], "substenti": 400, "_pre_steps_log_hook": 400, "_pre_optim_hook": 400, "sub_batch": 400, "_post_loss_hook": 400, "_post_optim_hook": 400, "post_optim": [400, 404], "_post_optim_log": 400, "post_optim_log": 400, "_post_steps_hook": 400, "_post_steps_log_hook": 400, "post_steps_log": 400, "reserv": 400, "logginghook": 400, "logging_hook": 400, "save_dict": 400, "some_valu": 400, "torchsnapshot": 400, "ckpt_backend": 400, "filepath": 400, "save_train": 400, "load_from_fil": 400, "25": [402, 403, 404, 406, 420], "011": [402, 420], "galleri": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "mem": [402, 420], "mb": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422], "torchrl_env": [402, 420, 422], "193": [402, 420, 422], "3141": [402, 420, 422], "dqn_with_rnn": [402, 406, 420], "438": [402, 406, 420], "2255": [402, 420], "rb_tutori": [402, 419, 420], "54": [402, 403, 404, 418, 419, 420], "374": [402, 419, 420], "506": [402, 419, 420], "coding_dqn": [402, 404, 420], "480": [402, 404, 418, 420], "1025": [402, 420], "coding_ddpg": [402, 403, 420], "929": [402, 403, 420], "331": [402, 403, 420], "multiagent_ppo": [402, 416, 420], "054": [402, 416, 420], "335": [402, 416, 420], "torchrl_demo": [402, 420, 421], "227": [402, 420, 421], "3362": [402, 417, 420, 421], "multiagent_competitive_ddpg": [402, 415, 420], "582": [402, 415, 420], "326": [402, 415, 420], "coding_ppo": [402, 405, 420], "882": [402, 405, 420], "321": [402, 405, 407, 408, 409, 420], "pretrained_model": [402, 418, 420], "209": [402, 418, 420], "2523": [402, 420], "51": [402, 404, 405, 417, 418, 420, 421], "083": [402, 417, 420], "multi_task": [402, 414, 420], "608": [402, 404, 414, 420], "45": [402, 403, 404, 406, 407, 408, 420], "904": [402, 408, 420], "733": [402, 407, 420], "513": [402, 409, 420], "558": [402, 412, 420], "324": [402, 420], "722": [402, 410, 420], "521": [402, 411, 420], "348": [402, 420], "author": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 419, 422], "vincent": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 419, 422], "moen": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 419, 422], "assembl": 403, "focus": [403, 409], "straightforward": [403, 404, 407, 408, 409, 410, 419], "maxim": [403, 409, 417], "transpar": [403, 406], "illustr": [403, 404, 408, 419], "bash": 403, "is_fork": [403, 404, 405, 406, 415, 416, 418], "get_start_method": [403, 404, 405, 406, 415, 416, 418], "collector_devic": 403, "loss_dict": 403, "oblivi": [403, 405, 419], "elementari": 403, "didact": 403, "dilut": 403, "pessimist": [403, 404, 405], "target_actor_network_param": 403, "actor_in_kei": 403, "actor_crit": 403, "noth": [403, 405], "compromis": 403, "hp": 403, "_value_estim": 403, "elif": [403, 404], "notimplementederror": 403, "unknown": 403, "_loss_actor": 403, "td_copi": 403, "actor_network_param": [403, 415], "value_network_param": [403, 415], "_loss_valu": 403, "pred_val": 403, "target_value_network_param": 403, "glue": 403, "_forward": 403, "remaind": 403, "env_librari": 403, "env_task": 403, "env_arg": [403, 404], "friendli": 403, "torchr": 403, "rescal": 403, "presum": 403, "make_transformed_env": 403, "reward_sc": 403, "marker": 403, "env_per_collector": 403, "transform_state_dict": 403, "make_t_env": 403, "cheat": 403, "10m": 403, "cautiou": 403, "magnitud": [403, 415], "thousand": [403, 406], "get_env_stat": 403, "proof_env": 403, "5000": [403, 404, 405, 412], "recal": [403, 405, 419], "ddpgmlpactor": 403, "ddpgmlpqnet": 403, "materi": 403, "ornsteinuhlenbeckprocessmodul": [403, 408], "make_ddpg_actor": 403, "q_net": 403, "tight": 403, "decoupl": [403, 409], "10_000": [403, 405], "traj_len": [403, 406], "make_record": 403, "recorder_obj": 403, "pick": [403, 404, 408], "buffer_s": [403, 404], "random_crop_len": 403, "prb": 403, "buffer_scratch_dir": 403, "temporari": 403, "dataflow": 403, "ceil_div": 403, "utd": [403, 406], "update_to_data": 403, "realiz": 403, "_must_": 403, "001": [403, 417], "outdat": 403, "trick": [403, 404], "despit": 403, "optimizer_actor": 403, "weight_decai": [403, 404], "optimizer_valu": 403, "total_collection_step": 403, "pretti": [403, 407, 411, 419], "rewards_ev": 403, "collected_fram": 403, "r0": 403, "numel": [403, 405, 406, 412, 415, 418, 419], "current_fram": [403, 415], "sampled_tensordict": 403, "gn1": 403, "clip_grad_norm_": [403, 405, 415, 416, 417], "gn2": 403, "gn": [403, 417], "td_record": 403, "rn": 403, "set_descript": [403, 405, 406, 415, 416, 417], "2f": 403, "800": [403, 404], "3027": 403, "15it": 403, "1600": [403, 404], "09": [403, 404, 415], "77it": [403, 404], "2400": [403, 404], "1307": 403, "04it": [403, 404], "3200": [403, 404], "1638": 403, "30it": [403, 404], "1905": 403, "08it": [403, 404], "48": [403, 404, 416, 418], "4800": [403, 404], "2118": 403, "24it": [403, 404], "56": [403, 404], "5600": 403, "2283": 403, "469": 403, "68": [403, 404], "6400": 403, "878": 403, "28it": [403, 404], "91": [403, 404], "57": [403, 404, 418], "202": 403, "96": [403, 404, 418], "72": [403, 404, 418], "7200": 403, "07": [403, 404, 415], "620": 403, "82": [403, 404, 405], "117": 403, "62": [403, 404, 415, 418, 419], "372": 403, "517": 403, "71it": [403, 404], "308": [403, 421], "97": [403, 404, 418], "8800": 403, "463": 403, "78it": 403, "66": [403, 404, 418, 419], "9600": 403, "373": 403, "05it": [403, 406], "73": [403, 404], "79": [403, 404, 419], "108": 403, "216": 403, "60": [403, 404, 405, 415, 416, 421], "10400it": 403, "343": 403, "65it": [403, 404], "93": [403, 404, 415, 418], "262": 403, "43": [403, 404, 416, 418], "65": [403, 404, 418], "53": [403, 404, 416, 418], "plot": [403, 405, 406, 415, 416, 417], "mention": [403, 406, 419, 422], "matplotlib": [403, 405, 406, 415, 416, 417, 419, 422], "pyplot": [403, 405, 406, 415, 416, 417, 419, 422], "plt": [403, 405, 406, 415, 416, 417, 419, 422], "zip": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "legend": [403, 415], "xlabel": [403, 406, 416, 417], "ylabel": [403, 416], "tight_layout": 403, "takeawai": [403, 404], "distpatch": 403, "jupyt": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "ipynb": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422], "sphinx": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422], "road": 404, "aspect": [404, 409], "highest": [404, 408], "prerequisit": [404, 406], "lookup": 404, "cart": 404, "pole": 404, "un": 404, "actuat": 404, "frictionless": 404, "duelingcnndqnet": 404, "egreedymodul": [404, 406, 408, 412], "is_notebook": 404, "shell": 404, "get_ipython": 404, "__class__": 404, "zmqinteractiveshel": 404, "qtconsol": 404, "terminalinteractiveshel": 404, "ipython": [404, 416, 417], "nameerror": [404, 415], "umbrella": 404, "misplac": 404, "misus": 404, "orchestr": [404, 409, 411], "five": 404, "64x64": 404, "motion": [404, 417], "obs_norm_sd": 404, "mp_context": 404, "simpler": [404, 407], "get_norm_stat": 404, "test_env": 404, "mathbb": 404, "rightarrow": 404, "make_model": 404, "dummy_env": 404, "init_bia": 404, "exploration_modul": [404, 406, 408, 412], "eps_greedy_v": 404, "eps_greedy_val_env": 404, "actor_explor": 404, "get_replay_buff": 404, "n_optim": [404, 409, 410], "themselv": 404, "parametriz": 404, "get_collector": 404, "cl": 404, "bunch": 404, "ubiquit": [404, 407], "get_loss_modul": 404, "target_updat": [404, 415], "995": 404, "hopefulli": 404, "variat": 404, "2e": [404, 417], "wd": 404, "upd": 404, "harder": [404, 421], "5_000": 404, "500000": 404, "100000": 404, "005": [404, 415], "mandatori": [404, 405, 416, 417], "fairer": 404, "budget": 404, "dqn_exp_": 404, "uuid1": [404, 422], "9895": 404, "0737": 404, "registr": 404, "cumbersom": 404, "buffer_hook": 404, "weight_updat": 404, "aliv": 404, "total_reward": 404, "19it": 404, "3688": 404, "9259": 404, "51it": 404, "3566": 404, "69it": 404, "3808": 404, "36it": [404, 406], "3626": 404, "16it": 404, "3991": 404, "224": 404, "49": [404, 418], "3869": 404, "58": [404, 418], "10it": 404, "288": 404, "3415": 404, "39it": 404, "4021": 404, "352": 404, "59": [404, 418, 419], "78": [404, 418], "54it": 404, "4295": 404, "384": 404, "416": 404, "55": [404, 418], "34it": 404, "448": 404, "83": [404, 418], "89it": 404, "85": [404, 418], "14it": 404, "4051": 404, "52": [404, 418, 419], "55it": 404, "3778": 404, "544": 404, "17it": 404, "4173": 404, "576": 404, "21it": 404, "35it": 404, "640": 404, "4082": 404, "672": 404, "89": [404, 418], "704": 404, "47": 404, "736": 404, "94it": 404, "3475": 404, "768": 404, "96it": [404, 405], "90": [404, 405, 415, 416], "02it": 404, "832": 404, "52it": 404, "864": 404, "896": 404, "92it": 404, "928": 404, "11it": 404, "960": 404, "49it": 404, "992": 404, "57it": 404, "12it": [404, 405], "1056": 404, "1088": 404, "72it": 404, "1152": 404, "1184": 404, "47it": 404, "3262": 404, "1216": 404, "41it": 404, "1248": 404, "92": [404, 418], "31it": 404, "1280": 404, "81it": [404, 405], "20it": [404, 405], "1344": 404, "67it": 404, "1376": 404, "85it": [404, 406], "1408": 404, "83it": 404, "1440": 404, "1472": 404, "66it": 404, "1504": 404, "74it": 404, "3596": 404, "1536": 404, "1568": 404, "1632": 404, "33it": 404, "1696": 404, "26it": 404, "1728": 404, "1760": 404, "07it": [404, 405], "1792": 404, "61it": 404, "1824": 404, "1856": 404, "43it": 404, "1888": 404, "62it": 404, "1920": 404, "13it": 404, "1952": [404, 405], "82it": 404, "1984": 404, "88it": 404, "2016": 404, "68it": [404, 406], "2080": 404, "2112": 404, "60it": 404, "2144": 404, "2176": 404, "2208": 404, "01it": 404, "2240": 404, "2272": 404, "99it": [404, 405], "2336": 404, "2368": 404, "70it": 404, "2432": 404, "2464": 404, "37it": [404, 405], "2496": 404, "2528": 404, "2560": 404, "97it": 404, "2624": 404, "2656": 404, "2688": 404, "73it": 404, "2720": 404, "2752": 404, "2784": 404, "2816": 404, "75it": 404, "2848": 404, "2880": 404, "2912": 404, "2944": 404, "2976": 404, "61": [404, 418], "3040": 404, "3072": 404, "3104": 404, "87it": 404, "63": [404, 418], "3136": 404, "90it": [404, 405], "3168": 404, "3232": 404, "46it": 404, "2632": 404, "3264": 404, "03it": 404, "3296": 404, "67": [404, 414, 418], "3328": 404, "3360": 404, "3392": 404, "3424": 404, "69": 404, "3456": 404, "27it": 404, "70": [404, 405, 415, 416, 418, 419], "3488": 404, "3520": 404, "71": 404, "3552": 404, "3584": 404, "38it": 404, "3616": 404, "3648": 404, "63it": 404, "74": [404, 418], "3680": 404, "91it": 404, "3712": 404, "45it": 404, "3744": 404, "06it": 404, "76": [404, 418], "3776": 404, "77": 404, "3840": 404, "3872": 404, "3904": 404, "3936": 404, "3968": 404, "56it": 404, "4032": 404, "59it": [404, 405], "4064": 404, "80it": 404, "4096": 404, "4128": 404, "4160": 404, "50it": 404, "4192": 404, "4224": 404, "4256": 404, "4288": 404, "4320": 404, "4352": 404, "4384": 404, "23it": 404, "4416": 404, "93it": 404, "4448": 404, "00it": 404, "4480": 404, "4512": 404, "4544": 404, "4576": 404, "4608": 404, "76it": 404, "4640": 404, "44it": 404, "4704": 404, "22it": 404, "4736": 404, "4768": 404, "4832": 404, "64it": 404, "4864": 404, "4896": 404, "4928": 404, "4960": 404, "4992": 404, "5024it": 404, "print_csv_files_in_fold": 404, "folder_path": 404, "csv_file": 404, "output_str": 404, "dirpath": 404, "endswith": 404, "strip": 404, "tmp": [404, 419], "tmp2m39pcza": 404, "dqn_exp_9b3eb862": 404, "9a": 404, "11ef": [404, 422], "ba73": [404, 422], "0242ac110002": [404, 422], "37784186005592346": 404, "3566153645515442": 404, "38084372878074646": 404, "40213119983673096": 404, "39912933111190796": 404, "42945271730422974": 404, "41726210713386536": 404, "09458792209625244": 404, "14821961522102356": 404, "23713186383247375": 404, "21411918103694916": 404, "22642506659030914": 404, "3241785168647766": 404, "22655165195465088": 404, "29940617084503174": 404, "3732704818248749": 404, "grad_norm_0": 404, "6357967853546143": 404, "9250563383102417": 404, "8967167139053345": 404, "9056203365325928": 404, "5238101482391357": 404, "310636520385742": 404, "7566020488739014": 404, "240334987640381": 404, "337553977966309": 404, "10000000894069672": 404, "263157367706299": 404, "qvaluenetwork": 404, "worst": 404, "accuraci": 404, "fanci": [404, 410], "1026": 404, "talk": 405, "repetit": [405, 407, 410], "six": 405, "sophist": [405, 416], "invent": 405, "overview": [405, 409, 415, 416, 421], "theta_k": 405, "pi_": 405, "exceed": 405, "discourag": [405, 417], "indispens": 405, "analyz": 405, "lingua": 405, "franca": 405, "defaultdict": [405, 417], "3e": [405, 406, 415, 416], "max_grad_norm": [405, 415, 416], "sub_batch_s": 405, "num_epoch": [405, 416], "entropy_ep": [405, 416], "charact": 405, "inverteddoublependulum": 405, "transmit": 405, "stai": 405, "confid": [405, 415, 416], "ran": 405, "f_": 405, "mu_": 405, "difficulti": [405, 422], "d_ob": 405, "d_action": 405, "policy_modul": [405, 415, 416], "briefli": [405, 415, 416], "refil": [405, 416], "easiest": [405, 409, 415, 416], "mathemat": [405, 415, 416], "tradeoff": [405, 416], "advantage_modul": 405, "lr_schedul": [405, 417], "cosineannealinglr": [405, 417], "eval_str": 405, "tensordict_data": [405, 416], "data_view": [405, 416], "subdata": [405, 415, 416], "cum_reward_str": 405, "4f": [405, 406, 417], "stepcount_str": 405, "param_group": [405, 415], "lr_str": 405, "eval_rollout": 405, "nice": [405, 407, 410], "475": 405, "8361": 405, "0859": 405, "0003": [405, 406], "477": 405, "1133": 405, "3000": 405, "482": 405, "53it": 405, "1579": 405, "483": 405, "0002": 405, "486": 405, "2131": 405, "2197": 405, "7000": 405, "490": 405, "2358": 405, "479": 405, "2503": 405, "9000": 405, "484": 405, "2429": 405, "489": 405, "2443": 405, "cap": [405, 419], "figsiz": [405, 417], "subplot": [405, 415, 417, 422], "titl": [405, 406, 416, 417], "84x84": 406, "accessori": 406, "stamp": 406, "assist": 406, "n_cell": 406, "customiz": 406, "wouldn": 406, "qval": 406, "stoch_polici": 406, "opportun": [406, 415], "uniniti": 406, "again": [406, 407, 408, 410, 416, 418, 419, 422], "redund": 406, "strongli": 406, "sake": [406, 418, 419], "20_000": [406, 417], "longest": 406, "npai": 406, "action_spread": 406, "0005": 406, "150": 406, "topic": [407, 408, 409], "straight": 407, "backtrack": 407, "encapsul": [407, 408, 409], "reset_with_act": 407, "3754": 407, "tp": 407, "stepped_data": 407, "spatial": 407, "useless": 407, "policyless": 407, "appreci": 407, "monitor": 407, "examin": [407, 415], "tackl": 408, "delv": 408, "bypass": 408, "extractor": 408, "palliat": 408, "additivegaussianmodul": [408, 415], "had": [408, 410], "exploration_polici": [408, 415], "greedili": 408, "2d": [408, 415, 416], "innov": [408, 409], "rollout_explor": 408, "sole": 409, "tradit": [409, 415], "supervis": [409, 410, 419, 422], "n_collect": 409, "get_next_batch": 409, "ddpg_loss": 409, "total_loss": 409, "prove": 409, "reliev": 409, "concern": 409, "accustom": 410, "surprisingli": 410, "fundament": 410, "art": [410, 415, 416], "multirpocess": 410, "countless": 410, "yourself": [410, 415, 416], "lightweight": 411, "portabl": 411, "everywher": 411, "log_scalar": 411, "elaps": 411, "my_scalar": 411, "saw": [411, 417, 419], "excess": 411, "349": 411, "lesson": 412, "voluntarili": 412, "value_mlp": 412, "100_000": 412, "init_rand_step": 412, "training_loop": 412, "video_record": 412, "arbitrarili": 412, "total_count": 412, "total_episod": 412, "t0": 412, "t1": 412, "conclud": [412, 418], "325": 412, "tutorials_python": 413, "tutorials_jupyt": 413, "env1_obs_kei": 414, "observation_stand": 414, "env2_obs_kei": 414, "observation_walk": 414, "tdreset1": 414, "tdreset2": 414, "lazy_stack": 414, "policy_common": 414, "policy_stand": 414, "policy_walk": 414, "But": 414, "env1_mak": 414, "env2_mak": 414, "_single_task": 414, "td_rollout": 414, "323": 414, "matteo": [415, 416], "bettini": [415, 416], "benchmarl": [415, 416], "simple_tag": 415, "maddpg": [415, 416], "multiagentparticleenviron": 415, "mpe": 415, "centralis": [415, 416], "tie": [415, 416], "iddpg": [415, 416], "typical": 415, "richard": 415, "andrew": 415, "mit": 415, "press": 415, "2018": 415, "mathbf": [415, 416], "pi": [415, 416, 417], "decentralis": [415, 416], "literatur": [415, 416], "overcom": [415, 416], "stationari": [415, 416], "concurr": [415, 416], "establish": 415, "gui": [415, 416], "is_sphinx": 415, "__sphinx_build__": 415, "n_iter": [415, 416], "evad": 415, "iteration_when_stop_training_evad": 415, "memory_s": 415, "n_optimiser_step": 415, "train_batch_s": 415, "polyak_tau": 415, "chaser": 415, "red": 415, "circl": [415, 416], "touch": [415, 417], "penal": [415, 416], "acceler": [415, 416], "obstacl": 415, "drag": [415, 416], "elast": [415, 416], "collis": [415, 416], "imped": 415, "n_chaser": 415, "n_evad": 415, "n_obstacl": 415, "use_vma": 415, "simple_tag_v3": 415, "num_good": 415, "num_adversari": 415, "num_obstacl": 415, "max_cycl": 415, "num_vmas_env": [415, 416], "num_good_ag": 415, "num_landmark": 415, "adversary_1": 415, "four": [415, 416, 417], "n_agents_in_that_group": 415, "stress": [415, 416], "paramount": [415, 416], "n_rollout_step": [415, 416], "evolut": [415, 416], "group_nam": 415, "n_agents_in_group": 415, "minor": 415, "agents_exploration_polici": 415, "utilis": [415, 416], "withing": 415, "n_obs_per_ag": [415, 416], "n_actions_per_ag": [415, 416], "share_parameters_polici": [415, 416], "policy_net": [415, 416], "_agent": 415, "grant": [415, 416], "converg": [415, 416], "share_parameters_crit": [415, 416], "obs_act": 415, "cat_modul": 415, "critic_modul": 415, "fantast": [415, 416], "reset_td": 415, "interfer": 415, "subject": [415, 417], "flatten_kei": 415, "process_batch": 415, "group_shap": 415, "get_item_shap": [415, 416], "nested_done_kei": 415, "nested_terminated_kei": 415, "desc": [415, 416], "episode_reward_mean_": 415, "episode_reward_mean_map": 415, "train_group_map": 415, "group_batch": 415, "_group": 415, "loss_nam": 415, "episode_reward_mean": [415, 416], "episode_reward_mean_adversari": 415, "episode_reward_mean_ag": 415, "proce": 415, "screen": 415, "fig": 415, "set_ylabel": 415, "axvlin": 415, "color": 415, "orang": 415, "set_xlabel": 415, "video_logg": 415, "vmas_log": 415, "env_with_rend": 415, "vmas_rend": 415, "print_log_dir": 415, "profici": [415, 416], "lidar": 416, "sensor": 416, "mappo": 416, "ippo": 416, "analys": 416, "visualis": 416, "vmas_devic": 416, "6_000": 416, "minibatch_s": 416, "generalis": 416, "simd": 416, "warp": 416, "todai": 416, "surround": 416, "dot": [416, 417], "collid": 416, "scenario_nam": 416, "final_rew": 416, "agent_collis": 416, "critic_net": 416, "minibatch": 416, "episode_reward_mean_list": 416, "critic_network_param": 416, "target_critic_network_param": 416, "4579917788505554": 416, "23260341584682465": 416, "1713813543319702": 416, "386345624923706": 416, "8939578533172607": 416, "2214083671569824": 416, "1770293712615967": 416, "6274709701538086": 416, "73148250579834": 416, "737316608428955": 416, "xvfb": 416, "pyvirtualdisplai": 416, "1400": 416, "900": 416, "pil": 416, "rendering_callback": 416, "fromarrai": 416, "gif": 416, "save_al": 416, "append_imag": 416, "freeli": 417, "undertaken": 417, "broader": 417, "wider": 417, "algebra": 417, "acquaint": 417, "avenu": 417, "_apply_to_composit": 417, "default_x": 417, "default_i": 417, "upward": 417, "angular": 417, "sin": 417, "rad": 417, "sec": 417, "angl": 417, "deleg": 417, "new_th": 417, "new_thdot": 417, "g_forc": 417, "angle_norm": 417, "albeit": 417, "high_th": 417, "high_thdot": 417, "low_th": 417, "low_thdot": 417, "trivial": 417, "irrelev": 417, "_make_spec": 417, "td_param": 417, "render_fp": 417, "random_": 417, "_make_step": 417, "staticmethod": 417, "showcas": 417, "skeleton": 417, "_apply_transform": [417, 422], "_inv_apply_transform": [417, 422], "subset": [417, 418], "sine": 417, "cosin": 417, "sintransform": 417, "costransform": 417, "t_sin": 417, "t_co": 417, "cat_transform": 417, "traceback": [417, 421, 422], "744": 417, "816": 417, "assertionerror": 417, "simple_rollout": 417, "unexplor": 417, "init_td": 417, "traj_return": 417, "last_reward": 417, "is_ipython": 417, "inlin": 417, "get_backend": 417, "ion": 417, "gcf": 417, "clear_output": 417, "explain": 418, "semat": 418, "r3mtransform": 418, "env_transform": [418, 422], "s3": 418, "amazonaw": 418, "r3m_50": 418, "374m": 418, "9m": 418, "136mb": 418, "9mb": 418, "2m": 418, "0mb": 418, "0m": 418, "7mb": 418, "4m": 418, "3mb": 418, "6m": 418, "104m": 418, "1mb": 418, "115m": 418, "131m": 418, "5mb": 418, "148m": 418, "2mb": 418, "162m": 418, "171m": 418, "179m": 418, "185m": 418, "195m": 418, "8mb": 418, "202m": 418, "212m": 418, "6mb": 418, "219m": 418, "229m": 418, "244m": 418, "250m": 418, "262m": 418, "268m": 418, "279m": 418, "4mb": 418, "293m": 418, "300m": 418, "311m": 418, "326m": 418, "332m": 418, "342m": 418, "349m": 418, "359m": 418, "365m": 418, "373m": 418, "wiser": 418, "163": 418, "2524": 418, "batteri": 419, "buffer_list": 419, "lowest": 419, "medium": 419, "buffer_lazytensor": 419, "buffer_lazymemmap": 419, "tempdir": 419, "tmp782gwxdc": 419, "fullest": 419, "mydata": 419, "background": 419, "question": [419, 421], "_i": 419, "artifici": 419, "0893e": 419, "hamper": 419, "she": 419, "pars": 419, "proport": 419, "133": 419, "127": 419, "121": [419, 422], "138": 419, "115": 419, "barcontain": 419, "artist": 419, "211": 419, "167": 419, "154": 419, "132": 419, "reappear": 419, "unfold": 419, "problemat": 419, "4th": 419, "prioritizedslicesampl": 419, "tensordictmaxvaluewrit": 419, "demo": 421, "icml": 421, "vmoen": 421, "fb": 421, "invest": 421, "platform": 421, "media": 421, "predominantli": 421, "tensordict1": 421, "tensordict2": 421, "tensordict_sampl": 421, "_sampler": 421, "_sum_tre": 421, "modulenotfounderror": 421, "28791671991348267": 421, "noopresetenv": [421, 422], "424": 421, "2165": 421, "823": 421, "1138": 421, "4533": 421, "2322": 421, "1505": 421, "788": 421, "tensordict_in": 421, "gym_lik": 421, "_output_transform": 421, "385": 421, "174": 421, "_add_pixel_observ": 421, "186": 421, "187": 421, "dictcomp": 421, "pixel_kei": 421, "_render": 421, "_render_kwarg": 421, "204": 421, "329": 421, "231": 421, "scale_img": 421, "pygam": 421, "smoothscal": 421, "typeerror": 421, "backbone_modul": 421, "params_expand": 421, "exec_sequ": 421, "tensordict_exp": 421, "base_modul": 421, "tensordicts_prealloc": 421, "tensordicts_stack": 421, "tensordict_rollout": [421, 422], "disclaim": 421, "concatmodul": 421, "loss_td": 421, "year": 421, "roadmap": 421, "compris": 421, "contributor": 421, "curiou": 421, "nascent": 421, "unsupervis": 422, "unifi": 422, "_build_env": 422, "amidar": 422, "assault": 422, "3541": 422, "deserv": 422, "__episode__": 422, "__trajectory__": 422, "void": 422, "reproduct": 422, "reset_data": 422, "tensordict_tprim": 422, "imshow": 422, "axesimag": 422, "0x7ffa5015d3c0": 422, "wrapper1": 422, "wrapper2": 422, "obviou": 422, "truth": 422, "env_transformed_bi": 422, "stanc": 422, "transformeddistribut": 422, "base_dist": 422, "concat": 422, "mofidi": 422, "transformedenviron": 422, "moderet": 422, "computation": 422, "legitim": 422, "incom": 422, "amongst": 422, "has_cuda": 422, "wor": 422, "convention": 422, "markovian": 422, "3288080526": 422, "constain": 422, "bar_": 422, "get_someth": 422, "bar_c2a7212": 422, "9aec": 422, "aargh": 422, "is_clos": 422, "foo_list": 422, "batched_env": 422, "_dispatch_caller_parallel": 422, "0x7ffa3a3f51e0": 422, "bar_c71bb346": 422, "8a87": 422, "bar_c7167b88": 422, "8a21": 422, "bar_c7193576": 422, "83af": 422, "particularili": 422, "evolv": 422, "steadi": 422, "approx": 422, "2161": 422, "1139": 422, "1573": 422, "2028": 422, "2540": 422, "1923": 422, "_extra_st": 422, "observation_ssq": 422, "observation_sum": 422, "697": 422, "dispach": 422, "absor": 422}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MultiCategorical"], [42, 0, 1, "", "MultiDiscreteTensorSpec"], [43, 0, 1, "", "MultiOneHot"], [44, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [45, 0, 1, "", "MultiStep"], [46, 0, 1, "", "Nested2TED"], [47, 0, 1, "", "NonTensor"], [48, 0, 1, "", "NonTensorSpec"], [49, 0, 1, "", "OneHotDiscreteTensorSpec"], [50, 0, 1, "", "PairwiseDataset"], [51, 0, 1, "", "PrioritizedReplayBuffer"], [52, 0, 1, "", "PromptData"], [53, 0, 1, "", "PromptTensorDictTokenizer"], [54, 0, 1, "", "QueryModule"], [55, 0, 1, "", "RandomProjectionHash"], [56, 0, 1, "", "ReplayBuffer"], [57, 0, 1, "", "RewardData"], [58, 0, 1, "", "RolloutFromModel"], [59, 0, 1, "", "SipHash"], [60, 0, 1, "", "Stacked"], [61, 0, 1, "", "StackedComposite"], [62, 0, 1, "", "TED2Flat"], [63, 0, 1, "", "TED2Nested"], [64, 0, 1, "", "TensorDictMap"], [65, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [66, 0, 1, "", "TensorDictReplayBuffer"], [67, 0, 1, "", "TensorDictTokenizer"], [68, 0, 1, "", "TensorMap"], [69, 0, 1, "", "TensorSpec"], [70, 0, 1, "", "TokenizedDatasetLoader"], [71, 0, 1, "", "Unbounded"], [72, 0, 1, "", "UnboundedContinuous"], [73, 0, 1, "", "UnboundedContinuousTensorSpec"], [74, 0, 1, "", "UnboundedDiscrete"], [75, 0, 1, "", "UnboundedDiscreteTensorSpec"], [76, 0, 1, "", "check_no_exclusive_keys"], [77, 0, 1, "", "consolidate_spec"], [78, 0, 1, "", "contains_lazy_spec"], [79, 0, 1, "", "create_infinite_iterator"], [89, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MultiCategorical": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 3, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 4, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "compile"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "mtia"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_load_state_dict_pre_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_post_hook"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_submodule"], [45, 1, 1, "", "share_memory"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 4, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 3, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_categorical"], [49, 1, 1, "", "to_categorical_spec"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "to_one_hot"], [49, 1, 1, "", "to_one_hot_spec"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "update_mask"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[50, 4, 1, "", "batch_size"], [50, 4, 1, "", "device"], [50, 1, 1, "", "from_dataset"], [50, 1, 1, "", "from_tensordict"], [50, 1, 1, "", "get"], [50, 1, 1, "", "load"], [50, 1, 1, "", "load_"], [50, 1, 1, "", "load_memmap"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "memmap"], [50, 1, 1, "", "memmap_"], [50, 1, 1, "", "memmap_like"], [50, 1, 1, "", "memmap_refresh_"], [50, 4, 1, "", "names"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to_tensordict"], [50, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 4, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 4, 1, "", "storage"], [51, 4, 1, "", "write_count"], [51, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[52, 4, 1, "", "batch_size"], [52, 4, 1, "", "device"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 4, 1, "", "names"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[54, 1, 1, "", "add_module"], [54, 1, 1, "", "apply"], [54, 1, 1, "", "bfloat16"], [54, 1, 1, "", "buffers"], [54, 1, 1, "", "children"], [54, 1, 1, "", "compile"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 1, 1, "", "double"], [54, 1, 1, "", "eval"], [54, 1, 1, "", "extra_repr"], [54, 1, 1, "", "float"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "get_buffer"], [54, 1, 1, "", "get_extra_state"], [54, 1, 1, "", "get_parameter"], [54, 1, 1, "", "get_submodule"], [54, 1, 1, "", "half"], [54, 1, 1, "", "ipu"], [54, 1, 1, "", "is_tdmodule_compatible"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "modules"], [54, 1, 1, "", "mtia"], [54, 1, 1, "", "named_buffers"], [54, 1, 1, "", "named_children"], [54, 1, 1, "", "named_modules"], [54, 1, 1, "", "named_parameters"], [54, 1, 1, "", "parameters"], [54, 1, 1, "", "register_backward_hook"], [54, 1, 1, "", "register_buffer"], [54, 1, 1, "", "register_forward_hook"], [54, 1, 1, "", "register_forward_pre_hook"], [54, 1, 1, "", "register_full_backward_hook"], [54, 1, 1, "", "register_full_backward_pre_hook"], [54, 1, 1, "", "register_load_state_dict_post_hook"], [54, 1, 1, "", "register_load_state_dict_pre_hook"], [54, 1, 1, "", "register_module"], [54, 1, 1, "", "register_parameter"], [54, 1, 1, "", "register_state_dict_post_hook"], [54, 1, 1, "", "register_state_dict_pre_hook"], [54, 1, 1, "", "requires_grad_"], [54, 1, 1, "", "reset_out_keys"], [54, 1, 1, "", "reset_parameters_recursive"], [54, 1, 1, "", "select_out_keys"], [54, 1, 1, "", "set_extra_state"], [54, 1, 1, "", "set_submodule"], [54, 1, 1, "", "share_memory"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_empty"], [54, 1, 1, "", "train"], [54, 1, 1, "", "type"], [54, 1, 1, "", "xpu"], [54, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dump"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "load"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "register_load_hook"], [56, 1, 1, "", "register_save_hook"], [56, 1, 1, "", "sample"], [56, 4, 1, "", "sampler"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 4, 1, "", "storage"], [56, 4, 1, "", "write_count"], [56, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[57, 4, 1, "", "batch_size"], [57, 4, 1, "", "device"], [57, 1, 1, "", "from_tensordict"], [57, 1, 1, "", "get"], [57, 1, 1, "", "load"], [57, 1, 1, "", "load_"], [57, 1, 1, "", "load_memmap"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "memmap"], [57, 1, 1, "", "memmap_"], [57, 1, 1, "", "memmap_like"], [57, 1, 1, "", "memmap_refresh_"], [57, 4, 1, "", "names"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to_tensordict"], [57, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[58, 1, 1, "", "create_rollout_td"], [58, 1, 1, "", "generate"], [58, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[59, 1, 1, "", "add_module"], [59, 1, 1, "", "apply"], [59, 1, 1, "", "bfloat16"], [59, 1, 1, "", "buffers"], [59, 1, 1, "", "children"], [59, 1, 1, "", "compile"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 1, 1, "", "double"], [59, 1, 1, "", "eval"], [59, 1, 1, "", "extra_repr"], [59, 1, 1, "", "float"], [59, 1, 1, "", "forward"], [59, 1, 1, "", "get_buffer"], [59, 1, 1, "", "get_extra_state"], [59, 1, 1, "", "get_parameter"], [59, 1, 1, "", "get_submodule"], [59, 1, 1, "", "half"], [59, 1, 1, "", "ipu"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "modules"], [59, 1, 1, "", "mtia"], [59, 1, 1, "", "named_buffers"], [59, 1, 1, "", "named_children"], [59, 1, 1, "", "named_modules"], [59, 1, 1, "", "named_parameters"], [59, 1, 1, "", "parameters"], [59, 1, 1, "", "register_backward_hook"], [59, 1, 1, "", "register_buffer"], [59, 1, 1, "", "register_forward_hook"], [59, 1, 1, "", "register_forward_pre_hook"], [59, 1, 1, "", "register_full_backward_hook"], [59, 1, 1, "", "register_full_backward_pre_hook"], [59, 1, 1, "", "register_load_state_dict_post_hook"], [59, 1, 1, "", "register_load_state_dict_pre_hook"], [59, 1, 1, "", "register_module"], [59, 1, 1, "", "register_parameter"], [59, 1, 1, "", "register_state_dict_post_hook"], [59, 1, 1, "", "register_state_dict_pre_hook"], [59, 1, 1, "", "requires_grad_"], [59, 1, 1, "", "set_extra_state"], [59, 1, 1, "", "set_submodule"], [59, 1, 1, "", "share_memory"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_empty"], [59, 1, 1, "", "train"], [59, 1, 1, "", "type"], [59, 1, 1, "", "xpu"], [59, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 4, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "get"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_empty"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "items"], [61, 1, 1, "", "keys"], [61, 1, 1, "", "lock_"], [61, 1, 1, "", "make_neg_dim"], [61, 4, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unlock_"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "values"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[64, 1, 1, "", "add_module"], [64, 1, 1, "", "apply"], [64, 1, 1, "", "bfloat16"], [64, 1, 1, "", "buffers"], [64, 1, 1, "", "children"], [64, 1, 1, "", "compile"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 1, 1, "", "double"], [64, 1, 1, "", "eval"], [64, 1, 1, "", "extra_repr"], [64, 1, 1, "", "float"], [64, 1, 1, "", "forward"], [64, 1, 1, "", "from_tensordict_pair"], [64, 1, 1, "", "get_buffer"], [64, 1, 1, "", "get_extra_state"], [64, 1, 1, "", "get_parameter"], [64, 1, 1, "", "get_submodule"], [64, 1, 1, "", "half"], [64, 1, 1, "", "ipu"], [64, 1, 1, "", "is_tdmodule_compatible"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "modules"], [64, 1, 1, "", "mtia"], [64, 1, 1, "", "named_buffers"], [64, 1, 1, "", "named_children"], [64, 1, 1, "", "named_modules"], [64, 1, 1, "", "named_parameters"], [64, 1, 1, "", "parameters"], [64, 1, 1, "", "register_backward_hook"], [64, 1, 1, "", "register_buffer"], [64, 1, 1, "", "register_forward_hook"], [64, 1, 1, "", "register_forward_pre_hook"], [64, 1, 1, "", "register_full_backward_hook"], [64, 1, 1, "", "register_full_backward_pre_hook"], [64, 1, 1, "", "register_load_state_dict_post_hook"], [64, 1, 1, "", "register_load_state_dict_pre_hook"], [64, 1, 1, "", "register_module"], [64, 1, 1, "", "register_parameter"], [64, 1, 1, "", "register_state_dict_post_hook"], [64, 1, 1, "", "register_state_dict_pre_hook"], [64, 1, 1, "", "requires_grad_"], [64, 1, 1, "", "reset_out_keys"], [64, 1, 1, "", "reset_parameters_recursive"], [64, 1, 1, "", "select_out_keys"], [64, 1, 1, "", "set_extra_state"], [64, 1, 1, "", "set_submodule"], [64, 1, 1, "", "share_memory"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_empty"], [64, 1, 1, "", "train"], [64, 1, 1, "", "type"], [64, 1, 1, "", "xpu"], [64, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 4, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 4, 1, "", "storage"], [65, 4, 1, "", "write_count"], [65, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 4, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 4, 1, "", "storage"], [66, 4, 1, "", "write_count"], [66, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[69, 1, 1, "", "assert_is_in"], [69, 1, 1, "", "clear_device_"], [69, 1, 1, "", "clone"], [69, 1, 1, "", "contains"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 4, 1, "", "device"], [69, 1, 1, "", "encode"], [69, 1, 1, "", "expand"], [69, 1, 1, "", "flatten"], [69, 1, 1, "", "implements_for_spec"], [69, 1, 1, "", "index"], [69, 1, 1, "", "is_in"], [69, 1, 1, "", "make_neg_dim"], [69, 4, 1, "", "ndim"], [69, 1, 1, "", "ndimension"], [69, 1, 1, "", "one"], [69, 1, 1, "", "ones"], [69, 1, 1, "", "project"], [69, 1, 1, "", "rand"], [69, 1, 1, "", "reshape"], [69, 1, 1, "", "sample"], [69, 1, 1, "", "squeeze"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_numpy"], [69, 1, 1, "", "type_check"], [69, 1, 1, "", "unflatten"], [69, 1, 1, "", "unsqueeze"], [69, 1, 1, "", "view"], [69, 1, 1, "", "zero"], [69, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[70, 1, 1, "", "dataset_to_tensordict"], [70, 1, 1, "", "load"]], "torchrl.data.Unbounded": [[71, 1, 1, "", "assert_is_in"], [71, 1, 1, "", "clear_device_"], [71, 1, 1, "", "clone"], [71, 1, 1, "", "contains"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 4, 1, "", "device"], [71, 1, 1, "", "encode"], [71, 1, 1, "", "expand"], [71, 1, 1, "", "flatten"], [71, 1, 1, "", "implements_for_spec"], [71, 1, 1, "", "index"], [71, 1, 1, "", "is_in"], [71, 1, 1, "", "make_neg_dim"], [71, 4, 1, "", "ndim"], [71, 1, 1, "", "ndimension"], [71, 1, 1, "", "one"], [71, 1, 1, "", "ones"], [71, 1, 1, "", "project"], [71, 1, 1, "", "rand"], [71, 1, 1, "", "reshape"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "squeeze"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_numpy"], [71, 1, 1, "", "type_check"], [71, 1, 1, "", "unflatten"], [71, 1, 1, "", "unsqueeze"], [71, 1, 1, "", "view"], [71, 1, 1, "", "zero"], [71, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[72, 1, 1, "", "assert_is_in"], [72, 1, 1, "", "clear_device_"], [72, 1, 1, "", "clone"], [72, 1, 1, "", "contains"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 4, 1, "", "device"], [72, 1, 1, "", "encode"], [72, 1, 1, "", "expand"], [72, 1, 1, "", "flatten"], [72, 1, 1, "", "implements_for_spec"], [72, 1, 1, "", "index"], [72, 1, 1, "", "is_in"], [72, 1, 1, "", "make_neg_dim"], [72, 4, 1, "", "ndim"], [72, 1, 1, "", "ndimension"], [72, 1, 1, "", "one"], [72, 1, 1, "", "ones"], [72, 1, 1, "", "project"], [72, 1, 1, "", "rand"], [72, 1, 1, "", "reshape"], [72, 1, 1, "", "sample"], [72, 1, 1, "", "squeeze"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_numpy"], [72, 1, 1, "", "type_check"], [72, 1, 1, "", "unflatten"], [72, 1, 1, "", "unsqueeze"], [72, 1, 1, "", "view"], [72, 1, 1, "", "zero"], [72, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 4, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 4, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[80, 0, 1, "", "AtariDQNExperienceReplay"], [81, 0, 1, "", "BaseDatasetExperienceReplay"], [82, 0, 1, "", "D4RLExperienceReplay"], [83, 0, 1, "", "GenDGRLExperienceReplay"], [84, 0, 1, "", "MinariExperienceReplay"], [85, 0, 1, "", "OpenMLExperienceReplay"], [86, 0, 1, "", "OpenXExperienceReplay"], [87, 0, 1, "", "RobosetExperienceReplay"], [88, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 4, 1, "", "data_path"], [80, 4, 1, "", "data_path_root"], [80, 1, 1, "", "delete"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "preprocess"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 4, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 4, 1, "", "storage"], [80, 4, 1, "", "write_count"], [80, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 4, 1, "", "data_path"], [81, 4, 1, "", "data_path_root"], [81, 1, 1, "", "delete"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "preprocess"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 4, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 4, 1, "", "storage"], [81, 4, 1, "", "write_count"], [81, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 4, 1, "", "data_path"], [82, 4, 1, "", "data_path_root"], [82, 1, 1, "", "delete"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "preprocess"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 4, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 4, 1, "", "storage"], [82, 4, 1, "", "write_count"], [82, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[83, 1, 1, "", "add"], [83, 1, 1, "", "append_transform"], [83, 4, 1, "", "data_path"], [83, 4, 1, "", "data_path_root"], [83, 1, 1, "", "delete"], [83, 1, 1, "", "dump"], [83, 1, 1, "", "dumps"], [83, 1, 1, "", "empty"], [83, 1, 1, "", "extend"], [83, 1, 1, "", "insert_transform"], [83, 1, 1, "", "load"], [83, 1, 1, "", "loads"], [83, 1, 1, "", "preprocess"], [83, 1, 1, "", "register_load_hook"], [83, 1, 1, "", "register_save_hook"], [83, 1, 1, "", "sample"], [83, 4, 1, "", "sampler"], [83, 1, 1, "", "save"], [83, 1, 1, "", "set_sampler"], [83, 1, 1, "", "set_storage"], [83, 1, 1, "", "set_writer"], [83, 4, 1, "", "storage"], [83, 4, 1, "", "write_count"], [83, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[84, 1, 1, "", "add"], [84, 1, 1, "", "append_transform"], [84, 4, 1, "", "data_path"], [84, 4, 1, "", "data_path_root"], [84, 1, 1, "", "delete"], [84, 1, 1, "", "dump"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "empty"], [84, 1, 1, "", "extend"], [84, 1, 1, "", "insert_transform"], [84, 1, 1, "", "load"], [84, 1, 1, "", "loads"], [84, 1, 1, "", "preprocess"], [84, 1, 1, "", "register_load_hook"], [84, 1, 1, "", "register_save_hook"], [84, 1, 1, "", "sample"], [84, 4, 1, "", "sampler"], [84, 1, 1, "", "save"], [84, 1, 1, "", "set_sampler"], [84, 1, 1, "", "set_storage"], [84, 1, 1, "", "set_writer"], [84, 4, 1, "", "storage"], [84, 4, 1, "", "write_count"], [84, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[85, 1, 1, "", "add"], [85, 1, 1, "", "append_transform"], [85, 4, 1, "", "data_path"], [85, 4, 1, "", "data_path_root"], [85, 1, 1, "", "delete"], [85, 1, 1, "", "dump"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "empty"], [85, 1, 1, "", "extend"], [85, 1, 1, "", "insert_transform"], [85, 1, 1, "", "load"], [85, 1, 1, "", "loads"], [85, 1, 1, "", "preprocess"], [85, 1, 1, "", "register_load_hook"], [85, 1, 1, "", "register_save_hook"], [85, 1, 1, "", "sample"], [85, 4, 1, "", "sampler"], [85, 1, 1, "", "save"], [85, 1, 1, "", "set_sampler"], [85, 1, 1, "", "set_storage"], [85, 1, 1, "", "set_writer"], [85, 4, 1, "", "storage"], [85, 4, 1, "", "write_count"], [85, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[86, 1, 1, "", "add"], [86, 1, 1, "", "append_transform"], [86, 4, 1, "", "data_path"], [86, 4, 1, "", "data_path_root"], [86, 1, 1, "", "delete"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "dumps"], [86, 1, 1, "", "empty"], [86, 1, 1, "", "extend"], [86, 1, 1, "", "insert_transform"], [86, 1, 1, "", "load"], [86, 1, 1, "", "loads"], [86, 1, 1, "", "preprocess"], [86, 1, 1, "", "register_load_hook"], [86, 1, 1, "", "register_save_hook"], [86, 1, 1, "", "sample"], [86, 4, 1, "", "sampler"], [86, 1, 1, "", "save"], [86, 1, 1, "", "set_sampler"], [86, 1, 1, "", "set_storage"], [86, 1, 1, "", "set_writer"], [86, 4, 1, "", "storage"], [86, 4, 1, "", "write_count"], [86, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[87, 1, 1, "", "add"], [87, 1, 1, "", "append_transform"], [87, 4, 1, "", "data_path"], [87, 4, 1, "", "data_path_root"], [87, 1, 1, "", "delete"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "empty"], [87, 1, 1, "", "extend"], [87, 1, 1, "", "insert_transform"], [87, 1, 1, "", "load"], [87, 1, 1, "", "loads"], [87, 1, 1, "", "preprocess"], [87, 1, 1, "", "register_load_hook"], [87, 1, 1, "", "register_save_hook"], [87, 1, 1, "", "sample"], [87, 4, 1, "", "sampler"], [87, 1, 1, "", "save"], [87, 1, 1, "", "set_sampler"], [87, 1, 1, "", "set_storage"], [87, 1, 1, "", "set_writer"], [87, 4, 1, "", "storage"], [87, 4, 1, "", "write_count"], [87, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[88, 1, 1, "", "add"], [88, 1, 1, "", "append_transform"], [88, 4, 1, "", "data_path"], [88, 4, 1, "", "data_path_root"], [88, 1, 1, "", "delete"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "dumps"], [88, 1, 1, "", "empty"], [88, 1, 1, "", "extend"], [88, 1, 1, "", "insert_transform"], [88, 1, 1, "", "load"], [88, 1, 1, "", "loads"], [88, 1, 1, "", "preprocess"], [88, 1, 1, "", "register_load_hook"], [88, 1, 1, "", "register_save_hook"], [88, 1, 1, "", "sample"], [88, 4, 1, "", "sampler"], [88, 1, 1, "", "save"], [88, 1, 1, "", "set_sampler"], [88, 1, 1, "", "set_storage"], [88, 1, 1, "", "set_writer"], [88, 4, 1, "", "storage"], [88, 4, 1, "", "write_count"], [88, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[90, 0, 1, "", "FlatStorageCheckpointer"], [91, 0, 1, "", "H5StorageCheckpointer"], [92, 0, 1, "", "ImmutableDatasetWriter"], [93, 0, 1, "", "LazyMemmapStorage"], [94, 0, 1, "", "LazyTensorStorage"], [95, 0, 1, "", "ListStorage"], [96, 0, 1, "", "ListStorageCheckpointer"], [97, 0, 1, "", "NestedStorageCheckpointer"], [98, 0, 1, "", "PrioritizedSampler"], [99, 0, 1, "", "PrioritizedSliceSampler"], [100, 0, 1, "", "RandomSampler"], [101, 0, 1, "", "ReplayBufferEnsemble"], [102, 0, 1, "", "RoundRobinWriter"], [103, 0, 1, "", "Sampler"], [104, 0, 1, "", "SamplerEnsemble"], [105, 0, 1, "", "SamplerWithoutReplacement"], [106, 0, 1, "", "SliceSampler"], [107, 0, 1, "", "SliceSamplerWithoutReplacement"], [108, 0, 1, "", "Storage"], [109, 0, 1, "", "StorageCheckpointerBase"], [110, 0, 1, "", "StorageEnsemble"], [111, 0, 1, "", "StorageEnsembleCheckpointer"], [112, 0, 1, "", "TensorDictMaxValueWriter"], [113, 0, 1, "", "TensorDictRoundRobinWriter"], [114, 0, 1, "", "TensorStorage"], [115, 0, 1, "", "TensorStorageCheckpointer"], [116, 0, 1, "", "Writer"], [117, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[92, 1, 1, "", "add"], [92, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[93, 1, 1, "", "attach"], [93, 1, 1, "", "dump"], [93, 1, 1, "", "load"], [93, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[98, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[99, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[101, 1, 1, "", "add"], [101, 1, 1, "", "append_transform"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "dumps"], [101, 1, 1, "", "empty"], [101, 1, 1, "", "extend"], [101, 1, 1, "", "insert_transform"], [101, 1, 1, "", "load"], [101, 1, 1, "", "loads"], [101, 1, 1, "", "register_load_hook"], [101, 1, 1, "", "register_save_hook"], [101, 1, 1, "", "sample"], [101, 4, 1, "", "sampler"], [101, 1, 1, "", "save"], [101, 1, 1, "", "set_sampler"], [101, 1, 1, "", "set_storage"], [101, 1, 1, "", "set_writer"], [101, 4, 1, "", "storage"], [101, 4, 1, "", "write_count"], [101, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[102, 1, 1, "", "add"], [102, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[108, 1, 1, "", "attach"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "load"], [108, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[110, 1, 1, "", "attach"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "load"], [110, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[112, 1, 1, "", "add"], [112, 1, 1, "", "extend"], [112, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[114, 1, 1, "", "attach"], [114, 1, 1, "", "dump"], [114, 1, 1, "", "load"], [114, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.envs": [[118, 2, 1, "", "BraxEnv"], [119, 2, 1, "", "BraxWrapper"], [120, 2, 1, "", "DMControlEnv"], [121, 2, 1, "", "DMControlWrapper"], [122, 0, 1, "", "EnvBase"], [123, 0, 1, "", "EnvCreator"], [124, 0, 1, "", "EnvMetaData"], [125, 2, 1, "", "GymEnv"], [126, 0, 1, "", "GymLikeEnv"], [127, 2, 1, "", "GymWrapper"], [128, 2, 1, "", "HabitatEnv"], [129, 2, 1, "", "IsaacGymEnv"], [130, 2, 1, "", "IsaacGymWrapper"], [131, 2, 1, "", "JumanjiEnv"], [132, 2, 1, "", "JumanjiWrapper"], [133, 2, 1, "", "MOGymEnv"], [134, 2, 1, "", "MOGymWrapper"], [135, 2, 1, "", "MarlGroupMapType"], [136, 2, 1, "", "MeltingpotEnv"], [137, 2, 1, "", "MeltingpotWrapper"], [138, 2, 1, "", "ModelBasedEnvBase"], [139, 2, 1, "", "MultiThreadedEnv"], [140, 2, 1, "", "MultiThreadedEnvWrapper"], [141, 2, 1, "", "OpenMLEnv"], [142, 2, 1, "", "OpenSpielEnv"], [143, 2, 1, "", "OpenSpielWrapper"], [144, 0, 1, "", "ParallelEnv"], [145, 0, 1, "", "PendulumEnv"], [146, 2, 1, "", "PettingZooEnv"], [147, 2, 1, "", "PettingZooWrapper"], [148, 2, 1, "", "RoboHiveEnv"], [149, 2, 1, "", "SMACv2Env"], [150, 2, 1, "", "SMACv2Wrapper"], [151, 0, 1, "", "SerialEnv"], [152, 0, 1, "", "TicTacToeEnv"], [153, 2, 1, "", "UnityMLAgentsEnv"], [154, 2, 1, "", "UnityMLAgentsWrapper"], [155, 2, 1, "", "VmasEnv"], [156, 2, 1, "", "VmasWrapper"], [157, 2, 1, "", "check_marl_grouping"], [158, 2, 1, "", "gym_backend"], [138, 1, 1, "", "rand_step"], [138, 1, 1, "", "reset"], [138, 1, 1, "", "rollout"], [161, 2, 1, "", "set_gym_backend"], [138, 1, 1, "", "set_seed"], [138, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[122, 4, 1, "", "action_key"], [122, 4, 1, "", "action_keys"], [122, 4, 1, "", "action_spec"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 4, 1, "", "batch_locked"], [122, 4, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "children"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 4, 1, "", "done_key"], [122, 4, 1, "", "done_keys"], [122, 4, 1, "", "done_keys_groups"], [122, 4, 1, "", "done_spec"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 4, 1, "", "full_action_spec"], [122, 4, 1, "", "full_done_spec"], [122, 4, 1, "", "full_reward_spec"], [122, 4, 1, "", "full_state_spec"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 4, 1, "", "input_spec"], [122, 1, 1, "", "ipu"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "mtia"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 4, 1, "", "observation_spec"], [122, 4, 1, "", "output_spec"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "id0", "rand_step"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_load_state_dict_pre_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_post_hook"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "id1", "reset"], [122, 4, 1, "", "reset_keys"], [122, 4, 1, "", "reward_key"], [122, 4, 1, "", "reward_keys"], [122, 4, 1, "", "reward_spec"], [122, 1, 1, "id2", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "id3", "set_seed"], [122, 1, 1, "", "set_submodule"], [122, 4, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 4, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 4, 1, "", "state_keys"], [122, 4, 1, "", "state_spec"], [122, 1, 1, "id4", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[123, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[126, 4, 1, "", "action_key"], [126, 4, 1, "", "action_keys"], [126, 4, 1, "", "action_spec"], [126, 1, 1, "", "add_module"], [126, 1, 1, "", "add_truncated_keys"], [126, 1, 1, "", "append_transform"], [126, 1, 1, "", "apply"], [126, 1, 1, "", "auto_register_info_dict"], [126, 4, 1, "", "batch_locked"], [126, 4, 1, "", "batch_size"], [126, 1, 1, "", "bfloat16"], [126, 1, 1, "", "buffers"], [126, 1, 1, "", "children"], [126, 1, 1, "", "close"], [126, 1, 1, "", "compile"], [126, 1, 1, "", "cpu"], [126, 1, 1, "", "cuda"], [126, 4, 1, "", "done_key"], [126, 4, 1, "", "done_keys"], [126, 4, 1, "", "done_keys_groups"], [126, 4, 1, "", "done_spec"], [126, 1, 1, "", "double"], [126, 1, 1, "", "empty_cache"], [126, 1, 1, "", "eval"], [126, 1, 1, "", "extra_repr"], [126, 1, 1, "", "fake_tensordict"], [126, 1, 1, "", "float"], [126, 1, 1, "", "forward"], [126, 4, 1, "", "full_action_spec"], [126, 4, 1, "", "full_done_spec"], [126, 4, 1, "", "full_reward_spec"], [126, 4, 1, "", "full_state_spec"], [126, 1, 1, "", "get_buffer"], [126, 1, 1, "", "get_extra_state"], [126, 1, 1, "", "get_parameter"], [126, 1, 1, "", "get_submodule"], [126, 1, 1, "", "half"], [126, 4, 1, "", "input_spec"], [126, 1, 1, "", "ipu"], [126, 1, 1, "", "load_state_dict"], [126, 1, 1, "", "maybe_reset"], [126, 1, 1, "", "modules"], [126, 1, 1, "", "mtia"], [126, 1, 1, "", "named_buffers"], [126, 1, 1, "", "named_children"], [126, 1, 1, "", "named_modules"], [126, 1, 1, "", "named_parameters"], [126, 4, 1, "", "observation_spec"], [126, 4, 1, "", "output_spec"], [126, 1, 1, "", "parameters"], [126, 1, 1, "", "rand_action"], [126, 1, 1, "", "rand_step"], [126, 1, 1, "", "read_action"], [126, 1, 1, "", "read_done"], [126, 1, 1, "", "read_obs"], [126, 1, 1, "", "read_reward"], [126, 1, 1, "", "register_backward_hook"], [126, 1, 1, "", "register_buffer"], [126, 1, 1, "", "register_forward_hook"], [126, 1, 1, "", "register_forward_pre_hook"], [126, 1, 1, "", "register_full_backward_hook"], [126, 1, 1, "", "register_full_backward_pre_hook"], [126, 1, 1, "", "register_gym"], [126, 1, 1, "", "register_load_state_dict_post_hook"], [126, 1, 1, "", "register_load_state_dict_pre_hook"], [126, 1, 1, "", "register_module"], [126, 1, 1, "", "register_parameter"], [126, 1, 1, "", "register_state_dict_post_hook"], [126, 1, 1, "", "register_state_dict_pre_hook"], [126, 1, 1, "", "requires_grad_"], [126, 1, 1, "", "reset"], [126, 4, 1, "", "reset_keys"], [126, 4, 1, "", "reward_key"], [126, 4, 1, "", "reward_keys"], [126, 4, 1, "", "reward_spec"], [126, 1, 1, "", "rollout"], [126, 1, 1, "", "set_extra_state"], [126, 1, 1, "", "set_info_dict_reader"], [126, 1, 1, "", "set_seed"], [126, 1, 1, "", "set_submodule"], [126, 4, 1, "", "shape"], [126, 1, 1, "", "share_memory"], [126, 4, 1, "", "specs"], [126, 1, 1, "", "state_dict"], [126, 4, 1, "", "state_keys"], [126, 4, 1, "", "state_spec"], [126, 1, 1, "", "step"], [126, 1, 1, "", "step_and_maybe_reset"], [126, 1, 1, "", "to"], [126, 1, 1, "", "to_empty"], [126, 1, 1, "", "train"], [126, 1, 1, "", "type"], [126, 1, 1, "", "xpu"], [126, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[144, 4, 1, "", "action_key"], [144, 4, 1, "", "action_keys"], [144, 4, 1, "", "action_spec"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 4, 1, "", "batch_locked"], [144, 4, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "children"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 4, 1, "", "done_key"], [144, 4, 1, "", "done_keys"], [144, 4, 1, "", "done_keys_groups"], [144, 4, 1, "", "done_spec"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 4, 1, "", "full_action_spec"], [144, 4, 1, "", "full_done_spec"], [144, 4, 1, "", "full_reward_spec"], [144, 4, 1, "", "full_state_spec"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 4, 1, "", "input_spec"], [144, 1, 1, "", "ipu"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 4, 1, "", "observation_spec"], [144, 4, 1, "", "output_spec"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 4, 1, "", "reset_keys"], [144, 4, 1, "", "reward_key"], [144, 4, 1, "", "reward_keys"], [144, 4, 1, "", "reward_spec"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_submodule"], [144, 4, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 4, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 4, 1, "", "state_keys"], [144, 4, 1, "", "state_spec"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "update_kwargs"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[145, 4, 1, "", "action_key"], [145, 4, 1, "", "action_keys"], [145, 4, 1, "", "action_spec"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 4, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 4, 1, "", "done_key"], [145, 4, 1, "", "done_keys"], [145, 4, 1, "", "done_keys_groups"], [145, 4, 1, "", "done_spec"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 4, 1, "", "full_action_spec"], [145, 4, 1, "", "full_done_spec"], [145, 4, 1, "", "full_reward_spec"], [145, 4, 1, "", "full_state_spec"], [145, 1, 1, "", "gen_params"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 4, 1, "", "input_spec"], [145, 1, 1, "", "ipu"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 4, 1, "", "observation_spec"], [145, 4, 1, "", "output_spec"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 4, 1, "", "reset_keys"], [145, 4, 1, "", "reward_key"], [145, 4, 1, "", "reward_keys"], [145, 4, 1, "", "reward_spec"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_submodule"], [145, 4, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 4, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 4, 1, "", "state_keys"], [145, 4, 1, "", "state_spec"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[151, 4, 1, "", "action_key"], [151, 4, 1, "", "action_keys"], [151, 4, 1, "", "action_spec"], [151, 1, 1, "", "add_module"], [151, 1, 1, "", "add_truncated_keys"], [151, 1, 1, "", "append_transform"], [151, 1, 1, "", "apply"], [151, 4, 1, "", "batch_locked"], [151, 4, 1, "", "batch_size"], [151, 1, 1, "", "bfloat16"], [151, 1, 1, "", "buffers"], [151, 1, 1, "", "children"], [151, 1, 1, "", "compile"], [151, 1, 1, "", "cpu"], [151, 1, 1, "", "cuda"], [151, 4, 1, "", "done_key"], [151, 4, 1, "", "done_keys"], [151, 4, 1, "", "done_keys_groups"], [151, 4, 1, "", "done_spec"], [151, 1, 1, "", "double"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 1, 1, "", "extra_repr"], [151, 1, 1, "", "fake_tensordict"], [151, 1, 1, "", "float"], [151, 1, 1, "", "forward"], [151, 4, 1, "", "full_action_spec"], [151, 4, 1, "", "full_done_spec"], [151, 4, 1, "", "full_reward_spec"], [151, 4, 1, "", "full_state_spec"], [151, 1, 1, "", "get_buffer"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "get_parameter"], [151, 1, 1, "", "get_submodule"], [151, 1, 1, "", "half"], [151, 4, 1, "", "input_spec"], [151, 1, 1, "", "ipu"], [151, 1, 1, "", "load_state_dict"], [151, 1, 1, "", "maybe_reset"], [151, 1, 1, "", "modules"], [151, 1, 1, "", "mtia"], [151, 1, 1, "", "named_buffers"], [151, 1, 1, "", "named_children"], [151, 1, 1, "", "named_modules"], [151, 1, 1, "", "named_parameters"], [151, 4, 1, "", "observation_spec"], [151, 4, 1, "", "output_spec"], [151, 1, 1, "", "parameters"], [151, 1, 1, "", "rand_action"], [151, 1, 1, "", "rand_step"], [151, 1, 1, "", "register_backward_hook"], [151, 1, 1, "", "register_buffer"], [151, 1, 1, "", "register_forward_hook"], [151, 1, 1, "", "register_forward_pre_hook"], [151, 1, 1, "", "register_full_backward_hook"], [151, 1, 1, "", "register_full_backward_pre_hook"], [151, 1, 1, "", "register_gym"], [151, 1, 1, "", "register_load_state_dict_post_hook"], [151, 1, 1, "", "register_load_state_dict_pre_hook"], [151, 1, 1, "", "register_module"], [151, 1, 1, "", "register_parameter"], [151, 1, 1, "", "register_state_dict_post_hook"], [151, 1, 1, "", "register_state_dict_pre_hook"], [151, 1, 1, "", "requires_grad_"], [151, 1, 1, "", "reset"], [151, 4, 1, "", "reset_keys"], [151, 4, 1, "", "reward_key"], [151, 4, 1, "", "reward_keys"], [151, 4, 1, "", "reward_spec"], [151, 1, 1, "", "rollout"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "set_submodule"], [151, 4, 1, "", "shape"], [151, 1, 1, "", "share_memory"], [151, 4, 1, "", "specs"], [151, 1, 1, "", "state_dict"], [151, 4, 1, "", "state_keys"], [151, 4, 1, "", "state_spec"], [151, 1, 1, "", "step"], [151, 1, 1, "", "step_and_maybe_reset"], [151, 1, 1, "", "to"], [151, 1, 1, "", "to_empty"], [151, 1, 1, "", "train"], [151, 1, 1, "", "type"], [151, 1, 1, "", "update_kwargs"], [151, 1, 1, "", "xpu"], [151, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[152, 4, 1, "", "action_key"], [152, 4, 1, "", "action_keys"], [152, 4, 1, "", "action_spec"], [152, 1, 1, "", "add_module"], [152, 1, 1, "", "add_truncated_keys"], [152, 1, 1, "", "append_transform"], [152, 1, 1, "", "apply"], [152, 4, 1, "", "batch_size"], [152, 1, 1, "", "bfloat16"], [152, 1, 1, "", "buffers"], [152, 1, 1, "", "children"], [152, 1, 1, "", "compile"], [152, 1, 1, "", "cpu"], [152, 1, 1, "", "cuda"], [152, 4, 1, "", "done_key"], [152, 4, 1, "", "done_keys"], [152, 4, 1, "", "done_keys_groups"], [152, 4, 1, "", "done_spec"], [152, 1, 1, "", "double"], [152, 1, 1, "", "empty_cache"], [152, 1, 1, "", "eval"], [152, 1, 1, "", "extra_repr"], [152, 1, 1, "", "fake_tensordict"], [152, 1, 1, "", "float"], [152, 1, 1, "", "forward"], [152, 4, 1, "", "full_action_spec"], [152, 4, 1, "", "full_done_spec"], [152, 4, 1, "", "full_reward_spec"], [152, 4, 1, "", "full_state_spec"], [152, 1, 1, "", "get_buffer"], [152, 1, 1, "", "get_extra_state"], [152, 1, 1, "", "get_parameter"], [152, 1, 1, "", "get_submodule"], [152, 1, 1, "", "half"], [152, 4, 1, "", "input_spec"], [152, 1, 1, "", "ipu"], [152, 1, 1, "", "load_state_dict"], [152, 1, 1, "", "maybe_reset"], [152, 1, 1, "", "modules"], [152, 1, 1, "", "mtia"], [152, 1, 1, "", "named_buffers"], [152, 1, 1, "", "named_children"], [152, 1, 1, "", "named_modules"], [152, 1, 1, "", "named_parameters"], [152, 4, 1, "", "observation_spec"], [152, 4, 1, "", "output_spec"], [152, 1, 1, "", "parameters"], [152, 1, 1, "", "rand_action"], [152, 1, 1, "", "rand_step"], [152, 1, 1, "", "register_backward_hook"], [152, 1, 1, "", "register_buffer"], [152, 1, 1, "", "register_forward_hook"], [152, 1, 1, "", "register_forward_pre_hook"], [152, 1, 1, "", "register_full_backward_hook"], [152, 1, 1, "", "register_full_backward_pre_hook"], [152, 1, 1, "", "register_gym"], [152, 1, 1, "", "register_load_state_dict_post_hook"], [152, 1, 1, "", "register_load_state_dict_pre_hook"], [152, 1, 1, "", "register_module"], [152, 1, 1, "", "register_parameter"], [152, 1, 1, "", "register_state_dict_post_hook"], [152, 1, 1, "", "register_state_dict_pre_hook"], [152, 1, 1, "", "requires_grad_"], [152, 1, 1, "", "reset"], [152, 4, 1, "", "reset_keys"], [152, 4, 1, "", "reward_key"], [152, 4, 1, "", "reward_keys"], [152, 4, 1, "", "reward_spec"], [152, 1, 1, "", "rollout"], [152, 1, 1, "", "set_extra_state"], [152, 1, 1, "", "set_seed"], [152, 1, 1, "", "set_submodule"], [152, 4, 1, "", "shape"], [152, 1, 1, "", "share_memory"], [152, 4, 1, "", "specs"], [152, 1, 1, "", "state_dict"], [152, 4, 1, "", "state_keys"], [152, 4, 1, "", "state_spec"], [152, 1, 1, "", "step"], [152, 1, 1, "", "step_and_maybe_reset"], [152, 1, 1, "", "to"], [152, 1, 1, "", "to_empty"], [152, 1, 1, "", "train"], [152, 1, 1, "", "type"], [152, 1, 1, "", "xpu"], [152, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[159, 2, 1, "", "DreamerDecoder"], [160, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[162, 0, 1, "", "ActionDiscretizer"], [163, 0, 1, "", "ActionMask"], [164, 0, 1, "", "AutoResetEnv"], [165, 0, 1, "", "AutoResetTransform"], [166, 0, 1, "", "BatchSizeTransform"], [167, 0, 1, "", "BinarizeReward"], [168, 0, 1, "", "BurnInTransform"], [169, 0, 1, "", "CatFrames"], [170, 0, 1, "", "CatTensors"], [171, 0, 1, "", "CenterCrop"], [172, 0, 1, "", "ClipTransform"], [173, 0, 1, "", "Compose"], [174, 0, 1, "", "Crop"], [175, 0, 1, "", "DTypeCastTransform"], [176, 0, 1, "", "DeviceCastTransform"], [177, 0, 1, "", "DiscreteActionProjection"], [178, 0, 1, "", "DoubleToFloat"], [179, 0, 1, "", "EndOfLifeTransform"], [180, 0, 1, "", "ExcludeTransform"], [181, 0, 1, "", "FiniteTensorDictCheck"], [182, 0, 1, "", "FlattenObservation"], [183, 0, 1, "", "FrameSkipTransform"], [184, 0, 1, "", "GrayScale"], [185, 0, 1, "", "InitTracker"], [186, 0, 1, "", "KLRewardTransform"], [187, 0, 1, "", "NoopResetEnv"], [188, 0, 1, "", "ObservationNorm"], [189, 0, 1, "", "ObservationTransform"], [190, 0, 1, "", "PermuteTransform"], [191, 0, 1, "", "PinMemoryTransform"], [192, 0, 1, "", "R3MTransform"], [193, 0, 1, "", "RandomCropTensorDict"], [194, 0, 1, "", "RemoveEmptySpecs"], [195, 0, 1, "", "RenameTransform"], [196, 0, 1, "", "Resize"], [197, 0, 1, "", "Reward2GoTransform"], [198, 0, 1, "", "RewardClipping"], [199, 0, 1, "", "RewardScaling"], [200, 0, 1, "", "RewardSum"], [201, 0, 1, "", "SelectTransform"], [202, 0, 1, "", "SignTransform"], [203, 0, 1, "", "SqueezeTransform"], [204, 0, 1, "", "StepCounter"], [205, 0, 1, "", "TargetReturn"], [206, 0, 1, "", "TensorDictPrimer"], [207, 0, 1, "", "TimeMaxPool"], [208, 0, 1, "", "ToTensorImage"], [209, 0, 1, "", "TrajCounter"], [210, 0, 1, "", "Transform"], [211, 0, 1, "", "TransformedEnv"], [212, 0, 1, "", "UnsqueezeTransform"], [213, 0, 1, "", "VC1Transform"], [214, 0, 1, "", "VIPRewardTransform"], [215, 0, 1, "", "VIPTransform"], [216, 0, 1, "", "VecGymEnvTransform"], [217, 0, 1, "", "VecNorm"], [218, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[162, 0, 1, "", "SamplingStrategy"], [162, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[163, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[164, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[165, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_env_batch_size"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[167, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[168, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[171, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[172, 1, 1, "", "transform_observation_spec"], [172, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[173, 1, 1, "", "append"], [173, 1, 1, "", "forward"], [173, 1, 1, "", "insert"], [173, 1, 1, "", "to"], [173, 1, 1, "", "transform_env_batch_size"], [173, 1, 1, "", "transform_env_device"], [173, 1, 1, "", "transform_input_spec"], [173, 1, 1, "", "transform_observation_spec"], [173, 1, 1, "", "transform_output_spec"], [173, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "transform_input_spec"], [175, 1, 1, "", "transform_observation_spec"], [175, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_done_spec"], [176, 1, 1, "", "transform_env_device"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_output_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[177, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "register_keys"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[181, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[183, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[188, 1, 1, "", "init_stats"], [188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[190, 1, 1, "", "transform_input_spec"], [190, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[191, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[192, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[193, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[197, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[198, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[199, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[202, 1, 1, "", "transform_observation_spec"], [202, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_observation_spec"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "to"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TrajCounter": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "load_state_dict"], [209, 1, 1, "", "state_dict"], [209, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[210, 4, 1, "", "container"], [210, 1, 1, "", "forward"], [210, 4, 1, "", "parent"], [210, 1, 1, "", "to"], [210, 1, 1, "", "transform_done_spec"], [210, 1, 1, "", "transform_env_batch_size"], [210, 1, 1, "", "transform_env_device"], [210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_observation_spec"], [210, 1, 1, "", "transform_output_spec"], [210, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[211, 1, 1, "", "add_truncated_keys"], [211, 1, 1, "", "append_transform"], [211, 4, 1, "", "batch_locked"], [211, 4, 1, "", "batch_size"], [211, 1, 1, "", "empty_cache"], [211, 1, 1, "", "eval"], [211, 4, 1, "", "input_spec"], [211, 1, 1, "", "insert_transform"], [211, 1, 1, "", "load_state_dict"], [211, 4, 1, "", "output_spec"], [211, 1, 1, "", "set_missing_tolerance"], [211, 1, 1, "", "set_seed"], [211, 1, 1, "", "state_dict"], [211, 1, 1, "", "to"], [211, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[212, 1, 1, "", "transform_input_spec"], [212, 1, 1, "", "transform_observation_spec"], [212, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "make_noload_model"], [213, 1, 1, "", "to"], [213, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[215, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[217, 1, 1, "", "build_td_for_shared_vecnorm"], [217, 1, 1, "", "forward"], [217, 1, 1, "", "freeze"], [217, 1, 1, "", "frozen_copy"], [217, 1, 1, "", "get_extra_state"], [217, 4, 1, "", "loc"], [217, 4, 1, "", "scale"], [217, 1, 1, "", "set_extra_state"], [217, 4, 1, "", "standard_normal"], [217, 1, 1, "", "to_observation_norm"], [217, 1, 1, "", "transform_observation_spec"], [217, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[219, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[219, 1, 1, "", "add_module"], [219, 1, 1, "", "apply"], [219, 1, 1, "", "bfloat16"], [219, 1, 1, "", "buffers"], [219, 1, 1, "", "children"], [219, 1, 1, "", "compile"], [219, 4, 1, "", "container"], [219, 1, 1, "", "cpu"], [219, 1, 1, "", "cuda"], [219, 1, 1, "", "double"], [219, 1, 1, "", "eval"], [219, 1, 1, "", "extra_repr"], [219, 1, 1, "", "float"], [219, 1, 1, "", "forward"], [219, 1, 1, "", "get_buffer"], [219, 1, 1, "", "get_extra_state"], [219, 1, 1, "", "get_parameter"], [219, 1, 1, "", "get_submodule"], [219, 1, 1, "", "half"], [219, 1, 1, "", "ipu"], [219, 1, 1, "", "load_state_dict"], [219, 1, 1, "", "modules"], [219, 1, 1, "", "mtia"], [219, 4, 1, "", "n_steps"], [219, 1, 1, "", "named_buffers"], [219, 1, 1, "", "named_children"], [219, 1, 1, "", "named_modules"], [219, 1, 1, "", "named_parameters"], [219, 1, 1, "", "parameters"], [219, 4, 1, "", "parent"], [219, 1, 1, "", "register_backward_hook"], [219, 1, 1, "", "register_buffer"], [219, 1, 1, "", "register_forward_hook"], [219, 1, 1, "", "register_forward_pre_hook"], [219, 1, 1, "", "register_full_backward_hook"], [219, 1, 1, "", "register_full_backward_pre_hook"], [219, 1, 1, "", "register_load_state_dict_post_hook"], [219, 1, 1, "", "register_load_state_dict_pre_hook"], [219, 1, 1, "", "register_module"], [219, 1, 1, "", "register_parameter"], [219, 1, 1, "", "register_state_dict_post_hook"], [219, 1, 1, "", "register_state_dict_pre_hook"], [219, 1, 1, "", "requires_grad_"], [219, 1, 1, "", "set_extra_state"], [219, 1, 1, "", "set_submodule"], [219, 1, 1, "", "share_memory"], [219, 1, 1, "", "state_dict"], [219, 1, 1, "", "to"], [219, 1, 1, "", "to_empty"], [219, 1, 1, "", "train"], [219, 1, 1, "", "transform_done_spec"], [219, 1, 1, "", "transform_env_batch_size"], [219, 1, 1, "", "transform_env_device"], [219, 1, 1, "", "transform_input_spec"], [219, 1, 1, "", "transform_observation_spec"], [219, 1, 1, "", "transform_output_spec"], [219, 1, 1, "", "transform_reward_spec"], [219, 1, 1, "", "type"], [219, 1, 1, "", "xpu"], [219, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[220, 2, 1, "", "RandomPolicy"], [221, 2, 1, "", "check_env_specs"], [222, 2, 1, "", "exploration_type"], [223, 2, 1, "", "get_available_libraries"], [224, 2, 1, "", "make_composite_from_td"], [225, 2, 1, "", "set_exploration_type"], [226, 2, 1, "", "step_mdp"], [227, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[228, 0, 1, "", "AdditiveGaussianModule"], [229, 0, 1, "", "AdditiveGaussianWrapper"], [230, 0, 1, "", "BatchRenorm1d"], [231, 0, 1, "", "CEMPlanner"], [232, 0, 1, "", "ConsistentDropoutModule"], [233, 0, 1, "", "Conv3dNet"], [234, 0, 1, "", "ConvNet"], [235, 0, 1, "", "DTActor"], [236, 0, 1, "", "DdpgCnnActor"], [237, 0, 1, "", "DdpgCnnQNet"], [238, 0, 1, "", "DdpgMlpActor"], [239, 0, 1, "", "DdpgMlpQNet"], [240, 0, 1, "", "DecisionTransformer"], [241, 0, 1, "", "Delta"], [242, 0, 1, "", "DistributionalDQNnet"], [243, 0, 1, "", "DistributionalQValueHook"], [244, 0, 1, "", "DreamerActor"], [245, 0, 1, "", "DuelingCnnDQNet"], [246, 0, 1, "", "EGreedyModule"], [247, 0, 1, "", "EGreedyWrapper"], [248, 0, 1, "", "GRU"], [249, 0, 1, "", "GRUCell"], [250, 0, 1, "", "GRUModule"], [251, 0, 1, "", "IndependentNormal"], [252, 0, 1, "", "LSTM"], [253, 0, 1, "", "LSTMCell"], [254, 0, 1, "", "LSTMModule"], [255, 0, 1, "", "MLP"], [256, 0, 1, "", "MPCPlannerBase"], [257, 0, 1, "", "MPPIPlanner"], [258, 0, 1, "", "MaskedCategorical"], [259, 0, 1, "", "MaskedOneHotCategorical"], [260, 0, 1, "", "MultiAgentConvNet"], [261, 0, 1, "", "MultiAgentMLP"], [262, 0, 1, "", "MultiAgentNetBase"], [263, 0, 1, "", "NoisyLazyLinear"], [264, 0, 1, "", "NoisyLinear"], [265, 0, 1, "", "NormalParamWrapper"], [266, 0, 1, "", "ObsDecoder"], [267, 0, 1, "", "ObsEncoder"], [268, 0, 1, "", "OneHotCategorical"], [269, 0, 1, "", "OneHotOrdinal"], [270, 0, 1, "", "OnlineDTActor"], [271, 0, 1, "", "Ordinal"], [272, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [273, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [274, 0, 1, "", "QMixer"], [275, 0, 1, "", "QValueHook"], [276, 0, 1, "", "RSSMPosterior"], [277, 0, 1, "", "RSSMPrior"], [278, 0, 1, "", "Squeeze2dLayer"], [279, 0, 1, "", "SqueezeLayer"], [280, 0, 1, "", "TanhDelta"], [281, 0, 1, "", "TanhNormal"], [282, 0, 1, "", "TruncatedNormal"], [283, 0, 1, "", "VDNMixer"], [284, 0, 1, "", "VmapModule"], [285, 0, 1, "", "reset_noise"]], "torchrl.modules.AdditiveGaussianModule": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[230, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[231, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropoutModule": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[233, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[234, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[235, 1, 1, "", "default_config"], [235, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[236, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[237, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[238, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[239, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[240, 0, 1, "", "DTConfig"], [240, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[241, 1, 1, "", "log_prob"], [241, 4, 1, "", "mean"], [241, 4, 1, "", "mode"], [241, 1, 1, "", "rsample"], [241, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[242, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[244, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[245, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "step"]], "torchrl.modules.GRU": [[248, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[249, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[250, 1, 1, "", "forward"], [250, 1, 1, "id0", "make_tensordict_primer"], [250, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[251, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[252, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[253, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[254, 1, 1, "", "forward"], [254, 1, 1, "id0", "make_tensordict_primer"], [254, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[255, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[257, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[258, 1, 1, "", "log_prob"], [258, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[259, 1, 1, "", "log_prob"], [259, 4, 1, "", "mode"], [259, 1, 1, "", "rsample"], [259, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "from_stateful_net"], [262, 1, 1, "", "get_stateful_net"], [262, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[263, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[265, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[266, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[267, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[268, 1, 1, "", "log_prob"], [268, 4, 1, "", "mode"], [268, 1, 1, "", "rsample"], [268, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[270, 1, 1, "", "default_config"], [270, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[274, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[276, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[277, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[279, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[280, 4, 1, "", "mean"], [280, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[281, 1, 1, "", "get_mode"], [281, 4, 1, "", "mean"], [281, 4, 1, "", "mode"], [281, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[282, 1, 1, "", "log_prob"], [282, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[283, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[284, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[286, 0, 1, "", "Actor"], [287, 0, 1, "", "ActorCriticOperator"], [288, 0, 1, "", "ActorCriticWrapper"], [289, 0, 1, "", "ActorValueOperator"], [290, 0, 1, "", "DecisionTransformerInferenceWrapper"], [291, 0, 1, "", "DistributionalQValueActor"], [292, 0, 1, "", "DistributionalQValueModule"], [293, 0, 1, "", "LMHeadActorValueOperator"], [294, 0, 1, "", "MultiStepActorWrapper"], [295, 0, 1, "", "ProbabilisticActor"], [296, 0, 1, "", "QValueActor"], [297, 0, 1, "", "QValueModule"], [298, 0, 1, "", "SafeModule"], [299, 0, 1, "", "SafeProbabilisticModule"], [300, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [301, 0, 1, "", "SafeSequential"], [302, 0, 1, "", "TanhModule"], [303, 0, 1, "", "ValueOperator"], [304, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[287, 1, 1, "", "get_critic_operator"], [287, 1, 1, "", "get_policy_head"], [287, 1, 1, "", "get_value_head"], [287, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[288, 1, 1, "", "get_policy_head"], [288, 1, 1, "", "get_policy_operator"], [288, 1, 1, "", "get_value_head"], [288, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[289, 1, 1, "", "get_policy_head"], [289, 1, 1, "", "get_policy_operator"], [289, 1, 1, "", "get_value_head"], [289, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "mask_context"], [290, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[292, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[294, 1, 1, "", "forward"], [294, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[297, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[298, 1, 1, "", "random"], [298, 1, 1, "", "random_sample"], [298, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[299, 1, 1, "", "random"], [299, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[302, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[304, 1, 1, "", "get_reward_operator"], [304, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[305, 0, 1, "", "biased_softplus"], [306, 0, 1, "", "get_primers_from_module"], [307, 0, 1, "", "inv_softplus"], [308, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[305, 1, 1, "", "forward"]], "torchrl.objectives": [[309, 0, 1, "", "A2CLoss"], [310, 0, 1, "", "CQLLoss"], [311, 0, 1, "", "ClipPPOLoss"], [312, 0, 1, "", "CrossQLoss"], [313, 0, 1, "", "DDPGLoss"], [314, 0, 1, "", "DQNLoss"], [315, 0, 1, "", "DTLoss"], [316, 0, 1, "", "DiscreteCQLLoss"], [317, 0, 1, "", "DiscreteIQLLoss"], [318, 0, 1, "", "DiscreteSACLoss"], [319, 0, 1, "", "DistributionalDQNLoss"], [320, 0, 1, "", "DreamerActorLoss"], [321, 0, 1, "", "DreamerModelLoss"], [322, 0, 1, "", "DreamerValueLoss"], [323, 0, 1, "", "GAILLoss"], [324, 0, 1, "", "HardUpdate"], [325, 0, 1, "", "IQLLoss"], [326, 0, 1, "", "KLPENPPOLoss"], [327, 0, 1, "", "LossModule"], [328, 0, 1, "", "OnlineDTLoss"], [329, 0, 1, "", "PPOLoss"], [330, 0, 1, "", "REDQLoss"], [331, 0, 1, "", "ReinforceLoss"], [332, 0, 1, "", "SACLoss"], [333, 0, 1, "", "SoftUpdate"], [334, 0, 1, "", "TD3BCLoss"], [335, 0, 1, "", "TD3Loss"], [336, 0, 1, "", "ValueEstimators"], [337, 0, 1, "", "default_value_kwargs"], [338, 0, 1, "", "distance_loss"], [339, 0, 1, "", "hold_out_net"], [340, 0, 1, "", "hold_out_params"], [342, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[309, 1, 1, "", "forward"], [309, 4, 1, "", "functional"], [309, 1, 1, "", "loss_critic"], [309, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[311, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[312, 1, 1, "", "actor_loss"], [312, 1, 1, "", "alpha_loss"], [312, 1, 1, "", "forward"], [312, 1, 1, "", "load_state_dict"], [312, 1, 1, "", "make_value_estimator"], [312, 1, 1, "", "qvalue_loss"], [312, 1, 1, "", "state_dict"], [312, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[314, 1, 1, "", "forward"], [314, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[315, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[316, 1, 1, "", "forward"], [316, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[317, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[318, 1, 1, "", "forward"], [318, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[320, 1, 1, "", "forward"], [320, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[321, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[322, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[323, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[325, 1, 1, "", "forward"], [325, 1, 1, "", "loss_value_diff"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[326, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[327, 1, 1, "", "convert_to_functional"], [327, 1, 1, "", "forward"], [327, 1, 1, "", "from_stateful_net"], [327, 4, 1, "", "functional"], [327, 1, 1, "", "get_stateful_net"], [327, 1, 1, "", "make_value_estimator"], [327, 1, 1, "", "named_parameters"], [327, 1, 1, "", "parameters"], [327, 1, 1, "", "set_keys"], [327, 4, 1, "", "value_estimator"], [327, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[328, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[329, 1, 1, "", "forward"], [329, 4, 1, "", "functional"], [329, 1, 1, "", "loss_critic"], [329, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[331, 1, 1, "", "forward"], [331, 4, 1, "", "functional"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[332, 1, 1, "", "forward"], [332, 1, 1, "", "load_state_dict"], [332, 1, 1, "", "make_value_estimator"], [332, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[334, 1, 1, "", "actor_loss"], [334, 1, 1, "", "forward"], [334, 1, 1, "", "make_value_estimator"], [334, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[335, 1, 1, "", "forward"], [335, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[341, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[341, 1, 1, "", "forward"], [341, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[343, 0, 1, "", "GAE"], [344, 0, 1, "", "TD0Estimator"], [345, 0, 1, "", "TD1Estimator"], [346, 0, 1, "", "TDLambdaEstimator"], [347, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[343, 1, 1, "", "forward"], [343, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[344, 1, 1, "", "forward"], [344, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[345, 1, 1, "", "forward"], [345, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[346, 1, 1, "", "forward"], [346, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[347, 1, 1, "", "forward"], [347, 1, 1, "", "set_keys"], [347, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[348, 0, 1, "", "generalized_advantage_estimate"], [349, 0, 1, "", "reward2go"], [350, 0, 1, "", "td0_advantage_estimate"], [351, 0, 1, "", "td0_return_estimate"], [352, 0, 1, "", "td1_advantage_estimate"], [353, 0, 1, "", "td1_return_estimate"], [354, 0, 1, "", "td_lambda_advantage_estimate"], [355, 0, 1, "", "td_lambda_return_estimate"], [356, 0, 1, "", "vec_generalized_advantage_estimate"], [357, 0, 1, "", "vec_td1_advantage_estimate"], [358, 0, 1, "", "vec_td1_return_estimate"], [359, 0, 1, "", "vec_td_lambda_advantage_estimate"], [360, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[361, 2, 1, "", "PixelRenderTransform"], [362, 2, 1, "", "TensorDictRecorder"], [363, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[364, 2, 1, "", "Logger"], [366, 2, 1, "", "generate_exp_name"], [367, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[365, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[368, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[369, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[370, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[371, 0, 1, "", "BatchSubSampler"], [372, 0, 1, "", "ClearCudaCache"], [373, 0, 1, "", "CountFramesLog"], [374, 0, 1, "", "LogReward"], [375, 0, 1, "", "OptimizerHook"], [376, 0, 1, "", "Recorder"], [377, 0, 1, "", "ReplayBufferTrainer"], [378, 0, 1, "", "RewardNormalizer"], [379, 0, 1, "", "SelectKeys"], [380, 0, 1, "", "Trainer"], [381, 0, 1, "", "TrainerHookBase"], [382, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[371, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[372, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[373, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[374, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[375, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[376, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[377, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[378, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[379, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[381, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[382, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[383, 2, 1, "", "correct_for_frame_skip"], [384, 2, 1, "", "get_stats_random_rollout"], [385, 2, 1, "", "make_collector_offpolicy"], [386, 2, 1, "", "make_collector_onpolicy"], [387, 2, 1, "", "make_dqn_loss"], [388, 2, 1, "", "make_replay_buffer"], [389, 2, 1, "", "make_target_updater"], [390, 2, 1, "", "make_trainer"], [391, 2, 1, "", "parallel_env_constructor"], [392, 2, 1, "", "sync_async_collector"], [393, 2, 1, "", "sync_sync_collector"], [394, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 398, 399, 400, 401, 403, 404, 405, 408, 415, 416, 417, 421, 422], "instal": [0, 6, 7, 421], "get": [0, 407, 408, 409, 410, 411, 412], "start": [0, 407, 408, 409, 410, 411, 412], "tutori": [0, 405, 415, 416], "basic": [0, 419], "intermedi": [0, 8], "advanc": 0, "refer": [0, 396], "knowledg": [0, 397], "base": [0, 2, 7, 397], "indic": 0, "tabl": 0, "collector": [1, 403, 404, 405, 406, 410, 412, 415, 416, 421], "packag": [1, 2, 3, 398, 399, 400, 401], "batch": [1, 403, 417, 419], "size": [1, 403, 419], "polici": [1, 2, 4, 403, 405, 406, 408, 412, 414, 415, 416, 417], "copi": 1, "replai": [1, 2, 403, 404, 405, 406, 410, 412, 415, 416, 419, 421], "buffer": [1, 2, 403, 404, 405, 406, 410, 412, 415, 416, 419, 421], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 403, 404, 405, 410, 412, 415, 416, 421], "distribut": [1, 398], "helper": [1, 3], "function": [1, 4, 399, 404, 405, 409, 415, 416, 421], "compos": [2, 173], "support": 2, "type": 2, "choos": 2, "storag": [2, 108, 403, 410, 419], "sampl": [2, 419], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 404, 419], "trajectori": [2, 419], "checkpoint": [2, 400], "episod": [2, 4], "format": 2, "ted": [2, 407], "The": [2, 403], "rational": 2, "behind": 2, "structur": [2, 419], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 398, 419, 421], "special": [2, 408, 421], "case": 2, "footnot": 2, "multi": [2, 3, 398, 399, 414, 415, 416], "agent": [2, 3, 4, 398, 399, 415, 416], "present": 2, "rnn": 2, "transform": [2, 3, 210, 403, 405, 407, 415, 416, 417, 419, 421, 422], "step": [2, 403, 405, 407, 410, 415, 416, 419, 422], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 69], "numer": 2, "subclass": 2, "categor": [2, 30], "tree": 2, "forest": 2, "reinforc": [2, 399, 405, 415, 416], "learn": [2, 4, 398, 405, 415, 416], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 398, 399, 400, 415], "env": [3, 417, 421, 422], "vector": [3, 421], "custom": [3, 11, 417, 419], "nativ": 3, "environ": [3, 4, 6, 7, 403, 404, 405, 406, 407, 412, 414, 415, 416, 417, 421, 422], "auto": 3, "reset": [3, 417, 422], "dynam": [3, 4, 419], "spec": [3, 417, 422], "forward": [3, 4, 403], "invers": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 406, 417], "record": [3, 376, 400, 403, 411], "video": [3, 11, 411], "domain": [3, 398], "specif": [3, 398, 414], "librari": [3, 421], "thing": [4, 403, 417], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 407, 409, 421], "gener": [4, 11, 398], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 403, 412, 417], "algorithm": [4, 398], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 403, 404, 409, 412], "return": [4, 399], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 421], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 414], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 403, 404, 405], "standard": 4, "explor": [4, 398, 403, 404, 408], "valu": [4, 398, 399, 403, 405, 406, 408], "loss": [4, 403, 404, 405, 406, 412, 415, 416], "earli": 4, "train": [4, 8, 399, 403, 405, 406, 409, 412, 415, 416, 417], "roughli": 4, "uniformli": 4, "random": [4, 399, 415, 416], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 404], "increas": 4, "an": [4, 405, 406, 407, 417], "can": 4, "low": 4, "model": [4, 398, 403, 404, 406, 409, 418, 421], "also": 4, "us": [4, 6, 9, 406, 418, 419, 421], "offlin": 4, "observ": [4, 403], "space": 4, "effect": [4, 417], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 422], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 403], "render": [7, 11, 412, 415, 416, 422], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 403], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 417], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 404, 419], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": 25, "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 41, "multidiscretetensorspec": 42, "multionehot": 43, "multionehotdiscretetensorspec": 44, "multistep": 45, "nested2t": 46, "nontensor": 47, "nontensorspec": 48, "onehotdiscretetensorspec": 49, "pairwisedataset": 50, "prioritizedreplaybuff": 51, "promptdata": 52, "prompttensordicttoken": 53, "querymodul": 54, "randomprojectionhash": 55, "replaybuff": 56, "rewarddata": 57, "rolloutfrommodel": 58, "siphash": 59, "stack": 60, "stackedcomposit": 61, "ted2flat": 62, "ted2nest": 63, "tensordictmap": 64, "tensordictprioritizedreplaybuff": 65, "tensordictreplaybuff": 66, "tensordicttoken": 67, "tensormap": 68, "tokenizeddatasetload": 70, "unbound": 71, "unboundedcontinu": 72, "unboundedcontinuoustensorspec": 73, "unboundeddiscret": 74, "unboundeddiscretetensorspec": 75, "check_no_exclusive_kei": 76, "consolidate_spec": 77, "contains_lazy_spec": 78, "create_infinite_iter": 79, "ataridqnexperiencereplai": 80, "basedatasetexperiencereplai": 81, "d4rlexperiencereplai": 82, "gendgrlexperiencereplai": 83, "minariexperiencereplai": 84, "openmlexperiencereplai": 85, "openxexperiencereplai": 86, "robosetexperiencereplai": 87, "vd4rlexperiencereplai": 88, "get_dataload": 89, "flatstoragecheckpoint": 90, "h5storagecheckpoint": 91, "immutabledatasetwrit": 92, "lazymemmapstorag": 93, "lazytensorstorag": 94, "liststorag": 95, "liststoragecheckpoint": 96, "nestedstoragecheckpoint": 97, "prioritizedsampl": 98, "prioritizedslicesampl": 99, "randomsampl": 100, "replaybufferensembl": 101, "roundrobinwrit": 102, "sampler": 103, "samplerensembl": 104, "samplerwithoutreplac": 105, "slicesampl": 106, "slicesamplerwithoutreplac": 107, "storagecheckpointerbas": 109, "storageensembl": 110, "storageensemblecheckpoint": 111, "tensordictmaxvaluewrit": 112, "tensordictroundrobinwrit": 113, "tensorstorag": 114, "tensorstoragecheckpoint": 115, "writer": 116, "writerensembl": 117, "braxenv": 118, "braxwrapp": 119, "dmcontrolenv": 120, "dmcontrolwrapp": 121, "envbas": [122, 417], "envcreat": 123, "envmetadata": 124, "gymenv": 125, "gymlikeenv": 126, "gymwrapp": 127, "habitatenv": 128, "isaacgymenv": 129, "isaacgymwrapp": 130, "jumanjienv": 131, "jumanjiwrapp": 132, "mogymenv": 133, "mogymwrapp": 134, "marlgroupmaptyp": 135, "meltingpotenv": 136, "meltingpotwrapp": 137, "modelbasedenvbas": 138, "multithreadedenv": 139, "multithreadedenvwrapp": 140, "openmlenv": 141, "openspielenv": 142, "openspielwrapp": 143, "parallelenv": 144, "pendulumenv": 145, "pettingzooenv": 146, "pettingzoowrapp": 147, "robohiveenv": 148, "smacv2env": 149, "smacv2wrapp": 150, "serialenv": 151, "tictactoeenv": 152, "unitymlagentsenv": 153, "unitymlagentswrapp": 154, "vmasenv": 155, "vmaswrapp": 156, "check_marl_group": 157, "gym_backend": 158, "dreamerdecod": 159, "dreamerenv": 160, "set_gym_backend": 161, "actiondiscret": 162, "actionmask": 163, "autoresetenv": 164, "autoresettransform": 165, "batchsizetransform": 166, "binarizereward": 167, "burnintransform": 168, "catfram": [169, 419], "cattensor": 170, "centercrop": 171, "cliptransform": 172, "crop": 174, "dtypecasttransform": 175, "devicecasttransform": 176, "discreteactionproject": 177, "doubletofloat": 178, "endoflifetransform": 179, "excludetransform": 180, "finitetensordictcheck": 181, "flattenobserv": 182, "frameskiptransform": 183, "grayscal": 184, "inittrack": 185, "klrewardtransform": 186, "noopresetenv": 187, "observationnorm": 188, "observationtransform": 189, "permutetransform": 190, "pinmemorytransform": 191, "r3mtransform": 192, "randomcroptensordict": 193, "removeemptyspec": 194, "renametransform": 195, "resiz": 196, "reward2gotransform": 197, "rewardclip": 198, "rewardsc": 199, "rewardsum": 200, "selecttransform": 201, "signtransform": 202, "squeezetransform": 203, "stepcount": 204, "targetreturn": 205, "tensordictprim": 206, "timemaxpool": 207, "totensorimag": 208, "trajcount": 209, "transformedenv": 211, "unsqueezetransform": 212, "vc1transform": 213, "viprewardtransform": 214, "viptransform": 215, "vecgymenvtransform": 216, "vecnorm": [217, 422], "gsdenois": 218, "multisteptransform": 219, "randompolici": 220, "check_env_spec": 221, "exploration_typ": 222, "get_available_librari": 223, "make_composite_from_td": 224, "set_exploration_typ": 225, "step_mdp": 226, "terminated_or_trunc": 227, "additivegaussianmodul": 228, "additivegaussianwrapp": 229, "batchrenorm1d": 230, "cemplann": 231, "consistentdropoutmodul": 232, "conv3dnet": 233, "convnet": 234, "dtactor": 235, "ddpgcnnactor": 236, "ddpgcnnqnet": 237, "ddpgmlpactor": 238, "ddpgmlpqnet": 239, "decisiontransform": 240, "delta": 241, "distributionaldqnnet": 242, "distributionalqvaluehook": 243, "dreameractor": 244, "duelingcnndqnet": 245, "egreedymodul": 246, "egreedywrapp": 247, "gru": 248, "grucel": 249, "grumodul": 250, "independentnorm": 251, "lstm": [252, 406], "lstmcell": 253, "lstmmodul": 254, "mlp": [255, 406], "mpcplannerbas": 256, "mppiplann": 257, "maskedcategor": 258, "maskedonehotcategor": 259, "multiagentconvnet": 260, "multiagentmlp": 261, "multiagentnetbas": 262, "noisylazylinear": 263, "noisylinear": 264, "normalparamwrapp": 265, "obsdecod": 266, "obsencod": 267, "onehotcategor": 268, "onehotordin": 269, "onlinedtactor": 270, "ordin": 271, "ornsteinuhlenbeckprocessmodul": 272, "ornsteinuhlenbeckprocesswrapp": 273, "qmixer": [274, 399], "qvaluehook": 275, "rssmposterior": 276, "rssmprior": 277, "squeeze2dlay": 278, "squeezelay": 279, "tanhdelta": 280, "tanhnorm": 281, "truncatednorm": 282, "vdnmixer": 283, "vmapmodul": 284, "reset_nois": 285, "actor": [286, 398, 403, 408], "actorcriticoper": 287, "actorcriticwrapp": 288, "actorvalueoper": 289, "decisiontransformerinferencewrapp": 290, "distributionalqvalueactor": 291, "distributionalqvaluemodul": 292, "lmheadactorvalueoper": 293, "multistepactorwrapp": 294, "probabilisticactor": 295, "qvalueactor": [296, 398], "qvaluemodul": 297, "safemodul": [298, 398], "safeprobabilisticmodul": 299, "safeprobabilistictensordictsequenti": 300, "safesequenti": 301, "tanhmodul": 302, "valueoper": 303, "worldmodelwrapp": 304, "biased_softplu": 305, "get_primers_from_modul": 306, "inv_softplu": 307, "map": [308, 415], "a2closs": 309, "cqlloss": 310, "clipppoloss": 311, "crossqloss": 312, "ddpgloss": 313, "dqnloss": 314, "dtloss": 315, "discretecqlloss": 316, "discreteiqlloss": 317, "discretesacloss": 318, "distributionaldqnloss": 319, "dreameractorloss": 320, "dreamermodelloss": 321, "dreamervalueloss": 322, "gailloss": 323, "hardupd": 324, "iqlloss": 325, "klpenppoloss": 326, "lossmodul": [327, 403, 409], "onlinedtloss": 328, "ppoloss": 329, "redqloss": 330, "reinforceloss": 331, "sacloss": 332, "softupd": 333, "td3bcloss": 334, "td3loss": 335, "valueestim": 336, "default_value_kwarg": 337, "distance_loss": 338, "hold_out_net": 339, "hold_out_param": 340, "qmixerloss": 341, "next_state_valu": 342, "gae": 343, "td0estim": 344, "td1estim": 345, "tdlambdaestim": 346, "valueestimatorbas": 347, "generalized_advantage_estim": 348, "reward2go": 349, "td0_advantage_estim": 350, "td0_return_estim": 351, "td1_advantage_estim": 352, "td1_return_estim": 353, "td_lambda_advantage_estim": 354, "td_lambda_return_estim": 355, "vec_generalized_advantage_estim": 356, "vec_td1_advantage_estim": 357, "vec_td1_return_estim": 358, "vec_td_lambda_advantage_estim": 359, "vec_td_lambda_return_estim": 360, "pixelrendertransform": 361, "tensordictrecord": 362, "videorecord": 363, "logger": [364, 400, 411, 412], "csvlogger": 365, "generate_exp_nam": 366, "get_logg": 367, "mlflowlogg": 368, "tensorboardlogg": 369, "wandblogg": 370, "batchsubsampl": 371, "clearcudacach": 372, "countframeslog": 373, "logreward": 374, "optimizerhook": 375, "replaybuffertrain": 377, "rewardnorm": 378, "selectkei": 379, "trainer": [380, 400, 404], "trainerhookbas": 381, "updateweight": 382, "correct_for_frame_skip": 383, "get_stats_random_rollout": 384, "make_collector_offpolici": 385, "make_collector_onpolici": 386, "make_dqn_loss": 387, "make_replay_buff": 388, "make_target_updat": 389, "make_train": 390, "parallel_env_constructor": 391, "sync_async_collector": 392, "sync_sync_collector": 393, "transformed_env_constructor": 394, "readm": [395, 413], "tuto": [395, 413], "api": 396, "contribut": [397, 421], "content": 397, "modul": [398, 403, 406, 408, 412, 421], "tensordictmodul": [398, 408, 421], "wrapper": [398, 408], "probabilist": [398, 408], "q": [398, 404, 406, 408], "oper": 398, "join": 398, "hook": [398, 400, 404], "regular": 398, "planner": 398, "object": [399, 403, 409, 421], "torch": 399, "vmap": 399, "dqn": [399, 404, 406], "ddpg": [399, 403, 415], "sac": 399, "redq": 399, "crossq": 399, "iql": 399, "cql": 399, "gail": 399, "dt": 399, "td3": 399, "bc": 399, "ppo": [399, 405, 416], "a2c": 399, "dreamer": 399, "builder": 400, "_util": 401, "comput": [402, 404, 417, 420], "time": [402, 403, 420], "code": [403, 417], "overview": [403, 406], "setup": [403, 406], "__init__": 403, "method": 403, "estim": 403, "put": 403, "togeth": [403, 417], "call": 403, "parallel": [403, 414, 422], "execut": [403, 414, 417], "stat": 403, "build": [403, 404, 412, 419], "evalu": 403, "construct": 403, "target": [403, 404, 409], "network": [403, 404, 405, 406, 408, 415, 416], "updat": 403, "experi": [403, 417], "result": [403, 405, 415, 416], "conclus": [403, 404, 405, 406, 415, 416, 417, 419], "next": [403, 405, 407, 410, 415, 416, 419], "A": [404, 419], "deep": 404, "collect": [404, 405, 410], "paramet": [404, 405, 409], "hyperparamet": [404, 405, 415, 416], "regist": 404, "possibl": 404, "improv": 404, "defin": [405, 415, 416], "loop": [405, 406, 412, 415, 416, 417], "recurr": 406, "convolut": 406, "select": 406, "further": [406, 409], "read": 406, "creat": 407, "run": [407, 422], "rollout": [407, 414, 415, 416, 417, 422], "s": [408, 409], "output": 409, "consider": 409, "log": 411, "own": 412, "first": 412, "design": 412, "divers": 414, "competit": 415, "group": 415, "critic": [415, 416], "pendulum": 417, "write": 417, "_step": 417, "simul": 417, "_reset": 417, "metadata": 417, "_spec": 417, "shape": 417, "seed": [417, 422], "wrap": 417, "class": [417, 421], "test": 417, "our": 417, "simpl": 417, "pretrain": 418, "vanilla": 419, "integr": 419, "tensorclass": 419, "other": 419, "tensor": 419, "pytre": 419, "iter": 419, "over": 419, "fix": 419, "priorit": 419, "save": 419, "raw": 419, "imag": 419, "more": 419, "complex": 419, "introduct": 421, "config": 421, "sequenc": 421, "program": 421, "ensembl": 421, "meta": 421, "state": 421, "frame_skip": 422, "deepmind": 422, "control": 422, "devic": 422, "close": 422, "access": 422, "attribut": 422, "kwarg": 422}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})