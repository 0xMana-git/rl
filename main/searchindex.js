Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 119, 120, 122, 123, 124, 125, 126, 127, 130, 131, 134, 139, 140, 142, 143, 145, 146, 148, 151, 153, 154, 157, 163, 164, 168, 169, 170, 171, 173, 181, 182, 183, 184, 185, 186, 188, 191, 192, 194, 196, 206, 207, 209, 210, 211, 212, 219, 221, 223, 225, 226, 227, 231, 232, 233, 244, 245, 247, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 271, 272, 276, 280, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 313, 314, 315, 316, 317, 331, 333, 336, 340, 345, 346, 350, 351, 354, 361, 362, 363, 364, 367, 368, 369, 373, 374, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 391, 392], "open": [0, 5, 7, 12, 41, 43, 46, 67, 374, 385, 386, 391], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "reinforc": [0, 3, 9, 64, 117, 118, 146, 209, 210, 211, 212, 216, 260, 265, 266, 281, 282, 286, 287, 288, 290, 294, 295, 301, 302, 303, 304, 366, 372, 374, 377, 378, 383, 387, 390, 391], "learn": [0, 3, 7, 8, 9, 18, 37, 64, 65, 66, 68, 69, 103, 117, 118, 122, 123, 130, 146, 209, 210, 211, 212, 216, 228, 234, 260, 265, 266, 281, 282, 286, 287, 288, 290, 294, 295, 300, 301, 302, 303, 304, 366, 368, 369, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 389, 390, 391, 392], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 61, 119, 181, 234, 252, 267, 275, 281, 283, 296, 297, 299, 301, 341, 365, 367, 368, 369, 370, 373, 374, 375, 380, 383, 385, 386, 388, 389, 392], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 44, 52, 101, 102, 111, 120, 199, 366, 367, 368, 371, 373, 374, 375, 377, 378, 380, 385, 386, 387, 392], "pytorch": [0, 1, 2, 3, 23, 65, 132, 133, 184, 196, 219, 223, 233, 234, 350, 365, 367, 370, 373, 375, 376, 379, 383, 385, 386, 387, 388, 389, 391, 392], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 37, 52, 64, 103, 107, 111, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 138, 192, 194, 223, 340, 367, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 149, 150, 151, 153, 154, 155, 163, 164, 168, 169, 173, 176, 180, 181, 182, 185, 186, 188, 190, 192, 194, 196, 204, 205, 206, 207, 209, 219, 221, 222, 223, 225, 227, 228, 231, 232, 234, 235, 248, 250, 252, 257, 259, 260, 261, 262, 264, 267, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 331, 333, 340, 346, 362, 363, 364, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "directli": [0, 3, 4, 8, 23, 61, 82, 99, 100, 103, 106, 107, 119, 123, 124, 130, 131, 164, 173, 191, 297, 304, 364, 368, 374, 375, 377, 385, 386, 387, 389], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 142, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 200, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 238, 239, 240, 241, 247, 248, 249, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 295, 296, 297, 299, 300, 301, 302, 304, 305, 307, 311, 312, 313, 314, 315, 316, 319, 331, 332, 333, 341, 347, 350, 353, 354, 358, 360, 361, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392], "pypi": [0, 2, 391], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 103, 107, 110, 113, 117, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 150, 168, 182, 184, 185, 186, 188, 190, 192, 193, 194, 206, 207, 219, 222, 223, 226, 232, 233, 240, 248, 249, 253, 255, 267, 270, 271, 304, 333, 340, 347, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 389, 392], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 93, 103, 106, 107, 108, 110, 111, 113, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 184, 188, 193, 194, 216, 223, 226, 233, 235, 252, 256, 257, 259, 260, 270, 275, 281, 290, 297, 299, 313, 318, 326, 340, 345, 367, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 387, 388, 392], "about": [0, 3, 5, 7, 9, 18, 19, 20, 52, 65, 68, 69, 103, 123, 130, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 391, 392], "instruct": [0, 6, 7, 10, 22, 63, 153, 155, 373, 374, 375, 376, 385, 386, 389], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 123, 130, 253, 254, 255, 368, 373, 377, 379, 380, 382, 384, 386], "section": [0, 2, 3, 4, 24, 219, 223, 374, 377, 382, 385, 386], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 70, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 206, 207, 219, 222, 223, 226, 232, 248, 267, 270, 347, 373, 374, 375, 376, 377, 385, 387], "pip": [0, 10, 66, 377, 378, 379, 380, 381, 382, 386, 391, 392], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 80, 81, 82, 85, 87, 88, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 143, 145, 146, 147, 148, 149, 151, 154, 158, 163, 164, 166, 168, 169, 172, 173, 176, 177, 181, 182, 183, 186, 188, 190, 191, 192, 194, 204, 206, 207, 213, 216, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 250, 252, 257, 260, 261, 262, 264, 266, 267, 268, 269, 274, 281, 282, 283, 284, 285, 287, 289, 290, 291, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 337, 341, 347, 354, 360, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "python": [0, 3, 5, 6, 7, 10, 11, 14, 15, 21, 121, 138, 219, 220, 221, 223, 224, 225, 229, 230, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 35, 36, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 103, 106, 107, 108, 113, 123, 124, 130, 131, 142, 143, 146, 147, 158, 164, 168, 169, 184, 186, 188, 207, 219, 221, 223, 225, 226, 231, 232, 233, 237, 252, 258, 259, 260, 267, 268, 270, 271, 283, 292, 296, 297, 299, 332, 333, 349, 368, 372, 373, 374, 375, 376, 377, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "low": [0, 3, 26, 80, 103, 107, 123, 124, 130, 131, 139, 149, 153, 200, 246, 247, 248, 258, 260, 267, 274, 373, 374, 375, 385, 386, 387, 391, 392], "high": [0, 3, 9, 26, 41, 43, 46, 50, 80, 103, 107, 123, 124, 130, 131, 139, 149, 153, 163, 200, 246, 247, 248, 258, 260, 267, 274, 313, 318, 326, 373, 374, 375, 385, 386, 387, 389, 391, 392], "level": [0, 2, 3, 4, 22, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 106, 108, 146, 180, 296, 373, 374, 380, 391], "abstract": [0, 3, 8, 25, 26, 27, 29, 33, 34, 35, 39, 53, 55, 56, 61, 62, 66, 97, 103, 165, 227, 317, 342, 351, 370, 375, 387, 391], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 82, 85, 86, 88, 89, 91, 93, 95, 103, 104, 106, 107, 108, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 141, 142, 143, 145, 146, 149, 150, 151, 153, 154, 155, 157, 158, 162, 163, 166, 168, 173, 176, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 200, 203, 204, 205, 212, 214, 219, 220, 221, 223, 224, 225, 227, 229, 230, 231, 234, 238, 240, 243, 258, 259, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 308, 311, 312, 313, 314, 315, 316, 317, 331, 340, 347, 360, 364, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 145, 153, 250, 297, 368, 391], "effici": [0, 1, 2, 4, 8, 219, 234, 368, 373, 374, 375, 376, 379, 380, 382, 384, 385, 386, 388, 389, 391], "modular": [0, 61, 273, 389, 391], "document": [0, 2, 5, 7, 11, 18, 19, 21, 37, 67, 103, 107, 123, 124, 130, 131, 186, 194, 365, 374, 376, 377, 380, 383, 391], "properli": [0, 1, 103, 107, 123, 124, 130, 131, 203, 375, 381, 385, 386, 387, 391], "test": [0, 3, 5, 99, 100, 112, 113, 117, 118, 188, 196, 221, 225, 346, 360, 375, 376, 391], "The": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 79, 80, 82, 85, 87, 88, 89, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 142, 143, 145, 146, 150, 151, 154, 155, 156, 164, 166, 168, 173, 175, 176, 177, 180, 181, 182, 185, 186, 188, 190, 191, 192, 194, 196, 203, 204, 205, 209, 210, 211, 212, 213, 216, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 241, 242, 243, 252, 253, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 277, 278, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 319, 331, 333, 335, 338, 339, 340, 341, 345, 360, 362, 363, 366, 368, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 391, 392], "code": [0, 3, 5, 7, 8, 14, 15, 67, 103, 107, 123, 124, 130, 131, 168, 186, 188, 219, 220, 221, 223, 224, 225, 267, 273, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392], "aim": [0, 2, 3, 7, 33, 34, 168, 188, 190, 226, 353, 367, 368, 369, 373, 374, 391], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 41, 43, 46, 66, 69, 70, 74, 75, 89, 91, 95, 96, 98, 99, 100, 106, 108, 112, 120, 122, 123, 125, 127, 143, 146, 155, 164, 182, 183, 185, 199, 216, 250, 259, 260, 267, 270, 273, 290, 313, 314, 315, 316, 338, 366, 368, 370, 375, 376, 377, 378, 386, 387, 389, 391], "research": [0, 7, 9, 117, 118, 391], "most": [0, 1, 2, 3, 7, 8, 14, 15, 37, 87, 88, 103, 107, 123, 124, 130, 131, 153, 191, 196, 373, 375, 377, 378, 379, 380, 381, 382, 385, 387, 391, 392], "written": [0, 1, 2, 3, 12, 30, 41, 43, 46, 48, 54, 63, 64, 67, 72, 74, 80, 82, 87, 88, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 139, 146, 155, 162, 176, 180, 183, 191, 194, 203, 204, 252, 265, 266, 267, 270, 271, 275, 281, 283, 296, 299, 301, 312, 331, 332, 333, 368, 369, 370, 373, 376, 378, 384, 387, 391], "highli": [0, 2, 377, 391, 392], "wai": [0, 1, 2, 3, 4, 61, 65, 82, 93, 111, 168, 171, 190, 191, 223, 299, 313, 314, 315, 316, 368, 373, 374, 375, 377, 379, 380, 384, 385, 386, 387, 388, 389, 391, 392], "easili": [0, 1, 2, 3, 7, 103, 107, 123, 124, 130, 131, 369, 373, 374, 375, 377, 378, 379, 382, 385, 386, 391, 392], "swap": [0, 1, 3, 106, 191, 375, 388, 391], "compon": [0, 1, 2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 216, 241, 259, 260, 269, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 345, 350, 373, 374, 375, 376, 378, 379, 382, 384, 385, 386, 387, 388, 391], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 91, 96, 103, 104, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 203, 208, 209, 213, 216, 217, 221, 225, 239, 240, 241, 249, 258, 263, 264, 274, 277, 278, 280, 286, 298, 331, 333, 347, 364, 366, 372, 374, 376, 378, 380, 381, 382, 383, 388, 390], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 98, 103, 104, 107, 111, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 151, 154, 182, 186, 192, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 249, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 296, 333, 373, 374, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "write": [0, 2, 3, 8, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 91, 98, 103, 107, 149, 166, 167, 176, 178, 180, 184, 204, 252, 270, 271, 273, 275, 284, 285, 287, 288, 289, 295, 300, 302, 304, 305, 312, 317, 333, 368, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 107, 120, 123, 124, 128, 129, 130, 131, 143, 176, 185, 192, 194, 203, 204, 219, 221, 225, 265, 266, 270, 271, 276, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 340, 373, 375, 376, 377, 379, 385, 386, 387, 391, 392], "ones": [0, 2, 23, 27, 37, 42, 45, 50, 51, 103, 107, 123, 124, 125, 126, 130, 131, 147, 150, 151, 152, 154, 164, 168, 173, 182, 185, 186, 188, 190, 194, 195, 229, 230, 250, 270, 281, 282, 284, 295, 299, 300, 302, 304, 305, 319, 373, 375, 385, 386, 387, 389, 391, 392], "littl": [0, 1, 3, 52, 103, 107, 123, 124, 130, 131, 186, 281, 283, 296, 299, 301, 375, 376, 380, 389, 391, 392], "effort": [0, 3, 387, 389, 391], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 96, 98, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 164, 168, 169, 170, 171, 173, 176, 177, 178, 180, 182, 183, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 311, 313, 314, 315, 316, 317, 331, 332, 340, 341, 343, 346, 347, 350, 352, 353, 354, 360, 364, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "repo": [0, 6, 63, 146, 183, 188, 367, 386, 391], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 87, 88, 101, 102, 106, 108, 109, 127, 257, 262, 266, 285, 288, 295, 311, 379, 391], "align": [0, 219, 223, 391], "exist": [0, 2, 3, 4, 12, 18, 21, 37, 41, 43, 46, 54, 103, 107, 123, 124, 130, 131, 147, 152, 186, 194, 302, 354, 364, 385, 386, 391, 392], "ecosystem": [0, 380, 391], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 61, 67, 74, 75, 82, 85, 87, 93, 95, 103, 104, 107, 111, 117, 118, 123, 124, 130, 131, 132, 133, 143, 146, 180, 181, 182, 183, 186, 194, 219, 221, 223, 225, 231, 247, 256, 257, 260, 262, 264, 266, 271, 296, 333, 373, 374, 375, 376, 377, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "dataset": [0, 32, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 85, 87, 88, 122, 192, 333, 366, 373, 374, 377, 388, 389, 391, 392], "pillar": [0, 391], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 142, 143, 145, 146, 147, 151, 152, 153, 154, 159, 163, 164, 168, 169, 170, 173, 176, 180, 181, 182, 183, 185, 186, 188, 191, 192, 196, 205, 221, 225, 227, 228, 257, 264, 266, 287, 291, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 341, 343, 346, 353, 354, 355, 356, 360, 361, 362, 363, 364, 366, 367, 368, 372, 378, 379, 380, 381, 383, 388, 389, 390], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 43, 46, 47, 54, 103, 107, 119, 123, 124, 130, 131, 151, 168, 182, 188, 190, 193, 194, 206, 207, 208, 213, 215, 221, 225, 226, 227, 228, 232, 239, 240, 249, 253, 254, 255, 263, 270, 276, 278, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 311, 350, 355, 356, 357, 366, 367, 370, 372, 375, 377, 380, 383, 385, 386, 387, 389, 390, 392], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 140, 143, 145, 146, 151, 152, 154, 156, 162, 164, 170, 173, 180, 186, 191, 194, 195, 196, 200, 204, 205, 216, 221, 225, 228, 231, 232, 241, 250, 252, 259, 261, 262, 264, 265, 266, 267, 268, 270, 273, 274, 275, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 331, 333, 340, 341, 347, 350, 352, 355, 360, 362, 363, 364, 366, 368, 369, 370, 372, 376, 377, 378, 379, 383, 387, 388, 389, 390, 392], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 45, 47, 100, 103, 107, 112, 113, 118, 123, 124, 125, 126, 130, 131, 134, 146, 168, 173, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 213, 219, 223, 277, 278, 279, 280, 297, 360, 366, 371, 373, 375, 378, 379, 380, 386, 387, 389, 391, 392], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 40, 41, 43, 46, 74, 75, 79, 80, 93, 95, 103, 104, 107, 123, 124, 130, 131, 132, 143, 145, 147, 150, 158, 164, 168, 176, 182, 185, 186, 188, 190, 194, 196, 219, 221, 222, 223, 225, 228, 232, 235, 241, 247, 248, 258, 260, 264, 267, 269, 270, 271, 302, 312, 313, 314, 315, 316, 331, 341, 353, 363, 368, 374, 375, 378, 379, 381, 385, 386, 388, 389, 391, 392], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 40, 41, 43, 46, 93, 103, 104, 107, 123, 124, 130, 131, 132, 143, 145, 147, 150, 158, 164, 168, 176, 182, 185, 186, 188, 190, 194, 196, 219, 221, 222, 223, 224, 225, 228, 232, 247, 248, 258, 267, 270, 271, 302, 312, 322, 323, 324, 325, 327, 328, 329, 330, 331, 363, 368, 374, 375, 378, 381, 385, 386, 387, 388, 389, 391, 392], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 37, 47, 48, 61, 67, 143, 146, 173, 180, 194, 195, 265, 266, 347, 350, 352, 355, 356, 360, 362, 363, 366, 370, 389, 392], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 80, 82, 83, 85, 87, 88, 89, 94, 97, 98, 103, 107, 119, 123, 124, 130, 131, 139, 150, 151, 154, 168, 182, 185, 186, 188, 190, 191, 192, 194, 203, 204, 205, 206, 207, 219, 220, 223, 224, 226, 228, 232, 252, 259, 260, 267, 269, 270, 275, 278, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 319, 337, 341, 353, 360, 361, 362, 363, 364, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 391, 392], "etc": [0, 2, 3, 7, 8, 12, 37, 55, 56, 67, 103, 107, 123, 124, 130, 131, 162, 186, 194, 226, 232, 247, 374, 375, 380, 389, 391, 392], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 89, 103, 107, 123, 124, 125, 126, 130, 131, 139, 142, 146, 151, 154, 155, 162, 163, 164, 180, 185, 186, 192, 194, 196, 204, 206, 207, 226, 231, 232, 250, 264, 272, 273, 281, 283, 296, 299, 301, 304, 308, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 341, 350, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "few": [0, 2, 8, 107, 333, 341, 375, 376, 378, 385, 386, 389, 391, 392], "depend": [0, 1, 2, 3, 4, 7, 8, 41, 43, 106, 108, 109, 127, 132, 133, 151, 154, 275, 299, 368, 373, 375, 376, 385, 386, 387, 391, 392], "possibl": [0, 2, 3, 4, 23, 25, 29, 34, 35, 36, 37, 40, 64, 67, 69, 80, 87, 93, 103, 107, 123, 124, 130, 131, 139, 150, 168, 182, 185, 186, 188, 190, 194, 206, 207, 219, 220, 223, 224, 270, 331, 346, 350, 368, 373, 375, 376, 378, 380, 381, 385, 386, 387, 389, 391, 392], "standard": [0, 3, 164, 175, 192, 205, 217, 228, 233, 234, 239, 256, 257, 258, 304, 305, 313, 314, 315, 316, 373, 374, 377, 378, 386, 389, 391], "numpi": [0, 3, 12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 184, 350, 387, 389, 391, 392], "common": [0, 2, 3, 4, 107, 112, 140, 253, 254, 255, 263, 281, 282, 283, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 360, 367, 368, 370, 373, 375, 378, 381, 384, 385, 386, 387, 388, 391, 392], "openai": [0, 7, 24, 106, 108, 127, 375, 387, 391, 392], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 103, 104, 106, 107, 108, 109, 111, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 135, 138, 142, 146, 149, 155, 161, 162, 164, 166, 171, 173, 176, 182, 185, 191, 192, 194, 360, 367, 373, 374, 375, 376, 377, 381, 382, 387, 388, 389, 391], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 82, 87, 88, 95, 101, 102, 103, 106, 107, 108, 109, 111, 113, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 142, 146, 147, 149, 150, 151, 153, 154, 158, 164, 168, 169, 173, 180, 181, 182, 183, 185, 186, 188, 190, 192, 194, 223, 225, 231, 232, 252, 258, 259, 267, 268, 270, 271, 272, 273, 281, 283, 284, 288, 289, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 333, 340, 354, 370, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 392], "option": [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 196, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 250, 252, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 317, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 354, 355, 356, 357, 359, 360, 362, 363, 364, 368, 376, 377, 380, 385, 386, 387, 389, 391], "On": [0, 3, 7, 18, 19, 20, 21, 27, 64, 220, 224, 368, 374, 385, 386], "end": [0, 2, 3, 14, 15, 17, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 86, 87, 88, 103, 107, 123, 124, 130, 131, 155, 166, 180, 181, 186, 194, 206, 207, 219, 220, 223, 224, 227, 264, 302, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "come": [0, 1, 2, 3, 8, 37, 93, 103, 107, 116, 123, 124, 130, 131, 151, 154, 252, 253, 254, 255, 267, 275, 281, 283, 296, 299, 301, 333, 373, 374, 375, 376, 379, 380, 381, 382, 385, 386, 389, 391, 392], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 86, 89, 95, 103, 105, 107, 108, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 138, 140, 142, 143, 146, 147, 150, 151, 154, 161, 162, 168, 173, 180, 181, 182, 183, 185, 186, 188, 190, 192, 194, 196, 201, 202, 204, 219, 221, 223, 225, 227, 231, 232, 247, 257, 258, 270, 289, 297, 299, 302, 317, 341, 346, 347, 356, 364, 367, 368, 369, 371, 373, 374, 375, 376, 378, 379, 380, 384, 385, 386, 387, 388, 389, 391, 392], "re": [0, 2, 3, 8, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 124, 130, 131, 194, 225, 229, 230, 267, 271, 340, 370, 373, 375, 376, 377, 379, 384, 385, 387, 391, 392], "usabl": [0, 370, 376, 391], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 104, 107, 123, 124, 130, 131, 138, 142, 143, 151, 154, 186, 192, 194, 196, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 235, 236, 237, 238, 239, 242, 243, 245, 248, 250, 253, 254, 255, 256, 257, 258, 260, 261, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 360, 366, 368, 373, 376, 377, 378, 381, 384, 387, 389, 392], "cost": [0, 2, 29, 67, 281, 283, 296, 299, 301, 373, 374, 385, 386, 387, 389], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 83, 85, 87, 88, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 203, 204, 205, 208, 209, 210, 211, 212, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 238, 239, 240, 242, 243, 246, 247, 248, 249, 252, 253, 254, 255, 258, 264, 267, 269, 270, 271, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 308, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 337, 350, 353, 355, 360, 361, 362, 363, 364, 366, 368, 370, 373, 374, 375, 376, 378, 379, 381, 384, 385, 386, 387, 388, 389, 391, 392], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 46, 52, 54, 61, 64, 68, 69, 79, 80, 87, 103, 104, 107, 111, 116, 120, 123, 124, 125, 126, 130, 131, 145, 151, 154, 182, 184, 192, 194, 231, 232, 260, 265, 266, 269, 366, 370, 373, 374, 376, 377, 385, 386, 387, 388, 389, 391, 392], "good": [0, 1, 4, 9, 123, 373, 375, 376, 378, 386, 391, 392], "runtim": [0, 2, 3, 23, 37, 103, 107, 123, 124, 130, 131, 194, 387], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 134, 151, 154, 163, 186, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 283, 292, 299, 302, 346, 350, 369, 373, 374, 375, 376, 377, 380, 382, 384, 385, 386, 387, 392], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 87, 88, 91, 98, 99, 100, 103, 106, 107, 108, 112, 113, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 180, 182, 192, 194, 221, 225, 253, 254, 255, 265, 266, 289, 297, 304, 333, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 391, 392], "read": [0, 2, 3, 7, 23, 27, 30, 33, 42, 44, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 82, 89, 91, 95, 103, 106, 107, 108, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 166, 167, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 185, 188, 189, 191, 192, 194, 204, 238, 252, 253, 254, 255, 259, 264, 267, 270, 271, 273, 275, 276, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 313, 314, 315, 316, 317, 333, 346, 350, 368, 373, 374, 375, 377, 378, 384, 385, 386, 387, 388, 392], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 370, 373, 377, 380, 384, 388, 392], "beyond": [0, 103, 107, 123, 124, 130, 131], "api": [0, 2, 3, 5, 23, 125, 126, 127, 168, 190, 192, 369, 370, 377, 378, 379, 380, 381, 385, 386, 387, 389, 391, 392], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 55, 56, 57, 59, 71, 72, 78, 87, 103, 104, 106, 107, 108, 119, 123, 124, 130, 131, 134, 146, 147, 157, 162, 169, 182, 184, 186, 194, 196, 221, 225, 252, 259, 260, 267, 268, 269, 270, 271, 304, 333, 365, 368, 369, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392], "paper": [0, 64, 67, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 127, 132, 133, 168, 188, 190, 219, 240, 249, 287, 294, 304, 373, 375, 385, 386], "releas": [0, 4, 7, 10, 37, 103, 107, 123, 124, 130, 131, 186, 194, 302, 391], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 352, 360, 370, 373, 391], "so": [0, 2, 3, 4, 6, 7, 10, 11, 37, 41, 43, 46, 47, 103, 107, 117, 118, 123, 124, 130, 131, 182, 192, 194, 272, 273, 373, 375, 376, 379, 382, 385, 386, 387, 392], "make": [0, 2, 3, 4, 7, 11, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 89, 91, 98, 103, 107, 108, 111, 113, 115, 121, 123, 124, 130, 131, 139, 156, 164, 168, 169, 173, 180, 188, 194, 196, 219, 220, 223, 224, 231, 232, 233, 259, 271, 281, 283, 296, 299, 301, 313, 314, 315, 316, 331, 347, 356, 364, 368, 369, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "sure": [0, 3, 4, 7, 66, 89, 107, 111, 173, 259, 364, 368, 373, 375, 376, 379, 385, 386, 387, 389, 391, 392], "alwai": [0, 2, 3, 14, 15, 20, 27, 33, 37, 61, 70, 71, 72, 78, 103, 107, 123, 124, 130, 131, 162, 163, 192, 194, 290, 297, 368, 369, 374, 375, 376, 385, 386, 387, 389], "enjoi": [0, 2, 3, 67, 380], "latest": [0, 2, 3, 10, 120, 125, 126, 347, 375, 385, 386, 387, 391], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 40, 54, 65, 80, 87, 88, 103, 107, 116, 123, 124, 125, 126, 128, 129, 130, 131, 143, 146, 158, 162, 166, 182, 183, 187, 192, 196, 206, 207, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 233, 234, 271, 278, 281, 283, 296, 299, 301, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 364, 368, 373, 374, 375, 376, 378, 379, 380, 382, 387, 389, 392], "recent": [0, 7, 12, 191, 385, 392], "version": [0, 1, 2, 3, 6, 12, 37, 41, 43, 47, 64, 69, 87, 103, 106, 107, 108, 109, 120, 121, 123, 124, 125, 127, 130, 131, 132, 133, 191, 192, 194, 203, 255, 281, 283, 296, 297, 299, 301, 302, 313, 316, 367, 368, 373, 375, 376, 377, 379, 382, 385, 386, 387, 388, 392], "although": [0, 1, 3, 8, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 370, 373, 374, 380, 389], "core": [0, 3, 8, 370, 376, 378, 391], "guarante": [0, 2, 37, 41, 43, 46, 74, 75, 76, 89, 91, 95, 103, 107, 123, 124, 130, 131, 192, 194, 380, 391], "backward": [0, 8, 37, 99, 100, 103, 107, 123, 124, 130, 131, 192, 194, 219, 220, 223, 224, 281, 282, 284, 288, 289, 295, 299, 300, 301, 302, 304, 305, 373, 375, 376, 379, 380, 382, 385, 386, 387], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 37, 63, 82, 85, 87, 88, 89, 93, 103, 107, 109, 122, 123, 124, 130, 131, 146, 180, 188, 192, 194, 219, 220, 221, 223, 224, 225, 268, 281, 282, 284, 285, 287, 288, 289, 295, 297, 299, 300, 301, 302, 304, 305, 308, 373, 376, 389, 391], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 27, 29, 30, 33, 35, 36, 37, 40, 42, 43, 44, 45, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 142, 143, 145, 147, 150, 151, 152, 153, 154, 162, 164, 166, 168, 170, 173, 176, 180, 181, 182, 185, 186, 188, 190, 192, 194, 200, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 235, 239, 247, 250, 258, 259, 260, 261, 262, 264, 265, 266, 270, 274, 275, 281, 282, 283, 284, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 312, 313, 314, 315, 316, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 341, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 384, 385, 386, 387, 389, 390, 391, 392], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 29, 30, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 95, 99, 100, 103, 106, 107, 109, 110, 112, 113, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 139, 140, 142, 144, 146, 147, 149, 150, 152, 153, 162, 163, 164, 168, 173, 176, 178, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 205, 206, 207, 209, 210, 211, 212, 213, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 238, 242, 243, 246, 247, 248, 250, 252, 256, 257, 258, 260, 261, 262, 265, 266, 269, 270, 273, 274, 277, 278, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 311, 312, 313, 314, 315, 316, 319, 320, 321, 341, 348, 360, 364, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 42, 45, 50, 51, 63, 65, 66, 67, 68, 69, 107, 123, 130, 168, 185, 190, 286, 297, 369, 370, 373, 374, 375, 376, 378, 380, 389, 392], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 200, 203, 204, 205, 215, 216, 221, 225, 227, 228, 240, 241, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 331, 332, 341, 345, 346, 347, 349, 350, 366, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 392], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 27, 33, 162, 170, 253, 254, 255, 270, 288, 295, 304, 366, 373, 385, 387, 391], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 82, 90, 96, 103, 107, 123, 124, 130, 131, 138, 168, 190, 194, 228, 335, 340, 350, 370, 374, 382, 385], "root": [0, 2, 3, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 123, 146, 183, 203, 222, 247, 248, 376, 377, 385, 386, 387, 388, 389, 392], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 42, 52, 61, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 122, 125, 126, 127, 132, 133, 146, 168, 188, 208, 209, 210, 211, 212, 213, 216, 217, 218, 223, 228, 229, 230, 234, 236, 237, 240, 242, 243, 249, 260, 265, 266, 281, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 313, 318, 326, 365, 383, 388, 391], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 61, 64, 65, 67, 99, 100, 101, 102, 106, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 143, 188, 378, 382, 385, 386, 391], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 64, 67, 68, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 388, 391], "setup": [0, 7, 99, 100, 111, 112, 113], "py": [0, 3, 24, 106, 108, 138, 240, 249, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392], "develop": [0, 3, 4, 7, 111, 373, 391], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 89, 93, 94, 95, 96, 97, 103, 105, 107, 109, 110, 123, 124, 127, 130, 131, 136, 139, 141, 142, 143, 145, 149, 153, 159, 162, 168, 169, 171, 178, 182, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 203, 205, 206, 207, 216, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 232, 234, 235, 250, 256, 257, 258, 259, 260, 261, 264, 267, 268, 271, 273, 274, 277, 278, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 311, 313, 314, 315, 316, 317, 319, 331, 334, 335, 338, 340, 343, 350, 352, 360, 369, 372, 373, 375, 378, 379, 380, 383, 387, 390, 392], "seri": [0, 2, 3, 7, 8, 40, 73, 83, 93, 94, 97, 98, 130, 163, 185, 333, 368, 369, 373, 374, 375, 381, 382, 385, 386, 389, 392], "quick": [0, 61], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 47, 63, 69, 103, 107, 123, 124, 130, 131, 142, 145, 183, 185, 194, 299, 367, 368, 369, 373, 374, 375, 376, 378, 382, 385, 386, 387, 389, 392], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 80, 82, 85, 86, 87, 88, 93, 95, 101, 102, 103, 104, 106, 107, 108, 109, 111, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 139, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 156, 158, 162, 163, 164, 168, 169, 172, 173, 176, 177, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 203, 204, 206, 207, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 250, 252, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 327, 328, 329, 330, 331, 337, 340, 345, 347, 350, 352, 354, 360, 364, 367, 373, 374, 375, 376, 377, 379, 381, 382, 384, 385, 386, 387, 389, 391, 392], "hurri": [0, 377], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 53, 55, 56, 63, 86, 87, 88, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 139, 142, 145, 158, 164, 169, 181, 183, 184, 206, 207, 219, 221, 223, 225, 226, 229, 230, 236, 244, 247, 250, 256, 257, 258, 261, 264, 271, 313, 315, 316, 374, 375, 376, 377, 378, 385, 386, 387, 388, 389, 391, 392], "item": [0, 2, 8, 14, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 54, 55, 56, 70, 80, 86, 93, 139, 157, 229, 230, 284, 285, 287, 341, 369, 370, 373, 375, 376, 379, 380, 385, 386, 387, 389], "navig": [0, 386], "previou": [0, 3, 4, 10, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 182, 194, 204, 219, 223, 243, 258, 375, 376, 377, 378, 382, 387, 392], "whenev": [0, 1, 2, 3, 23, 37, 42, 45, 50, 51, 61, 67, 79, 80, 87, 88, 101, 102, 106, 108, 109, 117, 118, 127, 132, 133, 138, 161, 186, 191, 297, 313, 314, 315, 316, 331, 352, 368, 381, 389], "want": [0, 2, 3, 6, 7, 8, 88, 164, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 368, 373, 374, 375, 376, 377, 379, 380, 381, 385, 386, 387, 388, 389, 391, 392], "ted": [0, 30, 38, 48, 49, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 366, 372, 383, 390], "s": [0, 1, 2, 3, 6, 7, 8, 11, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 88, 93, 99, 100, 103, 107, 111, 112, 113, 117, 118, 120, 123, 124, 125, 126, 130, 131, 132, 133, 146, 150, 168, 180, 182, 184, 185, 186, 188, 190, 192, 194, 196, 206, 207, 221, 225, 230, 231, 232, 234, 240, 249, 253, 255, 256, 257, 260, 261, 264, 267, 270, 271, 274, 282, 288, 295, 297, 302, 304, 313, 314, 315, 316, 317, 331, 368, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 93, 99, 100, 103, 107, 116, 119, 122, 123, 124, 130, 131, 138, 145, 150, 153, 155, 162, 168, 169, 181, 182, 185, 186, 188, 190, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 315, 316, 317, 331, 350, 357, 360, 366, 369, 370, 372, 374, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392], "optim": [0, 1, 2, 8, 37, 47, 99, 100, 103, 107, 123, 124, 130, 131, 186, 194, 205, 228, 233, 234, 247, 282, 297, 298, 299, 302, 345, 350, 360, 369, 370, 372, 375, 376, 377, 378, 380, 383, 385, 386, 387, 390], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 124, 127, 130, 131, 143, 146, 164, 168, 190, 196, 264, 265, 266, 282, 284, 287, 289, 300, 302, 304, 305, 333, 341, 347, 350, 352, 353, 354, 360, 370, 372, 373, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392], "storag": [0, 1, 8, 30, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 88, 90, 91, 92, 93, 95, 96, 103, 105, 107, 123, 124, 130, 131, 145, 146, 151, 154, 173, 194, 366, 370, 372, 374, 375, 376, 377, 379, 382, 383, 385, 386, 388, 390], "log": [0, 3, 4, 8, 11, 47, 214, 215, 216, 229, 230, 238, 247, 248, 259, 260, 267, 271, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 340, 343, 344, 346, 350, 360, 368, 369, 370, 372, 373, 374, 375, 377, 378, 382, 383, 385, 386, 387, 390, 391], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 37, 103, 107, 111, 116, 123, 124, 125, 126, 130, 131, 192, 194, 364, 367, 368, 369, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 389, 390, 391], "own": [0, 1, 3, 14, 15, 17, 22, 37, 103, 107, 123, 124, 125, 126, 130, 131, 194, 333, 372, 374, 375, 377, 383, 385, 386, 387, 390], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 37, 41, 43, 46, 47, 54, 61, 64, 70, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 151, 159, 168, 181, 186, 188, 190, 194, 196, 209, 211, 221, 225, 256, 257, 261, 262, 265, 266, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 313, 350, 352, 360, 366, 370, 372, 374, 377, 380, 381, 383, 388, 389, 390, 392], "loop": [0, 8, 41, 43, 46, 103, 107, 123, 124, 130, 131, 203, 256, 257, 261, 262, 265, 266, 299, 350, 370, 372, 373, 374, 377, 379, 380, 381, 383, 384, 389, 390], "ppo": [0, 4, 8, 267, 271, 283, 296, 299, 366, 368, 372, 373, 374, 378, 379, 383, 385, 390], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 93, 101, 102, 103, 104, 106, 107, 108, 120, 123, 124, 130, 131, 146, 149, 150, 156, 161, 162, 164, 171, 173, 178, 180, 182, 183, 185, 186, 192, 194, 221, 225, 360, 368, 372, 374, 375, 377, 378, 379, 383, 390, 391, 392], "introduct": [0, 369, 372, 377, 383, 385, 386, 390, 392], "multi": [0, 1, 7, 9, 33, 34, 37, 42, 45, 50, 51, 71, 72, 78, 103, 107, 117, 118, 123, 124, 128, 129, 130, 131, 186, 194, 219, 221, 223, 225, 226, 231, 232, 264, 311, 313, 314, 315, 316, 366, 372, 373, 374, 375, 376, 377, 378, 383, 387, 390, 391], "agent": [0, 9, 33, 34, 116, 117, 118, 125, 126, 128, 129, 132, 133, 134, 180, 181, 229, 230, 231, 232, 234, 240, 249, 311, 366, 372, 377, 383, 387, 390], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 37, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 225, 227, 228, 264, 270, 297, 331, 332, 333, 354, 355, 356, 360, 362, 363, 364, 366, 368, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 162, 164, 168, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 238, 239, 240, 241, 247, 248, 249, 250, 252, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 326, 331, 333, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392], "pretrain": [0, 372, 383, 390], "recurr": [0, 2, 145, 219, 220, 221, 223, 225, 243, 372, 374, 378, 383, 389, 390], "dqn": [0, 2, 61, 139, 155, 216, 259, 260, 281, 282, 284, 285, 287, 289, 290, 291, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 311, 357, 366, 368, 372, 378, 379, 382, 383, 390], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 30, 37, 48, 99, 100, 103, 107, 119, 123, 124, 130, 131, 153, 162, 181, 195, 201, 202, 216, 221, 225, 231, 232, 234, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 274, 281, 282, 283, 284, 288, 289, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 346, 352, 355, 356, 360, 362, 363, 368, 369, 370, 372, 374, 377, 379, 380, 383, 388, 389, 390, 391, 392], "replai": [0, 8, 16, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 93, 94, 98, 145, 146, 153, 169, 173, 182, 194, 284, 285, 287, 288, 289, 295, 300, 302, 304, 305, 347, 350, 358, 360, 366, 370, 372, 383, 387, 388, 390], "buffer": [0, 3, 4, 8, 14, 15, 16, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 103, 107, 119, 123, 124, 130, 131, 145, 146, 150, 153, 168, 169, 173, 182, 185, 186, 188, 190, 194, 270, 273, 284, 285, 287, 288, 289, 295, 300, 302, 304, 305, 347, 350, 358, 360, 366, 370, 372, 381, 383, 387, 388, 390, 392], "competit": [0, 3, 117, 118, 372, 383, 386, 390], "ddpg": [0, 209, 210, 211, 212, 284, 294, 303, 366, 368, 372, 374, 379, 383, 386, 390], "task": [0, 2, 3, 9, 33, 34, 47, 54, 64, 67, 101, 102, 103, 107, 110, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 168, 180, 186, 188, 190, 288, 295, 372, 373, 374, 375, 376, 377, 378, 383, 385, 386, 387, 390, 391, 392], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 107, 123, 130, 132, 182, 213, 221, 225, 258, 333, 350, 366, 369, 370, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 53, 54, 74, 75, 76, 82, 85, 89, 91, 95, 98, 103, 107, 112, 123, 124, 130, 131, 139, 151, 154, 155, 164, 168, 185, 186, 188, 192, 194, 195, 228, 240, 249, 252, 253, 267, 270, 271, 272, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 354, 355, 356, 359, 360, 364, 366, 368, 370, 372, 374, 375, 376, 380, 382, 383, 385, 386, 387, 389, 390, 392], "loss": [0, 3, 8, 43, 155, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 313, 345, 350, 357, 360, 369, 370, 372, 377, 379, 380, 381, 383, 387, 389, 390, 391], "trainer": [0, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 372, 373, 383, 390], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 164, 166, 168, 170, 171, 172, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 235, 238, 239, 240, 241, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 278, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 306, 307, 311, 313, 314, 315, 316, 319, 331, 333, 341, 342, 343, 344, 345, 347, 348, 349, 352, 360, 368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392], "packag": [0, 6, 7, 10, 138, 366, 367, 385, 392], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 29, 37, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 122, 123, 124, 130, 131, 132, 133, 143, 146, 150, 158, 164, 166, 169, 173, 182, 185, 186, 187, 191, 192, 194, 204, 214, 219, 220, 221, 223, 224, 225, 229, 230, 231, 232, 233, 238, 240, 246, 250, 264, 265, 266, 270, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 341, 344, 347, 348, 349, 350, 352, 362, 363, 364, 366, 370, 374, 375, 376, 377, 380, 382, 384, 385, 386, 388, 391, 392], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 145, 147, 150, 151, 154, 155, 156, 158, 166, 168, 170, 171, 173, 177, 179, 180, 182, 184, 185, 186, 187, 190, 192, 194, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 238, 239, 240, 241, 242, 243, 246, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 275, 278, 281, 282, 284, 285, 287, 288, 289, 295, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 333, 341, 347, 366, 368, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392], "interoper": [0, 14, 15, 366], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 37, 41, 42, 43, 45, 46, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 106, 107, 117, 118, 123, 124, 130, 131, 132, 133, 139, 146, 147, 168, 173, 186, 190, 194, 206, 207, 219, 220, 221, 223, 224, 225, 226, 232, 269, 273, 283, 285, 287, 289, 290, 296, 299, 300, 304, 305, 313, 314, 315, 316, 322, 323, 324, 325, 327, 328, 329, 330, 331, 364, 366, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 387, 388, 389], "node": [0, 2, 18, 19, 20, 21, 22, 27, 33, 41, 43, 46, 69, 366, 380], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 125, 126, 162, 164, 205, 214, 215, 216, 217, 222, 228, 229, 230, 235, 238, 239, 242, 243, 246, 247, 248, 256, 257, 258, 259, 260, 267, 271, 272, 281, 282, 283, 288, 289, 290, 295, 296, 299, 300, 301, 302, 304, 305, 366, 370, 374, 375, 378, 380, 385, 386, 387, 391, 392], "helper": [0, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 373, 374, 376, 385, 387], "compos": [0, 3, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 83, 84, 93, 94, 103, 107, 123, 124, 130, 131, 146, 172, 185, 186, 192, 194, 263, 264, 292, 302, 333, 366, 373, 374, 375, 376, 380, 384, 386, 387, 389, 391, 392], "episod": [0, 3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 103, 107, 123, 124, 130, 131, 142, 173, 176, 181, 203, 205, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 366, 374, 377, 382, 385, 386, 389], "format": [0, 3, 30, 36, 37, 38, 40, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 85, 93, 103, 107, 123, 124, 125, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 333, 366, 373, 374, 377, 379, 381, 392], "tensorspec": [0, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 55, 56, 57, 58, 59, 103, 107, 119, 123, 124, 130, 131, 132, 133, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 204, 243, 252, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 282, 285, 288, 289, 300, 302, 304, 305, 311, 366, 387], "human": [0, 24, 65, 366, 387], "feedback": [0, 366, 382, 391], "rlhf": [0, 47, 54, 70, 162, 366, 368], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 104, 107, 123, 124, 130, 131, 140, 143, 151, 154, 163, 170, 171, 185, 186, 192, 194, 196, 205, 227, 228, 346, 354, 355, 356, 360, 362, 363, 364, 366, 377, 392], "gymlikeenv": [0, 106, 108, 366], "envmetadata": [0, 366], "vector": [0, 1, 8, 25, 29, 40, 99, 100, 108, 112, 113, 116, 125, 126, 127, 132, 133, 153, 191, 209, 211, 219, 220, 223, 224, 226, 313, 316, 326, 327, 328, 329, 330, 366, 373, 374, 376, 384, 385, 386, 387, 388, 392], "custom": [0, 2, 5, 37, 103, 107, 123, 124, 130, 131, 188, 194, 231, 232, 274, 290, 299, 306, 364, 366, 368, 373, 374, 375, 376, 378, 379, 381, 385, 386], "nativ": [0, 1, 7, 9, 65, 103, 107, 123, 124, 130, 131, 146, 333, 366, 376, 389], "auto": [0, 75, 95, 141, 142, 191, 265, 266, 282, 289, 298, 300, 302, 304, 305, 366, 369, 385, 386], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 141, 142, 143, 146, 155, 158, 161, 163, 168, 176, 180, 181, 182, 183, 185, 186, 188, 191, 192, 194, 196, 204, 219, 221, 225, 251, 264, 265, 266, 332, 366, 373, 374, 375, 376, 377, 380, 384, 385, 386, 391], "dynam": [0, 7, 14, 15, 16, 64, 67, 69, 103, 123, 130, 194, 288, 295, 366, 375, 377, 387], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 57, 58, 59, 63, 99, 100, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 127, 130, 131, 132, 133, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 164, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 200, 203, 204, 216, 241, 243, 252, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 273, 274, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 366, 368, 373, 374, 375, 376, 377, 378, 382, 384, 385, 386, 391], "mask": [0, 1, 4, 23, 25, 29, 35, 36, 40, 125, 126, 131, 140, 169, 194, 216, 229, 230, 241, 258, 259, 260, 261, 262, 268, 269, 347, 366, 374, 376, 392], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 29, 30, 40, 47, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 143, 149, 151, 153, 154, 155, 156, 159, 162, 163, 166, 170, 171, 173, 177, 180, 186, 191, 195, 200, 203, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 221, 225, 226, 227, 228, 229, 230, 231, 239, 240, 241, 243, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 271, 274, 275, 281, 282, 284, 285, 287, 288, 289, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 360, 364, 366, 368, 369, 370, 373, 374, 375, 377, 378, 379, 380, 381, 384, 385, 386, 388, 389, 391, 392], "record": [0, 2, 11, 37, 103, 107, 123, 124, 130, 131, 136, 139, 162, 194, 299, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 360, 366, 374, 375, 378, 382, 385], "domain": [0, 2, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 153, 182, 200, 252, 259, 260, 267, 268, 269, 270, 271, 272, 273, 278, 366, 375, 376, 378, 379, 385, 386, 387, 391, 392], "actor": [0, 3, 4, 21, 162, 195, 205, 208, 209, 211, 216, 217, 228, 239, 241, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 311, 366, 369, 374, 376, 377, 379, 382, 385, 388, 391], "explor": [0, 1, 193, 234, 252, 256, 257, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 281, 297, 346, 355, 356, 360, 366, 375, 376, 377, 379, 380, 382, 385, 386, 387], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 103, 107, 116, 123, 124, 130, 131, 138, 139, 142, 144, 146, 147, 149, 151, 153, 154, 155, 163, 164, 168, 169, 172, 173, 174, 176, 178, 182, 183, 185, 186, 190, 192, 194, 200, 204, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 240, 241, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 341, 343, 344, 345, 346, 347, 350, 360, 366, 370, 374, 379, 380, 381, 384, 385, 386, 387, 389, 391, 392], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 84, 86, 103, 104, 107, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 143, 150, 151, 152, 156, 162, 164, 170, 171, 176, 177, 180, 182, 185, 191, 194, 204, 214, 221, 225, 229, 230, 238, 252, 267, 271, 275, 276, 300, 307, 313, 318, 326, 336, 350, 366, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "hook": [0, 2, 30, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 96, 103, 107, 123, 124, 130, 131, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 241, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 366], "planner": [0, 205, 228, 366], "sac": [0, 289, 300, 302, 366], "redq": [0, 300, 366], "crossq": [0, 366], "iql": [0, 288, 295, 366, 373, 385, 386], "cql": [0, 282, 287, 366], "dt": [0, 124, 265, 266, 366, 387], "td3": [0, 304, 305, 366], "bc": [0, 5, 304, 366, 391], "a2c": [0, 281, 366], "dreamer": [0, 136, 137, 217, 291, 292, 293, 366, 368], "checkpoint": [0, 45, 72, 77, 89, 90, 92, 96, 366, 388, 389], "builder": [0, 366, 374, 392], "logger": [0, 3, 11, 331, 333, 335, 336, 337, 338, 339, 340, 344, 350, 360, 364, 366, 374, 385], "_util": [0, 3, 12, 366, 382], "implement_for": [0, 3, 366], "thing": [0, 3, 7, 8, 103, 107, 123, 124, 130, 131, 367, 375, 376, 377, 378, 379, 380, 381, 385, 386, 389, 392], "consid": [0, 1, 2, 3, 8, 20, 27, 33, 37, 42, 45, 50, 51, 74, 75, 95, 103, 107, 123, 124, 130, 131, 153, 192, 194, 214, 231, 246, 313, 315, 316, 367, 373, 377, 378, 379, 387, 389], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 91, 95, 103, 104, 106, 107, 108, 116, 117, 118, 120, 122, 123, 124, 125, 126, 130, 131, 132, 133, 140, 142, 145, 146, 150, 151, 153, 154, 162, 163, 164, 168, 169, 176, 182, 185, 186, 188, 190, 191, 192, 194, 201, 202, 203, 205, 216, 219, 220, 223, 224, 226, 227, 228, 229, 230, 233, 241, 247, 264, 267, 270, 271, 273, 277, 283, 285, 290, 296, 297, 299, 302, 306, 311, 312, 313, 314, 315, 316, 331, 332, 333, 335, 347, 364, 367, 368, 370, 373, 374, 375, 376, 378, 380, 381, 385, 386, 387, 388, 389, 392], "debug": [0, 6, 8, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 367, 392], "work": [0, 1, 2, 3, 4, 8, 11, 12, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 85, 87, 88, 91, 98, 103, 106, 107, 108, 111, 123, 124, 127, 130, 131, 147, 162, 168, 188, 191, 192, 194, 203, 206, 207, 226, 260, 269, 274, 283, 296, 299, 350, 367, 368, 373, 374, 375, 376, 377, 380, 384, 385, 386, 387, 388, 389, 391, 392], "habitat": [0, 3, 109, 367, 388], "lab": [0, 3, 101, 102, 109, 367], "mujoco": [0, 6, 8, 127, 367, 373, 375, 376], "error": [0, 1, 3, 7, 10, 12, 25, 29, 34, 35, 36, 37, 40, 41, 43, 46, 103, 107, 123, 124, 130, 131, 134, 169, 194, 196, 367, 373, 375, 385, 386, 392], "solut": [0, 2, 3, 6, 7, 9, 21, 367, 368, 370, 391], "resourc": [0, 1, 21, 109, 367, 373, 375, 385, 386], "issu": [0, 3, 4, 5, 8, 61, 65, 72, 74, 75, 95, 106, 111, 146, 169, 183, 203, 252, 259, 260, 267, 268, 269, 270, 271, 367, 391], "customis": [0, 367, 374, 381, 385, 386], "video": [0, 4, 9, 333, 335, 346, 364, 366, 367, 382, 385, 386], "render": [0, 3, 8, 113, 132, 331, 333, 346, 367, 373, 374, 375, 377, 381], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 82, 83, 85, 91, 93, 94, 95, 97, 98, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 141, 146, 150, 153, 186, 203, 229, 230, 366, 377, 384, 385, 386, 389, 391], "search": [0, 122, 204, 374], "page": [0, 7, 24, 340, 379], "somewhat": [1, 2, 369, 378, 392], "equival": [1, 3, 25, 27, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 143, 152, 155, 186, 194, 216, 223, 226, 241, 259, 260, 268, 269, 299, 347, 380, 391, 392], "dataload": [1, 70, 86, 88, 374, 380, 389], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 146, 157, 173, 181, 182, 183, 186, 194, 219, 221, 223, 225, 238, 256, 257, 261, 262, 265, 266, 302, 333, 368, 374, 377, 385, 389, 391, 392], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 164, 166, 168, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 281, 282, 283, 284, 285, 287, 288, 289, 292, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 327, 328, 330, 331, 333, 341, 346, 347, 348, 360, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392], "thei": [1, 2, 3, 4, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 103, 106, 107, 108, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 142, 145, 157, 162, 168, 177, 185, 186, 190, 194, 225, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 347, 350, 368, 369, 370, 373, 374, 375, 376, 379, 384, 385, 386, 387, 388, 389, 391, 392], "over": [1, 2, 3, 4, 8, 14, 15, 37, 45, 51, 52, 54, 60, 61, 67, 80, 86, 87, 103, 107, 117, 118, 123, 124, 130, 131, 139, 153, 164, 176, 183, 194, 203, 247, 250, 273, 290, 292, 297, 319, 331, 353, 370, 373, 374, 375, 377, 378, 379, 380, 385, 386, 387, 392], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 39, 41, 42, 43, 46, 50, 51, 67, 76, 103, 107, 123, 124, 125, 126, 130, 131, 143, 144, 150, 158, 168, 182, 185, 186, 187, 188, 190, 194, 203, 219, 221, 223, 225, 231, 270, 271, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 368, 373, 376, 385, 386, 387, 389, 392], "static": [1, 12, 47, 54, 80, 87, 88, 109, 124, 192, 295, 377, 387, 389], "like": [1, 2, 3, 4, 7, 11, 21, 27, 33, 37, 42, 45, 50, 51, 54, 76, 82, 88, 103, 107, 109, 116, 123, 124, 125, 126, 130, 131, 155, 182, 184, 194, 196, 219, 223, 232, 263, 281, 283, 296, 299, 300, 301, 369, 373, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 392], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 70, 93, 96, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 145, 151, 153, 154, 163, 171, 182, 186, 194, 201, 202, 221, 225, 261, 265, 266, 283, 296, 299, 302, 333, 347, 352, 362, 363, 364, 368, 373, 374, 375, 376, 380, 385, 386, 387, 389], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 64, 65, 68, 69, 70, 103, 107, 119, 123, 124, 130, 131, 141, 146, 150, 158, 168, 176, 182, 185, 186, 187, 188, 190, 194, 226, 250, 270, 271, 272, 302, 333, 370, 375, 377, 381, 389, 392], "two": [1, 2, 3, 4, 8, 10, 35, 36, 37, 42, 45, 47, 50, 51, 67, 82, 86, 88, 103, 107, 123, 124, 130, 131, 143, 164, 168, 190, 194, 212, 219, 221, 223, 225, 244, 247, 271, 296, 304, 308, 346, 350, 369, 373, 374, 375, 376, 377, 378, 380, 381, 384, 385, 386, 387, 389, 391, 392], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 69, 104, 271, 350, 368, 369, 373, 374, 384, 392], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 86, 87, 88, 91, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 127, 130, 131, 132, 133, 142, 143, 147, 149, 150, 168, 176, 177, 180, 182, 184, 185, 186, 188, 190, 194, 203, 206, 207, 219, 221, 223, 225, 226, 229, 230, 231, 232, 233, 250, 252, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 307, 311, 313, 314, 315, 316, 317, 321, 331, 332, 333, 340, 343, 353, 360, 361, 364, 373, 374, 375, 376, 377, 378, 380, 385, 386, 387, 389, 392], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 85, 86, 87, 88, 89, 91, 101, 102, 103, 106, 107, 108, 109, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 144, 145, 149, 151, 154, 162, 164, 166, 168, 176, 178, 184, 186, 188, 190, 192, 194, 203, 206, 207, 209, 215, 218, 221, 225, 226, 229, 230, 236, 241, 260, 264, 268, 269, 271, 273, 274, 275, 297, 302, 310, 313, 316, 331, 332, 346, 347, 362, 363, 368, 373, 375, 377, 378, 379, 380, 384, 385, 387, 388, 389, 391, 392], "constructor": [1, 2, 16, 18, 19, 20, 21, 45, 54, 67, 79, 93, 103, 107, 120, 123, 124, 130, 131, 132, 142, 185, 206, 207, 226, 267, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 361, 364, 368, 373, 374, 375, 377, 380, 385, 386, 389], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 82, 86, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 156, 164, 177, 194, 206, 207, 226, 231, 232, 245, 252, 259, 267, 268, 270, 272, 273, 275, 297, 310, 346, 349, 350, 369, 370, 373, 375, 376, 380, 382, 385, 386, 387], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 104, 107, 108, 109, 111, 112, 113, 119, 120, 123, 124, 127, 130, 131, 140, 186, 194, 219, 221, 223, 225, 261, 264, 272, 273, 304, 354, 364, 368, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 389, 390, 392], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 47, 61, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 140, 145, 158, 161, 164, 180, 181, 182, 183, 186, 191, 194, 203, 204, 205, 217, 219, 221, 223, 225, 227, 228, 256, 257, 261, 262, 264, 265, 266, 267, 271, 281, 291, 299, 312, 313, 314, 315, 316, 319, 320, 321, 332, 335, 341, 346, 350, 370, 374, 376, 378, 379, 381, 382, 384, 387, 388, 391], "queri": [1, 3, 14, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 168, 185, 188, 192, 194, 273, 373, 379, 387, 391], "defin": [1, 2, 12, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 169, 181, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 278, 285, 287, 297, 313, 314, 315, 316, 317, 332, 361, 373, 374, 376, 379, 382, 387, 389, 392], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 29, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 87, 88, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 139, 145, 146, 153, 159, 163, 164, 175, 180, 183, 186, 192, 194, 205, 206, 207, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 235, 236, 237, 240, 242, 243, 246, 247, 248, 249, 252, 256, 257, 258, 261, 262, 264, 265, 266, 267, 270, 271, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295, 296, 298, 299, 300, 301, 302, 304, 305, 341, 343, 346, 350, 352, 353, 354, 362, 363, 364, 368, 373, 374, 375, 376, 377, 378, 380, 382, 385, 386, 387, 388, 389, 392], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 37, 54, 66, 86, 93, 103, 107, 123, 124, 130, 131, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 194, 196, 219, 221, 225, 226, 233, 234, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 314, 315, 316, 347, 373, 375, 376, 380, 381, 385, 386, 387, 389, 392], "deliv": [1, 2, 3, 16, 67, 373, 374, 377, 380, 391], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 33, 34, 41, 42, 43, 45, 46, 50, 51, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 103, 106, 107, 108, 116, 123, 124, 125, 126, 130, 131, 192, 219, 221, 223, 224, 225, 264, 272, 273, 332, 341, 368, 374, 377, 384, 385, 387, 391], "user": [1, 2, 3, 5, 8, 23, 37, 61, 63, 67, 69, 80, 88, 103, 107, 123, 124, 130, 131, 147, 181, 186, 194, 196, 213, 299, 302, 304, 333, 361, 369, 370, 373, 374, 377, 379, 380, 387, 391, 392], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 47, 86, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 180, 256, 257, 261, 262, 265, 266, 373, 375, 382, 385, 386, 391, 392], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 82, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 151, 152, 154, 155, 156, 163, 164, 166, 170, 171, 173, 175, 177, 180, 182, 183, 185, 186, 192, 194, 203, 204, 205, 219, 221, 225, 228, 264, 281, 282, 283, 284, 285, 287, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 369, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "state": [1, 2, 3, 4, 14, 15, 16, 17, 30, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 142, 145, 146, 147, 149, 155, 164, 171, 180, 181, 185, 186, 192, 194, 196, 203, 204, 205, 208, 213, 217, 219, 220, 221, 223, 224, 225, 226, 228, 236, 239, 240, 242, 243, 249, 253, 264, 270, 276, 281, 283, 287, 296, 297, 299, 300, 301, 302, 311, 312, 313, 314, 315, 316, 317, 364, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 387, 392], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 30, 37, 41, 43, 46, 47, 61, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 127, 130, 131, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 163, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 203, 219, 221, 225, 233, 256, 257, 259, 261, 268, 292, 302, 304, 374, 375, 376, 377, 378, 380, 382, 385, 386, 387, 388, 389, 392], "predefin": [1, 374, 376, 380, 389], "becaus": [1, 3, 4, 7, 41, 43, 46, 47, 61, 103, 107, 123, 124, 130, 131, 155, 162, 180, 185, 191, 194, 212, 232, 252, 259, 260, 264, 267, 268, 269, 270, 271, 373, 374, 376, 378, 379, 380, 384, 385, 386, 387, 389, 392], "potenti": [1, 2, 387, 389], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 37, 47, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 164, 178, 186, 189, 194, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 238, 239, 242, 243, 245, 247, 248, 250, 253, 256, 257, 258, 260, 261, 264, 265, 266, 267, 269, 271, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 354, 369, 373, 375, 376, 377, 378, 384, 385, 386, 388, 389], "heavi": [1, 8, 61, 389], "crucial": [1, 2, 3, 256, 257, 261, 262, 265, 266, 288, 295, 297, 373, 374, 375, 376, 377, 379, 381, 385, 386, 387, 392], "configur": [1, 8, 21, 22, 47, 162, 208, 213, 239, 297, 299, 368, 373, 374, 375, 379, 385, 386, 387], "hyperparamet": [1, 85, 194, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 373, 381, 387, 389], "appropri": [1, 3, 4, 7, 11, 73, 83, 93, 94, 97, 98, 123, 130, 155, 361, 364, 373, 381, 389], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 85, 86, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 368, 369, 373, 376, 378, 382, 385, 386, 387, 388, 391], "take": [1, 2, 3, 8, 23, 47, 64, 90, 96, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 149, 180, 183, 185, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 274, 277, 280, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 341, 352, 368, 370, 373, 374, 375, 377, 378, 379, 385, 386, 387, 389, 392], "consider": [1, 2, 3, 8, 106, 108, 374, 385, 386, 389], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 113, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 142, 151, 154, 181, 186, 192, 194, 204, 206, 207, 221, 225, 226, 275, 281, 282, 283, 284, 285, 287, 289, 290, 296, 297, 299, 300, 301, 302, 304, 305, 311, 313, 316, 373, 374, 375, 377, 385, 386, 387, 392], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 80, 82, 87, 88, 89, 93, 96, 101, 102, 103, 106, 107, 108, 109, 113, 116, 119, 123, 124, 125, 126, 130, 131, 132, 133, 139, 142, 143, 146, 149, 150, 151, 152, 155, 156, 158, 162, 164, 169, 170, 171, 173, 176, 177, 180, 181, 183, 185, 186, 191, 192, 194, 196, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 232, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 267, 269, 270, 271, 274, 277, 281, 283, 289, 294, 296, 297, 299, 300, 301, 303, 304, 312, 313, 314, 315, 316, 317, 333, 335, 345, 346, 347, 350, 360, 362, 363, 364, 368, 370, 373, 374, 375, 376, 378, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "occur": [1, 8, 15, 33, 34, 61, 103, 107, 109, 123, 124, 130, 131, 147, 156, 164, 169, 191, 204, 252, 259, 260, 267, 268, 269, 270, 271, 292, 389, 392], "serial": [1, 2, 3, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 192, 194], "parallel": [1, 3, 8, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 186, 191, 196, 281, 361, 362, 363, 364, 374, 375, 385, 386], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 173, 360, 363, 366, 373, 374, 375, 376, 380, 382, 385, 386, 389], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 116, 119, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 362, 363, 364, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 389, 392], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 43, 46, 54, 64, 69, 70, 104, 120, 123, 130, 192, 362, 363, 364, 373, 374, 375, 391, 392], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 363, 366, 375, 380, 391], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 32, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 87, 88, 116, 125, 126, 219, 223, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 368, 370, 375, 378, 389, 391], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 80, 87, 88, 99, 100, 101, 102, 106, 108, 109, 111, 112, 113, 120, 121, 123, 127, 131, 192, 194, 231, 265, 266, 352, 366, 368, 373, 377, 381, 385, 386, 387], "aggreg": [1, 3, 61, 80, 93, 125, 126, 204, 206, 207, 209, 210, 273], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 104, 107, 123, 124, 130, 131, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 163, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 203, 204, 219, 221, 223, 225, 226, 231, 241, 247, 256, 258, 260, 261, 269, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 352, 368, 374, 376, 377, 378, 381, 382, 387, 388, 391, 392], "final": [1, 2, 3, 4, 21, 41, 43, 46, 47, 182, 191, 219, 221, 223, 225, 231, 256, 257, 261, 262, 263, 265, 266, 272, 313, 346, 368, 373, 374, 375, 381, 382, 385, 386, 387, 392], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 362, 366, 373, 374, 375, 380, 391], "sever": [1, 2, 3, 8, 35, 37, 54, 64, 103, 107, 123, 124, 130, 131, 147, 149, 186, 194, 299, 373, 375, 381, 382, 389, 392], "gather": [1, 3, 18, 20, 21, 54, 70, 74, 75, 80, 87, 95, 169, 230, 238, 312, 354, 367, 374, 375, 376, 380, 385, 386, 387, 389, 392], "continu": [1, 2, 9, 26, 55, 88, 103, 107, 123, 124, 125, 126, 130, 131, 132, 133, 139, 200, 209, 210, 211, 212, 265, 266, 273, 278, 281, 282, 289, 295, 299, 300, 301, 302, 303, 304, 305, 313, 318, 326, 368, 373, 375, 376, 378, 385, 386, 387, 389, 391, 392], "concomitantli": [1, 103, 107, 123, 124, 130, 131], "network": [1, 4, 8, 37, 103, 107, 116, 123, 124, 125, 126, 130, 131, 194, 206, 207, 209, 210, 211, 212, 215, 217, 218, 223, 226, 231, 232, 234, 236, 237, 240, 242, 243, 244, 249, 253, 254, 255, 258, 270, 274, 282, 283, 284, 285, 287, 288, 289, 290, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 309, 311, 313, 314, 315, 316, 317, 359, 360, 368, 369, 370, 379, 382, 384, 387, 392], "impli": [1, 392], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 47, 80, 82, 85, 99, 100, 103, 107, 123, 124, 128, 129, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 219, 220, 221, 223, 224, 225, 231, 234, 270, 281, 282, 283, 289, 292, 302, 304, 352, 359, 368, 370, 373, 374, 375, 376, 384, 387, 389, 391], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 34, 37, 41, 43, 46, 63, 69, 72, 80, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 162, 164, 177, 186, 187, 192, 194, 196, 226, 231, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 387, 388, 389, 391, 392], "slightli": [1, 23, 61, 368, 369, 376, 385, 387, 388, 389, 392], "lag": [1, 373, 374, 375], "therefor": [1, 2, 3, 7, 42, 45, 50, 51, 68, 69, 103, 107, 123, 124, 130, 131, 173, 299, 311, 379, 385, 392], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 80, 82, 87, 88, 93, 95, 96, 103, 107, 116, 119, 122, 123, 124, 125, 126, 130, 131, 139, 140, 143, 146, 155, 162, 168, 173, 176, 180, 181, 183, 185, 187, 190, 191, 203, 204, 219, 220, 223, 224, 229, 230, 231, 256, 257, 261, 262, 265, 266, 267, 270, 271, 280, 281, 282, 283, 288, 289, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 369, 370, 373, 374, 375, 377, 384, 385, 386, 387, 389, 392], "asynchron": [1, 9, 15, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 281, 362, 373, 374, 375], "off": [1, 2, 4, 222, 248, 259, 302, 331, 346, 355, 368, 370, 373, 374, 375, 378, 379, 385, 386, 388, 392], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 95, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 132, 151, 154, 158, 164, 181, 186, 191, 194, 196, 216, 219, 221, 223, 225, 232, 233, 253, 255, 258, 260, 268, 281, 288, 290, 295, 299, 346, 368, 370, 373, 374, 375, 376, 377, 378, 380, 381, 385, 386, 387, 388, 389, 392], "remot": [1, 2, 18, 19, 20, 21, 123, 130, 392], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 47, 93, 99, 100, 103, 107, 109, 110, 112, 113, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 149, 151, 154, 155, 156, 162, 166, 170, 171, 176, 177, 178, 180, 181, 183, 192, 194, 196, 205, 221, 225, 228, 264, 265, 266, 281, 331, 333, 354, 368, 373, 375, 376, 378, 379, 380, 381, 382, 388, 389, 391], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 177, 300, 313, 314, 315, 316, 317, 369, 373, 375, 378, 379, 380], "synchronis": [1, 104, 385, 386], "either": [1, 2, 5, 22, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 103, 107, 123, 124, 130, 131, 180, 181, 194, 276, 297, 304, 305, 337, 370, 373, 374, 376, 385, 388, 389, 391, 392], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 373, 386, 391], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 153, 156, 158, 161, 162, 163, 164, 168, 169, 171, 172, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 192, 194, 196, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 247, 248, 252, 253, 254, 255, 257, 259, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 282, 283, 284, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 313, 314, 315, 316, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 340, 343, 344, 346, 347, 350, 364, 368, 369, 370, 373, 374, 375, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "second": [1, 3, 8, 23, 35, 36, 61, 64, 93, 143, 219, 221, 223, 225, 260, 283, 296, 299, 302, 335, 349, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 150, 151, 152, 154, 155, 156, 162, 166, 167, 168, 170, 171, 173, 177, 180, 182, 184, 185, 186, 188, 190, 192, 194, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 239, 240, 241, 249, 252, 253, 254, 255, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 273, 275, 278, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 331, 347, 352, 358, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 53, 54, 55, 56, 80, 87, 103, 107, 123, 124, 130, 131, 143, 158, 162, 185, 194, 215, 216, 220, 224, 235, 253, 254, 255, 259, 260, 263, 270, 276, 281, 283, 284, 285, 290, 296, 299, 301, 311, 312, 313, 314, 315, 316, 350, 366, 370, 373, 374, 375, 376, 377, 378, 384, 385, 386, 387, 392], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 78, 80, 82, 87, 88, 95, 102, 103, 104, 106, 107, 108, 119, 123, 124, 130, 131, 146, 164, 182, 185, 186, 192, 194, 200, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 285, 288, 289, 297, 311, 313, 314, 315, 316, 331, 333, 337, 346, 354, 355, 356, 360, 362, 363, 368, 369, 370, 373, 375, 376, 377, 378, 387, 389, 392], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 27, 30, 33, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 150, 151, 152, 154, 155, 156, 166, 168, 170, 171, 173, 177, 180, 182, 185, 186, 188, 190, 194, 200, 203, 205, 215, 219, 220, 221, 223, 224, 225, 228, 233, 234, 240, 241, 249, 252, 253, 254, 255, 258, 259, 260, 264, 265, 267, 268, 269, 270, 273, 275, 278, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 331, 347, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 61, 63, 67, 80, 87, 88, 91, 93, 103, 107, 111, 123, 124, 127, 130, 131, 171, 212, 221, 223, 225, 226, 235, 250, 252, 256, 257, 259, 270, 275, 297, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 367, 369, 373, 374, 375, 377, 379, 380, 385, 386, 387, 389, 391, 392], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 29, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 78, 79, 80, 82, 83, 87, 88, 89, 91, 93, 94, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 143, 146, 149, 151, 152, 153, 154, 163, 164, 168, 173, 176, 179, 181, 182, 183, 185, 186, 187, 190, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 232, 235, 236, 237, 238, 239, 241, 242, 243, 245, 250, 252, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 311, 313, 314, 315, 316, 320, 321, 335, 343, 345, 346, 350, 354, 364, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 392], "cuda": [1, 2, 3, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 109, 110, 111, 123, 124, 130, 131, 150, 162, 167, 168, 182, 185, 186, 188, 190, 194, 219, 220, 223, 224, 270, 342, 373, 374, 375, 376, 385, 386, 388, 392], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 29, 52, 82, 99, 100, 112, 113, 123, 130, 131, 147, 149, 153, 163, 173, 176, 180, 185, 192, 219, 223, 225, 231, 233, 234, 252, 259, 267, 268, 270, 271, 274, 283, 289, 296, 299, 300, 304, 305, 319, 364, 368, 370, 373, 374, 375, 377, 379, 380, 385, 386, 387, 389, 391], "infer": [1, 123, 130, 146, 192, 221, 225, 233, 258, 267, 287, 331, 373, 375, 380, 382, 389], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 37, 61, 64, 80, 87, 88, 99, 100, 101, 102, 103, 106, 107, 112, 113, 119, 120, 121, 123, 124, 130, 131, 163, 164, 186, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 272, 273, 274, 277, 302, 333, 340, 346, 362, 363, 364, 367, 370, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391], "dispatch": [1, 18, 19, 20, 21, 250, 264, 333, 373], "avail": [1, 2, 3, 4, 6, 21, 42, 45, 50, 51, 61, 64, 69, 80, 86, 87, 88, 101, 102, 111, 117, 118, 123, 125, 126, 127, 132, 133, 139, 142, 145, 162, 216, 241, 267, 271, 297, 333, 362, 363, 368, 373, 374, 375, 376, 377, 378, 385, 386, 387, 389, 392], "speed": [1, 2, 4, 8, 29, 103, 107, 123, 124, 130, 131, 369, 373, 374, 375, 376, 385, 386, 387, 389], "avoid": [1, 2, 3, 37, 74, 75, 95, 103, 107, 123, 124, 130, 131, 138, 186, 192, 194, 252, 270, 275, 283, 296, 299, 302, 353, 375, 386], "oom": [1, 3, 41, 43, 46, 74, 75, 95], "choic": [1, 2, 63, 69, 123, 235, 368, 369, 373, 374, 379, 385, 386], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 33, 37, 42, 45, 47, 50, 51, 54, 61, 64, 65, 67, 68, 69, 72, 74, 75, 80, 82, 87, 88, 93, 95, 103, 104, 105, 107, 116, 120, 123, 124, 125, 126, 130, 131, 132, 142, 143, 151, 154, 171, 185, 187, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243, 245, 249, 250, 252, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 283, 296, 297, 299, 313, 314, 315, 316, 317, 331, 347, 362, 363, 364, 368, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 387, 389, 392], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 50, 53, 54, 55, 56, 67, 79, 88, 103, 107, 111, 122, 123, 124, 130, 131, 139, 146, 158, 187, 192, 204, 221, 225, 258, 281, 283, 284, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316, 368, 369, 374, 386], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 87, 93, 95, 103, 107, 123, 124, 130, 131, 191, 192, 194, 205, 228, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 340, 366, 370, 373, 375, 376, 378, 380, 382, 385, 386, 388, 392], "while": [1, 2, 3, 7, 8, 23, 37, 103, 107, 123, 124, 130, 131, 173, 186, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 288, 295, 296, 299, 302, 368, 373, 375, 376, 378, 380, 381, 385, 386, 387, 388, 389, 391], "wait": [1, 20, 21, 22, 376, 387], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 29, 35, 36, 37, 40, 41, 43, 45, 46, 50, 61, 64, 65, 67, 68, 69, 70, 74, 75, 80, 82, 87, 88, 93, 95, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 138, 142, 143, 145, 146, 153, 164, 171, 173, 176, 177, 180, 182, 186, 194, 203, 206, 207, 219, 223, 243, 264, 267, 272, 273, 274, 281, 282, 284, 285, 287, 288, 289, 295, 299, 302, 304, 313, 320, 321, 331, 333, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 387, 389, 392], "impact": [1, 2, 3, 67, 113, 151, 154, 281, 283, 296, 299, 301, 374, 376, 385, 386], "memori": [1, 3, 8, 21, 29, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 72, 74, 78, 103, 104, 107, 111, 123, 124, 130, 131, 146, 150, 168, 182, 185, 186, 188, 190, 192, 194, 223, 224, 270, 364, 366, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "manag": [1, 8, 309, 310, 313, 314, 315, 316, 346, 379], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 71, 79, 80, 82, 85, 87, 88, 93, 103, 107, 112, 113, 123, 124, 125, 126, 130, 131, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 167, 168, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 203, 204, 205, 215, 216, 221, 225, 227, 228, 241, 252, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 331, 333, 344, 345, 346, 348, 349, 350, 354, 369, 370, 373, 375, 376, 377, 379, 384, 385, 386, 387, 389, 391, 392], "control": [1, 3, 5, 8, 16, 23, 24, 28, 80, 87, 101, 102, 103, 107, 116, 123, 124, 125, 126, 130, 131, 153, 203, 209, 210, 211, 212, 221, 225, 227, 228, 243, 250, 265, 266, 270, 271, 272, 281, 283, 296, 299, 303, 313, 318, 326, 331, 368, 370, 373, 374, 375, 377, 378, 379, 385, 386, 387, 389], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 85, 86, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 146, 147, 151, 154, 159, 162, 163, 164, 168, 169, 180, 182, 183, 185, 186, 188, 192, 194, 196, 215, 219, 220, 222, 223, 224, 225, 229, 230, 231, 248, 253, 254, 255, 258, 264, 267, 270, 271, 273, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 308, 311, 313, 314, 315, 316, 331, 333, 341, 345, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 387, 388, 389, 392], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 374, 386], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 29, 35, 36, 40, 42, 43, 45, 47, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 80, 82, 85, 87, 103, 107, 123, 124, 125, 126, 130, 131, 142, 143, 146, 149, 151, 154, 156, 159, 166, 178, 186, 192, 194, 221, 225, 232, 313, 315, 316, 346, 350, 369, 373, 374, 375, 376, 378, 379, 380, 382, 385, 386, 387, 389, 392], "heurist": [1, 4, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 264, 266, 373, 380, 392], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 63, 85, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 234, 299, 304, 313, 314, 315, 316, 317, 332, 367, 368, 370, 373, 374, 375, 376, 378, 380, 381, 386, 389, 392], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 52, 54, 63, 67, 86, 87, 91, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 146, 151, 153, 154, 159, 163, 164, 185, 186, 192, 194, 206, 207, 220, 221, 224, 225, 226, 229, 230, 231, 232, 247, 258, 265, 266, 274, 302, 304, 373, 374, 375, 377, 378, 380, 384, 385, 386, 388, 389, 392], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 79, 80, 82, 85, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 151, 153, 154, 155, 156, 158, 162, 163, 164, 166, 168, 169, 173, 175, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 196, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 245, 246, 247, 248, 252, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 360, 364, 370, 373, 374, 375, 376, 378, 385, 388, 389, 391, 392], "behaviour": [1, 3, 14, 15, 21, 67, 107, 147, 151, 154, 164, 169, 181, 203, 221, 222, 225, 248, 331, 346, 368, 374, 385, 389], "besid": 1, "those": [1, 2, 3, 5, 7, 27, 33, 103, 107, 123, 124, 130, 131, 146, 151, 154, 164, 182, 183, 225, 267, 271, 272, 273, 352, 362, 363, 368, 373, 374, 377, 378, 386, 387, 392], "choos": [1, 11, 116, 221, 225, 299, 366, 368, 369, 373, 374, 375, 385, 386, 389], "follow": [1, 2, 3, 6, 7, 8, 11, 37, 41, 43, 44, 46, 47, 61, 63, 64, 65, 66, 67, 68, 69, 80, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 142, 162, 168, 188, 192, 194, 206, 207, 219, 221, 223, 225, 226, 260, 267, 268, 269, 280, 281, 282, 283, 284, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 333, 350, 368, 369, 370, 373, 374, 375, 376, 379, 380, 384, 385, 386, 387, 389, 391, 392], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 353, 373, 375, 391], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 61, 146, 159, 194, 256, 257, 261, 264, 265, 266, 332, 333, 335, 343, 346, 350, 353, 354, 373, 374, 375, 376, 378, 385, 386, 389, 391, 392], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 89, 91, 95, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 122, 123, 124, 127, 130, 131, 142, 143, 146, 149, 150, 153, 156, 158, 161, 162, 164, 166, 167, 168, 176, 178, 182, 185, 186, 188, 190, 191, 192, 194, 196, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 232, 233, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 262, 264, 265, 266, 269, 270, 271, 273, 274, 277, 283, 296, 299, 302, 304, 312, 313, 314, 315, 316, 331, 332, 335, 346, 370, 374, 375, 376, 377, 378, 380, 381, 385, 386, 387, 389, 391, 392], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 173, 353, 373, 374, 375, 376, 380, 382, 385, 386, 389, 391], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 32, 35, 36, 37, 38, 45, 47, 49, 50, 61, 63, 64, 67, 80, 82, 85, 87, 88, 90, 93, 103, 104, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 168, 173, 176, 180, 181, 182, 183, 190, 192, 194, 216, 219, 220, 221, 223, 225, 231, 232, 236, 240, 241, 249, 256, 257, 259, 260, 261, 269, 273, 319, 322, 323, 324, 325, 327, 328, 329, 330, 333, 346, 347, 362, 363, 368, 373, 374, 375, 376, 378, 379, 380, 382, 385, 386, 387, 388, 389, 391, 392], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 353, 373, 374, 382], "random": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 47, 53, 55, 56, 67, 69, 81, 93, 103, 107, 119, 123, 124, 130, 131, 139, 153, 163, 164, 182, 195, 196, 219, 221, 223, 225, 261, 267, 270, 271, 278, 282, 300, 346, 354, 368, 373, 374, 375, 376, 377, 378, 380, 387, 388, 389, 391, 392], "rand_step": [1, 2, 3, 30, 48, 101, 102, 103, 104, 106, 107, 108, 114, 115, 119, 120, 121, 123, 124, 130, 131, 161, 182, 192, 387, 391, 392], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 373], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 63, 65, 67, 68, 69, 373, 374, 375], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 32, 37, 38, 49, 50, 61, 63, 64, 65, 67, 68, 69, 79, 80, 87, 88, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 169, 180, 185, 194, 205, 225, 228, 265, 266, 299, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 341, 366, 369, 373, 374, 375, 376, 377, 380, 382, 387, 391, 392], "pad": [1, 2, 3, 23, 44, 52, 63, 65, 67, 68, 69, 146, 206, 207, 209, 210, 225, 229, 230, 231, 347], "along": [1, 2, 3, 14, 15, 23, 33, 34, 41, 43, 46, 47, 54, 63, 65, 67, 68, 69, 75, 80, 82, 87, 88, 93, 95, 106, 108, 145, 146, 147, 164, 166, 169, 176, 184, 225, 226, 229, 230, 234, 259, 267, 270, 271, 297, 304, 368, 373, 374, 376, 377, 379, 385, 386, 387, 389], "point": [1, 2, 3, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 66, 73, 79, 80, 83, 93, 94, 97, 98, 103, 107, 123, 124, 130, 131, 139, 142, 145, 146, 150, 168, 181, 182, 184, 185, 186, 188, 190, 194, 227, 270, 280, 290, 350, 367, 374, 375, 384, 385, 386, 387, 389, 392], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 80, 87, 88, 107, 142, 169, 180, 204, 229, 230, 257, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 370, 376], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 48, 50, 65, 101, 102, 103, 106, 107, 108, 123, 124, 130, 131, 132, 133, 159, 169, 192, 194, 216, 229, 230, 241, 259, 260, 268, 269, 271, 308, 313, 347, 373, 375, 376, 377, 378, 379, 385, 386], "valid": [1, 2, 3, 23, 41, 43, 44, 54, 70, 93, 134, 142, 169, 186, 194, 206, 207, 226, 229, 230, 256, 257, 265, 266, 296, 313, 314, 315, 316, 347, 370, 392], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 346, 366, 373, 374], "strategi": [1, 2, 16, 67, 85, 116, 139, 230, 238, 261, 368, 370, 373, 374, 378, 385, 386, 389], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 50, 53, 55, 56, 58, 82, 103, 107, 113, 119, 123, 124, 125, 126, 130, 131, 132, 134, 143, 145, 146, 155, 162, 180, 181, 182, 185, 186, 191, 192, 194, 206, 207, 229, 230, 231, 232, 256, 257, 259, 267, 268, 271, 274, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 305, 311, 333, 350, 360, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 392], "organ": [1, 2, 387, 389], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 103, 106, 107, 108, 123, 124, 127, 130, 131, 143, 146, 151, 154, 155, 173, 180, 191, 192, 194, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 278, 285, 290, 304, 311, 331, 333, 368, 374, 377, 378, 379, 380, 381, 382, 385, 387, 391], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 63, 64, 67, 85, 99, 100, 103, 107, 112, 113, 116, 123, 124, 125, 126, 130, 131, 142, 146, 153, 164, 171, 186, 187, 194, 216, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 241, 295, 299, 308, 313, 314, 315, 319, 320, 321, 346, 350, 352, 362, 363, 368, 369, 370, 373, 374, 375, 377, 379, 381, 384, 385, 386, 387, 388, 389, 392], "how": [1, 2, 3, 11, 18, 19, 20, 24, 37, 42, 50, 67, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 194, 267, 281, 283, 294, 296, 299, 333, 335, 350, 367, 368, 373, 374, 375, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "tabl": [1, 368, 374, 378], "summar": [1, 3, 387], "what": [1, 3, 8, 11, 28, 42, 53, 61, 80, 87, 103, 107, 123, 124, 130, 131, 155, 182, 196, 203, 268, 304, 367, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 386, 387, 388, 389, 391, 392], "expect": [1, 2, 3, 4, 7, 27, 37, 45, 53, 54, 80, 86, 87, 103, 107, 119, 122, 123, 124, 130, 131, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 164, 166, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 219, 220, 221, 223, 224, 225, 231, 232, 260, 265, 266, 270, 273, 281, 282, 283, 284, 285, 287, 288, 289, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 354, 367, 368, 369, 370, 373, 375, 376, 377, 378, 379, 380, 385, 386, 387, 389, 392], "n": [1, 2, 3, 6, 7, 25, 29, 37, 40, 47, 103, 107, 123, 124, 130, 131, 146, 153, 158, 187, 194, 219, 220, 223, 228, 264, 265, 266, 271, 281, 289, 297, 312, 347, 368, 370, 374, 376, 378, 385, 386, 389, 392], "b": [1, 2, 3, 7, 8, 23, 27, 33, 41, 43, 45, 46, 47, 50, 51, 93, 219, 220, 223, 224, 231, 232, 233, 234, 240, 249, 274, 313, 314, 315, 316, 317, 319, 333, 368, 374, 388, 389], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 79, 80, 82, 86, 93, 103, 104, 106, 107, 120, 121, 123, 124, 130, 131, 139, 142, 146, 151, 154, 155, 168, 172, 173, 181, 183, 190, 192, 194, 196, 203, 219, 223, 259, 265, 266, 270, 303, 313, 314, 315, 316, 317, 319, 333, 340, 350, 352, 364, 367, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "p": [1, 2, 4, 82, 85, 104, 128, 129], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 61, 63, 65, 67, 68, 69, 99, 100, 103, 107, 112, 113, 123, 124, 125, 126, 130, 131, 150, 151, 152, 154, 168, 173, 177, 181, 182, 184, 185, 186, 188, 190, 191, 194, 219, 222, 223, 226, 231, 243, 247, 248, 270, 273, 280, 281, 282, 284, 285, 287, 288, 289, 295, 297, 299, 300, 301, 302, 304, 305, 352, 362, 363, 364, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 392], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 79, 80, 82, 93, 103, 106, 107, 123, 124, 130, 131, 151, 152, 154, 164, 184, 186, 196, 225, 226, 232, 267, 270, 271, 273, 274, 280, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316, 333, 341, 352, 362, 363, 364, 366, 368, 370, 373, 374, 375, 376, 377, 378, 380, 381, 385, 386, 387, 389, 392], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 53, 54, 55, 56, 63, 65, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 123, 124, 130, 131, 132, 133, 139, 145, 146, 147, 158, 164, 166, 169, 176, 179, 184, 187, 192, 206, 207, 208, 213, 221, 223, 225, 226, 229, 230, 231, 233, 234, 239, 240, 244, 245, 246, 247, 250, 259, 264, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 364, 368, 373, 374, 375, 376, 377, 385, 386, 387, 389], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 93, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 127, 130, 131, 138, 145, 147, 169, 176, 182, 183, 186, 192, 194, 203, 217, 219, 223, 225, 264, 265, 266, 283, 289, 292, 296, 297, 299, 300, 304, 305, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 350, 368, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "adapt": [1, 24, 140, 180, 296, 373, 387], "equal": [1, 14, 15, 17, 61, 80, 87, 88, 120, 123, 130, 163, 164, 206, 207, 219, 221, 223, 225, 226, 232, 303, 308, 341, 362, 363, 373, 375, 388], "introduc": [1, 2, 123, 130, 219, 221, 223, 225, 265, 266, 373, 385], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 54, 55, 56, 63, 69, 74, 75, 82, 93, 95, 99, 100, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 142, 168, 182, 186, 188, 194, 196, 209, 221, 225, 245, 271, 272, 273, 333, 341, 353, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 389, 391, 392], "confus": [1, 37, 103, 107, 123, 124, 130, 131, 186, 194], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 46, 50, 51, 54, 61, 63, 65, 67, 68, 69, 74, 75, 76, 82, 85, 86, 87, 88, 89, 91, 95, 103, 106, 107, 108, 119, 123, 124, 130, 131, 149, 152, 153, 170, 177, 184, 188, 192, 194, 219, 221, 225, 234, 235, 258, 260, 261, 269, 271, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 313, 331, 347, 362, 363, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 388, 391, 392], "better": [1, 3, 8, 9, 14, 15, 23, 221, 225, 369, 375, 377, 387, 391], "consist": [1, 2, 3, 37, 42, 45, 50, 51, 64, 67, 103, 107, 123, 124, 130, 131, 162, 191, 194, 207, 226, 373, 374, 375, 387, 388, 392], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 67, 103, 107, 117, 118, 123, 124, 130, 131, 186, 267, 271, 373, 375, 377, 378, 380, 385, 386, 387, 392], "keep": [1, 3, 4, 7, 8, 15, 42, 45, 50, 51, 86, 93, 123, 130, 164, 168, 190, 192, 194, 203, 265, 266, 343, 350, 373, 374, 375, 376, 380, 381, 382, 386, 387, 389, 391, 392], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 61, 64, 168, 190, 282, 284, 287, 289, 300, 302, 304, 305, 373, 374, 378, 379, 385, 386, 389, 392], "interchang": [1, 375, 377, 381, 388, 389], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 153, 163, 174, 186, 192, 194, 196, 206, 207, 215, 219, 221, 225, 226, 231, 232, 260, 267, 271, 281, 283, 284, 287, 288, 289, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 308, 313, 346, 350, 369, 373, 374, 376, 380, 385, 386, 387, 389, 392], "wherea": [1, 2, 22, 67, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 153, 194, 297, 370, 381], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 50, 53, 55, 56, 64, 67, 69, 79, 80, 103, 107, 119, 123, 124, 130, 131, 168, 182, 186, 190, 192, 194, 221, 223, 225, 229, 230, 261, 262, 265, 266, 267, 271, 285, 288, 289, 302, 311, 313, 314, 315, 316, 317, 373, 374, 375, 377, 379, 380, 381, 385, 386, 387, 388], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 61, 67, 80, 87, 93, 103, 107, 123, 124, 130, 131, 169, 272, 273, 341, 350, 368, 373, 374, 375, 380, 384, 391, 392], "doesn": [1, 4, 12, 93, 120, 151, 154, 377], "understood": [1, 373], "serv": [1, 18, 20, 21, 109, 389, 392], "basi": [1, 93, 231, 389], "simplest": [1, 93, 274, 373, 375, 376, 378, 385, 386, 389, 392], "scenario": [1, 2, 117, 118, 123, 132, 133, 331, 373, 378, 385, 386, 387], "transit": [1, 37, 63, 67, 80, 88, 93, 103, 107, 123, 124, 130, 131, 194, 276, 373, 376, 377, 378, 380, 385, 387, 389], "sampl": [1, 4, 8, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 93, 95, 103, 107, 119, 122, 123, 124, 130, 131, 139, 145, 146, 169, 173, 197, 198, 201, 202, 205, 214, 222, 228, 229, 230, 238, 239, 242, 247, 248, 252, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 281, 282, 283, 284, 285, 287, 296, 298, 299, 304, 305, 341, 347, 350, 353, 366, 368, 373, 374, 375, 376, 377, 378, 380, 382, 385, 386, 388, 391, 392], "attent": [1, 2, 8, 373, 376, 392], "given": [1, 2, 3, 14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 103, 107, 119, 123, 124, 130, 131, 150, 153, 164, 168, 182, 185, 186, 188, 190, 192, 194, 203, 205, 216, 217, 219, 223, 228, 241, 245, 252, 259, 260, 261, 264, 266, 269, 270, 271, 272, 273, 275, 280, 284, 285, 287, 312, 313, 314, 315, 316, 317, 319, 342, 346, 360, 368, 370, 373, 374, 375, 377, 378, 379, 380, 381, 386, 387, 392], "built": [1, 2, 3, 5, 7, 82, 99, 100, 106, 112, 113, 122, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 306, 311, 358, 360, 361, 364, 373, 374, 375, 376, 379, 381, 387, 389, 392], "flatten": [1, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 93, 143, 158, 347, 366, 376, 386], "suffici": [1, 3, 4, 373], "preprocess": [1, 2, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 374], "popul": [1, 2, 3, 42, 45, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 161, 182, 373, 375, 376, 378, 380, 387, 389], "replaybuff": [1, 2, 30, 42, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 97, 146, 169, 173, 194, 285, 290, 311, 358, 360, 366, 375, 380, 382, 385, 386, 388, 389, 391], "lazytensorstorag": [1, 2, 42, 45, 50, 51, 79, 93, 173, 194, 375, 382, 386, 389], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 45, 93, 103, 104, 107, 123, 124, 130, 131, 138, 143, 162, 182, 194, 250, 259, 264, 267, 268, 291, 293, 304, 313, 316, 324, 325, 329, 330, 331, 360, 369, 373, 385, 386, 389, 391, 392], "reshap": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 87, 93, 143, 221, 225, 226, 331, 375, 385, 386], "extend": [1, 2, 8, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 42, 45, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 76, 79, 80, 82, 83, 87, 88, 91, 93, 94, 97, 98, 145, 173, 194, 347, 370, 373, 374, 375, 376, 380, 382, 385, 386, 388, 389, 391], "slice": [1, 2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 139, 145, 389], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 42, 43, 45, 46, 50, 51, 93, 111, 380, 385, 386], "achiev": [1, 2, 3, 4, 37, 103, 107, 111, 123, 124, 130, 131, 181, 194, 204, 267, 347, 370, 373, 374, 375, 376, 385, 386, 387, 389, 392], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 93, 103, 104, 107, 111, 123, 124, 125, 130, 131, 132, 133, 143, 146, 168, 185, 186, 188, 191, 192, 194, 200, 203, 206, 207, 209, 210, 211, 212, 213, 218, 221, 225, 226, 227, 231, 232, 258, 271, 278, 285, 290, 300, 302, 311, 333, 347, 354, 355, 356, 360, 362, 363, 368, 373, 374, 375, 376, 378, 381, 385, 386, 387, 388, 389, 391, 392], "multidimension": [1, 2, 50, 79, 80, 389], "slicesampl": [1, 2, 61, 80, 389], "sampler": [1, 2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 95, 169, 285, 290, 311, 373, 375, 385, 386, 389], "One": [1, 2, 4, 8, 25, 29, 36, 40, 54, 93, 99, 100, 123, 130, 146, 173, 188, 238, 256, 257, 270, 274, 303, 308, 337, 373, 374, 389, 392], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 82, 87, 88, 89, 90, 91, 93, 95, 99, 103, 104, 107, 112, 123, 124, 125, 126, 127, 130, 131, 132, 139, 142, 143, 146, 149, 155, 159, 162, 164, 166, 177, 181, 182, 183, 186, 187, 192, 194, 206, 207, 216, 221, 225, 226, 229, 230, 231, 232, 241, 252, 259, 260, 264, 267, 268, 269, 270, 271, 274, 275, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 303, 304, 305, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 335, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 373, 374, 375, 376, 378, 384, 387, 389], "ensur": [1, 2, 3, 37, 42, 50, 79, 80, 86, 103, 107, 123, 124, 130, 131, 139, 146, 168, 180, 186, 188, 192, 194, 259, 368, 374, 375, 387, 389], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 82, 93, 95, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 145, 147, 151, 154, 155, 156, 162, 164, 166, 170, 171, 173, 177, 180, 182, 184, 192, 193, 194, 196, 200, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 246, 247, 249, 252, 253, 254, 255, 258, 259, 260, 264, 265, 267, 268, 269, 270, 273, 274, 275, 278, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 308, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 341, 347, 350, 360, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 391, 392], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 61, 222, 247, 248, 280, 367, 373, 374, 375, 376, 379, 385, 386, 388, 392], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 28, 37, 41, 43, 89, 93, 103, 107, 111, 116, 123, 124, 125, 126, 130, 131, 146, 149, 158, 168, 171, 183, 186, 190, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 233, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 267, 268, 269, 270, 274, 277, 280, 289, 300, 301, 302, 304, 305, 312, 317, 333, 350, 364, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 391, 392], "dimension": [1, 42, 45, 50, 51, 153, 221, 225, 313, 318, 326, 386], "num_slic": [1, 2, 61, 67, 80, 87, 88, 389], "4": [1, 2, 3, 7, 25, 27, 29, 30, 33, 37, 40, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 87, 88, 95, 99, 100, 101, 102, 103, 107, 112, 113, 114, 115, 116, 119, 121, 123, 124, 128, 129, 130, 131, 139, 140, 142, 143, 146, 155, 173, 180, 181, 192, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 226, 228, 231, 232, 235, 236, 237, 238, 239, 240, 241, 249, 252, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 275, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 331, 332, 368, 372, 373, 374, 375, 376, 378, 380, 381, 385, 386, 387, 388, 389, 390, 391, 392], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 30, 48, 143, 173, 376, 380, 389, 391], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 173, 350, 353, 360, 370, 373, 374, 375, 376, 380, 382, 385, 386, 389, 391], "dim": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 146, 147, 166, 182, 187, 192, 224, 245, 250, 264, 364, 374, 375, 385, 387, 389], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 53, 54, 55, 56, 63, 65, 67, 79, 80, 87, 88, 103, 107, 111, 120, 123, 124, 127, 130, 131, 143, 150, 168, 182, 185, 186, 188, 190, 194, 221, 225, 226, 250, 270, 272, 273, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 331, 333, 335, 368, 370, 373, 374, 375, 376, 377, 378, 379, 381, 385, 386, 387, 389, 392], "ndim": [1, 2, 42, 45, 50, 51, 74, 75, 79, 80, 93, 95, 103, 107, 123, 124, 130, 131, 194, 264], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 93, 103, 107, 120, 124, 125, 126, 127, 130, 131, 331, 361, 366, 373, 374, 375, 377, 384, 391, 392], "make_env": [1, 3, 123, 130, 133, 192, 331, 355, 356, 373, 374, 392], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 79, 85, 103, 107, 123, 124, 130, 131, 186, 215, 241, 260, 268, 269, 270, 271, 290, 352, 366, 370, 373, 374, 377, 378, 382, 389, 392], "behav": [1, 3, 109, 119, 219, 223, 238, 288, 295, 388], "iif": 1, "accordingli": [1, 80, 180, 181, 223, 268, 376], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 27, 29, 33, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 110, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 142, 143, 146, 150, 153, 155, 156, 162, 164, 166, 168, 170, 171, 173, 176, 177, 180, 181, 182, 184, 185, 186, 188, 190, 194, 195, 200, 205, 206, 207, 209, 210, 211, 213, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 235, 238, 240, 250, 252, 253, 254, 255, 259, 260, 267, 269, 270, 273, 274, 275, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 349, 368, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 385, 386, 387, 388, 389, 390, 391, 392], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 67, 79, 93, 142, 155, 196, 259, 270, 378, 379, 381, 385, 386], "current": [1, 2, 3, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 80, 82, 88, 103, 107, 109, 120, 123, 124, 130, 131, 142, 143, 146, 169, 181, 182, 183, 185, 186, 194, 197, 198, 203, 217, 243, 264, 265, 266, 281, 283, 290, 296, 299, 301, 302, 336, 370, 373, 374, 375, 376, 379, 385, 386, 387, 389, 391, 392], "fulli": [1, 8, 37, 103, 107, 123, 124, 130, 131, 194, 220, 224, 374, 379, 387, 389], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83, 86, 88, 89, 91, 93, 94, 95, 97, 98, 103, 104, 107, 120, 123, 124, 125, 126, 130, 131, 132, 133, 140, 142, 158, 168, 169, 173, 186, 188, 192, 194, 196, 204, 206, 207, 213, 226, 234, 258, 264, 270, 271, 272, 273, 281, 282, 284, 285, 287, 288, 289, 295, 297, 299, 300, 301, 302, 304, 305, 313, 315, 316, 331, 338, 350, 367, 373, 374, 375, 378, 379, 385, 386, 387, 389, 391, 392], "consecut": [1, 3, 61, 86, 111, 225, 265, 266, 333, 376, 377, 380, 386, 389, 392], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 103, 104, 106, 107, 120, 121, 123, 124, 130, 131, 168, 190, 194, 350, 364, 374, 375, 377, 378], "therebi": [1, 24, 331, 369, 373, 374], "interrupt": [1, 2, 107, 264, 319], "These": [1, 2, 7, 37, 47, 64, 69, 96, 103, 107, 123, 124, 130, 131, 132, 168, 190, 194, 368, 369, 373, 375, 385, 386, 387, 389, 392], "tool": [1, 2, 3, 5, 376, 377, 385, 387, 389, 392], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 103, 106, 107, 123, 124, 130, 131, 135, 138, 370, 373, 375, 376, 377, 380, 381, 387], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 366], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 366], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 83, 86, 87, 88, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 162, 164, 166, 168, 170, 171, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 278, 279, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 341, 348, 349, 360, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 61, 69, 104, 105, 123, 130, 192, 373, 374, 375, 376, 385, 386, 387, 388, 392], "synchron": [1, 14, 19, 21, 41, 43, 46, 120, 362, 363, 374, 375, 385], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 120, 123, 124, 130, 131, 151, 154, 181, 186, 192, 194, 197, 201, 214, 221, 222, 225, 238, 246, 247, 248, 267, 271, 297, 331, 346, 373, 374, 376, 385, 386, 391, 392], "find": [1, 4, 6, 7, 18, 19, 20, 42, 44, 52, 87, 88, 223, 256, 257, 265, 266, 344, 348, 373, 374, 378, 379, 385, 386], "folder": [1, 2, 41, 43, 46, 132, 374], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 104, 106, 107, 108, 109, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 134, 139, 145, 146, 149, 150, 151, 152, 154, 157, 162, 163, 164, 168, 176, 178, 182, 183, 185, 186, 188, 190, 192, 194, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 232, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 271, 273, 274, 277, 278, 292, 297, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 345, 350, 353, 362, 363, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 391, 392], "variou": [1, 2, 3, 221, 225, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 306, 311, 333, 362, 363, 373, 374, 375, 377, 378, 379, 381, 385, 386, 389, 392], "machin": [1, 2, 7, 18, 19, 20, 37, 66, 111, 385, 386, 391], "wonder": 1, "why": [1, 2, 3, 203, 385, 387, 392], "instead": [1, 4, 7, 8, 12, 29, 37, 67, 103, 107, 123, 124, 130, 131, 158, 182, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 281, 283, 285, 288, 289, 290, 295, 296, 299, 300, 301, 302, 311, 313, 317, 321, 364, 368, 377, 378, 382, 387, 389, 392], "lower": [1, 2, 3, 21, 26, 149, 192, 242, 243, 274, 375, 385, 387], "io": [1, 11, 61, 67, 112, 113, 120, 223, 224], "footprint": [1, 2, 389], "commun": [1, 2, 3, 123, 130, 367, 375, 392], "yet": [1, 99, 100, 112, 388], "plai": [1, 3, 125, 126, 131, 146, 374, 375, 379, 389, 392], "role": [1, 3, 118, 374, 379, 392], "opposit": [1, 385], "direct": [1, 2, 37, 103, 107, 123, 124, 130, 131, 194, 219, 223, 297, 374, 379], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 69, 79, 80, 88, 93, 103, 107, 123, 124, 125, 126, 127, 130, 131, 194, 196, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 274, 277, 331, 333, 373, 374, 375, 376, 377, 378, 379, 385, 387, 388, 389, 391, 392], "faster": [1, 2, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 68, 69, 120, 313, 314, 315, 316, 376, 385, 386], "share": [1, 3, 6, 8, 23, 41, 43, 46, 72, 74, 75, 76, 80, 87, 89, 91, 95, 104, 123, 130, 192, 221, 225, 231, 232, 253, 254, 255, 281, 283, 284, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 364, 366, 368, 375, 376, 382, 384, 385, 386, 391, 392], "among": [1, 3, 125, 126, 385, 386], "prohibit": [1, 3, 93], "slow": [1, 3, 4, 11, 41, 43, 46], "compar": [1, 3, 67, 93, 346, 369, 373, 375, 378, 379, 385, 386, 389, 392], "gpu": [1, 7, 8, 37, 74, 75, 95, 103, 107, 111, 123, 124, 130, 131, 194, 373, 375, 376, 385, 386, 392], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 50, 61, 79, 80, 87, 93, 99, 100, 107, 131, 142, 164, 192, 205, 214, 217, 219, 221, 223, 225, 228, 239, 246, 247, 256, 257, 267, 271, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 368, 369, 373, 374, 375, 378, 385, 386, 387, 389, 391, 392], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 142, 143, 147, 149, 150, 168, 176, 177, 182, 184, 185, 186, 188, 190, 194, 221, 225, 229, 230, 231, 252, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 274, 281, 282, 283, 284, 285, 286, 287, 288, 289, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 307, 311, 313, 314, 315, 316, 317, 321, 331, 340, 361, 373, 374, 375, 378, 381, 385, 386, 389, 392], "build": [1, 3, 7, 23, 27, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 108, 109, 112, 113, 117, 118, 120, 123, 124, 127, 130, 131, 132, 133, 173, 192, 194, 205, 221, 225, 228, 263, 267, 271, 350, 357, 358, 359, 368, 370, 375, 376, 378, 379, 380, 381, 385, 386, 387, 388, 391, 392], "mani": [1, 2, 3, 4, 45, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 127, 281, 283, 289, 296, 299, 300, 304, 305, 368, 373, 374, 375, 377, 378, 380, 382, 385, 386, 387, 389, 392], "eg": [1, 2, 3, 12, 41, 43, 46, 74, 75, 76, 89, 91, 95, 101, 102, 103, 106, 107, 108, 109, 111, 123, 124, 127, 130, 131, 153, 180, 186, 231, 258, 333], "gymnasium": [1, 3, 5, 12, 103, 106, 107, 108, 114, 115, 123, 124, 130, 131, 135, 138, 156, 177, 180, 191, 374, 375, 387, 391], "warn": [1, 3, 256, 257, 261, 262, 265, 266, 374], "quickli": [1, 3, 374, 385, 386, 392], "becom": [1, 3, 4, 21, 219, 223, 385, 386, 392], "quit": [1, 3, 11, 61, 103, 107, 123, 124, 130, 131, 368, 373, 374, 375, 378, 385, 386, 392], "annoi": [1, 3], "By": [1, 2, 3, 27, 33, 40, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 250, 271, 297, 346, 364, 373, 385, 388, 389, 392], "filter": [1, 2, 3, 4, 54, 80, 87, 88, 281, 282, 284, 288, 289, 295, 299, 300, 302, 377], "out": [1, 2, 3, 4, 5, 9, 21, 37, 41, 43, 46, 54, 63, 67, 72, 80, 87, 88, 103, 107, 123, 124, 125, 126, 130, 131, 182, 194, 196, 219, 220, 223, 229, 230, 233, 234, 252, 258, 259, 260, 266, 267, 268, 269, 270, 271, 309, 310, 370, 373, 374, 375, 376, 377, 378, 380, 385, 386, 387, 389, 391, 392], "still": [1, 2, 3, 9, 67, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 257, 296, 297, 373, 374, 376, 384, 387, 389, 392], "wish": [1, 3, 11, 14, 15, 17, 67, 138, 379, 389], "displai": [1, 3, 7, 103, 107, 123, 124, 130, 131, 350, 370, 373, 374, 386, 387], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 82, 85, 86, 87, 88, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 147, 150, 151, 154, 155, 156, 158, 161, 162, 163, 164, 166, 168, 169, 170, 171, 173, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 190, 192, 194, 196, 203, 204, 205, 206, 207, 209, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 240, 241, 247, 248, 249, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 311, 313, 314, 315, 316, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 340, 343, 344, 346, 347, 348, 350, 364, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "central": [2, 231, 232, 373, 374, 377, 385, 386, 389], "part": [2, 3, 4, 8, 37, 47, 61, 64, 65, 67, 68, 69, 99, 103, 107, 112, 123, 124, 130, 131, 145, 164, 173, 176, 194, 203, 221, 225, 275, 341, 364, 373, 375, 376, 382, 385, 387, 392], "algorithm": [2, 3, 8, 9, 119, 139, 281, 299, 300, 302, 366, 369, 370, 373, 374, 375, 376, 379, 380, 381, 385, 386, 388, 389], "implement": [2, 3, 9, 12, 14, 15, 16, 37, 77, 89, 90, 103, 107, 119, 120, 123, 124, 130, 131, 143, 150, 151, 152, 156, 159, 162, 170, 171, 177, 180, 185, 186, 192, 194, 206, 219, 220, 221, 222, 223, 224, 225, 246, 247, 248, 281, 282, 286, 287, 288, 295, 297, 298, 299, 301, 302, 304, 331, 341, 355, 368, 370, 373, 374, 375, 376, 378, 379, 380, 385, 386, 387, 391], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 37, 42, 45, 47, 50, 51, 61, 63, 67, 69, 86, 88, 93, 99, 100, 103, 104, 107, 111, 112, 113, 123, 124, 130, 131, 146, 162, 168, 171, 188, 191, 192, 194, 196, 205, 225, 231, 232, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 333, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "give": [2, 3, 7, 50, 64, 103, 107, 119, 123, 124, 130, 131, 146, 367, 369, 373, 374, 385, 386, 387, 388, 391], "abil": [2, 297, 387, 389], "panel": [2, 375], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 63, 69, 72, 93, 143, 146, 155, 221, 225, 288, 295, 302, 306, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "includ": [2, 3, 4, 7, 9, 21, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 89, 91, 95, 103, 107, 119, 123, 124, 130, 131, 181, 186, 192, 194, 221, 225, 297, 302, 353, 368, 370, 373, 374, 375, 376, 385, 386, 387, 389, 392], "almost": [2, 376], "physic": [2, 6, 7, 72, 123, 124, 127, 370, 373, 385, 386, 387], "theori": 2, "crude": 2, "made": [2, 3, 23, 37, 45, 61, 74, 75, 76, 89, 91, 95, 103, 106, 107, 108, 123, 124, 130, 131, 194, 265, 266, 285, 311, 373, 374, 376, 385, 386, 388, 389], "liststorag": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 389], "veri": [2, 3, 112, 113, 374, 377, 380, 385, 387, 389, 391, 392], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 37, 40, 41, 43, 46, 61, 67, 80, 82, 85, 87, 88, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 142, 143, 171, 194, 203, 226, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 306, 308, 311, 368, 370, 373, 375, 376, 377, 378, 379, 385, 386, 387, 389, 392], "complex": [2, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 373, 374, 377, 378], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 87, 88, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 151, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 170, 171, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 281, 282, 284, 285, 287, 288, 289, 292, 293, 295, 297, 299, 300, 301, 302, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392], "contigu": [2, 3, 8, 64, 67, 68, 103, 107, 123, 124, 130, 131, 200, 375, 385, 386, 387, 389, 391, 392], "tensorstorag": [2, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 93, 96, 380, 389], "lazymemmapstorag": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 145, 146, 373, 374, 376, 380, 385, 388, 389], "citizen": 2, "pytre": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 96], "tupl": [2, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 80, 82, 87, 91, 93, 101, 102, 103, 106, 107, 108, 123, 124, 130, 131, 162, 164, 194, 209, 215, 216, 221, 224, 225, 226, 235, 239, 240, 241, 259, 260, 268, 269, 274, 281, 282, 284, 288, 289, 291, 295, 297, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316, 344, 346, 348, 357, 389], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 37, 41, 43, 46, 54, 80, 85, 87, 88, 103, 106, 107, 108, 117, 118, 123, 124, 130, 131, 132, 133, 182, 186, 194, 267, 271, 302, 304, 346, 362, 363, 364, 370, 374, 375, 377, 379, 385, 387, 392], "nest": [2, 3, 23, 27, 30, 32, 33, 37, 38, 41, 43, 45, 46, 48, 49, 57, 74, 75, 78, 82, 95, 103, 106, 107, 108, 123, 124, 130, 131, 146, 180, 183, 194, 204, 264, 313, 314, 315, 316, 317, 331, 370, 374, 375, 386, 387, 389, 391], "construct": [2, 3, 5, 23, 37, 42, 45, 50, 51, 61, 82, 103, 106, 107, 123, 124, 125, 130, 131, 151, 154, 194, 196, 221, 225, 243, 271, 350, 368, 374, 375, 376, 378, 385, 387, 389, 392], "ram": [2, 106, 108, 381, 389], "prealloc": [2, 3, 123, 130, 387], "ve": [2, 47, 373, 376, 382], "been": [2, 3, 5, 7, 8, 18, 20, 21, 47, 82, 86, 103, 107, 111, 117, 118, 123, 124, 130, 131, 162, 180, 181, 185, 219, 223, 257, 262, 264, 266, 373, 374, 375, 376, 384, 385, 386, 387, 389, 392], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 68, 69, 93, 101, 102, 103, 107, 111, 123, 124, 125, 126, 130, 131, 146, 340, 368, 369, 370, 373, 374, 375, 376, 377, 378, 380, 382, 385, 386, 387, 389, 391, 392], "start": [2, 3, 4, 5, 14, 21, 24, 54, 61, 69, 80, 87, 88, 104, 107, 116, 123, 130, 203, 345, 372, 373, 374, 383, 386, 387, 389, 390, 392], "replay_buff": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 347, 360, 373, 374, 375, 380, 385, 386, 389], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 30, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 142, 143, 145, 146, 149, 155, 156, 161, 162, 164, 166, 168, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 185, 190, 192, 194, 195, 200, 203, 204, 205, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 235, 240, 241, 249, 252, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 278, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 331, 333, 343, 346, 360, 368, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "rb": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 146, 173, 194, 374, 376, 380, 382, 386, 388, 389, 391], "10": [2, 3, 7, 22, 23, 25, 27, 29, 37, 42, 45, 47, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 119, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 143, 145, 146, 181, 183, 184, 194, 205, 208, 209, 211, 213, 215, 219, 220, 223, 224, 228, 239, 250, 261, 262, 265, 266, 267, 274, 278, 282, 285, 287, 299, 300, 301, 305, 311, 313, 314, 315, 316, 319, 333, 341, 370, 373, 374, 375, 376, 377, 378, 382, 385, 386, 387, 388, 389, 391, 392], "add": [2, 3, 4, 6, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 82, 83, 93, 94, 97, 98, 103, 107, 123, 124, 130, 131, 146, 162, 186, 194, 221, 225, 233, 263, 281, 345, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 391], "string": [2, 18, 19, 20, 37, 44, 54, 70, 103, 107, 117, 123, 124, 130, 131, 138, 168, 180, 190, 194, 221, 225, 259, 264, 267, 268, 280, 332, 349, 369, 373, 375, 376, 389], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 82, 87, 88, 93, 95, 122, 123, 130, 139, 146, 169, 178, 181, 182, 206, 207, 219, 220, 223, 252, 256, 257, 259, 264, 270, 271, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 298, 299, 300, 301, 302, 304, 305, 341, 373, 375, 378, 380, 389, 392], "30": [2, 3, 45, 65, 142, 163, 242, 243, 331, 335, 373, 374, 375, 380, 386, 387, 389], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 89, 91, 93, 95, 103, 104, 106, 107, 116, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 158, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 360, 362, 363, 364, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 389, 391, 392], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 141, 142, 143, 145, 146, 147, 148, 150, 153, 158, 159, 163, 164, 166, 168, 169, 172, 179, 180, 183, 186, 187, 188, 190, 194, 196, 200, 205, 206, 207, 208, 209, 211, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 281, 282, 283, 289, 291, 292, 296, 297, 298, 299, 300, 304, 305, 313, 315, 316, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 335, 341, 342, 343, 346, 347, 350, 352, 358, 362, 363, 364, 387, 389], "entri": [2, 3, 14, 15, 17, 23, 27, 30, 33, 37, 41, 43, 44, 46, 48, 54, 58, 63, 64, 65, 66, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 127, 130, 131, 132, 133, 142, 146, 148, 149, 151, 154, 155, 158, 161, 164, 166, 168, 171, 173, 176, 178, 180, 181, 182, 190, 192, 194, 203, 204, 221, 229, 230, 258, 259, 264, 268, 269, 282, 302, 313, 314, 315, 316, 368, 373, 375, 376, 377, 378, 379, 381, 385, 386, 387, 388, 389, 392], "onto": [2, 8, 40, 41, 43, 46, 200, 252, 256, 257, 259, 260, 265, 266, 267, 268, 269, 270, 271, 376, 387], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 79, 80, 82, 83, 85, 86, 87, 88, 93, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 132, 133, 139, 146, 147, 180, 181, 182, 183, 186, 194, 204, 206, 207, 226, 229, 230, 232, 264, 265, 266, 268, 269, 277, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 354, 364, 367, 370, 375, 376, 380, 381, 382, 387, 389, 392], "without": [2, 3, 7, 9, 14, 15, 16, 37, 41, 43, 46, 47, 61, 63, 67, 87, 88, 103, 107, 123, 124, 130, 131, 132, 133, 140, 142, 151, 154, 184, 194, 219, 220, 223, 224, 254, 255, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 312, 313, 314, 315, 316, 317, 360, 367, 368, 373, 374, 375, 377, 378, 379, 380, 385, 386, 387, 389, 392], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 42, 43, 46, 47, 50, 79, 80, 103, 107, 119, 123, 124, 125, 126, 130, 131, 140, 142, 143, 151, 153, 154, 170, 180, 181, 186, 189, 192, 194, 204, 205, 219, 221, 225, 228, 256, 257, 261, 262, 265, 266, 267, 268, 269, 270, 271, 281, 282, 283, 284, 285, 287, 289, 290, 291, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 311, 313, 314, 315, 316, 317, 346, 350, 352, 355, 356, 359, 360, 370, 374, 375, 376, 379, 382, 385, 386, 387, 389, 391, 392], "length": [2, 20, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 44, 47, 52, 53, 54, 55, 56, 61, 67, 70, 80, 87, 88, 91, 103, 107, 112, 113, 123, 124, 130, 131, 139, 169, 192, 205, 206, 207, 209, 211, 213, 219, 223, 226, 228, 231, 232, 252, 270, 275, 341, 347, 373, 375, 376, 380, 382, 387, 389, 392], "cursor": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "place": [2, 3, 24, 27, 28, 33, 37, 41, 43, 46, 74, 75, 82, 85, 95, 103, 104, 107, 123, 124, 130, 131, 132, 133, 142, 150, 155, 168, 182, 185, 186, 188, 190, 191, 192, 194, 204, 258, 264, 270, 347, 352, 353, 374, 375, 378, 381, 385, 386, 387, 389], "afterward": [2, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 385, 392], "tell": [2, 3, 4, 7, 125, 126, 373, 376, 380, 385, 386], "our": [2, 3, 7, 8, 11, 18, 45, 146, 333, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 391], "far": [2, 47, 222, 247, 248, 382, 387, 392], "restrict": [2, 3, 374, 388, 389, 392], "empti": [2, 3, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 103, 107, 122, 123, 124, 130, 131, 151, 154, 168, 170, 183, 186, 188, 190, 194, 200, 337, 373, 387], "64": [2, 3, 41, 43, 46, 61, 67, 82, 146, 172, 209, 210, 218, 221, 225, 232, 240, 311, 373, 374, 375, 376, 378, 382, 384, 387, 388, 389, 391, 392], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 87, 88, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 143, 144, 150, 151, 152, 153, 154, 155, 156, 162, 164, 166, 168, 170, 171, 173, 177, 180, 182, 184, 185, 186, 188, 190, 194, 196, 200, 203, 204, 205, 215, 216, 219, 220, 221, 223, 224, 225, 228, 233, 234, 240, 241, 249, 252, 253, 254, 255, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 273, 275, 278, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 319, 368, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "unit8": 2, "img": 2, "randint": [2, 54, 82, 184, 389], "255": [2, 82, 184, 387, 389], "uint8": [2, 3, 41, 43, 46, 56, 61, 67, 101, 102, 117, 118, 155, 166, 184, 374, 381, 388, 389, 391, 392], "next": [2, 3, 4, 8, 14, 15, 16, 23, 27, 30, 32, 33, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 117, 118, 119, 123, 124, 128, 129, 130, 131, 132, 133, 139, 142, 143, 145, 146, 151, 154, 155, 156, 161, 162, 166, 170, 171, 173, 176, 177, 180, 182, 191, 192, 194, 200, 203, 205, 220, 221, 224, 225, 228, 243, 264, 276, 278, 281, 282, 284, 285, 287, 288, 289, 290, 295, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 333, 344, 346, 348, 374, 376, 378, 381, 382, 384, 387, 388, 391, 392], "ask": [2, 8, 61, 67, 80, 87, 88, 333, 375, 376, 377, 378, 385, 386, 388, 392], "do": [2, 3, 4, 7, 69, 103, 107, 123, 124, 130, 131, 132, 133, 139, 169, 191, 192, 203, 232, 233, 254, 313, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 392], "automat": [2, 3, 5, 69, 74, 75, 82, 95, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 142, 151, 154, 164, 182, 191, 206, 221, 225, 252, 264, 267, 331, 368, 373, 375, 377, 378, 385, 386, 387, 389, 391], "hand": [2, 3, 7, 21, 27, 385, 386, 387], "look": [2, 3, 5, 7, 8, 37, 80, 103, 107, 116, 123, 124, 125, 126, 130, 131, 168, 169, 188, 194, 267, 271, 272, 273, 369, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 391, 392], "assum": [2, 3, 6, 27, 40, 47, 50, 51, 63, 65, 67, 68, 69, 71, 72, 78, 87, 103, 107, 123, 124, 130, 131, 145, 148, 158, 168, 169, 176, 182, 186, 188, 190, 200, 221, 225, 250, 274, 285, 290, 302, 311, 322, 323, 324, 325, 327, 328, 329, 330, 333, 373, 375, 376, 384, 387], "lead": [2, 3, 4, 8, 10, 12, 23, 27, 33, 37, 42, 45, 50, 51, 63, 86, 101, 102, 103, 106, 108, 109, 182, 222, 240, 247, 248, 373, 376, 385, 386, 387, 389, 391], "leav": [2, 25, 27, 29, 33, 35, 36, 40, 41, 43, 45, 46, 103, 196, 204, 373, 380, 389], "tree": [2, 41, 43, 46, 103, 107, 123, 124, 130, 131, 385, 389], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 91, 101, 102, 103, 104, 106, 107, 108, 109, 123, 124, 130, 131, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 161, 162, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 206, 207, 214, 221, 225, 226, 231, 232, 246, 252, 258, 259, 267, 268, 270, 271, 274, 275, 282, 289, 296, 298, 300, 302, 347, 352, 368, 373, 375, 384, 386, 387, 389, 392], "don": [2, 3, 4, 6, 7, 11, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 146, 374, 375, 380, 389, 391, 392], "throw": [2, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 194, 392], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 27, 30, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 145, 146, 150, 151, 154, 155, 156, 166, 170, 171, 173, 177, 180, 182, 185, 186, 194, 195, 203, 204, 205, 213, 215, 216, 221, 225, 228, 240, 241, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 333, 341, 347, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "max": [2, 23, 40, 43, 50, 54, 70, 79, 80, 93, 153, 183, 247, 248, 265, 266, 282, 283, 289, 298, 300, 302, 373, 375, 376, 382], "label": [2, 43, 44, 47, 54, 373, 385, 389], "100": [2, 14, 15, 16, 17, 37, 42, 45, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 149, 155, 164, 173, 178, 180, 194, 231, 260, 264, 333, 342, 360, 374, 375, 376, 377, 379, 382, 384, 385, 386, 387, 388, 389, 391, 392], "rb_pytre": 2, "randn": [2, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 95, 145, 164, 200, 208, 209, 213, 215, 216, 219, 220, 223, 224, 229, 230, 231, 235, 238, 239, 241, 252, 253, 254, 255, 258, 259, 267, 268, 270, 273, 274, 275, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316, 349, 368, 389, 391, 392], "c": [2, 3, 6, 7, 27, 41, 43, 45, 46, 50, 51, 66, 164, 184, 223, 224, 374, 389], "zero": [2, 3, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 82, 87, 88, 93, 95, 103, 107, 123, 124, 130, 131, 143, 145, 147, 151, 153, 154, 164, 170, 173, 194, 200, 203, 205, 210, 211, 212, 218, 219, 220, 221, 223, 224, 225, 229, 230, 232, 240, 249, 261, 262, 265, 266, 269, 277, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 319, 376, 389, 391], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 107, 110, 123, 130, 138, 139, 143, 146, 149, 151, 154, 162, 171, 178, 192, 196, 200, 232, 235, 250, 313, 314, 315, 316, 341, 349, 380, 384, 389, 392], "len": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 95, 166, 206, 207, 226, 232, 373, 380, 382, 385, 387, 388, 389, 391], "ambigu": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 91, 103, 107, 123, 124, 130, 131, 143, 150, 168, 182, 185, 186, 188, 190, 194, 270, 369, 373, 377, 387], "deal": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 373, 375, 386, 389], "interpret": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 374], "put": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 117, 118, 131, 132, 133, 192, 340, 364, 368, 374, 375, 376, 377, 385, 387], "solv": [2, 4, 9, 10, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 367, 373, 374, 375, 380, 382, 385, 386, 387, 389], "clear": [2, 3, 11, 27, 33, 34, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 111, 123, 124, 130, 131, 194, 342, 377, 380], "cut": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "distinct": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 143, 379, 384], "view": [2, 3, 8, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 194, 216, 219, 223, 226, 377, 387, 389, 391, 392], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 27, 33, 67, 99, 100, 103, 106, 107, 108, 111, 112, 113, 116, 123, 124, 125, 126, 130, 131, 142, 151, 154, 169, 226, 240, 264, 267, 271, 272, 273, 277, 297, 313, 314, 315, 316, 368, 373, 374, 375, 377, 379, 384, 385, 386, 387, 388, 389, 392], "collate_fn": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 389, 391], "__init__": [2, 3, 7, 103, 119, 138, 140, 143, 151, 154, 170, 205, 216, 219, 223, 228, 275, 282, 284, 289, 295, 300, 302, 304, 305, 370, 387, 392], "major": 2, "worri": [2, 52], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 74, 75, 76, 80, 87, 89, 91, 95, 103, 104, 107, 111, 123, 124, 130, 131, 142, 204, 373, 375, 377, 385, 386, 387, 392], "though": [2, 4, 11, 103, 107, 123, 124, 130, 131, 226, 375, 385, 386], "too": [2, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 47, 53, 55, 56, 103, 107, 123, 124, 130, 131, 163, 182, 222, 247, 248, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 374, 378, 381, 387, 389, 392], "latter": [2, 18, 19, 20, 37, 63, 103, 107, 123, 124, 130, 131, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 299, 362, 363], "inv": [2, 3, 149, 153, 156, 166, 173, 178, 387], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 87, 88, 89, 90, 91, 93, 95, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 142, 143, 146, 150, 151, 152, 155, 156, 158, 162, 164, 168, 170, 171, 172, 173, 177, 180, 182, 185, 186, 188, 190, 194, 195, 205, 221, 225, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 267, 268, 269, 270, 271, 272, 278, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 317, 331, 332, 361, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 385, 387, 389, 392], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 52, 53, 55, 56, 72, 103, 107, 123, 124, 130, 131, 153, 156, 177, 184, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 313, 389], "multithread": [2, 3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 120, 121, 380, 389], "thread": [2, 14, 15, 17, 41, 43, 46, 99, 100, 112, 113, 123, 130], "prefetch": [2, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 373, 374, 376, 389], "advis": [2, 11, 64, 381, 392], "benchmark": [2, 3, 9, 100, 112, 113], "techniqu": [2, 8, 123, 130, 374, 380, 389], "real": [2, 5, 67, 271, 369, 376, 387], "life": [2, 155], "adopt": [2, 3, 5, 373, 392], "throughput": [2, 9, 113, 373], "constant": [2, 11, 28, 146, 164, 181, 370, 373, 375, 376, 392], "throughout": [2, 3, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 375, 385, 392], "further": [2, 3, 5, 24, 373, 375, 377], "refin": [2, 67, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311], "coupl": [2, 376, 378, 379, 387, 389], "get": [2, 3, 4, 6, 7, 8, 9, 27, 33, 41, 42, 43, 45, 46, 61, 63, 67, 74, 75, 80, 87, 88, 89, 91, 93, 95, 103, 104, 107, 123, 124, 130, 131, 140, 145, 147, 151, 153, 154, 162, 164, 169, 181, 182, 184, 186, 192, 252, 261, 262, 267, 268, 271, 278, 313, 314, 315, 316, 317, 333, 337, 368, 372, 373, 374, 375, 376, 383, 385, 386, 387, 389, 390, 391, 392], "first_elt": 2, "128": [2, 61, 63, 67, 88, 99, 100, 112, 113, 210, 213, 374, 376, 382, 385, 387, 388, 389], "wa": [2, 3, 5, 7, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 103, 107, 123, 124, 130, 131, 186, 196, 204, 223, 281, 283, 294, 296, 299, 301, 303, 319, 369, 374, 375, 377, 378, 384, 385, 389, 391], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 29, 30, 33, 37, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 138, 139, 142, 143, 146, 147, 151, 152, 153, 154, 161, 164, 170, 171, 173, 176, 180, 182, 183, 184, 192, 194, 200, 203, 204, 206, 207, 209, 210, 211, 212, 213, 216, 218, 221, 226, 229, 230, 231, 232, 235, 238, 241, 252, 253, 254, 255, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 273, 275, 278, 297, 331, 360, 368, 370, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 147], "larger": [2, 4, 221, 225, 288, 295, 391], "volum": 2, "due": [2, 3, 5, 23, 379, 388, 389, 392], "serialis": [2, 41, 43, 46], "memorymappedtensor": [2, 30, 41, 43, 48, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 335, 380, 388], "well": [2, 3, 8, 11, 21, 23, 37, 42, 44, 45, 50, 51, 80, 85, 89, 96, 103, 107, 123, 124, 130, 131, 186, 194, 209, 223, 242, 243, 297, 304, 317, 373, 374, 376, 377, 378, 379, 381, 388, 389, 391, 392], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 151, 152, 154, 176, 179, 181, 187, 194, 205, 223, 270, 271, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 340, 368, 373, 375, 376, 380, 385], "file": [2, 6, 7, 8, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 72, 132, 332, 333, 335, 370, 372, 374, 385, 389, 390, 392], "locat": [2, 7, 41, 43, 46, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 155, 164, 175, 222, 235, 247, 248, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 373, 374, 375, 381, 385, 386, 389], "improv": [2, 4, 11, 159, 281, 369, 385, 386, 389], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 123, 130, 375, 385, 389], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 111, 123, 124, 130, 131, 140, 146, 173, 176, 183, 192, 194, 204, 261, 262, 267, 271, 296, 297, 299, 373, 374, 376, 377, 379, 381, 387, 389, 392], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 53, 55, 56, 80, 153, 223, 224, 288, 376, 380, 389], "sharabl": [2, 123, 130], "collabor": [2, 67], "rather": [2, 4, 91, 171, 373, 374, 375, 377, 379, 385, 386, 389], "incur": [2, 99, 100, 112, 113], "transmiss": 2, "overhead": [2, 99, 100, 112, 113, 123, 130], "subclass": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 82, 103, 107, 123, 124, 130, 131, 141, 142, 185, 191, 196, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 271, 272, 274, 277, 297, 299, 374, 376, 380, 387, 389], "instanti": [2, 3, 14, 15, 21, 41, 42, 43, 45, 46, 50, 51, 79, 80, 111, 142, 185, 232, 331, 373, 374, 378, 379, 381, 385, 386, 387, 389, 392], "content": [2, 8, 16, 27, 33, 41, 42, 43, 45, 46, 50, 51, 86, 103, 106, 107, 108, 120, 123, 124, 130, 131, 170, 206, 207, 226, 231, 232, 267, 297, 375, 387, 391], "map": [2, 3, 8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 78, 79, 80, 103, 107, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 164, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 194, 200, 216, 235, 252, 253, 254, 255, 259, 267, 268, 270, 271, 273, 274, 275, 276, 302, 311, 346, 366, 368, 369, 373, 374, 375, 376, 378, 379, 388, 391], "writer": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 80, 82, 83, 87, 93, 94, 98, 375, 389], "tensordictroundrobinwrit": [2, 82], "goe": [2, 4, 125, 126, 373, 375, 385, 386, 392], "prioritizedsampl": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 285, 290, 311, 373, 389], "access": [2, 3, 7, 8, 11, 37, 42, 64, 66, 103, 107, 123, 124, 130, 131, 168, 188, 194, 364, 367, 373, 377, 385, 386, 387, 389], "show": [2, 11, 37, 103, 107, 123, 124, 130, 131, 194, 232, 333, 368, 373, 375, 376, 385, 386, 387, 389, 391], "tensordictreplaybuff": [2, 42, 45, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 145, 146, 347, 360, 366, 373, 374, 376, 389], "mp": [2, 18, 19, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 104, 192], "def": [2, 3, 12, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 124, 130, 131, 138, 140, 142, 143, 151, 154, 170, 186, 194, 205, 216, 219, 220, 223, 224, 228, 264, 267, 275, 282, 284, 289, 295, 297, 300, 302, 304, 305, 331, 370, 373, 374, 384, 385, 386, 387, 389, 391, 392], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 114, 115, 123, 124, 130, 131, 140, 143, 145, 147, 151, 152, 153, 154, 161, 162, 164, 173, 176, 182, 184, 186, 192, 195, 203, 205, 215, 216, 221, 225, 227, 228, 240, 241, 249, 252, 253, 254, 255, 258, 259, 261, 262, 265, 266, 267, 268, 270, 273, 275, 311, 314, 315, 316, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 341, 349, 368, 369, 373, 376, 386, 387, 391, 392], "__name__": [2, 3, 14, 15, 22, 104, 331, 374, 391], "__main__": [2, 3, 14, 15, 22, 104, 331, 391], "21": [2, 67, 68, 88, 123, 125, 126, 130, 372, 374, 382, 384, 387, 390], "proc": 2, "target": [2, 4, 8, 21, 24, 37, 103, 104, 107, 123, 124, 130, 131, 181, 185, 194, 270, 271, 281, 282, 283, 284, 285, 287, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 317, 353, 359, 360, 369, 370, 376, 382, 385, 387], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 80, 82, 87, 88, 89, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 150, 168, 170, 179, 182, 185, 186, 187, 189, 190, 194, 205, 206, 207, 215, 221, 225, 226, 227, 228, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 340, 343, 347, 350, 364, 374, 392], "join": [2, 104, 366, 374, 375, 385], "now": [2, 3, 7, 42, 123, 146, 232, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 388, 389, 392], "20": [2, 54, 68, 87, 88, 93, 103, 107, 111, 123, 124, 130, 131, 181, 194, 218, 219, 220, 223, 224, 258, 341, 372, 374, 375, 376, 380, 386, 387, 389, 390, 391, 392], "_data": [2, 387], "It": [2, 3, 4, 7, 23, 37, 44, 47, 50, 52, 54, 63, 69, 82, 85, 93, 98, 103, 107, 109, 119, 120, 123, 124, 125, 126, 130, 131, 132, 133, 143, 145, 155, 162, 164, 169, 181, 186, 191, 194, 196, 209, 211, 217, 231, 232, 240, 242, 243, 249, 250, 256, 260, 261, 264, 265, 266, 269, 271, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 305, 311, 312, 313, 331, 340, 346, 367, 368, 369, 373, 374, 376, 377, 385, 386, 387, 388, 389, 391, 392], "difficult": [2, 4, 123, 381], "pai": [2, 8, 373, 376], "word": [2, 3, 11, 47, 61, 63, 65, 67, 68, 69, 297, 373, 380, 387, 392], "1m": [2, 61, 67, 353, 373, 375, 376, 388], "doe": [2, 3, 18, 41, 42, 43, 46, 50, 54, 61, 63, 67, 71, 72, 78, 79, 80, 87, 89, 91, 98, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 192, 213, 219, 220, 221, 223, 224, 225, 233, 250, 258, 272, 273, 281, 283, 290, 296, 299, 312, 350, 368, 370, 373, 374, 375, 376, 377, 380, 385, 387, 389, 392], "howev": [2, 3, 5, 7, 37, 103, 107, 123, 124, 130, 131, 146, 176, 181, 186, 194, 281, 283, 296, 299, 301, 302, 368, 373, 374, 376, 379, 387, 389, 392], "capac": [2, 42, 45, 50, 51, 74, 75, 79, 87, 95, 375, 380], "There": [2, 10, 82, 221, 225, 368, 370, 375, 376, 378, 380, 385, 386, 387, 389, 392], "circumv": 2, "account": [2, 74, 75, 95, 106, 108, 131, 142, 146, 229, 230, 368, 374, 376, 389, 392], "save": [2, 3, 8, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 82, 89, 90, 91, 95, 96, 103, 107, 123, 124, 130, 131, 191, 194, 332, 333, 335, 340, 350, 370, 380, 381, 382, 385, 386], "convent": [2, 3, 61, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 132, 133, 369, 373, 376, 385, 386, 387], "overridden": [2, 3, 61, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 313, 315, 316, 376, 385], "dim_extend": [2, 42, 45, 50, 51], "obtain": [2, 7, 47, 61, 103, 107, 123, 124, 130, 131, 145, 168, 181, 190, 205, 240, 347, 373, 375, 377, 378, 379, 385, 386], "counterpart": 2, "desir": [2, 3, 11, 37, 103, 107, 123, 124, 130, 131, 141, 143, 150, 164, 166, 168, 169, 182, 185, 186, 188, 190, 194, 201, 202, 206, 207, 226, 232, 252, 259, 260, 267, 268, 269, 270, 271, 368, 373, 385, 386, 387, 389], "diversifi": 2, "offer": [2, 3, 7, 99, 100, 103, 107, 112, 113, 117, 118, 123, 124, 130, 131, 331, 368, 373, 374, 377, 379, 380, 385, 387, 389, 392], "accomplish": [2, 196, 377], "anoth": [2, 3, 8, 67, 80, 87, 103, 106, 107, 108, 111, 123, 124, 130, 131, 143, 151, 152, 154, 182, 185, 226, 267, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 368, 369, 373, 375, 376, 378, 379, 384, 385, 386, 387, 392], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 64, 146, 196, 282, 287, 288, 295, 304, 340, 370, 377, 388, 389, 391], "docstr": [2, 37, 103, 107, 123, 124, 130, 131, 194, 377, 378], "extens": [2, 42, 45, 50, 51, 88, 370, 389], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 125, 126, 130, 131, 184, 186, 194, 216, 219, 223, 260, 281, 290, 299, 367, 370, 374, 380, 384, 389], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 103, 107, 123, 124, 130, 131, 151, 154, 192, 194, 204, 219, 221, 223, 225, 265, 266, 267, 271, 290, 374, 378, 384, 385, 386, 392], "happi": 2, "concaten": [2, 8, 14, 15, 21, 35, 36, 67, 146, 147, 164, 185, 223, 226, 273, 373, 374, 378, 385, 386, 387, 389, 392], "schedul": [2, 4, 7, 47, 346, 375, 387], "transformedenv": [2, 3, 11, 37, 103, 104, 107, 123, 124, 130, 131, 139, 140, 143, 146, 149, 150, 151, 154, 155, 156, 158, 161, 162, 163, 164, 166, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 185, 192, 194, 221, 225, 264, 333, 373, 374, 375, 376, 377, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "stepcount": [2, 37, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 185, 194, 373, 374, 375, 376, 377, 382, 385, 386, 391], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 93, 103, 104, 107, 109, 123, 124, 130, 131, 139, 142, 143, 146, 149, 150, 155, 161, 162, 164, 166, 171, 172, 173, 176, 178, 181, 182, 183, 185, 186, 192, 194, 221, 225, 264, 331, 333, 360, 366, 368, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 388, 389, 391, 392], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 146, 173, 366, 380, 389], "cartpol": [2, 3, 11, 30, 37, 48, 101, 102, 103, 107, 123, 124, 130, 131, 142, 143, 146, 176, 181, 192, 194, 264, 331, 374, 376, 378, 380, 381, 382, 389, 392], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 63, 65, 93, 103, 104, 106, 107, 108, 112, 113, 120, 123, 124, 130, 131, 142, 143, 146, 149, 156, 161, 162, 164, 171, 173, 176, 178, 180, 181, 182, 183, 185, 192, 194, 221, 225, 264, 308, 322, 323, 324, 325, 327, 328, 329, 330, 331, 368, 374, 376, 377, 378, 379, 380, 381, 382, 387, 389, 391, 392], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 99, 100, 103, 107, 112, 113, 119, 123, 124, 125, 126, 130, 131, 139, 140, 143, 146, 151, 154, 162, 170, 173, 195, 205, 216, 228, 241, 243, 252, 259, 267, 268, 282, 285, 287, 300, 302, 304, 305, 360, 368, 373, 374, 375, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 391, 392], "8": [2, 3, 6, 7, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 87, 88, 99, 100, 101, 102, 103, 107, 123, 124, 130, 131, 139, 142, 181, 206, 207, 209, 210, 218, 226, 253, 254, 255, 267, 270, 273, 295, 372, 373, 374, 380, 385, 386, 387, 388, 389, 390, 391, 392], "traj_kei": [2, 80, 87, 88, 389], "truncated_kei": [2, 80, 87, 88, 173, 180], "strict_length": [2, 61, 67, 80, 87, 88, 333], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 37, 42, 45, 48, 51, 52, 74, 75, 79, 80, 87, 88, 95, 103, 107, 123, 124, 130, 131, 168, 173, 176, 186, 190, 194, 220, 224, 235, 241, 260, 264, 267, 269, 270, 271, 313, 314, 315, 316, 341, 353, 373, 374, 375, 376, 378, 379, 380, 381, 382, 385, 386, 387, 389, 391, 392], "enumer": [2, 14, 15, 16, 21, 30, 37, 45, 48, 51, 88, 103, 107, 123, 124, 130, 131, 194, 306, 369, 373, 374, 375, 376, 382, 385, 389, 391], "break": [2, 5, 14, 15, 16, 21, 37, 45, 51, 61, 64, 65, 67, 68, 69, 70, 80, 87, 88, 93, 103, 107, 123, 124, 130, 131, 143, 146, 173, 192, 194, 333, 374, 380, 382, 389, 391], "step_count": [2, 14, 15, 16, 37, 103, 107, 112, 113, 123, 124, 130, 131, 180, 194, 375, 376, 377, 382, 391], "32": [2, 22, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 128, 129, 132, 133, 206, 207, 208, 209, 210, 212, 213, 218, 226, 231, 232, 236, 237, 239, 240, 249, 311, 331, 373, 374, 376, 378, 379, 387, 388, 389, 391, 392], "33": [2, 27, 37, 82, 103, 107, 123, 124, 130, 131, 194, 206, 207, 226, 373, 374, 387], "34": [2, 206, 207, 226, 374, 375, 386, 387, 389], "35": [2, 206, 207, 226, 374, 387, 388], "36": [2, 374, 387], "37": [2, 145, 372, 373, 374, 387, 388, 390, 392], "38": [2, 7, 374, 387], "39": [2, 65, 112, 113, 374, 387, 388], "40": [2, 112, 113, 372, 373, 374, 375, 376, 386, 387, 390], "41": [2, 372, 374, 375, 386, 387, 390], "11": [2, 10, 23, 29, 40, 54, 74, 75, 79, 88, 95, 104, 139, 184, 194, 205, 228, 373, 374, 375, 376, 387, 389], "12": [2, 10, 68, 74, 75, 88, 95, 112, 113, 123, 128, 129, 130, 194, 373, 374, 375, 385, 387, 389], "13": [2, 5, 12, 87, 88, 127, 191, 194, 372, 373, 374, 375, 376, 381, 386, 387, 388, 389, 390], "14": [2, 6, 12, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88, 103, 107, 123, 124, 130, 131, 164, 194, 373, 374, 375, 385, 387, 388, 389], "15": [2, 23, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 103, 107, 123, 124, 130, 131, 194, 258, 265, 266, 291, 373, 374, 376, 387, 389], "16": [2, 3, 37, 68, 80, 88, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 146, 194, 373, 374, 375, 376, 385, 387, 389], "17": [2, 11, 68, 88, 107, 123, 139, 194, 372, 373, 374, 375, 387, 390], "could": [2, 3, 4, 6, 23, 374, 375, 381, 385, 386, 388, 392], "sai": [2, 37, 103, 107, 123, 124, 130, 131, 194, 231, 385, 388, 392], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 27, 29, 33, 36, 40, 76, 80, 87, 88, 103, 106, 107, 108, 111, 123, 124, 130, 131, 151, 154, 169, 176, 268, 374, 375, 376, 385, 386, 387], "handl": [2, 3, 21, 37, 103, 107, 123, 124, 130, 131, 191, 192, 194, 225, 226, 350, 362, 363, 373, 374, 375, 377, 379, 386, 389], "suggest": [2, 311, 373, 386], "serialenv": [2, 3, 103, 107, 123, 124, 131, 182, 194, 264, 366, 391, 392], "squeez": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 142, 143, 146, 179, 181, 206, 207, 244, 245, 373, 387, 389], "6": [2, 3, 7, 14, 15, 16, 17, 23, 37, 45, 61, 68, 69, 80, 88, 101, 102, 107, 123, 128, 129, 139, 142, 164, 166, 181, 206, 207, 209, 210, 211, 214, 218, 220, 226, 231, 232, 236, 246, 264, 267, 275, 372, 374, 376, 380, 386, 387, 388, 389, 390, 391], "5": [2, 3, 14, 15, 23, 25, 27, 33, 35, 36, 37, 42, 45, 50, 51, 61, 82, 87, 88, 93, 103, 104, 107, 112, 113, 117, 118, 120, 123, 124, 128, 129, 130, 131, 132, 133, 139, 142, 143, 145, 173, 180, 181, 194, 205, 206, 207, 209, 210, 215, 216, 217, 218, 219, 222, 223, 226, 228, 231, 232, 236, 241, 247, 248, 258, 259, 264, 268, 274, 296, 299, 301, 304, 305, 331, 368, 372, 373, 374, 376, 378, 380, 382, 385, 386, 387, 389, 390, 391, 392], "7": [2, 3, 6, 10, 29, 37, 40, 42, 45, 50, 80, 88, 103, 107, 117, 118, 123, 124, 130, 131, 139, 142, 181, 205, 206, 207, 210, 226, 228, 231, 319, 372, 373, 374, 380, 386, 387, 389, 390, 391], "9": [2, 3, 7, 23, 37, 42, 45, 50, 68, 69, 80, 88, 93, 101, 102, 116, 125, 126, 131, 139, 142, 181, 192, 194, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 306, 311, 369, 372, 373, 374, 375, 380, 385, 386, 387, 389, 390], "18": [2, 68, 88, 128, 129, 132, 133, 194, 232, 372, 373, 374, 375, 386, 387, 388, 390], "19": [2, 68, 87, 88, 93, 194, 373, 374, 375, 376, 387], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 64, 123, 130, 185, 187, 232, 369, 370, 373, 374, 386, 389, 391], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 37, 41, 43, 46, 54, 61, 64, 66, 69, 70, 99, 101, 103, 107, 112, 116, 117, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 153, 156, 171, 176, 177, 180, 186, 188, 191, 194, 204, 221, 225, 259, 268, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 313, 315, 316, 317, 331, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 370, 373, 374, 375, 376, 379, 381, 385, 386, 387, 392], "randomcroptensordict": [2, 373], "unlik": [2, 86, 107, 117, 118, 132, 133, 264, 290, 299, 333, 374, 378, 380, 391], "stop": [2, 3, 16, 21, 47, 69, 80, 87, 88, 103, 107, 123, 124, 130, 131, 375, 380, 385, 386, 391, 392], "signal": [2, 3, 14, 15, 16, 17, 23, 61, 63, 65, 67, 68, 69, 80, 87, 88, 93, 107, 117, 118, 132, 133, 146, 155, 180, 183, 204, 369, 373, 375, 385, 386, 389, 392], "disk": [2, 3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 350, 370, 373, 374, 376, 380, 381, 389], "dump": [2, 3, 11, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 91, 95, 331, 332, 333, 381, 382, 385], "load": [2, 6, 7, 14, 15, 16, 17, 30, 37, 41, 42, 43, 45, 46, 47, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 90, 91, 95, 96, 102, 103, 107, 123, 124, 130, 131, 138, 192, 194, 364, 370, 373, 375, 389], "json": 2, "metadata": [2, 61, 63, 103, 107, 123, 124, 130, 131, 304, 375, 377, 379, 380, 385, 386, 392], "anticip": [2, 151, 154], "compli": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 67], "back": [2, 24, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 53, 55, 56, 63, 191, 196, 252, 259, 260, 267, 268, 269, 270, 271, 375, 385, 386, 387, 389], "exact": [2, 3, 23, 123, 223], "statu": [2, 3, 103], "prioriti": [2, 4, 42, 50, 51, 74, 75, 76, 79, 80, 89, 91, 95, 284, 285, 287, 288, 289, 290, 295, 300, 302, 304, 305, 311, 370, 373, 374, 389], "heap": 2, "under": [2, 3, 4, 21, 37, 47, 61, 63, 64, 65, 67, 68, 69, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 194, 252, 259, 260, 267, 268, 269, 270, 271, 297, 313, 314, 315, 316, 317, 333, 369, 373, 374, 378, 385, 387, 392], "hood": [2, 21, 61, 103, 107, 123, 124, 130, 131, 387], "naiv": [2, 188, 377], "just": [2, 3, 4, 12, 91, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 127, 130, 131, 142, 149, 204, 232, 341, 368, 370, 373, 374, 375, 376, 377, 378, 380, 385, 386, 387, 389, 391, 392], "public": [2, 66, 90, 168, 190], "serializ": 2, "consum": [2, 86, 88, 264, 374, 375, 380, 386, 389], "much": [2, 8, 11, 14, 15, 17, 42, 50, 67, 79, 80, 123, 130, 296, 299, 375, 377, 381, 385, 386, 387, 389, 392], "duplic": [2, 37, 86, 103, 107, 123, 124, 130, 131, 194, 285, 290, 297, 311], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 30, 37, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 203, 208, 209, 210, 211, 212, 213, 216, 221, 225, 231, 236, 237, 239, 241, 242, 252, 253, 254, 255, 258, 259, 261, 262, 264, 265, 266, 267, 268, 275, 276, 281, 282, 283, 284, 285, 287, 288, 289, 292, 295, 296, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 331, 333, 360, 368, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 391, 392], "plu": [2, 14, 15, 17, 47, 123, 130, 387], "enabl": [2, 7, 8, 63, 74, 75, 86, 95, 143, 221, 225, 264, 265, 266, 331, 333, 346, 375, 377, 385, 386, 387, 389], "three": [2, 25, 29, 35, 36, 40, 70, 368, 370, 375, 377, 378, 385, 386, 387, 389, 392], "flatstoragecheckpoint": 2, "discard": [2, 3, 54, 63, 65, 107, 188, 203, 332, 389, 392], "compress": 2, "At": [2, 227, 261, 374, 375, 376, 380, 384, 387, 388], "correct": [2, 4, 41, 43, 46, 103, 107, 123, 124, 130, 131, 162, 353, 375, 376], "addit": [2, 3, 4, 37, 63, 103, 107, 123, 124, 130, 131, 132, 150, 168, 182, 185, 186, 188, 190, 194, 219, 256, 257, 258, 264, 270, 280, 297, 313, 331, 369, 373, 374, 377, 385, 386, 389], "nestedstoragecheckpoint": 2, "represent": [2, 33, 34, 37, 103, 107, 123, 124, 130, 131, 168, 188, 190, 194, 373, 387, 388, 392], "appar": [2, 3, 343], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 71, 72, 78, 103, 106, 107, 108, 123, 124, 130, 131, 139, 149, 153, 200, 213, 216, 231, 237, 241, 252, 256, 257, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 278, 285, 287, 288, 289, 304, 305, 311, 368, 374, 375, 376, 377, 378, 379, 385, 386, 387, 391, 392], "assumpt": [2, 3, 387, 389], "accur": [2, 7, 63, 69, 374, 387, 389], "truncat": [2, 3, 14, 15, 16, 17, 30, 32, 37, 38, 44, 48, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 87, 88, 101, 102, 103, 106, 107, 108, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 155, 156, 163, 170, 173, 180, 186, 194, 204, 221, 225, 248, 264, 319, 373, 375, 376, 377, 378, 380, 381, 384, 385, 388, 389, 391, 392], "marl": [2, 116, 134, 146, 183, 231, 377, 385, 386], "extra": [2, 10, 37, 103, 107, 123, 124, 130, 131, 146, 192, 194, 203, 340, 368, 375, 376, 389], "fail": [2, 7, 22, 27, 33, 123, 140, 196], "concret": [2, 373, 375], "set_se": [2, 3, 14, 15, 16, 17, 21, 30, 37, 48, 99, 100, 103, 107, 112, 113, 119, 123, 124, 130, 131, 142, 164, 171, 176, 181, 183, 186, 194, 380, 382, 387, 391, 392], "manual_se": [2, 3, 30, 42, 45, 48, 50, 51, 64, 68, 69, 87, 88, 99, 100, 103, 107, 123, 124, 130, 131, 140, 142, 153, 164, 173, 176, 181, 183, 194, 229, 230, 238, 252, 260, 261, 262, 265, 266, 274, 281, 282, 284, 288, 295, 302, 380, 382, 385, 386, 387, 391, 392], "200": [2, 14, 15, 16, 21, 30, 37, 48, 61, 103, 106, 107, 108, 123, 124, 130, 131, 132, 133, 173, 194, 209, 210, 217, 242, 243, 331, 333, 373, 376, 380, 382, 387, 389], "22": [2, 67, 87, 88, 191, 372, 374, 376, 387, 388, 390], "rb_test": 2, "_storag": [2, 388, 389], "max_siz": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 89, 93, 95, 375, 380], "102": [2, 387], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 41, 43, 46, 120, 213, 229, 230, 231, 280, 331, 373, 375, 385, 386], "state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 192, 194, 302, 364, 370, 373, 374, 392], "load_state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 192, 194, 302, 370, 373], "drawback": 2, "struggl": 2, "big": [2, 375, 380, 389, 392], "sequenti": [2, 9, 37, 103, 107, 123, 124, 130, 131, 145, 162, 194, 272, 273, 278, 299, 304, 368, 375, 376, 378, 386, 387, 388, 392], "known": [2, 3, 5, 7, 8, 107, 320, 321, 373, 374, 377], "seamless": [2, 226], "integr": [2, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 212, 221, 225, 228, 270, 368, 377, 378, 380, 385, 386, 387, 388], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 373, 374, 379], "essenti": [2, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 374, 377, 385, 387, 389], "understand": [2, 3, 8, 373, 374, 377, 378, 385, 386], "purpos": [2, 3, 7, 11, 103, 107, 123, 124, 130, 131, 146, 219, 281, 283, 296, 299, 301, 360, 373, 375, 376, 379, 381, 385, 386, 388, 392], "guid": [2, 11, 125, 126, 128, 129, 181, 367, 373, 386], "explan": [2, 37, 103, 107, 123, 124, 130, 131, 194], "effect": [2, 3, 27, 37, 42, 45, 50, 51, 61, 67, 80, 82, 85, 87, 88, 103, 107, 123, 124, 130, 131, 142, 146, 186, 194, 350, 373, 378, 385, 389, 392], "realm": [2, 378], "As": [2, 3, 4, 37, 61, 103, 107, 116, 123, 124, 125, 126, 130, 131, 173, 271, 313, 368, 373, 374, 375, 376, 377, 379, 380, 385, 386, 387, 388, 389, 391, 392], "practition": 2, "often": [2, 3, 8, 294, 350, 373, 374, 377, 379, 387, 389, 392], "encount": [2, 4, 67, 264, 367, 374, 378, 387], "situat": [2, 117, 118], "sometim": [2, 3, 376, 392], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 64, 65, 68, 69, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 117, 118, 121, 122, 127, 132, 133, 219, 220, 221, 223, 224, 225, 228, 253, 254, 255, 297, 300, 370, 374], "immedi": [2, 27, 33, 37, 103, 107, 123, 124, 130, 131, 194, 312, 385, 386], "199": [2, 387], "info": [2, 3, 14, 15, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 85, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 188, 191, 193, 340, 377, 382, 385, 386, 389], "glanc": [2, 377], "seem": [2, 373, 376, 377], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 47, 103, 107, 116, 123, 124, 125, 126, 130, 131, 146, 169, 219, 221, 223, 225, 249, 253, 254, 255, 276, 368, 374, 376, 377, 385], "less": [2, 120, 250, 362, 363, 369, 375, 376, 389, 391], "omit": [2, 345, 375, 379, 387, 389], "proper": [2, 3, 4, 6, 7, 313, 314, 315, 316, 374, 375, 385, 386, 389, 392], "imposs": [2, 3, 93, 196, 281, 283, 296, 299, 301], "determin": [2, 42, 50, 63, 79, 80, 103, 107, 123, 124, 130, 131, 132, 133, 168, 190, 231, 265, 266, 374, 378, 385, 386], "complic": [2, 387, 389, 392], "matter": [2, 11, 28, 380], "inconsist": [2, 392], "miss": [2, 3, 4, 6, 7, 12, 27, 37, 103, 107, 123, 124, 130, 131, 186, 194, 203, 272, 273, 302, 367, 373, 376], "behavior": [2, 4, 37, 103, 107, 123, 124, 130, 131, 186, 194, 288, 295, 304, 376, 386, 387], "primari": [2, 380], "elimin": [2, 3, 377], "upon": [2, 3, 8, 385, 387], "canon": 2, "definit": [2, 40, 89, 231], "markov": [2, 3, 377, 392], "decis": [2, 3, 208, 239, 258, 286, 298, 376, 377, 378, 385, 386, 389, 392], "mdp": [2, 377, 387], "context": [2, 3, 5, 8, 37, 103, 104, 107, 122, 123, 124, 130, 131, 182, 187, 194, 232, 233, 258, 309, 310, 313, 314, 315, 316, 318, 326, 333, 346, 368, 369, 373, 374, 375, 385, 386, 387, 388, 389], "condit": [2, 54, 181, 192, 259, 260, 264, 268, 269, 280, 373, 385, 387, 389], "complet": [2, 7, 9, 86, 103, 106, 107, 108, 123, 124, 130, 131, 146, 180, 367, 369, 373, 375, 377, 384], "termin": [2, 3, 7, 14, 15, 16, 17, 30, 32, 37, 38, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 101, 102, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 142, 143, 155, 170, 194, 204, 205, 221, 225, 228, 264, 272, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 373, 374, 375, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "reward": [2, 3, 14, 15, 16, 28, 30, 32, 37, 38, 41, 46, 47, 48, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 139, 140, 143, 144, 149, 150, 151, 152, 154, 155, 156, 162, 166, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 185, 186, 187, 189, 190, 192, 194, 200, 203, 205, 221, 228, 258, 264, 276, 281, 282, 284, 285, 287, 288, 289, 292, 295, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 343, 344, 346, 348, 364, 369, 370, 373, 374, 375, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "imit": [2, 3], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 52, 53, 55, 56, 67, 103, 104, 107, 110, 113, 123, 124, 130, 131, 194, 206, 207, 226, 232, 369, 370, 373, 374, 375, 376, 377, 385, 386, 387, 389], "stateless": [2, 3, 103, 107, 123, 124, 130, 131, 143, 185, 297, 331, 373, 377, 387, 392], "simul": [2, 3, 5, 7, 8, 99, 100, 109, 112, 113, 127, 132, 133, 137, 205, 228, 368, 373, 375, 377, 381, 385, 386], "furthermor": [2, 385, 386], "certain": [2, 4, 18, 19, 20, 21, 37, 54, 103, 107, 123, 124, 130, 131, 138, 159, 180, 186, 194, 220, 224, 261, 296, 368, 373, 374, 375, 382, 385, 386, 392], "composit": [2, 3, 27, 33, 85, 91, 98, 103, 107, 123, 124, 130, 131, 267, 375, 378, 387], "accommod": [2, 3, 377, 378], "uniform": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 53, 55, 56, 79, 80, 385], "unambigu": 2, "distinguish": [2, 117, 118, 132, 133], "happen": [2, 3, 103, 107, 123, 124, 130, 131, 257, 374, 379, 380, 381, 388, 392], "limit": [2, 47, 103, 107, 119, 123, 124, 130, 131, 146, 162, 281, 283, 296, 299, 301, 373, 374, 376, 385, 386, 387], "everyth": [2, 374, 375, 376, 381, 382], "belong": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 67, 191, 192, 368, 373, 380, 386], "rule": [2, 123, 151, 154, 271, 368, 375], "field": [2, 3, 14, 15, 16, 17, 23, 27, 30, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 151, 154, 155, 156, 166, 170, 171, 173, 177, 180, 182, 186, 194, 203, 205, 215, 216, 221, 225, 228, 240, 241, 249, 252, 253, 254, 255, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 273, 275, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 354, 367, 368, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "taken": [2, 3, 25, 29, 35, 36, 40, 103, 107, 123, 124, 130, 131, 139, 172, 229, 230, 262, 369, 373, 375, 376, 378, 385, 386, 387], "is_shar": [2, 3, 14, 15, 16, 23, 27, 30, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 151, 154, 155, 156, 166, 170, 171, 173, 177, 180, 182, 192, 203, 205, 215, 216, 221, 225, 228, 240, 241, 249, 252, 253, 254, 255, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 273, 275, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 368, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "brought": [2, 375, 376, 378], "step_mdp": [2, 3, 103, 107, 123, 124, 130, 131, 221, 225, 366, 376, 377, 387, 391, 392], "count": [2, 3, 37, 103, 104, 180, 265, 266, 346, 350, 353, 373, 374, 375, 376, 389, 392], "trigger": [2, 7], "partial": [2, 3, 103, 107, 123, 124, 130, 131, 145, 146, 181, 182, 183, 267, 350, 376], "turn": [2, 18, 19, 20, 21, 41, 43, 46, 131, 160, 187, 191, 259, 331, 346, 369, 373, 374, 376, 378, 387, 388], "retain": 2, "regard": [2, 63, 69, 216, 260, 281, 290, 299, 373, 375, 387], "copi": [2, 3, 12, 18, 19, 20, 21, 37, 41, 43, 46, 47, 54, 67, 103, 107, 123, 124, 130, 131, 142, 171, 181, 186, 192, 194, 203, 221, 225, 258, 297, 302, 331, 369, 373, 374, 376, 377, 385, 389], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 333, 369, 381, 389, 392], "eas": [2, 3, 385, 386], "flat": [2, 93], "manner": [2, 107, 168, 188, 368, 373, 374, 375, 380, 384, 387, 389], "ted2flat": [2, 30, 366], "flat2t": [2, 366], "unflatten": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 143, 264], "deseri": [2, 3, 30], "posit": [2, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 107, 123, 124, 130, 131, 158, 159, 179, 180, 183, 186, 187, 194, 235, 302, 369, 375, 385, 386, 387, 389], "both": [2, 3, 7, 37, 42, 45, 50, 51, 67, 103, 104, 106, 107, 117, 118, 123, 124, 125, 126, 130, 131, 139, 146, 171, 186, 194, 204, 206, 207, 221, 224, 225, 226, 231, 232, 253, 254, 255, 260, 269, 281, 283, 284, 288, 289, 295, 296, 297, 299, 300, 301, 302, 304, 305, 346, 368, 373, 375, 377, 379, 385, 386, 387, 388, 389, 392], "mark": [2, 3, 16, 69, 103, 107, 123, 124, 130, 131, 221, 225, 313, 315, 316, 380, 389], "identifi": [2, 44], "abov": [2, 3, 7, 37, 103, 107, 123, 124, 130, 131, 194, 222, 247, 248, 280, 369, 370, 373, 375, 377, 378, 385, 386, 387, 392], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 101, 102, 103, 106, 107, 108, 109, 113, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 143, 144, 146, 149, 150, 151, 152, 154, 156, 162, 164, 168, 170, 171, 176, 177, 180, 183, 185, 186, 188, 190, 191, 194, 196, 204, 206, 207, 208, 209, 210, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 231, 232, 235, 241, 250, 252, 253, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 331, 333, 341, 368, 369, 373, 374, 375, 376, 377, 378, 381, 384, 385, 386, 387, 388, 391, 392], "typic": [2, 3, 4, 8, 37, 103, 107, 123, 124, 130, 131, 155, 181, 194, 267, 282, 297, 299, 302, 368, 369, 370, 375, 377, 379, 380, 385, 386, 387], "adjust": [2, 11, 373, 385, 386, 387], "grumodul": [2, 145, 278], "lstmmodul": [2, 376], "skip": [2, 3, 37, 61, 103, 107, 123, 124, 130, 131, 159, 186, 194, 196, 267, 271, 297, 302, 313, 314, 315, 316, 332, 333, 343, 346, 373, 374, 387], "accumul": [2, 8, 194], "upcom": [2, 297, 322, 323, 324, 325, 327, 328, 329, 330, 373], "popular": [2, 3, 368, 376, 379, 386], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 194, 366, 374], "shift": [2, 30, 32, 37, 38, 48, 71, 72, 78, 277, 313, 314, 315, 316, 375], "approxim": [2, 386, 392], "would": [2, 3, 11, 37, 47, 103, 107, 123, 124, 130, 131, 194, 219, 221, 223, 225, 226, 231, 370, 374, 375, 376, 377, 379, 380, 387, 389, 391, 392], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 146, 213, 239, 281, 286, 298, 299, 341, 364, 375, 376, 386, 389], "2x": 2, "small": [2, 188, 373, 375, 385, 386, 392], "clearer": [2, 378], "lazi": [2, 33, 34, 58, 59, 103, 107, 123, 124, 130, 131, 132, 133, 168, 188, 206, 231, 233, 272, 273, 373, 374, 378, 380, 384, 389, 392], "certainli": 2, "benefici": 2, "welcom": [2, 377], "wrapper": [2, 3, 12, 17, 41, 43, 46, 47, 50, 51, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 191, 195, 235, 250, 257, 258, 262, 264, 266, 271, 276, 313, 338, 339, 340, 364, 366, 375, 376, 377, 385, 386, 388, 392], "around": [2, 5, 7, 17, 50, 51, 119, 195, 264, 271, 313, 373, 374, 386, 392], "selecttransform": [2, 103, 107, 123, 124, 130, 131], "excludetransform": [2, 68, 177, 389], "promptli": 2, "virtual": [2, 3, 106], "instal": [2, 3, 5, 10, 18, 19, 20, 63, 66, 103, 107, 123, 124, 125, 126, 128, 129, 130, 131, 335, 350, 367, 373, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 392], "respons": [2, 3, 8, 80, 87, 103, 107, 123, 124, 130, 131, 350, 379, 380, 392], "d4rl": [2, 63, 69], "repositori": [2, 7, 64, 65, 66, 69, 133, 385, 386], "wheel": [2, 375], "publish": 2, "openml": [2, 66, 122], "scikit": [2, 66, 122], "panda": [2, 66], "raw": [2, 3, 4, 47, 222, 247, 248, 374, 380, 387], "go": [2, 3, 7, 116, 123, 169, 173, 258, 319, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "natur": [2, 3, 373, 376, 378, 379, 380, 389], "modifi": [2, 3, 7, 8, 27, 33, 37, 54, 103, 107, 123, 124, 130, 131, 143, 150, 158, 162, 168, 182, 185, 186, 188, 190, 194, 258, 265, 266, 270, 353, 373, 374, 375, 377, 385, 386, 387], "fly": [2, 192, 296, 369, 375, 387, 389, 392], "least": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 103, 149, 381, 392], "pre": [2, 7, 22, 37, 54, 67, 75, 103, 107, 123, 124, 130, 131, 168, 188, 190, 194, 392], "appli": [2, 3, 4, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 167, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 194, 219, 223, 247, 259, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 298, 299, 300, 301, 302, 304, 305, 313, 331, 345, 370, 373, 374, 375, 380, 385, 387, 391, 392], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 64, 80, 87, 93, 111, 112, 113, 123, 125, 126, 149, 176, 206, 207, 217, 231, 232, 261, 264, 335, 350, 362, 363, 373, 374, 375, 376, 378, 379, 382, 385, 386, 389, 391], "pipelin": [2, 3, 7, 368, 375], "replac": [2, 3, 6, 7, 27, 33, 37, 61, 67, 80, 87, 88, 142, 153, 155, 203, 261, 368, 385, 389], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 82, 103, 107, 123, 124, 130, 131, 142, 173, 186, 194, 256, 257, 262, 264, 265, 266, 348, 370, 374, 375, 376, 378, 381, 387, 389, 392], "produc": [2, 139, 142, 143, 206, 207, 226, 232, 238, 253, 255, 258, 333, 375, 376, 377, 378, 380, 389, 392], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 71, 86, 103, 107, 123, 124, 125, 126, 130, 131, 186, 194, 302, 375], "download": [2, 7, 10, 61, 63, 64, 65, 67, 68, 69, 111, 168, 190, 333, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 124, 374, 385, 386, 387], "robosetexperiencereplai": [2, 87, 88], "fk1": [2, 68], "v4": [2, 68, 107, 123, 139, 172, 322, 323, 324, 325, 327, 328, 329, 330, 373, 375, 388, 392], "expert": [2, 68], "fk1_microopenrandom_v2d": [2, 68], "func": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 193], "obs_norm": 2, "norm": [2, 4, 8, 99, 100, 350, 373, 374, 375, 385, 386, 387], "num_work": [2, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 120, 123, 130, 373, 374], "os": [2, 43, 54, 70, 374], "cpu_count": [2, 43, 54, 70], "num_chunk": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69], "1000": [2, 4, 45, 79, 87, 88, 103, 107, 123, 124, 130, 131, 146, 192, 256, 261, 265, 266, 267, 271, 294, 373, 374, 375, 376, 378, 380, 382, 388, 389], "mp_start_method": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 123, 130, 374, 391], "fork": [2, 5, 61, 62, 63, 64, 65, 66, 67, 68, 69, 373, 374, 375, 376, 385, 386, 388, 391], "recreat": [2, 387], "customari": [2, 368], "moreov": [2, 3], "fine": [2, 3, 24, 80, 87, 103, 107, 123, 124, 130, 131, 143, 162, 380, 388], "grain": [2, 3, 80, 87, 103, 107, 123, 124, 130, 131, 143], "nomenclatur": 2, "compact": [2, 48, 71, 72, 78], "propos": [2, 146, 155, 227, 294, 303, 368, 376, 389], "replaybufferensembl": [2, 61, 85, 91, 98], "primit": [2, 3, 4, 67, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305], "individu": [2, 4, 18, 19, 20, 21, 37, 54, 80, 82, 93, 103, 107, 117, 118, 123, 124, 130, 131, 194, 373, 386], "dummi": [2, 3, 131, 331, 373, 380, 392], "semant": [2, 33, 34, 106, 108, 368], "ident": [2, 3, 14, 15, 16, 37, 41, 43, 46, 87, 103, 106, 107, 108, 120, 123, 124, 130, 131, 155, 231, 232, 313, 314, 315, 316, 362, 363, 374, 377, 385, 386], "another_kei": [2, 82], "renam": [2, 41, 43, 46, 82, 171, 173, 203, 373], "resiz": [2, 3, 69, 82, 146, 374, 376, 377, 389, 392], "imag": [2, 3, 4, 7, 11, 67, 148, 168, 184, 190, 226, 331, 333, 373, 374, 377, 381, 386, 388, 392], "comops": 2, "totensorimag": [2, 3, 69, 82, 146, 172, 374, 376, 389, 391, 392], "renametransform": [2, 82, 103, 107, 123, 124, 130, 131], "rb0": [2, 82], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 124, 130, 131, 136, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 158, 160, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 178, 181, 183, 184, 185, 186, 188, 190, 192, 205, 215, 221, 225, 228, 240, 249, 250, 252, 253, 254, 255, 258, 259, 264, 267, 268, 270, 271, 273, 274, 275, 278, 281, 282, 283, 284, 285, 287, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 332, 333, 360, 368, 373, 374, 375, 376, 378, 379, 382, 384, 385, 386, 387, 388, 389, 391, 392], "pixel": [2, 3, 7, 27, 69, 82, 101, 102, 106, 108, 109, 127, 146, 148, 155, 158, 160, 164, 166, 168, 172, 184, 188, 190, 209, 236, 237, 331, 333, 368, 373, 374, 376, 381, 385, 388, 389, 391, 392], "rb1": [2, 82], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 124, 130, 131, 136, 144, 145, 146, 147, 148, 149, 151, 152, 154, 158, 160, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 178, 181, 183, 184, 185, 188, 190, 192, 205, 215, 216, 221, 225, 228, 240, 241, 249, 250, 252, 253, 254, 255, 258, 260, 264, 267, 268, 269, 270, 271, 273, 274, 275, 278, 281, 282, 283, 288, 289, 295, 296, 299, 300, 301, 302, 304, 311, 313, 314, 315, 316, 331, 333, 346, 360, 368, 373, 374, 375, 376, 378, 382, 384, 385, 386, 387, 388, 389, 391, 392], "pixels33": [2, 82], "data0": [2, 82], "244": [2, 82, 168, 190, 387], "data1": [2, 82], "_": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 104, 111, 132, 133, 147, 151, 153, 154, 162, 164, 171, 184, 192, 194, 252, 270, 275, 280, 281, 282, 284, 288, 289, 295, 299, 300, 302, 304, 305, 313, 314, 315, 316, 335, 373, 374, 375, 376, 382, 385, 386, 387, 389, 391], "rang": [2, 3, 4, 8, 12, 29, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 103, 104, 107, 117, 118, 123, 124, 130, 131, 173, 184, 192, 194, 220, 224, 296, 304, 305, 369, 370, 373, 375, 376, 379, 380, 382, 385, 386, 387, 389, 391], "parent": [2, 3, 21, 27, 32, 33, 53, 62, 82, 91, 98, 103, 107, 123, 124, 130, 131, 139, 143, 146, 147, 150, 152, 155, 158, 159, 164, 168, 176, 180, 181, 182, 183, 185, 187, 188, 194, 221, 225, 253, 278, 297, 299, 317, 331, 333, 373, 380, 387, 391, 392], "basic": [2, 119, 368, 375, 379, 380, 382, 385, 392], "properti": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 124, 130, 131, 142, 185, 186, 192, 194, 214, 222, 233, 238, 246, 247, 248, 264, 297, 302, 378, 380, 387, 389], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 55, 56, 90, 96, 103, 107, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 203, 204, 206, 207, 209, 210, 211, 212, 215, 216, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 241, 242, 243, 244, 245, 247, 250, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 344, 348, 353, 360, 368, 369, 370, 373, 374, 375, 376, 377, 385, 386, 387, 391, 392], "send": [2, 3, 8, 340, 391], "receiv": [2, 3, 37, 47, 103, 107, 123, 124, 130, 131, 185, 186, 194, 226, 319, 369, 373, 375, 379, 384, 387], "spawn": [2, 3, 4, 18, 22, 111, 120, 123, 130, 374, 385, 386], "check_env_spec": [2, 3, 107, 123, 139, 170, 331, 366, 375, 385, 386, 387], "saniti": [2, 3, 7, 196, 375], "utmost": 2, "commonli": [2, 80, 87, 88, 392], "emploi": [2, 234], "languag": [2, 24, 47], "scarc": 2, "address": [2, 389], "subdomain": 2, "facilit": [2, 3, 7, 167, 168, 182, 188, 190, 253, 254, 255, 368, 373, 376, 378, 387], "extern": [2, 3, 151, 154, 385, 392], "token": [2, 43, 44, 47, 52, 54, 70], "dm": [3, 373, 392], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 54, 67, 84, 90, 93, 94, 96, 97, 99, 100, 103, 107, 111, 112, 113, 119, 120, 121, 123, 124, 130, 131, 132, 173, 182, 188, 189, 231, 253, 263, 281, 282, 284, 285, 287, 288, 289, 291, 295, 299, 300, 301, 302, 304, 305, 340, 350, 368, 369, 370, 373, 374, 376, 377, 378, 379, 381, 385, 386, 387, 389, 392], "goal": [3, 4, 61, 62, 63, 64, 65, 66, 67, 68, 69, 181, 373, 374, 375, 376, 386, 387], "abl": [3, 116, 125, 126, 373, 375, 376, 378, 384, 385, 386, 387, 389, 391], "experi": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 79, 80, 196, 335, 336, 337, 338, 339, 340, 367, 374, 375, 380, 381, 385, 386, 389], "box": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 106, 108], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 103, 104, 107, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 146, 149, 155, 161, 162, 164, 166, 171, 173, 176, 182, 185, 191, 192, 194, 331, 360, 373, 374, 375, 376, 384, 385, 386, 388, 389, 391, 392], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 99, 100, 103, 107, 119, 123, 124, 130, 131, 150, 153, 155, 162, 168, 182, 185, 186, 188, 190, 194, 205, 206, 207, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 235, 240, 241, 249, 252, 253, 254, 255, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 278, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 360, 368, 369, 373, 374, 375, 376, 378, 379, 382, 384, 385, 386, 387, 388, 391], "organis": [3, 68, 103, 107, 123, 124, 130, 131, 186, 374], "arbitrari": [3, 40, 45, 103, 107, 123, 124, 130, 131, 142, 368, 373, 374, 387, 389], "structur": [3, 7, 41, 42, 43, 45, 46, 47, 50, 51, 54, 93, 103, 107, 123, 124, 130, 131, 151, 154, 204, 231, 265, 266, 313, 314, 315, 316, 317, 366, 369, 373, 375, 376, 377, 380, 385, 386, 387, 388], "attribut": [3, 4, 24, 28, 30, 37, 41, 43, 46, 48, 54, 67, 103, 106, 107, 108, 123, 124, 130, 131, 139, 155, 168, 188, 192, 194, 221, 225, 271, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 373, 376, 385, 387], "live": [3, 13, 14, 15, 16, 17, 19, 20, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 124, 130, 131, 155, 194], "actual": [3, 4, 7, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 191, 353, 369, 373, 375, 385, 386, 387], "retriev": [3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 103, 106, 107, 108, 123, 124, 130, 131, 147, 152, 155, 164, 203, 205, 206, 228, 264, 267, 271, 274, 278, 281, 282, 283, 285, 296, 299, 300, 302, 304, 305, 311, 313, 314, 315, 316, 364, 370, 374, 375, 378, 387, 392], "care": [3, 8, 103, 107, 123, 124, 130, 131, 185, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 333, 373, 375, 385, 386, 387, 389], "parametr": [3, 234, 271, 282, 288, 295, 302, 373, 375], "hardwar": 3, "observation_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 160, 161, 162, 164, 166, 168, 170, 172, 176, 178, 180, 181, 182, 183, 184, 185, 187, 188, 191, 192, 194, 205, 221, 225, 228, 354, 360, 373, 375, 379, 384, 385, 386, 387, 392], "compositespec": [3, 33, 34, 58, 103, 105, 107, 119, 123, 124, 130, 131, 140, 143, 151, 152, 153, 154, 156, 162, 170, 171, 177, 180, 182, 185, 194, 200, 204, 205, 228, 252, 256, 257, 267, 273, 274, 278, 366, 373, 375, 376, 385, 386, 387, 392], "pair": [3, 37, 41, 43, 46, 63, 101, 102, 103, 107, 123, 124, 130, 131, 173, 182, 221, 253, 267, 271, 297, 313, 314, 315, 316, 317, 368, 369, 373, 374, 375, 378, 379, 384, 387, 392], "state_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 205, 228, 387, 392], "reward_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 144, 149, 150, 151, 152, 154, 170, 174, 175, 176, 178, 185, 187, 194, 205, 228, 375, 385, 386, 387, 392], "done_spec": [3, 103, 107, 123, 124, 130, 131, 151, 152, 154, 155, 170, 185, 194, 204, 385, 386, 387, 392], "flag": [3, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 265, 266, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 368, 385, 386, 387, 388], "input_spec": [3, 103, 107, 119, 123, 124, 130, 131, 139, 143, 150, 151, 152, 153, 164, 166, 170, 171, 176, 177, 180, 181, 182, 185, 186, 187, 189, 194, 375, 387], "full_action_spec": [3, 103, 107, 123, 124, 130, 131, 139, 205, 228, 375, 385, 386], "full_state_spec": [3, 103, 107, 123, 124, 130, 131, 139, 205, 228, 375], "lock": [3, 27, 33, 41, 43, 46, 103, 107, 123, 124, 130, 131, 143, 182, 192, 387], "output_spec": [3, 103, 107, 123, 124, 130, 131, 143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 186, 194, 387], "full_observation_spec": [3, 103, 107, 123, 124, 130, 131, 205, 228], "full_reward_spec": [3, 103, 107, 123, 124, 130, 131, 143, 152, 170, 385, 386], "full_done_spec": [3, 103, 107, 123, 124, 130, 131, 143, 152, 170, 204, 385, 386], "carri": [3, 21, 54, 103, 107, 123, 124, 130, 131, 182, 297, 374, 376, 385, 386, 387, 389], "nontensorspec": [3, 366], "importantli": [3, 267, 271], "action_s": 3, "help": [3, 4, 37, 103, 107, 123, 124, 130, 131, 155, 194, 281, 283, 296, 299, 301, 367, 369, 373, 374, 375, 376, 385, 386], "With": [3, 112, 113, 116, 181, 370, 374, 384, 385, 386, 389, 392], "necessarili": [3, 103, 107, 123, 124, 130, 131, 392], "present": [3, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 106, 107, 123, 124, 130, 131, 156, 173, 177, 182, 186, 194, 203, 204, 208, 209, 210, 211, 212, 218, 221, 223, 225, 234, 239, 264, 265, 266, 270, 271, 272, 273, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 364, 370, 373, 382, 384, 385, 386, 389, 391], "0s": [3, 61, 67, 182, 376], "step_and_maybe_reset": [3, 103, 107, 123, 124, 130, 131, 377], "done_kei": [3, 23, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 124, 130, 131, 142, 146, 155, 173, 180, 194, 203, 385, 386], "assign": [3, 4, 14, 15, 17, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 194, 284, 285, 287, 302, 375, 378, 385, 386, 389], "_reset": [3, 103, 107, 119, 123, 124, 130, 131, 140, 142, 143, 146, 151, 154, 170, 204, 205, 228, 385], "data_": [3, 103, 107, 123, 124, 130, 131], "append": [3, 8, 11, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 123, 124, 130, 131, 142, 149, 150, 173, 182, 186, 191, 220, 221, 224, 225, 259, 268, 373, 374, 375, 376, 385, 386, 387, 388, 389, 391], "seed": [3, 14, 15, 16, 17, 21, 68, 103, 107, 119, 123, 124, 125, 126, 130, 131, 132, 133, 140, 143, 151, 154, 170, 186, 196, 331, 350, 385], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 202, 208, 217, 236, 243, 252, 262, 267, 270, 271, 274, 282, 297, 346, 368, 373, 374, 376, 378, 379, 382, 385, 387, 392], "preced": [3, 37, 376], "risk": [3, 169], "overlap": [3, 50, 93], "reproduc": [3, 146, 196, 373, 375, 386], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 44, 47, 52, 54, 70, 74, 75, 76, 79, 80, 95, 103, 107, 123, 124, 130, 131, 153, 174, 180, 181, 183, 246, 247, 248, 274, 282, 288, 289, 295, 297, 298, 302, 333, 347, 373, 374, 375, 376, 378, 385, 386, 389], "max_step": [3, 11, 93, 103, 107, 117, 118, 119, 123, 124, 130, 131, 132, 133, 180, 194, 331, 377, 378, 379, 381, 382, 385, 386, 391, 392], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 47, 99, 100, 103, 107, 119, 123, 124, 130, 131, 145, 162, 216, 221, 225, 228, 240, 241, 249, 250, 253, 254, 255, 257, 258, 259, 262, 264, 266, 267, 268, 269, 270, 272, 273, 274, 276, 278, 282, 284, 288, 289, 291, 292, 293, 295, 297, 300, 302, 304, 305, 311, 312, 313, 314, 315, 316, 346, 360, 366, 373, 375, 376, 379, 382, 384, 385, 386, 387, 388, 392], "trail": [3, 192], "treat": [3, 37, 378, 379], "figur": [3, 373, 375, 376, 386, 387, 392], "brief": [3, 375, 377, 379, 389], "deliveri": 3, "design": [3, 37, 40, 85, 91, 98, 103, 107, 117, 118, 123, 124, 130, 131, 139, 146, 169, 186, 194, 258, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 373, 374, 375, 376, 377, 378, 379, 384, 385, 386, 387, 389, 392], "metaclass": 3, "everi": [3, 8, 27, 33, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 89, 103, 107, 123, 124, 130, 131, 180, 181, 192, 194, 200, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 232, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 350, 370, 373, 374, 375, 376, 377, 378, 385, 386, 387], "flank": [3, 376], "dual": 3, "strictli": [3, 8, 37, 103, 107, 123, 124, 130, 131, 186, 194, 302, 373, 375], "refer": [3, 7, 8, 9, 11, 21, 24, 37, 47, 103, 106, 107, 108, 123, 124, 130, 131, 186, 192, 194, 205, 216, 217, 228, 229, 230, 231, 236, 237, 242, 243, 260, 281, 290, 291, 292, 293, 299, 302, 313, 318, 326, 372, 373, 375, 378, 379, 380, 381, 385, 386, 389, 392], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 79, 80, 103, 107, 123, 124, 130, 131, 164, 168, 173, 175, 188, 190, 192, 194, 203, 207, 214, 229, 230, 231, 232, 233, 234, 238, 240, 246, 247, 248, 249, 270, 287, 289, 294, 300, 303, 326, 344, 346, 347, 355, 356, 358, 360, 361, 362, 363, 364], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 117, 118, 134, 373], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 67, 80, 87, 88, 366], "adjac": [3, 23, 158, 264], "reli": [3, 11, 23, 182, 219, 220, 221, 223, 224, 225, 281, 369, 373, 375, 378, 380, 387, 392], "junction": 3, "inittrack": [3, 221, 225, 264, 373, 376], "tutori": [3, 124, 365, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 392], "scratch": [3, 8, 374, 387], "gym3": 3, "envpool": [3, 120, 121], "interfac": [3, 110, 122, 226, 233, 368, 373, 375, 381, 387, 389], "simultan": [3, 20, 120, 121, 123, 130, 387], "advantag": [3, 8, 218, 281, 283, 296, 299, 301, 313, 314, 315, 316, 317, 318, 320, 322, 324, 326, 327, 329, 369, 370, 373, 374, 375, 376, 386, 387, 392], "scale": [3, 4, 24, 63, 103, 107, 123, 124, 130, 131, 146, 162, 164, 175, 181, 184, 192, 217, 222, 235, 242, 243, 247, 248, 253, 254, 255, 267, 271, 273, 281, 282, 295, 299, 300, 301, 302, 348, 354, 364, 368, 373, 374, 375, 376, 378, 386, 391], "varieti": [3, 11], "inherit": [3, 103, 107, 123, 124, 130, 131, 227, 297, 370, 375, 385, 386], "Of": [3, 7, 367, 387, 392], "cours": [3, 4, 367, 387, 392], "from_pixel": [3, 11, 99, 100, 101, 102, 106, 108, 109, 112, 113, 127, 146, 172, 331, 333, 373, 374, 376, 377, 381, 382, 388, 389, 391, 392], "81": [3, 374, 387, 388], "simpli": [3, 6, 41, 43, 46, 54, 91, 93, 98, 156, 177, 191, 297, 368, 369, 373, 375, 379, 385, 386, 392], "d": [3, 42, 45, 50, 51, 64, 66, 68, 69, 70, 79, 80, 219, 223, 267, 271, 391], "privat": [3, 103, 107, 123, 124, 130, 131, 191, 387, 392], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 35, 36, 40, 41, 43, 46, 61, 88, 93, 283, 296, 299, 341, 343, 346, 350, 353, 354, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 47, 82, 85, 164, 175, 222, 233, 242, 247, 248, 311, 368, 378, 379, 385, 387, 389], "inner": [3, 103, 107, 123, 124, 130, 131, 153, 370, 374, 375, 386, 392], "logic": [3, 385], "nevertheless": [3, 375, 377, 389], "kept": [3, 23, 86, 88, 153, 177, 185, 196, 203, 222, 247, 248, 379, 385], "mind": [3, 61, 67, 80, 87, 88, 103, 107, 123, 124, 130, 131, 385, 386], "desig": 3, "wherev": 3, "expos": [3, 127, 151, 154, 272, 374], "modif": [3, 5, 27, 33, 37, 103, 107, 123, 124, 130, 131, 158, 194, 204, 297, 375, 387], "lost": [3, 8, 191], "eras": [3, 80, 87, 103, 107, 123, 124, 130, 131, 186], "intern": [3, 371], "face": [3, 5, 8, 9, 377, 392], "NOT": [3, 71, 72, 78, 169], "outsid": [3, 16, 381, 385, 386, 387], "right": [3, 6, 7, 23, 47, 80, 87, 374, 375, 386, 387, 392], "preliminari": 3, "warranti": 3, "affect": [3, 8, 37, 103, 107, 123, 124, 130, 131, 185, 186, 194, 196, 313, 314, 315, 316, 385], "preclud": 3, "presenc": [3, 379], "annihil": 3, "reason": [3, 4, 8, 37, 67, 103, 107, 123, 124, 125, 126, 130, 131, 168, 188, 194, 225, 369, 373, 374, 375, 379, 380, 385, 387, 389], "advanc": [3, 21, 42, 45, 50, 51, 107, 377, 380, 389], "explicitli": [3, 4, 71, 72, 78, 142, 267, 374, 376, 380, 385, 386, 389], "superse": 3, "pettingzoowrapp": [3, 366], "group": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 103, 107, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 134, 368, 374, 378, 380, 386, 389], "associ": [3, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 194, 242, 364, 373, 389], "environemtn": 3, "__not__": [3, 267], "constrain": [3, 162, 221, 225, 299], "li": 3, "fact": [3, 7, 8, 373, 375, 377, 385, 386, 387, 388, 389, 392], "predict": [3, 37, 47, 215, 217, 227, 228, 258, 276, 281, 283, 287, 290, 292, 293, 296, 299, 301, 312, 368, 373, 374, 379], "know": [3, 4, 9, 42, 45, 50, 51, 106, 108, 256, 257, 300, 346, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 389], "meaning": 3, "perfectli": [3, 370, 373, 387], "meaningless": 3, "val": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 379, 391], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 55, 56, 61, 103, 107, 123, 124, 130, 131, 142, 364, 368], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 147, 151, 153, 154, 155, 156, 158, 162, 163, 164, 166, 168, 170, 171, 173, 175, 176, 177, 180, 182, 184, 186, 187, 188, 190, 192, 194, 196, 200, 203, 204, 205, 206, 207, 209, 210, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 247, 248, 252, 259, 260, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 311, 313, 314, 315, 316, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 340, 343, 344, 346, 347, 348, 350, 364, 374, 375, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "500": [3, 373, 374, 387, 391, 392], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 61, 64, 123, 130], "bottleneck": [3, 8, 80, 87, 88], "great": [3, 7, 8, 385, 391], "speedup": [3, 8, 385, 392], "precis": [3, 151, 154, 203, 220, 224, 373, 375], "misspecifi": 3, "caus": [3, 7, 8, 74, 75, 95, 103, 107, 111, 123, 124, 130, 131, 169, 392], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 134, 146, 157, 163, 173, 181, 182, 183, 186, 194, 196, 256, 257, 261, 262, 265, 266, 302, 373, 375, 385, 386, 389, 392], "mismatch": [3, 374], "subprocess": [3, 14, 15, 17, 104, 123, 130], "multithreadedenv": [3, 366], "underneath": 3, "higher": [3, 4, 80, 149, 274, 373, 374, 375, 385, 389, 392], "flexibl": [3, 9, 120, 306, 369, 370, 373, 389, 392], "cover": [3, 106, 108, 367, 375, 377, 380, 381, 387, 391], "type": [3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 69, 70, 82, 103, 107, 116, 119, 122, 123, 124, 125, 126, 130, 131, 143, 150, 151, 152, 155, 156, 162, 168, 170, 171, 177, 180, 182, 185, 186, 188, 190, 192, 194, 198, 202, 206, 207, 226, 231, 232, 234, 240, 249, 256, 257, 259, 267, 270, 271, 278, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 307, 311, 319, 331, 362, 366, 368, 373, 374, 375, 380, 385, 386, 387, 389, 392], "atari": [3, 4, 61, 146, 333, 381, 392], "classic": [3, 119, 126, 374], "benchmark_batched_env": 3, "seamlessli": [3, 387], "infrastructur": [3, 385, 386], "act": [3, 4, 87, 88, 125, 126, 186, 215, 232, 282, 284, 295, 300, 302, 304, 305, 376, 385, 386, 389], "world": [3, 5, 119, 276, 292, 381, 385, 386, 387, 392], "paradigm": [3, 17, 386], "decpodp": 3, "game": [3, 4, 5, 61, 117, 118, 333, 381], "thank": [3, 373, 377], "carrier": [3, 375, 376, 377, 389], "particular": [3, 37, 54, 63, 64, 103, 107, 123, 124, 130, 131, 186, 194, 369, 370, 374, 376, 377, 384, 386, 389], "thu": [3, 296, 386], "let": [3, 6, 7, 11, 23, 37, 42, 45, 50, 51, 52, 103, 107, 123, 124, 125, 126, 130, 131, 146, 194, 221, 225, 231, 232, 259, 346, 369, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "vma": [3, 132, 133, 331, 385, 386], "robot": [3, 5, 7, 67, 168, 188, 190, 386], "vmasenv": [3, 331, 366, 385, 386], "balanc": [3, 101, 102, 373, 374], "num_env": [3, 21, 106, 110, 121, 132, 133, 331, 385, 386], "n_agent": [3, 132, 133, 231, 232, 240, 249, 311, 331, 385, 386], "ground_rew": 3, "pos_rew": [3, 386], "style": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69], "relat": [3, 4, 10, 42, 123, 158, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 374, 382, 387], "vari": [3, 106, 108, 109, 125, 126, 127, 132, 169, 386], "creation": [3, 123, 130, 392], "info_spec": [3, 123], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 25, 40, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 140, 170, 204, 285, 288, 289, 311, 366, 385, 386, 392], "simpl": [3, 9, 37, 40, 103, 107, 123, 124, 130, 131, 194, 209, 264, 271, 285, 287, 297, 301, 313, 368, 369, 373, 374, 375, 377, 378, 379, 385, 386, 389, 392], "prefix": [3, 23, 37, 41, 43, 46, 54, 103, 107, 123, 124, 130, 131, 186, 194, 267, 297, 302, 332, 376, 379, 392], "exactli": [3, 37, 103, 107, 109, 123, 124, 130, 131, 186, 194, 219, 223, 302, 373, 376, 380, 385, 386], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 103, 107, 123, 124, 130, 131, 139, 140, 153, 195, 203, 205, 227, 228, 256, 257, 261, 262, 264, 265, 266, 385, 386], "reward_kei": [3, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 124, 130, 131, 194, 203, 205, 228, 344, 348, 385, 386], "set_kei": [3, 155, 281, 283, 285, 288, 289, 290, 295, 296, 297, 299, 300, 301, 302, 311, 317, 373, 385, 386], "awai": [3, 375, 377, 385, 386], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 180, 271], "full": [3, 103, 107, 123, 124, 130, 131, 221, 225, 260, 341, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "autoresettransform": 3, "invalid": [3, 37, 93, 103, 107, 123, 124, 130, 131, 134, 194, 229, 230], "nan": [3, 142, 191], "auto_reset": [3, 103, 107, 123, 124, 130, 131, 142, 194, 387], "auto_reset_replac": [3, 142], "placehold": [3, 109, 155, 186], "set_gym_backend": [3, 103, 106, 107, 123, 124, 130, 131, 135, 142, 366, 377], "autoresettinggymenv": [3, 142], "_step": [3, 103, 107, 123, 124, 130, 131, 140, 142, 143, 151, 154, 158, 170, 171], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 103, 107, 119, 123, 124, 130, 131, 140, 142, 143, 150, 151, 154, 168, 170, 182, 185, 186, 188, 190, 194, 205, 216, 228, 240, 249, 256, 257, 261, 267, 270, 275, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 370, 373, 387, 391, 392], "super": [3, 119, 140, 142, 143, 151, 154, 170, 205, 216, 228, 275, 282, 284, 289, 295, 300, 302, 304, 305, 373, 385, 387, 391, 392], "td_reset": [3, 142], "exclud": [3, 8, 63, 68, 103, 107, 123, 124, 130, 131, 142, 146, 156, 203, 240, 385, 386, 389], "r": [3, 4, 37, 139, 140, 142, 149, 164, 178, 192, 220, 271, 280, 312, 331, 368, 374, 387, 392], "break_when_any_don": [3, 103, 107, 123, 124, 130, 131, 142, 194, 264, 386], "3633e": [3, 142], "02": [3, 103, 107, 123, 124, 130, 131, 142, 372, 373, 374, 375, 382, 386, 387, 388, 390], "4877e": [3, 142], "01": [3, 142, 164, 265, 266, 277, 283, 296, 299, 372, 373, 374, 376, 386, 387, 388, 390], "2849e": [3, 142], "7584e": [3, 142], "6609e": [3, 142], "6166e": [3, 142], "8366e": [3, 142], "2761e": [3, 142], "5685e": [3, 142], "4102e": [3, 142], "8111e": [3, 142], "9959e": [3, 142], "0865e": [3, 142], "5644e": [3, 142], "2119e": [3, 142], "2542e": [3, 142], "03": [3, 103, 107, 123, 124, 130, 131, 142, 164, 372, 373, 374, 387, 388, 390], "9952e": [3, 142], "4059e": [3, 142], "2094e": [3, 142], "9009e": [3, 142], "5140e": [3, 142], "3554e": [3, 142], "2920e": [3, 142], "7893e": [3, 142], "6429e": [3, 142], "3057e": [3, 142], "2867e": [3, 142], "6963e": [3, 142], "3818e": [3, 142], "2576e": [3, 142], "2679e": [3, 142], "1640e": [3, 142], "00": [3, 99, 100, 142, 372, 373, 374, 375, 376, 386, 387, 388, 390], "6972e": [3, 142], "0212e": [3, 142], "5959e": [3, 142], "4637e": [3, 142], "3121e": [3, 142], "2168e": [3, 142], "5232e": [3, 142], "7704e": [3, 142], "7457e": [3, 142], "4127e": [3, 142], "1064e": [3, 142], "0854e": [3, 142], "5712e": [3, 142], "2189e": [3, 142], "5235e": [3, 142], "8289e": [3, 142], "0009e": [3, 142], "0257e": [3, 142], "8893e": [3, 142], "5872e": [3, 142], "9405e": [3, 142], "7766e": [3, 142], "0403e": [3, 142], "0626e": [3, 142], "2959e": [3, 142], "7263e": [3, 142], "2775e": [3, 142], "9564e": [3, 142], "0411e": [3, 142], "6769e": [3, 142], "6354e": [3, 142], "8698e": [3, 142], "1765e": [3, 142], "6292e": [3, 142], "5375e": [3, 142], "1820e": [3, 142], "7023e": [3, 142], "5836e": [3, 142], "9016e": [3, 142], "4826e": [3, 142], "6191e": [3, 142], "6387e": [3, 142], "8667e": [3, 142], "2056e": [3, 142], "1147e": [3, 142], "5991e": [3, 142], "0278e": [3, 142], "5219e": [3, 142], "3067e": [3, 142], "6617e": [3, 142], "3322e": [3, 142], "2629e": [3, 142], "4599e": [3, 142], "7298e": [3, 142], "5848e": [3, 142], "0148e": [3, 142], "5745e": [3, 142], "6982e": [3, 142], "7877e": [3, 142], "3527e": [3, 142], "7285e": [3, 142], "6668e": [3, 142], "0583e": [3, 142], "6956e": [3, 142], "3962e": [3, 142], "9845e": [3, 142], "5015e": [3, 142], "5903e": [3, 142], "9993e": [3, 142], "9418e": [3, 142], "0196e": [3, 142], "6557e": [3, 142], "2109e": [3, 142], "8997e": [3, 142], "1507e": [3, 142], "7363e": [3, 142], "0310e": [3, 142], "9574e": [3, 142], "8980e": [3, 142], "0090e": [3, 142], "forecast": 3, "awar": [3, 7, 74, 75, 76, 89, 91, 95, 374, 376], "detect": [3, 69], "return_contigu": [3, 103, 107, 123, 124, 130, 131, 196, 384], "unboundedcontinuoustensorspec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 151, 154, 170, 182, 200, 205, 228, 252, 270, 273, 275, 278, 301, 366, 375, 376, 385, 386, 387, 392], "boundedtensorspec": [3, 22, 27, 103, 107, 123, 124, 130, 131, 195, 261, 262, 265, 266, 267, 274, 281, 282, 284, 295, 299, 300, 302, 304, 305, 366, 375, 385, 386, 387, 391, 392], "binarydiscretetensorspec": [3, 140, 285, 288, 289, 311, 366], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 93, 103, 105, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 151, 152, 155, 156, 157, 158, 161, 162, 167, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 185, 186, 191, 192, 194, 203, 204, 205, 221, 225, 227, 228, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 271, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 311, 312, 313, 314, 315, 316, 317, 350, 373, 385, 387], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 26, 28, 29, 37, 40, 42, 47, 50, 55, 67, 79, 80, 82, 103, 107, 123, 124, 130, 131, 139, 142, 146, 150, 151, 154, 162, 164, 168, 173, 174, 175, 181, 182, 184, 185, 186, 188, 190, 192, 194, 214, 217, 219, 222, 223, 226, 229, 230, 233, 234, 242, 243, 246, 248, 256, 257, 270, 274, 277, 279, 280, 281, 282, 283, 287, 288, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 312, 318, 319, 320, 321, 322, 323, 324, 325, 326, 348, 373, 374, 389, 392], "_set_se": [3, 140, 143, 151, 154, 170, 387], "lazystackedtensordict": [3, 33, 61, 103, 107, 119, 123, 124, 130, 131, 384], "float32": [3, 14, 15, 16, 27, 30, 41, 42, 43, 46, 47, 48, 50, 51, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 128, 129, 130, 131, 132, 133, 139, 143, 151, 154, 155, 156, 164, 166, 170, 171, 173, 177, 180, 182, 184, 200, 203, 205, 215, 216, 221, 225, 228, 240, 241, 249, 252, 253, 254, 255, 258, 259, 264, 265, 266, 267, 268, 269, 270, 273, 275, 278, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 311, 368, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392], "exclusive_field": [3, 61, 384], "stack_dim": [3, 61, 384], "dramat": 3, "carefulli": [3, 385, 386, 392], "against": [3, 5, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 194, 196, 252, 259, 260, 267, 268, 269, 270, 271, 375, 385, 386], "plain": [3, 8, 377], "larg": [3, 4, 29, 41, 43, 46, 151, 154, 188, 281, 283, 296, 299, 301, 374, 375, 385, 386, 389], "expens": [3, 80, 87, 88, 331, 389], "absent": [3, 27, 33, 63, 103, 107, 123, 124, 130, 131, 186], "torchvis": [3, 11, 168, 190, 335, 385, 391, 392], "base_env": [3, 100, 103, 107, 108, 113, 123, 124, 130, 131, 139, 140, 143, 149, 151, 153, 154, 162, 166, 170, 172, 178, 180, 182, 183, 186, 194, 333, 373, 374, 375, 385, 388, 391, 392], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 124, 130, 131, 138, 141, 143, 150, 155, 182, 186, 194, 206, 207, 226, 280, 331, 355, 356, 362, 363, 364, 374, 389], "bring": [3, 375, 377, 392], "signific": [3, 5, 8, 375, 392], "kind": [3, 45, 53, 203, 379, 385, 389], "consult": 3, "interest": [3, 267, 271, 368, 374, 375, 377, 386, 387, 392], "resize_par": 3, "easi": [3, 5, 11, 61, 66, 101, 102, 103, 107, 112, 113, 123, 124, 130, 131, 256, 257, 261, 262, 265, 266, 368, 369, 373, 374, 375, 386, 388, 389, 392], "graph": [3, 4, 8, 99, 100, 112, 113, 309, 310, 373, 387], "revers": [3, 223], "order": [3, 11, 16, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 88, 103, 107, 123, 124, 130, 131, 147, 151, 154, 166, 186, 194, 252, 259, 270, 272, 273, 275, 281, 282, 284, 288, 289, 295, 299, 300, 301, 302, 304, 305, 374, 385, 386], "chain": [3, 41, 42, 43, 45, 46, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 150, 153, 206, 207, 273, 392], "invers": [3, 4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 146, 151, 154, 156, 164, 173, 194, 279, 288, 295, 387], "in_keys_inv": [3, 136, 149, 151, 152, 154, 164, 165, 166, 170, 171, 173, 178, 185, 373, 384, 387, 392], "append_transform": [3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 136, 139, 145, 168, 182, 186, 188, 192, 331, 373, 376, 385, 387, 389, 391, 392], "doubletofloat": [3, 373, 375, 384], "float64": [3, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 101, 102, 103, 107, 117, 118, 123, 124, 130, 131, 139, 150, 151, 154, 168, 182, 185, 186, 188, 190, 194, 270, 384], "regist": [3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 106, 107, 108, 123, 124, 130, 131, 151, 154, 155, 176, 186, 194, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 331, 333, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 370, 373, 375, 377, 389], "manipul": [3, 4, 8, 101, 102, 168, 188], "third_transform": 3, "unexpect": [3, 37, 103, 107, 123, 124, 130, 131, 194, 392], "behviour": 3, "fortun": [3, 376, 377, 378, 381], "alreadi": [3, 8, 12, 37, 41, 43, 46, 54, 61, 103, 107, 123, 124, 130, 131, 182, 194, 204, 271, 313, 314, 315, 316, 373, 375, 381, 385, 386], "chang": [3, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 74, 75, 76, 80, 86, 87, 89, 91, 95, 103, 107, 123, 124, 130, 131, 143, 150, 151, 152, 154, 156, 162, 170, 171, 177, 180, 185, 186, 192, 194, 223, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 369, 373, 376, 385, 386, 387, 388, 389, 392], "catfram": [3, 264, 374], "hold": [3, 309, 310, 387, 389], "notic": [3, 93, 146, 375, 382, 387], "parenthood": 3, "henc": [3, 42, 169, 204, 231, 368, 373, 375, 385, 386, 387], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 123, 130, 331, 387], "discret": [3, 25, 29, 35, 36, 40, 56, 103, 106, 107, 108, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 153, 238, 241, 287, 288, 289, 290, 368, 374, 378, 385, 386, 387, 392], "might": [3, 41, 43, 44, 46, 337, 367, 373, 377, 392], "action_mask": [3, 112, 113, 125, 126, 128, 129, 140], "unavail": [3, 125, 126], "probabl": [3, 4, 8, 47, 82, 85, 214, 216, 219, 221, 223, 225, 226, 229, 230, 238, 247, 248, 261, 267, 271, 368, 374, 378, 391], "categor": [3, 29, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 139, 140, 155, 216, 238, 241, 259, 260, 267, 268, 269, 285, 288, 289, 311, 376], "probabilistictensordictmodul": [3, 162, 271, 272, 391], "tensordictsequenti": [3, 221, 225, 259, 261, 264, 265, 272, 278, 368, 373, 374, 376, 378, 382, 384, 385, 388, 391], "maskedcategor": [3, 230, 366], "linear": [3, 14, 15, 16, 17, 21, 37, 99, 100, 103, 107, 119, 123, 124, 130, 131, 150, 162, 168, 182, 185, 186, 188, 190, 194, 205, 206, 207, 209, 210, 211, 212, 216, 218, 226, 228, 231, 232, 233, 234, 235, 241, 242, 243, 252, 253, 254, 255, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 275, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 360, 368, 374, 384, 388, 391], "in_feat": 3, "out_feat": 3, "logit": [3, 43, 47, 215, 229, 230, 238, 260, 267, 288, 289, 368], "dist": [3, 10, 229, 230, 238, 378], "distribution_class": [3, 162, 253, 254, 255, 258, 267, 271, 273, 281, 282, 288, 289, 295, 299, 300, 301, 302, 368, 373, 375, 378, 385, 386, 391], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 65, 99, 100, 103, 107, 108, 112, 113, 118, 121, 123, 124, 125, 126, 130, 131, 133, 194, 196, 221, 225, 250, 253, 254, 255, 257, 262, 264, 266, 268, 276, 297, 311, 368, 373, 374, 375, 376, 379, 382, 385, 386, 392], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 140, 169, 194], "enviorn": [3, 117, 125, 126, 132, 133], "itself": [3, 37, 103, 107, 123, 124, 130, 131, 135, 142, 194, 297, 304, 375, 377], "ey": 3, "report": [3, 99, 100, 112, 113, 381], "foremost": 3, "callback": [3, 103, 107, 123, 124, 130, 131, 386], "ad": [3, 4, 16, 23, 37, 42, 45, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 103, 107, 123, 124, 130, 131, 176, 186, 194, 233, 234, 265, 266, 281, 283, 285, 290, 296, 299, 302, 311, 374, 376, 378, 385, 389, 392], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 51, 79, 80, 86, 176, 192, 194, 264, 265, 266, 338, 343, 374, 376, 377, 380, 386, 387, 389], "tensordictrecord": [3, 366], "videorecord": [3, 11, 331, 366, 375, 381, 382, 385], "csvlogger": [3, 11, 331, 333, 366, 374, 381, 382, 385], "wandblogg": [3, 366, 381], "tensorboardlogg": [3, 360, 366, 381], "tag": [3, 7, 11, 331, 333, 335, 338, 364, 381, 382, 385], "mp4": [3, 331, 333, 335, 382, 385], "video_format": [3, 331, 333, 335, 382, 385], "whc": 3, "cwh": 3, "exp": [3, 235, 280], "al": [3, 24, 106, 108, 155, 166, 205, 392], "pong": [3, 61, 121, 166, 392], "v5": [3, 106, 108, 121, 155, 166, 392], "cach": [3, 41, 43, 54, 61, 63, 64, 65, 67, 68, 69, 70, 80, 87, 103, 107, 123, 124, 130, 131, 142, 151, 154, 168, 186, 190, 203, 342, 388], "grow": 3, "until": [3, 7, 21, 183, 185, 194, 375, 376, 382, 385, 386], "dumpi": 3, "tediou": [3, 377], "workspac": [3, 103, 107, 123, 124, 130, 131], "pixelrendertransform": [3, 366, 385], "stream": [3, 67], "alik": [3, 331], "envcreat": [3, 16, 22, 123, 130, 331, 360, 361, 364, 366, 373, 374, 391, 392], "render_mod": [3, 331, 387], "rgb_arrai": [3, 331, 385, 386, 387], "uncom": [3, 381], "line": [3, 7, 37, 61, 103, 107, 123, 124, 130, 131, 194, 374, 381, 385, 386, 392], "comment": [3, 370, 374, 391], "pixels_record": [3, 331], "close": [3, 16, 107, 120, 162, 281, 283, 296, 299, 331, 373, 374, 377, 384, 385, 387, 391], "mission": 3, "irrespect": [3, 270, 271], "dmcontrol": [3, 103, 107, 123, 124, 130, 131], "jumanji": [3, 103, 107, 112, 113, 123, 124, 130, 131], "special": [3, 366, 368, 373, 376, 392], "framework": [3, 4, 9, 22, 99, 100, 103, 107, 112, 113, 119, 123, 124, 130, 131, 219, 391, 392], "Its": [3, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 192, 194, 270, 317], "success": [3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 146, 185, 261, 304, 374, 380, 382, 387, 389, 391], "foundat": [3, 5, 125, 126, 375, 386], "inspir": [3, 387], "gone": [3, 4, 5, 264], "hard": [3, 7, 93, 101, 102, 123, 294, 374, 392], "prefer": [3, 14, 15, 17, 20, 23, 24, 42, 45, 50, 51, 169, 177, 299, 304, 347, 368, 375, 385, 386, 389], "maintain": [3, 5, 9, 28, 387], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 374, 375, 376, 380, 385, 386, 387, 389, 392], "decor": [3, 8, 12, 138, 297, 313, 314, 315, 316, 391], "relev": [3, 47, 313, 314, 315, 316, 317, 340, 387], "gym_backend": [3, 138, 366], "env1": [3, 384], "venv": 3, "python3": [3, 6, 7, 10, 385, 392], "site": [3, 6, 7, 68, 138, 385, 392], "env2": [3, 384], "_env": [3, 6, 106, 392], "classic_control": 3, "pendulumenv": [3, 366, 387], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 115, 135], "handi": [3, 103, 107, 123, 124, 130, 131, 381], "side": [3, 4, 392], "v0": [3, 14, 15, 103, 107, 109, 112, 113, 114, 115, 123, 124, 130, 131, 150, 186, 192, 360, 392], "26": [3, 103, 107, 123, 124, 130, 131, 374, 387, 388], "fun": [3, 12, 138, 375, 385, 386], "reveal": 4, "bug": [4, 391], "curv": 4, "exploit": [4, 378], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 162, 385, 386, 388], "coeffici": [4, 24, 28, 47, 162, 386], "bonu": [4, 281, 283, 296, 299], "beta": [4, 42, 50, 79, 80, 288, 295, 296, 373, 374, 389, 391], "reduc": [4, 6, 29, 93, 181, 247, 366, 374, 385], "downstream": [4, 373], "formul": [4, 385, 386], "ob": [4, 8, 23, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 87, 88, 93, 103, 107, 123, 124, 130, 131, 140, 142, 151, 152, 154, 164, 178, 184, 200, 203, 209, 210, 211, 212, 231, 232, 268, 275, 282, 284, 289, 295, 300, 302, 304, 305, 313, 314, 315, 316, 374, 384, 385, 387, 389, 391, 392], "rate": [4, 11, 61, 192, 312, 374, 375, 385, 386], "gradient": [4, 37, 103, 107, 123, 124, 130, 131, 186, 194, 222, 230, 234, 238, 247, 248, 281, 283, 284, 288, 289, 295, 296, 297, 299, 300, 301, 302, 304, 305, 312, 313, 314, 315, 316, 350, 373, 375, 385, 386, 387], "easier": [4, 368, 373], "local": [4, 7, 10, 16, 21, 37, 80, 87, 103, 107, 123, 124, 130, 131, 186, 194, 231, 232, 240, 249, 311, 338, 340, 381, 382, 385, 386], "optima": 4, "sens": [4, 41, 43, 46, 380, 387], "product": [4, 9, 219, 220, 223, 224, 362, 363], "sum": [4, 21, 36, 40, 93, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 145, 176, 229, 230, 247, 249, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 298, 299, 300, 301, 302, 304, 305, 312, 319, 369, 373, 374, 375, 376, 379, 382, 385, 386, 387, 392], "stat": [4, 164, 192, 354, 364, 374, 375], "w": [4, 82, 146, 148, 172, 184, 219, 265, 266, 333, 374, 376, 389], "yield": [4, 16, 21, 37, 103, 107, 123, 124, 130, 131, 194, 297, 373, 379], "insight": 4, "auxiliari": [4, 379], "credit": 4, "futur": [4, 23, 37, 41, 43, 46, 71, 72, 78, 103, 107, 123, 124, 130, 131, 168, 186, 190, 194, 226, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 367, 391], "past": [4, 264, 374, 389], "spars": [4, 376], "intermedi": [4, 14, 15, 145, 221, 225, 260, 373, 388], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 373], "discov": 4, "score": [4, 47], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 391], "select": [4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 117, 118, 125, 126, 132, 133, 140, 142, 143, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 167, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 185, 188, 189, 191, 192, 194, 195, 205, 221, 225, 259, 268, 349, 373, 377, 389], "fall": [4, 63], "explicit": [4, 12, 54, 82, 389], "mechan": [4, 37, 103, 107, 123, 124, 130, 131, 186, 194, 374, 379, 387], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 103, 107, 123, 124, 130, 131, 223, 288, 295, 375, 386], "addition": 4, "timestep": [4, 47, 63, 173, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 385, 386], "realli": 4, "huge": [4, 232, 376], "std": [4, 164, 192, 235, 239, 256, 257, 373, 392], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 372, 376, 377, 379, 380, 381, 382, 383, 384, 388, 389, 390], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 107, 123, 124, 130, 131, 145, 164, 168, 182, 185, 186, 188, 193, 194, 205, 219, 220, 223, 224, 228, 233, 234, 256, 257, 261, 262, 264, 265, 266, 281, 282, 284, 285, 287, 289, 290, 291, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 311, 364, 373, 374, 376, 377, 378, 380, 385, 387, 392], "estim": [4, 61, 80, 87, 88, 155, 162, 209, 247, 253, 254, 255, 281, 282, 283, 284, 285, 287, 289, 290, 291, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "unseen": 4, "extrins": 4, "wrong": [4, 80, 87], "bonus": 4, "denser": 4, "prior": [4, 243, 292, 386], "freshli": 4, "drop": [4, 86, 88, 203], "meant": [4, 37, 119], "encourag": [4, 123, 373, 374, 389], "measur": [4, 74, 75, 95, 99, 100, 112, 113, 375, 380], "novelti": 4, "revisit": 4, "previous": [4, 375, 392], "diminish": 4, "decreas": [4, 24, 378], "ideal": [4, 164, 387], "down": [4, 14, 15, 16, 17, 376, 377], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 41, 43, 46, 374, 375, 376, 379, 380, 385, 386, 387, 391, 392], "distil": 4, "nois": [4, 193, 234, 251, 265, 266, 300, 304, 305, 346, 364, 373, 385], "exploratori": [4, 281, 283, 296, 299], "misalign": 4, "trade": [4, 378], "unavoid": 4, "divers": [4, 123, 130], "bootstrap": [4, 290, 314, 320, 321, 373, 376], "noisi": [4, 233, 234, 251, 368], "unstabl": [4, 222, 247, 248], "inher": 4, "stochast": [4, 162, 217, 234, 236, 243, 282, 286, 288, 289, 295, 298, 300, 302, 368, 375, 378, 386], "enemi": 4, "pomdp": [4, 389], "loos": [4, 368, 374, 375], "nonexist": 4, "architectur": [4, 213, 379, 385, 386], "sequenc": [4, 14, 15, 16, 17, 24, 27, 33, 35, 36, 42, 44, 45, 47, 52, 54, 67, 70, 73, 82, 83, 85, 91, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 136, 144, 145, 146, 147, 148, 151, 153, 154, 158, 160, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 181, 183, 184, 185, 192, 206, 207, 214, 216, 219, 223, 226, 229, 230, 231, 232, 238, 241, 245, 258, 272, 273, 286, 332, 333, 345, 346, 347, 349, 350, 368, 373, 375, 376, 384, 385, 386, 392], "lstm": [4, 182, 224, 225, 235], "rel": [4, 82, 182, 214, 246, 373, 374, 385, 386, 389], "tend": 4, "stabl": [4, 9, 10, 122], "compens": 4, "descent": [4, 234], "minimum": [4, 123, 130, 174, 217, 235, 246, 247, 248, 274, 277, 280, 282, 289, 297, 298, 302, 341, 373, 375, 382, 385, 386], "manual": [4, 11, 18, 20, 21, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 108, 373, 376, 389], "deviat": [4, 164, 192, 205, 217, 228, 233, 234, 239, 256, 257, 299, 304, 305, 373, 378, 386], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 80, 87, 142, 219, 220, 223, 224, 377, 378, 379, 380, 381, 382], "stabil": [4, 159, 281, 283, 296, 299, 301], "stage": [4, 373, 387], "never": [4, 14, 15, 17, 80, 380], "prevent": [4, 25, 27, 29, 33, 35, 36, 40, 72, 192, 222, 247, 248, 281, 283, 296, 299, 301, 348, 381, 389], "entir": [4, 67, 103, 107, 123, 124, 130, 131, 231, 375, 377, 387, 389], "submit": [4, 106, 143, 367, 391], "system": [4, 5, 72, 375, 385, 386, 387], "adequ": [4, 196, 375, 385, 386], "infeas": 4, "allevi": [4, 368], "prune": 4, "fire": [4, 37, 103, 107, 123, 124, 130, 131, 194], "illeg": 4, "move": [4, 37, 69, 103, 107, 123, 124, 130, 131, 139, 150, 152, 168, 182, 185, 186, 188, 190, 192, 194, 203, 226, 270, 348, 373, 374, 376, 377, 391, 392], "chess": 4, "combin": [4, 31, 185, 304, 374, 381, 389], "grasp": 4, "top": [4, 93, 99, 100, 112, 113, 205, 228, 378], "wherein": 4, "cumul": [4, 176, 181, 205, 319, 375], "q": [4, 9, 103, 107, 123, 124, 130, 131, 209, 210, 211, 212, 215, 216, 218, 240, 241, 249, 255, 260, 268, 269, 282, 284, 285, 287, 288, 289, 290, 294, 295, 300, 302, 304, 305, 311, 366, 373, 379], "flow": [4, 373, 375, 385, 386, 387, 389], "reparameter": [4, 214, 230, 238], "soft": [4, 294, 302, 303, 385], "critic": [4, 8, 253, 263, 281, 283, 284, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 373, 379], "clip": [4, 47, 149, 174, 281, 283, 296, 299, 301, 304, 305, 350, 375, 386, 387], "oppos": [4, 54], "incorrect": 4, "thought": [4, 103, 107, 123, 124, 130, 131], "bound": [4, 21, 26, 27, 37, 103, 107, 123, 124, 130, 131, 149, 163, 192, 194, 242, 243, 252, 259, 260, 266, 267, 268, 269, 270, 271, 274, 304, 305, 368, 373, 374, 375, 385, 392], "region": 4, "squash": [4, 376, 391], "tanh": [4, 206, 207, 219, 220, 222, 223, 224, 226, 232, 246, 247, 248, 274, 375, 378, 385, 386, 387, 388, 391], "prob": [4, 229, 230, 238, 375, 386], "rememb": [4, 385], "remap": 4, "origin": [4, 8, 41, 43, 46, 47, 111, 152, 153, 162, 168, 186, 190, 194, 219, 267, 270, 271, 294, 297, 299, 373, 384, 387, 392], "histor": 5, "ceas": 5, "farama": [5, 65, 114, 115, 125, 126, 375, 387], "best": [5, 9, 111, 221, 225, 385, 386, 389, 391], "gymwrapp": [5, 103, 107, 123, 124, 130, 131, 156, 177, 180, 191, 366, 375, 391, 392], "feel": [5, 367, 382, 391], "free": [5, 7, 151, 154, 281, 292, 299, 370, 375, 382, 386, 391], "gladli": 5, "prepar": [6, 32, 64, 375], "conda": [6, 7, 367], "cmake": 6, "activ": [6, 7, 9, 206, 207, 213, 217, 226, 231, 232, 283, 296, 299, 368, 387, 391], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 64, 367], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 109], "y": [6, 7, 45, 122, 218, 231, 250, 373, 386, 389], "facebookresearch": [6, 64, 109], "subdirectori": 6, "verbos": [6, 382], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 58, 103, 107, 123, 124, 130, 131, 170, 179, 194, 297, 385, 386, 391, 392], "command": [6, 7, 10, 131, 375, 385, 386, 387, 392], "readm": [6, 7, 132], "md": [6, 7], "habitatenv": [6, 366], "_has_habitat": 6, "available_env": [6, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 392], "startswith": [6, 369, 373, 379], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 104, 297, 373], "env_nam": [6, 99, 101, 103, 106, 107, 109, 112, 114, 120, 123, 124, 127, 130, 131, 373, 375, 392], "llvmlite": 6, "config": [6, 7, 168, 190, 208, 213, 239, 354, 355, 356, 358, 361], "var": [6, 7, 37, 103, 107, 123, 124, 130, 131, 186, 194, 297, 302], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 259, 297], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 37, 103, 107, 123, 124, 130, 131, 186, 194, 297, 302, 389], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 103, 374, 382], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 63], "stand": [7, 31, 101, 102, 123, 130, 384, 387], "joint": [7, 374], "contact": [7, 44, 385], "engin": [7, 127, 387], "biomechan": 7, "graphic": 7, "anim": [7, 386], "area": 7, "demand": [7, 381, 392], "fast": [7, 9, 99, 100, 171, 203, 300, 373, 374, 375], "articul": 7, "acquir": [7, 375], "deepmind": [7, 8, 9, 67, 101, 102, 103, 107, 117, 118, 123, 124, 130, 131, 155, 375, 377], "whomev": 7, "licenc": 7, "incorpor": [7, 103, 107, 123, 124, 130, 131, 256, 257, 261, 262, 265, 266, 304, 376, 378, 387], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 367], "tip": [7, 367], "glfw": [7, 373], "osmesa": 7, "egl": 7, "advic": [7, 67, 392], "sudo": [7, 367], "apt": [7, 386], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 253, 254, 255], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 25, 29, 40, 144, 216, 241, 259, 260, 268, 269, 285, 288, 289, 311], "mkdir": 7, "earlier": [7, 373, 375, 376, 385, 386, 389], "roboti": 7, "html": [7, 14, 15, 120, 122], "wget": 7, "mujoco210": 7, "tar": [7, 64], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 123, 130], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 41, 43, 54, 70], "bin": [7, 216, 260, 368], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 212, 267, 271, 373, 375, 389], "nvidia": [7, 111], "older": [7, 12], "hack": [7, 373], "adatp": 7, "script": [7, 64, 196, 360, 364, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "unnot": [7, 169], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 72, 374, 389], "troubleshoot": 7, "gl": 7, "h": [7, 82, 146, 148, 172, 184, 219, 220, 221, 223, 224, 225, 228, 333, 374, 376, 389], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21], "directori": [7, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 74, 338, 340, 370, 373, 378, 381, 385], "devel": 7, "ubuntu": [7, 111], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 374, 376, 384], "libstdc": 7, "glibcxx_3": 7, "29": [7, 373, 374, 375, 387], "compil": [7, 23, 37, 80, 87, 88, 103, 107, 123, 124, 130, 131, 194, 219, 220, 223, 224], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 191, 375, 384], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": [7, 373], "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 33, 37, 103, 107, 123, 124, 130, 131, 163, 186, 194, 302, 392], "job": [7, 18, 19, 20, 22, 45, 389, 391], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 99, 100, 372, 374, 378, 387, 390], "114": [7, 387], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 387], "offscreenopenglcontext": 7, "opengl": [7, 385, 386], "global": [7, 37, 103, 107, 123, 124, 125, 126, 130, 131, 194, 240, 249, 267, 271, 311, 370, 373, 385, 386], "cuda_visible_devic": 7, "id": [7, 23, 47, 80, 82, 87, 88, 103, 106, 107, 123, 124, 130, 131, 265, 266, 300, 336, 340, 380, 389], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 385], "onscreen": 7, "101": [7, 387], "correctli": [7, 37, 103, 107, 123, 124, 130, 131, 194], "lgl": 7, "libegl": 7, "x11": [7, 386], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 370], "n_training_step": 8, "datapoint": [8, 54, 389], "n_data_per_train": 8, "no_grad": [8, 37, 103, 107, 123, 124, 130, 131, 162, 194, 219, 220, 223, 224, 313, 314, 315, 316, 375, 376, 386], "loss_fn": [8, 376, 379, 380, 391], "zero_grad": [8, 37, 103, 107, 123, 124, 130, 131, 194, 370, 373, 375, 376, 379, 382, 385, 386, 387], "backpropag": [8, 99, 100, 112, 113, 123, 281, 282, 283, 288, 289, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 305, 311, 379, 386, 387], "differenti": [8, 54, 99, 100, 162, 304, 313, 314, 315, 316, 376, 378, 379, 385, 386, 387], "denomin": 8, "artifact": 8, "numer": [8, 45, 107, 192, 222, 247, 248, 252, 259, 260, 267, 268, 269, 270, 271, 348, 375, 389, 392], "misconcept": 8, "freed": 8, "appear": [8, 11, 40, 61, 67, 80, 87, 88, 387, 389], "compuat": 8, "fix": [8, 28, 123, 182, 282, 298, 302, 374, 382, 387, 392], "retain_graph": [8, 99, 100], "discuss": [8, 9, 380, 385, 386], "inplac": [8, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 194, 373], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 167, 168, 169, 170, 171, 173, 176, 177, 180, 181, 182, 183, 185, 188, 189, 191, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243, 245, 249, 250, 256, 257, 258, 260, 261, 264, 265, 266, 267, 269, 270, 271, 274, 275, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 311, 313, 314, 315, 316, 317, 369, 387, 391], "submodul": [8, 37, 103, 107, 123, 124, 130, 131, 135, 182, 194, 221, 225, 278, 297], "param": [8, 37, 47, 103, 107, 119, 123, 124, 130, 131, 143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 194, 214, 216, 246, 258, 267, 270, 273, 297, 307, 310, 313, 314, 315, 316, 317, 373, 382, 385, 386, 387, 388, 391], "grad": [8, 37, 99, 100, 103, 107, 123, 124, 130, 131, 194, 373, 375], "whose": [8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 103, 107, 123, 124, 125, 126, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 235, 240, 270], "neg": [8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 50, 79, 80, 146, 158, 169, 187, 291, 313, 315, 316, 369, 375, 385, 386, 387], "factor": [8, 11, 24, 37, 173, 194, 222, 234, 247, 248, 256, 257, 261, 262, 265, 266, 282, 287, 290, 291, 293, 303, 319, 373, 374, 378, 382, 385, 386, 389, 392], "fit": [8, 12, 164, 182, 369, 370, 373], "bottlneck": 8, "brax": [8, 99, 100, 103, 107, 123, 124, 130, 131, 171, 377, 392], "jax": [8, 12, 99, 100, 112, 113], "improperli": 8, "underli": [8, 103, 107, 123, 124, 130, 131, 297, 377, 379, 381, 387], "tedeiou": 8, "priorit": [8, 42, 50, 79, 80, 284, 285, 287, 288, 289, 295, 300, 302, 304, 305, 373, 374, 380], "amount": [8, 265, 266, 374, 389], "costli": [8, 387], "constitut": [8, 374, 386, 387], "profil": 8, "frequent": [8, 389], "program": [8, 288, 295, 392], "functorch": [8, 10], "incl": 8, "suit": [8, 102, 375, 377, 391, 392], "mujoco_instal": 8, "valueerror": [8, 37, 103, 107, 123, 124, 130, 131, 194], "bad": 8, "fds_to_keep": 8, "expand": [8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 87, 88, 143, 270, 273, 297, 385, 386, 387, 389, 391], "new_shap": 8, "permut": [8, 86, 166, 391, 392], "idea": [9, 300, 370, 376, 378, 385, 386], "introductori": 9, "intro": [9, 375, 376], "dai": [9, 391], "2022": [9, 10, 387, 391], "spin": [9, 101, 102], "deep": [9, 146, 209, 210, 211, 212, 215, 265, 266, 281, 294, 302, 303, 373, 385], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 378], "summari": [9, 164, 192, 373, 374, 375, 376], "reddit": 9, "reagent": 9, "orient": [9, 69, 392], "baselines3": 9, "tf": 9, "bandit": [9, 122], "tensorflow": [9, 229, 230], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 382], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 391], "grade": 9, "factori": [9, 52, 373], "cherri": 9, "jaxrl": 9, "mbrl": [9, 119, 368], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 387], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 375, 376, 385, 386], "notebook": [10, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "24": [10, 68, 88, 106, 120, 121, 264, 373, 374, 376, 385, 387], "pip3": [10, 373, 375, 376, 385, 386], "url": [10, 109], "org": [10, 14, 15, 24, 42, 64, 65, 67, 69, 79, 80, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 122, 127, 132, 133, 146, 168, 188, 208, 209, 210, 211, 212, 213, 216, 217, 218, 223, 228, 229, 230, 234, 236, 237, 240, 242, 243, 249, 260, 265, 266, 281, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 301, 302, 303, 304, 313, 318, 326, 365, 383, 388], "whl": 10, "u": [10, 66, 219, 220, 223, 224, 387], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 375, 385, 386, 387, 389], "power": [11, 374], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 366], "ultim": [11, 222, 247, 248], "ffmpeg": 11, "whatev": [11, 369, 373], "fed": [11, 386, 389], "feed": [11, 168, 190, 297, 368, 373, 385, 386, 389], "suppos": [11, 123, 346, 370, 392], "snippet": [11, 168, 188, 373], "gave": 11, "extrem": [11, 123, 130, 281, 283, 296, 299, 301], "blurri": 11, "stitch": 11, "exp_nam": [11, 333, 334, 335, 338, 339, 340, 360, 374, 381, 382], "my_exp": [11, 381], "pixels_onli": [11, 101, 102, 106, 108, 109, 127, 373, 374, 381, 382, 391, 392], "my_video": [11, 381], "record_env": [11, 381, 382], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 255, 368], "module_nam": [12, 297], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 79, 80, 82, 93, 99, 101, 102, 103, 105, 106, 107, 108, 109, 112, 117, 118, 120, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 142, 146, 155, 162, 168, 172, 180, 181, 186, 188, 190, 191, 192, 194, 197, 201, 204, 205, 215, 216, 221, 225, 227, 228, 231, 232, 233, 234, 235, 240, 241, 249, 252, 259, 260, 267, 268, 269, 270, 271, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 311, 312, 313, 314, 315, 316, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 358, 364, 374, 375], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 221, 225, 391], "longer": [12, 374, 382, 385, 386, 389], "x": [12, 23, 27, 37, 45, 47, 67, 88, 162, 184, 207, 216, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 250, 259, 267, 268, 277, 280, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 350, 373, 385, 387, 389, 391], "23": [12, 68, 88, 374, 387, 388], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 68, 99, 100, 107, 112, 113, 224, 280, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 373, 374, 375, 376, 382, 385, 386, 387, 389, 392], "otherwis": [12, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 88, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 146, 147, 153, 164, 181, 182, 183, 186, 192, 194, 219, 222, 223, 231, 232, 247, 248, 259, 268, 274, 282, 292, 297, 298, 302, 313, 315, 316, 346, 347, 370, 373, 374, 375, 376, 387, 392], "classmethod": [12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 103, 107, 123, 124, 130, 131, 188, 208, 239], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 33, 34, 35, 37, 41, 43, 45, 46, 68, 72, 80, 87, 88, 103, 104, 105, 106, 107, 108, 117, 118, 120, 123, 124, 125, 126, 130, 131, 132, 133, 134, 162, 182, 186, 191, 192, 194, 206, 207, 208, 209, 210, 211, 212, 213, 218, 226, 239, 267, 271, 302, 337, 338, 346, 355, 356, 362, 363, 364, 373, 374, 375, 389, 392], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 104, 123, 130, 373, 391], "device_typ": [14, 16, 17, 29, 35, 39, 40, 206, 207, 208, 209, 210, 211, 212, 218, 226, 231, 232, 233, 234, 239], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 374], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 374], "create_env_kwarg": [14, 15, 16, 17, 21, 104, 120, 123, 130, 373, 392], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 37, 173, 374, 389], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 267, 297, 346, 373, 374, 375, 376, 378, 385, 391], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 198, 202, 267, 271, 346], "exploration_mod": [14, 16, 17, 18, 19, 20, 366, 368], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 41, 43, 46, 123, 130], "num_sub_thread": [14, 15, 17, 123, 130], "set_trunc": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131], "use_buff": [14, 15, 16, 123, 130], "datacollector": [14, 15, 16, 17, 37, 271, 299, 375, 380, 389], "recept": 14, "safe": [14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 252, 257, 259, 260, 266, 267, 268, 269, 270, 271, 273, 368, 391], "sota": [14, 15, 119, 159, 301, 341, 355, 373, 374, 375, 378, 379, 380, 385, 386, 391], "guard": [14, 15], "doc": [14, 15, 52, 109, 112, 113, 122, 127, 340, 374, 385, 386, 389, 392], "env_mak": [14, 15, 16, 21, 360, 392], "2000": [14, 15, 16, 37, 54, 110, 333, 375, 389], "50": [14, 15, 16, 21, 44, 47, 61, 69, 87, 88, 117, 118, 194, 373, 374, 375, 376, 386, 387, 389], "shutdown": [14, 15, 16, 17, 21, 143, 373, 391], "del": [14, 15, 16, 373, 374, 375, 384, 385, 391, 392], "int64": [14, 15, 16, 23, 25, 29, 30, 35, 36, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 103, 107, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 139, 143, 155, 166, 173, 180, 216, 241, 259, 260, 265, 266, 267, 268, 269, 368, 375, 376, 377, 378, 380, 381, 387, 389, 391], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 145, 250, 259, 264, 268, 376], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 54], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 374], "divis": [14, 15, 16, 17, 18, 19, 20, 61, 67, 80, 87, 88, 386], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 107, 142, 182, 191, 225, 376, 387, 388], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 352, 374], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 70, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 120, 121, 123, 124, 127, 130, 131, 150, 151, 154, 162, 168, 182, 185, 186, 188, 190, 192, 194, 270, 385, 392], "span": [14, 15, 16, 17, 18, 19, 20, 21, 67, 80, 87], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 37, 194, 264, 374, 375, 385, 386], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 47, 340, 368, 385, 386, 387], "round": [14, 15, 16, 17, 18, 19, 20, 21, 61], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 37, 65, 103, 107, 123, 124, 130, 131, 194], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 191, 391], "ratio": [14, 15, 17, 47, 373, 375], "finish": [14, 15, 17, 21, 107, 173, 392], "rest": [14, 15, 17, 368, 375, 376, 385, 387, 391], "earli": [14, 15, 17, 37, 107, 180, 391], "safeti": [14, 15, 17, 119, 123, 130], "harm": [14, 15, 17, 123, 130], "exclus": [14, 15, 57, 58, 61, 67, 80, 87, 88, 143, 156, 158, 219, 221, 223, 225, 229, 230, 259, 260, 268, 269, 303, 304, 305, 313, 314, 315, 316, 317, 340, 364, 368], "add_truncated_kei": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131, 186], "ordereddict": [14, 15, 16, 17, 21, 37, 103, 107, 123, 124, 130, 131, 186, 192, 194, 302, 374], "form": [14, 15, 17, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 103, 107, 123, 124, 130, 131, 192, 194, 219, 221, 223, 225, 280, 281, 283, 296, 299, 350, 368, 378, 386], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 103, 107, 123, 124, 130, 131, 186], "integ": [14, 15, 16, 17, 23, 35, 36, 37, 40, 47, 56, 80, 87, 88, 89, 103, 107, 123, 124, 130, 131, 139, 142, 155, 159, 164, 180, 206, 207, 226, 231, 232, 288, 295, 302, 389], "increment": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131, 164, 296], "env_fn": [14, 15, 16, 17, 104, 362, 363], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 87, 88, 211, 212, 387], "out_se": [14, 15, 16, 17, 392], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 37, 39, 41, 42, 43, 45, 46, 49, 50, 51, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 78, 79, 80, 82, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 143, 150, 168, 170, 179, 182, 185, 186, 187, 189, 190, 193, 194, 205, 206, 207, 209, 210, 211, 212, 215, 218, 221, 222, 225, 226, 227, 228, 231, 232, 238, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 311, 312, 313, 314, 315, 316, 317, 331, 333, 337, 338, 340, 343, 350, 355, 356, 361, 362, 363, 369, 375, 386], "return_same_td": 16, "interruptor": 16, "cautious": [16, 299], "whole": [16, 27, 33, 37, 54, 103, 107, 123, 124, 130, 131, 186, 194, 267, 302, 341, 373, 375], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 378], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 350], "respect": [18, 19, 20, 37, 103, 107, 123, 124, 130, 131, 144, 150, 151, 154, 168, 169, 178, 182, 185, 186, 188, 190, 194, 219, 223, 231, 243, 270, 275, 281, 283, 296, 299, 301, 313, 315, 316, 345, 375, 376, 385, 386], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 367, 374, 375, 378, 381, 384, 389], "fashion": [18, 20, 21, 41, 43, 46, 88], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 158], "seen": [18, 19, 20, 21, 27, 33, 103, 107, 123, 124, 130, 131, 369, 373, 374, 376, 379, 385, 386, 389], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 42, 45, 50, 51, 63, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277, 373], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 387], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 373], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 40, 61, 267, 271], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 362, 363, 373, 374], "coordin": 21, "init": [21, 37, 103, 107, 123, 124, 130, 131, 192, 194, 340, 374, 375], "autodetect": 21, "similarli": [21, 37, 86, 91, 103, 107, 123, 124, 130, 131, 194, 231, 272, 273, 288, 295, 392], "num_cpu": 21, "num_gpu": 21, "1024": [21, 213, 374, 389], "equat": [21, 67, 107, 192, 265, 266, 280, 283, 303, 375, 377, 387], "exce": [21, 389], "indefinit": [21, 60], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 350, 373, 375, 376], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 304, 379], "jump": [22, 377], "host": [22, 37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 208, 213, 239, 258], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 48, 53, 54, 55, 56, 80, 87, 88, 103, 107, 123, 124, 130, 131, 136, 139, 140, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 160, 161, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 188, 192, 194, 195, 203, 204, 216, 241, 256, 257, 258, 261, 262, 264, 265, 266, 271, 285, 311, 331, 333], "as_nest": 23, "durat": [23, 386], "meta": [23, 41, 43, 46, 53, 63, 105, 109, 281, 283, 296, 299, 301, 370, 375, 385, 386, 389], "aren": [23, 181, 376], "deprec": [23, 37, 103, 107, 123, 124, 130, 131, 186, 194, 197, 201, 262, 281, 283, 285, 288, 289, 290, 295, 296, 299, 300, 301, 302, 311, 313, 314, 315, 316, 321, 392], "eventu": [23, 240, 376, 387], "supersed": 23, "recov": [23, 63, 65, 67, 68, 69, 87, 88, 257, 262, 266, 272, 288, 295, 384], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 106, 108], "stride": [23, 37, 103, 107, 123, 124, 130, 131, 194, 206, 207, 209, 210, 218, 231, 374, 385, 391], "jag": 23, "focu": [23, 373, 374, 375, 378, 379, 380, 385], "team": [23, 385, 386, 391], "cat": [23, 275, 282, 284, 295, 300, 302, 304, 305, 385, 389, 391], "arang": [23, 29, 40, 80, 139, 216, 230, 259, 341, 368, 389], "obs_": 23, "trajectory_id": 23, "int32": [23, 51, 61, 67, 87, 112, 113, 131, 200, 264, 389], "data_split": 23, "got": [23, 380], "init_kl_coef": 24, "horizon": [24, 117, 118, 132, 133, 205, 228, 375], "kl": [24, 28, 47, 162, 292, 296], "describ": [24, 53, 147, 185, 195, 246, 247, 285, 336, 369, 373, 375, 385, 386, 387, 392], "ziegler": 24, "et": [24, 205], "relax": [24, 331], "penalti": [24, 47, 296], "strai": [24, 47], "greater": [24, 61, 80, 87, 88, 221, 225, 373, 374, 391], "increas": [24, 72, 183, 265, 266, 385, 386], "pull": [24, 389], "toward": [24, 190], "aggress": 24, "kl_coef": [24, 28, 47], "arxiv": [24, 42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 127, 132, 133, 146, 168, 188, 208, 209, 210, 211, 212, 213, 216, 217, 218, 223, 228, 234, 236, 237, 240, 242, 243, 249, 260, 265, 266, 281, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 302, 303, 304, 313, 318, 326, 388], "pdf": [24, 146, 208, 209, 210, 211, 212, 216, 260, 265, 266, 290, 300, 303, 304, 313, 318, 326], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 385, 386], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 162], "newest": 24, "int8": [25, 103, 116, 125, 126, 144], "assert_is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "clear_device_": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "op": [25, 26, 29, 35, 36, 39, 40, 53, 55, 56, 163, 191, 256, 257, 261, 333, 352], "is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 392], "encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 51, 53, 55, 56, 99, 100, 103, 106, 108, 109, 112, 113, 120, 121, 127, 139, 153, 237, 238, 242, 280, 368, 374, 375, 376, 378, 387, 389], "ndarrai": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 265, 266, 274, 331, 385], "ignore_devic": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "np": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 274, 331, 385, 387], "complient": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "singleton": [25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 206, 207, 226, 244, 245], "start_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "end_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "implements_for_spec": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "torch_funct": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "tensor_to_index": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "project": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 153, 223, 252, 256, 257, 259, 260, 265, 266, 267, 268, 269, 270, 271, 340, 368, 391, 392], "rand": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 112, 113, 119, 140, 143, 151, 154, 170, 195, 205, 228, 267, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 302, 304, 305, 387, 391, 392], "unbound": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 182, 200, 387, 389], "to_numpi": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131], "transformed_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 185, 186, 235, 246, 364], "check_spec_encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "to_one_hot": [25, 29, 35], "hot": [25, 29, 35, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 139, 140, 153, 216, 238, 241, 259, 260, 268, 269, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 376], "to_one_hot_spec": [25, 29, 35], "onehotdiscretetensorspec": [25, 29, 216, 241, 259, 268, 285, 287, 288, 289, 311, 366, 368, 378], "convert": [25, 29, 35, 36, 37, 38, 40, 41, 43, 46, 49, 54, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 150, 151, 154, 168, 182, 185, 186, 188, 190, 192, 194, 270, 280, 297, 373, 374, 375, 387, 389], "type_check": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "update_mask": [25, 29, 35, 36, 40], "outcom": [25, 29, 35, 36, 40, 214, 246, 385], "disabl": [25, 29, 35, 36, 37, 40, 103, 107, 123, 124, 130, 131, 186, 194, 222, 248, 331, 373, 385], "unmask": [25, 29, 35, 36, 40], "ts": [25, 29, 35, 36, 40], "upper": [26, 85, 163], "unnam": 27, "constraint": [27, 119, 375, 386], "pixels_spec": 27, "observation_vector_spec": 27, "composite_spec": 27, "observation_vector": [27, 147, 373], "td_project": 27, "is_empti": [27, 33, 387], "include_nest": [27, 33], "leaves_onli": [27, 33], "is_leaf": [27, 33], "_compositespecitemsview": [27, 33], "children": [27, 33, 37, 103, 107, 123, 124, 130, 131, 194], "_compositespeckeysview": [27, 33], "reflect": [27, 33, 108, 125, 126, 191, 203, 297, 353, 374, 375, 376, 386], "lock_": [27, 33], "recurs": [27, 33, 37, 57, 58, 103, 107, 123, 124, 130, 131, 194, 297], "succeed": [27, 33], "selected_kei": [27, 33, 177, 373], "unlock_": [27, 33], "unlock": [27, 33, 41, 43, 46], "_compositespecvaluesview": [27, 33], "multipli": [28, 219, 223, 282, 283, 289, 296, 298, 299, 300, 302, 348, 373, 385], "calcul": [28, 47, 173, 219, 281, 283, 287, 296, 299, 301, 304], "onehottensorspec": [29, 99, 100, 106, 108, 109, 112, 113, 120, 121, 127], "action_valu": [29, 40, 215, 216, 241, 259, 260, 268, 269, 289, 297, 311, 368, 376, 378, 382], "argmax": [29, 103, 107, 123, 124, 130, 131, 216, 241, 260, 269, 378], "chosen_action_valu": [29, 40, 240, 241, 249, 268, 269, 311, 368, 376, 378], "shift_kei": [30, 32, 38, 48], "is_full_kei": [30, 32, 38, 48], "is_ful": [30, 32, 38, 48], "tempfil": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 360, 373, 374, 385, 389], "register_save_hook": [30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "temporarydirectori": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 373, 374, 385, 389], "tmpdir": [30, 42, 45, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 373, 374, 385], "rb_load": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "register_load_hook": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "persist": [31, 37, 103, 107, 123, 124, 130, 131, 186, 194, 203, 302], "filesystem": [31, 389], "ted2nest": [32, 366], "drawn": [33, 34, 182, 261, 267, 271, 375, 385, 386], "heterogen": [33, 34, 116, 125, 126, 196, 231, 232, 373, 374], "thrown": [34, 37, 103, 107, 123, 124, 130, 131, 194, 389], "nvec": [35, 36], "remove_singleton": 35, "cardin": [35, 36, 216, 241, 259, 260, 269, 375], "ax": [35, 233, 234, 385], "m": [35, 37, 103, 107, 123, 124, 130, 131, 153, 194, 271, 368, 374, 387], "multionehotdiscretetensorspec": [35, 285, 288, 289, 311, 366], "neither": [35, 36, 67, 387], "use_regist": [36, 40], "to_categor": [36, 40], "to_categorical_spec": [36, 40], "multidiscretetensorspec": [36, 366], "gamma": [37, 173, 194, 228, 281, 282, 284, 285, 287, 289, 290, 291, 293, 295, 297, 299, 300, 301, 302, 304, 305, 306, 307, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 360, 369, 373, 374, 375, 385, 386, 391], "sutton": [37, 369, 385, 386], "1988": 37, "tempor": [37, 221, 225, 228, 314, 315, 320, 321], "44": [37, 373, 374, 376, 387, 388], "discount": [37, 67, 104, 173, 194, 282, 287, 290, 291, 293, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 369, 374, 375, 385, 386], "ahead": [37, 194, 392], "bias": [37, 219, 220, 223, 224, 277, 369, 373], "mitig": 37, "pleas": [37, 65, 103, 106, 107, 123, 124, 125, 126, 130, 131, 143, 146, 183, 186, 194, 302, 367], "multisteptransform": [37, 366], "99": [37, 173, 192, 228, 293, 307, 312, 319, 360, 373, 374, 375, 379, 382, 385, 386, 387, 391], "add_modul": [37, 103, 107, 123, 124, 130, 131, 194], "child": [37, 103, 107, 123, 124, 130, 131, 194, 374], "fn": [37, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 194, 235, 362, 363], "init_weight": [37, 103, 107, 123, 124, 130, 131, 194], "fill_": [37, 103, 107, 123, 124, 130, 131, 194, 374, 376, 392], "net": [37, 103, 107, 123, 124, 130, 131, 194, 210, 212, 215, 218, 232, 281, 282, 289, 295, 299, 300, 301, 302, 360, 374, 387, 388, 391], "in_featur": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 206, 207, 209, 210, 211, 212, 218, 226, 231, 232, 233, 234, 253, 270, 278, 285, 287, 378, 379, 391], "out_featur": [37, 103, 107, 119, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 205, 206, 207, 209, 210, 211, 212, 217, 218, 221, 225, 226, 228, 231, 232, 233, 234, 253, 259, 270, 278, 285, 287, 368, 373, 376, 378, 379, 382, 391], "bia": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 206, 207, 209, 210, 211, 212, 217, 218, 219, 220, 221, 223, 224, 225, 226, 232, 233, 234, 235, 261, 262, 265, 266, 270, 277, 279, 280, 297, 302, 369, 373, 374, 375, 376, 386, 391], "requires_grad": [37, 99, 100, 103, 107, 123, 124, 130, 131, 162, 186, 194, 302], "bfloat16": [37, 103, 107, 123, 124, 130, 131, 194], "datatyp": [37, 103, 107, 123, 124, 130, 131, 194, 389], "member": [37, 103, 107, 123, 124, 130, 131, 194, 297, 333], "xdoctest": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 297, 302], "buf": [37, 103, 107, 123, 124, 130, 131, 194], "20l": [37, 103, 107, 123, 124, 130, 131, 194, 297], "1l": [37, 103, 107, 123, 124, 130, 131, 194, 297], "5l": [37, 103, 107, 123, 124, 130, 131, 194, 297], "__call__": [37, 44, 103, 107, 123, 124, 130, 131, 194, 271, 370, 392], "doubl": [37, 55, 103, 107, 123, 124, 130, 131, 150, 151, 152, 154, 168, 182, 185, 186, 188, 190, 194, 270, 285, 290, 294, 300, 303, 311, 373, 374, 375, 376, 392], "eval": [37, 103, 107, 123, 124, 130, 131, 186, 192, 194, 373, 374, 375], "evalu": [37, 103, 107, 117, 118, 123, 124, 130, 131, 186, 194, 214, 229, 230, 238, 248, 300, 355, 356, 374, 375, 382], "dropout": [37, 103, 107, 123, 124, 130, 131, 186, 194, 219, 221, 223, 225, 226, 376], "batchnorm": [37, 103, 107, 123, 124, 130, 131, 186, 194], "comparison": [37, 103, 107, 123, 124, 130, 131, 186, 194, 297, 373, 374], "similar": [37, 41, 43, 45, 46, 67, 103, 107, 123, 124, 125, 126, 130, 131, 150, 168, 182, 185, 186, 188, 189, 190, 192, 194, 253, 255, 267, 270, 271, 369, 373, 374, 375, 376, 378, 379, 380, 381, 387, 389, 392], "extra_repr": [37, 103, 107, 123, 124, 130, 131, 194], "nontermin": 37, "original_reward": 37, "newli": [37, 103, 107, 123, 124, 130, 131], "OR": 37, "get_buff": [37, 103, 107, 123, 124, 130, 131, 194], "get_submodul": [37, 103, 107, 123, 124, 130, 131, 194], "qualifi": [37, 103, 107, 123, 124, 130, 131, 194], "referenc": [37, 103, 107, 123, 124, 130, 131, 194], "attributeerror": [37, 103, 107, 123, 124, 130, 131, 194, 385], "resolv": [37, 103, 107, 123, 124, 130, 131, 194], "someth": [37, 103, 107, 116, 123, 124, 130, 131, 194, 367, 374, 375, 387, 392], "get_extra_st": [37, 103, 107, 123, 124, 130, 131, 192, 194], "set_extra_st": [37, 103, 107, 123, 124, 130, 131, 192, 194], "picklabl": [37, 103, 107, 123, 124, 130, 131, 192, 194], "pickl": [37, 103, 107, 123, 124, 130, 131, 192, 194], "get_paramet": [37, 103, 107, 123, 124, 130, 131, 194], "net_b": [37, 103, 107, 123, 124, 130, 131, 194], "net_c": [37, 103, 107, 123, 124, 130, 131, 194], "conv": [37, 103, 107, 123, 124, 130, 131, 194, 206, 207, 374], "conv2d": [37, 103, 107, 123, 124, 130, 131, 194, 207, 209, 210, 218, 231, 391], "kernel_s": [37, 103, 107, 123, 124, 130, 131, 194, 206, 207, 209, 210, 218, 231, 236, 374, 391], "diagram": [37, 103, 107, 123, 124, 130, 131, 194], "degre": [37, 103, 107, 123, 124, 130, 131, 194], "named_modul": [37, 103, 107, 123, 124, 130, 131, 194], "o": [37, 103, 107, 123, 124, 130, 131, 194, 224], "half": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 373], "ipu": [37, 103, 107, 123, 124, 130, 131, 194], "strict": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 194, 302], "descend": [37, 103, 107, 123, 124, 130, 131, 186, 194, 302], "get_swap_module_params_on_convers": [37, 103, 107, 123, 124, 130, 131, 186, 194, 302], "enforc": [37, 86, 103, 107, 123, 124, 130, 131, 186, 194, 272, 302, 387], "preserv": [37, 103, 107, 123, 124, 130, 131, 186, 194, 302], "missing_kei": [37, 103, 107, 123, 124, 130, 131, 186, 194, 302], "unexpected_kei": [37, 103, 107, 123, 124, 130, 131, 186, 194, 302], "namedtupl": [37, 103, 107, 123, 124, 130, 131, 186, 194, 302], "l": [37, 103, 107, 123, 124, 130, 131, 194, 219, 223, 312, 375, 387], "idx": [37, 103, 107, 123, 124, 130, 131, 194], "named_buff": [37, 103, 107, 123, 124, 130, 131, 194], "remove_dupl": [37, 103, 107, 123, 124, 130, 131, 194, 297], "prepend": [37, 103, 107, 123, 124, 130, 131, 194, 297], "running_var": [37, 103, 107, 123, 124, 130, 131, 194], "named_children": [37, 103, 107, 123, 124, 130, 131, 194], "conv4": [37, 103, 107, 123, 124, 130, 131, 194], "conv5": [37, 103, 107, 123, 124, 130, 131, 194], "memo": [37, 103, 107, 123, 124, 130, 131, 194], "named_paramet": [37, 103, 107, 123, 124, 130, 131, 162, 194, 297], "register_backward_hook": [37, 103, 107, 123, 124, 130, 131, 194], "removablehandl": [37, 103, 107, 123, 124, 130, 131, 194], "favor": [37, 103, 107, 123, 124, 130, 131, 194, 375], "register_full_backward_hook": [37, 103, 107, 123, 124, 130, 131, 194], "register_buff": [37, 103, 107, 123, 124, 130, 131, 194], "running_mean": [37, 103, 107, 123, 124, 130, 131, 194], "alongsid": [37, 103, 107, 123, 124, 130, 131, 194, 381], "num_featur": [37, 103, 107, 123, 124, 130, 131, 194], "register_forward_hook": [37, 103, 107, 123, 124, 130, 131, 194, 216, 241], "with_kwarg": [37, 103, 107, 123, 124, 130, 131, 194], "always_cal": [37, 103, 107, 123, 124, 130, 131, 194], "register_module_forward_hook": [37, 103, 107, 123, 124, 130, 131, 194], "regardless": [37, 103, 107, 123, 124, 130, 131, 194, 283, 296, 299], "register_forward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "invok": [37, 103, 107, 123, 124, 130, 131, 194], "And": [37, 103, 107, 123, 124, 130, 131, 194, 379], "forward_pr": [37, 103, 107, 123, 124, 130, 131, 194], "register_module_forward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "grad_input": [37, 103, 107, 123, 124, 130, 131, 194], "grad_output": [37, 103, 107, 123, 124, 130, 131, 194], "subsequ": [37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 142, 194, 376, 385], "technic": [37, 103, 107, 123, 124, 130, 131, 194, 374, 376, 378], "caller": [37, 103, 107, 123, 124, 130, 131, 194], "register_module_full_backward_hook": [37, 103, 107, 123, 124, 130, 131, 194], "register_full_backward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "backward_pr": [37, 103, 107, 123, 124, 130, 131, 194], "register_module_full_backward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "register_load_state_dict_post_hook": [37, 103, 107, 123, 124, 130, 131, 194], "incompatible_kei": [37, 103, 107, 123, 124, 130, 131, 194], "register_modul": [37, 103, 107, 123, 124, 130, 131, 194, 370], "alia": [37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 107, 123, 124, 130, 131, 194], "register_paramet": [37, 103, 107, 123, 124, 130, 131, 194], "register_state_dict_pre_hook": [37, 103, 107, 123, 124, 130, 131, 194], "keep_var": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 186, 194, 302], "requires_grad_": [37, 103, 107, 123, 124, 130, 131, 194], "autograd": [37, 103, 107, 123, 124, 130, 131, 186, 194, 302], "freez": [37, 103, 107, 123, 124, 130, 131, 192, 194], "finetun": [37, 103, 107, 123, 124, 130, 131, 194], "gan": [37, 103, 107, 123, 124, 130, 131, 194], "set_submodul": [37, 103, 107, 123, 124, 130, 131, 194], "overid": [37, 103, 107, 123, 124, 130, 131, 194], "share_memori": [37, 103, 104, 107, 123, 124, 130, 131, 194, 373], "share_memory_": [37, 103, 107, 123, 124, 130, 131, 194, 391], "destin": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 145, 151, 152, 154, 186, 188, 192, 194, 203, 302, 333], "averag": [37, 103, 107, 123, 124, 130, 131, 186, 192, 194, 265, 266, 291, 292, 302, 348, 373, 375], "shallow": [37, 103, 107, 123, 124, 130, 131, 186, 194, 302, 376], "detach": [37, 103, 107, 123, 124, 130, 131, 186, 194, 297, 302, 304, 313, 314, 315, 316, 373], "non_block": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 376], "memory_format": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "channels_last": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "unchang": [37, 103, 107, 123, 124, 130, 131, 150, 153, 168, 182, 185, 186, 188, 190, 194, 261, 270, 347, 373, 389], "tri": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 381], "pin": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "4d": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "ignore_w": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "1913": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "3420": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "5113": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "2325": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "torch_doctest_cuda1": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "gpu1": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "1914": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "5112": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 387], "2324": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "float16": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 220, 224, 270], "cdoubl": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "3741": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "j": [37, 42, 79, 80, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 370, 379], "2382": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "5593": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270, 387], "4443": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "complex128": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "6122": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "1150": [37, 103, 107, 123, 124, 130, 131, 150, 168, 182, 185, 186, 188, 190, 194, 270], "to_empti": [37, 103, 107, 123, 124, 130, 131, 194], "dst_type": [37, 103, 107, 123, 124, 130, 131, 194], "xpu": [37, 103, 107, 123, 124, 130, 131, 194], "set_to_non": [37, 103, 107, 123, 124, 130, 131, 194], "row": [38, 49, 112, 113], "unidimension": 40, "keepdim": 40, "user_regist": 40, "priori": 40, "uniqu": [40, 87, 88, 117, 118, 146, 155, 181, 182, 183, 264, 340, 380, 389], "discretebox": [40, 103, 107, 123, 124, 130, 131, 378, 385, 386, 392], "chosen_data": [41, 70], "rewarddata": [41, 70, 366], "rejected_data": [41, 70], "from_dataset": [41, 43, 70], "dataset_nam": [41, 43, 47, 54, 70, 122], "max_length": [41, 43, 44, 52, 54, 70, 382], "550": [41, 43, 47, 54, 70, 87, 88, 387], "root_dir": [41, 43, 54, 70], "from_disk": [41, 43, 54, 70], "carperai": [41, 43, 47, 54], "openai_summarize_comparison": [41, 43, 54], "sequen": [41, 43], "load_from_disk": [41, 43, 54, 70], "load_dataset": [41, 43, 54, 70], "attention_mask": [41, 43, 44, 46, 47, 52, 54, 70], "92534": 41, "input_id": [41, 43, 44, 46, 47, 52, 54, 70], "end_scor": [41, 46, 47, 70], "sub_data": [41, 43], "from_tensordict": [41, 43, 46], "non_tensordict": [41, 43, 46], "_nodefault": [41, 43, 46], "getattr": [41, 43, 46, 385], "tensorclass": [41, 43, 46, 70, 74, 75, 95], "proxi": [41, 43, 46, 230, 238, 267, 369], "load_memmap": [41, 43, 46], "load_": [41, 43, 46], "load_memmap_": [41, 43, 46], "fetch": [41, 43, 46, 99, 100, 101, 102, 162, 378, 388, 389], "fromkei": [41, 43, 46], "memmap": [41, 43, 46, 74, 123, 130, 192, 333, 335, 347, 389], "saved_td": [41, 43, 46], "td_load": [41, 43, 46], "fake": [41, 43, 46, 103, 107, 123, 124, 130, 131, 373, 374], "_subclass": [41, 43, 46], "faketensormod": [41, 43, 46], "faketensor": [41, 43, 46], "from_flatten": [41, 43, 46], "attemptedli": [41, 43, 46], "copy_exist": [41, 43, 46], "return_earli": [41, 43, 46], "share_non_tensor": [41, 43, 46], "mimic": [41, 43, 46, 103, 107, 123, 124, 130, 131], "cross": [41, 43, 46, 205], "anymor": [41, 43, 46, 186, 270], "tensordictfutur": [41, 43, 46], "deepli": [41, 43, 46], "insid": [41, 43, 46, 123, 392], "memmap_": [41, 43, 46, 192], "memmap_lik": [41, 43, 46], "contentless": [41, 43, 46], "1_000_000": [41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 373, 376, 385], "alloc": [41, 43, 46, 75, 229, 230, 373], "memmap_refresh_": [41, 43, 46], "refresh": [41, 43, 46, 382, 385, 386], "saved_path": [41, 43, 46], "setattr": [41, 43, 46], "tent": [41, 43, 46, 54], "to_tensordict": [41, 43, 46, 376], "unbind": [41, 42, 43, 45, 46, 50, 51, 221, 225], "alpha": [42, 50, 79, 80, 206, 207, 209, 210, 211, 212, 218, 231, 282, 289, 298, 300, 302, 304, 373, 389, 391], "ep": [42, 50, 79, 80, 164, 192, 265, 266, 283, 303, 348, 373, 374, 376, 379, 382], "1e": [42, 50, 79, 80, 164, 192, 214, 217, 235, 246, 373, 374, 375, 386], "08": [42, 50, 79, 80, 373, 374, 375, 386, 387], "pin_memori": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 167, 373, 391], "schaul": [42, 79, 80], "quan": [42, 79, 80], "antonogl": [42, 79, 80], "silver": [42, 79, 80], "2015": [42, 79, 80], "ab": [42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 127, 132, 133, 145, 168, 188, 192, 208, 213, 217, 218, 223, 228, 234, 236, 237, 240, 242, 243, 249, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 298, 299, 302, 388], "1511": [42, 79, 80, 218], "05952": [42, 79, 80], "expon": [42, 50, 79, 80], "\u03b1": [42, 50, 79, 80], "delta": [42, 50, 79, 80, 219, 223, 246, 267, 271, 366, 369, 385], "null": [42, 50, 79, 80, 144], "1_000": [42, 45, 50, 51, 385, 389], "merg": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 387], "mini": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 386], "decid": [42, 45, 50, 51, 385, 391], "meth": [42, 45, 50, 51, 297, 387], "incompat": [42, 45, 50, 51, 301, 389], "drop_last": [42, 45, 50, 51, 86, 88], "notion": [42, 45, 50, 51], "caution": [42, 45, 50, 51, 86, 196, 392], "codebas": [42, 45, 50, 51, 387], "approach": [42, 45, 50, 51, 164, 304, 373, 375, 379, 380, 385, 392], "return_info": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 389], "tensordictprioritizedreplaybuff": [42, 366, 391], "simplifi": [42, 378, 387, 389], "_weight": [42, 50, 79, 80, 389, 391], "arrai": [42, 47, 79, 103, 107, 123, 124, 130, 131, 155, 219, 220, 223, 224, 373, 385, 389], "update_prior": [42, 79, 80, 347, 370, 374, 389, 391], "36278465": 42, "invert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 279, 375], "tqdm": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 350, 373, 375, 376, 385, 386, 387], "randomsampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 373, 385], "td_error": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 284, 285, 287, 288, 289, 290, 295, 297, 300, 302, 304, 305, 311, 373, 379, 389, 391], "update_tensordict_prior": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 373, 389, 391], "insert_transform": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 141, 186], "insert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 82, 83, 93, 94, 97, 98, 141, 150, 186, 187], "set_sampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_storag": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_writ": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "prompt_rindex": [43, 44, 47], "promptdatatldr": 43, "116722": 43, "prompt": [44, 47], "return_tensordict": [44, 52], "recip": [44, 103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277], "text": [44, 47, 52, 65, 219, 220, 223, 224, 265, 266, 375], "tensodict": [44, 52], "orign": [44, 52], "valid_sampl": 44, "eough": 44, "toknen": 44, "meet": 44, "criterion": 44, "autotoken": [44, 52, 54], "from_pretrain": [44, 47, 52], "gpt2": [44, 47, 52, 54, 208, 213, 239], "pad_token": [44, 52], "eos_token": 44, "enough": [44, 389], "inde": [44, 153, 375, 387], "storagecheckpointerbas": [45, 89], "roundrobinwrit": [45, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "Not": [45, 99, 100, 112], "depth": [45, 103, 107, 119, 123, 124, 127, 130, 131, 205, 206, 207, 209, 210, 211, 212, 217, 218, 226, 228, 231, 232, 236, 237, 259, 368, 374, 377, 379, 380, 384, 385, 386, 389], "_pytre": [45, 389], "tree_map": [45, 389], "did": [45, 191, 319, 374, 375, 380, 389, 392], "assert0": [45, 389], "ref_model": 47, "reward_model": [47, 276], "max_new_token": 47, "score_clip": 47, "kl_schedul": 47, "klcontrollerbas": 47, "num_step": 47, "causal": 47, "sentenc": 47, "frozen": [47, 162, 192], "gpt2rewardmodel": 47, "get_dataload": [47, 366], "promptdata": [47, 366], "gpt2lmheadmodel": 47, "dl": 47, "block_siz": [47, 70], "tensorclass_typ": [47, 70], "openai_summarize_tldr": 47, "config_class": 47, "model_path": 47, "rollout_from_model": 47, "rollout_from_data": 47, "600": [47, 381, 387, 389], "reward_kl": [47, 162], "reward_raw": 47, "sample_log_prob": [47, 253, 254, 255, 267, 271, 273, 299, 375, 378, 386, 391], "create_rollout_td": 47, "log_prob": [47, 214, 229, 230, 238, 248, 271], "log_ratio": 47, "replic": 47, "rindex": 47, "eo": 47, "term": [47, 162, 223, 224, 233, 234, 280, 281, 289, 352, 374, 375, 377, 378, 386], "generation_config": 47, "generationconfig": 47, "ti": [47, 322, 323, 324, 325, 327, 328, 329, 330, 374], "log_probs_gen": 47, "logprobs_of_label": 47, "220": [48, 387], "priority_kei": [50, 51, 62, 79, 285, 288, 289, 290, 295, 297, 300, 302, 304, 305, 311, 389, 391], "reduct": [50, 79, 80, 93, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 298, 299, 300, 301, 302, 304, 305], "prioritizedreplaybuff": [50, 366, 391], "min": [50, 79, 80, 93, 247, 248, 265, 266, 282, 283, 289, 298, 300, 302, 374, 375], "median": [50, 79, 80, 93, 112, 113, 139, 267, 271], "include_info": [50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "huggingfac": [52, 64, 69, 263], "co": [52, 155, 387], "pad_trunc": 52, "am": 52, "me": 52, "reassur": 52, "ok": 52, "tokenizer_fn": 54, "tensordicttoken": [54, 366], "pre_tokenization_hook": 54, "valid_s": 54, "tokenizer_class": 54, "tokenizer_model_nam": 54, "tokein": 54, "elementwis": 54, "vocabulari": 54, "loader": [54, 375], "185068": 54, "dataset_to_tensordict": 54, "data_dir": 54, "batch_dim": [54, 364], "valid_mask_kei": 54, "conver": 54, "batch_dimens": 54, "filder": 54, "from_dict": 54, "data_memmap": 54, "recurse_through_entri": 58, "recurse_through_stack": 58, "consolid": 58, "dataset_id": [61, 63, 64, 65, 67, 68, 69], "num_proc": 61, "slice_len": [61, 67, 80, 87, 88, 333], "strict_len": 61, "arari": 61, "2600": 61, "million": [61, 376], "consequ": [61, 72, 223, 380], "50x10": 61, "available_dataset": [61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88], "ataridqn": 61, "immutabledatasetwrit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "shorter": [61, 67, 80, 87, 88], "Be": [61, 67, 80, 87, 88], "game_nam": 61, "krull": 61, "1d": [61, 79, 80, 87, 88, 93], "cheapli": 61, "nontensordata": [61, 67, 331], "invalid_rang": 61, "999998": 61, "999999": 61, "add_count": 61, "84": [61, 172, 373, 374, 376, 387, 388], "valueestim": [61, 281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 307, 311, 366, 369, 373, 385, 386], "convolut": [61, 206, 207, 209, 210, 231, 244, 378], "2657628": 61, "2657629": 61, "2657630": 61, "2657631": 61, "2657632": 61, "2657633": 61, "2657634": 61, "2657635": 61, "2657636": 61, "2657637": 61, "2657638": 61, "2657639": 61, "2657640": 61, "2657641": 61, "2657642": 61, "2657643": 61, "2657644": 61, "2657645": 61, "2657646": 61, "2657647": 61, "2657648": 61, "2657649": 61, "2657650": 61, "2657651": 61, "2657652": 61, "2657653": 61, "2657654": 61, "2657655": 61, "2657656": 61, "2657657": 61, "2657658": 61, "2657659": 61, "2657660": 61, "2657661": 61, "2657662": 61, "2657663": 61, "2657664": 61, "2657665": 61, "2657666": 61, "2657667": 61, "2657668": 61, "2657669": 61, "2657670": 61, "2657671": 61, "2657672": 61, "2657673": 61, "2657674": 61, "2657675": 61, "2657676": 61, "2657677": 61, "2657678": 61, "2657679": 61, "2657680": 61, "2657681": 61, "2657682": 61, "2657683": 61, "2657684": 61, "2657685": 61, "2657686": 61, "2657687": 61, "2657688": 61, "2657689": 61, "2657690": 61, "2657691": 61, "1995687": 61, "1995688": 61, "1995689": 61, "1995690": 61, "1995691": 61, "1995692": 61, "1995693": 61, "1995694": 61, "1995695": 61, "1995696": 61, "1995697": 61, "1995698": 61, "1995699": 61, "1995700": 61, "1995701": 61, "1995702": 61, "1995703": 61, "1995704": 61, "1995705": 61, "1995706": 61, "1995707": 61, "1995708": 61, "1995709": 61, "1995710": 61, "1995711": 61, "1995712": 61, "1995713": 61, "1995714": 61, "1995715": 61, "1995716": 61, "1995717": 61, "1995718": 61, "1995719": 61, "1995720": 61, "1995721": 61, "1995722": 61, "1995723": 61, "1995724": 61, "1995725": 61, "1995726": 61, "1995727": 61, "1995728": 61, "1995729": 61, "1995730": 61, "1995731": 61, "1995732": 61, "1995733": 61, "1995734": 61, "1995735": 61, "1995736": 61, "1995737": 61, "1995738": 61, "1995739": 61, "1995740": 61, "1995741": 61, "1995742": 61, "1995743": 61, "1995744": 61, "1995745": 61, "1995746": 61, "1995747": 61, "1995748": 61, "1995749": 61, "1995750": 61, "left": [61, 63, 67, 80, 87, 143, 150, 151, 152, 156, 162, 168, 170, 171, 177, 180, 183, 185, 188, 190, 194, 231, 261, 374, 375, 380, 381], "untouch": [61, 67, 143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 194], "_max_run": 61, "dataset_asterix": 61, "asterix": 61, "dataset_pong": 61, "sample_from_al": [61, 82, 85], "buffer_id": [61, 85, 91], "hidden": [61, 123, 130, 145, 209, 217, 219, 220, 221, 223, 224, 225, 236, 237, 242, 243, 253, 254, 255, 258, 270, 273, 283, 296, 299, 368, 376, 384, 391], "data_path": [61, 62, 63, 64, 65, 66, 67, 68, 69], "data_path_root": [61, 62, 63, 64, 65, 66, 67, 68, 69], "delet": [61, 62, 63, 64, 65, 66, 67, 68, 69, 147, 340], "chunksiz": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pool": [61, 62, 63, 64, 65, 66, 67, 68, 69, 183], "max_tasks_per_child": [61, 62, 63, 64, 65, 66, 67, 68, 69], "worker_thread": [61, 62, 63, 64, 65, 66, 67, 68, 69], "index_with_gener": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pbar": [61, 62, 63, 64, 65, 66, 67, 68, 69, 373, 375, 376, 385, 386, 387], "dest": [61, 62, 63, 64, 65, 66, 67, 68, 69, 168, 188, 190, 270], "num_fram": [61, 62, 63, 64, 65, 66, 67, 68, 69], "unitari": [61, 62, 63, 64, 65, 66, 67, 68, 69, 387], "minariexperiencereplai": [61, 62, 63, 64, 66, 67, 68, 69], "1000000": [61, 62, 63, 64, 65, 66, 67, 68, 69], "distance_from_origin": [61, 62, 63, 64, 65, 66, 67, 68, 69], "forward_reward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qpo": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qvel": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_ctrl": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "reward_forward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_surv": [61, 62, 63, 64, 65, 66, 67, 68, 69], "x_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "x_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "y_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "y_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69], "achieved_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "desired_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "27": [61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 100, 123, 130, 372, 373, 374, 375, 386, 387, 390], "_collate_id": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x120e21dc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cattensor": [61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 373, 384, 387, 392], "cat_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cat_next_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "new_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "31": [61, 62, 63, 64, 65, 66, 67, 68, 69, 112, 113, 373, 374, 375, 387, 388], "full_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x168406fc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "from_env": 63, "use_truncated_as_don": 63, "direct_download": 63, "terminate_on_end": 63, "env_kwarg": [63, 68, 69, 143, 362, 363, 373], "reconstruct": [63, 87, 88, 292, 373, 392], "get_dataset": 63, "qlearning_dataset": 63, "fewer": [63, 80, 87], "possess": 63, "unexpectedli": 63, "traj_split": 63, "observationnorm": [63, 192, 364, 373, 374, 375, 376, 391], "maze2d": 63, "umaz": 63, "loc": [63, 103, 107, 123, 124, 130, 131, 162, 164, 175, 192, 222, 235, 247, 248, 253, 254, 255, 267, 271, 273, 281, 282, 295, 299, 300, 301, 302, 354, 364, 368, 373, 374, 375, 376, 378, 386, 391], "gen": 64, "dgrl": 64, "accompani": [64, 143, 180], "gap": 64, "2312": 64, "05742": 64, "gen_dgrl": 64, "procgen": 64, "bigfish": 64, "bossfight": 64, "categori": [64, 368, 370], "1m_e": 64, "1m_": 64, "comma": 64, "npy": 64, "extract": [64, 142, 263, 373, 375, 391], "mmap": [64, 68, 69], "minut": [64, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "internet": [64, 69], "connect": [64, 69], "minari": 65, "websit": [65, 67], "currenrtli": 65, "minari_data": 65, "door": 65, "torchrl_logg": [65, 382], "28": [65, 231, 374, 387], "door_body_po": 65, "dua": 66, "graff": 66, "2017": 66, "uci": 66, "archiv": 66, "ic": 66, "edu": 66, "ml": 66, "sklearn": [66, 122], "adult_num": [66, 122], "adult_onehot": [66, 122], "mushroom_num": [66, 122], "mushroom_onehot": [66, 122], "covertyp": [66, 122], "shuttl": [66, 122], "magic": [66, 122, 377], "shuffl": [67, 86, 88, 386], "embodi": [67, 388], "institut": 67, "demonstr": [67, 375, 380, 385, 386, 387, 389, 392], "527": [67, 387], "skill": 67, "160266": 67, "googl": [67, 68, 99, 100, 117, 118, 375, 376, 385, 386], "open_x_embodi": 67, "2310": [67, 127], "08864": 67, "language_instruct": 67, "get_non_tensor": 67, "nor": 67, "insuffici": 67, "chosen": [67, 132, 133, 181, 182, 240, 241, 249, 269, 333, 368, 381], "openx": 67, "__will": 67, "change__": 67, "randomli": [67, 86, 131, 163, 164, 182, 261, 267, 271, 378, 385, 386, 387, 389], "crop": [67, 148, 169, 333], "modal": [67, 373], "cmu_stretch": [67, 333], "is_init": [67, 69, 145, 161, 221, 225, 264, 265, 266, 278, 376], "language_embed": 67, "512": [67, 218, 374, 387], "lift": 67, "green": [67, 385], "garbag": 67, "lid": 67, "roboset": 68, "h5": [68, 69, 72], "roboh": [68, 127], "concis": [68, 379], "75": [68, 373, 374, 376, 387, 388], "totensor": 69, "image_s": 69, "v": [69, 192, 219, 220, 223, 224, 253, 288, 295, 302, 368, 373, 374], "npz": 69, "2206": [69, 120, 121], "04779": [69, 282, 287], "vd4rl": 69, "squar": [69, 148, 222, 247, 248, 333], "rectangular": [69, 206, 207], "walker_walk": 69, "64px": 69, "height": [69, 148, 172], "veloc": [69, 101, 102, 103, 107, 123, 124, 130, 131, 146, 385, 386, 387, 392], "infinit": [70, 117, 118, 132, 133, 380, 389], "block": [70, 73, 98, 368, 376, 385], "pairwisedataset": [70, 366], "256": [70, 117, 118, 213, 374, 375, 385, 386, 387], "checkpoint_fil": 72, "h5_kwarg": 72, "iff": 72, "suffix": [72, 346], "h5py": 72, "create_dataset": 72, "temporarili": [72, 196, 380, 389], "immut": [73, 103, 107, 123, 130, 171, 186], "piec": [73, 83, 94, 97, 98, 373, 374, 375, 381, 385, 386, 387, 389], "scratch_dir": [74, 373, 389], "sent": [74, 75, 95, 192], "mistak": [74, 75, 95], "myclass": [74, 75, 95], "foo": [74, 75, 95, 258, 389, 392], "bar": [74, 75, 95, 258, 343, 344, 346, 350, 370, 374], "attach": [74, 75, 76, 89, 91, 95, 374], "entiti": [74, 75, 76, 89, 91, 95], "zero_": [75, 95, 200], "liststoag": 77, "max_capac": [79, 80, 373, 389], "max_priority_within_buff": [79, 80], "data_0": 79, "data_1": 79, "smoothen": 79, "tdrb": 79, "pack": [79, 219, 223, 375, 377, 392], "nd": [79, 80], "sum_tre": [79, 80], "min_tre": [79, 80], "end_kei": [80, 87, 88], "cache_valu": [80, 87, 88], "closer": 80, "readili": [80, 87, 88], "conjunct": [80, 87, 88, 374], "Will": [80, 87, 120, 333], "buffer0": [80, 87], "immutablewrit": [80, 87], "buffer1": [80, 87], "other_sampl": [80, 87], "short": [80, 87, 88, 99, 100, 112, 113, 123, 196, 223, 224, 374, 375, 377, 378, 386, 389], "unsqueez": [80, 140, 143, 146, 147, 184, 187, 200, 373, 376, 385, 386, 387], "tolist": 80, "120110917137936e": 80, "06": [80, 214, 246, 373, 374, 375, 386, 387], "uniformli": [81, 297, 392], "storageensembl": [82, 85], "samplerensembl": 82, "writerensembl": [82, 91], "num_buffer_sampl": [82, 85], "ensembl": [82, 85, 91, 92, 98, 270, 300], "forbidden": 82, "collat": 82, "0x13a2ef430": 82, "0x13a2f9310": 82, "interpol": [82, 172, 374, 376], "interpolationmod": [82, 376], "bilinear": [82, 172, 376], "0x13a2f9220": 82, "0x13a2f9f70": 82, "0x13a2d9b50": 82, "0x13a2f95b0": 82, "0x128648260": 82, "kw": [83, 94], "roundrobin": [83, 94], "incomplet": [86, 88], "fresh": 86, "haven": [86, 388], "remain": [86, 145, 152, 153, 162, 181, 234, 379], "draw": [86, 261], "slicesamplerwithoutreplac": [87, 389], "320": [87, 88, 101, 102, 372, 374, 387, 390], "700": [87, 88], "dataid": [87, 88], "__len__": 89, "rank_kei": 93, "rank": [93, 205], "samplerwithoutreplac": [93, 375, 386, 389], "get_insert_index": 93, "convers": [99, 100, 112, 113, 369], "2106": [99, 100, 286, 304], "13281": [99, 100], "categorical_action_encod": [99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131], "frame_skip": [99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 120, 121, 127, 159, 343, 346, 353, 370, 373, 374, 375, 391], "repeat": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 205, 375, 385, 386, 387], "allow_done_after_reset": [99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 127], "toler": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 214, 246], "availalb": [99, 100, 112, 113], "ant": [99, 100, 103, 107, 110, 123, 124, 130, 131, 388, 392], "87": [99, 100, 373, 374, 386, 387], "acrobot": [99, 100, 101, 102, 392], "advant": [99, 100, 112, 113], "timer": [99, 100, 112, 113], "timeit": [99, 100, 112, 113], "310": [99, 100, 387], "ms": [99, 100, 112, 113], "268": [99, 100, 387], "433": [99, 100, 387], "80": [99, 100, 373, 374, 375, 386, 387], "213": [99, 100, 387], "8605": [99, 100], "pipelineenv": 100, "get_environ": 100, "dm_control": [101, 102, 373, 384, 392], "2006": [101, 102, 282, 287, 387], "12983": [101, 102], "task_nam": [101, 103, 107, 123, 124, 130, 131], "cheetah": [101, 102, 103, 107, 123, 124, 130, 131, 333, 373], "240": [101, 102, 387, 391], "swingup": [101, 102, 392], "swingup_spars": [101, 102], "ball_in_cup": [101, 102], "catch": [101, 102], "balance_spars": [101, 102], "three_pol": [101, 102], "two_pol": [101, 102], "finger": [101, 102], "turn_easi": [101, 102], "turn_hard": [101, 102], "fish": [101, 102], "upright": [101, 102, 374], "swim": [101, 102], "hopper": [101, 102], "hop": [101, 102], "humanoid": [101, 102, 123, 130, 384], "walk": [101, 102, 123, 130, 374, 384], "run_pure_st": [101, 102], "bring_bal": [101, 102], "bring_peg": [101, 102], "insert_bal": [101, 102], "insert_peg": [101, 102], "point_mass": [101, 102], "reacher": [101, 102], "swimmer": [101, 102], "swimmer6": [101, 102], "swimmer15": [101, 102], "walker": [101, 102], "dog": [101, 102], "trot": [101, 102], "humanoid_cmu": [101, 102], "lqr": [101, 102], "lqr_2_1": [101, 102], "lqr_6_2": [101, 102], "quadrup": [101, 102], "escap": [101, 102], "stacker": [101, 102], "stack_2": [101, 102], "stack_4": [101, 102], "deviceless": 103, "run_type_check": [103, 119], "counterenv": 103, "continuousbox": [103, 107, 123, 124, 130, 131, 200, 375, 385, 386, 387, 391, 392], "sort": [103, 107, 123, 124, 130, 131, 147, 265, 266], "another_act": [103, 107, 123, 124, 130, 131], "mutabl": [103, 107, 123, 124, 130, 131], "_callabletransform": [103, 107, 123, 124, 130, 131], "batch_lock": [103, 105, 107, 123, 130, 143, 182, 186, 387], "done_keys_group": [103, 107, 123, 124, 130, 131], "outer": [103, 107, 123, 124, 130, 131, 370, 373, 374, 392], "another_don": [103, 107, 123, 124, 130, 131], "empty_cach": [103, 107, 123, 124, 130, 131, 186], "fake_tensordict": [103, 107, 123, 124, 130, 131, 374], "silent": [103, 107, 123, 124, 130, 131, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 235, 236, 237, 239, 242, 243, 245, 250, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 277], "braxenv": [103, 107, 123, 124, 130, 131, 171, 366, 377], "envnam": [103, 107, 123, 124, 130, 131], "pipeline_st": [103, 107, 123, 124, 130, 131], "attibut": [103, 107, 123, 124, 130, 131], "maybe_reset": [103, 107, 123, 124, 130, 131], "speak": [103, 107, 123, 124, 130, 131, 373], "rand_act": [103, 107, 116, 123, 124, 125, 126, 130, 131, 143, 377], "register_gym": [103, 107, 123, 124, 130, 131, 377], "entry_point": [103, 107, 123, 124, 130, 131], "info_kei": [103, 107, 123, 124, 130, 131], "reward_threshold": [103, 107, 123, 124, 130, 131], "nondeterminist": [103, 107, 123, 124, 130, 131], "max_episode_step": [103, 106, 107, 108, 123, 124, 130, 131], "order_enforc": [103, 107, 123, 124, 130, 131], "autoreset": [103, 107, 123, 124, 130, 131], "disable_env_check": [103, 106, 107, 120, 121, 123, 124, 130, 131], "apply_api_compat": [103, 107, 123, 124, 130, 131], "nasium": [103, 107, 123, 124, 130, 131], "scope": [103, 107, 123, 124, 130, 131, 392], "dmcontrolenv": [103, 107, 123, 124, 130, 131, 333, 366, 373, 377, 384, 392], "dmc": [103, 107, 123, 124, 130, 131], "removeemptyspec": [103, 107, 123, 124, 130, 131], "threshold": [103, 107, 123, 124, 130, 131, 261, 282, 283, 375], "learnt": [103, 107, 123, 124, 130, 131, 360], "knowledg": [103, 107, 123, 124, 130, 131, 379, 381], "checker": [103, 106, 107, 120, 121, 123, 124, 130, 131], "stepapicompat": [103, 107, 123, 124, 130, 131], "concept": [103, 107, 123, 124, 130, 131, 374, 389], "deem": [103, 107, 117, 118, 123, 124, 130, 131, 132, 133], "envgym": [103, 107, 123, 124, 130, 131], "0855": [103, 107, 123, 124, 130, 131], "0215": [103, 107, 123, 124, 130, 131], "0881": [103, 107, 123, 124, 130, 131], "0412": [103, 107, 123, 124, 130, 131], "1101": [103, 107, 123, 124, 130, 131], "0080": [103, 107, 123, 124, 130, 131], "0254": [103, 107, 123, 124, 130, 131], "0424": [103, 107, 123, 124, 130, 131], "9609e": [103, 107, 123, 124, 130, 131], "9776e": [103, 107, 123, 124, 130, 131], "04": [103, 107, 111, 123, 124, 130, 131, 373, 374, 375, 387, 388], "6347e": [103, 107, 123, 124, 130, 131], "3842e": [103, 107, 123, 124, 130, 131], "5338e": [103, 107, 123, 124, 130, 131], "3064e": [103, 107, 123, 124, 130, 131], "0381e": [103, 107, 123, 124, 130, 131], "6656e": [103, 107, 123, 124, 130, 131], "05": [103, 107, 123, 124, 130, 131, 373, 374, 387, 388], "0204e": [103, 107, 123, 124, 130, 131], "action_spac": [103, 107, 123, 124, 130, 131, 155, 216, 241, 259, 260, 268, 269, 281, 282, 284, 285, 287, 288, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 376, 378, 382], "0833": [103, 107, 123, 124, 130, 131], "0275": [103, 107, 123, 124, 130, 131], "0612": [103, 107, 123, 124, 130, 131], "0770": [103, 107, 123, 124, 130, 131, 387], "1256": [103, 107, 123, 124, 130, 131, 387], "0082": [103, 107, 123, 124, 130, 131], "0186": [103, 107, 123, 124, 130, 131], "0476": [103, 107, 123, 124, 130, 131], "2221": [103, 107, 123, 124, 130, 131], "2256": [103, 107, 123, 124, 130, 131], "5930": [103, 107, 123, 124, 130, 131], "6937": [103, 107, 123, 124, 130, 131], "5865": [103, 107, 123, 124, 130, 131], "5479": [103, 107, 123, 124, 130, 131], "0187": [103, 107, 123, 124, 130, 131], "6825": [103, 107, 123, 124, 130, 131, 387], "5224": [103, 107, 123, 124, 130, 131], "0018": [103, 107, 123, 124, 130, 131, 387], "1005": [103, 107, 123, 124, 130, 131], "0335": [103, 107, 123, 124, 130, 131], "0268": [103, 107, 123, 124, 130, 131, 387], "0133": [103, 107, 123, 124, 130, 131], "0627": [103, 107, 123, 124, 130, 131], "0074": [103, 107, 123, 124, 130, 131, 387], "0488": [103, 107, 123, 124, 130, 131, 387], "0353": [103, 107, 123, 124, 130, 131], "0075": [103, 107, 123, 124, 130, 131, 387], "0069": [103, 107, 123, 124, 130, 131, 387], "0098": [103, 107, 123, 124, 130, 131, 387], "0058": [103, 107, 123, 124, 130, 131, 387], "0033": [103, 107, 123, 124, 130, 131, 387], "0157": [103, 107, 123, 124, 130, 131], "0004": [103, 107, 123, 124, 130, 131, 376, 387], "0381": [103, 107, 123, 124, 130, 131], "0452": [103, 107, 123, 124, 130, 131], "11355747": [103, 107, 123, 124, 130, 131], "04257728": [103, 107, 123, 124, 130, 131], "00408397": [103, 107, 123, 124, 130, 131], "04155852": [103, 107, 123, 124, 130, 131], "0389733": [103, 107, 123, 124, 130, 131], "01409826": [103, 107, 123, 124, 130, 131], "0978704": [103, 107, 123, 124, 130, 131], "08808327": [103, 107, 123, 124, 130, 131], "03970837": [103, 107, 123, 124, 130, 131], "00535434": [103, 107, 123, 124, 130, 131], "02353762": [103, 107, 123, 124, 130, 131], "05116226": [103, 107, 123, 124, 130, 131], "02788907": [103, 107, 123, 124, 130, 131], "06848346": [103, 107, 123, 124, 130, 131], "05154399": [103, 107, 123, 124, 130, 131], "0371798": [103, 107, 123, 124, 130, 131], "05128025": [103, 107, 123, 124, 130, 131], "dydact": [103, 107, 123, 124, 130, 131], "gym_env": [103, 107, 123, 124, 130, 131, 391], "reset_kei": [103, 107, 123, 124, 130, 131, 146, 176, 181, 182, 183, 385], "multitask": [103, 107, 123, 124, 130, 131], "multiag": [103, 107, 116, 123, 124, 125, 126, 130, 131, 204, 232, 240, 249, 311], "another_reward": [103, 107, 123, 124, 130, 131], "auto_cast_to_devic": [103, 107, 123, 124, 130, 131, 386], "soon": [103, 107, 123, 124, 125, 126, 130, 131], "__sort": [103, 107, 123, 124, 130, 131], "as__": [103, 107, 123, 124, 130, 131], "normal": [103, 107, 123, 124, 130, 131, 164, 192, 206, 207, 222, 226, 229, 230, 235, 247, 248, 256, 257, 267, 271, 283, 296, 299, 346, 348, 364, 368, 370, 376, 378, 386, 392], "argmaxmodul": [103, 107, 123, 124, 130, 131], "n_ob": [103, 107, 123, 124, 130, 131, 162, 264, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 379], "n_act": [103, 107, 123, 124, 130, 131, 162, 281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 379], "ourselv": [103, 107, 123, 124, 130, 131, 375, 392], "emul": [103, 107, 123, 124, 130, 131], "epoch": [103, 107, 123, 124, 130, 131, 350, 375, 385, 386], "input_td": [103, 107, 123, 124, 130, 131], "rollout_td": [103, 107, 123, 124, 130, 131], "state_kei": [103, 107, 123, 124, 130, 131], "prevail": [103, 107, 123, 124, 130, 131, 147, 176, 204], "creator": [104, 355, 356, 362, 363, 364], "substitut": [104, 181, 192, 378], "vecnorm": [104, 364], "env_creat": [104, 373], "test_env1": 104, "_td": 104, "observation_count": [104, 392], "test_env2": 104, "sleep": [104, 392], "ps": 104, "p1": 104, "p2": 104, "9934": 104, "env_str": 105, "device_map": 105, "accross": [106, 108], "registri": 106, "asyncvectorenv": 106, "involv": [106, 108, 109, 117, 118, 127, 143, 377, 379], "pixel_observ": [106, 108, 109, 127], "pixelobservationwrapp": [106, 108, 109, 127], "adventur": [106, 108], "airraid": [106, 108, 392], "alien": [106, 108], "time_limit": 106, "timelimit": [106, 117, 118, 132, 133], "default_info_dict_read": [106, 107, 108, 123], "reader": [106, 107, 108, 123, 374], "set_info_dict_read": [106, 107, 108, 123, 377], "info_dict": [106, 107, 108, 123], "auto_register_info_dict": [106, 107, 108, 123], "multibinari": [106, 108], "multidiscret": [106, 108], "rag": [106, 108], "gym_conversion_exampl": [106, 108], "info_dict_read": [107, 123], "ignore_priv": 107, "baseinfodictread": 107, "tensordictprim": [107, 123, 221, 225, 278, 376], "succe": [107, 123], "underscor": 107, "primer": [107, 182, 221, 225, 278, 376], "halfcheetah": [107, 123, 139, 172, 373], "reward_run": [107, 123], "read_act": 107, "read_don": 107, "nonsens": 107, "fallback": 107, "broken": [107, 196], "read_ob": 107, "dictat": [107, 267, 271, 299, 373, 387], "read_reward": 107, "hoc": [107, 123, 378], "dict_read": 107, "my_info_kei": 107, "some_env": 107, "vecenv": 108, "vectorenv": 108, "secur": 109, "habitat3": 109, "ai": [109, 388], "habitatrenderpick": 109, "isaacgym": [110, 111], "isaacgymwrapp": [110, 366], "isaacgymenv": [111, 366], "webpag": 111, "isaac": 111, "essenc": [111, 377], "instadeepai": [112, 113], "2306": [112, 113], "09884": [112, 113], "snake": [112, 113], "grid": [112, 113, 333], "bodi": [112, 113], "body_st": [112, 113], "fruit_posit": [112, 113], "col": [112, 113], "head_posit": [112, 113], "tail": [112, 113], "game2048": [112, 113], "maze": [112, 113], "cleaner": [112, 113], "cvrp": [112, 113], "multicvrp": [112, 113], "minesweep": [112, 113], "rubikscub": [112, 113], "knapsack": [112, 113], "sudoku": [112, 113], "tsp": [112, 113], "connector": [112, 113], "v2": [112, 113, 128, 129, 308, 322, 323, 324, 325, 327, 328, 329, 330, 376, 392], "mmst": [112, 113], "graphcolor": [112, 113], "partli": [112, 113], "scrambl": [112, 113], "robotwarehous": [112, 113], "tetri": [112, 113], "binpack": [112, 113], "jobshop": [112, 113], "0x1fca91910": 112, "122": [112, 113, 387, 392], "0x1ff9baee0": 112, "134": [112, 113, 387], "0x1ff9ba7c0": 112, "172": [112, 113, 387], "drastic": [113, 123, 389], "rubric": [113, 164, 273], "mo": [114, 115], "minecart": [114, 115], "mo_gym": 115, "qualnam": 116, "leverag": [116, 125, 126, 373, 386, 392], "neural": [116, 125, 126, 206, 207, 244, 270, 368, 374, 375, 376, 378, 385, 386, 387, 392], "group_map": [116, 117, 118, 125, 126, 132, 133, 134, 385], "constructiuon": [116, 125, 126], "premad": [116, 117, 118, 125, 126, 132, 133, 311], "all_in_one_group": [116, 134], "agent_0": [116, 125, 126, 134, 385], "agent_1": [116, 125, 126, 134], "agent_2": [116, 125, 126, 134], "agent_3": 116, "one_group_per_ag": [116, 125, 126], "meltingpot": [117, 118], "2211": [117, 118], "13746": [117, 118], "melt": [117, 118], "pot": [117, 118], "novel": [117, 118, 379], "social": [117, 118], "familiar": [117, 118, 374, 386, 392], "unfamiliar": [117, 118], "broad": [117, 118], "cooper": [117, 118, 385, 386], "decept": [117, 118], "reciproc": [117, 118], "trust": [117, 118, 225], "stubborn": [117, 118], "substrat": [117, 118], "ml_collect": 117, "config_dict": 117, "configdict": 117, "categorical_act": [117, 118, 125, 126, 128, 129, 132, 133], "marlgroupmaptyp": [117, 118, 125, 126, 132, 133, 134, 366, 385], "agent_nam": [117, 118, 132, 133, 134], "agent_names_to_indices_map": [117, 118, 132, 133], "env_torchrl": [117, 118], "commons_harvest__open": [117, 118], "rgb": [117, 118], "144": [117, 118, 387], "192": [117, 118, 374, 387], "collective_reward": [117, 118], "ready_to_shoot": [117, 118], "88": [117, 118, 128, 129, 373, 374, 386, 387, 388], "substrate_config": 118, "get_config": 118, "mp_env": 118, "build_from_config": 118, "default_player_rol": 118, "environn": 119, "mymbenv": [119, 205, 228], "world_model": [119, 205, 228, 292], "hidden_observ": [119, 205, 228], "mlp": [119, 205, 206, 207, 209, 210, 211, 212, 218, 221, 225, 228, 232, 253, 259, 278, 285, 287, 368, 374, 378, 379, 382, 384, 388, 391], "worldmodelwrapp": [119, 205, 228], "activation_class": [119, 205, 206, 207, 209, 210, 211, 212, 217, 218, 226, 228, 231, 232, 374, 378, 385, 386, 391], "relu": [119, 205, 213, 228, 235, 280], "activate_last_lay": [119, 205, 212, 226, 228], "sail": [120, 121], "sg": [120, 121], "10558": [120, 121], "readthedoc": 120, "en": 120, "python_interfac": 120, "envpoolmixin": 121, "env_bas": 121, "task_id": 121, "env_typ": 121, "gym_reset_return_info": 121, "envpool_env": 121, "www": [122, 229, 230], "fetch_openml": 122, "106": [122, 387], "my_env_fun": [123, 130], "custom_attribute_list": [123, 130], "custom_attribut": [123, 130], "custom_method_list": [123, 130], "custom_method": [123, 130], "deploi": [123, 130, 143], "slight": [123, 130, 374], "share_individual_td": [123, 130], "shared_memori": [123, 130], "policy_proof": [123, 130], "ll": [123, 130, 219, 220, 223, 224, 373, 374, 375, 376, 377, 378, 379, 380, 382, 386, 392], "serial_for_singl": [123, 130, 374], "circular": [123, 130, 373], "list_of_kwarg": [123, 130], "com_veloc": [123, 130], "head_height": [123, 130], "joint_angl": [123, 130], "torso_vert": [123, 130], "stringent": [123, 375, 385, 386], "inter": 123, "penv": 123, "env_fix": 123, "influenc": 123, "thumb": [123, 375], "myenv": [123, 143, 151, 154], "pipe": 123, "update_kwarg": [123, 130], "th": [124, 158, 187, 219, 223, 387], "thdot": [124, 387], "max_spe": [124, 387], "max_torqu": [124, 387], "gen_param": [124, 387], "gravit": [124, 387], "torqu": [124, 387], "pettingzoo": [125, 126, 385, 386], "pet": [125, 126], "zoo": [125, 126], "__": [125, 126], "aecenv": [125, 126], "use_mask": [125, 126], "dead": [125, 126], "done_on_ani": [125, 126, 385], "compulsori": [125, 126], "adversary_0": [125, 126, 385], "adversari": [125, 126, 385], "vectoris": [125, 126, 219, 220, 223, 224], "sisl": 125, "multiwalker_v9": 125, "return_st": [125, 126], "aec": [125, 126], "n_piston": [125, 126], "pistonball_v6": [125, 126], "piston": [125, 126], "piston_0": [125, 126], "piston_1": [125, 126], "piston_20": [125, 126], "tictactoe_v3": [125, 126], "player": [125, 126, 131], "player_1": [125, 126], "player_2": [125, 126], "butterfli": 126, "parallel_env": [126, 373, 391, 392], "vikashplu": 127, "wiki": 127, "06828": 127, "from_depth": 127, "smacv2": [128, 129], "starcraft": [128, 129], "challeng": [128, 129, 377, 387, 388], "10gen_terran": [128, 129], "10gen_zerg": [128, 129], "10gen_protoss": [128, 129], "3m": [128, 129], "8m": [128, 129], "25m": [128, 129], "5m_vs_6m": [128, 129], "8m_vs_9m": [128, 129], "10m_vs_11m": [128, 129], "27m_vs_30m": [128, 129], "mmm": [128, 129], "mmm2": [128, 129], "2s3z": [128, 129], "3s5z": [128, 129], "3s5z_vs_3s6z": [128, 129], "3s_vs_3z": [128, 129], "3s_vs_4z": [128, 129], "3s_vs_5z": [128, 129], "1c3s5z": [128, 129], "2m_vs_1z": [128, 129], "corridor": [128, 129], "6h_vs_8z": [128, 129], "2s_vs_1sc": [128, 129], "so_many_banel": [128, 129], "bane_vs_ban": [128, 129], "2c_vs_64zg": [128, 129], "old": [128, 129, 296, 392], "smac": [128, 129], "map_nam": [128, 129], "176": [128, 129, 387, 392], "battle_won": [128, 129], "dead_al": [128, 129], "dead_enemi": [128, 129], "episode_limit": [128, 129], "322": [128, 129, 387], "Or": [128, 129, 231], "procedur": [128, 129], "distribution_config": [128, 129], "n_unit": [128, 129], "n_enemi": [128, 129], "team_gen": [128, 129], "dist_typ": [128, 129], "weighted_team": [128, 129], "unit_typ": [128, 129], "marin": [128, 129], "maraud": [128, 129], "medivac": [128, 129], "exception_unit_typ": [128, 129], "start_posit": [128, 129], "surrounded_and_reflect": [128, 129], "map_x": [128, 129], "map_i": [128, 129], "capability_config": [128, 129], "131": [128, 129, 387], "starcraft2env": 129, "tic": 131, "tac": 131, "toe": 131, "single_play": 131, "player1": 131, "desired_batch_s": 131, "board": 131, "player0": 131, "proroklab": [132, 133], "vectorizedmultiagentsimul": [132, 133], "2207": [132, 133], "03530": [132, 133], "basescenario": 132, "descript": [132, 142, 374, 375], "perfrom": [132, 133], "defaultt": 132, "continuous_act": [132, 133, 331, 385, 386], "repositiori": 132, "sparsiti": 132, "unbatched_action_spec": [132, 133, 386], "unbatched_observation_spec": [132, 133], "unbatched_reward_spec": [132, 133], "het_spec": [132, 133], "het_specs_map": [132, 133], "flock": [132, 133, 331], "agent_collision_rew": [132, 133], "agent_distance_rew": [132, 133], "ca": 134, "environment4": 134, "get_group_map": 134, "sumbodul": 135, "model_bas": [136, 137, 205, 228], "out_keys_inv": [136, 149, 151, 152, 154, 164, 165, 166, 170, 171, 178, 185, 387], "decod": [136, 236], "model_based_env": [136, 291], "dreamerenv": [136, 291, 366], "model_based_env_ev": 136, "num_interv": 139, "out_action_kei": 139, "samplingstrategi": 139, "optino": 139, "intenum": 139, "interv": [139, 332, 333, 342, 352, 374, 387], "action_disc": 139, "transform_input_spec": [139, 143, 150, 151, 152, 153, 164, 166, 170, 171, 176, 180, 181, 182, 185, 187, 189, 194], "masker": 140, "tensor_spec": [140, 195, 204, 288, 289, 299, 301], "maskedenv": 140, "ones_lik": 140, "scatter": 140, "fill_float": 142, "fill_int": 142, "fill_bool": 142, "someenvclass": 142, "autoresetenv": 142, "argumet": 142, "fooenv": 142, "sign": [142, 178, 313, 385], "envtyp": 142, "reshape_fn": 143, "reset_func": 143, "environmt": 143, "request": [143, 169], "tensordict_batch_s": 143, "els": [143, 219, 220, 223, 224, 236, 368, 370, 373, 374, 375, 376, 385, 386, 387, 388], "tensordict_reset": [143, 387], "transform_env_batch_s": [143, 150, 185, 194], "transform_output_spec": [143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 194], "transform_observation_spec": [143, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 164, 166, 170, 171, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 191, 192, 194, 387], "transform_reward_spec": [143, 144, 149, 150, 151, 152, 156, 162, 170, 171, 174, 175, 176, 177, 178, 180, 185, 187, 194], "transformfull_done_spec": [143, 150, 151, 152, 156, 162, 170, 171, 177, 180, 185, 194], "biner": 144, "burn_in": 145, "burn": 145, "date": [145, 336], "retur": 145, "burnt": 145, "gru_modul": [145, 221, 278], "input_s": [145, 219, 220, 221, 223, 224, 225, 278, 376], "hidden_s": [145, 219, 220, 221, 223, 224, 225, 278, 376], "set_recurrent_mod": [145, 221, 225, 376], "burn_in_transform": 145, "gru": [145, 182, 220, 221, 278], "num_lay": [145, 219, 221, 223, 225, 236, 237, 278], "86": [145, 374, 387, 388], "3008": [145, 374], "0344": 145, "padding_valu": [146, 229, 230], "as_invers": 146, "movement": 146, "1312": [146, 374], "5602": 146, "unsqueezetransform": [146, 387, 389], "consumpt": [146, 366], "followin": 146, "pictur": 146, "pixels_trsf": [146, 389], "grayscal": [146, 374, 376, 389, 392], "data_exclud": [146, 389], "del_kei": [147, 188, 384, 387], "unsqueeze_if_oor": 147, "observation_posit": 147, "observation_veloc": 147, "key1": [147, 341, 349], "key2": [147, 341, 349], "center": [148, 333], "width": [148, 172], "scalar": [149, 174, 210, 212, 233, 234, 256, 257, 261, 262, 265, 266, 277, 281, 282, 283, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 311, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 368, 374, 379, 387], "permit": [149, 158, 187, 281, 283, 296, 299, 301], "rewardsc": [150, 186, 373, 374, 376], "rewardclip": 150, "transformed_env": [150, 185, 186, 377], "transform_env_devic": [150, 152, 185, 194], "dtype_in": 151, "dtype_out": 151, "scan": [151, 154, 272, 273], "resp": [151, 154], "not_transform": [151, 154], "constructedw": [151, 154], "orig_devic": 152, "unspecifi": 152, "transform_done_spec": [152, 185, 194], "num_actions_effect": 153, "max_act": 153, "include_forward": 153, "num_act": [153, 289, 378], "action_out": 153, "_call": [153, 158, 387], "eol_kei": 155, "lives_kei": 155, "eol_attribut": 155, "unwrap": 155, "breakout": 155, "210": [155, 166, 387], "160": [155, 166, 374, 387], "eol_transform": 155, "eol": 155, "dqnloss": [155, 281, 282, 284, 287, 289, 290, 291, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 311, 357, 366, 369, 374, 376, 382], "register_kei": 155, "loss_or_advantag": 155, "lossmodul": [155, 350, 359, 360, 366], "valueestimatorbas": [155, 297, 366], "excluded_kei": 156, "finit": [157, 378, 389], "first_dim": 158, "last_dim": 158, "allow_positive_dim": [158, 187], "frameskip": 158, "repeatedli": [159, 375, 386], "init_kei": [161, 264], "tracker": 161, "pi_curr": 162, "pi_0": 162, "overfit": 162, "probabilist": [162, 267, 366, 375, 391], "get_dist": [162, 271, 272], "mod": [162, 221, 225, 264, 274, 376, 382], "normalparamextractor": [162, 368, 375, 378, 386], "probabilisticactor": [162, 253, 254, 255, 258, 281, 282, 286, 288, 289, 295, 298, 299, 300, 301, 302, 304, 305, 368, 373, 375, 378, 385, 386], "tanhnorm": [162, 253, 254, 255, 267, 273, 281, 282, 295, 299, 300, 301, 302, 304, 305, 366, 375, 386, 391], "return_log_prob": [162, 253, 254, 255, 267, 271, 273, 301, 368, 375, 378, 385, 386, 391], "apply_": 162, "copy_": [162, 373], "formulat": 162, "diverg": [162, 221, 225, 267, 271, 292, 296], "noop": [163, 391], "trial": 163, "standard_norm": [164, 175, 192, 373, 374, 376], "affin": [164, 175, 192], "layer": [164, 192, 206, 207, 209, 210, 215, 217, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 244, 245, 251, 263, 274, 368, 374, 375, 376, 378, 385, 388], "epsilon": [164, 256, 257, 261, 262, 265, 266, 303, 348, 374, 375, 376, 378], "recover": 164, "set_default_tensor_typ": 164, "doubletensor": 164, "isclos": 164, "next_ob": [164, 313, 314, 315, 316, 391], "init_stat": [164, 373, 374, 375, 376], "3752e": 164, "5087e": 164, "9294e": 164, "9636": 164, "5608": 164, "6408": 164, "num_it": [164, 374, 375], "reduce_dim": [164, 373, 374, 375, 376], "cat_dim": [164, 373, 374, 375, 376], "keep_dim": [164, 374, 376], "statist": [164, 192, 301, 364, 373, 374, 375, 392], "gaussian": [164, 182, 205, 228, 233, 234, 239, 256, 257, 375, 385], "empir": [164, 205, 228, 267, 271, 373, 375, 386], "3d": [164, 206], "third": [164, 260, 385, 386], "reorder": 166, "in_keys_in": 166, "channel": [166, 184, 231, 236, 237, 374], "r3m": [168, 388], "resnet": [168, 188, 190], "visual": [168, 188, 190, 333, 375, 385, 387], "embed": [168, 188, 189, 190, 209, 240, 252, 253, 254, 255, 270, 275, 388], "ego4d": [168, 188, 190], "univers": [168, 188, 190, 377], "suraj": [168, 188], "nair": [168, 188], "aravind": [168, 188], "rajeswaran": [168, 188], "vikash": [168, 188, 190], "kumar": [168, 188, 190], "chelsea": [168, 188], "finn": [168, 188], "abhinav": [168, 188], "gupta": [168, 188], "2203": [168, 188, 228, 388], "12601": [168, 188, 388], "_init": [168, 188, 373], "resnet50": [168, 190, 388], "model_nam": [168, 188, 190, 336], "resnet34": 168, "resnet18": 168, "r3m_vec": [168, 388], "stack_imag": [168, 190], "tread": [168, 190], "separet": [168, 190], "hub": [168, 190, 377, 388], "resnet50_weight": [168, 190], "imagenet1k_v1": [168, 190], "download_path": [168, 190], "tensor_pixels_kei": [168, 190], "sub_seq_len": 169, "sample_dim": [169, 373], "primarili": [169, 378], "hesit": 169, "robust": 169, "mix": [169, 240, 249, 311, 373, 385, 386], "improp": 169, "dummyenv": 170, "another_oth": 170, "other_reward": 170, "create_copi": 171, "stuff": [171, 380], "newnam": 171, "r2g": 173, "reward_to_go": 173, "bernoulli_": 173, "9010": 173, "9404": [173, 319], "9701": [173, 319], "9900": [173, 319], "0000": [173, 183, 261, 262, 274, 319, 375, 376, 387, 391], "crash": 173, "clamp_min": 174, "clamp_max": 174, "clip_min": 174, "clip_max": 174, "episode_": 176, "reward1": 176, "reward2": 176, "episode_reward": [176, 385, 386], "keep_reward": 177, "keep_don": 177, "logical_or": 178, "squeeze_dim": 179, "step_count_kei": 180, "update_don": 180, "disjunct": 180, "recognis": 180, "target_return": 181, "subtract": 181, "default_valu": [182, 278, 376], "unit": [182, 205, 217, 219, 220, 236, 237, 242, 243, 375], "transfomedenv": 182, "mykei": 182, "__unless": 182, "exists__": 182, "get_primers_from_modul": [182, 221, 225, 366], "10th": 183, "0216": 183, "1149": 183, "1990": 183, "2749": 183, "3281": 183, "9290": 183, "3702": 183, "8978": 183, "from_int": 184, "shape_toler": 184, "permuat": 184, "ri": 184, "principl": 185, "cattransform": 185, "notabl": 185, "rewardsum": [185, 194, 203, 385, 386], "smoothli": 186, "add_1": 186, "cache_spec": 186, "set_missing_toler": 186, "keyerror": 186, "unsqueeze_dim": [187, 387], "danger": 187, "vc1": 188, "vc1_vec": 188, "untrain": 188, "make_noload_model": 188, "vip": [189, 190, 388], "implicit": [190, 288, 295, 389], "jason": 190, "ma": 190, "shagun": 190, "sodhani": 190, "dinesh": 190, "jayaraman": 190, "osbert": 190, "bastani": 190, "ami": 190, "zhang": 190, "vip_vec": 190, "final_nam": 191, "sb3": 191, "terminal_obs_read": 191, "truli": [191, 391], "till": 191, "shared_td": 192, "decai": [192, 256, 257, 261, 303, 348, 373, 374, 376, 392], "9999": [192, 387], "0001": [192, 217, 235, 375, 387], "to_observation_norm": 192, "frozen_copi": 192, "race": 192, "underflow": [192, 348], "build_td_for_shared_vecnorm": 192, "memmori": 192, "queue": [192, 389], "td_share": 192, "unfreez": 192, "train_env": 192, "eval_env": 192, "state_dim": [193, 208, 213, 239, 242, 243, 258], "action_dim": [193, 208, 209, 211, 213, 239, 258, 373, 384], "gsde": [193, 300, 364], "gsdemodul": 193, "rb_transform": 194, "resist": 194, "insensit": 194, "sensit": [194, 374], "_orig": 194, "95": [194, 228, 307, 373, 374, 375, 376, 387, 388], "tdreset": [194, 384], "window": [194, 264, 385, 389, 391], "edit": [194, 380], "cube": 195, "check_dtyp": 196, "discrep": [196, 281, 283, 284, 285, 296, 299, 301, 311], "rng": [196, 387], "revert": [196, 378, 389], "unsqueeze_null_shap": 200, "probabilistictdmodul": [201, 202, 226, 267, 271, 312, 346], "next_tensordict": 203, "keep_oth": [203, 387], "exclude_reward": 203, "exclude_don": 203, "exclude_act": 203, "next_": 203, "funtion": 203, "_stepmdp": 203, "write_full_fals": 204, "_terminated_or_trunc": 204, "entropi": [205, 281, 282, 283, 288, 289, 295, 296, 298, 299, 300, 302, 304, 305, 386], "botev": 205, "2013": 205, "cem": 205, "plan": [205, 227, 228], "varianc": [205, 222, 235, 247, 248, 369, 373, 375, 386], "k": [205, 219, 220, 223, 224], "maximis": [205, 209, 211, 228, 368, 374, 375, 386], "modelbasedenv": [205, 228], "planning_horizon": [205, 228], "optim_step": [205, 228, 374, 382], "mpc": [205, 227, 228], "num_candid": [205, 228], "candid": [205, 228], "top_k": [205, 228], "modelbasedenvbas": [205, 227, 228, 366], "safemodul": [205, 227, 253, 255, 271, 281, 282, 288, 289, 295, 299, 300, 301, 302, 304, 305, 355, 356, 360, 366, 391], "num_cel": [206, 207, 209, 210, 211, 212, 217, 218, 221, 225, 226, 231, 232, 253, 278, 374, 375, 376, 378, 379, 382, 385, 386, 391], "elu": [206, 207, 209, 210, 211, 212, 217, 218, 231, 374, 391], "activation_kwarg": [206, 207, 226], "norm_class": [206, 207, 209, 210, 226], "norm_kwarg": [206, 207, 226], "bias_last_lay": [206, 207, 209, 210, 211, 212, 218, 226], "aggregator_class": [206, 207, 209, 210, 374, 376, 391], "squashdim": [206, 207, 209, 218, 231, 391], "aggregator_kwarg": [206, 207, 209, 210, 374, 376], "squeeze_output": [206, 207, 209, 210, 374, 376], "cell": [206, 207, 219, 220, 221, 223, 224, 225, 226, 231, 232, 375, 377, 378, 379, 380, 381, 382], "kernel": [206, 207, 218, 231], "cnet": [206, 207], "conv3d": 206, "lazyconv2d": [207, 209, 210, 218, 231, 391], "transformer_config": [208, 239, 258], "decisiontransform": [208, 239], "dtconfig": [208, 213, 239], "2202": [208, 213, 298], "05607": [208, 213, 298], "return_to_go": [208, 213, 239, 258], "conv_net_kwarg": [209, 210], "mlp_net_kwarg": [209, 210, 211], "use_avg_pool": [209, 210], "WITH": [209, 210, 211, 212, 265, 266, 303], "1509": [209, 210, 211, 212, 228, 265, 266, 285, 294, 303, 387], "02971": [209, 210, 211, 212, 265, 266, 303], "reus": [209, 340], "convnet": [209, 210, 218, 231, 376, 378, 391], "ndims_in": 209, "avgpool": [209, 210], "lazylinear": [209, 210, 211, 212, 218, 226, 368, 375, 378, 387, 388, 391], "2304": [209, 374], "adaptiveavgpool2d": [210, 374, 376], "output_s": [210, 374, 376], "squeeze2dlay": 210, "400": [211, 212, 381, 386, 387, 389], "mlp_net_kwargs_net1": 212, "mlp_net_kwargs_net2": 212, "mlp1": 212, "mlp2": 212, "decion": 213, "desdescrib": 213, "n_embd": 213, "n_layer": [213, 219, 223], "n_head": 213, "n_inner": 213, "n_posit": 213, "resid_pdrop": 213, "attn_pdrop": 213, "gpt2config": 213, "atol": [214, 246], "rtol": [214, 246], "batch_shap": [214, 246], "event_shap": [214, 246], "absolut": [214, 246, 373], "densiti": [214, 229, 230, 238, 248], "mass": [214, 229, 230, 238, 248, 387], "rsampl": [214, 230, 238, 271], "sample_shap": [214, 229, 230, 238], "softmax": [215, 230, 238, 259, 260], "var_num": [216, 241, 259, 260, 269], "action_value_kei": [216, 241, 259, 260, 268, 269, 297, 311], "action_mask_kei": [216, 241, 259, 260, 261, 262, 268, 269], "perspect": [216, 260, 290, 375], "1707": [216, 260, 290, 299], "06887": [216, 260, 290], "mult": [216, 232, 241, 259, 260, 268, 269], "tensordict_modul": [216, 219, 220, 223, 224, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 284, 288, 289, 295, 299, 300, 301, 302, 304, 305, 368], "nbin": [216, 259, 368], "customdistributionalqv": 216, "log_softmax": [216, 259], "from_modul": [216, 270, 273, 391], "one_hot": [216, 230, 241], "qvalue_actor": [216, 241, 259, 268, 368], "to_modul": [216, 270, 273, 373, 391], "std_bia": 217, "std_min_val": 217, "belief": [217, 236, 242, 243], "1912": [217, 291, 292, 293], "01603": [217, 291, 292, 293], "softplu": [217, 235, 277, 279, 280], "out_features_valu": 218, "cnn_kwarg": [218, 374], "mlp_kwarg": [218, 374], "duel": 218, "cnn": [218, 231, 374, 378, 391], "06581": 218, "batch_first": [219, 221, 223, 225, 376], "bidirect": [219, 223, 376], "cudnn": [219, 220, 223, 224, 376], "vmap": [219, 220, 223, 224, 250, 270, 273, 391], "rnn": [219, 220, 223, 224, 376, 378], "device_count": [219, 220, 223, 224, 392], "n_in": [219, 220, 223, 224], "n_out": [219, 220, 223, 224], "h0": [219, 220, 223, 224], "h1": [219, 220, 223, 224], "call_gru": [219, 220], "h_out": [219, 220, 223, 224], "batched_cal": [219, 220, 223, 224], "gate": [219, 220, 223], "r_t": 219, "sigma": [219, 220, 222, 223, 224, 247, 248, 256, 257, 265, 266, 375, 385], "w_": [219, 220, 223, 224], "ir": [219, 220], "x_t": [219, 223], "b_": [219, 220, 223, 224], "hr": [219, 220, 223], "h_": [219, 220, 223], "z_t": 219, "iz": [219, 220], "hz": [219, 220], "n_t": 219, "odot": [219, 220, 223, 224], "hn": [219, 220, 223], "h_t": [219, 223], "sigmoid": [219, 220, 223, 224], "hadamard": [219, 220, 223, 224], "multilay": [219, 223], "_t": [219, 223, 386, 387], "ge": [219, 223], "bernoulli": [219, 223], "b_ih": [219, 220, 223, 224, 225], "b_hh": [219, 220, 223, 224, 225], "seq": [219, 221, 223, 225, 264, 376, 382, 384], "h_0": [219, 223, 224], "unbatch": [219, 223], "pack_padded_sequ": [219, 223], "pack_sequ": [219, 223], "num": [219, 223, 382], "_layer": [219, 223], "_size": [219, 220, 223, 224], "h_n": [219, 223], "packedsequ": [219, 223], "weight_ih_l": [219, 223], "learnabl": [219, 220, 223, 224], "w_ir": 219, "w_iz": 219, "w_in": 219, "num_direct": [219, 223], "weight_hh_l": [219, 223], "w_hr": 219, "w_hz": 219, "w_hn": 219, "bias_ih_l": [219, 223], "b_ir": 219, "b_iz": 219, "b_in": 219, "bias_hh_l": [219, 223], "b_hr": 219, "b_hz": 219, "b_hn": 219, "mathcal": [219, 220, 223, 224], "sqrt": [219, 220, 223, 224, 265, 266], "frac": [219, 220, 223, 224, 375], "seq_len": [219, 223], "subtli": 219, "matrix": [219, 223, 233, 234], "contrast": [219, 294, 389], "hx": [219, 220, 223, 224], "lstmcell": [220, 225], "gru_cel": 220, "z": 220, "weight_ih": [220, 224], "weight_hh": [220, 224], "bias_ih": [220, 224], "bias_hh": [220, 224], "rocm": [220, 224], "embedd": [221, 225], "grucel": [221, 270], "python_bas": [221, 225], "recurrent_st": [221, 225, 278, 376], "custom_kei": [221, 225], "recurrent_mod": [221, 225], "make_tensordict_prim": [221, 225, 376], "rs": [221, 373], "gru_module_train": 221, "policy_train": [221, 225], "traj_td": [221, 225], "policy_infer": [221, 225], "td_inf": [221, 225], "assert_clos": [221, 225], "upscal": [222, 247, 248], "tanh_loc": [222, 247, 248], "event_dim": [222, 246, 247], "poor": [222, 247, 248], "explos": [222, 247, 248], "switch": [222, 248, 331], "formula": [222, 247, 248, 281, 283, 296, 299, 369, 375], "proj_siz": 223, "c0": [223, 224], "c1": [223, 224], "call_lstm": [223, 224], "c_out": [223, 224], "i_t": 223, "ii": [223, 224], "hi": [223, 224], "f_t": 223, "hf": [223, 224], "g_t": 223, "ig": [223, 224], "hg": [223, 224], "o_t": 223, "ho": [223, 224], "c_t": 223, "c_": 223, "forget": 223, "1402": 223, "1128": 223, "c_0": [223, 224], "proj": 223, "c_n": 223, "w_ii": 223, "w_if": 223, "w_ig": 223, "w_io": 223, "w_hi": 223, "w_hf": 223, "w_hg": 223, "w_ho": 223, "b_ii": 223, "b_if": 223, "b_ig": 223, "b_io": 223, "b_hi": 223, "b_hf": 223, "b_hg": 223, "b_ho": 223, "weight_hr_l": 223, "_revers": 223, "analog": [223, 378], "cn": 223, "lstm_cell": 224, "h_1": 224, "c_1": 224, "time_step": [224, 264], "cx": 224, "correspont": 225, "recurrent_state_h": [225, 376], "recurrent_state_c": [225, 376], "triplet": [225, 268, 269], "lstm_modul": 225, "rs_h": 225, "rs_c": 225, "hidden0": 225, "hidden1": 225, "single_bias_last_lay": 226, "layer_class": 226, "layer_kwarg": 226, "perceptron": [226, 378], "aslo": 226, "42": [226, 281, 282, 284, 288, 295, 302, 374, 387, 389], "noisylinear": [226, 233, 366, 374], "noisylazylinear": [226, 366], "mpcplanner": 227, "tensordict_out": [227, 392], "mppi": 228, "covari": 228, "william": [228, 301], "aldrich": 228, "theodor": 228, "01149": 228, "hansen": 228, "wang": 228, "su": 228, "04955": 228, "valueoper": [228, 253, 254, 255, 281, 282, 283, 284, 289, 295, 296, 299, 300, 301, 302, 304, 305, 360, 368, 373, 375, 379], "tdlambdaestim": [228, 366, 373], "value_net": [228, 285, 287, 301, 313, 314, 315, 316, 375, 378, 379, 382], "adv": 228, "lmbda": [228, 307, 313, 316, 318, 324, 325, 326, 329, 330, 369, 373, 375, 386], "value_network": [228, 284, 285, 287, 288, 290, 295, 302, 313, 314, 315, 316, 369, 373, 375, 379, 382, 385], "temperatur": [228, 282, 288, 295], "neg_inf": [229, 230], "inf": [229, 230], "api_doc": [229, 230], "tf_agent": [229, 230], "event": [229, 230, 238, 322, 323, 324, 325, 327, 328, 329, 330, 389], "unnorm": [229, 230, 238], "sparse_mask": [229, 230], "dens": [229, 230], "0831": [229, 230], "1203": [229, 230], "0928": [229, 230], "1972": [229, 230], "grad_method": [230, 238], "reparamgradientstrategi": [230, 238], "passthrough": [230, 238], "relaxedonehot": [230, 238], "zeros_lik": [230, 387], "sample_non_valid": 230, "share_param": [231, 232, 385, 386], "homogen": [231, 232, 385, 386], "agent_network": [231, 232], "modulelist": [231, 232, 385, 391], "2592": [231, 374], "decentr": 231, "n_agent_input": [232, 385, 386], "n_agent_output": [232, 385, 386], "lazili": [232, 387], "toech": 232, "centalis": 232, "shown": [232, 368, 384, 385, 386, 389], "std_init": [233, 234], "initialize_paramet": 233, "isol": [233, 297], "1706": [234, 249], "10295v3": 234, "induc": 234, "aid": 234, "scale_map": 235, "biased_softplus_1": 235, "scale_lb": [235, 242, 243], "module_norm": 235, "1803": [236, 237, 240], "10122": [236, 237], "rnn_hidden": 236, "latent": 237, "excacli": 238, "inres": 239, "mu": [239, 265, 266, 375], "state_shap": [240, 311], "mixing_embed_dim": [240, 311], "qmix": [240, 385, 386], "mixer": [240, 249, 311], "monoton": 240, "hyper": 240, "11485": 240, "qmixerloss": [240, 249], "qmix_vdn": [240, 249], "vdn": [240, 249], "greedi": [241, 260, 261, 262, 269, 374, 376, 378], "hidden_dim": [242, 243], "posterior": [242, 292], "rssm": [242, 243, 292], "1811": [242, 243], "04551": [242, 243], "obs_embed": 242, "rnn_hidden_dim": 243, "dream": 243, "tanhtransform": 247, "get_mod": 247, "adam": [247, 373, 374, 375, 376, 379, 382, 385, 386, 387], "decomposit": 249, "05296": 249, "hide": [250, 375, 385, 386], "satisfi": [250, 368], "vmap_dim": 250, "lam": 250, "sample_in": 250, "sample_in_td": 250, "vm": 250, "translat": [252, 267], "character": [252, 259, 267, 268, 270, 389], "overflow": [252, 259, 260, 267, 268, 269, 270, 271], "td_modul": [252, 253, 254, 255, 267, 270, 271, 273, 275, 378, 391], "3635": 252, "0340": 252, "1476": 252, "3911": [252, 387], "1664": [252, 374, 387], "5455": [252, 374], "2247": 252, "4583": 252, "2916": 252, "2160": 252, "5337": 252, "5193": 252, "grad_fn": [252, 261, 262, 391], "addmmbackward0": 252, "actorvalueoper": [253, 368, 378], "get_policy_oper": [253, 254, 255, 283, 296, 299, 368], "standalon": [253, 254, 255, 378], "tdmodul": [253, 254, 255, 360], "get_critic_oper": 253, "common_oper": [253, 255], "policy_oper": [253, 254, 255], "value_oper": [253, 254, 255], "normalparamwrapp": [253, 254, 255, 267, 273, 281, 282, 289, 295, 299, 300, 301, 302, 304, 305, 366, 391], "module_hidden": [253, 255], "td_module_hidden": [253, 255], "module_act": [253, 255], "td_module_act": [253, 254, 255], "module_valu": [253, 254, 255], "td_module_valu": [253, 254, 255], "state_action_valu": [253, 275, 282, 288, 295, 302, 312, 360, 368, 373, 385, 391], "td_clone": [253, 254, 255], "tensordictmodulewrapp": [253, 355, 356, 360], "get_policy_head": [253, 254, 255], "safesequenti": [253, 254, 255, 311], "head": [253, 255, 278, 283, 296, 299], "get_value_head": [253, 254, 255], "get_value_oper": [253, 254, 255, 283, 296, 299], "action_modul": 254, "state_valu": [254, 255, 275, 283, 288, 295, 296, 299, 300, 302, 313, 314, 315, 316, 318, 320, 322, 324, 326, 327, 329, 368, 373, 375, 386], "actorcriticoper": [255, 283, 296, 299, 368, 378], "embeddig": 255, "refet": 255, "actorcriticwrapp": [255, 368, 373], "po": [256, 257, 262], "sigma_init": [256, 257, 385], "sigma_end": [256, 257, 385], "annealing_num_step": [256, 257, 261, 262, 265, 266, 373, 374, 376, 378, 382, 385], "captur": [256, 257, 261, 262, 265, 266], "omiss": [256, 257, 261, 262, 265, 266], "ommit": [256, 257, 261, 262, 265, 266], "inferec": 258, "set_tensor_kei": 258, "dt_inference_wrapp": 258, "baz": 258, "inference_context": 258, "obs_dim": 258, "tanhdelta": [258, 366, 373, 385], "dtactor": 258, "actor_modul": [258, 391], "dist_class": 258, "dist_kwarg": 258, "distribution_kwarg": [258, 267, 271, 375, 385, 386], "inference_actor": 258, "sequence_length": 258, "mask_context": 258, "out_act": 258, "qvaluemodul": [259, 268, 311, 376, 378, 382], "distributionaldqnnet": 259, "make_log_softmax": 259, "my_action_valu": [260, 269], "chanc": 260, "thid": 260, "eps_init": [261, 262, 265, 266, 374, 376, 378, 382], "eps_end": [261, 262, 265, 266, 374], "explorative_polici": [261, 262, 265, 266], "9055": [261, 262, 387], "9277": [261, 262], "6295": [261, 262], "2532": [261, 262], "addbackward0": [261, 262], "lmheadmodel": 263, "actor_head": [263, 283, 296, 299], "base_model": 263, "lm_head": 263, "macro": 264, "lookahead": 264, "n_action": [264, 282, 285, 287, 298, 302], "reshape_cat": 264, "actor_bas": 264, "obs_cat": 264, "obs_cat_reshap": 264, "action_orig": 264, "counter": [264, 343, 370], "ornstein": [265, 266, 373], "uhlenbeck": [265, 266, 373], "ou": [265, 266, 373], "correl": [265, 266], "noise_t": [265, 266], "noise_": [265, 266], "theta": [265, 266, 375, 387], "sigma_t": [265, 266], "sigma_": [265, 266], "anneal": [265, 266, 374, 378, 385], "ou_prev_nois": [265, 266], "ou_step": [265, 266], "x0": [265, 266], "sigma_min": [265, 266], "n_steps_ann": [265, 266], "is_init_kei": [265, 266], "_ou_prev_nois": [265, 266], "_ou_step": [265, 266], "default_interaction_typ": [267, 271, 378], "interaction_typ": [267, 271], "datacollectorbas": [267, 352, 355, 356, 360, 366], "set_interaction_typ": [267, 271], "compositedistribut": [267, 378], "distribution_map": 267, "name_map": 267, "cache_dist": [267, 271], "n_empirical_estim": [267, 271], "compound": [267, 378], "categ": 267, "chose": 269, "functionalmodul": 270, "functionalmodulewithbuff": 270, "td_fmodul": 270, "td_function": 270, "td_state": 270, "params_repeat": 270, "td_vmap": [270, 273], "random_sampl": [270, 271], "suppli": 271, "fist": 271, "log_prob_kei": [271, 386], "probabilistictensordictsequenti": [272, 281, 283, 296, 299, 301, 355, 356, 391], "partial_toler": [272, 273, 384], "who": [272, 273], "AND": [272, 273], "tensordictsequenci": 273, "tensordictsequ": 273, "safeprobabilisticmodul": [273, 368], "spec1": 273, "net1": 273, "module1": 273, "td_module1": 273, "spec2": 273, "module2": 273, "td_module2": 273, "clamp": [274, 292, 350, 385, 387], "boundari": [274, 375, 385, 386], "resolut": 274, "9944": 274, "9991": 274, "3020": 274, "2299": [274, 387], "5418": 274, "2989": 274, "6849": 274, "3169": 274, "2690": 274, "9649": [274, 387], "5686": 274, "8602": 274, "0315": 274, "8455": [274, 387], "6027": 274, "4746": 274, "7843": 274, "7782": 274, "2111": 274, "5115": 274, "4687": 274, "5760": 274, "custommodul": 275, "imaginari": 276, "imagin": 276, "transition_model": 276, "get_reward_oper": 276, "get_transition_model_oper": 276, "min_val": [277, 280], "_bia": 277, "surject": 280, "expln": 280, "biased_softplu": [280, 366], "beggin": 280, "biased_softplus_": 280, "syntax": [280, 373], "met": [280, 385, 387], "1602": 281, "01783v2": 281, "actor_network": [281, 282, 283, 284, 286, 288, 289, 295, 296, 298, 299, 300, 301, 302, 304, 305, 373, 375, 379, 385, 386], "critic_network": [281, 283, 296, 299, 301, 375, 386], "entropy_bonu": [281, 283, 296, 299, 375], "favour": [281, 283, 296, 299], "samples_mc_entropi": [281, 283, 296, 298, 299], "mont": [281, 283, 296, 299, 373], "carlo": [281, 283, 296, 299, 373], "entropy_coef": [281, 283, 296, 299, 375, 386], "critic_coef": [281, 283, 296, 299, 375], "loss_critic_typ": [281, 283, 296, 299, 301, 375], "l1": [281, 283, 284, 285, 289, 296, 299, 300, 301, 304, 305, 308, 311, 368, 373], "l2": [281, 283, 284, 285, 286, 287, 289, 292, 293, 296, 299, 300, 301, 304, 305, 308, 311, 373, 385], "smooth_l1": [281, 282, 283, 284, 285, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 308, 311, 375], "separate_loss": [281, 283, 284, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305], "propag": [281, 283, 284, 288, 289, 295, 296, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316, 375, 385, 386], "advantage_kei": [281, 283, 296, 299, 301, 313, 314, 315, 316], "value_target_kei": [281, 283, 296, 299, 301, 313, 314, 315, 316], "value_target": [281, 283, 296, 299, 301, 313, 314, 315, 316, 375, 386], "ddp": [281, 283, 296, 299, 301], "fsdp": [281, 283, 296, 299, 301], "divid": [281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 298, 299, 300, 301, 302, 304, 305, 353, 368, 373, 385, 386, 387], "clip_valu": [281, 283, 296, 299, 301], "loss_crit": [281, 299, 375, 386], "loss_entropi": [281, 299, 375, 386], "loss_object": [281, 299, 375, 386], "recur": [281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316, 317, 378], "next_reward": [281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316], "next_don": [281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316], "next_termin": [281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 313, 314, 315, 316], "loss_obj": 281, "next_observ": [281, 282, 284, 285, 287, 288, 289, 295, 299, 300, 301, 302, 304, 305, 384], "sacloss": [281, 294, 303, 366], "select_out_kei": [281, 282, 284, 288, 289, 295, 299, 300, 302, 304, 305], "make_value_estim": [281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 306, 311, 369, 373, 374, 385, 386, 391], "value_typ": [281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 307, 311, 373], "hyperparam": [281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 373], "enum": [281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 307, 311, 373], "default_value_estim": [281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 373, 391], "default_value_kwarg": [281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 366, 373], "dqn_loss": [281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 306, 311], "td1": [281, 282, 284, 285, 287, 289, 290, 291, 295, 297, 299, 300, 301, 302, 304, 305, 311, 373], "conserv": [282, 287], "qvalue_network": [282, 288, 289, 295, 300, 302, 304, 305], "loss_funct": [282, 284, 285, 286, 287, 288, 289, 295, 300, 302, 304, 305, 308, 311, 373, 385], "alpha_init": [282, 289, 298, 300, 302], "min_alpha": [282, 289, 298, 300, 302], "max_alpha": [282, 289, 298, 300, 302], "fixed_alpha": [282, 289, 298, 300, 302], "target_entropi": [282, 289, 298, 300, 302], "prod": [282, 298, 302], "delay_actor": [282, 284, 302, 304, 305], "delay_qvalu": [282, 289, 300, 302, 304, 305], "min_q_weight": 282, "max_q_backup": 282, "backup": 282, "deterministic_backup": 282, "num_random": 282, "with_lagrang": 282, "lagrang": 282, "lagrange_thresh": 282, "valueclass": [282, 284, 289, 300, 302, 304, 305], "qvalu": [282, 288, 289, 295, 300, 302, 304, 305], "loss_actor": [282, 284, 288, 289, 295, 300, 301, 302, 304, 305, 345, 373, 379, 385, 391], "loss_actor_bc": 282, "loss_alpha": [282, 289, 300, 302], "loss_cql": [282, 287], "loss_qvalu": [282, 287, 288, 289, 295, 300, 302, 304, 305], "loss_alpha_prim": 282, "clip_epsilon": [283, 375, 386], "normalize_advantag": [283, 296, 299, 386], "value_kei": [283, 296, 299, 313, 314, 315, 316, 373], "somemodul": [283, 296, 299], "someactor": [283, 296, 299], "value_head": [283, 296, 299], "somevalu": [283, 296, 299], "loss_modul": [283, 294, 296, 297, 299, 303, 350, 359, 360, 369, 370, 373, 374, 375, 385, 386, 389], "ppoloss": [283, 296, 366], "delay_valu": [284, 285, 287, 290, 301, 302, 311, 374, 376, 382, 385], "loss_valu": [284, 288, 295, 301, 302, 373, 375, 379, 385, 386, 391], "pred_valu": [284, 287, 304, 305, 373, 379, 391], "pred_value_max": [284, 373, 379, 391], "target_valu": [284, 287, 300, 304, 305, 312, 369, 373, 379, 391], "target_value_max": [284, 373, 379, 391], "qvalueactor": [285, 287, 311, 368, 374, 376], "double_dqn": 285, "06461": [285, 294], "mult_one_hot": [285, 288, 289, 311], "loss_val": [285, 287, 369, 373, 375, 376, 379, 380, 382, 385, 386, 389], "01345": 286, "distanc": [287, 296, 308, 312, 313, 386], "dcql_loss": 287, "2110": [288, 295], "06169": [288, 295], "num_qvalue_net": [288, 289, 295, 300, 302, 304, 305], "expectil": [288, 295], "tau": [288, 295, 303, 373, 374, 385], "antmaz": [288, 295], "sticht": [288, 295], "onehotcategor": [288, 289, 366], "target_entropy_weight": 289, "disctount": 290, "distributionalqvalueactor": [290, 368], "input_tensordict": [290, 373], "actor_model": 291, "value_model": [291, 293], "imagination_horizon": 291, "unrol": [291, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330], "discount_loss": [291, 293], "lambda_kl": 292, "lambda_reco": 292, "lambda_reward": 292, "reco_loss": 292, "reward_loss": 292, "free_nat": 292, "nat": 292, "delayed_clamp": 292, "global_averag": 292, "value_loss": 293, "fake_data": 293, "ddpgloss": [294, 303, 360, 366, 373, 379, 385, 391], "td3loss": [294, 303, 366], "value_network_update_interv": 294, "qvalueclass": 295, "loss_value_diff": 295, "diff": 295, "old_polici": 296, "new_polici": 296, "apart": [296, 386], "dtarg": 296, "samples_mc_kl": 296, "analyt": 296, "decrement": 296, "loss_": [297, 345, 369, 373, 379], "equip": [297, 376, 378], "gh": 297, "_acceptedkei": 297, "dataclass": 297, "_forward_value_estimator_kei": 297, "alter": [297, 368], "value_estim": [297, 313, 314, 315, 316, 317, 369, 373, 386], "myloss": 297, "action2": 297, "augment": [297, 380, 382, 389], "set_exploration_mod": [297, 366], "deterministic_sampling_mod": 297, "convert_to_funct": [297, 373], "expand_dim": 297, "create_target_param": [297, 373], "compare_against": [297, 373], "_param": 297, "expans": 297, "resampl": 297, "_target_param": 297, "blend": 297, "proxim": [299, 375, 386], "optimis": [299, 346, 375, 385, 386], "flavour": [299, 385, 386, 391], "clipppoloss": [299, 366, 375, 386], "klpenppoloss": [299, 366], "regularis": 299, "06347": 299, "gae": [299, 366, 369, 373, 375, 386], "ppo_loss": 299, "tdlambda": [299, 307, 369, 373], "base_lay": 299, "randn_lik": 299, "samplelogprob": 299, "openreview": 300, "ay8zfzm0tdd": 300, "sub_sample_len": 300, "subsampl": [300, 341, 370], "action_log_prob_actor": 300, "state_action_value_actor": [300, 304, 305], "connectionist": 301, "1992": 301, "doi": 301, "1007": 301, "bf00992696": 301, "actor_net": [301, 373, 375], "1801": 302, "01290": 302, "applic": [302, 311, 377, 378, 387], "1812": 302, "05905": 302, "redqloss": [303, 366], "math": 303, "theta_t": [303, 387], "theta_": [303, 387], "polyak": 303, "minimalist": 304, "06860": 304, "qvalue_loss": 304, "actor_loss": 304, "policy_nois": [304, 305], "noise_clip": [304, 305], "td3_bc": 304, "bc_loss": 304, "lmbd": 304, "next_state_valu": [304, 305, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 366], "td0": [306, 373, 385], "strict_shap": 308, "view_a": 308, "qmixer": [311, 366], "local_valu": 311, "visibl": [311, 386], "dafault": 311, "acceptedkei": 311, "global_valu": 311, "penultim": 311, "local_value_network": 311, "mixer_network": 311, "value_modul": [311, 375, 391], "qnet": [311, 373], "next_val_kei": 312, "pred_next_v": 312, "usus": 312, "mse": 312, "q_valu": 312, "n_steps_to_next": 312, "value_next_st": 312, "1506": [313, 318, 326], "02438": [313, 318, 326], "exponenti": [313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 348], "average_ga": [313, 375], "skip_exist": [313, 314, 315, 316], "time_dim": [313, 315, 316, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330], "advang": 313, "gradient_mod": 313, "value_error": [313, 314, 315, 316, 317], "target_param": [313, 314, 315, 316, 317, 373, 386], "98": [313, 314, 315, 316, 373, 374, 387, 388], "94": [313, 316, 373, 374, 387, 388], "unpack": [313, 314, 315, 316], "tensor_kei": [313, 314, 315, 316, 317], "next_valu": [313, 314, 315, 316, 317], "aka": [314, 374, 385], "average_reward": [314, 315, 316], "tdestim": [314, 315, 317], "infti": 315, "valuefunctionbas": 317, "old_stat": [318, 320, 322, 324, 326, 327, 329], "new_stat": [318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "rolling_gamma": [322, 323, 324, 325, 327, 328, 329, 330], "g1": [322, 323, 324, 325, 327, 328, 329, 330], "g2": [322, 323, 324, 325, 327, 328, 329, 330], "g3": [322, 323, 324, 325, 327, 328, 329, 330], "g4": [322, 323, 324, 325, 327, 328, 329, 330], "v3": [322, 323, 324, 325, 327, 328, 329, 330, 392], "preproc": [331, 385], "as_non_tensor": [331, 385], "render_method": 331, "pass_tensordict": 331, "syntat": 331, "sugar": 331, "out_file_bas": 332, "skip_reset": 332, "center_crop": 333, "make_grid": 333, "csv": [333, 335, 337, 374, 381, 382], "wandb": [333, 337, 340, 381, 391], "tensorboard": [333, 337, 339, 381, 391], "log_dir": [333, 334, 335, 337, 339, 340, 374, 382], "cheetah_video": 333, "run_video": 333, "openxexperiencereplai": 333, "run_video_0": 333, "templat": 334, "pt": [335, 370, 388], "video_fp": 335, "minim": [335, 389], "dependeci": 335, "cur_dir": 335, "csv_log": 335, "add_video": 335, "video_": 335, "experiment_nam": [336, 337], "uuid": [336, 374, 392], "logger_typ": 337, "logger_nam": 337, "mlflow": [337, 338], "wandb_kwarg": 337, "mlflow_kwarg": 337, "tracking_uri": 338, "uri": 338, "datastor": 338, "tb_log": 339, "tensoarboard": 339, "td_log": 339, "save_dir": 340, "resum": 340, "uncategor": 340, "sub_traj_len": 341, "min_sub_traj_len": 341, "register_op": [341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 370, 374], "process_optim_batch": [341, 347, 348, 370], "td_out": [341, 349], "_process_optim_batch_hook": [341, 370], "batch_subsampl": 341, "clear_cuda": 342, "pre_optim_step": [342, 370], "log_pbar": [343, 344, 346, 348, 370, 374], "progress": [343, 344, 346, 350, 370, 374, 376, 392], "count_fram": 343, "pre_steps_log": [343, 344, 370], "count_frames_log": 343, "lognam": 344, "r_train": [344, 374], "log_reward": [344, 374], "loss_compon": 345, "appl": 345, "optimizer_hook": 345, "record_interv": [346, 373, 374], "record_fram": [346, 353, 373, 374], "policy_explor": [346, 360, 373, 374, 378, 382], "log_kei": [346, 374], "underestim": 346, "set_exploration_typ": [346, 366, 375, 376, 378, 385, 391], "r_evalu": [346, 373], "flatten_tensordict": [347, 374], "max_dim": 347, "rb_trainer": 347, "batch_process": [347, 348, 349, 370], "post_loss": [347, 370], "999": [348, 374], "jitter": 348, "finfo": 348, "default_dtyp": 348, "get_default_dtyp": 348, "reward_norm": 348, "update_reward_stat": 348, "normalize_reward": 348, "make_train": [349, 366], "_process_batch_hook": [349, 370], "select_kei": [349, 370], "versatil": [350, 377], "optim_steps_per_batch": [350, 370, 374], "clip_grad_norm": 350, "clip_norm": 350, "progress_bar": 350, "save_trainer_interv": 350, "log_interv": [350, 374], "save_trainer_fil": [350, 370], "update_weights_interv": [352, 374], "update_weight": 352, "post_step": [352, 370, 374], "cfg": [353, 354, 355, 356, 357, 358, 359, 360, 361, 364], "dictconfig": [353, 354, 355, 356, 358, 359, 360, 361, 364], "unknowingli": 353, "annealing_fram": [353, 373], "init_env_step": [353, 354, 373], "proof_environ": [354, 373], "sta": 354, "ot": 354, "actor_model_explor": [355, 356, 373], "make_env_kwarg": [355, 356], "targetnetupdat": [357, 359, 360], "replayargsconfig": 358, "target_net_updat": [360, 373, 374], "constitu": 360, "egreedywrapp": 360, "env_proof": 360, "obs_spec": 360, "net_valu": 360, "dir": [360, 370, 374], "gettempdir": 360, "argpars": [361, 364], "namespac": [361, 364, 392], "parser": [361, 364], "transformed_env_constructor": [361, 366], "num_env_per_collector": [362, 363], "video_tag": 364, "norm_obs_onli": 364, "use_env_cr": 364, "custom_env_mak": 364, "custom_env": 364, "return_transformed_env": 364, "action_dim_gsd": 364, "state_dim_gsd": 364, "obs_norm_state_dict": 364, "wheter": 364, "maker": [364, 374], "asyncdatacollector": 366, "distributedsyncdatacollector": 366, "submitit_delayed_launch": 366, "raycollector": 366, "rational": 366, "footnot": 366, "unboundeddiscretetensorspec": 366, "lazystackedtensorspec": 366, "lazystackedcompositespec": 366, "prompttensordicttoken": 366, "rolloutfrommodel": 366, "tokenizeddatasetload": 366, "create_infinite_iter": 366, "constantklcontrol": 366, "adaptiveklcontrol": 366, "consolidate_spec": 366, "check_no_exclusive_kei": 366, "contains_lazy_spec": 366, "nested2t": 366, "h5combin": 366, "h5split": 366, "tictactoeenv": 366, "check_marl_group": 366, "get_available_librari": 366, "make_composite_from_td": [366, 387], "terminated_or_trunc": 366, "dreamerdecod": 366, "braxwrapp": 366, "dmcontrolwrapp": 366, "jumanjienv": 366, "jumanjiwrapp": 366, "meltingpotenv": 366, "meltingpotwrapp": 366, "mogymenv": 366, "mogymwrapp": 366, "multithreadedenvwrapp": 366, "openmlenv": 366, "pettingzooenv": [366, 385], "robohiveenv": 366, "smacv2env": 366, "smacv2wrapp": 366, "vmaswrapp": 366, "qvaluehook": 366, "distributionalqvaluehook": 366, "reset_nois": 366, "cemplann": 366, "mpcplannerbas": 366, "mppiplann": 366, "independentnorm": 366, "truncatednorm": 366, "maskedonehotcategor": 366, "inv_softplu": 366, "vmapmodul": 366, "distributionaldqnloss": [366, 374], "discretesacloss": 366, "iqlloss": 366, "discreteiqlloss": 366, "cqlloss": 366, "discretecqlloss": 366, "dtloss": 366, "onlinedtloss": 366, "td3bcloss": 366, "a2closs": 366, "reinforceloss": 366, "dreameractorloss": 366, "dreamermodelloss": 366, "dreamervalueloss": 366, "td0estim": [366, 373], "td1estim": [366, 373], "td0_return_estim": 366, "td0_advantage_estim": 366, "td1_return_estim": 366, "vec_td1_return_estim": 366, "td1_advantage_estim": 366, "vec_td1_advantage_estim": 366, "td_lambda_return_estim": 366, "vec_td_lambda_return_estim": 366, "td_lambda_advantage_estim": 366, "vec_td_lambda_advantage_estim": 366, "generalized_advantage_estim": 366, "vec_generalized_advantage_estim": 366, "reward2go": 366, "distance_loss": [366, 373], "hold_out_net": 366, "hold_out_param": [366, 373], "softupd": [366, 373, 374, 376, 379, 382, 385], "hardupd": [366, 373, 379], "batchsubsampl": [366, 370], "clearcudacach": 366, "countframeslog": 366, "logreward": [366, 370, 374], "optimizerhook": [366, 374], "replaybuffertrain": [366, 370, 374], "rewardnorm": 366, "selectkei": [366, 370], "trainerhookbas": [366, 370, 374], "updateweight": [366, 370, 374], "make_collector_offpolici": 366, "make_collector_onpolici": 366, "make_dqn_loss": 366, "make_replay_buff": [366, 373], "make_target_updat": 366, "parallel_env_constructor": [366, 373], "sync_async_collector": 366, "sync_sync_collector": 366, "correct_for_frame_skip": 366, "get_stats_random_rollout": 366, "mlflowlogg": 366, "get_logg": 366, "generate_exp_nam": 366, "journei": 367, "textbook": 367, "highlight": [367, 385], "ever": [367, 386], "bump": 367, "think": [367, 375, 385, 386, 392], "benefit": [367, 377, 385, 386, 389], "pr": 367, "ground": [368, 373, 387], "recycl": [368, 389], "impos": 368, "violat": 368, "noisier": 368, "Their": [368, 385, 386], "sd": 368, "prob_modul": 368, "pick": [368, 373, 374, 378], "hopefulli": [368, 374], "functional_modul": 368, "make_funct": 368, "mathbb": [368, 374], "rightarrow": [368, 374], "soften": 368, "backbon": [368, 376, 378, 384, 391], "make_actor": 368, "make_valu": 368, "shared_param": 368, "make_common": 368, "reusabl": [369, 373, 389], "swappabl": [369, 373], "characterist": [369, 373, 387], "trainabl": [369, 373, 379, 388], "smth": [369, 373], "metric": [369, 373], "nutshel": [369, 373], "barto": [369, 385, 386], "chapter": [369, 381], "significantli": [369, 373, 374, 379, 386], "next_stat": 369, "value_net_loss": 369, "pow": [369, 373], "room": 369, "signifi": [369, 385, 386], "underperform": 369, "thin": 369, "intric": [369, 378], "believ": 370, "scheme": [370, 392], "substenti": 370, "_pre_steps_log_hook": 370, "_pre_optim_hook": 370, "sub_batch": 370, "_post_loss_hook": 370, "_post_optim_hook": 370, "post_optim": [370, 374], "_post_optim_log": 370, "post_optim_log": 370, "_post_steps_hook": 370, "_post_steps_log_hook": 370, "post_steps_log": 370, "reserv": 370, "logginghook": 370, "logging_hook": 370, "save_dict": 370, "some_valu": 370, "torchsnapshot": 370, "ckpt_backend": 370, "filepath": 370, "save_train": 370, "load_from_fil": 370, "369": [372, 387, 390], "galleri": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "mem": [372, 390], "mb": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392], "torchrl_demo": [372, 390, 391], "51": [372, 374, 384, 387, 388, 390, 391], "190": [372, 387, 390, 391], "rb_tutori": [372, 389, 390], "59": [372, 374, 387, 389, 390], "281": [372, 387, 389, 390], "515": [372, 387, 389, 390], "coding_dqn": [372, 374, 390], "759": [372, 374, 390], "944": [372, 374, 390], "959": [372, 387, 390], "313": [372, 378, 387, 390], "dqn_with_rnn": [372, 376, 390], "091": [372, 376, 390], "2194": [372, 376, 390], "multiagent_ppo": [372, 386, 390], "07": [372, 373, 374, 386, 387, 388, 390], "783": [372, 386, 390], "316": [372, 386, 387, 390], "coding_ddpg": [372, 373, 390], "54": [372, 373, 374, 387, 388, 389, 390], "107": [372, 373, 387, 389, 390], "323": [372, 373, 387, 390], "torchrl_env": [372, 390, 392], "939": [372, 390, 392], "4087": [372, 390], "coding_ppo": [372, 375, 390], "419": [372, 375, 387, 390], "314": [372, 377, 384, 387, 390], "multiagent_competitive_ddpg": [372, 385, 390], "376": [372, 385, 387, 390], "4255": [372, 390], "multi_task": [372, 384, 390], "554": [372, 384, 387, 390], "pretrained_model": [372, 388, 390], "398": [372, 387, 388, 390], "3535": [372, 388, 390], "983": [372, 378, 390], "43": [372, 374, 377, 387, 390], "484": [372, 377, 387, 390], "25": [372, 373, 374, 376, 379, 387, 390], "235": [372, 379, 387, 390], "317": [372, 379, 387, 390], "233": [372, 382, 387, 390], "344": [372, 373, 382, 387, 390], "778": [372, 380, 390], "315": [372, 375, 380, 387, 390], "799": [372, 381, 387, 390], "348": [372, 387, 390], "author": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 389, 392], "vincent": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 389, 392], "moen": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 389, 392], "assembl": 373, "focus": [373, 379], "straightforward": [373, 374, 377, 378, 379, 380, 389], "maxim": [373, 379, 387], "transpar": [373, 376], "illustr": [373, 374, 378, 389], "bash": 373, "is_fork": [373, 374, 375, 376, 385, 386, 388], "get_start_method": [373, 374, 375, 376, 385, 386, 388], "is_avail": [373, 374, 375, 376, 385, 386, 388], "collector_devic": 373, "loss_dict": 373, "oblivi": [373, 375, 389], "elementari": 373, "didact": 373, "dilut": 373, "pessimist": [373, 374, 375], "target_actor_network_param": 373, "actor_in_kei": 373, "actor_crit": 373, "noth": [373, 375], "compromis": 373, "hp": 373, "hasattr": 373, "_value_estim": 373, "elif": [373, 374], "notimplementederror": 373, "unknown": 373, "ifgg": 373, "_loss_actor": 373, "td_copi": 373, "actor_network_param": [373, 385], "value_network_param": [373, 385], "_loss_valu": 373, "pred_val": 373, "target_value_network_param": 373, "glue": 373, "_forward": 373, "ndimens": 373, "remaind": 373, "env_librari": 373, "env_task": 373, "env_arg": [373, 374], "friendli": 373, "torchr": 373, "rescal": 373, "presum": 373, "make_transformed_env": 373, "reward_sc": 373, "marker": 373, "env_per_collector": 373, "transform_state_dict": 373, "make_t_env": 373, "cheat": 373, "10m": 373, "cautiou": 373, "magnitud": [373, 385], "thousand": [373, 376], "get_env_stat": 373, "proof_env": 373, "5000": [373, 374, 375, 382], "recal": [373, 375, 389], "ddpgmlpactor": 373, "ddpgmlpqnet": 373, "materi": 373, "ornsteinuhlenbeckprocessmodul": [373, 378], "make_ddpg_actor": 373, "q_net": 373, "tight": 373, "decoupl": [373, 379], "10_000": [373, 375], "traj_len": [373, 376], "make_record": 373, "recorder_obj": 373, "flavor": 373, "buffer_s": [373, 374], "random_crop_len": 373, "prb": 373, "buffer_scratch_dir": 373, "temporari": 373, "dataflow": 373, "ceil_div": 373, "utd": [373, 376], "update_to_data": 373, "realiz": 373, "_must_": 373, "001": [373, 387], "outdat": 373, "trick": [373, 374], "despit": 373, "optimizer_actor": 373, "lr": [373, 374, 375, 376, 382, 385, 386, 387], "weight_decai": [373, 374], "optimizer_valu": 373, "total_collection_step": 373, "pretti": [373, 377, 381, 389], "rewards_ev": 373, "collected_fram": 373, "r0": 373, "numel": [373, 375, 376, 382, 385, 388, 389], "current_fram": [373, 385], "sampled_tensordict": 373, "gn1": 373, "clip_grad_norm_": [373, 375, 385, 386, 387], "gn2": 373, "gn": [373, 387], "td_record": 373, "rn": 373, "set_descript": [373, 375, 376, 385, 386, 387], "2f": 373, "800": [373, 374], "3182": 373, "28it": [373, 374], "1600": [373, 374], "09": [373, 374, 386, 387], "905": [373, 387], "24it": [373, 374], "2400": [373, 374, 375], "1323": 373, "45it": [373, 374], "3200": [373, 374], "1702": 373, "55it": [373, 374, 387], "4000": [373, 374, 375], "2016": [373, 374], "73it": [373, 375], "48": [373, 374, 386, 387, 388], "4800": [373, 374, 387], "2285": 373, "42it": [373, 374, 387], "56": [373, 374, 387], "5600": 373, "2540": 373, "64it": [373, 374, 387], "67": [373, 374, 384, 387], "93": [373, 374, 386, 387], "139": [373, 387], "247": [373, 387], "77": [373, 374, 387], "89": [373, 374, 387], "53": [373, 374, 387, 389], "6400": [373, 391], "57it": [373, 374, 387], "76": [373, 374, 387], "212": [373, 387], "72": [373, 374, 387], "7200": 373, "632": 373, "71it": [373, 374], "225": [373, 387], "61": [373, 374, 387, 388], "8000": [373, 375], "521": [373, 387], "92": [373, 374, 387, 388], "82": [373, 374, 387, 388], "219": [373, 387, 392], "69": [373, 374, 387, 388], "8800": 373, "465": [373, 387], "63": [373, 374, 387, 388], "90": [373, 374, 375, 386, 387, 388], "83": [373, 374, 387, 388, 389], "174": [373, 387], "96": [373, 374, 387, 388], "9600": 373, "370": [373, 387], "81it": [373, 375], "120": [373, 387], "74": [373, 374, 387, 388], "10400it": 373, "87it": 373, "49": [373, 374, 376, 387, 388, 389], "65": [373, 374, 387, 388], "71": [373, 374, 387, 388], "187": [373, 387, 392], "plot": [373, 375, 376, 385, 386, 387], "mention": [373, 376, 389, 392], "matplotlib": [373, 375, 376, 385, 386, 387, 389, 392], "pyplot": [373, 375, 376, 385, 386, 387, 389, 392], "plt": [373, 375, 376, 385, 386, 387, 389, 392], "zip": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "legend": [373, 385], "xlabel": [373, 376, 386, 387], "ylabel": [373, 386], "tight_layout": 373, "takeawai": [373, 374], "distpatch": 373, "jupyt": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "ipynb": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "sphinx": [373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392], "road": 374, "aspect": [374, 379], "highest": [374, 378], "prerequisit": [374, 376], "lookup": 374, "amort": [374, 375], "cart": 374, "pole": 374, "un": 374, "actuat": 374, "frictionless": 374, "duelingcnndqnet": 374, "egreedymodul": [374, 376, 378, 382], "is_notebook": 374, "shell": 374, "get_ipython": 374, "__class__": 374, "zmqinteractiveshel": 374, "qtconsol": 374, "terminalinteractiveshel": 374, "ipython": [374, 386, 387], "nameerror": [374, 385], "umbrella": 374, "misplac": 374, "misus": 374, "orchestr": [374, 379, 381], "five": 374, "64x64": 374, "motion": [374, 387], "obs_norm_sd": 374, "mp_context": 374, "simpler": [374, 377], "get_norm_stat": 374, "test_env": 374, "make_model": 374, "dummy_env": 374, "init_bia": 374, "exploration_modul": [374, 376, 378, 382], "eps_greedy_v": 374, "eps_greedy_val_env": 374, "actor_explor": 374, "get_replay_buff": 374, "n_optim": [374, 379, 380], "themselv": 374, "parametriz": 374, "simplic": [374, 375, 380, 388, 389, 391], "get_collector": 374, "cl": 374, "data_collector": 374, "bunch": 374, "ubiquit": [374, 377], "get_loss_modul": 374, "target_updat": [374, 385], "995": [374, 387], "variat": 374, "2e": [374, 387], "wd": 374, "upd": 374, "harder": [374, 391], "5_000": 374, "500000": 374, "100000": 374, "005": [374, 385], "mandatori": [374, 375, 386, 387], "fairer": 374, "budget": 374, "dqn_exp_": 374, "uuid1": [374, 392], "9895": 374, "0737": 374, "registr": [374, 392], "cumbersom": 374, "buffer_hook": 374, "weight_updat": 374, "aliv": 374, "total_reward": 374, "3688": [374, 387], "9259": 374, "62it": [374, 387], "3202": 374, "13it": 374, "3353": [374, 387], "63it": [374, 387], "3718": 374, "99it": [374, 387], "3991": 374, "224": [374, 387], "95it": 374, "58": [374, 387], "82it": 374, "288": [374, 387], "4082": [374, 387], "10it": 374, "3415": 374, "352": [374, 387], "78it": 374, "3566": 374, "384": [374, 387], "34it": [374, 387], "416": [374, 387], "49it": [374, 375, 387], "448": [374, 387], "98it": [374, 376], "4021": 374, "480": [374, 387, 388], "52": [374, 387, 388], "85": [374, 386, 387], "92it": 374, "544": [374, 387], "576": [374, 387], "66it": [374, 387], "3657": [374, 387], "608": [374, 387], "74it": 374, "640": 374, "672": 374, "89it": 374, "3778": 374, "704": 374, "47": [374, 387], "736": 374, "79it": 374, "3445": 374, "768": 374, "91": [374, 387], "3777": 374, "69it": [374, 387], "832": 374, "45": [374, 376, 387], "94it": 374, "864": 374, "4173": 374, "896": 374, "3808": 374, "928": 374, "59it": [374, 387], "960": 374, "18it": [374, 376, 387], "3475": 374, "992": [374, 387], "72it": 374, "4295": [374, 387], "1056": 374, "1088": 374, "58it": [374, 375, 387], "1120": 374, "31it": [374, 387], "1152": 374, "1184": 374, "68it": [374, 387], "1216": 374, "32it": 374, "1248": 374, "05it": [374, 387], "3869": 374, "1280": 374, "25it": 374, "1344": 374, "77it": [374, 387], "1376": 374, "91it": 374, "1408": 374, "1440": 374, "70it": [374, 387], "1472": 374, "83it": 374, "1504": 374, "1536": 374, "16it": [374, 376, 387], "1568": 374, "1632": 374, "11it": 374, "1696": 374, "1728": 374, "1760": 374, "1792": 374, "07it": 374, "1824": 374, "1856": 374, "1888": 374, "12it": 374, "1920": 374, "53it": [374, 387], "1952": 374, "36it": 374, "1984": 374, "65it": [374, 387], "2048": [374, 388], "20it": 374, "2080": 374, "2112": [374, 387], "2144": 374, "2176": 374, "2208": 374, "97it": 374, "2240": 374, "22it": 374, "2272": 374, "40it": [374, 387], "2336": 374, "2368": 374, "80it": 374, "2432": 374, "2464": 374, "27it": 374, "2496": 374, "21it": 374, "2528": [374, 387], "06it": 374, "2560": 374, "33it": [374, 387], "2624": 374, "2656": [374, 387], "44it": [374, 387], "2688": 374, "2720": [374, 387], "55": [374, 386, 387, 389], "2752": 374, "2784": 374, "2816": 374, "57": [374, 387, 388], "2848": 374, "02it": [374, 387], "2880": 374, "2912": 374, "2944": [374, 387], "14it": 374, "60": [374, 375, 386, 387, 388, 391], "2976": [374, 387], "39it": 374, "3040": 374, "47it": [374, 387], "3072": 374, "46it": [374, 387], "62": [374, 387], "3104": 374, "37it": 374, "3136": 374, "67it": [374, 387], "3168": 374, "51it": [374, 387], "3232": [374, 387], "3264": 374, "66": [374, 387, 388], "3296": 374, "3328": 374, "3360": 374, "29it": [374, 375], "68": [374, 387, 388], "3392": 374, "3424": 374, "3456": [374, 387], "70": [374, 375, 386, 387, 388], "3488": 374, "3520": 374, "3552": 374, "78": [374, 387, 388, 389], "3584": 374, "23it": 374, "3616": 374, "73": [374, 387, 389], "3648": 374, "56it": [374, 375, 387], "3680": 374, "3712": 374, "3744": 374, "3776": 374, "26it": [374, 375], "3840": 374, "3872": 374, "3904": 374, "79": [374, 387], "3936": 374, "3968": 374, "85it": 374, "4032": 374, "43it": [374, 387], "4064": 374, "4096": 374, "4128": [374, 387], "4160": 374, "35it": [374, 375], "4192": 374, "4224": 374, "4256": [374, 385, 387], "84it": 374, "4288": [374, 387], "4320": 374, "4352": 374, "4384": 374, "4416": 374, "01it": [374, 375], "4448": 374, "4480": 374, "4512": 374, "76it": 374, "4544": 374, "4576": 374, "4608": 374, "4640": 374, "4672": [374, 387], "4704": 374, "4736": 374, "4768": 374, "54it": [374, 387], "97": [374, 387], "4832": 374, "41it": [374, 387], "4864": 374, "4896": 374, "86it": [374, 376], "4928": 374, "04it": 374, "4960": 374, "4992": 374, "5024it": 374, "19it": [374, 387], "print_csv_files_in_fold": 374, "folder_path": 374, "csv_file": 374, "output_str": 374, "dirpath": 374, "endswith": 374, "strip": 374, "tmp": [374, 389], "tmp6o3rnq37": 374, "dqn_exp_6e4ce48a": 374, "4838": 374, "11ef": 374, "b959": 374, "0242ac110002": 374, "3566153645515442": 374, "42945271730422974": 374, "40213119983673096": 374, "41726210713386536": 374, "39912933111190796": 374, "29826369881629944": 374, "1941293627023697": 374, "2726984918117523": 374, "3285711407661438": 374, "2975308299064636": 374, "4263627231121063": 374, "32616516947746277": 374, "25501152873039246": 374, "3290165364742279": 374, "grad_norm_0": 374, "652604579925537": 374, "955758810043335": 374, "876189708709717": 374, "889103889465332": 374, "779792785644531": 374, "570003032684326": 374, "2991981506347656": 374, "255098819732666": 374, "375737190246582": 374, "10000000894069672": 374, "545454502105713": 374, "qvaluenetwork": 374, "worst": 374, "accuraci": 374, "fanci": [374, 380], "talk": 375, "repetit": [375, 377, 380], "six": 375, "sophist": [375, 386], "invent": 375, "overview": [375, 379, 385, 386, 391], "theta_k": 375, "pi_": 375, "exceed": 375, "discourag": [375, 387], "indispens": 375, "analyz": 375, "lingua": 375, "franca": 375, "defaultdict": [375, 387], "3e": [375, 376, 385, 386], "max_grad_norm": [375, 385, 386], "sub_batch_s": 375, "num_epoch": [375, 386], "entropy_ep": [375, 386], "charact": 375, "inverteddoublependulum": 375, "transmit": 375, "stai": 375, "supplementari": [375, 392], "told": 375, "confid": [375, 385, 386], "ran": 375, "f_": 375, "mu_": 375, "difficulti": [375, 392], "d_ob": 375, "d_action": 375, "policy_modul": [375, 385, 386], "That": [375, 385], "said": 375, "briefli": [375, 385, 386], "refil": [375, 386], "easiest": [375, 379, 385, 386], "mathemat": [375, 385, 386], "tradeoff": [375, 386], "advantage_modul": 375, "lr_schedul": [375, 387], "cosineannealinglr": [375, 387], "eval_str": 375, "tensordict_data": [375, 386], "data_view": [375, 386], "subdata": [375, 385, 386], "cum_reward_str": 375, "4f": [375, 376, 387], "stepcount_str": 375, "param_group": [375, 385], "lr_str": 375, "eval_rollout": 375, "nice": [375, 377, 380], "471": [375, 387], "110": [375, 387], "1747": 375, "0874": 375, "0003": [375, 387], "469": [375, 387], "1072": 375, "3000": 375, "473": [375, 387], "1558": 375, "476": [375, 387], "1800": 375, "0002": [375, 387], "479": [375, 387], "2069": 375, "6000": 375, "481": [375, 387], "2181": 375, "7000": 375, "483": [375, 387], "2361": 375, "472": [375, 387], "2351": 375, "9000": 375, "478": [375, 387], "00it": [375, 387], "2431": [375, 387], "cap": [375, 389], "figsiz": [375, 387], "subplot": [375, 385, 387, 392], "titl": [375, 376, 386, 387], "bit": [375, 376, 377, 385, 386, 389], "84x84": 376, "accessori": 376, "stamp": 376, "assist": 376, "emb": 376, "n_cell": 376, "customiz": 376, "wouldn": 376, "qval": 376, "stoch_polici": 376, "opportun": [376, 385], "uniniti": 376, "again": [376, 377, 378, 380, 386, 388, 389, 392], "redund": 376, "strongli": 376, "sake": [376, 388, 389], "20_000": [376, 387], "longest": 376, "npai": 376, "action_spread": 376, "123": [376, 387], "0005": 376, "150": [376, 387], "topic": [377, 378, 379], "straight": 377, "backtrack": 377, "encapsul": [377, 378, 379], "reset_with_act": 377, "6834": 377, "tp": 377, "stepped_data": 377, "spatial": 377, "useless": 377, "policyless": 377, "appreci": 377, "monitor": 377, "examin": [377, 385], "tackl": 378, "delv": 378, "bypass": 378, "extractor": 378, "palliat": 378, "additivegaussianmodul": [378, 385], "had": [378, 380], "exploration_polici": [378, 385], "greedili": 378, "2d": [378, 385, 386], "innov": [378, 379], "rollout_explor": 378, "sole": 379, "tradit": [379, 385], "supervis": [379, 380, 389, 392], "n_collect": 379, "get_next_batch": 379, "ddpg_loss": 379, "total_loss": 379, "prove": 379, "reliev": 379, "concern": 379, "accustom": 380, "surprisingli": 380, "fundament": 380, "art": [380, 385, 386], "pseudo": [380, 387], "multirpocess": 380, "countless": 380, "yourself": [380, 385, 386], "lightweight": 381, "portabl": 381, "everywher": 381, "log_scalar": 381, "elaps": 381, "my_scalar": 381, "saw": [381, 387, 389], "excess": 381, "349": [381, 387], "lesson": 382, "voluntarili": 382, "value_mlp": 382, "100_000": 382, "init_rand_step": 382, "training_loop": 382, "video_record": 382, "arbitrarili": 382, "total_count": 382, "total_episod": 382, "t0": 382, "t1": 382, "conclud": [382, 388], "tutorials_python": 383, "tutorials_jupyt": 383, "env1_obs_kei": 384, "observation_stand": 384, "env2_obs_kei": 384, "observation_walk": 384, "tdreset1": 384, "tdreset2": 384, "lazy_stack": 384, "policy_common": 384, "policy_stand": 384, "policy_walk": 384, "But": 384, "env1_mak": 384, "env2_mak": 384, "_single_task": 384, "td_rollout": 384, "matteo": [385, 386], "bettini": [385, 386], "benchmarl": [385, 386], "simple_tag": 385, "maddpg": [385, 386], "multiagentparticleenviron": 385, "mpe": 385, "centralis": [385, 386], "tie": [385, 386], "iddpg": [385, 386], "typical": 385, "richard": 385, "andrew": 385, "mit": 385, "press": 385, "2018": 385, "mathbf": [385, 386], "pi": [385, 386, 387], "decentralis": [385, 386], "literatur": [385, 386], "overcom": [385, 386], "stationari": [385, 386], "concurr": [385, 386], "establish": 385, "gui": [385, 386], "multiagentmlp": [385, 386], "is_sphinx": 385, "__sphinx_build__": 385, "n_iter": [385, 386], "evad": 385, "iteration_when_stop_training_evad": 385, "memory_s": 385, "n_optimiser_step": 385, "train_batch_s": 385, "polyak_tau": 385, "chaser": 385, "red": 385, "circl": [385, 386], "touch": [385, 387], "penal": 385, "acceler": [385, 386], "obstacl": 385, "drag": [385, 386], "elast": [385, 386], "collis": [385, 386], "imped": 385, "n_chaser": 385, "n_evad": 385, "n_obstacl": 385, "use_vma": 385, "simple_tag_v3": 385, "num_good": 385, "num_adversari": 385, "num_obstacl": 385, "max_cycl": 385, "num_vmas_env": [385, 386], "num_good_ag": 385, "num_landmark": 385, "adversary_1": 385, "four": [385, 386, 387], "n_agents_in_that_group": 385, "stress": [385, 386], "paramount": [385, 386], "n_rollout_step": [385, 386], "evolut": [385, 386], "group_nam": 385, "n_agents_in_group": 385, "minor": 385, "agents_exploration_polici": 385, "utilis": [385, 386], "withing": 385, "n_obs_per_ag": [385, 386], "n_actions_per_ag": [385, 386], "share_parameters_polici": [385, 386], "policy_net": [385, 386], "_agent": 385, "grant": [385, 386], "converg": [385, 386], "share_parameters_crit": [385, 386], "obs_act": 385, "cat_modul": 385, "critic_modul": 385, "fantast": [385, 386], "reset_td": 385, "interfer": 385, "flatten_kei": 385, "process_batch": 385, "group_shap": 385, "get_item_shap": [385, 386], "nested_done_kei": 385, "nested_terminated_kei": 385, "desc": [385, 386], "episode_reward_mean_": 385, "episode_reward_mean_map": 385, "train_group_map": 385, "deepcopi": 385, "group_batch": 385, "_group": 385, "loss_nam": 385, "episode_reward_mean": [385, 386], "traceback": [385, 392], "820": 385, "1297": 385, "__getattr__": 385, "1895": 385, "proce": 385, "screen": 385, "fig": 385, "set_ylabel": 385, "axvlin": 385, "color": 385, "orang": 385, "set_xlabel": 385, "video_logg": 385, "vmas_log": 385, "env_with_rend": 385, "vmas_rend": 385, "print_log_dir": 385, "profici": [385, 386], "lidar": 386, "sensor": 386, "mappo": 386, "ippo": 386, "phase": [386, 389], "analys": 386, "visualis": 386, "vmas_devic": 386, "6_000": 386, "minibatch_s": 386, "generalis": 386, "simd": 386, "parallelis": 386, "warp": 386, "todai": 386, "surround": 386, "dot": [386, 387], "collid": 386, "penalis": 386, "scenario_nam": 386, "final_rew": 386, "agent_collis": 386, "denot": 386, "critic_net": 386, "minibatch": 386, "episode_reward_mean_list": 386, "critic_network_param": 386, "target_critic_network_param": 386, "4579917788505554": 386, "14524875581264496": 386, "168386459350586": 386, "3613134622573853": 386, "921463131904602": 386, "2106335163116455": 386, "1925103664398193": 386, "664064407348633": 386, "6539173126220703": 386, "743558168411255": 386, "xvfb": 386, "pyvirtualdisplai": 386, "1400": [386, 387], "900": 386, "pil": 386, "rendering_callback": 386, "fromarrai": 386, "gif": 386, "save_al": 386, "append_imag": 386, "freeli": 387, "undertaken": 387, "broader": 387, "wider": 387, "algebra": 387, "acquaint": 387, "avenu": 387, "_apply_to_composit": 387, "default_x": 387, "default_i": 387, "upward": 387, "angular": 387, "sin": 387, "rad": 387, "sec": 387, "angl": 387, "deleg": 387, "new_th": 387, "new_thdot": 387, "g_forc": 387, "angle_norm": 387, "albeit": 387, "high_th": 387, "high_thdot": 387, "low_th": 387, "low_thdot": 387, "trivial": 387, "shortcut": [387, 392], "irrelev": 387, "_make_spec": 387, "td_param": 387, "render_fp": 387, "random_": 387, "_make_step": 387, "staticmethod": 387, "showcas": 387, "skeleton": 387, "_apply_transform": [387, 392], "_inv_apply_transform": [387, 392], "subset": [387, 388], "sine": 387, "cosin": 387, "sintransform": 387, "costransform": 387, "t_sin": 387, "t_co": 387, "cat_transform": 387, "simple_rollout": 387, "unexplor": 387, "init_td": 387, "traj_return": 387, "last_reward": 387, "is_ipython": 387, "inlin": 387, "get_backend": 387, "ion": 387, "gcf": 387, "clear_output": 387, "625": 387, "0748": 387, "519": 387, "0499": 387, "4472": 387, "073": 387, "0685": 387, "0408": 387, "552": 387, "5154": 387, "9086": 387, "9385": 387, "155": 387, "2568": 387, "4981": 387, "223": 387, "8929": 387, "4491": 387, "581": 387, "3233": 387, "0664": 387, "596": 387, "1021": 387, "5263": 387, "9579": 387, "5807": 387, "8075": 387, "2009": 387, "5525": 387, "914": 387, "2894": 387, "0115": 387, "0977": 387, "1845": 387, "1830": 387, "4858": 387, "2863": 387, "0297": 387, "464": 387, "4617": 387, "5997": 387, "904": 387, "1647": 387, "0777": 387, "901": 387, "4709": 387, "6813": 387, "8317": 387, "3221": 387, "5554": 387, "276": 387, "701": 387, "8570": 387, "6656": 387, "463": 387, "7779": 387, "6911": 387, "875": 387, "0796": 387, "7082": 387, "308": 387, "0421": 387, "1496": 387, "5037": 387, "1755": 387, "5029": 387, "9454": 387, "665": 387, "9330": 387, "2118": 387, "444": 387, "0995": 387, "6294": 387, "3146": 387, "2909": 387, "461": 387, "9720": 387, "1298": 387, "9923": 387, "0345": 387, "61it": 387, "3438": 387, "424": 387, "60it": 387, "6953": 387, "5233": 387, "411": 387, "8011": 387, "5329": 387, "2677": 387, "6969": 387, "7010": 387, "9352": 387, "7707": 387, "6178": 387, "5646": 387, "7304": 387, "9407": 387, "942": 387, "3882": 387, "7604": 387, "3507": 387, "8928": 387, "258": 387, "6978": 387, "4641": 387, "549": 387, "6047": 387, "5005": 387, "4136": 387, "2993": 387, "3222": 387, "4046": 387, "7314": 387, "275": [387, 392], "6331": 387, "9318": 387, "961": 387, "8331": 387, "1604": 387, "4099": 387, "4761": 387, "125": 387, "4262": 387, "6363": 387, "382": 387, "3593": 387, "7377": 387, "2847": 387, "3443": 387, "867": 387, "3592": 387, "4760": 387, "441": 387, "9950": 387, "8021": 387, "3528": 387, "1214": 387, "708": 387, "4023": 387, "3583": 387, "041": 387, "3801": 387, "0310": 387, "4244": 387, "2039": 387, "4850": 387, "8748": 387, "706": 387, "4897": 387, "9210": 387, "8964": 387, "0832": 387, "3934": 387, "456": 387, "8971": 387, "2933": 387, "3377": 387, "6996": 387, "2274": 387, "8916": 387, "098": 387, "2660": 387, "9110": 387, "4503": 387, "6956": 387, "9172": 387, "4026": 387, "946": 387, "9229": 387, "5205": 387, "294": 387, "8872": 387, "6637": 387, "019": 387, "9281": 387, "2082": 387, "724": 387, "8561": 387, "6574": 387, "357": 387, "4138": 387, "5230": 387, "385": 387, "4065": 387, "5642": 387, "921": 387, "9786": 387, "4129": 387, "5831": 387, "266": 387, "7723": 387, "4152": 387, "0898": 387, "389": 387, "5155": 387, "5376": 387, "5616": 387, "4094": 387, "283": 387, "5333": 387, "4803": 387, "895": 387, "6566": 387, "2588": 387, "662": 387, "4732": 387, "7503": 387, "068": 387, "0714": 387, "3370": 387, "059": 387, "8612": 387, "1915": 387, "3855": 387, "0349": 387, "9644": 387, "4538": 387, "445": 387, "0392": 387, "4080": 387, "1648": 387, "9599": 387, "143": 387, "4284": 387, "5946": 387, "2590": 387, "9181": 387, "4621": 387, "9075": 387, "674": 387, "1772": 387, "9444": 387, "351": 387, "9391": 387, "5595": 387, "8673": 387, "6240": 387, "5919": 387, "1071": 387, "9127": 387, "251": 387, "9799": 387, "3131": 387, "9612": 387, "9705": 387, "8741": 387, "2230": 387, "0972": 387, "0337": 387, "0350": 387, "0654": 387, "2441": 387, "4596": 387, "362": 387, "103": 387, "4362": 387, "171": 387, "104": 387, "4041": 387, "6907": 387, "105": 387, "4664": 387, "2760": 387, "0299": 387, "9712": 387, "3332": 387, "4479": 387, "772": 387, "108": 387, "4357": 387, "9591": 387, "543": 387, "109": [387, 389], "6216": 387, "1353": 387, "692": 387, "6261": 387, "7086": 387, "496": 387, "111": 387, "7758": 387, "9818": 387, "112": 387, "7772": 387, "5055": 387, "113": [387, 389], "5840": 387, "3180": 387, "2083": 387, "115": 387, "5275": 387, "6873": 387, "116": 387, "4107": 387, "1624": 387, "117": 387, "6372": 387, "2571": 387, "118": 387, "4039": 387, "4428": 387, "119": 387, "4728": 387, "5628": 387, "6767": 387, "2466": 387, "522": 387, "121": [387, 392], "5873": 387, "5072": 387, "6548": 387, "3766": 387, "5134": 387, "1955": 387, "124": 387, "2481": 387, "0591": 387, "4500": 387, "3368": 387, "126": 387, "9708": 387, "7059": 387, "127": [387, 389], "3031": 387, "2534": 387, "843": 387, "3327": 387, "6193": 387, "129": 387, "4831": 387, "1172": 387, "2593": 387, "4219": 387, "962": 387, "8380": 387, "899": 387, "132": 387, "2721": 387, "9048": 387, "166": 387, "133": 387, "2419": 387, "5248": 387, "2139": 387, "4278": 387, "135": [387, 389], "0690": 387, "5140": 387, "136": 387, "1140": 387, "7402": 387, "137": 387, "5356": 387, "1636": 387, "138": [387, 389], "0671": 387, "8798": 387, "8918": 387, "3298": 387, "307": 387, "140": 387, "1779": 387, "141": 387, "1771": 387, "3624": 387, "936": 387, "142": 387, "1683": 387, "4810": 387, "9373": 387, "4435": 387, "4396": 387, "8092": 387, "145": 387, "2572": 387, "146": 387, "4212": 387, "0260": 387, "147": 387, "0939": 387, "6478": 387, "605": 387, "148": 387, "6606": 387, "7289": 387, "149": 387, "9300": 387, "7193": 387, "563": 387, "1166": 387, "8514": 387, "151": 387, "9108": 387, "0672": 387, "292": 387, "152": 387, "8591": 387, "3768": 387, "153": [387, 389], "9976": 387, "154": 387, "0576": 387, "0067": 387, "935": 387, "4199": 387, "1722": 387, "156": 387, "8310": 387, "3466": 387, "157": 387, "8631": 387, "2492": 387, "158": 387, "8763": 387, "1277": 387, "159": 387, "5562": 387, "7446": 387, "1082": 387, "9830": 387, "161": 387, "0946": 387, "5229": 387, "162": 387, "4574": 387, "6900": 387, "163": [387, 388], "2229": 387, "0318": 387, "482": 387, "164": 387, "0543": 387, "0817": 387, "761": 387, "165": 387, "2809": 387, "5118": 387, "366": 387, "1142": 387, "5635": 387, "167": 387, "1949": 387, "2327": 387, "982": 387, "168": 387, "0967": 387, "0387": 387, "457": 387, "169": 387, "0782": 387, "2150": 387, "170": 387, "5222": 387, "3725": 387, "9288": 387, "9837": 387, "1416": 387, "1099": 387, "173": 387, "8620": 387, "8475": 387, "1807": 387, "4375": 387, "175": [387, 389], "1148": 387, "0645": 387, "75it": 387, "2751": 387, "8313": 387, "177": 387, "9286": 387, "9770": 387, "178": 387, "5735": 387, "2837": 387, "179": 387, "2926": 387, "9489": 387, "180": 387, "1507": 387, "181": 387, "50it": 387, "8724": 387, "3567": 387, "182": [387, 392], "3574": 387, "6140": 387, "183": 387, "7895": 387, "2518": 387, "184": 387, "6146": 387, "185": 387, "8776": 387, "7358": 387, "186": 387, "3722": 387, "8428": 387, "7955": 387, "188": 387, "0092": 387, "7106": 387, "829": 387, "189": 387, "2264": 387, "6919": 387, "1438": 387, "1362": 387, "191": 387, "0618": 387, "8217": 387, "9420": 387, "6765": 387, "193": 387, "7745": 387, "0709": 387, "194": 387, "9478": 387, "6867": 387, "195": 387, "6507": 387, "6225": 387, "196": 387, "2244": 387, "2195": 387, "197": 387, "5385": 387, "9263": 387, "198": 387, "1878": 387, "2374": 387, "8054": 387, "3504": 387, "557": 387, "0766": 387, "201": 387, "2011": 387, "8393": 387, "202": 387, "0803": 387, "7815": 387, "203": 387, "8363": 387, "2460": 387, "204": 387, "8643": 387, "2191": 387, "593": 387, "205": 387, "0773": 387, "1343": 387, "206": 387, "8657": 387, "207": [387, 389], "9304": 387, "7584": 387, "208": 387, "8752": 387, "2307": 387, "209": 387, "5250": 387, "4869": 387, "7837": 387, "5762": 387, "211": 387, "6661": 387, "8600": 387, "2502": 387, "1752": 387, "3075": 387, "8871": 387, "214": 387, "9406": 387, "8090": 387, "215": 387, "6291": 387, "8923": 387, "876": 387, "216": 387, "9504": 387, "21e": 387, "217": 387, "7431": 387, "7880": 387, "218": 387, "4463": 387, "5432": 387, "3793": 387, "3313": 387, "8843": 387, "0369": 387, "065": 387, "221": 387, "4828": 387, "8391": 387, "222": 387, "6265": 387, "2913": 387, "947": 387, "5541": 387, "1252": 387, "7342": 387, "2396": 387, "5936": 387, "1924": 387, "226": 387, "9975": 387, "2045": 387, "227": 387, "8367": 387, "9540": 387, "228": 387, "7259": 387, "6743": 387, "229": 387, "4827": 387, "7528": 387, "230": 387, "7361": 387, "8756": 387, "231": 387, "7646": 387, "1116": 387, "232": 387, "5426": 387, "8385": 387, "5662": 387, "8585": 387, "234": 387, "8234": 387, "7930": 387, "2648": 387, "9309": 387, "236": 387, "6817": 387, "237": 387, "0943": 387, "1533": 387, "238": 387, "3045": 387, "0483": 387, "239": 387, "6415": 387, "0201": 387, "241": 387, "4437": 387, "4365": 387, "242": 387, "0358": 387, "4943": 387, "243": 387, "1272": 387, "5003": 387, "1180": 387, "2637": 387, "245": 387, "7197": 387, "0873": 387, "246": 387, "2917": 387, "0160": 387, "0738": 387, "248": 387, "3689": 387, "0120": 387, "249": 387, "5570": 387, "0475": 387, "250": 387, "4423": 387, "2220": 387, "6803": 387, "252": 387, "1465": 387, "7214": 387, "253": 387, "8801": 387, "7034": 387, "254": 387, "9136": 387, "4076": 387, "7589": 387, "5013": 387, "8150": 387, "2241": 387, "257": 387, "0753": 387, "8081": 387, "1951": 387, "8314": 387, "259": 387, "0038": 387, "260": 387, "0889": 387, "4616": 387, "261": 387, "0655": 387, "262": 387, "8333": 387, "9476": 387, "263": 387, "7554": 387, "3798": 387, "264": 387, "3717": 387, "3947": 387, "529": 387, "265": 387, "3060": 387, "6495": 387, "7467": 387, "8889": 387, "267": 387, "8457": 387, "591": 387, "7137": 387, "0536": 387, "771": 387, "269": 387, "1651": 387, "388": 387, "270": 387, "8246": 387, "5709": 387, "271": 387, "7502": 387, "0521": 387, "032": 387, "272": 387, "5475": 387, "7253": 387, "273": 387, "2856": 387, "7130": 387, "274": 387, "2778": 387, "4122": 387, "8368": 387, "1841": 387, "9622": 387, "1603": 387, "003e": 387, "277": 387, "0247": 387, "346": 387, "278": 387, "2238": 387, "6418": 387, "279": 387, "0626": 387, "2538": 387, "280": 387, "0149": 387, "7380": 387, "2167": 387, "8911": 387, "282": 387, "8725": 387, "1983": 387, "8142": 387, "3709": 387, "284": 387, "4989": 387, "285": 387, "6464": 387, "6210": 387, "286": 387, "9726": 387, "0820": 387, "287": 387, "6975": 387, "9091": 387, "4926": 387, "4791": 387, "289": 387, "0905": 387, "3500": 387, "290": 387, "2287": 387, "291": 387, "9918": 387, "5543": 387, "9245": 387, "6444": 387, "631": 387, "293": 387, "0448": 387, "4769": 387, "8566": 387, "7208": 387, "295": 387, "0966": 387, "296": 387, "5303": 387, "1537": 387, "023": 387, "297": 387, "2682": 387, "564": 387, "298": 387, "4318": 387, "5063": 387, "299": 387, "7475": 387, "4190": 387, "8186": 387, "5077": 387, "301": 387, "1883": 387, "5291": 387, "302": 387, "3998": 387, "303": 387, "3622": 387, "0930": 387, "626": 387, "304": 387, "9500": 387, "5664": 387, "305": 387, "5697": 387, "3024": 387, "306": 387, "3117": 387, "0052": 387, "006": 387, "0981": 387, "9312": 387, "3873": 387, "309": 387, "0411": 387, "2650": 387, "1656": 387, "0228": 387, "004": 387, "311": 387, "1196": 387, "2478": 387, "312": 387, "7353": 387, "0812": 387, "3022": 387, "758": 387, "1406": 387, "4626": 387, "2156": 387, "851": 387, "1953": 387, "3774": 387, "6385": 387, "9917": 387, "318": 387, "2764": 387, "319": 387, "6391": 387, "9317": 387, "9748": 387, "2679": 387, "321": [387, 391], "8495": 387, "5125": 387, "8177": 387, "6602": 387, "0704": 387, "5776": 387, "324": 387, "9833": [387, 391], "1339": 387, "402": 387, "325": 387, "1238": 387, "326": 387, "9299": 387, "0227": 387, "327": 387, "7727": 387, "1607": 387, "336": 387, "328": 387, "3958": 387, "3223": 387, "763": 387, "329": 387, "4742": 387, "1797": 387, "330": 387, "0144": 387, "0085": 387, "791": 387, "331": 387, "8284": 387, "0428": 387, "332": 387, "7365": 387, "333": 387, "4566": 387, "0781": 387, "086": 387, "334": 387, "3355": 387, "0230": 387, "335": 387, "9346": 387, "0423": 387, "076": 387, "3711": 387, "1335": 387, "6855": 387, "337": 387, "0304": 387, "0023": 387, "8459": 387, "338": 387, "9998": 387, "4399": 387, "339": 387, "2303": 387, "1346": 387, "340": 387, "2915": 387, "7116": 387, "341": 387, "5560": 387, "0487": 387, "342": 387, "5119": 387, "061": 387, "343": 387, "3305": 387, "3705": 387, "957": 387, "6068": 387, "345": 387, "5731": 387, "3897": 387, "0376": 387, "347": 387, "0434": 387, "012": 387, "1300": 387, "1215": 387, "0968": 387, "0885": 387, "350": 387, "1348": 387, "0073": 387, "5052": 387, "4184": 387, "2817": 387, "8887": 387, "353": 387, "4779": 387, "1009": 387, "354": 387, "0604": 387, "599": 387, "355": 387, "4486": 387, "1176": 387, "656": 387, "356": 387, "48it": 387, "2436": 387, "0668": 387, "8849": 387, "0012": 387, "358": 387, "7511": 387, "8804": 387, "359": 387, "8870": 387, "6728": 387, "360": 387, "8841": 387, "5508": 387, "361": 387, "5242": 387, "0013": 387, "6185": 387, "363": 387, "1378": 387, "0204": 387, "364": 387, "0355": 387, "685": 387, "365": 387, "4884": 387, "0231": 387, "0014": 387, "6793": 387, "367": 387, "9834": 387, "863": 387, "368": 387, "6709": 387, "462": 387, "5199": 387, "9790": 387, "9401": 387, "7802": 387, "371": 387, "6723": 387, "372": 387, "2678": 387, "6201": 387, "373": 387, "2184": 387, "7385": 387, "374": 387, "6344": 387, "617": 387, "375": 387, "9945": 387, "0772": 387, "567": 387, "7576": 387, "0398": 387, "377": 387, "3396": 387, "0022": 387, "094": 387, "378": 387, "3073": 387, "4018": 387, "379": 387, "1869": 387, "380": 387, "0481": 387, "1117": 387, "381": 387, "6823": 387, "981": 387, "8305": 387, "0210": 387, "383": 387, "4908": 387, "0272": 387, "538": 387, "3267": 387, "0111": 387, "7965": 387, "1796": 387, "0039": 387, "5396": 387, "386": 387, "3757": 387, "0490": 387, "387": 387, "1394": 387, "4187": 387, "2986": 387, "7954": 387, "1274": 387, "0063": 387, "813": 387, "390": 387, "8706": 387, "0114": 387, "391": 387, "6922": 387, "2423": 387, "392": 387, "9115": 387, "2602": 387, "393": 387, "2449": 387, "0783": 387, "394": 387, "0631": 387, "0057": 387, "7444": 387, "395": 387, "3339": 387, "0167": 387, "396": 387, "4806": 387, "397": 387, "4171": 387, "067": 387, "2618": 387, "5809": 387, "399": 387, "0054": 387, "3364": 387, "8733": 387, "0184": 387, "401": 387, "9137": 387, "0113": 387, "025": 387, "0386": 387, "0625": 387, "403": 387, "1332": 387, "0582": 387, "7816": 387, "404": 387, "8341": 387, "0941": 387, "854": 387, "405": 387, "8615": 387, "588": 387, "406": 387, "3849": 387, "008": 387, "407": 387, "9395": 387, "0765": 387, "055": 387, "408": 387, "2685": 387, "2235": 387, "688": 387, "409": 387, "3052": 387, "4249": 387, "410": 387, "6806": 387, "6383": 387, "3721": 387, "9981": 387, "412": 387, "1862": 387, "822": 387, "413": 387, "9811": 387, "0171": 387, "013": 387, "414": 387, "0252": 387, "0049": 387, "6205": 387, "415": 387, "1108": 387, "4921": 387, "9142": 387, "8130": 387, "417": 387, "1725": 387, "0036": 387, "3196": 387, "418": 387, "7795": 387, "0242": 387, "7737": 387, "0138": 387, "420": 387, "1462": 387, "0053": 387, "421": 387, "9226": 387, "6139": 387, "422": 387, "9889": 387, "0403": 387, "423": 387, "6194": 387, "0032": 387, "3989": 387, "0104": 387, "425": 387, "9960": 387, "0009": 387, "6009": 387, "426": 387, "2697": 387, "0914": 387, "427": 387, "1114": 387, "428": 387, "9862": 387, "1932": 387, "429": 387, "0637": 387, "0623": 387, "082": 387, "430": 387, "9906": 387, "2031": 387, "431": 387, "9948": 387, "0895": 387, "432": 387, "1970": 387, "0256": 387, "4231": 387, "0449": 387, "644": 387, "434": 387, "1039": 387, "1973": 387, "435": 387, "4561": 387, "1225": 387, "436": 387, "0211": 387, "2125": 387, "437": 387, "3866": 387, "0050": 387, "7202": 387, "438": 387, "6388": 387, "0072": 387, "439": 387, "1187": 387, "0015": 387, "5116": 387, "440": 387, "0432": 387, "0025": 387, "7809": 387, "1925": 387, "0103": 387, "442": 387, "9570": 387, "443": 387, "0871": 387, "5601": 387, "0165": 387, "0047": 387, "6061": 387, "2746": 387, "0027": 387, "7887": 387, "446": 387, "1835": 387, "0035": 387, "855": 387, "447": 387, "8420": 387, "548": 387, "2653": 387, "0126": 387, "9736": 387, "449": 387, "0594": 387, "0119": 387, "6196": 387, "450": 387, "4509": 387, "0373": 387, "451": 387, "0620": 387, "452": 387, "6898": 387, "3235": 387, "687": 387, "453": 387, "5879": 387, "454": 387, "8406": 387, "0694": 387, "455": 387, "8259": 387, "0235": 387, "8500": 387, "0024": 387, "4054": 387, "458": 387, "2027": 387, "0894": 387, "459": 387, "5966": 387, "460": 387, "6942": 387, "0016": 387, "4254": 387, "6703": 387, "0145": 387, "8124": 387, "0218": 387, "9196": 387, "0188": 387, "8986": 387, "0884": 387, "0084": 387, "5624": 387, "8862": 387, "0006": 387, "5384": 387, "466": 387, "5837": 387, "467": 387, "8954": 387, "0101": 387, "6751": 387, "468": 387, "8063": 387, "0122": 387, "9635": 387, "0692": 387, "4216": 387, "470": 387, "1227": 387, "0586": 387, "162e": 387, "9690": 387, "4166": 387, "6324": 387, "0778": 387, "474": 387, "8548": 387, "0017": 387, "4408": 387, "475": 387, "8125": 387, "1515": 387, "2733": 387, "0044": 387, "2836": 387, "477": 387, "7497": 387, "7681": 387, "8547": 387, "0105": 387, "7212": 387, "9848": 387, "0019": 387, "6498": 387, "1987": 387, "0011": 387, "5473": 387, "8991": 387, "6091": 387, "9189": 387, "5771": 387, "6781": 387, "7542": 387, "5959": 387, "0064": 387, "485": 387, "2547": 387, "486": 387, "0636": 387, "547": 387, "487": 387, "0065": 387, "488": 387, "1694": 387, "0083": 387, "5759": 387, "489": 387, "0493": 387, "0021": 387, "7805": 387, "490": 387, "0950": 387, "497": 387, "491": 387, "9717": 387, "3672": 387, "492": 387, "0207": 387, "493": 387, "8266": 387, "5365": 387, "494": 387, "2623": 387, "5078": 387, "495": 387, "4545": 387, "09636": 387, "8754": 387, "0010": 387, "498": 387, "0031": 387, "8269": 387, "499": 387, "6642": 387, "2284": 387, "501": 387, "9130": 387, "0008": 387, "502": 387, "503": 387, "7624": 387, "0056": 387, "3858": 387, "504": 387, "0890": 387, "0042": 387, "505": 387, "7505": 387, "2157": 387, "506": 387, "8394": 387, "3413": 387, "507": 387, "9609": 387, "0041": 387, "6905": 387, "508": 387, "8467": 387, "4409": 387, "509": 387, "510": 387, "8128": 387, "3559": 387, "511": 387, "1479": 387, "0264": 387, "1589": 387, "566": 387, "513": 387, "2756": 387, "0046": 387, "5266": 387, "514": 387, "9873": 387, "0112": 387, "9314": 387, "3791": 387, "0721": 387, "516": 387, "4580": 387, "0758": 387, "6114": 387, "517": 387, "518": 387, "1958": 387, "5553": 387, "8924": 387, "0097": 387, "520": 387, "3737": 387, "0234": 387, "9125": 387, "4623": 387, "3230": 387, "0589": 387, "3784": 387, "523": 387, "9482": 387, "0051": 387, "524": 387, "1979": 387, "0045": 387, "6401": 387, "525": 387, "1588": 387, "0048": 387, "6255": 387, "526": 387, "6084": 387, "3477": 387, "1475": 387, "0209": 387, "528": 387, "7611": 387, "1040": 387, "0099": 387, "0173": 387, "643": 387, "530": 387, "52it": 387, "8189": 387, "4358": 387, "531": 387, "9897": 387, "532": 387, "1548": 387, "9751": 387, "533": 387, "6362": 387, "7495": 387, "534": 387, "1749": 387, "9513": 387, "535": 387, "7708": 387, "0371": 387, "536": 387, "2649": 387, "0437": 387, "537": 387, "5491": 387, "0276": 387, "6426": 387, "7294": 387, "078e": 387, "539": 387, "9928": 387, "540": 387, "7937": 387, "0124": 387, "9664": 387, "541": 387, "3342": 387, "542": 387, "2046": 387, "5496": 387, "0956": 387, "0059": 387, "545": 387, "9028": 387, "5843": 387, "546": 387, "0674": 387, "0178": 387, "797": 387, "2815": 387, "0599": 387, "1587": 387, "9276": 387, "8228": 387, "6164": 387, "551": 387, "6850": 387, "9167": 387, "3092": 387, "0670": 387, "9177": 387, "553": 387, "1599": 387, "0043": 387, "6367": 387, "555": 387, "556": 387, "6694": 387, "2622": 387, "0372": 387, "4841": 387, "558": 387, "2707": 387, "757": 387, "559": 387, "2267": 387, "5415": 387, "560": 387, "4556": 387, "0163": 387, "561": 387, "1839": 387, "0809": 387, "6262": 387, "562": 387, "0278": 387, "1112": 387, "6155": 387, "565": 387, "1427": 387, "3582": 387, "624": 387, "7870": 387, "9490": 387, "0439": 387, "8796": 387, "568": 387, "8026": 387, "612": 387, "569": [387, 392], "3147": 387, "8486": 387, "570": 387, "7917": 387, "0129": 387, "571": [387, 392], "9553": 387, "0020": 387, "6871": 387, "572": 387, "3132": 387, "0159": 387, "8646": 387, "573": 387, "5320": 387, "0269": 387, "574": 387, "2955": 387, "0245": 387, "575": 387, "3347": 387, "0179": 387, "9718": 387, "1629": 387, "804": 387, "577": 387, "4164": 387, "0070": 387, "4335": 387, "578": 387, "579": 387, "3049": 387, "9063": 387, "580": 387, "8785": 387, "3295": 387, "5184": 387, "0546": 387, "582": 387, "4589": 387, "583": 387, "4697": 387, "2476": 387, "584": 387, "2397": 387, "585": 387, "4953": 387, "1775": 387, "586": 387, "2258": 387, "0110": 387, "7671": 387, "587": 387, "3981": 387, "8590": 387, "0007": 387, "589": 387, "9820": 387, "4221": 387, "590": 387, "1293": 387, "0116": 387, "868": 387, "1675": 387, "5931": 387, "592": 387, "2910": 387, "5219": 387, "2124": 387, "1730": 387, "737": 387, "594": 387, "2914": 387, "0206": 387, "595": 387, "0172": 387, "3982": 387, "0945": 387, "0121": 387, "4789": 387, "597": 387, "3805": 387, "4074": 387, "598": 387, "3310": 387, "5065": 387, "6028": 387, "6316": 387, "6724": 387, "6523": 387, "601": 387, "0136": 387, "4298": 387, "602": 387, "3524": 387, "2629": 387, "603": 387, "2635": 387, "7839": 387, "604": 387, "6041": 387, "8027": 387, "4170": 387, "4675": 387, "606": 387, "3153": 387, "9316": 387, "607": 387, "0649": 387, "9722": 387, "7989": 387, "0329": 387, "609": 387, "1976": 387, "6852": 387, "610": 387, "4793": 387, "1255": 387, "611": 387, "4581": 387, "0394": 387, "2047": 387, "0326": 387, "613": 387, "8967": 387, "8619": 387, "614": 387, "5906": 387, "6491": 387, "615": 387, "6634": 387, "4394": 387, "616": 387, "0624": 387, "0061": 387, "5676": 387, "3259": 387, "0131": 387, "7733": 387, "618": 387, "7515": 387, "0189": 387, "5575": 387, "619": 387, "9313": 387, "6286": 387, "620": 387, "4325": 387, "7832": 387, "621": 387, "1134": 387, "622": 387, "4572": 387, "0500": 387, "5838": 387, "623": 387, "3818": 387, "8623": 387, "1253": 387, "6622": 387, "subject": 387, "explain": 388, "semat": 388, "r3mtransform": 388, "env_transform": [388, 392], "s3": 388, "amazonaw": 388, "r3m_50": 388, "374m": 388, "9m": 388, "4mb": 388, "5m": 388, "6mb": 388, "2m": 388, "5mb": 388, "1mb": 388, "3mb": 388, "6m": 388, "8mb": 388, "0m": 388, "4m": 388, "115m": 388, "9mb": 388, "131m": 388, "7mb": 388, "148m": 388, "164m": 388, "180m": 388, "195m": 388, "203m": 388, "213m": 388, "229m": 388, "246m": 388, "262m": 388, "279m": 388, "293m": 388, "104mb": 388, "304m": 388, "314m": 388, "328m": 388, "342m": 388, "351m": 388, "360m": 388, "2mb": 388, "wiser": 388, "batteri": 389, "buffer_list": 389, "lowest": 389, "medium": 389, "buffer_lazytensor": 389, "buffer_lazymemmap": 389, "tempdir": 389, "tmp86xnnacb": 389, "fullest": 389, "mydata": 389, "background": 389, "question": [389, 391], "_i": 389, "artifici": 389, "0893e": 389, "hamper": 389, "she": 389, "pars": 389, "proport": 389, "hist": 389, "barcontain": 389, "artist": 389, "reappear": 389, "unfold": 389, "problemat": 389, "4th": 389, "prioritizedslicesampl": 389, "tensordictmaxvaluewrit": 389, "demo": 391, "icml": 391, "vmoen": 391, "fb": 391, "invest": 391, "platform": 391, "media": 391, "predominantli": 391, "tensordict1": 391, "tensordict2": 391, "tensordict_sampl": 391, "_sampler": 391, "_sum_tre": 391, "modulenotfounderror": 391, "28791671991348267": 391, "noopresetenv": [391, 392], "backbone_modul": 391, "params_expand": 391, "exec_sequ": 391, "tensordict_exp": 391, "base_modul": 391, "0137": 391, "1524": 391, "0641": 391, "viewbackward0": 391, "asstridedbackward0": 391, "8728": 391, "1334": 391, "3494": 391, "6887": 391, "6402": 391, "_safetanhbackward": 391, "1132": 391, "1762": 391, "3430": 391, "2668": 391, "2918": 391, "6239": 391, "roughli": 391, "tensordicts_prealloc": 391, "tensordicts_stack": 391, "tensordict_rollout": [391, 392], "disclaim": 391, "concatmodul": 391, "loss_td": 391, "year": 391, "roadmap": 391, "compris": 391, "contributor": 391, "curiou": 391, "nascent": 391, "unsupervis": 392, "unifi": 392, "_build_env": 392, "bipedalwalk": 392, "bipedalwalkerhardcor": 392, "blackjack": 392, "carrac": 392, "4948": 392, "deserv": 392, "__episode__": 392, "__trajectory__": 392, "void": 392, "reproduct": 392, "reset_data": 392, "tensordict_tprim": 392, "imshow": 392, "axesimag": 392, "0x7fcd7a294a60": 392, "1371": 392, "784": 392, "3047": 392, "1423": 392, "_check_version_exist": 392, "ns": 392, "_check_name_exist": 392, "_check_namespace_exist": 392, "namespacenotfound": 392, "suggestion_msg": 392, "wrapper1": 392, "wrapper2": 392, "obviou": 392, "truth": 392, "env0": 392, "env_transformed_bi": 392, "stanc": 392, "transformeddistribut": 392, "base_dist": 392, "concat": 392, "mofidi": 392, "transformedenviron": 392, "moderet": 392, "computation": 392, "legitim": 392, "incom": 392, "amongst": 392, "has_cuda": 392, "wor": 392, "convention": 392, "markovian": 392, "constain": 392, "bar_": 392, "get_someth": 392, "aargh": 392, "is_clos": 392, "foo_list": 392, "parallen": 392, "particularili": 392, "evolv": 392, "steadi": 392, "approx": 392, "_extra_st": 392, "observation_ssq": 392, "observation_sum": 392, "dispach": 392, "absor": 392, "4088": 392}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "BinaryDiscreteTensorSpec"], [26, 0, 1, "", "BoundedTensorSpec"], [27, 0, 1, "", "CompositeSpec"], [28, 0, 1, "", "ConstantKLController"], [29, 0, 1, "", "DiscreteTensorSpec"], [30, 0, 1, "", "Flat2TED"], [31, 0, 1, "", "H5Combine"], [32, 0, 1, "", "H5Split"], [33, 0, 1, "", "LazyStackedCompositeSpec"], [34, 0, 1, "", "LazyStackedTensorSpec"], [35, 0, 1, "", "MultiDiscreteTensorSpec"], [36, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [37, 0, 1, "", "MultiStep"], [38, 0, 1, "", "Nested2TED"], [39, 0, 1, "", "NonTensorSpec"], [40, 0, 1, "", "OneHotDiscreteTensorSpec"], [41, 0, 1, "", "PairwiseDataset"], [42, 0, 1, "", "PrioritizedReplayBuffer"], [43, 0, 1, "", "PromptData"], [44, 0, 1, "", "PromptTensorDictTokenizer"], [45, 0, 1, "", "ReplayBuffer"], [46, 0, 1, "", "RewardData"], [47, 0, 1, "", "RolloutFromModel"], [48, 0, 1, "", "TED2Flat"], [49, 0, 1, "", "TED2Nested"], [50, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [51, 0, 1, "", "TensorDictReplayBuffer"], [52, 0, 1, "", "TensorDictTokenizer"], [53, 0, 1, "", "TensorSpec"], [54, 0, 1, "", "TokenizedDatasetLoader"], [55, 0, 1, "", "UnboundedContinuousTensorSpec"], [56, 0, 1, "", "UnboundedDiscreteTensorSpec"], [57, 0, 1, "", "check_no_exclusive_keys"], [58, 0, 1, "", "consolidate_spec"], [59, 0, 1, "", "contains_lazy_spec"], [60, 0, 1, "", "create_infinite_iterator"], [70, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 3, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 3, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 3, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 3, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "empty"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "get"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_empty"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "items"], [33, 1, 1, "", "keys"], [33, 1, 1, "", "lock_"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 3, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unlock_"], [33, 1, 1, "", "values"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 3, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 3, 1, "", "sample"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 3, 1, "", "sample"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to_categorical"], [36, 1, 1, "", "to_categorical_spec"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "update_mask"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[37, 1, 1, "", "add_module"], [37, 1, 1, "", "apply"], [37, 1, 1, "", "bfloat16"], [37, 1, 1, "", "buffers"], [37, 1, 1, "", "children"], [37, 1, 1, "", "compile"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 1, 1, "", "double"], [37, 1, 1, "", "eval"], [37, 1, 1, "", "extra_repr"], [37, 1, 1, "", "float"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_buffer"], [37, 1, 1, "", "get_extra_state"], [37, 1, 1, "", "get_parameter"], [37, 1, 1, "", "get_submodule"], [37, 1, 1, "", "half"], [37, 1, 1, "", "ipu"], [37, 1, 1, "", "load_state_dict"], [37, 1, 1, "", "modules"], [37, 1, 1, "", "named_buffers"], [37, 1, 1, "", "named_children"], [37, 1, 1, "", "named_modules"], [37, 1, 1, "", "named_parameters"], [37, 1, 1, "", "parameters"], [37, 1, 1, "", "register_backward_hook"], [37, 1, 1, "", "register_buffer"], [37, 1, 1, "", "register_forward_hook"], [37, 1, 1, "", "register_forward_pre_hook"], [37, 1, 1, "", "register_full_backward_hook"], [37, 1, 1, "", "register_full_backward_pre_hook"], [37, 1, 1, "", "register_load_state_dict_post_hook"], [37, 1, 1, "", "register_module"], [37, 1, 1, "", "register_parameter"], [37, 1, 1, "", "register_state_dict_pre_hook"], [37, 1, 1, "", "requires_grad_"], [37, 1, 1, "", "set_extra_state"], [37, 1, 1, "", "set_submodule"], [37, 1, 1, "", "share_memory"], [37, 1, 1, "", "state_dict"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_empty"], [37, 1, 1, "", "train"], [37, 1, 1, "", "type"], [37, 1, 1, "", "xpu"], [37, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 3, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 3, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[41, 3, 1, "", "batch_size"], [41, 3, 1, "", "device"], [41, 1, 1, "", "from_dataset"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 3, 1, "", "names"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dump"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "load"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "register_load_hook"], [42, 1, 1, "", "register_save_hook"], [42, 1, 1, "", "sample"], [42, 3, 1, "", "sampler"], [42, 1, 1, "", "save"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"], [42, 3, 1, "", "storage"], [42, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[43, 3, 1, "", "batch_size"], [43, 3, 1, "", "device"], [43, 1, 1, "", "from_dataset"], [43, 1, 1, "", "from_tensordict"], [43, 1, 1, "", "get"], [43, 1, 1, "", "load"], [43, 1, 1, "", "load_"], [43, 1, 1, "", "load_memmap"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "memmap"], [43, 1, 1, "", "memmap_"], [43, 1, 1, "", "memmap_like"], [43, 1, 1, "", "memmap_refresh_"], [43, 3, 1, "", "names"], [43, 1, 1, "", "save"], [43, 1, 1, "", "set"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to_tensordict"], [43, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[45, 1, 1, "", "add"], [45, 1, 1, "", "append_transform"], [45, 1, 1, "", "dump"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "empty"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "insert_transform"], [45, 1, 1, "", "load"], [45, 1, 1, "", "loads"], [45, 1, 1, "", "register_load_hook"], [45, 1, 1, "", "register_save_hook"], [45, 1, 1, "", "sample"], [45, 3, 1, "", "sampler"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set_sampler"], [45, 1, 1, "", "set_storage"], [45, 1, 1, "", "set_writer"], [45, 3, 1, "", "storage"], [45, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[46, 3, 1, "", "batch_size"], [46, 3, 1, "", "device"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 3, 1, "", "names"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[47, 1, 1, "", "create_rollout_td"], [47, 1, 1, "", "generate"], [47, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "append_transform"], [50, 1, 1, "", "dump"], [50, 1, 1, "", "dumps"], [50, 1, 1, "", "empty"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "insert_transform"], [50, 1, 1, "", "load"], [50, 1, 1, "", "loads"], [50, 1, 1, "", "register_load_hook"], [50, 1, 1, "", "register_save_hook"], [50, 1, 1, "", "sample"], [50, 3, 1, "", "sampler"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set_sampler"], [50, 1, 1, "", "set_storage"], [50, 1, 1, "", "set_writer"], [50, 3, 1, "", "storage"], [50, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 3, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[54, 1, 1, "", "dataset_to_tensordict"], [54, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 3, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 3, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"]], "torchrl.data.datasets": [[61, 0, 1, "", "AtariDQNExperienceReplay"], [62, 0, 1, "", "BaseDatasetExperienceReplay"], [63, 0, 1, "", "D4RLExperienceReplay"], [64, 0, 1, "", "GenDGRLExperienceReplay"], [65, 0, 1, "", "MinariExperienceReplay"], [66, 0, 1, "", "OpenMLExperienceReplay"], [67, 0, 1, "", "OpenXExperienceReplay"], [68, 0, 1, "", "RobosetExperienceReplay"], [69, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 3, 1, "", "data_path"], [63, 3, 1, "", "data_path_root"], [63, 1, 1, "", "delete"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "preprocess"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 3, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 3, 1, "", "storage"], [63, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 3, 1, "", "data_path"], [64, 3, 1, "", "data_path_root"], [64, 1, 1, "", "delete"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "preprocess"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 3, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 3, 1, "", "storage"], [64, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 3, 1, "", "data_path"], [65, 3, 1, "", "data_path_root"], [65, 1, 1, "", "delete"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "preprocess"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 3, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 3, 1, "", "storage"], [65, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 3, 1, "", "data_path"], [66, 3, 1, "", "data_path_root"], [66, 1, 1, "", "delete"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "preprocess"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 3, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 3, 1, "", "storage"], [66, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 3, 1, "", "data_path"], [67, 3, 1, "", "data_path_root"], [67, 1, 1, "", "delete"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "preprocess"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 3, 1, "", "data_path"], [68, 3, 1, "", "data_path_root"], [68, 1, 1, "", "delete"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "preprocess"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 3, 1, "", "data_path"], [69, 3, 1, "", "data_path_root"], [69, 1, 1, "", "delete"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "preprocess"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 3, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 3, 1, "", "storage"], [69, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[71, 0, 1, "", "FlatStorageCheckpointer"], [72, 0, 1, "", "H5StorageCheckpointer"], [73, 0, 1, "", "ImmutableDatasetWriter"], [74, 0, 1, "", "LazyMemmapStorage"], [75, 0, 1, "", "LazyTensorStorage"], [76, 0, 1, "", "ListStorage"], [77, 0, 1, "", "ListStorageCheckpointer"], [78, 0, 1, "", "NestedStorageCheckpointer"], [79, 0, 1, "", "PrioritizedSampler"], [80, 0, 1, "", "PrioritizedSliceSampler"], [81, 0, 1, "", "RandomSampler"], [82, 0, 1, "", "ReplayBufferEnsemble"], [83, 0, 1, "", "RoundRobinWriter"], [84, 0, 1, "", "Sampler"], [85, 0, 1, "", "SamplerEnsemble"], [86, 0, 1, "", "SamplerWithoutReplacement"], [87, 0, 1, "", "SliceSampler"], [88, 0, 1, "", "SliceSamplerWithoutReplacement"], [89, 0, 1, "", "Storage"], [90, 0, 1, "", "StorageCheckpointerBase"], [91, 0, 1, "", "StorageEnsemble"], [92, 0, 1, "", "StorageEnsembleCheckpointer"], [93, 0, 1, "", "TensorDictMaxValueWriter"], [94, 0, 1, "", "TensorDictRoundRobinWriter"], [95, 0, 1, "", "TensorStorage"], [96, 0, 1, "", "TensorStorageCheckpointer"], [97, 0, 1, "", "Writer"], [98, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[73, 1, 1, "", "add"], [73, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[74, 1, 1, "", "attach"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "load"], [74, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[75, 1, 1, "", "attach"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "load"], [75, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[76, 1, 1, "", "attach"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "load"], [76, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[79, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[80, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 3, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 3, 1, "", "storage"], [82, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[83, 1, 1, "", "add"], [83, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[89, 1, 1, "", "attach"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "load"], [89, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[91, 1, 1, "", "attach"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "load"], [91, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"], [93, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[94, 1, 1, "", "add"], [94, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[98, 1, 1, "", "add"], [98, 1, 1, "", "extend"]], "torchrl.envs": [[99, 2, 1, "", "BraxEnv"], [100, 2, 1, "", "BraxWrapper"], [101, 2, 1, "", "DMControlEnv"], [102, 2, 1, "", "DMControlWrapper"], [103, 0, 1, "", "EnvBase"], [104, 0, 1, "", "EnvCreator"], [105, 0, 1, "", "EnvMetaData"], [106, 2, 1, "", "GymEnv"], [107, 0, 1, "", "GymLikeEnv"], [108, 2, 1, "", "GymWrapper"], [109, 2, 1, "", "HabitatEnv"], [110, 2, 1, "", "IsaacGymEnv"], [111, 2, 1, "", "IsaacGymWrapper"], [112, 2, 1, "", "JumanjiEnv"], [113, 2, 1, "", "JumanjiWrapper"], [114, 2, 1, "", "MOGymEnv"], [115, 2, 1, "", "MOGymWrapper"], [116, 2, 1, "", "MarlGroupMapType"], [117, 2, 1, "", "MeltingpotEnv"], [118, 2, 1, "", "MeltingpotWrapper"], [119, 2, 1, "", "ModelBasedEnvBase"], [120, 2, 1, "", "MultiThreadedEnv"], [121, 2, 1, "", "MultiThreadedEnvWrapper"], [122, 2, 1, "", "OpenMLEnv"], [123, 0, 1, "", "ParallelEnv"], [124, 0, 1, "", "PendulumEnv"], [125, 2, 1, "", "PettingZooEnv"], [126, 2, 1, "", "PettingZooWrapper"], [127, 2, 1, "", "RoboHiveEnv"], [128, 2, 1, "", "SMACv2Env"], [129, 2, 1, "", "SMACv2Wrapper"], [130, 0, 1, "", "SerialEnv"], [131, 0, 1, "", "TicTacToeEnv"], [132, 2, 1, "", "VmasEnv"], [133, 2, 1, "", "VmasWrapper"], [134, 2, 1, "", "check_marl_grouping"], [135, 2, 1, "", "gym_backend"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "rollout"], [138, 2, 1, "", "set_gym_backend"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "add_truncated_keys"], [103, 1, 1, "", "append_transform"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "batch_size"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "maybe_reset"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "id0", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "id1", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "id2", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "id3", "set_seed"], [103, 1, 1, "", "set_submodule"], [103, 3, 1, "", "shape"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_keys"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "id4", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "add_truncated_keys"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "apply"], [107, 1, 1, "", "auto_register_info_dict"], [107, 3, 1, "", "batch_locked"], [107, 3, 1, "", "batch_size"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "close"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_reset"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "read_action"], [107, 1, 1, "", "read_done"], [107, 1, 1, "", "read_obs"], [107, 1, 1, "", "read_reward"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_gym"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_info_dict_reader"], [107, 1, 1, "", "set_seed"], [107, 1, 1, "", "set_submodule"], [107, 3, 1, "", "shape"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_keys"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[123, 3, 1, "", "action_key"], [123, 3, 1, "", "action_keys"], [123, 3, 1, "", "action_spec"], [123, 1, 1, "", "add_module"], [123, 1, 1, "", "add_truncated_keys"], [123, 1, 1, "", "append_transform"], [123, 1, 1, "", "apply"], [123, 3, 1, "", "batch_locked"], [123, 3, 1, "", "batch_size"], [123, 1, 1, "", "bfloat16"], [123, 1, 1, "", "buffers"], [123, 1, 1, "", "children"], [123, 1, 1, "", "compile"], [123, 1, 1, "", "cpu"], [123, 1, 1, "", "cuda"], [123, 3, 1, "", "done_key"], [123, 3, 1, "", "done_keys"], [123, 3, 1, "", "done_keys_groups"], [123, 3, 1, "", "done_spec"], [123, 1, 1, "", "double"], [123, 1, 1, "", "empty_cache"], [123, 1, 1, "", "eval"], [123, 1, 1, "", "extra_repr"], [123, 1, 1, "", "fake_tensordict"], [123, 1, 1, "", "float"], [123, 1, 1, "", "forward"], [123, 3, 1, "", "full_action_spec"], [123, 3, 1, "", "full_done_spec"], [123, 3, 1, "", "full_reward_spec"], [123, 3, 1, "", "full_state_spec"], [123, 1, 1, "", "get_buffer"], [123, 1, 1, "", "get_extra_state"], [123, 1, 1, "", "get_parameter"], [123, 1, 1, "", "get_submodule"], [123, 1, 1, "", "half"], [123, 3, 1, "", "input_spec"], [123, 1, 1, "", "ipu"], [123, 1, 1, "", "load_state_dict"], [123, 1, 1, "", "maybe_reset"], [123, 1, 1, "", "modules"], [123, 1, 1, "", "named_buffers"], [123, 1, 1, "", "named_children"], [123, 1, 1, "", "named_modules"], [123, 1, 1, "", "named_parameters"], [123, 3, 1, "", "observation_spec"], [123, 3, 1, "", "output_spec"], [123, 1, 1, "", "parameters"], [123, 1, 1, "", "rand_action"], [123, 1, 1, "", "rand_step"], [123, 1, 1, "", "register_backward_hook"], [123, 1, 1, "", "register_buffer"], [123, 1, 1, "", "register_forward_hook"], [123, 1, 1, "", "register_forward_pre_hook"], [123, 1, 1, "", "register_full_backward_hook"], [123, 1, 1, "", "register_full_backward_pre_hook"], [123, 1, 1, "", "register_gym"], [123, 1, 1, "", "register_load_state_dict_post_hook"], [123, 1, 1, "", "register_module"], [123, 1, 1, "", "register_parameter"], [123, 1, 1, "", "register_state_dict_pre_hook"], [123, 1, 1, "", "requires_grad_"], [123, 1, 1, "", "reset"], [123, 3, 1, "", "reset_keys"], [123, 3, 1, "", "reward_key"], [123, 3, 1, "", "reward_keys"], [123, 3, 1, "", "reward_spec"], [123, 1, 1, "", "rollout"], [123, 1, 1, "", "set_extra_state"], [123, 1, 1, "", "set_seed"], [123, 1, 1, "", "set_submodule"], [123, 3, 1, "", "shape"], [123, 1, 1, "", "share_memory"], [123, 3, 1, "", "specs"], [123, 1, 1, "", "state_dict"], [123, 3, 1, "", "state_keys"], [123, 3, 1, "", "state_spec"], [123, 1, 1, "", "step"], [123, 1, 1, "", "step_and_maybe_reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "to_empty"], [123, 1, 1, "", "train"], [123, 1, 1, "", "type"], [123, 1, 1, "", "update_kwargs"], [123, 1, 1, "", "xpu"], [123, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[124, 3, 1, "", "action_key"], [124, 3, 1, "", "action_keys"], [124, 3, 1, "", "action_spec"], [124, 1, 1, "", "add_module"], [124, 1, 1, "", "add_truncated_keys"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "apply"], [124, 3, 1, "", "batch_size"], [124, 1, 1, "", "bfloat16"], [124, 1, 1, "", "buffers"], [124, 1, 1, "", "children"], [124, 1, 1, "", "compile"], [124, 1, 1, "", "cpu"], [124, 1, 1, "", "cuda"], [124, 3, 1, "", "done_key"], [124, 3, 1, "", "done_keys"], [124, 3, 1, "", "done_keys_groups"], [124, 3, 1, "", "done_spec"], [124, 1, 1, "", "double"], [124, 1, 1, "", "empty_cache"], [124, 1, 1, "", "eval"], [124, 1, 1, "", "extra_repr"], [124, 1, 1, "", "fake_tensordict"], [124, 1, 1, "", "float"], [124, 1, 1, "", "forward"], [124, 3, 1, "", "full_action_spec"], [124, 3, 1, "", "full_done_spec"], [124, 3, 1, "", "full_reward_spec"], [124, 3, 1, "", "full_state_spec"], [124, 1, 1, "", "gen_params"], [124, 1, 1, "", "get_buffer"], [124, 1, 1, "", "get_extra_state"], [124, 1, 1, "", "get_parameter"], [124, 1, 1, "", "get_submodule"], [124, 1, 1, "", "half"], [124, 3, 1, "", "input_spec"], [124, 1, 1, "", "ipu"], [124, 1, 1, "", "load_state_dict"], [124, 1, 1, "", "maybe_reset"], [124, 1, 1, "", "modules"], [124, 1, 1, "", "named_buffers"], [124, 1, 1, "", "named_children"], [124, 1, 1, "", "named_modules"], [124, 1, 1, "", "named_parameters"], [124, 3, 1, "", "observation_spec"], [124, 3, 1, "", "output_spec"], [124, 1, 1, "", "parameters"], [124, 1, 1, "", "rand_action"], [124, 1, 1, "", "rand_step"], [124, 1, 1, "", "register_backward_hook"], [124, 1, 1, "", "register_buffer"], [124, 1, 1, "", "register_forward_hook"], [124, 1, 1, "", "register_forward_pre_hook"], [124, 1, 1, "", "register_full_backward_hook"], [124, 1, 1, "", "register_full_backward_pre_hook"], [124, 1, 1, "", "register_gym"], [124, 1, 1, "", "register_load_state_dict_post_hook"], [124, 1, 1, "", "register_module"], [124, 1, 1, "", "register_parameter"], [124, 1, 1, "", "register_state_dict_pre_hook"], [124, 1, 1, "", "requires_grad_"], [124, 1, 1, "", "reset"], [124, 3, 1, "", "reset_keys"], [124, 3, 1, "", "reward_key"], [124, 3, 1, "", "reward_keys"], [124, 3, 1, "", "reward_spec"], [124, 1, 1, "", "rollout"], [124, 1, 1, "", "set_extra_state"], [124, 1, 1, "", "set_seed"], [124, 1, 1, "", "set_submodule"], [124, 3, 1, "", "shape"], [124, 1, 1, "", "share_memory"], [124, 3, 1, "", "specs"], [124, 1, 1, "", "state_dict"], [124, 3, 1, "", "state_keys"], [124, 3, 1, "", "state_spec"], [124, 1, 1, "", "step"], [124, 1, 1, "", "step_and_maybe_reset"], [124, 1, 1, "", "to"], [124, 1, 1, "", "to_empty"], [124, 1, 1, "", "train"], [124, 1, 1, "", "type"], [124, 1, 1, "", "xpu"], [124, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[130, 3, 1, "", "action_key"], [130, 3, 1, "", "action_keys"], [130, 3, 1, "", "action_spec"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 3, 1, "", "batch_locked"], [130, 3, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "children"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 3, 1, "", "done_key"], [130, 3, 1, "", "done_keys"], [130, 3, 1, "", "done_keys_groups"], [130, 3, 1, "", "done_spec"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 3, 1, "", "full_action_spec"], [130, 3, 1, "", "full_done_spec"], [130, 3, 1, "", "full_reward_spec"], [130, 3, 1, "", "full_state_spec"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 3, 1, "", "input_spec"], [130, 1, 1, "", "ipu"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 3, 1, "", "observation_spec"], [130, 3, 1, "", "output_spec"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "", "rand_step"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "", "reset"], [130, 3, 1, "", "reset_keys"], [130, 3, 1, "", "reward_key"], [130, 3, 1, "", "reward_keys"], [130, 3, 1, "", "reward_spec"], [130, 1, 1, "", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "set_submodule"], [130, 3, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 3, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 3, 1, "", "state_keys"], [130, 3, 1, "", "state_spec"], [130, 1, 1, "", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "update_kwargs"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[131, 3, 1, "", "action_key"], [131, 3, 1, "", "action_keys"], [131, 3, 1, "", "action_spec"], [131, 1, 1, "", "add_module"], [131, 1, 1, "", "add_truncated_keys"], [131, 1, 1, "", "append_transform"], [131, 1, 1, "", "apply"], [131, 3, 1, "", "batch_size"], [131, 1, 1, "", "bfloat16"], [131, 1, 1, "", "buffers"], [131, 1, 1, "", "children"], [131, 1, 1, "", "compile"], [131, 1, 1, "", "cpu"], [131, 1, 1, "", "cuda"], [131, 3, 1, "", "done_key"], [131, 3, 1, "", "done_keys"], [131, 3, 1, "", "done_keys_groups"], [131, 3, 1, "", "done_spec"], [131, 1, 1, "", "double"], [131, 1, 1, "", "empty_cache"], [131, 1, 1, "", "eval"], [131, 1, 1, "", "extra_repr"], [131, 1, 1, "", "fake_tensordict"], [131, 1, 1, "", "float"], [131, 1, 1, "", "forward"], [131, 3, 1, "", "full_action_spec"], [131, 3, 1, "", "full_done_spec"], [131, 3, 1, "", "full_reward_spec"], [131, 3, 1, "", "full_state_spec"], [131, 1, 1, "", "get_buffer"], [131, 1, 1, "", "get_extra_state"], [131, 1, 1, "", "get_parameter"], [131, 1, 1, "", "get_submodule"], [131, 1, 1, "", "half"], [131, 3, 1, "", "input_spec"], [131, 1, 1, "", "ipu"], [131, 1, 1, "", "load_state_dict"], [131, 1, 1, "", "maybe_reset"], [131, 1, 1, "", "modules"], [131, 1, 1, "", "named_buffers"], [131, 1, 1, "", "named_children"], [131, 1, 1, "", "named_modules"], [131, 1, 1, "", "named_parameters"], [131, 3, 1, "", "observation_spec"], [131, 3, 1, "", "output_spec"], [131, 1, 1, "", "parameters"], [131, 1, 1, "", "rand_action"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "register_backward_hook"], [131, 1, 1, "", "register_buffer"], [131, 1, 1, "", "register_forward_hook"], [131, 1, 1, "", "register_forward_pre_hook"], [131, 1, 1, "", "register_full_backward_hook"], [131, 1, 1, "", "register_full_backward_pre_hook"], [131, 1, 1, "", "register_gym"], [131, 1, 1, "", "register_load_state_dict_post_hook"], [131, 1, 1, "", "register_module"], [131, 1, 1, "", "register_parameter"], [131, 1, 1, "", "register_state_dict_pre_hook"], [131, 1, 1, "", "requires_grad_"], [131, 1, 1, "", "reset"], [131, 3, 1, "", "reset_keys"], [131, 3, 1, "", "reward_key"], [131, 3, 1, "", "reward_keys"], [131, 3, 1, "", "reward_spec"], [131, 1, 1, "", "rollout"], [131, 1, 1, "", "set_extra_state"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "set_submodule"], [131, 3, 1, "", "shape"], [131, 1, 1, "", "share_memory"], [131, 3, 1, "", "specs"], [131, 1, 1, "", "state_dict"], [131, 3, 1, "", "state_keys"], [131, 3, 1, "", "state_spec"], [131, 1, 1, "", "step"], [131, 1, 1, "", "step_and_maybe_reset"], [131, 1, 1, "", "to"], [131, 1, 1, "", "to_empty"], [131, 1, 1, "", "train"], [131, 1, 1, "", "type"], [131, 1, 1, "", "xpu"], [131, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[136, 2, 1, "", "DreamerDecoder"], [137, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[139, 0, 1, "", "ActionDiscretizer"], [140, 0, 1, "", "ActionMask"], [141, 0, 1, "", "AutoResetEnv"], [142, 0, 1, "", "AutoResetTransform"], [143, 0, 1, "", "BatchSizeTransform"], [144, 0, 1, "", "BinarizeReward"], [145, 0, 1, "", "BurnInTransform"], [146, 0, 1, "", "CatFrames"], [147, 0, 1, "", "CatTensors"], [148, 0, 1, "", "CenterCrop"], [149, 0, 1, "", "ClipTransform"], [150, 0, 1, "", "Compose"], [151, 0, 1, "", "DTypeCastTransform"], [152, 0, 1, "", "DeviceCastTransform"], [153, 0, 1, "", "DiscreteActionProjection"], [154, 0, 1, "", "DoubleToFloat"], [155, 0, 1, "", "EndOfLifeTransform"], [156, 0, 1, "", "ExcludeTransform"], [157, 0, 1, "", "FiniteTensorDictCheck"], [158, 0, 1, "", "FlattenObservation"], [159, 0, 1, "", "FrameSkipTransform"], [160, 0, 1, "", "GrayScale"], [161, 0, 1, "", "InitTracker"], [162, 0, 1, "", "KLRewardTransform"], [163, 0, 1, "", "NoopResetEnv"], [164, 0, 1, "", "ObservationNorm"], [165, 0, 1, "", "ObservationTransform"], [166, 0, 1, "", "PermuteTransform"], [167, 0, 1, "", "PinMemoryTransform"], [168, 0, 1, "", "R3MTransform"], [169, 0, 1, "", "RandomCropTensorDict"], [170, 0, 1, "", "RemoveEmptySpecs"], [171, 0, 1, "", "RenameTransform"], [172, 0, 1, "", "Resize"], [173, 0, 1, "", "Reward2GoTransform"], [174, 0, 1, "", "RewardClipping"], [175, 0, 1, "", "RewardScaling"], [176, 0, 1, "", "RewardSum"], [177, 0, 1, "", "SelectTransform"], [178, 0, 1, "", "SignTransform"], [179, 0, 1, "", "SqueezeTransform"], [180, 0, 1, "", "StepCounter"], [181, 0, 1, "", "TargetReturn"], [182, 0, 1, "", "TensorDictPrimer"], [183, 0, 1, "", "TimeMaxPool"], [184, 0, 1, "", "ToTensorImage"], [185, 0, 1, "", "Transform"], [186, 0, 1, "", "TransformedEnv"], [187, 0, 1, "", "UnsqueezeTransform"], [188, 0, 1, "", "VC1Transform"], [189, 0, 1, "", "VIPRewardTransform"], [190, 0, 1, "", "VIPTransform"], [191, 0, 1, "", "VecGymEnvTransform"], [192, 0, 1, "", "VecNorm"], [193, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[139, 0, 1, "", "SamplingStrategy"], [139, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[141, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_env_batch_size"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[144, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[145, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[146, 1, 1, "", "forward"], [146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[148, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[149, 1, 1, "", "transform_observation_spec"], [149, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[150, 1, 1, "", "append"], [150, 1, 1, "", "forward"], [150, 1, 1, "", "insert"], [150, 1, 1, "", "to"], [150, 1, 1, "", "transform_env_batch_size"], [150, 1, 1, "", "transform_env_device"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"], [150, 1, 1, "", "transform_output_spec"], [150, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "transform_input_spec"], [151, 1, 1, "", "transform_observation_spec"], [151, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_done_spec"], [152, 1, 1, "", "transform_env_device"], [152, 1, 1, "", "transform_input_spec"], [152, 1, 1, "", "transform_observation_spec"], [152, 1, 1, "", "transform_output_spec"], [152, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[153, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "register_keys"], [155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[157, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[159, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[164, 1, 1, "", "init_stats"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[167, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[168, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[169, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_input_spec"], [170, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_input_spec"], [171, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[172, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[173, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[174, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[175, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[178, 1, 1, "", "transform_observation_spec"], [178, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_observation_spec"], [180, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "to"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[185, 3, 1, "", "container"], [185, 1, 1, "", "forward"], [185, 3, 1, "", "parent"], [185, 1, 1, "", "to"], [185, 1, 1, "", "transform_done_spec"], [185, 1, 1, "", "transform_env_batch_size"], [185, 1, 1, "", "transform_env_device"], [185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_observation_spec"], [185, 1, 1, "", "transform_output_spec"], [185, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[186, 1, 1, "", "add_truncated_keys"], [186, 1, 1, "", "append_transform"], [186, 3, 1, "", "batch_locked"], [186, 3, 1, "", "batch_size"], [186, 1, 1, "", "empty_cache"], [186, 1, 1, "", "eval"], [186, 3, 1, "", "input_spec"], [186, 1, 1, "", "insert_transform"], [186, 1, 1, "", "load_state_dict"], [186, 3, 1, "", "output_spec"], [186, 1, 1, "", "set_missing_tolerance"], [186, 1, 1, "", "set_seed"], [186, 1, 1, "", "state_dict"], [186, 1, 1, "", "to"], [186, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[187, 1, 1, "", "transform_input_spec"], [187, 1, 1, "", "transform_observation_spec"], [187, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "make_noload_model"], [188, 1, 1, "", "to"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[190, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[192, 1, 1, "", "build_td_for_shared_vecnorm"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "freeze"], [192, 1, 1, "", "frozen_copy"], [192, 1, 1, "", "get_extra_state"], [192, 3, 1, "", "loc"], [192, 3, 1, "", "scale"], [192, 1, 1, "", "set_extra_state"], [192, 3, 1, "", "standard_normal"], [192, 1, 1, "", "to_observation_norm"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[194, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[194, 1, 1, "", "add_module"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "children"], [194, 1, 1, "", "compile"], [194, 3, 1, "", "container"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 1, 1, "", "double"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 1, 1, "", "ipu"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "modules"], [194, 3, 1, "", "n_steps"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 1, 1, "", "parameters"], [194, 3, 1, "", "parent"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_submodule"], [194, 1, 1, "", "share_memory"], [194, 1, 1, "", "state_dict"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "transform_done_spec"], [194, 1, 1, "", "transform_env_batch_size"], [194, 1, 1, "", "transform_env_device"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"], [194, 1, 1, "", "transform_output_spec"], [194, 1, 1, "", "transform_reward_spec"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[195, 2, 1, "", "RandomPolicy"], [196, 2, 1, "", "check_env_specs"], [197, 2, 1, "", "exploration_mode"], [198, 2, 1, "", "exploration_type"], [199, 2, 1, "", "get_available_libraries"], [200, 2, 1, "", "make_composite_from_td"], [201, 2, 1, "", "set_exploration_mode"], [202, 2, 1, "", "set_exploration_type"], [203, 2, 1, "", "step_mdp"], [204, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[205, 0, 1, "", "CEMPlanner"], [206, 0, 1, "", "Conv3dNet"], [207, 0, 1, "", "ConvNet"], [208, 0, 1, "", "DTActor"], [209, 0, 1, "", "DdpgCnnActor"], [210, 0, 1, "", "DdpgCnnQNet"], [211, 0, 1, "", "DdpgMlpActor"], [212, 0, 1, "", "DdpgMlpQNet"], [213, 0, 1, "", "DecisionTransformer"], [214, 0, 1, "", "Delta"], [215, 0, 1, "", "DistributionalDQNnet"], [216, 0, 1, "", "DistributionalQValueHook"], [217, 0, 1, "", "DreamerActor"], [218, 0, 1, "", "DuelingCnnDQNet"], [219, 0, 1, "", "GRU"], [220, 0, 1, "", "GRUCell"], [221, 0, 1, "", "GRUModule"], [222, 0, 1, "", "IndependentNormal"], [223, 0, 1, "", "LSTM"], [224, 0, 1, "", "LSTMCell"], [225, 0, 1, "", "LSTMModule"], [226, 0, 1, "", "MLP"], [227, 0, 1, "", "MPCPlannerBase"], [228, 0, 1, "", "MPPIPlanner"], [229, 0, 1, "", "MaskedCategorical"], [230, 0, 1, "", "MaskedOneHotCategorical"], [231, 0, 1, "", "MultiAgentConvNet"], [232, 0, 1, "", "MultiAgentMLP"], [233, 0, 1, "", "NoisyLazyLinear"], [234, 0, 1, "", "NoisyLinear"], [235, 0, 1, "", "NormalParamWrapper"], [236, 0, 1, "", "ObsDecoder"], [237, 0, 1, "", "ObsEncoder"], [238, 0, 1, "", "OneHotCategorical"], [239, 0, 1, "", "OnlineDTActor"], [240, 0, 1, "", "QMixer"], [241, 0, 1, "", "QValueHook"], [242, 0, 1, "", "RSSMPosterior"], [243, 0, 1, "", "RSSMPrior"], [244, 0, 1, "", "Squeeze2dLayer"], [245, 0, 1, "", "SqueezeLayer"], [246, 0, 1, "", "TanhDelta"], [247, 0, 1, "", "TanhNormal"], [248, 0, 1, "", "TruncatedNormal"], [249, 0, 1, "", "VDNMixer"], [250, 0, 1, "", "VmapModule"], [251, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[205, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[206, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[207, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[208, 1, 1, "", "default_config"], [208, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[209, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[210, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[211, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[212, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[213, 0, 1, "", "DTConfig"], [213, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[214, 1, 1, "", "log_prob"], [214, 3, 1, "", "mean"], [214, 3, 1, "", "mode"], [214, 1, 1, "", "rsample"], [214, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[215, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[217, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[218, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[219, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[220, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[221, 1, 1, "", "forward"], [221, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[222, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[223, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[224, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[225, 1, 1, "", "forward"], [225, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.MLP": [[226, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[228, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[229, 1, 1, "", "log_prob"], [229, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[230, 1, 1, "", "log_prob"], [230, 1, 1, "", "rsample"], [230, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[233, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[235, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[236, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[237, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[238, 1, 1, "", "log_prob"], [238, 3, 1, "", "mode"], [238, 1, 1, "", "rsample"], [238, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[239, 1, 1, "", "default_config"], [239, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[240, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[242, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[243, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[245, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[246, 3, 1, "", "mean"], [246, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[247, 1, 1, "", "get_mode"], [247, 3, 1, "", "mean"], [247, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[248, 1, 1, "", "log_prob"], [248, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[249, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[250, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[252, 0, 1, "", "Actor"], [253, 0, 1, "", "ActorCriticOperator"], [254, 0, 1, "", "ActorCriticWrapper"], [255, 0, 1, "", "ActorValueOperator"], [256, 0, 1, "", "AdditiveGaussianModule"], [257, 0, 1, "", "AdditiveGaussianWrapper"], [258, 0, 1, "", "DecisionTransformerInferenceWrapper"], [259, 0, 1, "", "DistributionalQValueActor"], [260, 0, 1, "", "DistributionalQValueModule"], [261, 0, 1, "", "EGreedyModule"], [262, 0, 1, "", "EGreedyWrapper"], [263, 0, 1, "", "LMHeadActorValueOperator"], [264, 0, 1, "", "MultiStepActorWrapper"], [265, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [266, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [267, 0, 1, "", "ProbabilisticActor"], [268, 0, 1, "", "QValueActor"], [269, 0, 1, "", "QValueModule"], [270, 0, 1, "", "SafeModule"], [271, 0, 1, "", "SafeProbabilisticModule"], [272, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [273, 0, 1, "", "SafeSequential"], [274, 0, 1, "", "TanhModule"], [275, 0, 1, "", "ValueOperator"], [276, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[253, 1, 1, "", "get_critic_operator"], [253, 1, 1, "", "get_policy_head"], [253, 1, 1, "", "get_value_head"], [253, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[254, 1, 1, "", "get_policy_head"], [254, 1, 1, "", "get_policy_operator"], [254, 1, 1, "", "get_value_head"], [254, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[255, 1, 1, "", "get_policy_head"], [255, 1, 1, "", "get_policy_operator"], [255, 1, 1, "", "get_value_head"], [255, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianModule": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "mask_context"], [258, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[260, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[264, 1, 1, "", "forward"], [264, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[269, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[270, 1, 1, "", "random"], [270, 1, 1, "", "random_sample"], [270, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[271, 1, 1, "", "random"], [271, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[274, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[276, 1, 1, "", "get_reward_operator"], [276, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[277, 0, 1, "", "biased_softplus"], [278, 0, 1, "", "get_primers_from_module"], [279, 0, 1, "", "inv_softplus"], [280, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[277, 1, 1, "", "forward"]], "torchrl.objectives": [[281, 0, 1, "", "A2CLoss"], [282, 0, 1, "", "CQLLoss"], [283, 0, 1, "", "ClipPPOLoss"], [284, 0, 1, "", "DDPGLoss"], [285, 0, 1, "", "DQNLoss"], [286, 0, 1, "", "DTLoss"], [287, 0, 1, "", "DiscreteCQLLoss"], [288, 0, 1, "", "DiscreteIQLLoss"], [289, 0, 1, "", "DiscreteSACLoss"], [290, 0, 1, "", "DistributionalDQNLoss"], [291, 0, 1, "", "DreamerActorLoss"], [292, 0, 1, "", "DreamerModelLoss"], [293, 0, 1, "", "DreamerValueLoss"], [294, 0, 1, "", "HardUpdate"], [295, 0, 1, "", "IQLLoss"], [296, 0, 1, "", "KLPENPPOLoss"], [297, 0, 1, "", "LossModule"], [298, 0, 1, "", "OnlineDTLoss"], [299, 0, 1, "", "PPOLoss"], [300, 0, 1, "", "REDQLoss"], [301, 0, 1, "", "ReinforceLoss"], [302, 0, 1, "", "SACLoss"], [303, 0, 1, "", "SoftUpdate"], [304, 0, 1, "", "TD3BCLoss"], [305, 0, 1, "", "TD3Loss"], [306, 0, 1, "", "ValueEstimators"], [307, 0, 1, "", "default_value_kwargs"], [308, 0, 1, "", "distance_loss"], [309, 0, 1, "", "hold_out_net"], [310, 0, 1, "", "hold_out_params"], [312, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[283, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[286, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[288, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[292, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[293, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "loss_value_diff"], [295, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[296, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[297, 1, 1, "", "convert_to_functional"], [297, 1, 1, "", "forward"], [297, 1, 1, "", "make_value_estimator"], [297, 1, 1, "", "named_parameters"], [297, 1, 1, "", "parameters"], [297, 1, 1, "", "set_keys"], [297, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[298, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[299, 1, 1, "", "forward"], [299, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[300, 1, 1, "", "forward"], [300, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[301, 1, 1, "", "forward"], [301, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "load_state_dict"], [302, 1, 1, "", "make_value_estimator"], [302, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[304, 1, 1, "", "actor_loss"], [304, 1, 1, "", "forward"], [304, 1, 1, "", "make_value_estimator"], [304, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[305, 1, 1, "", "forward"], [305, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[311, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[311, 1, 1, "", "forward"], [311, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[313, 0, 1, "", "GAE"], [314, 0, 1, "", "TD0Estimator"], [315, 0, 1, "", "TD1Estimator"], [316, 0, 1, "", "TDLambdaEstimator"], [317, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[314, 1, 1, "", "forward"], [314, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[316, 1, 1, "", "forward"], [316, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "set_keys"], [317, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[318, 0, 1, "", "generalized_advantage_estimate"], [319, 0, 1, "", "reward2go"], [320, 0, 1, "", "td0_advantage_estimate"], [321, 0, 1, "", "td0_return_estimate"], [322, 0, 1, "", "td1_advantage_estimate"], [323, 0, 1, "", "td1_return_estimate"], [324, 0, 1, "", "td_lambda_advantage_estimate"], [325, 0, 1, "", "td_lambda_return_estimate"], [326, 0, 1, "", "vec_generalized_advantage_estimate"], [327, 0, 1, "", "vec_td1_advantage_estimate"], [328, 0, 1, "", "vec_td1_return_estimate"], [329, 0, 1, "", "vec_td_lambda_advantage_estimate"], [330, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[331, 2, 1, "", "PixelRenderTransform"], [332, 2, 1, "", "TensorDictRecorder"], [333, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[334, 2, 1, "", "Logger"], [336, 2, 1, "", "generate_exp_name"], [337, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[335, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[338, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[339, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[340, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[341, 0, 1, "", "BatchSubSampler"], [342, 0, 1, "", "ClearCudaCache"], [343, 0, 1, "", "CountFramesLog"], [344, 0, 1, "", "LogReward"], [345, 0, 1, "", "OptimizerHook"], [346, 0, 1, "", "Recorder"], [347, 0, 1, "", "ReplayBufferTrainer"], [348, 0, 1, "", "RewardNormalizer"], [349, 0, 1, "", "SelectKeys"], [350, 0, 1, "", "Trainer"], [351, 0, 1, "", "TrainerHookBase"], [352, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[341, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[342, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[343, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[344, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[345, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[346, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[347, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[348, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[349, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[351, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[352, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[353, 2, 1, "", "correct_for_frame_skip"], [354, 2, 1, "", "get_stats_random_rollout"], [355, 2, 1, "", "make_collector_offpolicy"], [356, 2, 1, "", "make_collector_onpolicy"], [357, 2, 1, "", "make_dqn_loss"], [358, 2, 1, "", "make_replay_buffer"], [359, 2, 1, "", "make_target_updater"], [360, 2, 1, "", "make_trainer"], [361, 2, 1, "", "parallel_env_constructor"], [362, 2, 1, "", "sync_async_collector"], [363, 2, 1, "", "sync_sync_collector"], [364, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 368, 369, 370, 371, 373, 374, 375, 378, 385, 386, 387, 391, 392], "instal": [0, 6, 7, 391], "get": [0, 377, 378, 379, 380, 381, 382], "start": [0, 377, 378, 379, 380, 381, 382], "tutori": [0, 375, 385, 386], "basic": [0, 389], "intermedi": [0, 8], "advanc": 0, "refer": [0, 366], "knowledg": [0, 367], "base": [0, 2, 7, 367], "indic": 0, "tabl": 0, "collector": [1, 373, 374, 375, 376, 380, 382, 385, 386, 391], "packag": [1, 2, 3, 368, 369, 370, 371], "batch": [1, 373, 387, 389], "size": [1, 373, 389], "replai": [1, 2, 373, 374, 375, 376, 380, 382, 385, 386, 389, 391], "buffer": [1, 2, 373, 374, 375, 376, 380, 382, 385, 386, 389, 391], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 373, 374, 375, 380, 382, 385, 386, 391], "distribut": [1, 368], "helper": [1, 3], "function": [1, 4, 369, 374, 375, 379, 385, 386, 391], "compos": [2, 150], "support": 2, "type": 2, "choos": 2, "storag": [2, 89, 373, 380, 389], "sampl": [2, 389], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 374, 389], "trajectori": [2, 389], "checkpoint": [2, 370], "episod": [2, 4], "format": 2, "ted": [2, 377], "The": [2, 373], "rational": 2, "behind": 2, "structur": [2, 389], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 368, 389, 391], "special": [2, 378, 391], "case": 2, "footnot": 2, "multi": [2, 3, 368, 369, 384, 385, 386], "agent": [2, 3, 4, 368, 369, 385, 386], "present": 2, "polici": [2, 4, 373, 375, 376, 378, 382, 384, 385, 386, 387], "rnn": 2, "transform": [2, 3, 185, 373, 375, 377, 385, 386, 387, 389, 391, 392], "step": [2, 373, 375, 377, 380, 385, 386, 389, 392], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 53], "reinforc": [2, 369, 375, 385, 386], "learn": [2, 4, 375, 385, 386], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 368, 369, 370, 385], "env": [3, 387, 391, 392], "vector": [3, 391], "custom": [3, 11, 387, 389], "nativ": 3, "environ": [3, 4, 6, 7, 373, 374, 375, 376, 377, 382, 384, 385, 386, 387, 391, 392], "auto": 3, "reset": [3, 387, 392], "dynam": [3, 4, 389], "spec": [3, 387, 392], "clone": [3, 7], "mask": 3, "action": [3, 4, 376, 387], "record": [3, 346, 370, 373, 381], "video": [3, 11, 381], "domain": [3, 368], "specif": [3, 368, 384], "librari": [3, 391], "thing": [4, 373, 387], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 377, 379, 391], "gener": [4, 11, 368], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 373, 382, 387], "algorithm": [4, 368], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 373, 374, 379, 382], "return": [4, 369], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 391], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 384], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 373, 374, 375], "standard": 4, "explor": [4, 368, 373, 374, 378], "valu": [4, 368, 369, 373, 375, 376, 378], "loss": [4, 373, 374, 375, 376, 382, 385, 386], "earli": 4, "train": [4, 8, 369, 373, 375, 376, 379, 382, 385, 386, 387], "roughli": 4, "uniformli": 4, "random": [4, 385, 386], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 374], "increas": 4, "an": [4, 375, 376, 377, 387], "can": 4, "low": 4, "forward": [4, 373], "model": [4, 368, 373, 374, 376, 379, 388, 391], "also": 4, "us": [4, 6, 9, 376, 388, 389, 391], "offlin": 4, "observ": [4, 373], "space": 4, "effect": [4, 387], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 392], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 373], "render": [7, 11, 382, 385, 386, 392], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 373], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 387], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 374, 389], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binarydiscretetensorspec": 25, "boundedtensorspec": 26, "compositespec": 27, "constantklcontrol": 28, "discretetensorspec": 29, "flat2t": 30, "h5combin": 31, "h5split": 32, "lazystackedcompositespec": 33, "lazystackedtensorspec": 34, "multidiscretetensorspec": 35, "multionehotdiscretetensorspec": 36, "multistep": 37, "nested2t": 38, "nontensorspec": 39, "onehotdiscretetensorspec": 40, "pairwisedataset": 41, "prioritizedreplaybuff": 42, "promptdata": 43, "prompttensordicttoken": 44, "replaybuff": 45, "rewarddata": 46, "rolloutfrommodel": 47, "ted2flat": 48, "ted2nest": 49, "tensordictprioritizedreplaybuff": 50, "tensordictreplaybuff": 51, "tensordicttoken": 52, "tokenizeddatasetload": 54, "unboundedcontinuoustensorspec": 55, "unboundeddiscretetensorspec": 56, "check_no_exclusive_kei": 57, "consolidate_spec": 58, "contains_lazy_spec": 59, "create_infinite_iter": 60, "ataridqnexperiencereplai": 61, "basedatasetexperiencereplai": 62, "d4rlexperiencereplai": 63, "gendgrlexperiencereplai": 64, "minariexperiencereplai": 65, "openmlexperiencereplai": 66, "openxexperiencereplai": 67, "robosetexperiencereplai": 68, "vd4rlexperiencereplai": 69, "get_dataload": 70, "flatstoragecheckpoint": 71, "h5storagecheckpoint": 72, "immutabledatasetwrit": 73, "lazymemmapstorag": 74, "lazytensorstorag": 75, "liststorag": 76, "liststoragecheckpoint": 77, "nestedstoragecheckpoint": 78, "prioritizedsampl": 79, "prioritizedslicesampl": 80, "randomsampl": 81, "replaybufferensembl": 82, "roundrobinwrit": 83, "sampler": 84, "samplerensembl": 85, "samplerwithoutreplac": 86, "slicesampl": 87, "slicesamplerwithoutreplac": 88, "storagecheckpointerbas": 90, "storageensembl": 91, "storageensemblecheckpoint": 92, "tensordictmaxvaluewrit": 93, "tensordictroundrobinwrit": 94, "tensorstorag": 95, "tensorstoragecheckpoint": 96, "writer": 97, "writerensembl": 98, "braxenv": 99, "braxwrapp": 100, "dmcontrolenv": 101, "dmcontrolwrapp": 102, "envbas": [103, 387], "envcreat": 104, "envmetadata": 105, "gymenv": 106, "gymlikeenv": 107, "gymwrapp": 108, "habitatenv": 109, "isaacgymenv": 110, "isaacgymwrapp": 111, "jumanjienv": 112, "jumanjiwrapp": 113, "mogymenv": 114, "mogymwrapp": 115, "marlgroupmaptyp": 116, "meltingpotenv": 117, "meltingpotwrapp": 118, "modelbasedenvbas": 119, "multithreadedenv": 120, "multithreadedenvwrapp": 121, "openmlenv": 122, "parallelenv": 123, "pendulumenv": 124, "pettingzooenv": 125, "pettingzoowrapp": 126, "robohiveenv": 127, "smacv2env": 128, "smacv2wrapp": 129, "serialenv": 130, "tictactoeenv": 131, "vmasenv": 132, "vmaswrapp": 133, "check_marl_group": 134, "gym_backend": 135, "dreamerdecod": 136, "dreamerenv": 137, "set_gym_backend": 138, "actiondiscret": 139, "actionmask": 140, "autoresetenv": 141, "autoresettransform": 142, "batchsizetransform": 143, "binarizereward": 144, "burnintransform": 145, "catfram": [146, 389], "cattensor": 147, "centercrop": 148, "cliptransform": 149, "dtypecasttransform": 151, "devicecasttransform": 152, "discreteactionproject": 153, "doubletofloat": 154, "endoflifetransform": 155, "excludetransform": 156, "finitetensordictcheck": 157, "flattenobserv": 158, "frameskiptransform": 159, "grayscal": 160, "inittrack": 161, "klrewardtransform": 162, "noopresetenv": 163, "observationnorm": 164, "observationtransform": 165, "permutetransform": 166, "pinmemorytransform": 167, "r3mtransform": 168, "randomcroptensordict": 169, "removeemptyspec": 170, "renametransform": 171, "resiz": 172, "reward2gotransform": 173, "rewardclip": 174, "rewardsc": 175, "rewardsum": 176, "selecttransform": 177, "signtransform": 178, "squeezetransform": 179, "stepcount": 180, "targetreturn": 181, "tensordictprim": 182, "timemaxpool": 183, "totensorimag": 184, "transformedenv": 186, "unsqueezetransform": 187, "vc1transform": 188, "viprewardtransform": 189, "viptransform": 190, "vecgymenvtransform": 191, "vecnorm": [192, 392], "gsdenois": 193, "multisteptransform": 194, "randompolici": 195, "check_env_spec": 196, "exploration_mod": 197, "exploration_typ": 198, "get_available_librari": 199, "make_composite_from_td": 200, "set_exploration_mod": 201, "set_exploration_typ": 202, "step_mdp": 203, "terminated_or_trunc": 204, "cemplann": 205, "conv3dnet": 206, "convnet": 207, "dtactor": 208, "ddpgcnnactor": 209, "ddpgcnnqnet": 210, "ddpgmlpactor": 211, "ddpgmlpqnet": 212, "decisiontransform": 213, "delta": 214, "distributionaldqnnet": 215, "distributionalqvaluehook": 216, "dreameractor": 217, "duelingcnndqnet": 218, "gru": 219, "grucel": 220, "grumodul": 221, "independentnorm": 222, "lstm": [223, 376], "lstmcell": 224, "lstmmodul": 225, "mlp": [226, 376], "mpcplannerbas": 227, "mppiplann": 228, "maskedcategor": 229, "maskedonehotcategor": 230, "multiagentconvnet": 231, "multiagentmlp": 232, "noisylazylinear": 233, "noisylinear": 234, "normalparamwrapp": 235, "obsdecod": 236, "obsencod": 237, "onehotcategor": 238, "onlinedtactor": 239, "qmixer": [240, 369], "qvaluehook": 241, "rssmposterior": 242, "rssmprior": 243, "squeeze2dlay": 244, "squeezelay": 245, "tanhdelta": 246, "tanhnorm": 247, "truncatednorm": 248, "vdnmixer": 249, "vmapmodul": 250, "reset_nois": 251, "actor": [252, 368, 373, 378], "actorcriticoper": 253, "actorcriticwrapp": 254, "actorvalueoper": 255, "additivegaussianmodul": 256, "additivegaussianwrapp": 257, "decisiontransformerinferencewrapp": 258, "distributionalqvalueactor": 259, "distributionalqvaluemodul": 260, "egreedymodul": 261, "egreedywrapp": 262, "lmheadactorvalueoper": 263, "multistepactorwrapp": 264, "ornsteinuhlenbeckprocessmodul": 265, "ornsteinuhlenbeckprocesswrapp": 266, "probabilisticactor": 267, "qvalueactor": 268, "qvaluemodul": 269, "safemodul": [270, 368], "safeprobabilisticmodul": 271, "safeprobabilistictensordictsequenti": 272, "safesequenti": 273, "tanhmodul": 274, "valueoper": 275, "worldmodelwrapp": 276, "biased_softplu": 277, "get_primers_from_modul": 278, "inv_softplu": 279, "map": [280, 385], "a2closs": 281, "cqlloss": 282, "clipppoloss": 283, "ddpgloss": 284, "dqnloss": 285, "dtloss": 286, "discretecqlloss": 287, "discreteiqlloss": 288, "discretesacloss": 289, "distributionaldqnloss": 290, "dreameractorloss": 291, "dreamermodelloss": 292, "dreamervalueloss": 293, "hardupd": 294, "iqlloss": 295, "klpenppoloss": 296, "lossmodul": [297, 373, 379], "onlinedtloss": 298, "ppoloss": 299, "redqloss": 300, "reinforceloss": 301, "sacloss": 302, "softupd": 303, "td3bcloss": 304, "td3loss": 305, "valueestim": 306, "default_value_kwarg": 307, "distance_loss": 308, "hold_out_net": 309, "hold_out_param": 310, "qmixerloss": 311, "next_state_valu": 312, "gae": 313, "td0estim": 314, "td1estim": 315, "tdlambdaestim": 316, "valueestimatorbas": 317, "generalized_advantage_estim": 318, "reward2go": 319, "td0_advantage_estim": 320, "td0_return_estim": 321, "td1_advantage_estim": 322, "td1_return_estim": 323, "td_lambda_advantage_estim": 324, "td_lambda_return_estim": 325, "vec_generalized_advantage_estim": 326, "vec_td1_advantage_estim": 327, "vec_td1_return_estim": 328, "vec_td_lambda_advantage_estim": 329, "vec_td_lambda_return_estim": 330, "pixelrendertransform": 331, "tensordictrecord": 332, "videorecord": 333, "logger": [334, 370, 381, 382], "csvlogger": 335, "generate_exp_nam": 336, "get_logg": 337, "mlflowlogg": 338, "tensorboardlogg": 339, "wandblogg": 340, "batchsubsampl": 341, "clearcudacach": 342, "countframeslog": 343, "logreward": 344, "optimizerhook": 345, "replaybuffertrain": 347, "rewardnorm": 348, "selectkei": 349, "trainer": [350, 370, 374], "trainerhookbas": 351, "updateweight": 352, "correct_for_frame_skip": 353, "get_stats_random_rollout": 354, "make_collector_offpolici": 355, "make_collector_onpolici": 356, "make_dqn_loss": 357, "make_replay_buff": 358, "make_target_updat": 359, "make_train": 360, "parallel_env_constructor": 361, "sync_async_collector": 362, "sync_sync_collector": 363, "transformed_env_constructor": 364, "readm": [365, 383], "tuto": [365, 383], "api": 366, "contribut": [367, 391], "content": 367, "modul": [368, 373, 376, 378, 382, 391], "tensordictmodul": [368, 378, 391], "wrapper": [368, 378], "probabilist": [368, 378], "q": [368, 374, 376, 378], "oper": 368, "join": 368, "hook": [368, 370, 374], "regular": 368, "planner": 368, "object": [369, 373, 379, 391], "dqn": [369, 374, 376], "ddpg": [369, 373, 385], "sac": 369, "redq": 369, "crossq": 369, "iql": 369, "cql": 369, "dt": 369, "td3": 369, "bc": 369, "ppo": [369, 375, 386], "a2c": 369, "dreamer": 369, "builder": 370, "_util": 371, "comput": [372, 374, 387, 390], "time": [372, 373, 390], "code": [373, 387], "overview": [373, 376], "setup": [373, 376], "__init__": 373, "method": 373, "estim": 373, "put": 373, "togeth": [373, 387], "call": 373, "parallel": [373, 384, 392], "execut": [373, 384, 387], "stat": 373, "build": [373, 374, 382, 389], "evalu": 373, "construct": 373, "target": [373, 374, 379], "network": [373, 374, 375, 376, 378, 385, 386], "updat": 373, "experi": [373, 387], "result": [373, 375, 385, 386], "conclus": [373, 374, 375, 376, 385, 386, 387, 389], "next": [373, 375, 377, 380, 385, 386, 389], "A": [374, 389], "deep": 374, "collect": [374, 375, 380], "paramet": [374, 375, 379], "hyperparamet": [374, 375, 385, 386], "regist": 374, "possibl": 374, "improv": 374, "defin": [375, 385, 386], "loop": [375, 376, 382, 385, 386, 387], "recurr": 376, "convolut": 376, "select": 376, "further": [376, 379], "read": 376, "creat": 377, "run": [377, 392], "rollout": [377, 384, 385, 386, 387, 392], "s": [378, 379], "output": 379, "consider": 379, "log": 381, "own": 382, "first": 382, "design": 382, "divers": 384, "competit": 385, "group": 385, "critic": [385, 386], "pendulum": 387, "write": 387, "_step": 387, "simul": 387, "_reset": 387, "metadata": 387, "_spec": 387, "shape": 387, "seed": [387, 392], "wrap": 387, "class": [387, 391], "test": 387, "our": 387, "simpl": 387, "pretrain": 388, "vanilla": 389, "integr": 389, "tensorclass": 389, "other": 389, "tensor": 389, "pytre": 389, "iter": 389, "over": 389, "fix": 389, "priorit": 389, "save": 389, "raw": 389, "imag": 389, "more": 389, "complex": 389, "introduct": 391, "config": 391, "sequenc": 391, "program": 391, "ensembl": 391, "meta": 391, "state": 391, "frame_skip": 392, "deepmind": 392, "control": 392, "devic": 392, "close": 392, "access": 392, "attribut": 392, "kwarg": 392}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})