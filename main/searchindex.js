Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 119, 120, 122, 123, 124, 125, 126, 129, 132, 137, 138, 140, 141, 143, 144, 146, 149, 151, 152, 155, 161, 162, 166, 167, 168, 169, 171, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 194, 204, 205, 207, 208, 209, 210, 217, 219, 221, 223, 224, 225, 229, 230, 231, 242, 243, 245, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 274, 278, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 311, 312, 313, 314, 315, 329, 331, 334, 338, 343, 344, 348, 349, 352, 359, 360, 361, 362, 365, 366, 367, 371, 372, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390], "open": [0, 5, 7, 12, 41, 43, 46, 67, 372, 383, 384, 389], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390], "reinforc": [0, 3, 9, 64, 117, 118, 144, 207, 208, 209, 210, 214, 258, 263, 264, 279, 280, 284, 285, 286, 288, 292, 293, 299, 300, 301, 302, 364, 370, 372, 375, 376, 381, 385, 388, 389], "learn": [0, 3, 7, 8, 9, 18, 37, 64, 65, 66, 68, 69, 103, 117, 118, 122, 123, 129, 144, 207, 208, 209, 210, 214, 226, 232, 258, 263, 264, 279, 280, 284, 285, 286, 288, 292, 293, 298, 299, 300, 301, 302, 364, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 387, 388, 389, 390], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 61, 119, 179, 232, 250, 265, 273, 279, 281, 294, 295, 297, 299, 339, 363, 365, 366, 367, 368, 371, 372, 373, 378, 381, 383, 384, 386, 387, 390], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 44, 52, 101, 102, 111, 120, 197, 364, 365, 366, 369, 371, 372, 373, 375, 376, 378, 383, 384, 385, 390], "pytorch": [0, 1, 2, 3, 23, 65, 130, 131, 182, 194, 217, 221, 231, 232, 348, 363, 365, 368, 371, 373, 374, 377, 381, 383, 384, 385, 386, 387, 389, 390], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 37, 52, 64, 103, 107, 111, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 136, 190, 192, 221, 338, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 136, 137, 138, 140, 141, 143, 144, 147, 148, 149, 151, 152, 153, 161, 162, 166, 167, 171, 174, 178, 179, 180, 183, 184, 186, 188, 190, 192, 194, 202, 203, 204, 205, 207, 217, 219, 220, 221, 223, 225, 226, 229, 230, 232, 233, 246, 248, 250, 255, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 329, 331, 338, 344, 360, 361, 362, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "directli": [0, 3, 4, 8, 23, 61, 82, 99, 100, 103, 106, 107, 119, 123, 129, 162, 171, 189, 295, 302, 362, 366, 372, 373, 375, 383, 384, 385, 387], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 140, 141, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 159, 160, 162, 164, 166, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 198, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 236, 237, 238, 239, 245, 246, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 293, 294, 295, 297, 298, 299, 300, 302, 303, 305, 309, 310, 311, 312, 313, 314, 317, 329, 330, 331, 339, 345, 348, 351, 352, 356, 358, 359, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390], "pypi": [0, 2, 389], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 103, 107, 110, 113, 117, 118, 120, 123, 124, 125, 126, 129, 130, 131, 148, 166, 180, 182, 183, 184, 186, 188, 190, 191, 192, 204, 205, 217, 220, 221, 224, 230, 231, 238, 246, 247, 251, 253, 265, 268, 269, 302, 331, 338, 345, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 385, 387, 390], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 93, 103, 106, 107, 108, 110, 111, 113, 117, 118, 123, 124, 125, 126, 129, 130, 131, 182, 186, 191, 192, 214, 221, 224, 231, 233, 250, 254, 255, 257, 258, 268, 273, 279, 288, 295, 297, 311, 316, 324, 338, 343, 365, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 390], "about": [0, 3, 5, 7, 9, 18, 19, 20, 52, 65, 68, 69, 103, 123, 129, 367, 371, 372, 373, 375, 376, 377, 378, 379, 380, 383, 384, 385, 387, 389, 390], "instruct": [0, 6, 7, 10, 22, 63, 151, 153, 371, 372, 373, 374, 383, 384, 387], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 123, 129, 251, 252, 253, 366, 371, 375, 377, 378, 380, 382, 384], "section": [0, 2, 3, 4, 24, 217, 221, 372, 375, 380, 383, 384], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 70, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 204, 205, 217, 220, 221, 224, 230, 246, 265, 268, 345, 371, 372, 373, 374, 375, 383, 385], "pip": [0, 10, 66, 375, 376, 377, 378, 379, 380, 384, 389, 390], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 80, 81, 82, 85, 87, 88, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 129, 137, 141, 143, 144, 145, 146, 147, 149, 152, 156, 161, 162, 164, 166, 167, 170, 171, 174, 175, 179, 180, 181, 184, 186, 188, 189, 190, 192, 202, 204, 205, 211, 214, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 248, 250, 255, 258, 259, 260, 262, 264, 265, 266, 267, 272, 279, 280, 281, 282, 283, 285, 287, 288, 289, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 335, 339, 345, 352, 358, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "python": [0, 3, 5, 6, 7, 10, 11, 14, 15, 21, 121, 136, 217, 218, 219, 221, 222, 223, 227, 228, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 35, 36, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 103, 106, 107, 108, 113, 123, 129, 140, 141, 144, 145, 156, 162, 166, 167, 182, 184, 186, 205, 217, 219, 221, 223, 224, 229, 230, 231, 235, 250, 256, 257, 258, 265, 266, 268, 269, 281, 290, 294, 295, 297, 330, 331, 347, 366, 370, 371, 372, 373, 374, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390], "low": [0, 3, 26, 80, 103, 107, 123, 129, 137, 147, 151, 198, 244, 245, 246, 256, 258, 265, 272, 371, 372, 373, 383, 384, 385, 389, 390], "high": [0, 3, 9, 26, 41, 43, 46, 50, 80, 103, 107, 123, 129, 137, 147, 151, 161, 198, 244, 245, 246, 256, 258, 265, 272, 311, 316, 324, 371, 372, 373, 383, 384, 385, 387, 389, 390], "level": [0, 2, 3, 4, 22, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 106, 108, 144, 178, 294, 371, 372, 378, 389], "abstract": [0, 3, 8, 25, 26, 27, 29, 33, 34, 35, 39, 53, 55, 56, 61, 62, 66, 97, 103, 163, 225, 315, 340, 349, 368, 373, 385, 389], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 82, 85, 86, 88, 89, 91, 93, 95, 103, 104, 106, 107, 108, 116, 117, 118, 119, 122, 123, 124, 125, 126, 129, 130, 131, 137, 139, 140, 141, 143, 144, 147, 148, 149, 151, 152, 153, 155, 156, 160, 161, 164, 166, 171, 174, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 198, 201, 202, 203, 210, 212, 217, 218, 219, 221, 222, 223, 225, 227, 228, 229, 232, 236, 238, 241, 256, 257, 259, 262, 264, 265, 266, 268, 269, 270, 271, 272, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 306, 309, 310, 311, 312, 313, 314, 315, 329, 338, 345, 358, 362, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 143, 151, 248, 295, 366, 389], "effici": [0, 1, 2, 4, 8, 217, 232, 366, 371, 372, 373, 374, 377, 378, 380, 382, 383, 384, 386, 387, 389], "modular": [0, 61, 271, 387, 389], "document": [0, 2, 5, 7, 11, 18, 19, 21, 37, 67, 103, 107, 123, 129, 184, 192, 363, 372, 374, 375, 378, 381, 389], "properli": [0, 1, 103, 107, 123, 129, 201, 373, 379, 383, 384, 385, 389], "test": [0, 3, 5, 99, 100, 112, 113, 117, 118, 186, 194, 219, 223, 344, 358, 373, 374, 389], "The": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 79, 80, 82, 85, 87, 88, 89, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 125, 126, 129, 130, 131, 137, 140, 141, 143, 144, 148, 149, 152, 153, 154, 162, 164, 166, 171, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 192, 194, 201, 202, 203, 207, 208, 209, 210, 211, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 250, 251, 254, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 317, 329, 331, 333, 336, 337, 338, 339, 343, 358, 360, 361, 364, 366, 367, 368, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 389, 390], "code": [0, 3, 5, 7, 8, 14, 15, 67, 103, 107, 123, 129, 166, 184, 186, 217, 218, 219, 221, 222, 223, 265, 271, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390], "aim": [0, 2, 3, 7, 33, 34, 166, 186, 188, 224, 351, 365, 366, 367, 371, 372, 389], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 41, 43, 46, 66, 69, 70, 74, 75, 89, 91, 95, 96, 98, 99, 100, 106, 108, 112, 120, 122, 123, 124, 126, 141, 144, 153, 162, 180, 181, 183, 197, 214, 248, 257, 258, 265, 268, 271, 288, 311, 312, 313, 314, 336, 364, 366, 368, 373, 374, 375, 376, 384, 385, 387, 389], "research": [0, 7, 9, 117, 118, 389], "most": [0, 1, 2, 3, 7, 8, 14, 15, 37, 87, 88, 103, 107, 123, 129, 151, 189, 194, 371, 373, 375, 376, 377, 378, 379, 380, 385, 389, 390], "written": [0, 1, 2, 3, 12, 30, 41, 43, 46, 48, 54, 63, 64, 67, 72, 74, 80, 82, 87, 88, 101, 102, 103, 106, 107, 108, 109, 123, 126, 129, 137, 144, 153, 160, 174, 178, 181, 189, 192, 201, 202, 250, 263, 264, 265, 268, 269, 273, 279, 281, 294, 297, 299, 310, 329, 330, 331, 366, 367, 368, 371, 374, 376, 382, 385, 389], "highli": [0, 2, 375, 389, 390], "wai": [0, 1, 2, 3, 4, 61, 65, 82, 93, 111, 166, 169, 188, 189, 221, 297, 311, 312, 313, 314, 366, 371, 372, 373, 375, 377, 378, 382, 383, 384, 385, 386, 387, 389, 390], "easili": [0, 1, 2, 3, 7, 103, 107, 123, 129, 367, 371, 372, 373, 375, 376, 377, 380, 383, 384, 389, 390], "swap": [0, 1, 3, 106, 189, 373, 386, 389], "compon": [0, 1, 2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 214, 239, 257, 258, 267, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 343, 348, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 386, 389], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 91, 96, 103, 104, 107, 117, 118, 123, 124, 125, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 201, 206, 207, 211, 214, 215, 219, 223, 237, 238, 239, 247, 256, 261, 262, 272, 275, 276, 278, 284, 296, 329, 331, 345, 362, 364, 370, 372, 374, 376, 378, 379, 380, 381, 386, 388], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 98, 103, 104, 107, 111, 116, 117, 118, 123, 124, 125, 129, 130, 131, 149, 152, 180, 184, 190, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 247, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 294, 331, 371, 372, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "write": [0, 2, 3, 8, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 91, 98, 103, 107, 147, 164, 165, 174, 176, 178, 182, 202, 250, 268, 269, 271, 273, 282, 283, 285, 286, 287, 293, 298, 300, 302, 303, 310, 315, 331, 366, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 107, 120, 123, 127, 128, 129, 141, 174, 183, 190, 192, 201, 202, 217, 219, 223, 263, 264, 268, 269, 274, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 338, 371, 373, 374, 375, 377, 383, 384, 385, 389, 390], "ones": [0, 2, 23, 27, 37, 42, 45, 50, 51, 103, 107, 123, 124, 125, 129, 145, 148, 149, 150, 152, 162, 166, 171, 180, 183, 184, 186, 188, 192, 193, 227, 228, 248, 268, 279, 280, 282, 293, 297, 298, 300, 302, 303, 317, 371, 373, 383, 384, 385, 387, 389, 390], "littl": [0, 1, 3, 52, 103, 107, 123, 129, 184, 279, 281, 294, 297, 299, 373, 374, 378, 387, 389, 390], "effort": [0, 3, 385, 387, 389], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 96, 98, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 129, 130, 131, 136, 137, 138, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 166, 167, 168, 169, 171, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 309, 311, 312, 313, 314, 315, 329, 330, 338, 339, 341, 344, 345, 348, 350, 351, 352, 358, 362, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "repo": [0, 6, 63, 144, 181, 186, 365, 384, 389], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 87, 88, 101, 102, 106, 108, 109, 126, 255, 260, 264, 283, 286, 293, 309, 377, 389], "align": [0, 217, 221, 389], "exist": [0, 2, 3, 4, 12, 18, 21, 37, 41, 43, 46, 54, 103, 107, 123, 129, 145, 150, 184, 192, 300, 352, 362, 383, 384, 389, 390], "ecosystem": [0, 378, 389], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 61, 67, 74, 75, 82, 85, 87, 93, 95, 103, 104, 107, 111, 117, 118, 123, 129, 130, 131, 141, 144, 178, 179, 180, 181, 184, 192, 217, 219, 221, 223, 229, 245, 254, 255, 258, 260, 262, 264, 269, 294, 331, 371, 372, 373, 374, 375, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "dataset": [0, 32, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 85, 87, 88, 122, 190, 331, 364, 371, 372, 375, 386, 387, 389, 390], "pillar": [0, 389], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 140, 141, 143, 144, 145, 149, 150, 151, 152, 157, 161, 162, 166, 167, 168, 171, 174, 178, 179, 180, 181, 183, 184, 186, 189, 190, 194, 203, 219, 223, 225, 226, 255, 262, 264, 285, 289, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 339, 341, 344, 351, 352, 353, 354, 358, 359, 360, 361, 362, 364, 365, 366, 370, 376, 377, 378, 379, 381, 386, 387, 388], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 43, 46, 47, 54, 103, 107, 119, 123, 129, 149, 166, 180, 186, 188, 191, 192, 204, 205, 206, 211, 213, 219, 223, 224, 225, 226, 230, 237, 238, 247, 251, 252, 253, 261, 268, 274, 276, 279, 280, 281, 283, 284, 285, 286, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 309, 348, 353, 354, 355, 364, 365, 368, 370, 373, 375, 378, 381, 383, 384, 385, 387, 388, 390], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 129, 138, 141, 143, 144, 149, 150, 152, 154, 160, 162, 168, 171, 178, 184, 189, 192, 193, 194, 198, 202, 203, 214, 219, 223, 226, 229, 230, 239, 248, 250, 257, 259, 260, 262, 263, 264, 265, 266, 268, 271, 272, 273, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 329, 331, 338, 339, 345, 348, 350, 353, 358, 360, 361, 362, 364, 366, 367, 368, 370, 374, 375, 376, 377, 381, 385, 386, 387, 388, 390], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 45, 47, 100, 103, 107, 112, 113, 118, 123, 124, 125, 129, 132, 144, 166, 171, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 211, 217, 221, 275, 276, 277, 278, 295, 358, 364, 369, 371, 373, 376, 377, 378, 384, 385, 387, 389, 390], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 40, 41, 43, 46, 74, 75, 79, 80, 93, 95, 103, 104, 107, 123, 129, 130, 141, 143, 145, 148, 156, 162, 166, 174, 180, 183, 184, 186, 188, 192, 194, 217, 219, 220, 221, 223, 226, 230, 233, 239, 245, 246, 256, 258, 262, 265, 267, 268, 269, 300, 310, 311, 312, 313, 314, 329, 339, 351, 361, 366, 372, 373, 376, 377, 379, 383, 384, 386, 387, 389, 390], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 40, 41, 43, 46, 93, 103, 104, 107, 123, 129, 130, 141, 143, 145, 148, 156, 162, 166, 174, 180, 183, 184, 186, 188, 192, 194, 217, 219, 220, 221, 222, 223, 226, 230, 245, 246, 256, 265, 268, 269, 300, 310, 320, 321, 322, 323, 325, 326, 327, 328, 329, 361, 366, 372, 373, 376, 379, 383, 384, 385, 386, 387, 389, 390], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 37, 47, 48, 61, 67, 141, 144, 171, 178, 192, 193, 263, 264, 345, 348, 350, 353, 354, 358, 360, 361, 364, 368, 387, 390], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 80, 82, 83, 85, 87, 88, 89, 94, 97, 98, 103, 107, 119, 123, 129, 137, 148, 149, 152, 166, 180, 183, 184, 186, 188, 189, 190, 192, 201, 202, 203, 204, 205, 217, 218, 221, 222, 224, 226, 230, 250, 257, 258, 265, 267, 268, 273, 276, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 317, 335, 339, 351, 358, 359, 360, 361, 362, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 389, 390], "etc": [0, 2, 3, 7, 8, 12, 37, 55, 56, 67, 103, 107, 123, 129, 160, 184, 192, 224, 230, 245, 372, 373, 378, 387, 389, 390], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 89, 103, 107, 123, 124, 125, 129, 137, 140, 144, 149, 152, 153, 160, 161, 162, 178, 183, 184, 190, 192, 194, 202, 204, 205, 224, 229, 230, 248, 262, 270, 271, 279, 281, 294, 297, 299, 302, 306, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 339, 348, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "few": [0, 2, 8, 107, 331, 339, 373, 374, 376, 383, 384, 387, 389, 390], "depend": [0, 1, 2, 3, 4, 7, 8, 41, 43, 106, 108, 109, 126, 130, 131, 149, 152, 273, 297, 366, 371, 373, 374, 383, 384, 385, 389, 390], "possibl": [0, 2, 3, 4, 23, 25, 29, 34, 35, 36, 37, 40, 64, 67, 69, 80, 87, 93, 103, 107, 123, 129, 137, 148, 166, 180, 183, 184, 186, 188, 192, 204, 205, 217, 218, 221, 222, 268, 329, 344, 348, 366, 371, 373, 374, 376, 378, 379, 383, 384, 385, 387, 389, 390], "standard": [0, 3, 162, 173, 190, 203, 215, 226, 231, 232, 237, 254, 255, 256, 302, 303, 311, 312, 313, 314, 371, 372, 375, 376, 384, 387, 389], "numpi": [0, 3, 12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 129, 182, 348, 385, 387, 389, 390], "common": [0, 2, 3, 4, 107, 112, 138, 251, 252, 253, 261, 279, 280, 281, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 358, 365, 366, 368, 371, 373, 376, 379, 382, 383, 384, 385, 386, 389, 390], "openai": [0, 7, 24, 106, 108, 126, 373, 385, 389, 390], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 103, 104, 106, 107, 108, 109, 111, 117, 118, 120, 121, 123, 126, 129, 130, 131, 133, 136, 140, 144, 147, 153, 159, 160, 162, 164, 169, 171, 174, 180, 183, 189, 190, 192, 358, 365, 371, 372, 373, 374, 375, 379, 380, 385, 386, 387, 389], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 82, 87, 88, 95, 101, 102, 103, 106, 107, 108, 109, 111, 113, 120, 121, 123, 124, 125, 126, 129, 137, 140, 144, 145, 147, 148, 149, 151, 152, 156, 162, 166, 167, 171, 178, 179, 180, 181, 183, 184, 186, 188, 190, 192, 221, 223, 229, 230, 250, 256, 257, 265, 266, 268, 269, 270, 271, 279, 281, 282, 286, 287, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 311, 312, 313, 314, 315, 331, 338, 352, 368, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 389, 390], "option": [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 166, 167, 169, 170, 171, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 248, 250, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 311, 312, 313, 314, 315, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 336, 338, 339, 341, 342, 343, 344, 345, 346, 348, 352, 353, 354, 355, 357, 358, 360, 361, 362, 366, 374, 375, 378, 383, 384, 385, 387, 389], "On": [0, 3, 7, 18, 19, 20, 21, 27, 64, 218, 222, 366, 372, 383, 384], "end": [0, 2, 3, 14, 15, 17, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 86, 87, 88, 103, 107, 123, 129, 153, 164, 178, 179, 184, 192, 204, 205, 217, 218, 221, 222, 225, 262, 300, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "come": [0, 1, 2, 3, 8, 37, 93, 103, 107, 116, 123, 129, 149, 152, 250, 251, 252, 253, 265, 273, 279, 281, 294, 297, 299, 331, 371, 372, 373, 374, 377, 378, 379, 380, 383, 384, 387, 389, 390], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 86, 89, 95, 103, 105, 107, 108, 117, 118, 119, 123, 124, 125, 129, 130, 131, 136, 138, 140, 141, 144, 145, 148, 149, 152, 159, 160, 166, 171, 178, 179, 180, 181, 183, 184, 186, 188, 190, 192, 194, 199, 200, 202, 217, 219, 221, 223, 225, 229, 230, 245, 255, 256, 268, 287, 295, 297, 300, 315, 339, 344, 345, 354, 362, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 389, 390], "re": [0, 2, 3, 8, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 129, 192, 223, 227, 228, 265, 269, 338, 368, 371, 373, 374, 375, 377, 382, 383, 385, 389, 390], "usabl": [0, 368, 374, 389], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 104, 107, 123, 129, 136, 140, 141, 149, 152, 184, 190, 192, 194, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 233, 234, 235, 236, 237, 240, 241, 243, 246, 248, 251, 252, 253, 254, 255, 256, 258, 259, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 358, 364, 366, 371, 374, 375, 376, 379, 382, 385, 387, 390], "cost": [0, 2, 29, 67, 279, 281, 294, 297, 299, 371, 372, 383, 384, 385, 387], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 83, 85, 87, 88, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 133, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 201, 202, 203, 206, 207, 208, 209, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 236, 237, 238, 240, 241, 244, 245, 246, 247, 250, 251, 252, 253, 256, 262, 265, 267, 268, 269, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 306, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 335, 348, 351, 353, 358, 359, 360, 361, 362, 364, 366, 368, 371, 372, 373, 374, 376, 377, 379, 382, 383, 384, 385, 386, 387, 389, 390], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 46, 52, 54, 61, 64, 68, 69, 79, 80, 87, 103, 104, 107, 111, 116, 120, 123, 124, 125, 129, 143, 149, 152, 180, 182, 190, 192, 229, 230, 258, 263, 264, 267, 364, 368, 371, 372, 374, 375, 383, 384, 385, 386, 387, 389, 390], "good": [0, 1, 4, 9, 123, 371, 373, 374, 376, 384, 389, 390], "runtim": [0, 2, 3, 23, 37, 103, 107, 123, 129, 192, 385], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 101, 102, 103, 106, 107, 108, 109, 123, 126, 129, 132, 149, 152, 161, 184, 192, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 281, 290, 297, 300, 344, 348, 367, 371, 372, 373, 374, 375, 378, 380, 382, 383, 384, 385, 390], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 87, 88, 91, 98, 99, 100, 103, 106, 107, 108, 112, 113, 116, 123, 124, 125, 126, 127, 128, 129, 130, 178, 180, 190, 192, 219, 223, 251, 252, 253, 263, 264, 287, 295, 302, 331, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 389, 390], "read": [0, 2, 3, 7, 23, 27, 30, 33, 42, 44, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 82, 89, 91, 95, 103, 106, 107, 108, 123, 129, 138, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 164, 165, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 183, 186, 187, 189, 190, 192, 202, 236, 250, 251, 252, 253, 257, 262, 265, 268, 269, 271, 273, 274, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 311, 312, 313, 314, 315, 331, 344, 348, 366, 371, 372, 373, 375, 376, 382, 383, 384, 385, 386, 390], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 368, 371, 375, 378, 382, 386, 390], "beyond": [0, 103, 107, 123, 129], "api": [0, 2, 3, 5, 23, 124, 125, 126, 166, 188, 190, 367, 368, 375, 376, 377, 378, 379, 383, 384, 385, 387, 389, 390], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 55, 56, 57, 59, 71, 72, 78, 87, 103, 104, 106, 107, 108, 119, 123, 129, 132, 144, 145, 155, 160, 167, 180, 182, 184, 192, 194, 219, 223, 250, 257, 258, 265, 266, 267, 268, 269, 302, 331, 363, 366, 367, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390], "paper": [0, 64, 67, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 126, 130, 131, 166, 186, 188, 217, 238, 247, 285, 292, 302, 371, 373, 383, 384], "releas": [0, 4, 7, 10, 37, 103, 107, 123, 129, 184, 192, 300, 389], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 350, 358, 368, 371, 389], "so": [0, 2, 3, 4, 6, 7, 10, 11, 37, 41, 43, 46, 47, 103, 107, 117, 118, 123, 129, 180, 190, 192, 270, 271, 371, 373, 374, 377, 380, 383, 384, 385, 390], "make": [0, 2, 3, 4, 7, 11, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 89, 91, 98, 103, 107, 108, 111, 113, 115, 121, 123, 129, 137, 154, 162, 166, 167, 171, 178, 186, 192, 194, 217, 218, 221, 222, 229, 230, 231, 257, 269, 279, 281, 294, 297, 299, 311, 312, 313, 314, 329, 345, 354, 362, 366, 367, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "sure": [0, 3, 4, 7, 66, 89, 107, 111, 171, 257, 362, 366, 371, 373, 374, 377, 383, 384, 385, 387, 389, 390], "alwai": [0, 2, 3, 14, 15, 20, 27, 33, 37, 61, 70, 71, 72, 78, 103, 107, 123, 129, 160, 161, 190, 192, 288, 295, 366, 367, 372, 373, 374, 383, 384, 385, 387], "enjoi": [0, 2, 3, 67, 378], "latest": [0, 2, 3, 10, 120, 124, 125, 345, 373, 383, 384, 385, 389], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 40, 54, 65, 80, 87, 88, 103, 107, 116, 123, 124, 125, 127, 128, 129, 141, 144, 156, 160, 164, 180, 181, 185, 190, 194, 204, 205, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 231, 232, 269, 276, 279, 281, 294, 297, 299, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 362, 366, 371, 372, 373, 374, 376, 377, 378, 380, 385, 387, 390], "recent": [0, 7, 12, 189, 390], "version": [0, 1, 2, 3, 6, 12, 37, 41, 43, 47, 64, 69, 87, 103, 106, 107, 108, 109, 120, 121, 123, 124, 126, 129, 130, 131, 189, 190, 192, 201, 253, 279, 281, 294, 295, 297, 299, 300, 311, 314, 365, 366, 371, 373, 374, 375, 377, 380, 383, 384, 385, 386, 390], "although": [0, 1, 3, 8, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 368, 371, 372, 378, 387], "core": [0, 3, 8, 368, 374, 376, 389], "guarante": [0, 2, 37, 41, 43, 46, 74, 75, 76, 89, 91, 95, 103, 107, 123, 129, 190, 192, 378, 389], "backward": [0, 8, 37, 99, 100, 103, 107, 123, 129, 190, 192, 217, 218, 221, 222, 279, 280, 282, 286, 287, 293, 297, 298, 299, 300, 302, 303, 371, 373, 374, 377, 378, 380, 383, 384, 385], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 37, 63, 82, 85, 87, 88, 89, 93, 103, 107, 109, 122, 123, 129, 144, 178, 186, 190, 192, 217, 218, 219, 221, 222, 223, 266, 279, 280, 282, 283, 285, 286, 287, 293, 295, 297, 298, 299, 300, 302, 303, 306, 371, 374, 387, 389], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 27, 29, 30, 33, 35, 36, 37, 40, 42, 43, 44, 45, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 127, 128, 129, 130, 131, 140, 141, 143, 145, 148, 149, 150, 151, 152, 160, 162, 164, 166, 168, 171, 174, 178, 179, 180, 183, 184, 186, 188, 190, 192, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 233, 237, 245, 248, 256, 257, 258, 259, 260, 262, 263, 264, 268, 272, 273, 279, 280, 281, 282, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 310, 311, 312, 313, 314, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 339, 366, 367, 370, 371, 372, 373, 374, 376, 377, 378, 379, 382, 383, 384, 385, 387, 388, 389, 390], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 29, 30, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 95, 99, 100, 103, 106, 107, 109, 110, 112, 113, 119, 120, 121, 123, 126, 127, 128, 129, 137, 138, 140, 142, 144, 145, 147, 148, 150, 151, 160, 161, 162, 166, 171, 174, 176, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 203, 204, 205, 207, 208, 209, 210, 211, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 236, 240, 241, 244, 245, 246, 248, 250, 254, 255, 256, 258, 259, 260, 263, 264, 267, 268, 271, 272, 275, 276, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 317, 318, 319, 339, 346, 358, 362, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 42, 45, 50, 51, 63, 65, 66, 67, 68, 69, 107, 123, 129, 166, 183, 188, 284, 295, 367, 368, 371, 372, 373, 374, 376, 378, 387, 390], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 198, 201, 202, 203, 213, 214, 219, 223, 225, 226, 238, 239, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 329, 330, 339, 343, 344, 345, 347, 348, 364, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 390], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 27, 33, 160, 168, 251, 252, 253, 268, 286, 293, 302, 364, 371, 383, 385, 389], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 82, 90, 96, 103, 107, 123, 129, 136, 166, 188, 192, 226, 333, 338, 348, 368, 372, 380, 383], "root": [0, 2, 3, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 123, 144, 181, 201, 220, 245, 246, 374, 375, 383, 384, 385, 386, 387, 390], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 42, 52, 61, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 122, 124, 125, 126, 130, 131, 144, 166, 186, 206, 207, 208, 209, 210, 211, 214, 215, 216, 221, 226, 227, 228, 232, 234, 235, 238, 240, 241, 247, 258, 263, 264, 279, 280, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 311, 316, 324, 363, 381, 386, 389], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 61, 64, 65, 67, 99, 100, 101, 102, 106, 109, 112, 113, 117, 118, 120, 121, 124, 125, 126, 130, 131, 141, 186, 376, 380, 383, 384, 389], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 64, 67, 68, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 124, 125, 126, 130, 131, 386, 389], "setup": [0, 7, 99, 100, 111, 112, 113], "py": [0, 3, 24, 106, 108, 136, 238, 247, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390], "develop": [0, 3, 4, 7, 111, 371, 389], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 89, 93, 94, 95, 96, 97, 103, 105, 107, 109, 110, 123, 126, 129, 134, 137, 139, 140, 141, 143, 147, 151, 157, 160, 166, 167, 169, 176, 180, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 201, 203, 204, 205, 214, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 230, 232, 233, 248, 254, 255, 256, 257, 258, 259, 262, 265, 266, 269, 271, 272, 275, 276, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 306, 309, 311, 312, 313, 314, 315, 317, 329, 332, 333, 336, 338, 341, 348, 350, 358, 367, 370, 371, 373, 376, 377, 378, 381, 385, 388, 390], "seri": [0, 2, 7, 8, 40, 73, 83, 93, 94, 97, 98, 129, 161, 183, 331, 366, 367, 371, 372, 373, 379, 380, 383, 384, 387, 390], "quick": [0, 61], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 47, 63, 69, 103, 107, 123, 129, 140, 143, 181, 183, 192, 297, 365, 366, 367, 371, 372, 373, 374, 376, 380, 383, 384, 385, 387, 390], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 80, 82, 85, 86, 87, 88, 93, 95, 101, 102, 103, 104, 106, 107, 108, 109, 111, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 133, 137, 140, 141, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 160, 161, 162, 166, 167, 170, 171, 174, 175, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 201, 202, 204, 205, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 248, 250, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 325, 326, 327, 328, 329, 335, 338, 343, 345, 348, 350, 352, 358, 362, 365, 371, 372, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 387, 389, 390], "hurri": [0, 375], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 53, 55, 56, 63, 86, 87, 88, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 137, 140, 143, 156, 162, 167, 179, 181, 182, 204, 205, 217, 219, 221, 223, 224, 227, 228, 234, 242, 245, 248, 254, 255, 256, 259, 262, 269, 311, 313, 314, 372, 373, 374, 375, 376, 383, 384, 385, 386, 387, 389, 390], "item": [0, 2, 8, 14, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 54, 55, 56, 70, 80, 86, 93, 137, 155, 227, 228, 282, 283, 285, 339, 367, 368, 371, 373, 374, 377, 378, 383, 384, 385, 387], "navig": [0, 384], "previou": [0, 3, 4, 10, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 180, 192, 202, 217, 221, 241, 256, 373, 374, 375, 376, 380, 385, 390], "whenev": [0, 1, 2, 3, 23, 37, 42, 45, 50, 51, 61, 67, 79, 80, 87, 88, 101, 102, 106, 108, 109, 117, 118, 126, 130, 131, 136, 159, 184, 189, 295, 311, 312, 313, 314, 329, 350, 366, 379, 387], "want": [0, 2, 3, 6, 7, 8, 88, 162, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 366, 371, 372, 373, 374, 375, 377, 378, 379, 383, 384, 385, 386, 387, 389, 390], "ted": [0, 30, 38, 48, 49, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 364, 370, 381, 388], "s": [0, 1, 2, 3, 6, 7, 8, 11, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 88, 93, 99, 100, 103, 107, 111, 112, 113, 117, 118, 120, 123, 124, 125, 129, 130, 131, 144, 148, 166, 178, 180, 182, 183, 184, 186, 188, 190, 192, 194, 204, 205, 219, 223, 228, 229, 230, 232, 238, 247, 251, 253, 254, 255, 258, 259, 262, 265, 268, 269, 272, 280, 286, 293, 295, 300, 302, 311, 312, 313, 314, 315, 329, 366, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 93, 99, 100, 103, 107, 116, 119, 122, 123, 129, 136, 143, 148, 151, 153, 160, 166, 167, 179, 180, 183, 184, 186, 188, 190, 191, 192, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 307, 309, 311, 312, 313, 314, 315, 329, 348, 355, 358, 364, 367, 368, 370, 372, 373, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390], "optim": [0, 1, 2, 8, 37, 47, 99, 100, 103, 107, 123, 129, 184, 192, 203, 226, 231, 232, 245, 280, 295, 296, 297, 300, 343, 348, 358, 367, 368, 370, 373, 374, 375, 376, 378, 381, 383, 384, 385, 388], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 126, 129, 141, 144, 162, 166, 188, 194, 262, 263, 264, 280, 282, 285, 287, 298, 300, 302, 303, 331, 339, 345, 348, 350, 351, 352, 358, 368, 370, 371, 374, 375, 376, 377, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390], "storag": [0, 1, 8, 30, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 88, 90, 91, 92, 93, 95, 96, 103, 105, 107, 123, 129, 143, 144, 149, 152, 171, 192, 364, 368, 370, 372, 373, 374, 375, 377, 380, 381, 383, 384, 386, 388], "log": [0, 3, 4, 8, 11, 47, 212, 213, 214, 227, 228, 236, 245, 246, 257, 258, 265, 269, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 338, 341, 342, 344, 348, 358, 366, 367, 368, 370, 371, 372, 373, 375, 376, 380, 381, 383, 384, 385, 388, 389], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 37, 103, 107, 111, 116, 123, 124, 125, 129, 190, 192, 362, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 387, 388, 389], "own": [0, 1, 3, 14, 15, 17, 22, 37, 103, 107, 123, 124, 125, 129, 192, 331, 370, 372, 373, 375, 381, 383, 384, 385, 388], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 37, 41, 43, 46, 47, 54, 61, 64, 70, 103, 107, 117, 118, 123, 124, 125, 129, 149, 157, 166, 179, 184, 186, 188, 192, 194, 207, 209, 219, 223, 254, 255, 259, 260, 263, 264, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 311, 348, 350, 358, 364, 368, 370, 372, 375, 378, 379, 381, 386, 387, 388, 390], "loop": [0, 8, 41, 43, 46, 103, 107, 123, 129, 201, 254, 255, 259, 260, 263, 264, 297, 348, 368, 370, 371, 372, 375, 377, 378, 379, 381, 382, 387, 388], "ppo": [0, 4, 8, 265, 269, 281, 294, 297, 364, 366, 370, 371, 372, 376, 377, 381, 383, 388], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 93, 101, 102, 103, 104, 106, 107, 108, 120, 123, 129, 144, 147, 148, 154, 159, 160, 162, 169, 171, 176, 178, 180, 181, 183, 184, 190, 192, 219, 223, 358, 366, 370, 372, 373, 375, 376, 377, 381, 388, 389, 390], "introduct": [0, 367, 370, 375, 381, 383, 384, 388, 390], "multi": [0, 1, 7, 9, 33, 34, 37, 42, 45, 50, 51, 71, 72, 78, 103, 107, 117, 118, 123, 127, 128, 129, 184, 192, 217, 219, 221, 223, 224, 229, 230, 262, 309, 311, 312, 313, 314, 364, 370, 371, 372, 373, 374, 375, 376, 381, 385, 388, 389], "agent": [0, 9, 33, 34, 116, 117, 118, 124, 125, 127, 128, 130, 131, 132, 178, 179, 227, 228, 229, 230, 232, 238, 247, 309, 364, 370, 375, 381, 385, 388], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 37, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 219, 223, 225, 226, 262, 268, 295, 329, 330, 331, 352, 353, 354, 358, 360, 361, 362, 364, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 138, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 159, 160, 162, 166, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 236, 237, 238, 239, 245, 246, 247, 248, 250, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 324, 329, 331, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 358, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 390], "pretrain": [0, 370, 381, 388], "recurr": [0, 2, 143, 217, 218, 219, 221, 223, 241, 370, 372, 376, 381, 387, 388], "dqn": [0, 2, 61, 137, 153, 214, 257, 258, 279, 280, 282, 283, 285, 287, 288, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 309, 355, 364, 366, 370, 376, 377, 380, 381, 388], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 30, 37, 48, 99, 100, 103, 107, 119, 123, 129, 151, 160, 179, 193, 199, 200, 214, 219, 223, 229, 230, 232, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 272, 279, 280, 281, 282, 286, 287, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 344, 350, 353, 354, 358, 360, 361, 366, 367, 368, 370, 372, 375, 377, 378, 381, 386, 387, 388, 389, 390], "replai": [0, 8, 16, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 93, 94, 98, 143, 144, 151, 167, 171, 180, 192, 282, 283, 285, 286, 287, 293, 298, 300, 302, 303, 345, 348, 356, 358, 364, 368, 370, 381, 385, 386, 388], "buffer": [0, 3, 4, 8, 14, 15, 16, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 103, 107, 119, 123, 129, 143, 144, 148, 151, 166, 167, 171, 180, 183, 184, 186, 188, 192, 268, 271, 282, 283, 285, 286, 287, 293, 298, 300, 302, 303, 345, 348, 356, 358, 364, 368, 370, 379, 381, 385, 386, 388, 390], "competit": [0, 3, 117, 118, 370, 381, 384, 388], "ddpg": [0, 207, 208, 209, 210, 282, 292, 301, 364, 366, 370, 372, 377, 381, 384, 388], "task": [0, 2, 3, 9, 33, 34, 47, 54, 64, 67, 101, 102, 103, 107, 110, 117, 118, 123, 124, 125, 126, 129, 130, 131, 166, 178, 184, 186, 188, 286, 293, 370, 371, 372, 373, 374, 375, 376, 381, 383, 384, 385, 388, 389, 390], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 107, 123, 129, 130, 180, 211, 219, 223, 256, 331, 348, 364, 367, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 387, 388], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 53, 54, 74, 75, 76, 82, 85, 89, 91, 95, 98, 103, 107, 112, 123, 129, 137, 149, 152, 153, 162, 166, 183, 184, 186, 190, 192, 193, 226, 238, 247, 250, 251, 265, 268, 269, 270, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 352, 353, 354, 357, 358, 362, 364, 366, 368, 370, 372, 373, 374, 378, 380, 381, 383, 384, 385, 387, 388, 390], "loss": [0, 3, 8, 43, 153, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 309, 310, 311, 343, 348, 355, 358, 367, 368, 370, 375, 377, 378, 379, 381, 385, 387, 388, 389], "trainer": [0, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 370, 371, 381, 388], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 162, 164, 166, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 193, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 233, 236, 237, 238, 239, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 304, 305, 309, 311, 312, 313, 314, 317, 329, 331, 339, 340, 341, 342, 343, 345, 346, 347, 350, 358, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390], "packag": [0, 6, 7, 10, 136, 364, 365, 390], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 29, 37, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 122, 123, 129, 130, 131, 141, 144, 148, 156, 162, 164, 167, 171, 180, 183, 184, 185, 189, 190, 192, 202, 212, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 236, 238, 244, 248, 262, 263, 264, 268, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 339, 342, 345, 346, 347, 348, 350, 360, 361, 362, 364, 368, 372, 373, 374, 375, 378, 380, 382, 383, 384, 386, 389, 390], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141, 143, 145, 148, 149, 152, 153, 154, 156, 164, 166, 168, 169, 171, 175, 177, 178, 180, 182, 183, 184, 185, 188, 190, 192, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 236, 237, 238, 239, 240, 241, 244, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 276, 279, 280, 282, 283, 285, 286, 287, 293, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 331, 339, 345, 364, 366, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 389, 390], "interoper": [0, 14, 15, 364], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 37, 41, 42, 43, 45, 46, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 106, 107, 117, 118, 123, 129, 130, 131, 137, 144, 145, 166, 171, 184, 188, 192, 204, 205, 217, 218, 219, 221, 222, 223, 224, 230, 267, 271, 281, 283, 285, 287, 288, 294, 297, 298, 302, 303, 311, 312, 313, 314, 320, 321, 322, 323, 325, 326, 327, 328, 329, 362, 364, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 387], "node": [0, 2, 18, 19, 20, 21, 22, 27, 33, 41, 43, 46, 69, 364, 378], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 124, 125, 160, 162, 203, 212, 213, 214, 215, 220, 226, 227, 228, 233, 236, 237, 240, 241, 244, 245, 246, 254, 255, 256, 257, 258, 265, 269, 270, 279, 280, 281, 286, 287, 288, 293, 294, 297, 298, 299, 300, 302, 303, 364, 368, 372, 373, 376, 378, 383, 384, 385, 389, 390], "helper": [0, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 371, 372, 374, 383, 385], "compos": [0, 3, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 83, 84, 93, 94, 103, 107, 123, 129, 144, 170, 183, 184, 190, 192, 261, 262, 290, 300, 331, 364, 371, 372, 373, 374, 378, 382, 384, 385, 387, 389, 390], "episod": [0, 3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 103, 107, 123, 129, 140, 171, 174, 179, 201, 203, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 364, 372, 375, 380, 383, 384, 387], "format": [0, 3, 30, 36, 37, 38, 40, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 85, 93, 103, 107, 123, 124, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 331, 364, 371, 372, 375, 377, 379, 390], "tensorspec": [0, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 55, 56, 57, 58, 59, 103, 107, 119, 123, 129, 130, 131, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 202, 241, 250, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 272, 280, 283, 286, 287, 298, 300, 302, 303, 309, 364, 385], "human": [0, 24, 65, 364, 385], "feedback": [0, 364, 380, 389], "rlhf": [0, 47, 54, 70, 160, 364, 366], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 104, 107, 123, 129, 138, 141, 149, 152, 161, 168, 169, 183, 184, 190, 192, 194, 203, 225, 226, 344, 352, 353, 354, 358, 360, 361, 362, 364, 375, 390], "gymlikeenv": [0, 106, 108, 364], "envmetadata": [0, 364], "vector": [0, 1, 8, 25, 29, 40, 99, 100, 108, 112, 113, 116, 124, 125, 126, 130, 131, 151, 189, 207, 209, 217, 218, 221, 222, 224, 311, 314, 324, 325, 326, 327, 328, 364, 371, 372, 374, 382, 383, 384, 385, 386, 390], "auto": [0, 75, 95, 139, 140, 189, 263, 264, 280, 287, 296, 298, 300, 302, 303, 364, 367, 383, 384], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 129, 139, 140, 141, 144, 153, 156, 159, 161, 166, 174, 178, 179, 180, 181, 183, 184, 186, 189, 190, 192, 194, 202, 217, 219, 223, 249, 262, 263, 264, 330, 364, 371, 372, 373, 374, 375, 378, 382, 383, 384, 389], "dynam": [0, 7, 14, 15, 16, 64, 67, 69, 103, 123, 129, 192, 286, 293, 364, 373, 375, 385], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 57, 58, 59, 63, 99, 100, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 126, 129, 130, 131, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 164, 166, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 198, 201, 202, 214, 239, 241, 250, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 364, 366, 371, 372, 373, 374, 375, 376, 380, 382, 383, 384, 389], "mask": [0, 1, 4, 23, 25, 29, 35, 36, 40, 124, 125, 138, 167, 192, 214, 227, 228, 239, 256, 257, 258, 259, 260, 266, 267, 345, 364, 372, 374, 390], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 29, 30, 40, 47, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 141, 147, 149, 151, 152, 153, 154, 157, 160, 161, 164, 168, 169, 171, 175, 178, 184, 189, 193, 198, 201, 203, 206, 207, 208, 209, 210, 211, 213, 214, 215, 219, 223, 224, 225, 226, 227, 228, 229, 237, 238, 239, 241, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 272, 273, 279, 280, 282, 283, 285, 286, 287, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 358, 362, 364, 366, 367, 368, 371, 372, 373, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 389, 390], "record": [0, 2, 11, 37, 103, 107, 123, 129, 134, 137, 160, 192, 297, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 358, 364, 372, 373, 376, 380, 383], "domain": [0, 2, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 129, 151, 180, 198, 250, 257, 258, 265, 266, 267, 268, 269, 270, 271, 276, 364, 373, 374, 376, 377, 383, 384, 385, 389, 390], "actor": [0, 3, 4, 21, 160, 193, 203, 206, 207, 209, 214, 215, 226, 237, 239, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 309, 364, 367, 372, 374, 375, 377, 380, 383, 386, 389], "explor": [0, 1, 191, 232, 250, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 279, 295, 344, 353, 354, 358, 364, 373, 374, 375, 377, 378, 380, 383, 384, 385], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 103, 107, 116, 123, 129, 136, 137, 140, 142, 144, 145, 147, 149, 151, 152, 153, 161, 162, 166, 167, 170, 171, 172, 174, 176, 180, 181, 183, 184, 188, 190, 192, 198, 202, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 339, 341, 342, 343, 344, 345, 348, 358, 364, 368, 372, 377, 378, 379, 382, 383, 384, 385, 387, 389, 390], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 84, 86, 103, 104, 107, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 141, 148, 149, 150, 154, 160, 162, 168, 169, 174, 175, 178, 180, 183, 189, 192, 202, 212, 219, 223, 227, 228, 236, 250, 265, 269, 273, 274, 298, 305, 311, 316, 324, 334, 348, 364, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390], "hook": [0, 2, 30, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 96, 103, 107, 123, 129, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 239, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 364], "planner": [0, 203, 226, 364], "sac": [0, 287, 298, 300, 364], "redq": [0, 298, 364], "crossq": [0, 364], "iql": [0, 286, 293, 364, 371, 383, 384], "cql": [0, 280, 285, 364], "dt": [0, 263, 264, 364, 385], "td3": [0, 302, 303, 364], "bc": [0, 5, 302, 364, 389], "a2c": [0, 279, 364], "dreamer": [0, 134, 135, 215, 289, 290, 291, 364, 366], "checkpoint": [0, 45, 72, 77, 89, 90, 92, 96, 364, 386, 387], "builder": [0, 364, 372, 390], "logger": [0, 3, 11, 329, 331, 333, 334, 335, 336, 337, 338, 342, 348, 358, 362, 364, 372, 383], "_util": [0, 3, 12, 364, 380], "implement_for": [0, 3, 364], "thing": [0, 3, 7, 8, 103, 107, 123, 129, 365, 373, 374, 375, 376, 377, 378, 379, 383, 384, 387, 390], "consid": [0, 1, 2, 3, 8, 20, 27, 33, 37, 42, 45, 50, 51, 74, 75, 95, 103, 107, 123, 129, 151, 190, 192, 212, 229, 244, 311, 313, 314, 365, 371, 375, 376, 377, 385, 387], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 91, 95, 103, 104, 106, 107, 108, 116, 117, 118, 120, 122, 123, 124, 125, 129, 130, 131, 138, 140, 143, 144, 148, 149, 151, 152, 160, 161, 162, 166, 167, 174, 180, 183, 184, 186, 188, 189, 190, 192, 199, 200, 201, 203, 214, 217, 218, 221, 222, 224, 225, 226, 227, 228, 231, 239, 245, 262, 265, 268, 269, 271, 275, 281, 283, 288, 294, 295, 297, 300, 304, 309, 310, 311, 312, 313, 314, 329, 330, 331, 333, 345, 362, 365, 366, 368, 371, 372, 373, 374, 376, 378, 379, 383, 384, 385, 386, 387, 390], "debug": [0, 6, 8, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 365, 390], "work": [0, 1, 2, 3, 4, 8, 11, 12, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 85, 87, 88, 91, 98, 103, 106, 107, 108, 111, 123, 126, 129, 145, 160, 166, 186, 189, 190, 192, 201, 204, 205, 224, 258, 267, 272, 281, 294, 297, 348, 365, 366, 371, 372, 373, 374, 375, 378, 382, 383, 384, 385, 386, 387, 389, 390], "habitat": [0, 3, 109, 365, 386], "lab": [0, 3, 101, 102, 109, 365], "mujoco": [0, 6, 8, 126, 365, 371, 373, 374], "error": [0, 1, 3, 7, 10, 12, 25, 29, 34, 35, 36, 37, 40, 41, 43, 46, 103, 107, 123, 129, 132, 167, 192, 194, 365, 371, 373, 383, 384, 390], "solut": [0, 2, 3, 6, 7, 9, 21, 365, 366, 368, 389], "resourc": [0, 1, 21, 109, 365, 371, 373, 383, 384], "issu": [0, 3, 4, 5, 8, 61, 65, 72, 74, 75, 95, 106, 111, 144, 167, 181, 201, 250, 257, 258, 265, 266, 267, 268, 269, 365, 389], "customis": [0, 365, 372, 379, 383, 384], "video": [0, 4, 9, 331, 333, 344, 362, 364, 365, 380, 383, 384], "render": [0, 3, 8, 113, 130, 329, 331, 344, 365, 371, 372, 373, 375, 379], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 82, 83, 85, 91, 93, 94, 95, 97, 98, 103, 107, 117, 118, 123, 129, 130, 131, 139, 144, 148, 151, 184, 201, 227, 228, 364, 375, 382, 383, 384, 387, 389], "search": [0, 122, 202, 372], "page": [0, 7, 24, 338, 377], "somewhat": [1, 2, 367, 376, 390], "equival": [1, 3, 25, 27, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 141, 150, 153, 184, 192, 214, 221, 224, 239, 257, 258, 266, 267, 297, 345, 378, 389, 390], "dataload": [1, 70, 86, 88, 372, 378, 387], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 129, 144, 155, 171, 179, 180, 181, 184, 192, 217, 219, 221, 223, 236, 254, 255, 259, 260, 263, 264, 300, 331, 366, 372, 375, 383, 387, 389, 390], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 164, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 193, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 282, 283, 285, 286, 287, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 325, 326, 328, 329, 331, 339, 344, 345, 346, 358, 362, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390], "thei": [1, 2, 3, 4, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 103, 106, 107, 108, 116, 117, 118, 123, 124, 125, 129, 130, 131, 140, 143, 155, 160, 166, 175, 183, 184, 188, 192, 223, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 345, 348, 366, 367, 368, 371, 372, 373, 374, 377, 382, 383, 384, 385, 386, 387, 389, 390], "over": [1, 2, 3, 4, 8, 14, 15, 37, 45, 51, 52, 54, 60, 61, 67, 80, 86, 87, 103, 107, 117, 118, 123, 129, 137, 151, 162, 174, 181, 192, 201, 245, 248, 271, 288, 290, 295, 317, 329, 351, 368, 371, 372, 373, 375, 376, 377, 378, 383, 384, 385, 390], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 39, 41, 42, 43, 46, 50, 51, 67, 76, 103, 107, 123, 124, 125, 129, 141, 142, 148, 156, 166, 180, 183, 184, 185, 186, 188, 192, 201, 217, 219, 221, 223, 229, 268, 269, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 366, 371, 374, 383, 384, 385, 387, 390], "static": [1, 12, 47, 54, 80, 87, 88, 109, 190, 293, 375, 385, 387], "like": [1, 2, 3, 4, 7, 11, 21, 27, 33, 37, 42, 45, 50, 51, 54, 76, 82, 88, 103, 107, 109, 116, 123, 124, 125, 129, 153, 180, 182, 192, 194, 217, 221, 230, 261, 279, 281, 294, 297, 298, 299, 367, 371, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 390], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 70, 93, 96, 103, 106, 107, 108, 109, 123, 126, 129, 143, 149, 151, 152, 161, 169, 180, 184, 192, 199, 200, 219, 223, 259, 263, 264, 281, 294, 297, 300, 331, 345, 350, 360, 361, 362, 366, 371, 372, 373, 374, 378, 383, 384, 385, 387], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 64, 65, 68, 69, 70, 103, 107, 119, 123, 129, 139, 144, 148, 156, 166, 174, 180, 183, 184, 185, 186, 188, 192, 224, 248, 268, 269, 270, 300, 331, 368, 373, 375, 379, 387, 390], "two": [1, 2, 3, 4, 8, 10, 35, 36, 37, 42, 45, 47, 50, 51, 67, 82, 86, 88, 103, 107, 123, 129, 141, 162, 166, 188, 192, 210, 217, 219, 221, 223, 242, 245, 269, 294, 302, 306, 344, 348, 367, 371, 372, 373, 374, 375, 376, 378, 379, 382, 383, 384, 385, 387, 389, 390], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 69, 104, 269, 348, 366, 367, 371, 372, 382, 390], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 86, 87, 88, 91, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 126, 129, 130, 131, 140, 141, 145, 147, 148, 166, 174, 175, 178, 180, 182, 183, 184, 186, 188, 192, 201, 204, 205, 217, 219, 221, 223, 224, 227, 228, 229, 230, 231, 248, 250, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 305, 309, 311, 312, 313, 314, 315, 319, 329, 330, 331, 338, 341, 351, 358, 359, 362, 371, 372, 373, 374, 375, 376, 378, 383, 384, 385, 387, 390], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 85, 86, 87, 88, 89, 91, 101, 102, 103, 106, 107, 108, 109, 117, 118, 119, 122, 123, 124, 125, 126, 129, 130, 131, 132, 142, 143, 147, 149, 152, 160, 162, 164, 166, 174, 176, 182, 184, 186, 188, 190, 192, 201, 204, 205, 207, 213, 216, 219, 223, 224, 227, 228, 234, 239, 258, 262, 266, 267, 269, 271, 272, 273, 295, 300, 308, 311, 314, 329, 330, 344, 345, 360, 361, 366, 371, 373, 375, 376, 377, 378, 382, 383, 385, 386, 387, 389, 390], "constructor": [1, 2, 16, 18, 19, 20, 21, 45, 54, 67, 79, 93, 103, 107, 120, 123, 129, 130, 140, 183, 204, 205, 224, 265, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 359, 362, 366, 371, 372, 373, 375, 378, 383, 384, 387], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 82, 86, 99, 100, 103, 107, 112, 113, 123, 129, 154, 162, 175, 192, 204, 205, 224, 229, 230, 243, 250, 257, 265, 266, 268, 270, 271, 273, 295, 308, 344, 347, 348, 367, 368, 371, 373, 374, 378, 380, 383, 384, 385], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 104, 107, 108, 109, 111, 112, 113, 119, 120, 123, 126, 129, 138, 184, 192, 217, 219, 221, 223, 259, 262, 270, 271, 302, 352, 362, 366, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 387, 388, 390], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 47, 61, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 129, 138, 143, 156, 159, 162, 178, 179, 180, 181, 184, 189, 192, 201, 202, 203, 215, 217, 219, 221, 223, 225, 226, 254, 255, 259, 260, 262, 263, 264, 265, 269, 279, 289, 297, 310, 311, 312, 313, 314, 317, 318, 319, 330, 333, 339, 344, 348, 368, 372, 374, 376, 377, 379, 380, 382, 385, 386, 389], "queri": [1, 3, 14, 37, 41, 43, 46, 103, 107, 123, 129, 166, 183, 186, 190, 192, 271, 371, 377, 385, 389], "defin": [1, 2, 12, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 103, 107, 123, 129, 167, 179, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 276, 283, 285, 295, 311, 312, 313, 314, 315, 330, 359, 371, 372, 374, 377, 380, 385, 387, 390], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 29, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 87, 88, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 120, 121, 122, 123, 124, 125, 129, 130, 131, 137, 143, 144, 151, 157, 161, 162, 173, 178, 181, 184, 190, 192, 203, 204, 205, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 233, 234, 235, 238, 240, 241, 244, 245, 246, 247, 250, 254, 255, 256, 259, 260, 262, 263, 264, 265, 268, 269, 273, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 296, 297, 298, 299, 300, 302, 303, 339, 341, 344, 348, 350, 351, 352, 360, 361, 362, 366, 371, 372, 373, 374, 375, 376, 378, 380, 383, 384, 385, 386, 387, 390], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 37, 54, 66, 86, 93, 103, 107, 123, 129, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 194, 217, 219, 223, 224, 231, 232, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 312, 313, 314, 345, 371, 373, 374, 378, 379, 383, 384, 385, 387, 390], "deliv": [1, 2, 3, 16, 67, 371, 372, 375, 378, 389], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 33, 34, 41, 42, 43, 45, 46, 50, 51, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 103, 106, 107, 108, 116, 123, 124, 125, 129, 190, 217, 219, 221, 222, 223, 262, 270, 271, 330, 339, 366, 372, 375, 382, 383, 385, 389], "user": [1, 2, 3, 5, 8, 23, 37, 61, 63, 67, 69, 80, 88, 103, 107, 123, 129, 145, 179, 184, 192, 194, 211, 297, 300, 302, 331, 359, 367, 368, 371, 372, 375, 377, 378, 385, 389, 390], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 47, 86, 103, 107, 117, 118, 123, 129, 130, 131, 178, 254, 255, 259, 260, 263, 264, 371, 373, 380, 383, 384, 389, 390], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 82, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 149, 150, 152, 153, 154, 161, 162, 164, 168, 169, 171, 173, 175, 178, 180, 181, 183, 184, 190, 192, 201, 202, 203, 217, 219, 223, 226, 262, 279, 280, 281, 282, 283, 285, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 367, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "state": [1, 2, 3, 4, 14, 15, 16, 17, 30, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 123, 124, 125, 126, 127, 128, 129, 140, 143, 144, 145, 147, 153, 162, 169, 178, 179, 183, 184, 190, 192, 194, 201, 202, 203, 206, 211, 215, 217, 218, 219, 221, 222, 223, 224, 226, 234, 237, 238, 240, 241, 247, 251, 262, 268, 274, 279, 281, 285, 294, 295, 297, 298, 299, 300, 309, 310, 311, 312, 313, 314, 315, 362, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 385, 390], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 30, 37, 41, 43, 46, 47, 61, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 126, 129, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 201, 217, 219, 223, 231, 254, 255, 257, 259, 266, 290, 300, 302, 372, 373, 374, 375, 376, 378, 380, 383, 384, 385, 386, 387, 390], "predefin": [1, 372, 374, 378, 387], "becaus": [1, 3, 4, 7, 41, 43, 46, 47, 61, 103, 107, 123, 129, 153, 160, 178, 183, 189, 192, 210, 230, 250, 257, 258, 262, 265, 266, 267, 268, 269, 371, 372, 374, 376, 377, 378, 382, 383, 384, 385, 387, 390], "potenti": [1, 2, 385, 387], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 37, 47, 99, 100, 103, 107, 112, 113, 123, 129, 162, 176, 184, 187, 192, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 240, 241, 243, 245, 246, 248, 251, 254, 255, 256, 258, 259, 262, 263, 264, 265, 267, 269, 272, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 352, 367, 371, 373, 374, 375, 376, 382, 383, 384, 386, 387], "heavi": [1, 8, 61, 387], "crucial": [1, 2, 3, 254, 255, 259, 260, 263, 264, 286, 293, 295, 371, 372, 373, 374, 375, 377, 379, 383, 384, 385, 390], "configur": [1, 8, 21, 22, 47, 160, 206, 211, 237, 295, 297, 366, 371, 372, 373, 377, 383, 384, 385], "hyperparamet": [1, 85, 192, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 371, 379, 385, 387], "appropri": [1, 3, 4, 7, 11, 73, 83, 93, 94, 97, 98, 123, 129, 153, 359, 362, 371, 379, 387], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 85, 86, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 366, 367, 371, 374, 376, 380, 383, 384, 385, 386, 389], "take": [1, 2, 3, 8, 23, 47, 64, 90, 96, 99, 100, 103, 107, 112, 113, 123, 129, 147, 178, 181, 183, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 272, 275, 278, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 339, 350, 366, 368, 371, 372, 373, 375, 376, 377, 383, 384, 385, 387, 390], "consider": [1, 2, 3, 8, 106, 108, 372, 383, 384, 387], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 113, 117, 118, 119, 123, 124, 125, 129, 130, 131, 140, 149, 152, 179, 184, 190, 192, 202, 204, 205, 219, 223, 224, 273, 279, 280, 281, 282, 283, 285, 287, 288, 294, 295, 297, 298, 299, 300, 302, 303, 309, 311, 314, 371, 372, 373, 375, 383, 384, 385, 390], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 80, 82, 87, 88, 89, 93, 96, 101, 102, 103, 106, 107, 108, 109, 113, 116, 119, 123, 124, 125, 129, 130, 131, 137, 140, 141, 144, 147, 148, 149, 150, 153, 154, 156, 160, 162, 167, 168, 169, 171, 174, 175, 178, 179, 181, 183, 184, 189, 190, 192, 194, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 230, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 265, 267, 268, 269, 272, 275, 279, 281, 287, 292, 294, 295, 297, 298, 299, 301, 302, 310, 311, 312, 313, 314, 315, 331, 333, 343, 344, 345, 348, 358, 360, 361, 362, 366, 368, 371, 372, 373, 374, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "occur": [1, 8, 15, 33, 34, 61, 103, 107, 109, 123, 129, 145, 154, 162, 167, 189, 202, 250, 257, 258, 265, 266, 267, 268, 269, 290, 387, 390], "serial": [1, 2, 3, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 190, 192], "parallel": [1, 3, 8, 103, 106, 107, 108, 123, 124, 125, 129, 184, 189, 194, 279, 359, 360, 361, 362, 372, 373, 383, 384], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 30, 37, 48, 141, 144, 171, 358, 361, 364, 371, 372, 373, 374, 378, 380, 383, 384, 387], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 116, 119, 122, 123, 124, 125, 126, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 360, 361, 362, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 387, 390], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 43, 46, 54, 64, 69, 70, 104, 120, 123, 129, 190, 360, 361, 362, 371, 372, 373, 389, 390], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 361, 364, 373, 378, 389], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 32, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 87, 88, 116, 124, 125, 217, 221, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 366, 368, 373, 376, 387, 389], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 80, 87, 88, 99, 100, 101, 102, 106, 108, 109, 111, 112, 113, 120, 121, 123, 126, 190, 192, 229, 263, 264, 350, 364, 366, 371, 375, 379, 383, 384, 385], "aggreg": [1, 3, 61, 80, 93, 124, 125, 202, 204, 205, 207, 208, 271], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 104, 107, 123, 129, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 201, 202, 217, 219, 221, 223, 224, 229, 239, 245, 254, 256, 258, 259, 267, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 350, 366, 372, 374, 375, 376, 379, 380, 385, 386, 389, 390], "final": [1, 2, 3, 4, 21, 41, 43, 46, 47, 180, 189, 217, 219, 221, 223, 229, 254, 255, 259, 260, 261, 263, 264, 270, 311, 344, 366, 371, 372, 373, 379, 380, 383, 384, 385, 390], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 360, 364, 371, 372, 373, 378, 389], "sever": [1, 2, 3, 8, 35, 37, 54, 64, 103, 107, 123, 129, 145, 147, 184, 192, 297, 371, 373, 379, 380, 387, 390], "gather": [1, 3, 18, 20, 21, 54, 70, 74, 75, 80, 87, 95, 167, 228, 236, 310, 352, 365, 372, 373, 374, 378, 383, 384, 385, 387, 390], "continu": [1, 2, 9, 26, 55, 88, 103, 107, 123, 124, 125, 129, 130, 131, 137, 198, 207, 208, 209, 210, 263, 264, 271, 276, 279, 280, 287, 293, 297, 298, 299, 300, 301, 302, 303, 311, 316, 324, 366, 371, 373, 374, 376, 383, 384, 385, 387, 389, 390], "concomitantli": [1, 103, 107, 123, 129], "network": [1, 4, 8, 37, 103, 107, 116, 123, 124, 125, 129, 192, 204, 205, 207, 208, 209, 210, 213, 215, 216, 221, 224, 229, 230, 232, 234, 235, 238, 240, 241, 242, 247, 251, 252, 253, 256, 268, 272, 280, 281, 282, 283, 285, 286, 287, 288, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 307, 309, 311, 312, 313, 314, 315, 357, 358, 366, 367, 368, 377, 380, 382, 385, 390], "impli": [1, 390], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 47, 80, 82, 85, 99, 100, 103, 107, 123, 127, 128, 129, 148, 166, 180, 183, 184, 186, 188, 192, 217, 218, 219, 221, 222, 223, 229, 232, 268, 279, 280, 281, 287, 290, 300, 302, 350, 357, 366, 368, 371, 372, 373, 374, 382, 385, 387, 389], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 34, 37, 41, 43, 46, 63, 69, 72, 80, 103, 106, 107, 108, 109, 123, 126, 129, 160, 162, 175, 184, 185, 190, 192, 194, 224, 229, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 385, 386, 387, 389, 390], "slightli": [1, 23, 61, 366, 367, 374, 383, 385, 386, 387, 390], "lag": [1, 371, 372, 373], "therefor": [1, 2, 3, 7, 42, 45, 50, 51, 68, 69, 103, 107, 123, 129, 171, 297, 309, 377, 383, 390], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 80, 82, 87, 88, 93, 95, 96, 103, 107, 116, 119, 122, 123, 124, 125, 129, 137, 138, 141, 144, 153, 160, 166, 171, 174, 178, 179, 181, 183, 185, 188, 189, 201, 202, 217, 218, 221, 222, 227, 228, 229, 254, 255, 259, 260, 263, 264, 265, 268, 269, 278, 279, 280, 281, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 367, 368, 371, 372, 373, 375, 382, 383, 384, 385, 387, 390], "asynchron": [1, 9, 15, 21, 37, 41, 43, 46, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 279, 360, 371, 372, 373], "off": [1, 2, 4, 220, 246, 257, 300, 329, 344, 353, 366, 368, 371, 372, 373, 376, 377, 383, 384, 386, 390], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 95, 103, 106, 107, 108, 123, 124, 125, 129, 130, 149, 152, 156, 162, 179, 184, 189, 192, 194, 214, 217, 219, 221, 223, 230, 231, 251, 253, 256, 258, 266, 279, 286, 288, 293, 297, 344, 366, 368, 371, 372, 373, 374, 375, 376, 378, 379, 383, 384, 385, 386, 387, 390], "remot": [1, 2, 18, 19, 20, 21, 123, 129, 390], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 47, 93, 99, 100, 103, 107, 109, 110, 112, 113, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 147, 149, 152, 153, 154, 160, 164, 168, 169, 174, 175, 176, 178, 179, 181, 190, 192, 194, 203, 219, 223, 226, 262, 263, 264, 279, 329, 331, 352, 366, 371, 373, 374, 376, 377, 378, 379, 380, 386, 387, 389], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 117, 118, 123, 129, 130, 131, 175, 298, 311, 312, 313, 314, 315, 367, 371, 373, 376, 377, 378], "synchronis": [1, 104, 383, 384], "either": [1, 2, 5, 22, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 103, 107, 123, 129, 178, 179, 192, 274, 295, 302, 303, 335, 368, 371, 372, 374, 383, 386, 387, 389, 390], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 371, 384, 389], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 143, 144, 145, 148, 151, 154, 156, 159, 160, 161, 162, 166, 167, 169, 170, 173, 174, 175, 178, 180, 182, 183, 184, 185, 186, 188, 190, 192, 194, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 245, 246, 250, 251, 252, 253, 255, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 311, 312, 313, 314, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 338, 341, 342, 344, 345, 348, 362, 366, 367, 368, 371, 372, 373, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "second": [1, 3, 8, 23, 35, 36, 61, 64, 93, 141, 217, 219, 221, 223, 258, 281, 294, 297, 300, 333, 347, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141, 148, 149, 150, 152, 153, 154, 160, 164, 165, 166, 168, 169, 171, 175, 178, 180, 182, 183, 184, 186, 188, 190, 192, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 231, 232, 237, 238, 239, 247, 250, 251, 252, 253, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 271, 273, 276, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 329, 345, 350, 356, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 53, 54, 55, 56, 80, 87, 103, 107, 123, 129, 141, 156, 160, 183, 192, 213, 214, 218, 222, 233, 251, 252, 253, 257, 258, 261, 268, 274, 279, 281, 282, 283, 288, 294, 297, 299, 309, 310, 311, 312, 313, 314, 348, 364, 368, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 390], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 78, 80, 82, 87, 88, 95, 102, 103, 104, 106, 107, 108, 119, 123, 129, 144, 162, 180, 183, 184, 190, 192, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 283, 286, 287, 295, 309, 311, 312, 313, 314, 329, 331, 335, 344, 352, 353, 354, 358, 360, 361, 366, 367, 368, 371, 373, 374, 375, 376, 385, 387, 390], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 27, 30, 33, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141, 148, 149, 150, 152, 153, 154, 164, 166, 168, 169, 171, 175, 178, 180, 183, 184, 186, 188, 192, 198, 201, 203, 213, 217, 218, 219, 221, 222, 223, 226, 231, 232, 238, 239, 247, 250, 251, 252, 253, 256, 257, 258, 262, 263, 265, 266, 267, 268, 271, 273, 276, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 329, 345, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 61, 63, 67, 80, 87, 88, 91, 93, 103, 107, 111, 123, 126, 129, 169, 210, 219, 221, 223, 224, 233, 248, 250, 254, 255, 257, 268, 273, 295, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 365, 367, 371, 372, 373, 375, 377, 378, 383, 384, 385, 387, 389, 390], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 29, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 78, 79, 80, 82, 83, 87, 88, 89, 91, 93, 94, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 137, 138, 141, 144, 147, 149, 150, 151, 152, 161, 162, 166, 171, 174, 177, 179, 180, 181, 183, 184, 185, 188, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 248, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 309, 311, 312, 313, 314, 318, 319, 333, 341, 343, 344, 348, 352, 362, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 390], "cuda": [1, 2, 3, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 109, 110, 111, 123, 129, 148, 160, 165, 166, 180, 183, 184, 186, 188, 192, 217, 218, 221, 222, 268, 340, 371, 372, 373, 374, 383, 384, 386, 390], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 29, 52, 82, 99, 100, 112, 113, 123, 129, 145, 147, 151, 161, 171, 174, 178, 183, 190, 217, 221, 223, 229, 231, 232, 250, 257, 265, 266, 268, 269, 272, 281, 287, 294, 297, 298, 302, 303, 317, 362, 366, 368, 371, 372, 373, 375, 377, 378, 383, 384, 385, 387, 389], "infer": [1, 123, 129, 144, 190, 219, 223, 231, 256, 265, 285, 329, 371, 373, 378, 380, 387], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 37, 61, 64, 80, 87, 88, 99, 100, 101, 102, 103, 106, 107, 112, 113, 119, 120, 121, 123, 129, 161, 162, 184, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 270, 271, 272, 275, 300, 331, 338, 344, 360, 361, 362, 365, 368, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389], "dispatch": [1, 18, 19, 20, 21, 248, 262, 331, 371], "avail": [1, 2, 3, 4, 6, 21, 42, 45, 50, 51, 61, 64, 69, 80, 86, 87, 88, 101, 102, 111, 117, 118, 123, 124, 125, 126, 130, 131, 137, 140, 143, 160, 214, 239, 265, 269, 295, 331, 360, 361, 366, 371, 372, 373, 374, 375, 376, 383, 384, 385, 387, 390], "speed": [1, 2, 4, 8, 29, 103, 107, 123, 129, 367, 371, 372, 373, 374, 383, 384, 385, 387], "avoid": [1, 2, 3, 37, 74, 75, 95, 103, 107, 123, 129, 136, 184, 190, 192, 250, 268, 273, 281, 294, 297, 300, 351, 373, 384], "oom": [1, 3, 41, 43, 46, 74, 75, 95], "choic": [1, 2, 63, 69, 123, 233, 366, 367, 371, 372, 377, 383, 384], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 33, 37, 42, 45, 47, 50, 51, 54, 61, 64, 65, 67, 68, 69, 72, 74, 75, 80, 82, 87, 88, 93, 95, 103, 104, 105, 107, 116, 120, 123, 124, 125, 129, 130, 140, 141, 149, 152, 169, 183, 185, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 233, 234, 235, 237, 238, 240, 241, 243, 247, 248, 250, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 281, 294, 295, 297, 311, 312, 313, 314, 315, 329, 345, 360, 361, 362, 366, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 387, 390], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 50, 53, 54, 55, 56, 67, 79, 88, 103, 107, 111, 122, 123, 129, 137, 144, 156, 185, 190, 202, 219, 223, 256, 279, 281, 282, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314, 366, 367, 372, 384], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 87, 93, 95, 103, 107, 123, 129, 189, 190, 192, 203, 226, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 338, 364, 368, 371, 373, 374, 376, 378, 380, 383, 384, 386, 390], "while": [1, 2, 3, 7, 8, 23, 37, 103, 107, 123, 129, 171, 184, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 286, 293, 294, 297, 300, 366, 371, 373, 374, 376, 378, 379, 383, 384, 385, 386, 387, 389], "wait": [1, 20, 21, 22, 374, 385], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 29, 35, 36, 37, 40, 41, 43, 45, 46, 50, 61, 64, 65, 67, 68, 69, 70, 74, 75, 80, 82, 87, 88, 93, 95, 103, 107, 117, 118, 123, 124, 125, 129, 130, 131, 136, 140, 141, 143, 144, 151, 162, 169, 171, 174, 175, 178, 180, 184, 192, 201, 204, 205, 217, 221, 241, 262, 265, 270, 271, 272, 279, 280, 282, 283, 285, 286, 287, 293, 297, 300, 302, 311, 318, 319, 329, 331, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 387, 390], "impact": [1, 2, 3, 67, 113, 149, 152, 279, 281, 294, 297, 299, 372, 374, 383, 384], "memori": [1, 3, 8, 21, 29, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 72, 74, 78, 103, 104, 107, 111, 123, 129, 144, 148, 166, 180, 183, 184, 186, 188, 190, 192, 221, 222, 268, 362, 364, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "manag": [1, 8, 307, 308, 311, 312, 313, 314, 344, 377], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 71, 79, 80, 82, 85, 87, 88, 93, 103, 107, 112, 113, 123, 124, 125, 129, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 165, 166, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 201, 202, 203, 213, 214, 219, 223, 225, 226, 239, 250, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 329, 331, 342, 343, 344, 346, 347, 348, 352, 367, 368, 371, 373, 374, 375, 377, 382, 383, 384, 385, 387, 389, 390], "control": [1, 3, 5, 8, 16, 23, 24, 28, 80, 87, 101, 102, 103, 107, 116, 123, 124, 125, 129, 151, 201, 207, 208, 209, 210, 219, 223, 225, 226, 241, 248, 263, 264, 268, 269, 270, 279, 281, 294, 297, 301, 311, 316, 324, 329, 366, 368, 371, 372, 373, 375, 376, 377, 383, 384, 385, 387], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 85, 86, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 117, 118, 120, 121, 123, 126, 129, 130, 131, 144, 145, 149, 152, 157, 160, 161, 162, 166, 167, 178, 180, 181, 183, 184, 186, 190, 192, 194, 213, 217, 218, 220, 221, 222, 223, 227, 228, 229, 246, 251, 252, 253, 256, 262, 265, 268, 269, 271, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 306, 309, 311, 312, 313, 314, 329, 331, 339, 343, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 387, 390], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 372, 384], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 29, 35, 36, 40, 42, 43, 45, 47, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 80, 82, 85, 87, 103, 107, 123, 124, 125, 129, 140, 141, 144, 147, 149, 152, 154, 157, 164, 176, 184, 190, 192, 219, 223, 230, 311, 313, 314, 344, 348, 367, 371, 372, 373, 374, 376, 377, 378, 380, 383, 384, 385, 387, 390], "heurist": [1, 4, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 262, 264, 371, 378, 390], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 63, 85, 93, 99, 100, 103, 107, 112, 113, 123, 129, 232, 297, 302, 311, 312, 313, 314, 315, 330, 365, 366, 368, 371, 372, 373, 374, 376, 378, 379, 384, 387, 390], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 52, 54, 63, 67, 86, 87, 91, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 129, 137, 144, 149, 151, 152, 157, 161, 162, 183, 184, 190, 192, 204, 205, 218, 219, 222, 223, 224, 227, 228, 229, 230, 245, 256, 263, 264, 272, 300, 302, 371, 372, 373, 375, 376, 378, 382, 383, 384, 386, 387, 390], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 79, 80, 82, 85, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 154, 156, 160, 161, 162, 164, 166, 167, 171, 173, 174, 175, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 243, 244, 245, 246, 250, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 358, 362, 368, 371, 372, 373, 374, 376, 383, 386, 387, 389, 390], "behaviour": [1, 3, 14, 15, 21, 67, 107, 145, 149, 152, 162, 167, 179, 201, 219, 220, 223, 246, 329, 344, 366, 372, 383, 387], "besid": 1, "those": [1, 2, 3, 5, 7, 27, 33, 103, 107, 123, 129, 144, 149, 152, 162, 180, 181, 223, 265, 269, 270, 271, 350, 360, 361, 366, 371, 372, 375, 376, 384, 385, 390], "choos": [1, 11, 116, 219, 223, 297, 364, 366, 367, 371, 372, 373, 383, 384, 387], "follow": [1, 2, 3, 6, 7, 8, 11, 37, 41, 43, 44, 46, 47, 61, 63, 64, 65, 66, 67, 68, 69, 80, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 140, 160, 166, 186, 190, 192, 204, 205, 217, 219, 221, 223, 224, 258, 265, 266, 267, 278, 279, 280, 281, 282, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 331, 348, 366, 367, 368, 371, 372, 373, 374, 377, 378, 382, 383, 384, 385, 387, 389, 390], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 351, 371, 373, 389], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 61, 144, 157, 192, 254, 255, 259, 262, 263, 264, 330, 331, 333, 341, 344, 348, 351, 352, 371, 372, 373, 374, 376, 383, 384, 387, 389, 390], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 89, 91, 95, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 122, 123, 126, 129, 140, 141, 144, 147, 148, 151, 154, 156, 159, 160, 162, 164, 165, 166, 174, 176, 180, 183, 184, 186, 188, 189, 190, 192, 194, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 230, 231, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 260, 262, 263, 264, 267, 268, 269, 271, 272, 275, 281, 294, 297, 300, 302, 310, 311, 312, 313, 314, 329, 330, 333, 344, 368, 372, 373, 374, 375, 376, 378, 379, 383, 384, 385, 387, 389, 390], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 141, 144, 171, 351, 371, 372, 373, 374, 378, 380, 383, 384, 387, 389], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 32, 35, 36, 37, 38, 45, 47, 49, 50, 61, 63, 64, 67, 80, 82, 85, 87, 88, 90, 93, 103, 104, 107, 117, 118, 123, 124, 125, 129, 130, 131, 137, 166, 171, 174, 178, 179, 180, 181, 188, 190, 192, 214, 217, 218, 219, 221, 223, 229, 230, 234, 238, 239, 247, 254, 255, 257, 258, 259, 267, 271, 317, 320, 321, 322, 323, 325, 326, 327, 328, 331, 344, 345, 360, 361, 366, 371, 372, 373, 374, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 351, 371, 372, 380], "random": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 47, 53, 55, 56, 67, 69, 81, 93, 103, 107, 119, 123, 129, 137, 151, 161, 162, 180, 193, 194, 217, 219, 221, 223, 259, 265, 268, 269, 276, 280, 298, 344, 352, 366, 371, 372, 373, 374, 375, 376, 378, 385, 386, 387, 389, 390], "rand_step": [1, 2, 3, 30, 48, 101, 102, 103, 104, 106, 107, 108, 114, 115, 119, 120, 121, 123, 129, 159, 180, 190, 385, 389, 390], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 371], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 63, 65, 67, 68, 69, 371, 372, 373], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 32, 37, 38, 49, 50, 61, 63, 64, 65, 67, 68, 69, 79, 80, 87, 88, 93, 99, 100, 103, 107, 112, 113, 123, 129, 167, 178, 183, 192, 203, 223, 226, 263, 264, 297, 311, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 339, 364, 367, 371, 372, 373, 374, 375, 378, 380, 385, 389, 390], "pad": [1, 2, 3, 23, 44, 52, 63, 65, 67, 68, 69, 144, 204, 205, 207, 208, 223, 227, 228, 229, 345], "along": [1, 2, 3, 14, 15, 23, 33, 34, 41, 43, 46, 47, 54, 63, 65, 67, 68, 69, 75, 80, 82, 87, 88, 93, 95, 106, 108, 143, 144, 145, 162, 164, 167, 174, 182, 223, 224, 227, 228, 232, 257, 265, 268, 269, 295, 302, 366, 371, 372, 374, 375, 377, 383, 384, 385, 387], "point": [1, 2, 3, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 66, 73, 79, 80, 83, 93, 94, 97, 98, 103, 107, 123, 129, 137, 140, 143, 144, 148, 166, 179, 180, 182, 183, 184, 186, 188, 192, 225, 268, 278, 288, 348, 365, 372, 373, 382, 383, 384, 385, 387, 390], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 80, 87, 88, 107, 140, 167, 178, 202, 227, 228, 255, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 368, 374], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 48, 50, 65, 101, 102, 103, 106, 107, 108, 123, 129, 130, 131, 157, 167, 190, 192, 214, 227, 228, 239, 257, 258, 266, 267, 269, 306, 311, 345, 371, 373, 374, 375, 376, 377, 383, 384], "valid": [1, 2, 3, 23, 41, 43, 44, 54, 70, 93, 132, 140, 167, 184, 192, 204, 205, 224, 227, 228, 254, 255, 263, 264, 294, 311, 312, 313, 314, 345, 368, 390], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 344, 364, 371, 372], "strategi": [1, 2, 16, 67, 85, 116, 137, 228, 236, 259, 366, 368, 371, 372, 376, 383, 384, 387], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 50, 53, 55, 56, 58, 82, 103, 107, 113, 119, 123, 124, 125, 129, 130, 132, 141, 143, 144, 153, 160, 178, 179, 180, 183, 184, 189, 190, 192, 204, 205, 227, 228, 229, 230, 254, 255, 257, 265, 266, 269, 272, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 303, 309, 331, 348, 358, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 390], "organ": [1, 2, 385, 387], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 103, 106, 107, 108, 123, 126, 129, 141, 144, 149, 152, 153, 171, 178, 189, 190, 192, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 276, 283, 288, 302, 309, 329, 331, 366, 372, 375, 376, 377, 378, 379, 380, 383, 385, 389], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 63, 64, 67, 85, 99, 100, 103, 107, 112, 113, 116, 123, 124, 125, 129, 140, 144, 151, 162, 169, 184, 185, 192, 214, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 239, 293, 297, 306, 311, 312, 313, 317, 318, 319, 344, 348, 350, 360, 361, 366, 367, 368, 371, 372, 373, 375, 377, 379, 382, 383, 384, 385, 386, 387, 390], "how": [1, 2, 3, 11, 18, 19, 20, 24, 37, 42, 50, 67, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 126, 129, 130, 131, 137, 192, 265, 279, 281, 292, 294, 297, 331, 333, 348, 365, 366, 371, 372, 373, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "tabl": [1, 366, 372, 376], "summar": [1, 3, 385], "what": [1, 3, 8, 11, 28, 42, 53, 61, 80, 87, 103, 107, 123, 129, 153, 180, 194, 201, 266, 302, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390], "expect": [1, 2, 3, 4, 7, 27, 37, 45, 53, 54, 80, 86, 87, 103, 107, 119, 122, 123, 129, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 164, 166, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 217, 218, 219, 221, 222, 223, 229, 230, 258, 263, 264, 268, 271, 279, 280, 281, 282, 283, 285, 286, 287, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 352, 365, 366, 367, 368, 371, 373, 374, 375, 376, 377, 378, 383, 384, 385, 387, 390], "n": [1, 2, 3, 6, 7, 25, 29, 37, 40, 47, 103, 107, 123, 129, 144, 151, 156, 185, 192, 217, 218, 221, 226, 262, 263, 264, 269, 279, 287, 295, 310, 345, 366, 368, 372, 374, 376, 383, 384, 387, 390], "b": [1, 2, 3, 7, 8, 23, 27, 33, 41, 43, 45, 46, 47, 50, 51, 93, 217, 218, 221, 222, 229, 230, 231, 232, 238, 247, 272, 311, 312, 313, 314, 315, 317, 331, 366, 372, 386, 387], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 79, 80, 82, 86, 93, 103, 104, 106, 107, 120, 121, 123, 129, 137, 140, 144, 149, 152, 153, 166, 170, 171, 179, 181, 188, 190, 192, 194, 201, 217, 221, 257, 263, 264, 268, 301, 311, 312, 313, 314, 315, 317, 331, 338, 348, 350, 362, 365, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "p": [1, 2, 4, 82, 85, 104, 127, 128], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 61, 63, 65, 67, 68, 69, 99, 100, 103, 107, 112, 113, 123, 124, 125, 129, 148, 149, 150, 152, 166, 171, 175, 179, 180, 182, 183, 184, 186, 188, 189, 192, 217, 220, 221, 224, 229, 241, 245, 246, 268, 271, 278, 279, 280, 282, 283, 285, 286, 287, 293, 295, 297, 298, 299, 300, 302, 303, 350, 360, 361, 362, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 390], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 79, 80, 82, 93, 103, 106, 107, 123, 129, 149, 150, 152, 162, 182, 184, 194, 223, 224, 230, 265, 268, 269, 271, 272, 278, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314, 331, 339, 350, 360, 361, 362, 364, 366, 368, 371, 372, 373, 374, 375, 376, 378, 379, 383, 384, 385, 387, 390], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 53, 54, 55, 56, 63, 65, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 123, 129, 130, 131, 137, 143, 144, 145, 156, 162, 164, 167, 174, 177, 182, 185, 190, 204, 205, 206, 211, 219, 221, 223, 224, 227, 228, 229, 231, 232, 237, 238, 242, 243, 244, 245, 248, 257, 262, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 362, 366, 371, 372, 373, 374, 375, 383, 384, 385, 387], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 93, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 129, 136, 143, 145, 167, 174, 180, 181, 184, 190, 192, 201, 215, 217, 221, 223, 262, 263, 264, 281, 287, 290, 294, 295, 297, 298, 302, 303, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 348, 366, 367, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "adapt": [1, 24, 138, 178, 294, 371, 385], "equal": [1, 14, 15, 17, 61, 80, 87, 88, 120, 123, 129, 161, 162, 204, 205, 217, 219, 221, 223, 224, 230, 301, 306, 339, 360, 361, 371, 373, 386], "introduc": [1, 2, 123, 129, 217, 219, 221, 223, 263, 264, 371, 383], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 54, 55, 56, 63, 69, 74, 75, 82, 93, 95, 99, 100, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 129, 130, 131, 140, 166, 180, 184, 186, 192, 194, 207, 219, 223, 243, 269, 270, 271, 331, 339, 351, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 385, 387, 389, 390], "confus": [1, 37, 103, 107, 123, 129, 184, 192], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 46, 50, 51, 54, 61, 63, 65, 67, 68, 69, 74, 75, 76, 82, 85, 86, 87, 88, 89, 91, 95, 103, 106, 107, 108, 119, 123, 129, 147, 150, 151, 168, 175, 182, 186, 190, 192, 217, 219, 223, 232, 233, 256, 258, 259, 267, 269, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 311, 329, 345, 360, 361, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 385, 386, 389, 390], "better": [1, 3, 8, 9, 14, 15, 23, 219, 223, 367, 373, 375, 385, 389], "consist": [1, 2, 3, 37, 42, 45, 50, 51, 64, 67, 103, 107, 123, 129, 160, 189, 192, 205, 224, 371, 372, 373, 385, 386, 390], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 67, 103, 107, 117, 118, 123, 129, 184, 265, 269, 371, 373, 375, 376, 378, 383, 384, 385, 390], "keep": [1, 3, 4, 7, 8, 15, 42, 45, 50, 51, 86, 93, 123, 129, 162, 166, 188, 190, 192, 201, 263, 264, 341, 348, 371, 372, 373, 374, 378, 379, 380, 384, 385, 387, 389, 390], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 61, 64, 166, 188, 280, 282, 285, 287, 298, 300, 302, 303, 371, 372, 376, 377, 383, 384, 387, 390], "interchang": [1, 373, 375, 379, 386, 387], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 107, 117, 118, 123, 129, 130, 131, 151, 161, 172, 184, 190, 192, 194, 204, 205, 213, 217, 219, 223, 224, 229, 230, 258, 265, 269, 279, 281, 282, 285, 286, 287, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 306, 311, 344, 348, 367, 371, 372, 374, 378, 383, 384, 385, 387, 390], "wherea": [1, 2, 22, 67, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 126, 151, 192, 295, 368, 379], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 50, 53, 55, 56, 64, 67, 69, 79, 80, 103, 107, 119, 123, 129, 166, 180, 184, 188, 190, 192, 219, 221, 223, 227, 228, 259, 260, 263, 264, 265, 269, 283, 286, 287, 300, 309, 311, 312, 313, 314, 315, 371, 372, 373, 375, 377, 378, 379, 383, 384, 385, 386], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 61, 67, 80, 87, 93, 103, 107, 123, 129, 167, 270, 271, 339, 348, 366, 371, 372, 373, 378, 382, 389, 390], "doesn": [1, 4, 12, 93, 120, 149, 152, 375], "understood": [1, 371], "serv": [1, 18, 20, 21, 109, 387, 390], "basi": [1, 93, 229, 387], "simplest": [1, 93, 272, 371, 373, 374, 376, 383, 384, 387, 390], "scenario": [1, 2, 117, 118, 123, 130, 131, 329, 371, 376, 383, 384, 385], "transit": [1, 37, 63, 67, 80, 88, 93, 103, 107, 123, 129, 192, 274, 371, 374, 375, 376, 378, 383, 385, 387], "sampl": [1, 4, 8, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 93, 95, 103, 107, 119, 122, 123, 129, 137, 143, 144, 167, 171, 195, 196, 199, 200, 203, 212, 220, 226, 227, 228, 236, 237, 240, 245, 246, 250, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 279, 280, 281, 282, 283, 285, 294, 296, 297, 302, 303, 339, 345, 348, 351, 364, 366, 371, 372, 373, 374, 375, 376, 378, 380, 383, 384, 386, 389, 390], "attent": [1, 2, 8, 371, 374, 390], "given": [1, 2, 3, 14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 103, 107, 119, 123, 129, 148, 151, 162, 166, 180, 183, 184, 186, 188, 190, 192, 201, 203, 214, 215, 217, 221, 226, 239, 243, 250, 257, 258, 259, 262, 264, 267, 268, 269, 270, 271, 273, 278, 282, 283, 285, 310, 311, 312, 313, 314, 315, 317, 340, 344, 358, 366, 368, 371, 372, 373, 375, 376, 377, 378, 379, 384, 385, 390], "built": [1, 2, 3, 5, 7, 82, 99, 100, 106, 112, 113, 122, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 304, 309, 356, 358, 359, 362, 371, 372, 373, 374, 377, 379, 387, 390], "flatten": [1, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 93, 141, 156, 345, 364, 374, 384], "suffici": [1, 3, 4, 371], "preprocess": [1, 2, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 372], "popul": [1, 2, 3, 42, 45, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 159, 180, 371, 373, 374, 376, 378, 385, 387], "replaybuff": [1, 2, 30, 42, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 97, 144, 167, 171, 192, 283, 288, 309, 356, 358, 364, 373, 378, 380, 383, 384, 386, 387, 389], "lazytensorstorag": [1, 2, 42, 45, 50, 51, 79, 93, 171, 192, 373, 380, 384, 387], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 45, 93, 103, 104, 107, 123, 129, 136, 141, 160, 180, 192, 248, 257, 262, 265, 266, 289, 291, 302, 311, 314, 322, 323, 327, 328, 329, 358, 367, 371, 383, 384, 387, 389, 390], "reshap": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 87, 93, 141, 219, 223, 224, 329, 373, 383, 384], "extend": [1, 2, 8, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 42, 45, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 76, 79, 80, 82, 83, 87, 88, 91, 93, 94, 97, 98, 143, 171, 192, 345, 368, 371, 372, 373, 374, 378, 380, 383, 384, 386, 387, 389], "slice": [1, 2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 137, 143, 387], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 42, 43, 45, 46, 50, 51, 93, 111, 378, 383, 384], "achiev": [1, 2, 3, 4, 37, 103, 107, 111, 123, 129, 179, 192, 202, 265, 345, 368, 371, 372, 373, 374, 383, 384, 385, 387, 390], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 93, 103, 104, 107, 111, 123, 124, 129, 130, 131, 141, 144, 166, 183, 184, 186, 189, 190, 192, 198, 201, 204, 205, 207, 208, 209, 210, 211, 216, 219, 223, 224, 225, 229, 230, 256, 269, 276, 283, 288, 298, 300, 309, 331, 345, 352, 353, 354, 358, 360, 361, 366, 371, 372, 373, 374, 376, 379, 383, 384, 385, 386, 387, 389, 390], "multidimension": [1, 2, 50, 79, 80, 387], "slicesampl": [1, 2, 61, 80, 387], "sampler": [1, 2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 95, 167, 283, 288, 309, 371, 373, 383, 384, 387], "One": [1, 2, 4, 8, 25, 29, 36, 40, 54, 93, 99, 100, 123, 129, 144, 171, 186, 236, 254, 255, 268, 272, 301, 306, 335, 371, 372, 387, 390], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 82, 87, 88, 89, 90, 91, 93, 95, 99, 103, 104, 107, 112, 123, 124, 125, 126, 129, 130, 137, 140, 141, 144, 147, 153, 157, 160, 162, 164, 175, 179, 180, 181, 184, 185, 190, 192, 204, 205, 214, 219, 223, 224, 227, 228, 229, 230, 239, 250, 257, 258, 262, 265, 266, 267, 268, 269, 272, 273, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 301, 302, 303, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 371, 372, 373, 374, 376, 382, 385, 387], "ensur": [1, 2, 3, 37, 42, 50, 79, 80, 86, 103, 107, 123, 129, 137, 144, 166, 178, 184, 186, 190, 192, 257, 366, 372, 373, 385, 387], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 82, 93, 95, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 141, 143, 145, 149, 152, 153, 154, 160, 162, 164, 168, 169, 171, 175, 178, 180, 182, 190, 191, 192, 194, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 244, 245, 247, 250, 251, 252, 253, 256, 257, 258, 262, 263, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 306, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 339, 345, 348, 358, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 61, 220, 245, 246, 278, 365, 371, 372, 373, 374, 377, 383, 384, 386, 390], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 28, 37, 41, 43, 89, 93, 103, 107, 111, 116, 123, 124, 125, 129, 144, 147, 156, 166, 169, 181, 184, 188, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 231, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 272, 275, 278, 287, 298, 299, 300, 302, 303, 310, 315, 331, 348, 362, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 387, 389, 390], "dimension": [1, 42, 45, 50, 51, 151, 219, 223, 311, 316, 324, 384], "num_slic": [1, 2, 61, 67, 80, 87, 88, 387], "4": [1, 2, 3, 7, 25, 27, 29, 30, 33, 37, 40, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 87, 88, 95, 99, 100, 101, 102, 103, 107, 112, 113, 114, 115, 116, 119, 121, 123, 127, 128, 129, 137, 138, 140, 141, 144, 153, 171, 178, 179, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 221, 222, 224, 226, 229, 230, 233, 234, 235, 236, 237, 238, 239, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 329, 330, 366, 370, 371, 372, 373, 374, 376, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 30, 48, 141, 171, 374, 378, 387, 389], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 141, 144, 171, 348, 351, 358, 368, 371, 372, 373, 374, 378, 380, 383, 384, 387, 389], "dim": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 144, 145, 164, 180, 185, 190, 222, 243, 248, 262, 362, 372, 373, 383, 385, 387], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 53, 54, 55, 56, 63, 65, 67, 79, 80, 87, 88, 103, 107, 111, 120, 123, 126, 129, 141, 148, 166, 180, 183, 184, 186, 188, 192, 219, 223, 224, 248, 268, 270, 271, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 329, 331, 333, 366, 368, 371, 372, 373, 374, 375, 376, 377, 379, 383, 384, 385, 387, 390], "ndim": [1, 2, 42, 45, 50, 51, 74, 75, 79, 80, 93, 95, 103, 107, 123, 129, 192, 262], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 93, 103, 107, 120, 124, 125, 126, 129, 329, 359, 364, 371, 372, 373, 375, 382, 389, 390], "make_env": [1, 3, 123, 129, 131, 190, 329, 353, 354, 371, 372, 390], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 79, 85, 103, 107, 123, 129, 184, 213, 239, 258, 266, 267, 268, 269, 288, 350, 364, 368, 371, 372, 375, 376, 380, 387, 390], "behav": [1, 3, 109, 119, 217, 221, 236, 286, 293, 386], "iif": 1, "accordingli": [1, 80, 178, 179, 221, 266, 374], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 27, 29, 33, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 110, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 138, 140, 141, 144, 148, 151, 153, 154, 160, 162, 164, 166, 168, 169, 171, 174, 175, 178, 179, 180, 182, 183, 184, 186, 188, 192, 193, 198, 203, 204, 205, 207, 208, 209, 211, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 233, 236, 238, 248, 250, 251, 252, 253, 257, 258, 265, 267, 268, 271, 272, 273, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 347, 366, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 67, 79, 93, 140, 153, 194, 257, 268, 376, 377, 379, 383, 384], "current": [1, 2, 3, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 80, 82, 88, 103, 107, 109, 120, 123, 129, 140, 141, 144, 167, 179, 180, 181, 183, 184, 192, 195, 196, 201, 215, 241, 262, 263, 264, 279, 281, 288, 294, 297, 299, 300, 334, 368, 371, 372, 373, 374, 377, 383, 384, 385, 387, 389, 390], "fulli": [1, 8, 37, 103, 107, 123, 129, 192, 218, 222, 372, 377, 385, 387], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83, 86, 88, 89, 91, 93, 94, 95, 97, 98, 103, 104, 107, 120, 123, 124, 125, 129, 130, 131, 138, 140, 156, 166, 167, 171, 184, 186, 190, 192, 194, 202, 204, 205, 211, 224, 232, 256, 262, 268, 269, 270, 271, 279, 280, 282, 283, 285, 286, 287, 293, 295, 297, 298, 299, 300, 302, 303, 311, 313, 314, 329, 336, 348, 365, 371, 372, 373, 376, 377, 383, 384, 385, 387, 389, 390], "consecut": [1, 3, 61, 86, 111, 223, 263, 264, 331, 374, 375, 378, 384, 387, 390], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 103, 104, 106, 107, 120, 121, 123, 129, 166, 188, 192, 348, 362, 372, 373, 375, 376], "therebi": [1, 24, 329, 367, 371, 372], "interrupt": [1, 2, 107, 262, 317], "These": [1, 2, 7, 37, 47, 64, 69, 96, 103, 107, 123, 129, 130, 166, 188, 192, 366, 367, 371, 373, 383, 384, 385, 387, 390], "tool": [1, 2, 3, 5, 374, 375, 383, 385, 387, 390], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 103, 106, 107, 123, 129, 133, 136, 368, 371, 373, 374, 375, 378, 379, 385], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 364], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 364], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 83, 86, 87, 88, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 153, 154, 160, 162, 164, 166, 168, 169, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 193, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 277, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 339, 346, 347, 358, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 61, 69, 104, 105, 123, 129, 190, 371, 372, 373, 374, 383, 384, 385, 386, 390], "synchron": [1, 14, 19, 21, 41, 43, 46, 120, 360, 361, 372, 373, 383], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 120, 123, 129, 149, 152, 179, 184, 190, 192, 195, 199, 212, 219, 220, 223, 236, 244, 245, 246, 265, 269, 295, 329, 344, 371, 372, 374, 383, 384, 389, 390], "find": [1, 4, 6, 7, 18, 19, 20, 42, 44, 52, 87, 88, 221, 254, 255, 263, 264, 342, 346, 371, 372, 376, 377, 383, 384], "folder": [1, 2, 41, 43, 46, 130, 372], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 104, 106, 107, 108, 109, 117, 118, 119, 123, 124, 125, 129, 130, 131, 132, 137, 143, 144, 147, 148, 149, 150, 152, 155, 160, 161, 162, 166, 174, 176, 180, 181, 183, 184, 186, 188, 190, 192, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 290, 295, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 343, 348, 351, 360, 361, 362, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 389, 390], "variou": [1, 2, 3, 219, 223, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 304, 309, 331, 360, 361, 371, 372, 373, 375, 376, 377, 379, 383, 384, 387, 390], "machin": [1, 2, 7, 18, 19, 20, 37, 66, 111, 383, 384, 389], "wonder": 1, "why": [1, 2, 3, 201, 383, 385, 390], "instead": [1, 4, 7, 8, 12, 29, 37, 67, 103, 107, 123, 129, 156, 180, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 279, 281, 283, 286, 287, 288, 293, 294, 297, 298, 299, 300, 309, 311, 315, 319, 362, 366, 375, 376, 380, 385, 387, 390], "lower": [1, 2, 3, 21, 26, 147, 190, 240, 241, 272, 373, 383, 385], "io": [1, 11, 61, 67, 112, 113, 120, 221, 222], "footprint": [1, 2, 387], "commun": [1, 2, 3, 123, 129, 365, 373, 390], "yet": [1, 99, 100, 112, 386], "plai": [1, 3, 124, 125, 144, 372, 373, 377, 387, 390], "role": [1, 3, 118, 372, 377, 390], "opposit": [1, 383], "direct": [1, 2, 37, 103, 107, 123, 129, 192, 217, 221, 295, 372, 377], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 69, 79, 80, 88, 93, 103, 107, 123, 124, 125, 126, 129, 192, 194, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 267, 272, 275, 329, 331, 371, 372, 373, 374, 375, 376, 377, 383, 385, 386, 387, 389, 390], "faster": [1, 2, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 68, 69, 120, 311, 312, 313, 314, 374, 383, 384], "share": [1, 3, 6, 8, 23, 41, 43, 46, 72, 74, 75, 76, 80, 87, 89, 91, 95, 104, 123, 129, 190, 219, 223, 229, 230, 251, 252, 253, 279, 281, 282, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 362, 364, 366, 373, 374, 380, 382, 383, 384, 389, 390], "among": [1, 3, 124, 125, 383, 384], "prohibit": [1, 3, 93], "slow": [1, 3, 4, 11, 41, 43, 46], "compar": [1, 3, 67, 93, 344, 367, 371, 373, 376, 377, 383, 384, 387, 390], "gpu": [1, 7, 8, 37, 74, 75, 95, 103, 107, 111, 123, 129, 192, 371, 373, 374, 383, 384, 390], "nativ": [1, 7, 9, 65, 103, 107, 123, 129, 144, 331, 374, 387], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 50, 61, 79, 80, 87, 93, 99, 100, 107, 140, 162, 190, 203, 212, 215, 217, 219, 221, 223, 226, 237, 244, 245, 254, 255, 265, 269, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 366, 367, 371, 372, 373, 376, 383, 384, 385, 387, 389, 390], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 126, 129, 130, 131, 140, 141, 145, 147, 148, 166, 174, 175, 180, 182, 183, 184, 186, 188, 192, 219, 223, 227, 228, 229, 250, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 268, 269, 272, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 305, 309, 311, 312, 313, 314, 315, 319, 329, 338, 359, 371, 372, 373, 376, 379, 383, 384, 387, 390], "build": [1, 3, 7, 23, 27, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 108, 109, 112, 113, 117, 118, 120, 123, 126, 129, 130, 131, 171, 190, 192, 203, 219, 223, 226, 261, 265, 269, 348, 355, 356, 357, 366, 368, 373, 374, 376, 377, 378, 379, 383, 384, 385, 386, 389, 390], "mani": [1, 2, 3, 4, 45, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 126, 279, 281, 287, 294, 297, 298, 302, 303, 366, 371, 372, 373, 375, 376, 378, 380, 383, 384, 385, 387, 390], "eg": [1, 2, 3, 12, 41, 43, 46, 74, 75, 76, 89, 91, 95, 101, 102, 103, 106, 107, 108, 109, 111, 123, 126, 129, 151, 178, 184, 229, 256, 331], "gymnasium": [1, 3, 5, 12, 103, 106, 107, 108, 114, 115, 123, 129, 133, 136, 154, 175, 178, 189, 372, 373, 385, 389], "warn": [1, 3, 254, 255, 259, 260, 263, 264, 372], "quickli": [1, 3, 372, 383, 384, 390], "becom": [1, 3, 4, 21, 217, 221, 383, 384, 390], "quit": [1, 3, 11, 61, 103, 107, 123, 129, 366, 371, 372, 373, 376, 383, 384, 390], "annoi": [1, 3], "By": [1, 2, 3, 27, 33, 40, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 129, 130, 131, 248, 269, 295, 344, 362, 371, 383, 386, 387, 390], "filter": [1, 2, 3, 4, 54, 80, 87, 88, 279, 280, 282, 286, 287, 293, 297, 298, 300, 375], "out": [1, 2, 3, 4, 5, 9, 21, 37, 41, 43, 46, 54, 63, 67, 72, 80, 87, 88, 103, 107, 123, 124, 125, 129, 180, 192, 194, 217, 218, 221, 227, 228, 231, 232, 250, 256, 257, 258, 264, 265, 266, 267, 268, 269, 307, 308, 368, 371, 372, 373, 374, 375, 376, 378, 383, 384, 385, 387, 389, 390], "still": [1, 2, 3, 9, 67, 99, 100, 103, 107, 112, 113, 123, 129, 255, 294, 295, 371, 372, 374, 382, 385, 387, 390], "wish": [1, 3, 11, 14, 15, 17, 67, 136, 377, 387], "displai": [1, 3, 7, 103, 107, 123, 129, 348, 368, 371, 372, 384, 385], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 82, 85, 86, 87, 88, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 145, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 173, 174, 175, 178, 180, 182, 183, 184, 185, 186, 188, 190, 192, 194, 201, 202, 203, 204, 205, 207, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 238, 239, 245, 246, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 309, 311, 312, 313, 314, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 338, 341, 342, 344, 345, 346, 348, 362, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "central": [2, 229, 230, 371, 372, 375, 383, 384, 387], "part": [2, 3, 4, 8, 37, 47, 61, 64, 65, 67, 68, 69, 99, 103, 107, 112, 123, 129, 143, 162, 171, 174, 192, 201, 219, 223, 273, 339, 362, 371, 373, 374, 380, 383, 385, 390], "algorithm": [2, 3, 8, 9, 119, 137, 279, 297, 298, 300, 364, 367, 368, 371, 372, 373, 374, 377, 378, 379, 383, 384, 386, 387], "implement": [2, 3, 9, 12, 14, 15, 16, 37, 77, 89, 90, 103, 107, 119, 120, 123, 129, 141, 148, 149, 150, 154, 157, 160, 168, 169, 175, 178, 183, 184, 190, 192, 204, 217, 218, 219, 220, 221, 222, 223, 244, 245, 246, 279, 280, 284, 285, 286, 293, 295, 296, 297, 299, 300, 302, 329, 339, 353, 366, 368, 371, 372, 373, 374, 376, 377, 378, 383, 384, 385, 389], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 37, 42, 45, 47, 50, 51, 61, 63, 67, 69, 86, 88, 93, 99, 100, 103, 104, 107, 111, 112, 113, 123, 129, 144, 160, 166, 169, 186, 189, 190, 192, 194, 203, 223, 229, 230, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 331, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "give": [2, 3, 7, 50, 64, 103, 107, 119, 123, 129, 144, 365, 367, 371, 372, 383, 384, 385, 386, 389], "abil": [2, 295, 385, 387], "panel": [2, 373], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 63, 69, 72, 93, 141, 144, 153, 219, 223, 286, 293, 300, 304, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "includ": [2, 3, 4, 7, 9, 21, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 89, 91, 95, 103, 107, 119, 123, 129, 179, 184, 190, 192, 219, 223, 295, 300, 351, 366, 368, 371, 372, 373, 374, 383, 384, 385, 387, 390], "almost": [2, 374], "physic": [2, 6, 7, 72, 123, 126, 368, 371, 383, 384, 385], "theori": 2, "crude": 2, "made": [2, 3, 23, 37, 45, 61, 74, 75, 76, 89, 91, 95, 103, 106, 107, 108, 123, 129, 192, 263, 264, 283, 309, 371, 372, 374, 383, 384, 386, 387], "liststorag": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 387], "veri": [2, 3, 112, 113, 372, 375, 378, 383, 385, 387, 389, 390], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 37, 40, 41, 43, 46, 61, 67, 80, 82, 85, 87, 88, 99, 100, 103, 107, 112, 113, 123, 129, 140, 141, 169, 192, 201, 224, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 304, 306, 309, 366, 368, 371, 373, 374, 375, 376, 377, 383, 384, 385, 387, 390], "complex": [2, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 371, 372, 375, 376], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 87, 88, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 138, 140, 141, 143, 144, 145, 148, 149, 151, 152, 153, 154, 156, 159, 162, 164, 166, 167, 168, 169, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 279, 280, 282, 283, 285, 286, 287, 290, 291, 293, 295, 297, 298, 299, 300, 302, 303, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 389, 390], "contigu": [2, 3, 8, 64, 67, 68, 103, 107, 123, 129, 198, 373, 383, 384, 385, 387, 389, 390], "tensorstorag": [2, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 93, 96, 378, 387], "lazymemmapstorag": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 143, 144, 371, 372, 374, 378, 383, 386, 387], "citizen": 2, "pytre": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 96], "tupl": [2, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 80, 82, 87, 91, 93, 101, 102, 103, 106, 107, 108, 123, 129, 160, 162, 192, 207, 213, 214, 219, 222, 223, 224, 233, 237, 238, 239, 257, 258, 266, 267, 272, 279, 280, 282, 286, 287, 289, 293, 295, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314, 342, 344, 346, 355, 387], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 37, 41, 43, 46, 54, 80, 85, 87, 88, 103, 106, 107, 108, 117, 118, 123, 129, 130, 131, 180, 184, 192, 265, 269, 300, 302, 344, 360, 361, 362, 368, 372, 373, 375, 377, 383, 385, 390], "nest": [2, 3, 23, 27, 30, 32, 33, 37, 38, 41, 43, 45, 46, 48, 49, 57, 74, 75, 78, 82, 95, 103, 106, 107, 108, 123, 129, 144, 178, 181, 192, 202, 262, 311, 312, 313, 314, 315, 329, 368, 372, 373, 384, 385, 387, 389], "construct": [2, 3, 5, 23, 37, 42, 45, 50, 51, 61, 82, 103, 106, 107, 123, 124, 129, 149, 152, 192, 194, 219, 223, 241, 269, 348, 366, 372, 373, 374, 376, 383, 385, 387, 390], "ram": [2, 106, 108, 379, 387], "prealloc": [2, 3, 123, 129, 385], "ve": [2, 47, 371, 374, 380], "been": [2, 3, 5, 7, 8, 18, 20, 21, 47, 82, 86, 103, 107, 111, 117, 118, 123, 129, 160, 178, 179, 183, 217, 221, 255, 260, 262, 264, 371, 372, 373, 374, 382, 383, 384, 385, 387, 390], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 68, 69, 93, 101, 102, 103, 107, 111, 123, 124, 125, 129, 144, 338, 366, 367, 368, 371, 372, 373, 374, 375, 376, 378, 380, 383, 384, 385, 387, 389, 390], "start": [2, 3, 4, 5, 14, 21, 24, 54, 61, 69, 80, 87, 88, 104, 107, 116, 123, 129, 201, 343, 370, 371, 372, 381, 384, 385, 387, 388, 390], "replay_buff": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 345, 358, 371, 372, 373, 378, 383, 384, 387], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 30, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 138, 140, 141, 143, 144, 147, 153, 154, 159, 160, 162, 164, 166, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 183, 188, 190, 192, 193, 198, 201, 202, 203, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 233, 238, 239, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 329, 331, 341, 344, 358, 366, 367, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "rb": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 144, 171, 192, 372, 374, 378, 380, 384, 386, 387, 389], "10": [2, 3, 7, 22, 23, 25, 27, 29, 37, 42, 45, 47, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 119, 123, 124, 125, 127, 128, 129, 130, 131, 137, 138, 141, 143, 144, 179, 181, 182, 192, 203, 206, 207, 209, 211, 213, 217, 218, 221, 222, 226, 237, 248, 259, 260, 263, 264, 265, 272, 276, 280, 283, 285, 297, 298, 299, 303, 309, 311, 312, 313, 314, 317, 331, 339, 368, 371, 372, 373, 374, 375, 376, 378, 380, 383, 384, 385, 387, 389, 390], "add": [2, 3, 4, 6, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 82, 83, 93, 94, 97, 98, 103, 107, 123, 129, 144, 160, 184, 192, 219, 223, 231, 261, 279, 343, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 387, 389], "string": [2, 18, 19, 20, 37, 44, 54, 70, 103, 107, 117, 123, 129, 136, 166, 178, 188, 192, 219, 223, 257, 262, 265, 266, 278, 330, 347, 367, 371, 373, 374, 387], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 82, 87, 88, 93, 95, 122, 123, 129, 137, 144, 167, 176, 179, 180, 204, 205, 217, 218, 221, 250, 254, 255, 257, 262, 268, 269, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 296, 297, 298, 299, 300, 302, 303, 339, 371, 373, 376, 378, 387, 390], "30": [2, 3, 45, 65, 140, 161, 240, 241, 329, 333, 371, 372, 373, 378, 383, 384, 385, 386, 387], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 89, 91, 93, 95, 103, 104, 106, 107, 116, 117, 118, 119, 123, 124, 125, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 158, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 358, 360, 361, 362, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 387, 389, 390], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 137, 139, 140, 141, 143, 144, 145, 146, 148, 151, 156, 157, 161, 162, 164, 166, 167, 170, 177, 178, 181, 184, 185, 186, 188, 192, 194, 198, 203, 204, 205, 206, 207, 209, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 279, 280, 281, 287, 289, 290, 294, 295, 296, 297, 298, 302, 303, 311, 313, 314, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 339, 340, 341, 344, 345, 348, 350, 356, 360, 361, 362, 385, 387], "entri": [2, 3, 14, 15, 17, 23, 27, 30, 33, 37, 41, 43, 44, 46, 48, 54, 58, 63, 64, 65, 66, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 126, 129, 130, 131, 140, 144, 146, 147, 149, 152, 153, 156, 159, 162, 164, 166, 169, 171, 174, 176, 178, 179, 180, 188, 190, 192, 201, 202, 219, 227, 228, 256, 257, 262, 266, 267, 280, 300, 311, 312, 313, 314, 366, 371, 373, 374, 375, 376, 377, 379, 383, 384, 385, 386, 387, 390], "onto": [2, 8, 40, 41, 43, 46, 198, 250, 254, 255, 257, 258, 263, 264, 265, 266, 267, 268, 269, 374, 385], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 79, 80, 82, 83, 85, 86, 87, 88, 93, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 130, 131, 137, 144, 145, 178, 179, 180, 181, 184, 192, 202, 204, 205, 224, 227, 228, 230, 262, 263, 264, 266, 267, 275, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 352, 362, 365, 368, 373, 374, 378, 379, 380, 385, 387, 390], "without": [2, 3, 7, 9, 14, 15, 16, 37, 41, 43, 46, 47, 61, 63, 67, 87, 88, 103, 107, 123, 129, 130, 131, 138, 140, 149, 152, 182, 192, 217, 218, 221, 222, 252, 253, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 310, 311, 312, 313, 314, 315, 358, 365, 366, 371, 372, 373, 375, 376, 377, 378, 383, 384, 385, 387, 390], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 42, 43, 46, 47, 50, 79, 80, 103, 107, 119, 123, 124, 125, 129, 138, 140, 141, 149, 151, 152, 168, 178, 179, 184, 187, 190, 192, 202, 203, 217, 219, 223, 226, 254, 255, 259, 260, 263, 264, 265, 266, 267, 268, 269, 279, 280, 281, 282, 283, 285, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 309, 311, 312, 313, 314, 315, 344, 348, 350, 353, 354, 357, 358, 368, 372, 373, 374, 377, 380, 383, 384, 385, 387, 389, 390], "length": [2, 20, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 44, 47, 52, 53, 54, 55, 56, 61, 67, 70, 80, 87, 88, 91, 103, 107, 112, 113, 123, 129, 137, 167, 190, 203, 204, 205, 207, 209, 211, 217, 221, 224, 226, 229, 230, 250, 268, 273, 339, 345, 371, 373, 374, 378, 380, 385, 387, 390], "cursor": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "place": [2, 3, 24, 27, 28, 33, 37, 41, 43, 46, 74, 75, 82, 85, 95, 103, 104, 107, 123, 129, 130, 131, 140, 148, 153, 166, 180, 183, 184, 186, 188, 189, 190, 192, 202, 256, 262, 268, 345, 350, 351, 372, 373, 376, 379, 383, 384, 385, 387], "afterward": [2, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 383, 390], "tell": [2, 3, 4, 7, 124, 125, 371, 374, 378, 383, 384], "our": [2, 3, 7, 8, 11, 18, 45, 144, 331, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389], "far": [2, 47, 220, 245, 246, 380, 385, 390], "restrict": [2, 3, 372, 386, 387, 390], "empti": [2, 3, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 103, 107, 122, 123, 129, 149, 152, 166, 168, 181, 184, 186, 188, 192, 335, 371, 385], "64": [2, 3, 41, 43, 46, 61, 67, 82, 144, 170, 207, 208, 216, 219, 223, 230, 238, 309, 371, 372, 373, 374, 376, 380, 382, 385, 386, 387, 389, 390], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 87, 88, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 138, 141, 142, 148, 149, 150, 151, 152, 153, 154, 160, 162, 164, 166, 168, 169, 171, 175, 178, 180, 182, 183, 184, 186, 188, 192, 194, 198, 201, 202, 203, 213, 214, 217, 218, 219, 221, 222, 223, 226, 231, 232, 238, 239, 247, 250, 251, 252, 253, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 271, 273, 276, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 317, 366, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "unit8": 2, "img": 2, "randint": [2, 54, 82, 182, 387], "255": [2, 82, 182, 385, 387], "uint8": [2, 3, 41, 43, 46, 56, 61, 67, 101, 102, 117, 118, 153, 164, 182, 372, 379, 386, 387, 389, 390], "next": [2, 3, 4, 8, 14, 15, 16, 23, 27, 30, 32, 33, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 117, 118, 119, 123, 127, 128, 129, 130, 131, 137, 140, 141, 143, 144, 149, 152, 153, 154, 159, 160, 164, 168, 169, 171, 174, 175, 178, 180, 189, 190, 192, 198, 201, 203, 218, 219, 222, 223, 226, 241, 262, 274, 276, 279, 280, 282, 283, 285, 286, 287, 288, 293, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 331, 342, 344, 346, 372, 374, 376, 379, 380, 382, 385, 386, 389, 390], "ask": [2, 8, 61, 67, 80, 87, 88, 331, 373, 374, 375, 376, 383, 384, 386, 390], "do": [2, 3, 4, 7, 69, 103, 107, 123, 129, 130, 131, 137, 167, 189, 190, 201, 230, 231, 252, 311, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 389, 390], "automat": [2, 3, 5, 69, 74, 75, 82, 95, 103, 106, 107, 108, 123, 124, 125, 129, 140, 149, 152, 162, 180, 189, 204, 219, 223, 250, 262, 265, 329, 366, 371, 373, 375, 376, 383, 384, 385, 387, 389], "hand": [2, 3, 7, 21, 27, 383, 384, 385], "look": [2, 3, 5, 7, 8, 37, 80, 103, 107, 116, 123, 124, 125, 129, 166, 167, 186, 192, 265, 269, 270, 271, 367, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 389, 390], "assum": [2, 3, 6, 27, 40, 47, 50, 51, 63, 65, 67, 68, 69, 71, 72, 78, 87, 103, 107, 123, 129, 143, 146, 156, 166, 167, 174, 180, 184, 186, 188, 198, 219, 223, 248, 272, 283, 288, 300, 309, 320, 321, 322, 323, 325, 326, 327, 328, 331, 371, 373, 374, 382, 385], "lead": [2, 3, 4, 8, 10, 12, 23, 27, 33, 37, 42, 45, 50, 51, 63, 86, 101, 102, 103, 106, 108, 109, 180, 220, 238, 245, 246, 371, 374, 383, 384, 385, 387, 389], "leav": [2, 25, 27, 29, 33, 35, 36, 40, 41, 43, 45, 46, 103, 194, 202, 371, 378, 387], "tree": [2, 41, 43, 46, 103, 107, 123, 129, 383, 387], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 91, 101, 102, 103, 104, 106, 107, 108, 109, 123, 129, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 204, 205, 212, 219, 223, 224, 229, 230, 244, 250, 256, 257, 265, 266, 268, 269, 272, 273, 280, 287, 294, 296, 298, 300, 345, 350, 366, 371, 373, 382, 384, 385, 387, 390], "don": [2, 3, 4, 6, 7, 11, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 144, 372, 373, 378, 387, 389, 390], "throw": [2, 37, 41, 43, 46, 103, 107, 123, 129, 192, 390], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 27, 30, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 141, 143, 144, 148, 149, 152, 153, 154, 164, 168, 169, 171, 175, 178, 180, 183, 184, 192, 193, 201, 202, 203, 211, 213, 214, 219, 223, 226, 238, 239, 247, 248, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 331, 339, 345, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "max": [2, 23, 40, 43, 50, 54, 70, 79, 80, 93, 151, 181, 245, 246, 263, 264, 280, 281, 287, 296, 298, 300, 371, 373, 374, 380], "label": [2, 43, 44, 47, 54, 371, 383, 387], "100": [2, 14, 15, 16, 17, 37, 42, 45, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 99, 100, 103, 107, 112, 113, 123, 129, 147, 153, 162, 171, 176, 178, 192, 229, 258, 262, 331, 340, 358, 372, 373, 374, 375, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390], "rb_pytre": 2, "randn": [2, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 95, 143, 162, 198, 206, 207, 211, 213, 214, 217, 218, 221, 222, 227, 228, 229, 233, 236, 237, 239, 250, 251, 252, 253, 256, 257, 265, 266, 268, 271, 272, 273, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314, 347, 366, 387, 389, 390], "c": [2, 3, 6, 7, 27, 41, 43, 45, 46, 50, 51, 66, 162, 182, 221, 222, 372, 387], "zero": [2, 3, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 82, 87, 88, 93, 95, 103, 107, 123, 129, 141, 143, 145, 149, 151, 152, 162, 168, 171, 192, 198, 201, 203, 208, 209, 210, 216, 217, 218, 219, 221, 222, 223, 227, 228, 230, 238, 247, 259, 260, 263, 264, 267, 275, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 317, 374, 387, 389], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 107, 110, 123, 129, 136, 137, 141, 144, 147, 149, 152, 160, 169, 176, 190, 194, 198, 230, 233, 248, 311, 312, 313, 314, 339, 347, 378, 382, 387, 390], "len": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 95, 164, 204, 205, 224, 230, 371, 378, 380, 383, 385, 386, 387, 389], "ambigu": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 91, 103, 107, 123, 129, 141, 148, 166, 180, 183, 184, 186, 188, 192, 268, 367, 371, 375, 385], "deal": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 371, 373, 384, 387], "interpret": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 372], "put": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 117, 118, 130, 131, 190, 338, 362, 366, 372, 373, 374, 375, 383, 385], "solv": [2, 4, 9, 10, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 365, 371, 372, 373, 378, 380, 383, 384, 385, 387], "clear": [2, 3, 11, 27, 33, 34, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 111, 123, 129, 192, 340, 375, 378], "cut": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "distinct": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 141, 377, 382], "view": [2, 3, 8, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 138, 192, 214, 217, 221, 224, 375, 385, 387, 389, 390], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 27, 33, 67, 99, 100, 103, 106, 107, 108, 111, 112, 113, 116, 123, 124, 125, 129, 140, 149, 152, 167, 224, 238, 262, 265, 269, 270, 271, 275, 295, 311, 312, 313, 314, 366, 371, 372, 373, 375, 377, 382, 383, 384, 385, 386, 387, 390], "collate_fn": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 387, 389], "__init__": [2, 3, 7, 103, 119, 136, 138, 141, 149, 152, 168, 203, 214, 217, 221, 226, 273, 280, 282, 287, 293, 298, 300, 302, 303, 368, 385, 390], "major": 2, "worri": [2, 52], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 74, 75, 76, 80, 87, 89, 91, 95, 103, 104, 107, 111, 123, 129, 140, 202, 371, 373, 375, 383, 384, 385, 390], "though": [2, 4, 11, 103, 107, 123, 129, 224, 373, 383, 384], "too": [2, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 47, 53, 55, 56, 103, 107, 123, 129, 161, 180, 220, 245, 246, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 372, 376, 379, 385, 387, 390], "latter": [2, 18, 19, 20, 37, 63, 103, 107, 123, 129, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 297, 360, 361], "inv": [2, 3, 147, 151, 154, 164, 171, 176, 385], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 87, 88, 89, 90, 91, 93, 95, 103, 106, 107, 108, 109, 123, 126, 129, 140, 141, 144, 148, 149, 150, 153, 154, 156, 160, 162, 166, 168, 169, 170, 171, 175, 178, 180, 183, 184, 186, 188, 192, 193, 203, 219, 223, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 265, 266, 267, 268, 269, 270, 276, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 315, 329, 330, 359, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 383, 385, 387, 390], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 52, 53, 55, 56, 72, 103, 107, 123, 129, 151, 154, 175, 182, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 311, 387], "multithread": [2, 3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 120, 121, 378, 387], "thread": [2, 14, 15, 17, 41, 43, 46, 99, 100, 112, 113, 123, 129], "prefetch": [2, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 371, 372, 374, 387], "advis": [2, 11, 64, 379, 390], "benchmark": [2, 3, 9, 100, 112, 113], "techniqu": [2, 8, 123, 129, 372, 378, 387], "real": [2, 5, 67, 269, 367, 374, 385], "life": [2, 153], "adopt": [2, 3, 5, 371, 390], "throughput": [2, 9, 113, 371], "constant": [2, 11, 28, 144, 162, 179, 368, 371, 373, 374, 390], "throughout": [2, 3, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 373, 383, 390], "further": [2, 3, 5, 24, 371, 373, 375], "refin": [2, 67, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309], "coupl": [2, 374, 376, 377, 385, 387], "get": [2, 3, 4, 6, 7, 8, 9, 27, 33, 41, 42, 43, 45, 46, 61, 63, 67, 74, 75, 80, 87, 88, 89, 91, 93, 95, 103, 104, 107, 123, 129, 138, 143, 145, 149, 151, 152, 160, 162, 167, 179, 180, 182, 184, 190, 250, 259, 260, 265, 266, 269, 276, 311, 312, 313, 314, 315, 331, 335, 366, 370, 371, 372, 373, 374, 381, 383, 384, 385, 387, 388, 389, 390], "first_elt": 2, "128": [2, 61, 63, 67, 88, 99, 100, 112, 113, 208, 211, 372, 374, 380, 383, 385, 386, 387], "wa": [2, 3, 5, 7, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 103, 107, 123, 129, 184, 194, 202, 221, 279, 281, 292, 294, 297, 299, 301, 317, 367, 372, 373, 375, 376, 382, 383, 387, 389], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 29, 30, 33, 37, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 136, 137, 140, 141, 144, 145, 149, 150, 151, 152, 159, 162, 168, 169, 171, 174, 178, 180, 181, 182, 190, 192, 198, 201, 202, 204, 205, 207, 208, 209, 210, 211, 214, 216, 219, 224, 227, 228, 229, 230, 233, 236, 239, 250, 251, 252, 253, 256, 257, 259, 260, 262, 263, 264, 265, 266, 268, 271, 273, 276, 295, 329, 358, 366, 368, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 145], "larger": [2, 4, 219, 223, 286, 293, 389], "volum": 2, "due": [2, 3, 5, 23, 377, 386, 387, 390], "serialis": [2, 41, 43, 46], "memorymappedtensor": [2, 30, 41, 43, 48, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 333, 378, 386], "well": [2, 3, 8, 11, 21, 23, 37, 42, 44, 45, 50, 51, 80, 85, 89, 96, 103, 107, 123, 129, 184, 192, 207, 221, 240, 241, 295, 302, 315, 371, 372, 374, 375, 376, 377, 379, 386, 387, 389, 390], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 125, 129, 130, 131, 149, 150, 152, 174, 177, 179, 185, 192, 203, 221, 268, 269, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 338, 366, 371, 373, 374, 378, 383], "file": [2, 6, 7, 8, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 72, 130, 330, 331, 333, 368, 370, 372, 383, 387, 388, 390], "locat": [2, 7, 41, 43, 46, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 153, 162, 173, 220, 233, 245, 246, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 371, 372, 373, 379, 383, 384, 387], "improv": [2, 4, 11, 157, 279, 367, 383, 384, 387], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 123, 129, 373, 383, 387], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 111, 123, 129, 138, 144, 171, 174, 181, 190, 192, 202, 259, 260, 265, 269, 294, 295, 297, 371, 372, 374, 375, 377, 379, 387, 390], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 53, 55, 56, 80, 151, 221, 222, 286, 374, 378, 387], "sharabl": [2, 123, 129], "collabor": [2, 67], "rather": [2, 4, 91, 169, 371, 372, 373, 375, 377, 383, 384, 387], "incur": [2, 99, 100, 112, 113], "transmiss": 2, "overhead": [2, 99, 100, 112, 113, 123, 129], "subclass": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 82, 103, 107, 123, 129, 139, 140, 183, 189, 194, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 268, 269, 270, 272, 275, 295, 297, 372, 374, 378, 385, 387], "instanti": [2, 3, 14, 15, 21, 41, 42, 43, 45, 46, 50, 51, 79, 80, 111, 140, 183, 230, 329, 371, 372, 376, 377, 379, 383, 384, 385, 387, 390], "content": [2, 8, 16, 27, 33, 41, 42, 43, 45, 46, 50, 51, 86, 103, 106, 107, 108, 120, 123, 129, 168, 204, 205, 224, 229, 230, 265, 295, 373, 385, 389], "map": [2, 3, 8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 78, 79, 80, 103, 107, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 132, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 164, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 198, 214, 233, 250, 251, 252, 253, 257, 265, 266, 268, 269, 271, 272, 273, 274, 300, 309, 344, 364, 366, 367, 371, 372, 373, 374, 376, 377, 386, 389], "writer": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 80, 82, 83, 87, 93, 94, 98, 373, 387], "tensordictroundrobinwrit": [2, 82], "goe": [2, 4, 124, 125, 371, 373, 383, 384, 390], "prioritizedsampl": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 283, 288, 309, 371, 387], "access": [2, 3, 7, 8, 11, 37, 42, 64, 66, 103, 107, 123, 129, 166, 186, 192, 362, 365, 371, 375, 383, 384, 385, 387], "show": [2, 11, 37, 103, 107, 123, 129, 192, 230, 331, 366, 371, 373, 374, 383, 384, 385, 387, 389], "tensordictreplaybuff": [2, 42, 45, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 143, 144, 345, 358, 364, 371, 372, 374, 387], "mp": [2, 18, 19, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 104, 190], "def": [2, 3, 12, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 129, 136, 138, 140, 141, 149, 152, 168, 184, 192, 203, 214, 217, 218, 221, 222, 226, 262, 265, 273, 280, 282, 287, 293, 295, 298, 300, 302, 303, 329, 368, 371, 372, 382, 383, 384, 385, 387, 389, 390], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 114, 115, 123, 129, 138, 141, 143, 145, 149, 150, 151, 152, 159, 160, 162, 171, 174, 180, 182, 184, 190, 193, 201, 203, 213, 214, 219, 223, 225, 226, 238, 239, 247, 250, 251, 252, 253, 256, 257, 259, 260, 263, 264, 265, 266, 268, 271, 273, 309, 312, 313, 314, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 339, 347, 366, 367, 371, 374, 384, 385, 389, 390], "__name__": [2, 3, 14, 15, 22, 104, 329, 372, 389], "__main__": [2, 3, 14, 15, 22, 104, 329, 389], "21": [2, 67, 68, 88, 123, 124, 125, 129, 370, 372, 373, 380, 382, 385, 388], "proc": 2, "target": [2, 4, 8, 21, 24, 37, 103, 104, 107, 123, 129, 179, 183, 192, 268, 269, 279, 280, 281, 282, 283, 285, 287, 288, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 311, 312, 313, 314, 315, 351, 357, 358, 367, 368, 374, 380, 383, 385], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 80, 82, 87, 88, 89, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 138, 139, 148, 166, 168, 177, 180, 183, 184, 185, 187, 188, 192, 203, 204, 205, 213, 219, 223, 224, 225, 226, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 338, 341, 345, 348, 362, 372, 390], "join": [2, 104, 364, 372, 373, 383], "now": [2, 3, 7, 42, 123, 144, 230, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 390], "20": [2, 54, 68, 87, 88, 93, 103, 107, 111, 123, 129, 179, 192, 216, 217, 218, 221, 222, 256, 339, 370, 371, 372, 373, 374, 378, 383, 384, 385, 387, 388, 389, 390], "_data": [2, 385], "It": [2, 3, 4, 7, 23, 37, 44, 47, 50, 52, 54, 63, 69, 82, 85, 93, 98, 103, 107, 109, 119, 120, 123, 124, 125, 129, 130, 131, 141, 143, 153, 160, 162, 167, 179, 184, 189, 192, 194, 207, 209, 215, 229, 230, 238, 240, 241, 247, 248, 254, 258, 259, 262, 263, 264, 267, 269, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 303, 309, 310, 311, 329, 338, 344, 365, 366, 367, 371, 372, 374, 375, 383, 384, 385, 386, 387, 389, 390], "difficult": [2, 4, 123, 379], "pai": [2, 8, 371, 374], "word": [2, 3, 11, 47, 61, 63, 65, 67, 68, 69, 295, 371, 378, 385, 390], "1m": [2, 61, 67, 351, 371, 373, 374, 386], "doe": [2, 3, 18, 41, 42, 43, 46, 50, 54, 61, 63, 67, 71, 72, 78, 79, 80, 87, 89, 91, 98, 103, 107, 117, 118, 123, 129, 130, 131, 190, 211, 217, 218, 219, 221, 222, 223, 231, 248, 256, 270, 271, 279, 281, 288, 294, 297, 310, 348, 366, 368, 371, 372, 373, 374, 375, 378, 383, 385, 387, 390], "howev": [2, 3, 5, 7, 37, 103, 107, 123, 129, 144, 174, 179, 184, 192, 279, 281, 294, 297, 299, 300, 366, 371, 372, 374, 377, 385, 387, 390], "capac": [2, 42, 45, 50, 51, 74, 75, 79, 87, 95, 373, 378], "There": [2, 10, 82, 219, 223, 366, 368, 373, 374, 376, 378, 383, 384, 385, 387, 390], "circumv": 2, "account": [2, 74, 75, 95, 106, 108, 140, 144, 227, 228, 366, 372, 374, 387, 390], "save": [2, 3, 8, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 82, 89, 90, 91, 95, 96, 103, 107, 123, 129, 189, 192, 330, 331, 333, 338, 348, 368, 378, 379, 380, 383, 384], "convent": [2, 3, 61, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 130, 131, 367, 371, 374, 383, 384, 385], "overridden": [2, 3, 61, 64, 65, 67, 68, 69, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 311, 313, 314, 374, 383], "dim_extend": [2, 42, 45, 50, 51], "obtain": [2, 7, 47, 61, 103, 107, 123, 129, 143, 166, 179, 188, 203, 238, 345, 371, 373, 375, 376, 377, 383, 384], "counterpart": 2, "desir": [2, 3, 11, 37, 103, 107, 123, 129, 139, 141, 148, 162, 164, 166, 167, 180, 183, 184, 186, 188, 192, 199, 200, 204, 205, 224, 230, 250, 257, 258, 265, 266, 267, 268, 269, 366, 371, 383, 384, 385, 387], "diversifi": 2, "offer": [2, 3, 7, 99, 100, 103, 107, 112, 113, 117, 118, 123, 129, 329, 366, 371, 372, 375, 377, 378, 383, 385, 387, 390], "accomplish": [2, 194, 375], "anoth": [2, 3, 8, 67, 80, 87, 103, 106, 107, 108, 111, 123, 129, 141, 149, 150, 152, 180, 183, 224, 265, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 366, 367, 371, 373, 374, 376, 377, 382, 383, 384, 385, 390], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 64, 144, 194, 280, 285, 286, 293, 302, 338, 368, 375, 386, 387, 389], "docstr": [2, 37, 103, 107, 123, 129, 192, 375, 376], "extens": [2, 42, 45, 50, 51, 88, 368, 387], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 125, 129, 182, 184, 192, 214, 217, 221, 258, 279, 288, 297, 365, 368, 372, 378, 382, 387], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 103, 107, 123, 129, 149, 152, 190, 192, 202, 217, 219, 221, 223, 263, 264, 265, 269, 288, 372, 376, 382, 383, 384, 390], "happi": 2, "concaten": [2, 8, 14, 15, 21, 35, 36, 67, 144, 145, 162, 183, 221, 224, 271, 371, 372, 376, 383, 384, 385, 387, 390], "schedul": [2, 4, 7, 47, 344, 373, 385], "transformedenv": [2, 3, 11, 37, 103, 104, 107, 123, 129, 137, 138, 141, 144, 147, 148, 149, 152, 153, 154, 156, 159, 160, 161, 162, 164, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 183, 190, 192, 219, 223, 262, 331, 371, 372, 373, 374, 375, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "stepcount": [2, 37, 103, 107, 117, 118, 123, 129, 130, 131, 183, 192, 371, 372, 373, 374, 375, 380, 383, 384, 389], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 93, 103, 104, 107, 109, 123, 129, 137, 140, 141, 144, 147, 148, 153, 159, 160, 162, 164, 169, 170, 171, 174, 176, 179, 180, 181, 183, 184, 190, 192, 219, 223, 262, 329, 331, 358, 364, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386, 387, 389, 390], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 144, 171, 364, 378, 387], "cartpol": [2, 3, 11, 30, 37, 48, 101, 102, 103, 107, 123, 129, 140, 141, 144, 174, 179, 190, 192, 262, 329, 372, 374, 376, 378, 379, 380, 387, 390], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 63, 65, 93, 103, 104, 106, 107, 108, 112, 113, 120, 123, 129, 140, 141, 144, 147, 154, 159, 160, 162, 169, 171, 174, 176, 178, 179, 180, 181, 183, 190, 192, 219, 223, 262, 306, 320, 321, 322, 323, 325, 326, 327, 328, 329, 366, 372, 374, 375, 376, 377, 378, 379, 380, 385, 387, 389, 390], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 99, 100, 103, 107, 112, 113, 119, 123, 124, 125, 129, 137, 138, 141, 144, 149, 152, 160, 168, 171, 193, 203, 214, 226, 239, 241, 250, 257, 265, 266, 280, 283, 285, 298, 300, 302, 303, 358, 366, 371, 372, 373, 374, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390], "8": [2, 3, 6, 7, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 87, 88, 99, 100, 101, 102, 103, 107, 123, 129, 137, 140, 179, 204, 205, 207, 208, 216, 224, 251, 252, 253, 265, 268, 271, 293, 370, 371, 372, 373, 376, 378, 383, 384, 385, 386, 387, 388, 389, 390], "traj_kei": [2, 80, 87, 88, 387], "truncated_kei": [2, 80, 87, 88, 171, 178], "strict_length": [2, 61, 67, 80, 87, 88, 331], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 37, 42, 45, 48, 51, 52, 74, 75, 79, 80, 87, 88, 95, 103, 107, 123, 129, 166, 171, 174, 184, 188, 192, 218, 222, 233, 239, 258, 262, 265, 267, 268, 269, 311, 312, 313, 314, 339, 351, 371, 372, 373, 374, 376, 377, 378, 379, 380, 383, 384, 385, 387, 389, 390], "enumer": [2, 14, 15, 16, 21, 30, 37, 45, 48, 51, 88, 103, 107, 123, 129, 192, 304, 367, 371, 372, 373, 374, 380, 383, 387, 389], "break": [2, 5, 14, 15, 16, 21, 37, 45, 51, 61, 64, 65, 67, 68, 69, 70, 80, 87, 88, 93, 103, 107, 123, 129, 141, 144, 171, 190, 192, 331, 372, 378, 380, 387, 389], "step_count": [2, 14, 15, 16, 37, 103, 107, 112, 113, 123, 129, 178, 192, 373, 374, 375, 380, 389], "32": [2, 22, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 127, 128, 130, 131, 204, 205, 206, 207, 208, 210, 211, 216, 224, 229, 230, 234, 235, 237, 238, 247, 309, 329, 371, 372, 374, 376, 377, 385, 386, 387, 389, 390], "33": [2, 27, 37, 82, 103, 107, 123, 129, 192, 204, 205, 224, 372, 385, 386], "34": [2, 204, 205, 224, 372, 373, 384, 385], "35": [2, 204, 205, 224, 372, 385], "36": [2, 372, 385, 386], "37": [2, 143, 370, 372, 385, 388, 390], "38": [2, 7, 370, 372, 385, 388, 389], "39": [2, 65, 112, 113, 370, 372, 374, 385, 386, 387, 388], "40": [2, 112, 113, 370, 371, 372, 373, 374, 383, 384, 385, 388], "41": [2, 372, 384, 385], "11": [2, 10, 23, 29, 40, 54, 74, 75, 79, 88, 95, 104, 137, 182, 192, 203, 226, 370, 371, 372, 373, 383, 385, 387, 388], "12": [2, 10, 68, 74, 75, 88, 95, 112, 113, 123, 127, 128, 129, 192, 370, 371, 372, 373, 377, 383, 384, 385, 386, 387, 388], "13": [2, 5, 12, 87, 88, 126, 189, 192, 370, 371, 372, 374, 379, 384, 385, 387, 388], "14": [2, 6, 12, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88, 103, 107, 123, 129, 162, 192, 372, 373, 383, 385, 387], "15": [2, 23, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 103, 107, 123, 129, 192, 256, 263, 264, 289, 371, 372, 373, 374, 385, 387], "16": [2, 3, 37, 68, 80, 88, 99, 100, 103, 107, 112, 113, 123, 129, 144, 192, 371, 372, 373, 374, 383, 385, 386, 387], "17": [2, 11, 68, 88, 107, 123, 137, 192, 371, 372, 373, 383, 385], "could": [2, 3, 4, 6, 23, 372, 373, 379, 383, 384, 386, 390], "sai": [2, 37, 103, 107, 123, 129, 192, 229, 383, 386, 390], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 27, 29, 33, 36, 40, 76, 80, 87, 88, 103, 106, 107, 108, 111, 123, 129, 149, 152, 167, 174, 266, 372, 373, 374, 383, 384, 385], "handl": [2, 3, 21, 37, 103, 107, 123, 129, 189, 190, 192, 223, 224, 348, 360, 361, 371, 372, 373, 375, 377, 384, 387], "suggest": [2, 309, 371, 384], "serialenv": [2, 3, 103, 107, 123, 180, 192, 262, 364, 389, 390], "squeez": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 140, 141, 144, 177, 179, 204, 205, 242, 243, 371, 385, 387], "6": [2, 3, 7, 14, 15, 16, 17, 23, 37, 45, 61, 68, 69, 80, 88, 101, 102, 107, 123, 127, 128, 137, 140, 162, 164, 179, 204, 205, 207, 208, 209, 212, 216, 218, 224, 229, 230, 234, 244, 262, 265, 273, 370, 371, 372, 378, 383, 384, 385, 387, 388, 389], "5": [2, 3, 14, 15, 23, 25, 27, 33, 35, 36, 37, 42, 45, 50, 51, 61, 82, 87, 88, 93, 103, 104, 107, 112, 113, 117, 118, 120, 123, 127, 128, 129, 130, 131, 137, 140, 141, 143, 171, 178, 179, 192, 203, 204, 205, 207, 208, 213, 214, 215, 216, 217, 220, 221, 224, 226, 229, 230, 234, 239, 245, 246, 256, 257, 262, 266, 272, 294, 297, 299, 302, 303, 329, 366, 370, 371, 372, 376, 378, 380, 383, 384, 385, 387, 388, 389, 390], "7": [2, 3, 6, 10, 29, 37, 40, 42, 45, 50, 80, 88, 103, 107, 117, 118, 123, 129, 137, 140, 179, 203, 204, 205, 208, 224, 226, 229, 317, 370, 371, 372, 374, 378, 383, 384, 385, 387, 388, 389], "9": [2, 3, 7, 23, 37, 42, 45, 50, 68, 69, 80, 88, 93, 101, 102, 116, 124, 125, 137, 140, 179, 190, 192, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 304, 309, 367, 370, 371, 372, 373, 375, 378, 382, 383, 384, 385, 386, 387, 388], "18": [2, 68, 88, 127, 128, 130, 131, 192, 230, 370, 371, 372, 373, 374, 384, 385, 386, 388], "19": [2, 68, 87, 88, 93, 192, 370, 371, 372, 373, 374, 383, 385, 388], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 64, 123, 129, 183, 185, 230, 367, 368, 371, 372, 384, 387, 389], "congruent": 2, "custom": [2, 3, 5, 37, 103, 107, 123, 129, 186, 192, 229, 230, 272, 288, 297, 304, 362, 366, 371, 372, 373, 374, 376, 377, 379, 383, 384], "name": [2, 3, 6, 7, 12, 16, 37, 41, 43, 46, 54, 61, 64, 66, 69, 70, 99, 101, 103, 107, 112, 116, 117, 118, 120, 123, 124, 125, 126, 129, 130, 131, 132, 151, 154, 169, 174, 175, 178, 184, 186, 189, 192, 202, 219, 223, 257, 266, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 311, 313, 314, 315, 329, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 368, 371, 372, 373, 374, 377, 379, 383, 384, 385, 390], "randomcroptensordict": [2, 371], "unlik": [2, 86, 107, 117, 118, 130, 131, 262, 288, 297, 331, 372, 376, 378, 389], "stop": [2, 3, 16, 21, 47, 69, 80, 87, 88, 103, 107, 123, 129, 373, 378, 383, 384, 389, 390], "signal": [2, 3, 14, 15, 16, 17, 23, 61, 63, 65, 67, 68, 69, 80, 87, 88, 93, 107, 117, 118, 130, 131, 144, 153, 178, 181, 202, 367, 371, 373, 383, 384, 387, 390], "disk": [2, 3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 348, 368, 371, 372, 374, 378, 379, 387], "dump": [2, 3, 11, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 91, 95, 329, 330, 331, 379, 380, 383], "load": [2, 6, 7, 14, 15, 16, 17, 30, 37, 41, 42, 43, 45, 46, 47, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 90, 91, 95, 96, 102, 103, 107, 123, 129, 136, 190, 192, 362, 368, 371, 373, 387], "json": 2, "metadata": [2, 61, 63, 302, 373, 375, 377, 378, 383, 384, 390], "anticip": [2, 149, 152], "compli": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 67], "back": [2, 24, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 53, 55, 56, 63, 189, 194, 250, 257, 258, 265, 266, 267, 268, 269, 373, 383, 384, 385, 387], "exact": [2, 3, 23, 123, 221], "statu": [2, 3, 103], "prioriti": [2, 4, 42, 50, 51, 74, 75, 76, 79, 80, 89, 91, 95, 282, 283, 285, 286, 287, 288, 293, 298, 300, 302, 303, 309, 368, 371, 372, 387], "heap": 2, "under": [2, 3, 4, 21, 37, 47, 61, 63, 64, 65, 67, 68, 69, 101, 102, 103, 106, 107, 108, 109, 123, 126, 129, 192, 250, 257, 258, 265, 266, 267, 268, 269, 295, 311, 312, 313, 314, 315, 331, 367, 371, 372, 376, 383, 385, 390], "hood": [2, 21, 61, 103, 107, 123, 129, 385], "naiv": [2, 186, 375], "just": [2, 3, 4, 12, 91, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 129, 140, 147, 202, 230, 339, 366, 368, 371, 372, 373, 374, 375, 376, 378, 383, 384, 385, 387, 389, 390], "public": [2, 66, 90, 166, 188], "serializ": 2, "consum": [2, 86, 88, 262, 372, 373, 378, 384, 387], "much": [2, 8, 11, 14, 15, 17, 42, 50, 67, 79, 80, 123, 129, 294, 297, 373, 375, 379, 383, 384, 385, 387, 390], "duplic": [2, 37, 86, 103, 107, 123, 129, 192, 283, 288, 295, 309], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 30, 37, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 201, 206, 207, 208, 209, 210, 211, 214, 219, 223, 229, 234, 235, 237, 239, 240, 250, 251, 252, 253, 256, 257, 259, 260, 262, 263, 264, 265, 266, 273, 274, 279, 280, 281, 282, 283, 285, 286, 287, 290, 293, 294, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 329, 331, 358, 366, 368, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 389, 390], "plu": [2, 14, 15, 17, 47, 123, 129, 385], "enabl": [2, 7, 8, 63, 74, 75, 86, 95, 141, 219, 223, 262, 263, 264, 329, 331, 344, 373, 375, 383, 384, 385, 387], "three": [2, 25, 29, 35, 36, 40, 70, 366, 368, 373, 375, 376, 383, 384, 385, 387, 390], "flatstoragecheckpoint": 2, "discard": [2, 3, 54, 63, 65, 107, 186, 201, 330, 387, 390], "compress": 2, "At": [2, 225, 259, 372, 373, 374, 378, 382, 385, 386], "correct": [2, 4, 41, 43, 46, 103, 107, 123, 129, 160, 351, 373, 374], "addit": [2, 3, 4, 37, 63, 103, 107, 123, 129, 130, 148, 166, 180, 183, 184, 186, 188, 192, 217, 254, 255, 256, 262, 268, 278, 295, 311, 329, 367, 371, 372, 375, 383, 384, 387], "nestedstoragecheckpoint": 2, "represent": [2, 33, 34, 37, 103, 107, 123, 129, 166, 186, 188, 192, 371, 385, 386, 390], "appar": [2, 3, 341], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 71, 72, 78, 103, 106, 107, 108, 123, 129, 137, 147, 151, 198, 211, 214, 229, 235, 239, 250, 254, 255, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 276, 283, 285, 286, 287, 302, 303, 309, 366, 372, 373, 374, 375, 376, 377, 383, 384, 385, 389, 390], "assumpt": [2, 3, 385, 387], "accur": [2, 7, 63, 69, 372, 385, 387], "truncat": [2, 3, 14, 15, 16, 17, 30, 32, 37, 38, 44, 48, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 87, 88, 101, 102, 103, 106, 107, 108, 117, 118, 123, 124, 125, 129, 130, 131, 137, 153, 154, 161, 168, 171, 178, 184, 192, 202, 219, 223, 246, 262, 317, 371, 373, 374, 375, 376, 378, 379, 382, 383, 386, 387, 389, 390], "marl": [2, 116, 132, 144, 181, 229, 375, 383, 384], "extra": [2, 10, 37, 103, 107, 123, 129, 144, 190, 192, 201, 338, 366, 373, 374, 387], "fail": [2, 7, 22, 27, 33, 123, 138, 194], "concret": [2, 371, 373], "set_se": [2, 3, 14, 15, 16, 17, 21, 30, 37, 48, 99, 100, 103, 107, 112, 113, 119, 123, 129, 140, 162, 169, 174, 179, 181, 184, 192, 378, 380, 385, 389, 390], "manual_se": [2, 3, 30, 42, 45, 48, 50, 51, 64, 68, 69, 87, 88, 99, 100, 103, 107, 123, 129, 138, 140, 151, 162, 171, 174, 179, 181, 192, 227, 228, 236, 250, 258, 259, 260, 263, 264, 272, 279, 280, 282, 286, 293, 300, 378, 380, 383, 384, 385, 389, 390], "200": [2, 14, 15, 16, 21, 30, 37, 48, 61, 103, 106, 107, 108, 123, 129, 130, 131, 171, 192, 207, 208, 215, 240, 241, 329, 331, 371, 374, 378, 380, 385, 387], "22": [2, 67, 87, 88, 189, 372, 374, 383, 385], "rb_test": 2, "_storag": [2, 386, 387], "max_siz": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 89, 93, 95, 373, 378], "102": [2, 385], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 41, 43, 46, 120, 211, 227, 228, 229, 278, 329, 371, 373, 383, 384], "state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 129, 184, 190, 192, 300, 362, 368, 371, 372, 390], "load_state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 129, 184, 190, 192, 300, 368, 371], "drawback": 2, "struggl": 2, "big": [2, 373, 378, 387, 390], "sequenti": [2, 9, 37, 103, 107, 123, 129, 143, 160, 192, 270, 271, 276, 297, 302, 366, 373, 374, 376, 384, 385, 386, 390], "known": [2, 3, 5, 7, 8, 107, 318, 319, 371, 372, 375], "seamless": [2, 224], "integr": [2, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 210, 219, 223, 226, 268, 366, 375, 376, 378, 383, 384, 385, 386], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 371, 372, 377], "essenti": [2, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 372, 375, 383, 385, 387], "understand": [2, 3, 8, 371, 372, 375, 376, 383, 384], "purpos": [2, 3, 7, 11, 103, 107, 123, 129, 144, 217, 279, 281, 294, 297, 299, 358, 371, 373, 374, 377, 379, 383, 384, 386, 390], "guid": [2, 11, 124, 125, 127, 128, 179, 365, 371, 384], "explan": [2, 37, 103, 107, 123, 129, 192], "effect": [2, 3, 27, 37, 42, 45, 50, 51, 61, 67, 80, 82, 85, 87, 88, 103, 107, 123, 129, 140, 144, 184, 192, 348, 371, 376, 383, 387, 390], "realm": [2, 376], "As": [2, 3, 4, 37, 61, 103, 107, 116, 123, 124, 125, 129, 171, 269, 311, 366, 371, 372, 373, 374, 375, 377, 378, 383, 384, 385, 386, 387, 389, 390], "practition": 2, "often": [2, 3, 8, 292, 348, 371, 372, 375, 377, 385, 387, 390], "encount": [2, 4, 67, 262, 365, 372, 376, 385], "situat": [2, 117, 118], "sometim": [2, 3, 374, 390], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 64, 65, 68, 69, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 117, 118, 121, 122, 126, 130, 131, 217, 218, 219, 221, 222, 223, 226, 251, 252, 253, 295, 298, 368, 372], "immedi": [2, 27, 33, 37, 103, 107, 123, 129, 192, 310, 383, 384], "199": [2, 385], "info": [2, 3, 14, 15, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 85, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 186, 189, 191, 338, 375, 380, 383, 384, 387], "glanc": [2, 375], "seem": [2, 371, 374, 375], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 47, 103, 107, 116, 123, 124, 125, 129, 144, 167, 217, 219, 221, 223, 247, 251, 252, 253, 274, 366, 372, 374, 375, 383], "less": [2, 120, 248, 360, 361, 367, 373, 374, 387, 389], "omit": [2, 343, 373, 377, 385, 387], "proper": [2, 3, 4, 6, 7, 311, 312, 313, 314, 372, 373, 383, 384, 387, 390], "imposs": [2, 3, 93, 194, 279, 281, 294, 297, 299], "determin": [2, 42, 50, 63, 79, 80, 103, 107, 123, 129, 130, 131, 166, 188, 229, 263, 264, 372, 376, 383, 384], "complic": [2, 385, 387, 390], "matter": [2, 11, 28, 378], "inconsist": [2, 390], "miss": [2, 3, 4, 6, 7, 12, 27, 37, 103, 107, 123, 129, 184, 192, 201, 270, 271, 300, 365, 371, 374], "behavior": [2, 4, 37, 103, 107, 123, 129, 184, 192, 286, 293, 302, 374, 384, 385], "primari": [2, 378], "elimin": [2, 3, 375], "upon": [2, 3, 8, 383, 385], "canon": 2, "definit": [2, 40, 89, 229], "markov": [2, 3, 375, 390], "decis": [2, 3, 206, 237, 256, 284, 296, 374, 375, 376, 383, 384, 387, 390], "mdp": [2, 375, 385], "context": [2, 3, 5, 8, 37, 103, 104, 107, 122, 123, 129, 180, 185, 192, 230, 231, 256, 307, 308, 311, 312, 313, 314, 316, 324, 331, 344, 366, 367, 371, 372, 373, 383, 384, 385, 386, 387], "condit": [2, 54, 179, 190, 257, 258, 262, 266, 267, 278, 371, 383, 385, 387], "complet": [2, 7, 9, 86, 103, 106, 107, 108, 123, 129, 144, 178, 365, 367, 371, 373, 375, 382], "termin": [2, 3, 7, 14, 15, 16, 17, 30, 32, 37, 38, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 101, 102, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 127, 128, 129, 130, 131, 137, 140, 141, 153, 168, 192, 202, 203, 219, 223, 226, 262, 270, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 371, 372, 373, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "reward": [2, 3, 14, 15, 16, 28, 30, 32, 37, 38, 41, 46, 47, 48, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 137, 138, 141, 142, 147, 148, 149, 150, 152, 153, 154, 160, 164, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 183, 184, 185, 187, 188, 190, 192, 198, 201, 203, 219, 226, 256, 262, 274, 279, 280, 282, 283, 285, 286, 287, 290, 293, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 341, 342, 344, 346, 362, 367, 368, 371, 372, 373, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "imit": [2, 3], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 52, 53, 55, 56, 67, 103, 104, 107, 110, 113, 123, 129, 192, 204, 205, 224, 230, 367, 368, 371, 372, 373, 374, 375, 383, 384, 385, 387], "stateless": [2, 3, 103, 107, 123, 129, 141, 183, 295, 329, 371, 375, 385, 390], "simul": [2, 3, 5, 7, 8, 99, 100, 109, 112, 113, 126, 130, 131, 135, 203, 226, 366, 371, 373, 375, 379, 383, 384], "furthermor": [2, 383, 384], "certain": [2, 4, 18, 19, 20, 21, 37, 54, 103, 107, 123, 129, 136, 157, 178, 184, 192, 218, 222, 259, 294, 366, 371, 372, 373, 380, 383, 384, 390], "composit": [2, 3, 27, 33, 85, 91, 98, 103, 107, 123, 129, 265, 373, 376, 385], "accommod": [2, 3, 375, 376], "uniform": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 53, 55, 56, 79, 80, 383], "unambigu": 2, "distinguish": [2, 117, 118, 130, 131], "happen": [2, 3, 103, 107, 123, 129, 255, 372, 377, 378, 379, 386, 390], "limit": [2, 47, 103, 107, 119, 123, 129, 144, 160, 279, 281, 294, 297, 299, 371, 372, 374, 383, 384, 385], "everyth": [2, 372, 373, 374, 379, 380], "belong": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 67, 189, 190, 366, 371, 378, 384], "rule": [2, 123, 149, 152, 269, 366, 373], "field": [2, 3, 14, 15, 16, 17, 23, 27, 30, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 141, 149, 152, 153, 154, 164, 168, 169, 171, 175, 178, 180, 184, 192, 201, 203, 213, 214, 219, 223, 226, 238, 239, 247, 250, 251, 252, 253, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 271, 273, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 352, 365, 366, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "taken": [2, 3, 25, 29, 35, 36, 40, 103, 107, 123, 129, 137, 170, 227, 228, 260, 367, 371, 373, 374, 376, 383, 384, 385], "is_shar": [2, 3, 14, 15, 16, 23, 27, 30, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 137, 141, 149, 152, 153, 154, 164, 168, 169, 171, 175, 178, 180, 190, 201, 203, 213, 214, 219, 223, 226, 238, 239, 247, 250, 251, 252, 253, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 271, 273, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 366, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "brought": [2, 373, 374, 376], "step_mdp": [2, 3, 103, 107, 123, 129, 219, 223, 364, 374, 375, 385, 389, 390], "count": [2, 3, 37, 103, 104, 178, 263, 264, 344, 348, 351, 371, 372, 373, 374, 387, 390], "trigger": [2, 7], "partial": [2, 3, 103, 107, 123, 129, 143, 144, 179, 180, 181, 265, 348, 374], "turn": [2, 18, 19, 20, 21, 41, 43, 46, 158, 185, 189, 257, 329, 344, 367, 371, 372, 374, 376, 385, 386], "retain": 2, "regard": [2, 63, 69, 214, 258, 279, 288, 297, 371, 373, 385], "copi": [2, 3, 12, 18, 19, 20, 21, 37, 41, 43, 46, 47, 54, 67, 103, 107, 123, 129, 140, 169, 179, 184, 190, 192, 201, 219, 223, 256, 295, 300, 329, 367, 371, 372, 374, 375, 383, 387], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 331, 367, 379, 387, 390], "eas": [2, 3, 383, 384], "flat": [2, 93], "manner": [2, 107, 166, 186, 366, 371, 372, 373, 378, 382, 385, 387], "ted2flat": [2, 30, 364], "flat2t": [2, 364], "unflatten": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 141, 262], "deseri": [2, 3, 30], "posit": [2, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 107, 123, 129, 156, 157, 177, 178, 181, 184, 185, 192, 233, 300, 367, 373, 383, 384, 385, 387], "both": [2, 3, 7, 37, 42, 45, 50, 51, 67, 103, 104, 106, 107, 117, 118, 123, 124, 125, 129, 137, 144, 169, 184, 192, 202, 204, 205, 219, 222, 223, 224, 229, 230, 251, 252, 253, 258, 267, 279, 281, 282, 286, 287, 293, 294, 295, 297, 298, 299, 300, 302, 303, 344, 366, 371, 373, 375, 377, 383, 384, 385, 386, 387, 390], "mark": [2, 3, 16, 69, 103, 107, 123, 129, 219, 223, 311, 313, 314, 378, 387], "identifi": [2, 44], "abov": [2, 3, 7, 37, 103, 107, 123, 129, 192, 220, 245, 246, 278, 367, 368, 371, 373, 375, 376, 383, 384, 385, 390], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 101, 102, 103, 106, 107, 108, 109, 113, 117, 118, 119, 122, 123, 124, 125, 126, 129, 130, 131, 141, 142, 144, 147, 148, 149, 150, 152, 154, 160, 162, 166, 168, 169, 174, 175, 178, 181, 183, 184, 186, 188, 189, 192, 194, 202, 204, 205, 206, 207, 208, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 229, 230, 233, 239, 248, 250, 251, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 329, 331, 339, 366, 367, 371, 372, 373, 374, 375, 376, 379, 382, 383, 384, 385, 386, 389, 390], "typic": [2, 3, 4, 8, 37, 103, 107, 123, 129, 153, 179, 192, 265, 280, 295, 297, 300, 366, 367, 368, 373, 375, 377, 378, 383, 384, 385], "adjust": [2, 11, 371, 383, 384, 385], "grumodul": [2, 143, 276], "lstmmodul": [2, 374], "skip": [2, 3, 37, 61, 103, 107, 123, 129, 157, 184, 192, 194, 265, 269, 295, 300, 311, 312, 313, 314, 330, 331, 341, 344, 371, 372, 385], "accumul": [2, 8, 192], "upcom": [2, 295, 320, 321, 322, 323, 325, 326, 327, 328, 371], "popular": [2, 3, 366, 374, 377, 384], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 192, 364, 372], "shift": [2, 30, 32, 37, 38, 48, 71, 72, 78, 275, 311, 312, 313, 314, 373], "approxim": [2, 384, 390], "would": [2, 3, 11, 37, 47, 103, 107, 123, 129, 192, 217, 219, 221, 223, 224, 229, 368, 372, 373, 374, 375, 377, 378, 385, 387, 389, 390], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 144, 211, 237, 279, 284, 296, 297, 339, 362, 373, 374, 384, 387], "2x": 2, "small": [2, 186, 371, 373, 383, 384, 390], "clearer": [2, 376], "lazi": [2, 33, 34, 58, 59, 103, 107, 123, 129, 130, 131, 166, 186, 204, 229, 231, 270, 271, 371, 372, 376, 378, 382, 387, 390], "certainli": 2, "benefici": 2, "welcom": [2, 375], "wrapper": [2, 3, 12, 17, 41, 43, 46, 47, 50, 51, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 189, 193, 233, 248, 255, 256, 260, 262, 264, 269, 274, 311, 336, 337, 338, 362, 364, 373, 374, 375, 383, 384, 386, 390], "around": [2, 5, 7, 17, 50, 51, 119, 193, 262, 269, 311, 371, 372, 384, 390], "selecttransform": [2, 103, 107, 123, 129], "excludetransform": [2, 68, 175, 387], "promptli": 2, "virtual": [2, 3, 106], "instal": [2, 3, 5, 10, 18, 19, 20, 63, 66, 103, 107, 123, 124, 125, 127, 128, 129, 333, 348, 365, 371, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 390], "respons": [2, 3, 8, 80, 87, 103, 107, 123, 129, 348, 377, 378, 390], "d4rl": [2, 63, 69], "repositori": [2, 7, 64, 65, 66, 69, 131, 383, 384], "wheel": [2, 373], "publish": 2, "openml": [2, 66, 122], "scikit": [2, 66, 122], "panda": [2, 66], "raw": [2, 3, 4, 47, 220, 245, 246, 372, 378, 385], "go": [2, 3, 7, 116, 123, 167, 171, 256, 317, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "natur": [2, 3, 371, 374, 376, 377, 378, 387], "modifi": [2, 3, 7, 8, 27, 33, 37, 54, 103, 107, 123, 129, 141, 148, 156, 160, 166, 180, 183, 184, 186, 188, 192, 256, 263, 264, 268, 351, 371, 372, 373, 375, 383, 384, 385], "fly": [2, 190, 294, 367, 373, 385, 387, 390], "least": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 103, 147, 379, 390], "pre": [2, 7, 22, 37, 54, 67, 75, 103, 107, 123, 129, 166, 186, 188, 192, 390], "appli": [2, 3, 4, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 138, 140, 141, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 165, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 183, 184, 186, 187, 189, 190, 192, 217, 221, 245, 257, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 296, 297, 298, 299, 300, 302, 303, 311, 329, 343, 368, 371, 372, 373, 378, 383, 385, 389, 390], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 64, 80, 87, 93, 111, 112, 113, 123, 124, 125, 147, 174, 204, 205, 215, 229, 230, 259, 262, 333, 348, 360, 361, 371, 372, 373, 374, 376, 377, 380, 383, 384, 387, 389], "pipelin": [2, 3, 7, 366, 373], "replac": [2, 3, 6, 7, 27, 33, 37, 61, 67, 80, 87, 88, 140, 151, 153, 201, 259, 366, 383, 387], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 82, 103, 107, 123, 129, 140, 171, 184, 192, 254, 255, 260, 262, 263, 264, 346, 368, 372, 373, 374, 376, 379, 385, 387, 390], "produc": [2, 137, 140, 141, 204, 205, 224, 230, 236, 251, 253, 256, 331, 373, 374, 375, 376, 378, 387, 390], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 71, 86, 103, 107, 123, 124, 125, 129, 184, 192, 300, 373], "download": [2, 7, 10, 61, 63, 64, 65, 67, 68, 69, 111, 166, 188, 331, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 372, 383, 384, 385], "robosetexperiencereplai": [2, 87, 88], "fk1": [2, 68], "v4": [2, 68, 107, 123, 137, 170, 320, 321, 322, 323, 325, 326, 327, 328, 371, 373, 386, 390], "expert": [2, 68], "fk1_microopenrandom_v2d": [2, 68], "func": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 191], "obs_norm": 2, "norm": [2, 4, 8, 99, 100, 348, 371, 372, 373, 383, 384, 385], "num_work": [2, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 120, 123, 129, 371, 372], "os": [2, 43, 54, 70, 372], "cpu_count": [2, 43, 54, 70], "num_chunk": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69], "1000": [2, 4, 45, 79, 87, 88, 103, 107, 123, 129, 144, 190, 254, 259, 263, 264, 265, 269, 292, 371, 372, 373, 374, 376, 378, 380, 386, 387], "mp_start_method": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 123, 129, 372, 389], "fork": [2, 5, 61, 62, 63, 64, 65, 66, 67, 68, 69, 371, 372, 373, 374, 383, 384, 386, 389], "recreat": [2, 385], "customari": [2, 366], "moreov": [2, 3], "fine": [2, 3, 24, 80, 87, 103, 107, 123, 129, 141, 160, 378, 386], "grain": [2, 3, 80, 87, 103, 107, 123, 129, 141], "nomenclatur": 2, "compact": [2, 48, 71, 72, 78], "propos": [2, 144, 153, 225, 292, 301, 366, 374, 387], "replaybufferensembl": [2, 61, 85, 91, 98], "primit": [2, 3, 4, 67, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303], "individu": [2, 4, 18, 19, 20, 21, 37, 54, 80, 82, 93, 103, 107, 117, 118, 123, 129, 192, 371, 384], "dummi": [2, 3, 329, 371, 378, 390], "semant": [2, 33, 34, 106, 108, 366], "ident": [2, 3, 14, 15, 16, 37, 41, 43, 46, 87, 103, 106, 107, 108, 120, 123, 129, 153, 229, 230, 311, 312, 313, 314, 360, 361, 372, 375, 383, 384], "another_kei": [2, 82], "renam": [2, 41, 43, 46, 82, 169, 171, 201, 371], "resiz": [2, 3, 69, 82, 144, 372, 374, 375, 387, 390], "imag": [2, 3, 4, 7, 11, 67, 146, 166, 182, 188, 224, 329, 331, 371, 372, 375, 379, 384, 386, 390], "comops": 2, "totensorimag": [2, 3, 69, 82, 144, 170, 372, 374, 387, 389, 390], "renametransform": [2, 82, 103, 107, 123, 129], "rb0": [2, 82], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 129, 134, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 156, 158, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 179, 181, 182, 183, 184, 186, 188, 190, 203, 213, 219, 223, 226, 238, 247, 248, 250, 251, 252, 253, 256, 257, 262, 265, 266, 268, 269, 271, 272, 273, 276, 279, 280, 281, 282, 283, 285, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 330, 331, 358, 366, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 386, 387, 389, 390], "pixel": [2, 3, 7, 27, 69, 82, 101, 102, 106, 108, 109, 126, 144, 146, 153, 156, 158, 162, 164, 166, 170, 182, 186, 188, 207, 234, 235, 329, 331, 366, 371, 372, 374, 379, 383, 386, 387, 389, 390], "rb1": [2, 82], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 129, 134, 142, 143, 144, 145, 146, 147, 149, 150, 152, 156, 158, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 179, 181, 182, 183, 186, 188, 190, 203, 213, 214, 219, 223, 226, 238, 239, 247, 248, 250, 251, 252, 253, 256, 258, 262, 265, 266, 267, 268, 269, 271, 272, 273, 276, 279, 280, 281, 286, 287, 293, 294, 297, 298, 299, 300, 302, 309, 311, 312, 313, 314, 329, 331, 344, 358, 366, 371, 372, 373, 374, 376, 380, 382, 383, 384, 385, 386, 387, 389, 390], "pixels33": [2, 82], "data0": [2, 82], "244": [2, 82, 166, 188, 370, 384, 385, 388], "data1": [2, 82], "_": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 104, 111, 130, 131, 145, 149, 151, 152, 160, 162, 169, 182, 190, 192, 250, 268, 273, 278, 279, 280, 282, 286, 287, 293, 297, 298, 300, 302, 303, 311, 312, 313, 314, 333, 371, 372, 373, 374, 380, 383, 384, 385, 387, 389], "rang": [2, 3, 4, 8, 12, 29, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 103, 104, 107, 117, 118, 123, 129, 171, 182, 190, 192, 218, 222, 294, 302, 303, 367, 368, 371, 373, 374, 377, 378, 380, 383, 384, 385, 387, 389], "parent": [2, 3, 21, 27, 32, 33, 53, 62, 82, 91, 98, 103, 107, 123, 129, 137, 141, 144, 145, 148, 150, 153, 156, 157, 162, 166, 174, 178, 179, 180, 181, 183, 185, 186, 192, 219, 223, 251, 276, 295, 297, 315, 329, 331, 371, 378, 385, 389, 390], "basic": [2, 119, 366, 373, 377, 378, 380, 383, 390], "properti": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 129, 140, 183, 184, 190, 192, 212, 220, 231, 236, 244, 245, 246, 262, 295, 300, 376, 378, 385, 387], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 55, 56, 90, 96, 103, 107, 117, 118, 119, 122, 123, 124, 125, 129, 130, 131, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 201, 202, 204, 205, 207, 208, 209, 210, 213, 214, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 232, 239, 240, 241, 242, 243, 245, 248, 250, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 342, 346, 351, 358, 366, 367, 368, 371, 372, 373, 374, 375, 383, 384, 385, 389, 390], "send": [2, 3, 8, 338, 389], "receiv": [2, 3, 37, 47, 103, 107, 123, 129, 183, 184, 192, 224, 317, 367, 371, 373, 377, 382, 385], "spawn": [2, 3, 4, 18, 22, 111, 120, 123, 129, 372, 383, 384], "check_env_spec": [2, 3, 107, 123, 137, 168, 329, 364, 373, 383, 384, 385], "saniti": [2, 3, 7, 194, 373], "utmost": 2, "commonli": [2, 80, 87, 88, 390], "emploi": [2, 232], "languag": [2, 24, 47], "scarc": 2, "address": [2, 387], "subdomain": 2, "facilit": [2, 3, 7, 165, 166, 180, 186, 188, 251, 252, 253, 366, 371, 374, 376, 385], "extern": [2, 3, 149, 152, 383, 390], "token": [2, 43, 44, 47, 52, 54, 70], "dm": [3, 371, 390], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 54, 67, 84, 90, 93, 94, 96, 97, 99, 100, 103, 107, 111, 112, 113, 119, 120, 121, 123, 129, 130, 171, 180, 186, 187, 229, 251, 261, 279, 280, 282, 283, 285, 286, 287, 289, 293, 297, 298, 299, 300, 302, 303, 338, 348, 366, 367, 368, 371, 372, 374, 375, 376, 377, 379, 383, 384, 385, 387, 390], "goal": [3, 4, 61, 62, 63, 64, 65, 66, 67, 68, 69, 179, 371, 372, 373, 374, 384, 385], "abl": [3, 116, 124, 125, 371, 373, 374, 376, 382, 383, 384, 385, 387, 389], "experi": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 79, 80, 194, 333, 334, 335, 336, 337, 338, 365, 372, 373, 378, 379, 383, 384, 387], "box": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 106, 108], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 103, 104, 107, 117, 118, 123, 124, 125, 127, 128, 129, 144, 147, 153, 159, 160, 162, 164, 169, 171, 174, 180, 183, 189, 190, 192, 329, 358, 371, 372, 373, 374, 382, 384, 386, 387, 389, 390], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 99, 100, 103, 107, 119, 123, 129, 148, 151, 153, 160, 166, 180, 183, 184, 186, 188, 192, 203, 204, 205, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 233, 238, 239, 247, 250, 251, 252, 253, 256, 257, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 358, 366, 367, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 386, 389], "organis": [3, 68, 103, 107, 123, 129, 184, 372], "arbitrari": [3, 40, 45, 103, 107, 123, 129, 140, 366, 371, 372, 385, 387], "structur": [3, 7, 41, 42, 43, 45, 46, 47, 50, 51, 54, 93, 103, 107, 123, 129, 149, 152, 202, 229, 263, 264, 311, 312, 313, 314, 315, 364, 367, 371, 373, 374, 375, 378, 383, 384, 385, 386], "attribut": [3, 4, 24, 28, 30, 37, 41, 43, 46, 48, 54, 67, 103, 106, 107, 108, 123, 129, 137, 153, 166, 186, 190, 192, 219, 223, 269, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 371, 374, 385], "live": [3, 13, 14, 15, 16, 17, 19, 20, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 129, 153, 192], "actual": [3, 4, 7, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 103, 107, 123, 129, 189, 351, 367, 371, 373, 383, 384, 385], "retriev": [3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 103, 106, 107, 108, 123, 129, 145, 150, 153, 162, 201, 203, 204, 226, 262, 265, 269, 272, 276, 279, 280, 281, 283, 294, 297, 298, 300, 302, 303, 309, 311, 312, 313, 314, 362, 368, 372, 373, 376, 385, 390], "care": [3, 8, 103, 107, 123, 129, 183, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 331, 371, 373, 383, 384, 385, 387], "parametr": [3, 232, 269, 280, 286, 293, 300, 371, 373], "hardwar": 3, "observation_spec": [3, 103, 107, 119, 123, 129, 138, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 156, 158, 159, 160, 162, 164, 166, 168, 170, 174, 176, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 192, 203, 219, 223, 226, 352, 358, 371, 373, 377, 382, 383, 384, 385, 390], "compositespec": [3, 33, 34, 58, 103, 105, 107, 119, 123, 129, 138, 141, 149, 150, 151, 152, 154, 160, 168, 169, 175, 178, 180, 183, 192, 198, 202, 203, 226, 250, 254, 255, 265, 271, 272, 276, 364, 371, 373, 374, 383, 384, 385, 390], "pair": [3, 37, 41, 43, 46, 63, 101, 102, 103, 107, 123, 129, 171, 180, 219, 251, 265, 269, 295, 311, 312, 313, 314, 315, 366, 367, 371, 372, 373, 376, 377, 382, 385, 390], "state_spec": [3, 103, 107, 119, 123, 129, 138, 203, 226, 385, 390], "reward_spec": [3, 103, 107, 119, 123, 129, 138, 141, 142, 147, 148, 149, 150, 152, 168, 172, 173, 174, 176, 183, 185, 192, 203, 226, 373, 383, 384, 385, 390], "done_spec": [3, 103, 107, 123, 129, 149, 150, 152, 153, 168, 183, 192, 202, 383, 384, 385, 390], "flag": [3, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 129, 130, 131, 263, 264, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 366, 383, 384, 385, 386], "input_spec": [3, 103, 107, 119, 123, 129, 137, 141, 148, 149, 150, 151, 162, 164, 168, 169, 174, 175, 178, 179, 180, 183, 184, 185, 187, 192, 373, 385], "full_action_spec": [3, 103, 107, 123, 129, 137, 203, 226, 373, 383, 384], "full_state_spec": [3, 103, 107, 123, 129, 137, 203, 226, 373], "lock": [3, 27, 33, 41, 43, 46, 103, 107, 123, 129, 141, 180, 190, 385], "output_spec": [3, 103, 107, 123, 129, 141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 184, 192, 385], "full_observation_spec": [3, 103, 107, 123, 129, 203, 226], "full_reward_spec": [3, 103, 107, 123, 129, 141, 150, 168, 383, 384], "full_done_spec": [3, 103, 107, 123, 129, 141, 150, 168, 202, 383, 384], "carri": [3, 21, 54, 103, 107, 123, 129, 180, 295, 372, 374, 383, 384, 385, 387], "nontensorspec": [3, 364], "importantli": [3, 265, 269], "action_s": 3, "help": [3, 4, 37, 103, 107, 123, 129, 153, 192, 279, 281, 294, 297, 299, 365, 367, 371, 372, 373, 374, 383, 384], "With": [3, 112, 113, 116, 179, 368, 372, 382, 383, 384, 387, 390], "necessarili": [3, 103, 107, 123, 129, 390], "present": [3, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 106, 107, 123, 129, 154, 171, 175, 180, 184, 192, 201, 202, 206, 207, 208, 209, 210, 216, 219, 221, 223, 232, 237, 262, 263, 264, 268, 269, 270, 271, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 362, 368, 371, 380, 382, 383, 384, 387, 389], "0s": [3, 61, 67, 180, 374], "step_and_maybe_reset": [3, 103, 107, 123, 129, 375], "done_kei": [3, 23, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 129, 140, 144, 153, 171, 178, 192, 201, 383, 384], "assign": [3, 4, 14, 15, 17, 37, 41, 43, 46, 103, 107, 123, 129, 184, 192, 282, 283, 285, 300, 373, 376, 383, 384, 387], "_reset": [3, 103, 107, 119, 123, 129, 138, 140, 141, 144, 149, 152, 168, 202, 203, 226, 383], "data_": [3, 103, 107, 123, 129], "append": [3, 8, 11, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 123, 129, 140, 147, 148, 171, 180, 184, 189, 218, 219, 222, 223, 257, 266, 371, 372, 373, 374, 383, 384, 385, 386, 387, 389], "seed": [3, 14, 15, 16, 17, 21, 68, 103, 107, 119, 123, 124, 125, 129, 130, 131, 138, 141, 149, 152, 168, 184, 194, 329, 348, 383], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 200, 206, 215, 234, 241, 250, 260, 265, 268, 269, 272, 280, 295, 344, 366, 371, 372, 374, 376, 377, 380, 383, 385, 390], "preced": [3, 37, 374], "risk": [3, 167], "overlap": [3, 50, 93], "reproduc": [3, 144, 194, 371, 373, 384], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 44, 47, 52, 54, 70, 74, 75, 76, 79, 80, 95, 103, 107, 123, 129, 151, 172, 178, 179, 181, 244, 245, 246, 272, 280, 286, 287, 293, 295, 296, 300, 331, 345, 371, 372, 373, 374, 376, 383, 384, 387], "max_step": [3, 11, 93, 103, 107, 117, 118, 119, 123, 129, 130, 131, 178, 192, 329, 375, 376, 377, 379, 380, 383, 384, 389, 390], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 47, 99, 100, 103, 107, 119, 123, 129, 143, 160, 214, 219, 223, 226, 238, 239, 247, 248, 251, 252, 253, 255, 256, 257, 260, 262, 264, 265, 266, 267, 268, 270, 271, 272, 274, 276, 280, 282, 286, 287, 289, 290, 291, 293, 295, 298, 300, 302, 303, 309, 310, 311, 312, 313, 314, 344, 358, 364, 371, 373, 374, 377, 380, 382, 383, 384, 385, 386, 390], "trail": [3, 190], "treat": [3, 37, 376, 377], "figur": [3, 371, 373, 374, 384, 385, 390], "brief": [3, 373, 375, 377, 387], "deliveri": 3, "design": [3, 37, 40, 85, 91, 98, 103, 107, 117, 118, 123, 129, 137, 144, 167, 184, 192, 256, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 385, 387, 390], "metaclass": 3, "everi": [3, 8, 27, 33, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 89, 103, 107, 123, 129, 178, 179, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 230, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 348, 368, 371, 372, 373, 374, 375, 376, 383, 384, 385], "flank": [3, 374], "dual": 3, "strictli": [3, 8, 37, 103, 107, 123, 129, 184, 192, 300, 371, 373], "refer": [3, 7, 8, 9, 11, 21, 24, 37, 47, 103, 106, 107, 108, 123, 129, 184, 190, 192, 203, 214, 215, 226, 227, 228, 229, 234, 235, 240, 241, 258, 279, 288, 289, 290, 291, 297, 300, 311, 316, 324, 370, 371, 373, 376, 377, 378, 379, 383, 384, 387, 390], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 79, 80, 103, 107, 123, 129, 162, 166, 171, 173, 186, 188, 190, 192, 201, 205, 212, 227, 228, 229, 230, 231, 232, 236, 238, 244, 245, 246, 247, 268, 285, 287, 292, 298, 301, 324, 342, 344, 345, 353, 354, 356, 358, 359, 360, 361, 362], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 117, 118, 132, 371], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 67, 80, 87, 88, 364], "adjac": [3, 23, 156, 262], "reli": [3, 11, 23, 180, 217, 218, 219, 221, 222, 223, 279, 367, 371, 373, 376, 378, 385, 390], "junction": 3, "inittrack": [3, 219, 223, 262, 371, 374], "tutori": [3, 363, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 390], "scratch": [3, 8, 372, 385], "gym3": 3, "envpool": [3, 120, 121], "interfac": [3, 110, 122, 224, 231, 366, 371, 373, 379, 385, 387], "simultan": [3, 20, 120, 121, 123, 129, 385], "advantag": [3, 8, 216, 279, 281, 294, 297, 299, 311, 312, 313, 314, 315, 316, 318, 320, 322, 324, 325, 327, 367, 368, 371, 372, 373, 374, 384, 385, 390], "scale": [3, 4, 24, 63, 103, 107, 123, 129, 144, 160, 162, 173, 179, 182, 190, 215, 220, 233, 240, 241, 245, 246, 251, 252, 253, 265, 269, 271, 279, 280, 293, 297, 298, 299, 300, 346, 352, 362, 366, 371, 372, 373, 374, 376, 384, 389], "varieti": [3, 11], "inherit": [3, 103, 107, 123, 129, 225, 295, 368, 373, 383, 384], "Of": [3, 7, 365, 385, 390], "cours": [3, 4, 365, 385, 390], "from_pixel": [3, 11, 99, 100, 101, 102, 106, 108, 109, 112, 113, 126, 144, 170, 329, 331, 371, 372, 374, 375, 379, 380, 386, 387, 389, 390], "81": [3, 372, 385], "simpli": [3, 6, 41, 43, 46, 54, 91, 93, 98, 154, 175, 189, 295, 366, 367, 371, 373, 377, 383, 384, 390], "d": [3, 42, 45, 50, 51, 64, 66, 68, 69, 70, 79, 80, 217, 221, 265, 269, 389], "privat": [3, 103, 107, 123, 129, 189, 385, 390], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 35, 36, 40, 41, 43, 46, 61, 88, 93, 281, 294, 297, 339, 341, 344, 348, 351, 352, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 47, 82, 85, 162, 173, 220, 231, 240, 245, 246, 309, 366, 376, 377, 383, 385, 387], "inner": [3, 103, 107, 123, 129, 151, 368, 372, 373, 384, 390], "logic": [3, 383], "nevertheless": [3, 373, 375, 387], "kept": [3, 23, 86, 88, 151, 175, 183, 194, 201, 220, 245, 246, 377, 383], "mind": [3, 61, 67, 80, 87, 88, 103, 107, 123, 129, 383, 384], "desig": 3, "wherev": 3, "expos": [3, 126, 149, 152, 270, 372], "modif": [3, 5, 27, 33, 37, 103, 107, 123, 129, 156, 192, 202, 295, 373, 385], "lost": [3, 8, 189], "eras": [3, 80, 87, 103, 107, 123, 129, 184], "intern": [3, 369], "face": [3, 5, 8, 9, 375, 390], "NOT": [3, 71, 72, 78, 167], "outsid": [3, 16, 379, 383, 384, 385], "right": [3, 6, 7, 23, 47, 80, 87, 372, 373, 384, 385, 390], "preliminari": 3, "warranti": 3, "affect": [3, 8, 37, 103, 107, 123, 129, 183, 184, 192, 194, 311, 312, 313, 314, 383], "preclud": 3, "presenc": [3, 377], "annihil": 3, "reason": [3, 4, 8, 37, 67, 103, 107, 123, 124, 125, 129, 166, 186, 192, 223, 367, 371, 372, 373, 377, 378, 383, 385, 387], "advanc": [3, 21, 42, 45, 50, 51, 107, 375, 378, 387], "explicitli": [3, 4, 71, 72, 78, 140, 265, 372, 374, 378, 383, 384, 387], "superse": 3, "pettingzoowrapp": [3, 364], "group": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 103, 107, 116, 117, 118, 123, 124, 125, 129, 130, 131, 132, 366, 372, 376, 378, 384, 387], "associ": [3, 37, 41, 43, 46, 103, 107, 123, 129, 192, 240, 362, 371, 387], "environemtn": 3, "__not__": [3, 265], "constrain": [3, 160, 219, 223, 297], "li": 3, "fact": [3, 7, 8, 371, 373, 375, 383, 384, 385, 386, 387, 390], "predict": [3, 37, 47, 213, 215, 225, 226, 256, 274, 279, 281, 285, 288, 290, 291, 294, 297, 299, 310, 366, 371, 372, 377], "know": [3, 4, 9, 42, 45, 50, 51, 106, 108, 254, 255, 298, 344, 371, 372, 373, 374, 375, 376, 377, 378, 383, 384, 387], "meaning": 3, "perfectli": [3, 368, 371, 385], "meaningless": 3, "val": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 377, 389], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 55, 56, 61, 103, 107, 123, 129, 140, 362, 366], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 140, 141, 144, 145, 149, 151, 152, 153, 154, 156, 160, 161, 162, 164, 166, 168, 169, 171, 173, 174, 175, 178, 180, 182, 184, 185, 186, 188, 190, 192, 194, 201, 202, 203, 204, 205, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 245, 246, 250, 257, 258, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 309, 311, 312, 313, 314, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 338, 341, 342, 344, 345, 346, 348, 362, 372, 373, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "500": [3, 371, 372, 385, 389, 390], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 61, 64, 123, 129], "bottleneck": [3, 8, 80, 87, 88], "great": [3, 7, 8, 383, 389], "speedup": [3, 8, 383, 390], "precis": [3, 149, 152, 201, 218, 222, 371, 373], "misspecifi": 3, "caus": [3, 7, 8, 74, 75, 95, 103, 107, 111, 123, 129, 167, 390], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 129, 132, 144, 155, 161, 171, 179, 180, 181, 184, 192, 194, 254, 255, 259, 260, 263, 264, 300, 371, 373, 383, 384, 387, 390], "mismatch": [3, 372], "subprocess": [3, 14, 15, 17, 104, 123, 129], "multithreadedenv": [3, 364], "underneath": 3, "higher": [3, 4, 80, 147, 272, 371, 372, 373, 383, 387, 390], "flexibl": [3, 9, 120, 304, 367, 368, 371, 387, 390], "cover": [3, 106, 108, 365, 373, 375, 378, 379, 385, 389], "type": [3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 69, 70, 82, 103, 107, 116, 119, 122, 123, 124, 125, 129, 141, 148, 149, 150, 153, 154, 160, 166, 168, 169, 175, 178, 180, 183, 184, 186, 188, 190, 192, 196, 200, 204, 205, 224, 229, 230, 232, 238, 247, 254, 255, 257, 265, 268, 269, 276, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 305, 309, 317, 329, 360, 364, 366, 371, 372, 373, 378, 383, 384, 385, 387, 390], "atari": [3, 4, 61, 144, 331, 379, 390], "classic": [3, 119, 125, 372], "benchmark_batched_env": 3, "seamlessli": [3, 385], "infrastructur": [3, 383, 384], "act": [3, 4, 87, 88, 124, 125, 184, 213, 230, 280, 282, 293, 298, 300, 302, 303, 374, 383, 384, 387], "world": [3, 5, 119, 274, 290, 379, 383, 384, 385, 390], "paradigm": [3, 17, 384], "decpodp": 3, "game": [3, 4, 5, 61, 117, 118, 331, 379], "thank": [3, 371, 375], "carrier": [3, 373, 374, 375, 387], "particular": [3, 37, 54, 63, 64, 103, 107, 123, 129, 184, 192, 367, 368, 372, 374, 375, 382, 384, 387], "thu": [3, 294, 384], "let": [3, 6, 7, 11, 23, 37, 42, 45, 50, 51, 52, 103, 107, 123, 124, 125, 129, 144, 192, 219, 223, 229, 230, 257, 344, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "vma": [3, 130, 131, 329, 383, 384], "robot": [3, 5, 7, 67, 166, 186, 188, 384], "vmasenv": [3, 329, 364, 383, 384], "balanc": [3, 101, 102, 371, 372], "num_env": [3, 21, 106, 110, 121, 130, 131, 329, 383, 384], "n_agent": [3, 130, 131, 229, 230, 238, 247, 309, 329, 383, 384], "ground_rew": 3, "pos_rew": [3, 384], "style": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69], "relat": [3, 4, 10, 42, 123, 156, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 372, 380, 385], "vari": [3, 106, 108, 109, 124, 125, 126, 130, 167, 384], "creation": [3, 123, 129, 390], "info_spec": [3, 123], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 25, 40, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 138, 168, 202, 283, 286, 287, 309, 364, 383, 384, 390], "simpl": [3, 9, 37, 40, 103, 107, 123, 129, 192, 207, 262, 269, 283, 285, 295, 299, 311, 366, 367, 371, 372, 373, 375, 376, 377, 383, 384, 387, 390], "prefix": [3, 23, 37, 41, 43, 46, 54, 103, 107, 123, 129, 184, 192, 265, 295, 300, 330, 374, 377, 390], "exactli": [3, 37, 103, 107, 109, 123, 129, 184, 192, 217, 221, 300, 371, 374, 378, 383, 384], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 103, 107, 123, 129, 137, 138, 151, 193, 201, 203, 225, 226, 254, 255, 259, 260, 262, 263, 264, 383, 384], "reward_kei": [3, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 129, 192, 201, 203, 226, 342, 346, 383, 384], "set_kei": [3, 153, 279, 281, 283, 286, 287, 288, 293, 294, 295, 297, 298, 299, 300, 309, 315, 371, 383, 384], "awai": [3, 373, 375, 383, 384], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 129, 178, 269], "full": [3, 103, 107, 123, 129, 219, 223, 258, 339, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "autoresettransform": 3, "invalid": [3, 37, 93, 103, 107, 123, 129, 132, 192, 227, 228], "nan": [3, 140, 189], "auto_reset": [3, 103, 107, 123, 129, 140, 192, 385], "auto_reset_replac": [3, 140], "placehold": [3, 109, 153, 184], "set_gym_backend": [3, 103, 106, 107, 123, 129, 133, 140, 364, 375], "autoresettinggymenv": [3, 140], "_step": [3, 103, 107, 123, 129, 138, 140, 141, 149, 152, 156, 168, 169], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 103, 107, 119, 123, 129, 138, 140, 141, 148, 149, 152, 166, 168, 180, 183, 184, 186, 188, 192, 203, 214, 226, 238, 247, 254, 255, 259, 265, 268, 273, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 368, 371, 385, 389, 390], "super": [3, 119, 138, 140, 141, 149, 152, 168, 203, 214, 226, 273, 280, 282, 287, 293, 298, 300, 302, 303, 371, 385, 389, 390], "td_reset": [3, 140], "exclud": [3, 8, 63, 68, 103, 107, 123, 129, 140, 144, 154, 201, 238, 383, 384, 387], "r": [3, 4, 37, 137, 138, 140, 147, 162, 176, 190, 218, 269, 278, 310, 329, 366, 372, 385, 390], "break_when_any_don": [3, 103, 107, 123, 129, 140, 192, 262, 384], "3633e": [3, 140], "02": [3, 103, 107, 123, 129, 140, 370, 371, 372, 373, 380, 383, 384, 385, 386, 388], "4877e": [3, 140], "01": [3, 140, 162, 263, 264, 275, 281, 294, 297, 370, 371, 372, 374, 384, 385, 386, 388], "2849e": [3, 140], "7584e": [3, 140], "6609e": [3, 140], "6166e": [3, 140], "8366e": [3, 140], "2761e": [3, 140], "5685e": [3, 140], "4102e": [3, 140], "8111e": [3, 140], "9959e": [3, 140], "0865e": [3, 140], "5644e": [3, 140], "2119e": [3, 140], "2542e": [3, 140], "03": [3, 103, 107, 123, 129, 140, 162, 370, 371, 372, 385, 386, 388], "9952e": [3, 140], "4059e": [3, 140], "2094e": [3, 140], "9009e": [3, 140], "5140e": [3, 140], "3554e": [3, 140], "2920e": [3, 140], "7893e": [3, 140], "6429e": [3, 140], "3057e": [3, 140], "2867e": [3, 140], "6963e": [3, 140], "3818e": [3, 140], "2576e": [3, 140], "2679e": [3, 140], "1640e": [3, 140], "00": [3, 99, 100, 140, 370, 371, 372, 373, 374, 383, 384, 385, 386, 388], "6972e": [3, 140], "0212e": [3, 140], "5959e": [3, 140], "4637e": [3, 140], "3121e": [3, 140], "2168e": [3, 140], "5232e": [3, 140], "7704e": [3, 140], "7457e": [3, 140], "4127e": [3, 140], "1064e": [3, 140], "0854e": [3, 140], "5712e": [3, 140], "2189e": [3, 140], "5235e": [3, 140], "8289e": [3, 140], "0009e": [3, 140], "0257e": [3, 140], "8893e": [3, 140], "5872e": [3, 140], "9405e": [3, 140], "7766e": [3, 140], "0403e": [3, 140], "0626e": [3, 140], "2959e": [3, 140], "7263e": [3, 140], "2775e": [3, 140], "9564e": [3, 140], "0411e": [3, 140], "6769e": [3, 140], "6354e": [3, 140], "8698e": [3, 140], "1765e": [3, 140], "6292e": [3, 140], "5375e": [3, 140], "1820e": [3, 140], "7023e": [3, 140], "5836e": [3, 140], "9016e": [3, 140], "4826e": [3, 140], "6191e": [3, 140], "6387e": [3, 140], "8667e": [3, 140], "2056e": [3, 140], "1147e": [3, 140], "5991e": [3, 140], "0278e": [3, 140], "5219e": [3, 140], "3067e": [3, 140], "6617e": [3, 140], "3322e": [3, 140], "2629e": [3, 140], "4599e": [3, 140], "7298e": [3, 140], "5848e": [3, 140], "0148e": [3, 140], "5745e": [3, 140], "6982e": [3, 140], "7877e": [3, 140], "3527e": [3, 140], "7285e": [3, 140], "6668e": [3, 140], "0583e": [3, 140], "6956e": [3, 140], "3962e": [3, 140], "9845e": [3, 140], "5015e": [3, 140], "5903e": [3, 140], "9993e": [3, 140], "9418e": [3, 140], "0196e": [3, 140], "6557e": [3, 140], "2109e": [3, 140], "8997e": [3, 140], "1507e": [3, 140], "7363e": [3, 140], "0310e": [3, 140], "9574e": [3, 140], "8980e": [3, 140], "0090e": [3, 140], "forecast": 3, "awar": [3, 7, 74, 75, 76, 89, 91, 95, 372, 374], "detect": [3, 69], "return_contigu": [3, 103, 107, 123, 129, 194, 382], "unboundedcontinuoustensorspec": [3, 103, 107, 119, 123, 129, 138, 141, 149, 152, 168, 180, 198, 203, 226, 250, 268, 271, 273, 276, 299, 364, 373, 374, 383, 384, 385, 390], "boundedtensorspec": [3, 22, 27, 103, 107, 123, 129, 193, 259, 260, 263, 264, 265, 272, 279, 280, 282, 293, 297, 298, 300, 302, 303, 364, 373, 383, 384, 385, 389, 390], "binarydiscretetensorspec": [3, 138, 283, 286, 287, 309, 364], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 93, 103, 105, 107, 123, 129, 138, 140, 141, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 159, 160, 165, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 183, 184, 189, 190, 192, 201, 202, 203, 219, 223, 225, 226, 254, 255, 256, 258, 259, 262, 263, 264, 267, 268, 269, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 310, 311, 312, 313, 314, 315, 348, 371, 383, 385], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 26, 28, 29, 37, 40, 42, 47, 50, 55, 67, 79, 80, 82, 103, 107, 123, 129, 137, 140, 144, 148, 149, 152, 160, 162, 166, 171, 172, 173, 179, 180, 182, 183, 184, 186, 188, 190, 192, 212, 215, 217, 220, 221, 224, 227, 228, 231, 232, 240, 241, 244, 246, 254, 255, 268, 272, 275, 277, 278, 279, 280, 281, 285, 286, 287, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 346, 371, 372, 387, 390], "_set_se": [3, 138, 141, 149, 152, 168, 385], "lazystackedtensordict": [3, 33, 61, 103, 107, 119, 123, 129, 382], "float32": [3, 14, 15, 16, 27, 30, 41, 42, 43, 46, 47, 48, 50, 51, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 127, 128, 129, 130, 131, 137, 141, 149, 152, 153, 154, 162, 164, 168, 169, 171, 175, 178, 180, 182, 198, 201, 203, 213, 214, 219, 223, 226, 238, 239, 247, 250, 251, 252, 253, 256, 257, 262, 263, 264, 265, 266, 267, 268, 271, 273, 276, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 309, 366, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390], "exclusive_field": [3, 61, 382], "stack_dim": [3, 61, 382], "dramat": 3, "carefulli": [3, 383, 384, 390], "against": [3, 5, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 129, 192, 194, 250, 257, 258, 265, 266, 267, 268, 269, 373, 383, 384], "plain": [3, 8, 375], "larg": [3, 4, 29, 41, 43, 46, 149, 152, 186, 279, 281, 294, 297, 299, 372, 373, 383, 384, 387], "expens": [3, 80, 87, 88, 329, 387], "absent": [3, 27, 33, 63, 103, 107, 123, 129, 184], "torchvis": [3, 11, 166, 188, 333, 383, 389, 390], "base_env": [3, 100, 103, 107, 108, 113, 123, 129, 137, 138, 141, 147, 149, 151, 152, 160, 164, 168, 170, 176, 178, 180, 181, 184, 192, 331, 371, 372, 373, 383, 386, 389, 390], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 129, 136, 139, 141, 148, 153, 180, 184, 192, 204, 205, 224, 278, 329, 353, 354, 360, 361, 362, 372, 387], "bring": [3, 373, 375, 390], "signific": [3, 5, 8, 373, 390], "kind": [3, 45, 53, 201, 377, 383, 387], "consult": 3, "interest": [3, 265, 269, 366, 372, 373, 375, 384, 385, 390], "resize_par": 3, "easi": [3, 5, 11, 61, 66, 101, 102, 103, 107, 112, 113, 123, 129, 254, 255, 259, 260, 263, 264, 366, 367, 371, 372, 373, 384, 386, 387, 390], "graph": [3, 4, 8, 99, 100, 112, 113, 307, 308, 371, 385], "revers": [3, 221], "order": [3, 11, 16, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 88, 103, 107, 123, 129, 145, 149, 152, 164, 184, 192, 250, 257, 268, 270, 271, 273, 279, 280, 282, 286, 287, 293, 297, 298, 299, 300, 302, 303, 372, 383, 384], "chain": [3, 41, 42, 43, 45, 46, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 148, 151, 204, 205, 271, 390], "invers": [3, 4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 144, 149, 152, 154, 162, 171, 192, 277, 286, 293, 385], "in_keys_inv": [3, 134, 147, 149, 150, 152, 162, 163, 164, 168, 169, 171, 176, 183, 371, 382, 385, 390], "append_transform": [3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 134, 137, 143, 166, 180, 184, 186, 190, 329, 371, 374, 383, 385, 387, 389, 390], "doubletofloat": [3, 371, 373, 382], "float64": [3, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 101, 102, 103, 107, 117, 118, 123, 129, 137, 148, 149, 152, 166, 180, 183, 184, 186, 188, 192, 268, 382], "regist": [3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 106, 107, 108, 123, 129, 149, 152, 153, 174, 184, 192, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 329, 331, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 368, 371, 373, 375, 387], "manipul": [3, 4, 8, 101, 102, 166, 186], "third_transform": 3, "unexpect": [3, 37, 103, 107, 123, 129, 192, 390], "behviour": 3, "fortun": [3, 374, 375, 376, 379], "alreadi": [3, 8, 12, 37, 41, 43, 46, 54, 61, 103, 107, 123, 129, 180, 192, 202, 269, 311, 312, 313, 314, 371, 373, 379, 383, 384], "chang": [3, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 74, 75, 76, 80, 86, 87, 89, 91, 95, 103, 107, 123, 129, 141, 148, 149, 150, 152, 154, 160, 168, 169, 175, 178, 183, 184, 190, 192, 221, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 367, 371, 374, 383, 384, 385, 386, 387, 390], "catfram": [3, 262, 372], "hold": [3, 307, 308, 385, 387], "notic": [3, 93, 144, 373, 380, 385], "parenthood": 3, "henc": [3, 42, 167, 202, 229, 366, 371, 373, 383, 384, 385], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 123, 129, 329, 385], "discret": [3, 25, 29, 35, 36, 40, 56, 103, 106, 107, 108, 117, 118, 123, 124, 125, 129, 130, 131, 137, 151, 236, 239, 285, 286, 287, 288, 366, 372, 376, 383, 384, 385, 390], "might": [3, 41, 43, 44, 46, 335, 365, 371, 375, 390], "action_mask": [3, 112, 113, 124, 125, 127, 128, 138], "unavail": [3, 124, 125], "probabl": [3, 4, 8, 47, 82, 85, 212, 214, 217, 219, 221, 223, 224, 227, 228, 236, 245, 246, 259, 265, 269, 366, 372, 376, 389], "categor": [3, 29, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 124, 125, 126, 130, 131, 137, 138, 153, 214, 236, 239, 257, 258, 265, 266, 267, 283, 286, 287, 309, 374], "probabilistictensordictmodul": [3, 160, 269, 270, 389], "tensordictsequenti": [3, 219, 223, 257, 259, 262, 263, 270, 276, 366, 371, 372, 374, 376, 380, 382, 383, 386, 389], "maskedcategor": [3, 228, 364], "linear": [3, 14, 15, 16, 17, 21, 37, 99, 100, 103, 107, 119, 123, 129, 148, 160, 166, 180, 183, 184, 186, 188, 192, 203, 204, 205, 207, 208, 209, 210, 214, 216, 224, 226, 229, 230, 231, 232, 233, 239, 240, 241, 250, 251, 252, 253, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 273, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 358, 366, 372, 382, 386, 389], "in_feat": 3, "out_feat": 3, "logit": [3, 43, 47, 213, 227, 228, 236, 258, 265, 286, 287, 366], "dist": [3, 10, 227, 228, 236, 376], "distribution_class": [3, 160, 251, 252, 253, 256, 265, 269, 271, 279, 280, 286, 287, 293, 297, 298, 299, 300, 366, 371, 373, 376, 383, 384, 389], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 65, 99, 100, 103, 107, 108, 112, 113, 118, 121, 123, 124, 125, 129, 131, 192, 194, 219, 223, 248, 251, 252, 253, 255, 260, 262, 264, 266, 274, 295, 309, 366, 371, 372, 373, 374, 377, 380, 383, 384, 390], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 138, 167, 192], "enviorn": [3, 117, 124, 125, 130, 131], "itself": [3, 37, 103, 107, 123, 129, 133, 140, 192, 295, 302, 373, 375], "ey": 3, "report": [3, 99, 100, 112, 113, 379], "foremost": 3, "callback": [3, 103, 107, 123, 129, 384], "ad": [3, 4, 16, 23, 37, 42, 45, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 103, 107, 123, 129, 174, 184, 192, 231, 232, 263, 264, 279, 281, 283, 288, 294, 297, 300, 309, 372, 374, 376, 383, 387, 390], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 51, 79, 80, 86, 174, 190, 192, 262, 263, 264, 336, 341, 372, 374, 375, 378, 384, 385, 387], "tensordictrecord": [3, 364], "videorecord": [3, 11, 329, 364, 373, 379, 380, 383], "csvlogger": [3, 11, 329, 331, 364, 372, 379, 380, 383], "wandblogg": [3, 364, 379], "tensorboardlogg": [3, 358, 364, 379], "tag": [3, 7, 11, 329, 331, 333, 336, 362, 379, 380, 383], "mp4": [3, 329, 331, 333, 380, 383], "video_format": [3, 329, 331, 333, 380, 383], "whc": 3, "cwh": 3, "exp": [3, 233, 278], "al": [3, 24, 106, 108, 153, 164, 203, 390], "pong": [3, 61, 121, 164, 390], "v5": [3, 106, 108, 121, 153, 164, 390], "cach": [3, 41, 43, 54, 61, 63, 64, 65, 67, 68, 69, 70, 80, 87, 103, 107, 123, 129, 140, 149, 152, 166, 184, 188, 201, 340, 386], "grow": 3, "until": [3, 7, 21, 181, 183, 192, 373, 374, 380, 383, 384], "dumpi": 3, "tediou": [3, 375], "workspac": [3, 103, 107, 123, 129], "pixelrendertransform": [3, 364, 383], "stream": [3, 67], "alik": [3, 329], "envcreat": [3, 16, 22, 123, 129, 329, 358, 359, 362, 364, 371, 372, 389, 390], "render_mod": [3, 329, 385], "rgb_arrai": [3, 329, 383, 384, 385], "uncom": [3, 379], "line": [3, 7, 37, 61, 103, 107, 123, 129, 192, 372, 379, 383, 384, 390], "comment": [3, 368, 372, 389], "pixels_record": [3, 329], "close": [3, 16, 107, 120, 160, 279, 281, 294, 297, 329, 371, 372, 375, 382, 383, 385, 389], "mission": 3, "irrespect": [3, 268, 269], "dmcontrol": [3, 103, 107, 123, 129], "jumanji": [3, 103, 107, 112, 113, 123, 129], "special": [3, 364, 366, 371, 374, 390], "framework": [3, 4, 9, 22, 99, 100, 103, 107, 112, 113, 119, 123, 129, 217, 389, 390], "Its": [3, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 190, 192, 268, 315], "success": [3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 144, 183, 259, 302, 372, 378, 380, 385, 387, 389], "foundat": [3, 5, 124, 125, 373, 384], "inspir": [3, 385], "gone": [3, 4, 5, 262], "hard": [3, 7, 93, 101, 102, 123, 292, 372, 390], "prefer": [3, 14, 15, 17, 20, 23, 24, 42, 45, 50, 51, 167, 175, 297, 302, 345, 366, 373, 383, 384, 387], "maintain": [3, 5, 9, 28, 385], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 372, 373, 374, 378, 383, 384, 385, 387, 390], "decor": [3, 8, 12, 136, 295, 311, 312, 313, 314, 389], "relev": [3, 47, 311, 312, 313, 314, 315, 338, 385], "gym_backend": [3, 136, 364], "env1": [3, 382], "venv": 3, "python3": [3, 6, 7, 10, 390], "site": [3, 6, 7, 68, 136, 390], "env2": [3, 382], "_env": [3, 6, 106, 390], "classic_control": 3, "pendulumenv": [3, 385], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 115, 133], "handi": [3, 103, 107, 123, 129, 379], "side": [3, 4, 390], "v0": [3, 14, 15, 103, 107, 109, 112, 113, 114, 115, 123, 129, 148, 184, 190, 358, 390], "26": [3, 103, 107, 123, 129, 372, 373, 383, 385], "fun": [3, 12, 136, 373, 383, 384], "reveal": 4, "bug": [4, 389], "curv": 4, "exploit": [4, 376], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 160, 383, 384, 386], "coeffici": [4, 24, 28, 47, 160, 384], "bonu": [4, 279, 281, 294, 297], "beta": [4, 42, 50, 79, 80, 286, 293, 294, 371, 372, 387, 389], "reduc": [4, 6, 29, 93, 179, 245, 364, 372, 383], "downstream": [4, 371], "formul": [4, 383, 384], "ob": [4, 8, 23, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 87, 88, 93, 103, 107, 123, 129, 138, 140, 149, 150, 152, 162, 176, 182, 198, 201, 207, 208, 209, 210, 229, 230, 266, 273, 280, 282, 287, 293, 298, 300, 302, 303, 311, 312, 313, 314, 372, 382, 383, 385, 387, 389, 390], "rate": [4, 11, 61, 190, 310, 372, 373, 383, 384], "gradient": [4, 37, 103, 107, 123, 129, 184, 192, 220, 228, 232, 236, 245, 246, 279, 281, 282, 286, 287, 293, 294, 295, 297, 298, 299, 300, 302, 303, 310, 311, 312, 313, 314, 348, 371, 373, 383, 384, 385], "easier": [4, 366, 371], "local": [4, 7, 10, 16, 21, 37, 80, 87, 103, 107, 123, 129, 184, 192, 229, 230, 238, 247, 309, 336, 338, 379, 380, 383, 384], "optima": 4, "sens": [4, 41, 43, 46, 378, 385], "product": [4, 9, 217, 218, 221, 222, 360, 361], "sum": [4, 21, 36, 40, 93, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 126, 143, 174, 227, 228, 245, 247, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 293, 294, 296, 297, 298, 299, 300, 302, 303, 310, 317, 367, 371, 372, 373, 374, 377, 380, 383, 384, 385, 390], "stat": [4, 162, 190, 352, 362, 372, 373], "w": [4, 82, 144, 146, 170, 182, 217, 263, 264, 331, 372, 374, 387], "yield": [4, 16, 21, 37, 103, 107, 123, 129, 192, 295, 371, 377], "insight": 4, "auxiliari": [4, 377], "credit": 4, "futur": [4, 23, 37, 41, 43, 46, 71, 72, 78, 103, 107, 123, 129, 166, 184, 188, 192, 224, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 365, 389], "past": [4, 262, 372, 387], "spars": [4, 374], "intermedi": [4, 14, 15, 143, 219, 223, 258, 371, 386], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 371], "discov": 4, "score": [4, 47], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 389], "select": [4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 117, 118, 124, 125, 130, 131, 138, 140, 141, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 165, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 183, 186, 187, 189, 190, 192, 193, 203, 219, 223, 257, 266, 347, 371, 375, 387], "fall": [4, 63], "explicit": [4, 12, 54, 82, 387], "mechan": [4, 37, 103, 107, 123, 129, 184, 192, 372, 377, 385], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 103, 107, 123, 129, 221, 286, 293, 373, 384], "addition": 4, "timestep": [4, 47, 63, 171, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 383, 384], "realli": 4, "huge": [4, 230, 374], "std": [4, 162, 190, 233, 237, 254, 255, 371, 390], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 374, 375, 377, 378, 379, 380, 381, 382, 386, 387, 388], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 107, 123, 129, 143, 162, 166, 180, 183, 184, 186, 191, 192, 203, 217, 218, 221, 222, 226, 231, 232, 254, 255, 259, 260, 262, 263, 264, 279, 280, 282, 283, 285, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 362, 371, 372, 374, 375, 376, 378, 383, 385, 390], "estim": [4, 61, 80, 87, 88, 153, 160, 207, 245, 251, 252, 253, 279, 280, 281, 282, 283, 285, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 367, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "unseen": 4, "extrins": 4, "wrong": [4, 80, 87], "bonus": 4, "denser": 4, "prior": [4, 241, 290, 384], "freshli": 4, "drop": [4, 86, 88, 201], "meant": [4, 37, 119], "encourag": [4, 123, 371, 372, 387], "measur": [4, 74, 75, 95, 99, 100, 112, 113, 373, 378], "novelti": 4, "revisit": 4, "previous": [4, 373, 390], "diminish": 4, "decreas": [4, 24, 376], "ideal": [4, 162, 385], "down": [4, 14, 15, 16, 17, 374, 375], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 41, 43, 46, 372, 373, 374, 377, 378, 383, 384, 385, 389, 390], "distil": 4, "nois": [4, 191, 232, 249, 263, 264, 298, 302, 303, 344, 362, 371, 383], "exploratori": [4, 279, 281, 294, 297], "misalign": 4, "trade": [4, 376], "unavoid": 4, "divers": [4, 123, 129], "bootstrap": [4, 288, 312, 318, 319, 371, 374], "noisi": [4, 231, 232, 249, 366], "unstabl": [4, 220, 245, 246], "inher": 4, "stochast": [4, 160, 215, 232, 234, 241, 280, 284, 286, 287, 293, 296, 298, 300, 366, 373, 376, 384], "enemi": 4, "pomdp": [4, 387], "loos": [4, 366, 372, 373], "nonexist": 4, "architectur": [4, 211, 377, 383, 384], "sequenc": [4, 14, 15, 16, 17, 24, 27, 33, 35, 36, 42, 44, 45, 47, 52, 54, 67, 70, 73, 82, 83, 85, 91, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 134, 142, 143, 144, 145, 146, 149, 151, 152, 156, 158, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 179, 181, 182, 183, 190, 204, 205, 212, 214, 217, 221, 224, 227, 228, 229, 230, 236, 239, 243, 256, 270, 271, 284, 330, 331, 343, 344, 345, 347, 348, 366, 371, 373, 374, 382, 383, 384, 390], "lstm": [4, 180, 222, 223, 233], "rel": [4, 82, 180, 212, 244, 371, 372, 383, 384, 387], "tend": 4, "stabl": [4, 9, 10, 122], "compens": 4, "descent": [4, 232], "minimum": [4, 123, 129, 172, 215, 233, 244, 245, 246, 272, 275, 278, 280, 287, 295, 296, 300, 339, 371, 373, 380, 383, 384], "manual": [4, 11, 18, 20, 21, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 108, 371, 374, 387], "deviat": [4, 162, 190, 203, 215, 226, 231, 232, 237, 254, 255, 297, 302, 303, 371, 376, 384], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 80, 87, 140, 217, 218, 221, 222, 375, 376, 377, 378, 379, 380], "stabil": [4, 157, 279, 281, 294, 297, 299], "stage": [4, 371, 385], "never": [4, 14, 15, 17, 80, 378], "prevent": [4, 25, 27, 29, 33, 35, 36, 40, 72, 190, 220, 245, 246, 279, 281, 294, 297, 299, 346, 379, 387], "entir": [4, 67, 103, 107, 123, 129, 229, 373, 375, 385, 387], "submit": [4, 106, 141, 365, 389], "system": [4, 5, 72, 373, 383, 384, 385], "adequ": [4, 194, 373, 383, 384], "infeas": 4, "allevi": [4, 366], "prune": 4, "fire": [4, 37, 103, 107, 123, 129, 192], "illeg": 4, "move": [4, 37, 69, 103, 107, 123, 129, 137, 148, 150, 166, 180, 183, 184, 186, 188, 190, 192, 201, 224, 268, 346, 371, 372, 374, 375, 389, 390], "chess": 4, "combin": [4, 31, 183, 302, 372, 379, 387], "grasp": 4, "top": [4, 93, 99, 100, 112, 113, 203, 226, 376], "wherein": 4, "cumul": [4, 174, 179, 203, 317, 373], "q": [4, 9, 103, 107, 123, 129, 207, 208, 209, 210, 213, 214, 216, 238, 239, 247, 253, 258, 266, 267, 280, 282, 283, 285, 286, 287, 288, 292, 293, 298, 300, 302, 303, 309, 364, 371, 377], "flow": [4, 371, 373, 383, 384, 385, 387], "reparameter": [4, 212, 228, 236], "soft": [4, 292, 300, 301, 383], "critic": [4, 8, 251, 261, 279, 281, 282, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 371, 377], "clip": [4, 47, 147, 172, 279, 281, 294, 297, 299, 302, 303, 348, 373, 384, 385], "oppos": [4, 54], "incorrect": 4, "thought": [4, 103, 107, 123, 129], "bound": [4, 21, 26, 27, 37, 103, 107, 123, 129, 147, 161, 190, 192, 240, 241, 250, 257, 258, 264, 265, 266, 267, 268, 269, 272, 302, 303, 366, 371, 372, 373, 383, 390], "region": 4, "squash": [4, 374, 389], "tanh": [4, 204, 205, 217, 218, 220, 221, 222, 224, 230, 244, 245, 246, 272, 373, 376, 383, 384, 385, 386, 389], "prob": [4, 227, 228, 236, 373, 384], "rememb": [4, 383], "remap": 4, "origin": [4, 8, 41, 43, 46, 47, 111, 150, 151, 160, 166, 184, 188, 192, 217, 265, 268, 269, 292, 295, 297, 371, 382, 385, 390], "histor": 5, "ceas": 5, "farama": [5, 65, 114, 115, 124, 125, 373, 385], "best": [5, 9, 111, 219, 223, 383, 384, 387, 389], "gymwrapp": [5, 103, 107, 123, 129, 154, 175, 178, 189, 364, 373, 389, 390], "feel": [5, 365, 380, 389], "free": [5, 7, 149, 152, 279, 290, 297, 368, 373, 380, 384, 389], "gladli": 5, "prepar": [6, 32, 64, 373], "conda": [6, 7, 365], "cmake": 6, "activ": [6, 7, 9, 204, 205, 211, 215, 224, 229, 230, 281, 294, 297, 366, 385, 389], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 64, 365], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 109], "y": [6, 7, 45, 122, 216, 229, 248, 371, 384, 387], "facebookresearch": [6, 64, 109], "subdirectori": 6, "verbos": [6, 380], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 58, 103, 107, 123, 129, 168, 177, 192, 295, 383, 384, 389, 390], "command": [6, 7, 10, 373, 383, 384, 385, 390], "readm": [6, 7, 130], "md": [6, 7], "habitatenv": [6, 364], "_has_habitat": 6, "available_env": [6, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 390], "startswith": [6, 367, 371, 377], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 104, 295, 371], "env_nam": [6, 99, 101, 103, 106, 107, 109, 112, 114, 120, 123, 126, 129, 371, 373, 390], "llvmlite": 6, "config": [6, 7, 166, 188, 206, 211, 237, 352, 353, 354, 356, 359], "var": [6, 7, 37, 103, 107, 123, 129, 184, 192, 295, 300], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 257, 295], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 37, 103, 107, 123, 129, 184, 192, 295, 300, 387], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 103, 372, 380], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 63], "stand": [7, 31, 101, 102, 123, 129, 382, 385], "joint": [7, 372], "contact": [7, 44, 383], "engin": [7, 126, 385], "biomechan": 7, "graphic": 7, "anim": [7, 384], "area": 7, "demand": [7, 379, 390], "fast": [7, 9, 99, 100, 169, 201, 298, 371, 372, 373], "articul": 7, "acquir": [7, 373], "deepmind": [7, 8, 9, 67, 101, 102, 103, 107, 117, 118, 123, 129, 153, 373, 375], "whomev": 7, "licenc": 7, "incorpor": [7, 103, 107, 123, 129, 254, 255, 259, 260, 263, 264, 302, 374, 376, 385], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 365], "tip": [7, 365], "glfw": [7, 371], "osmesa": 7, "egl": 7, "advic": [7, 67, 390], "sudo": [7, 365], "apt": [7, 384], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 251, 252, 253], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 25, 29, 40, 142, 214, 239, 257, 258, 266, 267, 283, 286, 287, 309], "mkdir": 7, "earlier": [7, 371, 373, 374, 383, 384, 387], "roboti": 7, "html": [7, 14, 15, 120, 122], "wget": 7, "mujoco210": 7, "tar": [7, 64], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 123, 129], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 41, 43, 54, 70], "bin": [7, 214, 258, 366], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 210, 265, 269, 371, 373, 387], "nvidia": [7, 111], "older": [7, 12], "hack": [7, 371], "adatp": 7, "script": [7, 64, 194, 358, 362, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "unnot": [7, 167], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 72, 372, 387], "troubleshoot": 7, "gl": 7, "h": [7, 82, 144, 146, 170, 182, 217, 218, 219, 221, 222, 223, 226, 331, 372, 374, 387], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21], "directori": [7, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 74, 336, 338, 368, 371, 376, 379, 383], "devel": 7, "ubuntu": [7, 111], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 372, 374, 382], "libstdc": 7, "glibcxx_3": 7, "29": [7, 372, 383, 385], "compil": [7, 23, 37, 80, 87, 88, 103, 107, 123, 129, 192, 217, 218, 221, 222], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 189, 373, 382], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 33, 37, 103, 107, 123, 129, 161, 184, 192, 300, 390], "job": [7, 18, 19, 20, 22, 45, 387, 389], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 99, 100, 370, 371, 372, 374, 376, 385, 386, 388], "114": [7, 385], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 385, 387], "offscreenopenglcontext": 7, "opengl": [7, 383, 384], "global": [7, 37, 103, 107, 123, 124, 125, 129, 192, 238, 247, 265, 269, 309, 368, 371, 383, 384], "cuda_visible_devic": 7, "id": [7, 23, 47, 80, 82, 87, 88, 103, 106, 107, 123, 129, 263, 264, 298, 334, 338, 378, 387], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 383], "onscreen": 7, "101": [7, 385], "correctli": [7, 37, 103, 107, 123, 129, 192], "lgl": 7, "libegl": 7, "x11": [7, 384], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 368], "n_training_step": 8, "datapoint": [8, 54, 387], "n_data_per_train": 8, "no_grad": [8, 37, 103, 107, 123, 129, 160, 192, 217, 218, 221, 222, 311, 312, 313, 314, 373, 374, 384], "loss_fn": [8, 374, 377, 378, 389], "zero_grad": [8, 37, 103, 107, 123, 129, 192, 368, 371, 373, 374, 377, 380, 383, 384, 385], "backpropag": [8, 99, 100, 112, 113, 123, 279, 280, 281, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 303, 309, 377, 384, 385], "differenti": [8, 54, 99, 100, 160, 302, 311, 312, 313, 314, 374, 376, 377, 383, 384, 385], "denomin": 8, "artifact": 8, "numer": [8, 45, 107, 190, 220, 245, 246, 250, 257, 258, 265, 266, 267, 268, 269, 346, 373, 387, 390], "misconcept": 8, "freed": 8, "appear": [8, 11, 40, 61, 67, 80, 87, 88, 385, 387], "compuat": 8, "fix": [8, 28, 123, 180, 280, 296, 300, 372, 380, 385, 390], "retain_graph": [8, 99, 100], "discuss": [8, 9, 378, 383, 384], "inplac": [8, 37, 41, 43, 46, 103, 107, 123, 129, 192, 371], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 129, 138, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 165, 166, 167, 168, 169, 171, 174, 175, 178, 179, 180, 181, 183, 186, 187, 189, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 237, 238, 240, 241, 243, 247, 248, 254, 255, 256, 258, 259, 262, 263, 264, 265, 267, 268, 269, 272, 273, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 311, 312, 313, 314, 315, 367, 385, 389], "submodul": [8, 37, 103, 107, 123, 129, 133, 180, 192, 219, 223, 276, 295], "param": [8, 37, 47, 103, 107, 119, 123, 129, 141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 192, 212, 214, 244, 256, 265, 268, 271, 295, 305, 308, 311, 312, 313, 314, 315, 371, 380, 383, 384, 385, 386, 389], "grad": [8, 37, 99, 100, 103, 107, 123, 129, 192, 371, 373], "whose": [8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 103, 107, 123, 124, 125, 129, 148, 166, 180, 183, 184, 186, 188, 192, 233, 238, 268], "neg": [8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 50, 79, 80, 144, 156, 167, 185, 289, 311, 313, 314, 367, 373, 383, 384, 385], "factor": [8, 11, 24, 37, 171, 192, 220, 232, 245, 246, 254, 255, 259, 260, 263, 264, 280, 285, 288, 289, 291, 301, 317, 371, 372, 376, 380, 383, 384, 387, 390], "fit": [8, 12, 162, 180, 367, 368, 371], "bottlneck": 8, "brax": [8, 99, 100, 103, 107, 123, 129, 169, 375, 390], "jax": [8, 12, 99, 100, 112, 113], "improperli": 8, "underli": [8, 103, 107, 123, 129, 295, 375, 377, 379, 385], "tedeiou": 8, "priorit": [8, 42, 50, 79, 80, 282, 283, 285, 286, 287, 293, 298, 300, 302, 303, 371, 372, 378], "amount": [8, 263, 264, 372, 387], "costli": [8, 385], "constitut": [8, 372, 384, 385], "profil": 8, "frequent": [8, 387], "program": [8, 286, 293, 390], "functorch": [8, 10], "incl": 8, "suit": [8, 102, 373, 375, 389, 390], "mujoco_instal": 8, "valueerror": [8, 37, 103, 107, 123, 129, 192], "bad": 8, "fds_to_keep": 8, "expand": [8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 87, 88, 141, 268, 271, 295, 383, 384, 385, 387, 389], "new_shap": 8, "permut": [8, 86, 164, 389, 390], "idea": [9, 298, 368, 374, 376, 383, 384], "introductori": 9, "intro": [9, 373, 374], "dai": [9, 389], "2022": [9, 10, 385, 389], "spin": [9, 101, 102], "deep": [9, 144, 207, 208, 209, 210, 213, 263, 264, 279, 292, 300, 301, 371, 383], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 376], "summari": [9, 162, 190, 371, 372, 373, 374], "reddit": 9, "reagent": 9, "orient": [9, 69, 390], "baselines3": 9, "tf": 9, "bandit": [9, 122], "tensorflow": [9, 227, 228], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 380], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 389], "grade": 9, "factori": [9, 52, 371], "cherri": 9, "jaxrl": 9, "mbrl": [9, 119, 366], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 385], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 373, 374, 383, 384], "notebook": [10, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390], "24": [10, 68, 88, 106, 120, 121, 262, 371, 372, 383, 385, 386], "pip3": [10, 371, 373, 374, 383, 384], "url": [10, 109], "org": [10, 14, 15, 24, 42, 64, 65, 67, 69, 79, 80, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 122, 126, 130, 131, 144, 166, 186, 206, 207, 208, 209, 210, 211, 214, 215, 216, 221, 226, 227, 228, 232, 234, 235, 238, 240, 241, 247, 258, 263, 264, 279, 280, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 299, 300, 301, 302, 311, 316, 324, 363, 381, 386], "whl": 10, "u": [10, 66, 217, 218, 221, 222, 385], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 373, 383, 384, 385, 387], "power": [11, 372], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 364], "ultim": [11, 220, 245, 246], "ffmpeg": 11, "whatev": [11, 367, 371], "fed": [11, 384, 387], "feed": [11, 166, 188, 295, 366, 371, 383, 384, 387], "suppos": [11, 123, 344, 368, 390], "snippet": [11, 166, 186, 371], "gave": 11, "extrem": [11, 123, 129, 279, 281, 294, 297, 299], "blurri": 11, "stitch": 11, "exp_nam": [11, 331, 332, 333, 336, 337, 338, 358, 372, 379, 380], "my_exp": [11, 379], "pixels_onli": [11, 101, 102, 106, 108, 109, 126, 371, 372, 379, 380, 389, 390], "my_video": [11, 379], "record_env": [11, 379, 380], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 253, 366], "module_nam": [12, 295], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 79, 80, 82, 93, 99, 101, 102, 103, 105, 106, 107, 108, 109, 112, 117, 118, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 140, 144, 153, 160, 166, 170, 178, 179, 184, 186, 188, 189, 190, 192, 195, 199, 202, 203, 213, 214, 219, 223, 225, 226, 229, 230, 231, 232, 233, 238, 239, 247, 250, 257, 258, 265, 266, 267, 268, 269, 272, 273, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 306, 309, 310, 311, 312, 313, 314, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 356, 362, 372, 373], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 219, 223, 389], "longer": [12, 372, 380, 383, 384, 387], "x": [12, 23, 27, 37, 45, 47, 67, 88, 160, 182, 205, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 248, 257, 265, 266, 275, 278, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 348, 371, 383, 385, 387, 389], "23": [12, 68, 88, 371, 372, 374, 383, 385], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 68, 99, 100, 107, 112, 113, 222, 278, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 371, 372, 373, 374, 380, 383, 384, 385, 387, 390], "otherwis": [12, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 88, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 120, 121, 123, 124, 125, 126, 129, 130, 131, 144, 145, 151, 162, 179, 180, 181, 184, 190, 192, 217, 220, 221, 229, 230, 245, 246, 257, 266, 272, 280, 290, 295, 296, 300, 311, 313, 314, 344, 345, 368, 371, 372, 373, 374, 385, 390], "classmethod": [12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 103, 107, 123, 129, 186, 206, 237], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 33, 34, 35, 37, 41, 43, 45, 46, 68, 72, 80, 87, 88, 103, 104, 105, 106, 107, 108, 117, 118, 120, 123, 124, 125, 129, 130, 131, 132, 160, 180, 184, 189, 190, 192, 204, 205, 206, 207, 208, 209, 210, 211, 216, 224, 237, 265, 269, 300, 335, 336, 344, 353, 354, 360, 361, 362, 371, 372, 373, 387, 390], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 104, 123, 129, 371, 389], "device_typ": [14, 16, 17, 29, 35, 39, 40, 204, 205, 206, 207, 208, 209, 210, 216, 224, 229, 230, 231, 232, 237], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 372], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 372], "create_env_kwarg": [14, 15, 16, 17, 21, 104, 120, 123, 129, 371, 390], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 37, 171, 372, 387], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 265, 295, 344, 371, 372, 373, 374, 376, 383, 389], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 196, 200, 265, 269, 344], "exploration_mod": [14, 16, 17, 18, 19, 20, 364, 366], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 41, 43, 46, 123, 129], "num_sub_thread": [14, 15, 17, 123, 129], "set_trunc": [14, 15, 16, 17, 103, 107, 123, 129], "use_buff": [14, 15, 16, 123, 129], "datacollector": [14, 15, 16, 17, 37, 269, 297, 373, 378, 387], "recept": 14, "safe": [14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 250, 255, 257, 258, 264, 265, 266, 267, 268, 269, 271, 366, 389], "sota": [14, 15, 119, 157, 299, 339, 353, 371, 372, 373, 376, 377, 378, 383, 384, 389], "guard": [14, 15], "doc": [14, 15, 52, 109, 112, 113, 122, 126, 338, 372, 383, 384, 387, 390], "env_mak": [14, 15, 16, 21, 358, 390], "2000": [14, 15, 16, 37, 54, 110, 331, 373, 387], "50": [14, 15, 16, 21, 44, 47, 61, 69, 87, 88, 117, 118, 192, 372, 373, 374, 383, 384, 385, 387], "shutdown": [14, 15, 16, 17, 21, 141, 371, 389], "del": [14, 15, 16, 371, 372, 373, 382, 383, 389, 390], "int64": [14, 15, 16, 23, 25, 29, 30, 35, 36, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 103, 107, 116, 117, 118, 122, 123, 124, 125, 127, 128, 129, 137, 141, 153, 164, 171, 178, 214, 239, 257, 258, 263, 264, 265, 266, 267, 366, 373, 374, 375, 376, 378, 379, 385, 387, 389], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 143, 248, 257, 262, 266, 374], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 54], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 372], "divis": [14, 15, 16, 17, 18, 19, 20, 61, 67, 80, 87, 88, 384], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 107, 140, 180, 189, 223, 374, 385, 386], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 350, 372], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 70, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 120, 121, 123, 126, 129, 148, 149, 152, 160, 166, 180, 183, 184, 186, 188, 190, 192, 268, 383, 390], "span": [14, 15, 16, 17, 18, 19, 20, 21, 67, 80, 87], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 37, 192, 262, 372, 373, 383, 384], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 47, 338, 366, 383, 384, 385], "round": [14, 15, 16, 17, 18, 19, 20, 21, 61], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 37, 65, 103, 107, 123, 129, 192], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 189, 389], "ratio": [14, 15, 17, 47, 371, 373], "finish": [14, 15, 17, 21, 107, 171, 390], "rest": [14, 15, 17, 366, 373, 374, 383, 385, 389], "earli": [14, 15, 17, 37, 107, 178, 389], "safeti": [14, 15, 17, 119, 123, 129], "harm": [14, 15, 17, 123, 129], "exclus": [14, 15, 57, 58, 61, 67, 80, 87, 88, 141, 154, 156, 217, 219, 221, 223, 227, 228, 257, 258, 266, 267, 301, 302, 303, 311, 312, 313, 314, 315, 338, 362, 366], "add_truncated_kei": [14, 15, 16, 17, 103, 107, 123, 129, 184], "ordereddict": [14, 15, 16, 17, 21, 37, 103, 107, 123, 129, 184, 190, 192, 300, 372], "form": [14, 15, 17, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 103, 107, 123, 129, 190, 192, 217, 219, 221, 223, 278, 279, 281, 294, 297, 348, 366, 376, 384], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 103, 107, 123, 129, 184], "integ": [14, 15, 16, 17, 23, 35, 36, 37, 40, 47, 56, 80, 87, 88, 89, 103, 107, 123, 129, 137, 140, 153, 157, 162, 178, 204, 205, 224, 229, 230, 286, 293, 300, 387], "increment": [14, 15, 16, 17, 103, 107, 123, 129, 162, 294], "env_fn": [14, 15, 16, 17, 104, 360, 361], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 87, 88, 209, 210, 385], "out_se": [14, 15, 16, 17, 390], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 37, 39, 41, 42, 43, 45, 46, 49, 50, 51, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 78, 79, 80, 82, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 138, 139, 141, 148, 166, 168, 177, 180, 183, 184, 185, 187, 188, 191, 192, 203, 204, 205, 207, 208, 209, 210, 213, 216, 219, 220, 223, 224, 225, 226, 229, 230, 236, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 329, 331, 335, 336, 338, 341, 348, 353, 354, 359, 360, 361, 367, 373, 384], "return_same_td": 16, "interruptor": 16, "cautious": [16, 297], "whole": [16, 27, 33, 37, 54, 103, 107, 123, 129, 184, 192, 265, 300, 339, 371, 373], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 376], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 348], "respect": [18, 19, 20, 37, 103, 107, 123, 129, 142, 148, 149, 152, 166, 167, 176, 180, 183, 184, 186, 188, 192, 217, 221, 229, 241, 268, 273, 279, 281, 294, 297, 299, 311, 313, 314, 343, 373, 374, 383, 384], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 365, 372, 373, 376, 379, 382, 387], "fashion": [18, 20, 21, 41, 43, 46, 88], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 123, 129, 156], "seen": [18, 19, 20, 21, 27, 33, 103, 107, 123, 129, 367, 371, 372, 374, 377, 383, 384, 387], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 42, 45, 50, 51, 63, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275, 371], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 385], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 371], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 40, 61, 265, 269], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 360, 361, 371, 372], "coordin": 21, "init": [21, 37, 103, 107, 123, 129, 190, 192, 338, 372, 373], "autodetect": 21, "similarli": [21, 37, 86, 91, 103, 107, 123, 129, 192, 229, 270, 271, 286, 293, 390], "num_cpu": 21, "num_gpu": 21, "1024": [21, 211, 372, 387], "equat": [21, 67, 107, 190, 263, 264, 278, 281, 301, 373, 375, 385], "exce": [21, 387], "indefinit": [21, 60], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 348, 371, 373, 374], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 302, 377], "jump": [22, 375], "host": [22, 37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 206, 211, 237, 256], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 48, 53, 54, 55, 56, 80, 87, 88, 103, 107, 123, 129, 134, 137, 138, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 158, 159, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 186, 190, 192, 193, 201, 202, 214, 239, 254, 255, 256, 259, 260, 262, 263, 264, 269, 283, 309, 329, 331], "as_nest": 23, "durat": [23, 384], "meta": [23, 41, 43, 46, 53, 63, 105, 109, 279, 281, 294, 297, 299, 368, 373, 383, 384, 387], "aren": [23, 179, 374], "deprec": [23, 37, 103, 107, 123, 129, 184, 192, 195, 199, 260, 279, 281, 283, 286, 287, 288, 293, 294, 297, 298, 299, 300, 309, 311, 312, 313, 314, 319, 390], "eventu": [23, 238, 374, 385], "supersed": 23, "recov": [23, 63, 65, 67, 68, 69, 87, 88, 255, 260, 264, 270, 286, 293, 382], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 106, 108], "stride": [23, 37, 103, 107, 123, 129, 192, 204, 205, 207, 208, 216, 229, 372, 383, 389], "jag": 23, "focu": [23, 371, 372, 373, 376, 377, 378, 383], "team": [23, 383, 384, 389], "cat": [23, 273, 280, 282, 293, 298, 300, 302, 303, 383, 387, 389], "arang": [23, 29, 40, 80, 137, 214, 228, 257, 339, 366, 387], "obs_": 23, "trajectory_id": 23, "int32": [23, 51, 61, 67, 87, 112, 113, 198, 262, 387], "data_split": 23, "got": [23, 378], "init_kl_coef": 24, "horizon": [24, 117, 118, 130, 131, 203, 226, 373], "kl": [24, 28, 47, 160, 290, 294], "describ": [24, 53, 145, 183, 193, 244, 245, 283, 334, 367, 371, 373, 383, 384, 385, 390], "ziegler": 24, "et": [24, 203], "relax": [24, 329], "penalti": [24, 47, 294], "strai": [24, 47], "greater": [24, 61, 80, 87, 88, 219, 223, 371, 372, 389], "increas": [24, 72, 181, 263, 264, 383, 384], "pull": [24, 387], "toward": [24, 188], "aggress": 24, "kl_coef": [24, 28, 47], "arxiv": [24, 42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 126, 130, 131, 144, 166, 186, 206, 207, 208, 209, 210, 211, 214, 215, 216, 221, 226, 232, 234, 235, 238, 240, 241, 247, 258, 263, 264, 279, 280, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 297, 300, 301, 302, 311, 316, 324, 386], "pdf": [24, 144, 206, 207, 208, 209, 210, 214, 258, 263, 264, 288, 298, 301, 302, 311, 316, 324], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 383, 384], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 160], "newest": 24, "int8": [25, 103, 116, 124, 125, 142], "assert_is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "clear_device_": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "op": [25, 26, 29, 35, 36, 39, 40, 53, 55, 56, 161, 189, 254, 255, 259, 331, 350], "is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 390], "encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 51, 53, 55, 56, 99, 100, 103, 106, 108, 109, 112, 113, 120, 121, 126, 137, 151, 235, 236, 240, 278, 366, 372, 373, 374, 376, 385, 387], "ndarrai": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 263, 264, 272, 329, 383], "ignore_devic": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "np": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 272, 329, 383, 385], "complient": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "singleton": [25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 204, 205, 224, 242, 243], "start_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "end_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "implements_for_spec": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "torch_funct": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "tensor_to_index": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "project": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 151, 221, 250, 254, 255, 257, 258, 263, 264, 265, 266, 267, 268, 269, 338, 366, 389, 390], "rand": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 112, 113, 119, 138, 141, 149, 152, 168, 193, 203, 226, 265, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 300, 302, 303, 385, 389, 390], "unbound": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 180, 198, 385, 387], "to_numpi": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 129], "transformed_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 183, 184, 233, 244, 362], "check_spec_encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "to_one_hot": [25, 29, 35], "hot": [25, 29, 35, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 124, 125, 126, 130, 131, 137, 138, 151, 214, 236, 239, 257, 258, 266, 267, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 374], "to_one_hot_spec": [25, 29, 35], "onehotdiscretetensorspec": [25, 29, 214, 239, 257, 266, 283, 285, 286, 287, 309, 364, 366, 376], "convert": [25, 29, 35, 36, 37, 38, 40, 41, 43, 46, 49, 54, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129, 148, 149, 152, 166, 180, 183, 184, 186, 188, 190, 192, 268, 278, 295, 371, 372, 373, 385, 387], "type_check": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "update_mask": [25, 29, 35, 36, 40], "outcom": [25, 29, 35, 36, 40, 212, 244, 383], "disabl": [25, 29, 35, 36, 37, 40, 103, 107, 123, 129, 184, 192, 220, 246, 329, 371, 383], "unmask": [25, 29, 35, 36, 40], "ts": [25, 29, 35, 36, 40], "upper": [26, 85, 161], "unnam": 27, "constraint": [27, 119, 373, 384], "pixels_spec": 27, "observation_vector_spec": 27, "composite_spec": 27, "observation_vector": [27, 145, 371], "td_project": 27, "is_empti": [27, 33, 385], "include_nest": [27, 33], "leaves_onli": [27, 33], "is_leaf": [27, 33], "_compositespecitemsview": [27, 33], "children": [27, 33, 37, 103, 107, 123, 129, 192], "_compositespeckeysview": [27, 33], "reflect": [27, 33, 108, 124, 125, 189, 201, 295, 351, 372, 373, 374, 384], "lock_": [27, 33], "recurs": [27, 33, 37, 57, 58, 103, 107, 123, 129, 192, 295], "succeed": [27, 33], "selected_kei": [27, 33, 175, 371], "unlock_": [27, 33], "unlock": [27, 33, 41, 43, 46], "_compositespecvaluesview": [27, 33], "multipli": [28, 217, 221, 280, 281, 287, 294, 296, 297, 298, 300, 346, 371, 383], "calcul": [28, 47, 171, 217, 279, 281, 285, 294, 297, 299, 302], "onehottensorspec": [29, 99, 100, 106, 108, 109, 112, 113, 120, 121, 126], "action_valu": [29, 40, 213, 214, 239, 257, 258, 266, 267, 287, 295, 309, 366, 374, 376, 380], "argmax": [29, 103, 107, 123, 129, 214, 239, 258, 267, 376], "chosen_action_valu": [29, 40, 238, 239, 247, 266, 267, 309, 366, 374, 376], "shift_kei": [30, 32, 38, 48], "is_full_kei": [30, 32, 38, 48], "is_ful": [30, 32, 38, 48], "tempfil": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 358, 371, 372, 383, 387], "register_save_hook": [30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "temporarydirectori": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 371, 372, 383, 387], "tmpdir": [30, 42, 45, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 371, 372, 383], "rb_load": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "register_load_hook": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "persist": [31, 37, 103, 107, 123, 129, 184, 192, 201, 300], "filesystem": [31, 387], "ted2nest": [32, 364], "drawn": [33, 34, 180, 259, 265, 269, 373, 383, 384], "heterogen": [33, 34, 116, 124, 125, 194, 229, 230, 371, 372], "thrown": [34, 37, 103, 107, 123, 129, 192, 387], "nvec": [35, 36], "remove_singleton": 35, "cardin": [35, 36, 214, 239, 257, 258, 267, 373], "ax": [35, 231, 232, 383], "m": [35, 37, 103, 107, 123, 129, 151, 192, 269, 366, 372, 385], "multionehotdiscretetensorspec": [35, 283, 286, 287, 309, 364], "neither": [35, 36, 67, 385], "use_regist": [36, 40], "to_categor": [36, 40], "to_categorical_spec": [36, 40], "multidiscretetensorspec": [36, 364], "gamma": [37, 171, 192, 226, 279, 280, 282, 283, 285, 287, 288, 289, 291, 293, 295, 297, 298, 299, 300, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 358, 367, 371, 372, 373, 383, 384, 389], "sutton": [37, 367, 383, 384], "1988": 37, "tempor": [37, 219, 223, 226, 312, 313, 318, 319], "44": [37, 372, 385], "discount": [37, 67, 104, 171, 192, 280, 285, 288, 289, 291, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 367, 372, 373, 383, 384], "ahead": [37, 192, 390], "bias": [37, 217, 218, 221, 222, 275, 367, 371], "mitig": 37, "pleas": [37, 65, 103, 106, 107, 123, 124, 125, 129, 141, 144, 181, 184, 192, 300, 365], "multisteptransform": [37, 364], "99": [37, 171, 190, 226, 291, 305, 310, 317, 358, 371, 372, 373, 377, 380, 383, 384, 385, 389], "add_modul": [37, 103, 107, 123, 129, 192], "child": [37, 103, 107, 123, 129, 192, 372], "fn": [37, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 192, 233, 360, 361], "init_weight": [37, 103, 107, 123, 129, 192], "fill_": [37, 103, 107, 123, 129, 192, 372, 374, 390], "net": [37, 103, 107, 123, 129, 192, 208, 210, 213, 216, 230, 279, 280, 287, 293, 297, 298, 299, 300, 358, 372, 385, 386, 389], "in_featur": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 204, 205, 207, 208, 209, 210, 216, 224, 229, 230, 231, 232, 251, 268, 276, 283, 285, 376, 377, 389], "out_featur": [37, 103, 107, 119, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 203, 204, 205, 207, 208, 209, 210, 215, 216, 219, 223, 224, 226, 229, 230, 231, 232, 251, 257, 268, 276, 283, 285, 366, 371, 374, 376, 377, 380, 389], "bia": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 204, 205, 207, 208, 209, 210, 215, 216, 217, 218, 219, 221, 222, 223, 224, 230, 231, 232, 233, 259, 260, 263, 264, 268, 275, 277, 278, 295, 300, 367, 371, 372, 373, 374, 384, 389], "requires_grad": [37, 99, 100, 103, 107, 123, 129, 160, 184, 192, 300], "bfloat16": [37, 103, 107, 123, 129, 192], "datatyp": [37, 103, 107, 123, 129, 192, 387], "member": [37, 103, 107, 123, 129, 192, 295, 331], "xdoctest": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 295, 300], "buf": [37, 103, 107, 123, 129, 192], "20l": [37, 103, 107, 123, 129, 192, 295], "1l": [37, 103, 107, 123, 129, 192, 295], "5l": [37, 103, 107, 123, 129, 192, 295], "__call__": [37, 44, 103, 107, 123, 129, 192, 269, 368, 390], "doubl": [37, 55, 103, 107, 123, 129, 148, 149, 150, 152, 166, 180, 183, 184, 186, 188, 192, 268, 283, 288, 292, 298, 301, 309, 371, 372, 373, 374, 390], "eval": [37, 103, 107, 123, 129, 184, 190, 192, 371, 372, 373], "evalu": [37, 103, 107, 117, 118, 123, 129, 184, 192, 212, 227, 228, 236, 246, 298, 353, 354, 372, 373, 380], "dropout": [37, 103, 107, 123, 129, 184, 192, 217, 219, 221, 223, 224, 374], "batchnorm": [37, 103, 107, 123, 129, 184, 192], "comparison": [37, 103, 107, 123, 129, 184, 192, 295, 371, 372], "similar": [37, 41, 43, 45, 46, 67, 103, 107, 123, 124, 125, 129, 148, 166, 180, 183, 184, 186, 187, 188, 190, 192, 251, 253, 265, 268, 269, 367, 371, 372, 373, 374, 376, 377, 378, 379, 385, 387, 390], "extra_repr": [37, 103, 107, 123, 129, 192], "nontermin": 37, "original_reward": 37, "newli": [37, 103, 107, 123, 129], "OR": 37, "get_buff": [37, 103, 107, 123, 129, 192], "get_submodul": [37, 103, 107, 123, 129, 192], "qualifi": [37, 103, 107, 123, 129, 192], "referenc": [37, 103, 107, 123, 129, 192], "attributeerror": [37, 103, 107, 123, 129, 192], "resolv": [37, 103, 107, 123, 129, 192], "someth": [37, 103, 107, 116, 123, 129, 192, 365, 372, 373, 385, 390], "get_extra_st": [37, 103, 107, 123, 129, 190, 192], "set_extra_st": [37, 103, 107, 123, 129, 190, 192], "picklabl": [37, 103, 107, 123, 129, 190, 192], "pickl": [37, 103, 107, 123, 129, 190, 192], "get_paramet": [37, 103, 107, 123, 129, 192], "net_b": [37, 103, 107, 123, 129, 192], "net_c": [37, 103, 107, 123, 129, 192], "conv": [37, 103, 107, 123, 129, 192, 204, 205, 372], "conv2d": [37, 103, 107, 123, 129, 192, 205, 207, 208, 216, 229, 389], "kernel_s": [37, 103, 107, 123, 129, 192, 204, 205, 207, 208, 216, 229, 234, 372, 389], "diagram": [37, 103, 107, 123, 129, 192], "degre": [37, 103, 107, 123, 129, 192], "named_modul": [37, 103, 107, 123, 129, 192], "o": [37, 103, 107, 123, 129, 192, 222], "half": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 371], "ipu": [37, 103, 107, 123, 129, 192], "strict": [37, 41, 43, 46, 103, 107, 123, 129, 184, 192, 300], "descend": [37, 103, 107, 123, 129, 184, 192, 300], "get_swap_module_params_on_convers": [37, 103, 107, 123, 129, 184, 192, 300], "enforc": [37, 86, 103, 107, 123, 129, 184, 192, 270, 300, 385], "preserv": [37, 103, 107, 123, 129, 184, 192, 300], "missing_kei": [37, 103, 107, 123, 129, 184, 192, 300], "unexpected_kei": [37, 103, 107, 123, 129, 184, 192, 300], "namedtupl": [37, 103, 107, 123, 129, 184, 192, 300], "l": [37, 103, 107, 123, 129, 192, 217, 221, 310, 373, 385], "idx": [37, 103, 107, 123, 129, 192], "named_buff": [37, 103, 107, 123, 129, 192], "remove_dupl": [37, 103, 107, 123, 129, 192, 295], "prepend": [37, 103, 107, 123, 129, 192, 295], "running_var": [37, 103, 107, 123, 129, 192], "named_children": [37, 103, 107, 123, 129, 192], "conv4": [37, 103, 107, 123, 129, 192], "conv5": [37, 103, 107, 123, 129, 192], "memo": [37, 103, 107, 123, 129, 192], "named_paramet": [37, 103, 107, 123, 129, 160, 192, 295], "register_backward_hook": [37, 103, 107, 123, 129, 192], "removablehandl": [37, 103, 107, 123, 129, 192], "favor": [37, 103, 107, 123, 129, 192, 373], "register_full_backward_hook": [37, 103, 107, 123, 129, 192], "register_buff": [37, 103, 107, 123, 129, 192], "running_mean": [37, 103, 107, 123, 129, 192], "alongsid": [37, 103, 107, 123, 129, 192, 379], "num_featur": [37, 103, 107, 123, 129, 192], "register_forward_hook": [37, 103, 107, 123, 129, 192, 214, 239], "with_kwarg": [37, 103, 107, 123, 129, 192], "always_cal": [37, 103, 107, 123, 129, 192], "register_module_forward_hook": [37, 103, 107, 123, 129, 192], "regardless": [37, 103, 107, 123, 129, 192, 281, 294, 297], "register_forward_pre_hook": [37, 103, 107, 123, 129, 192], "invok": [37, 103, 107, 123, 129, 192], "And": [37, 103, 107, 123, 129, 192, 377], "forward_pr": [37, 103, 107, 123, 129, 192], "register_module_forward_pre_hook": [37, 103, 107, 123, 129, 192], "grad_input": [37, 103, 107, 123, 129, 192], "grad_output": [37, 103, 107, 123, 129, 192], "subsequ": [37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 140, 192, 374, 383], "technic": [37, 103, 107, 123, 129, 192, 372, 374, 376], "caller": [37, 103, 107, 123, 129, 192], "register_module_full_backward_hook": [37, 103, 107, 123, 129, 192], "register_full_backward_pre_hook": [37, 103, 107, 123, 129, 192], "backward_pr": [37, 103, 107, 123, 129, 192], "register_module_full_backward_pre_hook": [37, 103, 107, 123, 129, 192], "register_load_state_dict_post_hook": [37, 103, 107, 123, 129, 192], "incompatible_kei": [37, 103, 107, 123, 129, 192], "register_modul": [37, 103, 107, 123, 129, 192, 368], "alia": [37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 107, 123, 129, 192], "register_paramet": [37, 103, 107, 123, 129, 192], "register_state_dict_pre_hook": [37, 103, 107, 123, 129, 192], "keep_var": [37, 41, 43, 46, 103, 107, 123, 129, 184, 192, 300], "requires_grad_": [37, 103, 107, 123, 129, 192], "autograd": [37, 103, 107, 123, 129, 184, 192, 300], "freez": [37, 103, 107, 123, 129, 190, 192], "finetun": [37, 103, 107, 123, 129, 192], "gan": [37, 103, 107, 123, 129, 192], "set_submodul": [37, 103, 107, 123, 129, 192], "overid": [37, 103, 107, 123, 129, 192], "share_memori": [37, 103, 104, 107, 123, 129, 192, 371], "share_memory_": [37, 103, 107, 123, 129, 192, 389], "destin": [37, 41, 43, 46, 103, 107, 123, 129, 143, 149, 150, 152, 184, 186, 190, 192, 201, 300, 331], "averag": [37, 103, 107, 123, 129, 184, 190, 192, 263, 264, 289, 290, 300, 346, 371, 373], "shallow": [37, 103, 107, 123, 129, 184, 192, 300, 374], "detach": [37, 103, 107, 123, 129, 184, 192, 295, 300, 302, 311, 312, 313, 314, 371], "non_block": [37, 41, 43, 46, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 374], "memory_format": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "channels_last": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "unchang": [37, 103, 107, 123, 129, 148, 151, 166, 180, 183, 184, 186, 188, 192, 259, 268, 345, 371, 387], "tri": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 379], "pin": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "4d": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "ignore_w": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "1913": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "3420": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "5113": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "2325": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "torch_doctest_cuda1": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "gpu1": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "1914": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "5112": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 385], "2324": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "float16": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 218, 222, 268], "cdoubl": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "3741": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "j": [37, 42, 79, 80, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 368, 377], "2382": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "5593": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268, 385], "4443": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "complex128": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "6122": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "1150": [37, 103, 107, 123, 129, 148, 166, 180, 183, 184, 186, 188, 192, 268], "to_empti": [37, 103, 107, 123, 129, 192], "dst_type": [37, 103, 107, 123, 129, 192], "xpu": [37, 103, 107, 123, 129, 192], "set_to_non": [37, 103, 107, 123, 129, 192], "row": [38, 49, 112, 113], "unidimension": 40, "keepdim": 40, "user_regist": 40, "priori": 40, "uniqu": [40, 87, 88, 117, 118, 144, 153, 179, 180, 181, 262, 338, 378, 387], "discretebox": [40, 103, 107, 123, 129, 376, 383, 384, 390], "chosen_data": [41, 70], "rewarddata": [41, 70, 364], "rejected_data": [41, 70], "from_dataset": [41, 43, 70], "dataset_nam": [41, 43, 47, 54, 70, 122], "max_length": [41, 43, 44, 52, 54, 70, 380], "550": [41, 43, 47, 54, 70, 87, 88, 385], "root_dir": [41, 43, 54, 70], "from_disk": [41, 43, 54, 70], "carperai": [41, 43, 47, 54], "openai_summarize_comparison": [41, 43, 54], "sequen": [41, 43], "load_from_disk": [41, 43, 54, 70], "load_dataset": [41, 43, 54, 70], "attention_mask": [41, 43, 44, 46, 47, 52, 54, 70], "92534": 41, "input_id": [41, 43, 44, 46, 47, 52, 54, 70], "end_scor": [41, 46, 47, 70], "sub_data": [41, 43], "from_tensordict": [41, 43, 46], "non_tensordict": [41, 43, 46], "_nodefault": [41, 43, 46], "getattr": [41, 43, 46], "tensorclass": [41, 43, 46, 70, 74, 75, 95], "proxi": [41, 43, 46, 228, 236, 265, 367], "load_memmap": [41, 43, 46], "load_": [41, 43, 46], "load_memmap_": [41, 43, 46], "fetch": [41, 43, 46, 99, 100, 101, 102, 160, 376, 386, 387], "fromkei": [41, 43, 46], "memmap": [41, 43, 46, 74, 123, 129, 190, 331, 333, 345, 387], "saved_td": [41, 43, 46], "td_load": [41, 43, 46], "fake": [41, 43, 46, 103, 107, 123, 129, 371, 372], "_subclass": [41, 43, 46], "faketensormod": [41, 43, 46], "faketensor": [41, 43, 46], "from_flatten": [41, 43, 46], "attemptedli": [41, 43, 46], "copy_exist": [41, 43, 46], "return_earli": [41, 43, 46], "share_non_tensor": [41, 43, 46], "mimic": [41, 43, 46, 103, 107, 123, 129], "cross": [41, 43, 46, 203], "anymor": [41, 43, 46, 184, 268], "tensordictfutur": [41, 43, 46], "deepli": [41, 43, 46], "insid": [41, 43, 46, 123, 390], "memmap_": [41, 43, 46, 190], "memmap_lik": [41, 43, 46], "contentless": [41, 43, 46], "1_000_000": [41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 371, 374, 383], "alloc": [41, 43, 46, 75, 227, 228, 371], "memmap_refresh_": [41, 43, 46], "refresh": [41, 43, 46, 380, 383, 384], "saved_path": [41, 43, 46], "setattr": [41, 43, 46], "tent": [41, 43, 46, 54], "to_tensordict": [41, 43, 46, 374], "unbind": [41, 42, 43, 45, 46, 50, 51, 219, 223], "alpha": [42, 50, 79, 80, 204, 205, 207, 208, 209, 210, 216, 229, 280, 287, 296, 298, 300, 302, 371, 387, 389], "ep": [42, 50, 79, 80, 162, 190, 263, 264, 281, 301, 346, 371, 372, 374, 377, 380], "1e": [42, 50, 79, 80, 162, 190, 212, 215, 233, 244, 371, 372, 373, 384], "08": [42, 50, 79, 80, 371, 372, 373, 383, 385], "pin_memori": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 165, 371, 389], "schaul": [42, 79, 80], "quan": [42, 79, 80], "antonogl": [42, 79, 80], "silver": [42, 79, 80], "2015": [42, 79, 80], "ab": [42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 126, 130, 131, 143, 166, 186, 190, 206, 211, 215, 216, 221, 226, 232, 234, 235, 238, 240, 241, 247, 279, 280, 283, 284, 285, 286, 289, 290, 291, 292, 293, 296, 297, 300, 386], "1511": [42, 79, 80, 216], "05952": [42, 79, 80], "expon": [42, 50, 79, 80], "\u03b1": [42, 50, 79, 80], "delta": [42, 50, 79, 80, 217, 221, 244, 265, 269, 364, 367, 383], "null": [42, 50, 79, 80, 142], "1_000": [42, 45, 50, 51, 383, 387], "merg": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 385], "mini": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 384], "decid": [42, 45, 50, 51, 383, 389], "meth": [42, 45, 50, 51, 295, 385], "incompat": [42, 45, 50, 51, 299, 387], "drop_last": [42, 45, 50, 51, 86, 88], "notion": [42, 45, 50, 51], "caution": [42, 45, 50, 51, 86, 194, 390], "codebas": [42, 45, 50, 51, 385], "approach": [42, 45, 50, 51, 162, 302, 371, 373, 377, 378, 383, 390], "return_info": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 387], "tensordictprioritizedreplaybuff": [42, 364, 389], "simplifi": [42, 376, 385, 387], "_weight": [42, 50, 79, 80, 387, 389], "arrai": [42, 47, 79, 103, 107, 123, 129, 153, 217, 218, 221, 222, 371, 383, 387], "update_prior": [42, 79, 80, 345, 368, 372, 387, 389], "36278465": 42, "invert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 277, 373], "tqdm": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 348, 371, 373, 374, 383, 384, 385], "randomsampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 371, 383], "td_error": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 282, 283, 285, 286, 287, 288, 293, 295, 298, 300, 302, 303, 309, 371, 377, 387, 389], "update_tensordict_prior": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 371, 387, 389], "insert_transform": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 139, 184], "insert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 82, 83, 93, 94, 97, 98, 139, 148, 184, 185], "set_sampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_storag": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_writ": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "prompt_rindex": [43, 44, 47], "promptdatatldr": 43, "116722": 43, "prompt": [44, 47], "return_tensordict": [44, 52], "recip": [44, 103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275], "text": [44, 47, 52, 65, 217, 218, 221, 222, 263, 264, 373], "tensodict": [44, 52], "orign": [44, 52], "valid_sampl": 44, "eough": 44, "toknen": 44, "meet": 44, "criterion": 44, "autotoken": [44, 52, 54], "from_pretrain": [44, 47, 52], "gpt2": [44, 47, 52, 54, 206, 211, 237], "pad_token": [44, 52], "eos_token": 44, "enough": [44, 387], "inde": [44, 151, 373, 385], "storagecheckpointerbas": [45, 89], "roundrobinwrit": [45, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "Not": [45, 99, 100, 112], "depth": [45, 103, 107, 119, 123, 126, 129, 203, 204, 205, 207, 208, 209, 210, 215, 216, 224, 226, 229, 230, 234, 235, 257, 366, 372, 375, 377, 378, 382, 383, 384, 387], "_pytre": [45, 387], "tree_map": [45, 387], "did": [45, 189, 317, 372, 373, 378, 387, 390], "assert0": [45, 387], "ref_model": 47, "reward_model": [47, 274], "max_new_token": 47, "score_clip": 47, "kl_schedul": 47, "klcontrollerbas": 47, "num_step": 47, "causal": 47, "sentenc": 47, "frozen": [47, 160, 190], "gpt2rewardmodel": 47, "get_dataload": [47, 364], "promptdata": [47, 364], "gpt2lmheadmodel": 47, "dl": 47, "block_siz": [47, 70], "tensorclass_typ": [47, 70], "openai_summarize_tldr": 47, "config_class": 47, "model_path": 47, "rollout_from_model": 47, "rollout_from_data": 47, "600": [47, 379, 385, 387], "reward_kl": [47, 160], "reward_raw": 47, "sample_log_prob": [47, 251, 252, 253, 265, 269, 271, 297, 373, 376, 384, 389], "create_rollout_td": 47, "log_prob": [47, 212, 227, 228, 236, 246, 269], "log_ratio": 47, "replic": 47, "rindex": 47, "eo": 47, "term": [47, 160, 221, 222, 231, 232, 278, 279, 287, 350, 372, 373, 375, 376, 384], "generation_config": 47, "generationconfig": 47, "ti": [47, 320, 321, 322, 323, 325, 326, 327, 328, 372], "log_probs_gen": 47, "logprobs_of_label": 47, "220": [48, 370, 385, 388, 390], "priority_kei": [50, 51, 62, 79, 283, 286, 287, 288, 293, 295, 298, 300, 302, 303, 309, 387, 389], "reduct": [50, 79, 80, 93, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 296, 297, 298, 299, 300, 302, 303], "prioritizedreplaybuff": [50, 364, 389], "min": [50, 79, 80, 93, 245, 246, 263, 264, 280, 281, 287, 296, 298, 300, 372, 373], "median": [50, 79, 80, 93, 112, 113, 137, 265, 269], "include_info": [50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "huggingfac": [52, 64, 69, 261], "co": [52, 153, 385], "pad_trunc": 52, "am": 52, "me": 52, "reassur": 52, "ok": 52, "tokenizer_fn": 54, "tensordicttoken": [54, 364], "pre_tokenization_hook": 54, "valid_s": 54, "tokenizer_class": 54, "tokenizer_model_nam": 54, "tokein": 54, "elementwis": 54, "vocabulari": 54, "loader": [54, 373], "185068": 54, "dataset_to_tensordict": 54, "data_dir": 54, "batch_dim": [54, 362], "valid_mask_kei": 54, "conver": 54, "batch_dimens": 54, "filder": 54, "from_dict": 54, "data_memmap": 54, "recurse_through_entri": 58, "recurse_through_stack": 58, "consolid": 58, "dataset_id": [61, 63, 64, 65, 67, 68, 69], "num_proc": 61, "slice_len": [61, 67, 80, 87, 88, 331], "strict_len": 61, "arari": 61, "2600": 61, "million": [61, 374], "consequ": [61, 72, 221, 378], "50x10": 61, "available_dataset": [61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88], "ataridqn": 61, "immutabledatasetwrit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "shorter": [61, 67, 80, 87, 88], "Be": [61, 67, 80, 87, 88], "game_nam": 61, "krull": 61, "1d": [61, 79, 80, 87, 88, 93], "cheapli": 61, "nontensordata": [61, 67, 329], "invalid_rang": 61, "999998": 61, "999999": 61, "add_count": 61, "84": [61, 170, 372, 374, 385, 386], "valueestim": [61, 279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 305, 309, 364, 367, 371, 383, 384], "convolut": [61, 204, 205, 207, 208, 229, 242, 376], "2657628": 61, "2657629": 61, "2657630": 61, "2657631": 61, "2657632": 61, "2657633": 61, "2657634": 61, "2657635": 61, "2657636": 61, "2657637": 61, "2657638": 61, "2657639": 61, "2657640": 61, "2657641": 61, "2657642": 61, "2657643": 61, "2657644": 61, "2657645": 61, "2657646": 61, "2657647": 61, "2657648": 61, "2657649": 61, "2657650": 61, "2657651": 61, "2657652": 61, "2657653": 61, "2657654": 61, "2657655": 61, "2657656": 61, "2657657": 61, "2657658": 61, "2657659": 61, "2657660": 61, "2657661": 61, "2657662": 61, "2657663": 61, "2657664": 61, "2657665": 61, "2657666": 61, "2657667": 61, "2657668": 61, "2657669": 61, "2657670": 61, "2657671": 61, "2657672": 61, "2657673": 61, "2657674": 61, "2657675": 61, "2657676": 61, "2657677": 61, "2657678": 61, "2657679": 61, "2657680": 61, "2657681": 61, "2657682": 61, "2657683": 61, "2657684": 61, "2657685": 61, "2657686": 61, "2657687": 61, "2657688": 61, "2657689": 61, "2657690": 61, "2657691": 61, "1995687": 61, "1995688": 61, "1995689": 61, "1995690": 61, "1995691": 61, "1995692": 61, "1995693": 61, "1995694": 61, "1995695": 61, "1995696": 61, "1995697": 61, "1995698": 61, "1995699": 61, "1995700": 61, "1995701": 61, "1995702": 61, "1995703": 61, "1995704": 61, "1995705": 61, "1995706": 61, "1995707": 61, "1995708": 61, "1995709": 61, "1995710": 61, "1995711": 61, "1995712": 61, "1995713": 61, "1995714": 61, "1995715": 61, "1995716": 61, "1995717": 61, "1995718": 61, "1995719": 61, "1995720": 61, "1995721": 61, "1995722": 61, "1995723": 61, "1995724": 61, "1995725": 61, "1995726": 61, "1995727": 61, "1995728": 61, "1995729": 61, "1995730": 61, "1995731": 61, "1995732": 61, "1995733": 61, "1995734": 61, "1995735": 61, "1995736": 61, "1995737": 61, "1995738": 61, "1995739": 61, "1995740": 61, "1995741": 61, "1995742": 61, "1995743": 61, "1995744": 61, "1995745": 61, "1995746": 61, "1995747": 61, "1995748": 61, "1995749": 61, "1995750": 61, "left": [61, 63, 67, 80, 87, 141, 148, 149, 150, 154, 160, 166, 168, 169, 175, 178, 181, 183, 186, 188, 192, 229, 259, 372, 373, 378, 379], "untouch": [61, 67, 141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 192], "_max_run": 61, "dataset_asterix": 61, "asterix": 61, "dataset_pong": 61, "sample_from_al": [61, 82, 85], "buffer_id": [61, 85, 91], "hidden": [61, 123, 129, 143, 207, 215, 217, 218, 219, 221, 222, 223, 234, 235, 240, 241, 251, 252, 253, 256, 268, 271, 281, 294, 297, 366, 374, 382, 389], "data_path": [61, 62, 63, 64, 65, 66, 67, 68, 69], "data_path_root": [61, 62, 63, 64, 65, 66, 67, 68, 69], "delet": [61, 62, 63, 64, 65, 66, 67, 68, 69, 145, 338], "chunksiz": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pool": [61, 62, 63, 64, 65, 66, 67, 68, 69, 181], "max_tasks_per_child": [61, 62, 63, 64, 65, 66, 67, 68, 69], "worker_thread": [61, 62, 63, 64, 65, 66, 67, 68, 69], "index_with_gener": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pbar": [61, 62, 63, 64, 65, 66, 67, 68, 69, 371, 373, 374, 383, 384, 385], "dest": [61, 62, 63, 64, 65, 66, 67, 68, 69, 166, 186, 188, 268], "num_fram": [61, 62, 63, 64, 65, 66, 67, 68, 69], "unitari": [61, 62, 63, 64, 65, 66, 67, 68, 69, 385], "minariexperiencereplai": [61, 62, 63, 64, 66, 67, 68, 69], "1000000": [61, 62, 63, 64, 65, 66, 67, 68, 69], "distance_from_origin": [61, 62, 63, 64, 65, 66, 67, 68, 69], "forward_reward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qpo": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qvel": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_ctrl": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "reward_forward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_surv": [61, 62, 63, 64, 65, 66, 67, 68, 69], "x_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "x_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "y_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "y_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69], "achieved_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "desired_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "27": [61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 100, 123, 129, 370, 371, 372, 373, 384, 385, 386, 388], "_collate_id": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x120e21dc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cattensor": [61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 129, 371, 382, 385, 390], "cat_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cat_next_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "new_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "31": [61, 62, 63, 64, 65, 66, 67, 68, 69, 112, 113, 370, 372, 383, 385, 388], "full_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x168406fc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "from_env": 63, "use_truncated_as_don": 63, "direct_download": 63, "terminate_on_end": 63, "env_kwarg": [63, 68, 69, 141, 360, 361, 371], "reconstruct": [63, 87, 88, 290, 371, 390], "get_dataset": 63, "qlearning_dataset": 63, "fewer": [63, 80, 87], "possess": 63, "unexpectedli": 63, "traj_split": 63, "observationnorm": [63, 190, 362, 371, 372, 373, 374, 389], "maze2d": 63, "umaz": 63, "loc": [63, 103, 107, 123, 129, 160, 162, 173, 190, 220, 233, 245, 246, 251, 252, 253, 265, 269, 271, 279, 280, 293, 297, 298, 299, 300, 352, 362, 366, 371, 372, 373, 374, 376, 384, 389], "gen": 64, "dgrl": 64, "accompani": [64, 141, 178], "gap": 64, "2312": 64, "05742": 64, "gen_dgrl": 64, "procgen": 64, "bigfish": 64, "bossfight": 64, "categori": [64, 366, 368], "1m_e": 64, "1m_": 64, "comma": 64, "npy": 64, "extract": [64, 140, 261, 371, 373, 389], "mmap": [64, 68, 69], "minut": [64, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "internet": [64, 69], "connect": [64, 69], "minari": 65, "websit": [65, 67], "currenrtli": 65, "minari_data": 65, "door": 65, "torchrl_logg": [65, 380], "28": [65, 229, 371, 372, 373, 374, 385, 387], "door_body_po": 65, "dua": 66, "graff": 66, "2017": 66, "uci": 66, "archiv": 66, "ic": 66, "edu": 66, "ml": 66, "sklearn": [66, 122], "adult_num": [66, 122], "adult_onehot": [66, 122], "mushroom_num": [66, 122], "mushroom_onehot": [66, 122], "covertyp": [66, 122], "shuttl": [66, 122], "magic": [66, 122, 375], "shuffl": [67, 86, 88, 384], "embodi": [67, 386], "institut": 67, "demonstr": [67, 373, 378, 383, 384, 385, 387, 390], "527": [67, 385], "skill": 67, "160266": 67, "googl": [67, 68, 99, 100, 117, 118, 373, 374, 383, 384], "open_x_embodi": 67, "2310": [67, 126], "08864": 67, "language_instruct": 67, "get_non_tensor": 67, "nor": 67, "insuffici": 67, "chosen": [67, 130, 131, 179, 180, 238, 239, 247, 267, 331, 366, 379], "openx": 67, "__will": 67, "change__": 67, "randomli": [67, 86, 161, 162, 180, 259, 265, 269, 376, 383, 384, 385, 387], "crop": [67, 146, 167, 331], "modal": [67, 371], "cmu_stretch": [67, 331], "is_init": [67, 69, 143, 159, 219, 223, 262, 263, 264, 276, 374], "language_embed": 67, "512": [67, 216, 372, 385], "lift": 67, "green": [67, 383], "garbag": 67, "lid": 67, "roboset": 68, "h5": [68, 69, 72], "roboh": [68, 126], "concis": [68, 377], "75": [68, 372, 374, 385, 386], "totensor": 69, "image_s": 69, "v": [69, 190, 217, 218, 221, 222, 251, 286, 293, 300, 366, 371, 372], "npz": 69, "2206": [69, 120, 121], "04779": [69, 280, 285], "vd4rl": 69, "squar": [69, 146, 220, 245, 246, 331], "rectangular": [69, 204, 205], "walker_walk": 69, "64px": 69, "height": [69, 146, 170], "veloc": [69, 101, 102, 103, 107, 123, 129, 144, 383, 384, 385, 390], "infinit": [70, 117, 118, 130, 131, 378, 387], "block": [70, 73, 98, 366, 374, 383], "pairwisedataset": [70, 364], "256": [70, 117, 118, 211, 372, 373, 383, 384, 385], "checkpoint_fil": 72, "h5_kwarg": 72, "iff": 72, "suffix": [72, 344], "h5py": 72, "create_dataset": 72, "temporarili": [72, 194, 378, 387], "immut": [73, 103, 107, 123, 129, 169, 184], "piec": [73, 83, 94, 97, 98, 371, 372, 373, 379, 383, 384, 385, 387], "scratch_dir": [74, 371, 387], "sent": [74, 75, 95, 190], "mistak": [74, 75, 95], "myclass": [74, 75, 95], "foo": [74, 75, 95, 256, 387, 390], "bar": [74, 75, 95, 256, 341, 342, 344, 348, 368, 372], "attach": [74, 75, 76, 89, 91, 95, 372], "entiti": [74, 75, 76, 89, 91, 95], "zero_": [75, 95, 198], "liststoag": 77, "max_capac": [79, 80, 371, 387], "max_priority_within_buff": [79, 80], "data_0": 79, "data_1": 79, "smoothen": 79, "tdrb": 79, "pack": [79, 217, 221, 373, 375, 390], "nd": [79, 80], "sum_tre": [79, 80], "min_tre": [79, 80], "end_kei": [80, 87, 88], "cache_valu": [80, 87, 88], "closer": 80, "readili": [80, 87, 88], "conjunct": [80, 87, 88, 372], "Will": [80, 87, 120, 331], "buffer0": [80, 87], "immutablewrit": [80, 87], "buffer1": [80, 87], "other_sampl": [80, 87], "short": [80, 87, 88, 99, 100, 112, 113, 123, 194, 221, 222, 372, 373, 375, 376, 384, 387], "unsqueez": [80, 138, 141, 144, 145, 182, 185, 371, 374, 383, 384, 385], "tolist": 80, "120110917137936e": 80, "06": [80, 212, 244, 371, 372, 373, 384, 385], "uniformli": [81, 295, 390], "storageensembl": [82, 85], "samplerensembl": 82, "writerensembl": [82, 91], "num_buffer_sampl": [82, 85], "ensembl": [82, 85, 91, 92, 98, 268, 298], "forbidden": 82, "collat": 82, "0x13a2ef430": 82, "0x13a2f9310": 82, "interpol": [82, 170, 372, 374], "interpolationmod": [82, 374], "bilinear": [82, 170, 374], "0x13a2f9220": 82, "0x13a2f9f70": 82, "0x13a2d9b50": 82, "0x13a2f95b0": 82, "0x128648260": 82, "kw": [83, 94], "roundrobin": [83, 94], "incomplet": [86, 88], "fresh": 86, "haven": [86, 386], "remain": [86, 143, 150, 151, 160, 179, 232, 377], "draw": [86, 259], "slicesamplerwithoutreplac": [87, 387], "320": [87, 88, 101, 102, 372, 385], "700": [87, 88], "dataid": [87, 88], "__len__": 89, "rank_kei": 93, "rank": [93, 203], "samplerwithoutreplac": [93, 373, 384, 387], "get_insert_index": 93, "convers": [99, 100, 112, 113, 367], "2106": [99, 100, 284, 302], "13281": [99, 100], "categorical_action_encod": [99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 126, 129], "frame_skip": [99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 120, 121, 126, 157, 341, 344, 351, 368, 371, 372, 373, 389], "repeat": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 126, 203, 373, 383, 384, 385], "allow_done_after_reset": [99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 126], "toler": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 126, 212, 244], "availalb": [99, 100, 112, 113], "ant": [99, 100, 103, 107, 110, 123, 129, 386, 390], "87": [99, 100, 372, 385], "acrobot": [99, 100, 101, 102, 390], "advant": [99, 100, 112, 113], "timer": [99, 100, 112, 113], "timeit": [99, 100, 112, 113], "310": [99, 100, 385], "ms": [99, 100, 112, 113], "268": [99, 100, 385], "433": [99, 100, 385], "80": [99, 100, 371, 372, 373, 383, 384, 385], "213": [99, 100, 385], "8605": [99, 100], "pipelineenv": 100, "get_environ": 100, "dm_control": [101, 102, 371, 382, 390], "2006": [101, 102, 280, 285, 385], "12983": [101, 102], "task_nam": [101, 103, 107, 123, 129], "cheetah": [101, 102, 103, 107, 123, 129, 331, 371], "240": [101, 102, 385, 389], "swingup": [101, 102, 390], "swingup_spars": [101, 102], "ball_in_cup": [101, 102], "catch": [101, 102], "balance_spars": [101, 102], "three_pol": [101, 102], "two_pol": [101, 102], "finger": [101, 102], "turn_easi": [101, 102], "turn_hard": [101, 102], "fish": [101, 102], "upright": [101, 102, 372], "swim": [101, 102], "hopper": [101, 102], "hop": [101, 102], "humanoid": [101, 102, 123, 129, 382], "walk": [101, 102, 123, 129, 372, 382], "run_pure_st": [101, 102], "bring_bal": [101, 102], "bring_peg": [101, 102], "insert_bal": [101, 102], "insert_peg": [101, 102], "point_mass": [101, 102], "reacher": [101, 102], "swimmer": [101, 102], "swimmer6": [101, 102], "swimmer15": [101, 102], "walker": [101, 102], "dog": [101, 102], "trot": [101, 102], "humanoid_cmu": [101, 102], "lqr": [101, 102], "lqr_2_1": [101, 102], "lqr_6_2": [101, 102], "quadrup": [101, 102], "escap": [101, 102], "stacker": [101, 102], "stack_2": [101, 102], "stack_4": [101, 102], "deviceless": 103, "run_type_check": [103, 119], "counterenv": 103, "continuousbox": [103, 107, 123, 129, 198, 373, 383, 384, 385, 389, 390], "sort": [103, 107, 123, 129, 145, 263, 264], "another_act": [103, 107, 123, 129], "mutabl": [103, 107, 123, 129], "_callabletransform": [103, 107, 123, 129], "batch_lock": [103, 105, 107, 123, 129, 141, 180, 184, 385], "done_keys_group": [103, 107, 123, 129], "outer": [103, 107, 123, 129, 368, 371, 372, 390], "another_don": [103, 107, 123, 129], "empty_cach": [103, 107, 123, 129, 184], "fake_tensordict": [103, 107, 123, 129, 372], "silent": [103, 107, 123, 129, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 233, 234, 235, 237, 240, 241, 243, 248, 254, 255, 256, 258, 259, 262, 263, 264, 267, 272, 275], "braxenv": [103, 107, 123, 129, 169, 364, 375], "envnam": [103, 107, 123, 129], "pipeline_st": [103, 107, 123, 129], "attibut": [103, 107, 123, 129], "maybe_reset": [103, 107, 123, 129], "speak": [103, 107, 123, 129, 371], "rand_act": [103, 107, 116, 123, 124, 125, 129, 141, 375], "register_gym": [103, 107, 123, 129, 375], "entry_point": [103, 107, 123, 129], "info_kei": [103, 107, 123, 129], "reward_threshold": [103, 107, 123, 129], "nondeterminist": [103, 107, 123, 129], "max_episode_step": [103, 106, 107, 108, 123, 129], "order_enforc": [103, 107, 123, 129], "autoreset": [103, 107, 123, 129], "disable_env_check": [103, 106, 107, 120, 121, 123, 129], "apply_api_compat": [103, 107, 123, 129], "nasium": [103, 107, 123, 129], "scope": [103, 107, 123, 129, 390], "dmcontrolenv": [103, 107, 123, 129, 331, 364, 371, 375, 382, 390], "dmc": [103, 107, 123, 129], "removeemptyspec": [103, 107, 123, 129], "threshold": [103, 107, 123, 129, 259, 280, 281, 373], "learnt": [103, 107, 123, 129, 358], "knowledg": [103, 107, 123, 129, 377, 379], "checker": [103, 106, 107, 120, 121, 123, 129], "stepapicompat": [103, 107, 123, 129], "concept": [103, 107, 123, 129, 372, 387], "deem": [103, 107, 117, 118, 123, 129, 130, 131], "envgym": [103, 107, 123, 129], "0855": [103, 107, 123, 129], "0215": [103, 107, 123, 129], "0881": [103, 107, 123, 129], "0412": [103, 107, 123, 129], "1101": [103, 107, 123, 129], "0080": [103, 107, 123, 129], "0254": [103, 107, 123, 129], "0424": [103, 107, 123, 129], "9609e": [103, 107, 123, 129], "9776e": [103, 107, 123, 129], "04": [103, 107, 111, 123, 129, 371, 372, 373, 385], "6347e": [103, 107, 123, 129], "3842e": [103, 107, 123, 129], "5338e": [103, 107, 123, 129], "3064e": [103, 107, 123, 129], "0381e": [103, 107, 123, 129], "6656e": [103, 107, 123, 129], "05": [103, 107, 123, 129, 371, 372, 383, 385], "0204e": [103, 107, 123, 129], "action_spac": [103, 107, 123, 129, 153, 214, 239, 257, 258, 266, 267, 279, 280, 282, 283, 285, 286, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 374, 376, 380], "0833": [103, 107, 123, 129], "0275": [103, 107, 123, 129], "0612": [103, 107, 123, 129], "0770": [103, 107, 123, 129, 385], "1256": [103, 107, 123, 129, 385], "0082": [103, 107, 123, 129], "0186": [103, 107, 123, 129], "0476": [103, 107, 123, 129], "2221": [103, 107, 123, 129], "2256": [103, 107, 123, 129], "5930": [103, 107, 123, 129], "6937": [103, 107, 123, 129], "5865": [103, 107, 123, 129], "5479": [103, 107, 123, 129], "0187": [103, 107, 123, 129], "6825": [103, 107, 123, 129, 385], "5224": [103, 107, 123, 129], "0018": [103, 107, 123, 129, 385], "1005": [103, 107, 123, 129], "0335": [103, 107, 123, 129], "0268": [103, 107, 123, 129, 385], "0133": [103, 107, 123, 129], "0627": [103, 107, 123, 129], "0074": [103, 107, 123, 129, 385], "0488": [103, 107, 123, 129, 385], "0353": [103, 107, 123, 129], "0075": [103, 107, 123, 129, 385], "0069": [103, 107, 123, 129, 385], "0098": [103, 107, 123, 129, 385], "0058": [103, 107, 123, 129, 385], "0033": [103, 107, 123, 129, 385], "0157": [103, 107, 123, 129], "0004": [103, 107, 123, 129, 385], "0381": [103, 107, 123, 129], "0452": [103, 107, 123, 129], "11355747": [103, 107, 123, 129], "04257728": [103, 107, 123, 129], "00408397": [103, 107, 123, 129], "04155852": [103, 107, 123, 129], "0389733": [103, 107, 123, 129], "01409826": [103, 107, 123, 129], "0978704": [103, 107, 123, 129], "08808327": [103, 107, 123, 129], "03970837": [103, 107, 123, 129], "00535434": [103, 107, 123, 129], "02353762": [103, 107, 123, 129], "05116226": [103, 107, 123, 129], "02788907": [103, 107, 123, 129], "06848346": [103, 107, 123, 129], "05154399": [103, 107, 123, 129], "0371798": [103, 107, 123, 129], "05128025": [103, 107, 123, 129], "dydact": [103, 107, 123, 129], "gym_env": [103, 107, 123, 129, 389], "reset_kei": [103, 107, 123, 129, 144, 174, 179, 180, 181, 383], "multitask": [103, 107, 123, 129], "multiag": [103, 107, 116, 123, 124, 125, 129, 202, 230, 238, 247, 309], "another_reward": [103, 107, 123, 129], "auto_cast_to_devic": [103, 107, 123, 129, 384], "soon": [103, 107, 123, 124, 125, 129], "__sort": [103, 107, 123, 129], "as__": [103, 107, 123, 129], "normal": [103, 107, 123, 129, 162, 190, 204, 205, 220, 224, 227, 228, 233, 245, 246, 254, 255, 265, 269, 281, 294, 297, 344, 346, 362, 366, 368, 374, 376, 384, 390], "argmaxmodul": [103, 107, 123, 129], "n_ob": [103, 107, 123, 129, 160, 262, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 377], "n_act": [103, 107, 123, 129, 160, 279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 377], "ourselv": [103, 107, 123, 129, 373, 390], "emul": [103, 107, 123, 129], "epoch": [103, 107, 123, 129, 348, 373, 383, 384], "input_td": [103, 107, 123, 129], "rollout_td": [103, 107, 123, 129], "state_kei": [103, 107, 123, 129], "prevail": [103, 107, 123, 129, 145, 174, 202], "creator": [104, 353, 354, 360, 361, 362], "substitut": [104, 179, 190, 376], "vecnorm": [104, 362], "env_creat": [104, 371], "test_env1": 104, "_td": 104, "observation_count": [104, 390], "test_env2": 104, "sleep": [104, 390], "ps": 104, "p1": 104, "p2": 104, "9934": 104, "env_str": 105, "device_map": 105, "accross": [106, 108], "registri": 106, "asyncvectorenv": 106, "involv": [106, 108, 109, 117, 118, 126, 141, 375, 377], "pixel_observ": [106, 108, 109, 126], "pixelobservationwrapp": [106, 108, 109, 126], "adventur": [106, 108], "airraid": [106, 108, 390], "alien": [106, 108], "time_limit": 106, "timelimit": [106, 117, 118, 130, 131], "default_info_dict_read": [106, 107, 108, 123], "reader": [106, 107, 108, 123, 372], "set_info_dict_read": [106, 107, 108, 123, 375], "info_dict": [106, 107, 108, 123], "auto_register_info_dict": [106, 107, 108, 123], "multibinari": [106, 108], "multidiscret": [106, 108], "rag": [106, 108], "gym_conversion_exampl": [106, 108], "info_dict_read": [107, 123], "ignore_priv": 107, "baseinfodictread": 107, "tensordictprim": [107, 123, 219, 223, 276, 374], "succe": [107, 123], "underscor": 107, "primer": [107, 180, 219, 223, 276, 374], "halfcheetah": [107, 123, 137, 170, 371], "reward_run": [107, 123], "read_act": 107, "read_don": 107, "nonsens": 107, "fallback": 107, "broken": [107, 194], "read_ob": 107, "dictat": [107, 265, 269, 297, 371, 385], "read_reward": 107, "hoc": [107, 123, 376], "dict_read": 107, "my_info_kei": 107, "some_env": 107, "vecenv": 108, "vectorenv": 108, "secur": 109, "habitat3": 109, "ai": [109, 386], "habitatrenderpick": 109, "isaacgym": [110, 111], "isaacgymwrapp": [110, 364], "isaacgymenv": [111, 364], "webpag": 111, "isaac": 111, "essenc": [111, 375], "instadeepai": [112, 113], "2306": [112, 113], "09884": [112, 113], "snake": [112, 113], "grid": [112, 113, 331], "bodi": [112, 113], "body_st": [112, 113], "fruit_posit": [112, 113], "col": [112, 113], "head_posit": [112, 113], "tail": [112, 113], "game2048": [112, 113], "maze": [112, 113], "cleaner": [112, 113], "cvrp": [112, 113], "multicvrp": [112, 113], "minesweep": [112, 113], "rubikscub": [112, 113], "knapsack": [112, 113], "sudoku": [112, 113], "tsp": [112, 113], "connector": [112, 113], "v2": [112, 113, 127, 128, 306, 320, 321, 322, 323, 325, 326, 327, 328, 374, 390], "mmst": [112, 113], "graphcolor": [112, 113], "partli": [112, 113], "scrambl": [112, 113], "robotwarehous": [112, 113], "tetri": [112, 113], "binpack": [112, 113], "jobshop": [112, 113], "0x1fca91910": 112, "122": [112, 113, 371, 374, 385, 390], "0x1ff9baee0": 112, "134": [112, 113, 371, 385], "0x1ff9ba7c0": 112, "172": [112, 113, 385], "drastic": [113, 123, 387], "rubric": [113, 162, 271], "mo": [114, 115], "minecart": [114, 115], "mo_gym": 115, "qualnam": 116, "leverag": [116, 124, 125, 371, 384, 390], "neural": [116, 124, 125, 204, 205, 242, 268, 366, 372, 373, 374, 376, 383, 384, 385, 390], "group_map": [116, 117, 118, 124, 125, 130, 131, 132, 383], "constructiuon": [116, 124, 125], "premad": [116, 117, 118, 124, 125, 130, 131, 309], "all_in_one_group": [116, 132], "agent_0": [116, 124, 125, 132, 383], "agent_1": [116, 124, 125, 132], "agent_2": [116, 124, 125, 132], "agent_3": 116, "one_group_per_ag": [116, 124, 125], "meltingpot": [117, 118], "2211": [117, 118], "13746": [117, 118], "melt": [117, 118], "pot": [117, 118], "novel": [117, 118, 377], "social": [117, 118], "familiar": [117, 118, 372, 384, 390], "unfamiliar": [117, 118], "broad": [117, 118], "cooper": [117, 118, 383, 384], "decept": [117, 118], "reciproc": [117, 118], "trust": [117, 118, 223], "stubborn": [117, 118], "substrat": [117, 118], "ml_collect": 117, "config_dict": 117, "configdict": 117, "categorical_act": [117, 118, 124, 125, 127, 128, 130, 131], "marlgroupmaptyp": [117, 118, 124, 125, 130, 131, 132, 364, 383], "agent_nam": [117, 118, 130, 131, 132], "agent_names_to_indices_map": [117, 118, 130, 131], "env_torchrl": [117, 118], "commons_harvest__open": [117, 118], "rgb": [117, 118], "144": [117, 118, 385, 387], "192": [117, 118, 372, 385], "collective_reward": [117, 118], "ready_to_shoot": [117, 118], "88": [117, 118, 127, 128, 371, 372, 385, 386], "substrate_config": 118, "get_config": 118, "mp_env": 118, "build_from_config": 118, "default_player_rol": 118, "environn": 119, "mymbenv": [119, 203, 226], "world_model": [119, 203, 226, 290], "hidden_observ": [119, 203, 226], "mlp": [119, 203, 204, 205, 207, 208, 209, 210, 216, 219, 223, 226, 230, 251, 257, 276, 283, 285, 366, 372, 376, 377, 380, 382, 386, 389], "worldmodelwrapp": [119, 203, 226], "activation_class": [119, 203, 204, 205, 207, 208, 209, 210, 215, 216, 224, 226, 229, 230, 372, 376, 383, 384, 389], "relu": [119, 203, 211, 226, 233, 278], "activate_last_lay": [119, 203, 210, 224, 226], "sail": [120, 121], "sg": [120, 121], "10558": [120, 121], "readthedoc": 120, "en": 120, "python_interfac": 120, "envpoolmixin": 121, "env_bas": 121, "task_id": 121, "env_typ": 121, "gym_reset_return_info": 121, "envpool_env": 121, "www": [122, 227, 228], "fetch_openml": 122, "106": [122, 385], "my_env_fun": [123, 129], "custom_attribute_list": [123, 129], "custom_attribut": [123, 129], "custom_method_list": [123, 129], "custom_method": [123, 129], "deploi": [123, 129, 141], "slight": [123, 129, 372], "share_individual_td": [123, 129], "shared_memori": [123, 129], "policy_proof": [123, 129], "ll": [123, 129, 217, 218, 221, 222, 371, 372, 373, 374, 375, 376, 377, 378, 380, 384, 390], "serial_for_singl": [123, 129, 372], "circular": [123, 129, 371], "list_of_kwarg": [123, 129], "com_veloc": [123, 129], "head_height": [123, 129], "joint_angl": [123, 129], "torso_vert": [123, 129], "stringent": [123, 373, 383, 384], "inter": 123, "penv": 123, "env_fix": 123, "influenc": 123, "thumb": [123, 373], "myenv": [123, 141, 149, 152], "pipe": 123, "update_kwarg": [123, 129], "pettingzoo": [124, 125, 383, 384], "pet": [124, 125], "zoo": [124, 125], "__": [124, 125], "aecenv": [124, 125], "use_mask": [124, 125], "dead": [124, 125], "done_on_ani": [124, 125, 383], "compulsori": [124, 125], "adversary_0": [124, 125, 383], "adversari": [124, 125, 383], "vectoris": [124, 125, 217, 218, 221, 222], "sisl": 124, "multiwalker_v9": 124, "return_st": [124, 125], "aec": [124, 125], "n_piston": [124, 125], "pistonball_v6": [124, 125], "piston": [124, 125], "piston_0": [124, 125], "piston_1": [124, 125], "piston_20": [124, 125], "tictactoe_v3": [124, 125], "player": [124, 125], "player_1": [124, 125], "player_2": [124, 125], "butterfli": 125, "parallel_env": [125, 371, 389, 390], "vikashplu": 126, "wiki": 126, "06828": 126, "from_depth": 126, "smacv2": [127, 128], "starcraft": [127, 128], "challeng": [127, 128, 375, 385, 386], "10gen_terran": [127, 128], "10gen_zerg": [127, 128], "10gen_protoss": [127, 128], "3m": [127, 128], "8m": [127, 128], "25m": [127, 128], "5m_vs_6m": [127, 128], "8m_vs_9m": [127, 128], "10m_vs_11m": [127, 128], "27m_vs_30m": [127, 128], "mmm": [127, 128], "mmm2": [127, 128], "2s3z": [127, 128], "3s5z": [127, 128], "3s5z_vs_3s6z": [127, 128], "3s_vs_3z": [127, 128], "3s_vs_4z": [127, 128], "3s_vs_5z": [127, 128], "1c3s5z": [127, 128], "2m_vs_1z": [127, 128], "corridor": [127, 128], "6h_vs_8z": [127, 128], "2s_vs_1sc": [127, 128], "so_many_banel": [127, 128], "bane_vs_ban": [127, 128], "2c_vs_64zg": [127, 128], "old": [127, 128, 294, 390], "smac": [127, 128], "map_nam": [127, 128], "176": [127, 128, 385, 390], "battle_won": [127, 128], "dead_al": [127, 128], "dead_enemi": [127, 128], "episode_limit": [127, 128], "322": [127, 128, 385], "Or": [127, 128, 229], "procedur": [127, 128], "distribution_config": [127, 128], "n_unit": [127, 128], "n_enemi": [127, 128], "team_gen": [127, 128], "dist_typ": [127, 128], "weighted_team": [127, 128], "unit_typ": [127, 128], "marin": [127, 128], "maraud": [127, 128], "medivac": [127, 128], "exception_unit_typ": [127, 128], "start_posit": [127, 128], "surrounded_and_reflect": [127, 128], "map_x": [127, 128], "map_i": [127, 128], "capability_config": [127, 128], "131": [127, 128, 385], "starcraft2env": 128, "proroklab": [130, 131], "vectorizedmultiagentsimul": [130, 131], "2207": [130, 131], "03530": [130, 131], "basescenario": 130, "descript": [130, 140, 372, 373], "perfrom": [130, 131], "defaultt": 130, "continuous_act": [130, 131, 329, 383, 384], "repositiori": 130, "sparsiti": 130, "unbatched_action_spec": [130, 131, 384], "unbatched_observation_spec": [130, 131], "unbatched_reward_spec": [130, 131], "het_spec": [130, 131], "het_specs_map": [130, 131], "flock": [130, 131, 329], "agent_collision_rew": [130, 131], "agent_distance_rew": [130, 131], "ca": 132, "environment4": 132, "get_group_map": 132, "sumbodul": 133, "model_bas": [134, 135, 203, 226], "out_keys_inv": [134, 147, 149, 150, 152, 162, 163, 164, 168, 169, 176, 183, 385], "decod": [134, 234], "model_based_env": [134, 289], "dreamerenv": [134, 289, 364], "model_based_env_ev": 134, "num_interv": 137, "out_action_kei": 137, "samplingstrategi": 137, "optino": 137, "intenum": 137, "interv": [137, 330, 331, 340, 350, 372, 385], "action_disc": 137, "transform_input_spec": [137, 141, 148, 149, 150, 151, 162, 164, 168, 169, 174, 178, 179, 180, 183, 185, 187, 192], "masker": 138, "tensor_spec": [138, 193, 202, 286, 287, 297, 299], "maskedenv": 138, "ones_lik": 138, "scatter": 138, "fill_float": 140, "fill_int": 140, "fill_bool": 140, "someenvclass": 140, "autoresetenv": 140, "argumet": 140, "fooenv": 140, "sign": [140, 176, 311, 383], "envtyp": 140, "reshape_fn": 141, "reset_func": 141, "environmt": 141, "request": [141, 167], "tensordict_batch_s": 141, "els": [141, 217, 218, 221, 222, 234, 366, 368, 371, 372, 373, 374, 383, 384, 385, 386], "tensordict_reset": [141, 385], "transform_env_batch_s": [141, 148, 183, 192], "transform_output_spec": [141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 192], "transform_observation_spec": [141, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 162, 164, 168, 169, 170, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 192, 385], "transform_reward_spec": [141, 142, 147, 148, 149, 150, 154, 160, 168, 169, 172, 173, 174, 175, 176, 178, 183, 185, 192], "transformfull_done_spec": [141, 148, 149, 150, 154, 160, 168, 169, 175, 178, 183, 192], "biner": 142, "burn_in": 143, "burn": 143, "date": [143, 334], "retur": 143, "burnt": 143, "gru_modul": [143, 219, 276], "input_s": [143, 217, 218, 219, 221, 222, 223, 276, 374], "hidden_s": [143, 217, 218, 219, 221, 222, 223, 276, 374], "set_recurrent_mod": [143, 219, 223, 374], "burn_in_transform": 143, "gru": [143, 180, 218, 219, 276], "num_lay": [143, 217, 219, 221, 223, 234, 235, 276], "86": [143, 372, 385], "3008": [143, 372], "0344": 143, "padding_valu": [144, 227, 228], "as_invers": 144, "movement": 144, "1312": [144, 372], "5602": 144, "unsqueezetransform": [144, 385, 387], "consumpt": [144, 364], "followin": 144, "pictur": 144, "pixels_trsf": [144, 387], "grayscal": [144, 372, 374, 387, 390], "data_exclud": [144, 387], "del_kei": [145, 186, 382, 385], "unsqueeze_if_oor": 145, "observation_posit": 145, "observation_veloc": 145, "key1": [145, 339, 347], "key2": [145, 339, 347], "center": [146, 331], "width": [146, 170], "scalar": [147, 172, 208, 210, 231, 232, 254, 255, 259, 260, 263, 264, 275, 279, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 303, 309, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 366, 372, 377, 385], "permit": [147, 156, 185, 279, 281, 294, 297, 299], "rewardsc": [148, 184, 371, 372, 374], "rewardclip": 148, "transformed_env": [148, 183, 184, 375], "transform_env_devic": [148, 150, 183, 192], "dtype_in": 149, "dtype_out": 149, "scan": [149, 152, 270, 271], "resp": [149, 152], "not_transform": [149, 152], "constructedw": [149, 152], "orig_devic": 150, "unspecifi": 150, "transform_done_spec": [150, 183, 192], "num_actions_effect": 151, "max_act": 151, "include_forward": 151, "num_act": [151, 287, 376], "action_out": 151, "_call": [151, 156, 385], "eol_kei": 153, "lives_kei": 153, "eol_attribut": 153, "unwrap": 153, "breakout": 153, "210": [153, 164, 385], "160": [153, 164, 372, 385], "eol_transform": 153, "eol": 153, "dqnloss": [153, 279, 280, 282, 285, 287, 288, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 309, 355, 364, 367, 372, 374, 380], "register_kei": 153, "loss_or_advantag": 153, "lossmodul": [153, 348, 357, 358, 364], "valueestimatorbas": [153, 295, 364], "excluded_kei": 154, "finit": [155, 376, 387], "first_dim": 156, "last_dim": 156, "allow_positive_dim": [156, 185], "th": [156, 185, 217, 221, 385], "frameskip": 156, "repeatedli": [157, 373, 384], "init_kei": [159, 262], "tracker": 159, "pi_curr": 160, "pi_0": 160, "overfit": 160, "probabilist": [160, 265, 364, 373, 389], "get_dist": [160, 269, 270], "mod": [160, 219, 223, 262, 272, 374, 380], "normalparamextractor": [160, 366, 373, 376, 384], "probabilisticactor": [160, 251, 252, 253, 256, 279, 280, 284, 286, 287, 293, 296, 297, 298, 299, 300, 302, 303, 366, 371, 373, 376, 383, 384], "tanhnorm": [160, 251, 252, 253, 265, 271, 279, 280, 293, 297, 298, 299, 300, 302, 303, 364, 373, 384, 389], "return_log_prob": [160, 251, 252, 253, 265, 269, 271, 299, 366, 373, 376, 383, 384, 389], "apply_": 160, "copy_": [160, 371], "formulat": 160, "diverg": [160, 219, 223, 265, 269, 290, 294], "noop": [161, 389], "trial": 161, "standard_norm": [162, 173, 190, 371, 372, 374], "affin": [162, 173, 190], "layer": [162, 190, 204, 205, 207, 208, 213, 215, 217, 218, 219, 221, 222, 223, 224, 229, 230, 231, 232, 234, 235, 242, 243, 249, 261, 272, 366, 372, 373, 374, 376, 383, 386], "epsilon": [162, 254, 255, 259, 260, 263, 264, 301, 346, 372, 373, 374, 376], "recover": 162, "set_default_tensor_typ": 162, "doubletensor": 162, "isclos": 162, "next_ob": [162, 311, 312, 313, 314, 389], "init_stat": [162, 371, 372, 373, 374], "3752e": 162, "5087e": 162, "9294e": 162, "9636": 162, "5608": 162, "6408": 162, "num_it": [162, 372, 373], "reduce_dim": [162, 371, 372, 373, 374], "cat_dim": [162, 371, 372, 373, 374], "keep_dim": [162, 372, 374], "statist": [162, 190, 299, 362, 371, 372, 373, 390], "gaussian": [162, 180, 203, 226, 231, 232, 237, 254, 255, 373, 383], "empir": [162, 203, 226, 265, 269, 371, 373, 384], "3d": [162, 204], "third": [162, 258, 383, 384], "reorder": 164, "in_keys_in": 164, "channel": [164, 182, 229, 234, 235, 372], "r3m": [166, 386], "resnet": [166, 186, 188], "visual": [166, 186, 188, 331, 373, 383, 385], "embed": [166, 186, 187, 188, 207, 238, 250, 251, 252, 253, 268, 273, 386], "ego4d": [166, 186, 188], "univers": [166, 186, 188, 375], "suraj": [166, 186], "nair": [166, 186], "aravind": [166, 186], "rajeswaran": [166, 186], "vikash": [166, 186, 188], "kumar": [166, 186, 188], "chelsea": [166, 186], "finn": [166, 186], "abhinav": [166, 186], "gupta": [166, 186], "2203": [166, 186, 226, 386], "12601": [166, 186, 386], "_init": [166, 186, 371], "resnet50": [166, 188, 386], "model_nam": [166, 186, 188, 334], "resnet34": 166, "resnet18": 166, "r3m_vec": [166, 386], "stack_imag": [166, 188], "tread": [166, 188], "separet": [166, 188], "hub": [166, 188, 375, 386], "resnet50_weight": [166, 188], "imagenet1k_v1": [166, 188], "download_path": [166, 188], "tensor_pixels_kei": [166, 188], "sub_seq_len": 167, "sample_dim": [167, 371], "primarili": [167, 376], "hesit": 167, "robust": 167, "mix": [167, 238, 247, 309, 371, 383, 384], "improp": 167, "dummyenv": 168, "another_oth": 168, "other_reward": 168, "create_copi": 169, "stuff": [169, 378], "newnam": 169, "r2g": 171, "reward_to_go": 171, "bernoulli_": 171, "9010": 171, "9404": [171, 317], "9701": [171, 317], "9900": [171, 317], "0000": [171, 181, 259, 260, 272, 317, 372, 373, 374, 385, 389], "crash": 171, "clamp_min": 172, "clamp_max": 172, "clip_min": 172, "clip_max": 172, "episode_": 174, "reward1": 174, "reward2": 174, "episode_reward": [174, 383, 384], "keep_reward": 175, "keep_don": 175, "logical_or": 176, "squeeze_dim": 177, "step_count_kei": 178, "update_don": 178, "disjunct": 178, "recognis": 178, "target_return": 179, "subtract": 179, "default_valu": [180, 276, 374], "unit": [180, 203, 215, 217, 218, 234, 235, 240, 241, 373], "transfomedenv": 180, "mykei": 180, "__unless": 180, "exists__": 180, "get_primers_from_modul": [180, 219, 223, 364], "10th": 181, "0216": 181, "1149": 181, "1990": 181, "2749": 181, "3281": 181, "9290": 181, "3702": 181, "8978": 181, "from_int": 182, "shape_toler": 182, "permuat": 182, "ri": 182, "principl": 183, "cattransform": 183, "notabl": 183, "rewardsum": [183, 192, 201, 383, 384], "smoothli": 184, "add_1": 184, "cache_spec": 184, "set_missing_toler": 184, "keyerror": 184, "unsqueeze_dim": [185, 385], "danger": 185, "vc1": 186, "vc1_vec": 186, "untrain": 186, "make_noload_model": 186, "vip": [187, 188, 386], "implicit": [188, 286, 293, 387], "jason": 188, "ma": 188, "shagun": 188, "sodhani": 188, "dinesh": 188, "jayaraman": 188, "osbert": 188, "bastani": 188, "ami": 188, "zhang": 188, "vip_vec": 188, "final_nam": 189, "sb3": 189, "terminal_obs_read": 189, "truli": [189, 389], "till": 189, "shared_td": 190, "decai": [190, 254, 255, 259, 301, 346, 371, 372, 374, 390], "9999": [190, 385], "0001": [190, 215, 233, 373, 385], "to_observation_norm": 190, "frozen_copi": 190, "race": 190, "underflow": [190, 346], "build_td_for_shared_vecnorm": 190, "memmori": 190, "queue": [190, 387], "td_share": 190, "unfreez": 190, "train_env": 190, "eval_env": 190, "state_dim": [191, 206, 211, 237, 240, 241, 256], "action_dim": [191, 206, 207, 209, 211, 237, 256, 371, 382], "gsde": [191, 298, 362], "gsdemodul": 191, "rb_transform": 192, "resist": 192, "insensit": 192, "sensit": [192, 372], "_orig": 192, "95": [192, 226, 305, 372, 373, 374, 385], "tdreset": [192, 382], "window": [192, 262, 383, 387, 389], "edit": [192, 378], "cube": 193, "check_dtyp": 194, "discrep": [194, 279, 281, 282, 283, 294, 297, 299, 309], "rng": [194, 385], "revert": [194, 376, 387], "probabilistictdmodul": [199, 200, 224, 265, 269, 310, 344], "next_tensordict": 201, "keep_oth": [201, 385], "exclude_reward": 201, "exclude_don": 201, "exclude_act": 201, "next_": 201, "funtion": 201, "_stepmdp": 201, "write_full_fals": 202, "_terminated_or_trunc": 202, "entropi": [203, 279, 280, 281, 286, 287, 293, 294, 296, 297, 298, 300, 302, 303, 384], "botev": 203, "2013": 203, "cem": 203, "plan": [203, 225, 226], "varianc": [203, 220, 233, 245, 246, 367, 371, 373, 384], "k": [203, 217, 218, 221, 222], "maximis": [203, 207, 209, 226, 366, 372, 373, 384], "modelbasedenv": [203, 226], "planning_horizon": [203, 226], "optim_step": [203, 226, 372, 380], "mpc": [203, 225, 226], "num_candid": [203, 226], "candid": [203, 226], "top_k": [203, 226], "modelbasedenvbas": [203, 225, 226, 364], "safemodul": [203, 225, 251, 253, 269, 279, 280, 286, 287, 293, 297, 298, 299, 300, 302, 303, 353, 354, 358, 364, 389], "num_cel": [204, 205, 207, 208, 209, 210, 215, 216, 219, 223, 224, 229, 230, 251, 276, 372, 373, 374, 376, 377, 380, 383, 384, 389], "elu": [204, 205, 207, 208, 209, 210, 215, 216, 229, 372, 389], "activation_kwarg": [204, 205, 224], "norm_class": [204, 205, 207, 208, 224], "norm_kwarg": [204, 205, 224], "bias_last_lay": [204, 205, 207, 208, 209, 210, 216, 224], "aggregator_class": [204, 205, 207, 208, 372, 374, 389], "squashdim": [204, 205, 207, 216, 229, 389], "aggregator_kwarg": [204, 205, 207, 208, 372, 374], "squeeze_output": [204, 205, 207, 208, 372, 374], "cell": [204, 205, 217, 218, 219, 221, 222, 223, 224, 229, 230, 373, 375, 376, 377, 378, 379, 380], "kernel": [204, 205, 216, 229], "cnet": [204, 205], "conv3d": 204, "lazyconv2d": [205, 207, 208, 216, 229, 389], "transformer_config": [206, 237, 256], "decisiontransform": [206, 237], "dtconfig": [206, 211, 237], "2202": [206, 211, 296], "05607": [206, 211, 296], "return_to_go": [206, 211, 237, 256], "conv_net_kwarg": [207, 208], "mlp_net_kwarg": [207, 208, 209], "use_avg_pool": [207, 208], "WITH": [207, 208, 209, 210, 263, 264, 301], "1509": [207, 208, 209, 210, 226, 263, 264, 283, 292, 301, 385], "02971": [207, 208, 209, 210, 263, 264, 301], "reus": [207, 338], "convnet": [207, 208, 216, 229, 374, 376, 389], "ndims_in": 207, "avgpool": [207, 208], "lazylinear": [207, 208, 209, 210, 216, 224, 366, 373, 376, 385, 386, 389], "2304": [207, 372], "adaptiveavgpool2d": [208, 372, 374], "output_s": [208, 372, 374], "squeeze2dlay": 208, "400": [209, 210, 379, 384, 385, 387], "mlp_net_kwargs_net1": 210, "mlp_net_kwargs_net2": 210, "mlp1": 210, "mlp2": 210, "decion": 211, "desdescrib": 211, "n_embd": 211, "n_layer": [211, 217, 221], "n_head": 211, "n_inner": 211, "n_posit": 211, "resid_pdrop": 211, "attn_pdrop": 211, "gpt2config": 211, "atol": [212, 244], "rtol": [212, 244], "batch_shap": [212, 244], "event_shap": [212, 244], "absolut": [212, 244, 371], "densiti": [212, 227, 228, 236, 246], "mass": [212, 227, 228, 236, 246, 385], "rsampl": [212, 228, 236, 269], "sample_shap": [212, 227, 228, 236], "softmax": [213, 228, 236, 257, 258], "var_num": [214, 239, 257, 258, 267], "action_value_kei": [214, 239, 257, 258, 266, 267, 295, 309], "action_mask_kei": [214, 239, 257, 258, 259, 260, 266, 267], "perspect": [214, 258, 288, 373], "1707": [214, 258, 288, 297], "06887": [214, 258, 288], "mult": [214, 230, 239, 257, 258, 266, 267], "tensordict_modul": [214, 217, 218, 221, 222, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 282, 286, 287, 293, 297, 298, 299, 300, 302, 303, 366], "nbin": [214, 257, 366], "customdistributionalqv": 214, "log_softmax": [214, 257], "from_modul": [214, 268, 271, 389], "one_hot": [214, 228, 239], "qvalue_actor": [214, 239, 257, 266, 366], "to_modul": [214, 268, 271, 371, 389], "std_bia": 215, "std_min_val": 215, "belief": [215, 234, 240, 241], "1912": [215, 289, 290, 291], "01603": [215, 289, 290, 291], "softplu": [215, 233, 275, 277, 278], "out_features_valu": 216, "cnn_kwarg": [216, 372], "mlp_kwarg": [216, 372], "duel": 216, "cnn": [216, 229, 372, 376, 389], "06581": 216, "batch_first": [217, 219, 221, 223, 374], "bidirect": [217, 221, 374], "cudnn": [217, 218, 221, 222, 374], "vmap": [217, 218, 221, 222, 248, 268, 271, 389], "rnn": [217, 218, 221, 222, 374, 376], "device_count": [217, 218, 221, 222, 390], "n_in": [217, 218, 221, 222], "n_out": [217, 218, 221, 222], "h0": [217, 218, 221, 222], "h1": [217, 218, 221, 222], "call_gru": [217, 218], "h_out": [217, 218, 221, 222], "batched_cal": [217, 218, 221, 222], "gate": [217, 218, 221], "r_t": 217, "sigma": [217, 218, 220, 221, 222, 245, 246, 254, 255, 263, 264, 373, 383], "w_": [217, 218, 221, 222], "ir": [217, 218], "x_t": [217, 221], "b_": [217, 218, 221, 222], "hr": [217, 218, 221], "h_": [217, 218, 221], "z_t": 217, "iz": [217, 218], "hz": [217, 218], "n_t": 217, "odot": [217, 218, 221, 222], "hn": [217, 218, 221], "h_t": [217, 221], "sigmoid": [217, 218, 221, 222], "hadamard": [217, 218, 221, 222], "multilay": [217, 221], "_t": [217, 221, 384, 385], "ge": [217, 221], "bernoulli": [217, 221], "b_ih": [217, 218, 221, 222, 223], "b_hh": [217, 218, 221, 222, 223], "seq": [217, 219, 221, 223, 262, 374, 380, 382], "h_0": [217, 221, 222], "unbatch": [217, 221], "pack_padded_sequ": [217, 221], "pack_sequ": [217, 221], "num": [217, 221, 380], "_layer": [217, 221], "_size": [217, 218, 221, 222], "h_n": [217, 221], "packedsequ": [217, 221], "weight_ih_l": [217, 221], "learnabl": [217, 218, 221, 222], "w_ir": 217, "w_iz": 217, "w_in": 217, "num_direct": [217, 221], "weight_hh_l": [217, 221], "w_hr": 217, "w_hz": 217, "w_hn": 217, "bias_ih_l": [217, 221], "b_ir": 217, "b_iz": 217, "b_in": 217, "bias_hh_l": [217, 221], "b_hr": 217, "b_hz": 217, "b_hn": 217, "mathcal": [217, 218, 221, 222], "sqrt": [217, 218, 221, 222, 263, 264], "frac": [217, 218, 221, 222, 373], "seq_len": [217, 221], "subtli": 217, "matrix": [217, 221, 231, 232], "contrast": [217, 292, 387], "hx": [217, 218, 221, 222], "lstmcell": [218, 223], "gru_cel": 218, "z": 218, "weight_ih": [218, 222], "weight_hh": [218, 222], "bias_ih": [218, 222], "bias_hh": [218, 222], "rocm": [218, 222], "embedd": [219, 223], "grucel": [219, 268], "python_bas": [219, 223], "recurrent_st": [219, 223, 276, 374], "custom_kei": [219, 223], "recurrent_mod": [219, 223], "make_tensordict_prim": [219, 223, 374], "rs": [219, 371], "gru_module_train": 219, "policy_train": [219, 223], "traj_td": [219, 223], "policy_infer": [219, 223], "td_inf": [219, 223], "assert_clos": [219, 223], "upscal": [220, 245, 246], "tanh_loc": [220, 245, 246], "event_dim": [220, 244, 245], "poor": [220, 245, 246], "explos": [220, 245, 246], "switch": [220, 246, 329], "formula": [220, 245, 246, 279, 281, 294, 297, 367, 373], "proj_siz": 221, "c0": [221, 222], "c1": [221, 222], "call_lstm": [221, 222], "c_out": [221, 222], "i_t": 221, "ii": [221, 222], "hi": [221, 222], "f_t": 221, "hf": [221, 222], "g_t": 221, "ig": [221, 222], "hg": [221, 222], "o_t": 221, "ho": [221, 222], "c_t": 221, "c_": 221, "forget": 221, "1402": 221, "1128": 221, "c_0": [221, 222], "proj": 221, "c_n": 221, "w_ii": 221, "w_if": 221, "w_ig": 221, "w_io": 221, "w_hi": 221, "w_hf": 221, "w_hg": 221, "w_ho": 221, "b_ii": 221, "b_if": 221, "b_ig": 221, "b_io": 221, "b_hi": 221, "b_hf": 221, "b_hg": 221, "b_ho": 221, "weight_hr_l": 221, "_revers": 221, "analog": [221, 376], "cn": 221, "lstm_cell": 222, "h_1": 222, "c_1": 222, "time_step": [222, 262], "cx": 222, "correspont": 223, "recurrent_state_h": [223, 374], "recurrent_state_c": [223, 374], "triplet": [223, 266, 267], "lstm_modul": 223, "rs_h": 223, "rs_c": 223, "hidden0": 223, "hidden1": 223, "single_bias_last_lay": 224, "layer_class": 224, "layer_kwarg": 224, "perceptron": [224, 376], "aslo": 224, "42": [224, 279, 280, 282, 286, 293, 300, 371, 372, 385], "noisylinear": [224, 231, 364, 372], "noisylazylinear": [224, 364], "mpcplanner": 225, "tensordict_out": [225, 390], "mppi": 226, "covari": 226, "william": [226, 299], "aldrich": 226, "theodor": 226, "01149": 226, "hansen": 226, "wang": 226, "su": 226, "04955": 226, "valueoper": [226, 251, 252, 253, 279, 280, 281, 282, 287, 293, 294, 297, 298, 299, 300, 302, 303, 358, 366, 371, 373, 377], "tdlambdaestim": [226, 364, 371], "value_net": [226, 283, 285, 299, 311, 312, 313, 314, 373, 376, 377, 380], "adv": 226, "lmbda": [226, 305, 311, 314, 316, 322, 323, 324, 327, 328, 367, 371, 373, 384], "value_network": [226, 282, 283, 285, 286, 288, 293, 300, 311, 312, 313, 314, 367, 371, 373, 377, 380, 383], "temperatur": [226, 280, 286, 293], "neg_inf": [227, 228], "inf": [227, 228], "api_doc": [227, 228], "tf_agent": [227, 228], "event": [227, 228, 236, 320, 321, 322, 323, 325, 326, 327, 328, 387], "unnorm": [227, 228, 236], "sparse_mask": [227, 228], "dens": [227, 228], "0831": [227, 228], "1203": [227, 228], "0928": [227, 228], "1972": [227, 228], "grad_method": [228, 236], "reparamgradientstrategi": [228, 236], "passthrough": [228, 236], "relaxedonehot": [228, 236], "zeros_lik": [228, 385], "sample_non_valid": 228, "share_param": [229, 230, 383, 384], "homogen": [229, 230, 383, 384], "agent_network": [229, 230], "modulelist": [229, 230, 389], "2592": [229, 372], "decentr": 229, "n_agent_input": [230, 383, 384], "n_agent_output": [230, 383, 384], "lazili": [230, 385], "toech": 230, "centalis": 230, "shown": [230, 366, 382, 383, 384, 387], "std_init": [231, 232], "initialize_paramet": 231, "isol": [231, 295], "1706": [232, 247], "10295v3": 232, "induc": 232, "aid": 232, "scale_map": 233, "biased_softplus_1": 233, "scale_lb": [233, 240, 241], "module_norm": 233, "1803": [234, 235, 238], "10122": [234, 235], "rnn_hidden": 234, "latent": 235, "excacli": 236, "inres": 237, "mu": [237, 263, 264, 373], "state_shap": [238, 309], "mixing_embed_dim": [238, 309], "qmix": [238, 383, 384], "mixer": [238, 247, 309], "monoton": 238, "hyper": 238, "11485": 238, "qmixerloss": [238, 247], "qmix_vdn": [238, 247], "vdn": [238, 247], "greedi": [239, 258, 259, 260, 267, 372, 374, 376], "hidden_dim": [240, 241], "posterior": [240, 290], "rssm": [240, 241, 290], "1811": [240, 241], "04551": [240, 241], "obs_embed": 240, "rnn_hidden_dim": 241, "dream": 241, "tanhtransform": 245, "get_mod": 245, "adam": [245, 371, 372, 373, 374, 377, 380, 383, 384, 385], "decomposit": 247, "05296": 247, "hide": [248, 373, 383, 384], "satisfi": [248, 366], "vmap_dim": 248, "lam": 248, "sample_in": 248, "sample_in_td": 248, "vm": 248, "translat": [250, 265], "character": [250, 257, 265, 266, 268, 387], "overflow": [250, 257, 258, 265, 266, 267, 268, 269], "td_modul": [250, 251, 252, 253, 265, 268, 269, 271, 273, 376, 389], "3635": 250, "0340": 250, "1476": 250, "3911": [250, 385], "1664": [250, 372, 385], "5455": 250, "2247": 250, "4583": 250, "2916": 250, "2160": 250, "5337": 250, "5193": 250, "grad_fn": [250, 259, 260, 389], "addmmbackward0": 250, "actorvalueoper": [251, 366, 376], "get_policy_oper": [251, 252, 253, 281, 294, 297, 366], "standalon": [251, 252, 253, 376], "tdmodul": [251, 252, 253, 358], "get_critic_oper": 251, "common_oper": [251, 253], "policy_oper": [251, 252, 253], "value_oper": [251, 252, 253], "normalparamwrapp": [251, 252, 253, 265, 271, 279, 280, 287, 293, 297, 298, 299, 300, 302, 303, 364, 389], "module_hidden": [251, 253], "td_module_hidden": [251, 253], "module_act": [251, 253], "td_module_act": [251, 252, 253], "module_valu": [251, 252, 253], "td_module_valu": [251, 252, 253], "state_action_valu": [251, 273, 280, 286, 293, 300, 310, 358, 366, 371, 383, 389], "td_clone": [251, 252, 253], "tensordictmodulewrapp": [251, 353, 354, 358], "get_policy_head": [251, 252, 253], "safesequenti": [251, 252, 253, 309], "head": [251, 253, 276, 281, 294, 297], "get_value_head": [251, 252, 253], "get_value_oper": [251, 252, 253, 281, 294, 297], "action_modul": 252, "state_valu": [252, 253, 273, 281, 286, 293, 294, 297, 298, 300, 311, 312, 313, 314, 316, 318, 320, 322, 324, 325, 327, 366, 371, 373, 384], "actorcriticoper": [253, 281, 294, 297, 366, 376], "embeddig": 253, "refet": 253, "actorcriticwrapp": [253, 366, 371], "po": [254, 255, 260], "sigma_init": [254, 255, 383], "sigma_end": [254, 255, 383], "annealing_num_step": [254, 255, 259, 260, 263, 264, 371, 372, 374, 376, 380, 383], "captur": [254, 255, 259, 260, 263, 264], "omiss": [254, 255, 259, 260, 263, 264], "ommit": [254, 255, 259, 260, 263, 264], "inferec": 256, "set_tensor_kei": 256, "dt_inference_wrapp": 256, "baz": 256, "inference_context": 256, "obs_dim": 256, "tanhdelta": [256, 364, 371, 383], "dtactor": 256, "actor_modul": [256, 389], "dist_class": 256, "dist_kwarg": 256, "distribution_kwarg": [256, 265, 269, 373, 383, 384], "inference_actor": 256, "sequence_length": 256, "mask_context": 256, "out_act": 256, "qvaluemodul": [257, 266, 309, 374, 376, 380], "distributionaldqnnet": 257, "make_log_softmax": 257, "my_action_valu": [258, 267], "chanc": 258, "thid": 258, "eps_init": [259, 260, 263, 264, 372, 374, 376, 380], "eps_end": [259, 260, 263, 264, 372], "explorative_polici": [259, 260, 263, 264], "9055": [259, 260, 385], "9277": [259, 260], "6295": [259, 260], "2532": [259, 260], "addbackward0": [259, 260], "lmheadmodel": 261, "actor_head": [261, 281, 294, 297], "base_model": 261, "lm_head": 261, "macro": 262, "lookahead": 262, "n_action": [262, 280, 283, 285, 296, 300], "reshape_cat": 262, "actor_bas": 262, "obs_cat": 262, "obs_cat_reshap": 262, "action_orig": 262, "counter": [262, 341, 368], "ornstein": [263, 264, 371], "uhlenbeck": [263, 264, 371], "ou": [263, 264, 371], "correl": [263, 264], "noise_t": [263, 264], "noise_": [263, 264], "theta": [263, 264, 373, 385], "sigma_t": [263, 264], "sigma_": [263, 264], "anneal": [263, 264, 372, 376, 383], "ou_prev_nois": [263, 264], "ou_step": [263, 264], "x0": [263, 264], "sigma_min": [263, 264], "n_steps_ann": [263, 264], "is_init_kei": [263, 264], "_ou_prev_nois": [263, 264], "_ou_step": [263, 264], "default_interaction_typ": [265, 269, 376], "interaction_typ": [265, 269], "datacollectorbas": [265, 350, 353, 354, 358, 364], "set_interaction_typ": [265, 269], "compositedistribut": [265, 376], "distribution_map": 265, "name_map": 265, "cache_dist": [265, 269], "n_empirical_estim": [265, 269], "compound": [265, 376], "categ": 265, "chose": 267, "functionalmodul": 268, "functionalmodulewithbuff": 268, "td_fmodul": 268, "td_function": 268, "td_state": 268, "params_repeat": 268, "td_vmap": [268, 271], "random_sampl": [268, 269], "suppli": 269, "fist": 269, "log_prob_kei": [269, 384], "probabilistictensordictsequenti": [270, 279, 281, 294, 297, 299, 353, 354, 389], "partial_toler": [270, 271, 382], "who": [270, 271], "AND": [270, 271], "tensordictsequenci": 271, "tensordictsequ": 271, "safeprobabilisticmodul": [271, 366], "spec1": 271, "net1": 271, "module1": 271, "td_module1": 271, "spec2": 271, "module2": 271, "td_module2": 271, "clamp": [272, 290, 348, 383, 385], "boundari": [272, 373, 383, 384], "resolut": 272, "9944": 272, "9991": 272, "3020": 272, "2299": [272, 385], "5418": 272, "2989": 272, "6849": 272, "3169": 272, "2690": 272, "9649": [272, 385], "5686": 272, "8602": 272, "0315": 272, "8455": [272, 385], "6027": 272, "4746": 272, "7843": 272, "7782": 272, "2111": 272, "5115": 272, "4687": 272, "5760": 272, "custommodul": 273, "imaginari": 274, "imagin": 274, "transition_model": 274, "get_reward_oper": 274, "get_transition_model_oper": 274, "min_val": [275, 278], "_bia": 275, "surject": 278, "expln": 278, "biased_softplu": [278, 364], "beggin": 278, "biased_softplus_": 278, "syntax": [278, 371], "met": [278, 383, 385], "1602": 279, "01783v2": 279, "actor_network": [279, 280, 281, 282, 284, 286, 287, 293, 294, 296, 297, 298, 299, 300, 302, 303, 371, 373, 377, 383, 384], "critic_network": [279, 281, 294, 297, 299, 373, 384], "entropy_bonu": [279, 281, 294, 297, 373], "favour": [279, 281, 294, 297], "samples_mc_entropi": [279, 281, 294, 296, 297], "mont": [279, 281, 294, 297, 371], "carlo": [279, 281, 294, 297, 371], "entropy_coef": [279, 281, 294, 297, 373, 384], "critic_coef": [279, 281, 294, 297, 373], "loss_critic_typ": [279, 281, 294, 297, 299, 373], "l1": [279, 281, 282, 283, 287, 294, 297, 298, 299, 302, 303, 306, 309, 366, 371], "l2": [279, 281, 282, 283, 284, 285, 287, 290, 291, 294, 297, 298, 299, 302, 303, 306, 309, 371, 383], "smooth_l1": [279, 280, 281, 282, 283, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 306, 309, 373], "separate_loss": [279, 281, 282, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303], "propag": [279, 281, 282, 286, 287, 293, 294, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314, 373, 383, 384], "advantage_kei": [279, 281, 294, 297, 299, 311, 312, 313, 314], "value_target_kei": [279, 281, 294, 297, 299, 311, 312, 313, 314], "value_target": [279, 281, 294, 297, 299, 311, 312, 313, 314, 373, 384], "ddp": [279, 281, 294, 297, 299], "fsdp": [279, 281, 294, 297, 299], "divid": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 296, 297, 298, 299, 300, 302, 303, 351, 366, 371, 383, 384, 385], "clip_valu": [279, 281, 294, 297, 299], "loss_crit": [279, 297, 373, 384], "loss_entropi": [279, 297, 373, 384], "loss_object": [279, 297, 373, 384], "recur": [279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314, 315, 376], "next_reward": [279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314], "next_don": [279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314], "next_termin": [279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 311, 312, 313, 314], "loss_obj": 279, "next_observ": [279, 280, 282, 283, 285, 286, 287, 293, 297, 298, 299, 300, 302, 303, 382], "sacloss": [279, 292, 301, 364], "select_out_kei": [279, 280, 282, 286, 287, 293, 297, 298, 300, 302, 303], "make_value_estim": [279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 304, 309, 367, 371, 372, 383, 384, 389], "value_typ": [279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 305, 309, 371], "hyperparam": [279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 371], "enum": [279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 305, 309, 371], "default_value_estim": [279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 371, 389], "default_value_kwarg": [279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 364, 371], "dqn_loss": [279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 304, 309], "td1": [279, 280, 282, 283, 285, 287, 288, 289, 293, 295, 297, 298, 299, 300, 302, 303, 309, 371], "conserv": [280, 285], "qvalue_network": [280, 286, 287, 293, 298, 300, 302, 303], "loss_funct": [280, 282, 283, 284, 285, 286, 287, 293, 298, 300, 302, 303, 306, 309, 371, 383], "alpha_init": [280, 287, 296, 298, 300], "min_alpha": [280, 287, 296, 298, 300], "max_alpha": [280, 287, 296, 298, 300], "fixed_alpha": [280, 287, 296, 298, 300], "target_entropi": [280, 287, 296, 298, 300], "prod": [280, 296, 300], "delay_actor": [280, 282, 300, 302, 303], "delay_qvalu": [280, 287, 298, 300, 302, 303], "min_q_weight": 280, "max_q_backup": 280, "backup": 280, "deterministic_backup": 280, "num_random": 280, "with_lagrang": 280, "lagrang": 280, "lagrange_thresh": 280, "valueclass": [280, 282, 287, 298, 300, 302, 303], "qvalu": [280, 286, 287, 293, 298, 300, 302, 303], "loss_actor": [280, 282, 286, 287, 293, 298, 299, 300, 302, 303, 343, 371, 377, 383, 389], "loss_actor_bc": 280, "loss_alpha": [280, 287, 298, 300], "loss_cql": [280, 285], "loss_qvalu": [280, 285, 286, 287, 293, 298, 300, 302, 303], "loss_alpha_prim": 280, "clip_epsilon": [281, 373, 384], "normalize_advantag": [281, 294, 297, 384], "value_kei": [281, 294, 297, 311, 312, 313, 314, 371], "somemodul": [281, 294, 297], "someactor": [281, 294, 297], "value_head": [281, 294, 297], "somevalu": [281, 294, 297], "loss_modul": [281, 292, 294, 295, 297, 301, 348, 357, 358, 367, 368, 371, 372, 373, 383, 384, 387], "ppoloss": [281, 294, 364], "delay_valu": [282, 283, 285, 288, 299, 300, 309, 372, 374, 380, 383], "loss_valu": [282, 286, 293, 299, 300, 371, 373, 377, 383, 384, 389], "pred_valu": [282, 285, 302, 303, 371, 377, 389], "pred_value_max": [282, 371, 377, 389], "target_valu": [282, 285, 298, 302, 303, 310, 367, 371, 377, 389], "target_value_max": [282, 371, 377, 389], "qvalueactor": [283, 285, 309, 366, 372, 374], "double_dqn": 283, "06461": [283, 292], "mult_one_hot": [283, 286, 287, 309], "loss_val": [283, 285, 367, 371, 373, 374, 377, 378, 380, 383, 384, 387], "01345": 284, "distanc": [285, 294, 306, 310, 311, 384], "dcql_loss": 285, "2110": [286, 293], "06169": [286, 293], "num_qvalue_net": [286, 287, 293, 298, 300, 302, 303], "expectil": [286, 293], "tau": [286, 293, 301, 371, 372, 383], "antmaz": [286, 293], "sticht": [286, 293], "onehotcategor": [286, 287, 364], "target_entropy_weight": 287, "disctount": 288, "distributionalqvalueactor": [288, 366], "input_tensordict": [288, 371], "actor_model": 289, "value_model": [289, 291], "imagination_horizon": 289, "unrol": [289, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328], "discount_loss": [289, 291], "lambda_kl": 290, "lambda_reco": 290, "lambda_reward": 290, "reco_loss": 290, "reward_loss": 290, "free_nat": 290, "nat": 290, "delayed_clamp": 290, "global_averag": 290, "value_loss": 291, "fake_data": 291, "ddpgloss": [292, 301, 358, 364, 371, 377, 383, 389], "td3loss": [292, 301, 364], "value_network_update_interv": 292, "qvalueclass": 293, "loss_value_diff": 293, "diff": 293, "old_polici": 294, "new_polici": 294, "apart": [294, 384], "dtarg": 294, "samples_mc_kl": 294, "analyt": 294, "decrement": 294, "loss_": [295, 343, 367, 371, 377], "equip": [295, 374, 376], "gh": 295, "_acceptedkei": 295, "dataclass": 295, "_forward_value_estimator_kei": 295, "alter": [295, 366], "value_estim": [295, 311, 312, 313, 314, 315, 367, 371, 384], "myloss": 295, "action2": 295, "augment": [295, 378, 380, 387], "set_exploration_mod": [295, 364], "deterministic_sampling_mod": 295, "convert_to_funct": [295, 371], "expand_dim": 295, "create_target_param": [295, 371], "compare_against": [295, 371], "_param": 295, "expans": 295, "resampl": 295, "_target_param": 295, "blend": 295, "proxim": [297, 373, 384], "optimis": [297, 344, 373, 383, 384], "flavour": [297, 383, 384, 389], "clipppoloss": [297, 364, 373, 384], "klpenppoloss": [297, 364], "regularis": 297, "06347": 297, "gae": [297, 364, 367, 371, 373, 384], "ppo_loss": 297, "tdlambda": [297, 305, 367, 371], "base_lay": 297, "randn_lik": 297, "samplelogprob": 297, "openreview": 298, "ay8zfzm0tdd": 298, "sub_sample_len": 298, "subsampl": [298, 339, 368], "action_log_prob_actor": 298, "state_action_value_actor": [298, 302, 303], "connectionist": 299, "1992": 299, "doi": 299, "1007": 299, "bf00992696": 299, "actor_net": [299, 371, 373], "1801": 300, "01290": 300, "applic": [300, 309, 375, 376, 385], "1812": 300, "05905": 300, "redqloss": [301, 364], "math": 301, "theta_t": [301, 385], "theta_": [301, 385], "polyak": 301, "minimalist": 302, "06860": 302, "qvalue_loss": 302, "actor_loss": 302, "policy_nois": [302, 303], "noise_clip": [302, 303], "td3_bc": 302, "bc_loss": 302, "lmbd": 302, "next_state_valu": [302, 303, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 364], "td0": [304, 371, 383], "strict_shap": 306, "view_a": 306, "qmixer": [309, 364], "local_valu": 309, "visibl": [309, 384], "dafault": 309, "acceptedkei": 309, "global_valu": 309, "penultim": 309, "local_value_network": 309, "mixer_network": 309, "value_modul": [309, 373, 389], "qnet": [309, 371], "next_val_kei": 310, "pred_next_v": 310, "usus": 310, "mse": 310, "q_valu": 310, "n_steps_to_next": 310, "value_next_st": 310, "1506": [311, 316, 324], "02438": [311, 316, 324], "exponenti": [311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 346], "average_ga": [311, 373], "skip_exist": [311, 312, 313, 314], "time_dim": [311, 313, 314, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328], "advang": 311, "gradient_mod": 311, "value_error": [311, 312, 313, 314, 315], "target_param": [311, 312, 313, 314, 315, 371, 384], "98": [311, 312, 313, 314, 372, 383, 385], "94": [311, 314, 371, 372, 385], "unpack": [311, 312, 313, 314], "tensor_kei": [311, 312, 313, 314, 315], "next_valu": [311, 312, 313, 314, 315], "aka": [312, 372, 383], "average_reward": [312, 313, 314], "tdestim": [312, 313, 315], "infti": 313, "valuefunctionbas": 315, "old_stat": [316, 318, 320, 322, 324, 325, 327], "new_stat": [316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "rolling_gamma": [320, 321, 322, 323, 325, 326, 327, 328], "g1": [320, 321, 322, 323, 325, 326, 327, 328], "g2": [320, 321, 322, 323, 325, 326, 327, 328], "g3": [320, 321, 322, 323, 325, 326, 327, 328], "g4": [320, 321, 322, 323, 325, 326, 327, 328], "v3": [320, 321, 322, 323, 325, 326, 327, 328, 390], "preproc": [329, 383], "as_non_tensor": [329, 383], "render_method": 329, "pass_tensordict": 329, "syntat": 329, "sugar": 329, "out_file_bas": 330, "skip_reset": 330, "center_crop": 331, "make_grid": 331, "csv": [331, 333, 335, 372, 379, 380], "wandb": [331, 335, 338, 379, 389], "tensorboard": [331, 335, 337, 379, 389], "log_dir": [331, 332, 333, 335, 337, 338, 372, 380], "cheetah_video": 331, "run_video": 331, "openxexperiencereplai": 331, "run_video_0": 331, "templat": 332, "pt": [333, 368, 386], "video_fp": 333, "minim": [333, 387], "dependeci": 333, "cur_dir": 333, "csv_log": 333, "add_video": 333, "video_": 333, "experiment_nam": [334, 335], "uuid": [334, 372, 390], "logger_typ": 335, "logger_nam": 335, "mlflow": [335, 336], "wandb_kwarg": 335, "mlflow_kwarg": 335, "tracking_uri": 336, "uri": 336, "datastor": 336, "tb_log": 337, "tensoarboard": 337, "td_log": 337, "save_dir": 338, "resum": 338, "uncategor": 338, "sub_traj_len": 339, "min_sub_traj_len": 339, "register_op": [339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 368, 372], "process_optim_batch": [339, 345, 346, 368], "td_out": [339, 347], "_process_optim_batch_hook": [339, 368], "batch_subsampl": 339, "clear_cuda": 340, "pre_optim_step": [340, 368], "log_pbar": [341, 342, 344, 346, 368, 372], "progress": [341, 342, 344, 348, 368, 372, 374, 390], "count_fram": 341, "pre_steps_log": [341, 342, 368], "count_frames_log": 341, "lognam": 342, "r_train": [342, 372], "log_reward": [342, 372], "loss_compon": 343, "appl": 343, "optimizer_hook": 343, "record_interv": [344, 371, 372], "record_fram": [344, 351, 371, 372], "policy_explor": [344, 358, 371, 372, 376, 380], "log_kei": [344, 372], "underestim": 344, "set_exploration_typ": [344, 364, 373, 374, 376, 383, 389], "r_evalu": [344, 371], "flatten_tensordict": [345, 372], "max_dim": 345, "rb_trainer": 345, "batch_process": [345, 346, 347, 368], "post_loss": [345, 368], "999": [346, 372], "jitter": 346, "finfo": 346, "default_dtyp": 346, "get_default_dtyp": 346, "reward_norm": 346, "update_reward_stat": 346, "normalize_reward": 346, "make_train": [347, 364], "_process_batch_hook": [347, 368], "select_kei": [347, 368], "versatil": [348, 375], "optim_steps_per_batch": [348, 368, 372], "clip_grad_norm": 348, "clip_norm": 348, "progress_bar": 348, "save_trainer_interv": 348, "log_interv": [348, 372], "save_trainer_fil": [348, 368], "update_weights_interv": [350, 372], "update_weight": 350, "post_step": [350, 368, 372], "cfg": [351, 352, 353, 354, 355, 356, 357, 358, 359, 362], "dictconfig": [351, 352, 353, 354, 356, 357, 358, 359, 362], "unknowingli": 351, "annealing_fram": [351, 371], "init_env_step": [351, 352, 371], "proof_environ": [352, 371], "sta": 352, "ot": 352, "actor_model_explor": [353, 354, 371], "make_env_kwarg": [353, 354], "targetnetupdat": [355, 357, 358], "replayargsconfig": 356, "target_net_updat": [358, 371, 372], "constitu": 358, "egreedywrapp": 358, "env_proof": 358, "obs_spec": 358, "net_valu": 358, "dir": [358, 368, 372], "gettempdir": 358, "argpars": [359, 362], "namespac": [359, 362, 390], "parser": [359, 362], "transformed_env_constructor": [359, 364], "num_env_per_collector": [360, 361], "video_tag": 362, "norm_obs_onli": 362, "use_env_cr": 362, "custom_env_mak": 362, "custom_env": 362, "return_transformed_env": 362, "action_dim_gsd": 362, "state_dim_gsd": 362, "obs_norm_state_dict": 362, "wheter": 362, "maker": [362, 372], "asyncdatacollector": 364, "distributedsyncdatacollector": 364, "submitit_delayed_launch": 364, "raycollector": 364, "rational": 364, "footnot": 364, "unboundeddiscretetensorspec": 364, "lazystackedtensorspec": 364, "lazystackedcompositespec": 364, "prompttensordicttoken": 364, "rolloutfrommodel": 364, "tokenizeddatasetload": 364, "create_infinite_iter": 364, "constantklcontrol": 364, "adaptiveklcontrol": 364, "consolidate_spec": 364, "check_no_exclusive_kei": 364, "contains_lazy_spec": 364, "nested2t": 364, "h5combin": 364, "h5split": 364, "check_marl_group": 364, "get_available_librari": 364, "make_composite_from_td": [364, 385], "terminated_or_trunc": 364, "dreamerdecod": 364, "braxwrapp": 364, "dmcontrolwrapp": 364, "jumanjienv": 364, "jumanjiwrapp": 364, "meltingpotenv": 364, "meltingpotwrapp": 364, "mogymenv": 364, "mogymwrapp": 364, "multithreadedenvwrapp": 364, "openmlenv": 364, "pettingzooenv": [364, 383], "robohiveenv": 364, "smacv2env": 364, "smacv2wrapp": 364, "vmaswrapp": 364, "qvaluehook": 364, "distributionalqvaluehook": 364, "reset_nois": 364, "cemplann": 364, "mpcplannerbas": 364, "mppiplann": 364, "independentnorm": 364, "truncatednorm": 364, "maskedonehotcategor": 364, "inv_softplu": 364, "vmapmodul": 364, "distributionaldqnloss": [364, 372], "discretesacloss": 364, "iqlloss": 364, "discreteiqlloss": 364, "cqlloss": 364, "discretecqlloss": 364, "dtloss": 364, "onlinedtloss": 364, "td3bcloss": 364, "a2closs": 364, "reinforceloss": 364, "dreameractorloss": 364, "dreamermodelloss": 364, "dreamervalueloss": 364, "td0estim": [364, 371], "td1estim": [364, 371], "td0_return_estim": 364, "td0_advantage_estim": 364, "td1_return_estim": 364, "vec_td1_return_estim": 364, "td1_advantage_estim": 364, "vec_td1_advantage_estim": 364, "td_lambda_return_estim": 364, "vec_td_lambda_return_estim": 364, "td_lambda_advantage_estim": 364, "vec_td_lambda_advantage_estim": 364, "generalized_advantage_estim": 364, "vec_generalized_advantage_estim": 364, "reward2go": 364, "distance_loss": [364, 371], "hold_out_net": 364, "hold_out_param": [364, 371], "softupd": [364, 371, 372, 374, 377, 380, 383], "hardupd": [364, 371, 377], "batchsubsampl": [364, 368], "clearcudacach": 364, "countframeslog": 364, "logreward": [364, 368, 372], "optimizerhook": [364, 372], "replaybuffertrain": [364, 368, 372], "rewardnorm": 364, "selectkei": [364, 368], "trainerhookbas": [364, 368, 372], "updateweight": [364, 368, 372], "make_collector_offpolici": 364, "make_collector_onpolici": 364, "make_dqn_loss": 364, "make_replay_buff": [364, 371], "make_target_updat": 364, "parallel_env_constructor": [364, 371], "sync_async_collector": 364, "sync_sync_collector": 364, "correct_for_frame_skip": 364, "get_stats_random_rollout": 364, "mlflowlogg": 364, "get_logg": 364, "generate_exp_nam": 364, "journei": 365, "textbook": 365, "highlight": [365, 383], "ever": [365, 384], "bump": 365, "think": [365, 373, 383, 384, 390], "benefit": [365, 375, 383, 384, 387], "pr": 365, "ground": [366, 371, 385], "recycl": [366, 387], "impos": 366, "violat": 366, "noisier": 366, "Their": [366, 383, 384], "sd": 366, "prob_modul": 366, "pick": [366, 371, 372, 376], "hopefulli": [366, 372], "functional_modul": 366, "make_funct": 366, "mathbb": [366, 372], "rightarrow": [366, 372], "soften": 366, "backbon": [366, 374, 376, 382, 389], "make_actor": 366, "make_valu": 366, "shared_param": 366, "make_common": 366, "reusabl": [367, 371, 387], "swappabl": [367, 371], "characterist": [367, 371, 385], "trainabl": [367, 371, 377, 386], "smth": [367, 371], "metric": [367, 371], "nutshel": [367, 371], "barto": [367, 383, 384], "chapter": [367, 379], "significantli": [367, 371, 372, 377, 384], "next_stat": 367, "value_net_loss": 367, "pow": [367, 371], "room": 367, "signifi": [367, 383, 384], "underperform": 367, "thin": 367, "intric": [367, 376], "believ": 368, "scheme": [368, 390], "substenti": 368, "_pre_steps_log_hook": 368, "_pre_optim_hook": 368, "sub_batch": 368, "_post_loss_hook": 368, "_post_optim_hook": 368, "post_optim": [368, 372], "_post_optim_log": 368, "post_optim_log": 368, "_post_steps_hook": 368, "_post_steps_log_hook": 368, "post_steps_log": 368, "reserv": 368, "logginghook": 368, "logging_hook": 368, "save_dict": 368, "some_valu": 368, "torchsnapshot": 368, "ckpt_backend": 368, "filepath": 368, "save_train": 368, "load_from_fil": 368, "111": [370, 385, 388], "galleri": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390], "mem": [370, 388], "mb": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390], "torchrl_demo": [370, 388, 389], "49": [370, 371, 372, 385, 386, 388, 389], "507": [370, 385, 388, 389], "rb_tutori": [370, 387, 388], "57": [370, 371, 372, 385, 386, 387, 388], "897": [370, 387, 388], "142": [370, 385, 387, 388], "622": [370, 385, 388], "coding_dqn": [370, 372, 388], "110": [370, 372, 385, 388], "692": [370, 385, 388], "dqn_with_rnn": [370, 374, 388], "022": [370, 374, 388], "1902": [370, 388], "multiagent_ppo": [370, 384, 388], "07": [370, 372, 385, 388], "coding_ddpg": [370, 371, 388], "52": [370, 371, 372, 385, 387, 388], "829": [370, 371, 385, 388], "torchrl_env": [370, 388, 390], "3782": [370, 388], "multiagent_competitive_ddpg": [370, 383, 388], "916": [370, 371, 383, 388], "coding_ppo": [370, 373, 388], "151": [370, 373, 380, 385, 388], "pretrained_model": [370, 386, 388], "51": [370, 372, 382, 383, 385, 386, 388], "740": [370, 386, 388], "3340": [370, 386, 388], "multi_task": [370, 382, 388], "184": [370, 382, 385, 388], "699": [370, 376, 388], "43": [370, 371, 372, 374, 375, 385, 386, 388], "334": [370, 375, 385, 388], "25": [370, 371, 372, 374, 377, 383, 385, 388], "127": [370, 377, 385, 388], "117": [370, 380, 385, 388], "665": [370, 378, 385, 388], "726": [370, 379, 388], "47": [370, 371, 372, 385, 388], "author": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 387, 390], "vincent": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 387, 390], "moen": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 387, 390], "assembl": 371, "focus": [371, 377], "straightforward": [371, 372, 375, 376, 377, 378, 387], "maxim": [371, 377, 385], "transpar": [371, 374], "illustr": [371, 372, 376, 387], "bash": 371, "is_fork": [371, 372, 373, 374, 383, 384, 386], "get_start_method": [371, 372, 373, 374, 383, 384, 386], "is_avail": [371, 372, 373, 374, 383, 384, 386], "collector_devic": 371, "loss_dict": 371, "oblivi": [371, 373, 387], "elementari": 371, "didact": 371, "dilut": 371, "pessimist": [371, 372, 373], "target_actor_network_param": 371, "actor_in_kei": 371, "actor_crit": 371, "noth": [371, 373], "compromis": 371, "hp": 371, "hasattr": 371, "_value_estim": 371, "elif": [371, 372], "notimplementederror": 371, "unknown": 371, "ifgg": 371, "_loss_actor": 371, "td_copi": 371, "actor_network_param": [371, 383], "value_network_param": [371, 383], "_loss_valu": 371, "pred_val": 371, "target_value_network_param": 371, "glue": 371, "_forward": 371, "ndimens": 371, "remaind": 371, "env_librari": 371, "env_task": 371, "env_arg": [371, 372], "friendli": 371, "torchr": 371, "rescal": 371, "presum": 371, "make_transformed_env": 371, "reward_sc": 371, "marker": 371, "env_per_collector": 371, "transform_state_dict": 371, "make_t_env": 371, "cheat": 371, "10m": 371, "cautiou": 371, "magnitud": [371, 383], "thousand": [371, 374], "get_env_stat": 371, "proof_env": 371, "5000": [371, 372, 373, 380], "recal": [371, 373, 387], "ddpgmlpactor": 371, "ddpgmlpqnet": 371, "materi": 371, "ornsteinuhlenbeckprocesswrapp": [371, 376], "make_ddpg_actor": 371, "q_net": 371, "tight": 371, "decoupl": [371, 377], "10_000": [371, 373], "traj_len": [371, 374], "make_record": 371, "recorder_obj": 371, "flavor": 371, "buffer_s": [371, 372], "random_crop_len": 371, "prb": 371, "buffer_scratch_dir": 371, "temporari": 371, "dataflow": 371, "ceil_div": 371, "utd": [371, 374], "update_to_data": 371, "realiz": 371, "_must_": 371, "001": [371, 385], "outdat": 371, "trick": [371, 372], "despit": 371, "optimizer_actor": 371, "lr": [371, 372, 373, 374, 380, 383, 384, 385], "weight_decai": [371, 372], "optimizer_valu": 371, "total_collection_step": 371, "pretti": [371, 375, 379, 387], "rewards_ev": 371, "collected_fram": 371, "r0": 371, "numel": [371, 373, 374, 380, 383, 386, 387], "current_fram": [371, 383], "sampled_tensordict": 371, "gn1": 371, "clip_grad_norm_": [371, 373, 383, 384, 385], "gn2": 371, "gn": [371, 385], "td_record": 371, "rn": 371, "set_descript": [371, 373, 374, 383, 384, 385], "2f": 371, "800": [371, 372], "3241": 371, "47it": [371, 372, 385], "1600": [371, 372], "09": [371, 372, 384, 385], "68it": 371, "2400": [371, 372], "1375": 371, "52it": [371, 372], "3200": [371, 372], "1804": 371, "69it": 371, "4000": [371, 372, 373], "2173": [371, 373], "64it": [371, 372, 385], "48": [371, 372, 379, 384, 385], "4800": [371, 372, 385], "2433": 371, "39it": [371, 373], "56": [371, 372, 385], "5600": 371, "2577": 371, "05it": [371, 372], "72": [371, 372, 385, 386], "71": [371, 372, 385], "90": [371, 372, 373, 383, 384, 385, 386], "390": [371, 385], "77": [371, 372, 385], "6400": [371, 389], "928": [371, 372], "69": [371, 372, 383, 385, 386], "277": [371, 385], "91": [371, 372, 384, 385], "7200": 371, "648": 371, "98it": [371, 372, 385], "96": [371, 372, 383, 384, 385, 386], "45": [371, 372, 385], "123": [371, 385, 387], "92": [371, 372, 385, 386], "430": [371, 385], "63": [371, 372, 385], "54": [371, 372, 385, 387], "8000": [371, 373], "540": [371, 385], "08it": [371, 372], "62": [371, 372, 385], "239": [371, 385], "61": [371, 372, 385, 386], "8800": 371, "485": [371, 385], "18it": [371, 372, 373], "272": [371, 385], "67": [371, 372, 382, 385, 386], "89": [371, 372, 384, 385], "9600": 371, "385": [371, 385], "17it": [371, 372, 385], "73": [371, 372, 385, 387], "93": [371, 372, 383, 385], "97": [371, 372, 385], "189": [371, 385], "76": [371, 372, 385], "10400it": 371, "359": [371, 385], "50it": [371, 372, 385], "68": [371, 372, 385, 387], "74": [371, 372, 385, 386], "216": [371, 385], "65": [371, 372, 385, 387], "plot": [371, 373, 374, 383, 384, 385], "mention": [371, 374, 387, 390], "matplotlib": [371, 373, 374, 383, 384, 385, 387, 390], "pyplot": [371, 373, 374, 383, 384, 385, 387, 390], "plt": [371, 373, 374, 383, 384, 385, 387, 390], "zip": [371, 381], "legend": [371, 383], "xlabel": [371, 374, 384, 385], "ylabel": [371, 384], "tight_layout": 371, "takeawai": [371, 372], "distpatch": 371, "jupyt": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390], "ipynb": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390], "sphinx": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390], "road": 372, "aspect": [372, 377], "highest": [372, 376], "prerequisit": [372, 374], "lookup": 372, "amort": [372, 373], "cart": 372, "pole": 372, "un": 372, "actuat": 372, "frictionless": 372, "duelingcnndqnet": 372, "egreedymodul": [372, 374, 376, 380], "is_notebook": 372, "shell": 372, "get_ipython": 372, "__class__": 372, "zmqinteractiveshel": 372, "qtconsol": 372, "terminalinteractiveshel": 372, "ipython": [372, 384, 385], "nameerror": [372, 383], "umbrella": 372, "misplac": 372, "misus": 372, "orchestr": [372, 377, 379], "five": 372, "64x64": 372, "motion": [372, 385], "obs_norm_sd": 372, "mp_context": 372, "simpler": [372, 375], "get_norm_stat": 372, "test_env": 372, "make_model": 372, "dummy_env": 372, "init_bia": 372, "exploration_modul": [372, 374, 376, 380], "eps_greedy_v": 372, "eps_greedy_val_env": 372, "actor_explor": 372, "get_replay_buff": 372, "n_optim": [372, 377, 378], "themselv": 372, "parametriz": 372, "simplic": [372, 373, 378, 386, 387, 389], "get_collector": 372, "cl": 372, "data_collector": 372, "bunch": 372, "ubiquit": [372, 375], "get_loss_modul": 372, "target_updat": [372, 383], "995": [372, 385], "variat": 372, "2e": [372, 385], "wd": 372, "upd": 372, "harder": [372, 389], "5_000": 372, "500000": 372, "100000": 372, "005": [372, 383], "mandatori": [372, 373, 384, 385], "fairer": 372, "budget": 372, "dqn_exp_": 372, "uuid1": [372, 390], "9895": 372, "0737": 372, "registr": [372, 390], "cumbersom": 372, "buffer_hook": 372, "weight_updat": 372, "aliv": 372, "total_reward": 372, "14it": 372, "3991": 372, "9259": 372, "40it": [372, 385], "3718": 372, "89it": 372, "3475": 372, "63it": [372, 385], "3960": 372, "60it": [372, 385], "4295": [372, 385], "93it": 372, "224": [372, 385], "54it": [372, 385], "3688": [372, 385], "60": [372, 373, 383, 384, 385, 387, 389], "44it": 372, "288": [372, 385], "87it": 372, "352": [372, 385], "59": [372, 374, 385], "78": [372, 385], "59it": [372, 385], "384": [372, 385], "55": [372, 384, 385], "83": [372, 373, 385], "34it": 372, "3657": [372, 385], "416": [372, 385], "07it": [372, 385], "448": [372, 385], "53": [372, 385, 386], "85": [372, 383, 385, 386], "42it": [372, 385], "480": [372, 385, 386], "48it": [372, 385], "3293": 372, "45it": [372, 385], "3566": 372, "544": [372, 385], "576": [372, 385], "83it": 372, "608": [372, 385], "03it": 372, "4021": 372, "640": 372, "3415": 372, "672": 372, "20it": 372, "704": 372, "77it": 372, "736": 372, "32it": 372, "3778": 372, "768": 372, "53it": [372, 385], "3445": 372, "832": 372, "864": 372, "896": 372, "97it": 372, "960": 372, "92it": [372, 374], "992": [372, 385], "12it": 372, "61it": [372, 373, 385], "1056": 372, "19it": 372, "1088": 372, "1120": 372, "4082": [372, 385], "1152": 372, "57it": [372, 385], "1184": 372, "55it": [372, 385], "1216": 372, "1248": 372, "84it": 372, "1280": 372, "04it": 372, "21it": 372, "1344": 372, "1376": 372, "46it": [372, 385], "1408": 372, "51it": [372, 373, 385], "1440": 372, "95it": 372, "1472": 372, "75it": 372, "1504": 372, "27it": 372, "1536": 372, "1568": 372, "1632": 372, "1696": 372, "33it": 372, "1728": 372, "28it": [372, 373, 385], "1760": 372, "22it": [372, 374], "1792": 372, "1824": 372, "1856": 372, "1888": 372, "88it": 372, "1920": 372, "1952": 372, "3869": 372, "1984": 372, "16it": [372, 385], "2016": 372, "31it": 372, "2048": [372, 386], "2080": 372, "2112": [372, 385], "2144": 372, "26it": 372, "2176": 372, "79it": 372, "2208": 372, "2240": 372, "81it": 372, "2272": 372, "74it": [372, 373], "13it": 372, "2336": 372, "82it": 372, "2368": 372, "67it": 372, "2432": 372, "56it": [372, 385], "2464": 372, "2496": 372, "36it": 372, "2528": [372, 385], "96it": 372, "2560": 372, "80it": 372, "2624": 372, "2656": [372, 385], "2688": 372, "2720": [372, 385], "2752": 372, "2784": 372, "72it": 372, "2816": 372, "65it": [372, 385], "2848": 372, "58": [372, 385, 386], "2880": 372, "2912": 372, "35it": 372, "2944": [372, 385], "85it": 372, "2976": [372, 385], "43it": [372, 373], "3040": 372, "3072": 372, "3104": 372, "3136": 372, "4173": 372, "3168": 372, "3232": [372, 385], "3264": 372, "66": [372, 385], "3296": 372, "3328": 372, "3360": 372, "3392": 372, "11it": 372, "3424": 372, "58it": [372, 385], "3456": [372, 385], "70": [372, 373, 383, 384, 385, 386], "3488": 372, "3520": 372, "66it": 372, "3552": 372, "37it": [372, 373], "3584": 372, "3616": 372, "3648": 372, "3680": 372, "3712": 372, "3744": 372, "3776": 372, "3808": 372, "38it": [372, 385], "3840": 372, "15it": 372, "3872": 372, "3904": 372, "79": [372, 385, 386, 387], "3936": 372, "10it": 372, "3968": 372, "4032": 372, "4064": 372, "82": [372, 385, 386], "4096": 372, "76it": 372, "4128": [372, 385], "4160": 372, "71it": 372, "4192": 372, "4224": 372, "4256": [372, 385], "4288": [372, 385], "4320": 372, "4352": 372, "4384": 372, "4416": 372, "4448": 372, "4480": 372, "4512": 372, "4544": 372, "4576": 372, "4608": 372, "4640": 372, "4672": [372, 385], "4704": 372, "4736": 372, "4768": 372, "4832": 372, "4864": 372, "4896": 372, "4928": 372, "4960": 372, "4992": 372, "5024it": 372, "print_csv_files_in_fold": 372, "folder_path": 372, "csv_file": 372, "output_str": 372, "dirpath": 372, "endswith": 372, "strip": 372, "tmp": [372, 387], "tmp5r9cry93": 372, "dqn_exp_bfd15272": 372, "45f0": 372, "11ef": 372, "868b": 372, "0242ac110002": 372, "3566153645515442": 372, "40213119983673096": 372, "42945271730422974": 372, "36880597472190857": 372, "3740271329879761": 372, "2741989195346832": 372, "16849926114082336": 372, "313466340303421": 372, "24757106602191925": 372, "41384610533714294": 372, "3543536365032196": 372, "29737260937690735": 372, "5089133977890015": 372, "grad_norm_0": 372, "0500991344451904": 372, "4268786907196045": 372, "2503981590270996": 372, "625826358795166": 372, "2720985412597656": 372, "6471171379089355": 372, "186211585998535": 372, "195444583892822": 372, "018692970275879": 372, "10000000894069672": 372, "qvaluenetwork": 372, "worst": 372, "accuraci": 372, "fanci": [372, 378], "693": 372, "talk": 373, "repetit": [373, 375, 378], "six": 373, "sophist": [373, 384], "invent": 373, "overview": [373, 377, 383, 384, 389], "theta_k": 373, "pi_": 373, "exceed": 373, "discourag": [373, 385], "indispens": 373, "analyz": 373, "lingua": 373, "franca": 373, "defaultdict": [373, 385], "3e": [373, 374, 383, 384], "max_grad_norm": [373, 383, 384], "sub_batch_s": 373, "num_epoch": [373, 384], "entropy_ep": [373, 384], "charact": 373, "inverteddoublependulum": 373, "transmit": 373, "stai": 373, "supplementari": [373, 390], "told": 373, "confid": [373, 383, 384], "ran": 373, "f_": 373, "mu_": 373, "difficulti": [373, 390], "d_ob": 373, "d_action": 373, "policy_modul": [373, 383, 384], "That": [373, 383], "said": 373, "briefli": [373, 383, 384], "refil": [373, 384], "easiest": [373, 377, 383, 384], "mathemat": [373, 383, 384], "tradeoff": [373, 384], "advantage_modul": 373, "lr_schedul": [373, 385], "cosineannealinglr": [373, 385], "eval_str": 373, "tensordict_data": [373, 384], "data_view": [373, 384], "subdata": [373, 383, 384], "cum_reward_str": 373, "4f": [373, 374, 385], "stepcount_str": 373, "param_group": [373, 383], "lr_str": 373, "eval_rollout": 373, "nice": [373, 375, 378], "467": [373, 385], "0945": [373, 385], "0899": 373, "0003": [373, 385], "469": [373, 385], "1127": 373, "3000": 373, "472": [373, 385], "1447": 373, "473": [373, 385], "1556": 373, "0002": [373, 385], "477": [373, 385], "1966": 373, "6000": 373, "479": [373, 385], "7000": 373, "466": [373, 385], "2205": 373, "471": [373, 385], "2342": 373, "9000": 373, "474": [373, 385], "29it": [373, 374], "2476": [373, 385], "2472": 373, "cap": [373, 387], "figsiz": [373, 385], "subplot": [373, 383, 385, 390], "titl": [373, 374, 384, 385], "bit": [373, 374, 375, 383, 384, 387], "84x84": 374, "accessori": 374, "stamp": 374, "assist": 374, "emb": 374, "n_cell": 374, "customiz": 374, "wouldn": 374, "qval": 374, "stoch_polici": 374, "opportun": [374, 383], "uniniti": 374, "again": [374, 375, 376, 378, 384, 386, 387, 390], "redund": 374, "strongli": 374, "sake": [374, 386, 387], "20_000": [374, 385], "longest": 374, "npai": 374, "action_spread": 374, "0006": [374, 385], "150": [374, 385], "23it": 374, "0005": 374, "1903": 374, "topic": [375, 376, 377], "straight": 375, "backtrack": 375, "encapsul": [375, 376, 377], "reset_with_act": 375, "6433": 375, "tp": 375, "stepped_data": 375, "spatial": 375, "useless": 375, "policyless": 375, "appreci": 375, "monitor": 375, "examin": [375, 383], "tackl": 376, "delv": 376, "bypass": 376, "extractor": 376, "palliat": 376, "additivegaussianwrapp": [376, 383], "had": [376, 378], "exploration_polici": [376, 383], "greedili": 376, "2d": [376, 383, 384], "innov": [376, 377], "rollout_explor": 376, "sole": 377, "tradit": [377, 383], "supervis": [377, 378, 387, 390], "n_collect": 377, "get_next_batch": 377, "ddpg_loss": 377, "total_loss": 377, "prove": 377, "reliev": 377, "concern": 377, "accustom": 378, "surprisingli": 378, "fundament": 378, "art": [378, 383, 384], "pseudo": [378, 385], "multirpocess": 378, "countless": 378, "yourself": [378, 383, 384], "lightweight": 379, "portabl": 379, "everywher": 379, "log_scalar": 379, "elaps": 379, "my_scalar": 379, "saw": [379, 385, 387], "excess": 379, "lesson": 380, "voluntarili": 380, "value_mlp": 380, "100_000": 380, "init_rand_step": 380, "training_loop": 380, "video_record": 380, "arbitrarili": 380, "total_count": 380, "total_episod": 380, "t0": 380, "t1": 380, "conclud": [380, 386], "tutorials_python": 381, "tutorials_jupyt": 381, "env1_obs_kei": 382, "observation_stand": 382, "env2_obs_kei": 382, "observation_walk": 382, "tdreset1": 382, "tdreset2": 382, "lazy_stack": 382, "policy_common": 382, "policy_stand": 382, "policy_walk": 382, "But": 382, "env1_mak": 382, "env2_mak": 382, "_single_task": 382, "td_rollout": 382, "matteo": [383, 384], "bettini": [383, 384], "benchmarl": [383, 384], "simple_tag": 383, "maddpg": [383, 384], "multiagentparticleenviron": 383, "mpe": 383, "centralis": [383, 384], "tie": [383, 384], "iddpg": [383, 384], "typical": 383, "richard": 383, "andrew": 383, "mit": 383, "press": 383, "2018": 383, "mathbf": [383, 384], "pi": [383, 384, 385], "decentralis": [383, 384], "literatur": [383, 384], "overcom": [383, 384], "stationari": [383, 384], "concurr": [383, 384], "establish": 383, "gui": [383, 384], "multiagentmlp": [383, 384], "is_sphinx": 383, "__sphinx_build__": 383, "n_iter": [383, 384], "evad": 383, "iteration_when_stop_training_evad": 383, "memory_s": 383, "n_optimiser_step": 383, "train_batch_s": 383, "polyak_tau": 383, "chaser": 383, "red": 383, "circl": [383, 384], "touch": [383, 385], "penal": 383, "acceler": [383, 384], "obstacl": 383, "drag": [383, 384], "elast": [383, 384], "collis": [383, 384], "imped": 383, "n_chaser": 383, "n_evad": 383, "n_obstacl": 383, "use_vma": 383, "simple_tag_v3": 383, "num_good": 383, "num_adversari": 383, "num_obstacl": 383, "max_cycl": 383, "num_vmas_env": [383, 384], "num_good_ag": 383, "num_landmark": 383, "adversary_1": 383, "four": [383, 384, 385], "n_agents_in_that_group": 383, "stress": [383, 384], "paramount": [383, 384], "n_rollout_step": [383, 384], "evolut": [383, 384], "group_nam": 383, "n_agents_in_group": 383, "minor": 383, "agents_exploration_polici": 383, "utilis": [383, 384], "withing": 383, "n_obs_per_ag": [383, 384], "n_actions_per_ag": [383, 384], "share_parameters_polici": [383, 384], "policy_net": [383, 384], "_agent": 383, "grant": [383, 384], "converg": [383, 384], "share_parameters_crit": [383, 384], "obs_act": 383, "cat_modul": 383, "critic_modul": 383, "fantast": [383, 384], "reset_td": 383, "interfer": 383, "flatten_kei": 383, "process_batch": 383, "group_shap": 383, "get_item_shap": [383, 384], "nested_done_kei": 383, "nested_terminated_kei": 383, "desc": [383, 384], "episode_reward_mean_": 383, "episode_reward_mean_map": 383, "train_group_map": 383, "deepcopi": 383, "group_batch": 383, "_group": 383, "loss_nam": 383, "episode_reward_mean": [383, 384], "episode_reward_mean_adversari": 383, "episode_reward_mean_ag": 383, "proce": 383, "screen": 383, "fig": 383, "set_ylabel": 383, "axvlin": 383, "color": 383, "orang": 383, "set_xlabel": 383, "video_logg": 383, "vmas_log": 383, "env_with_rend": 383, "vmas_rend": 383, "print_log_dir": 383, "profici": [383, 384], "lidar": 384, "sensor": 384, "mappo": 384, "ippo": 384, "phase": [384, 387], "analys": 384, "visualis": 384, "vmas_devic": 384, "6_000": 384, "minibatch_s": 384, "generalis": 384, "simd": 384, "parallelis": 384, "warp": 384, "todai": 384, "surround": 384, "dot": [384, 385], "collid": 384, "penalis": 384, "scenario_nam": 384, "final_rew": 384, "agent_collis": 384, "denot": 384, "critic_net": 384, "minibatch": 384, "episode_reward_mean_list": 384, "critic_network_param": 384, "target_critic_network_param": 384, "4579917788505554": 384, "14524875581264496": 384, "168386459350586": 384, "3613134622573853": 384, "921463131904602": 384, "2106335163116455": 384, "1925103664398193": 384, "664064407348633": 384, "6539173126220703": 384, "743558168411255": 384, "xvfb": 384, "pyvirtualdisplai": 384, "1400": [384, 385], "900": 384, "pil": 384, "rendering_callback": 384, "fromarrai": 384, "gif": 384, "save_al": 384, "append_imag": 384, "freeli": 385, "undertaken": 385, "broader": 385, "wider": 385, "algebra": 385, "acquaint": 385, "avenu": 385, "_apply_to_composit": 385, "default_x": 385, "default_i": 385, "torqu": 385, "upward": 385, "angular": 385, "sin": 385, "rad": 385, "sec": 385, "gravit": 385, "angl": 385, "deleg": 385, "new_th": 385, "new_thdot": 385, "thdot": 385, "g_forc": 385, "max_torqu": 385, "angle_norm": 385, "max_spe": 385, "albeit": 385, "gen_param": 385, "high_th": 385, "high_thdot": 385, "low_th": 385, "low_thdot": 385, "trivial": 385, "shortcut": [385, 390], "irrelev": 385, "_make_spec": 385, "td_param": 385, "render_fp": 385, "random_": 385, "_make_step": 385, "staticmethod": 385, "showcas": 385, "skeleton": 385, "_apply_transform": [385, 390], "_inv_apply_transform": [385, 390], "subset": [385, 386], "sine": 385, "cosin": 385, "sintransform": 385, "costransform": 385, "t_sin": 385, "t_co": 385, "cat_transform": 385, "simple_rollout": 385, "unexplor": 385, "init_td": 385, "traj_return": 385, "last_reward": 385, "is_ipython": 385, "inlin": 385, "get_backend": 385, "ion": 385, "gcf": 385, "clear_output": 385, "625": 385, "0748": 385, "519": 385, "49it": 385, "0499": 385, "4472": 385, "073": 385, "0685": 385, "0408": 385, "552": 385, "5154": 385, "9086": 385, "9385": 385, "155": 385, "2568": 385, "4981": 385, "223": 385, "8929": 385, "4491": 385, "581": 385, "3233": 385, "0664": 385, "596": 385, "62it": 385, "1021": 385, "5263": 385, "9579": 385, "5807": 385, "8075": 385, "212": 385, "2009": 385, "5525": 385, "914": 385, "2894": 385, "0115": 385, "0977": 385, "1845": 385, "1830": 385, "4858": 385, "233": 385, "2863": 385, "0297": 385, "464": 385, "4617": 385, "5997": 385, "904": 385, "1647": 385, "0777": 385, "901": 385, "4709": 385, "6813": 385, "8317": 385, "3221": 385, "5554": 385, "276": 385, "3353": 385, "701": 385, "8570": 385, "6656": 385, "463": 385, "7779": 385, "6911": 385, "875": 385, "0796": 385, "7082": 385, "308": 385, "0421": 385, "1496": 385, "5037": 385, "1755": 385, "5029": 385, "9454": 385, "9330": 385, "2118": 385, "444": 385, "0995": 385, "6294": 385, "3146": 385, "2909": 385, "461": 385, "9720": 385, "1298": 385, "9923": 385, "0345": 385, "3438": 385, "424": 385, "6953": 385, "5233": 385, "411": 385, "8011": 385, "5329": 385, "2677": 385, "6969": 385, "7010": 385, "376": 385, "9352": 385, "7707": 385, "6178": 385, "5646": 385, "348": 385, "7304": 385, "9407": 385, "942": 385, "3882": 385, "7604": 385, "3507": 385, "8928": 385, "258": 385, "6978": 385, "4641": 385, "549": 385, "6047": 385, "5005": 385, "4136": 385, "2993": 385, "3222": 385, "4046": 385, "7314": 385, "275": [385, 390], "6331": 385, "9318": 385, "961": 385, "8331": 385, "1604": 385, "4099": 385, "4761": 385, "125": 385, "4262": 385, "6363": 385, "382": 385, "3593": 385, "7377": 385, "2847": 385, "3443": 385, "867": 385, "3592": 385, "4760": 385, "441": 385, "9950": 385, "8021": 385, "3528": 385, "1214": 385, "708": 385, "4023": 385, "3583": 385, "041": 385, "3801": 385, "0310": 385, "120": 385, "4244": 385, "2039": 385, "4850": 385, "8748": 385, "706": 385, "4897": 385, "9210": 385, "8964": 385, "0832": 385, "3934": 385, "456": 385, "8971": 385, "2933": 385, "3377": 385, "6996": 385, "2274": 385, "8916": 385, "098": 385, "2660": 385, "9110": 385, "4503": 385, "6956": 385, "9172": 385, "4026": 385, "946": 385, "9229": 385, "5205": 385, "294": 385, "8872": 385, "6637": 385, "019": 385, "9281": 385, "2082": 385, "724": 385, "8561": 385, "6574": 385, "357": 385, "4138": 385, "5230": 385, "4065": 385, "5642": 385, "921": 385, "9786": 385, "4129": 385, "5831": 385, "266": 385, "7723": 385, "4152": 385, "0898": 385, "389": 385, "5155": 385, "5376": 385, "5616": 385, "4094": 385, "283": 385, "5333": 385, "4803": 385, "895": 385, "6566": 385, "2588": 385, "662": 385, "4732": 385, "7503": 385, "068": 385, "0714": 385, "3370": 385, "059": 385, "8612": 385, "1915": 385, "3855": 385, "0349": 385, "9644": 385, "4538": 385, "445": 385, "0392": 385, "4080": 385, "1648": 385, "9599": 385, "143": [385, 387], "4284": 385, "5946": 385, "2590": 385, "9181": 385, "4621": 385, "9075": 385, "674": 385, "1772": 385, "9444": 385, "351": 385, "9391": 385, "5595": 385, "8673": 385, "6240": 385, "5919": 385, "1071": 385, "9127": 385, "251": 385, "9799": 385, "3131": 385, "9612": 385, "9705": 385, "8741": 385, "2230": 385, "0972": 385, "0337": 385, "0350": 385, "0654": 385, "2441": 385, "4596": 385, "362": 385, "103": 385, "4362": 385, "171": 385, "104": 385, "4041": 385, "6907": 385, "105": [385, 387], "4664": 385, "2760": 385, "0299": 385, "9712": 385, "349": 385, "107": 385, "3332": 385, "4479": 385, "772": 385, "108": 385, "4357": 385, "9591": 385, "543": 385, "109": 385, "6216": 385, "1353": 385, "6261": 385, "7086": 385, "496": 385, "7758": 385, "9818": 385, "112": [385, 387], "7772": 385, "5055": 385, "113": 385, "5840": 385, "3180": 385, "2083": 385, "115": 385, "5275": 385, "6873": 385, "116": 385, "4107": 385, "1624": 385, "6372": 385, "2571": 385, "118": 385, "4039": 385, "4428": 385, "119": 385, "4728": 385, "5628": 385, "6767": 385, "2466": 385, "522": 385, "121": [385, 390], "5873": 385, "5072": 385, "6548": 385, "3766": 385, "5134": 385, "1955": 385, "124": 385, "2481": 385, "0591": 385, "4500": 385, "3368": 385, "126": [385, 387], "9708": 385, "7059": 385, "3031": 385, "2534": 385, "843": 385, "3327": 385, "6193": 385, "129": 385, "4831": 385, "1172": 385, "2593": 385, "4219": 385, "962": 385, "8380": 385, "899": 385, "132": 385, "2721": 385, "9048": 385, "166": 385, "133": 385, "2419": 385, "5248": 385, "2139": 385, "4278": 385, "135": 385, "0690": 385, "5140": 385, "136": 385, "1140": 385, "7402": 385, "137": 385, "5356": 385, "1636": 385, "138": 385, "0671": 385, "8798": 385, "139": 385, "8918": 385, "3298": 385, "307": 385, "140": 385, "1779": 385, "141": 385, "1771": 385, "3624": 385, "936": 385, "1683": 385, "4810": 385, "9373": 385, "4435": 385, "4396": 385, "8092": 385, "145": 385, "2572": 385, "146": 385, "4212": 385, "0260": 385, "147": 385, "0939": 385, "6478": 385, "605": 385, "148": 385, "6606": 385, "7289": 385, "149": 385, "9300": 385, "7193": 385, "563": 385, "1166": 385, "8514": 385, "9108": 385, "0672": 385, "292": 385, "152": 385, "8591": 385, "3768": 385, "153": 385, "9976": 385, "154": 385, "0576": 385, "0067": 385, "935": 385, "4199": 385, "1722": 385, "156": 385, "8310": 385, "3466": 385, "157": 385, "8631": 385, "2492": 385, "158": 385, "8763": 385, "1277": 385, "159": 385, "5562": 385, "7446": 385, "1082": 385, "9830": 385, "161": 385, "0946": 385, "5229": 385, "162": 385, "4574": 385, "6900": 385, "163": [385, 386], "2229": 385, "0318": 385, "482": 385, "164": 385, "0543": 385, "0817": 385, "761": 385, "165": 385, "2809": 385, "5118": 385, "366": 385, "1142": 385, "5635": 385, "167": 385, "1949": 385, "2327": 385, "982": 385, "168": 385, "0967": 385, "0387": 385, "457": 385, "169": 385, "0782": 385, "2150": 385, "170": 385, "5222": 385, "3725": 385, "01it": 385, "9288": 385, "9837": 385, "1416": 385, "1099": 385, "173": 385, "73it": 385, "8620": 385, "8475": 385, "174": 385, "1807": 385, "4375": 385, "175": 385, "1148": 385, "0645": 385, "2751": 385, "8313": 385, "177": 385, "9286": 385, "9770": 385, "178": 385, "5735": 385, "2837": 385, "179": 385, "2926": 385, "9489": 385, "180": 385, "1507": 385, "181": 385, "8724": 385, "3567": 385, "182": [385, 390], "3574": 385, "6140": 385, "183": 385, "7895": 385, "2518": 385, "6146": 385, "185": 385, "8776": 385, "7358": 385, "186": 385, "3722": 385, "8428": 385, "187": [385, 390], "7955": 385, "188": 385, "0092": 385, "7106": 385, "2264": 385, "6919": 385, "190": 385, "1438": 385, "1362": 385, "191": 385, "0618": 385, "8217": 385, "9420": 385, "6765": 385, "193": 385, "7745": 385, "0709": 385, "194": 385, "9478": 385, "6867": 385, "195": 385, "6507": 385, "6225": 385, "196": [385, 387], "2244": 385, "2195": 385, "197": 385, "5385": 385, "9263": 385, "198": 385, "1878": 385, "2374": 385, "8054": 385, "3504": 385, "557": 385, "0766": 385, "201": 385, "2011": 385, "8393": 385, "202": 385, "0803": 385, "7815": 385, "203": 385, "8363": 385, "2460": 385, "204": 385, "8643": 385, "2191": 385, "593": 385, "205": 385, "0773": 385, "1343": 385, "206": 385, "8657": 385, "207": 385, "9304": 385, "7584": 385, "208": 385, "8752": 385, "2307": 385, "209": 385, "5250": 385, "4869": 385, "7837": 385, "5762": 385, "211": 385, "6661": 385, "8600": 385, "2502": 385, "1752": 385, "3075": 385, "8871": 385, "214": 385, "9406": 385, "8090": 385, "215": 385, "6291": 385, "8923": 385, "876": 385, "9504": 385, "21e": 385, "217": 385, "7431": 385, "7880": 385, "218": 385, "4463": 385, "5432": 385, "219": [385, 390], "3793": 385, "3313": 385, "8843": 385, "0369": 385, "065": 385, "221": 385, "4828": 385, "8391": 385, "222": 385, "6265": 385, "2913": 385, "947": 385, "5541": 385, "1252": 385, "7342": 385, "2396": 385, "225": 385, "5936": 385, "1924": 385, "226": 385, "9975": 385, "2045": 385, "227": 385, "8367": 385, "9540": 385, "228": 385, "7259": 385, "6743": 385, "229": 385, "4827": 385, "7528": 385, "230": 385, "7361": 385, "8756": 385, "231": 385, "7646": 385, "1116": 385, "232": 385, "5426": 385, "8385": 385, "5662": 385, "8585": 385, "234": 385, "8234": 385, "7930": 385, "235": 385, "2648": 385, "9309": 385, "236": 385, "6817": 385, "237": 385, "0943": 385, "1533": 385, "238": 385, "3045": 385, "0483": 385, "6415": 385, "0201": 385, "241": 385, "4437": 385, "4365": 385, "242": 385, "0358": 385, "4943": 385, "243": 385, "1272": 385, "5003": 385, "1180": 385, "2637": 385, "245": 385, "7197": 385, "0873": 385, "246": 385, "2917": 385, "247": 385, "0160": 385, "0738": 385, "248": 385, "3689": 385, "0120": 385, "249": 385, "5570": 385, "0475": 385, "250": 385, "4423": 385, "2220": 385, "6803": 385, "252": 385, "1465": 385, "7214": 385, "253": 385, "8801": 385, "7034": 385, "254": 385, "9136": 385, "4076": 385, "7589": 385, "5013": 385, "8150": 385, "2241": 385, "257": 385, "0753": 385, "8081": 385, "1951": 385, "8314": 385, "259": 385, "0038": 385, "260": 385, "0889": 385, "4616": 385, "261": 385, "0655": 385, "262": 385, "8333": 385, "9476": 385, "263": 385, "7554": 385, "3798": 385, "264": 385, "3717": 385, "3947": 385, "529": 385, "265": 385, "3060": 385, "6495": 385, "7467": 385, "8889": 385, "267": 385, "8457": 385, "591": 385, "7137": 385, "0536": 385, "771": 385, "269": 385, "1651": 385, "388": 385, "270": 385, "8246": 385, "5709": 385, "281": 385, "271": 385, "7502": 385, "0521": 385, "032": 385, "5475": 385, "7253": 385, "273": 385, "2856": 385, "7130": 385, "274": 385, "2778": 385, "4122": 385, "8368": 385, "1841": 385, "9622": 385, "1603": 385, "003e": 385, "0247": 385, "346": 385, "278": 385, "2238": 385, "6418": 385, "279": 385, "0626": 385, "2538": 385, "280": 385, "0149": 385, "7380": 385, "2167": 385, "8911": 385, "282": 385, "8725": 385, "1983": 385, "8142": 385, "3709": 385, "284": 385, "4989": 385, "285": 385, "6464": 385, "6210": 385, "286": 385, "9726": 385, "0820": 385, "287": 385, "6975": 385, "9091": 385, "4926": 385, "4791": 385, "289": 385, "0905": 385, "3500": 385, "290": 385, "2287": 385, "291": 385, "9918": 385, "5543": 385, "9245": 385, "6444": 385, "631": 385, "293": 385, "0448": 385, "4769": 385, "8566": 385, "7208": 385, "295": 385, "0966": 385, "296": 385, "5303": 385, "1537": 385, "023": 385, "297": 385, "2682": 385, "564": 385, "298": 385, "4318": 385, "5063": 385, "299": 385, "7475": 385, "4190": 385, "8186": 385, "5077": 385, "301": 385, "1883": 385, "5291": 385, "302": 385, "3998": 385, "303": 385, "3622": 385, "0930": 385, "626": 385, "304": 385, "9500": 385, "5664": 385, "305": 385, "5697": 385, "3024": 385, "306": 385, "3117": 385, "0052": 385, "006": 385, "0981": 385, "9312": 385, "3873": 385, "309": 385, "0411": 385, "2650": 385, "1656": 385, "0228": 385, "004": 385, "311": 385, "1196": 385, "2478": 385, "312": 385, "7353": 385, "0812": 385, "313": 385, "3022": 385, "758": 385, "314": 385, "1406": 385, "4626": 385, "315": 385, "2156": 385, "851": 385, "316": 385, "1953": 385, "3774": 385, "317": 385, "6385": 385, "9917": 385, "318": 385, "2764": 385, "905": 385, "319": 385, "6391": 385, "9317": 385, "9748": 385, "2679": 385, "321": 385, "8495": 385, "5125": 385, "8177": 385, "6602": 385, "323": 385, "0704": 385, "5776": 385, "324": 385, "9833": [385, 389], "1339": 385, "402": 385, "325": 385, "1238": 385, "326": 385, "9299": 385, "0227": 385, "327": 385, "7727": 385, "1607": 385, "336": 385, "328": 385, "3958": 385, "3223": 385, "763": 385, "329": 385, "4742": 385, "1797": 385, "330": 385, "0144": 385, "0085": 385, "791": 385, "331": 385, "8284": 385, "0428": 385, "332": 385, "7365": 385, "333": 385, "4566": 385, "0781": 385, "086": 385, "3355": 385, "0230": 385, "335": 385, "9346": 385, "0423": 385, "076": 385, "3711": 385, "1335": 385, "6855": 385, "337": 385, "0304": 385, "0023": 385, "8459": 385, "338": 385, "9998": 385, "4399": 385, "339": 385, "2303": 385, "1346": 385, "340": 385, "2915": 385, "7116": 385, "341": 385, "5560": 385, "0487": 385, "342": 385, "5119": 385, "061": 385, "343": 385, "3305": 385, "3705": 385, "957": 385, "344": 385, "6068": 385, "345": 385, "5731": 385, "3897": 385, "0376": 385, "347": 385, "09it": 385, "0434": 385, "012": 385, "1300": 385, "1215": 385, "78it": 385, "0968": 385, "0885": 385, "350": 385, "1348": 385, "0073": 385, "5052": 385, "4184": 385, "2817": 385, "30it": 385, "8887": 385, "353": 385, "4779": 385, "1009": 385, "354": 385, "0604": 385, "599": 385, "355": 385, "4486": 385, "1176": 385, "656": 385, "356": 385, "2436": 385, "0668": 385, "8849": 385, "0012": 385, "358": 385, "7511": 385, "8804": 385, "8870": 385, "6728": 385, "360": 385, "8841": 385, "5508": 385, "361": 385, "5242": 385, "0013": 385, "6185": 385, "363": 385, "1378": 385, "0204": 385, "364": 385, "0355": 385, "685": 385, "365": 385, "4884": 385, "0231": 385, "0014": 385, "6793": 385, "367": 385, "9834": 385, "863": 385, "368": 385, "6709": 385, "462": 385, "369": 385, "5199": 385, "9790": 385, "370": 385, "9401": 385, "7802": 385, "371": 385, "6723": 385, "372": 385, "2678": 385, "6201": 385, "373": 385, "2184": 385, "7385": 385, "374": 385, "6344": 385, "617": 385, "375": 385, "9945": 385, "0772": 385, "567": 385, "7576": 385, "0398": 385, "377": 385, "3396": 385, "0022": 385, "094": 385, "378": 385, "3073": 385, "4018": 385, "379": 385, "1869": 385, "380": 385, "0481": 385, "1117": 385, "381": 385, "6823": 385, "981": 385, "8305": 385, "0210": 385, "383": 385, "4908": 385, "0272": 385, "538": 385, "3267": 385, "0111": 385, "7965": 385, "1796": 385, "0039": 385, "5396": 385, "386": 385, "3757": 385, "0490": 385, "387": 385, "1394": 385, "4187": 385, "2986": 385, "7954": 385, "1274": 385, "0063": 385, "813": 385, "8706": 385, "0114": 385, "391": 385, "6922": 385, "2423": 385, "392": 385, "9115": 385, "2602": 385, "393": 385, "2449": 385, "0783": 385, "394": 385, "0631": 385, "0057": 385, "7444": 385, "395": 385, "3339": 385, "0167": 385, "396": 385, "4806": 385, "397": 385, "4171": 385, "067": 385, "398": 385, "2618": 385, "5809": 385, "399": 385, "0054": 385, "3364": 385, "8733": 385, "0184": 385, "401": 385, "9137": 385, "0113": 385, "025": 385, "0386": 385, "0625": 385, "403": 385, "1332": 385, "0582": 385, "7816": 385, "404": 385, "8341": 385, "0941": 385, "854": 385, "405": 385, "8615": 385, "588": 385, "406": 385, "3849": 385, "008": 385, "407": 385, "9395": 385, "0765": 385, "055": 385, "408": 385, "2685": 385, "2235": 385, "688": 385, "409": 385, "3052": 385, "4249": 385, "410": 385, "6806": 385, "6383": 385, "3721": 385, "9981": 385, "412": 385, "1862": 385, "822": 385, "413": 385, "9811": 385, "0171": 385, "013": 385, "414": 385, "0252": 385, "0049": 385, "6205": 385, "415": 385, "1108": 385, "4921": 385, "9142": 385, "8130": 385, "417": 385, "1725": 385, "0036": 385, "3196": 385, "418": 385, "7795": 385, "0242": 385, "799": 385, "419": 385, "7737": 385, "0138": 385, "420": 385, "1462": 385, "0053": 385, "421": 385, "9226": 385, "6139": 385, "422": 385, "9889": 385, "0403": 385, "423": 385, "6194": 385, "0032": 385, "3989": 385, "0104": 385, "425": 385, "9960": 385, "0009": 385, "6009": 385, "426": 385, "2697": 385, "0914": 385, "427": 385, "1114": 385, "428": 385, "9862": 385, "1932": 385, "429": 385, "0637": 385, "0623": 385, "082": 385, "9906": 385, "2031": 385, "431": 385, "9948": 385, "0895": 385, "432": 385, "1970": 385, "0256": 385, "4231": 385, "0449": 385, "644": 385, "434": 385, "1039": 385, "1973": 385, "435": 385, "4561": 385, "1225": 385, "436": 385, "0211": 385, "2125": 385, "437": 385, "3866": 385, "0050": 385, "7202": 385, "438": 385, "6388": 385, "0072": 385, "439": 385, "1187": 385, "0015": 385, "5116": 385, "440": 385, "0432": 385, "0025": 385, "7809": 385, "1925": 385, "0103": 385, "442": 385, "9570": 385, "443": 385, "0871": 385, "5601": 385, "0165": 385, "0047": 385, "6061": 385, "2746": 385, "0027": 385, "7887": 385, "446": 385, "1835": 385, "0035": 385, "855": 385, "447": 385, "8420": 385, "548": 385, "2653": 385, "0126": 385, "9736": 385, "449": 385, "0594": 385, "0119": 385, "6196": 385, "450": 385, "4509": 385, "0373": 385, "451": 385, "0620": 385, "452": 385, "6898": 385, "3235": 385, "687": 385, "453": 385, "5879": 385, "454": 385, "8406": 385, "0694": 385, "455": 385, "8259": 385, "0235": 385, "8500": 385, "0024": 385, "4054": 385, "458": 385, "2027": 385, "0894": 385, "459": 385, "5966": 385, "460": 385, "6942": 385, "0016": 385, "4254": 385, "6703": 385, "0145": 385, "8124": 385, "0218": 385, "9196": 385, "0188": 385, "8986": 385, "0884": 385, "0084": 385, "5624": 385, "465": 385, "8862": 385, "5384": 385, "5837": 385, "8954": 385, "0101": 385, "6751": 385, "468": 385, "8063": 385, "0122": 385, "9635": 385, "0692": 385, "4216": 385, "470": 385, "1227": 385, "0586": 385, "162e": 385, "9690": 385, "4166": 385, "6324": 385, "0778": 385, "8548": 385, "0017": 385, "4408": 385, "475": 385, "8125": 385, "1515": 385, "476": 385, "2733": 385, "0044": 385, "2836": 385, "7497": 385, "7681": 385, "478": 385, "8547": 385, "0105": 385, "7212": 385, "9848": 385, "0019": 385, "6498": 385, "1987": 385, "0011": 385, "5473": 385, "481": 385, "8991": 385, "6091": 385, "9189": 385, "5771": 385, "483": 385, "6781": 385, "7542": 385, "484": 385, "5959": 385, "0064": 385, "2547": 385, "486": 385, "0636": 385, "547": 385, "487": 385, "0065": 385, "488": 385, "1694": 385, "0083": 385, "5759": 385, "489": 385, "0493": 385, "0021": 385, "7805": 385, "490": 385, "0950": 385, "497": 385, "491": 385, "9717": 385, "3672": 385, "492": 385, "0207": 385, "493": 385, "8266": 385, "5365": 385, "494": 385, "2623": 385, "5078": 385, "495": 385, "4545": 385, "09636": 385, "8754": 385, "0010": 385, "498": 385, "0031": 385, "8269": 385, "499": 385, "6642": 385, "2284": 385, "501": 385, "9130": 385, "0008": 385, "502": 385, "503": 385, "7624": 385, "0056": 385, "3858": 385, "504": 385, "0890": 385, "0042": 385, "505": 385, "7505": 385, "2157": 385, "506": 385, "8394": 385, "3413": 385, "9609": 385, "0041": 385, "6905": 385, "508": 385, "8467": 385, "4409": 385, "509": 385, "510": 385, "8128": 385, "3559": 385, "511": 385, "1479": 385, "0264": 385, "1589": 385, "566": 385, "513": 385, "2756": 385, "0046": 385, "5266": 385, "514": 385, "9873": 385, "0112": 385, "9314": 385, "515": 385, "3791": 385, "0721": 385, "516": 385, "4580": 385, "0758": 385, "6114": 385, "517": 385, "2431": 385, "518": 385, "1958": 385, "5553": 385, "8924": 385, "0097": 385, "520": 385, "3737": 385, "0234": 385, "521": 385, "9125": 385, "4623": 385, "3230": 385, "0589": 385, "3784": 385, "523": 385, "9482": 385, "0051": 385, "524": 385, "1979": 385, "0045": 385, "6401": 385, "525": 385, "1588": 385, "0048": 385, "6255": 385, "526": 385, "6084": 385, "3477": 385, "1475": 385, "0209": 385, "528": 385, "7611": 385, "1040": 385, "0099": 385, "0173": 385, "643": 385, "530": 385, "8189": 385, "4358": 385, "531": 385, "9897": 385, "532": 385, "1548": 385, "9751": 385, "533": 385, "6362": 385, "7495": 385, "534": 385, "1749": 385, "9513": 385, "535": 385, "7708": 385, "0371": 385, "536": 385, "2649": 385, "0437": 385, "537": 385, "5491": 385, "0276": 385, "6426": 385, "7294": 385, "078e": 385, "539": 385, "9928": 385, "7937": 385, "0124": 385, "9664": 385, "541": 385, "3342": 385, "542": 385, "2046": 385, "5496": 385, "0956": 385, "0059": 385, "545": 385, "9028": 385, "5843": 385, "546": 385, "0674": 385, "0178": 385, "797": 385, "2815": 385, "0599": 385, "1587": 385, "9276": 385, "8228": 385, "6164": 385, "551": 385, "6850": 385, "9167": 385, "3092": 385, "0670": 385, "9177": 385, "553": 385, "1599": 385, "0043": 385, "554": 385, "6367": 385, "555": 385, "556": 385, "6694": 385, "2622": 385, "0372": 385, "4841": 385, "558": 385, "2707": 385, "757": 385, "559": 385, "2267": 385, "5415": 385, "560": 385, "4556": 385, "0163": 385, "561": 385, "1839": 385, "0809": 385, "6262": 385, "562": 385, "0278": 385, "1112": 385, "6155": 385, "565": 385, "1427": 385, "3582": 385, "624": 385, "7870": 385, "9490": 385, "0439": 385, "8796": 385, "568": 385, "8026": 385, "612": 385, "569": [385, 390], "3147": 385, "8486": 385, "570": 385, "7917": 385, "0129": 385, "571": [385, 390], "9553": 385, "0020": 385, "6871": 385, "572": 385, "3132": 385, "0159": 385, "8646": 385, "573": 385, "5320": 385, "0269": 385, "574": 385, "2955": 385, "0245": 385, "575": 385, "3347": 385, "0179": 385, "9718": 385, "1629": 385, "804": 385, "577": 385, "4164": 385, "0070": 385, "4335": 385, "578": 385, "579": 385, "3049": 385, "9063": 385, "580": 385, "8785": 385, "3295": 385, "5184": 385, "0546": 385, "582": 385, "4589": 385, "583": 385, "4697": 385, "584": 385, "2397": 385, "585": 385, "4953": 385, "1775": 385, "586": 385, "2258": 385, "0110": 385, "7671": 385, "587": 385, "3981": 385, "8590": 385, "0007": 385, "589": 385, "9820": 385, "4221": 385, "590": 385, "1293": 385, "0116": 385, "868": 385, "1675": 385, "5931": 385, "592": 385, "2910": 385, "5219": 385, "2124": 385, "1730": 385, "737": 385, "594": 385, "2914": 385, "0206": 385, "595": 385, "0172": 385, "3982": 385, "0121": 385, "4789": 385, "597": 385, "3805": 385, "4074": 385, "598": 385, "3310": 385, "5065": 385, "6028": 385, "6316": 385, "6724": 385, "6523": 385, "601": 385, "0136": 385, "4298": 385, "602": 385, "3524": 385, "2629": 385, "603": 385, "2635": 385, "7839": 385, "604": 385, "6041": 385, "8027": 385, "4170": 385, "4675": 385, "606": 385, "3153": 385, "9316": 385, "607": 385, "0649": 385, "9722": 385, "7989": 385, "0329": 385, "609": 385, "1976": 385, "6852": 385, "610": 385, "4793": 385, "1255": 385, "611": 385, "4581": 385, "0394": 385, "2047": 385, "0326": 385, "613": 385, "8967": 385, "8619": 385, "614": 385, "5906": 385, "6491": 385, "615": 385, "6634": 385, "4394": 385, "616": 385, "0624": 385, "0061": 385, "5676": 385, "3259": 385, "0131": 385, "7733": 385, "618": 385, "7515": 385, "0189": 385, "5575": 385, "619": 385, "9313": 385, "6286": 385, "620": 385, "4325": 385, "7832": 385, "621": 385, "1134": 385, "4572": 385, "0500": 385, "5838": 385, "623": 385, "3818": 385, "8623": 385, "1253": 385, "6622": 385, "subject": 385, "explain": 386, "semat": 386, "r3mtransform": 386, "env_transform": [386, 390], "s3": 386, "amazonaw": 386, "r3m_50": 386, "374m": 386, "5m": 386, "166mb": 386, "4m": 386, "145mb": 386, "122mb": 386, "110mb": 386, "5mb": 386, "113mb": 386, "101m": 386, "103mb": 386, "113m": 386, "108mb": 386, "124m": 386, "106mb": 386, "135m": 386, "6mb": 386, "148m": 386, "4mb": 386, "162m": 386, "173m": 386, "104mb": 386, "184m": 386, "9mb": 386, "197m": 386, "8mb": 386, "213m": 386, "100mb": 386, "227m": 386, "111mb": 386, "239m": 386, "250m": 386, "102mb": 386, "260m": 386, "105mb": 386, "271m": 386, "281m": 386, "295m": 386, "307m": 386, "317m": 386, "328m": 386, "338m": 386, "7mb": 386, "360m": 386, "373m": 386, "107mb": 386, "wiser": 386, "batteri": 387, "buffer_list": 387, "lowest": 387, "medium": 387, "buffer_lazytensor": 387, "buffer_lazymemmap": 387, "tempdir": 387, "tmp483hbv66": 387, "fullest": 387, "mydata": 387, "background": 387, "question": [387, 389], "_i": 387, "artifici": 387, "0893e": 387, "hamper": 387, "she": 387, "pars": 387, "proport": 387, "hist": 387, "barcontain": 387, "artist": 387, "reappear": 387, "unfold": 387, "problemat": 387, "4th": 387, "prioritizedslicesampl": 387, "tensordictmaxvaluewrit": 387, "demo": 389, "icml": 389, "vmoen": 389, "fb": 389, "invest": 389, "platform": 389, "media": 389, "predominantli": 389, "tensordict1": 389, "tensordict2": 389, "tensordict_sampl": 389, "_sampler": 389, "_sum_tre": 389, "modulenotfounderror": 389, "28791671991348267": 389, "noopresetenv": [389, 390], "backbone_modul": 389, "params_expand": 389, "exec_sequ": 389, "tensordict_exp": 389, "base_modul": 389, "0137": 389, "1524": 389, "0641": 389, "viewbackward0": 389, "asstridedbackward0": 389, "8728": 389, "1334": 389, "3494": 389, "6887": 389, "6402": 389, "_safetanhbackward": 389, "1132": 389, "1762": 389, "3430": 389, "2668": 389, "2918": 389, "6239": 389, "roughli": 389, "tensordicts_prealloc": 389, "tensordicts_stack": 389, "tensordict_rollout": [389, 390], "disclaim": 389, "concatmodul": 389, "loss_td": 389, "year": 389, "roadmap": 389, "compris": 389, "contributor": 389, "curiou": 389, "nascent": 389, "unsupervis": 390, "unifi": 390, "_build_env": 390, "bipedalwalk": 390, "bipedalwalkerhardcor": 390, "blackjack": 390, "carrac": 390, "5939": 390, "deserv": 390, "__episode__": 390, "__trajectory__": 390, "void": 390, "reproduct": 390, "reset_data": 390, "tensordict_tprim": 390, "imshow": 390, "axesimag": 390, "0x7ff87ad0d880": 390, "traceback": 390, "1371": 390, "784": 390, "3048": 390, "1423": 390, "_check_version_exist": 390, "ns": 390, "_check_name_exist": 390, "_check_namespace_exist": 390, "namespacenotfound": 390, "suggestion_msg": 390, "wrapper1": 390, "wrapper2": 390, "obviou": 390, "truth": 390, "env0": 390, "env_transformed_bi": 390, "stanc": 390, "transformeddistribut": 390, "base_dist": 390, "concat": 390, "mofidi": 390, "transformedenviron": 390, "moderet": 390, "computation": 390, "legitim": 390, "incom": 390, "amongst": 390, "has_cuda": 390, "wor": 390, "convention": 390, "markovian": 390, "constain": 390, "bar_": 390, "get_someth": 390, "aargh": 390, "is_clos": 390, "foo_list": 390, "parallen": 390, "particularili": 390, "evolv": 390, "steadi": 390, "approx": 390, "_extra_st": 390, "observation_ssq": 390, "observation_sum": 390, "dispach": 390, "absor": 390, "3783": 390}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "BinaryDiscreteTensorSpec"], [26, 0, 1, "", "BoundedTensorSpec"], [27, 0, 1, "", "CompositeSpec"], [28, 0, 1, "", "ConstantKLController"], [29, 0, 1, "", "DiscreteTensorSpec"], [30, 0, 1, "", "Flat2TED"], [31, 0, 1, "", "H5Combine"], [32, 0, 1, "", "H5Split"], [33, 0, 1, "", "LazyStackedCompositeSpec"], [34, 0, 1, "", "LazyStackedTensorSpec"], [35, 0, 1, "", "MultiDiscreteTensorSpec"], [36, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [37, 0, 1, "", "MultiStep"], [38, 0, 1, "", "Nested2TED"], [39, 0, 1, "", "NonTensorSpec"], [40, 0, 1, "", "OneHotDiscreteTensorSpec"], [41, 0, 1, "", "PairwiseDataset"], [42, 0, 1, "", "PrioritizedReplayBuffer"], [43, 0, 1, "", "PromptData"], [44, 0, 1, "", "PromptTensorDictTokenizer"], [45, 0, 1, "", "ReplayBuffer"], [46, 0, 1, "", "RewardData"], [47, 0, 1, "", "RolloutFromModel"], [48, 0, 1, "", "TED2Flat"], [49, 0, 1, "", "TED2Nested"], [50, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [51, 0, 1, "", "TensorDictReplayBuffer"], [52, 0, 1, "", "TensorDictTokenizer"], [53, 0, 1, "", "TensorSpec"], [54, 0, 1, "", "TokenizedDatasetLoader"], [55, 0, 1, "", "UnboundedContinuousTensorSpec"], [56, 0, 1, "", "UnboundedDiscreteTensorSpec"], [57, 0, 1, "", "check_no_exclusive_keys"], [58, 0, 1, "", "consolidate_spec"], [59, 0, 1, "", "contains_lazy_spec"], [60, 0, 1, "", "create_infinite_iterator"], [70, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 3, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 3, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 3, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 3, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "empty"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "get"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_empty"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "items"], [33, 1, 1, "", "keys"], [33, 1, 1, "", "lock_"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 3, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unlock_"], [33, 1, 1, "", "values"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 3, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 3, 1, "", "sample"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 3, 1, "", "sample"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to_categorical"], [36, 1, 1, "", "to_categorical_spec"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "update_mask"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[37, 1, 1, "", "add_module"], [37, 1, 1, "", "apply"], [37, 1, 1, "", "bfloat16"], [37, 1, 1, "", "buffers"], [37, 1, 1, "", "children"], [37, 1, 1, "", "compile"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 1, 1, "", "double"], [37, 1, 1, "", "eval"], [37, 1, 1, "", "extra_repr"], [37, 1, 1, "", "float"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_buffer"], [37, 1, 1, "", "get_extra_state"], [37, 1, 1, "", "get_parameter"], [37, 1, 1, "", "get_submodule"], [37, 1, 1, "", "half"], [37, 1, 1, "", "ipu"], [37, 1, 1, "", "load_state_dict"], [37, 1, 1, "", "modules"], [37, 1, 1, "", "named_buffers"], [37, 1, 1, "", "named_children"], [37, 1, 1, "", "named_modules"], [37, 1, 1, "", "named_parameters"], [37, 1, 1, "", "parameters"], [37, 1, 1, "", "register_backward_hook"], [37, 1, 1, "", "register_buffer"], [37, 1, 1, "", "register_forward_hook"], [37, 1, 1, "", "register_forward_pre_hook"], [37, 1, 1, "", "register_full_backward_hook"], [37, 1, 1, "", "register_full_backward_pre_hook"], [37, 1, 1, "", "register_load_state_dict_post_hook"], [37, 1, 1, "", "register_module"], [37, 1, 1, "", "register_parameter"], [37, 1, 1, "", "register_state_dict_pre_hook"], [37, 1, 1, "", "requires_grad_"], [37, 1, 1, "", "set_extra_state"], [37, 1, 1, "", "set_submodule"], [37, 1, 1, "", "share_memory"], [37, 1, 1, "", "state_dict"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_empty"], [37, 1, 1, "", "train"], [37, 1, 1, "", "type"], [37, 1, 1, "", "xpu"], [37, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 3, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 3, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[41, 3, 1, "", "batch_size"], [41, 3, 1, "", "device"], [41, 1, 1, "", "from_dataset"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 3, 1, "", "names"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dump"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "load"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "register_load_hook"], [42, 1, 1, "", "register_save_hook"], [42, 1, 1, "", "sample"], [42, 3, 1, "", "sampler"], [42, 1, 1, "", "save"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"], [42, 3, 1, "", "storage"], [42, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[43, 3, 1, "", "batch_size"], [43, 3, 1, "", "device"], [43, 1, 1, "", "from_dataset"], [43, 1, 1, "", "from_tensordict"], [43, 1, 1, "", "get"], [43, 1, 1, "", "load"], [43, 1, 1, "", "load_"], [43, 1, 1, "", "load_memmap"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "memmap"], [43, 1, 1, "", "memmap_"], [43, 1, 1, "", "memmap_like"], [43, 1, 1, "", "memmap_refresh_"], [43, 3, 1, "", "names"], [43, 1, 1, "", "save"], [43, 1, 1, "", "set"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to_tensordict"], [43, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[45, 1, 1, "", "add"], [45, 1, 1, "", "append_transform"], [45, 1, 1, "", "dump"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "empty"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "insert_transform"], [45, 1, 1, "", "load"], [45, 1, 1, "", "loads"], [45, 1, 1, "", "register_load_hook"], [45, 1, 1, "", "register_save_hook"], [45, 1, 1, "", "sample"], [45, 3, 1, "", "sampler"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set_sampler"], [45, 1, 1, "", "set_storage"], [45, 1, 1, "", "set_writer"], [45, 3, 1, "", "storage"], [45, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[46, 3, 1, "", "batch_size"], [46, 3, 1, "", "device"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 3, 1, "", "names"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[47, 1, 1, "", "create_rollout_td"], [47, 1, 1, "", "generate"], [47, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "append_transform"], [50, 1, 1, "", "dump"], [50, 1, 1, "", "dumps"], [50, 1, 1, "", "empty"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "insert_transform"], [50, 1, 1, "", "load"], [50, 1, 1, "", "loads"], [50, 1, 1, "", "register_load_hook"], [50, 1, 1, "", "register_save_hook"], [50, 1, 1, "", "sample"], [50, 3, 1, "", "sampler"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set_sampler"], [50, 1, 1, "", "set_storage"], [50, 1, 1, "", "set_writer"], [50, 3, 1, "", "storage"], [50, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 3, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[54, 1, 1, "", "dataset_to_tensordict"], [54, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 3, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 3, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"]], "torchrl.data.datasets": [[61, 0, 1, "", "AtariDQNExperienceReplay"], [62, 0, 1, "", "BaseDatasetExperienceReplay"], [63, 0, 1, "", "D4RLExperienceReplay"], [64, 0, 1, "", "GenDGRLExperienceReplay"], [65, 0, 1, "", "MinariExperienceReplay"], [66, 0, 1, "", "OpenMLExperienceReplay"], [67, 0, 1, "", "OpenXExperienceReplay"], [68, 0, 1, "", "RobosetExperienceReplay"], [69, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 3, 1, "", "data_path"], [63, 3, 1, "", "data_path_root"], [63, 1, 1, "", "delete"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "preprocess"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 3, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 3, 1, "", "storage"], [63, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 3, 1, "", "data_path"], [64, 3, 1, "", "data_path_root"], [64, 1, 1, "", "delete"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "preprocess"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 3, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 3, 1, "", "storage"], [64, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 3, 1, "", "data_path"], [65, 3, 1, "", "data_path_root"], [65, 1, 1, "", "delete"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "preprocess"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 3, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 3, 1, "", "storage"], [65, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 3, 1, "", "data_path"], [66, 3, 1, "", "data_path_root"], [66, 1, 1, "", "delete"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "preprocess"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 3, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 3, 1, "", "storage"], [66, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 3, 1, "", "data_path"], [67, 3, 1, "", "data_path_root"], [67, 1, 1, "", "delete"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "preprocess"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 3, 1, "", "data_path"], [68, 3, 1, "", "data_path_root"], [68, 1, 1, "", "delete"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "preprocess"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 3, 1, "", "data_path"], [69, 3, 1, "", "data_path_root"], [69, 1, 1, "", "delete"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "preprocess"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 3, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 3, 1, "", "storage"], [69, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[71, 0, 1, "", "FlatStorageCheckpointer"], [72, 0, 1, "", "H5StorageCheckpointer"], [73, 0, 1, "", "ImmutableDatasetWriter"], [74, 0, 1, "", "LazyMemmapStorage"], [75, 0, 1, "", "LazyTensorStorage"], [76, 0, 1, "", "ListStorage"], [77, 0, 1, "", "ListStorageCheckpointer"], [78, 0, 1, "", "NestedStorageCheckpointer"], [79, 0, 1, "", "PrioritizedSampler"], [80, 0, 1, "", "PrioritizedSliceSampler"], [81, 0, 1, "", "RandomSampler"], [82, 0, 1, "", "ReplayBufferEnsemble"], [83, 0, 1, "", "RoundRobinWriter"], [84, 0, 1, "", "Sampler"], [85, 0, 1, "", "SamplerEnsemble"], [86, 0, 1, "", "SamplerWithoutReplacement"], [87, 0, 1, "", "SliceSampler"], [88, 0, 1, "", "SliceSamplerWithoutReplacement"], [89, 0, 1, "", "Storage"], [90, 0, 1, "", "StorageCheckpointerBase"], [91, 0, 1, "", "StorageEnsemble"], [92, 0, 1, "", "StorageEnsembleCheckpointer"], [93, 0, 1, "", "TensorDictMaxValueWriter"], [94, 0, 1, "", "TensorDictRoundRobinWriter"], [95, 0, 1, "", "TensorStorage"], [96, 0, 1, "", "TensorStorageCheckpointer"], [97, 0, 1, "", "Writer"], [98, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[73, 1, 1, "", "add"], [73, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[74, 1, 1, "", "attach"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "load"], [74, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[75, 1, 1, "", "attach"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "load"], [75, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[76, 1, 1, "", "attach"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "load"], [76, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[79, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[80, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 3, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 3, 1, "", "storage"], [82, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[83, 1, 1, "", "add"], [83, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[89, 1, 1, "", "attach"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "load"], [89, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[91, 1, 1, "", "attach"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "load"], [91, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"], [93, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[94, 1, 1, "", "add"], [94, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[98, 1, 1, "", "add"], [98, 1, 1, "", "extend"]], "torchrl.envs": [[99, 2, 1, "", "BraxEnv"], [100, 2, 1, "", "BraxWrapper"], [101, 2, 1, "", "DMControlEnv"], [102, 2, 1, "", "DMControlWrapper"], [103, 0, 1, "", "EnvBase"], [104, 0, 1, "", "EnvCreator"], [105, 0, 1, "", "EnvMetaData"], [106, 2, 1, "", "GymEnv"], [107, 0, 1, "", "GymLikeEnv"], [108, 2, 1, "", "GymWrapper"], [109, 2, 1, "", "HabitatEnv"], [110, 2, 1, "", "IsaacGymEnv"], [111, 2, 1, "", "IsaacGymWrapper"], [112, 2, 1, "", "JumanjiEnv"], [113, 2, 1, "", "JumanjiWrapper"], [114, 2, 1, "", "MOGymEnv"], [115, 2, 1, "", "MOGymWrapper"], [116, 2, 1, "", "MarlGroupMapType"], [117, 2, 1, "", "MeltingpotEnv"], [118, 2, 1, "", "MeltingpotWrapper"], [119, 2, 1, "", "ModelBasedEnvBase"], [120, 2, 1, "", "MultiThreadedEnv"], [121, 2, 1, "", "MultiThreadedEnvWrapper"], [122, 2, 1, "", "OpenMLEnv"], [123, 0, 1, "", "ParallelEnv"], [124, 2, 1, "", "PettingZooEnv"], [125, 2, 1, "", "PettingZooWrapper"], [126, 2, 1, "", "RoboHiveEnv"], [127, 2, 1, "", "SMACv2Env"], [128, 2, 1, "", "SMACv2Wrapper"], [129, 0, 1, "", "SerialEnv"], [130, 2, 1, "", "VmasEnv"], [131, 2, 1, "", "VmasWrapper"], [132, 2, 1, "", "check_marl_grouping"], [133, 2, 1, "", "gym_backend"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "rollout"], [136, 2, 1, "", "set_gym_backend"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "add_truncated_keys"], [103, 1, 1, "", "append_transform"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "batch_size"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "maybe_reset"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "id0", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "id1", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "id2", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "id3", "set_seed"], [103, 1, 1, "", "set_submodule"], [103, 3, 1, "", "shape"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_keys"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "id4", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "add_truncated_keys"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "apply"], [107, 1, 1, "", "auto_register_info_dict"], [107, 3, 1, "", "batch_locked"], [107, 3, 1, "", "batch_size"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "close"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_reset"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "read_action"], [107, 1, 1, "", "read_done"], [107, 1, 1, "", "read_obs"], [107, 1, 1, "", "read_reward"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_gym"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_info_dict_reader"], [107, 1, 1, "", "set_seed"], [107, 1, 1, "", "set_submodule"], [107, 3, 1, "", "shape"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_keys"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[123, 3, 1, "", "action_key"], [123, 3, 1, "", "action_keys"], [123, 3, 1, "", "action_spec"], [123, 1, 1, "", "add_module"], [123, 1, 1, "", "add_truncated_keys"], [123, 1, 1, "", "append_transform"], [123, 1, 1, "", "apply"], [123, 3, 1, "", "batch_locked"], [123, 3, 1, "", "batch_size"], [123, 1, 1, "", "bfloat16"], [123, 1, 1, "", "buffers"], [123, 1, 1, "", "children"], [123, 1, 1, "", "compile"], [123, 1, 1, "", "cpu"], [123, 1, 1, "", "cuda"], [123, 3, 1, "", "done_key"], [123, 3, 1, "", "done_keys"], [123, 3, 1, "", "done_keys_groups"], [123, 3, 1, "", "done_spec"], [123, 1, 1, "", "double"], [123, 1, 1, "", "empty_cache"], [123, 1, 1, "", "eval"], [123, 1, 1, "", "extra_repr"], [123, 1, 1, "", "fake_tensordict"], [123, 1, 1, "", "float"], [123, 1, 1, "", "forward"], [123, 3, 1, "", "full_action_spec"], [123, 3, 1, "", "full_done_spec"], [123, 3, 1, "", "full_reward_spec"], [123, 3, 1, "", "full_state_spec"], [123, 1, 1, "", "get_buffer"], [123, 1, 1, "", "get_extra_state"], [123, 1, 1, "", "get_parameter"], [123, 1, 1, "", "get_submodule"], [123, 1, 1, "", "half"], [123, 3, 1, "", "input_spec"], [123, 1, 1, "", "ipu"], [123, 1, 1, "", "load_state_dict"], [123, 1, 1, "", "maybe_reset"], [123, 1, 1, "", "modules"], [123, 1, 1, "", "named_buffers"], [123, 1, 1, "", "named_children"], [123, 1, 1, "", "named_modules"], [123, 1, 1, "", "named_parameters"], [123, 3, 1, "", "observation_spec"], [123, 3, 1, "", "output_spec"], [123, 1, 1, "", "parameters"], [123, 1, 1, "", "rand_action"], [123, 1, 1, "", "rand_step"], [123, 1, 1, "", "register_backward_hook"], [123, 1, 1, "", "register_buffer"], [123, 1, 1, "", "register_forward_hook"], [123, 1, 1, "", "register_forward_pre_hook"], [123, 1, 1, "", "register_full_backward_hook"], [123, 1, 1, "", "register_full_backward_pre_hook"], [123, 1, 1, "", "register_gym"], [123, 1, 1, "", "register_load_state_dict_post_hook"], [123, 1, 1, "", "register_module"], [123, 1, 1, "", "register_parameter"], [123, 1, 1, "", "register_state_dict_pre_hook"], [123, 1, 1, "", "requires_grad_"], [123, 1, 1, "", "reset"], [123, 3, 1, "", "reset_keys"], [123, 3, 1, "", "reward_key"], [123, 3, 1, "", "reward_keys"], [123, 3, 1, "", "reward_spec"], [123, 1, 1, "", "rollout"], [123, 1, 1, "", "set_extra_state"], [123, 1, 1, "", "set_seed"], [123, 1, 1, "", "set_submodule"], [123, 3, 1, "", "shape"], [123, 1, 1, "", "share_memory"], [123, 3, 1, "", "specs"], [123, 1, 1, "", "state_dict"], [123, 3, 1, "", "state_keys"], [123, 3, 1, "", "state_spec"], [123, 1, 1, "", "step"], [123, 1, 1, "", "step_and_maybe_reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "to_empty"], [123, 1, 1, "", "train"], [123, 1, 1, "", "type"], [123, 1, 1, "", "update_kwargs"], [123, 1, 1, "", "xpu"], [123, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[129, 3, 1, "", "action_key"], [129, 3, 1, "", "action_keys"], [129, 3, 1, "", "action_spec"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 3, 1, "", "batch_locked"], [129, 3, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "children"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 3, 1, "", "done_key"], [129, 3, 1, "", "done_keys"], [129, 3, 1, "", "done_keys_groups"], [129, 3, 1, "", "done_spec"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 3, 1, "", "full_action_spec"], [129, 3, 1, "", "full_done_spec"], [129, 3, 1, "", "full_reward_spec"], [129, 3, 1, "", "full_state_spec"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 3, 1, "", "input_spec"], [129, 1, 1, "", "ipu"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 3, 1, "", "observation_spec"], [129, 3, 1, "", "output_spec"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "", "rand_step"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "", "reset"], [129, 3, 1, "", "reset_keys"], [129, 3, 1, "", "reward_key"], [129, 3, 1, "", "reward_keys"], [129, 3, 1, "", "reward_spec"], [129, 1, 1, "", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "set_submodule"], [129, 3, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 3, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 3, 1, "", "state_keys"], [129, 3, 1, "", "state_spec"], [129, 1, 1, "", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "update_kwargs"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[134, 2, 1, "", "DreamerDecoder"], [135, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[137, 0, 1, "", "ActionDiscretizer"], [138, 0, 1, "", "ActionMask"], [139, 0, 1, "", "AutoResetEnv"], [140, 0, 1, "", "AutoResetTransform"], [141, 0, 1, "", "BatchSizeTransform"], [142, 0, 1, "", "BinarizeReward"], [143, 0, 1, "", "BurnInTransform"], [144, 0, 1, "", "CatFrames"], [145, 0, 1, "", "CatTensors"], [146, 0, 1, "", "CenterCrop"], [147, 0, 1, "", "ClipTransform"], [148, 0, 1, "", "Compose"], [149, 0, 1, "", "DTypeCastTransform"], [150, 0, 1, "", "DeviceCastTransform"], [151, 0, 1, "", "DiscreteActionProjection"], [152, 0, 1, "", "DoubleToFloat"], [153, 0, 1, "", "EndOfLifeTransform"], [154, 0, 1, "", "ExcludeTransform"], [155, 0, 1, "", "FiniteTensorDictCheck"], [156, 0, 1, "", "FlattenObservation"], [157, 0, 1, "", "FrameSkipTransform"], [158, 0, 1, "", "GrayScale"], [159, 0, 1, "", "InitTracker"], [160, 0, 1, "", "KLRewardTransform"], [161, 0, 1, "", "NoopResetEnv"], [162, 0, 1, "", "ObservationNorm"], [163, 0, 1, "", "ObservationTransform"], [164, 0, 1, "", "PermuteTransform"], [165, 0, 1, "", "PinMemoryTransform"], [166, 0, 1, "", "R3MTransform"], [167, 0, 1, "", "RandomCropTensorDict"], [168, 0, 1, "", "RemoveEmptySpecs"], [169, 0, 1, "", "RenameTransform"], [170, 0, 1, "", "Resize"], [171, 0, 1, "", "Reward2GoTransform"], [172, 0, 1, "", "RewardClipping"], [173, 0, 1, "", "RewardScaling"], [174, 0, 1, "", "RewardSum"], [175, 0, 1, "", "SelectTransform"], [176, 0, 1, "", "SignTransform"], [177, 0, 1, "", "SqueezeTransform"], [178, 0, 1, "", "StepCounter"], [179, 0, 1, "", "TargetReturn"], [180, 0, 1, "", "TensorDictPrimer"], [181, 0, 1, "", "TimeMaxPool"], [182, 0, 1, "", "ToTensorImage"], [183, 0, 1, "", "Transform"], [184, 0, 1, "", "TransformedEnv"], [185, 0, 1, "", "UnsqueezeTransform"], [186, 0, 1, "", "VC1Transform"], [187, 0, 1, "", "VIPRewardTransform"], [188, 0, 1, "", "VIPTransform"], [189, 0, 1, "", "VecGymEnvTransform"], [190, 0, 1, "", "VecNorm"], [191, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[137, 0, 1, "", "SamplingStrategy"], [137, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[138, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[139, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "transform_env_batch_size"], [141, 1, 1, "", "transform_input_spec"], [141, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[142, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[143, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[147, 1, 1, "", "transform_observation_spec"], [147, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[148, 1, 1, "", "append"], [148, 1, 1, "", "forward"], [148, 1, 1, "", "insert"], [148, 1, 1, "", "to"], [148, 1, 1, "", "transform_env_batch_size"], [148, 1, 1, "", "transform_env_device"], [148, 1, 1, "", "transform_input_spec"], [148, 1, 1, "", "transform_observation_spec"], [148, 1, 1, "", "transform_output_spec"], [148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"], [149, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_done_spec"], [150, 1, 1, "", "transform_env_device"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"], [150, 1, 1, "", "transform_output_spec"], [150, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[151, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "register_keys"], [153, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[155, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[157, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[162, 1, 1, "", "init_stats"], [162, 1, 1, "", "transform_input_spec"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[165, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[166, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[167, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[168, 1, 1, "", "forward"], [168, 1, 1, "", "transform_input_spec"], [168, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "transform_input_spec"], [169, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[171, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[172, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[173, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "transform_input_spec"], [174, 1, 1, "", "transform_observation_spec"], [174, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "transform_input_spec"], [178, 1, 1, "", "transform_observation_spec"], [178, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "to"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[183, 3, 1, "", "container"], [183, 1, 1, "", "forward"], [183, 3, 1, "", "parent"], [183, 1, 1, "", "to"], [183, 1, 1, "", "transform_done_spec"], [183, 1, 1, "", "transform_env_batch_size"], [183, 1, 1, "", "transform_env_device"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"], [183, 1, 1, "", "transform_output_spec"], [183, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[184, 1, 1, "", "add_truncated_keys"], [184, 1, 1, "", "append_transform"], [184, 3, 1, "", "batch_locked"], [184, 3, 1, "", "batch_size"], [184, 1, 1, "", "empty_cache"], [184, 1, 1, "", "eval"], [184, 3, 1, "", "input_spec"], [184, 1, 1, "", "insert_transform"], [184, 1, 1, "", "load_state_dict"], [184, 3, 1, "", "output_spec"], [184, 1, 1, "", "set_missing_tolerance"], [184, 1, 1, "", "set_seed"], [184, 1, 1, "", "state_dict"], [184, 1, 1, "", "to"], [184, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_observation_spec"], [185, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "make_noload_model"], [186, 1, 1, "", "to"], [186, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[188, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[190, 1, 1, "", "build_td_for_shared_vecnorm"], [190, 1, 1, "", "forward"], [190, 1, 1, "", "freeze"], [190, 1, 1, "", "frozen_copy"], [190, 1, 1, "", "get_extra_state"], [190, 3, 1, "", "loc"], [190, 3, 1, "", "scale"], [190, 1, 1, "", "set_extra_state"], [190, 3, 1, "", "standard_normal"], [190, 1, 1, "", "to_observation_norm"], [190, 1, 1, "", "transform_observation_spec"], [190, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[192, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[192, 1, 1, "", "add_module"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "children"], [192, 1, 1, "", "compile"], [192, 3, 1, "", "container"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 1, 1, "", "double"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 1, 1, "", "ipu"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "modules"], [192, 3, 1, "", "n_steps"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 1, 1, "", "parameters"], [192, 3, 1, "", "parent"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_submodule"], [192, 1, 1, "", "share_memory"], [192, 1, 1, "", "state_dict"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "transform_done_spec"], [192, 1, 1, "", "transform_env_batch_size"], [192, 1, 1, "", "transform_env_device"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "transform_output_spec"], [192, 1, 1, "", "transform_reward_spec"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[193, 2, 1, "", "RandomPolicy"], [194, 2, 1, "", "check_env_specs"], [195, 2, 1, "", "exploration_mode"], [196, 2, 1, "", "exploration_type"], [197, 2, 1, "", "get_available_libraries"], [198, 2, 1, "", "make_composite_from_td"], [199, 2, 1, "", "set_exploration_mode"], [200, 2, 1, "", "set_exploration_type"], [201, 2, 1, "", "step_mdp"], [202, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[203, 0, 1, "", "CEMPlanner"], [204, 0, 1, "", "Conv3dNet"], [205, 0, 1, "", "ConvNet"], [206, 0, 1, "", "DTActor"], [207, 0, 1, "", "DdpgCnnActor"], [208, 0, 1, "", "DdpgCnnQNet"], [209, 0, 1, "", "DdpgMlpActor"], [210, 0, 1, "", "DdpgMlpQNet"], [211, 0, 1, "", "DecisionTransformer"], [212, 0, 1, "", "Delta"], [213, 0, 1, "", "DistributionalDQNnet"], [214, 0, 1, "", "DistributionalQValueHook"], [215, 0, 1, "", "DreamerActor"], [216, 0, 1, "", "DuelingCnnDQNet"], [217, 0, 1, "", "GRU"], [218, 0, 1, "", "GRUCell"], [219, 0, 1, "", "GRUModule"], [220, 0, 1, "", "IndependentNormal"], [221, 0, 1, "", "LSTM"], [222, 0, 1, "", "LSTMCell"], [223, 0, 1, "", "LSTMModule"], [224, 0, 1, "", "MLP"], [225, 0, 1, "", "MPCPlannerBase"], [226, 0, 1, "", "MPPIPlanner"], [227, 0, 1, "", "MaskedCategorical"], [228, 0, 1, "", "MaskedOneHotCategorical"], [229, 0, 1, "", "MultiAgentConvNet"], [230, 0, 1, "", "MultiAgentMLP"], [231, 0, 1, "", "NoisyLazyLinear"], [232, 0, 1, "", "NoisyLinear"], [233, 0, 1, "", "NormalParamWrapper"], [234, 0, 1, "", "ObsDecoder"], [235, 0, 1, "", "ObsEncoder"], [236, 0, 1, "", "OneHotCategorical"], [237, 0, 1, "", "OnlineDTActor"], [238, 0, 1, "", "QMixer"], [239, 0, 1, "", "QValueHook"], [240, 0, 1, "", "RSSMPosterior"], [241, 0, 1, "", "RSSMPrior"], [242, 0, 1, "", "Squeeze2dLayer"], [243, 0, 1, "", "SqueezeLayer"], [244, 0, 1, "", "TanhDelta"], [245, 0, 1, "", "TanhNormal"], [246, 0, 1, "", "TruncatedNormal"], [247, 0, 1, "", "VDNMixer"], [248, 0, 1, "", "VmapModule"], [249, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[203, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[204, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[205, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[206, 1, 1, "", "default_config"], [206, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[207, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[208, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[209, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[210, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[211, 0, 1, "", "DTConfig"], [211, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[212, 1, 1, "", "log_prob"], [212, 3, 1, "", "mean"], [212, 3, 1, "", "mode"], [212, 1, 1, "", "rsample"], [212, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[213, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[215, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[216, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[217, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[218, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[219, 1, 1, "", "forward"], [219, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[220, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[221, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[222, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[223, 1, 1, "", "forward"], [223, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.MLP": [[224, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[226, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[227, 1, 1, "", "log_prob"], [227, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[228, 1, 1, "", "log_prob"], [228, 1, 1, "", "rsample"], [228, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[231, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[233, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[234, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[235, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[236, 1, 1, "", "log_prob"], [236, 3, 1, "", "mode"], [236, 1, 1, "", "rsample"], [236, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[237, 1, 1, "", "default_config"], [237, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[238, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[240, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[241, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[243, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[244, 3, 1, "", "mean"], [244, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[245, 1, 1, "", "get_mode"], [245, 3, 1, "", "mean"], [245, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[246, 1, 1, "", "log_prob"], [246, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[247, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[248, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[250, 0, 1, "", "Actor"], [251, 0, 1, "", "ActorCriticOperator"], [252, 0, 1, "", "ActorCriticWrapper"], [253, 0, 1, "", "ActorValueOperator"], [254, 0, 1, "", "AdditiveGaussianModule"], [255, 0, 1, "", "AdditiveGaussianWrapper"], [256, 0, 1, "", "DecisionTransformerInferenceWrapper"], [257, 0, 1, "", "DistributionalQValueActor"], [258, 0, 1, "", "DistributionalQValueModule"], [259, 0, 1, "", "EGreedyModule"], [260, 0, 1, "", "EGreedyWrapper"], [261, 0, 1, "", "LMHeadActorValueOperator"], [262, 0, 1, "", "MultiStepActorWrapper"], [263, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [264, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [265, 0, 1, "", "ProbabilisticActor"], [266, 0, 1, "", "QValueActor"], [267, 0, 1, "", "QValueModule"], [268, 0, 1, "", "SafeModule"], [269, 0, 1, "", "SafeProbabilisticModule"], [270, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [271, 0, 1, "", "SafeSequential"], [272, 0, 1, "", "TanhModule"], [273, 0, 1, "", "ValueOperator"], [274, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[251, 1, 1, "", "get_critic_operator"], [251, 1, 1, "", "get_policy_head"], [251, 1, 1, "", "get_value_head"], [251, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[252, 1, 1, "", "get_policy_head"], [252, 1, 1, "", "get_policy_operator"], [252, 1, 1, "", "get_value_head"], [252, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[253, 1, 1, "", "get_policy_head"], [253, 1, 1, "", "get_policy_operator"], [253, 1, 1, "", "get_value_head"], [253, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianModule": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "mask_context"], [256, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[258, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[262, 1, 1, "", "forward"], [262, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[267, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[268, 1, 1, "", "random"], [268, 1, 1, "", "random_sample"], [268, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[269, 1, 1, "", "random"], [269, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[272, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[274, 1, 1, "", "get_reward_operator"], [274, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[275, 0, 1, "", "biased_softplus"], [276, 0, 1, "", "get_primers_from_module"], [277, 0, 1, "", "inv_softplus"], [278, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[275, 1, 1, "", "forward"]], "torchrl.objectives": [[279, 0, 1, "", "A2CLoss"], [280, 0, 1, "", "CQLLoss"], [281, 0, 1, "", "ClipPPOLoss"], [282, 0, 1, "", "DDPGLoss"], [283, 0, 1, "", "DQNLoss"], [284, 0, 1, "", "DTLoss"], [285, 0, 1, "", "DiscreteCQLLoss"], [286, 0, 1, "", "DiscreteIQLLoss"], [287, 0, 1, "", "DiscreteSACLoss"], [288, 0, 1, "", "DistributionalDQNLoss"], [289, 0, 1, "", "DreamerActorLoss"], [290, 0, 1, "", "DreamerModelLoss"], [291, 0, 1, "", "DreamerValueLoss"], [292, 0, 1, "", "HardUpdate"], [293, 0, 1, "", "IQLLoss"], [294, 0, 1, "", "KLPENPPOLoss"], [295, 0, 1, "", "LossModule"], [296, 0, 1, "", "OnlineDTLoss"], [297, 0, 1, "", "PPOLoss"], [298, 0, 1, "", "REDQLoss"], [299, 0, 1, "", "ReinforceLoss"], [300, 0, 1, "", "SACLoss"], [301, 0, 1, "", "SoftUpdate"], [302, 0, 1, "", "TD3BCLoss"], [303, 0, 1, "", "TD3Loss"], [304, 0, 1, "", "ValueEstimators"], [305, 0, 1, "", "default_value_kwargs"], [306, 0, 1, "", "distance_loss"], [307, 0, 1, "", "hold_out_net"], [308, 0, 1, "", "hold_out_params"], [310, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[281, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[284, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[286, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[290, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[291, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "loss_value_diff"], [293, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[294, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[295, 1, 1, "", "convert_to_functional"], [295, 1, 1, "", "forward"], [295, 1, 1, "", "make_value_estimator"], [295, 1, 1, "", "named_parameters"], [295, 1, 1, "", "parameters"], [295, 1, 1, "", "set_keys"], [295, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[296, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[298, 1, 1, "", "forward"], [298, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[299, 1, 1, "", "forward"], [299, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[300, 1, 1, "", "forward"], [300, 1, 1, "", "load_state_dict"], [300, 1, 1, "", "make_value_estimator"], [300, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[302, 1, 1, "", "actor_loss"], [302, 1, 1, "", "forward"], [302, 1, 1, "", "make_value_estimator"], [302, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[303, 1, 1, "", "forward"], [303, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[309, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[311, 0, 1, "", "GAE"], [312, 0, 1, "", "TD0Estimator"], [313, 0, 1, "", "TD1Estimator"], [314, 0, 1, "", "TDLambdaEstimator"], [315, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[311, 1, 1, "", "forward"], [311, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[312, 1, 1, "", "forward"], [312, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[314, 1, 1, "", "forward"], [314, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "set_keys"], [315, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[316, 0, 1, "", "generalized_advantage_estimate"], [317, 0, 1, "", "reward2go"], [318, 0, 1, "", "td0_advantage_estimate"], [319, 0, 1, "", "td0_return_estimate"], [320, 0, 1, "", "td1_advantage_estimate"], [321, 0, 1, "", "td1_return_estimate"], [322, 0, 1, "", "td_lambda_advantage_estimate"], [323, 0, 1, "", "td_lambda_return_estimate"], [324, 0, 1, "", "vec_generalized_advantage_estimate"], [325, 0, 1, "", "vec_td1_advantage_estimate"], [326, 0, 1, "", "vec_td1_return_estimate"], [327, 0, 1, "", "vec_td_lambda_advantage_estimate"], [328, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[329, 2, 1, "", "PixelRenderTransform"], [330, 2, 1, "", "TensorDictRecorder"], [331, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[332, 2, 1, "", "Logger"], [334, 2, 1, "", "generate_exp_name"], [335, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[333, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[336, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[337, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[338, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[339, 0, 1, "", "BatchSubSampler"], [340, 0, 1, "", "ClearCudaCache"], [341, 0, 1, "", "CountFramesLog"], [342, 0, 1, "", "LogReward"], [343, 0, 1, "", "OptimizerHook"], [344, 0, 1, "", "Recorder"], [345, 0, 1, "", "ReplayBufferTrainer"], [346, 0, 1, "", "RewardNormalizer"], [347, 0, 1, "", "SelectKeys"], [348, 0, 1, "", "Trainer"], [349, 0, 1, "", "TrainerHookBase"], [350, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[339, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[340, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[341, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[342, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[343, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[344, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[345, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[346, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[347, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[349, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[350, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[351, 2, 1, "", "correct_for_frame_skip"], [352, 2, 1, "", "get_stats_random_rollout"], [353, 2, 1, "", "make_collector_offpolicy"], [354, 2, 1, "", "make_collector_onpolicy"], [355, 2, 1, "", "make_dqn_loss"], [356, 2, 1, "", "make_replay_buffer"], [357, 2, 1, "", "make_target_updater"], [358, 2, 1, "", "make_trainer"], [359, 2, 1, "", "parallel_env_constructor"], [360, 2, 1, "", "sync_async_collector"], [361, 2, 1, "", "sync_sync_collector"], [362, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 366, 367, 368, 369, 371, 372, 373, 376, 383, 384, 385, 389, 390], "instal": [0, 6, 7, 389], "get": [0, 375, 376, 377, 378, 379, 380], "start": [0, 375, 376, 377, 378, 379, 380], "tutori": [0, 373, 383, 384], "basic": [0, 387], "intermedi": [0, 8], "advanc": 0, "refer": [0, 364], "knowledg": [0, 365], "base": [0, 2, 7, 365], "indic": 0, "tabl": 0, "collector": [1, 371, 372, 373, 374, 378, 380, 383, 384, 389], "packag": [1, 2, 3, 366, 367, 368, 369], "batch": [1, 371, 385, 387], "size": [1, 371, 387], "replai": [1, 2, 371, 372, 373, 374, 378, 380, 383, 384, 387, 389], "buffer": [1, 2, 371, 372, 373, 374, 378, 380, 383, 384, 387, 389], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 371, 372, 373, 378, 380, 383, 384, 389], "distribut": [1, 366], "helper": [1, 3], "function": [1, 4, 367, 372, 373, 377, 383, 384, 389], "compos": [2, 148], "support": 2, "type": 2, "choos": 2, "storag": [2, 89, 371, 378, 387], "sampl": [2, 387], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 372, 387], "trajectori": [2, 387], "checkpoint": [2, 368], "episod": [2, 4], "format": 2, "ted": [2, 375], "The": [2, 371], "rational": 2, "behind": 2, "structur": [2, 387], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 366, 387, 389], "special": [2, 376, 389], "case": 2, "footnot": 2, "multi": [2, 3, 366, 367, 382, 383, 384], "agent": [2, 3, 4, 366, 367, 383, 384], "present": 2, "polici": [2, 4, 371, 373, 374, 376, 380, 382, 383, 384, 385], "rnn": 2, "transform": [2, 3, 183, 371, 373, 375, 383, 384, 385, 387, 389, 390], "step": [2, 371, 373, 375, 378, 383, 384, 387, 390], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 53], "reinforc": [2, 367, 373, 383, 384], "learn": [2, 4, 373, 383, 384], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 366, 367, 368, 383], "env": [3, 385, 389, 390], "vector": [3, 389], "environ": [3, 4, 6, 7, 371, 372, 373, 374, 375, 380, 382, 383, 384, 385, 389, 390], "auto": 3, "reset": [3, 385, 390], "dynam": [3, 4, 387], "spec": [3, 385, 390], "clone": [3, 7], "mask": 3, "action": [3, 4, 374, 385], "record": [3, 344, 368, 371, 379], "video": [3, 11, 379], "domain": [3, 366], "specif": [3, 366, 382], "librari": [3, 389], "thing": [4, 371, 385], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 375, 377, 389], "gener": [4, 11, 366], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 371, 380, 385], "algorithm": [4, 366], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 371, 372, 377, 380], "return": [4, 367], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 389], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 382], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 371, 372, 373], "standard": 4, "explor": [4, 366, 371, 372, 376], "valu": [4, 366, 367, 371, 373, 374, 376], "loss": [4, 371, 372, 373, 374, 380, 383, 384], "earli": 4, "train": [4, 8, 367, 371, 373, 374, 377, 380, 383, 384, 385], "roughli": 4, "uniformli": 4, "random": [4, 383, 384], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 372], "increas": 4, "an": [4, 373, 374, 375, 385], "can": 4, "low": 4, "forward": [4, 371], "model": [4, 366, 371, 372, 374, 377, 386, 389], "also": 4, "us": [4, 6, 9, 374, 386, 387, 389], "offlin": 4, "observ": [4, 371], "space": 4, "effect": [4, 385], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 390], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 371], "render": [7, 11, 380, 383, 384, 390], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 371], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 385], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "custom": [11, 385, 387], "exampl": [11, 372, 387], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binarydiscretetensorspec": 25, "boundedtensorspec": 26, "compositespec": 27, "constantklcontrol": 28, "discretetensorspec": 29, "flat2t": 30, "h5combin": 31, "h5split": 32, "lazystackedcompositespec": 33, "lazystackedtensorspec": 34, "multidiscretetensorspec": 35, "multionehotdiscretetensorspec": 36, "multistep": 37, "nested2t": 38, "nontensorspec": 39, "onehotdiscretetensorspec": 40, "pairwisedataset": 41, "prioritizedreplaybuff": 42, "promptdata": 43, "prompttensordicttoken": 44, "replaybuff": 45, "rewarddata": 46, "rolloutfrommodel": 47, "ted2flat": 48, "ted2nest": 49, "tensordictprioritizedreplaybuff": 50, "tensordictreplaybuff": 51, "tensordicttoken": 52, "tokenizeddatasetload": 54, "unboundedcontinuoustensorspec": 55, "unboundeddiscretetensorspec": 56, "check_no_exclusive_kei": 57, "consolidate_spec": 58, "contains_lazy_spec": 59, "create_infinite_iter": 60, "ataridqnexperiencereplai": 61, "basedatasetexperiencereplai": 62, "d4rlexperiencereplai": 63, "gendgrlexperiencereplai": 64, "minariexperiencereplai": 65, "openmlexperiencereplai": 66, "openxexperiencereplai": 67, "robosetexperiencereplai": 68, "vd4rlexperiencereplai": 69, "get_dataload": 70, "flatstoragecheckpoint": 71, "h5storagecheckpoint": 72, "immutabledatasetwrit": 73, "lazymemmapstorag": 74, "lazytensorstorag": 75, "liststorag": 76, "liststoragecheckpoint": 77, "nestedstoragecheckpoint": 78, "prioritizedsampl": 79, "prioritizedslicesampl": 80, "randomsampl": 81, "replaybufferensembl": 82, "roundrobinwrit": 83, "sampler": 84, "samplerensembl": 85, "samplerwithoutreplac": 86, "slicesampl": 87, "slicesamplerwithoutreplac": 88, "storagecheckpointerbas": 90, "storageensembl": 91, "storageensemblecheckpoint": 92, "tensordictmaxvaluewrit": 93, "tensordictroundrobinwrit": 94, "tensorstorag": 95, "tensorstoragecheckpoint": 96, "writer": 97, "writerensembl": 98, "braxenv": 99, "braxwrapp": 100, "dmcontrolenv": 101, "dmcontrolwrapp": 102, "envbas": [103, 385], "envcreat": 104, "envmetadata": 105, "gymenv": 106, "gymlikeenv": 107, "gymwrapp": 108, "habitatenv": 109, "isaacgymenv": 110, "isaacgymwrapp": 111, "jumanjienv": 112, "jumanjiwrapp": 113, "mogymenv": 114, "mogymwrapp": 115, "marlgroupmaptyp": 116, "meltingpotenv": 117, "meltingpotwrapp": 118, "modelbasedenvbas": 119, "multithreadedenv": 120, "multithreadedenvwrapp": 121, "openmlenv": 122, "parallelenv": 123, "pettingzooenv": 124, "pettingzoowrapp": 125, "robohiveenv": 126, "smacv2env": 127, "smacv2wrapp": 128, "serialenv": 129, "vmasenv": 130, "vmaswrapp": 131, "check_marl_group": 132, "gym_backend": 133, "dreamerdecod": 134, "dreamerenv": 135, "set_gym_backend": 136, "actiondiscret": 137, "actionmask": 138, "autoresetenv": 139, "autoresettransform": 140, "batchsizetransform": 141, "binarizereward": 142, "burnintransform": 143, "catfram": [144, 387], "cattensor": 145, "centercrop": 146, "cliptransform": 147, "dtypecasttransform": 149, "devicecasttransform": 150, "discreteactionproject": 151, "doubletofloat": 152, "endoflifetransform": 153, "excludetransform": 154, "finitetensordictcheck": 155, "flattenobserv": 156, "frameskiptransform": 157, "grayscal": 158, "inittrack": 159, "klrewardtransform": 160, "noopresetenv": 161, "observationnorm": 162, "observationtransform": 163, "permutetransform": 164, "pinmemorytransform": 165, "r3mtransform": 166, "randomcroptensordict": 167, "removeemptyspec": 168, "renametransform": 169, "resiz": 170, "reward2gotransform": 171, "rewardclip": 172, "rewardsc": 173, "rewardsum": 174, "selecttransform": 175, "signtransform": 176, "squeezetransform": 177, "stepcount": 178, "targetreturn": 179, "tensordictprim": 180, "timemaxpool": 181, "totensorimag": 182, "transformedenv": 184, "unsqueezetransform": 185, "vc1transform": 186, "viprewardtransform": 187, "viptransform": 188, "vecgymenvtransform": 189, "vecnorm": [190, 390], "gsdenois": 191, "multisteptransform": 192, "randompolici": 193, "check_env_spec": 194, "exploration_mod": 195, "exploration_typ": 196, "get_available_librari": 197, "make_composite_from_td": 198, "set_exploration_mod": 199, "set_exploration_typ": 200, "step_mdp": 201, "terminated_or_trunc": 202, "cemplann": 203, "conv3dnet": 204, "convnet": 205, "dtactor": 206, "ddpgcnnactor": 207, "ddpgcnnqnet": 208, "ddpgmlpactor": 209, "ddpgmlpqnet": 210, "decisiontransform": 211, "delta": 212, "distributionaldqnnet": 213, "distributionalqvaluehook": 214, "dreameractor": 215, "duelingcnndqnet": 216, "gru": 217, "grucel": 218, "grumodul": 219, "independentnorm": 220, "lstm": [221, 374], "lstmcell": 222, "lstmmodul": 223, "mlp": [224, 374], "mpcplannerbas": 225, "mppiplann": 226, "maskedcategor": 227, "maskedonehotcategor": 228, "multiagentconvnet": 229, "multiagentmlp": 230, "noisylazylinear": 231, "noisylinear": 232, "normalparamwrapp": 233, "obsdecod": 234, "obsencod": 235, "onehotcategor": 236, "onlinedtactor": 237, "qmixer": [238, 367], "qvaluehook": 239, "rssmposterior": 240, "rssmprior": 241, "squeeze2dlay": 242, "squeezelay": 243, "tanhdelta": 244, "tanhnorm": 245, "truncatednorm": 246, "vdnmixer": 247, "vmapmodul": 248, "reset_nois": 249, "actor": [250, 366, 371, 376], "actorcriticoper": 251, "actorcriticwrapp": 252, "actorvalueoper": 253, "additivegaussianmodul": 254, "additivegaussianwrapp": 255, "decisiontransformerinferencewrapp": 256, "distributionalqvalueactor": 257, "distributionalqvaluemodul": 258, "egreedymodul": 259, "egreedywrapp": 260, "lmheadactorvalueoper": 261, "multistepactorwrapp": 262, "ornsteinuhlenbeckprocessmodul": 263, "ornsteinuhlenbeckprocesswrapp": 264, "probabilisticactor": 265, "qvalueactor": 266, "qvaluemodul": 267, "safemodul": [268, 366], "safeprobabilisticmodul": 269, "safeprobabilistictensordictsequenti": 270, "safesequenti": 271, "tanhmodul": 272, "valueoper": 273, "worldmodelwrapp": 274, "biased_softplu": 275, "get_primers_from_modul": 276, "inv_softplu": 277, "map": [278, 383], "a2closs": 279, "cqlloss": 280, "clipppoloss": 281, "ddpgloss": 282, "dqnloss": 283, "dtloss": 284, "discretecqlloss": 285, "discreteiqlloss": 286, "discretesacloss": 287, "distributionaldqnloss": 288, "dreameractorloss": 289, "dreamermodelloss": 290, "dreamervalueloss": 291, "hardupd": 292, "iqlloss": 293, "klpenppoloss": 294, "lossmodul": [295, 371, 377], "onlinedtloss": 296, "ppoloss": 297, "redqloss": 298, "reinforceloss": 299, "sacloss": 300, "softupd": 301, "td3bcloss": 302, "td3loss": 303, "valueestim": 304, "default_value_kwarg": 305, "distance_loss": 306, "hold_out_net": 307, "hold_out_param": 308, "qmixerloss": 309, "next_state_valu": 310, "gae": 311, "td0estim": 312, "td1estim": 313, "tdlambdaestim": 314, "valueestimatorbas": 315, "generalized_advantage_estim": 316, "reward2go": 317, "td0_advantage_estim": 318, "td0_return_estim": 319, "td1_advantage_estim": 320, "td1_return_estim": 321, "td_lambda_advantage_estim": 322, "td_lambda_return_estim": 323, "vec_generalized_advantage_estim": 324, "vec_td1_advantage_estim": 325, "vec_td1_return_estim": 326, "vec_td_lambda_advantage_estim": 327, "vec_td_lambda_return_estim": 328, "pixelrendertransform": 329, "tensordictrecord": 330, "videorecord": 331, "logger": [332, 368, 379, 380], "csvlogger": 333, "generate_exp_nam": 334, "get_logg": 335, "mlflowlogg": 336, "tensorboardlogg": 337, "wandblogg": 338, "batchsubsampl": 339, "clearcudacach": 340, "countframeslog": 341, "logreward": 342, "optimizerhook": 343, "replaybuffertrain": 345, "rewardnorm": 346, "selectkei": 347, "trainer": [348, 368, 372], "trainerhookbas": 349, "updateweight": 350, "correct_for_frame_skip": 351, "get_stats_random_rollout": 352, "make_collector_offpolici": 353, "make_collector_onpolici": 354, "make_dqn_loss": 355, "make_replay_buff": 356, "make_target_updat": 357, "make_train": 358, "parallel_env_constructor": 359, "sync_async_collector": 360, "sync_sync_collector": 361, "transformed_env_constructor": 362, "readm": [363, 381], "tuto": [363, 381], "api": 364, "contribut": [365, 389], "content": 365, "modul": [366, 371, 374, 376, 380, 389], "tensordictmodul": [366, 376, 389], "wrapper": [366, 376], "probabilist": [366, 376], "q": [366, 372, 374, 376], "oper": 366, "join": 366, "hook": [366, 368, 372], "regular": 366, "planner": 366, "object": [367, 371, 377, 389], "dqn": [367, 372, 374], "ddpg": [367, 371, 383], "sac": 367, "redq": 367, "crossq": 367, "iql": 367, "cql": 367, "dt": 367, "td3": 367, "bc": 367, "ppo": [367, 373, 384], "a2c": 367, "dreamer": 367, "builder": 368, "_util": 369, "comput": [370, 372, 385, 388], "time": [370, 371, 388], "code": [371, 385], "overview": [371, 374], "setup": [371, 374], "__init__": 371, "method": 371, "estim": 371, "put": 371, "togeth": [371, 385], "call": 371, "parallel": [371, 382, 390], "execut": [371, 382, 385], "stat": 371, "build": [371, 372, 380, 387], "evalu": 371, "construct": 371, "target": [371, 372, 377], "network": [371, 372, 373, 374, 376, 383, 384], "updat": 371, "experi": [371, 385], "result": [371, 373, 383, 384], "conclus": [371, 372, 373, 374, 383, 384, 385, 387], "next": [371, 373, 375, 378, 383, 384, 387], "A": [372, 387], "deep": 372, "collect": [372, 373, 378], "paramet": [372, 373, 377], "hyperparamet": [372, 373, 383, 384], "regist": 372, "possibl": 372, "improv": 372, "defin": [373, 383, 384], "loop": [373, 374, 380, 383, 384, 385], "recurr": 374, "convolut": 374, "select": 374, "further": [374, 377], "read": 374, "creat": 375, "run": [375, 390], "rollout": [375, 382, 383, 384, 385, 390], "s": [376, 377], "output": 377, "consider": 377, "log": 379, "own": 380, "first": 380, "design": 380, "divers": 382, "competit": 383, "group": 383, "critic": [383, 384], "pendulum": 385, "write": 385, "_step": 385, "simul": 385, "_reset": 385, "metadata": 385, "_spec": 385, "shape": 385, "seed": [385, 390], "wrap": 385, "class": [385, 389], "test": 385, "our": 385, "simpl": 385, "pretrain": 386, "vanilla": 387, "integr": 387, "tensorclass": 387, "other": 387, "tensor": 387, "pytre": 387, "iter": 387, "over": 387, "fix": 387, "priorit": 387, "save": 387, "raw": 387, "imag": 387, "more": 387, "complex": 387, "introduct": 389, "config": 389, "sequenc": 389, "program": 389, "ensembl": 389, "meta": 389, "state": 389, "frame_skip": 390, "deepmind": 390, "control": 390, "devic": 390, "close": 390, "access": 390, "attribut": 390, "kwarg": 390}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})