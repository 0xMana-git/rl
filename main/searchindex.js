Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "BatchRenorm1d", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 92, 94, 95, 97, 99, 101, 103, 105, 106, 107, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 131, 132, 134, 137, 138, 139, 140, 141, 144, 145, 148, 153, 154, 156, 157, 159, 160, 162, 166, 168, 169, 172, 178, 179, 183, 184, 185, 186, 188, 196, 197, 198, 199, 200, 201, 203, 206, 207, 209, 211, 220, 222, 223, 225, 226, 227, 228, 235, 237, 239, 241, 242, 243, 247, 248, 250, 261, 262, 264, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 288, 289, 293, 297, 298, 299, 300, 301, 303, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 332, 333, 334, 335, 336, 350, 352, 355, 359, 364, 365, 369, 370, 373, 380, 381, 382, 383, 386, 387, 388, 392, 393, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 410, 411], "open": [0, 5, 7, 12, 48, 50, 53, 79, 393, 404, 405, 410], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "reinforc": [0, 3, 9, 76, 129, 130, 160, 225, 226, 227, 228, 232, 277, 282, 283, 298, 299, 301, 304, 305, 306, 308, 313, 314, 320, 321, 322, 323, 385, 391, 393, 396, 397, 402, 406, 409, 410], "learn": [0, 3, 7, 8, 9, 18, 43, 76, 77, 78, 80, 81, 115, 129, 130, 134, 137, 144, 160, 225, 226, 227, 228, 232, 244, 251, 277, 282, 283, 298, 299, 301, 304, 305, 306, 308, 312, 313, 314, 319, 320, 321, 322, 323, 385, 387, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 410, 411], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 73, 131, 196, 251, 269, 284, 292, 298, 300, 315, 316, 318, 320, 360, 384, 386, 387, 388, 389, 392, 393, 394, 399, 402, 404, 405, 407, 408, 411], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 51, 61, 113, 114, 123, 132, 214, 385, 386, 387, 390, 392, 393, 394, 396, 397, 399, 404, 405, 406, 411], "pytorch": [0, 1, 2, 3, 23, 77, 146, 147, 199, 211, 235, 239, 250, 251, 369, 384, 386, 387, 389, 392, 394, 395, 398, 402, 404, 405, 406, 407, 408, 410, 411], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 43, 61, 76, 115, 119, 123, 128, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 152, 207, 209, 239, 359, 386, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 98, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 163, 164, 166, 168, 169, 170, 178, 179, 183, 184, 188, 191, 195, 196, 197, 200, 201, 203, 205, 207, 209, 211, 219, 221, 222, 223, 225, 235, 237, 238, 239, 241, 243, 244, 247, 248, 249, 251, 252, 265, 267, 269, 274, 276, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 290, 291, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 350, 352, 359, 365, 381, 382, 383, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "directli": [0, 3, 4, 8, 23, 73, 94, 111, 112, 115, 118, 119, 131, 137, 138, 144, 145, 179, 188, 206, 316, 323, 383, 387, 393, 394, 396, 404, 405, 406, 408], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 156, 157, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 176, 177, 179, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 215, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 255, 256, 257, 258, 264, 265, 266, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 314, 315, 316, 318, 319, 320, 321, 323, 324, 326, 330, 331, 332, 333, 334, 335, 338, 350, 351, 352, 360, 366, 369, 372, 373, 377, 379, 380, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411], "pypi": [0, 2, 410], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 99, 115, 119, 122, 125, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 164, 183, 197, 199, 200, 201, 203, 205, 207, 208, 209, 222, 223, 235, 238, 239, 242, 248, 249, 250, 257, 265, 266, 270, 272, 284, 287, 288, 301, 312, 316, 323, 352, 359, 366, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 408, 411], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 105, 115, 118, 119, 120, 122, 123, 125, 129, 130, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 199, 203, 208, 209, 220, 232, 239, 242, 250, 252, 269, 273, 274, 276, 277, 287, 292, 298, 308, 316, 318, 332, 337, 345, 359, 364, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 411], "about": [0, 3, 5, 7, 9, 18, 19, 20, 41, 61, 77, 80, 81, 115, 137, 144, 388, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 410, 411], "instruct": [0, 6, 7, 10, 22, 75, 168, 170, 392, 393, 394, 395, 404, 405, 408], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 52, 59, 60, 94, 137, 144, 270, 271, 272, 387, 392, 396, 398, 399, 401, 403, 405], "section": [0, 2, 3, 4, 24, 235, 239, 393, 396, 401, 404, 405], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 43, 52, 64, 82, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 222, 223, 235, 238, 239, 242, 248, 265, 284, 287, 366, 392, 393, 394, 395, 396, 404, 406], "pip": [0, 10, 78, 396, 397, 398, 399, 400, 401, 405, 410, 411], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 39, 41, 43, 48, 49, 50, 52, 53, 59, 60, 63, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 88, 92, 93, 94, 97, 99, 100, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 153, 157, 159, 160, 161, 162, 163, 165, 166, 169, 173, 178, 179, 181, 183, 184, 187, 188, 191, 192, 196, 197, 198, 201, 203, 205, 206, 207, 209, 219, 222, 223, 229, 232, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 267, 269, 274, 277, 278, 279, 281, 283, 284, 285, 286, 291, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 356, 360, 366, 373, 379, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 133, 152, 235, 236, 237, 239, 240, 241, 245, 246, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 39, 40, 41, 42, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 99, 100, 105, 107, 115, 118, 119, 120, 125, 137, 138, 144, 145, 156, 157, 160, 161, 173, 179, 183, 184, 199, 201, 203, 223, 235, 237, 239, 241, 242, 248, 250, 254, 269, 275, 276, 277, 284, 285, 287, 288, 300, 310, 315, 316, 318, 351, 352, 368, 387, 391, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "low": [0, 3, 27, 30, 62, 64, 92, 115, 119, 137, 138, 144, 145, 153, 163, 168, 215, 263, 264, 265, 275, 277, 284, 291, 392, 393, 394, 395, 404, 405, 406, 410, 411], "high": [0, 3, 9, 27, 30, 48, 50, 53, 59, 64, 92, 115, 119, 137, 138, 144, 145, 153, 163, 168, 178, 215, 263, 264, 265, 275, 277, 284, 291, 332, 337, 345, 392, 393, 394, 395, 404, 405, 406, 408, 410, 411], "level": [0, 2, 3, 4, 22, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 118, 120, 160, 195, 315, 392, 393, 399, 410], "abstract": [0, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 45, 46, 55, 56, 62, 64, 65, 66, 67, 68, 73, 74, 78, 109, 115, 180, 243, 336, 361, 370, 389, 394, 406, 410], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 94, 97, 98, 100, 101, 103, 105, 107, 115, 116, 118, 119, 120, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 155, 156, 157, 159, 160, 163, 164, 166, 168, 169, 170, 172, 173, 177, 178, 181, 183, 188, 191, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 215, 218, 219, 221, 228, 230, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 248, 249, 251, 255, 257, 260, 275, 276, 278, 281, 283, 284, 285, 287, 288, 289, 290, 291, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 327, 330, 331, 332, 333, 334, 335, 336, 350, 359, 366, 379, 383, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 63, 64, 65, 66, 67, 68, 159, 168, 267, 316, 387, 410], "effici": [0, 1, 2, 4, 8, 235, 251, 301, 387, 392, 393, 394, 395, 398, 399, 401, 403, 404, 405, 407, 408, 410], "modular": [0, 73, 290, 408, 410], "document": [0, 2, 5, 7, 11, 18, 19, 21, 43, 79, 115, 119, 135, 136, 137, 138, 144, 145, 201, 209, 384, 393, 395, 396, 399, 402, 410], "properli": [0, 1, 64, 115, 119, 137, 138, 144, 145, 218, 237, 241, 394, 400, 404, 405, 406, 410], "test": [0, 3, 5, 111, 112, 124, 125, 129, 130, 203, 211, 237, 241, 365, 379, 394, 395, 410], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 91, 92, 94, 97, 99, 100, 101, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 156, 157, 159, 160, 164, 166, 169, 170, 171, 179, 181, 183, 188, 190, 191, 192, 195, 196, 197, 200, 201, 203, 205, 206, 207, 209, 211, 218, 219, 220, 221, 225, 226, 227, 228, 229, 232, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 251, 252, 258, 259, 260, 269, 270, 273, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 338, 350, 352, 354, 357, 358, 359, 360, 364, 379, 381, 382, 385, 387, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411], "code": [0, 3, 5, 7, 8, 14, 15, 79, 115, 119, 137, 138, 144, 145, 183, 201, 203, 220, 235, 236, 237, 239, 240, 241, 284, 290, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411], "aim": [0, 2, 3, 7, 55, 56, 183, 203, 205, 242, 372, 386, 387, 388, 392, 393, 410], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 78, 81, 82, 86, 87, 101, 103, 107, 108, 110, 111, 112, 118, 120, 124, 132, 134, 137, 139, 141, 157, 160, 170, 179, 197, 198, 200, 214, 232, 267, 276, 277, 284, 287, 290, 308, 316, 332, 333, 334, 335, 357, 385, 387, 389, 394, 395, 396, 397, 405, 406, 408, 410], "research": [0, 7, 9, 129, 130, 220, 410], "most": [0, 1, 2, 3, 7, 8, 14, 15, 43, 99, 100, 115, 119, 137, 138, 144, 145, 168, 206, 211, 392, 394, 396, 397, 398, 399, 400, 401, 406, 410, 411], "written": [0, 1, 2, 3, 12, 34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 92, 94, 99, 100, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 153, 160, 170, 177, 191, 195, 198, 206, 209, 218, 219, 269, 282, 283, 284, 287, 288, 292, 298, 300, 315, 318, 320, 331, 350, 351, 352, 387, 388, 389, 392, 395, 397, 403, 406, 410], "highli": [0, 2, 396, 410, 411], "wai": [0, 1, 2, 3, 4, 73, 77, 94, 105, 123, 183, 186, 205, 206, 237, 239, 241, 318, 332, 333, 334, 335, 387, 392, 393, 394, 396, 398, 399, 403, 404, 405, 406, 407, 408, 410, 411], "easili": [0, 1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 388, 392, 393, 394, 396, 397, 398, 401, 404, 405, 410, 411], "swap": [0, 1, 3, 118, 206, 394, 407, 410], "compon": [0, 1, 2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 232, 258, 276, 277, 286, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 364, 369, 392, 393, 394, 395, 397, 398, 401, 403, 404, 405, 406, 407, 410], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 51, 52, 54, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 103, 108, 115, 116, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 224, 225, 229, 232, 233, 237, 241, 256, 257, 258, 266, 275, 280, 281, 291, 294, 295, 297, 304, 317, 350, 352, 366, 383, 385, 391, 393, 395, 397, 399, 400, 401, 402, 407, 409], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 49, 51, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 110, 115, 116, 119, 123, 128, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 166, 169, 197, 201, 207, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 266, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 315, 352, 392, 393, 395, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "write": [0, 2, 3, 8, 23, 43, 48, 49, 50, 51, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 103, 110, 115, 119, 163, 181, 182, 191, 193, 195, 199, 219, 269, 287, 288, 290, 292, 301, 302, 303, 305, 306, 307, 314, 319, 321, 323, 324, 331, 336, 352, 387, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 98, 115, 119, 132, 137, 138, 142, 143, 144, 145, 157, 191, 200, 207, 209, 218, 219, 235, 237, 241, 282, 283, 287, 288, 293, 298, 299, 300, 303, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 359, 388, 392, 394, 395, 396, 398, 404, 405, 406, 410, 411], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 161, 164, 166, 167, 169, 179, 183, 188, 197, 200, 201, 203, 205, 209, 210, 245, 246, 267, 287, 298, 299, 301, 302, 314, 318, 319, 321, 323, 324, 338, 392, 394, 404, 405, 406, 408, 410, 411], "littl": [0, 1, 3, 61, 115, 119, 137, 138, 144, 145, 201, 298, 300, 315, 318, 320, 394, 395, 399, 408, 410, 411], "effort": [0, 3, 406, 408, 410], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 107, 108, 110, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 137, 138, 139, 140, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 179, 183, 184, 185, 186, 188, 191, 192, 193, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 330, 332, 333, 334, 335, 336, 350, 351, 359, 360, 362, 365, 366, 369, 371, 372, 373, 379, 383, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "repo": [0, 6, 75, 160, 198, 203, 386, 405, 410], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 99, 100, 113, 114, 118, 120, 121, 141, 274, 279, 283, 303, 306, 314, 330, 398, 410], "align": [0, 235, 239, 410], "exist": [0, 2, 3, 4, 12, 18, 21, 43, 48, 50, 53, 63, 115, 119, 137, 138, 144, 145, 161, 167, 201, 209, 301, 321, 373, 383, 404, 405, 410, 411], "ecosystem": [0, 399, 410], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 79, 86, 87, 94, 97, 99, 105, 107, 115, 116, 119, 123, 129, 130, 137, 138, 144, 145, 146, 147, 157, 160, 195, 196, 197, 198, 201, 209, 235, 237, 239, 241, 247, 249, 264, 273, 274, 277, 279, 281, 283, 288, 298, 301, 315, 316, 318, 320, 352, 392, 393, 394, 395, 396, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "dataset": [0, 36, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 92, 94, 97, 99, 100, 134, 207, 352, 385, 392, 393, 396, 407, 408, 410, 411], "pillar": [0, 410], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 156, 157, 159, 160, 161, 166, 167, 168, 169, 174, 178, 179, 183, 184, 185, 188, 191, 195, 196, 197, 198, 200, 201, 203, 206, 207, 211, 221, 237, 241, 243, 244, 274, 281, 283, 305, 309, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 360, 362, 365, 372, 373, 374, 375, 379, 380, 381, 382, 383, 385, 386, 387, 391, 397, 398, 399, 400, 402, 407, 408, 409], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 48, 50, 53, 54, 63, 115, 119, 131, 137, 138, 144, 145, 166, 183, 197, 203, 205, 208, 209, 222, 223, 224, 229, 231, 237, 241, 242, 243, 244, 248, 249, 256, 257, 266, 270, 271, 272, 280, 287, 293, 295, 298, 299, 300, 301, 303, 304, 305, 306, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 330, 369, 374, 375, 376, 385, 386, 388, 389, 391, 394, 396, 399, 402, 404, 405, 406, 408, 409, 411], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 154, 157, 159, 160, 166, 167, 169, 171, 177, 179, 185, 188, 195, 201, 206, 209, 210, 211, 215, 219, 221, 232, 237, 241, 244, 247, 248, 258, 267, 269, 276, 278, 279, 281, 282, 283, 284, 285, 287, 290, 291, 292, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 350, 352, 359, 360, 366, 369, 371, 374, 379, 381, 382, 383, 385, 387, 388, 389, 391, 395, 396, 397, 398, 402, 406, 407, 408, 409, 411], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 43, 52, 54, 111, 112, 115, 119, 124, 125, 130, 137, 138, 139, 140, 144, 145, 148, 160, 183, 188, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 229, 235, 239, 294, 295, 296, 297, 316, 379, 385, 390, 392, 394, 397, 398, 399, 405, 406, 408, 410, 411], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 43, 48, 50, 53, 56, 86, 87, 91, 92, 105, 107, 115, 116, 119, 137, 138, 144, 145, 146, 157, 159, 161, 164, 165, 173, 179, 183, 191, 197, 200, 201, 203, 205, 209, 211, 235, 237, 238, 239, 241, 244, 248, 252, 258, 264, 265, 275, 277, 281, 284, 286, 287, 288, 298, 300, 301, 302, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 331, 332, 333, 334, 335, 350, 360, 372, 382, 387, 393, 394, 397, 398, 400, 404, 405, 407, 408, 410, 411], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 105, 115, 116, 119, 137, 138, 144, 145, 146, 157, 159, 161, 164, 173, 179, 183, 191, 197, 200, 201, 203, 205, 209, 211, 235, 237, 238, 239, 240, 241, 244, 248, 264, 265, 275, 284, 287, 288, 301, 321, 331, 341, 342, 343, 344, 346, 347, 348, 349, 350, 382, 387, 393, 394, 397, 400, 404, 405, 406, 407, 408, 410, 411], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 43, 54, 57, 73, 79, 157, 160, 188, 195, 209, 210, 237, 241, 282, 283, 366, 369, 371, 374, 375, 379, 381, 382, 385, 388, 389, 408, 411], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 91, 92, 94, 95, 97, 99, 100, 101, 106, 109, 110, 115, 119, 131, 137, 138, 144, 145, 153, 164, 166, 169, 183, 197, 200, 201, 203, 205, 206, 207, 209, 218, 219, 221, 222, 223, 235, 236, 239, 240, 242, 244, 247, 248, 269, 276, 277, 284, 286, 287, 292, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 338, 356, 360, 372, 379, 380, 381, 382, 383, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411], "etc": [0, 2, 3, 7, 8, 12, 43, 62, 79, 115, 119, 137, 138, 144, 145, 177, 201, 209, 242, 248, 264, 393, 394, 399, 408, 410, 411], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 101, 115, 119, 137, 138, 139, 140, 144, 145, 153, 156, 160, 166, 169, 170, 177, 178, 179, 195, 200, 201, 207, 209, 211, 219, 222, 223, 242, 247, 248, 249, 267, 281, 289, 290, 298, 300, 315, 318, 320, 323, 327, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 360, 369, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "few": [0, 2, 8, 119, 352, 360, 394, 395, 397, 404, 405, 408, 410, 411], "depend": [0, 1, 2, 3, 4, 7, 8, 27, 48, 50, 64, 118, 120, 121, 141, 146, 147, 166, 169, 292, 318, 387, 392, 394, 395, 404, 405, 406, 410, 411], "possibl": [0, 2, 3, 4, 23, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 55, 76, 79, 81, 92, 99, 105, 115, 119, 137, 138, 144, 145, 153, 164, 183, 197, 200, 201, 203, 205, 209, 222, 223, 235, 236, 239, 240, 287, 350, 365, 369, 387, 392, 394, 395, 397, 399, 400, 404, 405, 406, 408, 410, 411], "standard": [0, 3, 179, 190, 207, 220, 221, 233, 244, 250, 251, 256, 273, 274, 275, 323, 324, 332, 333, 334, 335, 392, 393, 396, 397, 405, 408, 410], "numpi": [0, 3, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 120, 137, 138, 144, 145, 199, 369, 406, 408, 410, 411], "common": [0, 2, 3, 4, 62, 119, 124, 154, 270, 271, 272, 280, 298, 299, 300, 301, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 379, 386, 387, 389, 392, 394, 397, 400, 403, 404, 405, 406, 407, 410, 411], "openai": [0, 7, 24, 118, 120, 141, 394, 406, 410, 411], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 115, 116, 118, 119, 120, 121, 123, 129, 130, 132, 133, 137, 138, 141, 144, 145, 146, 147, 149, 152, 156, 160, 163, 170, 176, 177, 179, 181, 186, 188, 191, 197, 200, 206, 207, 209, 379, 386, 392, 393, 394, 395, 396, 400, 401, 406, 407, 408, 410], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 92, 94, 99, 100, 107, 113, 114, 115, 118, 119, 120, 121, 123, 125, 132, 133, 137, 138, 139, 140, 141, 144, 145, 153, 156, 160, 161, 163, 164, 166, 168, 169, 173, 179, 183, 184, 188, 195, 196, 197, 198, 200, 201, 203, 205, 207, 209, 239, 241, 247, 248, 269, 275, 276, 284, 285, 287, 288, 289, 290, 298, 300, 301, 302, 306, 307, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 332, 333, 334, 335, 336, 352, 359, 373, 388, 389, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 410, 411], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 103, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 264, 265, 267, 269, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 335, 336, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 357, 359, 360, 362, 363, 364, 365, 366, 367, 369, 373, 374, 375, 376, 378, 379, 381, 382, 383, 387, 395, 396, 399, 404, 405, 406, 408, 410], "On": [0, 3, 7, 18, 19, 20, 21, 30, 76, 236, 240, 387, 393, 404, 405], "end": [0, 2, 3, 14, 15, 17, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 98, 99, 100, 115, 119, 137, 138, 144, 145, 170, 181, 195, 196, 201, 209, 222, 223, 235, 236, 239, 240, 243, 281, 301, 321, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "come": [0, 1, 2, 3, 8, 43, 105, 115, 119, 128, 137, 138, 144, 145, 166, 169, 269, 270, 271, 272, 284, 292, 298, 300, 315, 318, 320, 352, 392, 393, 394, 395, 398, 399, 400, 401, 404, 405, 408, 410, 411], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 30, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 98, 101, 107, 115, 117, 119, 120, 129, 130, 131, 137, 138, 139, 140, 144, 145, 146, 147, 152, 154, 156, 157, 160, 161, 164, 166, 169, 176, 177, 183, 188, 195, 196, 197, 198, 200, 201, 203, 205, 207, 209, 211, 216, 217, 219, 235, 237, 239, 241, 243, 247, 248, 264, 274, 275, 287, 301, 307, 312, 316, 318, 321, 336, 360, 365, 366, 375, 383, 386, 387, 388, 390, 392, 393, 394, 395, 397, 398, 399, 403, 404, 405, 406, 407, 408, 410, 411], "re": [0, 2, 3, 8, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 115, 119, 137, 138, 144, 145, 209, 241, 245, 246, 249, 284, 288, 359, 389, 392, 394, 395, 396, 398, 403, 404, 406, 410, 411], "usabl": [0, 389, 395, 410], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 115, 116, 119, 120, 137, 138, 144, 145, 152, 156, 157, 166, 169, 201, 207, 209, 211, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 259, 260, 262, 265, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 379, 385, 387, 392, 395, 396, 397, 400, 403, 406, 408, 411], "cost": [0, 2, 29, 79, 298, 300, 315, 318, 320, 388, 392, 393, 404, 405, 406, 408], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 92, 94, 95, 97, 99, 100, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 218, 219, 221, 224, 225, 226, 227, 228, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 252, 255, 256, 257, 259, 260, 263, 264, 265, 266, 269, 270, 271, 272, 275, 281, 284, 286, 287, 288, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 327, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 356, 369, 372, 374, 379, 380, 381, 382, 383, 385, 387, 389, 392, 393, 394, 395, 397, 398, 400, 403, 404, 405, 406, 407, 408, 410, 411], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 49, 50, 53, 61, 63, 73, 76, 80, 81, 91, 92, 99, 115, 116, 119, 123, 128, 132, 137, 138, 139, 140, 144, 145, 159, 166, 169, 197, 199, 207, 209, 237, 241, 247, 248, 277, 282, 283, 286, 385, 389, 392, 393, 395, 396, 404, 405, 406, 407, 408, 410, 411], "good": [0, 1, 4, 9, 137, 392, 394, 395, 397, 405, 410, 411], "runtim": [0, 2, 3, 23, 43, 115, 119, 137, 138, 144, 145, 209, 406], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 148, 166, 169, 178, 201, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 300, 301, 310, 318, 321, 365, 369, 388, 392, 393, 394, 395, 396, 399, 401, 403, 404, 405, 406, 411], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 99, 100, 103, 110, 111, 112, 115, 118, 119, 120, 124, 125, 128, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 195, 197, 207, 209, 237, 241, 270, 271, 272, 282, 283, 301, 307, 312, 316, 323, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411], "read": [0, 2, 3, 7, 23, 30, 31, 34, 37, 49, 51, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 94, 101, 103, 107, 115, 118, 119, 120, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 181, 182, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 200, 203, 204, 206, 207, 209, 219, 255, 269, 270, 271, 272, 276, 281, 284, 287, 288, 290, 292, 293, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 332, 333, 334, 335, 336, 352, 365, 369, 387, 392, 393, 394, 396, 397, 403, 404, 405, 406, 407, 411], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 389, 392, 396, 399, 403, 407, 411], "beyond": [0, 115, 119, 137, 138, 144, 145], "api": [0, 2, 3, 5, 23, 62, 139, 140, 141, 183, 205, 207, 388, 389, 396, 397, 398, 399, 400, 404, 405, 406, 408, 410, 411], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 69, 71, 83, 84, 90, 99, 115, 116, 118, 119, 120, 131, 137, 138, 144, 145, 148, 160, 161, 172, 177, 184, 197, 199, 201, 209, 211, 237, 241, 269, 276, 277, 284, 285, 286, 287, 288, 301, 312, 323, 352, 384, 387, 388, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411], "paper": [0, 76, 79, 111, 112, 113, 114, 121, 124, 125, 129, 130, 132, 133, 141, 146, 147, 183, 203, 205, 235, 257, 266, 305, 313, 323, 392, 394, 404, 405], "releas": [0, 4, 7, 10, 43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321, 410], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 371, 379, 389, 392, 410], "so": [0, 2, 3, 4, 6, 7, 10, 11, 43, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 144, 145, 197, 207, 209, 289, 290, 392, 394, 395, 398, 401, 404, 405, 406, 411], "make": [0, 2, 3, 4, 7, 11, 43, 48, 49, 50, 52, 53, 54, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 97, 101, 103, 110, 115, 119, 120, 123, 125, 127, 133, 137, 138, 144, 145, 153, 171, 179, 183, 184, 188, 195, 203, 209, 211, 220, 235, 236, 237, 239, 240, 241, 247, 248, 250, 276, 288, 298, 300, 315, 318, 320, 332, 333, 334, 335, 350, 366, 375, 383, 387, 388, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "sure": [0, 3, 4, 7, 78, 101, 119, 123, 188, 276, 383, 387, 392, 394, 395, 398, 404, 405, 406, 408, 410, 411], "alwai": [0, 2, 3, 14, 15, 20, 27, 30, 31, 37, 43, 56, 62, 64, 73, 82, 83, 84, 90, 115, 119, 137, 138, 144, 145, 177, 178, 207, 209, 308, 316, 387, 388, 393, 394, 395, 404, 405, 406, 408], "enjoi": [0, 2, 3, 79, 399], "latest": [0, 2, 3, 10, 132, 135, 136, 139, 140, 366, 394, 404, 405, 406, 410], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 62, 63, 77, 92, 99, 100, 115, 119, 128, 137, 138, 139, 140, 142, 143, 144, 145, 157, 160, 173, 177, 181, 197, 198, 202, 207, 211, 220, 222, 223, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 250, 251, 288, 295, 298, 300, 315, 318, 320, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 383, 387, 392, 393, 394, 395, 397, 398, 399, 401, 406, 408, 411], "recent": [0, 7, 12, 206, 394, 411], "version": [0, 1, 2, 3, 6, 12, 26, 28, 31, 33, 37, 38, 40, 42, 43, 46, 47, 48, 50, 54, 65, 66, 67, 68, 76, 81, 99, 115, 118, 119, 120, 121, 132, 133, 137, 138, 139, 141, 144, 145, 146, 147, 206, 207, 209, 218, 220, 249, 272, 298, 300, 315, 316, 318, 320, 321, 332, 335, 386, 387, 388, 392, 394, 395, 396, 398, 401, 404, 405, 406, 407, 411], "although": [0, 1, 3, 8, 64, 115, 119, 137, 138, 144, 145, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 389, 392, 393, 399, 408], "core": [0, 3, 8, 389, 395, 397, 410], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 101, 103, 107, 115, 119, 137, 138, 144, 145, 207, 209, 399, 410], "backward": [0, 8, 43, 111, 112, 115, 119, 137, 138, 144, 145, 207, 209, 235, 236, 239, 240, 298, 299, 301, 302, 306, 307, 314, 318, 319, 320, 321, 323, 324, 392, 394, 395, 398, 399, 401, 404, 405, 406], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 43, 75, 94, 97, 99, 100, 101, 105, 115, 119, 121, 134, 137, 138, 144, 145, 160, 195, 203, 207, 209, 235, 236, 237, 239, 240, 241, 285, 298, 299, 301, 302, 303, 305, 306, 307, 314, 316, 318, 319, 320, 321, 323, 324, 327, 392, 395, 408, 410], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 47, 49, 50, 51, 52, 56, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 115, 116, 119, 124, 125, 128, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 156, 157, 159, 161, 164, 166, 167, 168, 169, 177, 179, 181, 183, 185, 188, 191, 195, 196, 197, 200, 201, 203, 205, 207, 209, 215, 219, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 252, 256, 264, 267, 275, 276, 277, 278, 279, 281, 282, 283, 287, 291, 292, 298, 299, 300, 301, 302, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 331, 332, 333, 334, 335, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 360, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 403, 404, 405, 406, 408, 409, 410, 411], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 107, 111, 112, 115, 118, 119, 121, 122, 124, 125, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 153, 154, 156, 158, 160, 161, 163, 164, 165, 167, 168, 177, 178, 179, 183, 188, 191, 193, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 209, 220, 221, 222, 223, 225, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 250, 251, 252, 255, 259, 260, 263, 264, 265, 267, 269, 273, 274, 275, 277, 278, 279, 282, 283, 286, 287, 290, 291, 294, 295, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 330, 331, 332, 333, 334, 335, 338, 339, 340, 360, 367, 379, 383, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 49, 52, 59, 60, 75, 77, 78, 79, 80, 81, 119, 137, 144, 183, 200, 205, 301, 304, 316, 388, 389, 392, 393, 394, 395, 397, 399, 408, 411], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 218, 219, 221, 231, 232, 237, 241, 243, 244, 247, 248, 257, 258, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 350, 351, 360, 364, 365, 366, 368, 369, 385, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 411], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 86, 177, 185, 270, 271, 272, 287, 306, 314, 323, 385, 392, 404, 406, 410], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 43, 48, 49, 50, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 94, 102, 108, 115, 119, 137, 138, 144, 145, 152, 183, 205, 209, 244, 354, 359, 369, 389, 393, 401, 404], "root": [0, 2, 3, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 137, 160, 198, 218, 237, 238, 241, 264, 265, 395, 396, 404, 405, 406, 407, 408, 411], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 49, 61, 73, 76, 77, 78, 79, 80, 81, 91, 92, 111, 112, 113, 114, 121, 123, 124, 125, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 146, 147, 160, 183, 203, 220, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 244, 245, 246, 251, 253, 254, 257, 259, 260, 266, 277, 282, 283, 298, 299, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 332, 337, 345, 384, 402, 407, 410], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 73, 76, 77, 79, 111, 112, 113, 114, 118, 121, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 157, 203, 220, 397, 401, 404, 405, 410], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 76, 79, 80, 111, 112, 113, 114, 121, 123, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 220, 407, 410], "setup": [0, 7, 111, 112, 123, 124, 125], "py": [0, 3, 24, 118, 120, 152, 257, 266, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411], "develop": [0, 3, 4, 7, 123, 392, 410], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 33, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 101, 105, 106, 107, 108, 109, 115, 117, 119, 121, 122, 137, 138, 141, 144, 145, 150, 153, 155, 156, 157, 159, 163, 168, 174, 177, 183, 184, 186, 193, 197, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 218, 221, 222, 223, 232, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 248, 249, 251, 252, 267, 273, 274, 275, 276, 277, 278, 281, 284, 285, 288, 290, 291, 294, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 330, 332, 333, 334, 335, 336, 338, 350, 353, 354, 357, 359, 362, 369, 371, 379, 388, 391, 392, 394, 397, 398, 399, 402, 406, 409, 411], "seri": [0, 2, 3, 7, 8, 85, 95, 105, 106, 109, 110, 144, 178, 200, 352, 387, 388, 392, 393, 394, 400, 401, 404, 405, 408, 411], "quick": [0, 73], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 54, 75, 81, 115, 119, 137, 138, 144, 145, 156, 159, 198, 200, 209, 220, 318, 386, 387, 388, 392, 393, 394, 395, 397, 401, 404, 405, 406, 408, 411], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 92, 94, 97, 98, 99, 100, 105, 107, 113, 114, 115, 116, 118, 119, 120, 121, 123, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 153, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 173, 177, 178, 179, 183, 184, 187, 188, 191, 192, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 218, 219, 222, 223, 235, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 267, 269, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 346, 347, 348, 349, 350, 356, 359, 364, 366, 369, 371, 373, 379, 383, 386, 388, 392, 393, 394, 395, 396, 398, 400, 401, 403, 404, 405, 406, 408, 410, 411], "hurri": [0, 396], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 62, 64, 65, 66, 67, 68, 75, 98, 99, 100, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 153, 156, 159, 173, 179, 184, 196, 198, 199, 222, 223, 235, 237, 239, 241, 242, 245, 246, 253, 261, 264, 267, 273, 274, 275, 278, 281, 288, 301, 332, 334, 335, 393, 394, 395, 396, 397, 404, 405, 406, 407, 408, 410, 411], "item": [0, 2, 8, 14, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 98, 105, 153, 172, 245, 246, 302, 303, 305, 360, 388, 389, 392, 394, 395, 398, 399, 404, 405, 406, 408], "navig": [0, 405], "previou": [0, 3, 4, 10, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 197, 209, 219, 235, 239, 260, 275, 394, 395, 396, 397, 401, 406, 411], "whenev": [0, 1, 2, 3, 23, 43, 49, 52, 59, 60, 73, 79, 91, 92, 99, 100, 113, 114, 118, 120, 121, 129, 130, 141, 146, 147, 152, 176, 201, 206, 316, 332, 333, 334, 335, 350, 371, 387, 400, 408], "want": [0, 2, 3, 6, 7, 8, 100, 179, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 387, 392, 393, 394, 395, 396, 398, 399, 400, 404, 405, 406, 407, 408, 410, 411], "ted": [0, 34, 44, 57, 58, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 385, 391, 402, 409], "s": [0, 1, 2, 3, 6, 7, 8, 11, 30, 43, 48, 49, 50, 52, 53, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 100, 105, 111, 112, 115, 119, 123, 124, 125, 129, 130, 132, 137, 138, 139, 140, 144, 145, 146, 147, 160, 164, 183, 195, 197, 199, 200, 201, 203, 205, 207, 209, 211, 222, 223, 237, 241, 246, 247, 248, 251, 257, 266, 270, 272, 273, 274, 277, 278, 281, 284, 287, 288, 291, 299, 301, 306, 312, 314, 316, 321, 323, 332, 333, 334, 335, 336, 350, 387, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 105, 111, 112, 115, 119, 128, 131, 134, 137, 138, 144, 145, 152, 159, 164, 168, 170, 177, 183, 184, 196, 197, 200, 201, 203, 205, 207, 208, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 328, 330, 332, 333, 334, 335, 336, 350, 369, 376, 379, 385, 388, 389, 391, 393, 394, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411], "optim": [0, 1, 2, 8, 43, 54, 111, 112, 115, 119, 137, 138, 144, 145, 201, 209, 221, 244, 250, 251, 264, 299, 301, 316, 317, 318, 321, 364, 365, 369, 379, 388, 389, 391, 394, 395, 396, 397, 399, 402, 404, 405, 406, 409], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 115, 119, 137, 138, 141, 144, 145, 157, 160, 179, 183, 205, 211, 281, 282, 283, 299, 302, 305, 307, 319, 321, 323, 324, 352, 360, 366, 369, 371, 372, 373, 379, 389, 391, 392, 395, 396, 397, 398, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411], "storag": [0, 1, 8, 34, 43, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 102, 103, 104, 105, 107, 108, 115, 117, 119, 137, 138, 144, 145, 159, 160, 166, 169, 188, 209, 385, 389, 391, 393, 394, 395, 396, 398, 401, 402, 404, 405, 407, 409], "log": [0, 3, 4, 8, 11, 54, 230, 231, 232, 245, 246, 255, 264, 265, 276, 277, 284, 288, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 324, 330, 359, 362, 363, 365, 369, 379, 387, 388, 389, 391, 392, 393, 394, 396, 397, 401, 402, 404, 405, 406, 409, 410], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 43, 115, 119, 123, 128, 137, 138, 139, 140, 144, 145, 207, 209, 383, 386, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 408, 409, 410], "own": [0, 1, 3, 14, 15, 17, 22, 43, 115, 119, 137, 138, 139, 140, 144, 145, 209, 352, 391, 393, 394, 396, 402, 404, 405, 406, 409], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 43, 48, 50, 53, 54, 63, 73, 76, 82, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 166, 174, 183, 196, 201, 203, 205, 209, 211, 220, 225, 227, 237, 241, 273, 274, 278, 279, 282, 283, 298, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 332, 369, 371, 379, 385, 389, 391, 393, 396, 399, 400, 402, 407, 408, 409, 411], "loop": [0, 8, 48, 50, 53, 115, 119, 137, 138, 144, 145, 218, 273, 274, 278, 279, 282, 283, 318, 369, 388, 389, 391, 392, 393, 396, 398, 399, 400, 402, 403, 408, 409], "ppo": [0, 4, 8, 284, 288, 300, 315, 318, 385, 387, 391, 392, 393, 397, 398, 402, 404, 409], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 105, 113, 114, 115, 116, 118, 119, 120, 132, 137, 138, 144, 145, 160, 163, 164, 171, 176, 177, 179, 186, 188, 193, 195, 197, 198, 200, 201, 207, 209, 237, 241, 379, 387, 391, 393, 394, 396, 397, 398, 402, 409, 410, 411], "introduct": [0, 388, 391, 396, 402, 404, 405, 409, 411], "multi": [0, 1, 7, 9, 43, 49, 52, 55, 56, 59, 60, 83, 84, 90, 115, 119, 129, 130, 137, 138, 142, 143, 144, 145, 201, 209, 235, 237, 239, 241, 242, 247, 248, 249, 281, 330, 332, 333, 334, 335, 385, 391, 392, 393, 394, 395, 396, 397, 402, 406, 409, 410], "agent": [0, 9, 55, 56, 128, 129, 130, 135, 136, 139, 140, 142, 143, 146, 147, 148, 195, 196, 245, 246, 247, 248, 249, 251, 257, 266, 330, 385, 391, 396, 402, 406, 409], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34, 43, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 237, 241, 243, 244, 281, 287, 316, 350, 351, 352, 373, 374, 375, 379, 381, 382, 383, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 99, 100, 105, 107, 111, 112, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 179, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 211, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 255, 256, 257, 258, 264, 265, 266, 267, 269, 273, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 345, 350, 352, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 379, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 411], "pretrain": [0, 391, 402, 409], "recurr": [0, 2, 159, 235, 236, 237, 239, 241, 260, 391, 393, 397, 402, 408, 409], "dqn": [0, 2, 73, 153, 170, 232, 276, 277, 298, 299, 301, 302, 303, 305, 307, 308, 309, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 330, 376, 385, 387, 391, 397, 398, 401, 402, 409], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 43, 57, 111, 112, 115, 119, 131, 137, 138, 144, 145, 168, 177, 196, 210, 216, 217, 232, 237, 241, 247, 248, 251, 258, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 291, 298, 299, 300, 301, 302, 306, 307, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 365, 371, 374, 375, 379, 381, 382, 387, 388, 389, 391, 393, 396, 398, 399, 402, 407, 408, 409, 410, 411], "replai": [0, 8, 16, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 106, 110, 159, 160, 168, 184, 188, 197, 209, 301, 302, 303, 305, 306, 307, 314, 319, 321, 323, 324, 366, 369, 377, 379, 385, 389, 391, 402, 406, 407, 409], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 115, 119, 131, 137, 138, 144, 145, 159, 160, 164, 168, 183, 184, 188, 197, 200, 201, 203, 205, 209, 287, 290, 301, 302, 303, 305, 306, 307, 314, 319, 321, 323, 324, 366, 369, 377, 379, 385, 389, 391, 400, 402, 406, 407, 409, 411], "competit": [0, 3, 129, 130, 391, 402, 405, 409], "ddpg": [0, 225, 226, 227, 228, 302, 313, 322, 385, 387, 391, 393, 398, 402, 405, 409], "task": [0, 2, 3, 9, 54, 55, 56, 63, 76, 79, 113, 114, 115, 119, 122, 129, 130, 137, 138, 139, 140, 141, 144, 145, 146, 147, 183, 195, 201, 203, 205, 306, 314, 391, 392, 393, 394, 395, 396, 397, 402, 404, 405, 406, 409, 410, 411], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 119, 135, 136, 137, 144, 146, 197, 229, 237, 241, 275, 298, 316, 318, 320, 352, 369, 385, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 408, 409], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 43, 45, 48, 50, 53, 62, 63, 86, 87, 88, 94, 97, 101, 103, 107, 110, 115, 119, 124, 137, 138, 144, 145, 153, 166, 169, 170, 179, 183, 200, 201, 203, 207, 209, 210, 237, 241, 244, 247, 248, 257, 266, 269, 270, 284, 287, 288, 289, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 373, 374, 375, 378, 379, 383, 385, 387, 389, 391, 393, 394, 395, 399, 401, 402, 404, 405, 406, 408, 409, 411], "loss": [0, 3, 8, 50, 170, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 332, 364, 369, 376, 379, 388, 389, 391, 396, 398, 399, 400, 402, 406, 408, 409, 410], "trainer": [0, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 391, 392, 402, 409], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 176, 177, 179, 181, 183, 185, 186, 187, 188, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 247, 248, 249, 252, 255, 256, 257, 258, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 295, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 330, 332, 333, 334, 335, 338, 350, 352, 360, 361, 362, 363, 364, 366, 367, 368, 371, 379, 387, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411], "packag": [0, 6, 7, 10, 152, 385, 386, 394, 411], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 43, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 93, 94, 98, 99, 100, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 132, 134, 135, 136, 137, 138, 144, 145, 146, 147, 157, 160, 164, 173, 179, 181, 184, 188, 197, 200, 201, 202, 206, 207, 209, 219, 220, 230, 235, 236, 237, 239, 240, 241, 245, 246, 247, 248, 249, 250, 255, 257, 263, 267, 281, 282, 283, 287, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 360, 363, 366, 367, 368, 369, 371, 381, 382, 383, 385, 387, 388, 389, 393, 394, 395, 396, 399, 401, 403, 404, 405, 407, 410, 411], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 98, 99, 100, 101, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 159, 161, 164, 165, 166, 169, 170, 171, 173, 181, 183, 185, 186, 188, 192, 194, 195, 197, 199, 200, 201, 202, 205, 207, 209, 215, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 252, 255, 256, 257, 258, 259, 260, 263, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 292, 295, 298, 299, 301, 302, 303, 305, 306, 307, 314, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 352, 360, 366, 385, 387, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 410, 411], "interoper": [0, 14, 15, 385], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 35, 41, 43, 48, 49, 50, 52, 53, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 115, 118, 119, 129, 130, 137, 138, 144, 145, 146, 147, 153, 160, 161, 183, 188, 201, 205, 209, 222, 223, 235, 236, 237, 239, 240, 241, 242, 248, 286, 290, 299, 300, 301, 303, 305, 307, 308, 314, 315, 318, 319, 321, 323, 324, 332, 333, 334, 335, 341, 342, 343, 344, 346, 347, 348, 349, 350, 383, 385, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408], "node": [0, 2, 18, 19, 20, 21, 22, 30, 31, 37, 48, 50, 53, 56, 81, 385, 399], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 52, 59, 60, 94, 139, 140, 177, 179, 221, 230, 231, 232, 233, 238, 244, 245, 246, 252, 255, 256, 259, 260, 263, 264, 265, 273, 274, 275, 276, 277, 284, 288, 289, 298, 299, 300, 301, 306, 307, 308, 314, 315, 318, 319, 320, 321, 323, 324, 385, 389, 393, 394, 397, 399, 404, 405, 406, 410, 411], "helper": [0, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 392, 393, 395, 404, 406], "compos": [0, 3, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 105, 106, 115, 119, 137, 138, 144, 145, 160, 187, 200, 201, 207, 209, 280, 281, 301, 310, 321, 352, 385, 392, 393, 394, 395, 399, 403, 405, 406, 408, 410, 411], "episod": [0, 3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 99, 100, 115, 119, 137, 138, 144, 145, 156, 188, 191, 196, 218, 221, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 385, 393, 396, 401, 404, 405, 408], "format": [0, 3, 34, 41, 42, 43, 44, 47, 57, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 97, 105, 115, 119, 137, 138, 139, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 352, 385, 392, 393, 396, 398, 400, 411], "tensorspec": [0, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 115, 119, 131, 137, 138, 144, 145, 146, 147, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 219, 260, 269, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 299, 301, 303, 306, 307, 319, 321, 323, 324, 330, 385, 406], "human": [0, 24, 77, 385, 406], "feedback": [0, 385, 401, 410], "rlhf": [0, 54, 63, 82, 177, 385, 387], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 116, 119, 137, 138, 144, 145, 154, 157, 166, 169, 178, 185, 186, 200, 201, 207, 209, 211, 221, 237, 241, 243, 244, 365, 373, 374, 375, 379, 381, 382, 383, 385, 396, 411], "gymlikeenv": [0, 118, 120, 385], "envmetadata": [0, 385], "vector": [0, 1, 8, 25, 111, 112, 120, 124, 125, 128, 139, 140, 141, 146, 147, 168, 206, 225, 227, 235, 236, 239, 240, 242, 332, 335, 345, 346, 347, 348, 349, 385, 388, 392, 393, 395, 403, 404, 405, 406, 407, 411], "custom": [0, 2, 5, 43, 115, 119, 137, 138, 144, 145, 203, 209, 247, 248, 291, 308, 318, 325, 383, 385, 387, 392, 393, 394, 395, 397, 398, 400, 404, 405], "nativ": [0, 1, 7, 9, 77, 115, 119, 137, 138, 144, 145, 160, 352, 385, 395, 408], "auto": [0, 87, 107, 155, 156, 206, 282, 283, 299, 301, 307, 317, 319, 321, 323, 324, 385, 388, 404, 405], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 155, 156, 157, 160, 170, 173, 176, 178, 183, 191, 195, 196, 197, 198, 200, 201, 203, 206, 207, 209, 211, 219, 235, 237, 241, 249, 268, 281, 282, 283, 316, 351, 385, 388, 392, 393, 394, 395, 396, 399, 403, 404, 405, 410], "dynam": [0, 2, 7, 14, 15, 16, 76, 79, 81, 115, 137, 144, 209, 306, 314, 385, 394, 396, 406], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 111, 112, 115, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 215, 218, 219, 232, 237, 241, 258, 260, 269, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 290, 291, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 385, 387, 392, 393, 394, 395, 396, 397, 401, 403, 404, 405, 410], "mask": [0, 1, 4, 23, 25, 26, 29, 33, 39, 40, 41, 42, 47, 139, 140, 145, 154, 184, 209, 232, 245, 246, 258, 275, 276, 277, 278, 279, 285, 286, 366, 385, 393, 395, 411], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 34, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 157, 163, 166, 168, 169, 170, 171, 174, 177, 178, 181, 185, 186, 188, 192, 195, 201, 206, 210, 215, 218, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 237, 241, 242, 243, 244, 245, 246, 247, 256, 257, 258, 260, 263, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 291, 292, 298, 299, 301, 302, 303, 305, 306, 307, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 379, 383, 385, 387, 388, 389, 392, 393, 394, 396, 397, 398, 399, 400, 403, 404, 405, 407, 408, 410, 411], "record": [0, 2, 11, 43, 115, 119, 137, 138, 144, 145, 150, 153, 177, 209, 318, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 379, 385, 393, 394, 397, 401, 404], "domain": [0, 2, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 168, 197, 215, 269, 276, 277, 284, 285, 286, 287, 288, 289, 290, 295, 385, 394, 395, 397, 398, 404, 405, 406, 410, 411], "actor": [0, 3, 4, 21, 177, 210, 221, 224, 225, 227, 232, 233, 244, 256, 258, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 330, 385, 388, 393, 395, 396, 398, 401, 404, 407, 410], "explor": [0, 1, 208, 251, 269, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 298, 316, 365, 374, 375, 379, 385, 394, 395, 396, 398, 399, 401, 404, 405, 406], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 99, 100, 105, 115, 119, 128, 137, 138, 144, 145, 152, 153, 156, 158, 160, 161, 163, 166, 168, 169, 170, 178, 179, 183, 184, 187, 188, 189, 191, 193, 197, 198, 200, 201, 205, 207, 209, 215, 219, 220, 225, 226, 227, 228, 230, 231, 232, 233, 234, 237, 238, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 255, 257, 258, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 360, 362, 363, 364, 365, 366, 369, 379, 385, 389, 393, 398, 399, 400, 403, 404, 405, 406, 408, 410, 411], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 96, 98, 115, 116, 119, 129, 130, 131, 134, 137, 138, 139, 140, 142, 143, 144, 145, 157, 164, 166, 167, 171, 177, 179, 185, 186, 191, 192, 195, 197, 200, 206, 209, 219, 230, 237, 241, 245, 246, 255, 269, 284, 288, 292, 293, 312, 319, 326, 332, 337, 345, 355, 369, 385, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "hook": [0, 2, 34, 43, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 108, 115, 119, 137, 138, 144, 145, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 258, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 385], "planner": [0, 221, 244, 385], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 95, 98, 99, 100, 105, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 171, 177, 179, 181, 183, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 295, 296, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 360, 367, 368, 379, 385, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "vmap": [0, 235, 236, 239, 240, 249, 267, 287, 290, 316, 385, 387, 410], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 79, 81, 93, 105, 115, 119, 131, 137, 138, 144, 145, 153, 168, 178, 179, 197, 210, 211, 235, 237, 239, 241, 278, 284, 287, 288, 295, 299, 316, 319, 365, 373, 385, 387, 392, 393, 394, 395, 396, 397, 399, 406, 407, 408, 410, 411], "sac": [0, 307, 319, 321, 385], "redq": [0, 319, 385], "crossq": [0, 301, 385], "iql": [0, 306, 314, 385, 392, 404, 405], "cql": [0, 299, 305, 385], "gail": [0, 312, 385], "dt": [0, 138, 282, 283, 385, 406], "td3": [0, 323, 324, 385], "bc": [0, 5, 323, 385, 410], "a2c": [0, 298, 385], "dreamer": [0, 150, 151, 233, 309, 310, 311, 385, 387], "checkpoint": [0, 52, 84, 86, 89, 101, 102, 104, 108, 385, 407, 408], "builder": [0, 385, 393, 411], "logger": [0, 3, 11, 350, 352, 354, 355, 356, 357, 358, 359, 363, 369, 379, 383, 385, 393, 404], "_util": [0, 3, 12, 385, 401], "implement_for": [0, 3, 385], "thing": [0, 3, 7, 8, 115, 119, 137, 138, 144, 145, 247, 248, 386, 394, 395, 396, 397, 398, 399, 400, 404, 405, 408, 411], "consid": [0, 1, 2, 3, 8, 20, 30, 31, 37, 43, 49, 52, 56, 59, 60, 86, 87, 107, 115, 119, 137, 138, 144, 145, 168, 207, 209, 230, 247, 248, 263, 299, 301, 314, 319, 321, 323, 324, 332, 334, 335, 386, 392, 396, 397, 398, 406, 408], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 98, 99, 100, 101, 103, 107, 115, 116, 118, 119, 120, 128, 129, 130, 132, 134, 137, 138, 139, 140, 144, 145, 146, 147, 154, 156, 159, 160, 164, 166, 168, 169, 177, 178, 179, 183, 184, 191, 197, 200, 201, 203, 205, 206, 207, 209, 216, 217, 218, 220, 221, 232, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 258, 264, 281, 284, 287, 288, 290, 294, 299, 300, 301, 303, 308, 314, 315, 316, 318, 319, 321, 323, 324, 325, 330, 331, 332, 333, 334, 335, 350, 351, 352, 354, 366, 383, 386, 387, 388, 389, 392, 393, 394, 395, 397, 399, 400, 404, 405, 406, 407, 408, 411], "debug": [0, 6, 8, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 386, 411], "work": [0, 1, 2, 3, 4, 8, 12, 43, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 92, 97, 99, 100, 103, 110, 115, 118, 119, 120, 123, 137, 138, 141, 144, 145, 161, 177, 183, 203, 206, 207, 209, 218, 222, 223, 242, 277, 286, 291, 300, 315, 318, 369, 386, 387, 392, 393, 394, 395, 396, 399, 403, 404, 405, 406, 407, 408, 410, 411], "habitat": [0, 3, 121, 386, 407], "lab": [0, 3, 113, 114, 121, 386], "mujoco": [0, 6, 8, 141, 386, 392, 394, 395], "error": [0, 1, 3, 7, 10, 12, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 50, 53, 55, 115, 119, 137, 138, 144, 145, 148, 184, 209, 211, 316, 386, 388, 392, 394, 404, 405, 411], "solut": [0, 2, 3, 6, 7, 9, 21, 386, 387, 389, 410], "resourc": [0, 1, 21, 121, 386, 392, 394, 404, 405], "issu": [0, 3, 4, 5, 8, 73, 77, 84, 86, 87, 107, 118, 123, 160, 184, 198, 218, 269, 276, 277, 284, 285, 286, 287, 288, 386, 410], "customis": [0, 386, 393, 400], "video": [0, 4, 9, 352, 354, 365, 383, 385, 386, 401, 404, 405], "render": [0, 3, 8, 125, 146, 350, 352, 365, 386, 392, 393, 394, 396, 400], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 91, 92, 94, 95, 97, 103, 105, 106, 107, 109, 110, 115, 119, 129, 130, 135, 136, 137, 138, 144, 145, 146, 147, 155, 160, 164, 168, 201, 218, 245, 246, 385, 396, 403, 404, 405, 408, 410], "search": [0, 134, 219, 393], "page": [0, 7, 24, 359, 398], "somewhat": [1, 2, 388, 397, 411], "equival": [1, 3, 25, 26, 29, 30, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 157, 167, 170, 201, 209, 232, 239, 242, 258, 276, 277, 285, 286, 318, 366, 399, 410, 411], "dataload": [1, 82, 98, 100, 393, 399, 408], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 137, 138, 144, 145, 160, 172, 188, 196, 197, 198, 201, 209, 235, 237, 239, 241, 255, 273, 274, 278, 279, 282, 283, 298, 301, 316, 318, 321, 352, 387, 393, 396, 404, 408, 410, 411], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 215, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 310, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 346, 347, 349, 350, 352, 360, 365, 366, 367, 379, 383, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 115, 118, 119, 120, 128, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 156, 159, 172, 177, 183, 192, 200, 201, 205, 209, 241, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 366, 369, 387, 388, 389, 392, 393, 394, 395, 398, 403, 404, 405, 406, 407, 408, 410, 411], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 79, 92, 94, 98, 99, 115, 119, 129, 130, 137, 138, 144, 145, 153, 168, 179, 191, 198, 209, 218, 264, 267, 290, 308, 310, 316, 338, 350, 372, 389, 392, 393, 394, 396, 397, 398, 399, 404, 405, 406, 411], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 30, 31, 37, 38, 43, 45, 46, 48, 49, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 79, 88, 115, 119, 137, 138, 139, 140, 144, 145, 157, 158, 164, 173, 183, 197, 200, 201, 202, 203, 205, 209, 218, 235, 237, 239, 241, 247, 287, 288, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 387, 392, 395, 404, 405, 406, 408, 411], "static": [1, 12, 54, 63, 92, 99, 100, 121, 138, 207, 314, 396, 406, 408], "like": [1, 2, 3, 4, 7, 11, 21, 30, 31, 37, 43, 45, 49, 52, 56, 59, 60, 63, 88, 94, 100, 115, 119, 121, 128, 137, 138, 139, 140, 144, 145, 170, 197, 199, 209, 211, 235, 239, 248, 280, 298, 300, 315, 318, 319, 320, 388, 392, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 411], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 55, 82, 105, 108, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 159, 166, 168, 169, 178, 186, 197, 201, 209, 216, 217, 237, 241, 278, 282, 283, 300, 301, 315, 316, 318, 321, 352, 366, 371, 381, 382, 383, 387, 392, 393, 394, 395, 399, 404, 405, 406, 408], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 43, 52, 64, 76, 77, 80, 81, 82, 115, 119, 131, 137, 138, 144, 145, 155, 160, 164, 173, 183, 191, 197, 200, 201, 202, 203, 205, 209, 242, 267, 287, 288, 289, 301, 321, 352, 389, 394, 396, 400, 408, 411], "two": [1, 2, 3, 4, 8, 10, 39, 40, 41, 42, 43, 49, 52, 54, 59, 60, 79, 94, 98, 100, 115, 119, 137, 138, 144, 145, 157, 179, 183, 205, 209, 228, 235, 237, 239, 241, 247, 248, 261, 264, 288, 315, 323, 327, 365, 369, 388, 392, 393, 394, 395, 396, 397, 399, 400, 403, 404, 405, 406, 408, 410, 411], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 81, 116, 288, 369, 387, 388, 392, 393, 403, 411], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 91, 92, 94, 97, 98, 99, 100, 103, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 156, 157, 161, 163, 164, 183, 191, 192, 195, 197, 199, 200, 201, 203, 205, 209, 218, 220, 222, 223, 235, 237, 239, 241, 242, 245, 246, 247, 248, 250, 267, 269, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 330, 332, 333, 334, 335, 336, 340, 350, 351, 352, 359, 362, 372, 379, 380, 383, 392, 393, 394, 395, 396, 397, 399, 404, 405, 406, 408, 411], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 97, 98, 99, 100, 101, 103, 113, 114, 115, 118, 119, 120, 121, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 158, 159, 163, 166, 169, 177, 179, 181, 183, 191, 193, 199, 201, 203, 205, 207, 209, 218, 222, 223, 225, 231, 234, 237, 241, 242, 245, 246, 253, 258, 277, 281, 285, 286, 288, 290, 291, 292, 299, 301, 314, 316, 319, 321, 323, 324, 329, 332, 335, 350, 351, 365, 366, 381, 382, 387, 388, 392, 394, 396, 397, 398, 399, 403, 404, 406, 407, 408, 410, 411], "constructor": [1, 2, 16, 18, 19, 20, 21, 52, 63, 79, 91, 105, 115, 119, 132, 137, 138, 144, 145, 146, 156, 200, 222, 223, 242, 284, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 380, 383, 387, 392, 393, 394, 396, 399, 404, 405, 408], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 94, 98, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 171, 179, 192, 209, 220, 222, 223, 242, 247, 248, 262, 269, 276, 284, 285, 287, 289, 290, 292, 316, 329, 365, 368, 369, 388, 389, 392, 394, 395, 399, 401, 404, 405, 406], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 51, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 111, 112, 115, 116, 119, 120, 121, 123, 124, 125, 131, 132, 137, 138, 141, 144, 145, 154, 201, 209, 235, 237, 239, 241, 249, 278, 281, 289, 290, 316, 323, 373, 383, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 408, 409, 411], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 54, 73, 83, 84, 90, 92, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 154, 159, 173, 176, 179, 195, 196, 197, 198, 201, 206, 209, 218, 219, 220, 221, 233, 235, 237, 239, 241, 243, 244, 273, 274, 278, 279, 281, 282, 283, 284, 288, 298, 309, 318, 331, 332, 333, 334, 335, 338, 339, 340, 351, 354, 360, 365, 369, 389, 393, 395, 397, 398, 400, 401, 403, 406, 407, 410], "queri": [1, 3, 14, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 183, 200, 203, 207, 209, 290, 388, 392, 398, 406, 410], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 137, 138, 144, 145, 184, 196, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 295, 303, 305, 316, 332, 333, 334, 335, 336, 351, 380, 392, 393, 395, 398, 401, 406, 408, 411], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 97, 99, 100, 107, 111, 112, 115, 118, 119, 120, 124, 125, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 147, 153, 159, 160, 168, 174, 178, 179, 190, 195, 198, 201, 207, 209, 220, 221, 222, 223, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 252, 253, 254, 257, 259, 260, 263, 264, 265, 266, 269, 273, 274, 275, 278, 279, 281, 282, 283, 284, 287, 288, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 360, 362, 365, 369, 371, 372, 373, 381, 382, 383, 387, 388, 392, 393, 394, 395, 396, 397, 399, 401, 404, 405, 406, 407, 408, 411], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 43, 63, 78, 98, 105, 115, 119, 120, 137, 138, 144, 145, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 235, 237, 241, 242, 250, 251, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 333, 334, 335, 366, 392, 394, 395, 399, 400, 404, 405, 406, 408, 411], "deliv": [1, 2, 3, 16, 79, 392, 393, 396, 399, 410], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 38, 48, 49, 50, 52, 53, 56, 59, 60, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 115, 118, 119, 120, 128, 137, 138, 139, 140, 144, 145, 207, 235, 237, 239, 240, 241, 281, 289, 290, 299, 301, 314, 319, 321, 323, 324, 351, 360, 385, 387, 393, 396, 403, 404, 406, 410], "user": [1, 2, 3, 5, 8, 23, 43, 73, 75, 79, 81, 92, 100, 115, 119, 137, 138, 144, 145, 161, 196, 201, 209, 211, 229, 301, 318, 321, 323, 352, 380, 388, 389, 392, 393, 396, 398, 399, 406, 410, 411], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 54, 98, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 195, 273, 274, 278, 279, 282, 283, 392, 394, 401, 404, 405, 410, 411], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 94, 99, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 166, 167, 169, 170, 171, 178, 179, 181, 185, 186, 188, 190, 192, 195, 197, 198, 200, 201, 207, 209, 218, 219, 221, 235, 237, 241, 244, 281, 298, 299, 300, 301, 302, 303, 305, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 387, 388, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "state": [1, 2, 3, 4, 14, 15, 16, 17, 34, 43, 49, 52, 54, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 159, 160, 161, 163, 170, 179, 186, 195, 196, 200, 201, 207, 209, 211, 218, 219, 221, 224, 229, 233, 235, 236, 237, 239, 240, 241, 242, 244, 249, 253, 256, 257, 259, 260, 266, 270, 281, 287, 293, 298, 300, 301, 305, 315, 316, 318, 319, 320, 321, 330, 331, 332, 333, 334, 335, 336, 383, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 411], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 34, 43, 48, 50, 53, 54, 73, 94, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 218, 220, 235, 237, 241, 250, 273, 274, 276, 278, 285, 301, 310, 321, 323, 393, 394, 395, 396, 397, 399, 401, 404, 405, 406, 407, 408, 411], "predefin": [1, 393, 395, 399, 408], "becaus": [1, 3, 4, 7, 48, 50, 53, 54, 73, 115, 119, 137, 138, 144, 145, 170, 177, 195, 200, 206, 209, 228, 248, 269, 276, 277, 281, 284, 285, 286, 287, 288, 298, 318, 387, 392, 393, 395, 397, 398, 399, 403, 404, 405, 406, 408, 411], "potenti": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 406, 408], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 43, 54, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 179, 193, 201, 204, 209, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 252, 253, 254, 255, 256, 259, 260, 262, 264, 265, 267, 270, 273, 274, 275, 277, 278, 281, 282, 283, 284, 286, 288, 291, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 373, 388, 392, 394, 395, 396, 397, 403, 404, 405, 407, 408], "heavi": [1, 8, 73, 408], "crucial": [1, 2, 3, 273, 274, 278, 279, 282, 283, 306, 314, 316, 392, 393, 394, 395, 396, 398, 400, 404, 405, 406, 411], "configur": [1, 8, 21, 22, 54, 177, 224, 229, 256, 316, 318, 387, 392, 393, 394, 398, 404, 405, 406], "hyperparamet": [1, 97, 209, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 392, 400, 406, 408], "appropri": [1, 3, 4, 7, 85, 95, 105, 106, 109, 110, 137, 144, 170, 380, 383, 392, 400, 408], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 97, 98, 101, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 382, 383, 387, 388, 392, 395, 397, 401, 404, 405, 406, 407, 410], "take": [1, 2, 3, 8, 23, 54, 76, 102, 108, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 163, 195, 198, 200, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 291, 294, 297, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 360, 371, 387, 389, 392, 393, 394, 396, 397, 398, 404, 405, 406, 408, 411], "consider": [1, 2, 3, 8, 118, 120, 393, 404, 405, 408], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 125, 129, 130, 131, 137, 138, 139, 140, 144, 145, 146, 147, 156, 166, 169, 196, 201, 207, 209, 219, 222, 223, 237, 241, 242, 292, 298, 299, 300, 301, 302, 303, 305, 307, 308, 312, 315, 316, 318, 319, 320, 321, 323, 324, 330, 332, 335, 392, 393, 394, 396, 404, 405, 406, 411], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 94, 99, 100, 101, 105, 108, 113, 114, 115, 118, 119, 120, 121, 125, 128, 131, 137, 138, 139, 140, 144, 145, 146, 147, 153, 156, 157, 160, 163, 164, 166, 167, 170, 171, 173, 177, 179, 184, 185, 186, 188, 191, 192, 195, 196, 198, 200, 201, 206, 207, 209, 211, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 248, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 284, 286, 287, 288, 291, 294, 298, 300, 301, 307, 313, 315, 316, 318, 319, 320, 322, 323, 331, 332, 333, 334, 335, 336, 352, 354, 364, 365, 366, 369, 379, 381, 382, 383, 387, 389, 392, 393, 394, 395, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "occur": [1, 8, 15, 55, 56, 73, 115, 119, 121, 137, 138, 144, 145, 161, 171, 179, 184, 206, 219, 220, 269, 276, 277, 284, 285, 286, 287, 288, 310, 408, 411], "serial": [1, 2, 3, 43, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 207, 209], "parallel": [1, 3, 8, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 201, 206, 211, 237, 241, 298, 380, 381, 382, 383, 393, 394, 404, 405], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 237, 241, 379, 382, 385, 392, 393, 394, 395, 399, 401, 404, 405, 408], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 128, 131, 134, 137, 138, 139, 140, 141, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 381, 382, 383, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 408, 411], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 48, 50, 53, 62, 63, 76, 81, 82, 116, 132, 137, 144, 207, 381, 382, 383, 392, 393, 394, 410, 411], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 382, 385, 394, 399, 410], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 36, 48, 50, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 99, 100, 128, 139, 140, 235, 239, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 387, 389, 394, 397, 408, 410], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 49, 52, 59, 60, 92, 99, 100, 111, 112, 113, 114, 118, 120, 121, 123, 124, 125, 132, 133, 137, 141, 145, 207, 209, 237, 241, 247, 282, 283, 316, 371, 385, 387, 388, 392, 396, 400, 404, 405, 406], "aggreg": [1, 3, 73, 92, 105, 139, 140, 219, 222, 223, 225, 226, 290], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 43, 48, 49, 50, 51, 52, 53, 59, 60, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 100, 115, 116, 119, 137, 138, 144, 145, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 218, 219, 235, 237, 239, 241, 242, 247, 258, 264, 273, 275, 277, 278, 286, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 371, 387, 388, 393, 395, 396, 397, 400, 401, 406, 407, 410, 411], "final": [1, 2, 3, 4, 21, 48, 50, 53, 54, 197, 206, 235, 237, 239, 241, 247, 273, 274, 278, 279, 280, 282, 283, 289, 332, 365, 387, 392, 393, 394, 400, 401, 404, 405, 406, 411], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 381, 385, 392, 393, 394, 399, 410], "sever": [1, 2, 3, 8, 39, 43, 63, 76, 115, 119, 137, 138, 144, 145, 161, 163, 201, 209, 318, 392, 394, 400, 401, 408, 411], "gather": [1, 3, 18, 20, 21, 63, 82, 86, 87, 92, 99, 107, 184, 246, 249, 255, 316, 331, 373, 386, 393, 394, 395, 399, 404, 405, 406, 408, 411], "continu": [1, 2, 9, 27, 30, 64, 65, 66, 100, 115, 119, 137, 138, 139, 140, 144, 145, 146, 147, 153, 215, 225, 226, 227, 228, 282, 283, 290, 295, 299, 322, 332, 337, 345, 387, 392, 394, 395, 397, 404, 405, 406, 408, 410, 411], "concomitantli": [1, 115, 119, 137, 138, 144, 145], "network": [1, 4, 8, 43, 115, 119, 128, 137, 138, 139, 140, 144, 145, 209, 222, 223, 225, 226, 227, 228, 231, 233, 234, 239, 242, 247, 248, 249, 251, 253, 254, 257, 259, 260, 261, 266, 270, 271, 272, 275, 287, 291, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 328, 330, 332, 333, 334, 335, 336, 378, 379, 387, 388, 389, 398, 401, 403, 406, 411], "impli": [1, 411], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 54, 92, 94, 97, 111, 112, 115, 119, 137, 138, 142, 143, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 235, 236, 237, 239, 240, 241, 247, 249, 251, 287, 298, 299, 300, 301, 307, 310, 321, 323, 371, 378, 387, 389, 392, 393, 394, 395, 403, 406, 408, 410], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 43, 48, 50, 53, 55, 56, 62, 75, 81, 84, 92, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 177, 179, 192, 201, 202, 207, 209, 211, 220, 237, 241, 242, 247, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 407, 408, 410, 411], "slightli": [1, 23, 73, 387, 388, 395, 404, 406, 407, 408, 411], "lag": [1, 392, 393, 394], "therefor": [1, 2, 3, 7, 49, 52, 59, 60, 80, 81, 115, 119, 137, 138, 144, 145, 188, 318, 330, 398, 404, 411], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 34, 36, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 92, 94, 99, 100, 105, 107, 108, 115, 119, 128, 131, 134, 137, 138, 139, 140, 144, 145, 153, 154, 157, 160, 170, 177, 183, 188, 191, 195, 196, 198, 200, 202, 205, 206, 218, 219, 235, 236, 237, 239, 240, 241, 245, 246, 247, 273, 274, 278, 279, 282, 283, 284, 287, 288, 297, 298, 299, 300, 301, 306, 307, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 388, 389, 392, 393, 394, 396, 403, 404, 405, 406, 408, 411], "asynchron": [1, 9, 15, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 298, 381, 392, 393, 394], "off": [1, 2, 4, 238, 265, 276, 321, 350, 365, 374, 387, 389, 392, 393, 394, 397, 398, 404, 405, 407, 411], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 107, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 146, 166, 169, 173, 179, 196, 201, 206, 209, 211, 232, 235, 237, 239, 241, 248, 250, 270, 272, 275, 277, 285, 298, 306, 308, 314, 318, 365, 387, 389, 392, 393, 394, 395, 396, 397, 399, 400, 404, 405, 406, 407, 408, 411], "remot": [1, 2, 18, 19, 20, 21, 137, 144, 411], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 54, 105, 111, 112, 115, 119, 121, 122, 124, 125, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 163, 166, 169, 170, 171, 177, 181, 185, 186, 191, 192, 193, 195, 196, 198, 207, 209, 211, 221, 237, 241, 244, 281, 282, 283, 298, 350, 352, 373, 387, 392, 394, 395, 397, 398, 399, 400, 401, 407, 408, 410], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 192, 319, 332, 333, 334, 335, 336, 388, 392, 394, 397, 398, 399], "synchronis": [1, 116, 404, 405], "either": [1, 2, 5, 22, 25, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 94, 115, 119, 137, 138, 144, 145, 195, 196, 209, 293, 316, 323, 324, 356, 389, 392, 393, 395, 404, 407, 408, 410, 411], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 392, 405, 410], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 91, 92, 94, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 168, 171, 173, 176, 177, 178, 179, 183, 184, 186, 187, 190, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 207, 209, 211, 215, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 264, 265, 269, 270, 271, 272, 274, 276, 277, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 332, 333, 334, 335, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 359, 362, 363, 365, 366, 369, 383, 387, 388, 389, 392, 393, 394, 395, 396, 397, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "second": [1, 3, 8, 23, 39, 40, 41, 42, 73, 76, 105, 157, 235, 237, 239, 241, 277, 300, 315, 318, 321, 354, 368, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 164, 166, 167, 169, 170, 171, 177, 181, 182, 183, 185, 186, 188, 192, 195, 197, 199, 200, 201, 203, 205, 207, 209, 215, 218, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 247, 248, 250, 251, 256, 257, 258, 266, 269, 270, 271, 272, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 292, 295, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 350, 366, 371, 377, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 92, 99, 115, 119, 137, 138, 144, 145, 157, 173, 177, 200, 209, 231, 232, 236, 240, 252, 270, 271, 272, 276, 277, 280, 287, 293, 298, 300, 302, 303, 308, 315, 318, 320, 330, 331, 332, 333, 334, 335, 369, 385, 388, 389, 392, 393, 394, 395, 396, 397, 403, 404, 405, 406, 411], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 43, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 90, 92, 94, 99, 100, 107, 114, 115, 116, 118, 119, 120, 131, 137, 138, 144, 145, 160, 179, 197, 200, 201, 207, 209, 215, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 247, 248, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 294, 299, 301, 303, 306, 307, 314, 316, 319, 321, 323, 324, 330, 332, 333, 334, 335, 350, 352, 356, 365, 373, 374, 375, 379, 381, 382, 387, 388, 389, 392, 394, 395, 396, 397, 406, 408, 411], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 164, 166, 167, 169, 170, 171, 181, 183, 185, 186, 188, 192, 195, 197, 200, 201, 203, 205, 209, 215, 218, 221, 231, 235, 236, 237, 239, 240, 241, 244, 250, 251, 257, 258, 266, 269, 270, 271, 272, 275, 276, 277, 281, 282, 284, 285, 286, 287, 290, 292, 295, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 350, 366, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 73, 75, 79, 92, 99, 100, 103, 105, 115, 119, 123, 135, 136, 137, 138, 141, 144, 145, 186, 228, 237, 239, 241, 242, 252, 267, 269, 273, 274, 276, 287, 292, 316, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 386, 388, 392, 393, 394, 396, 398, 399, 404, 405, 406, 408, 410, 411], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 94, 95, 99, 100, 101, 103, 105, 106, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 157, 160, 163, 166, 167, 168, 169, 178, 179, 183, 188, 191, 194, 196, 197, 198, 200, 201, 202, 205, 207, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 262, 267, 269, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 294, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 330, 332, 333, 334, 335, 339, 340, 354, 362, 364, 365, 369, 373, 383, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 411], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 111, 112, 115, 119, 121, 122, 123, 137, 138, 144, 145, 164, 177, 182, 183, 197, 200, 201, 203, 205, 209, 235, 236, 239, 240, 287, 361, 392, 393, 394, 395, 404, 405, 407, 411], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 61, 94, 111, 112, 124, 125, 137, 144, 145, 161, 163, 168, 176, 178, 188, 191, 195, 200, 207, 235, 239, 241, 247, 250, 251, 269, 276, 284, 285, 287, 288, 291, 300, 307, 315, 318, 338, 383, 387, 388, 389, 392, 393, 394, 396, 398, 399, 404, 405, 406, 408, 410], "infer": [1, 137, 144, 160, 207, 237, 241, 250, 275, 284, 305, 350, 392, 394, 399, 401, 408], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 43, 73, 76, 92, 99, 100, 111, 112, 113, 114, 115, 118, 119, 124, 125, 131, 132, 133, 137, 138, 144, 145, 178, 179, 201, 207, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 289, 290, 291, 294, 301, 321, 352, 359, 365, 381, 382, 383, 386, 389, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410], "dispatch": [1, 18, 19, 20, 21, 267, 281, 352, 392], "avail": [1, 2, 3, 4, 6, 21, 49, 52, 59, 60, 73, 76, 81, 92, 98, 99, 100, 113, 114, 123, 129, 130, 135, 136, 137, 139, 140, 141, 146, 147, 153, 156, 159, 177, 232, 258, 284, 288, 316, 352, 381, 382, 387, 392, 393, 394, 395, 396, 397, 404, 405, 406, 408, 411], "speed": [1, 2, 4, 8, 29, 115, 119, 137, 138, 144, 145, 388, 392, 393, 394, 395, 404, 405, 406, 408], "avoid": [1, 2, 3, 43, 86, 87, 107, 115, 119, 137, 138, 144, 145, 152, 201, 207, 209, 220, 269, 287, 292, 300, 301, 315, 318, 321, 372, 394, 405], "oom": [1, 3, 48, 50, 53, 86, 87, 107], "choic": [1, 2, 75, 81, 137, 252, 387, 388, 392, 393, 398, 404, 405], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 30, 31, 37, 43, 49, 52, 54, 56, 59, 60, 62, 63, 73, 76, 77, 79, 80, 81, 84, 86, 87, 92, 94, 99, 100, 105, 107, 115, 116, 117, 119, 120, 128, 132, 137, 138, 139, 140, 144, 145, 146, 156, 157, 166, 169, 186, 200, 202, 207, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 248, 249, 250, 252, 253, 254, 256, 257, 259, 260, 262, 266, 267, 269, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 299, 300, 301, 314, 315, 316, 318, 319, 321, 323, 324, 332, 333, 334, 335, 336, 350, 366, 381, 382, 383, 387, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 408, 411], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 79, 91, 100, 115, 119, 123, 134, 137, 138, 144, 145, 153, 160, 173, 202, 207, 219, 237, 241, 275, 387, 388, 393, 405], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 35, 36, 43, 48, 49, 50, 51, 52, 53, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 91, 92, 94, 99, 105, 107, 115, 119, 137, 138, 144, 145, 206, 207, 209, 221, 244, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 359, 385, 389, 392, 394, 395, 397, 399, 401, 404, 405, 407, 411], "while": [1, 2, 3, 7, 8, 23, 43, 115, 119, 137, 138, 144, 145, 188, 201, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 301, 306, 314, 315, 318, 321, 387, 388, 392, 394, 395, 397, 399, 400, 404, 405, 406, 407, 408, 410], "wait": [1, 20, 21, 22, 395, 406], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 50, 52, 53, 59, 62, 73, 76, 77, 79, 80, 81, 82, 86, 87, 92, 94, 99, 100, 105, 107, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 152, 156, 157, 159, 160, 168, 179, 186, 188, 191, 192, 195, 197, 201, 209, 218, 222, 223, 235, 239, 260, 281, 284, 289, 290, 291, 298, 299, 301, 302, 303, 305, 306, 307, 312, 314, 318, 321, 323, 332, 339, 340, 350, 352, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 408, 411], "impact": [1, 2, 3, 79, 125, 166, 169, 220, 298, 300, 315, 318, 320, 393, 395, 404, 405], "memori": [1, 3, 8, 21, 29, 43, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 84, 86, 90, 115, 116, 119, 123, 137, 138, 144, 145, 160, 164, 183, 197, 200, 201, 203, 205, 207, 209, 239, 240, 287, 383, 385, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "manag": [1, 8, 328, 329, 332, 333, 334, 335, 365, 398], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 83, 91, 92, 94, 97, 99, 100, 105, 115, 119, 124, 125, 137, 138, 139, 140, 144, 145, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 218, 219, 221, 231, 232, 237, 241, 243, 244, 258, 269, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 350, 352, 363, 364, 365, 367, 368, 369, 373, 388, 389, 392, 394, 395, 396, 398, 403, 404, 405, 406, 408, 410, 411], "control": [1, 3, 5, 8, 16, 23, 24, 32, 52, 59, 60, 92, 94, 99, 113, 114, 115, 119, 128, 137, 138, 139, 140, 144, 145, 168, 218, 225, 226, 227, 228, 237, 241, 243, 244, 260, 267, 282, 283, 287, 288, 289, 298, 300, 301, 315, 316, 318, 322, 332, 337, 345, 350, 387, 389, 392, 393, 394, 396, 397, 398, 404, 405, 406, 408], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 94, 97, 98, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 160, 161, 166, 169, 174, 177, 178, 179, 183, 184, 195, 197, 198, 200, 201, 203, 207, 209, 211, 231, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 248, 249, 265, 270, 271, 272, 275, 281, 284, 287, 288, 290, 298, 299, 300, 301, 303, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 327, 330, 332, 333, 334, 335, 350, 352, 360, 364, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 411], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 393, 405], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 33, 39, 40, 41, 42, 47, 49, 50, 52, 54, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 92, 94, 97, 99, 115, 119, 137, 138, 139, 140, 144, 145, 156, 157, 160, 163, 166, 169, 171, 174, 181, 193, 201, 207, 209, 220, 237, 241, 248, 332, 334, 335, 365, 369, 388, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 408, 411], "heurist": [1, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 281, 283, 392, 399, 411], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 75, 97, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 251, 318, 323, 332, 333, 334, 335, 336, 351, 386, 387, 389, 392, 393, 394, 395, 397, 399, 400, 405, 408, 411], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 75, 79, 98, 99, 103, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 132, 133, 137, 138, 139, 140, 141, 144, 145, 153, 160, 166, 168, 169, 174, 178, 179, 200, 201, 207, 209, 222, 223, 236, 237, 240, 241, 242, 245, 246, 247, 248, 264, 275, 282, 283, 291, 299, 301, 314, 316, 319, 321, 323, 324, 388, 392, 393, 394, 396, 397, 399, 403, 404, 405, 407, 408, 411], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 92, 94, 97, 98, 99, 100, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 165, 166, 168, 169, 170, 171, 173, 177, 178, 179, 181, 183, 184, 188, 190, 191, 192, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 211, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 264, 265, 269, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 326, 327, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 379, 383, 388, 389, 392, 393, 394, 395, 397, 404, 407, 408, 410, 411], "behavior": [1, 2, 3, 4, 14, 15, 21, 43, 62, 79, 115, 119, 137, 138, 144, 145, 161, 166, 169, 179, 184, 196, 201, 209, 218, 220, 237, 238, 241, 265, 306, 314, 323, 350, 365, 387, 393, 395, 404, 405, 406, 408], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 160, 166, 169, 179, 197, 198, 241, 284, 288, 289, 290, 371, 381, 382, 387, 392, 393, 396, 397, 405, 406, 411], "choos": [1, 11, 128, 237, 241, 318, 385, 387, 388, 392, 393, 394, 404, 405, 408], "follow": [1, 2, 3, 6, 7, 8, 11, 43, 48, 50, 51, 53, 54, 62, 73, 75, 76, 77, 78, 79, 80, 81, 92, 111, 112, 115, 118, 119, 120, 124, 125, 131, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 156, 177, 183, 203, 207, 209, 222, 223, 235, 237, 239, 241, 242, 277, 284, 285, 286, 297, 298, 299, 300, 301, 302, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 352, 369, 387, 388, 389, 392, 393, 394, 395, 398, 399, 403, 404, 405, 406, 408, 410, 411], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 372, 392, 394, 410], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 43, 73, 160, 174, 209, 273, 274, 278, 281, 282, 283, 351, 352, 354, 362, 365, 369, 372, 373, 392, 393, 394, 395, 397, 404, 405, 408, 410, 411], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 93, 94, 98, 99, 101, 103, 107, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 134, 135, 136, 137, 138, 141, 144, 145, 156, 157, 160, 163, 164, 168, 171, 173, 176, 177, 179, 181, 182, 183, 191, 193, 197, 200, 201, 203, 205, 206, 207, 209, 211, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 248, 249, 250, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 279, 281, 282, 283, 286, 287, 288, 290, 291, 294, 300, 301, 315, 316, 318, 321, 323, 331, 332, 333, 334, 335, 350, 351, 354, 365, 388, 389, 393, 394, 395, 396, 397, 399, 400, 404, 405, 406, 408, 410, 411], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 237, 241, 372, 392, 393, 394, 395, 399, 401, 404, 405, 408, 410], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 39, 41, 43, 44, 52, 54, 58, 59, 73, 75, 76, 79, 92, 94, 97, 99, 100, 102, 105, 115, 116, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 176, 183, 188, 191, 195, 196, 197, 198, 205, 207, 209, 232, 235, 236, 237, 239, 241, 247, 248, 253, 257, 258, 266, 273, 274, 276, 277, 278, 286, 290, 338, 341, 342, 343, 344, 346, 347, 348, 349, 352, 365, 366, 381, 382, 387, 388, 392, 393, 394, 395, 397, 398, 399, 401, 404, 405, 406, 407, 408, 410, 411], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 372, 392, 393, 401], "rand_step": [1, 2, 3, 34, 57, 113, 114, 115, 116, 118, 119, 120, 126, 127, 131, 132, 133, 137, 138, 144, 145, 176, 197, 207, 406, 410, 411], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 392], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 75, 77, 79, 80, 81, 392, 393, 394], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 43, 44, 58, 59, 73, 75, 76, 77, 79, 80, 81, 91, 92, 99, 100, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 184, 195, 200, 209, 221, 241, 244, 282, 283, 318, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 360, 385, 388, 392, 393, 394, 395, 396, 399, 401, 406, 410, 411], "pad": [1, 2, 3, 23, 51, 61, 75, 77, 79, 80, 81, 160, 222, 223, 225, 226, 241, 245, 246, 247, 366], "along": [1, 2, 3, 14, 15, 23, 25, 48, 50, 53, 54, 55, 56, 63, 75, 77, 79, 80, 81, 87, 92, 94, 99, 100, 105, 107, 118, 120, 159, 160, 161, 179, 181, 184, 191, 199, 241, 242, 245, 246, 251, 276, 284, 287, 288, 301, 316, 323, 387, 392, 393, 395, 396, 398, 404, 405, 406, 408], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 78, 85, 91, 92, 95, 105, 106, 109, 110, 115, 119, 137, 138, 144, 145, 153, 156, 159, 160, 164, 183, 196, 197, 199, 200, 201, 203, 205, 209, 243, 287, 297, 308, 369, 386, 393, 394, 403, 404, 405, 406, 408, 411], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 100, 119, 156, 184, 195, 219, 245, 246, 274, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 389, 395], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 34, 37, 56, 57, 59, 77, 113, 114, 115, 118, 119, 120, 137, 138, 144, 145, 146, 147, 174, 184, 207, 209, 232, 245, 246, 258, 276, 277, 285, 286, 288, 327, 332, 366, 392, 394, 395, 396, 397, 398, 404, 405], "valid": [1, 2, 3, 23, 48, 50, 51, 63, 82, 105, 148, 156, 184, 201, 209, 222, 223, 242, 245, 246, 273, 274, 282, 283, 315, 332, 333, 334, 335, 366, 389, 411], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 365, 385, 392, 393], "strategi": [1, 2, 16, 79, 97, 128, 153, 246, 255, 278, 387, 389, 392, 393, 397, 404, 405, 408], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 55, 56, 59, 62, 64, 65, 66, 67, 68, 70, 94, 115, 119, 125, 131, 137, 138, 139, 140, 144, 145, 146, 148, 157, 159, 160, 170, 177, 195, 196, 197, 200, 201, 206, 207, 209, 222, 223, 245, 246, 247, 248, 273, 274, 276, 284, 285, 288, 291, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 324, 330, 352, 369, 379, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 411], "organ": [1, 2, 406, 408], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 115, 118, 119, 120, 137, 138, 141, 144, 145, 157, 160, 166, 169, 170, 188, 195, 206, 207, 209, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 295, 303, 308, 323, 330, 350, 352, 387, 388, 393, 396, 397, 398, 399, 400, 401, 404, 406, 410], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 75, 76, 79, 94, 97, 111, 112, 115, 119, 124, 125, 128, 137, 138, 139, 140, 144, 145, 156, 160, 168, 179, 186, 201, 202, 209, 232, 235, 236, 237, 239, 240, 241, 242, 244, 247, 248, 249, 258, 314, 316, 318, 327, 332, 333, 334, 338, 339, 340, 365, 369, 371, 381, 382, 387, 388, 389, 392, 393, 394, 396, 398, 400, 403, 404, 405, 406, 407, 408, 411], "how": [1, 2, 3, 11, 18, 19, 20, 24, 43, 49, 59, 79, 91, 92, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 209, 249, 284, 298, 300, 313, 315, 316, 318, 352, 354, 369, 386, 387, 392, 393, 394, 395, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "tabl": [1, 387, 393, 397], "summar": [1, 3, 406], "what": [1, 3, 8, 11, 32, 49, 62, 73, 92, 99, 115, 119, 137, 138, 144, 145, 170, 197, 211, 218, 285, 301, 312, 316, 323, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 401, 404, 405, 406, 407, 408, 410, 411], "expect": [1, 2, 3, 4, 7, 30, 43, 52, 62, 63, 92, 98, 99, 115, 119, 131, 134, 137, 138, 144, 145, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 235, 236, 237, 239, 240, 241, 247, 248, 277, 282, 283, 287, 290, 298, 299, 300, 301, 302, 303, 305, 306, 307, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 373, 386, 387, 388, 389, 392, 394, 395, 396, 397, 398, 399, 404, 405, 406, 408, 411], "n": [1, 2, 3, 6, 7, 25, 26, 29, 33, 41, 42, 43, 47, 54, 115, 119, 137, 138, 144, 145, 160, 168, 173, 202, 209, 235, 236, 239, 244, 281, 282, 283, 288, 298, 299, 307, 316, 331, 366, 387, 389, 393, 394, 395, 397, 404, 405, 408, 411], "b": [1, 2, 3, 7, 8, 23, 30, 31, 37, 48, 50, 52, 53, 54, 56, 59, 60, 86, 105, 235, 236, 239, 240, 247, 248, 250, 251, 257, 266, 291, 332, 333, 334, 335, 336, 338, 352, 387, 393, 407, 408], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 91, 92, 94, 98, 105, 115, 116, 118, 119, 132, 133, 137, 138, 144, 145, 153, 156, 160, 166, 169, 170, 183, 187, 188, 196, 198, 205, 207, 209, 211, 218, 235, 239, 276, 282, 283, 287, 322, 332, 333, 334, 335, 336, 338, 352, 359, 369, 371, 383, 386, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "p": [1, 2, 4, 94, 97, 116, 142, 143], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 73, 75, 77, 79, 80, 81, 111, 112, 115, 119, 124, 125, 137, 138, 139, 140, 144, 145, 164, 166, 167, 169, 176, 183, 188, 192, 196, 197, 199, 200, 201, 203, 205, 206, 209, 235, 238, 239, 242, 247, 260, 264, 265, 287, 290, 297, 298, 299, 301, 302, 303, 305, 306, 307, 314, 316, 318, 319, 320, 321, 323, 324, 371, 381, 382, 383, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 411], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 94, 105, 115, 118, 119, 137, 138, 144, 145, 166, 167, 169, 176, 179, 199, 201, 211, 241, 242, 248, 249, 284, 287, 288, 290, 291, 297, 298, 299, 301, 302, 303, 305, 306, 307, 314, 316, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335, 352, 360, 371, 381, 382, 383, 385, 387, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 404, 405, 406, 408, 411], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 80, 81, 86, 87, 92, 99, 100, 105, 107, 113, 114, 115, 118, 119, 120, 121, 137, 138, 144, 145, 146, 147, 153, 159, 160, 161, 173, 179, 181, 184, 191, 194, 199, 202, 207, 222, 223, 224, 229, 237, 239, 241, 242, 245, 246, 247, 250, 251, 256, 257, 261, 262, 263, 264, 267, 276, 281, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 383, 387, 392, 393, 394, 395, 396, 404, 405, 406, 408], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 94, 105, 111, 112, 115, 116, 119, 124, 125, 128, 134, 137, 138, 139, 140, 141, 144, 145, 152, 159, 161, 184, 191, 197, 198, 201, 207, 209, 218, 233, 235, 239, 241, 281, 282, 283, 299, 300, 301, 307, 310, 314, 315, 316, 318, 319, 321, 323, 324, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 369, 387, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "adapt": [1, 24, 154, 195, 220, 315, 392, 406], "equal": [1, 14, 15, 17, 73, 92, 99, 100, 132, 135, 136, 137, 144, 178, 179, 222, 223, 235, 237, 239, 241, 242, 248, 322, 327, 360, 381, 382, 392, 394, 407], "introduc": [1, 2, 137, 144, 235, 237, 239, 241, 282, 283, 392, 404], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 63, 64, 65, 66, 67, 68, 75, 81, 86, 87, 94, 105, 107, 111, 112, 115, 118, 119, 120, 124, 125, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 156, 183, 197, 201, 203, 209, 211, 225, 237, 241, 262, 288, 289, 290, 352, 360, 372, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 408, 410, 411], "confus": [1, 25, 43, 115, 119, 137, 138, 144, 145, 201, 209], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 75, 77, 79, 80, 81, 86, 87, 88, 94, 97, 98, 99, 100, 101, 103, 107, 115, 118, 119, 120, 131, 137, 138, 144, 145, 163, 167, 168, 185, 192, 199, 203, 207, 209, 235, 237, 241, 251, 252, 275, 277, 278, 286, 288, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 332, 350, 366, 381, 382, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 410, 411], "better": [1, 3, 8, 9, 14, 15, 23, 237, 241, 388, 394, 396, 406, 410], "consist": [1, 2, 3, 43, 49, 52, 59, 60, 76, 79, 115, 119, 137, 138, 144, 145, 177, 206, 209, 223, 242, 392, 393, 394, 406, 407, 411], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 79, 115, 119, 129, 130, 137, 138, 144, 145, 201, 284, 288, 392, 394, 396, 397, 399, 404, 405, 406, 411], "keep": [1, 3, 4, 7, 8, 15, 49, 52, 59, 60, 94, 98, 105, 137, 144, 179, 183, 205, 207, 209, 218, 282, 283, 362, 369, 392, 393, 394, 395, 399, 400, 401, 405, 406, 408, 410, 411], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 73, 76, 183, 205, 299, 302, 305, 307, 319, 321, 323, 324, 388, 392, 393, 397, 398, 404, 405, 408, 411], "interchang": [1, 247, 248, 394, 396, 400, 407, 408], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 43, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 100, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 168, 178, 189, 201, 207, 209, 211, 222, 223, 231, 235, 237, 241, 242, 247, 248, 277, 284, 288, 298, 300, 301, 302, 305, 306, 307, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 327, 332, 365, 369, 388, 392, 393, 395, 399, 404, 405, 406, 408, 411], "wherea": [1, 2, 22, 79, 111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 168, 209, 316, 389, 400], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 59, 62, 64, 65, 66, 67, 68, 76, 79, 81, 91, 92, 115, 119, 131, 137, 138, 144, 145, 183, 197, 201, 205, 207, 209, 237, 239, 241, 245, 246, 278, 279, 282, 283, 284, 288, 301, 303, 306, 307, 321, 330, 332, 333, 334, 335, 336, 392, 393, 394, 396, 398, 399, 400, 404, 405, 406, 407], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 73, 79, 92, 99, 105, 115, 119, 137, 138, 144, 145, 184, 289, 290, 360, 369, 387, 392, 393, 394, 399, 403, 410, 411], "doesn": [1, 4, 12, 105, 132, 166, 169, 396], "understood": [1, 392], "serv": [1, 18, 20, 21, 121, 408, 411], "basi": [1, 105, 247, 408], "simplest": [1, 105, 291, 392, 394, 395, 397, 404, 405, 408, 411], "scenario": [1, 2, 129, 130, 137, 146, 147, 350, 392, 397, 404, 405, 406], "transit": [1, 43, 75, 79, 92, 100, 105, 115, 119, 137, 138, 144, 145, 209, 220, 293, 392, 395, 396, 397, 399, 404, 406, 408], "sampl": [1, 4, 8, 9, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 103, 105, 107, 115, 119, 131, 134, 137, 138, 144, 145, 153, 159, 160, 184, 188, 212, 213, 216, 217, 221, 230, 238, 244, 245, 246, 255, 256, 259, 264, 265, 269, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 298, 299, 300, 301, 302, 303, 305, 315, 317, 318, 323, 324, 360, 366, 369, 372, 385, 387, 392, 393, 394, 395, 396, 397, 399, 401, 404, 405, 407, 410, 411], "attent": [1, 2, 8, 392, 395, 411], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 115, 119, 131, 135, 136, 137, 138, 144, 145, 164, 168, 179, 183, 197, 200, 201, 203, 205, 207, 209, 218, 221, 232, 233, 235, 239, 244, 249, 258, 262, 269, 276, 277, 278, 281, 283, 286, 287, 288, 289, 290, 292, 297, 302, 303, 305, 316, 331, 332, 333, 334, 335, 336, 338, 361, 365, 379, 387, 389, 392, 393, 394, 396, 397, 398, 399, 400, 405, 406, 411], "built": [1, 2, 3, 5, 7, 94, 111, 112, 118, 124, 125, 134, 135, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 325, 330, 377, 379, 380, 383, 392, 393, 394, 395, 398, 400, 406, 408, 411], "flatten": [1, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 105, 157, 173, 366, 385, 395, 405], "suffici": [1, 3, 4, 392], "preprocess": [1, 2, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 393], "popul": [1, 2, 3, 14, 15, 16, 49, 52, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 176, 197, 249, 316, 392, 394, 395, 397, 399, 406, 408], "replaybuff": [1, 2, 14, 15, 16, 34, 49, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 99, 109, 160, 184, 188, 209, 303, 308, 330, 377, 379, 385, 394, 399, 401, 404, 405, 407, 408, 410], "lazytensorstorag": [1, 2, 49, 52, 59, 60, 91, 105, 188, 209, 394, 401, 405, 408], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 52, 105, 115, 116, 119, 137, 138, 144, 145, 152, 157, 177, 197, 209, 267, 276, 281, 284, 285, 309, 311, 312, 323, 332, 335, 343, 344, 348, 349, 350, 379, 388, 392, 404, 405, 408, 410, 411], "reshap": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 99, 105, 157, 237, 241, 242, 350, 394, 404, 405], "extend": [1, 2, 8, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 91, 92, 94, 95, 99, 100, 103, 105, 106, 109, 110, 159, 188, 209, 220, 316, 366, 388, 389, 392, 393, 394, 395, 399, 401, 404, 405, 407, 408, 410], "slice": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 153, 159, 408], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 48, 49, 50, 52, 53, 59, 60, 105, 123, 249, 399, 404, 405], "achiev": [1, 2, 3, 4, 43, 115, 119, 123, 137, 138, 144, 145, 196, 209, 219, 284, 366, 389, 392, 393, 394, 395, 404, 405, 406, 408, 411], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 94, 105, 115, 116, 119, 123, 137, 138, 139, 144, 145, 146, 147, 157, 160, 183, 200, 201, 203, 206, 207, 209, 215, 218, 222, 223, 225, 226, 227, 228, 229, 234, 237, 241, 242, 243, 247, 248, 275, 288, 295, 301, 303, 308, 319, 321, 330, 352, 366, 373, 374, 375, 379, 381, 382, 387, 392, 393, 394, 395, 397, 400, 404, 405, 406, 407, 408, 410, 411], "multidimension": [1, 2, 59, 91, 92, 408], "slicesampl": [1, 2, 73, 92, 408], "sampler": [1, 2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 105, 107, 184, 303, 308, 330, 392, 394, 404, 405, 408], "One": [1, 2, 4, 8, 25, 26, 29, 33, 41, 42, 47, 63, 105, 111, 112, 137, 144, 160, 188, 203, 255, 273, 274, 287, 291, 322, 327, 356, 392, 393, 408, 411], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 94, 99, 100, 101, 102, 103, 105, 107, 111, 115, 116, 119, 124, 135, 137, 138, 139, 140, 141, 144, 145, 146, 153, 156, 157, 160, 163, 170, 174, 177, 179, 181, 192, 196, 197, 198, 201, 202, 207, 209, 222, 223, 232, 237, 241, 242, 245, 246, 247, 248, 258, 269, 276, 277, 281, 284, 285, 286, 287, 288, 291, 292, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 322, 323, 324, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 388, 392, 393, 394, 395, 397, 403, 406, 408], "ensur": [1, 2, 3, 43, 49, 59, 91, 92, 98, 115, 119, 137, 138, 144, 145, 153, 160, 183, 195, 201, 203, 207, 209, 237, 241, 276, 387, 393, 394, 406, 408], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 94, 105, 107, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 159, 161, 166, 169, 170, 171, 177, 179, 181, 185, 186, 188, 192, 195, 197, 199, 207, 208, 209, 211, 215, 218, 221, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 252, 255, 256, 257, 258, 263, 264, 266, 269, 270, 271, 272, 275, 276, 277, 281, 282, 284, 285, 286, 287, 290, 291, 292, 295, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 360, 366, 369, 379, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 410, 411], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 73, 238, 264, 265, 297, 386, 392, 393, 394, 395, 398, 404, 405, 407, 411], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 32, 43, 48, 50, 62, 101, 105, 115, 119, 123, 128, 137, 138, 139, 140, 144, 145, 160, 163, 173, 183, 186, 198, 201, 205, 207, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 250, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 284, 285, 286, 287, 291, 294, 297, 307, 320, 321, 331, 336, 352, 369, 383, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 410, 411], "dimension": [1, 49, 52, 59, 60, 168, 237, 241, 332, 337, 345, 405], "num_slic": [1, 2, 73, 79, 92, 99, 100, 408], "4": [1, 2, 3, 7, 25, 30, 31, 34, 37, 41, 42, 43, 49, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 99, 100, 107, 111, 112, 113, 114, 115, 119, 124, 125, 126, 127, 128, 131, 133, 137, 138, 142, 143, 144, 145, 153, 154, 156, 157, 160, 170, 188, 195, 196, 207, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 239, 240, 242, 244, 247, 248, 252, 253, 254, 255, 256, 257, 258, 266, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 292, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 350, 351, 387, 391, 392, 393, 394, 395, 397, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 34, 57, 157, 188, 395, 399, 408, 410], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 369, 372, 379, 389, 392, 393, 394, 395, 399, 401, 404, 405, 408, 410], "dim": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 160, 161, 181, 197, 202, 207, 240, 262, 267, 281, 383, 393, 394, 404, 406, 408], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 91, 92, 99, 100, 115, 119, 123, 132, 137, 138, 141, 144, 145, 157, 164, 183, 197, 200, 201, 203, 205, 209, 237, 241, 242, 249, 267, 287, 289, 290, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 350, 352, 354, 387, 389, 392, 393, 394, 395, 396, 397, 398, 400, 404, 405, 406, 408, 411], "ndim": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 86, 87, 91, 92, 105, 107, 115, 119, 137, 138, 144, 145, 209, 281], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 105, 115, 119, 132, 138, 139, 140, 141, 144, 145, 350, 380, 385, 392, 393, 394, 396, 403, 410, 411], "make_env": [1, 3, 137, 144, 147, 207, 350, 374, 375, 392, 393, 411], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 91, 97, 115, 119, 137, 138, 144, 145, 201, 220, 231, 258, 277, 285, 286, 287, 288, 308, 318, 371, 385, 389, 392, 393, 396, 397, 401, 408, 411], "behav": [1, 3, 121, 131, 235, 239, 255, 306, 314, 316, 407], "iif": 1, "accordingli": [1, 2, 92, 195, 196, 239, 285, 395], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 100, 105, 107, 113, 114, 115, 118, 119, 120, 121, 122, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 156, 157, 160, 164, 168, 170, 171, 177, 179, 181, 183, 185, 186, 188, 191, 192, 195, 196, 197, 199, 200, 201, 203, 205, 209, 210, 215, 220, 221, 222, 223, 225, 226, 227, 229, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 247, 248, 249, 252, 255, 257, 267, 269, 270, 271, 272, 276, 277, 284, 286, 287, 290, 291, 292, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 368, 387, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 79, 91, 105, 156, 170, 211, 276, 287, 397, 398, 400, 404, 405], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 92, 94, 100, 115, 119, 121, 132, 135, 136, 137, 138, 144, 145, 156, 157, 160, 184, 196, 197, 198, 200, 201, 209, 212, 213, 218, 233, 260, 281, 282, 283, 298, 300, 301, 308, 315, 318, 320, 321, 355, 389, 392, 393, 394, 395, 398, 404, 405, 406, 408, 410, 411], "fulli": [1, 8, 43, 115, 119, 137, 138, 144, 145, 209, 236, 240, 393, 398, 406, 408], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 94, 95, 98, 100, 101, 103, 105, 106, 107, 109, 110, 115, 116, 119, 132, 137, 138, 139, 140, 144, 145, 146, 147, 154, 156, 173, 183, 184, 188, 201, 203, 207, 209, 211, 219, 222, 223, 229, 242, 251, 275, 281, 287, 288, 289, 290, 298, 299, 301, 302, 303, 305, 306, 307, 314, 316, 318, 319, 320, 321, 323, 324, 332, 334, 335, 350, 357, 369, 386, 388, 392, 393, 394, 397, 398, 404, 405, 406, 408, 410, 411], "consecut": [1, 3, 73, 98, 123, 241, 282, 283, 352, 395, 396, 399, 405, 408, 411], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 79, 115, 116, 118, 119, 132, 133, 137, 138, 144, 145, 183, 205, 209, 369, 383, 393, 394, 396, 397], "therebi": [1, 24, 350, 388, 392, 393], "interrupt": [1, 2, 119, 281, 338], "These": [1, 2, 7, 54, 76, 81, 108, 146, 183, 205, 387, 388, 392, 394, 404, 405, 406, 408, 411], "tool": [1, 2, 3, 5, 395, 396, 404, 406, 408, 411], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 115, 118, 119, 137, 138, 144, 145, 149, 152, 389, 392, 394, 395, 396, 399, 400, 406], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 385], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 385], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 52, 59, 60, 73, 81, 94, 116, 117, 137, 144, 207, 392, 393, 394, 395, 404, 405, 406, 407, 411], "synchron": [1, 14, 19, 21, 48, 50, 53, 132, 381, 382, 393, 394, 404], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 43, 115, 119, 132, 137, 138, 144, 145, 166, 169, 196, 201, 207, 209, 212, 216, 230, 237, 238, 241, 255, 263, 264, 265, 284, 288, 316, 350, 365, 388, 392, 393, 395, 404, 405, 410, 411], "find": [1, 4, 6, 7, 18, 19, 20, 49, 51, 61, 99, 100, 239, 273, 274, 282, 283, 363, 367, 392, 393, 397, 398, 404, 405], "folder": [1, 2, 48, 50, 53, 146, 393], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 113, 114, 115, 116, 118, 119, 120, 121, 129, 130, 131, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 153, 159, 160, 163, 164, 166, 167, 169, 172, 177, 178, 179, 183, 191, 193, 197, 198, 200, 201, 203, 205, 207, 209, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 248, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 287, 288, 290, 291, 294, 295, 298, 299, 301, 310, 314, 316, 318, 319, 320, 321, 323, 324, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 364, 369, 372, 381, 382, 383, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 410, 411], "variou": [1, 2, 3, 237, 241, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 325, 330, 352, 381, 382, 392, 393, 394, 396, 397, 398, 400, 404, 405, 408, 411], "machin": [1, 2, 7, 18, 19, 20, 43, 78, 123, 404, 405, 410], "wonder": 1, "why": [1, 2, 3, 218, 404, 406, 411], "instead": [1, 4, 7, 8, 12, 14, 15, 16, 25, 43, 79, 115, 119, 137, 138, 144, 145, 173, 197, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 298, 300, 301, 303, 306, 307, 308, 314, 315, 318, 319, 320, 321, 330, 332, 336, 340, 383, 387, 388, 396, 397, 401, 406, 408, 411], "lower": [1, 2, 3, 21, 27, 163, 207, 259, 260, 291, 394, 404, 406], "io": [1, 11, 73, 79, 124, 125, 132, 135, 136, 239, 240], "footprint": [1, 2, 408], "commun": [1, 2, 3, 137, 144, 386, 394, 411], "yet": [1, 111, 112, 124, 407], "plai": [1, 3, 139, 140, 145, 160, 393, 394, 398, 408, 411], "role": [1, 3, 130, 393, 398, 411], "opposit": [1, 404], "direct": [1, 2, 43, 115, 119, 137, 138, 144, 145, 209, 235, 239, 316, 393, 398], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 43, 49, 52, 59, 60, 73, 81, 91, 92, 100, 105, 115, 119, 137, 138, 139, 140, 141, 144, 145, 209, 211, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 286, 291, 294, 350, 352, 388, 392, 393, 394, 395, 396, 397, 398, 404, 406, 407, 408, 410, 411], "faster": [1, 2, 4, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 80, 81, 132, 332, 333, 334, 335, 395, 404, 405], "share": [1, 3, 6, 8, 23, 48, 50, 52, 53, 59, 60, 62, 84, 86, 87, 88, 92, 94, 99, 101, 103, 107, 116, 137, 144, 207, 237, 241, 247, 248, 270, 271, 272, 298, 299, 300, 301, 302, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 383, 385, 387, 394, 395, 401, 403, 404, 405, 410, 411], "among": [1, 3, 139, 140, 404, 405], "prohibit": [1, 3, 105], "slow": [1, 3, 4, 11, 48, 50, 53], "compar": [1, 3, 79, 105, 299, 301, 314, 319, 321, 323, 324, 365, 388, 392, 394, 397, 398, 404, 405, 408, 411], "gpu": [1, 7, 8, 43, 86, 87, 107, 115, 119, 120, 123, 137, 138, 144, 145, 209, 392, 394, 395, 404, 405, 411], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 59, 62, 73, 91, 92, 99, 105, 111, 112, 119, 145, 156, 179, 207, 220, 221, 230, 233, 235, 237, 239, 241, 244, 256, 263, 264, 273, 274, 284, 288, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 387, 388, 392, 393, 394, 397, 404, 405, 406, 408, 410, 411], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 91, 92, 94, 97, 99, 100, 103, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 156, 157, 161, 163, 164, 183, 191, 192, 197, 199, 200, 201, 203, 205, 209, 220, 237, 241, 245, 246, 247, 248, 269, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 285, 287, 288, 291, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 330, 332, 333, 334, 335, 336, 340, 350, 359, 380, 392, 393, 394, 397, 400, 404, 405, 408, 411], "build": [1, 3, 7, 23, 30, 43, 49, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 120, 121, 124, 125, 129, 130, 132, 135, 136, 137, 138, 141, 144, 145, 146, 147, 188, 207, 209, 221, 237, 241, 244, 280, 284, 288, 369, 376, 377, 378, 387, 389, 394, 395, 397, 398, 399, 400, 404, 405, 406, 407, 410, 411], "mani": [1, 2, 3, 4, 52, 111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 132, 133, 141, 298, 300, 307, 315, 318, 387, 392, 393, 394, 396, 397, 399, 401, 404, 405, 406, 408, 411], "eg": [1, 2, 3, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 101, 103, 107, 113, 114, 115, 118, 119, 120, 121, 123, 137, 138, 141, 144, 145, 168, 195, 201, 247, 275, 352], "gymnasium": [1, 2, 3, 5, 12, 115, 118, 119, 120, 126, 127, 137, 138, 144, 145, 149, 152, 171, 192, 195, 206, 393, 394, 406, 410], "warn": [1, 3, 273, 274, 278, 279, 282, 283, 393], "quickli": [1, 3, 393, 404, 405, 411], "becom": [1, 3, 4, 21, 235, 239, 404, 405, 411], "quit": [1, 3, 11, 73, 115, 119, 137, 138, 144, 145, 387, 392, 393, 394, 397, 404, 405, 411], "annoi": [1, 3], "By": [1, 2, 3, 30, 31, 37, 56, 113, 114, 115, 118, 119, 120, 121, 129, 130, 137, 138, 139, 140, 141, 144, 145, 146, 147, 267, 288, 316, 365, 383, 388, 392, 404, 407, 408, 411], "filter": [1, 2, 3, 4, 63, 92, 99, 100, 298, 299, 301, 302, 306, 307, 314, 318, 319, 321, 396], "out": [1, 2, 3, 4, 5, 9, 21, 43, 48, 50, 53, 63, 75, 79, 84, 92, 99, 100, 115, 119, 137, 138, 139, 140, 144, 145, 197, 209, 211, 235, 236, 239, 245, 246, 249, 250, 251, 269, 275, 276, 277, 283, 284, 285, 286, 287, 288, 316, 328, 329, 388, 389, 392, 393, 394, 395, 396, 397, 399, 404, 405, 406, 408, 410, 411], "still": [1, 2, 3, 9, 64, 79, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 274, 315, 316, 392, 393, 395, 403, 406, 408, 411], "wish": [1, 3, 11, 14, 15, 17, 79, 152, 398, 408], "displai": [1, 3, 7, 115, 119, 137, 138, 144, 145, 369, 389, 392, 393, 405, 406], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 161, 164, 166, 169, 170, 171, 173, 176, 177, 178, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 207, 209, 211, 218, 219, 220, 221, 222, 223, 225, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 257, 258, 264, 265, 266, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 330, 332, 333, 334, 335, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 359, 362, 363, 365, 366, 367, 369, 383, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "central": [2, 247, 248, 249, 392, 393, 396, 404, 405, 408], "part": [2, 3, 4, 8, 43, 54, 73, 76, 77, 79, 80, 81, 111, 115, 119, 124, 135, 137, 138, 144, 145, 159, 179, 188, 191, 209, 218, 237, 241, 292, 360, 383, 392, 394, 395, 401, 404, 406, 411], "algorithm": [2, 3, 8, 9, 131, 153, 298, 318, 319, 321, 385, 388, 389, 392, 393, 394, 395, 397, 398, 399, 400, 404, 405, 407, 408, 410], "implement": [2, 3, 9, 12, 14, 15, 16, 43, 89, 101, 102, 115, 119, 131, 132, 137, 138, 144, 145, 157, 164, 166, 167, 171, 174, 177, 185, 186, 192, 195, 200, 201, 207, 209, 222, 235, 236, 237, 238, 239, 240, 241, 263, 264, 265, 298, 299, 301, 304, 305, 306, 312, 314, 316, 317, 318, 320, 321, 323, 350, 360, 374, 387, 389, 392, 393, 394, 395, 404, 405, 406, 410], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 30, 43, 49, 52, 54, 59, 60, 73, 75, 79, 81, 86, 98, 100, 105, 111, 112, 115, 116, 119, 123, 124, 125, 137, 138, 144, 145, 160, 177, 183, 186, 203, 206, 207, 209, 211, 221, 241, 247, 248, 249, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 352, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "give": [2, 3, 7, 59, 76, 115, 119, 131, 137, 138, 144, 145, 160, 386, 388, 392, 393, 404, 405, 406, 407, 410], "abil": [2, 316, 406, 408], "panel": [2, 394], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 75, 81, 84, 105, 157, 160, 170, 237, 241, 301, 306, 314, 321, 325, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "includ": [2, 3, 4, 7, 9, 21, 43, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 101, 103, 107, 115, 119, 131, 135, 136, 137, 138, 144, 145, 196, 201, 207, 209, 237, 241, 301, 316, 321, 372, 387, 389, 392, 393, 394, 395, 404, 405, 406, 408, 411], "almost": [2, 395], "physic": [2, 6, 7, 84, 137, 138, 141, 389, 392, 404, 405, 406], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 73, 86, 87, 88, 101, 103, 107, 115, 118, 119, 120, 137, 138, 144, 145, 209, 249, 282, 283, 303, 316, 330, 392, 393, 395, 404, 405, 407, 408], "liststorag": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 408], "veri": [2, 3, 124, 125, 393, 396, 399, 404, 406, 408, 410, 411], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 37, 43, 48, 50, 52, 53, 55, 56, 59, 60, 73, 79, 92, 94, 97, 99, 100, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 156, 157, 186, 209, 218, 242, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 325, 327, 330, 387, 389, 392, 394, 395, 396, 397, 398, 404, 405, 406, 408, 411], "complex": [2, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 392, 393, 396, 397], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 100, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 296, 298, 299, 301, 302, 303, 305, 306, 307, 310, 311, 314, 316, 318, 319, 320, 321, 323, 324, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 410, 411], "contigu": [2, 3, 8, 27, 30, 64, 76, 79, 80, 115, 119, 137, 138, 144, 145, 215, 394, 395, 404, 405, 406, 408, 410, 411], "tensorstorag": [2, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 105, 108, 399, 408], "lazymemmapstorag": [2, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 159, 160, 392, 393, 395, 399, 404, 407, 408], "citizen": 2, "pytre": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 108], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 92, 94, 99, 103, 105, 113, 114, 115, 118, 119, 120, 137, 138, 144, 145, 177, 179, 209, 225, 231, 232, 237, 240, 241, 242, 249, 252, 256, 257, 258, 276, 277, 285, 286, 291, 298, 299, 301, 302, 306, 307, 309, 314, 316, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335, 363, 365, 367, 376, 408], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 43, 48, 50, 53, 63, 92, 97, 99, 100, 115, 118, 119, 120, 129, 130, 137, 138, 144, 145, 146, 147, 197, 201, 209, 284, 288, 301, 321, 323, 365, 381, 382, 383, 389, 393, 394, 396, 398, 404, 406, 411], "nest": [2, 3, 23, 30, 31, 34, 36, 37, 43, 44, 48, 50, 52, 53, 56, 57, 58, 69, 86, 87, 90, 94, 107, 115, 118, 119, 120, 137, 138, 144, 145, 160, 195, 198, 209, 219, 281, 332, 333, 334, 335, 336, 350, 389, 393, 394, 405, 406, 408, 410], "construct": [2, 3, 5, 23, 43, 49, 52, 59, 60, 62, 73, 94, 115, 118, 119, 137, 138, 139, 144, 145, 166, 169, 209, 211, 237, 241, 260, 288, 369, 387, 393, 394, 395, 397, 404, 406, 408, 411], "ram": [2, 118, 120, 400, 408], "prealloc": [2, 3, 137, 144, 406], "ve": [2, 54, 392, 395, 401], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 94, 98, 115, 119, 123, 129, 130, 137, 138, 144, 145, 177, 195, 196, 200, 235, 239, 249, 274, 279, 281, 283, 298, 316, 318, 320, 392, 393, 394, 395, 403, 404, 405, 406, 408, 411], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 80, 81, 105, 113, 114, 115, 119, 123, 137, 138, 139, 140, 144, 145, 160, 249, 359, 387, 388, 389, 392, 393, 394, 395, 396, 397, 399, 401, 404, 405, 406, 408, 410, 411], "start": [2, 3, 4, 5, 14, 21, 24, 62, 63, 73, 81, 92, 99, 100, 116, 119, 128, 137, 144, 165, 218, 364, 391, 392, 393, 402, 405, 406, 408, 409, 411], "replay_buff": [2, 8, 14, 15, 16, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 366, 379, 392, 393, 394, 399, 404, 405, 408], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 34, 43, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 153, 154, 156, 157, 159, 160, 163, 170, 171, 176, 177, 179, 181, 183, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 200, 205, 207, 209, 210, 215, 218, 219, 221, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 247, 248, 249, 252, 257, 258, 266, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 350, 352, 362, 365, 379, 387, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "rb": [2, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 99, 100, 105, 160, 188, 209, 393, 395, 399, 401, 405, 407, 408, 410], "10": [2, 3, 7, 22, 23, 25, 26, 29, 33, 39, 43, 49, 52, 54, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 94, 99, 100, 105, 107, 111, 112, 115, 116, 119, 124, 125, 131, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 157, 159, 160, 196, 198, 199, 209, 221, 224, 225, 227, 229, 231, 235, 236, 237, 239, 240, 241, 244, 256, 267, 278, 279, 282, 283, 284, 291, 295, 299, 303, 305, 312, 318, 319, 320, 324, 330, 332, 333, 334, 335, 338, 352, 360, 389, 391, 392, 393, 394, 395, 396, 397, 401, 404, 405, 406, 408, 409, 410, 411], "add": [2, 3, 4, 6, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 91, 94, 95, 105, 106, 109, 110, 115, 119, 137, 138, 144, 145, 160, 177, 201, 209, 237, 241, 250, 280, 298, 364, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 410], "string": [2, 18, 19, 20, 43, 51, 63, 82, 115, 119, 129, 135, 137, 138, 144, 145, 152, 183, 195, 205, 209, 237, 241, 276, 281, 284, 285, 297, 351, 368, 388, 392, 394, 395, 408], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 39, 41, 49, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 94, 99, 100, 105, 107, 134, 137, 144, 153, 160, 184, 193, 196, 197, 222, 223, 235, 236, 239, 269, 273, 274, 276, 281, 287, 288, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 360, 388, 392, 394, 397, 399, 408, 411], "30": [2, 3, 52, 77, 156, 178, 259, 260, 350, 354, 391, 392, 393, 399, 404, 405, 406, 408, 409], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 101, 103, 105, 107, 115, 116, 118, 119, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 363, 364, 365, 366, 367, 368, 369, 373, 374, 375, 379, 381, 382, 383, 387, 389, 392, 393, 395, 396, 397, 398, 399, 400, 403, 406, 408, 410, 411], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 99, 100, 101, 105, 106, 107, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 155, 156, 157, 159, 160, 161, 162, 164, 165, 168, 173, 174, 178, 179, 181, 183, 184, 187, 194, 195, 198, 201, 202, 203, 205, 209, 211, 215, 220, 221, 222, 223, 224, 225, 227, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 266, 267, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 298, 299, 300, 307, 309, 310, 315, 316, 317, 318, 319, 323, 324, 332, 334, 335, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 360, 361, 362, 365, 366, 369, 371, 377, 381, 382, 383, 406, 408], "entri": [2, 3, 14, 15, 17, 23, 30, 31, 34, 37, 43, 48, 50, 51, 53, 56, 57, 63, 70, 75, 76, 77, 78, 80, 81, 99, 100, 113, 114, 115, 118, 119, 120, 121, 129, 130, 137, 138, 141, 144, 145, 146, 147, 156, 160, 162, 163, 165, 166, 169, 170, 173, 176, 179, 181, 183, 186, 188, 191, 193, 195, 196, 197, 205, 207, 209, 218, 219, 237, 245, 246, 275, 276, 281, 285, 286, 299, 301, 321, 332, 333, 334, 335, 387, 392, 394, 395, 396, 397, 398, 400, 404, 405, 406, 407, 408, 411], "onto": [2, 8, 48, 50, 53, 215, 269, 273, 274, 276, 277, 282, 283, 284, 285, 286, 287, 288, 395, 406], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 91, 92, 94, 95, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 146, 147, 153, 160, 161, 195, 196, 197, 198, 201, 209, 219, 222, 223, 242, 245, 246, 248, 281, 282, 283, 285, 286, 294, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 373, 383, 386, 389, 394, 395, 399, 400, 401, 406, 408, 411], "without": [2, 3, 7, 9, 14, 15, 16, 43, 48, 50, 53, 54, 62, 73, 75, 79, 99, 100, 115, 119, 137, 138, 144, 145, 146, 147, 154, 156, 166, 169, 199, 209, 235, 236, 239, 240, 271, 272, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 331, 332, 333, 334, 335, 336, 379, 386, 387, 392, 393, 394, 396, 397, 398, 399, 404, 405, 406, 408, 411], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 48, 49, 50, 53, 54, 59, 91, 92, 115, 119, 131, 137, 138, 139, 140, 144, 145, 154, 156, 157, 166, 168, 169, 185, 195, 196, 201, 204, 207, 209, 219, 221, 235, 237, 241, 244, 249, 273, 274, 278, 279, 282, 283, 284, 285, 286, 287, 288, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 330, 332, 333, 334, 335, 336, 365, 369, 371, 374, 375, 378, 379, 389, 393, 394, 395, 398, 401, 404, 405, 406, 408, 410, 411], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 73, 79, 82, 92, 99, 100, 103, 115, 119, 124, 125, 137, 138, 144, 145, 153, 184, 207, 221, 222, 223, 225, 227, 229, 235, 239, 242, 244, 247, 248, 269, 287, 292, 360, 366, 392, 394, 395, 399, 401, 406, 408, 411], "cursor": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "place": [2, 3, 24, 30, 31, 32, 37, 43, 48, 50, 53, 56, 86, 87, 94, 97, 107, 115, 116, 119, 137, 138, 144, 145, 146, 147, 156, 164, 170, 183, 197, 200, 201, 203, 205, 206, 207, 209, 219, 249, 275, 281, 287, 366, 371, 372, 388, 393, 394, 397, 400, 404, 405, 406, 408], "afterward": [2, 115, 119, 137, 138, 144, 145, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 404, 411], "tell": [2, 3, 4, 7, 139, 140, 392, 395, 399, 404, 405], "our": [2, 3, 7, 8, 11, 18, 52, 160, 352, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 410], "far": [2, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 238, 264, 265, 401, 406, 411], "restrict": [2, 3, 393, 407, 408, 411], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 115, 119, 134, 137, 138, 144, 145, 166, 169, 183, 185, 198, 201, 203, 205, 209, 215, 356, 392, 406], "64": [2, 3, 48, 50, 53, 73, 79, 94, 160, 187, 225, 226, 234, 237, 241, 248, 249, 257, 330, 392, 393, 394, 395, 397, 401, 403, 406, 407, 408, 410, 411], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 99, 100, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 157, 158, 164, 166, 167, 168, 169, 170, 171, 177, 179, 181, 183, 185, 186, 188, 192, 195, 197, 199, 200, 201, 203, 205, 209, 211, 215, 218, 219, 221, 231, 232, 235, 236, 237, 239, 240, 241, 244, 250, 251, 257, 258, 266, 269, 270, 271, 272, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 292, 295, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 338, 387, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "unit8": 2, "img": 2, "randint": [2, 63, 94, 199, 408], "255": [2, 94, 199, 406, 408], "uint8": [2, 3, 30, 48, 50, 53, 73, 79, 113, 114, 129, 130, 170, 181, 199, 393, 400, 407, 408, 410, 411], "next": [2, 3, 4, 8, 14, 15, 16, 23, 30, 31, 34, 36, 37, 43, 49, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 92, 94, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 129, 130, 131, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 153, 156, 157, 159, 160, 166, 169, 170, 171, 176, 177, 181, 185, 186, 188, 191, 192, 195, 197, 206, 207, 209, 215, 218, 221, 236, 237, 240, 241, 244, 260, 281, 293, 295, 298, 299, 301, 302, 303, 305, 306, 307, 308, 314, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 352, 363, 365, 367, 393, 395, 397, 400, 401, 403, 406, 407, 410, 411], "ask": [2, 8, 73, 79, 92, 99, 100, 352, 394, 395, 396, 397, 404, 405, 407, 411], "do": [2, 3, 4, 7, 81, 115, 119, 137, 138, 144, 145, 146, 147, 153, 184, 206, 207, 218, 237, 241, 248, 250, 271, 316, 332, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 410, 411], "automat": [2, 3, 5, 27, 62, 64, 81, 86, 87, 94, 107, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 156, 166, 169, 179, 197, 206, 222, 237, 241, 269, 281, 284, 350, 387, 392, 394, 396, 397, 404, 405, 406, 408, 410], "hand": [2, 3, 7, 21, 30, 404, 405, 406], "look": [2, 3, 5, 7, 8, 43, 92, 115, 119, 128, 137, 138, 139, 140, 144, 145, 183, 184, 203, 209, 284, 288, 289, 290, 388, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411], "assum": [2, 3, 6, 30, 54, 59, 60, 75, 77, 79, 80, 81, 83, 84, 90, 99, 115, 119, 137, 138, 144, 145, 159, 162, 165, 173, 183, 184, 191, 197, 201, 203, 205, 215, 237, 241, 267, 291, 303, 308, 321, 330, 341, 342, 343, 344, 346, 347, 348, 349, 352, 392, 394, 395, 403, 406], "lead": [2, 3, 4, 8, 10, 12, 23, 30, 31, 37, 43, 49, 52, 56, 59, 60, 75, 98, 113, 114, 115, 118, 120, 121, 197, 238, 257, 264, 265, 392, 395, 404, 405, 406, 408, 410], "leav": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 68, 115, 211, 219, 392, 399, 408], "tree": [2, 48, 50, 53, 115, 119, 137, 138, 144, 145, 404, 408], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 94, 103, 113, 114, 115, 116, 118, 119, 120, 121, 137, 138, 144, 145, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 222, 223, 230, 237, 241, 242, 247, 248, 263, 269, 275, 276, 284, 285, 287, 288, 291, 292, 299, 301, 307, 315, 317, 319, 321, 366, 371, 387, 392, 394, 403, 405, 406, 408, 411], "don": [2, 3, 4, 6, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 160, 393, 394, 399, 408, 410, 411], "throw": [2, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 411], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 30, 34, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 159, 160, 164, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 200, 201, 209, 210, 218, 219, 221, 229, 231, 232, 237, 241, 244, 257, 258, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 352, 360, 366, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "max": [2, 23, 50, 59, 63, 82, 91, 92, 105, 168, 198, 264, 265, 282, 283, 299, 300, 301, 307, 317, 319, 321, 392, 394, 395, 401], "label": [2, 50, 51, 54, 63, 392, 404, 408], "100": [2, 14, 15, 16, 17, 43, 49, 52, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 163, 170, 179, 188, 193, 195, 209, 247, 277, 281, 352, 361, 379, 393, 394, 395, 396, 398, 401, 403, 404, 405, 406, 407, 408, 410, 411], "rb_pytre": 2, "randn": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 100, 107, 159, 179, 215, 224, 225, 229, 231, 232, 235, 236, 239, 240, 245, 246, 247, 252, 255, 256, 258, 269, 270, 271, 272, 275, 276, 284, 285, 287, 290, 291, 292, 298, 299, 301, 302, 303, 305, 306, 307, 314, 316, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335, 368, 387, 408, 410, 411], "c": [2, 3, 6, 7, 30, 48, 50, 52, 53, 59, 60, 78, 179, 199, 239, 240, 393, 408], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 99, 100, 105, 107, 115, 119, 137, 138, 144, 145, 157, 159, 161, 166, 168, 169, 179, 185, 188, 209, 215, 218, 220, 221, 226, 227, 228, 234, 235, 236, 237, 239, 240, 241, 245, 246, 248, 249, 257, 266, 278, 279, 282, 283, 286, 294, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 338, 395, 408, 410], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 119, 122, 137, 144, 152, 153, 157, 160, 163, 166, 169, 177, 186, 193, 207, 211, 215, 248, 252, 267, 332, 333, 334, 335, 360, 368, 399, 403, 408, 411], "len": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 107, 181, 222, 223, 242, 248, 392, 399, 401, 404, 406, 407, 408, 410], "ambigu": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 103, 115, 119, 137, 138, 144, 145, 157, 164, 183, 197, 200, 201, 203, 205, 209, 287, 388, 392, 396, 406], "deal": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 316, 388, 392, 394, 405, 408], "interpret": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 393], "put": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 119, 129, 130, 145, 146, 147, 207, 359, 383, 387, 393, 394, 395, 396, 404, 406], "solv": [2, 4, 9, 10, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 386, 392, 393, 394, 399, 401, 404, 405, 406, 408], "clear": [2, 3, 11, 30, 31, 37, 38, 43, 49, 52, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 123, 137, 138, 144, 145, 209, 361, 396, 399], "cut": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "distinct": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 157, 398, 403], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 209, 232, 235, 239, 242, 396, 406, 408, 410, 411], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 118, 119, 120, 123, 124, 125, 128, 137, 138, 139, 140, 144, 145, 156, 166, 169, 184, 242, 257, 281, 284, 288, 289, 290, 294, 316, 332, 333, 334, 335, 387, 388, 392, 393, 394, 396, 398, 403, 404, 405, 406, 407, 408, 411], "collate_fn": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 408, 410], "__init__": [2, 3, 7, 115, 131, 152, 154, 157, 166, 169, 185, 221, 232, 235, 239, 244, 292, 299, 301, 302, 307, 314, 319, 321, 323, 324, 389, 406, 411], "major": 2, "worri": [2, 61], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 92, 99, 101, 103, 107, 115, 116, 119, 123, 137, 138, 144, 145, 156, 219, 392, 394, 396, 404, 405, 406, 411], "though": [2, 4, 11, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 242, 394, 404, 405], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 51, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 178, 197, 238, 264, 265, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 393, 397, 400, 406, 408, 411], "latter": [2, 18, 19, 20, 43, 75, 115, 119, 137, 138, 144, 145, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 318, 381, 382], "inv": [2, 3, 163, 168, 171, 181, 188, 193, 406], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 99, 100, 101, 102, 103, 105, 107, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 156, 157, 160, 164, 166, 167, 170, 171, 173, 177, 179, 183, 185, 186, 187, 188, 192, 195, 197, 200, 201, 203, 205, 209, 210, 221, 237, 241, 247, 248, 249, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 289, 295, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 312, 314, 316, 318, 319, 320, 321, 323, 324, 330, 336, 350, 351, 380, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 408, 411], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 61, 62, 64, 65, 66, 67, 68, 84, 115, 119, 137, 138, 144, 145, 168, 171, 192, 199, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 246, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 332, 408], "multithread": [2, 3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 132, 133, 399, 408], "thread": [2, 14, 15, 17, 48, 50, 53, 111, 112, 124, 125, 137, 144], "prefetch": [2, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 392, 393, 395, 408], "advis": [2, 11, 76, 400, 411], "benchmark": [2, 3, 9, 111, 112, 124, 125], "techniqu": [2, 8, 137, 144, 393, 399, 408], "real": [2, 5, 79, 288, 388, 395, 406], "life": [2, 170], "adopt": [2, 3, 5, 392, 411], "throughput": [2, 9, 125, 392], "constant": [2, 11, 32, 160, 179, 196, 389, 392, 394, 395, 411], "throughout": [2, 3, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 394, 404, 411], "further": [2, 3, 5, 24, 392, 394, 396], "refin": [2, 79, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330], "coupl": [2, 395, 397, 398, 406, 408], "get": [2, 3, 4, 6, 7, 8, 9, 30, 31, 37, 48, 49, 50, 52, 53, 56, 73, 75, 79, 86, 87, 92, 99, 100, 101, 103, 105, 107, 115, 116, 119, 137, 138, 144, 145, 154, 159, 161, 166, 168, 169, 177, 179, 184, 196, 197, 199, 201, 207, 269, 278, 279, 284, 285, 288, 295, 332, 333, 334, 335, 336, 352, 356, 387, 391, 392, 393, 394, 395, 402, 404, 405, 406, 408, 409, 410, 411], "first_elt": 2, "128": [2, 73, 75, 79, 100, 111, 112, 124, 125, 226, 229, 393, 395, 401, 404, 406, 407, 408], "wa": [2, 3, 5, 7, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 115, 119, 137, 138, 144, 145, 201, 211, 219, 239, 298, 300, 313, 315, 318, 320, 322, 338, 388, 393, 394, 396, 397, 403, 404, 408, 410], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 30, 31, 34, 37, 43, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 160, 161, 166, 167, 168, 169, 176, 179, 185, 186, 188, 191, 195, 197, 198, 199, 207, 209, 215, 218, 219, 222, 223, 225, 226, 227, 228, 229, 232, 234, 237, 241, 242, 245, 246, 247, 248, 252, 255, 258, 269, 270, 271, 272, 275, 276, 278, 279, 281, 282, 283, 284, 285, 287, 290, 292, 295, 316, 350, 379, 387, 389, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 161], "larger": [2, 4, 237, 241, 306, 314, 410], "volum": 2, "due": [2, 3, 5, 23, 398, 407, 408, 411], "memorymappedtensor": [2, 34, 48, 50, 57, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 354, 399, 407], "well": [2, 3, 8, 21, 23, 43, 49, 51, 52, 59, 60, 62, 92, 97, 101, 108, 115, 119, 137, 138, 144, 145, 201, 209, 225, 239, 259, 260, 316, 323, 336, 392, 393, 395, 396, 397, 398, 400, 407, 408, 410, 411], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 165, 166, 167, 169, 191, 194, 196, 202, 209, 221, 239, 287, 288, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 359, 387, 392, 394, 395, 399, 404], "file": [2, 6, 7, 8, 48, 50, 53, 73, 75, 76, 77, 79, 80, 81, 84, 146, 351, 352, 354, 389, 391, 393, 394, 404, 408, 409, 411], "locat": [2, 7, 48, 50, 53, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 165, 170, 179, 190, 238, 252, 264, 265, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 392, 393, 394, 400, 404, 405, 408], "improv": [2, 4, 11, 174, 298, 388, 404, 405, 408], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 137, 144, 394, 404, 408], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 30, 43, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 99, 100, 113, 114, 115, 118, 119, 120, 123, 137, 138, 144, 145, 154, 160, 188, 191, 198, 207, 209, 219, 247, 248, 278, 279, 284, 288, 315, 316, 318, 392, 393, 395, 396, 398, 400, 406, 408, 411], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 51, 55, 56, 62, 64, 65, 66, 67, 68, 86, 92, 135, 136, 168, 220, 239, 240, 306, 395, 399, 408], "sharabl": [2, 137, 144], "collabor": [2, 79], "rather": [2, 4, 103, 135, 136, 186, 392, 393, 394, 396, 398, 404, 405, 408], "incur": [2, 111, 112, 124, 125], "transmiss": 2, "overhead": [2, 111, 112, 124, 125, 137, 144], "instanti": [2, 3, 14, 15, 21, 48, 49, 50, 52, 53, 59, 60, 62, 91, 92, 123, 156, 200, 248, 350, 392, 393, 397, 398, 400, 404, 405, 406, 408, 411], "content": [2, 8, 16, 30, 31, 37, 48, 49, 50, 52, 53, 56, 59, 60, 98, 115, 118, 119, 120, 132, 137, 138, 144, 145, 185, 222, 223, 242, 247, 248, 284, 316, 394, 406, 410], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 90, 91, 92, 115, 119, 128, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 215, 232, 252, 269, 270, 271, 272, 276, 284, 285, 287, 288, 290, 291, 292, 293, 301, 321, 330, 365, 385, 387, 388, 392, 393, 394, 395, 397, 398, 407, 410], "writer": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 92, 94, 95, 99, 105, 106, 110, 394, 408], "tensordictroundrobinwrit": [2, 94], "goe": [2, 4, 139, 140, 392, 394, 404, 405, 411], "prioritizedsampl": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 303, 308, 330, 392, 408], "access": [2, 3, 7, 8, 11, 43, 49, 76, 78, 115, 119, 137, 138, 144, 145, 183, 203, 209, 383, 386, 392, 396, 404, 405, 406, 408], "show": [2, 11, 43, 115, 119, 137, 138, 144, 145, 209, 248, 352, 387, 392, 394, 395, 404, 405, 406, 408, 410], "tensordictreplaybuff": [2, 49, 52, 59, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 99, 100, 105, 159, 160, 366, 379, 385, 392, 393, 395, 408], "mp": [2, 18, 19, 20, 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 207], "def": [2, 3, 12, 22, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 131, 137, 138, 144, 145, 152, 154, 156, 157, 166, 169, 185, 201, 209, 221, 232, 235, 236, 239, 240, 244, 249, 281, 284, 292, 299, 301, 302, 307, 314, 316, 319, 321, 323, 324, 350, 389, 392, 393, 403, 404, 405, 406, 408, 410, 411], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 34, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 105, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 126, 127, 135, 136, 137, 138, 144, 145, 154, 157, 159, 161, 166, 167, 168, 169, 176, 177, 179, 188, 191, 197, 199, 201, 207, 210, 218, 221, 231, 232, 237, 241, 243, 244, 257, 258, 266, 269, 270, 271, 272, 275, 276, 278, 279, 282, 283, 284, 285, 287, 290, 292, 330, 333, 334, 335, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 360, 368, 387, 388, 392, 395, 405, 406, 410, 411], "__name__": [2, 3, 14, 15, 22, 116, 350, 393, 410], "__main__": [2, 3, 14, 15, 22, 116, 350, 410], "21": [2, 79, 80, 100, 137, 139, 140, 144, 392, 393, 403, 404, 406], "proc": 2, "target": [2, 4, 8, 21, 24, 43, 115, 116, 119, 137, 138, 144, 145, 196, 200, 209, 287, 288, 298, 299, 300, 301, 302, 303, 305, 307, 308, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 335, 336, 372, 378, 379, 388, 389, 395, 401, 404, 406], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 30, 31, 33, 37, 38, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 56, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 92, 94, 99, 100, 101, 103, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 164, 183, 185, 194, 197, 200, 201, 202, 204, 205, 209, 221, 222, 223, 231, 237, 241, 242, 243, 244, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 359, 362, 366, 369, 383, 393, 394, 411], "join": [2, 116, 385, 393, 394, 404], "now": [2, 3, 7, 49, 52, 59, 60, 94, 135, 136, 137, 160, 248, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 407, 408, 411], "20": [2, 63, 80, 99, 100, 105, 115, 119, 123, 135, 136, 137, 138, 144, 145, 196, 209, 234, 235, 236, 239, 240, 275, 360, 392, 393, 395, 404, 405, 406, 408, 410, 411], "_data": [2, 406], "It": [2, 3, 4, 7, 23, 43, 51, 54, 59, 61, 63, 75, 81, 94, 97, 105, 110, 115, 119, 121, 131, 132, 137, 138, 139, 140, 144, 145, 146, 147, 157, 159, 170, 177, 179, 184, 196, 201, 206, 209, 211, 225, 227, 233, 247, 248, 257, 259, 260, 266, 267, 273, 277, 278, 281, 282, 283, 286, 288, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 322, 324, 330, 331, 332, 350, 359, 365, 386, 387, 388, 392, 393, 395, 396, 404, 405, 406, 407, 408, 410, 411], "difficult": [2, 4, 137, 400], "pai": [2, 8, 392, 395], "word": [2, 3, 11, 54, 73, 75, 77, 79, 80, 81, 316, 392, 399, 406, 411], "1m": [2, 73, 79, 372, 392, 394, 395], "doe": [2, 3, 18, 48, 49, 50, 53, 59, 63, 73, 75, 79, 83, 84, 90, 91, 92, 99, 101, 103, 110, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 207, 229, 235, 236, 237, 239, 240, 241, 250, 267, 275, 289, 290, 298, 300, 308, 315, 316, 318, 331, 369, 387, 389, 392, 393, 394, 395, 396, 399, 404, 406, 408, 411], "howev": [2, 3, 5, 7, 43, 115, 119, 137, 138, 144, 145, 160, 191, 196, 201, 209, 298, 300, 301, 315, 318, 320, 321, 387, 392, 393, 395, 398, 406, 408, 411], "capac": [2, 49, 52, 59, 60, 86, 87, 91, 99, 107, 394, 399], "There": [2, 10, 94, 237, 241, 298, 318, 387, 389, 394, 395, 397, 399, 404, 405, 406, 408, 411], "circumv": 2, "account": [2, 86, 87, 107, 118, 120, 145, 156, 160, 245, 246, 387, 393, 395, 408, 411], "save": [2, 3, 8, 43, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 94, 101, 102, 103, 107, 108, 115, 119, 137, 138, 144, 145, 206, 209, 351, 352, 354, 359, 369, 389, 399, 400, 401, 404, 405], "convent": [2, 3, 73, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 146, 147, 388, 392, 395, 404, 405, 406], "overridden": [2, 3, 73, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 332, 334, 335, 395, 404], "dim_extend": [2, 49, 52, 59, 60], "obtain": [2, 7, 54, 73, 115, 119, 137, 138, 144, 145, 159, 183, 196, 205, 221, 257, 366, 392, 394, 396, 397, 398, 404, 405], "counterpart": 2, "desir": [2, 3, 11, 29, 43, 115, 119, 137, 138, 144, 145, 155, 157, 164, 179, 181, 183, 184, 197, 200, 201, 203, 205, 209, 216, 217, 222, 223, 242, 248, 269, 276, 277, 284, 285, 286, 287, 288, 387, 392, 404, 405, 406, 408], "diversifi": 2, "offer": [2, 3, 7, 111, 112, 115, 119, 124, 125, 129, 130, 137, 138, 144, 145, 350, 387, 392, 393, 396, 398, 399, 404, 406, 408, 411], "accomplish": [2, 211, 396], "anoth": [2, 3, 8, 62, 79, 92, 99, 115, 118, 119, 120, 123, 137, 138, 144, 145, 157, 166, 167, 169, 197, 200, 242, 284, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 387, 388, 392, 394, 395, 397, 398, 403, 404, 405, 406, 411], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 76, 160, 211, 299, 305, 306, 314, 323, 359, 389, 396, 407, 408, 410], "docstr": [2, 43, 115, 119, 137, 138, 144, 145, 209, 396, 397], "extens": [2, 49, 52, 59, 60, 100, 389, 408], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 199, 201, 209, 232, 235, 239, 249, 277, 298, 308, 316, 318, 386, 389, 393, 399, 403, 408], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 115, 119, 137, 138, 144, 145, 166, 169, 207, 209, 219, 235, 237, 239, 241, 282, 283, 284, 288, 308, 393, 397, 403, 404, 405, 411], "happi": 2, "concaten": [2, 8, 14, 15, 21, 39, 41, 79, 160, 161, 179, 200, 239, 242, 290, 392, 393, 397, 404, 405, 406, 408, 411], "schedul": [2, 4, 7, 54, 365, 394, 406], "transformedenv": [2, 3, 11, 43, 115, 116, 119, 137, 138, 144, 145, 153, 154, 157, 160, 163, 164, 166, 169, 170, 171, 173, 176, 177, 178, 179, 181, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 200, 207, 209, 237, 241, 281, 352, 392, 393, 394, 395, 396, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "stepcount": [2, 43, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 200, 209, 392, 393, 394, 395, 396, 401, 404, 405, 410], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 34, 43, 57, 105, 115, 116, 119, 121, 137, 138, 144, 145, 153, 156, 157, 160, 163, 164, 170, 176, 177, 179, 181, 186, 187, 188, 191, 193, 196, 197, 198, 200, 201, 207, 209, 237, 241, 281, 350, 352, 379, 385, 387, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 408, 410, 411], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 160, 188, 385, 399, 408], "cartpol": [2, 3, 11, 34, 43, 57, 113, 114, 115, 119, 137, 138, 144, 145, 156, 157, 160, 191, 196, 207, 209, 281, 350, 393, 395, 397, 399, 400, 401, 408, 411], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 34, 43, 57, 75, 77, 105, 115, 116, 118, 119, 120, 124, 125, 132, 137, 138, 144, 145, 156, 157, 160, 163, 171, 176, 177, 179, 186, 188, 191, 193, 195, 196, 197, 198, 200, 207, 209, 237, 241, 281, 327, 341, 342, 343, 344, 346, 347, 348, 349, 350, 387, 393, 395, 396, 397, 398, 399, 400, 401, 406, 408, 410, 411], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 43, 111, 112, 115, 119, 124, 125, 131, 137, 138, 139, 140, 144, 145, 153, 154, 157, 160, 166, 169, 177, 185, 188, 210, 221, 232, 244, 258, 260, 269, 276, 284, 285, 299, 301, 303, 305, 319, 321, 323, 324, 379, 387, 392, 393, 394, 395, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 410, 411], "8": [2, 3, 6, 7, 43, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 99, 100, 111, 112, 113, 114, 115, 119, 135, 136, 137, 138, 144, 145, 153, 156, 196, 222, 223, 225, 226, 234, 242, 270, 271, 272, 284, 287, 290, 314, 391, 392, 393, 394, 395, 399, 404, 405, 406, 407, 408, 409, 410, 411], "traj_kei": [2, 92, 99, 100, 408], "truncated_kei": [2, 92, 99, 100, 188, 195], "strict_length": [2, 73, 79, 92, 99, 100, 352], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 34, 37, 43, 49, 52, 56, 57, 60, 61, 86, 87, 91, 92, 99, 100, 107, 115, 119, 137, 138, 144, 145, 165, 183, 188, 191, 201, 205, 209, 236, 240, 252, 258, 277, 281, 284, 286, 287, 288, 298, 300, 301, 302, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335, 360, 372, 392, 393, 394, 395, 397, 398, 399, 400, 401, 404, 405, 406, 408, 410, 411], "enumer": [2, 14, 15, 16, 21, 34, 43, 52, 57, 60, 100, 115, 119, 137, 138, 144, 145, 209, 325, 388, 392, 393, 394, 395, 401, 404, 408, 410], "break": [2, 5, 14, 15, 16, 21, 43, 52, 60, 73, 76, 77, 79, 80, 81, 82, 92, 99, 100, 105, 115, 119, 137, 138, 144, 145, 157, 160, 188, 207, 209, 237, 241, 352, 393, 399, 401, 408, 410], "step_count": [2, 14, 15, 16, 43, 115, 119, 124, 125, 137, 138, 144, 145, 195, 209, 394, 395, 396, 401, 410], "32": [2, 22, 30, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 142, 143, 146, 147, 222, 223, 224, 225, 226, 228, 229, 234, 242, 247, 248, 253, 254, 256, 257, 266, 330, 350, 392, 393, 395, 397, 398, 406, 407, 408, 410, 411], "33": [2, 30, 43, 94, 115, 119, 137, 138, 144, 145, 209, 222, 223, 242, 393, 395, 405, 406], "34": [2, 222, 223, 242, 392, 393, 406], "35": [2, 222, 223, 242, 393, 404, 406, 407], "36": [2, 392, 393, 406], "37": [2, 159, 392, 393, 395, 406, 408], "38": [2, 7, 393, 406], "39": [2, 77, 124, 125, 391, 393, 404, 406, 407, 409], "40": [2, 124, 125, 392, 393, 404, 405, 406], "41": [2, 393, 406], "11": [2, 10, 23, 63, 86, 87, 91, 100, 107, 116, 153, 199, 209, 221, 244, 392, 393, 394, 404, 406, 408], "12": [2, 10, 80, 86, 87, 100, 107, 124, 125, 137, 142, 143, 144, 209, 391, 392, 393, 395, 404, 405, 406, 407, 408, 409], "13": [2, 5, 12, 99, 100, 141, 206, 209, 392, 393, 395, 405, 406, 408], "14": [2, 6, 12, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100, 115, 119, 137, 138, 144, 145, 179, 209, 392, 393, 395, 404, 406, 407, 408], "15": [2, 23, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 115, 119, 137, 138, 144, 145, 209, 275, 282, 283, 309, 391, 392, 393, 400, 406, 408, 409], "16": [2, 3, 43, 80, 92, 100, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 160, 209, 392, 393, 395, 404, 406, 407, 408], "17": [2, 11, 80, 100, 119, 137, 153, 209, 392, 393, 395, 404, 406], "could": [2, 3, 4, 6, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 393, 394, 400, 404, 405, 407, 411], "sai": [2, 43, 115, 119, 137, 138, 144, 145, 209, 247, 404, 407, 411], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 30, 31, 37, 41, 56, 88, 92, 99, 100, 115, 118, 119, 120, 123, 137, 138, 144, 145, 166, 169, 184, 191, 247, 248, 285, 298, 318, 393, 394, 395, 404, 405, 406], "handl": [2, 3, 21, 43, 115, 119, 137, 138, 144, 145, 206, 207, 209, 241, 242, 298, 316, 318, 369, 381, 382, 392, 393, 394, 396, 398, 405, 408], "suggest": [2, 330, 392, 405], "serialenv": [2, 3, 115, 119, 137, 138, 145, 197, 209, 281, 385, 410, 411], "squeez": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 156, 157, 160, 194, 196, 222, 223, 261, 262, 392, 406, 408], "6": [2, 3, 7, 14, 15, 16, 17, 23, 43, 52, 73, 80, 81, 92, 100, 113, 114, 119, 137, 142, 143, 153, 156, 179, 181, 196, 222, 223, 225, 226, 227, 230, 234, 236, 242, 247, 248, 249, 253, 263, 281, 284, 292, 392, 393, 399, 404, 405, 406, 408, 410], "5": [2, 3, 14, 15, 23, 30, 31, 37, 39, 40, 41, 42, 43, 49, 52, 56, 59, 60, 73, 94, 99, 100, 105, 115, 116, 119, 124, 125, 129, 130, 132, 137, 138, 142, 143, 144, 145, 146, 147, 153, 156, 157, 159, 188, 195, 196, 209, 220, 221, 222, 223, 225, 226, 231, 232, 233, 234, 235, 238, 239, 242, 244, 247, 248, 253, 258, 264, 265, 275, 276, 281, 285, 291, 315, 318, 320, 323, 324, 350, 387, 391, 392, 393, 395, 397, 399, 401, 404, 405, 406, 408, 409, 410, 411], "7": [2, 3, 6, 10, 43, 49, 52, 59, 92, 100, 115, 119, 129, 130, 137, 138, 144, 145, 153, 156, 196, 221, 222, 223, 226, 242, 244, 247, 338, 391, 392, 393, 399, 404, 405, 406, 408, 409, 410], "9": [2, 3, 7, 23, 43, 49, 52, 59, 80, 81, 92, 100, 105, 113, 114, 128, 139, 140, 145, 153, 156, 196, 207, 209, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 325, 330, 388, 391, 392, 393, 394, 399, 404, 405, 406, 407, 408, 409], "18": [2, 80, 100, 142, 143, 146, 147, 209, 248, 391, 392, 393, 395, 405, 406, 407, 409], "19": [2, 80, 99, 100, 105, 209, 391, 392, 393, 404, 406, 408, 409], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 76, 137, 144, 200, 202, 248, 298, 318, 388, 389, 392, 393, 405, 408, 410], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 43, 48, 50, 53, 63, 73, 76, 78, 81, 82, 111, 113, 115, 119, 124, 128, 129, 130, 132, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 168, 171, 186, 191, 192, 195, 201, 203, 206, 209, 219, 237, 241, 276, 285, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 332, 334, 335, 336, 350, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 389, 392, 393, 394, 395, 398, 400, 404, 405, 406, 411], "randomcroptensordict": [2, 392], "unlik": [2, 25, 98, 119, 129, 130, 146, 147, 220, 281, 308, 318, 352, 393, 397, 399, 410], "stop": [2, 3, 16, 21, 54, 81, 92, 99, 100, 115, 119, 137, 138, 144, 145, 394, 399, 404, 405, 410, 411], "signal": [2, 3, 14, 15, 16, 17, 23, 73, 75, 77, 79, 80, 81, 92, 99, 100, 105, 119, 129, 130, 146, 147, 160, 170, 195, 198, 219, 388, 392, 394, 404, 405, 408, 411], "disk": [2, 3, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 369, 389, 392, 393, 395, 399, 400, 408], "dump": [2, 3, 11, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 94, 101, 103, 107, 350, 351, 352, 400, 401, 404], "load": [2, 6, 7, 14, 15, 16, 17, 34, 43, 48, 49, 50, 52, 53, 54, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 94, 101, 102, 103, 107, 108, 114, 115, 119, 137, 138, 144, 145, 152, 207, 209, 383, 389, 392, 394, 408], "json": 2, "metadata": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 75, 115, 119, 137, 138, 144, 145, 301, 323, 394, 396, 398, 399, 404, 405, 411], "anticip": [2, 166, 169], "compli": [2, 79], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 55, 56, 62, 64, 65, 66, 67, 68, 75, 206, 211, 249, 269, 276, 277, 284, 285, 286, 287, 288, 394, 404, 405, 406, 408], "exact": [2, 3, 23, 137, 239], "statu": [2, 3, 115], "prioriti": [2, 4, 49, 59, 60, 86, 87, 88, 91, 92, 101, 103, 107, 301, 302, 303, 305, 306, 307, 308, 314, 319, 321, 323, 324, 330, 389, 392, 393, 408], "heap": 2, "under": [2, 3, 4, 21, 43, 54, 73, 75, 76, 77, 79, 80, 81, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 209, 269, 276, 277, 284, 285, 286, 287, 288, 316, 332, 333, 334, 335, 336, 352, 388, 392, 393, 397, 404, 406, 411], "hood": [2, 21, 73, 115, 119, 137, 138, 144, 145, 406], "naiv": [2, 203, 396], "just": [2, 3, 4, 12, 103, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 156, 163, 219, 248, 360, 387, 389, 392, 393, 394, 395, 396, 397, 399, 404, 405, 406, 408, 410, 411], "public": [2, 78, 102, 183, 205], "serializ": 2, "consum": [2, 98, 100, 281, 393, 394, 399, 405, 408], "much": [2, 8, 14, 15, 17, 49, 59, 79, 91, 92, 137, 144, 315, 318, 394, 396, 400, 404, 405, 406, 408, 411], "duplic": [2, 43, 98, 115, 119, 137, 138, 144, 145, 209, 299, 301, 303, 308, 314, 316, 319, 321, 323, 324, 330], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 34, 43, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 175, 176, 177, 179, 180, 181, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 209, 218, 224, 225, 226, 227, 228, 229, 232, 237, 241, 247, 253, 254, 256, 258, 259, 269, 270, 271, 272, 275, 276, 278, 279, 281, 282, 283, 284, 285, 292, 293, 298, 299, 300, 301, 302, 303, 305, 306, 307, 310, 314, 315, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 350, 352, 379, 387, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 410, 411], "plu": [2, 14, 15, 17, 54, 137, 144, 406], "enabl": [2, 7, 8, 75, 86, 87, 98, 107, 157, 237, 241, 281, 282, 283, 350, 352, 365, 394, 396, 404, 405, 406, 408], "three": [2, 25, 26, 29, 33, 39, 40, 41, 42, 47, 82, 301, 387, 389, 394, 396, 397, 404, 405, 406, 408, 411], "flatstoragecheckpoint": 2, "discard": [2, 3, 63, 75, 77, 119, 203, 218, 351, 408, 411], "compress": 2, "At": [2, 243, 278, 393, 394, 395, 399, 403, 406, 407], "correct": [2, 4, 48, 50, 53, 115, 119, 137, 138, 144, 145, 177, 372, 394, 395], "addit": [2, 3, 4, 43, 75, 115, 119, 137, 138, 144, 145, 146, 164, 183, 197, 200, 201, 203, 205, 209, 235, 273, 274, 275, 281, 287, 297, 316, 332, 350, 388, 392, 393, 396, 404, 405, 408], "nestedstoragecheckpoint": 2, "represent": [2, 43, 55, 56, 115, 119, 137, 138, 144, 145, 183, 203, 205, 209, 298, 318, 392, 406, 407, 411], "appar": [2, 3, 362], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 83, 84, 90, 115, 118, 119, 120, 137, 138, 144, 145, 153, 163, 168, 215, 229, 232, 247, 254, 258, 269, 273, 274, 276, 277, 279, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 295, 298, 303, 305, 306, 307, 318, 323, 324, 330, 387, 393, 394, 395, 396, 397, 398, 404, 405, 406, 410, 411], "assumpt": [2, 3, 62, 406, 408], "accur": [2, 7, 75, 81, 393, 406, 408], "truncat": [2, 3, 14, 15, 16, 17, 34, 36, 43, 44, 51, 57, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 99, 100, 113, 114, 115, 118, 119, 120, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 170, 171, 178, 185, 188, 195, 201, 209, 219, 237, 241, 265, 281, 338, 392, 394, 395, 396, 397, 399, 400, 403, 404, 407, 408, 410, 411], "marl": [2, 128, 148, 160, 198, 247, 248, 249, 396, 404, 405], "extra": [2, 10, 43, 115, 119, 137, 138, 144, 145, 160, 207, 209, 218, 359, 387, 394, 395, 408], "fail": [2, 7, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 137, 154, 211], "concret": [2, 392, 394], "set_se": [2, 3, 14, 15, 16, 17, 21, 34, 43, 57, 111, 112, 115, 119, 124, 125, 131, 137, 138, 144, 145, 156, 179, 186, 191, 196, 198, 201, 209, 399, 401, 406, 410, 411], "manual_se": [2, 3, 25, 34, 39, 40, 49, 52, 57, 59, 60, 76, 80, 81, 99, 100, 111, 112, 115, 119, 137, 138, 144, 145, 154, 156, 168, 179, 188, 191, 196, 198, 209, 245, 246, 255, 269, 277, 278, 279, 282, 283, 291, 298, 299, 301, 302, 306, 314, 321, 399, 401, 404, 405, 406, 410, 411], "200": [2, 14, 15, 16, 21, 34, 43, 57, 73, 115, 118, 119, 120, 137, 138, 144, 145, 146, 147, 188, 209, 225, 226, 233, 259, 260, 350, 352, 392, 395, 399, 401, 406, 408], "22": [2, 79, 99, 100, 206, 391, 392, 393, 401, 404, 406, 407, 409], "rb_test": 2, "_storag": [2, 407, 408], "max_siz": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 101, 105, 107, 394, 399], "102": [2, 406], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 48, 50, 53, 132, 229, 245, 246, 247, 297, 301, 350, 392, 394, 404, 405], "state_dict": [2, 14, 15, 16, 17, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 207, 209, 247, 248, 301, 321, 383, 389, 392, 393, 411], "load_state_dict": [2, 14, 15, 16, 17, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 207, 209, 301, 321, 389, 392], "drawback": 2, "struggl": 2, "big": [2, 394, 399, 408, 411], "sequenti": [2, 9, 43, 115, 119, 137, 138, 144, 145, 159, 177, 209, 270, 271, 272, 284, 289, 290, 295, 298, 299, 301, 307, 314, 318, 319, 320, 321, 323, 387, 394, 395, 397, 405, 406, 407, 410, 411], "known": [2, 3, 5, 7, 8, 119, 339, 340, 392, 393, 396], "seamless": [2, 242], "integr": [2, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 228, 237, 241, 244, 287, 387, 396, 397, 399, 404, 405, 406, 407], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 220, 392, 393, 398], "essenti": [2, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 393, 396, 404, 406, 408], "understand": [2, 3, 8, 392, 393, 396, 397, 404, 405], "purpos": [2, 3, 7, 11, 115, 119, 137, 138, 144, 145, 160, 235, 298, 300, 312, 315, 318, 320, 379, 392, 394, 395, 398, 400, 404, 405, 407, 411], "guid": [2, 11, 139, 140, 142, 143, 196, 386, 392, 405], "explan": [2, 43, 115, 119, 137, 138, 144, 145, 209], "effect": [2, 3, 30, 43, 49, 52, 59, 60, 73, 79, 92, 94, 97, 99, 100, 115, 119, 137, 138, 144, 145, 156, 160, 201, 209, 369, 392, 397, 404, 408, 411], "realm": [2, 397], "As": [2, 3, 4, 43, 52, 59, 60, 62, 73, 94, 115, 119, 128, 137, 138, 139, 140, 144, 145, 188, 288, 332, 387, 392, 393, 394, 395, 396, 398, 399, 404, 405, 406, 407, 408, 410, 411], "practition": 2, "often": [2, 3, 8, 249, 313, 316, 369, 392, 393, 396, 398, 406, 408, 411], "encount": [2, 4, 79, 281, 386, 393, 397, 406], "situat": [2, 129, 130], "sometim": [2, 3, 62, 395, 411], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 76, 77, 80, 81, 111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 129, 130, 133, 134, 135, 136, 141, 146, 147, 235, 236, 237, 239, 240, 241, 244, 270, 271, 272, 316, 319, 389, 393], "immedi": [2, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 209, 331, 404, 405], "199": [2, 406], "info": [2, 3, 14, 15, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 97, 99, 100, 113, 114, 115, 118, 119, 120, 121, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 203, 206, 208, 359, 396, 401, 404, 405, 408], "glanc": [2, 396], "seem": [2, 392, 395, 396], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 54, 55, 56, 115, 119, 128, 137, 138, 139, 140, 144, 145, 160, 184, 235, 237, 239, 241, 266, 270, 271, 272, 293, 387, 393, 395, 396, 404], "less": [2, 132, 267, 381, 382, 388, 394, 395, 408, 410], "omit": [2, 364, 394, 398, 406, 408], "proper": [2, 3, 4, 6, 7, 332, 333, 334, 335, 393, 394, 404, 405, 408, 411], "imposs": [2, 3, 105, 211, 298, 300, 315, 318, 320], "determin": [2, 49, 59, 75, 91, 92, 115, 119, 137, 138, 144, 145, 146, 147, 183, 205, 247, 282, 283, 393, 397, 404, 405], "complic": [2, 406, 408, 411], "matter": [2, 32, 399], "inconsist": [2, 411], "miss": [2, 3, 4, 6, 7, 12, 30, 43, 115, 119, 137, 138, 144, 145, 201, 209, 218, 289, 290, 301, 321, 386, 392, 395], "primari": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 399], "elimin": [2, 3, 396], "upon": [2, 3, 8, 404, 406], "canon": 2, "definit": [2, 101, 247], "markov": [2, 3, 396, 411], "decis": [2, 3, 224, 256, 275, 304, 317, 395, 396, 397, 404, 405, 408, 411], "mdp": [2, 396, 406], "context": [2, 3, 5, 8, 43, 115, 116, 119, 134, 137, 138, 144, 145, 197, 202, 209, 248, 250, 275, 328, 329, 332, 333, 334, 335, 337, 345, 352, 365, 387, 388, 392, 393, 394, 404, 405, 406, 407, 408], "condit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 63, 64, 65, 66, 67, 68, 196, 207, 276, 277, 281, 285, 286, 297, 392, 404, 406, 408], "complet": [2, 7, 9, 98, 115, 118, 119, 120, 137, 138, 144, 145, 160, 195, 386, 388, 392, 394, 396, 403], "termin": [2, 3, 7, 14, 15, 16, 17, 34, 36, 43, 44, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 113, 114, 115, 118, 119, 120, 124, 125, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 156, 157, 170, 185, 209, 219, 221, 237, 241, 244, 281, 289, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 392, 393, 394, 395, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "reward": [2, 3, 14, 15, 16, 32, 34, 36, 43, 44, 48, 53, 54, 57, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 153, 154, 157, 158, 163, 164, 166, 167, 169, 170, 171, 177, 181, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 204, 205, 207, 209, 215, 218, 221, 237, 244, 275, 281, 293, 298, 299, 301, 302, 303, 305, 306, 307, 310, 314, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 362, 363, 365, 367, 383, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "imit": [2, 3, 312], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 61, 62, 64, 65, 66, 67, 68, 79, 115, 116, 119, 122, 125, 137, 138, 144, 145, 209, 222, 223, 242, 248, 387, 388, 389, 392, 393, 394, 395, 396, 404, 405, 406, 408], "stateless": [2, 3, 115, 119, 137, 138, 144, 145, 157, 200, 316, 350, 392, 396, 406, 411], "simul": [2, 3, 5, 7, 8, 62, 111, 112, 121, 124, 125, 141, 146, 147, 151, 221, 244, 387, 392, 394, 396, 400, 404, 405], "furthermor": [2, 404, 405], "certain": [2, 4, 18, 19, 20, 21, 43, 63, 115, 119, 137, 138, 144, 145, 152, 174, 195, 201, 209, 236, 240, 278, 315, 387, 392, 393, 394, 401, 404, 405, 411], "composit": [2, 3, 25, 26, 27, 28, 29, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 70, 97, 103, 110, 115, 117, 119, 131, 137, 138, 144, 145, 154, 157, 166, 167, 168, 169, 171, 177, 185, 186, 192, 195, 197, 200, 209, 215, 219, 221, 244, 269, 273, 274, 284, 290, 291, 295, 298, 318, 385, 392, 394, 395, 397, 404, 405, 406, 411], "accommod": [2, 3, 396, 397], "uniform": [2, 49, 59, 91, 92, 404], "unambigu": 2, "distinguish": [2, 129, 130, 146, 147], "happen": [2, 3, 115, 119, 137, 138, 144, 145, 274, 393, 398, 399, 400, 407, 411], "limit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 131, 137, 138, 144, 145, 160, 177, 298, 300, 315, 316, 318, 320, 388, 392, 393, 395, 404, 405, 406], "everyth": [2, 393, 394, 395, 400, 401], "belong": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 79, 206, 207, 387, 392, 399, 405], "rule": [2, 137, 166, 169, 288, 387, 394], "field": [2, 3, 14, 15, 16, 17, 23, 30, 34, 43, 48, 50, 51, 53, 54, 57, 59, 60, 61, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 201, 209, 218, 221, 231, 232, 237, 241, 244, 257, 258, 266, 269, 270, 271, 272, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 292, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 373, 386, 387, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "taken": [2, 3, 25, 26, 29, 33, 39, 40, 41, 42, 47, 115, 119, 137, 138, 144, 145, 153, 187, 245, 246, 279, 388, 392, 394, 395, 397, 404, 405, 406], "is_shar": [2, 3, 14, 15, 16, 23, 30, 34, 48, 50, 51, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 207, 218, 221, 231, 232, 237, 241, 244, 257, 258, 266, 269, 270, 271, 272, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 292, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 387, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "brought": [2, 394, 395, 397], "step_mdp": [2, 3, 115, 119, 137, 138, 144, 145, 237, 241, 385, 395, 396, 406, 410, 411], "count": [2, 3, 43, 115, 116, 195, 282, 283, 365, 369, 372, 392, 393, 394, 395, 408, 411], "trigger": [2, 7], "partial": [2, 3, 115, 119, 137, 138, 144, 145, 159, 160, 196, 197, 198, 284, 369, 395], "turn": [2, 18, 19, 20, 21, 48, 50, 53, 145, 175, 202, 206, 276, 350, 365, 388, 392, 393, 395, 397, 406, 407], "retain": 2, "regard": [2, 75, 81, 232, 277, 298, 308, 318, 392, 394, 406], "copi": [2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 79, 86, 115, 119, 137, 138, 144, 145, 156, 186, 196, 201, 207, 209, 218, 237, 241, 249, 275, 301, 316, 321, 350, 388, 392, 393, 395, 396, 404, 408], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 352, 388, 400, 408, 411], "eas": [2, 3, 404, 405], "flat": [2, 105], "manner": [2, 119, 183, 203, 387, 392, 393, 394, 399, 403, 406, 408], "ted2flat": [2, 34, 385], "flat2t": [2, 385], "unflatten": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 157, 281], "deseri": [2, 3, 34], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 113, 114, 115, 119, 137, 138, 144, 145, 173, 174, 194, 195, 198, 201, 202, 209, 252, 301, 321, 388, 394, 404, 405, 406, 408], "both": [2, 3, 7, 43, 49, 52, 59, 60, 79, 115, 116, 118, 119, 129, 130, 137, 138, 139, 140, 144, 145, 153, 160, 186, 201, 209, 219, 222, 223, 237, 240, 241, 242, 247, 248, 270, 271, 272, 277, 286, 298, 300, 301, 302, 306, 307, 314, 315, 316, 318, 319, 320, 321, 323, 324, 365, 387, 392, 394, 396, 398, 404, 405, 406, 407, 408, 411], "mark": [2, 3, 16, 81, 115, 119, 137, 138, 144, 145, 237, 241, 332, 334, 335, 399, 408], "identifi": [2, 51], "abov": [2, 3, 7, 43, 64, 115, 119, 137, 138, 144, 145, 209, 238, 264, 265, 297, 388, 389, 392, 394, 396, 397, 404, 405, 406, 411], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 62, 73, 75, 76, 77, 78, 79, 80, 81, 92, 99, 100, 113, 114, 115, 118, 119, 120, 121, 125, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 157, 158, 160, 163, 164, 165, 166, 167, 169, 171, 177, 179, 183, 185, 186, 191, 192, 195, 198, 200, 201, 203, 205, 206, 209, 211, 219, 222, 223, 224, 225, 226, 229, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 247, 248, 252, 258, 267, 269, 270, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 350, 352, 360, 387, 388, 392, 393, 394, 395, 396, 397, 400, 403, 404, 405, 406, 407, 410, 411], "typic": [2, 3, 4, 8, 43, 115, 119, 137, 138, 144, 145, 170, 196, 209, 284, 299, 301, 316, 318, 321, 387, 388, 389, 394, 396, 398, 399, 404, 405, 406], "adjust": [2, 11, 392, 404, 405, 406], "grumodul": [2, 159, 295], "lstmmodul": [2, 237, 395], "skip": [2, 3, 43, 73, 115, 119, 137, 138, 144, 145, 174, 201, 209, 211, 284, 288, 301, 316, 321, 332, 333, 334, 335, 351, 352, 362, 365, 392, 393, 406], "accumul": [2, 8, 209], "upcom": [2, 316, 341, 342, 343, 344, 346, 347, 348, 349, 392], "popular": [2, 3, 387, 395, 398, 405], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 209, 385, 393], "shift": [2, 34, 36, 43, 44, 57, 83, 84, 90, 294, 332, 333, 334, 335, 394], "approxim": [2, 405, 411], "would": [2, 3, 43, 54, 115, 119, 137, 138, 144, 145, 209, 235, 237, 239, 241, 242, 247, 389, 393, 394, 395, 396, 398, 399, 406, 408, 410, 411], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 160, 229, 256, 298, 304, 317, 318, 360, 383, 394, 395, 405, 408], "2x": 2, "small": [2, 203, 220, 392, 394, 404, 405, 411], "clearer": [2, 397], "lazi": [2, 55, 56, 70, 71, 115, 119, 137, 138, 144, 145, 146, 147, 183, 203, 222, 247, 250, 289, 290, 392, 393, 397, 399, 403, 408, 411], "certainli": 2, "benefici": 2, "welcom": [2, 396], "wrapper": [2, 3, 12, 17, 48, 50, 53, 54, 59, 60, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 206, 210, 252, 267, 274, 275, 279, 281, 283, 288, 293, 332, 357, 358, 359, 383, 385, 394, 395, 396, 404, 405, 407, 411], "around": [2, 5, 7, 17, 59, 60, 131, 210, 281, 288, 332, 392, 393, 405, 411], "selecttransform": [2, 115, 119, 137, 138, 144, 145], "excludetransform": [2, 80, 192, 408], "promptli": 2, "virtual": [2, 3, 118], "instal": [2, 3, 5, 10, 18, 19, 20, 75, 78, 115, 119, 137, 138, 139, 140, 142, 143, 144, 145, 354, 369, 386, 392, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 411], "respons": [2, 3, 8, 92, 99, 115, 119, 137, 138, 144, 145, 369, 398, 399, 411], "d4rl": [2, 75, 81], "repositori": [2, 7, 76, 77, 78, 81, 147, 404, 405], "wheel": [2, 394], "publish": 2, "openml": [2, 78, 134], "scikit": [2, 78, 134], "panda": [2, 78], "raw": [2, 3, 4, 54, 238, 264, 265, 393, 399, 406], "go": [2, 3, 7, 45, 128, 137, 184, 188, 275, 338, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "natur": [2, 3, 392, 395, 397, 398, 399, 408], "modifi": [2, 3, 7, 8, 30, 31, 37, 43, 56, 63, 115, 119, 137, 138, 144, 145, 157, 164, 173, 177, 183, 197, 200, 201, 203, 205, 209, 249, 275, 282, 283, 287, 372, 388, 392, 393, 394, 396, 404, 405, 406], "fly": [2, 207, 315, 388, 394, 406, 408, 411], "least": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 115, 163, 400, 411], "pre": [2, 7, 22, 43, 63, 79, 87, 115, 119, 137, 138, 144, 145, 183, 203, 205, 209, 411], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 209, 235, 239, 249, 264, 276, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324, 332, 350, 364, 389, 392, 393, 394, 399, 404, 406, 410, 411], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 76, 92, 99, 105, 123, 124, 125, 137, 139, 140, 163, 191, 222, 223, 233, 247, 248, 278, 281, 354, 369, 381, 382, 392, 393, 394, 395, 397, 398, 401, 404, 405, 408, 410], "pipelin": [2, 3, 7, 387, 394], "replac": [2, 3, 6, 7, 30, 31, 37, 43, 56, 73, 79, 92, 99, 100, 156, 168, 170, 176, 218, 278, 387, 404, 408], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 79, 94, 115, 119, 137, 138, 144, 145, 156, 188, 201, 209, 273, 274, 279, 281, 282, 283, 367, 387, 389, 393, 394, 395, 397, 400, 406, 408, 411], "produc": [2, 153, 156, 157, 222, 223, 242, 248, 255, 270, 272, 275, 352, 394, 395, 396, 397, 399, 408, 411], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 83, 98, 115, 119, 137, 138, 139, 140, 144, 145, 201, 209, 298, 299, 301, 314, 316, 318, 319, 320, 321, 323, 324, 394], "download": [2, 7, 10, 73, 75, 76, 77, 79, 80, 81, 123, 183, 205, 352, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 138, 393, 404, 405, 406], "robosetexperiencereplai": [2, 99, 100], "fk1": [2, 80], "v4": [2, 80, 119, 137, 153, 187, 341, 342, 343, 344, 346, 347, 348, 349, 392, 394, 407, 411], "expert": [2, 80], "fk1_microopenrandom_v2d": [2, 80], "func": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 208, 394], "obs_norm": 2, "norm": [2, 4, 8, 111, 112, 220, 369, 392, 393, 394, 404, 405, 406], "num_work": [2, 48, 50, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 132, 137, 144, 392, 393], "os": [2, 50, 63, 82, 393], "cpu_count": [2, 50, 63, 82], "num_chunk": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81], "1000": [2, 4, 52, 86, 91, 99, 100, 115, 119, 137, 138, 144, 145, 160, 207, 273, 278, 282, 283, 284, 288, 313, 392, 393, 394, 395, 397, 399, 401, 407, 408], "mp_start_method": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 137, 144, 393, 410], "fork": [2, 5, 73, 74, 75, 76, 77, 78, 79, 80, 81, 392, 393, 394, 395, 404, 405, 407, 410], "recreat": [2, 406], "customari": [2, 387], "moreov": [2, 3], "fine": [2, 3, 24, 52, 59, 60, 92, 94, 99, 115, 119, 137, 138, 144, 145, 157, 177, 399, 407], "grain": [2, 3, 52, 59, 60, 92, 94, 99, 115, 119, 137, 138, 144, 145, 157], "nomenclatur": 2, "compact": [2, 57, 83, 84, 90], "propos": [2, 160, 170, 243, 313, 322, 387, 395, 408], "replaybufferensembl": [2, 73, 97, 103, 110], "primit": [2, 3, 4, 79, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324], "individu": [2, 4, 18, 19, 20, 21, 43, 63, 92, 94, 105, 115, 119, 129, 130, 137, 138, 144, 145, 209, 392, 405], "dummi": [2, 3, 145, 350, 392, 399, 411], "semant": [2, 55, 56, 118, 120, 387], "ident": [2, 3, 14, 15, 16, 43, 48, 50, 52, 53, 59, 60, 86, 94, 99, 115, 118, 119, 120, 132, 137, 138, 144, 145, 170, 220, 247, 248, 299, 301, 314, 319, 321, 323, 324, 332, 333, 334, 335, 381, 382, 393, 396, 404, 405], "another_kei": [2, 94], "renam": [2, 48, 50, 53, 94, 186, 188, 218, 392], "resiz": [2, 3, 81, 94, 160, 393, 395, 396, 408, 411], "imag": [2, 3, 4, 7, 11, 79, 162, 165, 183, 199, 205, 242, 350, 352, 392, 393, 396, 400, 405, 407, 411], "comops": 2, "totensorimag": [2, 3, 81, 94, 160, 187, 393, 395, 408, 410, 411], "renametransform": [2, 94, 115, 119, 137, 138, 144, 145], "rb0": [2, 94], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 131, 137, 138, 144, 145, 150, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 198, 199, 200, 201, 203, 205, 207, 221, 231, 237, 241, 244, 257, 266, 267, 269, 270, 271, 272, 275, 276, 281, 284, 285, 287, 288, 290, 291, 292, 295, 298, 299, 300, 301, 302, 303, 305, 306, 307, 312, 314, 315, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 351, 352, 379, 387, 392, 393, 394, 395, 397, 398, 401, 403, 404, 405, 406, 407, 408, 410, 411], "pixel": [2, 3, 7, 30, 81, 94, 113, 114, 118, 120, 121, 141, 160, 162, 165, 170, 173, 175, 179, 181, 183, 187, 199, 203, 205, 225, 253, 254, 350, 352, 387, 392, 393, 395, 400, 404, 407, 408, 410, 411], "rb1": [2, 94], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 131, 137, 138, 144, 145, 150, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 173, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 198, 199, 200, 203, 205, 207, 221, 231, 232, 237, 241, 244, 257, 258, 266, 267, 269, 270, 271, 272, 275, 277, 281, 284, 285, 286, 287, 288, 290, 291, 292, 295, 298, 299, 300, 301, 306, 307, 312, 314, 315, 318, 319, 320, 321, 323, 330, 332, 333, 334, 335, 350, 352, 365, 379, 387, 392, 393, 394, 395, 397, 401, 403, 404, 405, 406, 407, 408, 410, 411], "pixels33": [2, 94], "data0": [2, 94], "244": [2, 94, 183, 205, 406], "data1": [2, 94], "_": [2, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 116, 123, 146, 147, 161, 166, 168, 169, 177, 179, 186, 199, 207, 209, 269, 287, 292, 297, 298, 299, 301, 302, 306, 307, 314, 318, 319, 321, 323, 324, 332, 333, 334, 335, 354, 392, 393, 394, 395, 401, 404, 405, 406, 408, 410], "rang": [2, 3, 4, 8, 12, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 105, 115, 116, 119, 129, 130, 137, 138, 144, 145, 188, 199, 207, 209, 236, 240, 315, 323, 324, 388, 389, 392, 394, 395, 398, 399, 401, 404, 405, 406, 408, 410], "parent": [2, 3, 21, 30, 31, 36, 37, 56, 62, 74, 94, 103, 110, 115, 119, 137, 138, 144, 145, 153, 157, 160, 161, 164, 167, 170, 173, 174, 179, 183, 191, 195, 196, 197, 198, 200, 202, 203, 209, 237, 241, 270, 295, 316, 318, 336, 350, 352, 392, 399, 406, 410, 411], "basic": [2, 131, 387, 394, 398, 399, 401, 404, 411], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 156, 200, 201, 207, 209, 230, 238, 250, 255, 263, 264, 265, 281, 298, 301, 316, 318, 320, 321, 397, 399, 406, 408], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 68, 102, 108, 115, 119, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 218, 219, 220, 222, 223, 225, 226, 227, 228, 231, 232, 235, 236, 237, 239, 240, 241, 242, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 264, 267, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 363, 367, 372, 379, 387, 388, 389, 392, 393, 394, 395, 396, 404, 405, 406, 410, 411], "send": [2, 3, 8, 359, 410], "receiv": [2, 3, 43, 54, 115, 119, 137, 138, 144, 145, 200, 201, 209, 242, 338, 388, 392, 394, 398, 403, 406], "spawn": [2, 3, 4, 18, 22, 123, 132, 137, 144, 393, 404, 405], "check_env_spec": [2, 3, 119, 137, 153, 185, 350, 385, 394, 404, 405, 406], "saniti": [2, 3, 7, 211, 394], "automati": 2, "make_composite_from_td": [2, 62, 385, 406], "fall": [2, 4, 75], "categori": [2, 30, 76, 387, 389], "bound": [2, 3, 4, 21, 28, 30, 43, 64, 115, 119, 137, 138, 144, 145, 163, 178, 207, 209, 210, 259, 260, 269, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 291, 298, 299, 301, 302, 314, 318, 319, 321, 323, 324, 385, 387, 392, 393, 394, 404, 406, 410, 411], "unbound": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 154, 157, 166, 169, 185, 197, 215, 221, 244, 269, 287, 290, 292, 320, 385, 406, 408], "boundeddiscret": [2, 27, 30, 394], "boundedcontinu": [2, 22, 27, 30, 115, 119, 137, 138, 144, 145, 394, 404, 405, 406, 410, 411], "unboundeddiscret": [2, 64, 138, 385, 406], "unboundedcontinu": [2, 64, 115, 119, 137, 138, 144, 145, 185, 215, 290, 295, 385, 394, 395, 404, 405, 406, 411], "implicitli": 2, "explicitli": [2, 3, 4, 29, 83, 84, 90, 156, 284, 388, 393, 395, 399, 404, 405, 408], "onehot": [2, 25, 26, 29, 33, 41, 42, 47, 111, 112, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 232, 258, 276, 285, 303, 305, 306, 307, 330, 387, 397], "multionehot": [2, 39, 40, 42, 303, 306, 307, 330, 385], "multicategor": [2, 40, 41, 42, 385], "binari": [2, 3, 7, 26, 154, 158, 232, 258, 276, 277, 285, 286, 303, 306, 307, 330, 385], "concept": [2, 115, 119, 137, 138, 144, 145, 393, 408], "arbitrari": [2, 3, 25, 52, 115, 119, 137, 138, 144, 145, 156, 387, 392, 393, 406, 408], "combin": [2, 4, 35, 200, 323, 393, 400, 408], "relat": [2, 3, 4, 10, 49, 137, 173, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 393, 401, 406], "nevertheless": [2, 3, 394, 396, 408], "expand": [2, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 99, 100, 157, 287, 290, 299, 301, 314, 316, 319, 321, 323, 324, 404, 405, 406, 408, 410], "otherwis": [2, 12, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 99, 100, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 160, 161, 168, 179, 196, 197, 198, 201, 207, 209, 220, 235, 238, 239, 247, 248, 264, 265, 276, 285, 291, 299, 301, 310, 316, 317, 321, 332, 334, 335, 365, 366, 389, 392, 393, 394, 395, 406, 411], "similarli": [2, 21, 43, 98, 103, 115, 119, 137, 138, 144, 145, 209, 247, 289, 290, 306, 314, 411], "possess": [2, 62, 75], "unsqueez": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 154, 157, 160, 161, 199, 202, 215, 392, 395, 404, 405, 406], "move": [2, 4, 43, 62, 81, 115, 119, 120, 137, 138, 144, 145, 153, 164, 167, 183, 197, 200, 201, 203, 205, 207, 209, 218, 242, 287, 367, 392, 393, 395, 396, 410, 411], "unbind": [2, 48, 49, 50, 52, 53, 59, 60, 237, 241], "said": [2, 394], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 49, 59, 62, 91, 92, 160, 173, 184, 202, 309, 332, 334, 335, 388, 394, 404, 405, 406], "seen": [2, 18, 19, 20, 21, 30, 31, 37, 56, 115, 119, 137, 138, 144, 145, 388, 392, 393, 395, 398, 404, 405, 408], "predict": [2, 3, 43, 54, 231, 233, 243, 244, 275, 293, 298, 300, 305, 308, 310, 311, 315, 318, 320, 331, 387, 392, 393, 398], "deprec": [2, 23, 26, 28, 31, 33, 37, 38, 40, 42, 43, 46, 47, 66, 68, 115, 119, 137, 138, 144, 145, 201, 209, 212, 216, 279, 298, 300, 301, 303, 306, 307, 308, 314, 315, 318, 319, 320, 321, 330, 332, 333, 334, 335, 340, 411], "utmost": 2, "commonli": [2, 92, 99, 100, 411], "emploi": [2, 251], "languag": [2, 24, 54], "scarc": 2, "address": [2, 408], "subdomain": 2, "facilit": [2, 3, 7, 182, 183, 197, 203, 205, 270, 271, 272, 387, 392, 395, 397, 406], "extern": [2, 3, 166, 169, 404, 411], "token": [2, 50, 51, 54, 61, 63, 82], "dm": [3, 392, 411], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 49, 52, 59, 60, 63, 79, 96, 102, 105, 106, 108, 109, 111, 112, 115, 119, 123, 124, 125, 131, 132, 133, 137, 138, 144, 145, 146, 188, 197, 203, 204, 247, 249, 270, 280, 298, 299, 301, 302, 303, 305, 306, 307, 309, 314, 318, 319, 320, 321, 323, 324, 359, 369, 387, 388, 389, 392, 393, 395, 396, 397, 398, 400, 404, 405, 406, 408, 411], "goal": [3, 4, 73, 74, 75, 76, 77, 78, 79, 80, 81, 196, 392, 393, 394, 395, 405, 406], "abl": [3, 128, 139, 140, 237, 241, 392, 394, 395, 397, 403, 404, 405, 406, 408, 410], "experi": [3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 91, 92, 211, 354, 355, 356, 357, 358, 359, 386, 393, 394, 399, 400, 404, 405, 408], "box": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 118, 120, 249, 316], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 115, 116, 119, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 160, 163, 170, 176, 177, 179, 181, 186, 188, 191, 197, 200, 206, 207, 209, 350, 379, 392, 393, 394, 395, 403, 405, 407, 408, 410, 411], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 111, 112, 115, 119, 131, 137, 138, 144, 145, 164, 168, 170, 177, 183, 197, 200, 201, 203, 205, 209, 221, 222, 223, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 246, 247, 248, 249, 252, 257, 258, 266, 269, 270, 271, 272, 275, 276, 278, 279, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 295, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 379, 387, 388, 392, 393, 394, 395, 397, 398, 401, 403, 404, 405, 406, 407, 410], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 64, 94, 115, 119, 137, 138, 144, 145, 155, 156, 200, 206, 211, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 287, 288, 289, 291, 294, 316, 318, 393, 395, 399, 406, 408], "organis": [3, 80, 115, 119, 137, 138, 144, 145, 201, 393], "structur": [3, 7, 48, 49, 50, 52, 53, 54, 59, 60, 62, 63, 105, 115, 119, 137, 138, 144, 145, 166, 169, 219, 247, 282, 283, 298, 318, 332, 333, 334, 335, 336, 385, 388, 392, 394, 395, 396, 399, 404, 405, 406, 407], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 79, 115, 118, 119, 120, 137, 138, 144, 145, 153, 170, 183, 203, 207, 209, 237, 241, 288, 298, 299, 301, 302, 303, 305, 307, 308, 309, 312, 314, 316, 318, 319, 320, 321, 323, 324, 330, 392, 395, 406], "live": [3, 13, 14, 15, 16, 17, 19, 20, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 170, 209], "actual": [3, 4, 7, 48, 50, 53, 73, 75, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 206, 372, 388, 392, 394, 404, 405, 406], "retriev": [3, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 97, 115, 118, 119, 120, 137, 138, 144, 145, 161, 167, 170, 179, 218, 221, 222, 244, 281, 284, 288, 291, 295, 298, 299, 300, 301, 303, 315, 318, 319, 321, 323, 324, 330, 332, 333, 334, 335, 383, 389, 393, 394, 397, 406, 411], "care": [3, 8, 115, 119, 137, 138, 144, 145, 200, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 352, 392, 394, 404, 405, 406, 408], "parametr": [3, 251, 288, 299, 301, 306, 314, 321, 392, 394], "hardwar": 3, "observation_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 179, 181, 183, 185, 187, 191, 193, 195, 196, 197, 198, 199, 200, 202, 203, 206, 207, 209, 221, 237, 241, 244, 373, 379, 392, 394, 398, 403, 404, 405, 406, 411], "pair": [3, 43, 48, 50, 53, 75, 113, 114, 115, 119, 137, 138, 144, 145, 188, 197, 237, 270, 284, 288, 316, 332, 333, 334, 335, 336, 387, 388, 392, 393, 394, 397, 398, 403, 406, 411], "state_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 221, 244, 406, 411], "reward_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 157, 158, 163, 164, 166, 167, 169, 185, 189, 190, 191, 193, 200, 202, 209, 221, 244, 394, 404, 405, 406, 411], "done_spec": [3, 115, 119, 137, 138, 144, 145, 166, 167, 169, 170, 185, 200, 209, 219, 404, 405, 406, 411], "flag": [3, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 176, 282, 283, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 387, 404, 405, 406, 407], "input_spec": [3, 115, 119, 131, 137, 138, 144, 145, 153, 157, 164, 166, 167, 168, 179, 181, 185, 186, 191, 192, 195, 196, 197, 200, 201, 202, 204, 209, 394, 406], "full_action_spec": [3, 115, 119, 135, 136, 137, 138, 144, 145, 153, 221, 244, 394, 404, 405], "full_state_spec": [3, 115, 119, 137, 138, 144, 145, 153, 221, 244, 394], "lock": [3, 30, 31, 37, 48, 50, 53, 56, 115, 119, 137, 138, 144, 145, 157, 197, 207, 406], "output_spec": [3, 115, 119, 137, 138, 144, 145, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 201, 209, 406], "full_observation_spec": [3, 115, 119, 137, 138, 144, 145, 221, 244], "full_reward_spec": [3, 115, 119, 137, 138, 144, 145, 157, 167, 185, 404, 405], "full_done_spec": [3, 115, 119, 137, 138, 144, 145, 157, 167, 185, 219, 404, 405], "carri": [3, 21, 41, 63, 115, 119, 137, 138, 144, 145, 197, 316, 393, 395, 404, 405, 406, 408], "nontensorspec": [3, 385], "importantli": [3, 284, 288], "action_s": 3, "help": [3, 4, 43, 62, 115, 119, 137, 138, 144, 145, 170, 209, 298, 300, 315, 318, 320, 386, 388, 392, 393, 394, 395, 404, 405], "With": [3, 124, 125, 128, 196, 389, 393, 403, 404, 405, 408, 411], "necessarili": [3, 115, 119, 137, 138, 144, 145, 411], "present": [3, 43, 48, 49, 50, 52, 53, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 98, 115, 118, 119, 137, 138, 144, 145, 171, 188, 192, 197, 201, 209, 218, 219, 224, 225, 226, 227, 228, 234, 237, 239, 241, 251, 256, 281, 282, 283, 287, 288, 289, 290, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 383, 389, 392, 401, 403, 404, 405, 408, 410], "0s": [3, 73, 79, 197, 395], "step_and_maybe_reset": [3, 115, 119, 137, 138, 144, 145, 396], "done_kei": [3, 23, 34, 36, 44, 57, 83, 84, 90, 115, 119, 137, 138, 144, 145, 156, 160, 170, 188, 195, 209, 218, 404, 405], "assign": [3, 4, 14, 15, 17, 27, 43, 48, 50, 53, 64, 115, 119, 137, 138, 144, 145, 201, 209, 301, 302, 303, 305, 321, 394, 397, 404, 405, 408], "_reset": [3, 115, 119, 131, 137, 138, 144, 145, 154, 156, 157, 160, 166, 169, 176, 185, 219, 221, 244, 404], "data_": [3, 115, 119, 137, 138, 144, 145], "append": [3, 8, 11, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 137, 138, 144, 145, 156, 163, 164, 188, 197, 201, 206, 236, 237, 240, 241, 276, 285, 392, 393, 394, 395, 404, 405, 406, 407, 408, 410], "seed": [3, 14, 15, 16, 17, 21, 52, 59, 60, 80, 94, 115, 119, 131, 137, 138, 139, 140, 144, 145, 146, 147, 154, 157, 166, 169, 185, 201, 211, 350, 369, 404], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 217, 224, 233, 253, 260, 269, 279, 284, 287, 288, 291, 299, 316, 365, 387, 392, 393, 395, 397, 398, 401, 404, 406, 410, 411], "preced": [3, 43, 395], "risk": [3, 184], "overlap": [3, 59, 105], "reproduc": [3, 160, 211, 392, 394, 405], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 43, 48, 50, 51, 54, 61, 63, 64, 82, 86, 87, 88, 91, 92, 107, 115, 119, 137, 138, 144, 145, 168, 189, 195, 196, 198, 220, 263, 264, 265, 291, 299, 301, 306, 307, 314, 316, 317, 321, 352, 366, 392, 393, 394, 395, 397, 404, 405, 408], "max_step": [3, 11, 105, 115, 119, 129, 130, 131, 137, 138, 144, 145, 146, 147, 195, 209, 350, 396, 397, 398, 400, 401, 404, 405, 410, 411], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 111, 112, 115, 119, 131, 137, 138, 144, 145, 159, 177, 232, 237, 241, 244, 257, 258, 266, 267, 270, 271, 272, 274, 275, 276, 279, 281, 283, 284, 285, 286, 287, 289, 290, 291, 293, 295, 299, 301, 302, 306, 307, 309, 310, 311, 312, 314, 316, 319, 321, 323, 324, 330, 331, 332, 333, 334, 335, 365, 379, 385, 392, 394, 395, 398, 401, 403, 404, 405, 406, 407, 411], "trail": [3, 207], "treat": [3, 43, 388, 397, 398], "figur": [3, 392, 394, 395, 405, 406, 411], "brief": [3, 394, 396, 398, 408], "deliveri": 3, "design": [3, 43, 97, 103, 110, 115, 119, 129, 130, 137, 138, 144, 145, 153, 160, 184, 201, 209, 275, 298, 299, 300, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 392, 393, 394, 395, 396, 397, 398, 403, 404, 405, 406, 408, 411], "metaclass": 3, "everi": [3, 8, 30, 31, 37, 43, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 101, 115, 119, 137, 138, 144, 145, 195, 196, 207, 209, 215, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 247, 248, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 316, 369, 389, 392, 393, 394, 395, 396, 397, 404, 405, 406], "flank": [3, 395], "dual": 3, "strictli": [3, 8, 43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321, 392, 394], "refer": [3, 7, 8, 9, 11, 21, 24, 43, 54, 115, 118, 119, 120, 137, 138, 144, 145, 201, 207, 209, 221, 232, 233, 244, 245, 246, 247, 248, 249, 253, 254, 259, 260, 277, 298, 301, 308, 309, 310, 311, 318, 321, 332, 337, 345, 391, 392, 394, 397, 398, 399, 400, 404, 405, 408, 411], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 91, 92, 115, 119, 137, 138, 144, 145, 179, 183, 188, 190, 203, 205, 207, 209, 218, 223, 230, 245, 246, 247, 248, 250, 251, 255, 257, 263, 264, 265, 266, 287, 305, 307, 313, 319, 322, 345, 363, 365, 366, 374, 375, 377, 379, 380, 381, 382, 383], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 129, 130, 148, 392], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 79, 92, 99, 100, 385], "adjac": [3, 23, 173, 281], "reli": [3, 11, 23, 197, 235, 236, 237, 239, 240, 241, 298, 318, 388, 392, 394, 397, 399, 406, 411], "junction": 3, "inittrack": [3, 237, 241, 281, 392, 395], "tutori": [3, 138, 384, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 411], "scratch": [3, 8, 393, 406], "gym3": 3, "envpool": [3, 132, 133], "interfac": [3, 122, 134, 242, 250, 387, 388, 392, 394, 400, 406, 408], "simultan": [3, 20, 132, 133, 137, 144, 406], "advantag": [3, 8, 234, 298, 300, 315, 318, 320, 332, 333, 334, 335, 336, 337, 339, 341, 343, 345, 346, 348, 388, 389, 392, 393, 394, 395, 405, 406, 411], "scale": [3, 4, 24, 75, 115, 119, 137, 138, 144, 145, 160, 177, 179, 190, 196, 199, 207, 220, 233, 238, 252, 259, 260, 264, 265, 270, 271, 272, 284, 288, 290, 298, 299, 301, 314, 318, 319, 320, 321, 367, 373, 383, 387, 392, 393, 394, 395, 397, 405, 410], "varieti": [3, 11], "inherit": [3, 115, 119, 137, 138, 144, 145, 243, 247, 248, 316, 389, 394, 404, 405], "Of": [3, 7, 386, 406, 411], "cours": [3, 4, 386, 406, 411], "from_pixel": [3, 11, 111, 112, 113, 114, 118, 120, 121, 124, 125, 141, 160, 187, 350, 352, 392, 393, 395, 396, 400, 401, 407, 408, 410, 411], "81": [3, 393, 406], "simpli": [3, 6, 48, 50, 53, 63, 103, 105, 110, 171, 192, 206, 316, 387, 388, 392, 394, 398, 404, 405, 411], "d": [3, 49, 52, 59, 60, 76, 78, 80, 81, 82, 91, 92, 220, 235, 239, 284, 288, 410], "privat": [3, 115, 119, 137, 138, 144, 145, 206, 406, 411], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 39, 41, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 105, 300, 315, 318, 360, 362, 365, 369, 372, 373, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 54, 94, 97, 179, 190, 238, 250, 259, 264, 265, 330, 387, 397, 398, 404, 406, 408], "inner": [3, 115, 119, 137, 138, 144, 145, 168, 389, 393, 394, 405, 411], "logic": [3, 404], "kept": [3, 23, 98, 100, 168, 192, 200, 211, 218, 238, 264, 265, 398, 404], "mind": [3, 73, 79, 92, 99, 100, 115, 119, 137, 138, 144, 145, 404, 405], "desig": 3, "wherev": 3, "expos": [3, 141, 166, 169, 289, 393], "modif": [3, 5, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 173, 209, 219, 316, 388, 394, 406], "lost": [3, 8, 206], "eras": [3, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 45, 46, 47, 62, 64, 65, 66, 67, 68, 92, 99, 115, 119, 137, 138, 144, 145, 201], "intern": [3, 390], "face": [3, 5, 8, 9, 396, 411], "NOT": [3, 83, 84, 90, 184], "outsid": [3, 16, 388, 400, 404, 405, 406], "right": [3, 6, 7, 23, 54, 92, 99, 393, 394, 405, 406, 411], "preliminari": 3, "warranti": 3, "affect": [3, 8, 43, 115, 119, 137, 138, 144, 145, 200, 201, 209, 211, 332, 333, 334, 335, 404], "preclud": 3, "presenc": [3, 398], "annihil": 3, "reason": [3, 4, 8, 43, 79, 115, 119, 137, 138, 139, 140, 144, 145, 183, 203, 209, 241, 388, 392, 393, 394, 398, 399, 404, 406, 408], "advanc": [3, 21, 49, 52, 59, 60, 119, 396, 399, 408], "superse": 3, "pettingzoowrapp": [3, 385], "group": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 115, 119, 128, 129, 130, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 387, 393, 397, 399, 405, 408], "associ": [3, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 259, 383, 392, 408], "environemtn": 3, "__not__": [3, 284, 299, 301, 314, 319, 321, 323, 324], "constrain": [3, 177, 237, 241, 318], "li": 3, "fact": [3, 7, 8, 392, 394, 396, 404, 405, 406, 407, 408, 411], "know": [3, 4, 9, 49, 52, 59, 60, 118, 120, 273, 274, 316, 319, 365, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 408], "meaning": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "perfectli": [3, 389, 392, 406], "meaningless": 3, "val": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 398, 410], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 73, 115, 119, 137, 138, 144, 145, 156, 383, 387], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 161, 166, 168, 169, 170, 171, 173, 177, 178, 179, 181, 183, 185, 186, 188, 190, 191, 192, 195, 197, 199, 201, 202, 203, 205, 207, 209, 211, 215, 218, 219, 220, 221, 222, 223, 225, 226, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 264, 265, 269, 276, 277, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 330, 332, 333, 334, 335, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 359, 362, 363, 365, 366, 367, 369, 383, 393, 394, 395, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "500": [3, 392, 393, 406, 410, 411], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 73, 76, 137, 144], "bottleneck": [3, 8, 92, 99, 100], "great": [3, 7, 8, 404, 410], "speedup": [3, 8, 404, 411], "precis": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 166, 169, 218, 236, 240, 392, 394], "misspecifi": 3, "caus": [3, 7, 8, 86, 87, 107, 115, 119, 123, 137, 138, 144, 145, 184, 411], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 137, 138, 144, 145, 148, 160, 172, 178, 188, 196, 197, 198, 201, 209, 211, 273, 274, 278, 279, 282, 283, 301, 316, 321, 392, 394, 404, 405, 408, 411], "mismatch": [3, 393], "subprocess": [3, 14, 15, 17, 116, 137, 144], "multithreadedenv": [3, 385], "underneath": 3, "higher": [3, 4, 92, 163, 291, 392, 393, 394, 404, 408, 411], "flexibl": [3, 9, 132, 325, 388, 389, 392, 408, 411], "cover": [3, 118, 120, 386, 394, 396, 399, 400, 406, 410], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 31, 37, 43, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 81, 82, 94, 115, 119, 128, 131, 134, 137, 138, 139, 140, 144, 145, 157, 164, 166, 167, 170, 171, 177, 183, 185, 186, 192, 195, 197, 200, 201, 203, 205, 207, 209, 213, 217, 222, 223, 242, 247, 248, 251, 257, 266, 273, 274, 276, 284, 287, 288, 295, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 326, 330, 338, 350, 381, 385, 387, 392, 393, 394, 399, 404, 405, 406, 408, 411], "atari": [3, 4, 73, 160, 352, 400, 411], "classic": [3, 131, 140, 393], "benchmark_batched_env": 3, "seamlessli": [3, 406], "infrastructur": [3, 404, 405], "act": [3, 4, 99, 100, 139, 140, 201, 231, 248, 299, 301, 302, 314, 319, 321, 323, 324, 395, 404, 405, 408], "world": [3, 5, 131, 293, 310, 400, 404, 405, 406, 411], "paradigm": [3, 17, 405], "decpodp": 3, "game": [3, 4, 5, 73, 129, 130, 135, 136, 352, 400], "thank": [3, 392, 396], "carrier": [3, 394, 395, 396, 408], "particular": [3, 43, 63, 75, 76, 115, 119, 137, 138, 144, 145, 201, 209, 388, 389, 393, 395, 396, 403, 405, 408], "thu": [3, 315, 405], "let": [3, 6, 7, 11, 23, 43, 49, 52, 59, 60, 61, 115, 119, 137, 138, 139, 140, 144, 145, 160, 209, 237, 241, 247, 248, 276, 365, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "vma": [3, 146, 147, 350, 404, 405], "robot": [3, 5, 7, 79, 183, 203, 205, 405], "vmasenv": [3, 350, 385, 404, 405], "balanc": [3, 113, 114, 392, 393], "num_env": [3, 21, 118, 122, 133, 146, 147, 350, 404, 405], "n_agent": [3, 146, 147, 247, 248, 249, 257, 266, 330, 350, 404, 405], "ground_rew": 3, "pos_rew": [3, 405], "style": [3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81], "vari": [3, 118, 120, 121, 139, 140, 141, 146, 184, 405], "creation": [3, 137, 144, 411], "info_spec": [3, 137], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 33, 41, 42, 47, 111, 112, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 170, 185, 219, 232, 255, 258, 276, 277, 284, 285, 286, 303, 306, 307, 330, 385, 395, 404, 405, 411], "simpl": [3, 9, 43, 62, 115, 119, 137, 138, 144, 145, 209, 225, 281, 288, 303, 305, 316, 320, 332, 387, 388, 392, 393, 394, 396, 397, 398, 404, 405, 408, 411], "prefix": [3, 23, 43, 48, 50, 53, 63, 115, 119, 137, 138, 144, 145, 201, 209, 284, 301, 316, 321, 351, 395, 398, 411], "exactli": [3, 43, 115, 119, 121, 137, 138, 144, 145, 201, 209, 235, 239, 301, 321, 392, 395, 399, 404, 405], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 115, 119, 137, 138, 144, 145, 153, 154, 168, 210, 218, 221, 243, 244, 273, 274, 278, 279, 281, 282, 283, 404, 405], "reward_kei": [3, 34, 36, 44, 57, 83, 84, 90, 115, 119, 137, 138, 144, 145, 209, 218, 221, 244, 363, 367, 404, 405], "set_kei": [3, 170, 298, 300, 301, 303, 306, 307, 308, 314, 315, 316, 318, 319, 320, 321, 330, 336, 392, 404, 405], "awai": [3, 394, 396, 404, 405], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 39, 40, 41, 42, 45, 46, 47, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 176, 195, 288], "full": [3, 115, 119, 137, 138, 144, 145, 237, 241, 277, 360, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "autoresettransform": 3, "invalid": [3, 43, 105, 115, 119, 137, 138, 144, 145, 148, 209, 245, 246], "nan": [3, 156, 206], "auto_reset": [3, 115, 119, 137, 138, 144, 145, 156, 209, 406], "auto_reset_replac": [3, 156], "placehold": [3, 121, 170, 201], "set_gym_backend": [3, 115, 118, 119, 137, 138, 144, 145, 149, 156, 385, 396], "autoresettinggymenv": [3, 156], "_step": [3, 115, 119, 137, 138, 144, 145, 154, 156, 157, 166, 169, 173, 185, 186], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 37, 43, 48, 50, 53, 56, 115, 119, 131, 137, 138, 144, 145, 154, 156, 157, 164, 166, 169, 183, 185, 197, 200, 201, 203, 205, 209, 221, 232, 244, 247, 248, 257, 266, 273, 274, 278, 284, 287, 292, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 389, 392, 394, 406, 410, 411], "super": [3, 131, 154, 156, 157, 166, 169, 185, 221, 232, 244, 292, 299, 301, 302, 307, 314, 319, 321, 323, 324, 392, 406, 410, 411], "td_reset": [3, 156], "exclud": [3, 8, 75, 80, 115, 119, 137, 138, 144, 145, 156, 160, 171, 218, 257, 404, 405, 408], "r": [3, 4, 43, 153, 154, 156, 163, 179, 193, 207, 220, 236, 288, 297, 331, 350, 387, 393, 406, 411], "break_when_any_don": [3, 115, 119, 137, 138, 144, 145, 156, 209, 281, 405], "3633e": [3, 156], "02": [3, 115, 119, 137, 138, 144, 145, 156, 391, 392, 393, 395, 401, 404, 406, 407, 409], "4877e": [3, 156], "01": [3, 156, 179, 220, 282, 283, 294, 300, 315, 318, 391, 392, 393, 395, 405, 406, 407, 409], "2849e": [3, 156], "7584e": [3, 156], "6609e": [3, 156], "6166e": [3, 156], "8366e": [3, 156], "2761e": [3, 156], "5685e": [3, 156], "4102e": [3, 156], "8111e": [3, 156], "9959e": [3, 156], "0865e": [3, 156], "5644e": [3, 156], "2119e": [3, 156], "2542e": [3, 156], "03": [3, 115, 119, 137, 138, 144, 145, 156, 179, 391, 392, 393, 406, 407, 409], "9952e": [3, 156], "4059e": [3, 156], "2094e": [3, 156], "9009e": [3, 156], "5140e": [3, 156], "3554e": [3, 156], "2920e": [3, 156], "7893e": [3, 156], "6429e": [3, 156], "3057e": [3, 156], "2867e": [3, 156], "6963e": [3, 156], "3818e": [3, 156], "2576e": [3, 156], "2679e": [3, 156], "1640e": [3, 156], "00": [3, 111, 112, 156, 391, 392, 393, 395, 404, 405, 406, 407, 409], "6972e": [3, 156], "0212e": [3, 156], "5959e": [3, 156], "4637e": [3, 156], "3121e": [3, 156], "2168e": [3, 156], "5232e": [3, 156], "7704e": [3, 156], "7457e": [3, 156], "4127e": [3, 156], "1064e": [3, 156], "0854e": [3, 156], "5712e": [3, 156], "2189e": [3, 156], "5235e": [3, 156], "8289e": [3, 156], "0009e": [3, 156], "0257e": [3, 156], "8893e": [3, 156], "5872e": [3, 156], "9405e": [3, 156], "7766e": [3, 156], "0403e": [3, 156], "0626e": [3, 156], "2959e": [3, 156], "7263e": [3, 156], "2775e": [3, 156], "9564e": [3, 156], "0411e": [3, 156], "6769e": [3, 156], "6354e": [3, 156], "8698e": [3, 156], "1765e": [3, 156], "6292e": [3, 156], "5375e": [3, 156], "1820e": [3, 156], "7023e": [3, 156], "5836e": [3, 156], "9016e": [3, 156], "4826e": [3, 156], "6191e": [3, 156], "6387e": [3, 156], "8667e": [3, 156], "2056e": [3, 156], "1147e": [3, 156], "5991e": [3, 156], "0278e": [3, 156], "5219e": [3, 156], "3067e": [3, 156], "6617e": [3, 156], "3322e": [3, 156], "2629e": [3, 156], "4599e": [3, 156], "7298e": [3, 156], "5848e": [3, 156], "0148e": [3, 156], "5745e": [3, 156], "6982e": [3, 156], "7877e": [3, 156], "3527e": [3, 156], "7285e": [3, 156], "6668e": [3, 156], "0583e": [3, 156], "6956e": [3, 156], "3962e": [3, 156], "9845e": [3, 156], "5015e": [3, 156], "5903e": [3, 156], "9993e": [3, 156], "9418e": [3, 156], "0196e": [3, 156], "6557e": [3, 156], "2109e": [3, 156], "8997e": [3, 156], "1507e": [3, 156], "7363e": [3, 156], "0310e": [3, 156], "9574e": [3, 156], "8980e": [3, 156], "0090e": [3, 156], "forecast": 3, "awar": [3, 7, 86, 87, 88, 101, 103, 107, 237, 241, 393, 395], "detect": [3, 81, 316, 388], "return_contigu": [3, 115, 119, 137, 138, 144, 145, 211, 403], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 115, 117, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 170, 171, 172, 173, 176, 177, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 201, 206, 207, 209, 218, 219, 221, 237, 241, 243, 244, 273, 274, 275, 277, 278, 281, 282, 283, 286, 287, 288, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 334, 335, 336, 369, 392, 404, 406], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 30, 32, 43, 49, 54, 59, 64, 79, 91, 92, 94, 115, 119, 137, 138, 144, 145, 153, 156, 160, 164, 166, 169, 177, 179, 183, 188, 189, 190, 196, 197, 199, 200, 201, 203, 205, 207, 209, 220, 230, 233, 235, 238, 239, 242, 245, 246, 250, 251, 259, 260, 263, 265, 273, 274, 287, 291, 294, 296, 297, 298, 299, 300, 301, 305, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 331, 337, 338, 339, 340, 341, 342, 343, 344, 345, 367, 392, 393, 408, 411], "_set_se": [3, 154, 157, 166, 169, 185, 406], "lazystackedtensordict": [3, 56, 73, 115, 119, 131, 137, 138, 144, 145, 403], "float32": [3, 14, 15, 16, 27, 30, 34, 48, 49, 50, 53, 54, 57, 59, 60, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 92, 107, 111, 112, 115, 118, 119, 120, 124, 125, 131, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 179, 181, 185, 186, 188, 192, 195, 197, 199, 215, 218, 221, 231, 232, 237, 241, 244, 257, 258, 266, 269, 270, 271, 272, 275, 276, 281, 282, 283, 284, 285, 286, 287, 290, 292, 295, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 330, 387, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411], "exclusive_field": [3, 73, 403], "stack_dim": [3, 73, 403], "dramat": 3, "carefulli": [3, 404, 405, 411], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 209, 211, 269, 276, 277, 284, 285, 286, 287, 288, 299, 301, 314, 319, 321, 323, 324, 394, 404, 405], "plain": [3, 8, 396], "larg": [3, 4, 29, 48, 50, 53, 166, 169, 203, 298, 300, 315, 318, 320, 393, 394, 404, 405, 408], "expens": [3, 92, 99, 100, 350, 408], "absent": [3, 30, 31, 37, 56, 75, 115, 119, 137, 138, 144, 145, 201], "torchvis": [3, 11, 183, 205, 354, 404, 410, 411], "base_env": [3, 112, 115, 119, 120, 125, 136, 137, 138, 144, 145, 153, 154, 157, 163, 166, 168, 169, 177, 181, 185, 187, 193, 195, 197, 198, 201, 209, 352, 392, 393, 394, 404, 407, 410, 411], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 131, 137, 138, 144, 145, 152, 155, 157, 164, 170, 197, 201, 209, 222, 223, 242, 249, 297, 316, 350, 374, 375, 381, 382, 383, 393, 408], "bring": [3, 394, 396, 411], "signific": [3, 5, 8, 394, 411], "kind": [3, 52, 62, 218, 398, 404, 408], "consult": 3, "interest": [3, 284, 288, 387, 393, 394, 396, 405, 406, 411], "resize_par": 3, "easi": [3, 5, 11, 73, 78, 113, 114, 115, 119, 124, 125, 137, 138, 144, 145, 273, 274, 278, 279, 282, 283, 387, 388, 392, 393, 394, 405, 407, 408, 411], "graph": [3, 4, 8, 111, 112, 124, 125, 328, 329, 392, 406], "revers": [3, 239], "order": [3, 11, 16, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 100, 115, 119, 137, 138, 144, 145, 161, 166, 169, 181, 201, 209, 269, 276, 287, 289, 290, 292, 298, 299, 301, 302, 306, 307, 314, 318, 319, 320, 321, 323, 324, 393, 404, 405], "chain": [3, 48, 49, 50, 52, 53, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 164, 168, 222, 223, 290, 411], "invers": [3, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 160, 166, 169, 171, 179, 188, 209, 296, 306, 314, 406], "in_keys_inv": [3, 150, 163, 166, 167, 169, 179, 180, 181, 185, 186, 188, 193, 200, 392, 403, 406, 411], "append_transform": [3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 150, 153, 159, 183, 197, 201, 203, 207, 237, 241, 350, 392, 395, 404, 406, 408, 410, 411], "doubletofloat": [3, 392, 394, 403], "float64": [3, 43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 113, 114, 115, 119, 129, 130, 137, 138, 144, 145, 153, 164, 166, 169, 183, 197, 200, 201, 203, 205, 209, 287, 403], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 118, 119, 120, 137, 138, 144, 145, 166, 169, 170, 191, 201, 209, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 350, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 389, 392, 394, 396, 408], "manipul": [3, 4, 8, 113, 114, 183, 203], "third_transform": 3, "unexpect": [3, 43, 115, 119, 137, 138, 144, 145, 209, 411], "behviour": 3, "fortun": [3, 395, 396, 397, 400], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 73, 86, 115, 119, 137, 138, 144, 145, 197, 209, 219, 288, 332, 333, 334, 335, 392, 394, 400, 404, 405], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 86, 87, 88, 92, 98, 99, 101, 103, 107, 115, 119, 137, 138, 144, 145, 157, 164, 166, 167, 169, 171, 177, 185, 186, 192, 195, 200, 201, 207, 209, 239, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 388, 392, 395, 404, 405, 406, 407, 408, 411], "catfram": [3, 281, 393], "hold": [3, 328, 329, 406, 408], "notic": [3, 105, 160, 394, 401, 406], "parenthood": 3, "henc": [3, 49, 184, 219, 247, 387, 392, 394, 404, 405, 406], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 137, 144, 350, 406], "discret": [3, 25, 26, 27, 29, 30, 33, 39, 40, 41, 42, 47, 64, 67, 68, 115, 118, 119, 120, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 168, 255, 258, 305, 306, 307, 308, 387, 393, 394, 397, 404, 405, 406, 411], "might": [3, 48, 50, 51, 53, 356, 386, 392, 396, 411], "action_mask": [3, 124, 125, 139, 140, 142, 143, 154], "unavail": [3, 139, 140], "probabl": [3, 4, 8, 54, 94, 97, 230, 232, 235, 237, 239, 241, 242, 245, 246, 255, 264, 265, 278, 284, 288, 301, 387, 393, 397, 410], "probabilistictensordictmodul": [3, 177, 288, 289, 410], "tensordictsequenti": [3, 237, 241, 276, 278, 281, 282, 289, 295, 387, 392, 393, 395, 397, 401, 403, 404, 407, 410], "maskedcategor": [3, 246, 385], "linear": [3, 14, 15, 16, 17, 21, 43, 111, 112, 115, 119, 131, 137, 138, 144, 145, 164, 177, 183, 197, 200, 201, 203, 205, 209, 221, 222, 223, 225, 226, 227, 228, 232, 234, 242, 244, 247, 248, 250, 251, 252, 258, 259, 260, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 292, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 379, 387, 393, 403, 407, 410], "in_feat": 3, "out_feat": 3, "logit": [3, 50, 54, 231, 245, 246, 255, 277, 284, 306, 307, 387], "dist": [3, 10, 245, 246, 255, 394, 397], "distribution_class": [3, 177, 270, 271, 272, 275, 284, 288, 290, 298, 299, 301, 306, 307, 314, 318, 319, 320, 321, 387, 392, 394, 397, 404, 405, 410], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 77, 111, 112, 115, 119, 120, 124, 125, 130, 133, 135, 136, 137, 138, 139, 140, 144, 145, 147, 209, 211, 237, 241, 267, 270, 271, 272, 274, 279, 281, 283, 285, 293, 316, 330, 387, 392, 393, 394, 395, 398, 401, 404, 405, 411], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 154, 184, 209], "enviorn": [3, 129, 139, 140, 146, 147], "itself": [3, 43, 115, 119, 137, 138, 144, 145, 149, 156, 209, 316, 323, 394, 396], "ey": 3, "report": [3, 111, 112, 124, 125, 400], "foremost": 3, "callback": [3, 115, 119, 137, 138, 144, 145, 405], "ad": [3, 4, 16, 23, 43, 49, 52, 59, 60, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 115, 119, 137, 138, 144, 145, 191, 201, 209, 220, 250, 251, 282, 283, 298, 300, 301, 303, 308, 315, 318, 321, 330, 393, 395, 397, 404, 408, 411], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 60, 91, 92, 98, 191, 207, 209, 281, 282, 283, 357, 362, 393, 395, 396, 399, 405, 406, 408], "tensordictrecord": [3, 385], "videorecord": [3, 11, 350, 385, 394, 400, 401, 404], "csvlogger": [3, 11, 350, 352, 385, 393, 400, 401, 404], "wandblogg": [3, 385, 400], "tensorboardlogg": [3, 379, 385, 400], "tag": [3, 7, 11, 350, 352, 354, 357, 383, 400, 401, 404], "mp4": [3, 350, 352, 354, 401, 404], "video_format": [3, 350, 352, 354, 401, 404], "whc": 3, "cwh": 3, "exp": [3, 252, 297], "al": [3, 24, 118, 120, 170, 181, 221, 411], "pong": [3, 73, 133, 181, 411], "v5": [3, 118, 120, 133, 170, 181, 411], "cach": [3, 48, 50, 63, 73, 75, 76, 77, 79, 80, 81, 82, 92, 99, 115, 119, 137, 138, 144, 145, 156, 166, 169, 183, 201, 205, 218, 361, 407], "grow": 3, "until": [3, 7, 21, 198, 200, 209, 394, 395, 401, 404, 405], "dumpi": 3, "tediou": [3, 396], "workspac": [3, 115, 119, 137, 138, 144, 145], "pixelrendertransform": [3, 385, 404], "stream": [3, 79], "alik": [3, 350], "envcreat": [3, 16, 22, 137, 144, 350, 379, 380, 383, 385, 392, 393, 410, 411], "render_mod": [3, 350, 406], "rgb_arrai": [3, 350, 404, 405, 406], "uncom": [3, 400], "line": [3, 7, 43, 73, 115, 119, 137, 138, 144, 145, 209, 393, 394, 400, 404, 405, 411], "comment": [3, 389, 393, 410], "pixels_record": [3, 350], "close": [3, 16, 119, 132, 177, 298, 300, 315, 318, 350, 392, 393, 394, 396, 403, 404, 406, 410], "mission": 3, "irrespect": [3, 287, 288], "dmcontrol": [3, 115, 119, 137, 138, 144, 145], "jumanji": [3, 115, 119, 124, 125, 137, 138, 144, 145], "special": [3, 65, 67, 385, 387, 392, 395, 411], "framework": [3, 4, 9, 22, 111, 112, 115, 119, 124, 125, 131, 137, 138, 144, 145, 235, 410, 411], "Its": [3, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 207, 209, 287, 336], "success": [3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 160, 200, 278, 301, 323, 393, 399, 401, 406, 408, 410], "foundat": [3, 5, 139, 140, 394, 405], "inspir": [3, 406], "gone": [3, 4, 5, 281], "hard": [3, 7, 105, 113, 114, 137, 313, 393, 411], "prefer": [3, 14, 15, 17, 20, 23, 24, 49, 52, 59, 60, 184, 192, 318, 323, 366, 387, 394, 404, 405, 408], "maintain": [3, 5, 9, 32, 406], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 393, 394, 395, 399, 404, 405, 406, 408, 411], "decor": [3, 8, 12, 152, 316, 332, 333, 334, 335, 410], "relev": [3, 54, 332, 333, 334, 335, 336, 359, 406], "gym_backend": [3, 152, 385], "env1": [3, 403], "venv": 3, "python3": [3, 6, 7, 10, 394, 411], "site": [3, 6, 7, 80, 152, 394, 411], "env2": [3, 403], "_env": [3, 6, 118, 411], "classic_control": 3, "pendulumenv": [3, 385, 406], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 127, 149], "handi": [3, 115, 119, 137, 138, 144, 145, 400], "side": [3, 4, 411], "v0": [3, 14, 15, 115, 119, 121, 124, 125, 126, 127, 137, 138, 144, 145, 164, 201, 207, 379, 411], "26": [3, 115, 119, 137, 138, 144, 145, 393, 405, 406, 407], "fun": [3, 12, 152, 394, 404, 405], "reveal": 4, "bug": [4, 410], "curv": 4, "exploit": [4, 397], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 177, 404, 405, 407], "coeffici": [4, 24, 32, 54, 177, 405], "bonu": [4, 298, 300, 315, 318], "beta": [4, 49, 59, 91, 92, 306, 314, 315, 392, 393, 408, 410], "reduc": [4, 6, 29, 105, 196, 220, 264, 385, 393, 404], "downstream": [4, 388, 392], "formul": [4, 404, 405], "ob": [4, 8, 23, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 99, 100, 105, 115, 119, 137, 138, 144, 145, 154, 156, 166, 167, 169, 179, 193, 199, 215, 218, 225, 226, 227, 228, 247, 248, 249, 285, 292, 299, 301, 302, 307, 314, 319, 321, 323, 324, 332, 333, 334, 335, 393, 403, 404, 406, 408, 410, 411], "rate": [4, 11, 73, 207, 331, 393, 394, 404, 405], "gradient": [4, 43, 115, 119, 137, 138, 144, 145, 201, 209, 238, 246, 251, 255, 264, 265, 298, 300, 301, 302, 306, 307, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 331, 332, 333, 334, 335, 369, 392, 394, 404, 405, 406], "easier": [4, 387, 392], "local": [4, 7, 10, 16, 21, 43, 92, 99, 115, 119, 137, 138, 144, 145, 201, 209, 247, 248, 257, 266, 330, 357, 359, 400, 401, 404, 405], "optima": 4, "sens": [4, 48, 50, 53, 399, 406], "product": [4, 9, 235, 236, 239, 240, 381, 382], "sum": [4, 21, 41, 105, 111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 159, 191, 245, 246, 264, 266, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324, 331, 338, 388, 392, 393, 394, 395, 398, 401, 404, 405, 406, 411], "stat": [4, 179, 207, 373, 383, 393, 394], "w": [4, 94, 135, 136, 160, 162, 165, 187, 199, 235, 282, 283, 352, 393, 395, 408], "yield": [4, 14, 15, 16, 21, 43, 115, 119, 137, 138, 144, 145, 209, 316, 392, 398], "insight": 4, "auxiliari": [4, 398], "credit": 4, "futur": [4, 23, 43, 48, 50, 53, 83, 84, 90, 115, 119, 137, 138, 144, 145, 183, 201, 205, 209, 242, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 386, 410], "past": [4, 281, 393, 408], "spars": [4, 395], "intermedi": [4, 14, 15, 159, 237, 241, 277, 392, 407], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 392], "discov": 4, "score": [4, 54], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 410], "select": [4, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 129, 130, 139, 140, 146, 147, 154, 156, 157, 159, 160, 161, 164, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 203, 204, 206, 207, 209, 210, 221, 237, 241, 276, 285, 368, 392, 396, 408], "explicit": [4, 12, 63, 94, 408], "mechan": [4, 43, 115, 119, 137, 138, 144, 145, 201, 209, 393, 398, 406], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 115, 119, 137, 138, 144, 145, 239, 306, 314, 394, 405], "addition": 4, "timestep": [4, 54, 75, 188, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 404, 405], "realli": 4, "huge": [4, 248, 395], "std": [4, 179, 207, 252, 256, 273, 274, 392, 411], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 391, 395, 396, 398, 399, 400, 401, 402, 403, 407, 408, 409], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 115, 119, 135, 136, 137, 138, 144, 145, 159, 179, 183, 197, 200, 201, 203, 208, 209, 220, 221, 235, 236, 239, 240, 244, 247, 248, 249, 250, 251, 273, 274, 278, 279, 281, 282, 283, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 330, 383, 387, 388, 392, 393, 395, 396, 397, 399, 404, 406, 411], "estim": [4, 73, 92, 99, 100, 170, 177, 225, 264, 270, 271, 272, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "unseen": 4, "extrins": 4, "wrong": [4, 92, 99], "bonus": 4, "denser": 4, "prior": [4, 260, 310, 405], "freshli": 4, "drop": [4, 98, 100, 218], "meant": [4, 43, 131], "encourag": [4, 137, 392, 393, 408], "measur": [4, 86, 87, 107, 111, 112, 124, 125, 394, 399], "novelti": 4, "revisit": 4, "previous": [4, 394, 411], "diminish": 4, "decreas": [4, 24, 397], "ideal": [4, 179, 406], "down": [4, 14, 15, 16, 17, 388, 395, 396], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 48, 50, 53, 56, 393, 394, 395, 398, 399, 404, 405, 406, 410, 411], "distil": 4, "nois": [4, 208, 251, 268, 282, 283, 319, 323, 324, 365, 383, 392, 404], "exploratori": [4, 298, 300, 315, 318], "misalign": 4, "trade": [4, 397], "unavoid": 4, "divers": [4, 137, 144], "bootstrap": [4, 308, 333, 339, 340, 392, 395], "noisi": [4, 250, 251, 268, 387], "unstabl": [4, 238, 264, 265], "inher": [4, 298, 318], "stochast": [4, 177, 233, 251, 253, 260, 299, 301, 304, 306, 307, 312, 314, 317, 319, 321, 387, 394, 397, 405], "enemi": 4, "pomdp": [4, 408], "loos": [4, 387, 393, 394], "nonexist": 4, "architectur": [4, 229, 398, 404, 405], "sequenc": [4, 14, 15, 16, 17, 24, 30, 31, 37, 39, 41, 49, 51, 52, 54, 56, 61, 63, 79, 82, 85, 94, 95, 97, 103, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 150, 158, 159, 160, 161, 162, 165, 166, 168, 169, 173, 175, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 196, 198, 199, 200, 207, 222, 223, 230, 232, 235, 239, 242, 245, 246, 247, 248, 255, 258, 262, 275, 289, 290, 304, 351, 352, 364, 365, 366, 368, 369, 387, 392, 394, 395, 403, 404, 405, 411], "lstm": [4, 197, 240, 241, 252], "rel": [4, 94, 197, 230, 263, 392, 393, 404, 405, 408], "tend": 4, "stabl": [4, 9, 10, 134], "compens": 4, "descent": [4, 251], "minimum": [4, 64, 137, 144, 189, 233, 252, 263, 264, 265, 291, 294, 297, 299, 301, 307, 316, 317, 321, 360, 392, 394, 401, 404, 405], "manual": [4, 11, 18, 20, 21, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 119, 120, 392, 395, 408], "deviat": [4, 179, 207, 221, 233, 244, 250, 251, 256, 273, 274, 318, 323, 324, 392, 397, 405], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 92, 99, 156, 235, 236, 239, 240, 396, 397, 398, 399, 400, 401], "stabil": [4, 174, 298, 300, 315, 318, 320], "stage": [4, 392, 406], "never": [4, 14, 15, 17, 27, 64, 92, 399], "prevent": [4, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 47, 56, 84, 207, 238, 264, 265, 298, 300, 315, 318, 320, 367, 400, 408], "entir": [4, 79, 115, 119, 137, 138, 144, 145, 247, 394, 396, 406, 408], "submit": [4, 118, 157, 386, 410], "system": [4, 5, 84, 394, 404, 405, 406], "adequ": [4, 211, 394, 404, 405], "infeas": 4, "allevi": [4, 387], "prune": 4, "fire": [4, 43, 115, 119, 137, 138, 144, 145, 209], "illeg": 4, "chess": [4, 135, 136], "grasp": 4, "top": [4, 105, 111, 112, 124, 125, 165, 221, 244, 397], "wherein": 4, "cumul": [4, 191, 196, 221, 338, 394], "q": [4, 9, 115, 119, 137, 138, 144, 145, 225, 226, 227, 228, 231, 232, 234, 257, 258, 266, 272, 277, 285, 286, 299, 301, 302, 303, 305, 306, 307, 308, 313, 314, 319, 321, 323, 324, 330, 385, 392, 398], "flow": [4, 392, 394, 404, 405, 406, 408], "reparameter": [4, 230, 246, 255], "soft": [4, 313, 321, 322, 404], "critic": [4, 8, 270, 280, 298, 300, 301, 302, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 392, 398], "clip": [4, 54, 163, 189, 298, 300, 315, 318, 320, 323, 324, 369, 394, 405, 406], "oppos": [4, 63], "incorrect": 4, "thought": [4, 115, 119, 137, 138, 144, 145], "region": 4, "squash": [4, 395, 410], "tanh": [4, 222, 223, 235, 236, 238, 239, 240, 242, 248, 263, 264, 265, 291, 394, 397, 404, 405, 406, 407, 410], "prob": [4, 245, 246, 255, 394, 405], "rememb": [4, 404], "remap": 4, "origin": [4, 8, 48, 50, 53, 54, 123, 167, 168, 177, 183, 201, 205, 209, 235, 284, 287, 288, 299, 301, 313, 314, 316, 318, 319, 321, 323, 324, 392, 403, 406, 411], "histor": 5, "ceas": 5, "farama": [5, 77, 126, 127, 139, 140, 394, 406], "best": [5, 9, 123, 237, 241, 404, 405, 408, 410], "gymwrapp": [5, 115, 119, 137, 138, 144, 145, 171, 192, 195, 206, 385, 394, 410, 411], "feel": [5, 386, 401, 410], "free": [5, 7, 166, 169, 298, 310, 318, 389, 394, 401, 405, 410], "gladli": 5, "prepar": [6, 36, 76, 394], "conda": [6, 7, 386], "cmake": 6, "activ": [6, 7, 9, 222, 223, 229, 233, 242, 247, 248, 300, 315, 318, 387, 406, 410], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 76, 386], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 121], "y": [6, 7, 52, 134, 234, 247, 267, 392, 405, 408], "facebookresearch": [6, 76, 121], "subdirectori": 6, "verbos": [6, 401], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 70, 115, 119, 137, 138, 144, 145, 185, 194, 209, 316, 404, 405, 410, 411], "command": [6, 7, 10, 145, 394, 404, 405, 406, 411], "readm": [6, 7, 146], "md": [6, 7], "habitatenv": [6, 385], "_has_habitat": 6, "available_env": [6, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 129, 130, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 411], "startswith": [6, 388, 392, 398], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 116, 316, 392], "env_nam": [6, 111, 113, 115, 118, 119, 121, 124, 126, 132, 137, 138, 141, 144, 145, 392, 394, 411], "llvmlite": 6, "config": [6, 7, 183, 205, 224, 229, 256, 373, 374, 375, 377, 380], "var": [6, 7, 43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 316, 321], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 276, 316], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 316, 321, 408], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 115, 393, 401], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 75], "stand": [7, 35, 113, 114, 137, 144, 403, 406], "joint": [7, 393], "contact": [7, 51, 404], "engin": [7, 141, 406], "biomechan": 7, "graphic": 7, "anim": [7, 405], "area": 7, "demand": [7, 400, 411], "fast": [7, 9, 111, 112, 186, 218, 319, 392, 393, 394], "articul": 7, "acquir": [7, 394], "deepmind": [7, 8, 9, 79, 113, 114, 115, 119, 129, 130, 135, 136, 137, 138, 144, 145, 170, 394, 396], "whomev": 7, "licenc": 7, "incorpor": [7, 115, 119, 137, 138, 144, 145, 273, 274, 278, 279, 282, 283, 323, 395, 397, 406], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 386], "tip": [7, 386], "glfw": [7, 392], "osmesa": 7, "egl": 7, "advic": [7, 79, 411], "sudo": [7, 386], "apt": [7, 405], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 270, 271, 272], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 392, 394, 395, 404, 405, 408], "roboti": 7, "html": [7, 14, 15, 132, 134, 135, 136], "wget": 7, "mujoco210": 7, "tar": [7, 76], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 137, 144], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 48, 50, 63, 82], "bin": [7, 232, 277, 387], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 228, 284, 288, 392, 394, 408], "nvidia": [7, 123], "older": [7, 12], "hack": [7, 392], "adatp": 7, "script": [7, 76, 211, 379, 383, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "unnot": [7, 184], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 84, 393, 408], "troubleshoot": 7, "gl": 7, "h": [7, 94, 160, 162, 165, 187, 199, 235, 236, 237, 239, 240, 241, 244, 352, 393, 395, 408], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 33, 41, 42, 47], "directori": [7, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 86, 357, 359, 389, 392, 397, 400, 404], "devel": 7, "ubuntu": [7, 123], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 393, 395, 403], "libstdc": 7, "glibcxx_3": 7, "29": [7, 393, 406], "compil": [7, 23, 43, 92, 99, 100, 115, 119, 137, 138, 144, 145, 209, 235, 236, 239, 240], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 206, 394, 403], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 178, 201, 209, 301, 321, 388, 411], "job": [7, 18, 19, 20, 22, 52, 59, 60, 94, 408, 410], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 111, 112, 393, 406, 407], "114": [7, 406], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 406], "offscreenopenglcontext": 7, "opengl": [7, 404, 405], "global": [7, 43, 52, 59, 60, 94, 115, 119, 137, 138, 139, 140, 144, 145, 209, 257, 266, 284, 288, 330, 389, 392, 404, 405], "cuda_visible_devic": 7, "id": [7, 23, 54, 92, 94, 99, 100, 115, 118, 119, 137, 138, 144, 145, 282, 283, 301, 319, 355, 359, 399, 408], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 404], "onscreen": 7, "101": [7, 406], "correctli": [7, 43, 115, 119, 137, 138, 144, 145, 209], "lgl": 7, "libegl": 7, "x11": [7, 405], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 389], "n_training_step": 8, "datapoint": [8, 63, 408], "n_data_per_train": 8, "no_grad": [8, 43, 115, 119, 137, 138, 144, 145, 177, 209, 235, 236, 239, 240, 332, 333, 334, 335, 394, 395, 405], "loss_fn": [8, 395, 398, 399, 410], "zero_grad": [8, 43, 115, 119, 137, 138, 144, 145, 209, 389, 392, 394, 395, 398, 401, 404, 405, 406], "backpropag": [8, 111, 112, 124, 125, 137, 298, 299, 300, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 330, 398, 405, 406], "differenti": [8, 63, 111, 112, 177, 301, 323, 332, 333, 334, 335, 395, 397, 398, 404, 405, 406], "denomin": 8, "artifact": 8, "numer": [8, 52, 119, 207, 238, 264, 265, 269, 276, 277, 284, 285, 286, 287, 288, 367, 394, 408, 411], "misconcept": 8, "freed": 8, "appear": [8, 11, 27, 64, 73, 79, 92, 99, 100, 406, 408], "compuat": 8, "fix": [8, 32, 137, 197, 299, 301, 317, 321, 393, 401, 406, 411], "retain_graph": [8, 111, 112], "discuss": [8, 9, 399, 404, 405], "inplac": [8, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 392], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 203, 204, 206, 207, 209, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 247, 248, 249, 250, 252, 253, 254, 256, 257, 259, 260, 262, 266, 267, 273, 274, 275, 277, 278, 281, 282, 283, 284, 286, 287, 288, 291, 292, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 330, 332, 333, 334, 335, 336, 388, 394, 406, 410], "submodul": [8, 43, 115, 119, 137, 138, 144, 145, 149, 197, 209, 237, 241, 295, 316], "param": [8, 43, 54, 115, 119, 131, 137, 138, 144, 145, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209, 230, 232, 247, 248, 249, 263, 275, 284, 287, 290, 316, 326, 329, 332, 333, 334, 335, 336, 392, 401, 404, 405, 406, 407, 410], "grad": [8, 43, 111, 112, 115, 119, 137, 138, 144, 145, 209, 392, 394], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 252, 257, 287], "factor": [8, 11, 24, 43, 188, 209, 220, 238, 251, 264, 265, 273, 274, 278, 279, 282, 283, 299, 305, 308, 309, 311, 322, 338, 392, 393, 397, 401, 404, 405, 408, 411], "fit": [8, 12, 179, 197, 388, 389, 392], "bottlneck": 8, "brax": [8, 111, 112, 115, 119, 137, 138, 144, 145, 186, 396, 411], "jax": [8, 12, 111, 112, 124, 125], "improperli": 8, "underli": [8, 115, 119, 137, 138, 144, 145, 316, 396, 398, 400, 406], "tedeiou": 8, "priorit": [8, 49, 59, 91, 92, 301, 302, 303, 305, 306, 307, 314, 319, 321, 323, 324, 392, 393, 399], "amount": [8, 282, 283, 393, 408], "costli": [8, 406], "constitut": [8, 393, 405, 406], "profil": 8, "frequent": [8, 408], "program": [8, 306, 314, 411], "functorch": [8, 10], "incl": 8, "suit": [8, 114, 394, 396, 410, 411], "mujoco_instal": 8, "valueerror": [8, 43, 115, 119, 137, 138, 144, 145, 209], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 98, 181, 410, 411], "idea": [9, 319, 389, 395, 397, 404, 405], "introductori": 9, "intro": [9, 394, 395], "dai": [9, 410], "2022": [9, 10, 406, 410], "spin": [9, 113, 114], "deep": [9, 160, 225, 226, 227, 228, 231, 282, 283, 298, 301, 313, 321, 322, 392, 404], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 397], "summari": [9, 179, 207, 392, 393, 394, 395], "reddit": 9, "reagent": 9, "orient": [9, 81, 411], "baselines3": 9, "tf": 9, "bandit": [9, 134], "tensorflow": [9, 245, 246], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 401], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 410], "grade": 9, "factori": [9, 61, 392], "cherri": 9, "jaxrl": 9, "mbrl": [9, 131, 387], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 406], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 394, 395, 404, 405], "notebook": [10, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "24": [10, 80, 100, 118, 132, 133, 281, 392, 393, 395, 404, 406], "pip3": [10, 392, 394, 395, 404, 405], "url": [10, 121], "org": [10, 14, 15, 24, 49, 76, 77, 79, 81, 91, 92, 111, 112, 113, 114, 121, 124, 125, 129, 130, 132, 133, 134, 141, 146, 147, 160, 183, 203, 220, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 244, 245, 246, 251, 253, 254, 257, 259, 260, 266, 277, 282, 283, 298, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 317, 318, 320, 321, 322, 323, 332, 337, 345, 384, 402, 407], "whl": 10, "u": [10, 78, 235, 236, 239, 240, 406], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 394, 404, 405, 406, 408], "power": [11, 393], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 385], "ultim": [11, 238, 264, 265], "ffmpeg": 11, "whatev": [11, 388, 392], "fed": [11, 405, 408], "feed": [11, 183, 205, 316, 387, 392, 404, 405, 408], "suppos": [11, 137, 365, 389, 411], "snippet": [11, 183, 203, 392], "gave": 11, "extrem": [11, 137, 144, 298, 300, 315, 318, 320], "blurri": 11, "stitch": 11, "exp_nam": [11, 352, 353, 354, 357, 358, 359, 379, 393, 400, 401], "my_exp": [11, 400], "pixels_onli": [11, 113, 114, 118, 120, 121, 141, 392, 393, 400, 401, 410, 411], "my_video": [11, 400], "record_env": [11, 400, 401], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 272, 387], "module_nam": [12, 316], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 91, 92, 94, 105, 111, 113, 114, 115, 117, 118, 119, 120, 121, 124, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 156, 160, 170, 176, 177, 183, 187, 195, 196, 201, 203, 205, 206, 207, 209, 212, 216, 219, 221, 231, 232, 237, 241, 243, 244, 247, 248, 249, 250, 251, 252, 257, 258, 266, 269, 276, 277, 284, 285, 286, 287, 288, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 330, 331, 332, 333, 334, 335, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 373, 377, 383, 393, 394], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 237, 241, 410], "longer": [12, 393, 401, 404, 405, 408], "x": [12, 23, 43, 52, 54, 79, 100, 177, 199, 220, 223, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 247, 248, 267, 276, 284, 285, 294, 297, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 369, 392, 404, 406, 408, 410], "23": [12, 80, 100, 391, 392, 393, 399, 404, 406, 409], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 80, 111, 112, 119, 124, 125, 240, 297, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 392, 393, 394, 395, 401, 404, 405, 406, 408, 411], "classmethod": [12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 203, 224, 256], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 43, 45, 46, 48, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 68, 80, 84, 92, 99, 100, 115, 116, 117, 118, 119, 120, 129, 130, 132, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 177, 197, 201, 206, 207, 209, 222, 223, 224, 225, 226, 227, 228, 229, 234, 242, 256, 284, 288, 301, 321, 356, 357, 365, 374, 375, 381, 382, 383, 392, 393, 394, 408, 411], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 116, 137, 144, 392, 410], "device_typ": [14, 16, 17, 25, 29, 39, 45, 222, 223, 224, 225, 226, 227, 228, 234, 242, 247, 248, 250, 251, 256], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 393], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 393], "create_env_kwarg": [14, 15, 16, 17, 21, 116, 132, 137, 144, 392, 411], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 43, 188, 393, 408], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 284, 316, 365, 392, 393, 394, 395, 397, 404, 410], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 213, 217, 284, 288, 365], "exploration_mod": [14, 16, 17, 18, 19, 20, 385, 387], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 48, 50, 53, 137, 144], "num_sub_thread": [14, 15, 17, 137, 144], "set_trunc": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145], "use_buff": [14, 15, 16, 137, 144], "replay_buffer_chunk": 14, "datacollector": [14, 15, 16, 17, 43, 288, 318, 394, 399, 408], "recept": 14, "safe": [14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 269, 274, 276, 277, 283, 284, 285, 286, 287, 288, 290, 387, 410], "sota": [14, 15, 131, 174, 320, 360, 374, 392, 393, 410], "guard": [14, 15], "doc": [14, 15, 61, 121, 124, 125, 134, 141, 359, 393, 394, 404, 405, 408, 411], "env_mak": [14, 15, 16, 21, 379, 411], "2000": [14, 15, 16, 43, 63, 122, 352, 408], "50": [14, 15, 16, 21, 51, 54, 73, 81, 99, 100, 129, 130, 209, 391, 393, 395, 397, 404, 405, 406, 407, 408, 409], "shutdown": [14, 15, 16, 17, 21, 157, 392, 410], "del": [14, 15, 16, 392, 393, 394, 403, 404, 410, 411], "int64": [14, 15, 16, 23, 25, 26, 29, 33, 34, 39, 40, 41, 42, 47, 48, 50, 51, 53, 54, 57, 59, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 115, 119, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 153, 157, 170, 181, 188, 195, 232, 258, 276, 277, 282, 283, 284, 285, 286, 387, 394, 395, 396, 397, 399, 400, 406, 408, 410], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 159, 267, 276, 281, 285, 395], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 63], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 393], "divis": [14, 15, 16, 17, 18, 19, 20, 73, 79, 92, 99, 100, 220, 405], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 119, 156, 197, 206, 241, 395, 406, 407], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 371, 393], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 82, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 164, 166, 169, 177, 183, 197, 200, 201, 203, 205, 207, 209, 287, 404, 411], "span": [14, 15, 16, 17, 18, 19, 20, 21, 79, 92, 99], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 43, 209, 281, 393, 394, 404, 405], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 54, 359, 387, 404, 405, 406], "round": [14, 15, 16, 17, 18, 19, 20, 21, 73], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 43, 77, 115, 119, 137, 138, 144, 145, 209], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 206, 410], "ratio": [14, 15, 17, 54, 392, 394], "finish": [14, 15, 17, 21, 119, 188, 411], "rest": [14, 15, 17, 387, 394, 395, 404, 406, 410], "earli": [14, 15, 17, 43, 119, 195, 410], "safeti": [14, 15, 17, 131, 137, 144], "harm": [14, 15, 17, 137, 144], "exclus": [14, 15, 69, 70, 73, 79, 92, 99, 100, 157, 171, 173, 235, 237, 239, 241, 245, 246, 276, 277, 285, 286, 322, 323, 324, 332, 333, 334, 335, 336, 359, 383, 387], "add_truncated_kei": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145, 201], "ordereddict": [14, 15, 16, 17, 21, 43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 301, 321, 393], "form": [14, 15, 17, 43, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 115, 119, 137, 138, 144, 145, 207, 209, 235, 237, 239, 241, 297, 298, 300, 315, 318, 369, 387, 394, 397, 405], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 115, 119, 137, 138, 144, 145, 201], "integ": [14, 15, 16, 17, 23, 39, 41, 43, 54, 92, 99, 100, 101, 115, 119, 137, 138, 144, 145, 153, 156, 170, 174, 179, 195, 222, 223, 242, 247, 248, 301, 306, 314, 321, 408], "increment": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145, 179, 315], "env_fn": [14, 15, 16, 17, 116, 381, 382], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 99, 100, 227, 228, 392, 406], "out_se": [14, 15, 16, 17, 411], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 28, 30, 31, 33, 37, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 90, 91, 92, 94, 99, 100, 101, 103, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 157, 164, 183, 185, 194, 197, 200, 201, 202, 204, 205, 208, 209, 221, 222, 223, 225, 226, 227, 228, 231, 234, 237, 238, 241, 242, 243, 244, 247, 248, 249, 255, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 326, 330, 331, 332, 333, 334, 335, 336, 350, 352, 356, 357, 359, 362, 369, 374, 375, 380, 381, 382, 388, 394, 405], "return_same_td": 16, "interruptor": 16, "cautious": [16, 318], "whole": [16, 30, 31, 37, 43, 56, 63, 115, 119, 137, 138, 144, 145, 201, 209, 284, 301, 321, 360, 392, 394], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 397], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 369], "respect": [18, 19, 20, 43, 115, 119, 137, 138, 144, 145, 158, 164, 166, 169, 183, 184, 193, 197, 200, 201, 203, 205, 209, 235, 239, 247, 260, 287, 292, 298, 300, 315, 318, 320, 332, 334, 335, 364, 394, 395, 404, 405], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 386, 393, 394, 397, 400, 403, 408], "fashion": [18, 20, 21, 48, 50, 53, 100], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 173], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 49, 52, 59, 60, 75, 115, 119, 137, 138, 144, 145, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294, 392], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 406], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 392], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 73, 284, 288], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 381, 382, 392, 393], "coordin": [21, 165], "init": [21, 43, 115, 119, 137, 138, 144, 145, 207, 209, 247, 248, 249, 359, 393, 394], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 229, 393, 408], "equat": [21, 79, 119, 207, 282, 283, 297, 300, 322, 394, 396, 406], "exce": [21, 408], "indefinit": [21, 72], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 220, 369, 392, 395], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 323, 398], "jump": [22, 396], "host": [22, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 224, 229, 256, 275], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 27, 28, 29, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 92, 99, 100, 115, 119, 137, 138, 144, 145, 150, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 175, 176, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 207, 209, 210, 218, 219, 232, 258, 273, 274, 275, 278, 279, 281, 282, 283, 288, 303, 330, 350, 352], "as_nest": 23, "durat": [23, 405], "meta": [23, 48, 50, 53, 62, 75, 117, 121, 298, 300, 315, 318, 320, 389, 394, 404, 405, 408], "aren": [23, 196, 395], "eventu": [23, 257, 395, 406], "supersed": 23, "recov": [23, 75, 77, 79, 80, 81, 99, 100, 274, 279, 283, 289, 306, 314, 403], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 118, 120], "stride": [23, 43, 115, 119, 137, 138, 144, 145, 209, 222, 223, 225, 226, 234, 247, 393, 404, 410], "jag": 23, "focu": [23, 392, 393, 394, 397, 398, 399, 404], "team": [23, 404, 405, 410], "cat": [23, 292, 299, 301, 302, 314, 319, 321, 323, 324, 404, 408, 410], "arang": [23, 92, 153, 232, 246, 276, 360, 387, 408], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 60, 64, 73, 79, 99, 124, 125, 135, 136, 145, 215, 281, 408], "data_split": 23, "got": [23, 399], "init_kl_coef": 24, "horizon": [24, 129, 130, 146, 147, 221, 244, 394], "kl": [24, 32, 54, 177, 310, 315], "describ": [24, 62, 161, 200, 210, 263, 264, 303, 355, 388, 392, 394, 404, 405, 406, 411], "ziegler": 24, "et": [24, 221], "relax": [24, 350], "penalti": [24, 54, 312, 315], "strai": [24, 54], "greater": [24, 73, 92, 99, 100, 237, 241, 301, 392, 393, 410], "increas": [24, 84, 198, 282, 283, 404, 405], "pull": [24, 408], "toward": [24, 205], "aggress": 24, "kl_coef": [24, 32, 54], "arxiv": [24, 49, 76, 79, 81, 91, 92, 111, 112, 113, 114, 124, 125, 129, 130, 132, 133, 141, 146, 147, 160, 183, 203, 220, 224, 225, 226, 227, 228, 229, 232, 233, 234, 239, 244, 251, 253, 254, 257, 259, 260, 266, 277, 282, 283, 298, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 317, 318, 321, 322, 323, 332, 337, 345, 407], "pdf": [24, 160, 224, 225, 226, 227, 228, 232, 277, 282, 283, 301, 308, 312, 319, 322, 323, 332, 337, 345], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 404, 405], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 177], "newest": 24, "int8": [25, 115, 128, 139, 140, 158], "encod": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 111, 112, 115, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 153, 168, 254, 255, 259, 297, 387, 393, 394, 395, 397, 406, 408], "null": [25, 27, 28, 30, 31, 37, 38, 45, 46, 49, 55, 56, 59, 62, 64, 65, 66, 67, 68, 91, 92, 158], "denot": [25, 405], "nmber": 25, "clariti": 25, "rand": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 124, 125, 131, 135, 136, 154, 157, 166, 169, 185, 210, 221, 244, 284, 298, 299, 301, 302, 303, 305, 306, 307, 314, 316, 318, 319, 321, 323, 324, 406, 410, 411], "assert_is_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "clear_device_": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "op": [25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 45, 46, 47, 62, 64, 65, 66, 67, 68, 178, 206, 273, 274, 278, 352, 371], "is_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 411], "np": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 119, 291, 350, 404, 406], "ndarrai": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 119, 282, 283, 291, 350, 404], "ignore_devic": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "arrai": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 54, 55, 56, 62, 64, 65, 66, 67, 68, 91, 115, 119, 120, 137, 138, 144, 145, 170, 235, 236, 239, 240, 392, 404, 408], "broadcast": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "compliant": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "singleton": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 222, 223, 242, 261, 262], "start_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "end_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "implements_for_spec": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "torch_funct": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "index_typ": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 45, 46, 55, 56, 62, 64, 65, 66, 67, 68], "tensor_to_index": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "make_neg_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "convert": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 164, 166, 169, 183, 197, 200, 201, 203, 205, 207, 209, 287, 297, 316, 392, 393, 394, 406, 408], "shortcut": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 406, 411], "ndimens": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 392], "violat": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 387], "proxi": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 246, 255, 284, 388], "project": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 168, 239, 269, 273, 274, 276, 277, 282, 283, 284, 285, 286, 287, 288, 359, 387, 410, 411], "uniformli": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 93, 316, 411], "normal": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 179, 207, 220, 222, 223, 238, 242, 245, 246, 252, 264, 265, 273, 274, 284, 288, 300, 301, 315, 318, 365, 367, 383, 387, 389, 395, 397, 405, 411], "drawn": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 197, 278, 284, 288, 394, 404, 405], "dest": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 183, 203, 205, 287], "to_categor": [25, 26, 29, 33, 39, 40, 41, 42, 47], "to_categorical_spec": [25, 26, 29, 33, 39, 40, 41, 42, 47], "to_numpi": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145], "transformed_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 200, 201, 252, 263, 383], "check_spec_encod": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "to_one_hot": [25, 26, 29, 33, 39, 40, 41, 42, 47], "hot": [25, 26, 29, 33, 39, 40, 41, 42, 47, 111, 112, 118, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 153, 154, 168, 232, 255, 258, 276, 277, 285, 286, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 395], "categ": [25, 26, 29, 33, 41, 42, 284], "categ_sampl": [25, 26, 29, 33, 41, 42, 47], "onehot_sampl": [25, 26, 29, 33, 41, 42], "to_one_hot_spec": [25, 26, 29, 33, 39, 40, 41, 42, 47], "categoricalbox": [25, 26, 29, 33, 41, 42, 47, 138, 397, 404, 405, 411], "type_check": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "update_mask": [25, 26, 29, 33, 39, 40, 41, 42, 47], "outcom": [25, 26, 29, 33, 39, 40, 41, 42, 47, 230, 263, 316, 404], "disabl": [25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 115, 119, 137, 138, 144, 145, 201, 209, 238, 265, 350, 392, 404], "unmask": [25, 26, 29, 33, 39, 40, 41, 42, 47], "ts": [25, 26, 29, 33, 39, 40, 41, 42, 47], "upper": [27, 97, 178], "continuousbox": [27, 30, 64, 115, 119, 137, 138, 144, 145, 215, 394, 395, 404, 405, 406, 410, 411], "inst": 29, "descript": [30, 146, 156, 393, 394], "akin": 30, "unnam": 30, "compositespec": [30, 385, 406, 411], "constraint": [30, 131, 394, 405], "pixels_spec": 30, "observation_vector_spec": 30, "composite_spec": 30, "observation_vector": [30, 161, 392], "_nodefault": [30, 31, 37, 48, 50, 53, 56], "is_empti": [30, 31, 37, 56, 406], "include_nest": [30, 31, 37, 56], "leaves_onli": [30, 31, 37, 56], "is_leaf": [30, 31, 37, 56], "_compositespecitemsview": [30, 31, 37, 56], "children": [30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 209], "_compositespeckeysview": [30, 31, 37, 56], "reflect": [30, 31, 37, 56, 120, 139, 140, 206, 218, 316, 372, 393, 394, 395, 405], "lock_": [30, 31, 37, 56], "recurs": [30, 31, 37, 43, 56, 69, 70, 115, 119, 137, 138, 144, 145, 209, 316], "succeed": [30, 31, 37, 56], "selected_kei": [30, 31, 37, 56, 192, 392], "unlock_": [30, 31, 37, 56], "unlock": [30, 31, 37, 48, 50, 53, 56], "_compositespecvaluesview": [30, 31, 37, 56], "multipli": [32, 235, 239, 299, 300, 301, 307, 315, 317, 318, 319, 321, 367, 392, 404], "calcul": [32, 54, 188, 235, 298, 300, 305, 315, 318, 320, 323], "shift_kei": [34, 36, 44, 57], "is_full_kei": [34, 36, 44, 57], "is_ful": [34, 36, 44, 57], "tempfil": [34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 379, 392, 393, 404, 408], "register_save_hook": [34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "temporarydirectori": [34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 392, 393, 404, 408], "tmpdir": [34, 49, 52, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 392, 393, 404], "rb_load": [34, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "register_load_hook": [34, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "persist": [35, 43, 115, 119, 137, 138, 144, 145, 201, 209, 218, 301, 321], "filesystem": [35, 408], "ted2nest": [36, 385], "stackedcomposit": [37, 385], "nvec": [39, 41], "remove_singleton": 39, "cardin": [39, 41, 232, 258, 276, 277, 286, 394], "ax": [39, 250, 251, 404], "m": [39, 43, 115, 119, 137, 138, 144, 145, 168, 209, 288, 387, 393, 406], "Not": [39, 40, 52, 111, 112, 124, 237, 241], "neither": [39, 40, 41, 42, 79, 406], "use_regist": 41, "mone_hot": [41, 42], "boxlist": [41, 42], "gamma": [43, 188, 209, 244, 298, 299, 301, 302, 303, 305, 307, 308, 309, 311, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 379, 388, 392, 393, 394, 404, 405, 410], "sutton": [43, 388, 404, 405], "1988": 43, "tempor": [43, 237, 241, 244, 333, 334, 339, 340], "44": [43, 392, 393, 406, 407], "discount": [43, 79, 116, 188, 209, 299, 305, 308, 309, 311, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 388, 393, 394, 404, 405], "ahead": [43, 209, 411], "bias": [43, 235, 236, 239, 240, 294, 388, 392], "mitig": 43, "pleas": [43, 77, 115, 118, 119, 137, 138, 139, 140, 144, 145, 157, 160, 198, 201, 209, 247, 248, 249, 301, 321, 386], "multisteptransform": [43, 385], "99": [43, 188, 207, 244, 311, 326, 331, 338, 379, 392, 393, 394, 398, 401, 404, 405, 406, 410], "add_modul": [43, 115, 119, 137, 138, 144, 145, 209], "child": [43, 115, 119, 137, 138, 144, 145, 209, 393], "fn": [43, 51, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 209, 252, 381, 382], "init_weight": [43, 115, 119, 137, 138, 144, 145, 209], "fill_": [43, 115, 119, 137, 138, 144, 145, 209, 393, 395, 411], "net": [43, 115, 119, 137, 138, 144, 145, 209, 226, 228, 231, 234, 248, 298, 299, 301, 307, 314, 318, 319, 320, 321, 379, 393, 406, 407, 410], "in_featur": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 222, 223, 225, 226, 227, 228, 234, 242, 247, 248, 250, 251, 270, 287, 295, 303, 305, 397, 398, 410], "out_featur": [43, 115, 119, 131, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 221, 222, 223, 225, 226, 227, 228, 233, 234, 237, 241, 242, 244, 247, 248, 250, 251, 270, 276, 287, 295, 303, 305, 387, 392, 395, 397, 398, 401, 410], "bia": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 220, 222, 223, 225, 226, 227, 228, 233, 234, 235, 236, 237, 239, 240, 241, 242, 248, 250, 251, 252, 278, 279, 282, 283, 287, 294, 296, 297, 301, 316, 321, 388, 392, 393, 394, 395, 405, 410], "requires_grad": [43, 111, 112, 115, 119, 137, 138, 144, 145, 177, 201, 209, 301, 321], "bfloat16": [43, 115, 119, 137, 138, 144, 145, 209], "datatyp": [43, 115, 119, 137, 138, 144, 145, 209, 408], "member": [43, 115, 119, 137, 138, 144, 145, 209, 316, 352], "xdoctest": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 301, 316, 321], "buf": [43, 115, 119, 137, 138, 144, 145, 209], "20l": [43, 115, 119, 137, 138, 144, 145, 209, 316], "1l": [43, 115, 119, 137, 138, 144, 145, 209, 316], "5l": [43, 115, 119, 137, 138, 144, 145, 209, 316], "__call__": [43, 51, 115, 119, 137, 138, 144, 145, 209, 288, 389, 411], "doubl": [43, 115, 119, 137, 138, 144, 145, 164, 166, 167, 169, 183, 197, 200, 201, 203, 205, 209, 287, 303, 308, 313, 319, 322, 330, 392, 393, 394, 395, 411], "eval": [43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 392, 393, 394], "evalu": [43, 115, 119, 120, 129, 130, 137, 138, 144, 145, 201, 209, 230, 245, 246, 255, 265, 319, 374, 375, 393, 394, 401], "dropout": [43, 115, 119, 137, 138, 144, 145, 201, 209, 235, 237, 239, 241, 242, 395], "batchnorm": [43, 115, 119, 137, 138, 144, 145, 201, 209, 220], "comparison": [43, 115, 119, 137, 138, 144, 145, 201, 209, 316, 392, 393], "similar": [43, 48, 50, 52, 53, 79, 115, 119, 137, 138, 139, 140, 144, 145, 164, 183, 197, 200, 201, 203, 204, 205, 207, 209, 270, 272, 284, 287, 288, 388, 392, 393, 394, 395, 397, 398, 399, 400, 406, 408, 411], "extra_repr": [43, 115, 119, 137, 138, 144, 145, 209], "nontermin": 43, "original_reward": 43, "newli": [43, 115, 119, 137, 138, 144, 145], "OR": 43, "get_buff": [43, 115, 119, 137, 138, 144, 145, 209], "get_submodul": [43, 115, 119, 137, 138, 144, 145, 209], "qualifi": [43, 115, 119, 137, 138, 144, 145, 209], "referenc": [43, 115, 119, 137, 138, 144, 145, 209], "attributeerror": [43, 115, 119, 137, 138, 144, 145, 209], "resolv": [43, 115, 119, 137, 138, 144, 145, 209], "someth": [43, 115, 119, 128, 137, 138, 144, 145, 209, 386, 393, 394, 406, 411], "get_extra_st": [43, 115, 119, 137, 138, 144, 145, 207, 209], "set_extra_st": [43, 115, 119, 137, 138, 144, 145, 207, 209], "picklabl": [43, 115, 119, 137, 138, 144, 145, 207, 209], "pickl": [43, 115, 119, 137, 138, 144, 145, 207, 209], "get_paramet": [43, 115, 119, 137, 138, 144, 145, 209], "net_b": [43, 115, 119, 137, 138, 144, 145, 209], "net_c": [43, 115, 119, 137, 138, 144, 145, 209], "conv": [43, 115, 119, 137, 138, 144, 145, 209, 222, 223, 393], "conv2d": [43, 115, 119, 137, 138, 144, 145, 209, 223, 225, 226, 234, 247, 410], "kernel_s": [43, 115, 119, 137, 138, 144, 145, 209, 222, 223, 225, 226, 234, 247, 253, 393, 410], "diagram": [43, 115, 119, 137, 138, 144, 145, 209], "degre": [43, 115, 119, 137, 138, 144, 145, 209], "named_modul": [43, 115, 119, 137, 138, 144, 145, 209], "o": [43, 115, 119, 137, 138, 144, 145, 209, 240], "half": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 392], "ipu": [43, 115, 119, 137, 138, 144, 145, 209], "strict": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "descend": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "get_swap_module_params_on_convers": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "enforc": [43, 98, 115, 119, 137, 138, 144, 145, 201, 209, 289, 301, 321, 406], "preserv": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "missing_kei": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "unexpected_kei": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "namedtupl": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "l": [43, 115, 119, 137, 138, 144, 145, 209, 235, 239, 331, 394, 406], "idx": [43, 115, 119, 137, 138, 144, 145, 209], "mtia": [43, 115, 119, 137, 138, 144, 145, 209], "named_buff": [43, 115, 119, 137, 138, 144, 145, 209], "remove_dupl": [43, 115, 119, 137, 138, 144, 145, 209, 316], "prepend": [43, 115, 119, 137, 138, 144, 145, 209, 316], "running_var": [43, 115, 119, 137, 138, 144, 145, 209], "named_children": [43, 115, 119, 137, 138, 144, 145, 209], "conv4": [43, 115, 119, 137, 138, 144, 145, 209], "conv5": [43, 115, 119, 137, 138, 144, 145, 209], "memo": [43, 115, 119, 137, 138, 144, 145, 209], "named_paramet": [43, 115, 119, 137, 138, 144, 145, 177, 209, 316], "register_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "removablehandl": [43, 115, 119, 137, 138, 144, 145, 209], "favor": [43, 115, 119, 137, 138, 144, 145, 209, 394], "register_full_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_buff": [43, 115, 119, 137, 138, 144, 145, 209], "running_mean": [43, 115, 119, 137, 138, 144, 145, 209], "alongsid": [43, 115, 119, 137, 138, 144, 145, 209, 400], "num_featur": [43, 115, 119, 137, 138, 144, 145, 209, 220], "register_forward_hook": [43, 115, 119, 137, 138, 144, 145, 209, 232, 258], "with_kwarg": [43, 115, 119, 137, 138, 144, 145, 209], "always_cal": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_forward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "regardless": [43, 115, 119, 137, 138, 144, 145, 209, 300, 315, 318], "register_forward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "invok": [43, 115, 119, 137, 138, 144, 145, 209], "And": [43, 115, 119, 137, 138, 144, 145, 209, 398], "forward_pr": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_forward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "grad_input": [43, 115, 119, 137, 138, 144, 145, 209], "grad_output": [43, 115, 119, 137, 138, 144, 145, 209], "subsequ": [43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 156, 209, 395, 404], "technic": [43, 115, 119, 137, 138, 144, 145, 209, 393, 395, 397], "caller": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_full_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_full_backward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "backward_pr": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_full_backward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_load_state_dict_post_hook": [43, 115, 119, 137, 138, 144, 145, 209], "incompatible_kei": [43, 115, 119, 137, 138, 144, 145, 209], "thrown": [43, 55, 115, 119, 137, 138, 144, 145, 209, 408], "register_load_state_dict_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "local_metadata": [43, 115, 119, 137, 138, 144, 145, 209], "error_msg": [43, 115, 119, 137, 138, 144, 145, 209], "noqa": [43, 115, 119, 137, 138, 144, 145, 209], "b950": [43, 115, 119, 137, 138, 144, 145, 209], "register_modul": [43, 115, 119, 137, 138, 144, 145, 209, 389], "alia": [43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 115, 119, 137, 138, 144, 145, 209], "register_paramet": [43, 115, 119, 137, 138, 144, 145, 209], "register_state_dict_post_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_state_dict_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "keep_var": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "requires_grad_": [43, 115, 119, 137, 138, 144, 145, 209], "autograd": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321], "freez": [43, 115, 119, 137, 138, 144, 145, 207, 209], "finetun": [43, 115, 119, 137, 138, 144, 145, 209], "gan": [43, 115, 119, 137, 138, 144, 145, 209], "set_submodul": [43, 115, 119, 137, 138, 144, 145, 209], "overid": [43, 115, 119, 137, 138, 144, 145, 209], "share_memori": [43, 115, 116, 119, 137, 138, 144, 145, 209, 392], "share_memory_": [43, 115, 119, 137, 138, 144, 145, 209, 410], "destin": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 159, 166, 167, 169, 201, 203, 207, 209, 218, 301, 321, 352], "averag": [43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 282, 283, 301, 309, 310, 321, 367, 392, 394], "shallow": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 321, 395], "detach": [43, 115, 119, 137, 138, 144, 145, 201, 209, 301, 312, 316, 321, 323, 332, 333, 334, 335, 392], "non_block": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 395], "memory_format": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "channels_last": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "unchang": [43, 115, 119, 137, 138, 144, 145, 164, 168, 183, 197, 200, 201, 203, 205, 209, 278, 287, 366, 392, 408], "tri": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 400], "pin": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "4d": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "ignore_w": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "1913": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "3420": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "5113": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "2325": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "torch_doctest_cuda1": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "gpu1": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "1914": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "5112": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 406], "2324": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "float16": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 236, 240, 287], "cdoubl": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "3741": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "j": [43, 49, 91, 92, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 389, 398], "2382": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "5593": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287, 406], "4443": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "complex128": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "6122": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "1150": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 287], "to_empti": [43, 115, 119, 137, 138, 144, 145, 209], "dst_type": [43, 115, 119, 137, 138, 144, 145, 209], "xpu": [43, 115, 119, 137, 138, 144, 145, 209], "set_to_non": [43, 115, 119, 137, 138, 144, 145, 209], "row": [44, 58, 124, 125], "shae": 45, "nontensordata": [45, 73, 79, 135, 136, 350], "nontensor": [46, 385], "one_hot": [47, 232, 246, 258], "one_hot_sampl": 47, "chosen_data": [48, 82], "rewarddata": [48, 82, 385], "rejected_data": [48, 82], "from_dataset": [48, 50, 82], "dataset_nam": [48, 50, 54, 63, 82, 134], "max_length": [48, 50, 51, 61, 63, 82, 401], "550": [48, 50, 54, 63, 82, 99, 100, 406], "root_dir": [48, 50, 63, 82], "from_disk": [48, 50, 63, 82], "carperai": [48, 50, 54, 63], "openai_summarize_comparison": [48, 50, 63], "sequen": [48, 50], "load_from_disk": [48, 50, 63, 82], "load_dataset": [48, 50, 63, 82], "attention_mask": [48, 50, 51, 53, 54, 61, 63, 82], "92534": 48, "input_id": [48, 50, 51, 53, 54, 61, 63, 82], "end_scor": [48, 53, 54, 82], "sub_data": [48, 50], "from_tensordict": [48, 50, 53], "non_tensordict": [48, 50, 53], "getattr": [48, 50, 53], "tensorclass": [48, 50, 53, 82, 86, 87, 107], "load_memmap": [48, 50, 53], "load_": [48, 50, 53], "load_memmap_": [48, 50, 53], "fetch": [48, 50, 53, 111, 112, 113, 114, 177, 397, 407, 408], "fromkei": [48, 50, 53], "memmap": [48, 50, 53, 86, 137, 144, 207, 352, 354, 366, 408], "saved_td": [48, 50, 53], "td_load": [48, 50, 53], "fake": [48, 50, 53, 115, 119, 137, 138, 144, 145, 392, 393], "_subclass": [48, 50, 53], "faketensormod": [48, 50, 53], "faketensor": [48, 50, 53], "from_flatten": [48, 50, 53], "attemptedli": [48, 50, 53], "copy_exist": [48, 50, 53], "return_earli": [48, 50, 53], "share_non_tensor": [48, 50, 53], "mimic": [48, 50, 53, 115, 119, 137, 138, 144, 145], "cross": [48, 50, 53, 221], "anymor": [48, 50, 53, 201, 287], "tensordictfutur": [48, 50, 53], "serialis": [48, 50, 53], "deepli": [48, 50, 53], "insid": [48, 50, 53, 137, 411], "memmap_": [48, 50, 53, 207], "memmap_lik": [48, 50, 53], "contentless": [48, 50, 53], "1_000_000": [48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 392, 395, 404], "alloc": [48, 50, 53, 87, 245, 246, 392], "memmap_refresh_": [48, 50, 53], "refresh": [48, 50, 53, 401, 404, 405], "saved_path": [48, 50, 53], "setattr": [48, 50, 53], "tent": [48, 50, 53, 63], "to_tensordict": [48, 50, 53, 395], "alpha": [49, 59, 91, 92, 222, 223, 225, 226, 227, 228, 234, 247, 299, 301, 307, 317, 319, 321, 323, 392, 408, 410], "ep": [49, 59, 91, 92, 179, 207, 220, 282, 283, 300, 322, 367, 392, 393, 395, 398, 401], "1e": [49, 59, 91, 92, 179, 207, 220, 230, 233, 252, 263, 392, 393, 394, 405], "08": [49, 59, 91, 92, 392, 393, 404, 406], "pin_memori": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 182, 392, 410], "schaul": [49, 91, 92], "quan": [49, 91, 92], "antonogl": [49, 91, 92], "silver": [49, 91, 92], "2015": [49, 91, 92], "ab": [49, 76, 79, 81, 91, 92, 111, 112, 113, 114, 124, 125, 129, 130, 132, 133, 141, 146, 147, 159, 183, 203, 207, 220, 224, 229, 233, 234, 239, 244, 251, 253, 254, 257, 259, 260, 266, 298, 299, 303, 304, 305, 306, 309, 310, 311, 313, 314, 317, 318, 321, 407], "1511": [49, 91, 92, 234], "05952": [49, 91, 92], "expon": [49, 59, 91, 92], "\u03b1": [49, 59, 91, 92], "delta": [49, 59, 91, 92, 235, 239, 263, 284, 288, 385, 388, 404], "1_000": [49, 52, 59, 60, 404, 408], "merg": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 406], "mini": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 405], "decid": [49, 52, 59, 60, 404, 410], "meth": [49, 52, 59, 60, 237, 241, 316, 406], "incompat": [49, 52, 59, 60, 320, 408], "drop_last": [49, 52, 59, 60, 98, 100], "notion": [49, 52, 59, 60], "caution": [49, 52, 59, 60, 98, 211, 411], "codebas": [49, 52, 59, 60, 406], "approach": [49, 52, 59, 60, 179, 220, 247, 248, 323, 392, 394, 398, 399, 404, 411], "return_info": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 408], "tensordictprioritizedreplaybuff": [49, 385, 410], "simplifi": [49, 397, 406, 408], "_weight": [49, 59, 91, 92, 408, 410], "update_prior": [49, 91, 92, 366, 389, 393, 408, 410], "36278465": 49, "invert": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 296, 394], "tqdm": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 369, 392, 394, 395, 404, 405, 406], "randomsampl": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 392, 404], "td_error": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 301, 302, 303, 305, 306, 307, 308, 314, 316, 319, 321, 323, 324, 330, 392, 398, 408, 410], "update_tensordict_prior": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 392, 408, 410], "insert_transform": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 155, 201], "insert": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 94, 95, 105, 106, 109, 110, 155, 164, 201, 202], "set_sampl": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "set_storag": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "set_writ": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "write_count": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "prompt_rindex": [50, 51, 54], "promptdatatldr": 50, "116722": 50, "prompt": [51, 54], "return_tensordict": [51, 61], "recip": [51, 115, 119, 137, 138, 144, 145, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294], "text": [51, 54, 61, 77, 235, 236, 239, 240, 282, 283, 394], "tensodict": [51, 61], "orign": [51, 61], "valid_sampl": 51, "eough": 51, "toknen": 51, "meet": 51, "criterion": 51, "autotoken": [51, 61, 63], "from_pretrain": [51, 54, 61], "gpt2": [51, 54, 61, 63, 224, 229, 256], "pad_token": [51, 61], "eos_token": 51, "enough": [51, 408], "inde": [51, 168, 394, 406], "storagecheckpointerbas": [52, 101], "roundrobinwrit": [52, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81], "depth": [52, 62, 115, 119, 131, 137, 138, 141, 144, 145, 221, 222, 223, 225, 226, 227, 228, 233, 234, 242, 244, 247, 248, 249, 253, 254, 276, 387, 393, 396, 398, 399, 403, 404, 405, 408], "_pytre": [52, 408], "tree_map": [52, 408], "did": [52, 206, 338, 393, 394, 399, 408, 411], "assert0": [52, 408], "ref_model": 54, "reward_model": [54, 293], "max_new_token": 54, "score_clip": 54, "kl_schedul": 54, "klcontrollerbas": 54, "num_step": 54, "causal": 54, "sentenc": 54, "frozen": [54, 177, 207], "gpt2rewardmodel": 54, "get_dataload": [54, 385], "promptdata": [54, 385], "gpt2lmheadmodel": 54, "dl": 54, "block_siz": [54, 82], "tensorclass_typ": [54, 82], "openai_summarize_tldr": 54, "config_class": 54, "model_path": 54, "rollout_from_model": 54, "rollout_from_data": 54, "600": [54, 400, 406, 408], "reward_kl": [54, 177], "reward_raw": 54, "sample_log_prob": [54, 270, 271, 272, 284, 288, 290, 318, 394, 397, 405, 410], "create_rollout_td": 54, "log_prob": [54, 230, 245, 246, 255, 265, 288, 301], "log_ratio": 54, "replic": [54, 388], "rindex": 54, "eo": 54, "term": [54, 177, 239, 240, 250, 251, 297, 298, 307, 371, 393, 394, 396, 397, 405], "generation_config": 54, "generationconfig": 54, "ti": [54, 341, 342, 343, 344, 346, 347, 348, 349, 393], "log_probs_gen": 54, "logprobs_of_label": 54, "heterogen": [55, 56, 128, 139, 140, 211, 247, 248, 392, 393], "220": [57, 391, 406, 409], "priority_kei": [59, 60, 74, 91, 301, 303, 306, 307, 308, 314, 316, 319, 321, 323, 324, 330, 408, 410], "reduct": [59, 91, 92, 105, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324], "prioritizedreplaybuff": [59, 385, 410], "min": [59, 91, 92, 105, 264, 265, 282, 283, 299, 300, 301, 307, 317, 319, 321, 393, 394], "median": [59, 91, 92, 105, 124, 125, 153, 284, 288], "include_info": [59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81], "huggingfac": [61, 76, 81, 280], "co": [61, 170, 406], "pad_trunc": 61, "am": [61, 394], "me": 61, "reassur": 61, "ok": 61, "primarili": [62, 184, 397], "dataclass": [62, 316], "educ": 62, "guess": 62, "knowledg": [62, 115, 119, 137, 138, 144, 145, 398, 400], "tokenizer_fn": 63, "tensordicttoken": [63, 385], "pre_tokenization_hook": 63, "valid_s": 63, "tokenizer_class": 63, "tokenizer_model_nam": 63, "tokein": 63, "elementwis": 63, "vocabulari": 63, "loader": [63, 394], "185068": 63, "dataset_to_tensordict": 63, "data_dir": 63, "batch_dim": [63, 383], "valid_mask_kei": 63, "conver": 63, "batch_dimens": 63, "filder": 63, "from_dict": 63, "data_memmap": 63, "recurse_through_entri": 70, "recurse_through_stack": 70, "consolid": 70, "dataset_id": [73, 75, 76, 77, 79, 80, 81], "num_proc": 73, "slice_len": [73, 79, 92, 99, 100, 352], "strict_len": 73, "arari": 73, "2600": [73, 394], "million": [73, 395], "consequ": [73, 84, 239, 399], "50x10": 73, "available_dataset": [73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100], "ataridqn": 73, "immutabledatasetwrit": [73, 74, 75, 76, 77, 78, 79, 80, 81], "shorter": [73, 79, 92, 99, 100], "Be": [73, 79, 92, 99, 100], "game_nam": 73, "krull": 73, "1d": [73, 91, 92, 99, 100, 105], "cheapli": 73, "invalid_rang": 73, "999998": 73, "999999": 73, "add_count": 73, "84": [73, 187, 393, 395, 404, 405, 406], "valueestim": [73, 298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 326, 330, 385, 388, 392, 404, 405], "convolut": [73, 222, 223, 225, 226, 247, 261, 397], "2657628": 73, "2657629": 73, "2657630": 73, "2657631": 73, "2657632": 73, "2657633": 73, "2657634": 73, "2657635": 73, "2657636": 73, "2657637": 73, "2657638": 73, "2657639": 73, "2657640": 73, "2657641": 73, "2657642": 73, "2657643": 73, "2657644": 73, "2657645": 73, "2657646": 73, "2657647": 73, "2657648": 73, "2657649": 73, "2657650": 73, "2657651": 73, "2657652": 73, "2657653": 73, "2657654": 73, "2657655": 73, "2657656": 73, "2657657": 73, "2657658": 73, "2657659": 73, "2657660": 73, "2657661": 73, "2657662": 73, "2657663": 73, "2657664": 73, "2657665": 73, "2657666": 73, "2657667": 73, "2657668": 73, "2657669": 73, "2657670": 73, "2657671": 73, "2657672": 73, "2657673": 73, "2657674": 73, "2657675": 73, "2657676": 73, "2657677": 73, "2657678": 73, "2657679": 73, "2657680": 73, "2657681": 73, "2657682": 73, "2657683": 73, "2657684": 73, "2657685": 73, "2657686": 73, "2657687": 73, "2657688": 73, "2657689": 73, "2657690": 73, "2657691": 73, "1995687": 73, "1995688": 73, "1995689": 73, "1995690": 73, "1995691": 73, "1995692": 73, "1995693": 73, "1995694": 73, "1995695": 73, "1995696": 73, "1995697": 73, "1995698": 73, "1995699": 73, "1995700": 73, "1995701": 73, "1995702": 73, "1995703": 73, "1995704": 73, "1995705": 73, "1995706": 73, "1995707": 73, "1995708": 73, "1995709": 73, "1995710": 73, "1995711": 73, "1995712": 73, "1995713": 73, "1995714": 73, "1995715": 73, "1995716": 73, "1995717": 73, "1995718": 73, "1995719": 73, "1995720": 73, "1995721": 73, "1995722": 73, "1995723": 73, "1995724": 73, "1995725": 73, "1995726": 73, "1995727": 73, "1995728": 73, "1995729": 73, "1995730": 73, "1995731": 73, "1995732": 73, "1995733": 73, "1995734": 73, "1995735": 73, "1995736": 73, "1995737": 73, "1995738": 73, "1995739": 73, "1995740": 73, "1995741": 73, "1995742": 73, "1995743": 73, "1995744": 73, "1995745": 73, "1995746": 73, "1995747": 73, "1995748": 73, "1995749": 73, "1995750": 73, "left": [73, 75, 79, 92, 99, 157, 164, 165, 166, 167, 171, 177, 183, 185, 186, 192, 195, 198, 200, 203, 205, 209, 247, 278, 393, 394, 399, 400], "untouch": [73, 79, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "_max_run": 73, "dataset_asterix": 73, "asterix": 73, "dataset_pong": 73, "sample_from_al": [73, 94, 97], "buffer_id": [73, 97, 103], "hidden": [73, 137, 144, 159, 225, 233, 235, 236, 237, 239, 240, 241, 253, 254, 259, 260, 270, 271, 272, 275, 287, 290, 300, 315, 318, 387, 395, 403, 410], "data_path": [73, 74, 75, 76, 77, 78, 79, 80, 81], "data_path_root": [73, 74, 75, 76, 77, 78, 79, 80, 81], "delet": [73, 74, 75, 76, 77, 78, 79, 80, 81, 161, 359], "chunksiz": [73, 74, 75, 76, 77, 78, 79, 80, 81], "pool": [73, 74, 75, 76, 77, 78, 79, 80, 81, 198], "max_tasks_per_child": [73, 74, 75, 76, 77, 78, 79, 80, 81], "worker_thread": [73, 74, 75, 76, 77, 78, 79, 80, 81], "index_with_gener": [73, 74, 75, 76, 77, 78, 79, 80, 81], "pbar": [73, 74, 75, 76, 77, 78, 79, 80, 81, 392, 394, 395, 404, 405, 406], "num_fram": [73, 74, 75, 76, 77, 78, 79, 80, 81], "unitari": [73, 74, 75, 76, 77, 78, 79, 80, 81, 406], "minariexperiencereplai": [73, 74, 75, 76, 78, 79, 80, 81], "1000000": [73, 74, 75, 76, 77, 78, 79, 80, 81], "distance_from_origin": [73, 74, 75, 76, 77, 78, 79, 80, 81], "forward_reward": [73, 74, 75, 76, 77, 78, 79, 80, 81], "qpo": [73, 74, 75, 76, 77, 78, 79, 80, 81], "qvel": [73, 74, 75, 76, 77, 78, 79, 80, 81], "reward_ctrl": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "reward_forward": [73, 74, 75, 76, 77, 78, 79, 80, 81], "reward_surv": [73, 74, 75, 76, 77, 78, 79, 80, 81], "x_posit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "x_veloc": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "y_posit": [73, 74, 75, 76, 77, 78, 79, 80, 81], "y_veloc": [73, 74, 75, 76, 77, 78, 79, 80, 81], "achieved_go": [73, 74, 75, 76, 77, 78, 79, 80, 81], "desired_go": [73, 74, 75, 76, 77, 78, 79, 80, 81], "27": [73, 74, 75, 76, 77, 78, 79, 80, 81, 111, 112, 137, 144, 393, 406], "_collate_id": [73, 74, 75, 76, 77, 78, 79, 80, 81], "0x120e21dc0": [73, 74, 75, 76, 77, 78, 79, 80, 81], "cattensor": [73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 392, 403, 406, 411], "cat_tensor": [73, 74, 75, 76, 77, 78, 79, 80, 81], "cat_next_tensor": [73, 74, 75, 76, 77, 78, 79, 80, 81], "new_storag": [73, 74, 75, 76, 77, 78, 79, 80, 81], "31": [73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 125, 393, 395, 406, 407], "full_storag": [73, 74, 75, 76, 77, 78, 79, 80, 81], "0x168406fc0": [73, 74, 75, 76, 77, 78, 79, 80, 81], "from_env": 75, "use_truncated_as_don": 75, "direct_download": 75, "terminate_on_end": 75, "env_kwarg": [75, 80, 81, 157, 381, 382, 392], "reconstruct": [75, 99, 100, 310, 392, 411], "get_dataset": 75, "qlearning_dataset": 75, "fewer": [75, 92, 99], "unexpectedli": 75, "traj_split": 75, "observationnorm": [75, 207, 383, 392, 393, 394, 395, 410], "maze2d": 75, "umaz": 75, "loc": [75, 115, 119, 137, 138, 144, 145, 177, 179, 190, 207, 238, 252, 264, 265, 270, 271, 272, 284, 288, 290, 298, 299, 301, 314, 318, 319, 320, 321, 373, 383, 387, 392, 393, 394, 395, 397, 405, 410], "gen": 76, "dgrl": 76, "accompani": [76, 157, 195], "gap": 76, "2312": 76, "05742": 76, "gen_dgrl": 76, "procgen": 76, "bigfish": 76, "bossfight": 76, "1m_e": 76, "1m_": 76, "comma": 76, "npy": 76, "extract": [76, 156, 280, 392, 394, 410], "mmap": [76, 80, 81], "minut": [76, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "internet": [76, 81], "connect": [76, 81], "minari": 77, "websit": [77, 79], "currenrtli": 77, "minari_data": 77, "door": 77, "torchrl_logg": [77, 401], "28": [77, 247, 391, 392, 393, 398, 406, 407, 409], "door_body_po": 77, "dua": 78, "graff": 78, "2017": 78, "uci": 78, "archiv": 78, "ic": 78, "edu": 78, "ml": 78, "sklearn": [78, 134], "adult_num": [78, 134], "adult_onehot": [78, 134], "mushroom_num": [78, 134], "mushroom_onehot": [78, 134], "covertyp": [78, 134], "shuttl": [78, 134], "magic": [78, 134, 396], "shuffl": [79, 98, 100, 405], "embodi": [79, 407], "institut": 79, "demonstr": [79, 394, 399, 404, 405, 406, 408, 411], "527": [79, 406], "skill": 79, "160266": 79, "googl": [79, 80, 111, 112, 129, 130, 135, 136, 220, 394, 395, 404, 405], "open_x_embodi": 79, "2310": [79, 141], "08864": 79, "language_instruct": 79, "get_non_tensor": 79, "nor": 79, "insuffici": 79, "chosen": [79, 146, 147, 196, 197, 257, 258, 266, 286, 352, 387, 400], "openx": 79, "__will": 79, "change__": 79, "randomli": [79, 98, 145, 178, 179, 197, 278, 284, 288, 397, 404, 405, 406, 408], "crop": [79, 162, 184, 352], "modal": [79, 392], "cmu_stretch": [79, 352], "is_init": [79, 81, 159, 176, 237, 241, 281, 282, 283, 295, 395], "language_embed": 79, "512": [79, 234, 393, 406], "lift": 79, "green": [79, 404], "garbag": 79, "lid": 79, "roboset": 80, "h5": [80, 81, 84], "roboh": [80, 141], "concis": [80, 398], "75": [80, 392, 393, 395, 405, 406, 407, 408], "totensor": 81, "image_s": 81, "v": [81, 207, 235, 236, 239, 240, 270, 306, 314, 321, 387, 392, 393], "npz": 81, "2206": [81, 132, 133], "04779": [81, 299, 305], "vd4rl": 81, "squar": [81, 162, 165, 238, 264, 265, 352], "rectangular": [81, 222, 223], "walker_walk": 81, "64px": 81, "height": [81, 162, 165, 187], "veloc": [81, 113, 114, 115, 119, 137, 138, 144, 145, 160, 404, 405, 406, 411], "infinit": [82, 129, 130, 146, 147, 399, 408], "block": [82, 85, 110, 387, 395, 404], "pairwisedataset": [82, 385], "256": [82, 129, 130, 229, 393, 394, 404, 405, 406], "checkpoint_fil": 84, "h5_kwarg": 84, "iff": 84, "suffix": [84, 365], "h5py": 84, "create_dataset": 84, "temporarili": [84, 211, 399, 408], "immut": [85, 115, 119, 137, 144, 186, 201], "piec": [85, 95, 106, 109, 110, 392, 393, 394, 400, 404, 405, 406, 408], "scratch_dir": [86, 392, 408], "sent": [86, 87, 107, 207], "mistak": [86, 87, 107], "tensorstoragecheckpoint": 86, "pathlib": 86, "main_ckpt_dir": 86, "rb_memmap": 86, "10_000_000": 86, "myclass": [86, 87, 107], "foo": [86, 87, 107, 275, 408, 411], "bar": [86, 87, 107, 275, 362, 363, 365, 369, 389, 393], "attach": [86, 87, 88, 101, 103, 107, 393], "entiti": [86, 87, 88, 101, 103, 107], "zero_": [87, 107, 215], "liststoag": 89, "max_capac": [91, 92, 392, 408], "max_priority_within_buff": [91, 92], "data_0": 91, "data_1": 91, "smoothen": 91, "tdrb": 91, "pack": [91, 235, 239, 394, 396, 411], "nd": [91, 92], "sum_tre": [91, 92], "min_tre": [91, 92], "end_kei": [92, 99, 100], "cache_valu": [92, 99, 100], "closer": 92, "readili": [92, 99, 100], "conjunct": [92, 99, 100, 393], "Will": [92, 99, 132, 352], "buffer0": [92, 99], "immutablewrit": [92, 99], "buffer1": [92, 99], "other_sampl": [92, 99], "short": [92, 99, 100, 111, 112, 124, 125, 137, 211, 239, 240, 393, 394, 396, 397, 405, 408], "tolist": 92, "120110917137936e": 92, "06": [92, 230, 263, 392, 393, 405, 406], "storageensembl": [94, 97], "samplerensembl": 94, "writerensembl": [94, 103], "num_buffer_sampl": [94, 97], "ensembl": [94, 97, 103, 104, 110, 287, 319], "forbidden": 94, "collat": 94, "0x13a2ef430": 94, "0x13a2f9310": 94, "interpol": [94, 187, 393, 395], "interpolationmod": [94, 395], "bilinear": [94, 187, 395], "0x13a2f9220": 94, "0x13a2f9f70": 94, "0x13a2d9b50": 94, "0x13a2f95b0": 94, "0x128648260": 94, "kw": [95, 106], "roundrobin": [95, 106], "incomplet": [98, 100], "fresh": 98, "haven": [98, 407], "remain": [98, 159, 167, 168, 177, 196, 251, 398], "draw": [98, 278], "slicesamplerwithoutreplac": [99, 408], "320": [99, 100, 113, 114, 391, 393, 406, 409], "700": [99, 100], "uniqu": [99, 100, 129, 130, 160, 170, 196, 197, 198, 281, 359, 399, 408], "dataid": [99, 100], "__len__": 101, "rank_kei": 105, "rank": [105, 221], "samplerwithoutreplac": [105, 394, 405, 408], "get_insert_index": 105, "convers": [111, 112, 124, 125, 388], "2106": [111, 112, 304, 323], "13281": [111, 112], "categorical_action_encod": [111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145], "frame_skip": [111, 112, 113, 114, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 141, 174, 362, 365, 372, 389, 392, 393, 394, 410], "repeat": [111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 221, 394, 404, 405, 406], "allow_done_after_reset": [111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141], "toler": [111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 230, 263], "availalb": [111, 112, 124, 125], "is_avail": [111, 112, 392, 393, 394, 395, 404, 405, 407], "els": [111, 112, 157, 235, 236, 239, 240, 253, 387, 389, 392, 393, 394, 395, 404, 405, 406, 407], "ant": [111, 112, 115, 119, 122, 137, 138, 144, 145, 407, 411], "87": [111, 112, 393, 406, 407], "acrobot": [111, 112, 113, 114, 411], "advant": [111, 112, 124, 125], "timer": [111, 112, 124, 125], "timeit": [111, 112, 124, 125], "310": [111, 112, 391, 396, 403, 406, 409], "ms": [111, 112, 124, 125], "268": [111, 112, 406], "433": [111, 112, 406], "80": [111, 112, 392, 393, 404, 405, 406], "213": [111, 112, 406], "8605": [111, 112], "pipelineenv": 112, "get_environ": 112, "dm_control": [113, 114, 392, 403, 411], "2006": [113, 114, 299, 305, 406], "12983": [113, 114], "task_nam": [113, 115, 119, 137, 138, 144, 145], "cheetah": [113, 114, 115, 119, 137, 138, 144, 145, 352, 392], "240": [113, 114, 406, 410], "swingup": [113, 114, 411], "swingup_spars": [113, 114], "ball_in_cup": [113, 114], "catch": [113, 114], "balance_spars": [113, 114], "three_pol": [113, 114], "two_pol": [113, 114], "finger": [113, 114], "turn_easi": [113, 114], "turn_hard": [113, 114], "fish": [113, 114], "upright": [113, 114, 393], "swim": [113, 114], "hopper": [113, 114], "hop": [113, 114], "humanoid": [113, 114, 137, 144, 403], "walk": [113, 114, 137, 144, 393, 403], "run_pure_st": [113, 114], "bring_bal": [113, 114], "bring_peg": [113, 114], "insert_bal": [113, 114], "insert_peg": [113, 114], "point_mass": [113, 114], "reacher": [113, 114], "swimmer": [113, 114], "swimmer6": [113, 114], "swimmer15": [113, 114], "walker": [113, 114], "dog": [113, 114], "trot": [113, 114], "humanoid_cmu": [113, 114], "lqr": [113, 114], "lqr_2_1": [113, 114], "lqr_6_2": [113, 114], "quadrup": [113, 114], "escap": [113, 114], "stacker": [113, 114], "stack_2": [113, 114], "stack_4": [113, 114], "deviceless": 115, "run_type_check": [115, 131], "counterenv": 115, "discretebox": [115, 119, 137, 138, 144, 145], "sort": [115, 119, 137, 138, 144, 145, 161, 282, 283], "another_act": [115, 119, 137, 138, 144, 145], "mutabl": [115, 119, 137, 138, 144, 145], "_callabletransform": [115, 119, 137, 138, 144, 145], "batch_lock": [115, 117, 119, 137, 144, 157, 197, 201, 406], "done_keys_group": [115, 119, 137, 138, 144, 145], "outer": [115, 119, 137, 138, 144, 145, 389, 392, 393, 411], "another_don": [115, 119, 137, 138, 144, 145], "empty_cach": [115, 119, 137, 138, 144, 145, 201], "fake_tensordict": [115, 119, 137, 138, 144, 145, 393], "silent": [115, 119, 137, 138, 144, 145, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 252, 253, 254, 256, 259, 260, 262, 267, 273, 274, 275, 277, 278, 281, 282, 283, 286, 291, 294], "braxenv": [115, 119, 137, 138, 144, 145, 186, 385, 396], "envnam": [115, 119, 137, 138, 144, 145], "pipeline_st": [115, 119, 137, 138, 144, 145], "attibut": [115, 119, 137, 138, 144, 145], "maybe_reset": [115, 119, 137, 138, 144, 145], "speak": [115, 119, 137, 138, 144, 145, 392], "rand_act": [115, 119, 128, 137, 138, 139, 140, 144, 145, 157, 396], "register_gym": [115, 119, 137, 138, 144, 145, 396], "entry_point": [115, 119, 137, 138, 144, 145], "info_kei": [115, 119, 137, 138, 144, 145], "reward_threshold": [115, 119, 137, 138, 144, 145], "nondeterminist": [115, 119, 137, 138, 144, 145], "max_episode_step": [115, 118, 119, 120, 137, 138, 144, 145], "order_enforc": [115, 119, 137, 138, 144, 145], "autoreset": [115, 119, 137, 138, 144, 145], "disable_env_check": [115, 118, 119, 132, 133, 137, 138, 144, 145], "apply_api_compat": [115, 119, 137, 138, 144, 145], "nasium": [115, 119, 137, 138, 144, 145], "scope": [115, 119, 137, 138, 144, 145, 411], "dmcontrolenv": [115, 119, 137, 138, 144, 145, 352, 385, 392, 396, 403, 411], "dmc": [115, 119, 137, 138, 144, 145], "removeemptyspec": [115, 119, 137, 138, 144, 145], "threshold": [115, 119, 137, 138, 144, 145, 278, 299, 300, 394], "learnt": [115, 119, 137, 138, 144, 145, 379], "checker": [115, 118, 119, 132, 133, 137, 138, 144, 145], "stepapicompat": [115, 119, 137, 138, 144, 145], "deem": [115, 119, 129, 130, 137, 138, 144, 145, 146, 147], "envgym": [115, 119, 137, 138, 144, 145], "0855": [115, 119, 137, 138, 144, 145], "0215": [115, 119, 137, 138, 144, 145], "0881": [115, 119, 137, 138, 144, 145], "0412": [115, 119, 137, 138, 144, 145], "1101": [115, 119, 137, 138, 144, 145], "0080": [115, 119, 137, 138, 144, 145], "0254": [115, 119, 137, 138, 144, 145], "0424": [115, 119, 137, 138, 144, 145], "9609e": [115, 119, 137, 138, 144, 145], "9776e": [115, 119, 137, 138, 144, 145], "04": [115, 119, 123, 137, 138, 144, 145, 391, 392, 393, 395, 404, 406, 407, 409], "6347e": [115, 119, 137, 138, 144, 145], "3842e": [115, 119, 137, 138, 144, 145], "5338e": [115, 119, 137, 138, 144, 145], "3064e": [115, 119, 137, 138, 144, 145], "0381e": [115, 119, 137, 138, 144, 145], "6656e": [115, 119, 137, 138, 144, 145], "05": [115, 119, 137, 138, 144, 145, 220, 392, 393, 404, 406, 407], "0204e": [115, 119, 137, 138, 144, 145], "action_spac": [115, 119, 137, 138, 144, 145, 170, 232, 258, 276, 277, 285, 286, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 395, 397, 401], "0833": [115, 119, 137, 138, 144, 145], "0275": [115, 119, 137, 138, 144, 145], "0612": [115, 119, 137, 138, 144, 145], "0770": [115, 119, 137, 138, 144, 145, 406], "1256": [115, 119, 137, 138, 144, 145, 406], "0082": [115, 119, 137, 138, 144, 145], "0186": [115, 119, 137, 138, 144, 145], "0476": [115, 119, 137, 138, 144, 145], "2221": [115, 119, 137, 138, 144, 145], "2256": [115, 119, 137, 138, 144, 145], "5930": [115, 119, 137, 138, 144, 145], "6937": [115, 119, 137, 138, 144, 145], "5865": [115, 119, 137, 138, 144, 145], "5479": [115, 119, 137, 138, 144, 145], "0187": [115, 119, 137, 138, 144, 145], "6825": [115, 119, 137, 138, 144, 145, 406], "5224": [115, 119, 137, 138, 144, 145], "0018": [115, 119, 137, 138, 144, 145, 406], "1005": [115, 119, 137, 138, 144, 145], "0335": [115, 119, 137, 138, 144, 145], "0268": [115, 119, 137, 138, 144, 145, 406], "0133": [115, 119, 137, 138, 144, 145], "0627": [115, 119, 137, 138, 144, 145], "0074": [115, 119, 137, 138, 144, 145, 406], "0488": [115, 119, 137, 138, 144, 145, 406], "0353": [115, 119, 137, 138, 144, 145], "0075": [115, 119, 137, 138, 144, 145, 406], "0069": [115, 119, 137, 138, 144, 145, 406], "0098": [115, 119, 137, 138, 144, 145, 406], "0058": [115, 119, 137, 138, 144, 145, 406], "0033": [115, 119, 137, 138, 144, 145, 406], "0157": [115, 119, 137, 138, 144, 145], "0004": [115, 119, 137, 138, 144, 145, 395, 406], "0381": [115, 119, 137, 138, 144, 145], "0452": [115, 119, 137, 138, 144, 145], "11355747": [115, 119, 137, 138, 144, 145], "04257728": [115, 119, 137, 138, 144, 145], "00408397": [115, 119, 137, 138, 144, 145], "04155852": [115, 119, 137, 138, 144, 145], "0389733": [115, 119, 137, 138, 144, 145], "01409826": [115, 119, 137, 138, 144, 145], "0978704": [115, 119, 137, 138, 144, 145], "08808327": [115, 119, 137, 138, 144, 145], "03970837": [115, 119, 137, 138, 144, 145], "00535434": [115, 119, 137, 138, 144, 145], "02353762": [115, 119, 137, 138, 144, 145], "05116226": [115, 119, 137, 138, 144, 145], "02788907": [115, 119, 137, 138, 144, 145], "06848346": [115, 119, 137, 138, 144, 145], "05154399": [115, 119, 137, 138, 144, 145], "0371798": [115, 119, 137, 138, 144, 145], "05128025": [115, 119, 137, 138, 144, 145], "dydact": [115, 119, 137, 138, 144, 145], "gym_env": [115, 119, 137, 138, 144, 145, 410], "reset_kei": [115, 119, 137, 138, 144, 145, 160, 191, 196, 197, 198, 404], "multitask": [115, 119, 137, 138, 144, 145], "multiag": [115, 119, 128, 137, 138, 139, 140, 144, 145, 219, 248, 257, 266, 330], "another_reward": [115, 119, 137, 138, 144, 145], "auto_cast_to_devic": [115, 119, 137, 138, 144, 145, 405], "break_when_all_don": [115, 119, 137, 138, 144, 145], "soon": [115, 119, 137, 138, 139, 140, 144, 145], "__sort": [115, 119, 137, 138, 144, 145], "as__": [115, 119, 137, 138, 144, 145], "todo": [115, 119, 137, 138, 144, 145], "argmaxmodul": [115, 119, 137, 138, 144, 145], "argmax": [115, 119, 137, 138, 144, 145, 232, 258, 277, 286, 397], "n_ob": [115, 119, 137, 138, 144, 145, 177, 281, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 398], "n_act": [115, 119, 137, 138, 144, 145, 177, 298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 398], "ourselv": [115, 119, 137, 138, 144, 145, 394, 411], "emul": [115, 119, 137, 138, 144, 145], "epoch": [115, 119, 137, 138, 144, 145, 369, 394, 404, 405], "input_td": [115, 119, 137, 138, 144, 145], "rollout_td": [115, 119, 137, 138, 144, 145], "state_kei": [115, 119, 137, 138, 144, 145], "prevail": [115, 119, 137, 138, 144, 145, 161, 191, 219], "creator": [116, 374, 375, 381, 382, 383], "substitut": [116, 196, 207, 397], "vecnorm": [116, 383], "env_creat": [116, 392], "test_env1": 116, "_td": 116, "observation_count": [116, 411], "test_env2": 116, "sleep": [116, 411], "ps": 116, "p1": 116, "p2": 116, "9934": 116, "env_str": 117, "device_map": 117, "accross": [118, 120], "registri": 118, "asyncvectorenv": 118, "involv": [118, 120, 121, 129, 130, 141, 157, 237, 241, 396, 398], "pixel_observ": [118, 120, 121, 141], "pixelobservationwrapp": [118, 120, 121, 141], "adventur": [118, 120], "airraid": [118, 120, 411], "alien": [118, 120], "time_limit": 118, "timelimit": [118, 129, 130, 146, 147], "default_info_dict_read": [118, 119, 120, 137], "reader": [118, 119, 120, 137, 393], "set_info_dict_read": [118, 119, 120, 137, 396], "info_dict": [118, 119, 120, 137], "auto_register_info_dict": [118, 119, 120, 137], "multibinari": [118, 120], "multidiscret": [118, 120], "rag": [118, 120], "gym_conversion_exampl": [118, 120], "info_dict_read": [119, 137], "ignore_priv": 119, "baseinfodictread": 119, "tensordictprim": [119, 137, 237, 241, 295, 395], "succe": [119, 137], "underscor": 119, "primer": [119, 197, 237, 241, 295, 395], "halfcheetah": [119, 137, 153, 187, 392], "reward_run": [119, 137], "read_act": 119, "read_don": 119, "nonsens": 119, "fallback": 119, "broken": [119, 211], "read_ob": 119, "dictat": [119, 284, 288, 318, 392, 406], "read_reward": 119, "hoc": [119, 137, 397], "dict_read": 119, "my_info_kei": 119, "some_env": 119, "vecenv": 120, "vectorenv": 120, "convert_actions_to_numpi": 120, "isaaclab": 120, "secur": 121, "habitat3": 121, "ai": [121, 407], "habitatrenderpick": 121, "isaacgym": [122, 123], "isaacgymwrapp": [122, 385], "isaacgymenv": [123, 385], "webpag": 123, "isaac": 123, "essenc": [123, 396], "instadeepai": [124, 125], "2306": [124, 125], "09884": [124, 125], "snake": [124, 125], "grid": [124, 125, 352], "bodi": [124, 125], "body_st": [124, 125], "fruit_posit": [124, 125], "col": [124, 125], "head_posit": [124, 125], "tail": [124, 125], "game2048": [124, 125], "maze": [124, 125], "cleaner": [124, 125], "cvrp": [124, 125], "multicvrp": [124, 125], "minesweep": [124, 125], "rubikscub": [124, 125], "knapsack": [124, 125], "sudoku": [124, 125], "tsp": [124, 125], "connector": [124, 125], "v2": [124, 125, 142, 143, 327, 341, 342, 343, 344, 346, 347, 348, 349, 395, 411], "mmst": [124, 125], "graphcolor": [124, 125], "partli": [124, 125], "scrambl": [124, 125], "robotwarehous": [124, 125], "tetri": [124, 125], "binpack": [124, 125], "jobshop": [124, 125], "0x1fca91910": 124, "122": [124, 125, 406, 408, 411], "0x1ff9baee0": 124, "134": [124, 125, 406], "0x1ff9ba7c0": 124, "172": [124, 125, 406], "drastic": [125, 137, 408], "rubric": [125, 179, 290], "mo": [126, 127], "minecart": [126, 127], "mo_gym": 127, "qualnam": 128, "leverag": [128, 139, 140, 392, 405, 411], "neural": [128, 139, 140, 222, 223, 261, 287, 387, 393, 394, 395, 397, 404, 405, 406, 411], "group_map": [128, 129, 130, 135, 136, 139, 140, 146, 147, 148, 404], "constructiuon": [128, 139, 140], "premad": [128, 129, 130, 139, 140, 146, 147, 330], "all_in_one_group": [128, 135, 136, 148], "agent_0": [128, 139, 140, 148, 404], "agent_1": [128, 139, 140, 148], "agent_2": [128, 139, 140, 148], "agent_3": 128, "one_group_per_ag": [128, 139, 140], "meltingpot": [129, 130], "2211": [129, 130], "13746": [129, 130], "melt": [129, 130], "pot": [129, 130], "novel": [129, 130, 398], "social": [129, 130], "familiar": [129, 130, 393, 405, 411], "unfamiliar": [129, 130], "broad": [129, 130], "cooper": [129, 130, 404, 405], "decept": [129, 130], "reciproc": [129, 130], "trust": [129, 130, 241], "stubborn": [129, 130], "substrat": [129, 130], "ml_collect": 129, "config_dict": 129, "configdict": 129, "categorical_act": [129, 130, 135, 136, 139, 140, 142, 143, 146, 147], "marlgroupmaptyp": [129, 130, 135, 136, 139, 140, 146, 147, 148, 385, 404], "agent_nam": [129, 130, 146, 147, 148], "agent_names_to_indices_map": [129, 130, 146, 147], "env_torchrl": [129, 130], "commons_harvest__open": [129, 130], "rgb": [129, 130], "144": [129, 130, 406], "192": [129, 130, 393, 406], "collective_reward": [129, 130], "ready_to_shoot": [129, 130], "88": [129, 130, 142, 143, 392, 393, 406], "substrate_config": 130, "get_config": 130, "mp_env": 130, "build_from_config": 130, "default_player_rol": 130, "environn": 131, "mymbenv": [131, 221, 244], "world_model": [131, 221, 244, 310], "hidden_observ": [131, 221, 244], "mlp": [131, 221, 222, 223, 225, 226, 227, 228, 234, 237, 241, 244, 248, 249, 270, 276, 295, 303, 305, 387, 393, 397, 398, 401, 403, 407, 410], "worldmodelwrapp": [131, 221, 244], "activation_class": [131, 221, 222, 223, 225, 226, 227, 228, 233, 234, 242, 244, 247, 248, 393, 397, 404, 405, 410], "relu": [131, 221, 229, 244, 252, 297], "activate_last_lay": [131, 221, 228, 242, 244], "sail": [132, 133], "sg": [132, 133], "10558": [132, 133], "readthedoc": [132, 135, 136], "en": [132, 135, 136], "python_interfac": 132, "envpoolmixin": 133, "env_bas": 133, "task_id": 133, "env_typ": 133, "gym_reset_return_info": 133, "envpool_env": 133, "www": [134, 245, 246], "fetch_openml": 134, "106": [134, 406], "openspiel": [135, 136], "open_spiel": [135, 136], "game_str": 135, "return_st": [135, 136, 139, 140], "4672": [135, 136, 393, 406], "current_play": [135, 136], "fen": [135, 136], "rnbqkbnr": [135, 136], "pppppppp": [135, 136], "kqkq": [135, 136], "674": [135, 406], "2048": [135, 136, 393, 407], "add_nois": [135, 136], "amazon": [135, 136], "backgammon": [135, 136], "restor": [135, 136], "td_restor": [135, 136], "pyspiel": 136, "load_gam": 136, "new_initial_st": 136, "3009": 136, "my_env_fun": [137, 144], "custom_attribute_list": [137, 144], "custom_attribut": [137, 144], "custom_method_list": [137, 144], "custom_method": [137, 144], "deploi": [137, 144, 157], "slight": [137, 144, 393], "share_individual_td": [137, 144], "shared_memori": [137, 144], "policy_proof": [137, 144], "ll": [137, 144, 235, 236, 239, 240, 392, 393, 394, 395, 396, 397, 398, 399, 401, 405, 411], "serial_for_singl": [137, 144, 393], "circular": [137, 144, 392], "list_of_kwarg": [137, 144], "com_veloc": [137, 144], "head_height": [137, 144], "joint_angl": [137, 144], "torso_vert": [137, 144], "stringent": [137, 394, 404, 405], "inter": 137, "penv": 137, "env_fix": 137, "influenc": 137, "thumb": [137, 394], "myenv": [137, 157, 166, 169], "pipe": 137, "update_kwarg": [137, 144], "th": [138, 173, 202, 235, 239, 406], "thdot": [138, 406], "max_spe": [138, 406], "max_torqu": [138, 406], "gen_param": [138, 406], "gravit": [138, 406], "torqu": [138, 406], "pettingzoo": [139, 140, 404, 405], "pet": [139, 140], "zoo": [139, 140], "__": [139, 140], "aecenv": [139, 140], "use_mask": [139, 140], "dead": [139, 140], "done_on_ani": [139, 140, 404], "compulsori": [139, 140], "adversary_0": [139, 140, 404], "adversari": [139, 140, 312, 404], "sisl": 139, "multiwalker_v9": 139, "aec": [139, 140], "n_piston": [139, 140], "pistonball_v6": [139, 140], "piston": [139, 140], "piston_0": [139, 140], "piston_1": [139, 140], "piston_20": [139, 140], "tictactoe_v3": [139, 140], "player": [139, 140, 145], "player_1": [139, 140], "player_2": [139, 140], "butterfli": 140, "parallel_env": [140, 392, 410, 411], "vikashplu": 141, "wiki": 141, "06828": 141, "from_depth": 141, "smacv2": [142, 143], "starcraft": [142, 143], "challeng": [142, 143, 396, 406, 407], "10gen_terran": [142, 143], "10gen_zerg": [142, 143], "10gen_protoss": [142, 143], "3m": [142, 143], "8m": [142, 143, 407], "25m": [142, 143], "5m_vs_6m": [142, 143], "8m_vs_9m": [142, 143], "10m_vs_11m": [142, 143], "27m_vs_30m": [142, 143], "mmm": [142, 143], "mmm2": [142, 143], "2s3z": [142, 143], "3s5z": [142, 143], "3s5z_vs_3s6z": [142, 143], "3s_vs_3z": [142, 143], "3s_vs_4z": [142, 143], "3s_vs_5z": [142, 143], "1c3s5z": [142, 143], "2m_vs_1z": [142, 143], "corridor": [142, 143], "6h_vs_8z": [142, 143], "2s_vs_1sc": [142, 143], "so_many_banel": [142, 143], "bane_vs_ban": [142, 143], "2c_vs_64zg": [142, 143], "old": [142, 143, 315, 411], "smac": [142, 143], "map_nam": [142, 143], "176": [142, 143, 392, 406], "battle_won": [142, 143], "dead_al": [142, 143], "dead_enemi": [142, 143], "episode_limit": [142, 143], "322": [142, 143, 406], "Or": [142, 143, 247], "procedur": [142, 143], "distribution_config": [142, 143], "n_unit": [142, 143], "n_enemi": [142, 143], "team_gen": [142, 143], "dist_typ": [142, 143], "weighted_team": [142, 143], "unit_typ": [142, 143], "marin": [142, 143], "maraud": [142, 143], "medivac": [142, 143], "exception_unit_typ": [142, 143], "start_posit": [142, 143], "surrounded_and_reflect": [142, 143], "map_x": [142, 143], "map_i": [142, 143], "capability_config": [142, 143], "131": [142, 143, 406], "starcraft2env": 143, "tic": 145, "tac": 145, "toe": 145, "single_play": 145, "player1": 145, "desired_batch_s": 145, "board": 145, "player0": 145, "proroklab": [146, 147], "vectorizedmultiagentsimul": [146, 147], "2207": [146, 147], "03530": [146, 147], "basescenario": 146, "perfrom": [146, 147], "defaultt": 146, "continuous_act": [146, 147, 350, 404, 405], "repositiori": 146, "sparsiti": 146, "unbatched_action_spec": [146, 147, 405], "unbatched_observation_spec": [146, 147], "unbatched_reward_spec": [146, 147], "het_spec": [146, 147], "het_specs_map": [146, 147], "flock": [146, 147, 350], "agent_collision_rew": [146, 147], "agent_distance_rew": [146, 147], "ca": 148, "environment4": 148, "get_group_map": 148, "sumbodul": 149, "model_bas": [150, 151, 221, 244], "out_keys_inv": [150, 163, 166, 167, 169, 179, 180, 181, 185, 186, 193, 200, 406], "decod": [150, 253], "model_based_env": [150, 309], "dreamerenv": [150, 309, 385], "model_based_env_ev": 150, "num_interv": 153, "out_action_kei": 153, "samplingstrategi": 153, "optino": 153, "intenum": 153, "interv": [153, 351, 352, 361, 371, 393, 406], "action_disc": 153, "transform_input_spec": [153, 157, 164, 166, 167, 168, 179, 181, 185, 186, 191, 195, 196, 197, 200, 202, 204, 209], "masker": 154, "tensor_spec": [154, 210, 219, 306, 307, 318, 320], "maskedenv": 154, "ones_lik": 154, "scatter": 154, "fill_float": 156, "fill_int": 156, "fill_bool": 156, "someenvclass": 156, "autoresetenv": 156, "argumet": 156, "fooenv": 156, "sign": [156, 193, 332, 404], "envtyp": 156, "reshape_fn": 157, "reset_func": 157, "environmt": 157, "request": [157, 184], "tensordict_batch_s": 157, "tensordict_reset": [157, 406], "transform_env_batch_s": [157, 164, 200, 209], "transform_output_spec": [157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "transform_observation_spec": [157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 206, 207, 209, 406], "transform_reward_spec": [157, 158, 163, 164, 166, 167, 171, 177, 185, 186, 189, 190, 191, 192, 193, 195, 200, 202, 209], "transformfull_done_spec": [157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "biner": 158, "burn_in": 159, "burn": 159, "date": [159, 355], "retur": 159, "burnt": 159, "gru_modul": [159, 237, 295], "input_s": [159, 235, 236, 237, 239, 240, 241, 295, 395], "hidden_s": [159, 235, 236, 237, 239, 240, 241, 295, 395], "set_recurrent_mod": [159, 237, 241, 395], "burn_in_transform": 159, "gru": [159, 197, 236, 237, 295], "num_lay": [159, 235, 237, 239, 241, 253, 254, 295], "86": [159, 392, 393, 404, 406, 407], "3008": [159, 393], "0344": 159, "padding_valu": [160, 245, 246], "as_invers": 160, "movement": 160, "1312": [160, 393], "5602": 160, "unsqueezetransform": [160, 406, 408], "consumpt": [160, 385], "followin": 160, "pictur": 160, "pixels_trsf": [160, 408], "grayscal": [160, 393, 395, 408, 411], "data_exclud": [160, 408], "del_kei": [161, 203, 403, 406], "unsqueeze_if_oor": 161, "observation_posit": 161, "observation_veloc": 161, "key1": [161, 360, 368], "key2": [161, 360, 368], "center": [162, 352], "width": [162, 165, 187], "scalar": [163, 189, 226, 228, 250, 251, 273, 274, 278, 279, 282, 283, 294, 298, 299, 300, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 330, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 387, 393, 398, 406], "permit": [163, 173, 202, 298, 300, 315, 318, 320], "rewardsc": [164, 201, 392, 393, 395], "rewardclip": 164, "transformed_env": [164, 200, 201, 396], "transform_env_devic": [164, 167, 200, 209], "dtype_in": 166, "dtype_out": 166, "scan": [166, 169, 289, 290], "resp": [166, 169], "not_transform": [166, 169], "constructedw": [166, 169], "orig_devic": 167, "unspecifi": 167, "transform_done_spec": [167, 200, 209], "num_actions_effect": 168, "max_act": 168, "include_forward": 168, "num_act": [168, 307, 397], "action_out": 168, "_call": [168, 173, 406], "eol_kei": 170, "lives_kei": 170, "eol_attribut": 170, "unwrap": 170, "breakout": 170, "210": [170, 181, 406], "160": [170, 181, 393, 406], "eol_transform": 170, "eol": 170, "dqnloss": [170, 298, 299, 301, 302, 305, 307, 308, 309, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 330, 376, 385, 388, 393, 395, 401], "register_kei": 170, "loss_or_advantag": 170, "lossmodul": [170, 369, 378, 379, 385, 388], "valueestimatorbas": [170, 316, 385], "excluded_kei": 171, "finit": [172, 397, 408], "first_dim": 173, "last_dim": 173, "allow_positive_dim": [173, 202], "frameskip": 173, "repeatedli": [174, 394, 405], "init_kei": [176, 281], "tracker": 176, "pi_curr": 177, "pi_0": 177, "overfit": 177, "probabilist": [177, 284, 298, 318, 385, 394, 410], "get_dist": [177, 288, 289], "mod": [177, 237, 241, 281, 291, 395, 401], "normalparamextractor": [177, 270, 271, 272, 284, 290, 298, 299, 301, 307, 314, 318, 319, 320, 321, 323, 324, 387, 394, 397, 405, 410], "probabilisticactor": [177, 270, 271, 272, 275, 298, 299, 301, 304, 306, 307, 314, 317, 318, 319, 320, 321, 323, 324, 387, 392, 394, 397, 404, 405], "tanhnorm": [177, 270, 271, 272, 284, 290, 298, 299, 301, 314, 318, 319, 320, 321, 323, 324, 385, 394, 405, 410], "return_log_prob": [177, 270, 271, 272, 284, 288, 290, 320, 387, 394, 397, 404, 405, 410], "apply_": 177, "copy_": [177, 392], "formulat": 177, "diverg": [177, 237, 241, 284, 288, 310, 315], "noop": [178, 410], "trial": 178, "standard_norm": [179, 190, 207, 392, 393, 395], "affin": [179, 190, 207], "layer": [179, 207, 220, 222, 223, 225, 226, 231, 233, 235, 236, 237, 239, 240, 241, 242, 247, 248, 250, 251, 253, 254, 261, 262, 268, 280, 291, 387, 393, 394, 395, 397, 404, 407], "epsilon": [179, 273, 274, 278, 279, 282, 283, 322, 367, 393, 394, 395, 397], "recover": 179, "set_default_tensor_typ": 179, "doubletensor": 179, "isclos": 179, "next_ob": [179, 332, 333, 334, 335, 410], "init_stat": [179, 392, 393, 394, 395], "3752e": 179, "5087e": 179, "9294e": 179, "9636": 179, "5608": 179, "6408": 179, "num_it": [179, 393, 394], "reduce_dim": [179, 392, 393, 394, 395], "cat_dim": [179, 392, 393, 394, 395], "keep_dim": [179, 393, 395], "statist": [179, 207, 220, 320, 383, 392, 393, 394, 411], "gaussian": [179, 197, 221, 244, 250, 251, 256, 273, 274, 394, 404], "empir": [179, 221, 244, 284, 288, 392, 394, 405], "3d": [179, 222], "third": [179, 277, 404, 405], "reorder": 181, "in_keys_in": 181, "channel": [181, 199, 247, 253, 254, 393], "r3m": [183, 407], "resnet": [183, 203, 205], "visual": [183, 203, 205, 352, 394, 404, 406], "embed": [183, 203, 204, 205, 225, 257, 269, 270, 271, 272, 287, 292, 407], "ego4d": [183, 203, 205], "univers": [183, 203, 205, 396], "suraj": [183, 203], "nair": [183, 203], "aravind": [183, 203], "rajeswaran": [183, 203], "vikash": [183, 203, 205], "kumar": [183, 203, 205], "chelsea": [183, 203], "finn": [183, 203], "abhinav": [183, 203], "gupta": [183, 203], "2203": [183, 203, 244, 407], "12601": [183, 203, 407], "_init": [183, 203, 392], "resnet50": [183, 205, 407], "model_nam": [183, 203, 205, 355], "resnet34": 183, "resnet18": 183, "r3m_vec": [183, 407], "stack_imag": [183, 205], "tread": [183, 205], "separet": [183, 205], "hub": [183, 205, 396, 407], "resnet50_weight": [183, 205], "imagenet1k_v1": [183, 205], "download_path": [183, 205], "tensor_pixels_kei": [183, 205], "sub_seq_len": 184, "sample_dim": [184, 392], "hesit": 184, "robust": [184, 220], "mix": [184, 257, 266, 330, 392, 404, 405], "improp": 184, "dummyenv": 185, "another_oth": 185, "other_reward": 185, "create_copi": 186, "stuff": [186, 399], "newnam": 186, "r2g": 188, "reward_to_go": 188, "bernoulli_": 188, "9010": 188, "9404": [188, 338], "9701": [188, 338], "9900": [188, 338], "0000": [188, 198, 278, 279, 291, 338, 395, 406, 410], "crash": 188, "clamp_min": 189, "clamp_max": 189, "clip_min": 189, "clip_max": 189, "episode_": 191, "reward1": 191, "reward2": 191, "episode_reward": [191, 404, 405], "keep_reward": 192, "keep_don": 192, "logical_or": 193, "squeeze_dim": 194, "step_count_kei": 195, "update_don": 195, "disjunct": 195, "recognis": 195, "target_return": 196, "subtract": 196, "default_valu": [197, 295, 395], "unit": [197, 221, 233, 235, 236, 253, 254, 259, 260, 394], "transfomedenv": 197, "mykei": 197, "__unless": 197, "exists__": 197, "get_primers_from_modul": [197, 237, 241, 385], "10th": 198, "0216": 198, "1149": 198, "1990": 198, "2749": 198, "3281": 198, "9290": 198, "3702": 198, "8978": 198, "from_int": 199, "shape_toler": 199, "permuat": 199, "ri": 199, "principl": 200, "cattransform": 200, "notabl": 200, "rewardsum": [200, 209, 218, 404, 405], "smoothli": [201, 220], "add_1": 201, "cache_spec": 201, "set_missing_toler": 201, "keyerror": 201, "unsqueeze_dim": [202, 406], "danger": 202, "vc1": 203, "vc1_vec": 203, "untrain": 203, "make_noload_model": 203, "vip": [204, 205, 407], "implicit": [205, 306, 314, 408], "jason": 205, "ma": 205, "shagun": 205, "sodhani": 205, "dinesh": 205, "jayaraman": 205, "osbert": 205, "bastani": 205, "ami": 205, "zhang": 205, "vip_vec": 205, "final_nam": 206, "sb3": 206, "terminal_obs_read": 206, "truli": [206, 410], "till": 206, "shared_td": 207, "decai": [207, 273, 274, 278, 322, 367, 392, 393, 395, 411], "9999": [207, 406], "0001": [207, 233, 252, 406], "to_observation_norm": 207, "frozen_copi": 207, "race": 207, "underflow": [207, 367], "build_td_for_shared_vecnorm": 207, "memmori": 207, "queue": [207, 408], "td_share": 207, "unfreez": 207, "train_env": 207, "eval_env": 207, "state_dim": [208, 224, 229, 256, 259, 260, 275], "action_dim": [208, 224, 225, 227, 229, 256, 275, 392, 403], "gsde": [208, 319, 383], "gsdemodul": 208, "rb_transform": 209, "resist": 209, "insensit": 209, "sensit": [209, 393], "_orig": 209, "95": [209, 244, 326, 392, 393, 394, 395, 406], "tdreset": [209, 403], "window": [209, 281, 404, 408, 410], "edit": [209, 399], "cube": 210, "check_dtyp": 211, "discrep": [211, 298, 300, 302, 303, 315, 318, 320, 330], "rng": [211, 406], "revert": [211, 397, 408], "unsqueeze_null_shap": 215, "probabilistictdmodul": [216, 217, 242, 284, 288, 331, 365], "next_tensordict": 218, "keep_oth": [218, 406], "exclude_reward": 218, "exclude_don": 218, "exclude_act": 218, "next_": 218, "funtion": 218, "_stepmdp": 218, "write_full_fals": 219, "_terminated_or_trunc": 219, "momentum": 220, "max_r": 220, "max_d": 220, "warmup_step": 220, "batchrenorm": 220, "1702": 220, "03275": 220, "corenet": 220, "enhanc": 220, "warmup": 220, "phase": [220, 405, 408], "outlier": 220, "period": 220, "varianc": [220, 221, 238, 252, 264, 265, 388, 392, 394, 405], "warm": 220, "renorm": 220, "entropi": [221, 298, 299, 300, 301, 306, 307, 314, 315, 317, 318, 319, 321, 323, 324, 405], "botev": 221, "2013": 221, "cem": 221, "plan": [221, 243, 244], "k": [221, 235, 236, 239, 240], "maximis": [221, 225, 227, 244, 387, 393, 394, 405], "modelbasedenv": [221, 244], "planning_horizon": [221, 244], "optim_step": [221, 244, 393, 401], "mpc": [221, 243, 244], "num_candid": [221, 244], "candid": [221, 244], "top_k": [221, 244], "modelbasedenvbas": [221, 243, 244, 385], "safemodul": [221, 243, 270, 272, 288, 298, 299, 301, 306, 307, 314, 318, 319, 320, 321, 323, 324, 374, 375, 379, 385, 410], "num_cel": [222, 223, 225, 226, 227, 228, 233, 234, 237, 241, 242, 247, 248, 270, 295, 393, 394, 395, 397, 398, 401, 404, 405, 410], "elu": [222, 223, 225, 226, 227, 228, 233, 234, 247, 393, 410], "activation_kwarg": [222, 223, 242], "norm_class": [222, 223, 225, 226, 242], "norm_kwarg": [222, 223, 242], "bias_last_lay": [222, 223, 225, 226, 227, 228, 234, 242], "aggregator_class": [222, 223, 225, 226, 393, 395, 410], "squashdim": [222, 223, 225, 234, 247, 410], "aggregator_kwarg": [222, 223, 225, 226, 393, 395], "squeeze_output": [222, 223, 225, 226, 393, 395], "cell": [222, 223, 235, 236, 237, 239, 240, 241, 242, 247, 248, 394, 396, 397, 398, 399, 400, 401], "kernel": [222, 223, 234, 247], "cnet": [222, 223], "conv3d": 222, "lazyconv2d": [223, 225, 226, 234, 247, 410], "transformer_config": [224, 256, 275], "decisiontransform": [224, 256], "dtconfig": [224, 229, 256], "2202": [224, 229, 317], "05607": [224, 229, 317], "return_to_go": [224, 229, 256, 275], "conv_net_kwarg": [225, 226], "mlp_net_kwarg": [225, 226, 227], "use_avg_pool": [225, 226], "WITH": [225, 226, 227, 228, 282, 283, 322], "1509": [225, 226, 227, 228, 244, 282, 283, 303, 313, 322, 406], "02971": [225, 226, 227, 228, 282, 283, 322], "reus": [225, 359], "convnet": [225, 226, 234, 247, 395, 397, 410], "ndims_in": 225, "avgpool": [225, 226], "lazylinear": [225, 226, 227, 228, 234, 242, 387, 394, 397, 406, 407, 410], "2304": [225, 393], "adaptiveavgpool2d": [226, 393, 395], "output_s": [226, 393, 395], "squeeze2dlay": 226, "400": [227, 228, 400, 405, 406, 408], "mlp_net_kwargs_net1": 228, "mlp_net_kwargs_net2": 228, "mlp1": 228, "mlp2": 228, "decion": 229, "desdescrib": 229, "n_embd": 229, "n_layer": [229, 235, 239], "n_head": 229, "n_inner": 229, "n_posit": 229, "resid_pdrop": 229, "attn_pdrop": 229, "gpt2config": 229, "atol": [230, 263], "rtol": [230, 263], "batch_shap": [230, 263], "event_shap": [230, 263], "absolut": [230, 263, 392], "densiti": [230, 245, 246, 255, 265], "mass": [230, 245, 246, 255, 265, 406], "rsampl": [230, 246, 255, 288], "sample_shap": [230, 245, 246, 255], "softmax": [231, 246, 255, 276, 277], "action_valu": [231, 232, 258, 276, 277, 285, 286, 307, 316, 330, 387, 395, 397, 401], "var_num": [232, 258, 276, 277, 286], "action_value_kei": [232, 258, 276, 277, 285, 286, 316, 330], "action_mask_kei": [232, 258, 276, 277, 278, 279, 285, 286], "perspect": [232, 277, 308, 394], "1707": [232, 277, 308, 318], "06887": [232, 277, 308], "mult": [232, 248, 258, 276, 277, 285, 286], "tensordict_modul": [232, 235, 236, 239, 240, 258, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 301, 302, 306, 307, 314, 318, 319, 320, 321, 323, 324, 387], "nbin": [232, 276, 387], "customdistributionalqv": 232, "log_softmax": [232, 276], "from_modul": [232, 287, 290, 410], "qvalue_actor": [232, 258, 276, 285, 387], "to_modul": [232, 287, 290, 392, 410], "std_bia": 233, "std_min_val": 233, "belief": [233, 253, 259, 260], "1912": [233, 309, 310, 311], "01603": [233, 309, 310, 311], "softplu": [233, 252, 294, 296, 297], "out_features_valu": 234, "cnn_kwarg": [234, 393], "mlp_kwarg": [234, 393], "duel": 234, "cnn": [234, 247, 393, 397, 410], "06581": 234, "batch_first": [235, 237, 239, 241, 395], "bidirect": [235, 239, 395], "cudnn": [235, 236, 239, 240, 395], "rnn": [235, 236, 237, 239, 240, 241, 395, 397], "device_count": [235, 236, 239, 240, 411], "n_in": [235, 236, 239, 240], "n_out": [235, 236, 239, 240], "h0": [235, 236, 239, 240], "h1": [235, 236, 239, 240], "vectoris": [235, 236, 239, 240], "call_gru": [235, 236], "h_out": [235, 236, 239, 240], "batched_cal": [235, 236, 239, 240], "gate": [235, 236, 239], "r_t": 235, "sigma": [235, 236, 238, 239, 240, 264, 265, 273, 274, 282, 283, 394, 404], "w_": [235, 236, 239, 240], "ir": [235, 236], "x_t": [235, 239], "b_": [235, 236, 239, 240], "hr": [235, 236, 239], "h_": [235, 236, 239], "z_t": 235, "iz": [235, 236], "hz": [235, 236], "n_t": 235, "odot": [235, 236, 239, 240], "hn": [235, 236, 239], "h_t": [235, 239], "sigmoid": [235, 236, 239, 240], "hadamard": [235, 236, 239, 240], "multilay": [235, 239], "_t": [235, 239, 405, 406], "ge": [235, 239], "bernoulli": [235, 239], "b_ih": [235, 236, 239, 240, 241], "b_hh": [235, 236, 239, 240, 241], "seq": [235, 237, 239, 241, 281, 395, 401, 403], "h_0": [235, 239, 240], "unbatch": [235, 239], "pack_padded_sequ": [235, 239], "pack_sequ": [235, 239], "num": [235, 239, 401], "_layer": [235, 239], "_size": [235, 236, 239, 240], "h_n": [235, 239], "packedsequ": [235, 239], "weight_ih_l": [235, 239], "learnabl": [235, 236, 239, 240], "w_ir": 235, "w_iz": 235, "w_in": 235, "num_direct": [235, 239], "weight_hh_l": [235, 239], "w_hr": 235, "w_hz": 235, "w_hn": 235, "bias_ih_l": [235, 239], "b_ir": 235, "b_iz": 235, "b_in": 235, "bias_hh_l": [235, 239], "b_hr": 235, "b_hz": 235, "b_hn": 235, "mathcal": [235, 236, 239, 240], "sqrt": [235, 236, 239, 240, 282, 283], "frac": [235, 236, 239, 240, 394], "seq_len": [235, 239], "subtli": 235, "matrix": [235, 239, 250, 251], "contrast": [235, 313, 408], "hx": [235, 236, 239, 240], "lstmcell": [236, 241], "gru_cel": 236, "z": 236, "weight_ih": [236, 240], "weight_hh": [236, 240], "bias_ih": [236, 240], "bias_hh": [236, 240], "rocm": [236, 240], "embedd": [237, 241], "grucel": [237, 287], "python_bas": [237, 241], "recurrent_st": [237, 241, 295, 395], "custom_kei": [237, 241], "recurrent_mod": [237, 241], "make_tensordict_prim": [237, 241, 395], "rs": [237, 392], "gru_module_train": 237, "policy_train": [237, 241], "traj_td": [237, 241], "supplementari": [237, 241, 394, 411], "That": [237, 241, 394, 404], "dealt": [237, 241], "poorli": [237, 241], "data_collector": [237, 241, 393], "policy_infer": [237, 241], "td_inf": [237, 241], "assert_clos": [237, 241], "upscal": [238, 264, 265], "tanh_loc": [238, 264, 265], "event_dim": [238, 263, 264], "poor": [238, 264, 265], "explos": [238, 264, 265], "switch": [238, 265, 350], "formula": [238, 264, 265, 298, 300, 315, 318, 388, 394], "proj_siz": 239, "c0": [239, 240], "c1": [239, 240], "call_lstm": [239, 240], "c_out": [239, 240], "i_t": 239, "ii": [239, 240], "hi": [239, 240], "f_t": 239, "hf": [239, 240], "g_t": 239, "ig": [239, 240], "hg": [239, 240], "o_t": 239, "ho": [239, 240], "c_t": 239, "c_": 239, "forget": 239, "1402": 239, "1128": 239, "c_0": [239, 240], "proj": 239, "c_n": 239, "w_ii": 239, "w_if": 239, "w_ig": 239, "w_io": 239, "w_hi": 239, "w_hf": 239, "w_hg": 239, "w_ho": 239, "b_ii": 239, "b_if": 239, "b_ig": 239, "b_io": 239, "b_hi": 239, "b_hf": 239, "b_hg": 239, "b_ho": 239, "weight_hr_l": 239, "_revers": 239, "analog": [239, 397], "cn": 239, "lstm_cell": 240, "h_1": 240, "c_1": 240, "time_step": [240, 281], "cx": 240, "correspont": 241, "recurrent_state_h": [241, 395], "recurrent_state_c": [241, 395], "triplet": [241, 285, 286], "lstm_modul": 241, "rs_h": 241, "rs_c": 241, "hidden0": 241, "hidden1": 241, "single_bias_last_lay": 242, "layer_class": 242, "layer_kwarg": 242, "perceptron": [242, 397], "aslo": 242, "42": [242, 298, 299, 301, 302, 306, 314, 321, 393, 395, 406, 408], "noisylinear": [242, 250, 385, 393], "noisylazylinear": [242, 385], "mpcplanner": 243, "tensordict_out": [243, 394, 411], "mppi": 244, "covari": 244, "william": [244, 320], "aldrich": 244, "theodor": 244, "01149": 244, "hansen": 244, "wang": 244, "su": 244, "04955": 244, "valueoper": [244, 270, 271, 272, 298, 299, 300, 301, 302, 307, 314, 315, 318, 319, 320, 321, 323, 324, 379, 387, 392, 394, 398], "tdlambdaestim": [244, 385, 392], "value_net": [244, 303, 305, 320, 332, 333, 334, 335, 394, 397, 398, 401], "adv": 244, "lmbda": [244, 326, 332, 335, 337, 343, 344, 345, 348, 349, 388, 392, 394, 405], "value_network": [244, 302, 303, 305, 306, 308, 314, 321, 332, 333, 334, 335, 388, 392, 394, 398, 401, 404], "temperatur": [244, 299, 306, 314], "neg_inf": [245, 246], "inf": [245, 246], "api_doc": [245, 246], "tf_agent": [245, 246], "event": [245, 246, 255, 341, 342, 343, 344, 346, 347, 348, 349, 408], "unnorm": [245, 246, 255], "sparse_mask": [245, 246], "dens": [245, 246], "0831": [245, 246], "1203": [245, 246], "0928": [245, 246], "1972": [245, 246], "grad_method": [246, 255], "reparamgradientstrategi": [246, 255], "passthrough": [246, 255], "relaxedonehot": [246, 255], "zeros_lik": [246, 406], "sample_non_valid": 246, "share_param": [247, 248, 249, 404, 405], "use_td_param": [247, 248, 249], "get_stateful_net": [247, 248, 249, 316, 387, 388], "from_stateful_net": [247, 248, 249, 316, 388], "homogen": [247, 248, 404, 405], "tensordictparam": [247, 248], "_empty_net": [247, 248], "roughli": [247, 248, 410], "agent_network": [247, 248], "modulelist": [247, 248, 410], "2592": [247, 393], "decentr": 247, "n_agent_input": [248, 249, 404, 405], "n_agent_output": [248, 249, 404, 405], "lazili": [248, 406], "toech": 248, "centalis": 248, "shown": [248, 387, 403, 404, 405, 408], "agent_dim": 249, "vmap_random": [249, 316, 388], "stateful_net": [249, 316], "Such": [249, 316], "deepcopi": [249, 316, 404], "multiagentmlp": [249, 404, 405], "snet": 249, "hasattr": [249, 392, 394], "kaiming_normal_": 249, "reset_paramet": 249, "std_init": [250, 251], "initialize_paramet": 250, "isol": [250, 316], "1706": [251, 266], "10295v3": 251, "induc": 251, "aid": 251, "scale_map": 252, "biased_softplus_1": 252, "scale_lb": [252, 259, 260], "module_norm": 252, "1803": [253, 254, 257], "10122": [253, 254], "rnn_hidden": 253, "latent": 254, "excacli": 255, "inres": 256, "mu": [256, 282, 283, 394], "state_shap": [257, 330], "mixing_embed_dim": [257, 330], "qmix": [257, 404, 405], "mixer": [257, 266, 330], "monoton": 257, "hyper": 257, "11485": 257, "qmixerloss": [257, 266], "qmix_vdn": [257, 266], "chosen_action_valu": [257, 258, 266, 285, 286, 330, 387, 395, 397], "vdn": [257, 266], "greedi": [258, 277, 278, 279, 286, 393, 395, 397], "hidden_dim": [259, 260], "posterior": [259, 310], "rssm": [259, 260, 310], "1811": [259, 260], "04551": [259, 260], "obs_embed": 259, "rnn_hidden_dim": 260, "dream": 260, "tanhtransform": 264, "get_mod": 264, "adam": [264, 392, 393, 394, 395, 398, 401, 404, 405, 406], "decomposit": 266, "05296": 266, "hide": [267, 394, 404, 405], "satisfi": [267, 387], "vmap_dim": 267, "lam": 267, "sample_in": 267, "sample_in_td": 267, "vm": 267, "translat": [269, 284], "character": [269, 276, 284, 285, 287, 408], "overflow": [269, 276, 277, 284, 285, 286, 287, 288], "td_modul": [269, 270, 271, 272, 284, 287, 288, 290, 292, 397, 410], "3635": 269, "0340": 269, "1476": 269, "3911": [269, 406], "1664": [269, 393, 406], "5455": 269, "2247": 269, "4583": 269, "2916": 269, "2160": 269, "5337": 269, "5193": 269, "grad_fn": [269, 278, 279, 410], "addmmbackward0": 269, "actorvalueoper": [270, 300, 315, 318, 387, 397], "get_policy_oper": [270, 271, 272, 300, 315, 318, 387], "standalon": [270, 271, 272, 397], "tdmodul": [270, 271, 272, 379], "get_critic_oper": 270, "common_oper": [270, 272], "policy_oper": [270, 271, 272], "value_oper": [270, 271, 272], "module_hidden": [270, 272], "td_module_hidden": [270, 272], "module_act": [270, 272], "td_module_act": [270, 271, 272], "module_valu": [270, 271, 272], "td_module_valu": [270, 271, 272], "state_action_valu": [270, 292, 299, 301, 306, 314, 321, 331, 379, 387, 392, 404, 410], "td_clone": [270, 271, 272], "tensordictmodulewrapp": [270, 374, 375, 379], "get_policy_head": [270, 271, 272], "safesequenti": [270, 271, 272, 330], "head": [270, 272, 295, 300, 315, 318], "get_value_head": [270, 271, 272], "get_value_oper": [270, 271, 272, 300, 315, 318], "action_modul": 271, "state_valu": [271, 272, 292, 300, 306, 314, 315, 318, 319, 321, 332, 333, 334, 335, 337, 339, 341, 343, 345, 346, 348, 387, 392, 394, 405], "actorcriticoper": [272, 387, 397], "embeddig": 272, "refet": 272, "actorcriticwrapp": [272, 387, 392], "po": [273, 274, 279], "sigma_init": [273, 274, 404], "sigma_end": [273, 274, 404], "annealing_num_step": [273, 274, 278, 279, 282, 283, 392, 393, 395, 397, 401, 404], "captur": [273, 274, 278, 279, 282, 283], "omiss": [273, 274, 278, 279, 282, 283], "ommit": [273, 274, 278, 279, 282, 283], "inferec": 275, "set_tensor_kei": 275, "dt_inference_wrapp": 275, "baz": 275, "inference_context": 275, "obs_dim": 275, "tanhdelta": [275, 385, 392, 404], "dtactor": 275, "actor_modul": [275, 410], "dist_class": 275, "dist_kwarg": 275, "distribution_kwarg": [275, 284, 288, 394, 404, 405], "inference_actor": 275, "sequence_length": 275, "mask_context": 275, "out_act": 275, "qvaluemodul": [276, 285, 330, 395, 397, 401], "distributionaldqnnet": 276, "make_log_softmax": 276, "my_action_valu": [277, 286], "chanc": 277, "thid": 277, "eps_init": [278, 279, 282, 283, 393, 395, 397, 401], "eps_end": [278, 279, 282, 283, 393], "explorative_polici": [278, 279, 282, 283], "9055": [278, 279, 406], "9277": [278, 279], "6295": [278, 279], "2532": [278, 279], "addbackward0": [278, 279], "lmheadmodel": 280, "actor_head": [280, 300, 315, 318], "base_model": 280, "lm_head": 280, "macro": 281, "lookahead": 281, "n_action": [281, 299, 301, 303, 305, 317, 321], "reshape_cat": 281, "actor_bas": 281, "obs_cat": 281, "obs_cat_reshap": 281, "action_orig": 281, "counter": [281, 362, 389], "ornstein": [282, 283, 392], "uhlenbeck": [282, 283, 392], "ou": [282, 283, 392], "correl": [282, 283], "noise_t": [282, 283], "noise_": [282, 283], "theta": [282, 283, 394, 406], "sigma_t": [282, 283], "sigma_": [282, 283], "anneal": [282, 283, 393, 397, 404], "ou_prev_nois": [282, 283], "ou_step": [282, 283], "x0": [282, 283], "sigma_min": [282, 283], "n_steps_ann": [282, 283], "is_init_kei": [282, 283], "_ou_prev_nois": [282, 283], "_ou_step": [282, 283], "default_interaction_typ": [284, 288, 397], "interaction_typ": [284, 288, 394], "datacollectorbas": [284, 371, 374, 375, 379, 385], "set_interaction_typ": [284, 288], "compositedistribut": [284, 298, 318, 397], "distribution_map": 284, "name_map": 284, "cache_dist": [284, 288], "n_empirical_estim": [284, 288], "compound": [284, 397], "chose": 286, "functionalmodul": 287, "functionalmodulewithbuff": 287, "td_fmodul": 287, "td_function": 287, "td_state": 287, "params_repeat": 287, "td_vmap": [287, 290], "random_sampl": [287, 288], "suppli": 288, "fist": 288, "log_prob_kei": [288, 405], "probabilistictensordictsequenti": [289, 298, 300, 315, 318, 320, 374, 375, 410], "partial_toler": [289, 290, 403], "who": [289, 290], "AND": [289, 290, 301], "tensordictsequenci": 290, "tensordictsequ": 290, "safeprobabilisticmodul": [290, 387], "spec1": 290, "net1": 290, "module1": 290, "td_module1": 290, "spec2": 290, "module2": 290, "td_module2": 290, "clamp": [291, 310, 369, 404, 406], "boundari": [291, 394, 404, 405], "resolut": 291, "9944": 291, "9991": 291, "3020": 291, "2299": [291, 406], "5418": 291, "2989": 291, "6849": 291, "3169": 291, "2690": 291, "9649": [291, 406], "5686": 291, "8602": 291, "0315": 291, "8455": [291, 406], "6027": 291, "4746": 291, "7843": 291, "7782": 291, "2111": 291, "5115": 291, "4687": 291, "5760": 291, "custommodul": 292, "imaginari": 293, "imagin": 293, "transition_model": 293, "get_reward_oper": 293, "get_transition_model_oper": 293, "min_val": [294, 297], "_bia": 294, "surject": 297, "expln": 297, "biased_softplu": [297, 385], "beggin": 297, "biased_softplus_": 297, "syntax": [297, 392], "met": [297, 404, 406], "1602": 298, "01783v2": 298, "actor_network": [298, 299, 300, 301, 302, 304, 306, 307, 314, 315, 317, 318, 319, 320, 321, 323, 324, 388, 392, 394, 398, 404, 405], "critic_network": [298, 300, 315, 318, 320, 394, 405], "entropy_bonu": [298, 300, 315, 318, 394], "favour": [298, 300, 315, 318], "samples_mc_entropi": [298, 300, 315, 317, 318], "mont": [298, 300, 315, 318, 392], "carlo": [298, 300, 315, 318, 392], "entropy_coef": [298, 300, 315, 318, 394, 405], "critic_coef": [298, 300, 315, 318, 394], "loss_critic_typ": [298, 300, 315, 318, 320, 394], "l1": [298, 300, 302, 303, 307, 315, 318, 319, 320, 323, 324, 327, 330, 387, 392], "l2": [298, 300, 302, 303, 304, 305, 307, 310, 311, 315, 318, 319, 320, 323, 324, 327, 330, 392, 404], "smooth_l1": [298, 299, 300, 301, 302, 303, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 327, 330, 394], "separate_loss": [298, 300, 301, 302, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324], "propag": [298, 300, 301, 302, 306, 307, 314, 315, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335, 394, 404, 405], "advantage_kei": [298, 300, 315, 318, 320, 332, 333, 334, 335], "value_target_kei": [298, 300, 315, 318, 320, 332, 333, 334, 335], "value_target": [298, 300, 315, 318, 320, 332, 333, 334, 335, 394, 405], "ddp": [298, 300, 315, 318, 320], "fsdp": [298, 300, 315, 318, 320], "divid": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324, 372, 387, 392, 404, 405, 406], "clip_valu": [298, 300, 315, 318, 320], "loss_crit": [298, 318, 394, 405], "loss_entropi": [298, 318, 394, 405], "loss_object": [298, 318, 394, 405], "recur": [298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335, 336, 397], "next_reward": [298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335], "next_don": [298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335], "next_termin": [298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 332, 333, 334, 335], "loss_obj": 298, "next_observ": [298, 299, 301, 302, 303, 305, 306, 307, 314, 318, 319, 320, 321, 323, 324, 403], "sacloss": [298, 313, 322, 385], "select_out_kei": [298, 299, 301, 302, 306, 307, 314, 318, 319, 321, 323, 324], "make_value_estim": [298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 325, 330, 388, 392, 393, 404, 405, 410], "value_typ": [298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 326, 330, 392], "hyperparam": [298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 392], "enum": [298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 326, 330, 392], "default_value_estim": [298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 392, 410], "default_value_kwarg": [298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 385, 392], "dqn_loss": [298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 325, 330], "td1": [298, 299, 301, 302, 303, 305, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 330, 392], "conserv": [299, 305], "qvalue_network": [299, 301, 306, 307, 314, 319, 321, 323, 324], "unti": [299, 301, 314, 319, 321, 323, 324], "loss_funct": [299, 301, 302, 303, 304, 305, 306, 307, 314, 319, 321, 323, 324, 327, 330, 392, 404], "alpha_init": [299, 301, 307, 317, 319, 321], "min_alpha": [299, 301, 307, 317, 319, 321], "max_alpha": [299, 301, 307, 317, 319, 321], "fixed_alpha": [299, 301, 307, 317, 319, 321], "target_entropi": [299, 301, 307, 317, 319, 321], "prod": [299, 301, 317, 321], "delay_actor": [299, 302, 321, 323, 324], "delay_qvalu": [299, 307, 319, 321, 323, 324], "min_q_weight": 299, "max_q_backup": 299, "backup": 299, "deterministic_backup": 299, "num_random": 299, "with_lagrang": 299, "lagrang": 299, "lagrange_thresh": 299, "valueclass": [299, 301, 302, 307, 319, 321, 323, 324], "qvalu": [299, 301, 306, 307, 314, 319, 321, 323, 324], "loss_actor": [299, 301, 302, 306, 307, 314, 319, 320, 321, 323, 324, 364, 392, 398, 404, 410], "loss_actor_bc": 299, "loss_alpha": [299, 301, 307, 319, 321], "loss_cql": [299, 305], "loss_qvalu": [299, 301, 305, 306, 307, 314, 319, 321, 323, 324], "loss_alpha_prim": 299, "clip_epsilon": [300, 394, 405], "normalize_advantag": [300, 315, 318, 405], "value_kei": [300, 315, 318, 332, 333, 334, 335, 392], "somemodul": [300, 315, 318], "someactor": [300, 315, 318], "value_head": [300, 315, 318], "somevalu": [300, 315, 318], "loss_modul": [300, 313, 315, 316, 318, 322, 369, 378, 379, 388, 389, 392, 393, 394, 404, 405, 408], "IN": 301, "FOR": 301, "simplic": [301, 393, 394, 399, 407, 408, 410], "openreview": [301, 319], "pczqttstix": 301, "qvalue_loss": [301, 323], "actor_loss": [301, 323], "alpha_loss": 301, "num_qvalue_net": [301, 306, 307, 314, 319, 321, 323, 324], "target_entropy_buff": 301, "delay_valu": [302, 303, 305, 308, 320, 321, 330, 393, 395, 401, 404], "loss_valu": [302, 306, 314, 320, 321, 392, 394, 398, 404, 405, 410], "pred_valu": [302, 305, 323, 324, 392, 398, 410], "pred_value_max": [302, 392, 398, 410], "target_valu": [302, 305, 319, 323, 324, 331, 388, 392, 398, 410], "target_value_max": [302, 392, 398, 410], "qvalueactor": [303, 305, 330, 387, 393, 395], "double_dqn": 303, "06461": [303, 313], "mult_one_hot": [303, 306, 307, 330], "loss_val": [303, 305, 388, 392, 394, 395, 398, 399, 401, 404, 405, 408], "01345": 304, "distanc": [305, 315, 327, 331, 332, 405], "dcql_loss": 305, "2110": [306, 314], "06169": [306, 314], "expectil": [306, 314], "tau": [306, 314, 322, 392, 393, 404], "antmaz": [306, 314], "sticht": [306, 314], "onehotcategor": [306, 307, 385], "target_entropy_weight": 307, "disctount": 308, "distributionalqvalueactor": [308, 387], "input_tensordict": [308, 392], "actor_model": 309, "value_model": [309, 311], "imagination_horizon": 309, "unrol": [309, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349], "discount_loss": [309, 311], "lambda_kl": 310, "lambda_reco": 310, "lambda_reward": 310, "reco_loss": 310, "reward_loss": 310, "free_nat": 310, "nat": 310, "delayed_clamp": 310, "global_averag": 310, "value_loss": 311, "fake_data": 311, "1606": 312, "03476": 312, "discriminator_network": 312, "use_grad_penalti": 312, "gp_lambda": 312, "discrimin": 312, "ddpgloss": [313, 322, 379, 385, 392, 398, 404, 410], "td3loss": [313, 322, 385], "value_network_update_interv": 313, "qvalueclass": 314, "loss_value_diff": 314, "diff": 314, "old_polici": 315, "new_polici": 315, "apart": [315, 405], "dtarg": 315, "samples_mc_kl": 315, "analyt": 315, "decrement": 315, "loss_": [316, 364, 388, 392, 398], "equip": [316, 395, 397], "gh": 316, "_acceptedkei": 316, "_forward_value_estimator_kei": 316, "alter": [316, 387], "value_estim": [316, 332, 333, 334, 335, 336, 388, 392, 405], "myloss": 316, "action2": 316, "augment": [316, 399, 401, 408], "set_exploration_mod": [316, 385], "deterministic_sampling_mod": 316, "convert_to_funct": [316, 392], "expand_dim": 316, "create_target_param": [316, 392], "compare_against": [316, 392], "_param": 316, "expans": 316, "resampl": 316, "_target_param": 316, "network_nam": 316, "blend": 316, "add_random_modul": [316, 388], "proxim": [318, 394, 405], "flavor": [318, 392, 404, 405, 410], "clipppoloss": [318, 385, 394, 405], "klpenppoloss": [318, 385], "06347": 318, "gae": [318, 385, 388, 392, 394, 405], "ppo_loss": 318, "tdlambda": [318, 326, 388, 392], "base_lay": 318, "randn_lik": 318, "samplelogprob": 318, "ay8zfzm0tdd": 319, "sub_sample_len": 319, "subsampl": [319, 360, 389], "action_log_prob_actor": 319, "state_action_value_actor": [319, 323, 324], "connectionist": 320, "1992": 320, "doi": 320, "1007": 320, "bf00992696": 320, "actor_net": [320, 392, 394], "1801": 321, "01290": 321, "applic": [321, 330, 396, 397, 406], "1812": 321, "05905": 321, "redqloss": [322, 385], "math": 322, "theta_t": [322, 406], "theta_": [322, 406], "polyak": 322, "minimalist": 323, "06860": 323, "policy_nois": [323, 324], "noise_clip": [323, 324], "td3_bc": 323, "bc_loss": 323, "lmbd": 323, "next_state_valu": [323, 324, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 385], "td0": [325, 392, 404], "strict_shap": 327, "view_a": 327, "qmixer": [330, 385], "local_valu": 330, "visibl": [330, 405], "dafault": 330, "acceptedkei": 330, "global_valu": 330, "penultim": 330, "local_value_network": 330, "mixer_network": 330, "value_modul": [330, 394, 410], "qnet": [330, 392], "next_val_kei": 331, "pred_next_v": 331, "usus": 331, "mse": 331, "q_valu": 331, "n_steps_to_next": 331, "value_next_st": 331, "1506": [332, 337, 345], "02438": [332, 337, 345], "exponenti": [332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 367], "average_ga": [332, 394], "skip_exist": [332, 333, 334, 335], "time_dim": [332, 334, 335, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349], "advang": 332, "gradient_mod": 332, "value_error": [332, 333, 334, 335, 336], "target_param": [332, 333, 334, 335, 336, 392, 405], "98": [332, 333, 334, 335, 393, 406], "94": [332, 335, 393, 406, 407], "unpack": [332, 333, 334, 335], "tensor_kei": [332, 333, 334, 335, 336], "next_valu": [332, 333, 334, 335, 336], "aka": [333, 393, 404], "average_reward": [333, 334, 335], "tdestim": [333, 334, 336], "infti": 334, "valuefunctionbas": 336, "old_stat": [337, 339, 341, 343, 345, 346, 348], "new_stat": [337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "rolling_gamma": [341, 342, 343, 344, 346, 347, 348, 349], "g1": [341, 342, 343, 344, 346, 347, 348, 349], "g2": [341, 342, 343, 344, 346, 347, 348, 349], "g3": [341, 342, 343, 344, 346, 347, 348, 349], "g4": [341, 342, 343, 344, 346, 347, 348, 349], "v3": [341, 342, 343, 344, 346, 347, 348, 349, 411], "preproc": [350, 404], "as_non_tensor": [350, 404], "render_method": 350, "pass_tensordict": 350, "syntat": 350, "sugar": 350, "out_file_bas": 351, "skip_reset": 351, "center_crop": 352, "make_grid": 352, "csv": [352, 354, 356, 393, 400, 401], "wandb": [352, 356, 359, 400, 410], "tensorboard": [352, 356, 358, 400, 410], "log_dir": [352, 353, 354, 356, 358, 359, 393, 401], "cheetah_video": 352, "run_video": 352, "openxexperiencereplai": 352, "run_video_0": 352, "templat": 353, "pt": [354, 389, 407], "video_fp": 354, "minim": [354, 408], "dependeci": 354, "cur_dir": 354, "csv_log": 354, "add_video": 354, "video_": 354, "experiment_nam": [355, 356], "uuid": [355, 393, 411], "logger_typ": 356, "logger_nam": 356, "mlflow": [356, 357], "wandb_kwarg": 356, "mlflow_kwarg": 356, "tracking_uri": 357, "uri": 357, "datastor": 357, "tb_log": 358, "tensoarboard": 358, "td_log": 358, "save_dir": 359, "resum": 359, "uncategor": 359, "sub_traj_len": 360, "min_sub_traj_len": 360, "register_op": [360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 389, 393], "process_optim_batch": [360, 366, 367, 389], "td_out": [360, 368], "_process_optim_batch_hook": [360, 389], "batch_subsampl": 360, "clear_cuda": 361, "pre_optim_step": [361, 389], "log_pbar": [362, 363, 365, 367, 389, 393], "progress": [362, 363, 365, 369, 389, 393, 395, 411], "count_fram": 362, "pre_steps_log": [362, 363, 389], "count_frames_log": 362, "lognam": 363, "r_train": [363, 393], "log_reward": [363, 393], "loss_compon": 364, "appl": 364, "optimizer_hook": 364, "record_interv": [365, 392, 393], "record_fram": [365, 372, 392, 393], "policy_explor": [365, 379, 392, 393, 397, 401], "log_kei": [365, 393], "underestim": 365, "set_exploration_typ": [365, 385, 394, 395, 397, 404, 410], "r_evalu": [365, 392], "flatten_tensordict": [366, 393], "max_dim": 366, "rb_trainer": 366, "batch_process": [366, 367, 368, 389], "post_loss": [366, 389], "999": [367, 393], "jitter": 367, "finfo": 367, "default_dtyp": 367, "get_default_dtyp": 367, "reward_norm": 367, "update_reward_stat": 367, "normalize_reward": 367, "make_train": [368, 385], "_process_batch_hook": [368, 389], "select_kei": [368, 389], "versatil": [369, 396], "optim_steps_per_batch": [369, 389, 393], "clip_grad_norm": 369, "clip_norm": 369, "progress_bar": 369, "save_trainer_interv": 369, "log_interv": [369, 393], "save_trainer_fil": [369, 389], "update_weights_interv": [371, 393], "update_weight": 371, "post_step": [371, 389, 393], "cfg": [372, 373, 374, 375, 376, 377, 378, 379, 380, 383], "dictconfig": [372, 373, 374, 375, 377, 378, 379, 380, 383], "unknowingli": 372, "annealing_fram": [372, 392], "init_env_step": [372, 373, 392], "proof_environ": [373, 392], "sta": 373, "ot": 373, "actor_model_explor": [374, 375, 392], "make_env_kwarg": [374, 375], "targetnetupdat": [376, 378, 379], "replayargsconfig": 377, "target_net_updat": [379, 392, 393], "constitu": 379, "egreedywrapp": 379, "env_proof": 379, "obs_spec": 379, "net_valu": 379, "dir": [379, 389, 393], "gettempdir": 379, "argpars": [380, 383], "namespac": [380, 383, 411], "parser": [380, 383], "transformed_env_constructor": [380, 385], "num_env_per_collector": [381, 382], "video_tag": 383, "norm_obs_onli": 383, "use_env_cr": 383, "custom_env_mak": 383, "custom_env": 383, "return_transformed_env": 383, "action_dim_gsd": 383, "state_dim_gsd": 383, "obs_norm_state_dict": 383, "wheter": 383, "maker": [383, 393], "asyncdatacollector": 385, "distributedsyncdatacollector": 385, "submitit_delayed_launch": 385, "raycollector": 385, "rational": 385, "footnot": 385, "binarydiscretetensorspec": 385, "boundedtensorspec": 385, "discretetensorspec": 385, "lazystackedcompositespec": 385, "lazystackedtensorspec": 385, "multidiscretetensorspec": 385, "multionehotdiscretetensorspec": 385, "onehotdiscretetensorspec": 385, "unboundedcontinuoustensorspec": 385, "unboundeddiscretetensorspec": 385, "prompttensordicttoken": 385, "rolloutfrommodel": 385, "tokenizeddatasetload": 385, "create_infinite_iter": 385, "constantklcontrol": 385, "adaptiveklcontrol": 385, "consolidate_spec": 385, "check_no_exclusive_kei": 385, "contains_lazy_spec": 385, "nested2t": 385, "h5combin": 385, "h5split": 385, "tictactoeenv": 385, "check_marl_group": 385, "get_available_librari": 385, "terminated_or_trunc": 385, "dreamerdecod": 385, "braxwrapp": 385, "dmcontrolwrapp": 385, "jumanjienv": 385, "jumanjiwrapp": 385, "meltingpotenv": 385, "meltingpotwrapp": 385, "mogymenv": 385, "mogymwrapp": 385, "multithreadedenvwrapp": 385, "openmlenv": 385, "openspielwrapp": 385, "openspielenv": 385, "pettingzooenv": [385, 404], "robohiveenv": 385, "smacv2env": 385, "smacv2wrapp": 385, "vmaswrapp": 385, "qvaluehook": 385, "distributionalqvaluehook": 385, "reset_nois": 385, "cemplann": 385, "mpcplannerbas": 385, "mppiplann": 385, "independentnorm": 385, "normalparamwrapp": 385, "truncatednorm": 385, "maskedonehotcategor": 385, "inv_softplu": 385, "vmapmodul": 385, "distributionaldqnloss": [385, 393], "discretesacloss": 385, "crossqloss": 385, "iqlloss": 385, "discreteiqlloss": 385, "cqlloss": 385, "discretecqlloss": 385, "gailloss": 385, "dtloss": 385, "onlinedtloss": 385, "td3bcloss": 385, "ppoloss": 385, "a2closs": 385, "reinforceloss": 385, "dreameractorloss": 385, "dreamermodelloss": 385, "dreamervalueloss": 385, "td0estim": [385, 392], "td1estim": [385, 392], "td0_return_estim": 385, "td0_advantage_estim": 385, "td1_return_estim": 385, "vec_td1_return_estim": 385, "td1_advantage_estim": 385, "vec_td1_advantage_estim": 385, "td_lambda_return_estim": 385, "vec_td_lambda_return_estim": 385, "td_lambda_advantage_estim": 385, "vec_td_lambda_advantage_estim": 385, "generalized_advantage_estim": 385, "vec_generalized_advantage_estim": 385, "reward2go": 385, "distance_loss": [385, 392], "hold_out_net": 385, "hold_out_param": [385, 392], "softupd": [385, 392, 393, 395, 398, 401, 404], "hardupd": [385, 392, 398], "batchsubsampl": [385, 389], "clearcudacach": 385, "countframeslog": 385, "logreward": [385, 389, 393], "optimizerhook": [385, 393], "replaybuffertrain": [385, 389, 393], "rewardnorm": 385, "selectkei": [385, 389], "trainerhookbas": [385, 389, 393], "updateweight": [385, 389, 393], "make_collector_offpolici": 385, "make_collector_onpolici": 385, "make_dqn_loss": 385, "make_replay_buff": [385, 392], "make_target_updat": 385, "parallel_env_constructor": [385, 392], "sync_async_collector": 385, "sync_sync_collector": 385, "correct_for_frame_skip": 385, "get_stats_random_rollout": 385, "mlflowlogg": 385, "get_logg": 385, "generate_exp_nam": 385, "journei": 386, "textbook": 386, "highlight": [386, 404], "ever": [386, 405], "bump": 386, "think": [386, 394, 404, 405, 411], "benefit": [386, 396, 404, 405, 408], "pr": 386, "ground": [387, 392, 406], "recycl": [387, 408], "impos": 387, "noisier": 387, "Their": [387, 404, 405], "sd": 387, "prob_modul": 387, "pick": [387, 392, 393, 397], "hopefulli": [387, 393], "functional_modul": 387, "make_funct": 387, "mathbb": [387, 393], "rightarrow": [387, 393], "soften": 387, "backbon": [387, 395, 397, 403, 410], "make_actor": 387, "make_valu": 387, "shared_param": 387, "make_common": 387, "reusabl": [388, 392, 408], "swappabl": [388, 392], "characterist": [388, 392, 406], "trainabl": [388, 392, 398, 407], "smth": [388, 392], "metric": [388, 392], "plenti": 388, "amort": [388, 393, 394], "told": [388, 394], "pseudo": [388, 399, 406], "buri": 388, "str_valu": 388, "nutshel": [388, 392], "barto": [388, 404, 405], "chapter": [388, 400], "significantli": [388, 392, 393, 398, 405], "next_stat": 388, "value_net_loss": 388, "pow": [388, 392], "room": 388, "signifi": [388, 404, 405], "underperform": 388, "thin": 388, "intric": [388, 397], "believ": 389, "scheme": [389, 411], "substenti": 389, "_pre_steps_log_hook": 389, "_pre_optim_hook": 389, "sub_batch": 389, "_post_loss_hook": 389, "_post_optim_hook": 389, "post_optim": [389, 393], "_post_optim_log": 389, "post_optim_log": 389, "_post_steps_hook": 389, "_post_steps_log_hook": 389, "post_steps_log": 389, "reserv": 389, "logginghook": 389, "logging_hook": 389, "save_dict": 389, "some_valu": 389, "torchsnapshot": 389, "ckpt_backend": 389, "filepath": 389, "save_train": 389, "load_from_fil": 389, "58": [391, 392, 393, 406, 409], "galleri": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "mem": [391, 409], "mb": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411], "torchrl_demo": [391, 409, 410], "56": [391, 392, 393, 406, 407, 409, 410], "819": [391, 409, 410], "367": [391, 406, 409, 410], "rb_tutori": [391, 408, 409], "420": [391, 406, 408, 409], "470": [391, 406, 408, 409], "dqn_with_rnn": [391, 395, 409], "575": [391, 395, 406, 409, 411], "2282": [391, 395, 409], "coding_dqn": [391, 393, 409], "612": [391, 393, 406, 409], "1135": [391, 393, 409], "49": [391, 393, 406, 407, 409], "095": [391, 406, 409], "308": [391, 397, 406, 409], "multiagent_ppo": [391, 405, 409], "189": [391, 405, 406, 409], "312": [391, 398, 404, 405, 406, 409], "coding_ddpg": [391, 392, 409], "124": [391, 392, 406, 409], "torchrl_env": [391, 409, 411], "48": [391, 392, 393, 396, 406, 407, 409, 411], "273": [391, 406, 409, 411], "2881": [391, 409, 411], "multiagent_competitive_ddpg": [391, 404, 409], "448": [391, 393, 404, 406, 409], "coding_ppo": [391, 394, 409], "09": [391, 392, 393, 406, 409], "724": [391, 394, 406, 409], "2879": [391, 394, 409], "multi_task": [391, 403, 409], "55": [391, 393, 403, 406, 409], "546": [391, 403, 406, 409], "pretrained_model": [391, 407, 409], "53": [391, 393, 405, 406, 407, 409], "731": [391, 407, 409], "2274": [391, 406, 409], "844": [391, 397, 409], "510": [391, 396, 406, 409], "309": [391, 406, 409], "137": [391, 398, 406, 409], "170": [391, 399, 406, 409], "607": [391, 401, 406, 409], "355": [391, 401, 406, 409], "397": [391, 400, 406, 409], "348": [391, 406, 409], "author": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 411], "vincent": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 408, 411], "moen": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 408, 411], "assembl": 392, "focus": [392, 398], "straightforward": [392, 393, 396, 397, 398, 399, 408], "maxim": [392, 398, 406], "transpar": [392, 395], "illustr": [392, 393, 397, 408], "bash": 392, "is_fork": [392, 393, 394, 395, 404, 405, 407], "get_start_method": [392, 393, 394, 395, 404, 405, 407], "collector_devic": 392, "loss_dict": 392, "oblivi": [392, 394, 408], "elementari": 392, "didact": 392, "dilut": 392, "pessimist": [392, 393, 394], "target_actor_network_param": 392, "actor_in_kei": 392, "actor_crit": 392, "noth": [392, 394], "compromis": 392, "hp": 392, "_value_estim": 392, "elif": [392, 393], "notimplementederror": [392, 394], "unknown": 392, "_loss_actor": 392, "td_copi": 392, "actor_network_param": [392, 404], "value_network_param": [392, 404], "_loss_valu": 392, "pred_val": 392, "target_value_network_param": 392, "glue": 392, "_forward": 392, "remaind": 392, "env_librari": 392, "env_task": 392, "env_arg": [392, 393], "friendli": 392, "torchr": 392, "rescal": 392, "presum": 392, "make_transformed_env": 392, "reward_sc": 392, "marker": 392, "env_per_collector": 392, "transform_state_dict": 392, "make_t_env": 392, "cheat": 392, "10m": 392, "cautiou": 392, "magnitud": [392, 404], "thousand": [392, 395], "get_env_stat": 392, "proof_env": 392, "5000": [392, 393, 401], "recal": [392, 394, 408], "ddpgmlpactor": 392, "ddpgmlpqnet": 392, "materi": 392, "ornsteinuhlenbeckprocessmodul": [392, 397], "make_ddpg_actor": 392, "q_net": 392, "tight": 392, "decoupl": [392, 398], "10_000": [392, 394], "traj_len": [392, 395], "make_record": 392, "recorder_obj": 392, "buffer_s": [392, 393], "random_crop_len": 392, "prb": 392, "buffer_scratch_dir": 392, "temporari": 392, "25": [392, 393, 395, 404, 406], "dataflow": 392, "ceil_div": 392, "utd": [392, 395], "update_to_data": 392, "realiz": 392, "_must_": 392, "001": [392, 406], "outdat": 392, "trick": [392, 393], "despit": 392, "optimizer_actor": 392, "lr": [392, 393, 394, 395, 401, 404, 405, 406], "weight_decai": [392, 393], "optimizer_valu": 392, "total_collection_step": 392, "pretti": [392, 396, 400, 408], "rewards_ev": 392, "collected_fram": 392, "r0": 392, "numel": [392, 394, 395, 401, 404, 407, 408], "current_fram": [392, 404], "sampled_tensordict": 392, "gn1": 392, "clip_grad_norm_": [392, 394, 404, 405, 406], "gn2": 392, "gn": [392, 406], "td_record": 392, "rn": 392, "set_descript": [392, 394, 395, 404, 405, 406], "2f": 392, "800": [392, 393], "3055": 392, "74it": [392, 393, 406], "1600": [392, 393], "888": 392, "28it": 392, "2400": [392, 393], "1298": [392, 406], "03it": [392, 393, 406], "3200": [392, 393], "1661": 392, "60it": [392, 393, 406], "4000": [392, 393], "1963": 392, "29it": [392, 406], "4800": [392, 393, 406], "2215": 392, "32it": [392, 393], "5600": 392, "2406": 392, "00it": 392, "74": [392, 393, 405, 406, 407], "97": [392, 393, 406, 407], "60": [392, 393, 404, 405, 406, 408, 410], "284": [392, 406], "65": [392, 393, 406, 407, 408], "6400": [392, 410], "919": 392, "31it": 392, "52": [392, 393, 406, 407, 408], "67": [392, 393, 403, 406], "72": [392, 393, 404, 405, 406], "69": [392, 393, 406], "242": [392, 406], "78": [392, 393, 406], "7200": 392, "07": [392, 393, 404, 405, 406], "648": 392, "99it": [392, 393], "70": [392, 393, 404, 405, 406, 407, 408], "91": [392, 393, 406], "68": [392, 393, 406, 407], "8000": 392, "540": [392, 406], "56it": [392, 393, 406], "142": [392, 406, 408], "54": [392, 393, 405, 406, 407], "190": [392, 406], "85": [392, 393, 404, 406, 407], "66": [392, 393, 406], "8800": 392, "484": [392, 406], "71": [392, 393, 406, 407], "57": [392, 393, 406, 407], "194": [392, 406], "96": [392, 393, 406, 407], "9600": 392, "383": [392, 406], "83it": [392, 393, 406], "61": [392, 393, 406, 407], "110": [392, 406], "185": [392, 406], "63": [392, 393, 406, 407], "10400it": 392, "358": [392, 406], "09it": [392, 393, 406], "149": [392, 406], "plot": [392, 394, 395, 404, 405, 406], "mention": [392, 395, 408, 411], "matplotlib": [392, 394, 395, 404, 405, 406, 408, 411], "pyplot": [392, 394, 395, 404, 405, 406, 408, 411], "plt": [392, 394, 395, 404, 405, 406, 408, 411], "zip": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "legend": [392, 404], "xlabel": [392, 395, 405, 406], "ylabel": [392, 405], "tight_layout": 392, "takeawai": [392, 393], "distpatch": 392, "321": [392, 406], "jupyt": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "ipynb": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411], "sphinx": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411], "road": 393, "aspect": [393, 398], "highest": [393, 397], "prerequisit": [393, 395], "lookup": 393, "cart": 393, "pole": 393, "un": 393, "actuat": 393, "frictionless": 393, "duelingcnndqnet": 393, "egreedymodul": [393, 395, 397, 401], "is_notebook": 393, "shell": 393, "get_ipython": 393, "__class__": 393, "zmqinteractiveshel": 393, "qtconsol": 393, "terminalinteractiveshel": 393, "ipython": [393, 405, 406], "nameerror": [393, 404], "umbrella": 393, "misplac": 393, "misus": 393, "orchestr": [393, 398, 400], "five": 393, "64x64": 393, "motion": [393, 406], "obs_norm_sd": 393, "mp_context": 393, "simpler": [393, 396], "get_norm_stat": 393, "test_env": 393, "make_model": 393, "dummy_env": 393, "init_bia": 393, "exploration_modul": [393, 395, 397, 401], "eps_greedy_v": 393, "eps_greedy_val_env": 393, "actor_explor": 393, "get_replay_buff": 393, "n_optim": [393, 398, 399], "themselv": 393, "parametriz": 393, "get_collector": 393, "cl": 393, "bunch": 393, "ubiquit": [393, 396], "get_loss_modul": 393, "target_updat": [393, 404], "995": [393, 406], "variat": 393, "2e": [393, 406], "wd": 393, "upd": 393, "harder": [393, 410], "5_000": 393, "500000": 393, "100000": 393, "005": [393, 404], "mandatori": [393, 394, 405, 406], "fairer": 393, "budget": 393, "dqn_exp_": 393, "uuid1": [393, 411], "9895": 393, "0737": 393, "registr": [393, 411], "cumbersom": 393, "buffer_hook": 393, "weight_updat": 393, "aliv": 393, "total_reward": 393, "20it": 393, "3688": [393, 406], "9259": 393, "52it": 393, "95it": 393, "3415": 393, "54it": [393, 406], "3566": 393, "82it": [393, 406], "45it": 393, "224": [393, 406], "15it": 393, "3353": [393, 406], "55it": [393, 406], "3292": 393, "288": [393, 406], "75it": [393, 406], "352": [393, 406], "73": [393, 405, 406, 407], "76it": [393, 406], "3596": 393, "384": [393, 406], "79": [393, 405, 406, 407], "18it": 393, "3293": 393, "416": [393, 406], "82": [393, 404, 406, 407], "3445": 393, "53it": [393, 406], "3262": 393, "480": [393, 406, 407], "51": [393, 406, 407, 408], "16it": [393, 406], "3869": 393, "90": [393, 404, 405, 406], "69it": [393, 395, 406], "3991": 393, "544": [393, 406], "92": [393, 406, 407], "576": [393, 406], "47": [393, 405, 406], "50it": [393, 406], "3718": 393, "608": [393, 406], "640": 393, "89": [393, 406, 407], "40it": 393, "4082": [393, 406], "672": 393, "4295": [393, 406], "704": 393, "736": 393, "26it": 393, "768": 393, "64it": [393, 406], "38it": 393, "3505": 393, "832": 393, "45": [393, 395, 404, 406], "66it": [393, 406], "864": 393, "896": 393, "928": 393, "43": [393, 406, 407], "93": [393, 406, 407, 408], "65it": [393, 406], "960": 393, "992": [393, 406], "19it": 393, "4021": 393, "07it": [393, 395], "1056": 393, "62it": [393, 406], "1088": 393, "57it": [393, 406], "1120": 393, "46it": [393, 406], "1152": 393, "1184": 393, "41it": 393, "1216": 393, "1248": 393, "11it": 393, "1280": 393, "17it": 393, "4173": 393, "80it": [393, 406], "1344": 393, "22it": 393, "1376": 393, "96it": 393, "1408": 393, "1440": 393, "36it": 393, "1472": 393, "3778": 393, "1504": 393, "49it": [393, 406], "1536": 393, "13it": [393, 406], "1568": 393, "59it": [393, 406], "1632": 393, "21it": 393, "1696": 393, "81it": [393, 406], "1728": 393, "1760": 393, "1792": 393, "89it": [393, 406], "1824": 393, "63it": [393, 406], "1856": 393, "1888": 393, "1920": 393, "06it": 393, "1952": 393, "94it": [393, 395], "1984": 393, "2016": 393, "67it": [393, 406], "2080": 393, "10it": 393, "2112": [393, 406], "42it": 393, "2144": 393, "2176": 393, "2208": 393, "2240": 393, "2272": 393, "51it": 393, "2336": 393, "91it": 393, "2368": 393, "2432": 393, "2464": 393, "24it": 393, "2496": 393, "86it": [393, 395], "2528": [393, 406], "68it": [393, 406], "2560": 393, "37it": 393, "2624": 393, "72it": [393, 406], "2656": [393, 406], "2688": 393, "2720": [393, 406], "2752": 393, "2784": 393, "2816": 393, "2848": 393, "90it": [393, 406], "2880": 393, "2912": 393, "4051": 393, "59": [393, 406, 407], "2944": [393, 406], "2976": [393, 406], "3040": 393, "14it": [393, 406], "3072": 393, "62": [393, 406], "3104": 393, "3136": 393, "3168": 393, "87it": 393, "3232": [393, 406], "3333": 393, "3264": 393, "3296": 393, "3328": 393, "3360": 393, "44it": [393, 406], "3392": 393, "3424": 393, "39it": 393, "3456": [393, 406], "84it": 393, "3488": 393, "3520": 393, "35it": 393, "3552": 393, "77": [393, 405, 406], "27it": 393, "3584": 393, "3616": 393, "3648": 393, "3680": 393, "3712": 393, "3744": 393, "76": [393, 406, 407], "3776": 393, "98it": 393, "3808": 393, "3840": 393, "3872": 393, "88it": 393, "3904": 393, "3936": 393, "3968": 393, "34it": 393, "4032": 393, "4064": 393, "4096": 393, "02it": 393, "83": [393, 405, 406, 407, 408], "4128": [393, 406], "4160": 393, "97it": 393, "4192": 393, "4224": 393, "4256": [393, 406], "4288": [393, 406], "4320": 393, "4352": 393, "4384": 393, "4416": 393, "4448": 393, "30it": [393, 406], "4480": 393, "4512": 393, "4544": 393, "4576": 393, "4608": 393, "4640": 393, "43it": 393, "4704": 393, "04it": 393, "4736": 393, "08it": 393, "4768": 393, "4832": 393, "4864": 393, "4896": 393, "4928": 393, "4960": 393, "4992": 393, "5024it": 393, "print_csv_files_in_fold": 393, "folder_path": 393, "csv_file": 393, "output_str": 393, "dirpath": 393, "endswith": 393, "strip": 393, "tmp": [393, 408], "tmpcx3n2gst": 393, "dqn_exp_e82f866a": 393, "6ad7": 393, "11ef": 393, "9a84": 393, "0242ac110002": 393, "39912936091423035": 393, "42945271730422974": 393, "40816521644592285": 393, "39912933111190796": 393, "40213119983673096": 393, "2746249735355377": 393, "22770585119724274": 393, "19320225715637207": 393, "24766334891319275": 393, "21848638355731964": 393, "2599754333496094": 393, "20764702558517456": 393, "34494510293006897": 393, "3022955060005188": 393, "grad_norm_0": 393, "0965256690979004": 393, "784353017807007": 393, "216343879699707": 393, "5103657245635986": 393, "791685104370117": 393, "7143988609313965": 393, "6602845191955566": 393, "248166799545288": 393, "8572168350219727": 393, "10000000894069672": 393, "333333015441895": 393, "qvaluenetwork": 393, "worst": 393, "accuraci": 393, "fanci": [393, 399], "talk": 394, "repetit": [394, 396, 399], "six": 394, "sophist": [394, 405], "invent": 394, "overview": [394, 398, 404, 405, 410], "theta_k": 394, "pi_": 394, "exceed": 394, "discourag": [394, 406], "indispens": 394, "analyz": 394, "lingua": 394, "franca": 394, "defaultdict": [394, 406], "3e": [394, 395, 404, 405], "max_grad_norm": [394, 404, 405], "sub_batch_s": 394, "num_epoch": [394, 405], "entropy_ep": [394, 405], "charact": 394, "inverteddoublependulum": 394, "transmit": 394, "stai": 394, "confid": [394, 404, 405], "ran": 394, "f_": 394, "mu_": 394, "difficulti": [394, 411], "d_ob": 394, "d_action": 394, "policy_modul": [394, 404, 405], "briefli": [394, 404, 405], "refil": [394, 405], "easiest": [394, 398, 404, 405], "mathemat": [394, 404, 405], "tradeoff": [394, 405], "advantage_modul": 394, "lr_schedul": [394, 406], "cosineannealinglr": [394, 406], "eval_str": 394, "tensordict_data": [394, 405], "data_view": [394, 405], "subdata": [394, 404, 405], "cum_reward_str": 394, "4f": [394, 395, 406], "stepcount_str": 394, "param_group": [394, 404], "lr_str": 394, "eval_rollout": 394, "nice": [394, 396, 399], "traceback": [394, 411], "656": [394, 406], "_rollout_stop_earli": 394, "2687": 394, "1735": 394, "_wrapped_call_impl": 394, "_call_impl": 394, "1746": 394, "forward_cal": 394, "297": [394, 406], "_self": 394, "356": [394, 406], "660": 394, "_requires_sampl": 394, "438": [394, 406], "out_tensor": 394, "_dist_sampl": 394, "526": [394, 406], "528": [394, 406], "cap": [394, 408], "figsiz": [394, 406], "subplot": [394, 404, 406, 411], "titl": [394, 395, 405, 406], "bit": [394, 395, 396, 404, 405, 408], "84x84": 395, "accessori": 395, "stamp": 395, "assist": 395, "emb": 395, "n_cell": 395, "customiz": 395, "wouldn": 395, "qval": 395, "stoch_polici": 395, "opportun": [395, 404], "uniniti": 395, "again": [395, 396, 397, 399, 405, 407, 408, 411], "redund": 395, "strongli": 395, "sake": [395, 407, 408], "20_000": [395, 406], "longest": 395, "npai": 395, "action_spread": 395, "0005": 395, "150": [395, 406], "topic": [396, 397, 398], "straight": 396, "backtrack": 396, "encapsul": [396, 397, 398], "reset_with_act": 396, "5032": 396, "tp": 396, "stepped_data": 396, "spatial": 396, "useless": 396, "policyless": 396, "appreci": 396, "monitor": 396, "examin": [396, 404], "tackl": 397, "delv": 397, "bypass": 397, "extractor": 397, "palliat": 397, "additivegaussianmodul": [397, 404], "had": [397, 399], "exploration_polici": [397, 404], "greedili": 397, "2d": [397, 404, 405], "innov": [397, 398], "rollout_explor": 397, "sole": 398, "tradit": [398, 404], "supervis": [398, 399, 408, 411], "n_collect": 398, "get_next_batch": 398, "ddpg_loss": 398, "total_loss": 398, "prove": 398, "reliev": 398, "concern": 398, "accustom": 399, "surprisingli": 399, "fundament": 399, "art": [399, 404, 405], "multirpocess": 399, "countless": 399, "yourself": [399, 404, 405], "311": [399, 406], "lightweight": 400, "portabl": 400, "everywher": 400, "log_scalar": 400, "elaps": 400, "my_scalar": 400, "saw": [400, 406, 408], "excess": 400, "349": [400, 406], "lesson": 401, "voluntarili": 401, "value_mlp": 401, "100_000": 401, "init_rand_step": 401, "training_loop": 401, "video_record": 401, "arbitrarili": 401, "total_count": 401, "total_episod": 401, "t0": 401, "t1": 401, "conclud": [401, 407], "tutorials_python": 402, "tutorials_jupyt": 402, "env1_obs_kei": 403, "observation_stand": 403, "env2_obs_kei": 403, "observation_walk": 403, "tdreset1": 403, "tdreset2": 403, "lazy_stack": 403, "policy_common": 403, "policy_stand": 403, "policy_walk": 403, "But": 403, "env1_mak": 403, "env2_mak": 403, "_single_task": 403, "td_rollout": 403, "matteo": [404, 405], "bettini": [404, 405], "benchmarl": [404, 405], "simple_tag": 404, "maddpg": [404, 405], "multiagentparticleenviron": 404, "mpe": 404, "centralis": [404, 405], "tie": [404, 405], "iddpg": [404, 405], "optimis": [404, 405], "typical": 404, "richard": 404, "andrew": 404, "mit": 404, "press": 404, "2018": 404, "mathbf": [404, 405], "pi": [404, 405, 406], "decentralis": [404, 405], "literatur": [404, 405], "overcom": [404, 405], "stationari": [404, 405], "concurr": [404, 405], "establish": 404, "gui": [404, 405], "is_sphinx": 404, "__sphinx_build__": 404, "n_iter": [404, 405], "evad": 404, "iteration_when_stop_training_evad": 404, "memory_s": 404, "n_optimiser_step": 404, "train_batch_s": 404, "polyak_tau": 404, "chaser": 404, "red": 404, "circl": [404, 405], "touch": [404, 406], "penal": [404, 405], "acceler": [404, 405], "obstacl": 404, "drag": [404, 405], "elast": [404, 405], "collis": [404, 405], "imped": 404, "n_chaser": 404, "n_evad": 404, "n_obstacl": 404, "use_vma": 404, "simple_tag_v3": 404, "num_good": 404, "num_adversari": 404, "num_obstacl": 404, "max_cycl": 404, "num_vmas_env": [404, 405], "num_good_ag": 404, "num_landmark": 404, "adversary_1": 404, "four": [404, 405, 406], "n_agents_in_that_group": 404, "stress": [404, 405], "paramount": [404, 405], "n_rollout_step": [404, 405], "evolut": [404, 405], "group_nam": 404, "n_agents_in_group": 404, "minor": 404, "agents_exploration_polici": 404, "utilis": [404, 405], "withing": 404, "n_obs_per_ag": [404, 405], "n_actions_per_ag": [404, 405], "share_parameters_polici": [404, 405], "policy_net": [404, 405], "_agent": 404, "grant": [404, 405], "converg": [404, 405], "share_parameters_crit": [404, 405], "obs_act": 404, "cat_modul": 404, "critic_modul": 404, "fantast": [404, 405], "reset_td": 404, "interfer": 404, "flatten_kei": 404, "process_batch": 404, "group_shap": 404, "get_item_shap": [404, 405], "nested_done_kei": 404, "nested_terminated_kei": 404, "desc": [404, 405], "episode_reward_mean_": 404, "episode_reward_mean_map": 404, "train_group_map": 404, "group_batch": 404, "_group": 404, "loss_nam": 404, "episode_reward_mean": [404, 405], "episode_reward_mean_adversari": 404, "episode_reward_mean_ag": 404, "proce": 404, "screen": 404, "fig": 404, "set_ylabel": 404, "axvlin": 404, "color": 404, "orang": 404, "set_xlabel": 404, "video_logg": 404, "vmas_log": 404, "env_with_rend": 404, "vmas_rend": 404, "print_log_dir": 404, "profici": [404, 405], "lidar": 405, "sensor": 405, "mappo": 405, "ippo": 405, "analys": 405, "visualis": 405, "vmas_devic": 405, "6_000": 405, "minibatch_s": 405, "generalis": 405, "simd": 405, "warp": 405, "todai": 405, "surround": 405, "dot": [405, 406], "collid": 405, "scenario_nam": 405, "final_rew": 405, "agent_collis": 405, "critic_net": 405, "minibatch": 405, "episode_reward_mean_list": 405, "critic_network_param": 405, "target_critic_network_param": 405, "4579917788505554": 405, "14524875581264496": 405, "168386459350586": 405, "3613134622573853": 405, "921463131904602": 405, "2106335163116455": 405, "1925103664398193": 405, "664064407348633": 405, "6539173126220703": 405, "743558168411255": 405, "xvfb": 405, "pyvirtualdisplai": 405, "1400": [405, 406], "900": 405, "pil": 405, "rendering_callback": 405, "fromarrai": 405, "gif": 405, "save_al": 405, "append_imag": 405, "freeli": 406, "undertaken": 406, "broader": 406, "wider": 406, "algebra": 406, "acquaint": 406, "avenu": 406, "_apply_to_composit": 406, "default_x": 406, "default_i": 406, "upward": 406, "angular": 406, "sin": 406, "rad": 406, "sec": 406, "angl": 406, "deleg": 406, "new_th": 406, "new_thdot": 406, "g_forc": 406, "angle_norm": 406, "albeit": 406, "high_th": 406, "high_thdot": 406, "low_th": 406, "low_thdot": 406, "trivial": 406, "irrelev": 406, "_make_spec": 406, "td_param": 406, "render_fp": 406, "random_": 406, "_make_step": 406, "staticmethod": 406, "showcas": 406, "skeleton": 406, "_apply_transform": [406, 411], "_inv_apply_transform": [406, 411], "subset": [406, 407], "sine": 406, "cosin": 406, "sintransform": 406, "costransform": 406, "t_sin": 406, "t_co": 406, "cat_transform": 406, "simple_rollout": 406, "unexplor": 406, "init_td": 406, "traj_return": 406, "last_reward": 406, "is_ipython": 406, "inlin": 406, "get_backend": 406, "ion": 406, "gcf": 406, "clear_output": 406, "625": 406, "0748": 406, "519": 406, "0499": 406, "4472": 406, "073": 406, "0685": 406, "0408": 406, "552": 406, "5154": 406, "9086": 406, "71it": 406, "9385": 406, "155": 406, "2568": 406, "4981": 406, "223": 406, "8929": 406, "4491": 406, "581": 406, "3233": 406, "0664": 406, "596": 406, "1021": 406, "5263": 406, "9579": 406, "5807": 406, "8075": 406, "212": 406, "2009": 406, "5525": 406, "914": 406, "2894": 406, "0115": 406, "0977": 406, "1845": 406, "1830": 406, "4858": 406, "233": 406, "2863": 406, "0297": 406, "464": 406, "4617": 406, "5997": 406, "904": 406, "1647": 406, "0777": 406, "901": 406, "70it": 406, "4709": 406, "6813": 406, "8317": 406, "3221": 406, "5554": 406, "276": 406, "701": 406, "8570": 406, "6656": 406, "463": 406, "7779": 406, "6911": 406, "875": 406, "0796": 406, "7082": 406, "0421": 406, "1496": 406, "5037": 406, "1755": 406, "5029": 406, "9454": 406, "665": 406, "9330": 406, "2118": 406, "444": 406, "73it": 406, "0995": 406, "6294": 406, "3146": 406, "2909": 406, "461": 406, "78it": 406, "9720": 406, "79it": 406, "9923": 406, "0345": 406, "3438": 406, "424": 406, "6953": 406, "5233": 406, "411": 406, "8011": 406, "5329": 406, "2677": 406, "6969": 406, "7010": 406, "376": 406, "9352": 406, "7707": 406, "6178": 406, "5646": 406, "7304": 406, "9407": 406, "942": 406, "3882": 406, "7604": 406, "3507": 406, "8928": 406, "258": 406, "6978": 406, "4641": 406, "549": 406, "61it": 406, "6047": 406, "5005": 406, "4136": 406, "2993": 406, "3222": 406, "4046": 406, "7314": 406, "275": [406, 411], "6331": 406, "9318": 406, "961": 406, "8331": 406, "1604": 406, "4099": 406, "4761": 406, "125": 406, "77it": 406, "4262": 406, "6363": 406, "382": 406, "3593": 406, "7377": 406, "2847": 406, "3443": 406, "867": 406, "3592": 406, "4760": 406, "441": 406, "9950": 406, "8021": 406, "3528": 406, "1214": 406, "708": 406, "4023": 406, "3583": 406, "041": 406, "3801": 406, "0310": 406, "120": 406, "4244": 406, "2039": 406, "4850": 406, "8748": 406, "706": 406, "4897": 406, "9210": 406, "8964": 406, "0832": 406, "3934": 406, "456": 406, "8971": 406, "2933": 406, "3377": 406, "6996": 406, "8916": 406, "098": 406, "2660": 406, "9110": 406, "4503": 406, "6956": 406, "9172": 406, "4026": 406, "946": 406, "9229": 406, "5205": 406, "294": 406, "8872": 406, "6637": 406, "019": 406, "9281": 406, "2082": 406, "8561": 406, "6574": 406, "357": 406, "4138": 406, "5230": 406, "385": 406, "4065": 406, "5642": 406, "921": 406, "9786": 406, "4129": 406, "5831": 406, "266": 406, "7723": 406, "4152": 406, "0898": 406, "389": 406, "5155": 406, "5376": 406, "5616": 406, "4094": 406, "283": 406, "5333": 406, "4803": 406, "895": 406, "6566": 406, "2588": 406, "662": 406, "4732": 406, "7503": 406, "068": 406, "0714": 406, "3370": 406, "059": 406, "8612": 406, "1915": 406, "3855": 406, "0349": 406, "9644": 406, "4538": 406, "445": 406, "0392": 406, "4080": 406, "1648": 406, "9599": 406, "143": 406, "4284": 406, "5946": 406, "2590": 406, "9181": 406, "4621": 406, "9075": 406, "1772": 406, "9444": 406, "351": 406, "9391": 406, "5595": 406, "8673": 406, "6240": 406, "5919": 406, "1071": 406, "9127": 406, "251": 406, "9799": 406, "3131": 406, "9612": 406, "9705": 406, "8741": 406, "2230": 406, "0972": 406, "0337": 406, "0350": 406, "0654": 406, "2441": 406, "4596": 406, "362": 406, "103": 406, "4362": 406, "171": [406, 408, 411], "104": 406, "4041": 406, "6907": 406, "105": 406, "4664": 406, "2760": 406, "0299": 406, "9712": 406, "107": [406, 408], "3332": 406, "4479": 406, "772": 406, "108": 406, "4357": 406, "9591": 406, "543": 406, "109": 406, "6216": 406, "1353": 406, "692": 406, "6261": 406, "7086": 406, "496": 406, "111": 406, "7758": 406, "9818": 406, "112": 406, "7772": 406, "5055": 406, "113": 406, "5840": 406, "3180": 406, "2083": 406, "115": 406, "5275": 406, "6873": 406, "116": 406, "4107": 406, "1624": 406, "117": 406, "6372": 406, "2571": 406, "118": 406, "4039": 406, "4428": 406, "119": 406, "4728": 406, "5628": 406, "6767": 406, "2466": 406, "522": 406, "121": [406, 408, 411], "5873": 406, "5072": 406, "6548": 406, "3766": 406, "123": [406, 408], "5134": 406, "1955": 406, "2481": 406, "0591": 406, "4500": 406, "3368": 406, "126": 406, "9708": 406, "7059": 406, "127": 406, "3031": 406, "2534": 406, "843": 406, "3327": 406, "6193": 406, "129": 406, "4831": 406, "1172": 406, "2593": 406, "4219": 406, "962": 406, "8380": 406, "899": 406, "132": 406, "2721": 406, "9048": 406, "166": 406, "133": [406, 408], "2419": 406, "5248": 406, "2139": 406, "4278": 406, "135": 406, "0690": 406, "5140": 406, "136": 406, "1140": 406, "7402": 406, "5356": 406, "1636": 406, "138": 406, "0671": 406, "8798": 406, "139": 406, "8918": 406, "3298": 406, "307": 406, "140": 406, "1779": 406, "141": 406, "1771": 406, "3624": 406, "936": 406, "1683": 406, "4810": 406, "9373": 406, "4435": 406, "4396": 406, "8092": 406, "145": [406, 408], "2572": 406, "146": 406, "4212": 406, "0260": 406, "147": 406, "0939": 406, "6478": 406, "605": 406, "148": 406, "6606": 406, "7289": 406, "9300": 406, "7193": 406, "563": 406, "1166": 406, "8514": 406, "151": 406, "9108": 406, "0672": 406, "292": 406, "152": 406, "8591": 406, "3768": 406, "153": 406, "9976": 406, "154": 406, "0576": 406, "0067": 406, "935": 406, "4199": 406, "1722": 406, "156": 406, "8310": 406, "3466": 406, "157": 406, "8631": 406, "2492": 406, "158": 406, "8763": 406, "1277": 406, "159": 406, "5562": 406, "7446": 406, "1082": 406, "9830": 406, "161": 406, "0946": 406, "5229": 406, "162": 406, "4574": 406, "6900": 406, "163": [406, 407], "2229": 406, "0318": 406, "482": 406, "164": 406, "0543": 406, "0817": 406, "761": 406, "165": 406, "2809": 406, "5118": 406, "366": 406, "1142": 406, "5635": 406, "167": 406, "1949": 406, "2327": 406, "982": 406, "168": 406, "0967": 406, "0387": 406, "457": 406, "169": 406, "0782": 406, "2150": 406, "5222": 406, "3725": 406, "9288": 406, "9837": 406, "1416": 406, "1099": 406, "173": 406, "8620": 406, "8475": 406, "174": 406, "1807": 406, "4375": 406, "175": 406, "1148": 406, "0645": 406, "2751": 406, "8313": 406, "177": 406, "47it": 406, "9286": 406, "9770": 406, "178": 406, "5735": 406, "2837": 406, "179": 406, "2926": 406, "9489": 406, "180": 406, "1507": 406, "181": 406, "8724": 406, "3567": 406, "182": [406, 411], "3574": 406, "6140": 406, "183": 406, "7895": 406, "2518": 406, "184": 406, "6146": 406, "8776": 406, "7358": 406, "186": 406, "3722": 406, "8428": 406, "187": [406, 411], "7955": 406, "188": 406, "0092": 406, "7106": 406, "829": 406, "2264": 406, "6919": 406, "1438": 406, "1362": 406, "191": 406, "0618": 406, "8217": 406, "9420": 406, "6765": 406, "193": 406, "7745": 406, "0709": 406, "9478": 406, "6867": 406, "195": 406, "6507": 406, "6225": 406, "196": 406, "2244": 406, "2195": 406, "197": 406, "5385": 406, "9263": 406, "198": 406, "1878": 406, "2374": 406, "8054": 406, "3504": 406, "557": 406, "0766": 406, "201": 406, "2011": 406, "8393": 406, "202": 406, "0803": 406, "7815": 406, "203": 406, "8363": 406, "2460": 406, "204": 406, "8643": 406, "2191": 406, "593": 406, "205": 406, "0773": 406, "1343": 406, "206": 406, "8657": 406, "207": 406, "9304": 406, "7584": 406, "208": 406, "8752": 406, "2307": 406, "209": 406, "5250": 406, "4869": 406, "7837": 406, "5762": 406, "211": 406, "58it": 406, "6661": 406, "8600": 406, "2502": 406, "1752": 406, "3075": 406, "8871": 406, "214": [406, 408], "9406": 406, "8090": 406, "215": 406, "6291": 406, "8923": 406, "876": 406, "216": 406, "9504": 406, "21e": 406, "217": 406, "7431": 406, "7880": 406, "218": 406, "4463": 406, "5432": 406, "219": [406, 411], "3793": 406, "3313": 406, "8843": 406, "0369": 406, "065": 406, "221": 406, "4828": 406, "8391": 406, "222": 406, "6265": 406, "2913": 406, "947": 406, "5541": 406, "1252": 406, "7342": 406, "2396": 406, "225": 406, "5936": 406, "1924": 406, "226": 406, "9975": 406, "2045": 406, "227": 406, "8367": 406, "9540": 406, "228": 406, "7259": 406, "6743": 406, "229": 406, "4827": 406, "7528": 406, "230": 406, "7361": 406, "8756": 406, "231": 406, "7646": 406, "1116": 406, "232": 406, "5426": 406, "8385": 406, "5662": 406, "8585": 406, "234": 406, "8234": 406, "7930": 406, "235": 406, "2648": 406, "9309": 406, "236": 406, "6817": 406, "237": 406, "0943": 406, "1533": 406, "238": 406, "3045": 406, "0483": 406, "239": 406, "6415": 406, "0201": 406, "241": 406, "4437": 406, "4365": 406, "0358": 406, "4943": 406, "243": 406, "1272": 406, "5003": 406, "1180": 406, "2637": 406, "245": 406, "7197": 406, "0873": 406, "246": 406, "2917": 406, "247": 406, "0160": 406, "0738": 406, "248": 406, "3689": 406, "0120": 406, "249": 406, "5570": 406, "0475": 406, "250": 406, "4423": 406, "2220": 406, "6803": 406, "252": 406, "1465": 406, "7214": 406, "253": 406, "8801": 406, "7034": 406, "254": 406, "9136": 406, "4076": 406, "7589": 406, "5013": 406, "8150": 406, "2241": 406, "257": 406, "0753": 406, "8081": 406, "1951": 406, "8314": 406, "259": 406, "0038": 406, "260": 406, "0889": 406, "4616": 406, "261": 406, "0655": 406, "262": 406, "8333": 406, "9476": 406, "263": 406, "7554": 406, "3798": 406, "264": 406, "3717": 406, "3947": 406, "529": 406, "265": 406, "3060": 406, "6495": 406, "7467": 406, "8889": 406, "267": 406, "8457": 406, "591": 406, "7137": 406, "0536": 406, "771": 406, "269": 406, "1651": 406, "388": 406, "270": 406, "8246": 406, "5709": 406, "281": 406, "271": 406, "7502": 406, "0521": 406, "032": 406, "272": 406, "5475": 406, "7253": 406, "2856": 406, "7130": 406, "274": 406, "2778": 406, "4122": 406, "8368": 406, "1841": 406, "9622": 406, "1603": 406, "003e": 406, "277": 406, "0247": 406, "346": 406, "278": 406, "2238": 406, "6418": 406, "279": 406, "0626": 406, "2538": 406, "280": 406, "0149": 406, "7380": 406, "2167": 406, "8911": 406, "282": 406, "8725": 406, "1983": 406, "8142": 406, "3709": 406, "4989": 406, "285": 406, "6464": 406, "6210": 406, "286": 406, "9726": 406, "0820": 406, "287": 406, "6975": 406, "9091": 406, "4926": 406, "4791": 406, "289": 406, "0905": 406, "3500": 406, "290": 406, "2287": 406, "291": 406, "9918": 406, "5543": 406, "9245": 406, "6444": 406, "631": 406, "293": 406, "0448": 406, "4769": 406, "8566": 406, "7208": 406, "295": 406, "0966": 406, "296": 406, "5303": 406, "1537": 406, "023": 406, "2682": 406, "564": 406, "298": 406, "4318": 406, "5063": 406, "299": 406, "7475": 406, "4190": 406, "8186": 406, "5077": 406, "301": 406, "1883": 406, "5291": 406, "472": 406, "302": 406, "3998": 406, "303": 406, "3622": 406, "0930": 406, "626": 406, "304": 406, "9500": 406, "5664": 406, "305": 406, "5697": 406, "3024": 406, "306": 406, "3117": 406, "0052": 406, "006": 406, "0981": 406, "9312": 406, "3873": 406, "0411": 406, "2650": 406, "1656": 406, "0228": 406, "004": 406, "1196": 406, "2478": 406, "7353": 406, "0812": 406, "313": 406, "3022": 406, "758": 406, "314": 406, "1406": 406, "4626": 406, "315": 406, "2156": 406, "851": 406, "316": 406, "1953": 406, "3774": 406, "317": 406, "6385": 406, "9917": 406, "318": 406, "2764": 406, "905": 406, "319": 406, "6391": 406, "9317": 406, "9748": 406, "2679": 406, "8495": 406, "5125": 406, "8177": 406, "6602": 406, "323": 406, "0704": 406, "5776": 406, "324": 406, "9833": [406, 410], "1339": 406, "402": 406, "325": 406, "1238": 406, "326": 406, "9299": 406, "0227": 406, "327": 406, "7727": 406, "1607": 406, "336": 406, "328": 406, "3958": 406, "3223": 406, "763": 406, "329": 406, "4742": 406, "1797": 406, "330": 406, "0144": 406, "0085": 406, "791": 406, "331": 406, "8284": 406, "0428": 406, "332": 406, "7365": 406, "333": 406, "4566": 406, "0781": 406, "086": 406, "334": 406, "3355": 406, "0230": 406, "335": 406, "9346": 406, "0423": 406, "076": 406, "3711": 406, "1335": 406, "6855": 406, "337": 406, "0304": 406, "0023": 406, "8459": 406, "338": 406, "9998": 406, "4399": 406, "339": 406, "2303": 406, "1346": 406, "340": 406, "2915": 406, "7116": 406, "341": 406, "5560": 406, "0487": 406, "342": 406, "5119": 406, "061": 406, "343": 406, "3305": 406, "3705": 406, "957": 406, "344": 406, "6068": 406, "345": 406, "5731": 406, "3897": 406, "0376": 406, "347": 406, "0434": 406, "012": 406, "1300": 406, "1215": 406, "0968": 406, "0885": 406, "350": 406, "1348": 406, "0073": 406, "5052": 406, "4184": 406, "2817": 406, "8887": 406, "353": 406, "4779": 406, "1009": 406, "354": 406, "0604": 406, "599": 406, "4486": 406, "1176": 406, "2436": 406, "0668": 406, "8849": 406, "0012": 406, "33it": 406, "7511": 406, "8804": 406, "359": 406, "8870": 406, "6728": 406, "360": 406, "8841": 406, "5508": 406, "361": 406, "5242": 406, "0013": 406, "6185": 406, "363": 406, "1378": 406, "0204": 406, "364": 406, "0355": 406, "685": 406, "365": 406, "4884": 406, "0231": 406, "0014": 406, "6793": 406, "9834": 406, "863": 406, "368": 406, "6709": 406, "462": 406, "369": 406, "5199": 406, "9790": 406, "370": 406, "9401": 406, "7802": 406, "371": 406, "6723": 406, "372": 406, "2678": 406, "6201": 406, "373": 406, "2184": 406, "7385": 406, "374": 406, "6344": 406, "617": 406, "375": 406, "9945": 406, "0772": 406, "567": 406, "7576": 406, "0398": 406, "377": 406, "3396": 406, "0022": 406, "094": 406, "378": 406, "3073": 406, "4018": 406, "379": 406, "1869": 406, "380": 406, "0481": 406, "1117": 406, "381": 406, "6823": 406, "981": 406, "8305": 406, "0210": 406, "4908": 406, "0272": 406, "538": 406, "3267": 406, "0111": 406, "7965": 406, "1796": 406, "0039": 406, "5396": 406, "386": 406, "3757": 406, "0490": 406, "387": 406, "1394": 406, "4187": 406, "2986": 406, "7954": 406, "1274": 406, "0063": 406, "813": 406, "390": 406, "8706": 406, "0114": 406, "391": 406, "6922": 406, "2423": 406, "392": 406, "9115": 406, "2602": 406, "393": 406, "2449": 406, "0783": 406, "394": 406, "0631": 406, "0057": 406, "7444": 406, "395": 406, "3339": 406, "0167": 406, "396": 406, "4806": 406, "4171": 406, "067": 406, "398": 406, "2618": 406, "5809": 406, "399": 406, "0054": 406, "3364": 406, "8733": 406, "0184": 406, "401": 406, "9137": 406, "0113": 406, "025": 406, "0386": 406, "0625": 406, "403": 406, "1332": 406, "0582": 406, "7816": 406, "404": 406, "8341": 406, "0941": 406, "854": 406, "405": 406, "8615": 406, "588": 406, "406": 406, "3849": 406, "008": 406, "407": 406, "9395": 406, "0765": 406, "055": 406, "408": 406, "2685": 406, "2235": 406, "688": 406, "409": 406, "3052": 406, "4249": 406, "410": 406, "6806": 406, "6383": 406, "3721": 406, "9981": 406, "412": 406, "1862": 406, "822": 406, "413": 406, "9811": 406, "0171": 406, "013": 406, "414": 406, "0252": 406, "0049": 406, "6205": 406, "415": 406, "1108": 406, "4921": 406, "9142": 406, "8130": 406, "417": 406, "1725": 406, "0036": 406, "3196": 406, "418": 406, "7795": 406, "0242": 406, "799": [406, 411], "419": 406, "7737": 406, "0138": 406, "1462": 406, "0053": 406, "421": 406, "9226": 406, "6139": 406, "422": 406, "9889": 406, "0403": 406, "423": 406, "6194": 406, "0032": 406, "3989": 406, "0104": 406, "425": 406, "9960": 406, "0009": 406, "6009": 406, "426": 406, "2697": 406, "0914": 406, "427": 406, "1114": 406, "428": 406, "9862": 406, "1932": 406, "429": 406, "0637": 406, "0623": 406, "082": 406, "430": 406, "9906": 406, "2031": 406, "431": 406, "9948": 406, "0895": 406, "432": 406, "1970": 406, "0256": 406, "4231": 406, "0449": 406, "644": 406, "434": 406, "1039": 406, "1973": 406, "435": 406, "4561": 406, "1225": 406, "436": 406, "0211": 406, "2125": 406, "437": 406, "3866": 406, "0050": 406, "7202": 406, "6388": 406, "0072": 406, "439": 406, "1187": 406, "0015": 406, "5116": 406, "440": 406, "0432": 406, "0025": 406, "7809": 406, "1925": 406, "0103": 406, "442": 406, "9570": 406, "0002": 406, "443": 406, "0871": 406, "5601": 406, "0165": 406, "0047": 406, "6061": 406, "2746": 406, "0027": 406, "7887": 406, "446": 406, "1835": 406, "0035": 406, "855": 406, "447": 406, "8420": 406, "548": 406, "2653": 406, "0126": 406, "9736": 406, "449": 406, "0594": 406, "0119": 406, "6196": 406, "450": 406, "4509": 406, "0373": 406, "451": 406, "0620": 406, "452": 406, "6898": 406, "3235": 406, "687": 406, "453": 406, "5879": 406, "454": 406, "8406": 406, "0694": 406, "455": 406, "8259": 406, "0235": 406, "8500": 406, "0024": 406, "4054": 406, "458": 406, "2027": 406, "0894": 406, "459": 406, "5966": 406, "460": 406, "6942": 406, "0016": 406, "4254": 406, "6703": 406, "0145": 406, "8124": 406, "0218": 406, "9196": 406, "0188": 406, "8986": 406, "0884": 406, "0084": 406, "5624": 406, "465": 406, "8862": 406, "0006": 406, "5384": 406, "466": 406, "5837": 406, "467": 406, "8954": 406, "0101": 406, "6751": 406, "468": 406, "8063": 406, "0122": 406, "9635": 406, "469": 406, "0692": 406, "4216": 406, "1227": 406, "0586": 406, "162e": 406, "471": 406, "9690": 406, "4166": 406, "6324": 406, "473": 406, "0778": 406, "474": 406, "8548": 406, "0017": 406, "4408": 406, "475": 406, "8125": 406, "0003": 406, "1515": 406, "476": 406, "2733": 406, "0044": 406, "2836": 406, "477": 406, "7497": 406, "7681": 406, "478": 406, "8547": 406, "0105": 406, "7212": 406, "479": 406, "9848": 406, "0019": 406, "6498": 406, "1987": 406, "0011": 406, "5473": 406, "481": 406, "8991": 406, "6091": 406, "9189": 406, "5771": 406, "483": 406, "6781": 406, "7542": 406, "5959": 406, "0064": 406, "485": 406, "2547": 406, "486": 406, "0636": 406, "547": 406, "487": 406, "0065": 406, "488": 406, "1694": 406, "0083": 406, "5759": 406, "489": 406, "0493": 406, "0021": 406, "7805": 406, "490": 406, "0950": 406, "497": 406, "491": 406, "9717": 406, "3672": 406, "492": 406, "0207": 406, "493": 406, "8266": 406, "5365": 406, "494": 406, "2623": 406, "5078": 406, "495": 406, "4545": 406, "09636": 406, "8754": 406, "0010": 406, "498": 406, "0031": 406, "8269": 406, "499": 406, "6642": 406, "2284": 406, "501": 406, "9130": 406, "0008": 406, "502": 406, "503": 406, "7624": 406, "0056": 406, "3858": 406, "504": 406, "0890": 406, "0042": 406, "505": 406, "7505": 406, "2157": 406, "506": 406, "8394": 406, "3413": 406, "507": 406, "9609": 406, "0041": 406, "6905": 406, "508": 406, "8467": 406, "4409": 406, "509": 406, "8128": 406, "3559": 406, "511": 406, "1479": 406, "0264": 406, "1589": 406, "566": 406, "513": 406, "2756": 406, "0046": 406, "5266": 406, "514": 406, "9873": 406, "0112": 406, "9314": 406, "515": 406, "3791": 406, "0721": 406, "516": 406, "4580": 406, "0758": 406, "6114": 406, "517": 406, "2431": 406, "518": 406, "1958": 406, "5553": 406, "8924": 406, "0097": 406, "520": 406, "3737": 406, "0234": 406, "521": 406, "9125": 406, "4623": 406, "3230": 406, "0589": 406, "3784": 406, "523": 406, "9482": 406, "0051": 406, "524": 406, "1979": 406, "0045": 406, "6401": 406, "525": 406, "1588": 406, "0048": 406, "6255": 406, "6084": 406, "3477": 406, "1475": 406, "0209": 406, "7611": 406, "1040": 406, "0099": 406, "0173": 406, "643": 406, "530": 406, "8189": 406, "4358": 406, "531": 406, "9897": 406, "532": 406, "1548": 406, "9751": 406, "533": 406, "6362": 406, "7495": 406, "534": 406, "1749": 406, "9513": 406, "535": 406, "7708": 406, "0371": 406, "536": 406, "2649": 406, "0437": 406, "537": 406, "5491": 406, "0276": 406, "6426": 406, "7294": 406, "078e": 406, "539": 406, "9928": 406, "7937": 406, "0124": 406, "9664": 406, "541": 406, "3342": 406, "542": 406, "2046": 406, "5496": 406, "0956": 406, "0059": 406, "545": 406, "9028": 406, "5843": 406, "0674": 406, "0178": 406, "797": 406, "2815": 406, "0599": 406, "1587": 406, "9276": 406, "8228": 406, "6164": 406, "551": 406, "6850": 406, "9167": 406, "3092": 406, "0670": 406, "9177": 406, "553": 406, "1599": 406, "0043": 406, "554": 406, "6367": 406, "555": 406, "3657": 406, "556": 406, "6694": 406, "2622": 406, "0372": 406, "4841": 406, "558": 406, "2707": 406, "757": 406, "559": 406, "2267": 406, "5415": 406, "560": 406, "4556": 406, "0163": 406, "561": 406, "1839": 406, "0809": 406, "6262": 406, "562": 406, "0278": 406, "1112": 406, "6155": 406, "565": 406, "1427": 406, "3582": 406, "624": 406, "7870": 406, "9490": 406, "0439": 406, "8796": 406, "568": 406, "8026": 406, "569": [406, 411], "3147": 406, "8486": 406, "570": 406, "7917": 406, "0129": 406, "571": 406, "9553": 406, "0020": 406, "6871": 406, "572": 406, "3132": 406, "0159": 406, "8646": 406, "573": 406, "5320": 406, "0269": 406, "574": 406, "2955": 406, "0245": 406, "3347": 406, "0179": 406, "9718": 406, "1629": 406, "804": 406, "577": 406, "4164": 406, "0070": 406, "4335": 406, "578": 406, "579": 406, "3049": 406, "9063": 406, "580": 406, "8785": 406, "3295": 406, "5184": 406, "0546": 406, "582": 406, "4589": 406, "583": 406, "4697": 406, "2476": 406, "584": 406, "2397": 406, "585": 406, "4953": 406, "1775": 406, "586": 406, "2258": 406, "0110": 406, "7671": 406, "587": 406, "3981": 406, "8590": 406, "0007": 406, "589": 406, "9820": 406, "4221": 406, "590": 406, "1293": 406, "0116": 406, "868": 406, "1675": 406, "5931": 406, "592": 406, "2910": 406, "5219": 406, "2124": 406, "1730": 406, "737": 406, "594": 406, "2914": 406, "0206": 406, "595": 406, "0172": 406, "3982": 406, "0945": 406, "0121": 406, "4789": 406, "597": 406, "3805": 406, "4074": 406, "598": 406, "3310": 406, "5065": 406, "6028": 406, "6316": 406, "6724": 406, "6523": 406, "601": 406, "0136": 406, "4298": 406, "602": 406, "3524": 406, "2629": 406, "603": 406, "2635": 406, "7839": 406, "604": 406, "6041": 406, "8027": 406, "4170": 406, "4675": 406, "606": 406, "3153": 406, "9316": 406, "0649": 406, "9722": 406, "7989": 406, "0329": 406, "609": 406, "1976": 406, "6852": 406, "610": 406, "4793": 406, "1255": 406, "611": 406, "4581": 406, "0394": 406, "2047": 406, "0326": 406, "613": 406, "8967": 406, "8619": 406, "614": 406, "5906": 406, "6491": 406, "615": 406, "6634": 406, "4394": 406, "616": 406, "0624": 406, "0061": 406, "5676": 406, "3259": 406, "0131": 406, "7733": 406, "618": 406, "7515": 406, "0189": 406, "5575": 406, "619": 406, "9313": 406, "6286": 406, "620": 406, "4325": 406, "7832": 406, "621": 406, "1134": 406, "622": 406, "4572": 406, "0500": 406, "5838": 406, "623": 406, "3818": 406, "8623": 406, "1253": 406, "6622": 406, "subject": 406, "explain": 407, "semat": 407, "r3mtransform": 407, "env_transform": [407, 411], "s3": 407, "amazonaw": 407, "r3m_50": 407, "374m": 407, "0m": 407, "167mb": 407, "116mb": 407, "3mb": 407, "7mb": 407, "6m": 407, "4mb": 407, "1mb": 407, "8mb": 407, "105m": 407, "115m": 407, "6mb": 407, "131m": 407, "148m": 407, "2mb": 407, "162m": 407, "106mb": 407, "173m": 407, "182m": 407, "195m": 407, "203m": 407, "212m": 407, "220m": 407, "229m": 407, "244m": 407, "253m": 407, "262m": 407, "0mb": 407, "277m": 407, "283m": 407, "295m": 407, "311m": 407, "318m": 407, "326m": 407, "332m": 407, "343m": 407, "348m": 407, "360m": 407, "wiser": 407, "2275": 407, "batteri": 408, "buffer_list": 408, "lowest": 408, "medium": 408, "buffer_lazytensor": 408, "buffer_lazymemmap": 408, "tempdir": 408, "tmphgey4f5j": 408, "fullest": 408, "mydata": 408, "background": 408, "question": [408, 410], "_i": 408, "artifici": 408, "0893e": 408, "hamper": 408, "she": 408, "pars": 408, "proport": 408, "hist": 408, "barcontain": 408, "artist": 408, "reappear": 408, "unfold": 408, "problemat": 408, "4th": 408, "prioritizedslicesampl": 408, "tensordictmaxvaluewrit": 408, "demo": 410, "icml": 410, "vmoen": 410, "fb": 410, "invest": 410, "platform": 410, "media": 410, "predominantli": 410, "tensordict1": 410, "tensordict2": 410, "tensordict_sampl": 410, "_sampler": 410, "_sum_tre": 410, "modulenotfounderror": 410, "28791671991348267": 410, "noopresetenv": [410, 411], "backbone_modul": 410, "params_expand": 410, "exec_sequ": 410, "tensordict_exp": 410, "base_modul": 410, "0137": 410, "1524": 410, "0641": 410, "viewbackward0": 410, "asstridedbackward0": 410, "8728": 410, "1334": 410, "3494": 410, "6887": 410, "6402": 410, "_safetanhbackward": 410, "1132": 410, "1762": 410, "3430": 410, "2668": 410, "2918": 410, "6239": 410, "tensordicts_prealloc": 410, "tensordicts_stack": 410, "tensordict_rollout": [410, 411], "disclaim": 410, "concatmodul": 410, "loss_td": 410, "year": 410, "roadmap": 410, "compris": 410, "contributor": 410, "curiou": 410, "nascent": 410, "unsupervis": 411, "unifi": 411, "_build_env": 411, "bipedalwalk": 411, "bipedalwalkerhardcor": 411, "blackjack": 411, "carrac": 411, "0908": 411, "deserv": 411, "__episode__": 411, "__trajectory__": 411, "void": 411, "reproduct": 411, "reset_data": 411, "tensordict_tprim": 411, "imshow": 411, "axesimag": 411, "0x7f30403a80a0": 411, "1383": 411, "3091": 411, "1435": 411, "_check_version_exist": 411, "ns": 411, "_check_name_exist": 411, "_check_namespace_exist": 411, "namespacenotfound": 411, "suggestion_msg": 411, "wrapper1": 411, "wrapper2": 411, "obviou": 411, "truth": 411, "env0": 411, "env_transformed_bi": 411, "stanc": 411, "transformeddistribut": 411, "base_dist": 411, "concat": 411, "mofidi": 411, "transformedenviron": 411, "moderet": 411, "computation": 411, "legitim": 411, "incom": 411, "amongst": 411, "has_cuda": 411, "wor": 411, "convention": 411, "markovian": 411, "constain": 411, "bar_": 411, "get_someth": 411, "aargh": 411, "is_clos": 411, "foo_list": 411, "parallen": 411, "particularili": 411, "evolv": 411, "steadi": 411, "approx": 411, "_extra_st": 411, "observation_ssq": 411, "observation_sum": 411, "dispach": 411, "absor": 411}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "Bounded"], [28, 0, 1, "", "BoundedTensorSpec"], [29, 0, 1, "", "Categorical"], [30, 0, 1, "", "Composite"], [31, 0, 1, "", "CompositeSpec"], [32, 0, 1, "", "ConstantKLController"], [33, 0, 1, "", "DiscreteTensorSpec"], [34, 0, 1, "", "Flat2TED"], [35, 0, 1, "", "H5Combine"], [36, 0, 1, "", "H5Split"], [37, 0, 1, "", "LazyStackedCompositeSpec"], [38, 0, 1, "", "LazyStackedTensorSpec"], [39, 0, 1, "", "MultiCategorical"], [40, 0, 1, "", "MultiDiscreteTensorSpec"], [41, 0, 1, "", "MultiOneHot"], [42, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [43, 0, 1, "", "MultiStep"], [44, 0, 1, "", "Nested2TED"], [45, 0, 1, "", "NonTensor"], [46, 0, 1, "", "NonTensorSpec"], [47, 0, 1, "", "OneHotDiscreteTensorSpec"], [48, 0, 1, "", "PairwiseDataset"], [49, 0, 1, "", "PrioritizedReplayBuffer"], [50, 0, 1, "", "PromptData"], [51, 0, 1, "", "PromptTensorDictTokenizer"], [52, 0, 1, "", "ReplayBuffer"], [53, 0, 1, "", "RewardData"], [54, 0, 1, "", "RolloutFromModel"], [55, 0, 1, "", "Stacked"], [56, 0, 1, "", "StackedComposite"], [57, 0, 1, "", "TED2Flat"], [58, 0, 1, "", "TED2Nested"], [59, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [60, 0, 1, "", "TensorDictReplayBuffer"], [61, 0, 1, "", "TensorDictTokenizer"], [62, 0, 1, "", "TensorSpec"], [63, 0, 1, "", "TokenizedDatasetLoader"], [64, 0, 1, "", "Unbounded"], [65, 0, 1, "", "UnboundedContinuous"], [66, 0, 1, "", "UnboundedContinuousTensorSpec"], [67, 0, 1, "", "UnboundedDiscrete"], [68, 0, 1, "", "UnboundedDiscreteTensorSpec"], [69, 0, 1, "", "check_no_exclusive_keys"], [70, 0, 1, "", "consolidate_spec"], [71, 0, 1, "", "contains_lazy_spec"], [72, 0, 1, "", "create_infinite_iterator"], [82, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.Bounded": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "clone"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 4, 1, "", "device"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "make_neg_dim"], [27, 4, 1, "", "ndim"], [27, 1, 1, "", "ndimension"], [27, 1, 1, "", "one"], [27, 1, 1, "", "ones"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unsqueeze"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"], [27, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 3, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 4, 1, "", "device"], [30, 1, 1, "", "empty"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "get"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_empty"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "items"], [30, 1, 1, "", "keys"], [30, 1, 1, "", "lock_"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unlock_"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "values"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 3, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 4, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "to_one_hot"], [33, 1, 1, "", "to_one_hot_spec"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "update_mask"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedCompositeSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 4, 1, "", "device"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "get"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_empty"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "items"], [37, 1, 1, "", "keys"], [37, 1, 1, "", "lock_"], [37, 1, 1, "", "make_neg_dim"], [37, 4, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unlock_"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "values"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 4, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 4, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.MultiCategorical": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 3, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "to_one_hot"], [39, 1, 1, "", "to_one_hot_spec"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "update_mask"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 3, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "to_one_hot"], [40, 1, 1, "", "to_one_hot_spec"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 3, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 4, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "compile"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "mtia"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_load_state_dict_pre_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "register_state_dict_post_hook"], [43, 1, 1, "", "register_state_dict_pre_hook"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_submodule"], [43, 1, 1, "", "share_memory"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 4, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 4, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 3, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[48, 4, 1, "", "batch_size"], [48, 4, 1, "", "device"], [48, 1, 1, "", "from_dataset"], [48, 1, 1, "", "from_tensordict"], [48, 1, 1, "", "get"], [48, 1, 1, "", "load"], [48, 1, 1, "", "load_"], [48, 1, 1, "", "load_memmap"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "memmap"], [48, 1, 1, "", "memmap_"], [48, 1, 1, "", "memmap_like"], [48, 1, 1, "", "memmap_refresh_"], [48, 4, 1, "", "names"], [48, 1, 1, "", "save"], [48, 1, 1, "", "set"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to_tensordict"], [48, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[49, 1, 1, "", "add"], [49, 1, 1, "", "append_transform"], [49, 1, 1, "", "dump"], [49, 1, 1, "", "dumps"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "extend"], [49, 1, 1, "", "insert_transform"], [49, 1, 1, "", "load"], [49, 1, 1, "", "loads"], [49, 1, 1, "", "register_load_hook"], [49, 1, 1, "", "register_save_hook"], [49, 1, 1, "", "sample"], [49, 4, 1, "", "sampler"], [49, 1, 1, "", "save"], [49, 1, 1, "", "set_sampler"], [49, 1, 1, "", "set_storage"], [49, 1, 1, "", "set_writer"], [49, 4, 1, "", "storage"], [49, 4, 1, "", "write_count"], [49, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[50, 4, 1, "", "batch_size"], [50, 4, 1, "", "device"], [50, 1, 1, "", "from_dataset"], [50, 1, 1, "", "from_tensordict"], [50, 1, 1, "", "get"], [50, 1, 1, "", "load"], [50, 1, 1, "", "load_"], [50, 1, 1, "", "load_memmap"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "memmap"], [50, 1, 1, "", "memmap_"], [50, 1, 1, "", "memmap_like"], [50, 1, 1, "", "memmap_refresh_"], [50, 4, 1, "", "names"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to_tensordict"], [50, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dump"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "load"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "register_load_hook"], [52, 1, 1, "", "register_save_hook"], [52, 1, 1, "", "sample"], [52, 4, 1, "", "sampler"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 4, 1, "", "storage"], [52, 4, 1, "", "write_count"], [52, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[53, 4, 1, "", "batch_size"], [53, 4, 1, "", "device"], [53, 1, 1, "", "from_tensordict"], [53, 1, 1, "", "get"], [53, 1, 1, "", "load"], [53, 1, 1, "", "load_"], [53, 1, 1, "", "load_memmap"], [53, 1, 1, "", "load_state_dict"], [53, 1, 1, "", "memmap"], [53, 1, 1, "", "memmap_"], [53, 1, 1, "", "memmap_like"], [53, 1, 1, "", "memmap_refresh_"], [53, 4, 1, "", "names"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set"], [53, 1, 1, "", "state_dict"], [53, 1, 1, "", "to_tensordict"], [53, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[54, 1, 1, "", "create_rollout_td"], [54, 1, 1, "", "generate"], [54, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.Stacked": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 4, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "clone"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 4, 1, "", "device"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "get"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_empty"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "items"], [56, 1, 1, "", "keys"], [56, 1, 1, "", "lock_"], [56, 1, 1, "", "make_neg_dim"], [56, 4, 1, "", "ndim"], [56, 1, 1, "", "ndimension"], [56, 1, 1, "", "one"], [56, 1, 1, "", "ones"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "unlock_"], [56, 1, 1, "", "unsqueeze"], [56, 1, 1, "", "values"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"], [56, 1, 1, "", "zeros"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 1, 1, "", "dump"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "load"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "register_load_hook"], [59, 1, 1, "", "register_save_hook"], [59, 1, 1, "", "sample"], [59, 4, 1, "", "sampler"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 4, 1, "", "storage"], [59, 4, 1, "", "write_count"], [59, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 1, 1, "", "dump"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "load"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "register_load_hook"], [60, 1, 1, "", "register_save_hook"], [60, 1, 1, "", "sample"], [60, 4, 1, "", "sampler"], [60, 1, 1, "", "save"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 4, 1, "", "storage"], [60, 4, 1, "", "write_count"], [60, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[63, 1, 1, "", "dataset_to_tensordict"], [63, 1, 1, "", "load"]], "torchrl.data.Unbounded": [[64, 1, 1, "", "assert_is_in"], [64, 1, 1, "", "clear_device_"], [64, 1, 1, "", "clone"], [64, 1, 1, "", "contains"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 4, 1, "", "device"], [64, 1, 1, "", "encode"], [64, 1, 1, "", "expand"], [64, 1, 1, "", "flatten"], [64, 1, 1, "", "implements_for_spec"], [64, 1, 1, "", "index"], [64, 1, 1, "", "is_in"], [64, 1, 1, "", "make_neg_dim"], [64, 4, 1, "", "ndim"], [64, 1, 1, "", "ndimension"], [64, 1, 1, "", "one"], [64, 1, 1, "", "ones"], [64, 1, 1, "", "project"], [64, 1, 1, "", "rand"], [64, 1, 1, "", "reshape"], [64, 1, 1, "", "sample"], [64, 1, 1, "", "squeeze"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_numpy"], [64, 1, 1, "", "type_check"], [64, 1, 1, "", "unflatten"], [64, 1, 1, "", "unsqueeze"], [64, 1, 1, "", "view"], [64, 1, 1, "", "zero"], [64, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[65, 1, 1, "", "assert_is_in"], [65, 1, 1, "", "clear_device_"], [65, 1, 1, "", "clone"], [65, 1, 1, "", "contains"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 4, 1, "", "device"], [65, 1, 1, "", "encode"], [65, 1, 1, "", "expand"], [65, 1, 1, "", "flatten"], [65, 1, 1, "", "implements_for_spec"], [65, 1, 1, "", "index"], [65, 1, 1, "", "is_in"], [65, 1, 1, "", "make_neg_dim"], [65, 4, 1, "", "ndim"], [65, 1, 1, "", "ndimension"], [65, 1, 1, "", "one"], [65, 1, 1, "", "ones"], [65, 1, 1, "", "project"], [65, 1, 1, "", "rand"], [65, 1, 1, "", "reshape"], [65, 1, 1, "", "sample"], [65, 1, 1, "", "squeeze"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_numpy"], [65, 1, 1, "", "type_check"], [65, 1, 1, "", "unflatten"], [65, 1, 1, "", "unsqueeze"], [65, 1, 1, "", "view"], [65, 1, 1, "", "zero"], [65, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[66, 1, 1, "", "assert_is_in"], [66, 1, 1, "", "clear_device_"], [66, 1, 1, "", "clone"], [66, 1, 1, "", "contains"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 4, 1, "", "device"], [66, 1, 1, "", "encode"], [66, 1, 1, "", "expand"], [66, 1, 1, "", "flatten"], [66, 1, 1, "", "implements_for_spec"], [66, 1, 1, "", "index"], [66, 1, 1, "", "is_in"], [66, 1, 1, "", "make_neg_dim"], [66, 4, 1, "", "ndim"], [66, 1, 1, "", "ndimension"], [66, 1, 1, "", "one"], [66, 1, 1, "", "ones"], [66, 1, 1, "", "project"], [66, 1, 1, "", "rand"], [66, 1, 1, "", "reshape"], [66, 1, 1, "", "sample"], [66, 1, 1, "", "squeeze"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_numpy"], [66, 1, 1, "", "type_check"], [66, 1, 1, "", "unflatten"], [66, 1, 1, "", "unsqueeze"], [66, 1, 1, "", "view"], [66, 1, 1, "", "zero"], [66, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[67, 1, 1, "", "assert_is_in"], [67, 1, 1, "", "clear_device_"], [67, 1, 1, "", "clone"], [67, 1, 1, "", "contains"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 4, 1, "", "device"], [67, 1, 1, "", "encode"], [67, 1, 1, "", "expand"], [67, 1, 1, "", "flatten"], [67, 1, 1, "", "implements_for_spec"], [67, 1, 1, "", "index"], [67, 1, 1, "", "is_in"], [67, 1, 1, "", "make_neg_dim"], [67, 4, 1, "", "ndim"], [67, 1, 1, "", "ndimension"], [67, 1, 1, "", "one"], [67, 1, 1, "", "ones"], [67, 1, 1, "", "project"], [67, 1, 1, "", "rand"], [67, 1, 1, "", "reshape"], [67, 1, 1, "", "sample"], [67, 1, 1, "", "squeeze"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_numpy"], [67, 1, 1, "", "type_check"], [67, 1, 1, "", "unflatten"], [67, 1, 1, "", "unsqueeze"], [67, 1, 1, "", "view"], [67, 1, 1, "", "zero"], [67, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[68, 1, 1, "", "assert_is_in"], [68, 1, 1, "", "clear_device_"], [68, 1, 1, "", "clone"], [68, 1, 1, "", "contains"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 4, 1, "", "device"], [68, 1, 1, "", "encode"], [68, 1, 1, "", "expand"], [68, 1, 1, "", "flatten"], [68, 1, 1, "", "implements_for_spec"], [68, 1, 1, "", "index"], [68, 1, 1, "", "is_in"], [68, 1, 1, "", "make_neg_dim"], [68, 4, 1, "", "ndim"], [68, 1, 1, "", "ndimension"], [68, 1, 1, "", "one"], [68, 1, 1, "", "ones"], [68, 1, 1, "", "project"], [68, 1, 1, "", "rand"], [68, 1, 1, "", "reshape"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "squeeze"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_numpy"], [68, 1, 1, "", "type_check"], [68, 1, 1, "", "unflatten"], [68, 1, 1, "", "unsqueeze"], [68, 1, 1, "", "view"], [68, 1, 1, "", "zero"], [68, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[73, 0, 1, "", "AtariDQNExperienceReplay"], [74, 0, 1, "", "BaseDatasetExperienceReplay"], [75, 0, 1, "", "D4RLExperienceReplay"], [76, 0, 1, "", "GenDGRLExperienceReplay"], [77, 0, 1, "", "MinariExperienceReplay"], [78, 0, 1, "", "OpenMLExperienceReplay"], [79, 0, 1, "", "OpenXExperienceReplay"], [80, 0, 1, "", "RobosetExperienceReplay"], [81, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[73, 1, 1, "", "add"], [73, 1, 1, "", "append_transform"], [73, 4, 1, "", "data_path"], [73, 4, 1, "", "data_path_root"], [73, 1, 1, "", "delete"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "empty"], [73, 1, 1, "", "extend"], [73, 1, 1, "", "insert_transform"], [73, 1, 1, "", "load"], [73, 1, 1, "", "loads"], [73, 1, 1, "", "preprocess"], [73, 1, 1, "", "register_load_hook"], [73, 1, 1, "", "register_save_hook"], [73, 1, 1, "", "sample"], [73, 4, 1, "", "sampler"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set_sampler"], [73, 1, 1, "", "set_storage"], [73, 1, 1, "", "set_writer"], [73, 4, 1, "", "storage"], [73, 4, 1, "", "write_count"], [73, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[74, 1, 1, "", "add"], [74, 1, 1, "", "append_transform"], [74, 4, 1, "", "data_path"], [74, 4, 1, "", "data_path_root"], [74, 1, 1, "", "delete"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "dumps"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "extend"], [74, 1, 1, "", "insert_transform"], [74, 1, 1, "", "load"], [74, 1, 1, "", "loads"], [74, 1, 1, "", "preprocess"], [74, 1, 1, "", "register_load_hook"], [74, 1, 1, "", "register_save_hook"], [74, 1, 1, "", "sample"], [74, 4, 1, "", "sampler"], [74, 1, 1, "", "save"], [74, 1, 1, "", "set_sampler"], [74, 1, 1, "", "set_storage"], [74, 1, 1, "", "set_writer"], [74, 4, 1, "", "storage"], [74, 4, 1, "", "write_count"], [74, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[75, 1, 1, "", "add"], [75, 1, 1, "", "append_transform"], [75, 4, 1, "", "data_path"], [75, 4, 1, "", "data_path_root"], [75, 1, 1, "", "delete"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "dumps"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "extend"], [75, 1, 1, "", "insert_transform"], [75, 1, 1, "", "load"], [75, 1, 1, "", "loads"], [75, 1, 1, "", "preprocess"], [75, 1, 1, "", "register_load_hook"], [75, 1, 1, "", "register_save_hook"], [75, 1, 1, "", "sample"], [75, 4, 1, "", "sampler"], [75, 1, 1, "", "save"], [75, 1, 1, "", "set_sampler"], [75, 1, 1, "", "set_storage"], [75, 1, 1, "", "set_writer"], [75, 4, 1, "", "storage"], [75, 4, 1, "", "write_count"], [75, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[76, 1, 1, "", "add"], [76, 1, 1, "", "append_transform"], [76, 4, 1, "", "data_path"], [76, 4, 1, "", "data_path_root"], [76, 1, 1, "", "delete"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "dumps"], [76, 1, 1, "", "empty"], [76, 1, 1, "", "extend"], [76, 1, 1, "", "insert_transform"], [76, 1, 1, "", "load"], [76, 1, 1, "", "loads"], [76, 1, 1, "", "preprocess"], [76, 1, 1, "", "register_load_hook"], [76, 1, 1, "", "register_save_hook"], [76, 1, 1, "", "sample"], [76, 4, 1, "", "sampler"], [76, 1, 1, "", "save"], [76, 1, 1, "", "set_sampler"], [76, 1, 1, "", "set_storage"], [76, 1, 1, "", "set_writer"], [76, 4, 1, "", "storage"], [76, 4, 1, "", "write_count"], [76, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[77, 1, 1, "", "add"], [77, 1, 1, "", "append_transform"], [77, 4, 1, "", "data_path"], [77, 4, 1, "", "data_path_root"], [77, 1, 1, "", "delete"], [77, 1, 1, "", "dump"], [77, 1, 1, "", "dumps"], [77, 1, 1, "", "empty"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "insert_transform"], [77, 1, 1, "", "load"], [77, 1, 1, "", "loads"], [77, 1, 1, "", "preprocess"], [77, 1, 1, "", "register_load_hook"], [77, 1, 1, "", "register_save_hook"], [77, 1, 1, "", "sample"], [77, 4, 1, "", "sampler"], [77, 1, 1, "", "save"], [77, 1, 1, "", "set_sampler"], [77, 1, 1, "", "set_storage"], [77, 1, 1, "", "set_writer"], [77, 4, 1, "", "storage"], [77, 4, 1, "", "write_count"], [77, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 4, 1, "", "data_path"], [78, 4, 1, "", "data_path_root"], [78, 1, 1, "", "delete"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "preprocess"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 4, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 4, 1, "", "storage"], [78, 4, 1, "", "write_count"], [78, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 4, 1, "", "data_path"], [79, 4, 1, "", "data_path_root"], [79, 1, 1, "", "delete"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "preprocess"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 4, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 4, 1, "", "storage"], [79, 4, 1, "", "write_count"], [79, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 4, 1, "", "data_path"], [80, 4, 1, "", "data_path_root"], [80, 1, 1, "", "delete"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "preprocess"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 4, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 4, 1, "", "storage"], [80, 4, 1, "", "write_count"], [80, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 4, 1, "", "data_path"], [81, 4, 1, "", "data_path_root"], [81, 1, 1, "", "delete"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "preprocess"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 4, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 4, 1, "", "storage"], [81, 4, 1, "", "write_count"], [81, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[83, 0, 1, "", "FlatStorageCheckpointer"], [84, 0, 1, "", "H5StorageCheckpointer"], [85, 0, 1, "", "ImmutableDatasetWriter"], [86, 0, 1, "", "LazyMemmapStorage"], [87, 0, 1, "", "LazyTensorStorage"], [88, 0, 1, "", "ListStorage"], [89, 0, 1, "", "ListStorageCheckpointer"], [90, 0, 1, "", "NestedStorageCheckpointer"], [91, 0, 1, "", "PrioritizedSampler"], [92, 0, 1, "", "PrioritizedSliceSampler"], [93, 0, 1, "", "RandomSampler"], [94, 0, 1, "", "ReplayBufferEnsemble"], [95, 0, 1, "", "RoundRobinWriter"], [96, 0, 1, "", "Sampler"], [97, 0, 1, "", "SamplerEnsemble"], [98, 0, 1, "", "SamplerWithoutReplacement"], [99, 0, 1, "", "SliceSampler"], [100, 0, 1, "", "SliceSamplerWithoutReplacement"], [101, 0, 1, "", "Storage"], [102, 0, 1, "", "StorageCheckpointerBase"], [103, 0, 1, "", "StorageEnsemble"], [104, 0, 1, "", "StorageEnsembleCheckpointer"], [105, 0, 1, "", "TensorDictMaxValueWriter"], [106, 0, 1, "", "TensorDictRoundRobinWriter"], [107, 0, 1, "", "TensorStorage"], [108, 0, 1, "", "TensorStorageCheckpointer"], [109, 0, 1, "", "Writer"], [110, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[85, 1, 1, "", "add"], [85, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[86, 1, 1, "", "attach"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "load"], [86, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[87, 1, 1, "", "attach"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "load"], [87, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[88, 1, 1, "", "attach"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "load"], [88, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[91, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[92, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[94, 1, 1, "", "add"], [94, 1, 1, "", "append_transform"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "dumps"], [94, 1, 1, "", "empty"], [94, 1, 1, "", "extend"], [94, 1, 1, "", "insert_transform"], [94, 1, 1, "", "load"], [94, 1, 1, "", "loads"], [94, 1, 1, "", "register_load_hook"], [94, 1, 1, "", "register_save_hook"], [94, 1, 1, "", "sample"], [94, 4, 1, "", "sampler"], [94, 1, 1, "", "save"], [94, 1, 1, "", "set_sampler"], [94, 1, 1, "", "set_storage"], [94, 1, 1, "", "set_writer"], [94, 4, 1, "", "storage"], [94, 4, 1, "", "write_count"], [94, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[95, 1, 1, "", "add"], [95, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[105, 1, 1, "", "add"], [105, 1, 1, "", "extend"], [105, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[106, 1, 1, "", "add"], [106, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[107, 1, 1, "", "attach"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "load"], [107, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[109, 1, 1, "", "add"], [109, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[110, 1, 1, "", "add"], [110, 1, 1, "", "extend"]], "torchrl.envs": [[111, 2, 1, "", "BraxEnv"], [112, 2, 1, "", "BraxWrapper"], [113, 2, 1, "", "DMControlEnv"], [114, 2, 1, "", "DMControlWrapper"], [115, 0, 1, "", "EnvBase"], [116, 0, 1, "", "EnvCreator"], [117, 0, 1, "", "EnvMetaData"], [118, 2, 1, "", "GymEnv"], [119, 0, 1, "", "GymLikeEnv"], [120, 2, 1, "", "GymWrapper"], [121, 2, 1, "", "HabitatEnv"], [122, 2, 1, "", "IsaacGymEnv"], [123, 2, 1, "", "IsaacGymWrapper"], [124, 2, 1, "", "JumanjiEnv"], [125, 2, 1, "", "JumanjiWrapper"], [126, 2, 1, "", "MOGymEnv"], [127, 2, 1, "", "MOGymWrapper"], [128, 2, 1, "", "MarlGroupMapType"], [129, 2, 1, "", "MeltingpotEnv"], [130, 2, 1, "", "MeltingpotWrapper"], [131, 2, 1, "", "ModelBasedEnvBase"], [132, 2, 1, "", "MultiThreadedEnv"], [133, 2, 1, "", "MultiThreadedEnvWrapper"], [134, 2, 1, "", "OpenMLEnv"], [135, 2, 1, "", "OpenSpielEnv"], [136, 2, 1, "", "OpenSpielWrapper"], [137, 0, 1, "", "ParallelEnv"], [138, 0, 1, "", "PendulumEnv"], [139, 2, 1, "", "PettingZooEnv"], [140, 2, 1, "", "PettingZooWrapper"], [141, 2, 1, "", "RoboHiveEnv"], [142, 2, 1, "", "SMACv2Env"], [143, 2, 1, "", "SMACv2Wrapper"], [144, 0, 1, "", "SerialEnv"], [145, 0, 1, "", "TicTacToeEnv"], [146, 2, 1, "", "VmasEnv"], [147, 2, 1, "", "VmasWrapper"], [148, 2, 1, "", "check_marl_grouping"], [149, 2, 1, "", "gym_backend"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "rollout"], [152, 2, 1, "", "set_gym_backend"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[115, 4, 1, "", "action_key"], [115, 4, 1, "", "action_keys"], [115, 4, 1, "", "action_spec"], [115, 1, 1, "", "add_module"], [115, 1, 1, "", "add_truncated_keys"], [115, 1, 1, "", "append_transform"], [115, 1, 1, "", "apply"], [115, 4, 1, "", "batch_locked"], [115, 4, 1, "", "batch_size"], [115, 1, 1, "", "bfloat16"], [115, 1, 1, "", "buffers"], [115, 1, 1, "", "children"], [115, 1, 1, "", "compile"], [115, 1, 1, "", "cpu"], [115, 1, 1, "", "cuda"], [115, 4, 1, "", "done_key"], [115, 4, 1, "", "done_keys"], [115, 4, 1, "", "done_keys_groups"], [115, 4, 1, "", "done_spec"], [115, 1, 1, "", "double"], [115, 1, 1, "", "empty_cache"], [115, 1, 1, "", "eval"], [115, 1, 1, "", "extra_repr"], [115, 1, 1, "", "fake_tensordict"], [115, 1, 1, "", "float"], [115, 1, 1, "", "forward"], [115, 4, 1, "", "full_action_spec"], [115, 4, 1, "", "full_done_spec"], [115, 4, 1, "", "full_reward_spec"], [115, 4, 1, "", "full_state_spec"], [115, 1, 1, "", "get_buffer"], [115, 1, 1, "", "get_extra_state"], [115, 1, 1, "", "get_parameter"], [115, 1, 1, "", "get_submodule"], [115, 1, 1, "", "half"], [115, 4, 1, "", "input_spec"], [115, 1, 1, "", "ipu"], [115, 1, 1, "", "load_state_dict"], [115, 1, 1, "", "maybe_reset"], [115, 1, 1, "", "modules"], [115, 1, 1, "", "mtia"], [115, 1, 1, "", "named_buffers"], [115, 1, 1, "", "named_children"], [115, 1, 1, "", "named_modules"], [115, 1, 1, "", "named_parameters"], [115, 4, 1, "", "observation_spec"], [115, 4, 1, "", "output_spec"], [115, 1, 1, "", "parameters"], [115, 1, 1, "", "rand_action"], [115, 1, 1, "id0", "rand_step"], [115, 1, 1, "", "register_backward_hook"], [115, 1, 1, "", "register_buffer"], [115, 1, 1, "", "register_forward_hook"], [115, 1, 1, "", "register_forward_pre_hook"], [115, 1, 1, "", "register_full_backward_hook"], [115, 1, 1, "", "register_full_backward_pre_hook"], [115, 1, 1, "", "register_gym"], [115, 1, 1, "", "register_load_state_dict_post_hook"], [115, 1, 1, "", "register_load_state_dict_pre_hook"], [115, 1, 1, "", "register_module"], [115, 1, 1, "", "register_parameter"], [115, 1, 1, "", "register_state_dict_post_hook"], [115, 1, 1, "", "register_state_dict_pre_hook"], [115, 1, 1, "", "requires_grad_"], [115, 1, 1, "id1", "reset"], [115, 4, 1, "", "reset_keys"], [115, 4, 1, "", "reward_key"], [115, 4, 1, "", "reward_keys"], [115, 4, 1, "", "reward_spec"], [115, 1, 1, "id2", "rollout"], [115, 1, 1, "", "set_extra_state"], [115, 1, 1, "id3", "set_seed"], [115, 1, 1, "", "set_submodule"], [115, 4, 1, "", "shape"], [115, 1, 1, "", "share_memory"], [115, 4, 1, "", "specs"], [115, 1, 1, "", "state_dict"], [115, 4, 1, "", "state_keys"], [115, 4, 1, "", "state_spec"], [115, 1, 1, "id4", "step"], [115, 1, 1, "", "step_and_maybe_reset"], [115, 1, 1, "", "to"], [115, 1, 1, "", "to_empty"], [115, 1, 1, "", "train"], [115, 1, 1, "", "type"], [115, 1, 1, "", "xpu"], [115, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[119, 4, 1, "", "action_key"], [119, 4, 1, "", "action_keys"], [119, 4, 1, "", "action_spec"], [119, 1, 1, "", "add_module"], [119, 1, 1, "", "add_truncated_keys"], [119, 1, 1, "", "append_transform"], [119, 1, 1, "", "apply"], [119, 1, 1, "", "auto_register_info_dict"], [119, 4, 1, "", "batch_locked"], [119, 4, 1, "", "batch_size"], [119, 1, 1, "", "bfloat16"], [119, 1, 1, "", "buffers"], [119, 1, 1, "", "children"], [119, 1, 1, "", "close"], [119, 1, 1, "", "compile"], [119, 1, 1, "", "cpu"], [119, 1, 1, "", "cuda"], [119, 4, 1, "", "done_key"], [119, 4, 1, "", "done_keys"], [119, 4, 1, "", "done_keys_groups"], [119, 4, 1, "", "done_spec"], [119, 1, 1, "", "double"], [119, 1, 1, "", "empty_cache"], [119, 1, 1, "", "eval"], [119, 1, 1, "", "extra_repr"], [119, 1, 1, "", "fake_tensordict"], [119, 1, 1, "", "float"], [119, 1, 1, "", "forward"], [119, 4, 1, "", "full_action_spec"], [119, 4, 1, "", "full_done_spec"], [119, 4, 1, "", "full_reward_spec"], [119, 4, 1, "", "full_state_spec"], [119, 1, 1, "", "get_buffer"], [119, 1, 1, "", "get_extra_state"], [119, 1, 1, "", "get_parameter"], [119, 1, 1, "", "get_submodule"], [119, 1, 1, "", "half"], [119, 4, 1, "", "input_spec"], [119, 1, 1, "", "ipu"], [119, 1, 1, "", "load_state_dict"], [119, 1, 1, "", "maybe_reset"], [119, 1, 1, "", "modules"], [119, 1, 1, "", "mtia"], [119, 1, 1, "", "named_buffers"], [119, 1, 1, "", "named_children"], [119, 1, 1, "", "named_modules"], [119, 1, 1, "", "named_parameters"], [119, 4, 1, "", "observation_spec"], [119, 4, 1, "", "output_spec"], [119, 1, 1, "", "parameters"], [119, 1, 1, "", "rand_action"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "read_action"], [119, 1, 1, "", "read_done"], [119, 1, 1, "", "read_obs"], [119, 1, 1, "", "read_reward"], [119, 1, 1, "", "register_backward_hook"], [119, 1, 1, "", "register_buffer"], [119, 1, 1, "", "register_forward_hook"], [119, 1, 1, "", "register_forward_pre_hook"], [119, 1, 1, "", "register_full_backward_hook"], [119, 1, 1, "", "register_full_backward_pre_hook"], [119, 1, 1, "", "register_gym"], [119, 1, 1, "", "register_load_state_dict_post_hook"], [119, 1, 1, "", "register_load_state_dict_pre_hook"], [119, 1, 1, "", "register_module"], [119, 1, 1, "", "register_parameter"], [119, 1, 1, "", "register_state_dict_post_hook"], [119, 1, 1, "", "register_state_dict_pre_hook"], [119, 1, 1, "", "requires_grad_"], [119, 1, 1, "", "reset"], [119, 4, 1, "", "reset_keys"], [119, 4, 1, "", "reward_key"], [119, 4, 1, "", "reward_keys"], [119, 4, 1, "", "reward_spec"], [119, 1, 1, "", "rollout"], [119, 1, 1, "", "set_extra_state"], [119, 1, 1, "", "set_info_dict_reader"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "set_submodule"], [119, 4, 1, "", "shape"], [119, 1, 1, "", "share_memory"], [119, 4, 1, "", "specs"], [119, 1, 1, "", "state_dict"], [119, 4, 1, "", "state_keys"], [119, 4, 1, "", "state_spec"], [119, 1, 1, "", "step"], [119, 1, 1, "", "step_and_maybe_reset"], [119, 1, 1, "", "to"], [119, 1, 1, "", "to_empty"], [119, 1, 1, "", "train"], [119, 1, 1, "", "type"], [119, 1, 1, "", "xpu"], [119, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[137, 4, 1, "", "action_key"], [137, 4, 1, "", "action_keys"], [137, 4, 1, "", "action_spec"], [137, 1, 1, "", "add_module"], [137, 1, 1, "", "add_truncated_keys"], [137, 1, 1, "", "append_transform"], [137, 1, 1, "", "apply"], [137, 4, 1, "", "batch_locked"], [137, 4, 1, "", "batch_size"], [137, 1, 1, "", "bfloat16"], [137, 1, 1, "", "buffers"], [137, 1, 1, "", "children"], [137, 1, 1, "", "compile"], [137, 1, 1, "", "cpu"], [137, 1, 1, "", "cuda"], [137, 4, 1, "", "done_key"], [137, 4, 1, "", "done_keys"], [137, 4, 1, "", "done_keys_groups"], [137, 4, 1, "", "done_spec"], [137, 1, 1, "", "double"], [137, 1, 1, "", "empty_cache"], [137, 1, 1, "", "eval"], [137, 1, 1, "", "extra_repr"], [137, 1, 1, "", "fake_tensordict"], [137, 1, 1, "", "float"], [137, 1, 1, "", "forward"], [137, 4, 1, "", "full_action_spec"], [137, 4, 1, "", "full_done_spec"], [137, 4, 1, "", "full_reward_spec"], [137, 4, 1, "", "full_state_spec"], [137, 1, 1, "", "get_buffer"], [137, 1, 1, "", "get_extra_state"], [137, 1, 1, "", "get_parameter"], [137, 1, 1, "", "get_submodule"], [137, 1, 1, "", "half"], [137, 4, 1, "", "input_spec"], [137, 1, 1, "", "ipu"], [137, 1, 1, "", "load_state_dict"], [137, 1, 1, "", "maybe_reset"], [137, 1, 1, "", "modules"], [137, 1, 1, "", "mtia"], [137, 1, 1, "", "named_buffers"], [137, 1, 1, "", "named_children"], [137, 1, 1, "", "named_modules"], [137, 1, 1, "", "named_parameters"], [137, 4, 1, "", "observation_spec"], [137, 4, 1, "", "output_spec"], [137, 1, 1, "", "parameters"], [137, 1, 1, "", "rand_action"], [137, 1, 1, "", "rand_step"], [137, 1, 1, "", "register_backward_hook"], [137, 1, 1, "", "register_buffer"], [137, 1, 1, "", "register_forward_hook"], [137, 1, 1, "", "register_forward_pre_hook"], [137, 1, 1, "", "register_full_backward_hook"], [137, 1, 1, "", "register_full_backward_pre_hook"], [137, 1, 1, "", "register_gym"], [137, 1, 1, "", "register_load_state_dict_post_hook"], [137, 1, 1, "", "register_load_state_dict_pre_hook"], [137, 1, 1, "", "register_module"], [137, 1, 1, "", "register_parameter"], [137, 1, 1, "", "register_state_dict_post_hook"], [137, 1, 1, "", "register_state_dict_pre_hook"], [137, 1, 1, "", "requires_grad_"], [137, 1, 1, "", "reset"], [137, 4, 1, "", "reset_keys"], [137, 4, 1, "", "reward_key"], [137, 4, 1, "", "reward_keys"], [137, 4, 1, "", "reward_spec"], [137, 1, 1, "", "rollout"], [137, 1, 1, "", "set_extra_state"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "set_submodule"], [137, 4, 1, "", "shape"], [137, 1, 1, "", "share_memory"], [137, 4, 1, "", "specs"], [137, 1, 1, "", "state_dict"], [137, 4, 1, "", "state_keys"], [137, 4, 1, "", "state_spec"], [137, 1, 1, "", "step"], [137, 1, 1, "", "step_and_maybe_reset"], [137, 1, 1, "", "to"], [137, 1, 1, "", "to_empty"], [137, 1, 1, "", "train"], [137, 1, 1, "", "type"], [137, 1, 1, "", "update_kwargs"], [137, 1, 1, "", "xpu"], [137, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[138, 4, 1, "", "action_key"], [138, 4, 1, "", "action_keys"], [138, 4, 1, "", "action_spec"], [138, 1, 1, "", "add_module"], [138, 1, 1, "", "add_truncated_keys"], [138, 1, 1, "", "append_transform"], [138, 1, 1, "", "apply"], [138, 4, 1, "", "batch_size"], [138, 1, 1, "", "bfloat16"], [138, 1, 1, "", "buffers"], [138, 1, 1, "", "children"], [138, 1, 1, "", "compile"], [138, 1, 1, "", "cpu"], [138, 1, 1, "", "cuda"], [138, 4, 1, "", "done_key"], [138, 4, 1, "", "done_keys"], [138, 4, 1, "", "done_keys_groups"], [138, 4, 1, "", "done_spec"], [138, 1, 1, "", "double"], [138, 1, 1, "", "empty_cache"], [138, 1, 1, "", "eval"], [138, 1, 1, "", "extra_repr"], [138, 1, 1, "", "fake_tensordict"], [138, 1, 1, "", "float"], [138, 1, 1, "", "forward"], [138, 4, 1, "", "full_action_spec"], [138, 4, 1, "", "full_done_spec"], [138, 4, 1, "", "full_reward_spec"], [138, 4, 1, "", "full_state_spec"], [138, 1, 1, "", "gen_params"], [138, 1, 1, "", "get_buffer"], [138, 1, 1, "", "get_extra_state"], [138, 1, 1, "", "get_parameter"], [138, 1, 1, "", "get_submodule"], [138, 1, 1, "", "half"], [138, 4, 1, "", "input_spec"], [138, 1, 1, "", "ipu"], [138, 1, 1, "", "load_state_dict"], [138, 1, 1, "", "maybe_reset"], [138, 1, 1, "", "modules"], [138, 1, 1, "", "mtia"], [138, 1, 1, "", "named_buffers"], [138, 1, 1, "", "named_children"], [138, 1, 1, "", "named_modules"], [138, 1, 1, "", "named_parameters"], [138, 4, 1, "", "observation_spec"], [138, 4, 1, "", "output_spec"], [138, 1, 1, "", "parameters"], [138, 1, 1, "", "rand_action"], [138, 1, 1, "", "rand_step"], [138, 1, 1, "", "register_backward_hook"], [138, 1, 1, "", "register_buffer"], [138, 1, 1, "", "register_forward_hook"], [138, 1, 1, "", "register_forward_pre_hook"], [138, 1, 1, "", "register_full_backward_hook"], [138, 1, 1, "", "register_full_backward_pre_hook"], [138, 1, 1, "", "register_gym"], [138, 1, 1, "", "register_load_state_dict_post_hook"], [138, 1, 1, "", "register_load_state_dict_pre_hook"], [138, 1, 1, "", "register_module"], [138, 1, 1, "", "register_parameter"], [138, 1, 1, "", "register_state_dict_post_hook"], [138, 1, 1, "", "register_state_dict_pre_hook"], [138, 1, 1, "", "requires_grad_"], [138, 1, 1, "", "reset"], [138, 4, 1, "", "reset_keys"], [138, 4, 1, "", "reward_key"], [138, 4, 1, "", "reward_keys"], [138, 4, 1, "", "reward_spec"], [138, 1, 1, "", "rollout"], [138, 1, 1, "", "set_extra_state"], [138, 1, 1, "", "set_seed"], [138, 1, 1, "", "set_submodule"], [138, 4, 1, "", "shape"], [138, 1, 1, "", "share_memory"], [138, 4, 1, "", "specs"], [138, 1, 1, "", "state_dict"], [138, 4, 1, "", "state_keys"], [138, 4, 1, "", "state_spec"], [138, 1, 1, "", "step"], [138, 1, 1, "", "step_and_maybe_reset"], [138, 1, 1, "", "to"], [138, 1, 1, "", "to_empty"], [138, 1, 1, "", "train"], [138, 1, 1, "", "type"], [138, 1, 1, "", "xpu"], [138, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[144, 4, 1, "", "action_key"], [144, 4, 1, "", "action_keys"], [144, 4, 1, "", "action_spec"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 4, 1, "", "batch_locked"], [144, 4, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "children"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 4, 1, "", "done_key"], [144, 4, 1, "", "done_keys"], [144, 4, 1, "", "done_keys_groups"], [144, 4, 1, "", "done_spec"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 4, 1, "", "full_action_spec"], [144, 4, 1, "", "full_done_spec"], [144, 4, 1, "", "full_reward_spec"], [144, 4, 1, "", "full_state_spec"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 4, 1, "", "input_spec"], [144, 1, 1, "", "ipu"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 4, 1, "", "observation_spec"], [144, 4, 1, "", "output_spec"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 4, 1, "", "reset_keys"], [144, 4, 1, "", "reward_key"], [144, 4, 1, "", "reward_keys"], [144, 4, 1, "", "reward_spec"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_submodule"], [144, 4, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 4, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 4, 1, "", "state_keys"], [144, 4, 1, "", "state_spec"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "update_kwargs"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[145, 4, 1, "", "action_key"], [145, 4, 1, "", "action_keys"], [145, 4, 1, "", "action_spec"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 4, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 4, 1, "", "done_key"], [145, 4, 1, "", "done_keys"], [145, 4, 1, "", "done_keys_groups"], [145, 4, 1, "", "done_spec"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 4, 1, "", "full_action_spec"], [145, 4, 1, "", "full_done_spec"], [145, 4, 1, "", "full_reward_spec"], [145, 4, 1, "", "full_state_spec"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 4, 1, "", "input_spec"], [145, 1, 1, "", "ipu"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 4, 1, "", "observation_spec"], [145, 4, 1, "", "output_spec"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 4, 1, "", "reset_keys"], [145, 4, 1, "", "reward_key"], [145, 4, 1, "", "reward_keys"], [145, 4, 1, "", "reward_spec"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_submodule"], [145, 4, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 4, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 4, 1, "", "state_keys"], [145, 4, 1, "", "state_spec"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[150, 2, 1, "", "DreamerDecoder"], [151, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[153, 0, 1, "", "ActionDiscretizer"], [154, 0, 1, "", "ActionMask"], [155, 0, 1, "", "AutoResetEnv"], [156, 0, 1, "", "AutoResetTransform"], [157, 0, 1, "", "BatchSizeTransform"], [158, 0, 1, "", "BinarizeReward"], [159, 0, 1, "", "BurnInTransform"], [160, 0, 1, "", "CatFrames"], [161, 0, 1, "", "CatTensors"], [162, 0, 1, "", "CenterCrop"], [163, 0, 1, "", "ClipTransform"], [164, 0, 1, "", "Compose"], [165, 0, 1, "", "Crop"], [166, 0, 1, "", "DTypeCastTransform"], [167, 0, 1, "", "DeviceCastTransform"], [168, 0, 1, "", "DiscreteActionProjection"], [169, 0, 1, "", "DoubleToFloat"], [170, 0, 1, "", "EndOfLifeTransform"], [171, 0, 1, "", "ExcludeTransform"], [172, 0, 1, "", "FiniteTensorDictCheck"], [173, 0, 1, "", "FlattenObservation"], [174, 0, 1, "", "FrameSkipTransform"], [175, 0, 1, "", "GrayScale"], [176, 0, 1, "", "InitTracker"], [177, 0, 1, "", "KLRewardTransform"], [178, 0, 1, "", "NoopResetEnv"], [179, 0, 1, "", "ObservationNorm"], [180, 0, 1, "", "ObservationTransform"], [181, 0, 1, "", "PermuteTransform"], [182, 0, 1, "", "PinMemoryTransform"], [183, 0, 1, "", "R3MTransform"], [184, 0, 1, "", "RandomCropTensorDict"], [185, 0, 1, "", "RemoveEmptySpecs"], [186, 0, 1, "", "RenameTransform"], [187, 0, 1, "", "Resize"], [188, 0, 1, "", "Reward2GoTransform"], [189, 0, 1, "", "RewardClipping"], [190, 0, 1, "", "RewardScaling"], [191, 0, 1, "", "RewardSum"], [192, 0, 1, "", "SelectTransform"], [193, 0, 1, "", "SignTransform"], [194, 0, 1, "", "SqueezeTransform"], [195, 0, 1, "", "StepCounter"], [196, 0, 1, "", "TargetReturn"], [197, 0, 1, "", "TensorDictPrimer"], [198, 0, 1, "", "TimeMaxPool"], [199, 0, 1, "", "ToTensorImage"], [200, 0, 1, "", "Transform"], [201, 0, 1, "", "TransformedEnv"], [202, 0, 1, "", "UnsqueezeTransform"], [203, 0, 1, "", "VC1Transform"], [204, 0, 1, "", "VIPRewardTransform"], [205, 0, 1, "", "VIPTransform"], [206, 0, 1, "", "VecGymEnvTransform"], [207, 0, 1, "", "VecNorm"], [208, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[153, 0, 1, "", "SamplingStrategy"], [153, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[154, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[155, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[156, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_env_batch_size"], [157, 1, 1, "", "transform_input_spec"], [157, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[158, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[159, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[163, 1, 1, "", "transform_observation_spec"], [163, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[164, 1, 1, "", "append"], [164, 1, 1, "", "forward"], [164, 1, 1, "", "insert"], [164, 1, 1, "", "to"], [164, 1, 1, "", "transform_env_batch_size"], [164, 1, 1, "", "transform_env_device"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"], [164, 1, 1, "", "transform_output_spec"], [164, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_observation_spec"], [166, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "transform_done_spec"], [167, 1, 1, "", "transform_env_device"], [167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_observation_spec"], [167, 1, 1, "", "transform_output_spec"], [167, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[168, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "register_keys"], [170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[172, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[174, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[175, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[179, 1, 1, "", "init_stats"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[182, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[183, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[184, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[188, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[189, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[190, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "to"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[200, 4, 1, "", "container"], [200, 1, 1, "", "forward"], [200, 4, 1, "", "parent"], [200, 1, 1, "", "to"], [200, 1, 1, "", "transform_done_spec"], [200, 1, 1, "", "transform_env_batch_size"], [200, 1, 1, "", "transform_env_device"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_output_spec"], [200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[201, 1, 1, "", "add_truncated_keys"], [201, 1, 1, "", "append_transform"], [201, 4, 1, "", "batch_locked"], [201, 4, 1, "", "batch_size"], [201, 1, 1, "", "empty_cache"], [201, 1, 1, "", "eval"], [201, 4, 1, "", "input_spec"], [201, 1, 1, "", "insert_transform"], [201, 1, 1, "", "load_state_dict"], [201, 4, 1, "", "output_spec"], [201, 1, 1, "", "set_missing_tolerance"], [201, 1, 1, "", "set_seed"], [201, 1, 1, "", "state_dict"], [201, 1, 1, "", "to"], [201, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[202, 1, 1, "", "transform_input_spec"], [202, 1, 1, "", "transform_observation_spec"], [202, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "make_noload_model"], [203, 1, 1, "", "to"], [203, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[205, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[207, 1, 1, "", "build_td_for_shared_vecnorm"], [207, 1, 1, "", "forward"], [207, 1, 1, "", "freeze"], [207, 1, 1, "", "frozen_copy"], [207, 1, 1, "", "get_extra_state"], [207, 4, 1, "", "loc"], [207, 4, 1, "", "scale"], [207, 1, 1, "", "set_extra_state"], [207, 4, 1, "", "standard_normal"], [207, 1, 1, "", "to_observation_norm"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[209, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[209, 1, 1, "", "add_module"], [209, 1, 1, "", "apply"], [209, 1, 1, "", "bfloat16"], [209, 1, 1, "", "buffers"], [209, 1, 1, "", "children"], [209, 1, 1, "", "compile"], [209, 4, 1, "", "container"], [209, 1, 1, "", "cpu"], [209, 1, 1, "", "cuda"], [209, 1, 1, "", "double"], [209, 1, 1, "", "eval"], [209, 1, 1, "", "extra_repr"], [209, 1, 1, "", "float"], [209, 1, 1, "", "forward"], [209, 1, 1, "", "get_buffer"], [209, 1, 1, "", "get_extra_state"], [209, 1, 1, "", "get_parameter"], [209, 1, 1, "", "get_submodule"], [209, 1, 1, "", "half"], [209, 1, 1, "", "ipu"], [209, 1, 1, "", "load_state_dict"], [209, 1, 1, "", "modules"], [209, 1, 1, "", "mtia"], [209, 4, 1, "", "n_steps"], [209, 1, 1, "", "named_buffers"], [209, 1, 1, "", "named_children"], [209, 1, 1, "", "named_modules"], [209, 1, 1, "", "named_parameters"], [209, 1, 1, "", "parameters"], [209, 4, 1, "", "parent"], [209, 1, 1, "", "register_backward_hook"], [209, 1, 1, "", "register_buffer"], [209, 1, 1, "", "register_forward_hook"], [209, 1, 1, "", "register_forward_pre_hook"], [209, 1, 1, "", "register_full_backward_hook"], [209, 1, 1, "", "register_full_backward_pre_hook"], [209, 1, 1, "", "register_load_state_dict_post_hook"], [209, 1, 1, "", "register_load_state_dict_pre_hook"], [209, 1, 1, "", "register_module"], [209, 1, 1, "", "register_parameter"], [209, 1, 1, "", "register_state_dict_post_hook"], [209, 1, 1, "", "register_state_dict_pre_hook"], [209, 1, 1, "", "requires_grad_"], [209, 1, 1, "", "set_extra_state"], [209, 1, 1, "", "set_submodule"], [209, 1, 1, "", "share_memory"], [209, 1, 1, "", "state_dict"], [209, 1, 1, "", "to"], [209, 1, 1, "", "to_empty"], [209, 1, 1, "", "train"], [209, 1, 1, "", "transform_done_spec"], [209, 1, 1, "", "transform_env_batch_size"], [209, 1, 1, "", "transform_env_device"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"], [209, 1, 1, "", "transform_reward_spec"], [209, 1, 1, "", "type"], [209, 1, 1, "", "xpu"], [209, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[210, 2, 1, "", "RandomPolicy"], [211, 2, 1, "", "check_env_specs"], [212, 2, 1, "", "exploration_mode"], [213, 2, 1, "", "exploration_type"], [214, 2, 1, "", "get_available_libraries"], [215, 2, 1, "", "make_composite_from_td"], [216, 2, 1, "", "set_exploration_mode"], [217, 2, 1, "", "set_exploration_type"], [218, 2, 1, "", "step_mdp"], [219, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[220, 0, 1, "", "BatchRenorm1d"], [221, 0, 1, "", "CEMPlanner"], [222, 0, 1, "", "Conv3dNet"], [223, 0, 1, "", "ConvNet"], [224, 0, 1, "", "DTActor"], [225, 0, 1, "", "DdpgCnnActor"], [226, 0, 1, "", "DdpgCnnQNet"], [227, 0, 1, "", "DdpgMlpActor"], [228, 0, 1, "", "DdpgMlpQNet"], [229, 0, 1, "", "DecisionTransformer"], [230, 0, 1, "", "Delta"], [231, 0, 1, "", "DistributionalDQNnet"], [232, 0, 1, "", "DistributionalQValueHook"], [233, 0, 1, "", "DreamerActor"], [234, 0, 1, "", "DuelingCnnDQNet"], [235, 0, 1, "", "GRU"], [236, 0, 1, "", "GRUCell"], [237, 0, 1, "", "GRUModule"], [238, 0, 1, "", "IndependentNormal"], [239, 0, 1, "", "LSTM"], [240, 0, 1, "", "LSTMCell"], [241, 0, 1, "", "LSTMModule"], [242, 0, 1, "", "MLP"], [243, 0, 1, "", "MPCPlannerBase"], [244, 0, 1, "", "MPPIPlanner"], [245, 0, 1, "", "MaskedCategorical"], [246, 0, 1, "", "MaskedOneHotCategorical"], [247, 0, 1, "", "MultiAgentConvNet"], [248, 0, 1, "", "MultiAgentMLP"], [249, 0, 1, "", "MultiAgentNetBase"], [250, 0, 1, "", "NoisyLazyLinear"], [251, 0, 1, "", "NoisyLinear"], [252, 0, 1, "", "NormalParamWrapper"], [253, 0, 1, "", "ObsDecoder"], [254, 0, 1, "", "ObsEncoder"], [255, 0, 1, "", "OneHotCategorical"], [256, 0, 1, "", "OnlineDTActor"], [257, 0, 1, "", "QMixer"], [258, 0, 1, "", "QValueHook"], [259, 0, 1, "", "RSSMPosterior"], [260, 0, 1, "", "RSSMPrior"], [261, 0, 1, "", "Squeeze2dLayer"], [262, 0, 1, "", "SqueezeLayer"], [263, 0, 1, "", "TanhDelta"], [264, 0, 1, "", "TanhNormal"], [265, 0, 1, "", "TruncatedNormal"], [266, 0, 1, "", "VDNMixer"], [267, 0, 1, "", "VmapModule"], [268, 0, 1, "", "reset_noise"]], "torchrl.modules.BatchRenorm1d": [[220, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[221, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[222, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[223, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[224, 1, 1, "", "default_config"], [224, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[225, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[226, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[227, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[228, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[229, 0, 1, "", "DTConfig"], [229, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[230, 1, 1, "", "log_prob"], [230, 4, 1, "", "mean"], [230, 4, 1, "", "mode"], [230, 1, 1, "", "rsample"], [230, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[231, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[233, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[234, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[235, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[236, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[237, 1, 1, "", "forward"], [237, 1, 1, "id0", "make_tensordict_primer"], [237, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[238, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[239, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[240, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[241, 1, 1, "", "forward"], [241, 1, 1, "id0", "make_tensordict_primer"], [241, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[242, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[244, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[245, 1, 1, "", "log_prob"], [245, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[246, 1, 1, "", "log_prob"], [246, 1, 1, "", "rsample"], [246, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "from_stateful_net"], [249, 1, 1, "", "get_stateful_net"], [249, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[250, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[252, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[253, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[254, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[255, 1, 1, "", "log_prob"], [255, 4, 1, "", "mode"], [255, 1, 1, "", "rsample"], [255, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[256, 1, 1, "", "default_config"], [256, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[257, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[259, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[260, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[262, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[263, 4, 1, "", "mean"], [263, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[264, 1, 1, "", "get_mode"], [264, 4, 1, "", "mean"], [264, 4, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[265, 1, 1, "", "log_prob"], [265, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[266, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[267, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[269, 0, 1, "", "Actor"], [270, 0, 1, "", "ActorCriticOperator"], [271, 0, 1, "", "ActorCriticWrapper"], [272, 0, 1, "", "ActorValueOperator"], [273, 0, 1, "", "AdditiveGaussianModule"], [274, 0, 1, "", "AdditiveGaussianWrapper"], [275, 0, 1, "", "DecisionTransformerInferenceWrapper"], [276, 0, 1, "", "DistributionalQValueActor"], [277, 0, 1, "", "DistributionalQValueModule"], [278, 0, 1, "", "EGreedyModule"], [279, 0, 1, "", "EGreedyWrapper"], [280, 0, 1, "", "LMHeadActorValueOperator"], [281, 0, 1, "", "MultiStepActorWrapper"], [282, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [283, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [284, 0, 1, "", "ProbabilisticActor"], [285, 0, 1, "", "QValueActor"], [286, 0, 1, "", "QValueModule"], [287, 0, 1, "", "SafeModule"], [288, 0, 1, "", "SafeProbabilisticModule"], [289, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [290, 0, 1, "", "SafeSequential"], [291, 0, 1, "", "TanhModule"], [292, 0, 1, "", "ValueOperator"], [293, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[270, 1, 1, "", "get_critic_operator"], [270, 1, 1, "", "get_policy_head"], [270, 1, 1, "", "get_value_head"], [270, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[271, 1, 1, "", "get_policy_head"], [271, 1, 1, "", "get_policy_operator"], [271, 1, 1, "", "get_value_head"], [271, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[272, 1, 1, "", "get_policy_head"], [272, 1, 1, "", "get_policy_operator"], [272, 1, 1, "", "get_value_head"], [272, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianModule": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "mask_context"], [275, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[277, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[281, 1, 1, "", "forward"], [281, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[286, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[287, 1, 1, "", "random"], [287, 1, 1, "", "random_sample"], [287, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[288, 1, 1, "", "random"], [288, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[291, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[293, 1, 1, "", "get_reward_operator"], [293, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[294, 0, 1, "", "biased_softplus"], [295, 0, 1, "", "get_primers_from_module"], [296, 0, 1, "", "inv_softplus"], [297, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[294, 1, 1, "", "forward"]], "torchrl.objectives": [[298, 0, 1, "", "A2CLoss"], [299, 0, 1, "", "CQLLoss"], [300, 0, 1, "", "ClipPPOLoss"], [301, 0, 1, "", "CrossQLoss"], [302, 0, 1, "", "DDPGLoss"], [303, 0, 1, "", "DQNLoss"], [304, 0, 1, "", "DTLoss"], [305, 0, 1, "", "DiscreteCQLLoss"], [306, 0, 1, "", "DiscreteIQLLoss"], [307, 0, 1, "", "DiscreteSACLoss"], [308, 0, 1, "", "DistributionalDQNLoss"], [309, 0, 1, "", "DreamerActorLoss"], [310, 0, 1, "", "DreamerModelLoss"], [311, 0, 1, "", "DreamerValueLoss"], [312, 0, 1, "", "GAILLoss"], [313, 0, 1, "", "HardUpdate"], [314, 0, 1, "", "IQLLoss"], [315, 0, 1, "", "KLPENPPOLoss"], [316, 0, 1, "", "LossModule"], [317, 0, 1, "", "OnlineDTLoss"], [318, 0, 1, "", "PPOLoss"], [319, 0, 1, "", "REDQLoss"], [320, 0, 1, "", "ReinforceLoss"], [321, 0, 1, "", "SACLoss"], [322, 0, 1, "", "SoftUpdate"], [323, 0, 1, "", "TD3BCLoss"], [324, 0, 1, "", "TD3Loss"], [325, 0, 1, "", "ValueEstimators"], [326, 0, 1, "", "default_value_kwargs"], [327, 0, 1, "", "distance_loss"], [328, 0, 1, "", "hold_out_net"], [329, 0, 1, "", "hold_out_params"], [331, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[298, 1, 1, "", "forward"], [298, 4, 1, "", "functional"], [298, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[299, 1, 1, "", "forward"], [299, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[300, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[301, 1, 1, "", "actor_loss"], [301, 1, 1, "", "alpha_loss"], [301, 1, 1, "", "forward"], [301, 1, 1, "", "load_state_dict"], [301, 1, 1, "", "make_value_estimator"], [301, 1, 1, "", "qvalue_loss"], [301, 1, 1, "", "state_dict"], [301, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[302, 1, 1, "", "forward"], [302, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[303, 1, 1, "", "forward"], [303, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[304, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[305, 1, 1, "", "forward"], [305, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[306, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[308, 1, 1, "", "forward"], [308, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[310, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[311, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[312, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[314, 1, 1, "", "forward"], [314, 1, 1, "", "loss_value_diff"], [314, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[315, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[316, 1, 1, "", "convert_to_functional"], [316, 1, 1, "", "forward"], [316, 1, 1, "", "from_stateful_net"], [316, 4, 1, "", "functional"], [316, 1, 1, "", "get_stateful_net"], [316, 1, 1, "", "make_value_estimator"], [316, 1, 1, "", "named_parameters"], [316, 1, 1, "", "parameters"], [316, 1, 1, "", "set_keys"], [316, 4, 1, "", "value_estimator"], [316, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[317, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[318, 1, 1, "", "forward"], [318, 4, 1, "", "functional"], [318, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[320, 1, 1, "", "forward"], [320, 4, 1, "", "functional"], [320, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[321, 1, 1, "", "forward"], [321, 1, 1, "", "load_state_dict"], [321, 1, 1, "", "make_value_estimator"], [321, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[323, 1, 1, "", "actor_loss"], [323, 1, 1, "", "forward"], [323, 1, 1, "", "make_value_estimator"], [323, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[324, 1, 1, "", "forward"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[330, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[330, 1, 1, "", "forward"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[332, 0, 1, "", "GAE"], [333, 0, 1, "", "TD0Estimator"], [334, 0, 1, "", "TD1Estimator"], [335, 0, 1, "", "TDLambdaEstimator"], [336, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[332, 1, 1, "", "forward"], [332, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[333, 1, 1, "", "forward"], [333, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[334, 1, 1, "", "forward"], [334, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[335, 1, 1, "", "forward"], [335, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[336, 1, 1, "", "forward"], [336, 1, 1, "", "set_keys"], [336, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[337, 0, 1, "", "generalized_advantage_estimate"], [338, 0, 1, "", "reward2go"], [339, 0, 1, "", "td0_advantage_estimate"], [340, 0, 1, "", "td0_return_estimate"], [341, 0, 1, "", "td1_advantage_estimate"], [342, 0, 1, "", "td1_return_estimate"], [343, 0, 1, "", "td_lambda_advantage_estimate"], [344, 0, 1, "", "td_lambda_return_estimate"], [345, 0, 1, "", "vec_generalized_advantage_estimate"], [346, 0, 1, "", "vec_td1_advantage_estimate"], [347, 0, 1, "", "vec_td1_return_estimate"], [348, 0, 1, "", "vec_td_lambda_advantage_estimate"], [349, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[350, 2, 1, "", "PixelRenderTransform"], [351, 2, 1, "", "TensorDictRecorder"], [352, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[353, 2, 1, "", "Logger"], [355, 2, 1, "", "generate_exp_name"], [356, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[354, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[357, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[358, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[359, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[360, 0, 1, "", "BatchSubSampler"], [361, 0, 1, "", "ClearCudaCache"], [362, 0, 1, "", "CountFramesLog"], [363, 0, 1, "", "LogReward"], [364, 0, 1, "", "OptimizerHook"], [365, 0, 1, "", "Recorder"], [366, 0, 1, "", "ReplayBufferTrainer"], [367, 0, 1, "", "RewardNormalizer"], [368, 0, 1, "", "SelectKeys"], [369, 0, 1, "", "Trainer"], [370, 0, 1, "", "TrainerHookBase"], [371, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[360, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[361, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[362, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[363, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[364, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[365, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[366, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[367, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[368, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[370, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[371, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[372, 2, 1, "", "correct_for_frame_skip"], [373, 2, 1, "", "get_stats_random_rollout"], [374, 2, 1, "", "make_collector_offpolicy"], [375, 2, 1, "", "make_collector_onpolicy"], [376, 2, 1, "", "make_dqn_loss"], [377, 2, 1, "", "make_replay_buffer"], [378, 2, 1, "", "make_target_updater"], [379, 2, 1, "", "make_trainer"], [380, 2, 1, "", "parallel_env_constructor"], [381, 2, 1, "", "sync_async_collector"], [382, 2, 1, "", "sync_sync_collector"], [383, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 387, 388, 389, 390, 392, 393, 394, 397, 404, 405, 406, 410, 411], "instal": [0, 6, 7, 410], "get": [0, 396, 397, 398, 399, 400, 401], "start": [0, 396, 397, 398, 399, 400, 401], "tutori": [0, 394, 404, 405], "basic": [0, 408], "intermedi": [0, 8], "advanc": 0, "refer": [0, 385], "knowledg": [0, 386], "base": [0, 2, 7, 386], "indic": 0, "tabl": 0, "collector": [1, 392, 393, 394, 395, 399, 401, 404, 405, 410], "packag": [1, 2, 3, 387, 388, 389, 390], "batch": [1, 392, 406, 408], "size": [1, 392, 408], "replai": [1, 2, 392, 393, 394, 395, 399, 401, 404, 405, 408, 410], "buffer": [1, 2, 392, 393, 394, 395, 399, 401, 404, 405, 408, 410], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 392, 393, 394, 399, 401, 404, 405, 410], "distribut": [1, 387], "helper": [1, 3], "function": [1, 4, 388, 393, 394, 398, 404, 405, 410], "compos": [2, 164], "support": 2, "type": 2, "choos": 2, "storag": [2, 101, 392, 399, 408], "sampl": [2, 408], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 393, 408], "trajectori": [2, 408], "checkpoint": [2, 389], "episod": [2, 4], "format": 2, "ted": [2, 396], "The": [2, 392], "rational": 2, "behind": 2, "structur": [2, 408], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 387, 408, 410], "special": [2, 397, 410], "case": 2, "footnot": 2, "multi": [2, 3, 387, 388, 403, 404, 405], "agent": [2, 3, 4, 387, 388, 404, 405], "present": 2, "polici": [2, 4, 392, 394, 395, 397, 401, 403, 404, 405, 406], "rnn": 2, "transform": [2, 3, 200, 392, 394, 396, 404, 405, 406, 408, 410, 411], "step": [2, 392, 394, 396, 399, 404, 405, 408, 411], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 62], "numer": 2, "subclass": 2, "categor": [2, 29], "reinforc": [2, 388, 394, 404, 405], "learn": [2, 4, 394, 404, 405], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 387, 388, 389, 404], "env": [3, 406, 410, 411], "vector": [3, 410], "custom": [3, 11, 406, 408], "nativ": 3, "environ": [3, 4, 6, 7, 392, 393, 394, 395, 396, 401, 403, 404, 405, 406, 410, 411], "auto": 3, "reset": [3, 406, 411], "dynam": [3, 4, 408], "spec": [3, 406, 411], "clone": [3, 7], "mask": 3, "action": [3, 4, 395, 406], "record": [3, 365, 389, 392, 400], "video": [3, 11, 400], "domain": [3, 387], "specif": [3, 387, 403], "librari": [3, 410], "thing": [4, 392, 406], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 396, 398, 410], "gener": [4, 11, 387], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 392, 401, 406], "algorithm": [4, 387], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 392, 393, 398, 401], "return": [4, 388], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 410], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 403], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 392, 393, 394], "standard": 4, "explor": [4, 387, 392, 393, 397], "valu": [4, 387, 388, 392, 394, 395, 397], "loss": [4, 392, 393, 394, 395, 401, 404, 405], "earli": 4, "train": [4, 8, 388, 392, 394, 395, 398, 401, 404, 405, 406], "roughli": 4, "uniformli": 4, "random": [4, 388, 404, 405], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 393], "increas": 4, "an": [4, 394, 395, 396, 406], "can": 4, "low": 4, "forward": [4, 392], "model": [4, 387, 392, 393, 395, 398, 407, 410], "also": 4, "us": [4, 6, 9, 395, 407, 408, 410], "offlin": 4, "observ": [4, 392], "space": 4, "effect": [4, 406], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 411], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 392], "render": [7, 11, 401, 404, 405, 411], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 392], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 406], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 393, 408], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": 25, "binarydiscretetensorspec": 26, "bound": 27, "boundedtensorspec": 28, "composit": 30, "compositespec": 31, "constantklcontrol": 32, "discretetensorspec": 33, "flat2t": 34, "h5combin": 35, "h5split": 36, "lazystackedcompositespec": 37, "lazystackedtensorspec": 38, "multicategor": 39, "multidiscretetensorspec": 40, "multionehot": 41, "multionehotdiscretetensorspec": 42, "multistep": 43, "nested2t": 44, "nontensor": 45, "nontensorspec": 46, "onehotdiscretetensorspec": 47, "pairwisedataset": 48, "prioritizedreplaybuff": 49, "promptdata": 50, "prompttensordicttoken": 51, "replaybuff": 52, "rewarddata": 53, "rolloutfrommodel": 54, "stack": 55, "stackedcomposit": 56, "ted2flat": 57, "ted2nest": 58, "tensordictprioritizedreplaybuff": 59, "tensordictreplaybuff": 60, "tensordicttoken": 61, "tokenizeddatasetload": 63, "unbound": 64, "unboundedcontinu": 65, "unboundedcontinuoustensorspec": 66, "unboundeddiscret": 67, "unboundeddiscretetensorspec": 68, "check_no_exclusive_kei": 69, "consolidate_spec": 70, "contains_lazy_spec": 71, "create_infinite_iter": 72, "ataridqnexperiencereplai": 73, "basedatasetexperiencereplai": 74, "d4rlexperiencereplai": 75, "gendgrlexperiencereplai": 76, "minariexperiencereplai": 77, "openmlexperiencereplai": 78, "openxexperiencereplai": 79, "robosetexperiencereplai": 80, "vd4rlexperiencereplai": 81, "get_dataload": 82, "flatstoragecheckpoint": 83, "h5storagecheckpoint": 84, "immutabledatasetwrit": 85, "lazymemmapstorag": 86, "lazytensorstorag": 87, "liststorag": 88, "liststoragecheckpoint": 89, "nestedstoragecheckpoint": 90, "prioritizedsampl": 91, "prioritizedslicesampl": 92, "randomsampl": 93, "replaybufferensembl": 94, "roundrobinwrit": 95, "sampler": 96, "samplerensembl": 97, "samplerwithoutreplac": 98, "slicesampl": 99, "slicesamplerwithoutreplac": 100, "storagecheckpointerbas": 102, "storageensembl": 103, "storageensemblecheckpoint": 104, "tensordictmaxvaluewrit": 105, "tensordictroundrobinwrit": 106, "tensorstorag": 107, "tensorstoragecheckpoint": 108, "writer": 109, "writerensembl": 110, "braxenv": 111, "braxwrapp": 112, "dmcontrolenv": 113, "dmcontrolwrapp": 114, "envbas": [115, 406], "envcreat": 116, "envmetadata": 117, "gymenv": 118, "gymlikeenv": 119, "gymwrapp": 120, "habitatenv": 121, "isaacgymenv": 122, "isaacgymwrapp": 123, "jumanjienv": 124, "jumanjiwrapp": 125, "mogymenv": 126, "mogymwrapp": 127, "marlgroupmaptyp": 128, "meltingpotenv": 129, "meltingpotwrapp": 130, "modelbasedenvbas": 131, "multithreadedenv": 132, "multithreadedenvwrapp": 133, "openmlenv": 134, "openspielenv": 135, "openspielwrapp": 136, "parallelenv": 137, "pendulumenv": 138, "pettingzooenv": 139, "pettingzoowrapp": 140, "robohiveenv": 141, "smacv2env": 142, "smacv2wrapp": 143, "serialenv": 144, "tictactoeenv": 145, "vmasenv": 146, "vmaswrapp": 147, "check_marl_group": 148, "gym_backend": 149, "dreamerdecod": 150, "dreamerenv": 151, "set_gym_backend": 152, "actiondiscret": 153, "actionmask": 154, "autoresetenv": 155, "autoresettransform": 156, "batchsizetransform": 157, "binarizereward": 158, "burnintransform": 159, "catfram": [160, 408], "cattensor": 161, "centercrop": 162, "cliptransform": 163, "crop": 165, "dtypecasttransform": 166, "devicecasttransform": 167, "discreteactionproject": 168, "doubletofloat": 169, "endoflifetransform": 170, "excludetransform": 171, "finitetensordictcheck": 172, "flattenobserv": 173, "frameskiptransform": 174, "grayscal": 175, "inittrack": 176, "klrewardtransform": 177, "noopresetenv": 178, "observationnorm": 179, "observationtransform": 180, "permutetransform": 181, "pinmemorytransform": 182, "r3mtransform": 183, "randomcroptensordict": 184, "removeemptyspec": 185, "renametransform": 186, "resiz": 187, "reward2gotransform": 188, "rewardclip": 189, "rewardsc": 190, "rewardsum": 191, "selecttransform": 192, "signtransform": 193, "squeezetransform": 194, "stepcount": 195, "targetreturn": 196, "tensordictprim": 197, "timemaxpool": 198, "totensorimag": 199, "transformedenv": 201, "unsqueezetransform": 202, "vc1transform": 203, "viprewardtransform": 204, "viptransform": 205, "vecgymenvtransform": 206, "vecnorm": [207, 411], "gsdenois": 208, "multisteptransform": 209, "randompolici": 210, "check_env_spec": 211, "exploration_mod": 212, "exploration_typ": 213, "get_available_librari": 214, "make_composite_from_td": 215, "set_exploration_mod": 216, "set_exploration_typ": 217, "step_mdp": 218, "terminated_or_trunc": 219, "batchrenorm1d": 220, "cemplann": 221, "conv3dnet": 222, "convnet": 223, "dtactor": 224, "ddpgcnnactor": 225, "ddpgcnnqnet": 226, "ddpgmlpactor": 227, "ddpgmlpqnet": 228, "decisiontransform": 229, "delta": 230, "distributionaldqnnet": 231, "distributionalqvaluehook": 232, "dreameractor": 233, "duelingcnndqnet": 234, "gru": 235, "grucel": 236, "grumodul": 237, "independentnorm": 238, "lstm": [239, 395], "lstmcell": 240, "lstmmodul": 241, "mlp": [242, 395], "mpcplannerbas": 243, "mppiplann": 244, "maskedcategor": 245, "maskedonehotcategor": 246, "multiagentconvnet": 247, "multiagentmlp": 248, "multiagentnetbas": 249, "noisylazylinear": 250, "noisylinear": 251, "normalparamwrapp": 252, "obsdecod": 253, "obsencod": 254, "onehotcategor": 255, "onlinedtactor": 256, "qmixer": [257, 388], "qvaluehook": 258, "rssmposterior": 259, "rssmprior": 260, "squeeze2dlay": 261, "squeezelay": 262, "tanhdelta": 263, "tanhnorm": 264, "truncatednorm": 265, "vdnmixer": 266, "vmapmodul": 267, "reset_nois": 268, "actor": [269, 387, 392, 397], "actorcriticoper": 270, "actorcriticwrapp": 271, "actorvalueoper": 272, "additivegaussianmodul": 273, "additivegaussianwrapp": 274, "decisiontransformerinferencewrapp": 275, "distributionalqvalueactor": 276, "distributionalqvaluemodul": 277, "egreedymodul": 278, "egreedywrapp": 279, "lmheadactorvalueoper": 280, "multistepactorwrapp": 281, "ornsteinuhlenbeckprocessmodul": 282, "ornsteinuhlenbeckprocesswrapp": 283, "probabilisticactor": 284, "qvalueactor": 285, "qvaluemodul": 286, "safemodul": [287, 387], "safeprobabilisticmodul": 288, "safeprobabilistictensordictsequenti": 289, "safesequenti": 290, "tanhmodul": 291, "valueoper": 292, "worldmodelwrapp": 293, "biased_softplu": 294, "get_primers_from_modul": 295, "inv_softplu": 296, "map": [297, 404], "a2closs": 298, "cqlloss": 299, "clipppoloss": 300, "crossqloss": 301, "ddpgloss": 302, "dqnloss": 303, "dtloss": 304, "discretecqlloss": 305, "discreteiqlloss": 306, "discretesacloss": 307, "distributionaldqnloss": 308, "dreameractorloss": 309, "dreamermodelloss": 310, "dreamervalueloss": 311, "gailloss": 312, "hardupd": 313, "iqlloss": 314, "klpenppoloss": 315, "lossmodul": [316, 392, 398], "onlinedtloss": 317, "ppoloss": 318, "redqloss": 319, "reinforceloss": 320, "sacloss": 321, "softupd": 322, "td3bcloss": 323, "td3loss": 324, "valueestim": 325, "default_value_kwarg": 326, "distance_loss": 327, "hold_out_net": 328, "hold_out_param": 329, "qmixerloss": 330, "next_state_valu": 331, "gae": 332, "td0estim": 333, "td1estim": 334, "tdlambdaestim": 335, "valueestimatorbas": 336, "generalized_advantage_estim": 337, "reward2go": 338, "td0_advantage_estim": 339, "td0_return_estim": 340, "td1_advantage_estim": 341, "td1_return_estim": 342, "td_lambda_advantage_estim": 343, "td_lambda_return_estim": 344, "vec_generalized_advantage_estim": 345, "vec_td1_advantage_estim": 346, "vec_td1_return_estim": 347, "vec_td_lambda_advantage_estim": 348, "vec_td_lambda_return_estim": 349, "pixelrendertransform": 350, "tensordictrecord": 351, "videorecord": 352, "logger": [353, 389, 400, 401], "csvlogger": 354, "generate_exp_nam": 355, "get_logg": 356, "mlflowlogg": 357, "tensorboardlogg": 358, "wandblogg": 359, "batchsubsampl": 360, "clearcudacach": 361, "countframeslog": 362, "logreward": 363, "optimizerhook": 364, "replaybuffertrain": 366, "rewardnorm": 367, "selectkei": 368, "trainer": [369, 389, 393], "trainerhookbas": 370, "updateweight": 371, "correct_for_frame_skip": 372, "get_stats_random_rollout": 373, "make_collector_offpolici": 374, "make_collector_onpolici": 375, "make_dqn_loss": 376, "make_replay_buff": 377, "make_target_updat": 378, "make_train": 379, "parallel_env_constructor": 380, "sync_async_collector": 381, "sync_sync_collector": 382, "transformed_env_constructor": 383, "readm": [384, 402], "tuto": [384, 402], "api": 385, "contribut": [386, 410], "content": 386, "modul": [387, 392, 395, 397, 401, 410], "tensordictmodul": [387, 397, 410], "wrapper": [387, 397], "probabilist": [387, 397], "q": [387, 393, 395, 397], "oper": 387, "join": 387, "hook": [387, 389, 393], "regular": 387, "planner": 387, "object": [388, 392, 398, 410], "torch": 388, "vmap": 388, "dqn": [388, 393, 395], "ddpg": [388, 392, 404], "sac": 388, "redq": 388, "crossq": 388, "iql": 388, "cql": 388, "gail": 388, "dt": 388, "td3": 388, "bc": 388, "ppo": [388, 394, 405], "a2c": 388, "dreamer": 388, "builder": 389, "_util": 390, "comput": [391, 393, 406, 409], "time": [391, 392, 409], "code": [392, 406], "overview": [392, 395], "setup": [392, 395], "__init__": 392, "method": 392, "estim": 392, "put": 392, "togeth": [392, 406], "call": 392, "parallel": [392, 403, 411], "execut": [392, 403, 406], "stat": 392, "build": [392, 393, 401, 408], "evalu": 392, "construct": 392, "target": [392, 393, 398], "network": [392, 393, 394, 395, 397, 404, 405], "updat": 392, "experi": [392, 406], "result": [392, 394, 404, 405], "conclus": [392, 393, 394, 395, 404, 405, 406, 408], "next": [392, 394, 396, 399, 404, 405, 408], "A": [393, 408], "deep": 393, "collect": [393, 394, 399], "paramet": [393, 394, 398], "hyperparamet": [393, 394, 404, 405], "regist": 393, "possibl": 393, "improv": 393, "defin": [394, 404, 405], "loop": [394, 395, 401, 404, 405, 406], "recurr": 395, "convolut": 395, "select": 395, "further": [395, 398], "read": 395, "creat": 396, "run": [396, 411], "rollout": [396, 403, 404, 405, 406, 411], "s": [397, 398], "output": 398, "consider": 398, "log": 400, "own": 401, "first": 401, "design": 401, "divers": 403, "competit": 404, "group": 404, "critic": [404, 405], "pendulum": 406, "write": 406, "_step": 406, "simul": 406, "_reset": 406, "metadata": 406, "_spec": 406, "shape": 406, "seed": [406, 411], "wrap": 406, "class": [406, 410], "test": 406, "our": 406, "simpl": 406, "pretrain": 407, "vanilla": 408, "integr": 408, "tensorclass": 408, "other": 408, "tensor": 408, "pytre": 408, "iter": 408, "over": 408, "fix": 408, "priorit": 408, "save": 408, "raw": 408, "imag": 408, "more": 408, "complex": 408, "introduct": 410, "config": 410, "sequenc": 410, "program": 410, "ensembl": 410, "meta": 410, "state": 410, "frame_skip": 411, "deepmind": 411, "control": 411, "devic": 411, "close": 411, "access": 411, "attribut": 411, "kwarg": 411}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})