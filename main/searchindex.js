Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 81, 82, 84, 86, 88, 90, 92, 93, 94, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 118, 119, 121, 122, 123, 124, 125, 128, 131, 136, 137, 139, 140, 142, 143, 145, 148, 150, 151, 154, 160, 161, 165, 166, 167, 168, 170, 178, 179, 180, 181, 182, 183, 185, 188, 189, 191, 193, 203, 204, 206, 207, 208, 209, 216, 218, 220, 222, 223, 224, 228, 229, 230, 241, 242, 244, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 266, 267, 271, 275, 276, 277, 278, 280, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 325, 327, 330, 334, 339, 340, 344, 345, 348, 355, 356, 357, 358, 361, 362, 363, 367, 368, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386], "open": [0, 5, 7, 11, 40, 42, 45, 66, 368, 379, 380, 385], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386], "reinforc": [0, 3, 9, 63, 116, 117, 143, 206, 207, 208, 209, 213, 256, 261, 276, 277, 281, 282, 283, 285, 289, 290, 296, 297, 298, 360, 366, 368, 371, 372, 377, 381, 384, 385], "learn": [0, 3, 7, 8, 9, 17, 36, 63, 64, 65, 67, 68, 102, 116, 117, 121, 122, 128, 143, 206, 207, 208, 209, 213, 225, 231, 256, 261, 276, 277, 281, 282, 283, 285, 289, 290, 295, 296, 297, 298, 360, 362, 363, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 383, 384, 385, 386], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 60, 118, 178, 231, 249, 262, 270, 276, 278, 291, 292, 294, 296, 335, 359, 361, 362, 363, 364, 367, 368, 369, 374, 375, 377, 379, 380, 382, 383, 386], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 43, 51, 100, 101, 110, 119, 196, 360, 361, 362, 365, 367, 368, 369, 371, 372, 374, 379, 380, 381, 386], "pytorch": [0, 1, 2, 3, 64, 129, 130, 181, 193, 216, 220, 230, 231, 344, 359, 361, 364, 367, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 383, 385, 386], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 36, 51, 63, 102, 106, 110, 115, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 135, 189, 191, 220, 334, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 85, 86, 87, 92, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 115, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 135, 136, 137, 139, 140, 142, 143, 146, 147, 148, 150, 151, 152, 160, 161, 165, 166, 170, 173, 177, 178, 179, 182, 183, 185, 187, 189, 191, 193, 201, 202, 203, 204, 206, 216, 218, 219, 220, 222, 224, 225, 228, 229, 231, 232, 245, 247, 249, 253, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 325, 327, 334, 340, 356, 357, 358, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "directli": [0, 3, 4, 8, 22, 60, 81, 98, 99, 102, 105, 106, 118, 122, 128, 161, 170, 188, 292, 358, 362, 368, 369, 371, 379, 380, 381, 383], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 81, 84, 85, 86, 87, 88, 90, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 197, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 235, 236, 237, 238, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 290, 291, 292, 294, 295, 296, 297, 299, 301, 305, 306, 307, 308, 309, 310, 313, 325, 326, 327, 335, 341, 344, 347, 348, 352, 354, 355, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386], "pypi": [0, 2, 385], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 81, 86, 102, 106, 109, 112, 116, 117, 119, 122, 123, 124, 125, 128, 129, 130, 147, 165, 179, 181, 182, 183, 185, 187, 189, 190, 191, 203, 204, 216, 219, 220, 223, 229, 230, 237, 245, 246, 250, 252, 262, 265, 266, 327, 334, 341, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 383, 386], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 92, 102, 105, 106, 107, 109, 110, 112, 116, 117, 122, 123, 124, 125, 128, 129, 130, 181, 185, 190, 191, 213, 220, 223, 230, 232, 249, 253, 255, 256, 265, 270, 276, 285, 292, 294, 307, 312, 320, 334, 339, 361, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 386], "about": [0, 3, 5, 7, 9, 17, 18, 19, 51, 64, 67, 68, 102, 122, 128, 363, 367, 368, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385, 386], "instruct": [0, 6, 7, 10, 21, 62, 150, 152, 367, 368, 369, 370, 379, 380, 383], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 122, 128, 250, 251, 252, 362, 367, 371, 373, 374, 376, 378, 380], "section": [0, 2, 3, 4, 23, 216, 220, 368, 371, 376, 379, 380], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 44, 69, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 203, 204, 216, 219, 220, 223, 229, 245, 262, 265, 341, 367, 368, 369, 370, 371, 379, 381], "pip": [0, 10, 65, 371, 372, 373, 374, 375, 376, 380, 385, 386], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 50, 53, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 75, 79, 80, 81, 84, 86, 87, 95, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 118, 119, 120, 122, 123, 124, 125, 128, 136, 140, 142, 143, 144, 145, 146, 148, 151, 155, 160, 161, 163, 165, 166, 169, 170, 173, 174, 178, 179, 180, 183, 185, 187, 188, 189, 191, 201, 203, 204, 210, 213, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 247, 249, 253, 256, 257, 258, 260, 261, 262, 263, 264, 269, 276, 277, 278, 279, 280, 282, 284, 285, 286, 290, 291, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 331, 335, 341, 348, 354, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "python": [0, 3, 5, 6, 7, 10, 13, 14, 20, 120, 135, 216, 217, 218, 220, 221, 222, 226, 227, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 40, 42, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 86, 87, 92, 94, 102, 105, 106, 107, 112, 122, 128, 139, 140, 143, 144, 155, 161, 165, 166, 181, 183, 185, 204, 216, 218, 220, 222, 223, 228, 229, 230, 234, 249, 254, 255, 256, 262, 263, 265, 266, 278, 287, 291, 292, 294, 326, 327, 343, 362, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "low": [0, 3, 25, 79, 102, 106, 122, 128, 136, 146, 150, 197, 243, 244, 245, 256, 262, 269, 367, 368, 369, 379, 380, 381, 385, 386], "high": [0, 3, 9, 25, 40, 42, 45, 49, 79, 102, 106, 122, 128, 136, 146, 150, 160, 197, 243, 244, 245, 256, 262, 269, 307, 312, 320, 367, 368, 369, 379, 380, 381, 383, 385, 386], "level": [0, 2, 3, 4, 21, 26, 32, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 105, 107, 143, 177, 291, 367, 368, 374, 385], "abstract": [0, 3, 8, 24, 25, 26, 28, 32, 33, 34, 38, 52, 54, 55, 60, 61, 65, 96, 102, 162, 224, 311, 336, 345, 364, 369, 381, 385], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 32, 33, 36, 39, 40, 41, 42, 44, 45, 46, 49, 50, 53, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 81, 84, 85, 87, 88, 90, 92, 94, 102, 103, 105, 106, 107, 115, 116, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 136, 138, 139, 140, 142, 143, 146, 147, 148, 150, 151, 152, 154, 155, 159, 160, 163, 165, 170, 173, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 197, 200, 201, 202, 209, 211, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 231, 235, 237, 240, 254, 255, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 302, 305, 306, 307, 308, 309, 310, 311, 325, 334, 341, 354, 358, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 53, 142, 150, 247, 292, 362, 385], "effici": [0, 1, 2, 4, 8, 216, 231, 362, 367, 368, 369, 370, 373, 374, 376, 378, 379, 380, 382, 383, 385], "modular": [0, 60, 268, 383, 385], "document": [0, 2, 5, 7, 17, 18, 20, 36, 66, 102, 106, 122, 128, 183, 191, 359, 368, 370, 371, 374, 377, 385], "properli": [0, 1, 102, 106, 122, 128, 200, 369, 375, 379, 380, 381, 385], "test": [0, 3, 5, 98, 99, 111, 112, 116, 117, 185, 193, 218, 222, 340, 354, 369, 370, 385], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 78, 79, 81, 84, 86, 87, 88, 92, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 119, 120, 122, 123, 124, 125, 128, 129, 130, 136, 139, 140, 142, 143, 147, 148, 151, 152, 153, 161, 163, 165, 170, 172, 173, 174, 177, 178, 179, 182, 183, 185, 187, 188, 189, 191, 193, 200, 201, 202, 206, 207, 208, 209, 210, 213, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 231, 232, 238, 239, 240, 249, 250, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 313, 325, 327, 329, 332, 333, 334, 335, 339, 354, 356, 357, 360, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386], "code": [0, 3, 5, 7, 8, 13, 14, 66, 102, 106, 122, 128, 165, 183, 185, 216, 217, 218, 220, 221, 222, 262, 268, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386], "aim": [0, 2, 3, 7, 32, 33, 165, 185, 187, 223, 347, 361, 362, 363, 367, 368, 385], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 40, 42, 45, 65, 68, 69, 73, 74, 88, 90, 94, 95, 97, 98, 99, 105, 107, 111, 119, 121, 122, 123, 125, 140, 143, 152, 161, 179, 180, 182, 196, 213, 247, 255, 256, 262, 265, 268, 285, 307, 308, 309, 310, 332, 360, 362, 364, 369, 370, 371, 372, 380, 381, 383, 385], "research": [0, 7, 9, 116, 117, 385], "most": [0, 1, 2, 3, 7, 8, 13, 14, 36, 86, 87, 102, 106, 122, 128, 150, 188, 193, 367, 369, 371, 372, 373, 374, 375, 376, 381, 385, 386], "written": [0, 1, 2, 3, 11, 29, 40, 42, 45, 47, 53, 62, 63, 66, 71, 73, 79, 81, 86, 87, 100, 101, 102, 105, 106, 107, 108, 122, 125, 128, 136, 143, 152, 159, 173, 177, 180, 188, 191, 200, 201, 249, 261, 262, 265, 266, 270, 276, 278, 291, 294, 296, 306, 325, 326, 327, 362, 363, 364, 367, 370, 372, 378, 381, 385], "highli": [0, 2, 371, 385, 386], "wai": [0, 1, 2, 3, 4, 60, 64, 81, 92, 110, 165, 168, 187, 188, 220, 294, 307, 308, 309, 310, 362, 367, 368, 369, 371, 373, 374, 378, 379, 380, 381, 382, 383, 385, 386], "easili": [0, 1, 2, 3, 7, 102, 106, 122, 128, 363, 367, 368, 369, 371, 372, 373, 376, 379, 380, 385, 386], "swap": [0, 1, 3, 105, 188, 369, 382, 385], "compon": [0, 1, 2, 3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 81, 88, 90, 94, 213, 238, 255, 256, 264, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 339, 344, 367, 368, 369, 370, 372, 373, 376, 378, 379, 380, 381, 382, 385], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 43, 44, 46, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 81, 90, 95, 102, 103, 106, 116, 117, 122, 123, 124, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 200, 205, 206, 210, 213, 214, 218, 222, 236, 237, 238, 246, 254, 259, 260, 269, 272, 273, 275, 281, 293, 325, 327, 341, 358, 360, 366, 368, 370, 372, 374, 375, 376, 377, 382, 384], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 41, 43, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 97, 102, 103, 106, 110, 115, 116, 117, 122, 123, 124, 128, 129, 130, 148, 151, 179, 183, 189, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 246, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 291, 327, 367, 368, 370, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "write": [0, 2, 3, 8, 22, 36, 40, 41, 42, 43, 44, 45, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 86, 90, 97, 102, 106, 146, 163, 164, 173, 175, 177, 181, 201, 249, 265, 266, 268, 270, 279, 280, 282, 283, 284, 290, 295, 297, 299, 306, 311, 327, 362, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 85, 102, 106, 119, 122, 126, 127, 128, 140, 173, 182, 189, 191, 200, 201, 216, 218, 222, 261, 265, 266, 271, 276, 277, 278, 280, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 334, 367, 369, 370, 371, 373, 379, 380, 381, 385, 386], "ones": [0, 2, 22, 26, 36, 41, 44, 49, 50, 102, 106, 122, 123, 124, 128, 144, 147, 148, 149, 151, 161, 165, 170, 179, 182, 183, 185, 187, 191, 192, 226, 227, 247, 265, 276, 277, 279, 290, 294, 295, 297, 299, 313, 367, 369, 379, 380, 381, 383, 385, 386], "littl": [0, 1, 3, 51, 102, 106, 122, 128, 183, 276, 278, 291, 294, 296, 369, 370, 374, 383, 385, 386], "effort": [0, 3, 381, 383, 385], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 81, 84, 85, 86, 87, 88, 90, 92, 94, 95, 97, 98, 99, 102, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 161, 165, 166, 167, 168, 170, 173, 174, 175, 177, 179, 180, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 305, 307, 308, 309, 310, 311, 325, 326, 334, 335, 337, 340, 341, 344, 346, 347, 348, 354, 358, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "repo": [0, 6, 62, 143, 180, 185, 361, 380, 385], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 86, 87, 100, 101, 105, 107, 108, 125, 253, 258, 261, 280, 283, 290, 305, 373, 385], "align": [0, 216, 220, 385], "exist": [0, 2, 3, 4, 11, 17, 20, 36, 40, 42, 45, 53, 102, 106, 122, 128, 144, 149, 183, 191, 297, 348, 358, 379, 380, 385, 386], "ecosystem": [0, 374, 385], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 49, 50, 52, 54, 55, 60, 66, 73, 74, 81, 84, 86, 92, 94, 102, 103, 106, 110, 116, 117, 122, 128, 129, 130, 140, 143, 177, 178, 179, 180, 183, 191, 216, 218, 220, 222, 228, 244, 253, 256, 258, 260, 261, 266, 291, 327, 367, 368, 369, 370, 371, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "dataset": [0, 31, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 79, 81, 84, 86, 87, 121, 189, 327, 360, 367, 368, 371, 382, 383, 385, 386], "pillar": [0, 385], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 139, 140, 142, 143, 144, 148, 149, 150, 151, 156, 160, 161, 165, 166, 167, 170, 173, 177, 178, 179, 180, 182, 183, 185, 188, 189, 193, 202, 218, 222, 224, 225, 253, 260, 261, 282, 286, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 335, 337, 340, 347, 348, 349, 350, 354, 355, 356, 357, 358, 360, 361, 362, 366, 372, 373, 374, 375, 377, 382, 383, 384], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 40, 42, 45, 46, 53, 102, 106, 118, 122, 128, 148, 165, 179, 185, 187, 190, 191, 203, 204, 205, 210, 212, 218, 222, 223, 224, 225, 229, 236, 237, 246, 250, 251, 252, 259, 265, 271, 273, 276, 277, 278, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 305, 344, 349, 350, 351, 360, 361, 364, 366, 369, 371, 374, 377, 379, 380, 381, 383, 384, 386], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 118, 119, 120, 121, 122, 123, 124, 125, 128, 137, 140, 142, 143, 148, 149, 151, 153, 159, 161, 167, 170, 177, 183, 188, 191, 192, 193, 197, 201, 202, 213, 218, 222, 225, 228, 229, 238, 247, 249, 255, 257, 258, 260, 261, 262, 263, 265, 268, 269, 270, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 325, 327, 334, 335, 341, 344, 346, 349, 354, 356, 357, 358, 360, 362, 363, 364, 366, 370, 371, 372, 373, 377, 381, 382, 383, 384, 386], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 40, 42, 44, 45, 46, 99, 102, 106, 111, 112, 117, 122, 123, 124, 128, 131, 143, 165, 170, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 210, 216, 220, 272, 273, 274, 275, 292, 354, 360, 365, 367, 369, 372, 373, 374, 380, 381, 383, 385, 386], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 39, 40, 42, 45, 73, 74, 78, 79, 92, 94, 102, 103, 106, 122, 128, 129, 140, 142, 144, 147, 155, 161, 165, 173, 179, 182, 183, 185, 187, 191, 193, 216, 218, 219, 220, 222, 225, 229, 232, 238, 244, 245, 254, 256, 260, 262, 264, 265, 266, 297, 306, 307, 308, 309, 310, 325, 335, 347, 357, 362, 368, 369, 372, 373, 375, 379, 380, 382, 383, 385, 386], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 36, 39, 40, 42, 45, 92, 102, 103, 106, 122, 128, 129, 140, 142, 144, 147, 155, 161, 165, 173, 179, 182, 183, 185, 187, 191, 193, 216, 218, 219, 220, 221, 222, 225, 229, 244, 245, 254, 262, 265, 266, 297, 306, 316, 317, 318, 319, 321, 322, 323, 324, 325, 357, 362, 368, 369, 372, 375, 379, 380, 381, 382, 383, 385, 386], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 29, 36, 46, 47, 60, 66, 140, 143, 170, 177, 191, 192, 261, 341, 344, 346, 349, 350, 354, 356, 357, 360, 364, 383, 386], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 78, 79, 81, 82, 84, 86, 87, 88, 93, 96, 97, 102, 106, 118, 122, 128, 136, 147, 148, 151, 165, 179, 182, 183, 185, 187, 188, 189, 191, 200, 201, 202, 203, 204, 216, 217, 220, 221, 223, 225, 229, 249, 255, 256, 262, 264, 265, 270, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 313, 331, 335, 347, 354, 355, 356, 357, 358, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386], "etc": [0, 2, 3, 7, 8, 11, 36, 54, 55, 66, 102, 106, 122, 128, 159, 183, 191, 223, 229, 244, 368, 369, 374, 383, 385, 386], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 27, 28, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 88, 102, 106, 122, 123, 124, 128, 136, 139, 143, 148, 151, 152, 159, 160, 161, 177, 182, 183, 189, 191, 193, 201, 203, 204, 223, 228, 229, 247, 260, 267, 268, 276, 278, 291, 294, 296, 302, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 335, 344, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "few": [0, 2, 8, 106, 327, 335, 369, 370, 372, 379, 380, 383, 385, 386], "depend": [0, 1, 2, 3, 4, 7, 8, 40, 42, 105, 107, 108, 125, 129, 130, 148, 151, 270, 294, 362, 367, 369, 370, 379, 380, 381, 385, 386], "possibl": [0, 2, 3, 4, 22, 28, 33, 36, 39, 63, 66, 68, 79, 86, 92, 102, 106, 122, 128, 136, 147, 165, 179, 182, 183, 185, 187, 191, 203, 204, 216, 217, 220, 221, 265, 325, 340, 344, 362, 367, 369, 370, 372, 374, 375, 379, 380, 381, 383, 385, 386], "standard": [0, 3, 161, 172, 189, 202, 214, 225, 230, 231, 236, 253, 254, 299, 307, 308, 309, 310, 367, 368, 371, 372, 380, 383, 385], "numpi": [0, 3, 11, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 102, 106, 122, 128, 181, 344, 381, 383, 385, 386], "common": [0, 2, 3, 4, 106, 111, 137, 250, 251, 252, 259, 276, 277, 278, 283, 284, 290, 291, 294, 295, 296, 297, 299, 354, 361, 362, 364, 367, 369, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 385, 386], "openai": [0, 7, 23, 105, 107, 125, 369, 381, 385, 386], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 102, 103, 105, 106, 107, 108, 110, 116, 117, 119, 120, 122, 125, 128, 129, 130, 132, 135, 139, 143, 146, 152, 158, 159, 161, 163, 168, 170, 173, 179, 182, 188, 189, 191, 354, 361, 367, 368, 369, 370, 371, 375, 376, 381, 382, 383, 385], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 78, 79, 81, 86, 87, 94, 100, 101, 102, 105, 106, 107, 108, 110, 112, 119, 120, 122, 123, 124, 125, 128, 136, 139, 143, 144, 146, 147, 148, 150, 151, 155, 161, 165, 166, 170, 177, 178, 179, 180, 182, 183, 185, 187, 189, 191, 220, 222, 228, 229, 249, 254, 255, 262, 263, 265, 266, 267, 268, 276, 278, 279, 283, 284, 290, 291, 292, 294, 295, 296, 297, 298, 299, 307, 308, 309, 310, 311, 327, 334, 348, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 80, 81, 84, 85, 86, 87, 90, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 165, 166, 168, 169, 170, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 247, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 313, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 332, 334, 335, 337, 338, 339, 340, 341, 342, 344, 348, 349, 350, 351, 353, 354, 356, 357, 358, 362, 370, 371, 374, 379, 380, 381, 383, 385], "On": [0, 3, 7, 17, 18, 19, 20, 26, 63, 217, 221, 362, 368, 379, 380], "end": [0, 2, 3, 13, 14, 16, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 79, 81, 85, 86, 87, 102, 106, 122, 128, 152, 163, 177, 178, 183, 191, 203, 204, 216, 217, 220, 221, 224, 260, 297, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "come": [0, 1, 2, 3, 8, 36, 92, 102, 106, 115, 122, 128, 148, 151, 249, 250, 251, 252, 262, 270, 276, 278, 291, 294, 296, 327, 367, 368, 369, 370, 373, 374, 375, 376, 379, 380, 383, 385, 386], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 32, 33, 36, 39, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 85, 88, 94, 102, 104, 106, 107, 116, 117, 118, 122, 123, 124, 128, 129, 130, 135, 137, 139, 140, 143, 144, 147, 148, 151, 158, 159, 165, 170, 177, 178, 179, 180, 182, 183, 185, 187, 189, 191, 193, 198, 199, 201, 216, 218, 220, 222, 224, 228, 229, 244, 253, 254, 265, 284, 292, 294, 297, 311, 335, 340, 341, 350, 358, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "re": [0, 2, 3, 8, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 102, 106, 122, 128, 191, 222, 226, 227, 262, 266, 334, 364, 367, 369, 370, 371, 373, 378, 379, 381, 385, 386], "usabl": [0, 364, 370, 385], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 43, 46, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 81, 88, 90, 94, 102, 103, 106, 122, 128, 135, 139, 140, 148, 151, 183, 189, 191, 193, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 239, 240, 242, 245, 247, 250, 251, 252, 253, 254, 256, 257, 260, 261, 262, 264, 265, 266, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 294, 295, 296, 297, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 354, 360, 362, 367, 370, 371, 372, 375, 378, 381, 383, 386], "cost": [0, 2, 28, 66, 276, 278, 291, 294, 296, 367, 368, 379, 380, 381, 383], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 79, 81, 82, 84, 86, 87, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 132, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 194, 195, 196, 200, 201, 202, 205, 206, 207, 208, 209, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 235, 236, 237, 239, 240, 243, 244, 245, 246, 249, 250, 251, 252, 254, 260, 262, 264, 265, 266, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 302, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 331, 344, 347, 349, 354, 355, 356, 357, 358, 360, 362, 364, 367, 368, 369, 370, 372, 373, 375, 378, 379, 380, 381, 382, 383, 385, 386], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 41, 42, 45, 51, 53, 60, 63, 67, 68, 78, 79, 86, 102, 103, 106, 110, 115, 119, 122, 123, 124, 128, 142, 148, 151, 179, 181, 189, 191, 228, 229, 256, 261, 264, 360, 364, 367, 368, 370, 371, 379, 380, 381, 382, 383, 385, 386], "good": [0, 1, 4, 9, 122, 367, 369, 370, 372, 380, 385, 386], "runtim": [0, 2, 3, 36, 102, 106, 122, 128, 191, 381], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 46, 52, 53, 54, 55, 100, 101, 102, 105, 106, 107, 108, 122, 125, 128, 131, 148, 151, 160, 183, 191, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 278, 287, 294, 297, 340, 344, 363, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 381, 386], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 36, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 79, 81, 86, 87, 90, 97, 98, 99, 102, 105, 106, 107, 111, 112, 115, 122, 123, 124, 125, 126, 127, 128, 129, 177, 179, 189, 191, 218, 222, 250, 251, 252, 261, 284, 292, 327, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 386], "read": [0, 2, 3, 7, 22, 26, 29, 32, 41, 43, 44, 46, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 81, 88, 90, 94, 102, 105, 106, 107, 122, 128, 137, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 163, 164, 166, 167, 168, 170, 173, 174, 175, 177, 178, 179, 180, 182, 185, 186, 188, 189, 191, 201, 235, 249, 250, 251, 252, 255, 260, 262, 265, 266, 268, 270, 271, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 327, 340, 344, 362, 367, 368, 369, 371, 372, 378, 379, 380, 381, 382, 386], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 364, 367, 371, 374, 378, 382, 386], "beyond": [0, 102, 106, 122, 128], "api": [0, 2, 3, 5, 123, 124, 125, 165, 187, 189, 363, 364, 371, 372, 373, 374, 375, 379, 380, 381, 383, 385, 386], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 52, 54, 55, 56, 58, 70, 71, 77, 86, 102, 103, 105, 106, 107, 118, 122, 128, 131, 143, 144, 154, 159, 166, 179, 181, 183, 191, 193, 218, 222, 249, 255, 256, 262, 263, 264, 265, 266, 327, 359, 362, 363, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386], "paper": [0, 63, 66, 98, 99, 100, 101, 108, 111, 112, 116, 117, 119, 120, 125, 129, 130, 165, 185, 187, 216, 237, 246, 282, 289, 367, 369, 379, 380], "releas": [0, 4, 7, 10, 36, 102, 106, 122, 128, 183, 191, 297, 385], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 346, 354, 364, 367, 385], "so": [0, 2, 3, 4, 6, 7, 10, 36, 40, 42, 45, 46, 102, 106, 116, 117, 122, 128, 179, 189, 191, 267, 268, 367, 369, 370, 373, 376, 379, 380, 381, 386], "make": [0, 2, 3, 4, 7, 36, 40, 41, 42, 44, 45, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 84, 88, 90, 97, 102, 106, 107, 110, 112, 114, 120, 122, 128, 136, 153, 161, 165, 166, 170, 177, 185, 191, 193, 216, 217, 220, 221, 228, 229, 230, 255, 266, 276, 278, 291, 294, 296, 307, 308, 309, 310, 325, 341, 350, 358, 362, 363, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "sure": [0, 3, 4, 7, 65, 88, 106, 110, 170, 255, 358, 362, 367, 369, 370, 373, 379, 380, 381, 383, 385, 386], "alwai": [0, 2, 3, 13, 14, 19, 26, 32, 36, 40, 42, 45, 60, 69, 70, 71, 77, 102, 106, 122, 128, 159, 160, 189, 191, 285, 292, 362, 363, 368, 369, 370, 379, 380, 381, 383], "enjoi": [0, 2, 3, 66, 374], "latest": [0, 2, 3, 10, 119, 123, 124, 341, 369, 379, 380, 381, 385], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 39, 53, 64, 79, 86, 87, 102, 106, 115, 122, 123, 124, 126, 127, 128, 140, 143, 155, 159, 163, 179, 180, 184, 189, 193, 203, 204, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 230, 231, 266, 273, 276, 278, 291, 294, 296, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 358, 362, 367, 368, 369, 370, 372, 373, 374, 376, 381, 383, 386], "recent": [0, 7, 11, 188, 386], "version": [0, 1, 2, 3, 6, 11, 36, 40, 42, 46, 63, 68, 86, 102, 105, 106, 107, 108, 119, 120, 122, 123, 125, 128, 129, 130, 188, 189, 191, 200, 252, 276, 278, 291, 292, 294, 296, 297, 307, 310, 361, 362, 367, 369, 370, 371, 373, 376, 379, 380, 381, 382, 386], "although": [0, 1, 3, 8, 102, 106, 122, 128, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 364, 367, 368, 374, 383], "core": [0, 3, 8, 364, 370, 372, 385], "guarante": [0, 2, 36, 40, 42, 45, 73, 74, 75, 88, 90, 94, 102, 106, 122, 128, 189, 191, 374, 385], "backward": [0, 8, 36, 98, 99, 102, 106, 122, 128, 189, 191, 216, 217, 220, 221, 276, 277, 279, 283, 284, 290, 294, 295, 296, 297, 299, 367, 369, 370, 373, 374, 376, 379, 380, 381], "compat": [0, 2, 3, 7, 11, 13, 14, 15, 36, 62, 81, 84, 86, 87, 88, 92, 102, 106, 108, 121, 122, 128, 143, 177, 185, 189, 191, 216, 217, 218, 220, 221, 222, 263, 276, 277, 279, 280, 282, 283, 284, 290, 292, 294, 295, 296, 297, 299, 302, 367, 370, 383, 385], "2": [0, 1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 23, 26, 29, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 86, 87, 92, 94, 98, 99, 102, 103, 106, 111, 112, 115, 121, 122, 123, 124, 126, 127, 128, 129, 130, 139, 140, 142, 144, 147, 148, 149, 150, 151, 159, 161, 163, 165, 167, 170, 173, 177, 178, 179, 182, 183, 185, 187, 189, 191, 197, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 232, 236, 244, 247, 254, 255, 256, 257, 258, 260, 261, 265, 269, 270, 276, 277, 278, 279, 283, 284, 290, 291, 294, 295, 296, 297, 299, 306, 307, 308, 309, 310, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 335, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 385, 386], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 86, 87, 94, 98, 99, 102, 105, 106, 108, 109, 111, 112, 118, 119, 120, 122, 125, 126, 127, 128, 136, 137, 139, 141, 143, 144, 146, 147, 149, 150, 159, 160, 161, 165, 170, 173, 175, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 191, 202, 203, 204, 206, 207, 208, 209, 210, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 235, 239, 240, 243, 244, 245, 247, 249, 253, 254, 256, 257, 258, 261, 264, 265, 268, 269, 272, 273, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 305, 306, 307, 308, 309, 310, 313, 314, 315, 335, 342, 354, 358, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 41, 44, 49, 50, 62, 64, 65, 66, 67, 68, 106, 122, 128, 165, 182, 187, 281, 292, 363, 364, 367, 368, 369, 370, 372, 374, 383, 386], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 81, 84, 86, 87, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 139, 140, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 197, 200, 201, 202, 212, 213, 218, 222, 224, 225, 237, 238, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 325, 326, 335, 339, 340, 341, 343, 344, 360, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 386], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 26, 32, 159, 167, 250, 251, 252, 265, 283, 290, 360, 367, 379, 381, 385], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 36, 40, 41, 42, 44, 45, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 81, 89, 95, 102, 106, 122, 128, 135, 165, 187, 191, 225, 329, 334, 344, 364, 368, 376, 379], "root": [0, 2, 3, 26, 32, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 81, 122, 143, 180, 200, 219, 244, 245, 370, 371, 379, 380, 381, 382, 383, 386], "http": [0, 2, 5, 6, 7, 10, 13, 14, 17, 18, 19, 23, 41, 51, 60, 63, 64, 65, 66, 67, 68, 78, 79, 98, 99, 100, 101, 108, 110, 111, 112, 116, 117, 119, 120, 121, 123, 124, 125, 129, 130, 143, 165, 185, 205, 206, 207, 208, 209, 210, 213, 214, 215, 220, 225, 226, 227, 231, 233, 234, 237, 239, 240, 246, 256, 261, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 307, 312, 320, 359, 364, 377, 382, 385], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 60, 63, 64, 66, 98, 99, 100, 101, 105, 108, 111, 112, 116, 117, 119, 120, 123, 124, 125, 129, 130, 140, 185, 364, 372, 376, 379, 380, 385], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 63, 66, 67, 98, 99, 100, 101, 108, 110, 111, 112, 116, 117, 119, 120, 123, 124, 125, 129, 130, 364, 382, 385], "setup": [0, 7, 98, 99, 110, 111, 112], "py": [0, 3, 23, 105, 107, 135, 237, 246, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386], "develop": [0, 3, 4, 7, 110, 367, 385], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 88, 92, 93, 94, 95, 96, 102, 104, 106, 108, 109, 122, 125, 128, 133, 136, 138, 139, 140, 142, 146, 150, 156, 159, 165, 166, 168, 175, 179, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 200, 202, 203, 204, 213, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 229, 231, 232, 247, 253, 254, 255, 256, 257, 260, 262, 263, 266, 268, 269, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 305, 307, 308, 309, 310, 311, 313, 325, 328, 329, 332, 334, 337, 344, 346, 354, 363, 366, 367, 369, 372, 373, 374, 377, 381, 384, 386], "seri": [0, 2, 7, 8, 39, 72, 82, 92, 93, 96, 97, 128, 160, 182, 327, 362, 363, 367, 368, 369, 375, 376, 379, 380, 383, 386], "quick": [0, 60], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 28, 46, 62, 68, 102, 106, 122, 128, 139, 142, 180, 182, 191, 294, 361, 362, 363, 367, 368, 369, 370, 372, 376, 379, 380, 381, 383, 386], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 79, 81, 84, 85, 86, 87, 92, 94, 100, 101, 102, 103, 105, 106, 107, 108, 110, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 132, 136, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 153, 155, 159, 160, 161, 165, 166, 169, 170, 173, 174, 178, 179, 180, 181, 182, 183, 185, 187, 189, 191, 200, 201, 203, 204, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 247, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 290, 291, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 321, 322, 323, 324, 325, 331, 334, 339, 341, 344, 346, 348, 354, 358, 361, 367, 368, 369, 370, 371, 373, 376, 378, 379, 380, 381, 383, 385, 386], "hurri": [0, 371], "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 43, 52, 54, 55, 62, 85, 86, 87, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 136, 139, 142, 155, 161, 166, 178, 180, 181, 203, 204, 216, 218, 220, 222, 223, 226, 227, 233, 241, 244, 247, 253, 254, 257, 260, 266, 307, 309, 310, 368, 369, 370, 371, 372, 379, 380, 381, 382, 383, 385, 386], "item": [0, 2, 8, 13, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 44, 52, 53, 54, 55, 69, 79, 85, 92, 136, 154, 226, 227, 279, 280, 282, 335, 363, 364, 367, 369, 370, 373, 374, 379, 380, 381, 383], "navig": [0, 380], "previou": [0, 3, 4, 10, 36, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 179, 191, 201, 216, 220, 240, 254, 369, 370, 371, 372, 376, 381, 386], "whenev": [0, 1, 2, 3, 22, 36, 41, 44, 49, 50, 60, 66, 78, 79, 86, 87, 100, 101, 105, 107, 108, 116, 117, 125, 129, 130, 135, 158, 183, 188, 292, 307, 308, 309, 310, 325, 346, 362, 383], "want": [0, 2, 3, 6, 7, 8, 87, 161, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 362, 367, 368, 369, 370, 371, 373, 374, 375, 379, 380, 381, 382, 383, 385, 386], "ted": [0, 29, 37, 47, 48, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 360, 366, 377, 384], "s": [0, 1, 2, 3, 6, 7, 8, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 86, 87, 92, 98, 99, 102, 106, 110, 111, 112, 116, 117, 119, 122, 123, 124, 128, 129, 130, 143, 147, 165, 177, 179, 181, 182, 183, 185, 187, 189, 191, 193, 203, 204, 218, 222, 227, 228, 229, 231, 237, 246, 250, 252, 253, 256, 257, 260, 262, 265, 266, 269, 277, 283, 290, 292, 297, 307, 308, 309, 310, 311, 325, 362, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 46, 92, 98, 99, 102, 106, 115, 118, 121, 122, 128, 135, 142, 147, 150, 152, 159, 165, 166, 178, 179, 182, 183, 185, 187, 189, 190, 191, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 303, 305, 307, 308, 309, 310, 311, 325, 344, 351, 354, 360, 363, 364, 366, 368, 369, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386], "optim": [0, 1, 2, 8, 36, 46, 98, 99, 102, 106, 122, 128, 183, 191, 202, 225, 230, 231, 244, 277, 292, 293, 294, 297, 339, 344, 354, 363, 364, 366, 369, 370, 371, 372, 374, 377, 379, 380, 381, 384], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 102, 106, 122, 125, 128, 140, 143, 161, 165, 187, 193, 260, 261, 277, 279, 282, 284, 295, 297, 299, 327, 335, 341, 344, 346, 347, 348, 354, 364, 366, 367, 370, 371, 372, 373, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386], "storag": [0, 1, 8, 29, 36, 40, 41, 42, 44, 45, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 87, 89, 90, 91, 92, 94, 95, 102, 104, 106, 122, 128, 142, 143, 148, 151, 170, 191, 360, 364, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 382, 384], "log": [0, 3, 4, 8, 46, 211, 212, 213, 226, 227, 235, 244, 245, 255, 256, 262, 266, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 334, 337, 338, 340, 344, 354, 362, 363, 364, 366, 367, 368, 369, 371, 372, 376, 377, 379, 380, 381, 384, 385], "your": [0, 2, 3, 7, 8, 10, 13, 14, 17, 36, 102, 106, 110, 115, 122, 123, 124, 128, 189, 191, 358, 361, 362, 363, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 383, 384, 385], "own": [0, 1, 3, 13, 14, 16, 21, 36, 102, 106, 122, 123, 124, 128, 191, 327, 366, 368, 369, 371, 377, 379, 380, 381, 384], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 40, 42, 45, 46, 53, 60, 63, 69, 102, 106, 116, 117, 122, 123, 124, 128, 148, 156, 165, 178, 183, 185, 187, 191, 193, 206, 208, 218, 222, 253, 257, 258, 261, 276, 277, 278, 279, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 307, 344, 346, 354, 360, 364, 366, 368, 371, 374, 375, 377, 382, 383, 384, 386], "loop": [0, 8, 40, 42, 45, 102, 106, 122, 128, 200, 253, 257, 258, 261, 294, 344, 364, 366, 367, 368, 371, 373, 374, 375, 377, 378, 383, 384], "ppo": [0, 4, 8, 262, 266, 278, 291, 294, 360, 362, 366, 367, 368, 372, 373, 377, 379, 384], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 92, 100, 101, 102, 103, 105, 106, 107, 119, 122, 128, 143, 146, 147, 153, 158, 159, 161, 168, 170, 175, 177, 179, 180, 182, 183, 189, 191, 218, 222, 354, 362, 366, 368, 369, 371, 372, 373, 377, 384, 385, 386], "introduct": [0, 363, 366, 371, 377, 379, 380, 384, 386], "multi": [0, 1, 7, 9, 32, 33, 36, 41, 44, 49, 50, 70, 71, 77, 102, 106, 116, 117, 122, 126, 127, 128, 183, 191, 216, 218, 220, 222, 223, 228, 229, 260, 305, 307, 308, 309, 310, 360, 366, 367, 368, 369, 370, 371, 372, 377, 381, 384, 385], "agent": [0, 9, 32, 33, 115, 116, 117, 123, 124, 126, 127, 129, 130, 131, 177, 178, 226, 227, 228, 229, 231, 237, 246, 305, 360, 366, 371, 377, 381, 384], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 36, 46, 47, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 218, 222, 224, 225, 260, 265, 292, 325, 326, 327, 348, 349, 350, 354, 356, 357, 358, 360, 362, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 86, 87, 92, 94, 98, 99, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 158, 159, 161, 165, 166, 167, 168, 170, 173, 174, 177, 178, 179, 180, 181, 182, 183, 185, 187, 189, 191, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 235, 236, 237, 238, 244, 245, 246, 247, 249, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 320, 325, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 354, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 386], "pretrain": [0, 366, 377, 384], "recurr": [0, 2, 142, 216, 217, 218, 220, 222, 240, 366, 368, 372, 377, 383, 384], "dqn": [0, 2, 60, 136, 152, 213, 255, 256, 276, 277, 279, 280, 282, 284, 285, 286, 289, 290, 292, 294, 295, 296, 297, 298, 299, 305, 351, 360, 362, 366, 372, 373, 376, 377, 384], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 29, 36, 47, 98, 99, 102, 106, 118, 122, 128, 150, 159, 178, 192, 198, 199, 213, 218, 222, 228, 229, 231, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 269, 276, 277, 278, 279, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 299, 340, 346, 349, 350, 354, 356, 357, 362, 363, 364, 366, 368, 371, 373, 374, 377, 382, 383, 384, 385, 386], "replai": [0, 8, 15, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 85, 87, 88, 90, 92, 93, 97, 142, 143, 150, 166, 170, 179, 191, 279, 280, 282, 283, 284, 290, 295, 297, 299, 341, 344, 352, 354, 360, 364, 366, 377, 381, 382, 384], "buffer": [0, 3, 4, 8, 13, 14, 15, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 97, 102, 106, 118, 122, 128, 142, 143, 147, 150, 165, 166, 170, 179, 182, 183, 185, 187, 191, 265, 268, 279, 280, 282, 283, 284, 290, 295, 297, 299, 341, 344, 352, 354, 360, 364, 366, 375, 377, 381, 382, 384, 386], "competit": [0, 3, 116, 117, 366, 377, 380, 384], "ddpg": [0, 206, 207, 208, 209, 279, 289, 298, 360, 362, 366, 368, 373, 377, 380, 384], "task": [0, 2, 3, 9, 32, 33, 46, 53, 63, 66, 100, 101, 102, 106, 109, 116, 117, 122, 123, 124, 125, 128, 129, 130, 165, 177, 183, 185, 187, 283, 290, 366, 367, 368, 369, 370, 371, 372, 377, 379, 380, 381, 384, 385, 386], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 49, 50, 106, 122, 128, 129, 179, 210, 218, 222, 254, 327, 344, 360, 363, 364, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 383, 384], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 36, 40, 42, 45, 52, 53, 73, 74, 75, 81, 84, 88, 90, 94, 97, 102, 106, 111, 122, 128, 136, 148, 151, 152, 161, 165, 182, 183, 185, 189, 191, 192, 225, 237, 246, 249, 250, 262, 265, 266, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 348, 349, 350, 353, 354, 358, 360, 362, 364, 366, 368, 369, 370, 374, 376, 377, 379, 380, 381, 383, 384, 386], "loss": [0, 3, 8, 42, 152, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 339, 344, 351, 354, 363, 364, 366, 371, 373, 374, 375, 377, 381, 383, 384, 385], "trainer": [0, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 366, 367, 377, 384], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 24, 26, 28, 29, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 86, 87, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 161, 163, 165, 167, 168, 169, 170, 173, 175, 177, 178, 179, 180, 181, 182, 183, 185, 187, 189, 191, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 228, 229, 232, 235, 236, 237, 238, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 300, 301, 305, 307, 308, 309, 310, 313, 325, 327, 335, 336, 337, 338, 339, 341, 342, 343, 346, 354, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386], "packag": [0, 6, 7, 10, 135, 360, 361, 386], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 28, 36, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 81, 85, 86, 87, 92, 94, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 118, 119, 121, 122, 128, 129, 130, 140, 143, 147, 155, 161, 163, 166, 170, 179, 182, 183, 184, 188, 189, 191, 201, 211, 216, 217, 218, 220, 221, 222, 226, 227, 228, 229, 230, 235, 237, 243, 247, 260, 261, 265, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 335, 338, 341, 342, 343, 344, 346, 356, 357, 358, 360, 364, 368, 369, 370, 371, 374, 376, 378, 379, 380, 382, 385, 386], "size": [0, 2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 80, 81, 85, 86, 87, 88, 94, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 140, 142, 144, 147, 148, 151, 152, 153, 155, 163, 165, 167, 168, 170, 174, 176, 177, 179, 181, 182, 183, 184, 187, 189, 191, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 235, 236, 237, 238, 239, 240, 243, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 270, 273, 276, 277, 279, 280, 282, 283, 284, 290, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 327, 335, 341, 360, 362, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 385, 386], "interoper": [0, 13, 14, 360], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 30, 36, 40, 41, 42, 44, 45, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 102, 105, 106, 116, 117, 122, 128, 129, 130, 136, 143, 144, 165, 170, 183, 187, 191, 203, 204, 216, 217, 218, 220, 221, 222, 223, 229, 264, 268, 278, 280, 282, 284, 285, 291, 294, 295, 299, 307, 308, 309, 310, 316, 317, 318, 319, 321, 322, 323, 324, 325, 358, 360, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383], "node": [0, 2, 17, 18, 19, 20, 21, 26, 32, 40, 42, 45, 68, 360, 374], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 123, 124, 159, 161, 202, 211, 212, 213, 214, 219, 225, 226, 227, 232, 235, 236, 239, 240, 243, 244, 245, 253, 254, 255, 256, 262, 266, 267, 276, 277, 278, 283, 284, 285, 290, 291, 294, 295, 296, 297, 299, 360, 364, 368, 369, 372, 374, 379, 380, 381, 385, 386], "helper": [0, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 367, 368, 370, 379, 381], "compos": [0, 3, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 82, 83, 92, 93, 102, 106, 122, 128, 143, 169, 182, 183, 189, 191, 259, 260, 287, 297, 327, 360, 367, 368, 369, 370, 374, 378, 380, 381, 383, 385, 386], "episod": [0, 3, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 86, 87, 102, 106, 122, 128, 139, 170, 173, 178, 200, 202, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 360, 368, 371, 376, 379, 380, 383], "format": [0, 3, 29, 35, 36, 37, 39, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 84, 92, 102, 106, 122, 123, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 327, 360, 367, 368, 371, 373, 375, 386], "tensorspec": [0, 3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 54, 55, 56, 57, 58, 102, 106, 118, 122, 128, 129, 130, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 161, 163, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 201, 240, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 277, 280, 283, 284, 295, 297, 299, 305, 360, 381], "human": [0, 23, 64, 360, 381], "feedback": [0, 360, 376, 385], "rlhf": [0, 46, 53, 69, 159, 360, 362], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 103, 106, 122, 128, 137, 140, 148, 151, 160, 167, 168, 182, 183, 189, 191, 193, 202, 224, 225, 340, 348, 349, 350, 354, 356, 357, 358, 360, 371, 386], "gymlikeenv": [0, 105, 107, 360], "envmetadata": [0, 360], "vector": [0, 1, 8, 24, 28, 39, 98, 99, 107, 111, 112, 115, 123, 124, 125, 129, 130, 150, 188, 206, 208, 216, 217, 220, 221, 223, 307, 310, 320, 321, 322, 323, 324, 360, 367, 368, 370, 378, 379, 380, 381, 382, 386], "auto": [0, 74, 94, 138, 139, 188, 261, 277, 284, 293, 295, 297, 299, 360, 363, 379, 380], "reset": [0, 1, 2, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 87, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 138, 139, 140, 143, 152, 155, 158, 160, 165, 173, 177, 178, 179, 180, 182, 183, 185, 188, 189, 191, 193, 201, 216, 218, 222, 248, 260, 261, 326, 360, 367, 368, 369, 370, 371, 374, 378, 379, 380, 385], "dynam": [0, 7, 13, 14, 15, 63, 66, 68, 102, 122, 128, 191, 283, 290, 360, 369, 371, 381], "spec": [0, 1, 2, 13, 14, 15, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 56, 57, 58, 62, 98, 99, 102, 104, 105, 106, 107, 108, 111, 112, 118, 119, 120, 122, 125, 128, 129, 130, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 163, 165, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 197, 200, 201, 213, 238, 240, 249, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 269, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 360, 362, 367, 368, 369, 370, 371, 372, 376, 378, 379, 380, 385], "mask": [0, 1, 4, 22, 28, 34, 35, 39, 123, 124, 137, 166, 191, 213, 226, 227, 238, 254, 255, 256, 257, 258, 263, 264, 341, 360, 368, 370, 386], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 28, 29, 39, 46, 47, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 140, 146, 148, 150, 151, 152, 153, 156, 159, 160, 163, 167, 168, 170, 174, 177, 183, 188, 192, 197, 200, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 218, 222, 223, 224, 225, 226, 227, 228, 236, 237, 238, 240, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 269, 270, 276, 277, 279, 280, 282, 283, 284, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 354, 358, 360, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 385, 386], "record": [0, 2, 36, 102, 106, 122, 128, 133, 136, 159, 191, 294, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 354, 360, 368, 369, 372, 376, 379], "domain": [0, 2, 8, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 102, 106, 122, 128, 150, 179, 197, 249, 255, 256, 262, 263, 264, 265, 266, 267, 268, 273, 360, 369, 370, 372, 373, 379, 380, 381, 385, 386], "actor": [0, 3, 4, 20, 159, 192, 202, 205, 206, 208, 213, 214, 225, 236, 238, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 305, 360, 363, 368, 370, 371, 373, 376, 379, 382, 385], "explor": [0, 1, 190, 231, 249, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 276, 292, 340, 349, 350, 354, 360, 369, 370, 371, 373, 374, 376, 379, 380, 381], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 79, 81, 86, 87, 92, 102, 106, 115, 122, 128, 135, 136, 139, 141, 143, 144, 146, 148, 150, 151, 152, 160, 161, 165, 166, 169, 170, 171, 173, 175, 179, 180, 182, 183, 187, 189, 191, 197, 201, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 237, 238, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 335, 337, 338, 339, 340, 341, 344, 354, 360, 364, 368, 371, 373, 374, 375, 378, 379, 380, 381, 383, 385, 386], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 41, 44, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 83, 85, 102, 103, 106, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 140, 147, 148, 149, 153, 159, 161, 167, 168, 173, 174, 177, 179, 182, 188, 191, 201, 211, 218, 222, 226, 227, 235, 249, 262, 266, 270, 271, 295, 301, 307, 312, 320, 330, 344, 360, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386], "hook": [0, 2, 29, 36, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 95, 102, 106, 122, 128, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 238, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 360], "planner": [0, 202, 225, 360], "sac": [0, 284, 295, 297, 360], "redq": [0, 295, 360], "iql": [0, 283, 290, 360, 367, 379, 380], "cql": [0, 277, 282, 360], "dt": [0, 261, 360, 381], "td3": [0, 299, 360], "a2c": [0, 276, 360], "dreamer": [0, 133, 134, 214, 286, 287, 288, 360, 362], "checkpoint": [0, 44, 71, 76, 88, 89, 91, 95, 360, 382, 383], "builder": [0, 360, 368, 386], "logger": [0, 3, 325, 327, 329, 330, 331, 332, 333, 334, 338, 344, 354, 358, 360, 368, 379], "_util": [0, 3, 11, 360, 376], "implement_for": [0, 3, 360], "thing": [0, 3, 7, 8, 102, 106, 122, 128, 361, 369, 370, 371, 372, 373, 374, 375, 379, 380, 383, 386], "consid": [0, 1, 2, 3, 8, 19, 26, 32, 36, 40, 41, 42, 44, 45, 49, 50, 73, 74, 94, 102, 106, 122, 128, 150, 189, 191, 211, 228, 243, 307, 309, 310, 361, 367, 371, 372, 373, 381, 383], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 85, 86, 87, 88, 90, 94, 102, 103, 105, 106, 107, 115, 116, 117, 119, 121, 122, 123, 124, 128, 129, 130, 137, 139, 142, 143, 147, 148, 150, 151, 159, 160, 161, 165, 166, 173, 179, 182, 183, 185, 187, 188, 189, 191, 198, 199, 200, 202, 213, 216, 217, 220, 221, 223, 224, 225, 226, 227, 230, 238, 244, 260, 262, 265, 266, 268, 272, 278, 280, 285, 291, 292, 294, 297, 300, 305, 306, 307, 308, 309, 310, 325, 326, 327, 341, 358, 361, 362, 364, 367, 368, 369, 370, 372, 374, 375, 379, 380, 381, 382, 383, 386], "debug": [0, 6, 8, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 361, 386], "work": [0, 1, 2, 3, 4, 8, 11, 36, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 84, 86, 87, 90, 97, 102, 105, 106, 107, 110, 122, 125, 128, 144, 159, 165, 185, 188, 189, 191, 200, 203, 204, 223, 256, 264, 269, 278, 291, 294, 344, 361, 362, 367, 368, 369, 370, 371, 374, 378, 379, 380, 381, 382, 383, 385, 386], "habitat": [0, 3, 108, 361, 382], "lab": [0, 3, 100, 101, 108, 361], "mujoco": [0, 6, 8, 125, 361, 367, 369, 370], "error": [0, 1, 3, 7, 10, 11, 33, 36, 40, 42, 45, 102, 106, 122, 128, 131, 166, 191, 193, 361, 367, 369, 379, 380, 386], "solut": [0, 2, 3, 6, 7, 9, 20, 361, 362, 364, 385], "resourc": [0, 1, 20, 108, 361, 367, 369, 379, 380], "issu": [0, 3, 4, 5, 8, 60, 64, 71, 73, 74, 94, 105, 110, 143, 166, 180, 200, 249, 255, 256, 262, 263, 264, 265, 266, 361, 385], "index": [0, 3, 7, 8, 10, 15, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 78, 79, 81, 82, 84, 90, 92, 93, 94, 96, 97, 102, 106, 116, 117, 122, 128, 129, 130, 138, 143, 147, 150, 183, 200, 226, 227, 360, 371, 378, 379, 380, 383, 385], "search": [0, 121, 201, 368], "page": [0, 7, 23, 334, 373], "somewhat": [1, 2, 363, 372, 386], "equival": [1, 3, 24, 26, 28, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 98, 99, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 140, 149, 152, 183, 191, 213, 220, 223, 238, 255, 256, 263, 264, 294, 341, 374, 385, 386], "dataload": [1, 69, 85, 87, 368, 374, 383], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 66, 102, 106, 122, 128, 143, 154, 170, 178, 179, 180, 183, 191, 216, 218, 220, 222, 235, 253, 257, 258, 261, 297, 327, 362, 368, 371, 379, 383, 385, 386], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 78, 79, 81, 86, 87, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 156, 159, 161, 163, 165, 166, 167, 168, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 187, 189, 191, 192, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 287, 290, 291, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 321, 322, 324, 325, 327, 335, 340, 341, 342, 354, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 102, 105, 106, 107, 115, 116, 117, 122, 123, 124, 128, 129, 130, 139, 142, 154, 159, 165, 174, 182, 183, 187, 191, 222, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 341, 344, 362, 363, 364, 367, 368, 369, 370, 373, 378, 379, 380, 381, 382, 383, 385, 386], "over": [1, 2, 3, 4, 8, 13, 14, 36, 44, 50, 51, 53, 59, 60, 66, 79, 85, 86, 102, 106, 116, 117, 122, 128, 136, 150, 161, 173, 180, 191, 200, 244, 247, 268, 285, 287, 292, 313, 325, 347, 364, 367, 368, 369, 371, 372, 373, 374, 379, 380, 381, 386], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 38, 40, 41, 42, 45, 49, 50, 66, 75, 102, 106, 122, 123, 124, 128, 140, 141, 147, 155, 165, 179, 182, 183, 184, 185, 187, 191, 200, 216, 218, 220, 222, 228, 265, 266, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 362, 367, 370, 379, 380, 381, 383, 386], "static": [1, 11, 46, 53, 79, 86, 87, 108, 189, 290, 371, 381, 383], "like": [1, 2, 3, 4, 7, 20, 26, 32, 36, 41, 44, 49, 50, 53, 75, 81, 87, 102, 106, 108, 115, 122, 123, 124, 128, 152, 179, 181, 191, 193, 216, 220, 229, 259, 276, 278, 291, 294, 295, 296, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 386], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 69, 92, 95, 102, 105, 106, 107, 108, 122, 125, 128, 142, 148, 150, 151, 160, 168, 179, 183, 191, 198, 199, 218, 222, 257, 261, 278, 291, 294, 297, 327, 341, 346, 356, 357, 358, 362, 367, 368, 369, 370, 374, 379, 380, 381, 383], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 42, 44, 45, 63, 64, 67, 68, 69, 102, 106, 118, 122, 128, 138, 143, 147, 155, 165, 173, 179, 182, 183, 184, 185, 187, 191, 223, 247, 265, 266, 267, 297, 327, 364, 369, 371, 375, 383, 386], "two": [1, 2, 3, 4, 8, 10, 36, 40, 41, 42, 44, 45, 46, 49, 50, 66, 81, 85, 87, 102, 106, 122, 128, 140, 161, 165, 187, 191, 209, 216, 218, 220, 222, 241, 244, 266, 291, 302, 340, 344, 363, 367, 368, 369, 370, 371, 372, 374, 375, 378, 379, 380, 381, 383, 385, 386], "main": [1, 2, 3, 5, 13, 14, 19, 21, 68, 103, 266, 344, 362, 363, 367, 368, 378, 386], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 78, 79, 81, 84, 85, 86, 87, 90, 92, 94, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 119, 120, 122, 123, 125, 128, 129, 130, 139, 140, 144, 146, 147, 165, 173, 174, 177, 179, 181, 182, 183, 185, 187, 191, 200, 203, 204, 216, 218, 220, 222, 223, 226, 227, 228, 229, 230, 247, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 293, 294, 295, 296, 297, 299, 301, 305, 307, 308, 309, 310, 311, 315, 325, 326, 327, 334, 337, 347, 354, 355, 358, 367, 368, 369, 370, 371, 372, 374, 379, 380, 381, 383, 386], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 81, 84, 85, 86, 87, 88, 90, 100, 101, 102, 105, 106, 107, 108, 116, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 141, 142, 146, 148, 151, 159, 161, 163, 165, 173, 175, 181, 183, 185, 187, 189, 191, 200, 203, 204, 206, 212, 215, 218, 222, 223, 226, 227, 233, 238, 256, 260, 263, 264, 266, 268, 269, 270, 292, 297, 304, 307, 310, 325, 326, 340, 341, 356, 357, 362, 367, 369, 371, 372, 373, 374, 378, 379, 381, 382, 383, 385, 386], "constructor": [1, 2, 15, 17, 18, 19, 20, 44, 53, 66, 78, 92, 102, 106, 119, 122, 128, 129, 139, 182, 203, 204, 223, 262, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 355, 358, 362, 367, 368, 369, 371, 374, 379, 380, 383], "iter": [1, 2, 3, 11, 14, 15, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 81, 85, 98, 99, 102, 106, 111, 112, 122, 128, 153, 161, 174, 191, 203, 204, 223, 228, 229, 242, 249, 255, 262, 263, 265, 267, 268, 270, 292, 304, 340, 343, 344, 363, 364, 367, 369, 370, 374, 376, 379, 380, 381], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 43, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 102, 103, 106, 107, 108, 110, 111, 112, 118, 119, 122, 125, 128, 137, 183, 191, 216, 218, 220, 222, 257, 260, 267, 268, 348, 358, 362, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 383, 384, 386], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 46, 60, 70, 71, 77, 79, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 118, 119, 120, 122, 123, 124, 125, 128, 137, 142, 155, 158, 161, 177, 178, 179, 180, 183, 188, 191, 200, 201, 202, 214, 216, 218, 220, 222, 224, 225, 253, 257, 258, 260, 261, 262, 266, 276, 286, 294, 306, 307, 308, 309, 310, 313, 314, 315, 326, 329, 335, 340, 344, 364, 368, 370, 372, 373, 375, 376, 378, 381, 382, 385], "queri": [1, 3, 13, 36, 40, 42, 45, 102, 106, 122, 128, 165, 182, 185, 189, 191, 268, 367, 373, 381, 385], "defin": [1, 2, 11, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 66, 102, 106, 122, 128, 166, 178, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 273, 280, 282, 292, 307, 308, 309, 310, 311, 326, 355, 367, 368, 370, 373, 376, 381, 383, 386], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 28, 36, 39, 40, 41, 42, 44, 45, 46, 49, 50, 53, 60, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 81, 84, 86, 87, 94, 98, 99, 102, 105, 106, 107, 111, 112, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 136, 142, 143, 150, 156, 160, 161, 172, 177, 180, 183, 189, 191, 202, 203, 204, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 232, 233, 234, 237, 239, 240, 243, 244, 245, 246, 249, 253, 254, 257, 258, 260, 261, 262, 265, 266, 270, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 293, 294, 295, 296, 297, 299, 335, 337, 340, 344, 346, 347, 348, 356, 357, 358, 362, 367, 368, 369, 370, 371, 372, 374, 376, 379, 380, 381, 382, 383, 386], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 36, 53, 65, 85, 92, 102, 106, 122, 128, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 191, 193, 216, 218, 222, 223, 230, 231, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 308, 309, 310, 341, 367, 369, 370, 374, 375, 379, 380, 381, 383, 386], "deliv": [1, 2, 3, 15, 66, 367, 368, 371, 374, 385], "stack": [1, 2, 3, 7, 8, 13, 14, 15, 17, 19, 20, 32, 33, 40, 41, 42, 44, 45, 49, 50, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 81, 102, 105, 106, 107, 115, 122, 123, 124, 128, 189, 216, 218, 220, 221, 222, 260, 267, 268, 326, 335, 362, 368, 371, 378, 379, 381, 385], "user": [1, 2, 3, 5, 8, 36, 60, 62, 66, 68, 79, 87, 102, 106, 122, 128, 144, 178, 183, 191, 193, 210, 294, 297, 327, 355, 363, 364, 367, 368, 371, 373, 374, 381, 385, 386], "reach": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 46, 85, 102, 106, 116, 117, 122, 128, 129, 130, 177, 253, 257, 258, 261, 367, 369, 376, 379, 380, 385, 386], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 79, 81, 86, 87, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 139, 140, 143, 148, 149, 151, 152, 153, 160, 161, 163, 167, 168, 170, 172, 174, 177, 179, 180, 182, 183, 189, 191, 200, 201, 202, 216, 218, 222, 225, 260, 276, 277, 278, 279, 280, 282, 283, 284, 290, 291, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "state": [1, 2, 3, 4, 13, 14, 15, 16, 29, 36, 41, 44, 46, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 81, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 118, 122, 123, 124, 125, 126, 127, 128, 139, 142, 143, 144, 146, 152, 161, 168, 177, 178, 182, 183, 189, 191, 193, 200, 201, 202, 205, 210, 214, 216, 217, 218, 220, 221, 222, 223, 225, 233, 236, 237, 239, 240, 246, 250, 260, 265, 271, 276, 278, 282, 291, 292, 294, 295, 296, 297, 305, 306, 307, 308, 309, 310, 311, 358, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 379, 380, 381, 386], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 26, 29, 36, 40, 42, 45, 46, 60, 81, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 119, 120, 122, 125, 128, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 163, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 200, 216, 218, 222, 230, 253, 255, 257, 263, 287, 297, 368, 369, 370, 371, 372, 374, 376, 379, 380, 381, 382, 383, 386], "predefin": [1, 368, 370, 374, 383], "becaus": [1, 3, 4, 7, 40, 42, 45, 46, 60, 102, 106, 122, 128, 152, 159, 177, 182, 188, 191, 209, 229, 249, 255, 256, 260, 262, 263, 264, 265, 266, 367, 368, 370, 372, 373, 374, 378, 379, 380, 381, 383, 386], "potenti": [1, 2, 381, 383], "comput": [1, 3, 4, 8, 13, 15, 20, 28, 36, 46, 98, 99, 102, 106, 111, 112, 122, 128, 161, 175, 183, 186, 191, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 232, 233, 234, 235, 236, 239, 240, 242, 244, 245, 247, 250, 253, 254, 256, 257, 260, 261, 262, 264, 266, 269, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 348, 363, 367, 369, 370, 371, 372, 378, 379, 380, 382, 383], "heavi": [1, 8, 60, 383], "crucial": [1, 2, 3, 253, 257, 258, 261, 283, 290, 292, 367, 368, 369, 370, 371, 373, 375, 379, 380, 381, 386], "configur": [1, 8, 20, 21, 46, 159, 205, 210, 236, 292, 294, 362, 367, 368, 369, 373, 379, 380, 381], "hyperparamet": [1, 84, 191, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 367, 381, 383], "appropri": [1, 3, 4, 7, 72, 82, 92, 93, 96, 97, 122, 128, 152, 355, 358, 367, 375, 383], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 80, 81, 84, 85, 88, 90, 92, 94, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 362, 363, 367, 370, 372, 376, 379, 380, 381, 382, 385], "take": [1, 2, 3, 8, 22, 46, 63, 89, 95, 98, 99, 102, 106, 111, 112, 122, 128, 146, 177, 180, 182, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 269, 272, 275, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 335, 346, 362, 364, 367, 368, 369, 371, 372, 373, 379, 380, 381, 383, 386], "consider": [1, 2, 3, 8, 105, 107, 368, 379, 380, 383], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 49, 50, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 112, 116, 117, 118, 122, 123, 124, 128, 129, 130, 139, 148, 151, 178, 183, 189, 191, 201, 203, 204, 218, 222, 223, 270, 276, 277, 278, 279, 280, 282, 284, 285, 291, 292, 294, 295, 296, 297, 299, 305, 307, 310, 367, 368, 369, 371, 379, 380, 381, 386], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 79, 81, 86, 87, 88, 92, 95, 100, 101, 102, 105, 106, 107, 108, 112, 115, 118, 122, 123, 124, 128, 129, 130, 136, 139, 140, 143, 146, 147, 148, 149, 152, 153, 155, 159, 161, 166, 167, 168, 170, 173, 174, 177, 178, 180, 182, 183, 188, 189, 191, 193, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 229, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 262, 264, 265, 266, 269, 272, 276, 278, 284, 289, 291, 292, 294, 295, 296, 298, 306, 307, 308, 309, 310, 311, 327, 329, 339, 340, 341, 344, 354, 356, 357, 358, 362, 364, 367, 368, 369, 370, 372, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "occur": [1, 8, 14, 32, 33, 60, 102, 106, 108, 122, 128, 144, 153, 161, 166, 188, 201, 249, 255, 256, 262, 263, 264, 265, 266, 287, 383, 386], "serial": [1, 2, 3, 36, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 189, 191], "parallel": [1, 3, 8, 102, 105, 106, 107, 122, 123, 124, 128, 183, 188, 193, 276, 355, 356, 357, 358, 368, 369, 379, 380], "syncdatacollector": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 29, 36, 47, 140, 143, 170, 354, 357, 360, 367, 368, 369, 370, 374, 376, 379, 380, 383], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 115, 118, 121, 122, 123, 124, 125, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 356, 357, 358, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 383, 386], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 40, 42, 45, 53, 63, 68, 69, 103, 119, 122, 128, 189, 356, 357, 358, 367, 368, 369, 385, 386], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 357, 360, 369, 374, 385], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 42, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 86, 87, 115, 123, 124, 216, 220, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 362, 364, 369, 372, 383, 385], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 41, 44, 49, 50, 79, 86, 87, 98, 99, 100, 101, 105, 107, 108, 110, 111, 112, 119, 120, 122, 125, 189, 191, 228, 261, 346, 360, 362, 367, 371, 375, 379, 380, 381], "aggreg": [1, 3, 60, 79, 92, 123, 124, 201, 203, 204, 206, 207, 268], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 41, 42, 43, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 85, 86, 87, 102, 103, 106, 122, 128, 136, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 160, 161, 163, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 200, 201, 216, 218, 220, 222, 223, 228, 238, 244, 254, 256, 257, 264, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 307, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 346, 362, 368, 370, 371, 372, 373, 374, 375, 376, 381, 382, 385, 386], "final": [1, 2, 3, 4, 20, 40, 42, 45, 46, 179, 188, 216, 218, 220, 222, 228, 253, 257, 258, 259, 261, 267, 307, 340, 362, 367, 368, 369, 375, 376, 379, 380, 381, 386], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 356, 360, 367, 368, 369, 374, 385], "sever": [1, 2, 3, 8, 34, 36, 53, 63, 102, 106, 122, 128, 144, 146, 183, 191, 294, 367, 369, 375, 376, 383, 386], "gather": [1, 3, 17, 19, 20, 40, 42, 45, 53, 69, 73, 74, 79, 86, 94, 166, 227, 235, 306, 348, 361, 368, 369, 370, 374, 379, 380, 381, 383, 386], "continu": [1, 2, 9, 25, 54, 87, 102, 106, 122, 123, 124, 128, 129, 130, 136, 197, 206, 207, 208, 209, 261, 268, 273, 276, 277, 284, 290, 294, 295, 296, 297, 298, 299, 307, 312, 320, 362, 367, 369, 370, 372, 379, 380, 381, 383, 385, 386], "concomitantli": [1, 102, 106, 122, 128], "network": [1, 4, 8, 36, 102, 106, 115, 122, 123, 124, 128, 191, 203, 204, 206, 207, 208, 209, 212, 214, 215, 220, 223, 228, 229, 231, 233, 234, 237, 239, 240, 241, 246, 250, 251, 252, 254, 265, 269, 277, 278, 279, 280, 282, 283, 284, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 303, 305, 307, 308, 309, 310, 311, 353, 354, 362, 363, 364, 373, 376, 378, 381, 386], "impli": [1, 386], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 46, 79, 81, 84, 98, 99, 102, 106, 122, 126, 127, 128, 147, 165, 179, 182, 183, 185, 187, 191, 216, 217, 218, 220, 221, 222, 228, 231, 265, 276, 277, 278, 284, 287, 297, 346, 353, 362, 364, 367, 368, 369, 370, 378, 381, 383, 385], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 32, 33, 36, 40, 42, 45, 62, 68, 71, 79, 102, 105, 106, 107, 108, 122, 125, 128, 159, 161, 174, 183, 184, 189, 191, 193, 223, 228, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 385, 386], "slightli": [1, 60, 362, 363, 370, 379, 381, 382, 383, 386], "lag": [1, 367, 368, 369], "therefor": [1, 2, 3, 7, 40, 41, 42, 44, 45, 49, 50, 67, 68, 102, 106, 122, 128, 170, 294, 305, 373, 379, 386], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 29, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 79, 81, 86, 87, 92, 94, 95, 102, 106, 115, 118, 121, 122, 123, 124, 128, 136, 137, 140, 143, 152, 159, 165, 170, 173, 177, 178, 180, 182, 184, 187, 188, 200, 201, 216, 217, 220, 221, 226, 227, 228, 253, 257, 258, 261, 262, 265, 266, 275, 276, 277, 278, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 363, 364, 367, 368, 369, 371, 378, 379, 380, 381, 383, 386], "asynchron": [1, 9, 14, 20, 36, 40, 42, 45, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 276, 356, 367, 368, 369], "off": [1, 2, 4, 219, 245, 255, 297, 325, 340, 349, 362, 364, 367, 368, 369, 372, 373, 379, 380, 382, 386], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 81, 86, 94, 102, 105, 106, 107, 122, 123, 124, 128, 129, 148, 151, 155, 161, 178, 183, 188, 191, 193, 213, 216, 218, 220, 222, 229, 230, 250, 252, 254, 256, 263, 276, 283, 285, 290, 294, 340, 362, 364, 367, 368, 369, 370, 371, 372, 374, 375, 379, 380, 381, 382, 383, 386], "remot": [1, 2, 17, 18, 19, 20, 122, 128, 386], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 46, 92, 98, 99, 102, 106, 108, 109, 111, 112, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 139, 140, 143, 146, 148, 151, 152, 153, 159, 163, 167, 168, 173, 174, 175, 177, 178, 180, 189, 191, 193, 202, 218, 222, 225, 260, 261, 276, 325, 327, 348, 362, 367, 369, 370, 372, 373, 374, 375, 376, 382, 383, 385], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 60, 63, 64, 66, 67, 68, 102, 106, 116, 117, 122, 128, 129, 130, 174, 295, 307, 308, 309, 310, 311, 363, 367, 369, 372, 373, 374], "synchronis": [1, 103, 379, 380], "either": [1, 2, 5, 21, 36, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 102, 106, 122, 128, 177, 178, 191, 271, 292, 299, 331, 364, 367, 368, 370, 379, 382, 383, 385, 386], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 367, 380, 385], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 81, 84, 85, 86, 87, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 139, 140, 142, 143, 144, 147, 150, 153, 155, 158, 159, 160, 161, 165, 166, 168, 169, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 189, 191, 193, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 244, 245, 249, 250, 251, 252, 253, 255, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 307, 308, 309, 310, 313, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 334, 337, 338, 340, 341, 344, 358, 362, 363, 364, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "second": [1, 3, 8, 60, 63, 92, 140, 216, 218, 220, 222, 256, 278, 291, 294, 297, 329, 343, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 94, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 140, 147, 148, 149, 151, 152, 153, 159, 163, 164, 165, 167, 168, 170, 174, 177, 179, 181, 182, 183, 185, 187, 189, 191, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 228, 229, 230, 231, 236, 237, 238, 246, 249, 250, 251, 252, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 270, 273, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 325, 341, 346, 352, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 52, 53, 54, 55, 79, 86, 102, 106, 122, 128, 140, 155, 159, 182, 191, 212, 213, 217, 221, 232, 250, 251, 252, 255, 256, 259, 265, 271, 276, 278, 279, 280, 285, 291, 294, 296, 305, 306, 307, 308, 309, 310, 344, 360, 364, 367, 368, 369, 370, 371, 372, 378, 379, 380, 381, 386], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 77, 79, 81, 86, 87, 94, 101, 102, 103, 105, 106, 107, 118, 122, 128, 143, 161, 179, 182, 183, 189, 191, 197, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 280, 283, 284, 292, 305, 307, 308, 309, 310, 325, 327, 331, 340, 348, 349, 350, 354, 356, 357, 362, 363, 364, 367, 369, 370, 371, 372, 381, 383, 386], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 24, 26, 29, 32, 36, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 94, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 140, 147, 148, 149, 151, 152, 153, 163, 165, 167, 168, 170, 174, 177, 179, 182, 183, 185, 187, 191, 197, 200, 202, 212, 216, 217, 218, 220, 221, 222, 225, 230, 231, 237, 238, 246, 249, 250, 251, 252, 254, 255, 256, 260, 262, 263, 264, 265, 268, 270, 273, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 325, 341, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 60, 62, 66, 79, 86, 87, 90, 92, 102, 106, 110, 122, 125, 128, 168, 209, 218, 220, 222, 223, 232, 247, 249, 253, 255, 265, 270, 292, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 361, 363, 367, 368, 369, 371, 373, 374, 379, 380, 381, 383, 385, 386], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 77, 78, 79, 81, 82, 86, 87, 88, 90, 92, 93, 96, 97, 98, 99, 102, 103, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 137, 140, 143, 146, 148, 149, 150, 151, 160, 161, 165, 170, 173, 176, 178, 179, 180, 182, 183, 184, 187, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 229, 232, 233, 234, 235, 236, 238, 239, 240, 242, 247, 249, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 305, 307, 308, 309, 310, 314, 315, 329, 337, 339, 340, 344, 348, 358, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 386], "cuda": [1, 2, 3, 7, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 102, 106, 108, 109, 110, 122, 128, 147, 159, 164, 165, 179, 182, 183, 185, 187, 191, 216, 217, 220, 221, 265, 336, 367, 368, 369, 370, 379, 380, 382, 386], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 28, 51, 81, 98, 99, 111, 112, 122, 128, 144, 146, 150, 160, 170, 173, 177, 182, 189, 216, 220, 222, 228, 230, 231, 249, 255, 262, 263, 265, 266, 269, 278, 284, 291, 294, 295, 299, 313, 358, 362, 364, 367, 368, 369, 371, 373, 374, 379, 380, 381, 383, 385], "infer": [1, 122, 128, 143, 189, 218, 222, 230, 254, 262, 282, 325, 367, 369, 374, 376, 383], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 36, 60, 63, 79, 86, 87, 98, 99, 100, 101, 102, 105, 106, 111, 112, 118, 119, 120, 122, 128, 160, 161, 183, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 267, 268, 269, 272, 297, 327, 334, 340, 356, 357, 358, 361, 364, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385], "dispatch": [1, 17, 18, 19, 20, 247, 260, 327, 367], "avail": [1, 2, 3, 4, 6, 20, 41, 44, 49, 50, 60, 63, 68, 79, 85, 86, 87, 100, 101, 110, 116, 117, 122, 123, 124, 125, 129, 130, 136, 139, 142, 159, 213, 238, 262, 266, 292, 327, 356, 357, 362, 367, 368, 369, 370, 371, 372, 379, 380, 381, 383, 386], "speed": [1, 2, 4, 8, 28, 102, 106, 122, 128, 363, 367, 368, 369, 370, 379, 380, 381, 383], "avoid": [1, 2, 3, 36, 73, 74, 94, 102, 106, 122, 128, 135, 183, 189, 191, 249, 265, 270, 278, 291, 294, 297, 347, 369, 380], "oom": [1, 3, 40, 42, 45, 73, 74, 94], "choic": [1, 2, 62, 68, 122, 232, 362, 363, 367, 368, 373, 379, 380], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 36, 41, 44, 46, 49, 50, 53, 60, 63, 64, 66, 67, 68, 71, 73, 74, 79, 81, 86, 87, 92, 94, 102, 103, 104, 106, 115, 119, 122, 123, 124, 128, 129, 139, 140, 148, 151, 168, 182, 184, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 236, 237, 239, 240, 242, 246, 247, 249, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 278, 291, 292, 294, 307, 308, 309, 310, 311, 325, 341, 356, 357, 358, 362, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 383, 386], "ie": [1, 3, 17, 19, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 49, 52, 53, 54, 55, 66, 78, 87, 102, 106, 110, 121, 122, 128, 136, 143, 155, 184, 189, 201, 218, 222, 254, 276, 278, 279, 283, 284, 290, 291, 294, 295, 296, 297, 299, 307, 308, 309, 310, 362, 363, 368, 380], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 36, 40, 41, 42, 43, 44, 45, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 78, 79, 81, 86, 92, 94, 102, 106, 122, 128, 188, 189, 191, 202, 225, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 334, 360, 364, 367, 369, 370, 372, 374, 376, 379, 380, 382, 386], "while": [1, 2, 3, 7, 8, 36, 102, 106, 122, 128, 170, 183, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 283, 290, 291, 294, 297, 362, 367, 369, 370, 372, 374, 375, 379, 380, 381, 382, 383, 385], "wait": [1, 19, 20, 21, 370, 381], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 36, 40, 42, 44, 45, 49, 60, 63, 64, 66, 67, 68, 69, 73, 74, 79, 81, 86, 87, 92, 94, 102, 106, 116, 117, 122, 123, 124, 128, 129, 130, 135, 139, 140, 142, 143, 150, 161, 168, 170, 173, 174, 177, 179, 183, 191, 200, 203, 204, 216, 220, 240, 260, 262, 267, 268, 269, 276, 277, 279, 280, 282, 283, 284, 290, 294, 297, 307, 314, 315, 325, 327, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 383, 386], "impact": [1, 2, 3, 66, 112, 148, 151, 276, 278, 291, 294, 296, 368, 370, 379, 380], "memori": [1, 3, 8, 20, 28, 36, 40, 42, 45, 53, 60, 62, 63, 64, 66, 67, 68, 71, 73, 77, 102, 103, 106, 110, 122, 128, 143, 147, 165, 179, 182, 183, 185, 187, 189, 191, 220, 221, 265, 358, 360, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "manag": [1, 8, 303, 304, 307, 308, 309, 310, 340, 373], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 70, 78, 79, 81, 84, 86, 87, 92, 102, 106, 111, 112, 122, 123, 124, 128, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 164, 165, 166, 167, 168, 170, 173, 174, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 200, 201, 202, 212, 213, 218, 222, 224, 225, 238, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 325, 327, 338, 339, 340, 342, 343, 344, 348, 363, 364, 367, 369, 370, 371, 373, 378, 379, 380, 381, 383, 385, 386], "control": [1, 3, 5, 8, 15, 23, 27, 79, 86, 100, 101, 102, 106, 115, 122, 123, 124, 128, 150, 200, 206, 207, 208, 209, 218, 222, 224, 225, 240, 247, 261, 265, 266, 267, 276, 278, 291, 294, 298, 307, 312, 320, 325, 362, 364, 367, 368, 369, 371, 372, 373, 379, 380, 381, 383], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 81, 84, 85, 92, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 116, 117, 119, 120, 122, 125, 128, 129, 130, 143, 144, 148, 151, 156, 159, 160, 161, 165, 166, 177, 179, 180, 182, 183, 185, 189, 191, 193, 212, 216, 217, 219, 220, 221, 222, 226, 227, 228, 245, 250, 251, 252, 254, 260, 262, 265, 266, 268, 276, 277, 278, 280, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 302, 305, 307, 308, 309, 310, 325, 327, 335, 339, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 386], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 368, 380], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 41, 42, 44, 46, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 79, 81, 84, 86, 102, 106, 122, 123, 124, 128, 139, 140, 143, 146, 148, 151, 153, 156, 163, 175, 183, 189, 191, 218, 222, 229, 307, 309, 310, 340, 344, 363, 367, 368, 369, 370, 372, 373, 374, 376, 379, 380, 381, 383, 386], "heurist": [1, 4, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 260, 261, 367, 374, 386], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 62, 84, 92, 98, 99, 102, 106, 111, 112, 122, 128, 231, 294, 307, 308, 309, 310, 311, 326, 361, 362, 364, 367, 368, 369, 370, 372, 374, 375, 380, 383, 386], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 26, 32, 33, 36, 40, 42, 45, 51, 53, 62, 66, 85, 86, 90, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 119, 120, 122, 123, 124, 125, 128, 136, 143, 148, 150, 151, 156, 160, 161, 182, 183, 189, 191, 203, 204, 217, 218, 221, 222, 223, 226, 227, 228, 229, 244, 254, 261, 269, 297, 367, 368, 369, 371, 372, 374, 378, 379, 380, 382, 383, 386], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 78, 79, 81, 84, 85, 86, 87, 92, 94, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 136, 137, 139, 140, 141, 142, 143, 144, 148, 150, 151, 152, 153, 155, 159, 160, 161, 163, 165, 166, 170, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 242, 243, 244, 245, 249, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 354, 358, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 382, 383, 385, 386], "behaviour": [1, 3, 13, 14, 20, 66, 106, 144, 148, 151, 161, 166, 178, 200, 218, 219, 222, 245, 325, 340, 362, 368, 379, 383], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 32, 102, 106, 122, 128, 143, 148, 151, 161, 179, 180, 222, 262, 266, 267, 268, 346, 356, 357, 362, 367, 368, 371, 372, 380, 381, 386], "choos": [1, 115, 218, 222, 294, 360, 362, 363, 367, 368, 369, 379, 380, 383], "follow": [1, 2, 3, 6, 7, 8, 36, 40, 42, 43, 45, 46, 60, 62, 63, 64, 65, 66, 67, 68, 79, 98, 99, 102, 105, 106, 107, 111, 112, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 139, 159, 165, 185, 189, 191, 203, 204, 216, 218, 220, 222, 223, 256, 262, 263, 264, 275, 276, 277, 278, 279, 283, 284, 290, 291, 294, 295, 296, 297, 299, 327, 344, 362, 363, 364, 367, 368, 369, 370, 373, 374, 378, 379, 380, 381, 383, 385, 386], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 347, 367, 369, 385], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 36, 60, 143, 156, 191, 253, 257, 260, 261, 326, 327, 329, 337, 340, 344, 347, 348, 367, 368, 369, 370, 372, 379, 380, 383, 385, 386], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 81, 85, 86, 88, 90, 94, 95, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 119, 120, 121, 122, 125, 128, 139, 140, 143, 146, 147, 150, 153, 155, 158, 159, 161, 163, 164, 165, 173, 175, 179, 182, 183, 185, 187, 188, 189, 191, 193, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 229, 230, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 258, 260, 261, 264, 265, 266, 268, 269, 272, 278, 291, 294, 297, 306, 307, 308, 309, 310, 325, 326, 340, 364, 368, 369, 370, 371, 372, 374, 375, 379, 380, 381, 383, 385, 386], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 29, 36, 47, 140, 143, 170, 347, 367, 368, 369, 370, 374, 376, 379, 380, 383, 385], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 34, 35, 36, 37, 44, 46, 48, 49, 60, 62, 63, 66, 79, 81, 84, 86, 87, 89, 92, 102, 103, 106, 116, 117, 122, 123, 124, 128, 129, 130, 136, 165, 170, 173, 177, 178, 179, 180, 187, 189, 191, 213, 216, 217, 218, 220, 222, 228, 229, 233, 237, 238, 246, 253, 255, 256, 257, 264, 268, 313, 316, 317, 318, 319, 321, 322, 323, 324, 327, 340, 341, 356, 357, 362, 367, 368, 369, 370, 372, 373, 374, 376, 379, 380, 381, 382, 383, 385, 386], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 347, 367, 368, 376], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 46, 52, 54, 55, 66, 68, 80, 92, 102, 106, 118, 122, 128, 136, 150, 160, 161, 179, 192, 193, 216, 218, 220, 222, 257, 262, 265, 266, 273, 277, 295, 340, 348, 362, 367, 368, 369, 370, 371, 372, 374, 381, 382, 383, 385, 386], "rand_step": [1, 2, 3, 29, 47, 100, 101, 102, 103, 105, 106, 107, 113, 114, 118, 119, 120, 122, 128, 158, 179, 189, 381, 385, 386], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 367], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 62, 64, 66, 67, 68, 367, 368, 369], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 30, 31, 36, 37, 48, 49, 60, 62, 63, 64, 66, 67, 68, 78, 79, 86, 87, 92, 98, 99, 102, 106, 111, 112, 122, 128, 166, 177, 182, 191, 202, 222, 225, 261, 294, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 335, 360, 363, 367, 368, 369, 370, 371, 374, 376, 381, 385, 386], "pad": [1, 2, 3, 22, 43, 51, 62, 64, 66, 67, 68, 143, 203, 204, 206, 207, 222, 226, 227, 228, 341], "along": [1, 2, 3, 13, 14, 22, 32, 33, 40, 42, 45, 46, 53, 62, 64, 66, 67, 68, 74, 79, 81, 86, 87, 92, 94, 105, 107, 142, 143, 144, 161, 163, 166, 173, 181, 222, 223, 226, 227, 231, 255, 262, 265, 266, 292, 362, 367, 368, 370, 371, 373, 379, 380, 381, 383], "point": [1, 2, 3, 21, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 65, 72, 78, 79, 82, 92, 93, 96, 97, 102, 106, 122, 128, 136, 139, 142, 143, 147, 165, 178, 179, 181, 182, 183, 185, 187, 191, 224, 265, 275, 285, 344, 361, 368, 369, 378, 379, 380, 381, 383, 386], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 46, 52, 54, 55, 79, 86, 87, 106, 139, 166, 177, 201, 226, 227, 253, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 364, 370], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 32, 47, 49, 64, 100, 101, 102, 105, 106, 107, 122, 128, 129, 130, 156, 166, 189, 191, 213, 226, 227, 238, 255, 256, 263, 264, 266, 302, 307, 341, 367, 369, 370, 371, 372, 373, 379, 380], "valid": [1, 2, 3, 22, 40, 42, 43, 53, 69, 92, 131, 139, 166, 183, 191, 203, 204, 223, 226, 227, 253, 261, 291, 307, 308, 309, 310, 341, 364, 386], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 340, 360, 367, 368], "strategi": [1, 2, 15, 66, 84, 115, 136, 227, 235, 257, 362, 364, 367, 368, 372, 379, 380, 383], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 49, 52, 54, 55, 57, 81, 102, 106, 112, 118, 122, 123, 124, 128, 129, 131, 140, 142, 143, 152, 159, 177, 178, 179, 182, 183, 188, 189, 191, 203, 204, 226, 227, 228, 229, 253, 255, 262, 263, 266, 269, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 327, 344, 354, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 386], "organ": [1, 2, 381, 383], "within": [1, 2, 3, 13, 14, 16, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 102, 105, 106, 107, 122, 125, 128, 140, 143, 148, 151, 152, 170, 177, 188, 189, 191, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 273, 280, 285, 305, 325, 327, 362, 368, 371, 372, 373, 374, 375, 376, 379, 381, 385], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 46, 52, 53, 54, 55, 62, 63, 66, 84, 98, 99, 102, 106, 111, 112, 115, 122, 123, 124, 128, 139, 143, 150, 161, 168, 183, 184, 191, 213, 216, 217, 218, 220, 221, 222, 223, 225, 228, 229, 238, 290, 294, 302, 307, 308, 309, 313, 314, 315, 340, 344, 346, 356, 357, 362, 363, 364, 367, 368, 369, 371, 373, 375, 378, 379, 380, 381, 382, 383, 386], "how": [1, 2, 3, 17, 18, 19, 23, 36, 41, 49, 66, 78, 79, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 136, 191, 262, 276, 278, 289, 291, 294, 327, 329, 344, 361, 362, 367, 368, 369, 370, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "tabl": [1, 362, 368, 372], "summar": [1, 3, 381], "what": [1, 3, 8, 27, 41, 52, 60, 79, 86, 102, 106, 122, 128, 152, 179, 193, 200, 263, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 385, 386], "expect": [1, 2, 3, 4, 7, 26, 36, 44, 52, 53, 79, 85, 86, 102, 106, 118, 121, 122, 128, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 161, 163, 165, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 216, 217, 218, 220, 221, 222, 228, 229, 256, 261, 265, 268, 276, 277, 278, 279, 280, 282, 283, 284, 290, 291, 292, 294, 295, 296, 297, 299, 305, 348, 361, 362, 363, 364, 367, 369, 370, 371, 372, 373, 374, 379, 380, 381, 383, 386], "n": [1, 2, 3, 6, 7, 24, 28, 36, 39, 46, 102, 106, 122, 128, 143, 150, 155, 184, 191, 216, 217, 220, 225, 260, 261, 266, 276, 284, 292, 306, 341, 362, 364, 368, 370, 372, 379, 380, 383, 386], "b": [1, 2, 3, 7, 8, 22, 26, 32, 40, 42, 44, 45, 46, 49, 50, 92, 216, 217, 220, 221, 228, 229, 230, 231, 237, 246, 269, 307, 308, 309, 310, 311, 313, 327, 362, 368, 382, 383], "cat_result": [1, 13, 14], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 78, 79, 81, 85, 92, 102, 103, 105, 106, 119, 120, 122, 128, 136, 139, 143, 148, 151, 152, 165, 169, 170, 178, 180, 187, 189, 191, 193, 200, 216, 220, 255, 261, 265, 298, 307, 308, 309, 310, 311, 313, 327, 334, 344, 346, 358, 361, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "p": [1, 2, 4, 81, 84, 103, 126, 127], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 60, 62, 64, 66, 67, 68, 98, 99, 102, 106, 111, 112, 122, 123, 124, 128, 147, 148, 149, 151, 165, 170, 174, 178, 179, 181, 182, 183, 185, 187, 188, 191, 216, 219, 220, 223, 228, 240, 244, 245, 265, 268, 275, 276, 277, 279, 280, 282, 283, 284, 290, 292, 294, 295, 296, 297, 299, 346, 356, 357, 358, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 386], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 78, 79, 81, 92, 102, 105, 106, 122, 128, 148, 149, 151, 161, 181, 183, 193, 222, 223, 229, 262, 265, 266, 268, 269, 275, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 307, 308, 309, 310, 327, 335, 346, 356, 357, 358, 360, 362, 364, 367, 368, 369, 370, 371, 372, 374, 375, 379, 380, 381, 383, 386], "dimens": [1, 2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 52, 53, 54, 55, 62, 64, 66, 67, 68, 73, 74, 79, 86, 87, 92, 94, 100, 101, 102, 105, 106, 107, 108, 122, 128, 129, 130, 136, 142, 143, 144, 155, 161, 163, 166, 173, 176, 181, 184, 189, 203, 204, 205, 210, 218, 220, 222, 223, 226, 227, 228, 230, 231, 236, 237, 241, 242, 243, 244, 247, 255, 260, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 358, 362, 367, 368, 369, 370, 371, 379, 380, 381, 383], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 36, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 81, 92, 98, 99, 102, 103, 106, 111, 112, 115, 121, 122, 123, 124, 125, 128, 135, 142, 144, 166, 173, 179, 180, 183, 189, 191, 200, 214, 216, 220, 222, 260, 261, 278, 284, 287, 291, 292, 294, 295, 299, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 344, 362, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "adapt": [1, 23, 137, 177, 291, 367, 381], "equal": [1, 13, 14, 16, 60, 79, 86, 87, 119, 122, 128, 160, 161, 203, 204, 216, 218, 220, 222, 223, 229, 298, 302, 335, 356, 357, 367, 369, 382], "introduc": [1, 2, 122, 128, 216, 218, 220, 222, 261, 367, 379], "some": [1, 2, 3, 4, 7, 8, 9, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 44, 52, 53, 54, 55, 62, 68, 73, 74, 81, 92, 94, 98, 99, 102, 105, 106, 107, 111, 112, 116, 117, 122, 123, 124, 128, 129, 130, 139, 165, 179, 183, 185, 191, 193, 206, 218, 222, 242, 266, 267, 268, 327, 335, 347, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 383, 385, 386], "confus": [1, 36, 102, 106, 122, 128, 183, 191], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 36, 40, 41, 42, 45, 49, 50, 53, 60, 62, 64, 66, 67, 68, 73, 74, 75, 81, 84, 85, 86, 87, 88, 90, 94, 102, 105, 106, 107, 118, 122, 128, 146, 149, 150, 167, 174, 181, 185, 189, 191, 216, 218, 222, 231, 232, 254, 256, 257, 264, 266, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 307, 325, 341, 356, 357, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 382, 385, 386], "better": [1, 3, 8, 9, 13, 14, 218, 222, 363, 369, 371, 381, 385], "consist": [1, 2, 3, 36, 41, 44, 49, 50, 63, 66, 102, 106, 122, 128, 159, 188, 191, 204, 223, 367, 368, 369, 381, 382, 386], "interact": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 66, 102, 106, 116, 117, 122, 128, 183, 262, 266, 367, 369, 371, 372, 374, 379, 380, 381, 386], "keep": [1, 3, 4, 7, 8, 14, 40, 41, 42, 44, 45, 49, 50, 85, 92, 122, 128, 161, 165, 187, 189, 191, 200, 261, 337, 344, 367, 368, 369, 370, 374, 375, 376, 380, 381, 383, 385, 386], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 60, 63, 165, 187, 277, 279, 282, 284, 295, 297, 299, 367, 368, 372, 373, 379, 380, 383, 386], "interchang": [1, 369, 371, 375, 382, 383], "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 23, 36, 40, 41, 42, 44, 45, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 85, 86, 87, 102, 106, 116, 117, 122, 128, 129, 130, 150, 160, 171, 183, 189, 191, 193, 203, 204, 212, 216, 218, 222, 223, 228, 229, 256, 262, 266, 276, 278, 279, 282, 283, 284, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 302, 307, 340, 344, 363, 367, 368, 370, 374, 379, 380, 381, 383, 386], "wherea": [1, 2, 21, 66, 98, 99, 100, 101, 105, 107, 108, 111, 112, 119, 120, 125, 150, 191, 292, 364, 375], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 49, 52, 54, 55, 63, 66, 68, 78, 79, 102, 106, 118, 122, 128, 165, 179, 183, 187, 189, 191, 218, 220, 222, 226, 227, 257, 258, 261, 262, 266, 280, 283, 284, 297, 305, 307, 308, 309, 310, 311, 367, 368, 369, 371, 373, 374, 375, 379, 380, 381, 382], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 60, 66, 79, 86, 92, 102, 106, 122, 128, 166, 267, 268, 335, 344, 362, 367, 368, 369, 374, 378, 385, 386], "doesn": [1, 4, 11, 92, 119, 148, 151, 371], "understood": [1, 367], "serv": [1, 17, 19, 20, 108, 383, 386], "basi": [1, 92, 228, 383], "simplest": [1, 92, 269, 367, 369, 370, 372, 379, 380, 383, 386], "scenario": [1, 2, 116, 117, 122, 129, 130, 325, 367, 372, 379, 380, 381], "transit": [1, 36, 62, 66, 79, 87, 92, 102, 106, 122, 128, 191, 271, 367, 370, 371, 372, 374, 379, 381, 383], "sampl": [1, 4, 8, 9, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 46, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 80, 81, 84, 85, 86, 87, 90, 92, 94, 102, 106, 118, 121, 122, 128, 136, 142, 143, 166, 170, 194, 195, 198, 199, 202, 211, 219, 225, 226, 227, 235, 236, 239, 244, 245, 249, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 282, 291, 293, 294, 299, 335, 341, 344, 347, 360, 362, 367, 368, 369, 370, 371, 372, 374, 376, 379, 380, 382, 385, 386], "attent": [1, 2, 8, 367, 370, 386], "given": [1, 2, 3, 13, 14, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 46, 49, 50, 52, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 86, 87, 102, 106, 118, 122, 128, 147, 150, 161, 165, 179, 182, 183, 185, 187, 189, 191, 200, 202, 213, 214, 216, 220, 225, 238, 242, 249, 255, 256, 257, 260, 261, 264, 265, 266, 267, 268, 270, 275, 279, 280, 282, 306, 307, 308, 309, 310, 311, 313, 336, 340, 354, 362, 364, 367, 368, 369, 371, 372, 373, 374, 375, 380, 381, 386], "built": [1, 2, 3, 5, 7, 81, 98, 99, 105, 111, 112, 121, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 300, 305, 352, 354, 355, 358, 367, 368, 369, 370, 373, 375, 383, 386], "flatten": [1, 24, 25, 26, 28, 29, 32, 33, 34, 35, 38, 39, 40, 42, 45, 52, 54, 55, 92, 140, 155, 341, 360, 370, 380], "suffici": [1, 3, 4, 367], "preprocess": [1, 2, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 368], "popul": [1, 2, 3, 41, 44, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 158, 179, 367, 369, 370, 372, 374, 381, 383], "replaybuff": [1, 2, 29, 41, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 86, 96, 143, 166, 170, 191, 280, 285, 305, 352, 354, 360, 369, 374, 376, 379, 380, 382, 383, 385], "lazytensorstorag": [1, 2, 41, 44, 49, 50, 78, 92, 170, 191, 369, 376, 380, 383], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 44, 92, 102, 103, 106, 122, 128, 135, 140, 159, 179, 191, 247, 255, 260, 262, 263, 286, 288, 307, 310, 318, 319, 323, 324, 325, 354, 363, 367, 379, 380, 383, 385, 386], "reshap": [1, 2, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 66, 86, 92, 140, 218, 222, 223, 325, 369, 379, 380], "extend": [1, 2, 8, 24, 25, 26, 28, 29, 32, 33, 34, 35, 38, 39, 41, 44, 47, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 75, 78, 79, 81, 82, 86, 87, 90, 92, 93, 96, 97, 142, 170, 191, 341, 364, 367, 368, 369, 370, 374, 376, 379, 380, 382, 383, 385], "slice": [1, 2, 3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 86, 87, 136, 142, 383], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 42, 44, 45, 49, 50, 92, 110, 374, 379, 380], "achiev": [1, 2, 3, 4, 36, 102, 106, 110, 122, 128, 178, 191, 201, 262, 341, 364, 367, 368, 369, 370, 379, 380, 381, 383, 386], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 40, 41, 42, 44, 45, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 92, 102, 103, 106, 110, 122, 123, 128, 129, 130, 140, 143, 165, 182, 183, 185, 188, 189, 191, 197, 200, 203, 204, 206, 207, 208, 209, 210, 215, 218, 222, 223, 224, 228, 229, 254, 266, 273, 280, 285, 295, 297, 305, 327, 341, 348, 349, 350, 354, 356, 357, 362, 367, 368, 369, 370, 372, 375, 379, 380, 381, 382, 383, 385, 386], "multidimension": [1, 2, 49, 78, 79, 383], "slicesampl": [1, 2, 60, 79, 383], "sampler": [1, 2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 92, 94, 166, 280, 285, 305, 367, 369, 379, 380, 383], "One": [1, 2, 4, 8, 35, 39, 53, 92, 98, 99, 122, 128, 143, 170, 185, 235, 253, 265, 269, 298, 302, 331, 367, 368, 383, 386], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 81, 86, 87, 88, 89, 90, 92, 94, 98, 102, 103, 106, 111, 122, 123, 124, 125, 128, 129, 136, 139, 140, 143, 146, 152, 156, 159, 161, 163, 174, 178, 179, 180, 183, 184, 189, 191, 203, 204, 213, 218, 222, 223, 226, 227, 228, 229, 238, 249, 255, 256, 260, 262, 263, 264, 265, 266, 269, 270, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 298, 299, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 329, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 367, 368, 369, 370, 372, 378, 381, 383], "ensur": [1, 2, 3, 36, 41, 49, 78, 79, 85, 102, 106, 122, 128, 136, 143, 165, 177, 183, 185, 189, 191, 255, 362, 368, 369, 381, 383], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 81, 92, 94, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 140, 142, 144, 148, 151, 152, 153, 159, 161, 163, 167, 168, 170, 174, 177, 179, 181, 189, 190, 191, 193, 197, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 235, 236, 237, 238, 243, 244, 246, 249, 250, 251, 252, 254, 255, 256, 260, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 302, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 335, 341, 344, 354, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 60, 219, 244, 245, 275, 361, 367, 368, 369, 370, 373, 379, 380, 382, 386], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 23, 27, 36, 40, 42, 88, 92, 102, 106, 110, 115, 122, 123, 124, 128, 143, 146, 155, 165, 168, 180, 183, 187, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 230, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 262, 263, 264, 265, 269, 272, 275, 284, 295, 296, 297, 299, 306, 311, 327, 344, 358, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385, 386], "dimension": [1, 41, 44, 49, 50, 150, 218, 222, 307, 312, 320, 380], "num_slic": [1, 2, 60, 66, 79, 86, 87, 383], "4": [1, 2, 3, 7, 24, 26, 28, 29, 32, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 86, 87, 94, 98, 99, 100, 101, 102, 106, 111, 112, 113, 114, 115, 118, 120, 122, 126, 127, 128, 136, 137, 139, 140, 143, 152, 170, 177, 178, 189, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 220, 221, 223, 225, 228, 229, 232, 233, 234, 235, 236, 237, 238, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 270, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 325, 326, 362, 366, 367, 368, 369, 370, 372, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 29, 47, 140, 170, 370, 374, 383, 385], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 29, 36, 47, 140, 143, 170, 344, 347, 354, 364, 367, 368, 369, 370, 374, 376, 379, 380, 383, 385], "dim": [1, 2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 143, 144, 163, 179, 184, 189, 221, 242, 247, 260, 358, 368, 369, 379, 381, 383], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 62, 64, 66, 78, 79, 86, 87, 102, 106, 110, 119, 122, 125, 128, 140, 147, 165, 179, 182, 183, 185, 187, 191, 218, 222, 223, 247, 265, 267, 268, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 325, 327, 329, 362, 364, 367, 368, 369, 370, 371, 372, 373, 375, 379, 380, 381, 383, 386], "ndim": [1, 2, 41, 44, 49, 50, 73, 74, 78, 79, 92, 94, 102, 106, 122, 128, 191, 260], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 92, 102, 106, 119, 123, 124, 125, 128, 325, 355, 360, 367, 368, 369, 371, 378, 385, 386], "make_env": [1, 3, 122, 128, 130, 189, 325, 349, 350, 367, 368, 386], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 78, 84, 102, 106, 122, 128, 183, 212, 238, 256, 263, 264, 265, 266, 285, 346, 360, 364, 367, 368, 371, 372, 376, 383, 386], "behav": [1, 3, 108, 118, 216, 220, 235, 283, 290, 382], "iif": 1, "accordingli": [1, 79, 177, 178, 220, 263, 370, 371, 373, 374, 375], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 26, 28, 32, 34, 35, 36, 39, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 81, 86, 87, 92, 94, 100, 101, 102, 105, 106, 107, 108, 109, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 137, 139, 140, 143, 147, 150, 152, 153, 159, 161, 163, 165, 167, 168, 170, 173, 174, 177, 178, 179, 181, 182, 183, 185, 187, 191, 192, 197, 202, 203, 204, 206, 207, 208, 210, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 228, 229, 232, 235, 237, 247, 249, 250, 251, 252, 255, 256, 262, 264, 265, 268, 269, 270, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 313, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 343, 362, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 66, 78, 92, 139, 152, 193, 255, 265, 372, 373, 375, 379, 380], "current": [1, 2, 3, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 46, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 79, 81, 87, 102, 106, 108, 119, 122, 128, 139, 140, 143, 166, 178, 179, 180, 182, 183, 191, 194, 195, 200, 214, 240, 260, 261, 276, 278, 285, 291, 294, 296, 297, 330, 364, 367, 368, 369, 370, 371, 373, 374, 375, 379, 380, 381, 383, 385, 386], "fulli": [1, 8, 36, 102, 106, 122, 128, 191, 217, 221, 368, 373, 381, 383], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 81, 82, 85, 87, 88, 90, 92, 93, 94, 96, 97, 102, 103, 106, 119, 122, 123, 124, 128, 129, 130, 137, 139, 155, 165, 166, 170, 183, 185, 189, 191, 193, 201, 203, 204, 210, 223, 231, 254, 260, 265, 266, 267, 268, 276, 277, 279, 280, 282, 283, 284, 290, 292, 294, 295, 296, 297, 299, 307, 309, 310, 325, 332, 344, 361, 367, 368, 369, 372, 373, 379, 380, 381, 383, 385, 386], "consecut": [1, 3, 60, 85, 110, 222, 261, 327, 370, 371, 374, 380, 383, 386], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 42, 45, 66, 102, 103, 105, 106, 119, 120, 122, 128, 165, 187, 191, 344, 358, 368, 369, 371, 372], "therebi": [1, 23, 325, 363, 367, 368], "interrupt": [1, 2, 106, 260, 313], "These": [1, 2, 7, 36, 46, 63, 68, 95, 102, 106, 122, 128, 129, 165, 187, 191, 362, 363, 367, 369, 379, 380, 381, 383, 386], "tool": [1, 2, 3, 5, 370, 371, 379, 381, 383, 386], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 102, 105, 106, 122, 128, 132, 135, 364, 367, 369, 370, 371, 374, 375, 381], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 360], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 360], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 82, 85, 86, 87, 92, 93, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 139, 140, 141, 142, 144, 147, 148, 149, 150, 151, 152, 153, 159, 161, 163, 165, 167, 168, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 187, 189, 191, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 335, 342, 343, 354, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "multiprocess": [1, 2, 3, 13, 14, 17, 18, 19, 60, 68, 103, 104, 122, 128, 189, 367, 368, 369, 370, 379, 380, 381, 382, 386], "synchron": [1, 13, 18, 20, 40, 42, 45, 119, 356, 357, 368, 369, 379], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 36, 102, 106, 119, 122, 128, 148, 151, 178, 183, 189, 191, 194, 198, 211, 218, 219, 222, 235, 243, 244, 245, 262, 266, 292, 325, 340, 367, 368, 370, 379, 380, 385, 386], "find": [1, 4, 6, 7, 17, 18, 19, 41, 43, 51, 86, 87, 220, 253, 261, 338, 342, 367, 368, 372, 373, 379, 380], "folder": [1, 2, 40, 42, 45, 129, 368], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 100, 101, 102, 103, 105, 106, 107, 108, 116, 117, 118, 122, 123, 124, 128, 129, 130, 131, 136, 142, 143, 146, 147, 148, 149, 151, 154, 159, 160, 161, 165, 173, 175, 179, 180, 182, 183, 185, 187, 189, 191, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 229, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 265, 266, 268, 269, 272, 273, 287, 292, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 339, 344, 347, 356, 357, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 385, 386], "variou": [1, 2, 3, 218, 222, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 300, 305, 327, 356, 357, 367, 368, 369, 371, 372, 373, 375, 379, 380, 383, 386], "machin": [1, 2, 7, 17, 18, 19, 36, 65, 110, 379, 380, 385], "wonder": 1, "why": [1, 2, 3, 200, 379, 381, 386], "instead": [1, 4, 7, 8, 11, 28, 36, 66, 102, 106, 122, 128, 155, 179, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 276, 278, 280, 283, 284, 285, 290, 291, 294, 295, 296, 297, 305, 307, 311, 315, 358, 362, 371, 372, 376, 381, 383, 386], "lower": [1, 2, 3, 20, 25, 40, 42, 45, 146, 189, 239, 240, 269, 369, 379, 381], "io": [1, 60, 66, 111, 112, 119, 220, 221], "footprint": [1, 2, 383], "commun": [1, 2, 3, 122, 128, 361, 369, 386], "yet": [1, 98, 99, 111, 382], "plai": [1, 3, 123, 124, 143, 368, 369, 373, 383, 386], "role": [1, 3, 117, 368, 373, 386], "opposit": [1, 379], "direct": [1, 2, 36, 102, 106, 122, 128, 191, 216, 220, 292, 368, 373], "sinc": [1, 2, 3, 4, 5, 7, 36, 41, 44, 49, 50, 60, 68, 78, 79, 87, 92, 102, 106, 122, 123, 124, 125, 128, 191, 193, 200, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 269, 272, 325, 327, 367, 368, 369, 370, 371, 372, 373, 379, 381, 382, 383, 385, 386], "faster": [1, 2, 4, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 67, 68, 119, 307, 308, 309, 310, 370, 379, 380], "share": [1, 3, 6, 8, 22, 40, 42, 45, 71, 73, 74, 75, 79, 86, 88, 90, 94, 103, 122, 128, 189, 218, 222, 228, 229, 250, 251, 252, 276, 278, 279, 283, 284, 290, 291, 294, 295, 296, 297, 299, 358, 360, 362, 369, 370, 376, 378, 379, 380, 385, 386], "among": [1, 3, 123, 124, 379, 380], "prohibit": [1, 3, 92], "slow": [1, 3, 4, 40, 42, 45], "compar": [1, 3, 66, 92, 340, 363, 367, 369, 372, 373, 379, 380, 383, 386], "gpu": [1, 7, 8, 36, 73, 74, 94, 102, 106, 110, 122, 128, 191, 367, 369, 370, 379, 380, 386], "nativ": [1, 7, 9, 64, 102, 106, 122, 128, 143, 327, 370, 383], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 49, 60, 78, 79, 86, 92, 98, 99, 106, 139, 161, 189, 202, 211, 214, 216, 218, 220, 222, 225, 236, 243, 244, 253, 262, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 362, 363, 367, 368, 369, 372, 379, 380, 381, 383, 385, 386], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 78, 79, 81, 84, 86, 87, 90, 94, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 119, 120, 122, 125, 128, 129, 130, 139, 140, 144, 146, 147, 165, 173, 174, 179, 181, 182, 183, 185, 187, 191, 218, 222, 226, 227, 228, 249, 253, 254, 255, 257, 258, 260, 261, 262, 263, 265, 266, 269, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 293, 294, 295, 296, 297, 299, 301, 305, 307, 308, 309, 310, 311, 315, 325, 334, 355, 367, 368, 369, 372, 375, 379, 380, 383, 386], "build": [1, 3, 7, 22, 26, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 102, 106, 107, 108, 111, 112, 116, 117, 119, 122, 125, 128, 129, 130, 170, 189, 191, 202, 218, 222, 225, 259, 262, 266, 344, 351, 352, 353, 362, 364, 369, 370, 372, 373, 374, 375, 379, 380, 381, 382, 385, 386], "mani": [1, 2, 3, 4, 44, 98, 99, 100, 101, 102, 105, 107, 108, 111, 112, 119, 120, 125, 276, 278, 284, 291, 294, 295, 299, 362, 367, 368, 369, 371, 372, 374, 376, 379, 380, 381, 383, 386], "eg": [1, 2, 3, 11, 40, 42, 45, 73, 74, 75, 88, 90, 94, 100, 101, 102, 105, 106, 107, 108, 110, 122, 125, 128, 150, 177, 183, 228, 254, 327], "gymnasium": [1, 3, 5, 11, 102, 105, 106, 107, 113, 114, 122, 128, 132, 135, 153, 174, 177, 188, 368, 369, 381, 385], "warn": [1, 3, 253, 257, 258, 261, 368, 371, 373, 374, 375], "quickli": [1, 3, 368, 379, 380, 386], "becom": [1, 3, 4, 20, 216, 220, 379, 380, 386], "quit": [1, 3, 60, 102, 106, 122, 128, 362, 367, 368, 369, 372, 379, 380, 386], "annoi": [1, 3], "By": [1, 2, 3, 26, 32, 39, 100, 101, 102, 105, 106, 107, 108, 116, 117, 122, 123, 124, 125, 128, 129, 130, 247, 266, 292, 340, 358, 367, 379, 382, 383, 386], "filter": [1, 2, 3, 4, 53, 79, 86, 87, 276, 277, 279, 283, 284, 290, 294, 295, 297, 371], "out": [1, 2, 3, 4, 5, 9, 20, 36, 40, 42, 45, 53, 62, 66, 71, 79, 86, 87, 102, 106, 122, 123, 124, 128, 179, 191, 193, 216, 217, 220, 226, 227, 230, 231, 249, 254, 255, 256, 261, 262, 263, 264, 265, 266, 303, 304, 364, 367, 368, 369, 370, 371, 372, 374, 379, 380, 381, 383, 385, 386], "still": [1, 2, 3, 9, 66, 98, 99, 102, 106, 111, 112, 122, 128, 253, 291, 292, 367, 368, 370, 378, 381, 383, 386], "wish": [1, 3, 13, 14, 16, 66, 135, 373, 383], "displai": [1, 3, 7, 102, 106, 122, 128, 344, 364, 367, 368, 380, 381], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 81, 84, 85, 86, 87, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 139, 140, 143, 144, 147, 148, 151, 152, 153, 155, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 189, 191, 193, 200, 201, 202, 203, 204, 206, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 237, 238, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 276, 277, 278, 279, 280, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 305, 307, 308, 309, 310, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 334, 337, 338, 340, 341, 342, 344, 358, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "central": [2, 228, 229, 367, 368, 371, 379, 380, 383], "part": [2, 3, 4, 8, 36, 46, 60, 63, 64, 66, 67, 68, 98, 102, 106, 111, 122, 128, 142, 161, 170, 173, 191, 200, 218, 222, 270, 335, 358, 367, 369, 370, 376, 379, 381, 386], "algorithm": [2, 3, 8, 9, 118, 136, 276, 294, 295, 297, 360, 363, 364, 367, 368, 369, 370, 373, 374, 375, 379, 380, 382, 383], "implement": [2, 3, 9, 11, 13, 14, 15, 36, 76, 88, 89, 102, 106, 118, 119, 122, 128, 140, 147, 148, 149, 153, 156, 159, 167, 168, 174, 177, 182, 183, 189, 191, 203, 216, 217, 218, 219, 220, 221, 222, 243, 244, 245, 276, 277, 281, 282, 283, 290, 292, 293, 294, 296, 297, 325, 335, 349, 362, 364, 367, 368, 369, 370, 372, 373, 374, 379, 380, 381, 385], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 23, 26, 36, 40, 41, 42, 44, 45, 46, 49, 50, 60, 62, 66, 68, 85, 87, 92, 98, 99, 102, 103, 106, 110, 111, 112, 122, 128, 143, 159, 165, 168, 185, 188, 189, 191, 193, 202, 222, 228, 229, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 327, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "give": [2, 3, 7, 49, 63, 102, 106, 118, 122, 128, 143, 361, 363, 367, 368, 379, 380, 381, 382, 385], "abil": [2, 292, 381, 383], "panel": [2, 369], "usag": [2, 3, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 62, 68, 71, 92, 140, 143, 152, 218, 222, 283, 290, 297, 300, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "includ": [2, 3, 4, 7, 9, 20, 36, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 88, 90, 94, 102, 106, 118, 122, 128, 178, 183, 189, 191, 218, 222, 292, 297, 347, 362, 364, 367, 368, 369, 370, 379, 380, 381, 383, 386], "almost": [2, 370], "physic": [2, 6, 7, 71, 122, 125, 364, 367, 379, 380, 381], "theori": 2, "crude": 2, "made": [2, 3, 36, 44, 60, 73, 74, 75, 88, 90, 94, 102, 105, 106, 107, 122, 128, 191, 261, 280, 305, 367, 368, 370, 379, 380, 382, 383], "liststorag": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 383], "veri": [2, 3, 111, 112, 368, 371, 374, 379, 381, 383, 385, 386], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 33, 36, 39, 40, 42, 45, 60, 66, 79, 81, 84, 86, 87, 98, 99, 102, 106, 111, 112, 122, 128, 139, 140, 168, 191, 200, 223, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 300, 302, 305, 362, 364, 367, 369, 370, 371, 372, 373, 379, 380, 381, 383, 386], "complex": [2, 36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 367, 368, 371, 372], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 84, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 137, 139, 140, 142, 143, 144, 147, 148, 150, 151, 152, 153, 155, 158, 161, 163, 165, 166, 167, 168, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 191, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 276, 277, 279, 280, 282, 283, 284, 287, 288, 290, 292, 294, 295, 296, 297, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 362, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 385, 386], "contigu": [2, 3, 8, 63, 66, 67, 102, 106, 122, 128, 197, 369, 379, 380, 381, 383, 385, 386], "tensorstorag": [2, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 92, 95, 374, 383], "lazymemmapstorag": [2, 29, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 86, 87, 142, 143, 367, 368, 370, 374, 379, 382, 383], "citizen": 2, "pytre": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 81, 95], "tupl": [2, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 75, 79, 81, 86, 90, 92, 100, 101, 102, 105, 106, 107, 122, 128, 159, 161, 191, 206, 212, 213, 218, 221, 222, 223, 232, 236, 237, 238, 255, 256, 263, 264, 269, 276, 277, 279, 283, 284, 286, 290, 292, 294, 295, 296, 297, 299, 307, 308, 309, 310, 338, 340, 342, 351, 383], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 26, 36, 40, 42, 45, 53, 79, 84, 86, 87, 102, 105, 106, 107, 116, 117, 122, 128, 129, 130, 179, 183, 191, 262, 266, 297, 340, 356, 357, 358, 364, 368, 369, 371, 373, 379, 381, 386], "nest": [2, 3, 26, 29, 31, 32, 36, 37, 40, 42, 44, 45, 47, 48, 56, 73, 74, 77, 81, 94, 102, 105, 106, 107, 122, 128, 143, 177, 180, 191, 201, 260, 307, 308, 309, 310, 311, 325, 364, 368, 369, 380, 381, 383, 385], "construct": [2, 3, 5, 36, 41, 44, 49, 50, 60, 81, 102, 105, 106, 122, 123, 128, 148, 151, 191, 193, 218, 222, 240, 266, 344, 362, 368, 369, 370, 372, 379, 381, 383, 386], "ram": [2, 105, 107, 383], "prealloc": [2, 3, 122, 128, 381], "ve": [2, 46, 367, 370, 376], "been": [2, 3, 5, 7, 8, 17, 19, 20, 40, 42, 45, 46, 81, 85, 102, 106, 110, 116, 117, 122, 128, 159, 177, 178, 182, 216, 220, 253, 258, 260, 261, 367, 368, 369, 370, 378, 379, 380, 381, 383, 386], "here": [2, 3, 4, 7, 8, 9, 10, 13, 14, 67, 68, 92, 100, 101, 102, 106, 110, 122, 123, 124, 128, 143, 334, 362, 363, 364, 367, 368, 369, 370, 371, 372, 374, 376, 379, 380, 381, 383, 385, 386], "start": [2, 3, 4, 5, 13, 20, 23, 53, 60, 68, 79, 86, 87, 103, 106, 115, 122, 128, 200, 339, 366, 367, 368, 377, 380, 381, 383, 384, 386], "replay_buff": [2, 8, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 341, 354, 367, 368, 369, 374, 379, 380, 383], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 29, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 81, 86, 87, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 114, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 139, 140, 142, 143, 146, 152, 153, 158, 159, 161, 163, 165, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 182, 187, 189, 191, 192, 197, 200, 201, 202, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 228, 229, 232, 237, 238, 246, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 325, 327, 337, 340, 354, 362, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "rb": [2, 29, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 86, 87, 92, 143, 170, 191, 368, 370, 374, 376, 380, 382, 383, 385], "10": [2, 3, 7, 21, 22, 26, 36, 41, 44, 46, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 78, 81, 86, 87, 92, 94, 98, 99, 102, 103, 106, 111, 112, 118, 122, 123, 124, 126, 127, 128, 129, 130, 136, 137, 140, 142, 143, 178, 180, 181, 191, 202, 205, 206, 208, 210, 212, 216, 217, 220, 221, 225, 236, 247, 257, 258, 261, 262, 269, 273, 277, 280, 282, 294, 295, 296, 299, 305, 307, 308, 309, 310, 313, 327, 335, 364, 367, 368, 369, 370, 371, 372, 376, 379, 380, 381, 383, 385, 386], "add": [2, 3, 4, 6, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 78, 81, 82, 92, 93, 96, 97, 102, 106, 122, 128, 143, 159, 183, 191, 218, 222, 230, 259, 276, 339, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 385], "string": [2, 17, 18, 19, 36, 43, 53, 69, 102, 106, 116, 122, 128, 135, 165, 177, 187, 191, 218, 222, 255, 260, 262, 263, 275, 326, 343, 363, 367, 369, 370, 383], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 34, 35, 39, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 79, 81, 86, 87, 92, 94, 121, 122, 128, 136, 143, 166, 175, 178, 179, 203, 204, 216, 217, 220, 249, 253, 255, 260, 265, 266, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 293, 294, 295, 296, 297, 299, 335, 367, 369, 372, 374, 383, 386], "30": [2, 3, 44, 64, 139, 160, 239, 240, 325, 329, 366, 367, 368, 369, 374, 379, 380, 381, 383, 384], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 84, 86, 87, 88, 90, 92, 94, 102, 103, 105, 106, 115, 116, 117, 118, 122, 123, 124, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 185, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 348, 349, 350, 354, 356, 357, 358, 362, 364, 367, 368, 369, 370, 371, 373, 374, 375, 379, 380, 381, 383, 385, 386], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 78, 79, 80, 81, 82, 84, 86, 87, 88, 92, 93, 94, 96, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 136, 138, 139, 140, 142, 143, 144, 145, 147, 150, 155, 156, 160, 161, 163, 165, 166, 169, 176, 177, 180, 183, 184, 185, 187, 191, 193, 197, 202, 203, 204, 205, 206, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 276, 277, 278, 284, 286, 287, 291, 292, 293, 294, 295, 299, 307, 309, 310, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 329, 335, 336, 337, 340, 341, 344, 346, 352, 356, 357, 358, 381, 383], "entri": [2, 3, 13, 14, 16, 22, 26, 29, 32, 36, 40, 42, 43, 45, 47, 53, 57, 62, 63, 64, 65, 67, 68, 86, 87, 100, 101, 102, 105, 106, 107, 108, 116, 117, 122, 125, 128, 129, 130, 139, 143, 145, 146, 148, 151, 152, 155, 158, 161, 163, 165, 168, 170, 173, 175, 177, 178, 179, 187, 189, 191, 200, 201, 218, 226, 227, 254, 255, 260, 263, 264, 277, 297, 307, 308, 309, 310, 362, 367, 369, 370, 371, 372, 373, 375, 379, 380, 381, 382, 383, 386], "onto": [2, 8, 39, 40, 42, 45, 197, 249, 253, 255, 256, 261, 262, 263, 264, 265, 266, 370, 381], "__setitem__": 2, "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 78, 79, 81, 82, 84, 85, 86, 87, 92, 93, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 129, 130, 136, 143, 144, 177, 178, 179, 180, 183, 191, 201, 203, 204, 223, 226, 227, 229, 260, 261, 263, 264, 272, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 348, 358, 361, 364, 369, 370, 374, 375, 376, 381, 383, 386], "without": [2, 3, 7, 9, 13, 14, 15, 36, 40, 42, 45, 46, 60, 62, 66, 86, 87, 102, 106, 122, 128, 129, 130, 137, 139, 148, 151, 181, 191, 216, 217, 220, 221, 251, 252, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 306, 307, 308, 309, 310, 311, 354, 361, 362, 367, 368, 369, 371, 372, 373, 374, 379, 380, 381, 383, 386], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 40, 41, 42, 45, 46, 49, 78, 79, 102, 106, 118, 122, 123, 124, 128, 137, 139, 140, 148, 150, 151, 167, 177, 178, 183, 186, 189, 191, 201, 202, 216, 218, 222, 225, 253, 257, 258, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 282, 284, 285, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 305, 307, 308, 309, 310, 311, 340, 344, 346, 349, 350, 353, 354, 364, 368, 369, 370, 373, 376, 379, 380, 381, 383, 385, 386], "length": [2, 19, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 43, 46, 51, 52, 53, 54, 55, 60, 66, 69, 79, 86, 87, 90, 102, 106, 111, 112, 122, 128, 136, 166, 189, 202, 203, 204, 206, 208, 210, 216, 220, 223, 225, 228, 229, 249, 265, 270, 335, 341, 367, 369, 370, 374, 376, 381, 383, 386], "cursor": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "place": [2, 3, 23, 26, 27, 32, 36, 40, 42, 45, 73, 74, 81, 84, 94, 102, 103, 106, 122, 128, 129, 130, 139, 147, 152, 165, 179, 182, 183, 185, 187, 188, 189, 191, 201, 254, 260, 265, 341, 346, 347, 368, 369, 372, 375, 379, 380, 381, 383], "afterward": [2, 102, 106, 122, 128, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 379, 386], "tell": [2, 3, 4, 7, 123, 124, 367, 370, 374, 379, 380], "our": [2, 3, 7, 8, 17, 44, 143, 327, 362, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 382, 383, 385], "far": [2, 46, 219, 244, 245, 376, 381, 386], "restrict": [2, 3, 368, 382, 383, 386], "empti": [2, 3, 26, 32, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 81, 102, 106, 121, 122, 128, 148, 151, 165, 167, 180, 183, 185, 187, 331, 367, 381], "64": [2, 3, 40, 42, 45, 60, 66, 81, 143, 169, 206, 207, 215, 218, 222, 229, 237, 305, 367, 368, 369, 370, 372, 376, 378, 381, 382, 383, 385, 386], "dtype": [2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 86, 87, 94, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 137, 140, 141, 147, 148, 149, 150, 151, 152, 153, 159, 161, 163, 165, 167, 168, 170, 174, 177, 179, 181, 182, 183, 185, 187, 191, 193, 197, 200, 201, 202, 212, 213, 216, 217, 218, 220, 221, 222, 225, 230, 231, 237, 238, 246, 249, 250, 251, 252, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 270, 273, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 313, 362, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "unit8": 2, "img": 2, "randint": [2, 40, 42, 45, 53, 81, 181, 383], "255": [2, 81, 181, 381, 383], "uint8": [2, 3, 40, 42, 45, 55, 60, 66, 100, 101, 116, 117, 152, 163, 181, 368, 375, 382, 383, 385, 386], "next": [2, 3, 4, 8, 13, 14, 15, 22, 26, 29, 31, 32, 36, 41, 44, 46, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 79, 81, 86, 87, 92, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 116, 117, 118, 122, 126, 127, 128, 129, 130, 136, 139, 140, 142, 143, 148, 151, 152, 153, 158, 159, 163, 167, 168, 170, 173, 174, 177, 179, 188, 189, 191, 197, 200, 202, 217, 218, 221, 222, 225, 240, 260, 271, 273, 276, 277, 279, 280, 282, 283, 284, 285, 290, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 327, 338, 340, 342, 368, 370, 372, 375, 376, 378, 381, 382, 385, 386], "ask": [2, 8, 60, 66, 79, 86, 87, 327, 369, 370, 371, 372, 379, 380, 382, 386], "do": [2, 3, 4, 7, 68, 102, 106, 122, 128, 129, 130, 136, 166, 188, 189, 200, 229, 230, 251, 307, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386], "automat": [2, 3, 5, 68, 73, 74, 81, 94, 102, 105, 106, 107, 122, 123, 124, 128, 139, 148, 151, 161, 179, 188, 203, 218, 222, 249, 260, 262, 325, 362, 367, 369, 371, 372, 379, 380, 381, 383, 385], "hand": [2, 3, 7, 20, 26, 379, 380, 381], "look": [2, 3, 5, 7, 8, 36, 79, 102, 106, 115, 122, 123, 124, 128, 165, 166, 185, 191, 262, 266, 267, 268, 363, 369, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 385, 386], "assum": [2, 3, 6, 26, 39, 46, 49, 50, 62, 64, 66, 67, 68, 70, 71, 77, 86, 102, 106, 122, 128, 142, 145, 155, 165, 166, 173, 179, 183, 185, 187, 197, 218, 222, 247, 269, 280, 285, 297, 305, 316, 317, 318, 319, 321, 322, 323, 324, 327, 367, 369, 370, 378, 381], "lead": [2, 3, 4, 8, 10, 11, 22, 26, 32, 36, 41, 44, 49, 50, 62, 85, 100, 101, 102, 105, 107, 108, 179, 219, 237, 244, 245, 367, 370, 379, 380, 381, 383, 385], "leav": [2, 26, 32, 40, 42, 44, 45, 102, 193, 201, 367, 374, 383], "tree": [2, 40, 42, 45, 102, 106, 122, 128, 379, 383], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 81, 90, 100, 101, 102, 103, 105, 106, 107, 108, 122, 128, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 159, 161, 163, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 203, 204, 211, 218, 222, 223, 228, 229, 243, 249, 254, 255, 262, 263, 265, 266, 269, 270, 277, 284, 291, 293, 295, 297, 341, 346, 362, 367, 369, 378, 380, 381, 383, 386], "don": [2, 3, 4, 6, 7, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 143, 368, 369, 374, 383, 385, 386], "throw": [2, 36, 40, 42, 45, 102, 106, 122, 128, 191, 386], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 26, 29, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 79, 80, 81, 86, 87, 92, 94, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 140, 142, 143, 147, 148, 151, 152, 153, 163, 167, 168, 170, 174, 177, 179, 182, 183, 191, 192, 200, 201, 202, 210, 212, 213, 218, 222, 225, 237, 238, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 270, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 327, 335, 341, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "max": [2, 22, 39, 42, 49, 53, 69, 78, 79, 92, 150, 180, 244, 245, 254, 261, 277, 278, 284, 293, 295, 297, 367, 369, 370, 376, 379, 380], "label": [2, 42, 43, 46, 53, 367, 379, 383], "100": [2, 13, 14, 15, 16, 36, 41, 44, 49, 50, 51, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 92, 98, 99, 102, 106, 111, 112, 122, 128, 146, 152, 161, 170, 175, 177, 191, 228, 256, 260, 327, 336, 354, 366, 368, 369, 370, 371, 373, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386], "rb_pytre": 2, "randn": [2, 26, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 79, 81, 86, 87, 94, 142, 161, 197, 205, 206, 210, 212, 213, 216, 217, 220, 221, 226, 227, 228, 232, 235, 236, 238, 249, 250, 251, 252, 254, 255, 262, 263, 265, 268, 269, 270, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 307, 308, 309, 310, 343, 362, 383, 385, 386], "c": [2, 3, 6, 7, 26, 40, 42, 44, 45, 49, 50, 65, 161, 181, 220, 221, 368, 383], "zero": [2, 3, 4, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 81, 86, 87, 92, 94, 102, 106, 122, 128, 140, 142, 144, 148, 150, 151, 161, 167, 170, 191, 197, 200, 202, 207, 208, 209, 215, 216, 217, 218, 220, 221, 222, 226, 227, 229, 237, 246, 257, 258, 261, 264, 272, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 313, 370, 383, 385], "assert": [2, 3, 6, 15, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 106, 109, 122, 128, 135, 136, 140, 143, 146, 148, 151, 159, 168, 175, 189, 193, 197, 229, 232, 247, 307, 308, 309, 310, 335, 343, 374, 378, 383, 386], "len": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 94, 163, 203, 204, 223, 229, 367, 374, 376, 379, 381, 382, 383, 385], "ambigu": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 90, 102, 106, 122, 128, 140, 147, 165, 179, 182, 183, 185, 187, 191, 265, 363, 367, 371, 381], "deal": [2, 3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 367, 369, 380, 383], "interpret": [2, 3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 368], "put": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 106, 116, 117, 129, 130, 189, 334, 358, 362, 368, 369, 370, 371, 379, 381], "solv": [2, 4, 9, 10, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 361, 367, 368, 369, 374, 376, 379, 380, 381, 383], "clear": [2, 3, 26, 32, 33, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 110, 122, 128, 191, 336, 371, 374], "cut": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "distinct": [2, 3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 140, 373, 378], "view": [2, 3, 8, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 137, 191, 213, 216, 220, 223, 371, 381, 383, 385, 386], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 26, 32, 66, 98, 99, 102, 105, 106, 107, 110, 111, 112, 115, 122, 123, 124, 128, 139, 148, 151, 166, 223, 237, 260, 262, 266, 267, 268, 272, 292, 307, 308, 309, 310, 362, 367, 368, 369, 371, 373, 378, 379, 380, 381, 382, 383, 386], "collate_fn": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 383, 385], "__init__": [2, 3, 7, 102, 118, 135, 137, 140, 148, 151, 167, 202, 213, 216, 220, 225, 270, 277, 279, 284, 290, 295, 297, 299, 364, 381, 386], "major": 2, "worri": [2, 51], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 73, 74, 75, 79, 86, 88, 90, 94, 102, 103, 106, 110, 122, 128, 139, 201, 367, 369, 371, 379, 380, 381, 386], "though": [2, 4, 102, 106, 122, 128, 223, 369, 379, 380], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 43, 46, 52, 54, 55, 102, 106, 122, 128, 160, 179, 219, 244, 245, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 368, 372, 375, 381, 383, 386], "latter": [2, 17, 18, 19, 36, 62, 102, 106, 122, 128, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 294, 356, 357], "inv": [2, 3, 146, 150, 153, 163, 170, 175, 381], "method": [2, 3, 4, 11, 15, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 78, 79, 81, 86, 87, 88, 89, 90, 92, 94, 102, 105, 106, 107, 108, 122, 125, 128, 139, 140, 143, 147, 148, 149, 152, 153, 155, 159, 161, 165, 167, 168, 169, 170, 174, 177, 179, 182, 183, 185, 187, 191, 192, 202, 218, 222, 249, 250, 251, 252, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 273, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 311, 325, 326, 355, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 379, 381, 383, 386], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 43, 51, 52, 54, 55, 71, 102, 106, 122, 128, 150, 153, 174, 181, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 307, 383], "multithread": [2, 3, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 69, 119, 120, 374, 383], "thread": [2, 13, 14, 16, 40, 42, 45, 98, 99, 111, 112, 122, 128], "prefetch": [2, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 69, 367, 368, 370, 383], "advis": [2, 63, 386], "benchmark": [2, 3, 9, 99, 111, 112], "techniqu": [2, 8, 122, 128, 368, 374, 383], "real": [2, 5, 66, 266, 363, 370, 381], "life": [2, 152], "adopt": [2, 3, 5, 367, 386], "throughput": [2, 9, 112, 367], "constant": [2, 27, 143, 161, 178, 364, 367, 369, 370, 386], "throughout": [2, 3, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 369, 379, 386], "further": [2, 3, 5, 23, 367, 369, 371], "refin": [2, 66, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305], "coupl": [2, 370, 372, 373, 381, 383], "get": [2, 3, 4, 6, 7, 8, 9, 26, 32, 40, 41, 42, 44, 45, 60, 62, 66, 73, 74, 79, 86, 87, 88, 90, 92, 94, 102, 103, 106, 122, 128, 137, 142, 144, 148, 150, 151, 159, 161, 166, 178, 179, 181, 183, 189, 249, 257, 258, 262, 263, 266, 273, 307, 308, 309, 310, 311, 327, 331, 362, 366, 367, 368, 369, 370, 377, 379, 380, 381, 383, 384, 385, 386], "first_elt": 2, "128": [2, 60, 62, 66, 87, 98, 99, 111, 112, 207, 210, 368, 370, 376, 379, 381, 382, 383], "wa": [2, 3, 5, 7, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 85, 86, 102, 106, 122, 128, 183, 193, 201, 220, 276, 278, 289, 291, 294, 296, 298, 313, 363, 368, 369, 371, 372, 373, 374, 375, 378, 379, 383, 385], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 24, 26, 28, 29, 32, 36, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 79, 81, 86, 87, 92, 98, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 135, 136, 139, 140, 143, 144, 148, 149, 150, 151, 158, 161, 167, 168, 170, 173, 177, 179, 180, 181, 189, 191, 197, 200, 201, 203, 204, 206, 207, 208, 209, 210, 213, 215, 218, 223, 226, 227, 228, 229, 232, 235, 238, 249, 250, 251, 252, 254, 255, 257, 258, 260, 261, 262, 263, 265, 268, 270, 273, 292, 325, 354, 362, 364, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 144], "larger": [2, 4, 218, 222, 283, 290, 385], "volum": 2, "due": [2, 3, 5, 373, 382, 383, 386], "serialis": [2, 40, 42, 45], "memorymappedtensor": [2, 29, 40, 42, 47, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 329, 374, 382], "well": [2, 3, 8, 20, 22, 36, 41, 43, 44, 49, 50, 79, 84, 88, 95, 102, 106, 122, 128, 183, 191, 206, 220, 239, 240, 292, 311, 367, 368, 370, 371, 372, 373, 375, 382, 383, 385, 386], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 116, 117, 122, 123, 124, 128, 129, 130, 148, 149, 151, 173, 176, 178, 184, 191, 202, 220, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 334, 362, 367, 369, 370, 374, 379], "file": [2, 6, 7, 8, 40, 42, 45, 60, 62, 63, 64, 66, 67, 68, 71, 129, 326, 327, 329, 364, 366, 368, 379, 383, 384, 386], "locat": [2, 7, 40, 42, 45, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 152, 161, 172, 219, 232, 244, 245, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 367, 368, 369, 375, 379, 380, 383], "improv": [2, 4, 156, 276, 363, 379, 380, 383], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 122, 128, 369, 379, 383], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 26, 36, 40, 42, 45, 53, 60, 62, 63, 64, 66, 67, 68, 86, 87, 100, 101, 102, 105, 106, 107, 110, 122, 128, 137, 143, 170, 173, 180, 189, 191, 201, 257, 258, 262, 266, 291, 292, 294, 367, 368, 370, 371, 373, 375, 383, 386], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 43, 45, 52, 54, 55, 79, 150, 220, 221, 283, 370, 374, 383], "sharabl": [2, 122, 128], "collabor": [2, 66], "rather": [2, 4, 90, 168, 367, 368, 369, 371, 373, 379, 380, 383], "incur": [2, 98, 99, 111, 112], "transmiss": 2, "overhead": [2, 98, 99, 111, 112, 122, 128], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 81, 102, 106, 122, 128, 138, 139, 182, 188, 193, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 265, 266, 267, 269, 272, 292, 294, 368, 370, 374, 381, 383], "instanti": [2, 3, 13, 14, 20, 40, 41, 42, 44, 45, 49, 50, 78, 79, 110, 139, 182, 229, 325, 367, 368, 372, 373, 375, 379, 380, 381, 383, 386], "content": [2, 8, 15, 26, 32, 40, 41, 42, 44, 45, 49, 50, 85, 102, 105, 106, 107, 119, 122, 128, 167, 203, 204, 223, 228, 229, 262, 292, 369, 381, 385], "map": [2, 3, 8, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 77, 78, 79, 102, 106, 115, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 163, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 191, 197, 213, 232, 249, 250, 251, 252, 255, 262, 263, 265, 266, 268, 269, 270, 271, 297, 305, 340, 360, 362, 363, 367, 368, 369, 370, 372, 373, 382, 385], "writer": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 79, 81, 82, 86, 92, 93, 97, 369, 383], "tensordictroundrobinwrit": [2, 81], "goe": [2, 4, 123, 124, 367, 369, 379, 380, 386], "prioritizedsampl": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 81, 280, 285, 305, 367, 383], "access": [2, 3, 7, 8, 36, 41, 63, 65, 102, 106, 122, 128, 165, 185, 191, 358, 361, 367, 371, 379, 380, 381, 383], "show": [2, 36, 102, 106, 122, 128, 191, 229, 327, 362, 367, 369, 370, 379, 380, 381, 383, 385], "tensordictreplaybuff": [2, 41, 44, 49, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 86, 87, 92, 142, 143, 341, 354, 360, 367, 368, 370, 383], "mp": [2, 17, 18, 19, 60, 61, 62, 63, 64, 65, 66, 67, 68, 103, 189], "def": [2, 3, 11, 21, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 103, 106, 118, 122, 128, 135, 137, 139, 140, 148, 151, 167, 183, 191, 202, 213, 216, 217, 220, 221, 225, 260, 262, 270, 277, 279, 284, 290, 292, 295, 297, 299, 325, 364, 367, 368, 378, 379, 380, 381, 383, 385, 386], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 40, 41, 42, 44, 45, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 113, 114, 122, 128, 137, 140, 142, 144, 148, 149, 150, 151, 158, 159, 161, 170, 173, 179, 181, 183, 189, 192, 200, 202, 212, 213, 218, 222, 224, 225, 237, 238, 246, 249, 250, 251, 252, 254, 255, 257, 258, 261, 262, 263, 265, 268, 270, 305, 308, 309, 310, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 326, 335, 343, 362, 363, 367, 370, 380, 381, 385, 386], "__name__": [2, 3, 13, 14, 21, 103, 325, 368, 385], "__main__": [2, 3, 13, 14, 21, 103, 325, 385], "21": [2, 66, 67, 87, 122, 123, 124, 128, 366, 367, 368, 376, 378, 379, 381, 384], "proc": 2, "target": [2, 4, 8, 20, 23, 36, 102, 103, 106, 122, 128, 178, 182, 191, 265, 266, 276, 277, 278, 279, 280, 282, 284, 285, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 347, 353, 354, 363, 364, 370, 376, 379, 381], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 40, 41, 42, 44, 45, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 79, 81, 86, 87, 88, 90, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 137, 138, 147, 165, 167, 176, 179, 182, 183, 184, 186, 187, 191, 202, 203, 204, 212, 218, 222, 223, 224, 225, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 334, 337, 341, 344, 358, 368, 386], "join": [2, 103, 360, 368, 369, 379], "now": [2, 3, 7, 41, 122, 143, 229, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 386], "20": [2, 53, 67, 86, 87, 92, 102, 106, 110, 122, 128, 178, 191, 215, 216, 217, 220, 221, 254, 335, 367, 368, 369, 370, 379, 380, 381, 383, 385, 386], "_data": [2, 381], "It": [2, 3, 4, 7, 22, 36, 40, 42, 43, 45, 46, 49, 51, 53, 62, 68, 81, 84, 92, 97, 102, 106, 108, 118, 119, 122, 123, 124, 128, 129, 130, 140, 142, 152, 159, 161, 166, 178, 183, 188, 191, 193, 206, 208, 214, 228, 229, 237, 239, 240, 246, 247, 256, 257, 260, 261, 264, 266, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 298, 299, 305, 306, 307, 325, 334, 340, 361, 362, 363, 367, 368, 370, 371, 379, 380, 381, 382, 383, 385, 386], "difficult": [2, 4, 122, 375], "pai": [2, 8, 367, 370], "word": [2, 3, 46, 60, 62, 64, 66, 67, 68, 292, 367, 374, 381, 386], "1m": [2, 60, 66, 347, 367, 369, 370, 382], "doe": [2, 3, 17, 40, 41, 42, 45, 49, 53, 60, 62, 66, 70, 71, 77, 78, 79, 86, 88, 90, 97, 102, 106, 116, 117, 122, 128, 129, 130, 189, 210, 216, 217, 218, 220, 221, 222, 230, 247, 254, 267, 268, 276, 278, 285, 291, 294, 306, 344, 362, 364, 367, 368, 369, 370, 371, 374, 379, 381, 383, 386], "howev": [2, 3, 5, 7, 36, 102, 106, 122, 128, 143, 173, 178, 183, 191, 276, 278, 291, 294, 296, 297, 362, 367, 368, 370, 373, 381, 383, 386], "capac": [2, 41, 44, 49, 50, 73, 74, 78, 86, 94, 369, 374], "There": [2, 10, 81, 218, 222, 362, 364, 369, 370, 372, 374, 379, 380, 381, 383, 386], "circumv": 2, "account": [2, 73, 74, 94, 105, 107, 139, 143, 226, 227, 362, 368, 370, 383, 386], "save": [2, 3, 8, 36, 40, 41, 42, 44, 45, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 81, 88, 89, 90, 94, 95, 102, 106, 122, 128, 188, 191, 326, 327, 329, 334, 344, 364, 374, 375, 376, 379, 380], "convent": [2, 3, 60, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 129, 130, 363, 367, 370, 379, 380, 381], "overridden": [2, 3, 60, 63, 64, 66, 67, 68, 102, 106, 122, 128, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 307, 309, 310, 370, 379], "dim_extend": [2, 41, 44, 49, 50], "obtain": [2, 7, 46, 60, 102, 106, 122, 128, 142, 165, 178, 187, 202, 237, 341, 367, 369, 371, 372, 373, 379, 380], "counterpart": 2, "desir": [2, 3, 36, 102, 106, 122, 128, 138, 140, 147, 161, 163, 165, 166, 179, 182, 183, 185, 187, 191, 198, 199, 203, 204, 223, 229, 249, 255, 256, 262, 263, 264, 265, 266, 362, 367, 379, 380, 381, 383], "diversifi": 2, "offer": [2, 3, 7, 98, 99, 102, 106, 111, 112, 116, 117, 122, 128, 325, 362, 367, 368, 371, 373, 374, 379, 381, 383, 386], "accomplish": [2, 193, 371], "anoth": [2, 3, 8, 66, 79, 86, 102, 105, 106, 107, 110, 122, 128, 140, 148, 149, 151, 179, 182, 223, 262, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 362, 363, 367, 369, 370, 372, 373, 378, 379, 380, 381, 386], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 60, 61, 63, 143, 193, 277, 282, 283, 290, 334, 364, 371, 382, 383, 385], "docstr": [2, 36, 102, 106, 122, 128, 191, 371, 372], "extens": [2, 41, 44, 49, 50, 87, 364, 383], "detail": [2, 3, 5, 6, 7, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 102, 106, 122, 123, 124, 128, 181, 183, 191, 213, 216, 220, 256, 276, 285, 294, 361, 364, 368, 374, 378, 383], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 102, 106, 122, 128, 148, 151, 189, 191, 201, 216, 218, 220, 222, 261, 262, 266, 285, 368, 372, 378, 379, 380, 386], "happi": 2, "concaten": [2, 8, 13, 14, 20, 34, 35, 66, 143, 144, 161, 182, 220, 223, 268, 367, 368, 372, 379, 380, 381, 383, 386], "schedul": [2, 4, 7, 46, 340, 369, 381], "transformedenv": [2, 3, 36, 102, 103, 106, 122, 128, 136, 137, 140, 143, 146, 147, 148, 151, 152, 153, 155, 158, 159, 160, 161, 163, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 182, 189, 191, 218, 222, 260, 327, 367, 368, 369, 370, 371, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "stepcount": [2, 36, 102, 106, 116, 117, 122, 128, 129, 130, 182, 191, 367, 368, 369, 370, 371, 376, 379, 380, 385], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 29, 36, 47, 92, 102, 103, 106, 108, 122, 128, 136, 139, 140, 143, 146, 147, 152, 158, 159, 161, 163, 168, 169, 170, 173, 175, 178, 179, 180, 182, 183, 189, 191, 218, 222, 260, 325, 327, 354, 360, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 385, 386], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 143, 170, 360, 374, 383], "cartpol": [2, 3, 29, 36, 47, 100, 101, 102, 106, 122, 128, 139, 140, 143, 173, 178, 189, 191, 260, 325, 368, 370, 372, 374, 375, 376, 383, 386], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 29, 36, 47, 62, 64, 92, 102, 103, 105, 106, 107, 111, 112, 119, 122, 128, 139, 140, 143, 146, 153, 158, 159, 161, 168, 170, 173, 175, 177, 178, 179, 180, 182, 189, 191, 218, 222, 260, 302, 316, 317, 318, 319, 321, 322, 323, 324, 325, 362, 368, 370, 371, 372, 373, 374, 375, 376, 381, 383, 385, 386], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 36, 98, 99, 102, 106, 111, 112, 118, 122, 123, 124, 128, 136, 137, 140, 143, 148, 151, 159, 167, 170, 192, 202, 213, 225, 238, 240, 249, 255, 262, 263, 277, 280, 282, 295, 297, 299, 354, 362, 367, 368, 369, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 385, 386], "8": [2, 3, 6, 7, 36, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 86, 87, 98, 99, 100, 101, 102, 106, 122, 128, 136, 139, 178, 203, 204, 206, 207, 215, 223, 250, 251, 252, 262, 265, 268, 290, 366, 367, 368, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386], "traj_kei": [2, 79, 86, 87, 383], "truncated_kei": [2, 79, 86, 87, 170, 177], "strict_length": [2, 60, 66, 79, 86, 87, 327], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 32, 36, 41, 44, 47, 50, 51, 73, 74, 78, 79, 86, 87, 94, 102, 106, 122, 128, 165, 170, 173, 183, 187, 191, 217, 221, 232, 238, 256, 260, 262, 264, 265, 266, 307, 308, 309, 310, 335, 347, 367, 368, 369, 370, 372, 373, 374, 376, 379, 380, 381, 383, 385, 386], "enumer": [2, 13, 14, 15, 20, 29, 36, 44, 47, 50, 87, 102, 106, 122, 128, 191, 300, 363, 367, 368, 369, 370, 376, 379, 383, 385], "break": [2, 5, 13, 14, 15, 20, 36, 44, 50, 60, 63, 64, 66, 67, 68, 69, 79, 86, 87, 92, 102, 106, 122, 128, 140, 143, 170, 189, 191, 327, 368, 374, 376, 383, 385], "step_count": [2, 13, 14, 15, 36, 102, 106, 111, 112, 122, 128, 177, 191, 369, 370, 371, 376, 385], "32": [2, 21, 26, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 87, 126, 127, 129, 130, 203, 204, 205, 206, 207, 209, 210, 215, 223, 228, 229, 233, 234, 236, 237, 246, 305, 325, 366, 367, 368, 370, 372, 373, 381, 382, 383, 384, 385, 386], "33": [2, 26, 36, 81, 102, 106, 122, 128, 191, 203, 204, 223, 368, 381], "34": [2, 203, 204, 223, 368, 370, 380, 381], "35": [2, 203, 204, 223, 366, 367, 368, 369, 381, 382, 384], "36": [2, 367, 368, 381], "37": [2, 142, 366, 367, 368, 369, 370, 381, 382, 384], "38": [2, 7, 367, 368, 381], "39": [2, 64, 111, 112, 368, 370, 381, 382], "40": [2, 111, 112, 366, 367, 368, 369, 370, 379, 380, 381, 384], "41": [2, 368, 375, 380, 381], "11": [2, 10, 22, 28, 39, 53, 73, 74, 78, 87, 94, 103, 136, 181, 191, 202, 225, 366, 367, 368, 369, 379, 380, 381, 383, 384], "12": [2, 10, 67, 73, 74, 87, 94, 111, 112, 122, 126, 127, 128, 191, 367, 368, 369, 370, 379, 381, 383], "13": [2, 5, 11, 86, 87, 125, 188, 191, 366, 367, 368, 369, 370, 375, 379, 380, 381, 382, 383, 384], "14": [2, 6, 11, 60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 87, 102, 106, 122, 128, 161, 191, 367, 368, 369, 379, 381, 382, 383], "15": [2, 22, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 102, 106, 122, 128, 191, 254, 261, 286, 366, 367, 368, 369, 370, 379, 381, 383, 384], "16": [2, 3, 36, 67, 79, 87, 98, 99, 102, 106, 111, 112, 122, 128, 143, 191, 367, 368, 370, 379, 381, 383, 385], "17": [2, 67, 87, 106, 122, 136, 191, 366, 367, 368, 369, 370, 381, 382, 384], "could": [2, 3, 4, 6, 22, 368, 369, 375, 379, 380, 382, 386], "sai": [2, 36, 102, 106, 122, 128, 191, 228, 379, 382, 386], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 26, 28, 32, 35, 39, 40, 42, 45, 75, 79, 86, 87, 102, 105, 106, 107, 110, 122, 128, 148, 151, 166, 173, 263, 368, 369, 370, 379, 380, 381], "handl": [2, 3, 20, 36, 102, 106, 122, 128, 188, 189, 191, 222, 223, 344, 356, 357, 367, 368, 369, 371, 373, 380, 383], "suggest": [2, 305, 367, 380], "serialenv": [2, 3, 102, 106, 122, 179, 191, 260, 360, 385, 386], "squeez": [2, 3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 139, 140, 143, 176, 178, 203, 204, 241, 242, 367, 381, 383], "6": [2, 3, 7, 13, 14, 15, 16, 22, 36, 44, 60, 67, 68, 79, 87, 100, 101, 106, 122, 126, 127, 136, 139, 161, 163, 178, 203, 204, 206, 207, 208, 211, 215, 217, 223, 228, 229, 233, 243, 260, 262, 270, 367, 368, 374, 379, 380, 381, 383, 385], "5": [2, 3, 13, 14, 22, 24, 26, 32, 36, 40, 41, 42, 44, 45, 49, 50, 60, 81, 86, 87, 92, 102, 103, 106, 111, 112, 116, 117, 119, 122, 126, 127, 128, 129, 130, 136, 139, 140, 142, 170, 177, 178, 191, 202, 203, 204, 206, 207, 212, 213, 214, 215, 216, 219, 220, 223, 225, 228, 229, 233, 238, 244, 245, 254, 255, 260, 263, 269, 291, 294, 296, 299, 325, 362, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 384, 385, 386], "7": [2, 3, 6, 10, 28, 36, 39, 41, 44, 49, 79, 87, 102, 106, 116, 117, 122, 128, 136, 139, 178, 202, 203, 204, 207, 223, 225, 228, 313, 366, 367, 368, 370, 374, 379, 380, 381, 382, 383, 384, 385], "9": [2, 3, 7, 22, 36, 41, 44, 49, 67, 68, 79, 87, 92, 100, 101, 115, 123, 124, 136, 139, 178, 189, 191, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 300, 305, 363, 366, 367, 368, 369, 371, 374, 379, 380, 381, 382, 383, 384], "18": [2, 67, 87, 126, 127, 129, 130, 191, 229, 366, 367, 368, 374, 379, 380, 381, 384, 385], "19": [2, 67, 86, 87, 92, 191, 366, 367, 368, 369, 370, 381, 382, 384], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 63, 122, 128, 182, 184, 229, 363, 364, 367, 368, 380, 383, 385], "congruent": 2, "custom": [2, 3, 5, 36, 102, 106, 122, 128, 185, 191, 228, 229, 269, 285, 294, 300, 358, 362, 367, 368, 369, 370, 372, 373, 375, 379, 380], "name": [2, 3, 6, 7, 11, 15, 36, 40, 42, 45, 53, 60, 63, 65, 68, 69, 98, 100, 102, 106, 111, 115, 116, 117, 119, 122, 123, 124, 125, 128, 129, 130, 131, 150, 153, 168, 173, 174, 177, 183, 185, 188, 191, 201, 218, 222, 255, 263, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 307, 309, 310, 311, 325, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 364, 367, 368, 369, 370, 373, 375, 379, 380, 381, 386], "randomcroptensordict": [2, 367], "unlik": [2, 85, 106, 116, 117, 129, 130, 260, 285, 294, 327, 368, 372, 374, 385], "stop": [2, 3, 15, 20, 46, 68, 79, 86, 87, 102, 106, 122, 128, 369, 374, 379, 380, 385, 386], "signal": [2, 3, 13, 14, 15, 16, 22, 60, 62, 64, 66, 67, 68, 79, 86, 87, 92, 106, 116, 117, 129, 130, 143, 152, 177, 180, 201, 363, 367, 369, 379, 380, 383, 386], "disk": [2, 3, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 344, 364, 367, 368, 370, 374, 375, 383], "dump": [2, 3, 29, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 81, 88, 90, 94, 325, 326, 327, 375, 376, 379], "load": [2, 6, 7, 13, 14, 15, 16, 29, 36, 40, 41, 42, 44, 45, 46, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 81, 88, 89, 90, 94, 95, 101, 102, 106, 122, 128, 135, 189, 191, 358, 364, 367, 369, 383], "json": 2, "metadata": [2, 60, 62, 369, 371, 373, 374, 379, 380, 386], "anticip": [2, 148, 151], "compli": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 66], "back": [2, 23, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 52, 54, 55, 62, 188, 193, 249, 255, 256, 262, 263, 264, 265, 266, 369, 379, 380, 381, 383], "exact": [2, 3, 122, 220], "statu": [2, 3, 102], "prioriti": [2, 4, 41, 49, 50, 73, 74, 75, 78, 79, 88, 90, 94, 279, 280, 282, 283, 284, 285, 290, 295, 297, 299, 305, 364, 367, 368, 383], "heap": 2, "under": [2, 3, 4, 20, 36, 46, 60, 62, 63, 64, 66, 67, 68, 100, 101, 102, 105, 106, 107, 108, 122, 125, 128, 191, 249, 255, 256, 262, 263, 264, 265, 266, 292, 307, 308, 309, 310, 311, 327, 363, 367, 368, 372, 379, 381, 386], "hood": [2, 20, 60, 102, 106, 122, 128, 381], "naiv": [2, 185, 371], "just": [2, 3, 4, 11, 90, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 115, 119, 120, 122, 123, 124, 125, 128, 139, 146, 201, 229, 335, 362, 364, 367, 368, 369, 370, 371, 372, 374, 379, 380, 381, 383, 385, 386], "public": [2, 65, 89, 165, 187], "serializ": 2, "consum": [2, 85, 87, 260, 368, 369, 374, 380, 383], "much": [2, 8, 13, 14, 16, 41, 49, 66, 78, 79, 122, 128, 291, 294, 369, 371, 375, 379, 380, 381, 383, 386], "duplic": [2, 36, 85, 102, 106, 122, 128, 191, 280, 285, 292, 305], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 23, 29, 36, 47, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 79, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 155, 157, 158, 159, 161, 162, 163, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 200, 205, 206, 207, 208, 209, 210, 213, 218, 222, 228, 233, 234, 236, 238, 239, 249, 250, 251, 252, 254, 255, 257, 258, 260, 261, 262, 263, 270, 271, 276, 277, 278, 279, 280, 282, 283, 284, 287, 290, 291, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 325, 327, 354, 362, 364, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 385, 386], "plu": [2, 13, 14, 16, 46, 122, 128, 381], "enabl": [2, 7, 8, 62, 73, 74, 85, 94, 140, 218, 222, 260, 261, 325, 327, 340, 369, 371, 379, 380, 381, 383], "three": [2, 69, 362, 364, 369, 371, 372, 379, 380, 381, 383, 386], "flatstoragecheckpoint": 2, "discard": [2, 3, 53, 62, 64, 106, 185, 200, 326, 383, 386], "compress": 2, "At": [2, 224, 257, 368, 369, 370, 374, 378, 381, 382], "correct": [2, 4, 40, 42, 45, 102, 106, 122, 128, 159, 347, 369, 370], "addit": [2, 3, 4, 36, 62, 102, 106, 122, 128, 129, 147, 165, 179, 182, 183, 185, 187, 191, 216, 253, 254, 260, 265, 275, 292, 307, 325, 363, 367, 368, 371, 379, 380, 383], "nestedstoragecheckpoint": 2, "represent": [2, 32, 33, 36, 102, 106, 122, 128, 165, 185, 187, 191, 367, 381, 382, 386], "appar": [2, 3, 337], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 70, 71, 77, 102, 105, 106, 107, 122, 128, 136, 146, 150, 197, 210, 213, 228, 234, 238, 249, 253, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 280, 282, 283, 284, 299, 305, 362, 368, 369, 370, 371, 372, 373, 379, 380, 381, 385, 386], "assumpt": [2, 3, 381, 383], "accur": [2, 7, 62, 68, 368, 381, 383], "truncat": [2, 3, 13, 14, 15, 16, 29, 31, 36, 37, 43, 47, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 79, 86, 87, 100, 101, 102, 105, 106, 107, 116, 117, 122, 123, 124, 128, 129, 130, 136, 152, 153, 160, 167, 170, 177, 183, 191, 201, 218, 222, 245, 260, 313, 367, 369, 370, 371, 372, 374, 375, 378, 379, 382, 383, 385, 386], "marl": [2, 115, 131, 143, 180, 228, 371, 379, 380], "extra": [2, 10, 36, 102, 106, 122, 128, 143, 189, 191, 200, 334, 362, 369, 370, 383], "fail": [2, 7, 21, 26, 32, 122, 137, 193], "concret": [2, 367, 369], "set_se": [2, 3, 13, 14, 15, 16, 20, 29, 36, 47, 98, 99, 102, 106, 111, 112, 118, 122, 128, 139, 161, 168, 173, 178, 180, 183, 191, 374, 376, 381, 385, 386], "manual_se": [2, 3, 29, 41, 44, 47, 49, 50, 63, 67, 68, 86, 87, 98, 99, 102, 106, 122, 128, 137, 139, 150, 161, 170, 173, 178, 180, 191, 226, 227, 235, 249, 256, 257, 258, 261, 269, 276, 277, 279, 283, 290, 297, 374, 376, 379, 380, 381, 385, 386], "200": [2, 13, 14, 15, 20, 29, 36, 47, 60, 102, 105, 106, 107, 122, 128, 129, 130, 170, 191, 206, 207, 214, 239, 240, 325, 327, 367, 370, 374, 376, 381, 383], "22": [2, 66, 86, 87, 188, 366, 368, 369, 381, 382, 384], "rb_test": 2, "_storag": [2, 382, 383], "max_siz": [2, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 88, 92, 94, 369, 374], "102": [2, 381], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 28, 40, 42, 45, 119, 210, 226, 227, 228, 275, 325, 367, 369, 379, 380], "state_dict": [2, 13, 14, 15, 16, 20, 36, 40, 42, 45, 102, 106, 122, 128, 183, 189, 191, 297, 358, 364, 367, 368, 386], "load_state_dict": [2, 13, 14, 15, 16, 20, 36, 40, 42, 45, 102, 106, 122, 128, 183, 189, 191, 297, 364, 367], "drawback": 2, "struggl": 2, "big": [2, 40, 42, 45, 369, 374, 383, 386], "sequenti": [2, 9, 36, 102, 106, 122, 128, 142, 159, 191, 267, 268, 273, 294, 362, 369, 370, 372, 380, 381, 382, 386], "known": [2, 3, 5, 7, 8, 106, 314, 315, 367, 368, 371], "seamless": [2, 223], "integr": [2, 36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 209, 218, 222, 225, 265, 362, 371, 372, 374, 379, 380, 381, 382], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 367, 368, 373], "essenti": [2, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 368, 371, 379, 381, 383], "understand": [2, 3, 8, 367, 368, 371, 372, 379, 380], "purpos": [2, 3, 7, 102, 106, 122, 128, 143, 216, 276, 278, 291, 294, 296, 354, 367, 369, 370, 373, 375, 379, 380, 382, 386], "guid": [2, 123, 124, 126, 127, 178, 361, 367, 380], "explan": [2, 36, 102, 106, 122, 128, 191], "effect": [2, 3, 26, 36, 41, 44, 49, 50, 60, 66, 79, 81, 84, 86, 87, 102, 106, 122, 128, 139, 143, 183, 191, 344, 367, 372, 379, 383, 386], "realm": [2, 372], "As": [2, 3, 4, 36, 60, 102, 106, 115, 122, 123, 124, 128, 170, 266, 307, 362, 367, 368, 369, 370, 371, 373, 374, 379, 380, 381, 382, 383, 385, 386], "practition": 2, "often": [2, 3, 8, 289, 344, 367, 368, 371, 373, 381, 383, 386], "encount": [2, 4, 66, 260, 361, 368, 372, 381], "situat": [2, 116, 117], "sometim": [2, 3, 370, 386], "variabl": [2, 3, 4, 7, 8, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 60, 63, 64, 67, 68, 98, 99, 100, 101, 102, 105, 107, 108, 111, 112, 116, 117, 120, 121, 125, 129, 130, 216, 217, 218, 220, 221, 222, 225, 250, 251, 252, 292, 295, 364, 368], "immedi": [2, 26, 32, 36, 102, 106, 122, 128, 191, 306, 379, 380], "199": [2, 381], "info": [2, 3, 13, 14, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 84, 86, 87, 100, 101, 102, 105, 106, 107, 108, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 185, 188, 190, 334, 371, 376, 379, 380, 383], "glanc": [2, 371], "seem": [2, 367, 370, 371], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 32, 33, 46, 102, 106, 115, 122, 123, 124, 128, 143, 166, 216, 218, 220, 222, 246, 250, 251, 252, 271, 362, 368, 370, 371, 379], "less": [2, 119, 247, 356, 357, 363, 369, 370, 383, 385], "omit": [2, 339, 369, 373, 381, 383], "proper": [2, 3, 4, 6, 7, 307, 308, 309, 310, 368, 369, 379, 380, 383, 386], "imposs": [2, 3, 92, 193, 276, 278, 291, 294, 296], "determin": [2, 41, 49, 62, 78, 79, 102, 106, 122, 128, 129, 130, 165, 187, 228, 261, 368, 372, 379, 380], "complic": [2, 381, 383, 386], "matter": [2, 27, 374], "inconsist": [2, 386], "miss": [2, 3, 4, 6, 7, 11, 26, 36, 102, 106, 122, 128, 183, 191, 200, 267, 268, 297, 361, 367, 370], "behavior": [2, 4, 36, 102, 106, 122, 128, 183, 191, 283, 290, 370, 380, 381], "primari": [2, 374], "elimin": [2, 3, 371], "upon": [2, 3, 8, 379, 381], "canon": 2, "definit": [2, 39, 88, 228], "markov": [2, 3, 371, 386], "decis": [2, 3, 205, 236, 254, 281, 293, 370, 371, 372, 379, 380, 383, 386], "mdp": [2, 371, 381], "context": [2, 3, 5, 8, 36, 102, 103, 106, 121, 122, 128, 179, 184, 191, 229, 230, 254, 303, 304, 307, 308, 309, 310, 312, 320, 327, 340, 362, 363, 367, 368, 369, 379, 380, 381, 382, 383], "condit": [2, 53, 178, 189, 255, 256, 260, 263, 264, 275, 367, 379, 381, 383], "complet": [2, 7, 9, 85, 102, 105, 106, 107, 122, 128, 143, 177, 361, 363, 367, 369, 371, 378], "termin": [2, 3, 7, 13, 14, 15, 16, 29, 31, 36, 37, 46, 47, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 100, 101, 102, 105, 106, 107, 111, 112, 116, 117, 122, 123, 124, 126, 127, 128, 129, 130, 136, 139, 140, 152, 167, 191, 201, 202, 218, 222, 225, 260, 267, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 367, 368, 369, 370, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "reward": [2, 3, 13, 14, 15, 27, 29, 31, 36, 37, 40, 45, 46, 47, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 79, 92, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 136, 137, 140, 141, 146, 147, 148, 149, 151, 152, 153, 159, 163, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 182, 183, 184, 186, 187, 189, 191, 197, 200, 202, 218, 225, 254, 260, 271, 276, 277, 279, 280, 282, 283, 284, 287, 290, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 337, 338, 340, 342, 358, 363, 364, 367, 368, 369, 370, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "imit": [2, 3], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 51, 52, 54, 55, 66, 102, 103, 106, 109, 112, 122, 128, 191, 203, 204, 223, 229, 363, 364, 367, 368, 369, 370, 371, 379, 380, 381, 383], "stateless": [2, 3, 102, 106, 122, 128, 140, 182, 292, 325, 367, 371, 381, 386], "simul": [2, 3, 5, 7, 8, 98, 99, 108, 111, 112, 125, 129, 130, 134, 202, 225, 362, 367, 369, 371, 375, 379, 380], "furthermor": [2, 379, 380], "certain": [2, 4, 17, 18, 19, 20, 36, 53, 102, 106, 122, 128, 135, 156, 177, 183, 191, 217, 221, 257, 291, 362, 367, 368, 369, 376, 379, 380, 386], "composit": [2, 3, 26, 32, 84, 90, 97, 102, 106, 122, 128, 262, 369, 372, 381], "accommod": [2, 3, 371, 372], "uniform": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 49, 52, 54, 55, 78, 79, 379], "unambigu": 2, "distinguish": [2, 116, 117, 129, 130], "happen": [2, 3, 102, 106, 122, 128, 253, 368, 373, 374, 375, 382, 386], "limit": [2, 46, 102, 106, 118, 122, 128, 143, 159, 276, 278, 291, 294, 296, 367, 368, 370, 379, 380, 381], "everyth": [2, 368, 369, 370, 375, 376], "belong": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 60, 66, 188, 189, 362, 367, 374, 380], "rule": [2, 122, 148, 151, 266, 362, 369], "field": [2, 3, 13, 14, 15, 16, 22, 26, 29, 36, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 78, 94, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 140, 148, 151, 152, 153, 163, 167, 168, 170, 174, 177, 179, 183, 191, 200, 202, 212, 213, 218, 222, 225, 237, 238, 246, 249, 250, 251, 252, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 270, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 348, 361, 362, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "taken": [2, 3, 102, 106, 122, 128, 136, 169, 226, 227, 258, 363, 367, 369, 370, 372, 379, 380, 381], "is_shar": [2, 3, 13, 14, 15, 22, 26, 29, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 78, 94, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 115, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 140, 148, 151, 152, 153, 163, 167, 168, 170, 174, 177, 179, 189, 200, 202, 212, 213, 218, 222, 225, 237, 238, 246, 249, 250, 251, 252, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 270, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 362, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "brought": [2, 369, 370, 372], "step_mdp": [2, 3, 102, 106, 122, 128, 218, 222, 360, 370, 371, 381, 385, 386], "count": [2, 3, 36, 102, 103, 177, 261, 340, 344, 347, 367, 368, 369, 370, 383, 386], "trigger": [2, 7], "partial": [2, 3, 102, 106, 122, 128, 142, 143, 178, 179, 180, 262, 344, 370], "turn": [2, 17, 18, 19, 20, 40, 42, 45, 157, 184, 188, 255, 325, 340, 363, 367, 368, 370, 372, 381, 382], "retain": 2, "regard": [2, 62, 68, 213, 256, 276, 285, 294, 367, 369, 381], "copi": [2, 3, 11, 17, 18, 19, 20, 36, 40, 42, 45, 46, 53, 66, 102, 106, 122, 128, 139, 168, 178, 183, 189, 191, 200, 218, 222, 254, 292, 297, 325, 363, 367, 368, 370, 371, 379, 383], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 16, 327, 363, 375, 383, 386], "eas": [2, 3, 379, 380], "flat": [2, 92], "manner": [2, 106, 165, 185, 362, 367, 368, 369, 374, 378, 381, 383], "ted2flat": [2, 29, 360], "flat2t": [2, 360], "unflatten": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 140, 260], "deseri": [2, 3, 29], "posit": [2, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 100, 101, 102, 106, 122, 128, 155, 156, 176, 177, 180, 183, 184, 191, 232, 297, 363, 369, 379, 380, 381, 383], "both": [2, 3, 7, 36, 41, 44, 49, 50, 66, 102, 103, 105, 106, 116, 117, 122, 123, 124, 128, 136, 143, 168, 183, 191, 201, 203, 204, 218, 221, 222, 223, 228, 229, 250, 251, 252, 256, 264, 276, 278, 279, 283, 284, 290, 291, 292, 294, 295, 296, 297, 299, 340, 362, 367, 369, 371, 373, 379, 380, 381, 382, 383, 386], "mark": [2, 3, 15, 68, 102, 106, 122, 128, 218, 222, 307, 309, 310, 374, 383], "identifi": [2, 43], "abov": [2, 3, 7, 36, 102, 106, 122, 128, 191, 219, 244, 245, 275, 363, 364, 367, 369, 371, 372, 379, 380, 381, 386], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 79, 86, 87, 100, 101, 102, 105, 106, 107, 108, 112, 116, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 140, 141, 143, 146, 147, 148, 149, 151, 153, 159, 161, 165, 167, 168, 173, 174, 177, 180, 182, 183, 185, 187, 188, 191, 193, 201, 203, 204, 205, 206, 207, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 228, 229, 232, 238, 247, 249, 250, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 325, 327, 335, 362, 363, 367, 368, 369, 370, 371, 372, 375, 378, 379, 380, 381, 382, 385, 386], "typic": [2, 3, 4, 8, 36, 102, 106, 122, 128, 152, 178, 191, 262, 277, 292, 294, 297, 362, 363, 364, 369, 371, 373, 374, 379, 380, 381], "adjust": [2, 367, 379, 380, 381], "grumodul": [2, 142, 273], "lstmmodul": [2, 370], "skip": [2, 3, 36, 60, 102, 106, 122, 128, 156, 183, 191, 193, 262, 266, 292, 297, 307, 308, 309, 310, 326, 327, 337, 340, 367, 368, 381], "accumul": [2, 8, 191], "upcom": [2, 292, 316, 317, 318, 319, 321, 322, 323, 324, 367], "popular": [2, 3, 362, 370, 373, 380], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 191, 360, 368], "shift": [2, 29, 31, 36, 37, 47, 70, 71, 77, 272, 307, 308, 309, 310, 369], "approxim": [2, 380, 386], "would": [2, 3, 36, 46, 102, 106, 122, 128, 191, 216, 218, 220, 222, 223, 228, 364, 368, 369, 370, 371, 373, 374, 381, 383, 385, 386], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 143, 210, 236, 276, 281, 293, 294, 335, 358, 369, 370, 380, 383], "2x": 2, "small": [2, 185, 367, 369, 379, 380, 386], "clearer": [2, 372], "lazi": [2, 32, 33, 57, 58, 102, 106, 122, 128, 129, 130, 165, 185, 203, 228, 230, 267, 268, 367, 368, 372, 374, 378, 383, 386], "certainli": 2, "benefici": 2, "welcom": [2, 371], "wrapper": [2, 3, 11, 16, 40, 42, 45, 46, 49, 50, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 188, 192, 232, 247, 253, 254, 258, 260, 261, 266, 271, 307, 332, 333, 334, 358, 360, 369, 370, 371, 373, 374, 375, 379, 380, 382, 386], "around": [2, 5, 7, 16, 49, 50, 118, 192, 260, 266, 307, 367, 368, 380, 386], "selecttransform": [2, 102, 106, 122, 128], "excludetransform": [2, 67, 174, 383], "promptli": 2, "virtual": [2, 3, 105], "instal": [2, 3, 5, 10, 17, 18, 19, 62, 65, 102, 106, 122, 123, 124, 126, 127, 128, 329, 344, 361, 367, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 386], "respons": [2, 3, 8, 79, 86, 102, 106, 122, 128, 344, 373, 374, 386], "d4rl": [2, 62, 68], "repositori": [2, 7, 63, 64, 65, 68, 130, 379, 380], "wheel": [2, 369], "publish": 2, "openml": [2, 65, 121], "scikit": [2, 65, 121], "panda": [2, 65], "raw": [2, 3, 4, 46, 219, 244, 245, 368, 374, 381], "go": [2, 3, 7, 115, 122, 166, 170, 254, 313, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "natur": [2, 3, 367, 370, 372, 373, 374, 383], "modifi": [2, 3, 7, 8, 26, 32, 36, 53, 102, 106, 122, 128, 140, 147, 155, 159, 165, 179, 182, 183, 185, 187, 191, 254, 261, 265, 347, 367, 368, 369, 371, 379, 380, 381], "fly": [2, 189, 291, 363, 369, 381, 383, 386], "least": [2, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 45, 52, 54, 55, 79, 86, 102, 146, 375, 386], "pre": [2, 7, 21, 36, 53, 66, 74, 102, 106, 122, 128, 165, 185, 187, 191, 386], "appli": [2, 3, 4, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 137, 139, 140, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 164, 166, 167, 168, 170, 173, 174, 177, 178, 179, 180, 182, 183, 185, 186, 188, 189, 191, 216, 220, 244, 255, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 293, 294, 295, 296, 297, 299, 307, 325, 339, 364, 367, 368, 369, 374, 379, 381, 385, 386], "conisder": 2, "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 63, 79, 86, 92, 110, 111, 112, 122, 123, 124, 146, 173, 203, 204, 214, 228, 229, 257, 260, 329, 344, 356, 357, 367, 368, 369, 370, 372, 373, 376, 379, 380, 383, 385], "pipelin": [2, 3, 7, 362, 369], "replac": [2, 3, 6, 7, 26, 32, 36, 40, 42, 45, 60, 66, 79, 86, 87, 139, 150, 152, 200, 257, 362, 379, 383], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 42, 45, 66, 81, 102, 106, 122, 128, 139, 170, 183, 191, 253, 258, 260, 261, 342, 364, 368, 369, 370, 372, 375, 381, 383, 386], "produc": [2, 136, 139, 140, 203, 204, 223, 229, 235, 250, 252, 254, 327, 369, 370, 371, 372, 374, 383, 386], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 66, 70, 85, 102, 106, 122, 123, 124, 128, 183, 191, 297, 369], "download": [2, 7, 10, 60, 62, 63, 64, 66, 67, 68, 110, 165, 187, 327, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 60, 63, 64, 66, 67, 68, 368, 379, 380, 381], "robosetexperiencereplai": [2, 86, 87], "fk1": [2, 67], "v4": [2, 67, 106, 122, 136, 169, 316, 317, 318, 319, 321, 322, 323, 324, 367, 369, 382, 386], "expert": [2, 67], "fk1_microopenrandom_v2d": [2, 67], "func": [2, 60, 61, 62, 63, 64, 65, 66, 67, 68, 190], "obs_norm": 2, "norm": [2, 4, 8, 98, 99, 344, 367, 368, 369, 379, 380, 381], "num_work": [2, 40, 42, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 119, 122, 128, 367, 368], "os": [2, 42, 53, 69, 368], "cpu_count": [2, 42, 53, 69], "num_chunk": [2, 60, 61, 62, 63, 64, 65, 66, 67, 68], "1000": [2, 4, 44, 78, 86, 87, 102, 106, 122, 128, 143, 189, 257, 261, 262, 266, 289, 367, 368, 369, 370, 372, 374, 376, 382, 383], "mp_start_method": [2, 60, 61, 62, 63, 64, 65, 66, 67, 68, 122, 128, 368, 385], "fork": [2, 5, 60, 61, 62, 63, 64, 65, 66, 67, 68, 367, 368, 369, 370, 379, 380, 382, 385], "recreat": [2, 381], "customari": [2, 362], "moreov": [2, 3], "fine": [2, 3, 23, 79, 86, 102, 106, 122, 128, 140, 159, 374, 382], "grain": [2, 3, 79, 86, 102, 106, 122, 128, 140], "nomenclatur": 2, "compact": [2, 47, 70, 71, 77], "propos": [2, 143, 152, 224, 289, 298, 362, 370, 383], "replaybufferensembl": [2, 60, 84, 90, 97], "primit": [2, 3, 4, 66, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299], "individu": [2, 4, 17, 18, 19, 20, 36, 53, 79, 81, 92, 102, 106, 116, 117, 122, 128, 191, 367, 380], "dummi": [2, 3, 325, 367, 374, 386], "semant": [2, 32, 33, 105, 107, 362], "ident": [2, 3, 13, 14, 15, 36, 40, 42, 45, 86, 102, 105, 106, 107, 119, 122, 128, 152, 228, 229, 307, 308, 309, 310, 356, 357, 368, 371, 379, 380], "another_kei": [2, 81], "renam": [2, 40, 42, 45, 81, 168, 170, 200, 367], "resiz": [2, 3, 68, 81, 143, 368, 370, 371, 383, 386], "imag": [2, 3, 4, 7, 66, 145, 165, 181, 187, 223, 325, 327, 367, 368, 371, 375, 380, 382, 386], "comops": 2, "totensorimag": [2, 3, 68, 81, 143, 169, 368, 370, 383, 385, 386], "renametransform": [2, 81, 102, 106, 122, 128], "rb0": [2, 81], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 102, 106, 118, 122, 128, 133, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 155, 157, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 178, 180, 181, 182, 183, 185, 187, 189, 202, 212, 218, 222, 225, 237, 246, 247, 249, 250, 251, 252, 254, 255, 260, 262, 263, 265, 266, 268, 269, 270, 273, 276, 277, 278, 279, 280, 282, 283, 284, 290, 291, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 326, 327, 354, 362, 367, 368, 369, 370, 372, 373, 376, 378, 379, 380, 381, 382, 383, 385, 386], "pixel": [2, 3, 7, 26, 68, 81, 100, 101, 105, 107, 108, 125, 143, 145, 152, 155, 157, 161, 163, 165, 169, 181, 185, 187, 206, 233, 234, 325, 327, 362, 367, 368, 370, 375, 379, 382, 383, 385, 386], "rb1": [2, 81], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 102, 106, 118, 122, 128, 133, 141, 142, 143, 144, 145, 146, 148, 149, 151, 155, 157, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 178, 180, 181, 182, 185, 187, 189, 202, 212, 213, 218, 222, 225, 237, 238, 246, 247, 249, 250, 251, 252, 254, 256, 260, 262, 263, 264, 265, 266, 268, 269, 270, 273, 276, 277, 278, 283, 284, 290, 291, 294, 295, 296, 297, 305, 307, 308, 309, 310, 325, 327, 340, 354, 362, 367, 368, 369, 370, 372, 376, 378, 379, 380, 381, 382, 383, 385, 386], "pixels33": [2, 81], "data0": [2, 81], "244": [2, 81, 165, 187, 381], "data1": [2, 81], "_": [2, 8, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 103, 110, 129, 130, 144, 148, 150, 151, 159, 161, 168, 181, 189, 191, 249, 265, 270, 275, 276, 277, 279, 283, 284, 290, 294, 295, 297, 299, 307, 308, 309, 310, 329, 364, 367, 368, 369, 370, 376, 379, 380, 381, 383, 385], "rang": [2, 3, 4, 8, 11, 28, 41, 44, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 81, 92, 102, 103, 106, 116, 117, 122, 128, 170, 181, 189, 191, 217, 221, 291, 299, 363, 364, 367, 369, 370, 373, 374, 376, 379, 380, 381, 383, 385], "parent": [2, 3, 20, 26, 31, 32, 52, 61, 81, 90, 97, 102, 106, 122, 128, 136, 140, 143, 144, 147, 149, 152, 155, 156, 161, 165, 173, 177, 178, 179, 180, 182, 184, 185, 191, 218, 222, 250, 273, 292, 294, 311, 325, 327, 367, 374, 381, 385, 386], "basic": [2, 118, 362, 369, 373, 374, 376, 379, 386], "properti": [2, 3, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 118, 122, 128, 139, 182, 183, 189, 191, 211, 219, 230, 235, 243, 244, 245, 260, 292, 297, 372, 374, 381, 383], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 51, 52, 54, 55, 89, 95, 102, 106, 116, 117, 118, 121, 122, 123, 124, 128, 129, 130, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 200, 201, 203, 204, 206, 207, 208, 209, 212, 213, 216, 217, 218, 220, 221, 222, 223, 228, 229, 230, 231, 238, 239, 240, 241, 242, 244, 247, 249, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 338, 342, 347, 354, 362, 363, 364, 367, 368, 369, 370, 371, 379, 380, 381, 385, 386], "send": [2, 3, 8, 334, 385], "receiv": [2, 3, 36, 46, 102, 106, 122, 128, 182, 183, 191, 223, 313, 363, 367, 369, 373, 378, 381], "spawn": [2, 3, 4, 17, 21, 110, 119, 122, 128, 368, 379, 380], "check_env_spec": [2, 3, 106, 122, 136, 167, 325, 360, 369, 379, 380, 381], "saniti": [2, 3, 7, 193, 369], "utmost": 2, "commonli": [2, 79, 86, 87, 386], "emploi": [2, 231], "languag": [2, 23, 46], "scarc": 2, "address": [2, 383], "subdomain": 2, "facilit": [2, 3, 7, 164, 165, 179, 185, 187, 250, 251, 252, 362, 367, 370, 372, 381], "extern": [2, 3, 148, 151, 379, 386], "token": [2, 42, 43, 46, 51, 53, 69], "dm": [3, 367, 386], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 42, 44, 45, 49, 50, 53, 66, 83, 89, 92, 93, 95, 96, 98, 99, 102, 106, 110, 111, 112, 118, 119, 120, 122, 128, 129, 170, 179, 185, 186, 228, 250, 259, 276, 277, 279, 280, 282, 283, 284, 286, 290, 294, 295, 296, 297, 299, 334, 344, 362, 363, 364, 367, 368, 370, 371, 372, 373, 379, 380, 381, 383, 386], "goal": [3, 4, 60, 61, 62, 63, 64, 65, 66, 67, 68, 178, 367, 368, 369, 370, 380, 381], "abl": [3, 115, 123, 124, 367, 369, 370, 372, 378, 379, 380, 381, 383, 385], "experi": [3, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 78, 79, 193, 329, 330, 331, 332, 333, 334, 361, 368, 369, 374, 375, 379, 380, 383], "box": [3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 105, 107], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 102, 103, 106, 116, 117, 122, 123, 124, 126, 127, 128, 143, 146, 152, 158, 159, 161, 163, 168, 170, 173, 179, 182, 188, 189, 191, 325, 354, 367, 368, 369, 370, 378, 380, 382, 383, 385, 386], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 46, 98, 99, 102, 106, 118, 122, 128, 147, 150, 152, 159, 165, 179, 182, 183, 185, 187, 191, 202, 203, 204, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 232, 237, 238, 246, 249, 250, 251, 252, 254, 255, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 270, 273, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 354, 362, 363, 367, 368, 369, 370, 372, 373, 376, 378, 379, 380, 381, 382, 385], "organis": [3, 67, 102, 106, 122, 128, 183, 368], "arbitrari": [3, 39, 44, 102, 106, 122, 128, 139, 362, 367, 368, 381, 383], "structur": [3, 7, 40, 41, 42, 44, 45, 46, 49, 50, 53, 92, 102, 106, 122, 128, 148, 151, 201, 228, 261, 307, 308, 309, 310, 311, 360, 363, 367, 369, 370, 371, 374, 379, 380, 381, 382], "attribut": [3, 4, 23, 27, 29, 36, 40, 42, 45, 47, 53, 66, 102, 105, 106, 107, 122, 128, 136, 152, 165, 185, 189, 191, 218, 222, 266, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 367, 370, 381], "live": [3, 12, 13, 14, 15, 16, 18, 19, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 118, 122, 128, 152, 191], "actual": [3, 4, 7, 40, 42, 45, 60, 62, 63, 64, 66, 67, 68, 102, 106, 122, 128, 188, 347, 363, 367, 369, 379, 380, 381], "retriev": [3, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 84, 102, 105, 106, 107, 122, 128, 144, 149, 152, 161, 200, 202, 203, 225, 260, 262, 266, 269, 273, 276, 277, 278, 280, 291, 294, 295, 297, 299, 305, 307, 308, 309, 310, 358, 364, 368, 369, 372, 381, 386], "care": [3, 8, 102, 106, 122, 128, 182, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 327, 367, 369, 379, 380, 381, 383], "parametr": [3, 231, 266, 277, 283, 290, 297, 367, 369], "hardwar": 3, "observation_spec": [3, 102, 106, 118, 122, 128, 137, 140, 143, 144, 145, 146, 147, 148, 149, 151, 152, 155, 157, 158, 159, 161, 163, 165, 167, 169, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 191, 202, 218, 222, 225, 348, 354, 367, 369, 373, 378, 379, 380, 381, 386], "compositespec": [3, 32, 33, 57, 102, 104, 106, 118, 122, 128, 137, 140, 148, 149, 150, 151, 153, 159, 167, 168, 174, 177, 179, 182, 191, 197, 201, 202, 225, 249, 253, 262, 268, 269, 273, 360, 367, 369, 370, 379, 380, 381, 386], "pair": [3, 36, 40, 42, 45, 62, 100, 101, 102, 106, 122, 128, 170, 179, 218, 250, 262, 266, 292, 307, 308, 309, 310, 311, 362, 363, 367, 368, 369, 372, 373, 378, 381, 386], "state_spec": [3, 102, 106, 118, 122, 128, 137, 202, 225, 381, 386], "reward_spec": [3, 102, 106, 118, 122, 128, 137, 140, 141, 146, 147, 148, 149, 151, 167, 171, 172, 173, 175, 182, 184, 191, 202, 225, 369, 379, 380, 381, 386], "done_spec": [3, 102, 106, 122, 128, 148, 149, 151, 152, 167, 182, 191, 201, 379, 380, 381, 386], "flag": [3, 8, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 116, 117, 122, 128, 129, 130, 261, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 362, 379, 380, 381, 382], "input_spec": [3, 102, 106, 118, 122, 128, 136, 140, 147, 148, 149, 150, 161, 163, 167, 168, 173, 174, 177, 178, 179, 182, 183, 184, 186, 191, 369, 381], "full_action_spec": [3, 102, 106, 122, 128, 136, 202, 225, 369, 379, 380], "full_state_spec": [3, 102, 106, 122, 128, 136, 202, 225, 369], "lock": [3, 26, 32, 40, 42, 45, 102, 106, 122, 128, 140, 179, 189, 381], "output_spec": [3, 102, 106, 122, 128, 140, 147, 148, 149, 153, 159, 167, 168, 174, 177, 182, 183, 191, 381], "full_observation_spec": [3, 102, 106, 122, 128, 202, 225], "full_reward_spec": [3, 102, 106, 122, 128, 140, 149, 167, 379, 380], "full_done_spec": [3, 102, 106, 122, 128, 140, 149, 167, 201, 379, 380], "carri": [3, 20, 53, 102, 106, 122, 128, 179, 292, 368, 370, 379, 380, 381, 383], "nontensorspec": [3, 360], "importantli": [3, 262, 266], "action_s": 3, "help": [3, 4, 36, 102, 106, 122, 128, 152, 191, 276, 278, 291, 294, 296, 361, 363, 367, 368, 369, 370, 379, 380], "With": [3, 111, 112, 115, 178, 364, 368, 371, 373, 374, 375, 378, 379, 380, 383, 386], "necessarili": [3, 102, 106, 122, 128, 386], "present": [3, 36, 40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 85, 102, 105, 106, 122, 128, 153, 170, 174, 179, 183, 191, 200, 201, 205, 206, 207, 208, 209, 215, 218, 220, 222, 231, 236, 260, 261, 265, 266, 267, 268, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 358, 364, 367, 376, 378, 379, 380, 383, 385], "0s": [3, 60, 66, 179, 370], "step_and_maybe_reset": [3, 102, 106, 122, 128, 371], "done_kei": [3, 22, 29, 31, 37, 47, 70, 71, 77, 102, 106, 122, 128, 139, 143, 152, 170, 177, 191, 200, 379, 380], "assign": [3, 4, 13, 14, 16, 36, 40, 42, 45, 102, 106, 122, 128, 183, 191, 279, 280, 282, 297, 369, 372, 379, 380, 383], "_reset": [3, 102, 106, 118, 122, 128, 137, 139, 140, 143, 148, 151, 167, 201, 202, 225, 379], "data_": [3, 102, 106, 122, 128], "append": [3, 8, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 103, 106, 122, 128, 139, 146, 147, 170, 179, 183, 188, 217, 218, 221, 222, 255, 263, 367, 368, 369, 370, 379, 380, 381, 382, 383, 385], "seed": [3, 13, 14, 15, 16, 20, 67, 102, 106, 118, 122, 123, 124, 128, 129, 130, 137, 140, 148, 151, 167, 183, 193, 325, 344, 379], "determinist": [3, 13, 14, 15, 16, 17, 18, 19, 20, 36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 199, 205, 214, 233, 240, 249, 258, 262, 265, 266, 269, 277, 292, 340, 362, 367, 368, 370, 372, 373, 376, 379, 381, 386], "preced": [3, 36, 370], "risk": [3, 166], "overlap": [3, 49, 92], "reproduc": [3, 143, 193, 367, 369, 380], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 36, 40, 42, 43, 46, 51, 53, 69, 73, 74, 75, 78, 79, 94, 102, 106, 122, 128, 150, 171, 177, 178, 180, 243, 244, 245, 269, 277, 283, 284, 290, 292, 293, 297, 327, 341, 367, 368, 369, 370, 372, 379, 380, 383], "max_step": [3, 92, 102, 106, 116, 117, 118, 122, 128, 129, 130, 177, 191, 325, 371, 372, 373, 375, 376, 379, 380, 385, 386], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 46, 98, 99, 102, 106, 118, 122, 128, 142, 159, 213, 218, 222, 225, 237, 238, 246, 247, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 273, 277, 279, 283, 284, 286, 287, 288, 290, 292, 295, 297, 299, 305, 306, 307, 308, 309, 310, 340, 354, 360, 367, 369, 370, 373, 376, 378, 379, 380, 381, 382, 386], "trail": [3, 189], "treat": [3, 36, 372, 373], "figur": [3, 367, 369, 370, 380, 381, 386], "brief": [3, 369, 371, 373, 383], "deliveri": 3, "design": [3, 36, 39, 84, 90, 97, 102, 106, 116, 117, 122, 128, 136, 143, 166, 183, 191, 254, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 367, 368, 369, 370, 371, 372, 373, 378, 379, 380, 381, 383, 386], "metaclass": 3, "everi": [3, 8, 26, 32, 36, 39, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 88, 102, 106, 122, 128, 177, 178, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 229, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 344, 364, 367, 368, 369, 370, 371, 372, 379, 380, 381], "flank": [3, 370], "dual": 3, "strictli": [3, 8, 36, 102, 106, 122, 128, 183, 191, 297, 367, 369], "refer": [3, 7, 8, 9, 20, 23, 36, 40, 42, 45, 46, 102, 105, 106, 107, 122, 128, 183, 189, 191, 202, 213, 214, 225, 226, 227, 228, 233, 234, 239, 240, 256, 276, 285, 286, 287, 288, 294, 297, 307, 312, 320, 366, 367, 369, 372, 373, 374, 375, 379, 380, 383, 386], "union": [3, 11, 13, 15, 16, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 78, 79, 102, 106, 122, 128, 161, 165, 170, 172, 185, 187, 189, 191, 200, 204, 211, 226, 227, 228, 229, 230, 231, 235, 237, 243, 244, 245, 246, 265, 282, 284, 289, 295, 298, 320, 338, 340, 341, 349, 350, 352, 354, 355, 356, 357, 358], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 116, 117, 131, 367], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 60, 66, 79, 86, 87, 360], "adjac": [3, 22, 155, 260], "reli": [3, 179, 216, 217, 218, 220, 221, 222, 276, 363, 367, 369, 372, 374, 381, 386], "junction": 3, "inittrack": [3, 218, 222, 260, 367, 370], "tutori": [3, 359, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386], "scratch": [3, 8, 368, 381], "gym3": 3, "envpool": [3, 119, 120], "interfac": [3, 109, 121, 223, 230, 362, 367, 369, 375, 381, 383], "simultan": [3, 19, 119, 120, 122, 128, 381], "advantag": [3, 8, 215, 276, 278, 291, 294, 296, 307, 308, 309, 310, 311, 312, 314, 316, 318, 320, 321, 323, 363, 364, 367, 368, 369, 370, 380, 381, 386], "scale": [3, 4, 23, 62, 102, 106, 122, 128, 143, 159, 161, 172, 178, 181, 189, 214, 219, 232, 239, 240, 244, 245, 250, 251, 252, 262, 266, 268, 276, 277, 290, 294, 295, 296, 297, 342, 348, 358, 362, 367, 368, 369, 370, 372, 380, 385], "varieti": 3, "inherit": [3, 102, 106, 122, 128, 224, 292, 364, 369, 379, 380], "Of": [3, 7, 361, 381, 386], "cours": [3, 4, 361, 381, 386], "from_pixel": [3, 98, 99, 100, 101, 105, 107, 108, 111, 112, 125, 143, 169, 325, 327, 367, 368, 370, 371, 375, 376, 382, 383, 385, 386], "81": [3, 368, 381], "simpli": [3, 6, 40, 42, 45, 53, 90, 92, 97, 153, 174, 188, 292, 362, 363, 367, 369, 373, 379, 380, 386], "d": [3, 41, 44, 49, 50, 63, 65, 67, 68, 69, 78, 79, 216, 220, 262, 266, 385], "privat": [3, 102, 106, 122, 128, 188, 381, 386], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 34, 35, 39, 40, 42, 45, 60, 87, 92, 278, 291, 294, 335, 337, 340, 344, 347, 348, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 46, 81, 84, 161, 172, 219, 230, 239, 244, 245, 305, 362, 372, 373, 379, 381, 383], "inner": [3, 102, 106, 122, 128, 150, 364, 368, 369, 380, 386], "logic": [3, 379], "nevertheless": [3, 369, 371, 383], "kept": [3, 22, 85, 87, 150, 174, 182, 193, 200, 219, 244, 245, 373, 379], "mind": [3, 60, 66, 79, 86, 87, 102, 106, 122, 128, 379, 380], "desig": 3, "wherev": 3, "expos": [3, 125, 148, 151, 267, 368], "modif": [3, 5, 26, 32, 36, 102, 106, 122, 128, 155, 191, 201, 292, 369, 381], "lost": [3, 8, 188], "eras": [3, 79, 86, 102, 106, 122, 128, 183], "intern": [3, 365], "face": [3, 5, 8, 9, 371, 386], "NOT": [3, 70, 71, 77, 166], "outsid": [3, 15, 375, 379, 380, 381], "right": [3, 6, 7, 22, 46, 79, 86, 368, 369, 380, 381, 386], "preliminari": 3, "warranti": 3, "affect": [3, 8, 36, 102, 106, 122, 128, 182, 183, 191, 193, 307, 308, 309, 310, 379], "preclud": 3, "presenc": [3, 373], "annihil": 3, "reason": [3, 4, 8, 36, 66, 102, 106, 122, 123, 124, 128, 165, 185, 191, 222, 363, 367, 368, 369, 373, 374, 379, 381, 383], "advanc": [3, 20, 41, 44, 49, 50, 106, 371, 374, 383], "explicitli": [3, 4, 70, 71, 77, 139, 262, 368, 370, 374, 379, 380, 383], "superse": 3, "pettingzoowrapp": [3, 360], "group": [3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 60, 102, 106, 115, 116, 117, 122, 123, 124, 128, 129, 130, 131, 362, 368, 372, 374, 380, 383], "associ": [3, 36, 40, 42, 45, 102, 106, 122, 128, 191, 239, 358, 367, 383], "environemtn": 3, "__not__": [3, 40, 42, 45, 262], "constrain": [3, 159, 218, 222, 294], "li": 3, "fact": [3, 7, 8, 367, 369, 371, 379, 380, 381, 382, 383, 386], "predict": [3, 36, 46, 212, 214, 224, 225, 254, 271, 276, 278, 282, 285, 287, 288, 291, 294, 296, 306, 362, 367, 368, 373], "know": [3, 4, 9, 41, 44, 49, 50, 105, 107, 253, 295, 340, 367, 368, 369, 370, 371, 372, 373, 374, 379, 380, 383], "meaning": 3, "perfectli": [3, 364, 367, 381], "meaningless": 3, "val": [3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 373, 385], "agent0": 3, "agent1": 3, "overrid": [3, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 44, 52, 54, 55, 60, 102, 106, 122, 128, 139, 358, 362], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 79, 81, 84, 85, 86, 87, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 139, 140, 143, 144, 148, 150, 151, 152, 153, 155, 159, 160, 161, 163, 165, 167, 168, 170, 172, 173, 174, 177, 179, 181, 183, 184, 185, 187, 189, 191, 193, 200, 201, 202, 203, 204, 206, 207, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 230, 231, 244, 245, 249, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 305, 307, 308, 309, 310, 313, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 334, 337, 338, 340, 341, 342, 344, 358, 368, 369, 370, 371, 372, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "500": [3, 367, 368, 381, 385, 386], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 60, 63, 122, 128], "bottleneck": [3, 8, 79, 86, 87], "great": [3, 7, 8, 379, 385], "speedup": [3, 8, 379, 386], "precis": [3, 148, 151, 200, 217, 221, 367, 369], "misspecifi": 3, "caus": [3, 7, 8, 73, 74, 94, 102, 106, 110, 122, 128, 166, 386], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 66, 102, 106, 122, 128, 131, 143, 154, 160, 170, 178, 179, 180, 183, 191, 193, 253, 257, 258, 261, 297, 367, 369, 379, 380, 383, 386], "mismatch": [3, 368], "subprocess": [3, 13, 14, 16, 103, 122, 128], "multithreadedenv": [3, 360], "underneath": 3, "higher": [3, 4, 79, 146, 269, 367, 368, 369, 379, 383, 386], "flexibl": [3, 9, 119, 300, 363, 364, 367, 383, 386], "cover": [3, 105, 107, 361, 369, 371, 374, 375, 381, 385], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 68, 69, 81, 102, 106, 115, 118, 121, 122, 123, 124, 128, 140, 147, 148, 149, 152, 153, 159, 165, 167, 168, 174, 177, 179, 182, 183, 185, 187, 189, 191, 195, 199, 203, 204, 223, 228, 229, 231, 237, 246, 253, 255, 262, 265, 266, 273, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 301, 305, 313, 325, 356, 360, 362, 367, 368, 369, 374, 379, 380, 381, 383, 386], "atari": [3, 4, 60, 143, 327, 375, 386], "classic": [3, 118, 124, 368], "benchmark_batched_env": 3, "seamlessli": [3, 381], "infrastructur": [3, 379, 380], "act": [3, 4, 86, 87, 123, 124, 183, 212, 229, 277, 279, 290, 295, 297, 299, 370, 379, 380, 383], "world": [3, 5, 118, 271, 287, 375, 379, 380, 381, 386], "paradigm": [3, 16, 380], "decpodp": 3, "game": [3, 4, 5, 60, 116, 117, 327, 375], "thank": [3, 367, 371], "carrier": [3, 369, 370, 371, 383], "particular": [3, 36, 53, 62, 63, 102, 106, 122, 128, 183, 191, 363, 364, 368, 370, 371, 378, 380, 383], "thu": [3, 291, 380], "let": [3, 6, 7, 36, 41, 44, 49, 50, 51, 102, 106, 122, 123, 124, 128, 143, 191, 218, 222, 228, 229, 255, 340, 363, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "vma": [3, 129, 130, 325, 379, 380], "robot": [3, 5, 7, 66, 165, 185, 187, 380], "vmasenv": [3, 325, 360, 379, 380], "balanc": [3, 100, 101, 367, 368], "num_env": [3, 20, 105, 109, 120, 129, 130, 325, 379, 380], "n_agent": [3, 129, 130, 228, 229, 237, 246, 305, 325, 379, 380], "ground_rew": 3, "pos_rew": [3, 380], "style": [3, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68], "relat": [3, 4, 10, 41, 122, 155, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 368, 376, 381], "vari": [3, 105, 107, 108, 123, 124, 125, 129, 166, 380], "creation": [3, 122, 128, 386], "info_spec": [3, 122], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 39, 98, 99, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 137, 167, 201, 280, 283, 284, 305, 360, 379, 380, 386], "simpl": [3, 9, 36, 39, 102, 106, 122, 128, 191, 206, 260, 266, 280, 282, 292, 296, 307, 362, 363, 367, 368, 369, 371, 372, 373, 379, 380, 383, 386], "prefix": [3, 22, 36, 40, 42, 45, 53, 102, 106, 122, 128, 183, 191, 262, 292, 297, 326, 370, 373, 386], "exactli": [3, 36, 102, 106, 108, 122, 128, 183, 191, 216, 220, 297, 367, 370, 374, 379, 380], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 102, 106, 122, 128, 136, 137, 150, 192, 200, 202, 224, 225, 253, 257, 258, 260, 261, 379, 380], "reward_kei": [3, 29, 31, 37, 47, 70, 71, 77, 102, 106, 122, 128, 191, 200, 202, 225, 338, 342, 379, 380], "set_kei": [3, 152, 276, 278, 280, 283, 284, 285, 290, 291, 292, 294, 295, 296, 297, 305, 311, 367, 379, 380], "awai": [3, 369, 371, 379, 380], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 34, 35, 38, 39, 52, 54, 55, 102, 106, 122, 128, 177, 266], "full": [3, 102, 106, 122, 128, 218, 222, 256, 335, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "autoresettransform": 3, "invalid": [3, 36, 92, 102, 106, 122, 128, 131, 191, 226, 227], "nan": [3, 139, 188], "auto_reset": [3, 102, 106, 122, 128, 139, 191, 381], "auto_reset_replac": [3, 139], "placehold": [3, 108, 152, 183], "set_gym_backend": [3, 102, 105, 106, 122, 128, 132, 139, 360, 371], "autoresettinggymenv": [3, 139], "_step": [3, 102, 106, 122, 128, 137, 139, 140, 148, 151, 155, 167, 168], "self": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 36, 40, 42, 45, 102, 106, 118, 122, 128, 137, 139, 140, 147, 148, 151, 165, 167, 179, 182, 183, 185, 187, 191, 202, 213, 225, 237, 246, 253, 257, 262, 265, 270, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 364, 367, 381, 385, 386], "super": [3, 118, 137, 139, 140, 148, 151, 167, 202, 213, 225, 270, 277, 279, 284, 290, 295, 297, 299, 367, 381, 385, 386], "td_reset": [3, 139], "exclud": [3, 8, 62, 67, 102, 106, 122, 128, 139, 143, 153, 200, 237, 379, 380, 383], "r": [3, 4, 36, 136, 137, 139, 146, 161, 175, 189, 217, 266, 275, 306, 325, 362, 368, 381, 386], "break_when_any_don": [3, 102, 106, 122, 128, 139, 191, 260, 380], "3633e": [3, 139], "02": [3, 102, 106, 122, 128, 139, 366, 367, 368, 369, 376, 379, 380, 381, 382, 384], "4877e": [3, 139], "01": [3, 139, 161, 261, 272, 278, 291, 294, 366, 367, 368, 370, 380, 381, 382, 384], "2849e": [3, 139], "7584e": [3, 139], "6609e": [3, 139], "6166e": [3, 139], "8366e": [3, 139], "2761e": [3, 139], "5685e": [3, 139], "4102e": [3, 139], "8111e": [3, 139], "9959e": [3, 139], "0865e": [3, 139], "5644e": [3, 139], "2119e": [3, 139], "2542e": [3, 139], "03": [3, 102, 106, 122, 128, 139, 161, 367, 368, 381, 382], "9952e": [3, 139], "4059e": [3, 139], "2094e": [3, 139], "9009e": [3, 139], "5140e": [3, 139], "3554e": [3, 139], "2920e": [3, 139], "7893e": [3, 139], "6429e": [3, 139], "3057e": [3, 139], "2867e": [3, 139], "6963e": [3, 139], "3818e": [3, 139], "2576e": [3, 139], "2679e": [3, 139], "1640e": [3, 139], "00": [3, 98, 99, 139, 366, 367, 368, 369, 370, 379, 380, 381, 382, 384], "6972e": [3, 139], "0212e": [3, 139], "5959e": [3, 139], "4637e": [3, 139], "3121e": [3, 139], "2168e": [3, 139], "5232e": [3, 139], "7704e": [3, 139], "7457e": [3, 139], "4127e": [3, 139], "1064e": [3, 139], "0854e": [3, 139], "5712e": [3, 139], "2189e": [3, 139], "5235e": [3, 139], "8289e": [3, 139], "0009e": [3, 139], "0257e": [3, 139], "8893e": [3, 139], "5872e": [3, 139], "9405e": [3, 139], "7766e": [3, 139], "0403e": [3, 139], "0626e": [3, 139], "2959e": [3, 139], "7263e": [3, 139], "2775e": [3, 139], "9564e": [3, 139], "0411e": [3, 139], "6769e": [3, 139], "6354e": [3, 139], "8698e": [3, 139], "1765e": [3, 139], "6292e": [3, 139], "5375e": [3, 139], "1820e": [3, 139], "7023e": [3, 139], "5836e": [3, 139], "9016e": [3, 139], "4826e": [3, 139], "6191e": [3, 139], "6387e": [3, 139], "8667e": [3, 139], "2056e": [3, 139], "1147e": [3, 139], "5991e": [3, 139], "0278e": [3, 139], "5219e": [3, 139], "3067e": [3, 139], "6617e": [3, 139], "3322e": [3, 139], "2629e": [3, 139], "4599e": [3, 139], "7298e": [3, 139], "5848e": [3, 139], "0148e": [3, 139], "5745e": [3, 139], "6982e": [3, 139], "7877e": [3, 139], "3527e": [3, 139], "7285e": [3, 139], "6668e": [3, 139], "0583e": [3, 139], "6956e": [3, 139], "3962e": [3, 139], "9845e": [3, 139], "5015e": [3, 139], "5903e": [3, 139], "9993e": [3, 139], "9418e": [3, 139], "0196e": [3, 139], "6557e": [3, 139], "2109e": [3, 139], "8997e": [3, 139], "1507e": [3, 139], "7363e": [3, 139], "0310e": [3, 139], "9574e": [3, 139], "8980e": [3, 139], "0090e": [3, 139], "forecast": 3, "awar": [3, 7, 73, 74, 75, 88, 90, 94, 368, 370], "detect": [3, 68], "return_contigu": [3, 102, 106, 122, 128, 193, 378], "unboundedcontinuoustensorspec": [3, 102, 106, 118, 122, 128, 137, 140, 148, 151, 167, 179, 197, 202, 225, 249, 265, 268, 270, 273, 296, 360, 369, 370, 379, 380, 381, 386], "boundedtensorspec": [3, 21, 26, 102, 106, 122, 128, 192, 257, 258, 261, 262, 269, 276, 277, 279, 290, 294, 295, 297, 299, 360, 369, 379, 380, 381, 385, 386], "binarydiscretetensorspec": [3, 137, 280, 283, 284, 305, 360], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 32, 33, 36, 40, 42, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 102, 104, 106, 122, 128, 137, 139, 140, 142, 143, 144, 147, 148, 149, 152, 153, 154, 155, 158, 159, 164, 166, 167, 168, 170, 173, 174, 177, 178, 179, 180, 182, 183, 188, 189, 191, 200, 201, 202, 218, 222, 224, 225, 253, 254, 256, 257, 260, 261, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 344, 367, 379, 381], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 14, 16, 23, 25, 27, 28, 36, 39, 41, 46, 49, 54, 66, 78, 79, 81, 102, 106, 122, 128, 136, 139, 143, 147, 148, 151, 159, 161, 165, 170, 171, 172, 178, 179, 181, 182, 183, 185, 187, 189, 191, 211, 214, 216, 219, 220, 223, 226, 227, 230, 231, 239, 240, 243, 245, 253, 265, 269, 272, 274, 275, 276, 277, 278, 282, 283, 284, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320, 342, 367, 368, 383, 386], "_set_se": [3, 137, 140, 148, 151, 167, 381], "lazystackedtensordict": [3, 32, 60, 102, 106, 118, 122, 128, 378], "float32": [3, 13, 14, 15, 26, 29, 40, 41, 42, 45, 46, 47, 49, 50, 52, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 78, 79, 94, 98, 99, 102, 105, 106, 107, 111, 112, 118, 121, 122, 126, 127, 128, 129, 130, 136, 140, 148, 151, 152, 153, 161, 163, 167, 168, 170, 174, 177, 179, 181, 197, 200, 202, 212, 213, 218, 222, 225, 237, 238, 246, 249, 250, 251, 252, 254, 255, 260, 261, 262, 263, 264, 265, 268, 270, 273, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 305, 362, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386], "exclusive_field": [3, 60, 378], "stack_dim": [3, 60, 378], "dramat": 3, "carefulli": [3, 379, 380, 386], "against": [3, 5, 7, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 102, 106, 122, 128, 191, 193, 249, 255, 256, 262, 263, 264, 265, 266, 369, 379, 380], "plain": [3, 8, 371], "larg": [3, 4, 28, 40, 42, 45, 148, 151, 185, 276, 278, 291, 294, 296, 368, 369, 379, 380, 383], "expens": [3, 79, 86, 87, 325, 383], "absent": [3, 26, 32, 62, 102, 106, 122, 128, 183], "torchvis": [3, 165, 187, 329, 379, 385, 386], "base_env": [3, 99, 102, 106, 107, 112, 122, 128, 136, 137, 140, 146, 148, 150, 151, 159, 163, 167, 169, 175, 177, 179, 180, 183, 191, 327, 367, 368, 369, 379, 382, 385, 386], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 103, 106, 118, 122, 128, 135, 138, 140, 147, 152, 179, 183, 191, 203, 204, 223, 275, 325, 349, 350, 356, 357, 358, 368, 383], "bring": [3, 369, 371, 386], "signific": [3, 5, 8, 369, 386], "kind": [3, 44, 52, 200, 373, 379, 383], "consult": 3, "interest": [3, 262, 266, 362, 368, 369, 371, 380, 381, 386], "resize_par": 3, "easi": [3, 5, 60, 65, 100, 101, 102, 106, 111, 112, 122, 128, 253, 257, 258, 261, 362, 363, 367, 368, 369, 380, 382, 383, 386], "graph": [3, 4, 8, 98, 99, 111, 112, 303, 304, 367, 381], "revers": [3, 220], "order": [3, 15, 36, 39, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 85, 87, 102, 106, 122, 128, 144, 148, 151, 163, 183, 191, 249, 255, 265, 267, 268, 270, 276, 277, 279, 283, 284, 290, 294, 295, 296, 297, 299, 368, 379, 380], "chain": [3, 40, 41, 42, 44, 45, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 147, 150, 203, 204, 268, 386], "invers": [3, 4, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 143, 148, 151, 153, 161, 170, 191, 274, 283, 290, 381], "in_keys_inv": [3, 133, 146, 148, 149, 151, 161, 162, 163, 167, 168, 170, 175, 182, 367, 378, 381, 386], "append_transform": [3, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 133, 136, 142, 165, 179, 183, 185, 189, 325, 367, 370, 379, 381, 383, 385, 386], "doubletofloat": [3, 367, 369, 378], "float64": [3, 36, 60, 61, 62, 63, 64, 65, 66, 67, 68, 100, 101, 102, 106, 116, 117, 122, 128, 136, 147, 148, 151, 165, 179, 182, 183, 185, 187, 191, 265, 378], "regist": [3, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 105, 106, 107, 122, 128, 148, 151, 152, 173, 183, 191, 200, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 325, 327, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 364, 367, 369, 371, 383], "manipul": [3, 4, 8, 100, 101, 165, 185], "third_transform": 3, "unexpect": [3, 36, 102, 106, 122, 128, 191, 386], "behviour": 3, "fortun": [3, 370, 371, 372, 375], "alreadi": [3, 8, 11, 36, 40, 42, 45, 53, 60, 102, 106, 122, 128, 179, 191, 201, 266, 307, 308, 309, 310, 367, 369, 375, 379, 380], "chang": [3, 5, 7, 36, 41, 44, 49, 50, 60, 73, 74, 75, 79, 85, 86, 88, 90, 94, 102, 106, 122, 128, 140, 147, 148, 149, 151, 153, 159, 167, 168, 174, 177, 182, 183, 189, 191, 220, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 363, 367, 370, 379, 380, 381, 382, 383, 386], "catfram": [3, 260, 368], "hold": [3, 303, 304, 381, 383], "notic": [3, 92, 143, 369, 376, 381], "parenthood": 3, "henc": [3, 41, 166, 201, 228, 362, 367, 369, 379, 380, 381], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 122, 128, 325, 381], "discret": [3, 24, 28, 34, 35, 39, 55, 102, 105, 106, 107, 116, 117, 122, 123, 124, 128, 129, 130, 136, 150, 235, 238, 282, 283, 284, 285, 362, 368, 372, 379, 380, 381, 386], "might": [3, 40, 42, 43, 45, 331, 361, 367, 371, 386], "action_mask": [3, 111, 112, 123, 124, 126, 127, 137], "unavail": [3, 123, 124], "probabl": [3, 4, 8, 46, 81, 84, 211, 213, 216, 218, 220, 222, 223, 226, 227, 235, 244, 245, 257, 262, 266, 362, 368, 372, 385], "categor": [3, 28, 35, 39, 98, 99, 105, 107, 108, 111, 112, 116, 117, 119, 120, 123, 124, 125, 129, 130, 136, 137, 152, 213, 235, 238, 255, 256, 262, 263, 264, 280, 283, 284, 305, 370], "probabilistictensordictmodul": [3, 159, 266, 267, 385], "tensordictsequenti": [3, 218, 222, 255, 257, 260, 267, 273, 362, 367, 368, 370, 372, 376, 378, 379, 382, 385], "maskedcategor": [3, 227, 360], "linear": [3, 13, 14, 15, 16, 20, 36, 98, 99, 102, 106, 118, 122, 128, 147, 159, 165, 179, 182, 183, 185, 187, 191, 202, 203, 204, 206, 207, 208, 209, 213, 215, 223, 225, 228, 229, 230, 231, 232, 238, 239, 240, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 265, 268, 270, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 354, 362, 368, 378, 382, 385], "in_feat": 3, "out_feat": 3, "logit": [3, 42, 46, 212, 226, 227, 235, 256, 262, 283, 284, 362], "dist": [3, 10, 226, 227, 235, 372], "distribution_class": [3, 159, 250, 251, 252, 254, 262, 266, 268, 276, 277, 283, 284, 290, 294, 295, 296, 297, 362, 367, 369, 372, 379, 380, 385], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 36, 46, 64, 98, 99, 102, 106, 107, 111, 112, 117, 120, 122, 123, 124, 128, 130, 191, 193, 218, 222, 247, 250, 251, 252, 253, 258, 260, 261, 263, 271, 292, 305, 362, 367, 368, 369, 370, 373, 376, 379, 380, 386], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 137, 166, 191], "enviorn": [3, 116, 123, 124, 129, 130], "itself": [3, 36, 102, 106, 122, 128, 132, 139, 191, 292, 369, 371], "ey": 3, "report": [3, 98, 99, 111, 112, 375], "foremost": 3, "callback": [3, 102, 106, 122, 128, 380], "ad": [3, 4, 15, 22, 36, 40, 41, 42, 44, 45, 49, 50, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 102, 106, 122, 128, 173, 183, 191, 230, 231, 261, 276, 278, 280, 285, 291, 294, 297, 305, 368, 370, 372, 379, 383, 386], "track": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 50, 78, 79, 85, 173, 189, 191, 260, 261, 332, 337, 368, 370, 371, 374, 380, 381, 383], "tensordictrecord": [3, 360], "render": [3, 8, 112, 129, 325, 327, 340, 367, 368, 369, 371, 375], "videorecord": [3, 325, 360, 369, 375, 376, 379], "csvlogger": [3, 325, 327, 360, 368, 375, 376, 379], "wandblogg": [3, 360, 375], "tensorboardlogg": [3, 354, 360, 375], "tag": [3, 7, 325, 327, 329, 332, 358, 375, 376, 379], "mp4": [3, 325, 327, 329, 376, 379], "video_format": [3, 325, 327, 329, 376, 379], "whc": 3, "cwh": 3, "exp": [3, 232, 275], "al": [3, 23, 105, 107, 152, 163, 202, 386], "pong": [3, 60, 120, 163, 386], "v5": [3, 105, 107, 120, 152, 163, 386], "cach": [3, 40, 42, 53, 60, 62, 63, 64, 66, 67, 68, 69, 79, 86, 102, 106, 122, 128, 139, 148, 151, 165, 183, 187, 200, 336, 382], "grow": 3, "until": [3, 7, 20, 180, 182, 191, 369, 370, 376, 379, 380], "dumpi": 3, "tediou": [3, 371], "workspac": [3, 102, 106, 122, 128], "pixelrendertransform": [3, 360, 379], "stream": [3, 66], "alik": [3, 325], "envcreat": [3, 15, 21, 122, 128, 325, 354, 355, 358, 360, 367, 368, 385, 386], "render_mod": [3, 325, 381], "rgb_arrai": [3, 325, 379, 380, 381], "uncom": [3, 375], "line": [3, 7, 36, 60, 102, 106, 122, 128, 191, 368, 375, 379, 380, 386], "comment": [3, 364, 368, 385], "pixels_record": [3, 325], "close": [3, 15, 106, 119, 159, 276, 278, 291, 294, 325, 367, 368, 371, 378, 379, 381, 385], "mission": 3, "irrespect": [3, 265, 266], "dmcontrol": [3, 102, 106, 122, 128], "jumanji": [3, 102, 106, 111, 112, 122, 128], "special": [3, 360, 362, 367, 370, 386], "framework": [3, 4, 9, 21, 98, 99, 102, 106, 111, 112, 118, 122, 128, 216, 385, 386], "Its": [3, 36, 40, 42, 45, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 189, 191, 265, 311], "success": [3, 60, 61, 62, 63, 64, 65, 66, 67, 68, 143, 182, 257, 368, 374, 376, 381, 383, 385], "foundat": [3, 5, 123, 124, 369, 380], "inspir": [3, 381], "gone": [3, 4, 5, 260], "hard": [3, 7, 92, 100, 101, 122, 289, 368, 386], "prefer": [3, 13, 14, 16, 19, 22, 23, 41, 44, 49, 50, 166, 174, 294, 341, 362, 369, 379, 380, 383], "maintain": [3, 5, 9, 27, 381], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 368, 369, 370, 374, 379, 380, 381, 383, 386], "decor": [3, 8, 11, 135, 292, 307, 308, 309, 310, 385], "relev": [3, 46, 307, 308, 309, 310, 311, 334, 381], "gym_backend": [3, 135, 360], "env1": [3, 378], "venv": 3, "python3": [3, 6, 7, 10, 386], "site": [3, 6, 7, 67, 135, 386], "env2": [3, 378], "_env": [3, 6, 105, 386], "classic_control": 3, "pendulumenv": [3, 381], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 114, 132], "handi": [3, 102, 106, 122, 128, 375], "side": [3, 4, 386], "v0": [3, 13, 14, 102, 106, 108, 111, 112, 113, 114, 122, 128, 147, 183, 189, 354, 371, 373, 374, 375, 386], "26": [3, 102, 106, 122, 128, 368, 379, 381, 382], "fun": [3, 11, 135, 369, 379, 380], "reveal": 4, "bug": [4, 385], "curv": 4, "exploit": [4, 372], "video": [4, 9, 327, 329, 340, 358, 360, 376, 379, 380], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 23, 159, 379, 380, 382], "coeffici": [4, 23, 27, 46, 159, 380], "bonu": [4, 276, 278, 291, 294], "beta": [4, 41, 49, 78, 79, 283, 290, 291, 367, 368, 383, 385], "reduc": [4, 6, 28, 92, 178, 244, 360, 368, 379], "downstream": [4, 367], "formul": [4, 379, 380], "ob": [4, 8, 22, 26, 32, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 81, 86, 87, 92, 102, 106, 122, 128, 137, 139, 148, 149, 151, 161, 175, 181, 197, 200, 206, 207, 208, 209, 228, 229, 263, 270, 277, 279, 284, 290, 295, 297, 299, 307, 308, 309, 310, 368, 378, 379, 381, 383, 385, 386], "rate": [4, 60, 189, 306, 368, 369, 379, 380], "gradient": [4, 36, 102, 106, 122, 128, 183, 191, 219, 227, 231, 235, 244, 245, 276, 278, 279, 283, 284, 290, 291, 292, 294, 295, 296, 297, 299, 306, 307, 308, 309, 310, 344, 367, 369, 379, 380, 381], "easier": [4, 362, 367], "local": [4, 7, 10, 15, 20, 36, 79, 86, 102, 106, 122, 128, 183, 191, 228, 229, 237, 246, 305, 332, 334, 375, 376, 379, 380], "optima": 4, "sens": [4, 40, 42, 45, 374, 381], "product": [4, 9, 216, 217, 220, 221, 356, 357], "sum": [4, 20, 35, 39, 92, 98, 99, 100, 101, 105, 107, 108, 111, 112, 119, 120, 125, 142, 173, 226, 227, 244, 246, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 291, 293, 294, 295, 296, 297, 299, 306, 313, 363, 367, 368, 369, 370, 373, 376, 379, 380, 381, 386], "stat": [4, 161, 189, 348, 358, 368, 369], "w": [4, 81, 143, 145, 169, 181, 216, 261, 327, 368, 370, 383], "yield": [4, 15, 20, 36, 102, 106, 122, 128, 191, 292, 367, 373], "insight": 4, "auxiliari": [4, 373], "credit": 4, "futur": [4, 36, 40, 42, 45, 70, 71, 77, 102, 106, 122, 128, 165, 183, 187, 191, 223, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 361, 385], "past": [4, 260, 368, 383], "spars": [4, 370], "intermedi": [4, 13, 14, 142, 218, 222, 256, 367, 382], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 367], "discov": 4, "score": [4, 46], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 385], "select": [4, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 116, 117, 123, 124, 129, 130, 137, 139, 140, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 164, 166, 167, 168, 170, 173, 174, 177, 178, 179, 180, 182, 185, 186, 188, 189, 191, 192, 202, 218, 222, 255, 263, 343, 367, 371, 383], "fall": [4, 62], "explicit": [4, 11, 53, 81, 383], "mechan": [4, 36, 102, 106, 122, 128, 183, 191, 368, 373, 381], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 23, 102, 106, 122, 128, 220, 283, 290, 369, 380], "addition": 4, "timestep": [4, 46, 62, 170, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 379, 380], "realli": 4, "huge": [4, 229, 370], "std": [4, 161, 189, 232, 236, 253, 367, 386], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 366, 370, 371, 373, 374, 375, 376, 377, 378, 382, 383, 384], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 36, 40, 41, 42, 44, 45, 46, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 92, 102, 106, 122, 128, 142, 161, 165, 179, 182, 183, 185, 190, 191, 202, 216, 217, 220, 221, 225, 230, 231, 253, 257, 258, 260, 261, 276, 277, 279, 280, 282, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 358, 367, 368, 370, 371, 372, 374, 379, 381, 386], "estim": [4, 60, 79, 86, 87, 152, 159, 206, 244, 250, 251, 252, 276, 277, 278, 279, 280, 282, 284, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 363, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "unseen": 4, "extrins": 4, "wrong": [4, 79, 86], "bonus": 4, "denser": 4, "prior": [4, 240, 287, 380], "freshli": 4, "drop": [4, 85, 87, 200], "meant": [4, 36, 118], "encourag": [4, 122, 367, 368, 383], "measur": [4, 73, 74, 94, 98, 99, 111, 112, 369, 374], "novelti": 4, "revisit": 4, "previous": [4, 369, 386], "diminish": 4, "decreas": [4, 23, 372], "ideal": [4, 161, 381], "down": [4, 13, 14, 15, 16, 370, 371], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 40, 42, 45, 368, 369, 370, 373, 374, 379, 380, 381, 385, 386], "distil": 4, "nois": [4, 190, 231, 248, 261, 295, 299, 340, 358, 367, 379], "exploratori": [4, 276, 278, 291, 294], "misalign": 4, "trade": [4, 372], "unavoid": 4, "divers": [4, 122, 128], "bootstrap": [4, 285, 308, 314, 315, 367, 370], "noisi": [4, 230, 231, 248, 362], "unstabl": [4, 219, 244, 245], "inher": 4, "stochast": [4, 159, 214, 231, 233, 240, 277, 281, 283, 284, 290, 293, 295, 297, 362, 369, 372, 380], "enemi": 4, "pomdp": [4, 383], "loos": [4, 362, 368, 369], "nonexist": 4, "architectur": [4, 210, 373, 379, 380], "sequenc": [4, 13, 14, 15, 16, 23, 26, 32, 34, 35, 41, 43, 44, 46, 51, 53, 66, 69, 72, 81, 82, 84, 90, 93, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 133, 141, 142, 143, 144, 145, 148, 150, 151, 155, 157, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 178, 180, 181, 182, 189, 203, 204, 211, 213, 216, 220, 223, 226, 227, 228, 229, 235, 238, 242, 254, 267, 268, 281, 326, 327, 339, 340, 341, 343, 344, 362, 367, 369, 370, 378, 379, 380, 386], "lstm": [4, 179, 221, 222, 232], "rel": [4, 81, 179, 211, 243, 367, 368, 379, 380, 383], "tend": 4, "stabl": [4, 9, 10, 121], "compens": 4, "descent": [4, 231], "minimum": [4, 122, 128, 171, 214, 232, 243, 244, 245, 269, 272, 275, 277, 284, 292, 293, 297, 335, 367, 369, 376, 379, 380], "manual": [4, 17, 19, 20, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 106, 107, 367, 370, 383], "deviat": [4, 161, 189, 202, 214, 225, 230, 231, 236, 253, 294, 299, 367, 372, 380], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 79, 86, 139, 216, 217, 220, 221, 371, 372, 373, 374, 375, 376], "stabil": [4, 156, 276, 278, 291, 294, 296], "stage": [4, 367, 381], "never": [4, 13, 14, 16, 79, 374], "prevent": [4, 26, 32, 71, 189, 219, 244, 245, 276, 278, 291, 294, 296, 342, 383], "entir": [4, 66, 102, 106, 122, 128, 228, 369, 371, 381, 383], "submit": [4, 105, 140, 361, 385], "system": [4, 5, 71, 369, 379, 380, 381], "adequ": [4, 193, 369, 379, 380], "infeas": 4, "allevi": [4, 362], "prune": 4, "fire": [4, 36, 102, 106, 122, 128, 191], "illeg": 4, "move": [4, 36, 68, 102, 106, 122, 128, 136, 147, 149, 165, 179, 182, 183, 185, 187, 189, 191, 200, 223, 265, 342, 367, 368, 370, 371, 385, 386], "chess": 4, "combin": [4, 30, 182, 368, 375, 383], "grasp": 4, "top": [4, 92, 98, 99, 111, 112, 202, 225, 372], "wherein": 4, "cumul": [4, 173, 178, 202, 313, 369], "q": [4, 9, 102, 106, 122, 128, 206, 207, 208, 209, 212, 213, 215, 237, 238, 246, 252, 256, 263, 264, 277, 279, 280, 282, 283, 284, 285, 289, 290, 295, 297, 299, 305, 360, 367, 373], "flow": [4, 367, 369, 379, 380, 381, 383], "reparameter": [4, 211, 227, 235], "soft": [4, 289, 297, 298, 379], "critic": [4, 8, 250, 259, 276, 278, 279, 283, 284, 290, 291, 294, 295, 296, 297, 299, 367, 373], "clip": [4, 46, 146, 171, 276, 278, 291, 294, 296, 299, 344, 369, 380, 381], "oppos": [4, 53], "incorrect": 4, "thought": [4, 102, 106, 122, 128], "bound": [4, 20, 25, 26, 36, 40, 42, 45, 102, 106, 122, 128, 146, 160, 189, 191, 239, 240, 249, 255, 256, 261, 262, 263, 264, 265, 266, 269, 299, 362, 367, 368, 369, 379, 386], "region": 4, "squash": [4, 370, 385], "tanh": [4, 203, 204, 216, 217, 219, 220, 221, 223, 229, 243, 244, 245, 269, 369, 372, 379, 380, 381, 382, 385], "prob": [4, 226, 227, 235, 369, 380], "rememb": [4, 379], "remap": 4, "origin": [4, 8, 40, 42, 45, 46, 110, 149, 150, 159, 165, 183, 187, 191, 216, 262, 265, 266, 289, 292, 294, 367, 378, 381, 386], "histor": 5, "ceas": 5, "farama": [5, 64, 113, 114, 123, 124, 369, 381], "bc": [5, 385], "best": [5, 9, 110, 218, 222, 379, 380, 383, 385], "gymwrapp": [5, 102, 106, 122, 128, 153, 174, 177, 188, 360, 369, 385, 386], "feel": [5, 361, 376, 385], "free": [5, 7, 148, 151, 276, 287, 294, 364, 369, 376, 380, 385], "gladli": 5, "prepar": [6, 31, 63, 369], "conda": [6, 7, 361], "cmake": 6, "activ": [6, 7, 9, 203, 204, 210, 214, 223, 228, 229, 278, 291, 294, 362, 381, 385], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 63, 361], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 108], "y": [6, 7, 44, 121, 215, 228, 247, 367, 380, 383], "facebookresearch": [6, 63, 108], "subdirectori": 6, "verbos": [6, 376], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 57, 102, 106, 122, 128, 167, 176, 191, 292, 379, 380, 385, 386], "command": [6, 7, 10, 369, 379, 380, 381, 386], "readm": [6, 7, 129], "md": [6, 7], "habitatenv": [6, 360], "_has_habitat": 6, "available_env": [6, 98, 99, 100, 101, 102, 105, 106, 107, 108, 111, 112, 113, 116, 117, 121, 122, 125, 126, 127, 128, 129, 130, 386], "startswith": [6, 363, 367, 373], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 103, 292, 367], "env_nam": [6, 98, 100, 102, 105, 106, 108, 111, 113, 119, 122, 125, 128, 367, 369, 386], "llvmlite": 6, "config": [6, 7, 165, 187, 205, 210, 236, 348, 349, 350, 352, 355], "var": [6, 7, 36, 102, 106, 122, 128, 183, 191, 292, 297], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 255, 292], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 36, 102, 106, 122, 128, 183, 191, 292, 297, 383], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 102, 368, 376], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 62], "stand": [7, 30, 100, 101, 122, 128, 378, 381], "joint": [7, 368], "contact": [7, 43, 379], "engin": [7, 125, 381], "biomechan": 7, "graphic": 7, "anim": [7, 380], "area": 7, "demand": [7, 375, 386], "fast": [7, 9, 98, 99, 168, 200, 295, 367, 368, 369], "articul": 7, "acquir": [7, 369], "deepmind": [7, 8, 9, 66, 100, 101, 102, 106, 116, 117, 122, 128, 152, 369, 371], "whomev": 7, "licenc": 7, "incorpor": [7, 102, 106, 122, 128, 253, 257, 258, 261, 370, 372, 381], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 361], "tip": [7, 361], "glfw": [7, 367], "osmesa": 7, "egl": 7, "advic": [7, 66, 386], "sudo": [7, 361], "apt": [7, 380], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 250, 251, 252], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 24, 28, 39, 141, 213, 238, 255, 256, 263, 264, 280, 283, 284, 305], "mkdir": 7, "earlier": [7, 367, 369, 370, 379, 380, 383], "roboti": 7, "html": [7, 13, 14, 119, 121], "wget": 7, "mujoco210": 7, "tar": [7, 63], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 122, 128], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 40, 42, 53, 69], "bin": [7, 213, 256, 362], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 209, 262, 266, 367, 369, 383], "nvidia": [7, 110], "older": [7, 11], "hack": [7, 367], "adatp": 7, "script": [7, 63, 193, 354, 358, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "unnot": [7, 166], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 71, 368, 383], "troubleshoot": 7, "gl": 7, "h": [7, 81, 143, 145, 169, 181, 216, 217, 218, 220, 221, 222, 225, 327, 368, 370, 383], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 40, 42, 45, 53, 60, 62, 63, 64, 66, 67, 68, 73, 332, 334, 364, 367, 372, 375, 379], "devel": 7, "ubuntu": [7, 110], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 368, 370, 378], "libstdc": 7, "glibcxx_3": 7, "29": [7, 367, 368, 381], "compil": [7, 36, 79, 86, 87, 102, 106, 122, 128, 191, 216, 217, 220, 221], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 188, 369, 378], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 32, 36, 102, 106, 122, 128, 160, 183, 191, 297, 386], "job": [7, 17, 18, 19, 21, 44, 383, 385], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 98, 99, 366, 367, 368, 378, 379, 381, 382, 383, 384], "114": [7, 381, 383], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 367, 368, 381], "offscreenopenglcontext": 7, "opengl": [7, 379, 380], "global": [7, 36, 102, 106, 122, 123, 124, 128, 191, 237, 246, 262, 266, 305, 364, 367, 379, 380], "cuda_visible_devic": 7, "id": [7, 22, 46, 79, 81, 86, 87, 102, 105, 106, 122, 128, 261, 295, 330, 334, 374, 383], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 379], "onscreen": 7, "101": [7, 381], "correctli": [7, 36, 102, 106, 122, 128, 191], "lgl": 7, "libegl": 7, "x11": [7, 380], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 364], "n_training_step": 8, "datapoint": [8, 53, 383], "n_data_per_train": 8, "no_grad": [8, 36, 102, 106, 122, 128, 159, 191, 216, 217, 220, 221, 307, 308, 309, 310, 369, 370, 380], "loss_fn": [8, 370, 373, 374, 385], "zero_grad": [8, 36, 102, 106, 122, 128, 191, 364, 367, 369, 370, 373, 376, 379, 380, 381], "backpropag": [8, 98, 99, 111, 112, 122, 276, 277, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299, 305, 373, 380, 381], "differenti": [8, 53, 98, 99, 159, 307, 308, 309, 310, 370, 372, 373, 379, 380, 381], "denomin": 8, "artifact": 8, "numer": [8, 44, 106, 189, 219, 244, 245, 249, 255, 256, 262, 263, 264, 265, 266, 342, 369, 383, 386], "misconcept": 8, "freed": 8, "appear": [8, 39, 60, 66, 79, 86, 87, 381, 383], "compuat": 8, "fix": [8, 27, 122, 179, 277, 293, 297, 368, 376, 381, 386], "retain_graph": [8, 98, 99], "discuss": [8, 9, 374, 379, 380], "inplac": [8, 36, 40, 42, 45, 102, 106, 122, 128, 191, 367], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 102, 106, 122, 128, 137, 139, 140, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 164, 165, 166, 167, 168, 170, 173, 174, 177, 178, 179, 180, 182, 185, 186, 188, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 228, 229, 230, 232, 233, 234, 236, 237, 239, 240, 242, 246, 247, 253, 254, 256, 257, 260, 261, 262, 264, 265, 266, 269, 270, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 307, 308, 309, 310, 311, 363, 381, 385], "submodul": [8, 36, 102, 106, 122, 128, 132, 179, 191, 218, 222, 273, 292], "param": [8, 36, 46, 102, 106, 118, 122, 128, 140, 147, 148, 149, 153, 159, 167, 168, 174, 177, 182, 191, 211, 213, 243, 254, 262, 265, 268, 292, 301, 304, 307, 308, 309, 310, 311, 367, 376, 379, 380, 381, 382, 385], "grad": [8, 36, 98, 99, 102, 106, 122, 128, 191, 367, 369], "whose": [8, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 46, 52, 54, 55, 102, 106, 122, 123, 124, 128, 147, 165, 179, 182, 183, 185, 187, 191, 232, 237, 265], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 41, 49, 78, 79, 143, 155, 166, 184, 286, 307, 309, 310, 363, 369, 379, 380, 381], "factor": [8, 23, 36, 170, 191, 219, 231, 244, 245, 253, 257, 258, 261, 277, 282, 285, 286, 288, 298, 313, 367, 368, 372, 376, 379, 380, 383, 386], "fit": [8, 11, 161, 179, 363, 364, 367], "bottlneck": 8, "brax": [8, 98, 99, 102, 106, 122, 128, 168, 371, 386], "jax": [8, 11, 98, 99, 111, 112], "improperli": 8, "underli": [8, 102, 106, 122, 128, 292, 371, 373, 375, 381], "tedeiou": 8, "priorit": [8, 41, 49, 78, 79, 279, 280, 282, 283, 284, 290, 295, 297, 299, 367, 368, 374], "amount": [8, 261, 368, 383], "costli": [8, 381], "constitut": [8, 368, 380, 381], "profil": 8, "frequent": [8, 383], "program": [8, 283, 290, 386], "functorch": [8, 10], "incl": 8, "suit": [8, 101, 369, 371, 385, 386], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 45, 52, 54, 55, 86, 87, 140, 265, 268, 292, 379, 380, 381, 383, 385], "new_shap": 8, "permut": [8, 85, 163, 385, 386], "idea": [9, 295, 364, 370, 372, 379, 380], "introductori": 9, "intro": [9, 369, 370], "dai": [9, 385], "2022": [9, 10, 381, 385], "spin": [9, 100, 101], "deep": [9, 143, 206, 207, 208, 209, 212, 261, 276, 289, 297, 298, 367, 379], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 372], "summari": [9, 161, 189, 367, 368, 369, 370], "reddit": 9, "reagent": 9, "orient": [9, 68, 386], "baselines3": 9, "tf": 9, "bandit": [9, 121], "tensorflow": [9, 226, 227], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 376], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 385], "grade": 9, "factori": [9, 51, 367], "cherri": 9, "jaxrl": 9, "mbrl": [9, 118, 362], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 381], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 369, 370, 379, 380], "notebook": [10, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386], "24": [10, 67, 87, 105, 119, 120, 260, 367, 368, 379, 381], "pip3": [10, 367, 369, 370, 379, 380], "url": [10, 108], "org": [10, 13, 14, 23, 41, 63, 64, 66, 68, 78, 79, 98, 99, 100, 101, 108, 111, 112, 116, 117, 119, 120, 121, 125, 129, 130, 143, 165, 185, 205, 206, 207, 208, 209, 210, 213, 214, 215, 220, 225, 226, 227, 231, 233, 234, 237, 239, 240, 246, 256, 261, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 293, 294, 296, 297, 298, 307, 312, 320, 359, 377, 382], "whl": 10, "u": [10, 65, 216, 217, 220, 221, 381], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 292], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 78, 79, 81, 92, 98, 100, 101, 102, 104, 105, 106, 107, 108, 111, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 139, 143, 152, 159, 165, 169, 177, 178, 183, 185, 187, 188, 189, 191, 194, 198, 201, 202, 212, 213, 218, 222, 224, 225, 228, 229, 230, 231, 232, 237, 238, 246, 249, 255, 256, 262, 263, 264, 265, 266, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 305, 306, 307, 308, 309, 310, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 352, 358, 368, 369], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 218, 222, 385], "longer": [11, 368, 376, 379, 380, 383], "x": [11, 22, 26, 36, 44, 46, 66, 87, 159, 181, 204, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 228, 229, 247, 255, 262, 263, 272, 275, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 344, 367, 379, 381, 383, 385], "23": [11, 67, 87, 366, 367, 368, 369, 370, 373, 379, 381, 384], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 67, 98, 99, 106, 111, 112, 221, 275, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 367, 368, 369, 370, 376, 379, 380, 381, 383, 386], "otherwis": [11, 21, 22, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 81, 86, 87, 98, 99, 102, 105, 106, 107, 108, 111, 112, 115, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 143, 144, 150, 161, 178, 179, 180, 183, 189, 191, 216, 219, 220, 228, 229, 244, 245, 255, 263, 269, 277, 287, 292, 293, 297, 307, 309, 310, 340, 341, 364, 367, 368, 369, 370, 381, 386], "classmethod": [11, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 42, 45, 52, 54, 55, 102, 106, 122, 128, 185, 205, 236], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 32, 33, 34, 36, 40, 42, 44, 45, 67, 71, 79, 86, 87, 102, 103, 104, 105, 106, 107, 116, 117, 119, 122, 123, 124, 128, 129, 130, 131, 159, 179, 183, 188, 189, 191, 203, 204, 205, 206, 207, 208, 209, 210, 215, 223, 236, 262, 266, 297, 331, 332, 340, 349, 350, 356, 357, 358, 367, 368, 369, 383, 386], "setter": 11, "setter_dict": 11, "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 103, 122, 128, 367, 385], "device_typ": [13, 15, 16, 28, 34, 38, 39, 203, 204, 205, 206, 207, 208, 209, 215, 223, 228, 229, 230, 231, 236], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 368], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 368], "create_env_kwarg": [13, 14, 15, 16, 20, 103, 119, 122, 128, 367, 386], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 36, 170, 368, 383], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 262, 292, 340, 367, 368, 369, 370, 372, 379, 385], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 195, 199, 262, 266, 340], "exploration_mod": [13, 15, 16, 17, 18, 19, 360, 362], "preemptive_threshold": [13, 14, 16], "num_thread": [13, 14, 16, 40, 42, 45, 122, 128], "num_sub_thread": [13, 14, 16, 122, 128], "set_trunc": [13, 14, 15, 16, 102, 106, 122, 128], "use_buff": [13, 14, 15, 122, 128], "datacollector": [13, 14, 15, 16, 36, 266, 294, 369, 374, 383], "recept": 13, "safe": [13, 14, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 79, 86, 249, 253, 255, 256, 261, 262, 263, 264, 265, 266, 268, 362, 385], "sota": [13, 14, 118, 156, 296, 335, 349, 367, 368, 369, 372, 373, 374, 379, 380, 385], "guard": [13, 14], "doc": [13, 14, 51, 108, 111, 112, 121, 125, 334, 368, 379, 380, 383, 386], "env_mak": [13, 14, 15, 20, 354, 386], "2000": [13, 14, 15, 36, 53, 109, 327, 369, 383], "50": [13, 14, 15, 20, 43, 46, 60, 68, 86, 87, 116, 117, 191, 367, 368, 369, 370, 379, 380, 381, 382, 383], "shutdown": [13, 14, 15, 16, 20, 140, 367, 385], "del": [13, 14, 15, 367, 368, 369, 378, 379, 385, 386], "int64": [13, 14, 15, 22, 28, 29, 34, 40, 42, 43, 45, 46, 47, 49, 51, 53, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 102, 106, 115, 116, 117, 121, 122, 123, 124, 126, 127, 128, 136, 140, 152, 163, 170, 177, 213, 238, 255, 256, 261, 262, 263, 264, 362, 369, 370, 371, 372, 374, 375, 381, 383, 385], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 142, 247, 255, 260, 263, 370], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 53], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 368], "divis": [13, 14, 15, 16, 17, 18, 19, 60, 66, 79, 86, 87, 380], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 60, 106, 139, 179, 188, 222, 370, 381, 382], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 346, 368], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 52, 54, 55, 69, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 119, 120, 122, 125, 128, 147, 148, 151, 159, 165, 179, 182, 183, 185, 187, 189, 191, 265, 371, 373, 374, 375, 379, 386], "span": [13, 14, 15, 16, 17, 18, 19, 20, 66, 79, 86], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 36, 191, 260, 368, 369, 379, 380], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 46, 334, 362, 379, 380, 381], "round": [13, 14, 15, 16, 17, 18, 19, 20, 60], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 36, 64, 102, 106, 122, 128, 191], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 188, 385], "ratio": [13, 14, 16, 46, 367, 369], "finish": [13, 14, 16, 20, 106, 170, 386], "rest": [13, 14, 16, 362, 369, 370, 379, 381, 385], "earli": [13, 14, 16, 36, 106, 177, 385], "safeti": [13, 14, 16, 118, 122, 128], "harm": [13, 14, 16, 122, 128], "exclus": [13, 14, 56, 57, 60, 66, 79, 86, 87, 140, 153, 155, 216, 218, 220, 222, 226, 227, 255, 256, 263, 264, 298, 299, 307, 308, 309, 310, 311, 334, 358, 362], "add_truncated_kei": [13, 14, 15, 16, 102, 106, 122, 128, 183], "ordereddict": [13, 14, 15, 16, 20, 36, 102, 106, 122, 128, 183, 189, 191, 297, 368], "form": [13, 14, 16, 36, 41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 77, 102, 106, 122, 128, 189, 191, 216, 218, 220, 222, 275, 276, 278, 291, 294, 344, 362, 372, 380], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 102, 106, 122, 128, 183], "integ": [13, 14, 15, 16, 22, 34, 35, 36, 39, 46, 55, 79, 86, 87, 88, 102, 106, 122, 128, 136, 139, 152, 156, 161, 177, 203, 204, 223, 228, 229, 283, 290, 297, 383], "increment": [13, 14, 15, 16, 102, 106, 122, 128, 161, 291], "env_fn": [13, 14, 15, 16, 103, 356, 357], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 86, 87, 208, 209, 367, 381], "out_se": [13, 14, 15, 16, 386], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 25, 26, 36, 38, 40, 41, 42, 44, 45, 48, 49, 50, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 77, 78, 79, 81, 86, 87, 88, 90, 92, 94, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 137, 138, 140, 147, 165, 167, 176, 179, 182, 183, 184, 186, 187, 190, 191, 202, 203, 204, 206, 207, 208, 209, 212, 215, 218, 219, 222, 223, 224, 225, 228, 229, 235, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 305, 306, 307, 308, 309, 310, 311, 325, 327, 331, 332, 334, 337, 344, 349, 350, 355, 356, 357, 363, 369, 380], "return_same_td": 15, "interruptor": 15, "cautious": [15, 294], "whole": [15, 26, 32, 36, 53, 102, 106, 122, 128, 183, 191, 262, 297, 335, 367, 369], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 372], "policy_state_dict": 15, "env_state_dict": 15, "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 344], "respect": [17, 18, 19, 36, 102, 106, 122, 128, 141, 147, 148, 151, 165, 166, 175, 179, 182, 183, 185, 187, 191, 216, 220, 228, 240, 265, 270, 276, 278, 291, 294, 296, 307, 309, 310, 339, 369, 370, 379, 380], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 361, 368, 369, 372, 375, 378, 383], "fashion": [17, 19, 20, 40, 42, 45, 87], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 60, 63, 64, 66, 67, 68, 102, 106, 122, 128, 155], "seen": [17, 18, 19, 20, 26, 32, 102, 106, 122, 128, 363, 367, 368, 370, 373, 379, 380, 383], "submitit_delai": [17, 21], "former": [17, 18, 19, 41, 44, 49, 50, 62, 102, 106, 122, 128, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272, 367], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 381], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 367], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 39, 60, 262, 266], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 356, 357, 367, 368], "coordin": 20, "init": [20, 36, 102, 106, 122, 128, 189, 191, 334, 368, 369], "autodetect": 20, "similarli": [20, 36, 85, 90, 102, 106, 122, 128, 191, 228, 267, 268, 283, 290, 386], "num_cpu": 20, "num_gpu": 20, "1024": [20, 210, 368, 383], "equat": [20, 66, 106, 189, 261, 275, 278, 298, 369, 371, 381], "exce": [20, 383], "indefinit": [20, 59], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 344, 367, 369, 370], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 373], "jump": [21, 371], "host": [21, 36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 205, 210, 236, 254], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "rollout_tensordict": 22, "nestedkei": [22, 24, 25, 28, 29, 32, 33, 34, 35, 38, 39, 40, 42, 45, 47, 52, 53, 54, 55, 79, 86, 87, 102, 106, 122, 128, 133, 136, 137, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 155, 157, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 189, 191, 192, 200, 201, 213, 238, 253, 254, 257, 258, 260, 261, 266, 280, 305, 325, 327], "durat": [22, 380], "meta": [22, 40, 42, 45, 52, 62, 104, 108, 276, 278, 291, 294, 296, 364, 369, 379, 380, 383], "aren": [22, 178, 370], "deprec": [22, 36, 102, 106, 122, 128, 183, 191, 194, 198, 258, 276, 278, 280, 283, 284, 285, 290, 291, 294, 295, 296, 297, 305, 307, 308, 309, 310, 315, 386], "eventu": [22, 237, 370, 381], "supersed": 22, "recov": [22, 62, 64, 66, 67, 68, 86, 87, 253, 258, 261, 267, 283, 290, 378], "cat": [22, 270, 277, 279, 290, 295, 297, 299, 379, 383, 385], "arang": [22, 28, 39, 79, 136, 213, 227, 255, 335, 362, 383], "obs_": 22, "trajectory_id": 22, "int32": [22, 50, 60, 66, 86, 111, 112, 197, 260, 383], "data_split": 22, "got": [22, 374], "init_kl_coef": 23, "horizon": [23, 116, 117, 129, 130, 202, 225, 369], "kl": [23, 27, 46, 159, 287, 291], "describ": [23, 52, 144, 182, 192, 243, 244, 280, 330, 363, 367, 369, 379, 380, 381, 386], "ziegler": 23, "et": [23, 202], "relax": [23, 325], "penalti": [23, 46, 291], "strai": [23, 46], "greater": [23, 60, 79, 86, 87, 218, 222, 367, 368, 385], "increas": [23, 71, 180, 261, 379, 380], "pull": [23, 383], "toward": [23, 187], "aggress": 23, "kl_coef": [23, 27, 46], "arxiv": [23, 41, 63, 66, 68, 78, 79, 98, 99, 100, 101, 111, 112, 116, 117, 119, 120, 125, 129, 130, 143, 165, 185, 205, 206, 207, 208, 209, 210, 213, 214, 215, 220, 225, 231, 233, 234, 237, 239, 240, 246, 256, 261, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 293, 294, 297, 298, 307, 312, 320, 382], "pdf": [23, 143, 205, 206, 207, 208, 209, 213, 256, 261, 285, 295, 298, 307, 312, 320], "1909": 23, "08593": 23, "lm": 23, "blob": 23, "master": [23, 379, 380], "lm_human_prefer": 23, "train_polici": 23, "kl_valu": 23, "coef": [23, 159], "newest": 23, "int8": [24, 102, 115, 123, 124, 141], "assert_is_in": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "clear_device_": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "op": [24, 25, 28, 34, 35, 38, 39, 52, 54, 55, 160, 188, 253, 257, 327, 346], "is_in": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 386], "encod": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 49, 50, 52, 54, 55, 98, 99, 102, 105, 107, 108, 111, 112, 119, 120, 125, 136, 150, 234, 235, 239, 275, 362, 368, 369, 370, 372, 381, 383], "ndarrai": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 106, 261, 269, 325, 379], "ignore_devic": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "np": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 106, 269, 325, 379, 381], "complient": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "singleton": [24, 25, 26, 28, 32, 33, 34, 35, 36, 38, 39, 52, 54, 55, 203, 204, 223, 241, 242], "start_dim": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "end_dim": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "implements_for_spec": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "torch_funct": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "tensor_to_index": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "project": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 150, 220, 249, 253, 255, 256, 261, 262, 263, 264, 265, 266, 334, 362, 385, 386], "rand": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 41, 44, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 98, 99, 111, 112, 118, 137, 140, 148, 151, 167, 192, 202, 225, 262, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 297, 299, 381, 385, 386], "unbound": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 49, 50, 52, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 179, 197, 381, 383], "to_numpi": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 102, 106, 122, 128], "transformed_in": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55, 182, 183, 232, 243, 358], "check_spec_encod": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "to_one_hot": [24, 28, 34], "hot": [24, 28, 34, 35, 39, 98, 99, 105, 107, 108, 111, 112, 116, 117, 119, 120, 123, 124, 125, 129, 130, 136, 137, 150, 213, 235, 238, 255, 256, 263, 264, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 370], "to_one_hot_spec": [24, 28, 34], "onehotdiscretetensorspec": [24, 28, 213, 238, 255, 263, 280, 282, 283, 284, 305, 360, 362, 372], "convert": [24, 28, 34, 35, 36, 37, 39, 40, 42, 45, 48, 53, 98, 99, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128, 147, 148, 151, 165, 179, 182, 183, 185, 187, 189, 191, 265, 275, 292, 367, 368, 369, 381, 383], "type_check": [24, 25, 26, 28, 32, 33, 34, 35, 38, 39, 52, 54, 55], "upper": [25, 84, 160], "unnam": [26, 40, 42, 45], "constraint": [26, 118, 369, 380], "pixels_spec": 26, "observation_vector_spec": 26, "composite_spec": 26, "observation_vector": [26, 144, 367], "td_project": 26, "is_empti": [26, 32, 381], "include_nest": [26, 32], "leaves_onli": [26, 32], "is_leaf": [26, 32], "_compositespecitemsview": [26, 32], "children": [26, 32, 36, 102, 106, 122, 128, 191], "_compositespeckeysview": [26, 32], "reflect": [26, 32, 107, 123, 124, 188, 200, 292, 347, 368, 369, 370, 380], "lock_": [26, 32], "recurs": [26, 32, 36, 56, 57, 102, 106, 122, 128, 191, 292], "succeed": [26, 32], "selected_kei": [26, 32, 174, 367], "unlock_": [26, 32], "unlock": [26, 32, 40, 42, 45], "_compositespecvaluesview": [26, 32], "multipli": [27, 216, 220, 277, 278, 284, 291, 293, 294, 295, 297, 342, 367, 379], "calcul": [27, 46, 170, 216, 276, 278, 282, 291, 294, 296], "onehottensorspec": [28, 98, 99, 105, 107, 108, 111, 112, 119, 120, 125], "action_valu": [28, 39, 212, 213, 238, 255, 256, 263, 264, 284, 292, 305, 362, 370, 372, 376], "argmax": [28, 102, 106, 122, 128, 213, 238, 256, 264, 372], "chosen_action_valu": [28, 39, 237, 238, 246, 263, 264, 305, 362, 370, 372], "outcom": [28, 39, 211, 243, 379], "shift_kei": [29, 31, 37, 47], "is_full_kei": [29, 31, 37, 47], "is_ful": [29, 31, 37, 47], "tempfil": [29, 40, 41, 42, 44, 45, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 354, 367, 368, 379, 383], "register_save_hook": [29, 41, 44, 47, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "temporarydirectori": [29, 40, 41, 42, 44, 45, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 367, 368, 379, 383], "tmpdir": [29, 41, 44, 47, 49, 50, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 367, 368, 379], "rb_load": [29, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "register_load_hook": [29, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "persist": [30, 36, 102, 106, 122, 128, 183, 191, 200, 297], "filesystem": [30, 383], "ted2nest": [31, 360], "drawn": [32, 33, 179, 257, 262, 266, 369, 379, 380], "heterogen": [32, 33, 115, 123, 124, 193, 228, 229, 367, 368], "thrown": [33, 36, 102, 106, 122, 128, 191, 383], "nvec": [34, 35], "remove_singleton": 34, "cardin": [34, 35, 213, 238, 255, 256, 264, 369], "ax": [34, 230, 231, 379], "m": [34, 36, 102, 106, 122, 128, 150, 191, 266, 362, 368, 381], "ts": [34, 35], "multionehotdiscretetensorspec": [34, 280, 283, 284, 305, 360], "use_regist": [35, 39], "to_categor": [35, 39], "to_categorical_spec": [35, 39], "multidiscretetensorspec": [35, 360], "gamma": [36, 170, 191, 225, 276, 277, 279, 280, 282, 284, 285, 286, 288, 290, 292, 294, 295, 296, 297, 299, 300, 301, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 354, 363, 367, 368, 369, 379, 380, 385], "sutton": [36, 363, 379, 380], "1988": 36, "tempor": [36, 218, 222, 225, 308, 309, 314, 315], "44": [36, 366, 367, 368, 372, 381, 384], "discount": [36, 66, 103, 170, 191, 277, 282, 285, 286, 288, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 363, 368, 369, 379, 380], "ahead": [36, 191, 386], "bias": [36, 216, 217, 220, 221, 272, 363, 367], "mitig": 36, "pleas": [36, 64, 102, 105, 106, 122, 123, 124, 128, 140, 143, 180, 183, 191, 297, 361, 371, 373, 374, 375], "multisteptransform": [36, 360], "99": [36, 170, 189, 225, 288, 301, 306, 313, 354, 367, 368, 369, 373, 376, 379, 380, 381, 385], "add_modul": [36, 102, 106, 122, 128, 191], "child": [36, 102, 106, 122, 128, 191, 368], "fn": [36, 43, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 191, 232, 356, 357], "init_weight": [36, 102, 106, 122, 128, 191], "fill_": [36, 102, 106, 122, 128, 191, 368, 370, 386], "net": [36, 102, 106, 122, 128, 191, 207, 209, 212, 215, 229, 276, 277, 284, 290, 294, 295, 296, 297, 354, 368, 381, 382, 385], "in_featur": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 203, 204, 206, 207, 208, 209, 215, 223, 228, 229, 230, 231, 250, 265, 273, 280, 282, 372, 373, 385], "out_featur": [36, 102, 106, 118, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 202, 203, 204, 206, 207, 208, 209, 214, 215, 218, 222, 223, 225, 228, 229, 230, 231, 250, 255, 265, 273, 280, 282, 362, 367, 370, 372, 373, 376, 385], "bia": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 203, 204, 206, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 223, 229, 230, 231, 232, 257, 258, 261, 265, 272, 274, 275, 292, 297, 363, 367, 368, 369, 370, 380, 385], "requires_grad": [36, 98, 99, 102, 106, 122, 128, 159, 183, 191, 297], "bfloat16": [36, 102, 106, 122, 128, 191], "datatyp": [36, 102, 106, 122, 128, 191, 383], "member": [36, 102, 106, 122, 128, 191, 292, 327], "xdoctest": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 292, 297], "buf": [36, 102, 106, 122, 128, 191], "20l": [36, 102, 106, 122, 128, 191, 292], "1l": [36, 102, 106, 122, 128, 191, 292], "5l": [36, 102, 106, 122, 128, 191, 292], "__call__": [36, 43, 102, 106, 122, 128, 191, 266, 364, 386], "doubl": [36, 54, 102, 106, 122, 128, 147, 148, 149, 151, 165, 179, 182, 183, 185, 187, 191, 265, 280, 285, 289, 295, 298, 305, 367, 368, 369, 370, 386], "eval": [36, 102, 106, 122, 128, 183, 189, 191, 367, 368, 369], "evalu": [36, 102, 106, 116, 117, 122, 128, 183, 191, 211, 226, 227, 235, 245, 295, 349, 350, 368, 369, 376], "dropout": [36, 102, 106, 122, 128, 183, 191, 216, 218, 220, 222, 223, 370], "batchnorm": [36, 102, 106, 122, 128, 183, 191], "disabl": [36, 102, 106, 122, 128, 183, 191, 219, 245, 325, 367, 379], "comparison": [36, 102, 106, 122, 128, 183, 191, 292, 367, 368], "similar": [36, 40, 42, 44, 45, 66, 102, 106, 122, 123, 124, 128, 147, 165, 179, 182, 183, 185, 186, 187, 189, 191, 250, 252, 262, 265, 266, 363, 367, 368, 369, 370, 372, 373, 374, 375, 381, 383, 386], "extra_repr": [36, 102, 106, 122, 128, 191], "nontermin": 36, "original_reward": 36, "newli": [36, 102, 106, 122, 128], "OR": 36, "get_buff": [36, 102, 106, 122, 128, 191], "get_submodul": [36, 102, 106, 122, 128, 191], "qualifi": [36, 102, 106, 122, 128, 191], "referenc": [36, 102, 106, 122, 128, 191], "attributeerror": [36, 102, 106, 122, 128, 191], "resolv": [36, 102, 106, 122, 128, 191], "someth": [36, 102, 106, 115, 122, 128, 191, 361, 368, 369, 381, 386], "get_extra_st": [36, 102, 106, 122, 128, 189, 191], "set_extra_st": [36, 102, 106, 122, 128, 189, 191], "picklabl": [36, 102, 106, 122, 128, 189, 191], "pickl": [36, 102, 106, 122, 128, 189, 191], "get_paramet": [36, 102, 106, 122, 128, 191], "net_b": [36, 102, 106, 122, 128, 191], "net_c": [36, 102, 106, 122, 128, 191], "conv": [36, 102, 106, 122, 128, 191, 203, 204, 368], "conv2d": [36, 102, 106, 122, 128, 191, 204, 206, 207, 215, 228, 385], "kernel_s": [36, 102, 106, 122, 128, 191, 203, 204, 206, 207, 215, 228, 233, 368, 385], "stride": [36, 102, 106, 122, 128, 191, 203, 204, 206, 207, 215, 228, 368, 379, 385], "diagram": [36, 102, 106, 122, 128, 191], "degre": [36, 102, 106, 122, 128, 191], "named_modul": [36, 102, 106, 122, 128, 191], "o": [36, 102, 106, 122, 128, 191, 221], "half": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 367], "ipu": [36, 102, 106, 122, 128, 191], "strict": [36, 40, 42, 45, 102, 106, 122, 128, 183, 191, 297], "descend": [36, 102, 106, 122, 128, 183, 191, 297], "get_swap_module_params_on_convers": [36, 102, 106, 122, 128, 183, 191, 297], "enforc": [36, 85, 102, 106, 122, 128, 183, 191, 267, 297, 381], "preserv": [36, 102, 106, 122, 128, 183, 191, 297], "missing_kei": [36, 102, 106, 122, 128, 183, 191, 297], "unexpected_kei": [36, 102, 106, 122, 128, 183, 191, 297], "namedtupl": [36, 102, 106, 122, 128, 183, 191, 297], "l": [36, 102, 106, 122, 128, 191, 216, 220, 306, 369, 381], "idx": [36, 102, 106, 122, 128, 191], "named_buff": [36, 102, 106, 122, 128, 191], "remove_dupl": [36, 102, 106, 122, 128, 191, 292], "prepend": [36, 102, 106, 122, 128, 191, 292], "running_var": [36, 102, 106, 122, 128, 191], "named_children": [36, 102, 106, 122, 128, 191], "conv4": [36, 102, 106, 122, 128, 191], "conv5": [36, 102, 106, 122, 128, 191], "memo": [36, 102, 106, 122, 128, 191], "named_paramet": [36, 102, 106, 122, 128, 159, 191, 292], "register_backward_hook": [36, 102, 106, 122, 128, 191], "removablehandl": [36, 102, 106, 122, 128, 191], "favor": [36, 102, 106, 122, 128, 191, 369], "register_full_backward_hook": [36, 102, 106, 122, 128, 191], "register_buff": [36, 102, 106, 122, 128, 191], "running_mean": [36, 102, 106, 122, 128, 191], "alongsid": [36, 102, 106, 122, 128, 191, 375], "num_featur": [36, 102, 106, 122, 128, 191], "register_forward_hook": [36, 102, 106, 122, 128, 191, 213, 238], "with_kwarg": [36, 102, 106, 122, 128, 191], "always_cal": [36, 102, 106, 122, 128, 191], "register_module_forward_hook": [36, 102, 106, 122, 128, 191], "regardless": [36, 102, 106, 122, 128, 191, 278, 291, 294], "register_forward_pre_hook": [36, 102, 106, 122, 128, 191], "invok": [36, 102, 106, 122, 128, 191], "And": [36, 102, 106, 122, 128, 191, 373], "forward_pr": [36, 102, 106, 122, 128, 191], "register_module_forward_pre_hook": [36, 102, 106, 122, 128, 191], "grad_input": [36, 102, 106, 122, 128, 191], "grad_output": [36, 102, 106, 122, 128, 191], "subsequ": [36, 60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 139, 191, 370, 379], "technic": [36, 102, 106, 122, 128, 191, 368, 370, 372], "caller": [36, 102, 106, 122, 128, 191], "register_module_full_backward_hook": [36, 102, 106, 122, 128, 191], "register_full_backward_pre_hook": [36, 102, 106, 122, 128, 191], "backward_pr": [36, 102, 106, 122, 128, 191], "register_module_full_backward_pre_hook": [36, 102, 106, 122, 128, 191], "register_load_state_dict_post_hook": [36, 102, 106, 122, 128, 191], "incompatible_kei": [36, 102, 106, 122, 128, 191], "register_modul": [36, 102, 106, 122, 128, 191, 364], "alia": [36, 41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 81, 88, 90, 94, 102, 106, 122, 128, 191], "register_paramet": [36, 102, 106, 122, 128, 191], "register_state_dict_pre_hook": [36, 102, 106, 122, 128, 191], "keep_var": [36, 40, 42, 45, 102, 106, 122, 128, 183, 191, 297], "requires_grad_": [36, 102, 106, 122, 128, 191], "autograd": [36, 102, 106, 122, 128, 183, 191, 297], "freez": [36, 102, 106, 122, 128, 189, 191], "finetun": [36, 102, 106, 122, 128, 191], "gan": [36, 102, 106, 122, 128, 191], "share_memori": [36, 102, 103, 106, 122, 128, 191, 367], "share_memory_": [36, 40, 42, 45, 102, 106, 122, 128, 191, 385], "destin": [36, 40, 42, 45, 102, 106, 122, 128, 142, 148, 149, 151, 183, 185, 189, 191, 200, 297, 327], "averag": [36, 102, 106, 122, 128, 183, 189, 191, 261, 286, 287, 297, 342, 367, 369], "shallow": [36, 40, 42, 45, 102, 106, 122, 128, 183, 191, 297, 370], "detach": [36, 102, 106, 122, 128, 183, 191, 292, 297, 307, 308, 309, 310, 367], "non_block": [36, 40, 42, 45, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 370], "memory_format": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "channels_last": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "unchang": [36, 102, 106, 122, 128, 147, 150, 165, 179, 182, 183, 185, 187, 191, 257, 265, 341, 367, 383], "tri": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 375], "pin": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "4d": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "ignore_w": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "1913": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "3420": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "5113": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "2325": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "torch_doctest_cuda1": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "gpu1": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "1914": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "5112": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 381], "2324": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "float16": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 217, 221, 265], "cdoubl": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "3741": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "j": [36, 41, 78, 79, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 364, 373], "2382": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 369], "5593": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265, 381], "4443": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "complex128": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "6122": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "1150": [36, 102, 106, 122, 128, 147, 165, 179, 182, 183, 185, 187, 191, 265], "to_empti": [36, 102, 106, 122, 128, 191], "dst_type": [36, 102, 106, 122, 128, 191], "xpu": [36, 102, 106, 122, 128, 191], "set_to_non": [36, 102, 106, 122, 128, 191], "row": [37, 48, 111, 112], "unidimension": 39, "keepdim": 39, "user_regist": 39, "priori": 39, "uniqu": [39, 86, 87, 116, 117, 143, 152, 178, 179, 180, 260, 334, 374, 383], "discretebox": [39, 102, 106, 122, 128, 372, 379, 380, 386], "chosen_data": [40, 69], "rewarddata": [40, 69, 360], "rejected_data": [40, 69], "from_dataset": [40, 42, 69], "dataset_nam": [40, 42, 46, 53, 69, 121], "max_length": [40, 42, 43, 51, 53, 69, 376], "550": [40, 42, 46, 53, 69, 86, 87, 381], "root_dir": [40, 42, 53, 69], "from_disk": [40, 42, 53, 69], "carperai": [40, 42, 46, 53], "openai_summarize_comparison": [40, 42, 53], "sequen": [40, 42], "load_from_disk": [40, 42, 53, 69], "load_dataset": [40, 42, 53, 69], "attention_mask": [40, 42, 43, 45, 46, 51, 53, 69], "92534": 40, "input_id": [40, 42, 43, 45, 46, 51, 53, 69], "end_scor": [40, 45, 46, 69], "sub_data": [40, 42], "from_tensordict": [40, 42, 45], "non_tensordict": [40, 42, 45], "axi": [40, 42, 45], "td_gather": [40, 42, 45], "_nodefault": [40, 42, 45], "getattr": [40, 42, 45], "tensorclass": [40, 42, 45, 69, 73, 74, 94], "is_memmap": [40, 42, 45], "memmap_": [40, 42, 45, 189], "load_memmap": [40, 42, 45], "fetch": [40, 42, 45, 98, 99, 100, 101, 159, 372, 382, 383], "fromkei": [40, 42, 45], "memmap": [40, 42, 45, 73, 122, 128, 189, 327, 329, 341, 383], "saved_td": [40, 42, 45], "td_load": [40, 42, 45], "fake": [40, 42, 45, 102, 106, 122, 128, 367, 368], "_subclass": [40, 42, 45], "faketensormod": [40, 42, 45], "faketensor": [40, 42, 45], "from_flatten": [40, 42, 45], "attemptedli": [40, 42, 45], "copy_exist": [40, 42, 45], "return_earli": [40, 42, 45], "share_non_tensor": [40, 42, 45], "mimic": [40, 42, 45, 102, 106, 122, 128], "cross": [40, 42, 45, 202], "anymor": [40, 42, 45, 183, 265], "tensordictfutur": [40, 42, 45], "deepli": [40, 42, 45], "insid": [40, 42, 45, 122, 386], "memmap_lik": [40, 42, 45], "contentless": [40, 42, 45], "1_000_000": [40, 41, 42, 44, 45, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 86, 367, 370, 379], "alloc": [40, 42, 45, 74, 226, 227, 367], "ndimens": [40, 42, 45, 367], "batch_dim": [40, 42, 45, 53, 358], "numel": [40, 42, 45, 367, 369, 370, 376, 379, 382, 383], "additionali": [40, 42, 45], "setattr": [40, 42, 45], "tent": [40, 42, 45, 53], "to_tensordict": [40, 42, 45, 370], "unbind": [40, 41, 42, 44, 45, 49, 50, 218, 222], "alpha": [41, 49, 78, 79, 203, 204, 206, 207, 208, 209, 215, 228, 277, 284, 293, 295, 297, 367, 383, 385], "ep": [41, 49, 78, 79, 161, 189, 261, 278, 298, 342, 367, 368, 370, 373, 376], "1e": [41, 49, 78, 79, 161, 189, 211, 214, 232, 243, 367, 368, 369, 380], "08": [41, 49, 78, 79, 367, 368, 369, 379, 381], "pin_memori": [41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 164, 367, 385], "schaul": [41, 78, 79], "quan": [41, 78, 79], "antonogl": [41, 78, 79], "silver": [41, 78, 79], "2015": [41, 78, 79], "ab": [41, 63, 66, 68, 78, 79, 98, 99, 100, 101, 111, 112, 116, 117, 119, 120, 125, 129, 130, 142, 165, 185, 189, 205, 210, 214, 215, 220, 225, 231, 233, 234, 237, 239, 240, 246, 276, 277, 280, 281, 282, 283, 286, 287, 288, 289, 290, 293, 294, 297, 382], "1511": [41, 78, 79, 215], "05952": [41, 78, 79], "expon": [41, 49, 78, 79], "\u03b1": [41, 49, 78, 79], "delta": [41, 49, 78, 79, 216, 220, 243, 262, 266, 360, 363, 379], "null": [41, 49, 78, 79, 141], "1_000": [41, 44, 49, 50, 379, 383], "merg": [41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 381], "mini": [41, 44, 49, 50, 60, 62, 63, 64, 65, 66, 67, 68, 380], "decid": [41, 44, 49, 50, 379, 385], "meth": [41, 44, 49, 50, 292, 381], "incompat": [41, 44, 49, 50, 296, 383], "drop_last": [41, 44, 49, 50, 85, 87], "notion": [41, 44, 49, 50], "caution": [41, 44, 49, 50, 85, 193, 386], "codebas": [41, 44, 49, 50, 381], "approach": [41, 44, 49, 50, 161, 367, 369, 373, 374, 379, 386], "return_info": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 81, 383], "tensordictprioritizedreplaybuff": [41, 360, 385], "simplifi": [41, 372, 381, 383], "_weight": [41, 49, 78, 79, 383, 385], "arrai": [41, 46, 78, 102, 106, 122, 128, 152, 216, 217, 220, 221, 367, 379, 383], "update_prior": [41, 78, 79, 341, 364, 368, 383, 385], "36278465": 41, "invert": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 274, 369], "tqdm": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 344, 367, 369, 370, 379, 380, 381], "randomsampl": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 367, 379], "td_error": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 279, 280, 282, 283, 284, 285, 290, 292, 295, 297, 299, 305, 367, 373, 383, 385], "update_tensordict_prior": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 367, 383, 385], "insert_transform": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81, 138, 183], "insert": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 81, 82, 92, 93, 96, 97, 138, 147, 183, 184], "set_sampl": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "set_storag": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "set_writ": [41, 44, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 81], "prompt_rindex": [42, 43, 46], "promptdatatldr": 42, "116722": 42, "prompt": [43, 46], "return_tensordict": [43, 51], "recip": [43, 102, 106, 122, 128, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272], "text": [43, 46, 51, 64, 216, 217, 220, 221, 261, 369], "tensodict": [43, 51], "orign": [43, 51], "valid_sampl": 43, "eough": 43, "toknen": 43, "meet": 43, "criterion": 43, "autotoken": [43, 51, 53], "from_pretrain": [43, 46, 51], "gpt2": [43, 46, 51, 53, 205, 210, 236], "pad_token": [43, 51], "eos_token": 43, "enough": [43, 383], "inde": [43, 150, 369, 381], "storagecheckpointerbas": [44, 88], "roundrobinwrit": [44, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68], "Not": [44, 98, 99, 111], "depth": [44, 102, 106, 118, 122, 125, 128, 202, 203, 204, 206, 207, 208, 209, 214, 215, 223, 225, 228, 229, 233, 234, 255, 362, 368, 371, 373, 374, 378, 379, 380, 383], "_pytre": [44, 383], "tree_map": [44, 383], "did": [44, 188, 313, 368, 369, 374, 383, 386], "assert0": [44, 383], "ref_model": 46, "reward_model": [46, 271], "max_new_token": 46, "score_clip": 46, "kl_schedul": 46, "klcontrollerbas": 46, "num_step": 46, "causal": 46, "sentenc": 46, "frozen": [46, 159, 189], "gpt2rewardmodel": 46, "get_dataload": [46, 360], "promptdata": [46, 360], "gpt2lmheadmodel": 46, "dl": 46, "block_siz": [46, 69], "tensorclass_typ": [46, 69], "openai_summarize_tldr": 46, "config_class": 46, "model_path": 46, "rollout_from_model": 46, "rollout_from_data": 46, "600": [46, 375, 381, 383], "reward_kl": [46, 159], "reward_raw": 46, "sample_log_prob": [46, 250, 251, 252, 262, 266, 268, 294, 369, 372, 380, 385], "create_rollout_td": 46, "log_prob": [46, 211, 226, 227, 235, 245, 266], "log_ratio": 46, "replic": 46, "rindex": 46, "eo": 46, "term": [46, 159, 220, 221, 230, 231, 275, 276, 284, 346, 368, 369, 371, 372, 380], "generation_config": 46, "generationconfig": 46, "ti": [46, 316, 317, 318, 319, 321, 322, 323, 324, 368], "log_probs_gen": 46, "logprobs_of_label": 46, "220": [47, 381], "priority_kei": [49, 50, 61, 78, 280, 283, 284, 285, 290, 292, 295, 297, 299, 305, 383, 385], "reduct": [49, 78, 79, 92, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 293, 294, 295, 296, 297, 299], "prioritizedreplaybuff": [49, 360, 385], "min": [49, 78, 79, 92, 244, 245, 254, 261, 277, 278, 284, 293, 295, 297, 368, 369, 379, 380], "median": [49, 78, 79, 92, 111, 112, 136, 262, 266], "include_info": [49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68], "huggingfac": [51, 63, 68, 259], "co": [51, 152, 381], "pad_trunc": 51, "am": 51, "me": 51, "reassur": 51, "ok": 51, "tokenizer_fn": 53, "tensordicttoken": [53, 360], "pre_tokenization_hook": 53, "valid_s": 53, "tokenizer_class": 53, "tokenizer_model_nam": 53, "tokein": 53, "elementwis": 53, "vocabulari": 53, "loader": [53, 369], "185068": 53, "dataset_to_tensordict": 53, "data_dir": 53, "valid_mask_kei": 53, "conver": 53, "batch_dimens": 53, "filder": 53, "from_dict": 53, "data_memmap": 53, "recurse_through_entri": 57, "recurse_through_stack": 57, "consolid": 57, "dataset_id": [60, 62, 63, 64, 66, 67, 68], "num_proc": 60, "slice_len": [60, 66, 79, 86, 87, 327], "strict_len": 60, "arari": 60, "2600": 60, "million": [60, 370], "consequ": [60, 71, 220, 374], "50x10": 60, "available_dataset": [60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 87], "ataridqn": 60, "immutabledatasetwrit": [60, 61, 62, 63, 64, 65, 66, 67, 68], "shorter": [60, 66, 79, 86, 87], "Be": [60, 66, 79, 86, 87], "game_nam": 60, "krull": 60, "1d": [60, 78, 79, 86, 87, 92], "cheapli": 60, "nontensordata": [60, 66, 325], "invalid_rang": 60, "999998": 60, "999999": 60, "add_count": 60, "84": [60, 169, 368, 370, 381], "valueestim": [60, 276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 301, 305, 360, 363, 367, 379, 380], "convolut": [60, 203, 204, 206, 207, 228, 241, 372], "2657628": 60, "2657629": 60, "2657630": 60, "2657631": 60, "2657632": 60, "2657633": 60, "2657634": 60, "2657635": 60, "2657636": 60, "2657637": 60, "2657638": 60, "2657639": 60, "2657640": 60, "2657641": 60, "2657642": 60, "2657643": 60, "2657644": 60, "2657645": 60, "2657646": 60, "2657647": 60, "2657648": 60, "2657649": 60, "2657650": 60, "2657651": 60, "2657652": 60, "2657653": 60, "2657654": 60, "2657655": 60, "2657656": 60, "2657657": 60, "2657658": 60, "2657659": 60, "2657660": 60, "2657661": 60, "2657662": 60, "2657663": 60, "2657664": 60, "2657665": 60, "2657666": 60, "2657667": 60, "2657668": 60, "2657669": 60, "2657670": 60, "2657671": 60, "2657672": 60, "2657673": 60, "2657674": 60, "2657675": 60, "2657676": 60, "2657677": 60, "2657678": 60, "2657679": 60, "2657680": 60, "2657681": 60, "2657682": 60, "2657683": 60, "2657684": 60, "2657685": 60, "2657686": 60, "2657687": 60, "2657688": 60, "2657689": 60, "2657690": 60, "2657691": 60, "1995687": 60, "1995688": 60, "1995689": 60, "1995690": 60, "1995691": 60, "1995692": 60, "1995693": 60, "1995694": 60, "1995695": 60, "1995696": 60, "1995697": 60, "1995698": 60, "1995699": 60, "1995700": 60, "1995701": 60, "1995702": 60, "1995703": 60, "1995704": 60, "1995705": 60, "1995706": 60, "1995707": 60, "1995708": 60, "1995709": 60, "1995710": 60, "1995711": 60, "1995712": 60, "1995713": 60, "1995714": 60, "1995715": 60, "1995716": 60, "1995717": 60, "1995718": 60, "1995719": 60, "1995720": 60, "1995721": 60, "1995722": 60, "1995723": 60, "1995724": 60, "1995725": 60, "1995726": 60, "1995727": 60, "1995728": 60, "1995729": 60, "1995730": 60, "1995731": 60, "1995732": 60, "1995733": 60, "1995734": 60, "1995735": 60, "1995736": 60, "1995737": 60, "1995738": 60, "1995739": 60, "1995740": 60, "1995741": 60, "1995742": 60, "1995743": 60, "1995744": 60, "1995745": 60, "1995746": 60, "1995747": 60, "1995748": 60, "1995749": 60, "1995750": 60, "left": [60, 62, 66, 79, 86, 140, 147, 148, 149, 153, 159, 165, 167, 168, 174, 177, 180, 182, 185, 187, 191, 228, 257, 368, 369, 374, 375], "untouch": [60, 66, 140, 147, 148, 149, 153, 159, 167, 168, 174, 177, 182, 191], "_max_run": 60, "dataset_asterix": 60, "asterix": 60, "dataset_pong": 60, "sample_from_al": [60, 81, 84], "buffer_id": [60, 84, 90], "hidden": [60, 122, 128, 142, 206, 214, 216, 217, 218, 220, 221, 222, 233, 234, 239, 240, 250, 251, 252, 254, 265, 268, 278, 291, 294, 362, 370, 378, 385], "data_path": [60, 61, 62, 63, 64, 65, 66, 67, 68], "data_path_root": [60, 61, 62, 63, 64, 65, 66, 67, 68], "delet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 144, 334], "chunksiz": [60, 61, 62, 63, 64, 65, 66, 67, 68], "pool": [60, 61, 62, 63, 64, 65, 66, 67, 68, 180], "max_tasks_per_child": [60, 61, 62, 63, 64, 65, 66, 67, 68], "worker_thread": [60, 61, 62, 63, 64, 65, 66, 67, 68], "index_with_gener": [60, 61, 62, 63, 64, 65, 66, 67, 68], "pbar": [60, 61, 62, 63, 64, 65, 66, 67, 68, 367, 369, 370, 379, 380, 381], "dest": [60, 61, 62, 63, 64, 65, 66, 67, 68, 165, 185, 187, 265], "num_fram": [60, 61, 62, 63, 64, 65, 66, 67, 68], "unitari": [60, 61, 62, 63, 64, 65, 66, 67, 68, 381], "minariexperiencereplai": [60, 61, 62, 63, 65, 66, 67, 68], "1000000": [60, 61, 62, 63, 64, 65, 66, 67, 68], "distance_from_origin": [60, 61, 62, 63, 64, 65, 66, 67, 68], "forward_reward": [60, 61, 62, 63, 64, 65, 66, 67, 68], "qpo": [60, 61, 62, 63, 64, 65, 66, 67, 68], "qvel": [60, 61, 62, 63, 64, 65, 66, 67, 68], "reward_ctrl": [60, 61, 62, 63, 64, 65, 66, 67, 68, 106, 122], "reward_forward": [60, 61, 62, 63, 64, 65, 66, 67, 68], "reward_surv": [60, 61, 62, 63, 64, 65, 66, 67, 68], "x_posit": [60, 61, 62, 63, 64, 65, 66, 67, 68, 106, 122], "x_veloc": [60, 61, 62, 63, 64, 65, 66, 67, 68, 106, 122], "y_posit": [60, 61, 62, 63, 64, 65, 66, 67, 68], "y_veloc": [60, 61, 62, 63, 64, 65, 66, 67, 68], "achieved_go": [60, 61, 62, 63, 64, 65, 66, 67, 68], "desired_go": [60, 61, 62, 63, 64, 65, 66, 67, 68], "27": [60, 61, 62, 63, 64, 65, 66, 67, 68, 98, 99, 122, 128, 366, 368, 369, 379, 380, 381, 384], "_collate_id": [60, 61, 62, 63, 64, 65, 66, 67, 68], "0x120e21dc0": [60, 61, 62, 63, 64, 65, 66, 67, 68], "cattensor": [60, 61, 62, 63, 64, 65, 66, 67, 68, 102, 106, 122, 128, 367, 378, 381, 386], "cat_tensor": [60, 61, 62, 63, 64, 65, 66, 67, 68], "cat_next_tensor": [60, 61, 62, 63, 64, 65, 66, 67, 68], "new_storag": [60, 61, 62, 63, 64, 65, 66, 67, 68], "31": [60, 61, 62, 63, 64, 65, 66, 67, 68, 111, 112, 367, 368, 381, 382], "full_storag": [60, 61, 62, 63, 64, 65, 66, 67, 68], "0x168406fc0": [60, 61, 62, 63, 64, 65, 66, 67, 68], "from_env": 62, "use_truncated_as_don": 62, "direct_download": 62, "terminate_on_end": 62, "env_kwarg": [62, 67, 68, 140, 356, 357, 367], "reconstruct": [62, 86, 87, 287, 367, 386], "get_dataset": 62, "qlearning_dataset": 62, "fewer": [62, 79, 86], "possess": 62, "unexpectedli": 62, "traj_split": 62, "observationnorm": [62, 189, 358, 367, 368, 369, 370, 385], "maze2d": 62, "umaz": 62, "loc": [62, 102, 106, 122, 128, 159, 161, 172, 189, 219, 232, 244, 245, 250, 251, 252, 262, 266, 268, 276, 277, 290, 294, 295, 296, 297, 348, 358, 362, 367, 368, 369, 370, 372, 380, 385], "gen": 63, "dgrl": 63, "accompani": [63, 140, 177], "gap": 63, "2312": 63, "05742": 63, "gen_dgrl": 63, "procgen": 63, "bigfish": 63, "bossfight": 63, "categori": [63, 362, 364], "1m_e": 63, "1m_": 63, "comma": 63, "npy": 63, "extract": [63, 139, 259, 367, 369, 385], "mmap": [63, 67, 68], "minut": [63, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "internet": [63, 68], "connect": [63, 68], "minari": 64, "websit": [64, 66], "currenrtli": 64, "minari_data": 64, "door": 64, "torchrl_logg": [64, 376], "28": [64, 228, 366, 368, 369, 373, 374, 381, 382, 383, 384], "door_body_po": 64, "dua": 65, "graff": 65, "2017": 65, "uci": 65, "archiv": 65, "ic": 65, "edu": 65, "ml": 65, "sklearn": [65, 121], "adult_num": [65, 121], "adult_onehot": [65, 121], "mushroom_num": [65, 121], "mushroom_onehot": [65, 121], "covertyp": [65, 121], "shuttl": [65, 121], "magic": [65, 121, 371], "shuffl": [66, 85, 87, 380], "embodi": [66, 382], "institut": 66, "demonstr": [66, 369, 374, 379, 380, 381, 383, 386], "527": [66, 381], "skill": 66, "160266": 66, "googl": [66, 67, 98, 99, 116, 117, 369, 370, 379, 380], "open_x_embodi": 66, "2310": [66, 125], "08864": 66, "language_instruct": 66, "get_non_tensor": 66, "neither": [66, 381], "nor": 66, "insuffici": 66, "chosen": [66, 129, 130, 178, 179, 237, 238, 246, 264, 327, 362, 375], "openx": 66, "__will": 66, "change__": 66, "randomli": [66, 85, 160, 161, 179, 257, 262, 266, 372, 379, 380, 381, 383], "crop": [66, 145, 166, 327], "modal": [66, 367], "cmu_stretch": [66, 327], "is_init": [66, 68, 142, 158, 218, 222, 260, 261, 273, 370], "language_embed": 66, "512": [66, 215, 368, 381], "lift": 66, "green": [66, 379], "garbag": 66, "lid": 66, "roboset": 67, "h5": [67, 68, 71], "roboh": [67, 125], "concis": [67, 373], "75": [67, 368, 370, 381], "totensor": 68, "image_s": 68, "v": [68, 189, 216, 217, 220, 221, 250, 283, 290, 297, 362, 367, 368], "npz": 68, "2206": [68, 119, 120], "04779": [68, 277, 282], "vd4rl": 68, "squar": [68, 145, 219, 244, 245, 327], "rectangular": [68, 203, 204], "walker_walk": 68, "64px": 68, "height": [68, 145, 169], "veloc": [68, 100, 101, 102, 106, 122, 128, 143, 379, 380, 381, 386], "infinit": [69, 116, 117, 129, 130, 374, 383], "block": [69, 72, 97, 362, 370, 379], "pairwisedataset": [69, 360], "256": [69, 116, 117, 210, 368, 369, 379, 380, 381], "checkpoint_fil": 71, "h5_kwarg": 71, "iff": 71, "suffix": [71, 340], "h5py": 71, "create_dataset": 71, "temporarili": [71, 193, 374, 383], "immut": [72, 102, 106, 122, 128, 168, 183], "piec": [72, 82, 93, 96, 97, 367, 368, 369, 375, 379, 380, 381, 383], "scratch_dir": [73, 367, 383], "sent": [73, 74, 94, 189], "mistak": [73, 74, 94], "myclass": [73, 74, 94], "foo": [73, 74, 94, 254, 383, 386], "bar": [73, 74, 94, 254, 337, 338, 340, 344, 364, 368], "attach": [73, 74, 75, 88, 90, 94, 368], "entiti": [73, 74, 75, 88, 90, 94], "zero_": [74, 94, 197], "liststoag": 76, "max_capac": [78, 79, 367, 383], "max_priority_within_buff": [78, 79], "data_0": 78, "data_1": 78, "smoothen": 78, "tdrb": 78, "pack": [78, 216, 220, 369, 371, 386], "nd": [78, 79], "sum_tre": [78, 79], "min_tre": [78, 79], "end_kei": [79, 86, 87], "cache_valu": [79, 86, 87], "closer": 79, "readili": [79, 86, 87], "conjunct": [79, 86, 87, 368], "Will": [79, 86, 119, 327], "buffer0": [79, 86], "immutablewrit": [79, 86], "buffer1": [79, 86], "other_sampl": [79, 86], "short": [79, 86, 87, 98, 99, 111, 112, 122, 193, 220, 221, 368, 369, 371, 372, 380, 383], "unsqueez": [79, 137, 140, 143, 144, 181, 184, 367, 370, 379, 380, 381], "tolist": 79, "120110917137936e": 79, "06": [79, 211, 243, 367, 368, 369, 379, 380, 381], "uniformli": [80, 292, 386], "storageensembl": [81, 84], "samplerensembl": 81, "writerensembl": [81, 90], "num_buffer_sampl": [81, 84], "ensembl": [81, 84, 90, 91, 97, 265, 295], "forbidden": 81, "collat": 81, "0x13a2ef430": 81, "0x13a2f9310": 81, "interpol": [81, 169, 368, 370], "interpolationmod": [81, 370], "bilinear": [81, 169, 370], "0x13a2f9220": 81, "0x13a2f9f70": 81, "0x13a2d9b50": 81, "0x13a2f95b0": 81, "0x128648260": 81, "kw": [82, 93], "roundrobin": [82, 93], "incomplet": [85, 87], "fresh": 85, "haven": [85, 382], "remain": [85, 142, 149, 150, 159, 178, 231, 373], "draw": [85, 257], "slicesamplerwithoutreplac": [86, 383], "320": [86, 87, 100, 101, 368, 381], "700": [86, 87], "dataid": [86, 87], "__len__": 88, "rank_kei": 92, "rank": [92, 202], "samplerwithoutreplac": [92, 369, 380, 383], "get_insert_index": 92, "convers": [98, 99, 111, 112, 363], "2106": [98, 99, 281], "13281": [98, 99], "categorical_action_encod": [98, 99, 102, 105, 106, 107, 108, 111, 112, 119, 120, 122, 125, 128], "frame_skip": [98, 99, 100, 101, 105, 106, 107, 108, 111, 112, 113, 114, 119, 120, 125, 156, 337, 340, 347, 364, 367, 368, 369, 385], "repeat": [98, 99, 100, 101, 105, 107, 108, 111, 112, 119, 120, 125, 202, 369, 379, 380, 381], "allow_done_after_reset": [98, 99, 100, 101, 102, 105, 107, 108, 111, 112, 119, 120, 125], "toler": [98, 99, 100, 101, 105, 107, 108, 111, 112, 119, 120, 125, 211, 243], "availalb": [98, 99, 111, 112], "ant": [98, 99, 102, 106, 109, 122, 128, 382, 386], "87": [98, 99, 368, 380, 381], "acrobot": [98, 99, 100, 101, 386], "advant": [98, 99, 111, 112], "timer": [98, 99, 111, 112], "timeit": [98, 99, 111, 112], "310": [98, 99, 381], "ms": [98, 99, 111, 112], "268": [98, 99, 381], "433": [98, 99, 381], "80": [98, 99, 367, 368, 369, 379, 380, 381, 382], "213": [98, 99, 381], "8605": [98, 99], "pipelineenv": 99, "get_environ": 99, "dm_control": [100, 101, 367, 378, 386], "2006": [100, 101, 277, 282, 381], "12983": [100, 101], "task_nam": [100, 102, 106, 122, 128], "pixels_onli": [100, 101, 105, 107, 108, 125, 367, 368, 375, 376, 385, 386], "cheetah": [100, 101, 102, 106, 122, 128, 327, 367], "240": [100, 101, 381, 385], "swingup": [100, 101, 386], "swingup_spars": [100, 101], "ball_in_cup": [100, 101], "catch": [100, 101], "balance_spars": [100, 101], "three_pol": [100, 101], "two_pol": [100, 101], "finger": [100, 101], "turn_easi": [100, 101], "turn_hard": [100, 101], "fish": [100, 101], "upright": [100, 101, 368], "swim": [100, 101], "hopper": [100, 101], "hop": [100, 101], "humanoid": [100, 101, 122, 128, 378], "walk": [100, 101, 122, 128, 368, 378], "run_pure_st": [100, 101], "bring_bal": [100, 101], "bring_peg": [100, 101], "insert_bal": [100, 101], "insert_peg": [100, 101], "point_mass": [100, 101], "reacher": [100, 101], "swimmer": [100, 101], "swimmer6": [100, 101], "swimmer15": [100, 101], "walker": [100, 101], "dog": [100, 101], "trot": [100, 101], "humanoid_cmu": [100, 101], "lqr": [100, 101], "lqr_2_1": [100, 101], "lqr_6_2": [100, 101], "quadrup": [100, 101], "escap": [100, 101], "stacker": [100, 101], "stack_2": [100, 101], "stack_4": [100, 101], "deviceless": [102, 371, 373, 374, 375], "run_type_check": [102, 118], "counterenv": 102, "continuousbox": [102, 106, 122, 128, 197, 369, 379, 380, 381, 385, 386], "sort": [102, 106, 122, 128, 144, 261], "another_act": [102, 106, 122, 128], "mutabl": [102, 106, 122, 128], "_callabletransform": [102, 106, 122, 128], "batch_lock": [102, 104, 106, 122, 128, 140, 179, 183, 381], "done_keys_group": [102, 106, 122, 128], "outer": [102, 106, 122, 128, 364, 367, 368, 386], "another_don": [102, 106, 122, 128], "empty_cach": [102, 106, 122, 128, 183], "fake_tensordict": [102, 106, 122, 128, 368], "silent": [102, 106, 122, 128, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 232, 233, 234, 236, 239, 240, 242, 247, 253, 254, 256, 257, 260, 261, 264, 269, 272], "braxenv": [102, 106, 122, 128, 168, 360, 371], "envnam": [102, 106, 122, 128], "pipeline_st": [102, 106, 122, 128], "attibut": [102, 106, 122, 128], "maybe_reset": [102, 106, 122, 128], "speak": [102, 106, 122, 128, 367], "rand_act": [102, 106, 115, 122, 123, 124, 128, 140, 371], "register_gym": [102, 106, 122, 128, 371], "entry_point": [102, 106, 122, 128], "info_kei": [102, 106, 122, 128], "reward_threshold": [102, 106, 122, 128], "nondeterminist": [102, 106, 122, 128], "max_episode_step": [102, 105, 106, 107, 122, 128], "order_enforc": [102, 106, 122, 128], "autoreset": [102, 106, 122, 128], "disable_env_check": [102, 105, 106, 119, 120, 122, 128], "apply_api_compat": [102, 106, 122, 128], "nasium": [102, 106, 122, 128], "scope": [102, 106, 122, 128, 386], "dmcontrolenv": [102, 106, 122, 128, 327, 360, 367, 371, 378, 386], "dmc": [102, 106, 122, 128], "removeemptyspec": [102, 106, 122, 128], "threshold": [102, 106, 122, 128, 257, 277, 278, 369], "learnt": [102, 106, 122, 128, 354], "knowledg": [102, 106, 122, 128, 373], "checker": [102, 105, 106, 119, 120, 122, 128], "stepapicompat": [102, 106, 122, 128], "concept": [102, 106, 122, 128, 368, 383], "deem": [102, 106, 116, 117, 122, 128, 129, 130], "envgym": [102, 106, 122, 128], "0855": [102, 106, 122, 128], "0215": [102, 106, 122, 128], "0881": [102, 106, 122, 128], "0412": [102, 106, 122, 128], "1101": [102, 106, 122, 128], "0080": [102, 106, 122, 128], "0254": [102, 106, 122, 128], "0424": [102, 106, 122, 128], "9609e": [102, 106, 122, 128], "9776e": [102, 106, 122, 128], "04": [102, 106, 110, 122, 128, 366, 367, 368, 369, 381, 382, 384], "6347e": [102, 106, 122, 128], "3842e": [102, 106, 122, 128], "5338e": [102, 106, 122, 128], "3064e": [102, 106, 122, 128], "0381e": [102, 106, 122, 128], "6656e": [102, 106, 122, 128], "05": [102, 106, 122, 128, 367, 368, 379, 381, 382], "0204e": [102, 106, 122, 128], "action_spac": [102, 106, 122, 128, 152, 213, 238, 255, 256, 263, 264, 276, 277, 279, 280, 282, 283, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 370, 372, 376], "0833": [102, 106, 122, 128], "0275": [102, 106, 122, 128], "0612": [102, 106, 122, 128], "0770": [102, 106, 122, 128, 381], "1256": [102, 106, 122, 128, 381], "0082": [102, 106, 122, 128], "0186": [102, 106, 122, 128], "0476": [102, 106, 122, 128], "2221": [102, 106, 122, 128], "2256": [102, 106, 122, 128], "5930": [102, 106, 122, 128], "6937": [102, 106, 122, 128], "5865": [102, 106, 122, 128], "5479": [102, 106, 122, 128], "0187": [102, 106, 122, 128], "6825": [102, 106, 122, 128, 381], "5224": [102, 106, 122, 128], "0018": [102, 106, 122, 128, 381], "1005": [102, 106, 122, 128], "0335": [102, 106, 122, 128], "0268": [102, 106, 122, 128, 381], "0133": [102, 106, 122, 128], "0627": [102, 106, 122, 128], "0074": [102, 106, 122, 128, 381], "0488": [102, 106, 122, 128, 381], "0353": [102, 106, 122, 128], "0075": [102, 106, 122, 128, 381], "0069": [102, 106, 122, 128, 381], "0098": [102, 106, 122, 128, 381], "0058": [102, 106, 122, 128, 381], "0033": [102, 106, 122, 128, 381], "0157": [102, 106, 122, 128], "0004": [102, 106, 122, 128, 370, 381], "0381": [102, 106, 122, 128], "0452": [102, 106, 122, 128], "11355747": [102, 106, 122, 128], "04257728": [102, 106, 122, 128], "00408397": [102, 106, 122, 128], "04155852": [102, 106, 122, 128], "0389733": [102, 106, 122, 128], "01409826": [102, 106, 122, 128], "0978704": [102, 106, 122, 128], "08808327": [102, 106, 122, 128], "03970837": [102, 106, 122, 128], "00535434": [102, 106, 122, 128], "02353762": [102, 106, 122, 128], "05116226": [102, 106, 122, 128], "02788907": [102, 106, 122, 128], "06848346": [102, 106, 122, 128], "05154399": [102, 106, 122, 128], "0371798": [102, 106, 122, 128], "05128025": [102, 106, 122, 128], "dydact": [102, 106, 122, 128], "gym_env": [102, 106, 122, 128, 385], "reset_kei": [102, 106, 122, 128, 143, 173, 178, 179, 180, 379], "multitask": [102, 106, 122, 128], "multiag": [102, 106, 115, 122, 123, 124, 128, 201, 229, 237, 246, 305], "another_reward": [102, 106, 122, 128], "auto_cast_to_devic": [102, 106, 122, 128, 380], "soon": [102, 106, 122, 123, 124, 128], "__sort": [102, 106, 122, 128], "as__": [102, 106, 122, 128], "normal": [102, 106, 122, 128, 161, 189, 203, 204, 219, 223, 226, 227, 232, 244, 245, 253, 262, 266, 278, 291, 294, 340, 342, 358, 362, 364, 370, 372, 380, 386], "argmaxmodul": [102, 106, 122, 128], "n_ob": [102, 106, 122, 128, 159, 260, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 373], "n_act": [102, 106, 122, 128, 159, 276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 373], "ourselv": [102, 106, 122, 128, 369, 386], "emul": [102, 106, 122, 128], "epoch": [102, 106, 122, 128, 344, 369, 379, 380], "input_td": [102, 106, 122, 128], "rollout_td": [102, 106, 122, 128], "state_kei": [102, 106, 122, 128], "prevail": [102, 106, 122, 128, 144, 173, 201], "creator": [103, 349, 350, 356, 357, 358], "substitut": [103, 178, 189, 372], "vecnorm": [103, 358], "env_creat": [103, 367], "test_env1": 103, "_td": 103, "observation_count": [103, 386], "test_env2": 103, "sleep": [103, 386], "ps": 103, "p1": 103, "p2": 103, "9934": 103, "env_str": 104, "device_map": 104, "accross": [105, 107], "registri": 105, "asyncvectorenv": 105, "involv": [105, 107, 108, 116, 117, 125, 140, 371, 373], "pixel_observ": [105, 107, 108, 125], "pixelobservationwrapp": [105, 107, 108, 125], "adventur": [105, 107], "airraid": [105, 107, 386], "alien": [105, 107], "time_limit": 105, "timelimit": [105, 116, 117, 129, 130], "default_info_dict_read": [105, 106, 107, 122], "reader": [105, 106, 107, 122, 368], "set_info_dict_read": [105, 106, 107, 122, 371], "info_dict": [105, 106, 107, 122], "auto_register_info_dict": [105, 106, 107, 122], "multibinari": [105, 107], "multidiscret": [105, 107], "rag": [105, 107], "nested_tensor": [105, 107], "gym_conversion_exampl": [105, 107], "info_dict_read": [106, 122], "ignore_priv": 106, "baseinfodictread": 106, "tensordictprim": [106, 122, 218, 222, 273, 370], "succe": [106, 122], "underscor": 106, "primer": [106, 179, 218, 222, 273, 370], "halfcheetah": [106, 122, 136, 169, 367], "reward_run": [106, 122], "read_act": 106, "read_don": 106, "nonsens": 106, "fallback": 106, "broken": [106, 193], "read_ob": 106, "dictat": [106, 262, 266, 294, 367, 381], "read_reward": 106, "hoc": [106, 122, 372], "dict_read": 106, "my_info_kei": 106, "some_env": 106, "vecenv": 107, "vectorenv": 107, "secur": 108, "habitat3": 108, "ai": [108, 382], "habitatrenderpick": 108, "isaacgym": [109, 110], "isaacgymwrapp": [109, 360], "isaacgymenv": [110, 360], "webpag": 110, "isaac": 110, "essenc": [110, 371], "instadeepai": [111, 112], "2306": [111, 112], "09884": [111, 112], "snake": [111, 112], "grid": [111, 112, 327], "bodi": [111, 112], "body_st": [111, 112], "fruit_posit": [111, 112], "col": [111, 112], "head_posit": [111, 112], "tail": [111, 112], "game2048": [111, 112], "maze": [111, 112], "cleaner": [111, 112], "cvrp": [111, 112], "multicvrp": [111, 112], "minesweep": [111, 112], "rubikscub": [111, 112], "knapsack": [111, 112], "sudoku": [111, 112], "tsp": [111, 112], "connector": [111, 112], "v2": [111, 112, 126, 127, 302, 316, 317, 318, 319, 321, 322, 323, 324, 370, 386], "mmst": [111, 112], "graphcolor": [111, 112], "partli": [111, 112], "scrambl": [111, 112], "robotwarehous": [111, 112], "tetri": [111, 112], "binpack": [111, 112], "jobshop": [111, 112], "0x1fca91910": 111, "122": [111, 112, 381, 386], "0x1ff9baee0": 111, "134": [111, 112, 381, 383], "0x1ff9ba7c0": 111, "172": [111, 112, 381], "drastic": [112, 122, 383], "rubric": [112, 161, 268], "mo": [113, 114], "minecart": [113, 114], "mo_gym": 114, "qualnam": 115, "leverag": [115, 123, 124, 367, 380, 386], "neural": [115, 123, 124, 203, 204, 241, 265, 362, 368, 369, 370, 372, 379, 380, 381, 386], "group_map": [115, 116, 117, 123, 124, 129, 130, 131, 379], "constructiuon": [115, 123, 124], "premad": [115, 116, 117, 123, 124, 129, 130, 305], "all_in_one_group": [115, 131], "agent_0": [115, 123, 124, 131, 379], "agent_1": [115, 123, 124, 131], "agent_2": [115, 123, 124, 131], "agent_3": 115, "one_group_per_ag": [115, 123, 124], "meltingpot": [116, 117], "2211": [116, 117], "13746": [116, 117], "melt": [116, 117], "pot": [116, 117], "novel": [116, 117, 373], "social": [116, 117], "familiar": [116, 117, 368, 380, 386], "unfamiliar": [116, 117], "broad": [116, 117], "cooper": [116, 117, 379, 380], "decept": [116, 117], "reciproc": [116, 117], "trust": [116, 117, 222], "stubborn": [116, 117], "substrat": [116, 117], "ml_collect": 116, "config_dict": 116, "configdict": 116, "categorical_act": [116, 117, 123, 124, 126, 127, 129, 130], "marlgroupmaptyp": [116, 117, 123, 124, 129, 130, 131, 360, 379], "agent_nam": [116, 117, 129, 130, 131], "agent_names_to_indices_map": [116, 117, 129, 130], "env_torchrl": [116, 117], "commons_harvest__open": [116, 117], "rgb": [116, 117], "144": [116, 117, 381], "192": [116, 117, 368, 381], "collective_reward": [116, 117], "ready_to_shoot": [116, 117], "88": [116, 117, 126, 127, 367, 368, 380, 381, 382], "substrate_config": 117, "get_config": 117, "mp_env": 117, "build_from_config": 117, "default_player_rol": 117, "environn": 118, "mymbenv": [118, 202, 225], "world_model": [118, 202, 225, 287], "hidden_observ": [118, 202, 225], "mlp": [118, 202, 203, 204, 206, 207, 208, 209, 215, 218, 222, 225, 229, 250, 255, 273, 280, 282, 362, 368, 372, 373, 376, 378, 382, 385], "worldmodelwrapp": [118, 202, 225], "activation_class": [118, 202, 203, 204, 206, 207, 208, 209, 214, 215, 223, 225, 228, 229, 368, 372, 379, 380, 385], "relu": [118, 202, 210, 225, 232, 275], "activate_last_lay": [118, 202, 209, 223, 225], "sail": [119, 120], "sg": [119, 120], "10558": [119, 120], "readthedoc": 119, "en": 119, "python_interfac": 119, "envpoolmixin": 120, "env_bas": 120, "task_id": 120, "env_typ": 120, "gym_reset_return_info": 120, "envpool_env": 120, "www": [121, 226, 227], "fetch_openml": 121, "106": [121, 381], "my_env_fun": [122, 128], "custom_attribute_list": [122, 128], "custom_attribut": [122, 128], "custom_method_list": [122, 128], "custom_method": [122, 128], "deploi": [122, 128, 140], "slight": [122, 128, 368], "share_individual_td": [122, 128], "shared_memori": [122, 128], "policy_proof": [122, 128], "ll": [122, 128, 216, 217, 220, 221, 367, 368, 369, 370, 371, 372, 373, 374, 376, 380, 386], "serial_for_singl": [122, 128, 368], "circular": [122, 128, 367], "list_of_kwarg": [122, 128], "com_veloc": [122, 128], "extrem": [122, 128, 276, 278, 291, 294, 296], "head_height": [122, 128], "joint_angl": [122, 128], "torso_vert": [122, 128], "stringent": [122, 369, 379, 380], "inter": 122, "penv": 122, "env_fix": 122, "influenc": 122, "thumb": [122, 369], "suppos": [122, 340, 364, 386], "myenv": [122, 140, 148, 151], "pipe": 122, "update_kwarg": [122, 128], "pettingzoo": [123, 124, 379, 380], "pet": [123, 124], "zoo": [123, 124], "__": [123, 124], "aecenv": [123, 124], "use_mask": [123, 124], "dead": [123, 124], "done_on_ani": [123, 124, 379], "compulsori": [123, 124], "adversary_0": [123, 124, 379], "adversari": [123, 124, 379], "vectoris": [123, 124, 216, 217, 220, 221], "sisl": 123, "multiwalker_v9": 123, "return_st": [123, 124], "aec": [123, 124], "n_piston": [123, 124], "pistonball_v6": [123, 124], "piston": [123, 124], "piston_0": [123, 124], "piston_1": [123, 124], "piston_20": [123, 124], "tictactoe_v3": [123, 124], "player": [123, 124], "player_1": [123, 124], "player_2": [123, 124], "butterfli": 124, "parallel_env": [124, 367, 385, 386], "vikashplu": 125, "wiki": 125, "06828": 125, "from_depth": 125, "smacv2": [126, 127], "starcraft": [126, 127], "challeng": [126, 127, 371, 381, 382], "10gen_terran": [126, 127], "10gen_zerg": [126, 127], "10gen_protoss": [126, 127], "3m": [126, 127], "8m": [126, 127, 382], "25m": [126, 127], "5m_vs_6m": [126, 127], "8m_vs_9m": [126, 127], "10m_vs_11m": [126, 127], "27m_vs_30m": [126, 127], "mmm": [126, 127], "mmm2": [126, 127], "2s3z": [126, 127], "3s5z": [126, 127], "3s5z_vs_3s6z": [126, 127], "3s_vs_3z": [126, 127], "3s_vs_4z": [126, 127], "3s_vs_5z": [126, 127], "1c3s5z": [126, 127], "2m_vs_1z": [126, 127], "corridor": [126, 127], "6h_vs_8z": [126, 127], "2s_vs_1sc": [126, 127], "so_many_banel": [126, 127], "bane_vs_ban": [126, 127], "2c_vs_64zg": [126, 127], "old": [126, 127, 291, 386], "smac": [126, 127], "map_nam": [126, 127], "176": [126, 127, 381], "battle_won": [126, 127], "dead_al": [126, 127], "dead_enemi": [126, 127], "episode_limit": [126, 127], "322": [126, 127, 381], "Or": [126, 127, 228], "procedur": [126, 127], "distribution_config": [126, 127], "n_unit": [126, 127], "n_enemi": [126, 127], "team_gen": [126, 127], "dist_typ": [126, 127], "weighted_team": [126, 127], "unit_typ": [126, 127], "marin": [126, 127], "maraud": [126, 127], "medivac": [126, 127], "exception_unit_typ": [126, 127], "start_posit": [126, 127], "surrounded_and_reflect": [126, 127], "map_x": [126, 127], "map_i": [126, 127], "capability_config": [126, 127], "131": [126, 127, 381, 383], "starcraft2env": 127, "proroklab": [129, 130], "vectorizedmultiagentsimul": [129, 130], "2207": [129, 130], "03530": [129, 130], "basescenario": 129, "descript": [129, 139, 368, 369], "perfrom": [129, 130], "defaultt": 129, "continuous_act": [129, 130, 325, 379, 380], "repositiori": 129, "sparsiti": 129, "unbatched_action_spec": [129, 130, 380], "unbatched_observation_spec": [129, 130], "unbatched_reward_spec": [129, 130], "het_spec": [129, 130], "het_specs_map": [129, 130], "flock": [129, 130, 325], "agent_collision_rew": [129, 130], "agent_distance_rew": [129, 130], "ca": 131, "environment4": 131, "get_group_map": 131, "sumbodul": 132, "model_bas": [133, 134, 202, 225], "out_keys_inv": [133, 146, 148, 149, 151, 161, 162, 163, 167, 168, 175, 182, 381], "decod": [133, 233], "model_based_env": [133, 286], "dreamerenv": [133, 286, 360], "model_based_env_ev": 133, "num_interv": 136, "out_action_kei": 136, "samplingstrategi": 136, "optino": 136, "intenum": 136, "interv": [136, 326, 327, 336, 346, 368, 381], "action_disc": 136, "transform_input_spec": [136, 140, 147, 148, 149, 150, 161, 163, 167, 168, 173, 177, 178, 179, 182, 184, 186, 191], "masker": 137, "tensor_spec": [137, 192, 201, 283, 284, 294, 296], "maskedenv": 137, "ones_lik": 137, "scatter": 137, "fill_float": 139, "fill_int": 139, "fill_bool": 139, "someenvclass": 139, "autoresetenv": 139, "argumet": 139, "fooenv": 139, "sign": [139, 175, 307, 379], "envtyp": 139, "reshape_fn": 140, "reset_func": 140, "environmt": 140, "request": [140, 166], "tensordict_batch_s": 140, "els": [140, 216, 217, 220, 221, 233, 362, 364, 367, 368, 369, 370, 379, 380, 381, 382], "tensordict_reset": [140, 381], "transform_env_batch_s": [140, 147, 182, 191], "transform_output_spec": [140, 147, 148, 149, 153, 159, 167, 168, 174, 177, 182, 191], "transform_observation_spec": [140, 143, 144, 145, 146, 147, 148, 149, 152, 153, 155, 157, 158, 159, 161, 163, 167, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 191, 381], "transform_reward_spec": [140, 141, 146, 147, 148, 149, 153, 159, 167, 168, 171, 172, 173, 174, 175, 177, 182, 184, 191], "transformfull_done_spec": [140, 147, 148, 149, 153, 159, 167, 168, 174, 177, 182, 191], "biner": 141, "burn_in": 142, "burn": 142, "date": [142, 330], "retur": 142, "burnt": 142, "gru_modul": [142, 218, 273], "input_s": [142, 216, 217, 218, 220, 221, 222, 273, 370], "hidden_s": [142, 216, 217, 218, 220, 221, 222, 273, 370], "set_recurrent_mod": [142, 218, 222, 370], "burn_in_transform": 142, "gru": [142, 179, 217, 218, 273], "num_lay": [142, 216, 218, 220, 222, 233, 234, 273], "86": [142, 368, 379, 380, 381], "3008": [142, 368], "0344": 142, "padding_valu": [143, 226, 227], "as_invers": 143, "movement": 143, "1312": [143, 368], "5602": 143, "unsqueezetransform": [143, 381, 383], "consumpt": [143, 360], "followin": 143, "pictur": 143, "pixels_trsf": [143, 383], "grayscal": [143, 368, 370, 383, 386], "data_exclud": [143, 383], "del_kei": [144, 185, 378, 381], "unsqueeze_if_oor": 144, "observation_posit": 144, "observation_veloc": 144, "key1": [144, 335, 343], "key2": [144, 335, 343], "center": [145, 327], "width": [145, 169], "scalar": [146, 171, 207, 209, 230, 231, 253, 257, 258, 261, 272, 276, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 305, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 362, 368, 373, 381], "permit": [146, 155, 184, 276, 278, 291, 294, 296], "rewardsc": [147, 183, 367, 368, 370], "rewardclip": 147, "transformed_env": [147, 182, 183, 371], "transform_env_devic": [147, 149, 182, 191], "dtype_in": 148, "dtype_out": 148, "scan": [148, 151, 267, 268], "resp": [148, 151], "not_transform": [148, 151], "constructedw": [148, 151], "orig_devic": 149, "unspecifi": 149, "transform_done_spec": [149, 182, 191], "num_actions_effect": 150, "max_act": 150, "include_forward": 150, "num_act": [150, 284, 372], "action_out": 150, "_call": [150, 155, 381], "eol_kei": 152, "lives_kei": 152, "eol_attribut": 152, "unwrap": 152, "breakout": 152, "210": [152, 163, 381], "160": [152, 163, 368, 381], "eol_transform": 152, "eol": 152, "dqnloss": [152, 276, 277, 279, 282, 284, 285, 286, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 305, 351, 360, 363, 368, 370, 376], "register_kei": 152, "loss_or_advantag": 152, "lossmodul": [152, 344, 353, 354, 360], "valueestimatorbas": [152, 292, 360], "excluded_kei": 153, "finit": [154, 372, 383], "first_dim": 155, "last_dim": 155, "allow_positive_dim": [155, 184], "th": [155, 184, 216, 220, 381], "frameskip": 155, "repeatedli": [156, 369, 380], "init_kei": [158, 260], "tracker": 158, "pi_curr": 159, "pi_0": 159, "overfit": 159, "probabilist": [159, 262, 360, 369, 385], "get_dist": [159, 266, 267], "mod": [159, 218, 222, 260, 269, 370, 376], "normalparamextractor": [159, 362, 369, 372, 380], "probabilisticactor": [159, 250, 251, 252, 254, 276, 277, 281, 283, 284, 290, 293, 294, 295, 296, 297, 299, 362, 367, 369, 372, 379, 380], "tanhnorm": [159, 250, 251, 252, 262, 268, 276, 277, 290, 294, 295, 296, 297, 299, 360, 369, 380, 385], "return_log_prob": [159, 250, 251, 252, 262, 266, 268, 296, 362, 369, 372, 379, 380, 385], "apply_": 159, "copy_": [159, 367], "formulat": 159, "diverg": [159, 218, 222, 262, 266, 287, 291], "noop": [160, 385], "trial": 160, "standard_norm": [161, 172, 189, 367, 368, 370], "affin": [161, 172, 189], "layer": [161, 189, 203, 204, 206, 207, 212, 214, 216, 217, 218, 220, 221, 222, 223, 228, 229, 230, 231, 233, 234, 241, 242, 248, 259, 269, 362, 368, 369, 370, 372, 379, 382], "epsilon": [161, 253, 257, 258, 261, 298, 342, 368, 369, 370, 372], "recover": 161, "set_default_tensor_typ": 161, "doubletensor": 161, "isclos": 161, "next_ob": [161, 307, 308, 309, 310, 385], "init_stat": [161, 367, 368, 369, 370], "3752e": 161, "5087e": 161, "9294e": 161, "9636": 161, "5608": 161, "6408": 161, "num_it": [161, 368, 369], "reduce_dim": [161, 367, 368, 369, 370], "cat_dim": [161, 367, 368, 369, 370], "keep_dim": [161, 368, 370], "statist": [161, 189, 296, 358, 367, 368, 369, 386], "gaussian": [161, 179, 202, 225, 230, 231, 236, 253, 369, 379], "empir": [161, 202, 225, 262, 266, 367, 369, 380], "3d": [161, 203], "third": [161, 256, 379, 380], "reorder": 163, "in_keys_in": 163, "channel": [163, 181, 228, 233, 234, 368], "r3m": [165, 382], "resnet": [165, 185, 187], "visual": [165, 185, 187, 327, 369, 379, 381], "embed": [165, 185, 186, 187, 206, 237, 249, 250, 251, 252, 265, 270, 382], "ego4d": [165, 185, 187], "univers": [165, 185, 187, 371], "suraj": [165, 185], "nair": [165, 185], "aravind": [165, 185], "rajeswaran": [165, 185], "vikash": [165, 185, 187], "kumar": [165, 185, 187], "chelsea": [165, 185], "finn": [165, 185], "abhinav": [165, 185], "gupta": [165, 185], "2203": [165, 185, 225, 382], "12601": [165, 185, 382], "_init": [165, 185, 367], "snippet": [165, 185, 367], "resnet50": [165, 187, 382], "model_nam": [165, 185, 187, 330], "resnet34": 165, "resnet18": 165, "r3m_vec": [165, 382], "feed": [165, 187, 292, 362, 367, 379, 380, 383], "stack_imag": [165, 187], "tread": [165, 187], "separet": [165, 187], "hub": [165, 187, 371, 382], "resnet50_weight": [165, 187], "imagenet1k_v1": [165, 187], "download_path": [165, 187], "tensor_pixels_kei": [165, 187], "sub_seq_len": 166, "sample_dim": [166, 367], "primarili": [166, 372], "hesit": 166, "robust": 166, "mix": [166, 237, 246, 305, 367, 379, 380], "improp": 166, "dummyenv": 167, "another_oth": 167, "other_reward": 167, "create_copi": 168, "stuff": [168, 374], "newnam": 168, "r2g": 170, "reward_to_go": 170, "bernoulli_": 170, "9010": 170, "9404": [170, 313], "9701": [170, 313], "9900": [170, 313], "0000": [170, 180, 257, 258, 269, 313, 369, 370, 381, 385], "crash": 170, "clamp_min": 171, "clamp_max": 171, "clip_min": 171, "clip_max": 171, "episode_": 173, "reward1": 173, "reward2": 173, "episode_reward": [173, 379, 380], "keep_reward": 174, "keep_don": 174, "logical_or": 175, "squeeze_dim": 176, "step_count_kei": 177, "update_don": 177, "disjunct": 177, "recognis": 177, "target_return": 178, "subtract": 178, "default_valu": [179, 273, 370], "unit": [179, 202, 214, 216, 217, 233, 234, 239, 240, 369], "transfomedenv": 179, "mykei": 179, "__unless": 179, "exists__": 179, "get_primers_from_modul": [179, 218, 222, 360], "10th": 180, "0216": 180, "1149": 180, "1990": [180, 382], "2749": 180, "3281": 180, "9290": 180, "3702": 180, "8978": 180, "from_int": 181, "shape_toler": 181, "permuat": 181, "ri": 181, "principl": 182, "cattransform": 182, "notabl": 182, "rewardsum": [182, 191, 200, 379, 380], "smoothli": 183, "add_1": 183, "cache_spec": 183, "set_missing_toler": 183, "keyerror": 183, "unsqueeze_dim": [184, 381], "danger": 184, "vc1": 185, "vc1_vec": 185, "untrain": 185, "make_noload_model": 185, "vip": [186, 187, 382], "implicit": [187, 283, 290, 383], "jason": 187, "ma": 187, "shagun": 187, "sodhani": 187, "dinesh": 187, "jayaraman": 187, "osbert": 187, "bastani": 187, "ami": 187, "zhang": 187, "vip_vec": 187, "final_nam": 188, "sb3": 188, "terminal_obs_read": 188, "truli": [188, 385], "till": 188, "shared_td": 189, "decai": [189, 253, 257, 298, 342, 367, 368, 370, 386], "9999": [189, 381], "0001": [189, 214, 232, 369, 381], "to_observation_norm": 189, "frozen_copi": 189, "race": 189, "underflow": [189, 342], "build_td_for_shared_vecnorm": 189, "memmori": 189, "queue": [189, 383], "td_share": 189, "unfreez": 189, "train_env": 189, "eval_env": 189, "state_dim": [190, 205, 210, 236, 239, 240, 254], "action_dim": [190, 205, 206, 208, 210, 236, 254, 367, 378], "gsde": [190, 295, 358], "gsdemodul": 190, "rb_transform": 191, "resist": 191, "insensit": 191, "sensit": [191, 368], "_orig": 191, "95": [191, 225, 301, 368, 369, 370, 381], "tdreset": [191, 378], "window": [191, 260, 379, 383, 385], "edit": [191, 374], "cube": 192, "check_dtyp": 193, "discrep": [193, 276, 278, 279, 280, 291, 294, 296, 305], "rng": [193, 381], "revert": [193, 372, 383], "probabilistictdmodul": [198, 199, 223, 262, 266, 306, 340], "next_tensordict": 200, "keep_oth": [200, 381], "exclude_reward": 200, "exclude_don": 200, "exclude_act": 200, "next_": 200, "funtion": 200, "_stepmdp": 200, "write_full_fals": 201, "_terminated_or_trunc": 201, "entropi": [202, 276, 277, 278, 283, 284, 290, 291, 293, 294, 295, 297, 299, 380], "botev": 202, "2013": 202, "cem": 202, "plan": [202, 224, 225], "varianc": [202, 219, 232, 244, 245, 363, 367, 369, 380], "k": [202, 216, 217, 220, 221], "maximis": [202, 206, 208, 225, 362, 368, 369, 380], "modelbasedenv": [202, 225], "planning_horizon": [202, 225], "optim_step": [202, 225, 368, 376], "mpc": [202, 224, 225], "num_candid": [202, 225], "candid": [202, 225], "top_k": [202, 225], "modelbasedenvbas": [202, 224, 225, 360], "safemodul": [202, 224, 250, 252, 266, 276, 277, 283, 284, 290, 294, 295, 296, 297, 299, 349, 350, 354, 360, 385], "num_cel": [203, 204, 206, 207, 208, 209, 214, 215, 218, 222, 223, 228, 229, 250, 273, 368, 369, 370, 372, 373, 376, 379, 380, 385], "elu": [203, 204, 206, 207, 208, 209, 214, 215, 228, 368, 385], "activation_kwarg": [203, 204, 223], "norm_class": [203, 204, 206, 207, 223], "norm_kwarg": [203, 204, 223], "bias_last_lay": [203, 204, 206, 207, 208, 209, 215, 223], "aggregator_class": [203, 204, 206, 207, 368, 370, 385], "squashdim": [203, 204, 206, 215, 228, 385], "aggregator_kwarg": [203, 204, 206, 207, 368, 370], "squeeze_output": [203, 204, 206, 207, 368, 370], "cell": [203, 204, 216, 217, 218, 220, 221, 222, 223, 228, 229, 369, 371, 372, 373, 374, 375, 376], "kernel": [203, 204, 215, 228], "cnet": [203, 204], "conv3d": 203, "lazyconv2d": [204, 206, 207, 215, 228, 385], "transformer_config": [205, 236, 254], "decisiontransform": [205, 236], "dtconfig": [205, 210, 236], "2202": [205, 210, 293], "05607": [205, 210, 293], "return_to_go": [205, 210, 236, 254], "conv_net_kwarg": [206, 207], "mlp_net_kwarg": [206, 207, 208], "use_avg_pool": [206, 207], "WITH": [206, 207, 208, 209, 261, 298], "1509": [206, 207, 208, 209, 225, 261, 280, 289, 298, 381], "02971": [206, 207, 208, 209, 261, 298], "reus": [206, 334], "convnet": [206, 207, 215, 228, 370, 372, 385], "ndims_in": 206, "avgpool": [206, 207], "lazylinear": [206, 207, 208, 209, 215, 223, 362, 369, 372, 381, 382, 385], "2304": [206, 368], "adaptiveavgpool2d": [207, 368, 370], "output_s": [207, 368, 370], "squeeze2dlay": 207, "400": [208, 209, 375, 380, 381, 383], "mlp_net_kwargs_net1": 209, "mlp_net_kwargs_net2": 209, "mlp1": 209, "mlp2": 209, "decion": 210, "desdescrib": 210, "n_embd": 210, "n_layer": [210, 216, 220], "n_head": 210, "n_inner": 210, "n_posit": 210, "resid_pdrop": 210, "attn_pdrop": 210, "gpt2config": 210, "atol": [211, 243], "rtol": [211, 243], "batch_shap": [211, 243], "event_shap": [211, 243], "absolut": [211, 243, 367], "densiti": [211, 226, 227, 235, 245], "mass": [211, 226, 227, 235, 245, 381], "rsampl": [211, 227, 235, 266], "sample_shap": [211, 226, 227, 235], "softmax": [212, 227, 235, 255, 256], "var_num": [213, 238, 255, 256, 264], "action_value_kei": [213, 238, 255, 256, 263, 264, 292, 305], "action_mask_kei": [213, 238, 255, 256, 257, 258, 263, 264], "perspect": [213, 256, 285, 369], "1707": [213, 256, 285, 294], "06887": [213, 256, 285], "mult": [213, 229, 238, 255, 256, 263, 264], "tensordict_modul": [213, 216, 217, 220, 221, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 283, 284, 290, 294, 295, 296, 297, 299, 362], "nbin": [213, 255, 362], "customdistributionalqv": 213, "log_softmax": [213, 255], "from_modul": [213, 265, 268, 385], "one_hot": [213, 227, 238], "qvalue_actor": [213, 238, 255, 263, 362], "to_modul": [213, 265, 268, 367, 385], "std_bia": 214, "std_min_val": 214, "belief": [214, 233, 239, 240], "1912": [214, 286, 287, 288], "01603": [214, 286, 287, 288], "softplu": [214, 232, 272, 274, 275], "out_features_valu": 215, "cnn_kwarg": [215, 368], "mlp_kwarg": [215, 368], "duel": 215, "cnn": [215, 228, 368, 372, 385], "06581": 215, "batch_first": [216, 218, 220, 222, 370], "bidirect": [216, 220, 370], "cudnn": [216, 217, 220, 221, 370], "vmap": [216, 217, 220, 221, 247, 265, 268, 385], "rnn": [216, 217, 220, 221, 370, 372], "device_count": [216, 217, 220, 221, 386], "n_in": [216, 217, 220, 221], "n_out": [216, 217, 220, 221], "h0": [216, 217, 220, 221], "h1": [216, 217, 220, 221], "call_gru": [216, 217], "h_out": [216, 217, 220, 221], "batched_cal": [216, 217, 220, 221], "gate": [216, 217, 220], "r_t": 216, "sigma": [216, 217, 219, 220, 221, 244, 245, 253, 261, 369, 379], "w_": [216, 217, 220, 221], "ir": [216, 217], "x_t": [216, 220], "b_": [216, 217, 220, 221], "hr": [216, 217, 220], "h_": [216, 217, 220], "z_t": 216, "iz": [216, 217], "hz": [216, 217], "n_t": 216, "odot": [216, 217, 220, 221], "hn": [216, 217, 220], "h_t": [216, 220], "sigmoid": [216, 217, 220, 221], "hadamard": [216, 217, 220, 221], "multilay": [216, 220], "_t": [216, 220, 380, 381], "ge": [216, 220], "bernoulli": [216, 220], "b_ih": [216, 217, 220, 221, 222], "b_hh": [216, 217, 220, 221, 222], "seq": [216, 218, 220, 222, 260, 370, 376, 378], "h_0": [216, 220, 221], "unbatch": [216, 220], "pack_padded_sequ": [216, 220], "pack_sequ": [216, 220], "num": [216, 220, 376], "_layer": [216, 220], "_size": [216, 217, 220, 221], "h_n": [216, 220], "packedsequ": [216, 220], "weight_ih_l": [216, 220], "learnabl": [216, 217, 220, 221], "w_ir": 216, "w_iz": 216, "w_in": 216, "num_direct": [216, 220], "weight_hh_l": [216, 220], "w_hr": 216, "w_hz": 216, "w_hn": 216, "bias_ih_l": [216, 220], "b_ir": 216, "b_iz": 216, "b_in": 216, "bias_hh_l": [216, 220], "b_hr": 216, "b_hz": 216, "b_hn": 216, "mathcal": [216, 217, 220, 221], "sqrt": [216, 217, 220, 221, 261], "frac": [216, 217, 220, 221, 369], "seq_len": [216, 220], "subtli": 216, "matrix": [216, 220, 230, 231], "contrast": [216, 289, 383], "hx": [216, 217, 220, 221], "lstmcell": [217, 222], "gru_cel": 217, "z": 217, "weight_ih": [217, 221], "weight_hh": [217, 221], "bias_ih": [217, 221], "bias_hh": [217, 221], "rocm": [217, 221], "embedd": [218, 222], "grucel": [218, 265], "python_bas": [218, 222], "recurrent_st": [218, 222, 273, 370], "custom_kei": [218, 222], "recurrent_mod": [218, 222], "make_tensordict_prim": [218, 222, 370], "rs": [218, 367], "gru_module_train": 218, "policy_train": [218, 222], "traj_td": [218, 222], "policy_infer": [218, 222], "td_inf": [218, 222], "assert_clos": [218, 222], "upscal": [219, 244, 245], "tanh_loc": [219, 244, 245], "event_dim": [219, 243, 244], "ultim": [219, 244, 245], "poor": [219, 244, 245], "explos": [219, 244, 245], "switch": [219, 245, 325], "formula": [219, 244, 245, 276, 278, 291, 294, 363, 369], "proj_siz": 220, "c0": [220, 221], "c1": [220, 221], "call_lstm": [220, 221], "c_out": [220, 221], "i_t": 220, "ii": [220, 221], "hi": [220, 221], "f_t": 220, "hf": [220, 221], "g_t": 220, "ig": [220, 221], "hg": [220, 221], "o_t": 220, "ho": [220, 221], "c_t": 220, "c_": 220, "forget": 220, "1402": 220, "1128": 220, "c_0": [220, 221], "proj": 220, "c_n": 220, "w_ii": 220, "w_if": 220, "w_ig": 220, "w_io": 220, "w_hi": 220, "w_hf": 220, "w_hg": 220, "w_ho": 220, "b_ii": 220, "b_if": 220, "b_ig": 220, "b_io": 220, "b_hi": 220, "b_hf": 220, "b_hg": 220, "b_ho": 220, "weight_hr_l": 220, "_revers": 220, "analog": [220, 372], "cn": 220, "lstm_cell": 221, "h_1": 221, "c_1": 221, "time_step": [221, 260], "cx": 221, "correspont": 222, "recurrent_state_h": [222, 370], "recurrent_state_c": [222, 370], "triplet": [222, 263, 264], "lstm_modul": 222, "rs_h": 222, "rs_c": 222, "hidden0": 222, "hidden1": 222, "single_bias_last_lay": 223, "layer_class": 223, "layer_kwarg": 223, "perceptron": [223, 372], "aslo": 223, "42": [223, 276, 277, 279, 283, 290, 297, 367, 368, 381], "noisylinear": [223, 230, 360, 368], "noisylazylinear": [223, 360], "mpcplanner": 224, "tensordict_out": [224, 386], "mppi": 225, "covari": 225, "william": [225, 296], "aldrich": 225, "theodor": 225, "01149": 225, "hansen": 225, "wang": 225, "su": 225, "04955": 225, "valueoper": [225, 250, 251, 252, 276, 277, 278, 279, 284, 290, 291, 294, 295, 296, 297, 299, 354, 362, 367, 369, 373], "tdlambdaestim": [225, 360, 367], "value_net": [225, 280, 282, 296, 307, 308, 309, 310, 369, 372, 373, 376], "adv": 225, "lmbda": [225, 301, 307, 310, 312, 318, 319, 320, 323, 324, 363, 367, 369, 380], "value_network": [225, 279, 280, 282, 283, 285, 290, 297, 307, 308, 309, 310, 363, 367, 369, 373, 376, 379], "temperatur": [225, 277, 283, 290], "neg_inf": [226, 227], "inf": [226, 227], "api_doc": [226, 227], "tf_agent": [226, 227], "event": [226, 227, 235, 316, 317, 318, 319, 321, 322, 323, 324, 383], "unnorm": [226, 227, 235], "sparse_mask": [226, 227], "dens": [226, 227], "0831": [226, 227], "1203": [226, 227], "0928": [226, 227], "1972": [226, 227], "grad_method": [227, 235], "reparamgradientstrategi": [227, 235], "passthrough": [227, 235], "proxi": [227, 235, 262, 363], "relaxedonehot": [227, 235], "zeros_lik": [227, 381], "sample_non_valid": 227, "share_param": [228, 229, 379, 380], "homogen": [228, 229, 379, 380], "agent_network": [228, 229], "modulelist": [228, 229, 385], "2592": [228, 368], "decentr": 228, "n_agent_input": [229, 379, 380], "n_agent_output": [229, 379, 380], "lazili": [229, 381], "toech": 229, "centalis": 229, "shown": [229, 362, 378, 379, 380, 383], "std_init": [230, 231], "initialize_paramet": 230, "isol": [230, 292], "1706": [231, 246], "10295v3": 231, "induc": 231, "aid": 231, "scale_map": 232, "biased_softplus_1": 232, "scale_lb": [232, 239, 240], "module_norm": 232, "1803": [233, 234, 237], "10122": [233, 234], "rnn_hidden": 233, "latent": 234, "excacli": 235, "inres": 236, "mu": [236, 261, 369], "state_shap": [237, 305], "mixing_embed_dim": [237, 305], "qmix": [237, 379, 380], "mixer": [237, 246, 305], "monoton": 237, "hyper": 237, "11485": 237, "qmixerloss": [237, 246], "qmix_vdn": [237, 246], "vdn": [237, 246], "greedi": [238, 256, 257, 258, 264, 368, 370, 372], "hidden_dim": [239, 240], "posterior": [239, 287], "rssm": [239, 240, 287], "1811": [239, 240], "04551": [239, 240], "obs_embed": 239, "rnn_hidden_dim": 240, "dream": 240, "tanhtransform": 244, "get_mod": 244, "adam": [244, 367, 368, 369, 370, 373, 376, 379, 380, 381], "decomposit": 246, "05296": 246, "hide": [247, 369, 379, 380], "satisfi": [247, 362], "vmap_dim": 247, "lam": 247, "sample_in": 247, "sample_in_td": 247, "vm": 247, "translat": [249, 262], "character": [249, 255, 262, 263, 265, 383], "overflow": [249, 255, 256, 262, 263, 264, 265, 266], "td_modul": [249, 250, 251, 252, 262, 265, 266, 268, 270, 372, 385], "3635": 249, "0340": 249, "1476": 249, "3911": [249, 381], "1664": [249, 368, 381], "5455": 249, "2247": 249, "4583": 249, "2916": 249, "2160": 249, "5337": 249, "5193": 249, "grad_fn": [249, 257, 258, 385], "addmmbackward0": 249, "actorvalueoper": [250, 362, 372], "get_policy_oper": [250, 251, 252, 278, 291, 294, 362], "standalon": [250, 251, 252, 372], "tdmodul": [250, 251, 252, 354], "get_critic_oper": 250, "common_oper": [250, 252], "policy_oper": [250, 251, 252], "value_oper": [250, 251, 252], "normalparamwrapp": [250, 251, 252, 262, 268, 276, 277, 284, 290, 294, 295, 296, 297, 299, 360, 385], "module_hidden": [250, 252], "td_module_hidden": [250, 252], "module_act": [250, 252], "td_module_act": [250, 251, 252], "module_valu": [250, 251, 252], "td_module_valu": [250, 251, 252], "state_action_valu": [250, 270, 277, 283, 290, 297, 306, 354, 362, 367, 379, 385], "td_clone": [250, 251, 252], "tensordictmodulewrapp": [250, 349, 350, 354], "get_policy_head": [250, 251, 252], "safesequenti": [250, 251, 252, 305], "head": [250, 252, 273, 278, 291, 294], "get_value_head": [250, 251, 252], "get_value_oper": [250, 251, 252, 278, 291, 294], "action_modul": 251, "state_valu": [251, 252, 270, 278, 283, 290, 291, 294, 295, 297, 307, 308, 309, 310, 312, 314, 316, 318, 320, 321, 323, 362, 367, 369, 380], "qualiti": [252, 362], "actorcriticoper": [252, 278, 291, 294, 362, 372], "embeddig": 252, "refet": 252, "actorcriticwrapp": [252, 362, 367], "po": [253, 258], "sigma_init": [253, 379], "sigma_end": [253, 379], "annealing_num_step": [253, 257, 258, 261, 367, 368, 370, 372, 376, 379], "captur": [253, 257, 258, 261], "omiss": [253, 257, 258, 261], "ommit": [253, 257, 258, 261], "inferec": 254, "set_tensor_kei": 254, "dt_inference_wrapp": 254, "baz": 254, "inference_context": 254, "obs_dim": 254, "tanhdelta": [254, 360, 367, 379], "dtactor": 254, "actor_modul": [254, 385], "dist_class": 254, "dist_kwarg": 254, "distribution_kwarg": [254, 262, 266, 369, 379, 380], "inference_actor": 254, "sequence_length": 254, "mask_context": 254, "out_act": 254, "qvaluemodul": [255, 263, 305, 370, 372, 376], "distributionaldqnnet": 255, "make_log_softmax": 255, "my_action_valu": [256, 264], "chanc": 256, "thid": 256, "eps_init": [257, 258, 261, 368, 370, 372, 376], "eps_end": [257, 258, 261, 368], "explorative_polici": [257, 258, 261], "9055": [257, 258, 381], "9277": [257, 258], "6295": [257, 258], "2532": [257, 258], "addbackward0": [257, 258], "lmheadmodel": 259, "actor_head": [259, 278, 291, 294], "base_model": 259, "lm_head": 259, "macro": 260, "lookahead": 260, "n_action": [260, 277, 280, 282, 293, 297], "reshape_cat": 260, "actor_bas": 260, "obs_cat": 260, "obs_cat_reshap": 260, "action_orig": 260, "counter": [260, 337, 364], "ornstein": [261, 367], "uhlenbeck": [261, 367], "ou": [261, 367], "correl": 261, "noise_t": 261, "noise_": 261, "theta": [261, 369, 381], "sigma_t": 261, "sigma_": 261, "anneal": [261, 368, 372, 379], "ou_prev_nois": 261, "ou_step": 261, "x0": 261, "sigma_min": 261, "n_steps_ann": 261, "is_init_kei": 261, "_ou_prev_nois": 261, "_ou_step": 261, "default_interaction_typ": [262, 266, 372], "interaction_typ": [262, 266], "datacollectorbas": [262, 346, 349, 350, 354, 360], "set_interaction_typ": [262, 266], "compositedistribut": [262, 372], "distribution_map": 262, "name_map": 262, "cache_dist": [262, 266], "n_empirical_estim": [262, 266], "compound": [262, 372], "categ": 262, "chose": 264, "functionalmodul": 265, "functionalmodulewithbuff": 265, "td_fmodul": 265, "td_function": 265, "td_state": 265, "params_repeat": 265, "td_vmap": [265, 268], "random_sampl": [265, 266], "suppli": 266, "fist": 266, "log_prob_kei": [266, 380], "probabilistictensordictsequenti": [267, 276, 278, 291, 294, 296, 349, 350, 385], "partial_toler": [267, 268, 378], "who": [267, 268], "AND": [267, 268], "tensordictsequenci": 268, "tensordictsequ": 268, "safeprobabilisticmodul": [268, 362], "spec1": 268, "net1": 268, "module1": 268, "td_module1": 268, "spec2": 268, "module2": 268, "td_module2": 268, "clamp": [269, 287, 344, 379, 381], "boundari": [269, 369, 379, 380], "resolut": 269, "9944": 269, "9991": 269, "3020": 269, "2299": [269, 381], "5418": 269, "2989": 269, "6849": 269, "3169": 269, "2690": 269, "9649": [269, 381], "5686": 269, "8602": 269, "0315": 269, "8455": [269, 381], "6027": 269, "4746": 269, "7843": 269, "7782": 269, "2111": 269, "5115": 269, "4687": 269, "5760": 269, "custommodul": 270, "imaginari": 271, "imagin": 271, "transition_model": 271, "get_reward_oper": 271, "get_transition_model_oper": 271, "min_val": [272, 275], "_bia": 272, "surject": 275, "expln": 275, "biased_softplu": [275, 360], "beggin": 275, "biased_softplus_": 275, "syntax": [275, 367], "met": [275, 379, 381], "1602": 276, "01783v2": 276, "actor_network": [276, 277, 278, 279, 281, 283, 284, 290, 291, 293, 294, 295, 296, 297, 299, 367, 369, 373, 379, 380], "critic_network": [276, 278, 291, 294, 296, 369, 380], "entropy_bonu": [276, 278, 291, 294, 369], "favour": [276, 278, 291, 294], "samples_mc_entropi": [276, 278, 291, 293, 294], "mont": [276, 278, 291, 294, 367], "carlo": [276, 278, 291, 294, 367], "entropy_coef": [276, 278, 291, 294, 369, 380], "critic_coef": [276, 278, 291, 294, 369], "loss_critic_typ": [276, 278, 291, 294, 296, 369], "l1": [276, 278, 279, 280, 284, 291, 294, 295, 296, 299, 302, 305, 362, 367], "l2": [276, 278, 279, 280, 281, 282, 284, 287, 288, 291, 294, 295, 296, 299, 302, 305, 367, 379], "smooth_l1": [276, 277, 278, 279, 280, 283, 284, 290, 291, 294, 295, 296, 297, 299, 302, 305, 369], "separate_loss": [276, 278, 279, 283, 284, 290, 291, 294, 295, 296, 297, 299], "propag": [276, 278, 279, 283, 284, 290, 291, 294, 295, 296, 297, 299, 307, 308, 309, 310, 369, 379, 380], "advantage_kei": [276, 278, 291, 294, 296, 307, 308, 309, 310], "value_target_kei": [276, 278, 291, 294, 296, 307, 308, 309, 310], "value_target": [276, 278, 291, 294, 296, 307, 308, 309, 310, 369, 380], "ddp": [276, 278, 291, 294, 296], "fsdp": [276, 278, 291, 294, 296], "divid": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 293, 294, 295, 296, 297, 299, 347, 362, 367, 379, 380, 381], "clip_valu": [276, 278, 291, 294, 296], "loss_crit": [276, 294, 369, 380], "loss_entropi": [276, 294, 369, 380], "loss_object": [276, 294, 369, 380], "recur": [276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 307, 308, 309, 310, 311, 372], "next_reward": [276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 307, 308, 309, 310], "next_don": [276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 307, 308, 309, 310], "next_termin": [276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 307, 308, 309, 310], "loss_obj": 276, "next_observ": [276, 277, 279, 280, 282, 283, 284, 290, 294, 295, 296, 297, 299, 378], "sacloss": [276, 289, 298, 360], "select_out_kei": [276, 277, 279, 283, 284, 290, 294, 295, 297, 299], "make_value_estim": [276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 300, 305, 363, 367, 368, 379, 380, 385], "value_typ": [276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 301, 305, 367], "hyperparam": [276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 367], "enum": [276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 301, 305, 367], "default_value_estim": [276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 367, 385], "default_value_kwarg": [276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 360, 367], "dqn_loss": [276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 300, 305], "td1": [276, 277, 279, 280, 282, 284, 285, 286, 290, 292, 294, 295, 296, 297, 299, 305, 367], "conserv": [277, 282], "qvalue_network": [277, 283, 284, 290, 295, 297, 299], "loss_funct": [277, 279, 280, 281, 282, 283, 284, 290, 295, 297, 299, 302, 305, 367, 379], "alpha_init": [277, 284, 293, 295, 297], "min_alpha": [277, 284, 293, 295, 297], "max_alpha": [277, 284, 293, 295, 297], "fixed_alpha": [277, 284, 293, 295, 297], "target_entropi": [277, 284, 293, 295, 297], "prod": [277, 293, 297], "delay_actor": [277, 279, 297, 299], "delay_qvalu": [277, 284, 295, 297, 299], "min_q_weight": 277, "max_q_backup": 277, "backup": 277, "deterministic_backup": 277, "num_random": 277, "with_lagrang": 277, "lagrang": 277, "lagrange_thresh": 277, "valueclass": [277, 279, 284, 295, 297, 299], "qvalu": [277, 283, 284, 290, 295, 297, 299], "loss_actor": [277, 279, 283, 284, 290, 295, 296, 297, 299, 339, 367, 373, 379, 385], "loss_actor_bc": 277, "loss_alpha": [277, 284, 295, 297], "loss_cql": [277, 282], "loss_qvalu": [277, 282, 283, 284, 290, 295, 297, 299], "loss_alpha_prim": 277, "clip_epsilon": [278, 369, 380], "normalize_advantag": [278, 291, 294, 380], "value_kei": [278, 291, 294, 307, 308, 309, 310, 367], "somemodul": [278, 291, 294], "someactor": [278, 291, 294], "value_head": [278, 291, 294], "somevalu": [278, 291, 294], "loss_modul": [278, 289, 291, 292, 294, 298, 344, 353, 354, 363, 364, 367, 368, 369, 379, 380, 383], "ppoloss": [278, 291, 360], "delay_valu": [279, 280, 282, 285, 296, 297, 305, 368, 370, 376, 379], "loss_valu": [279, 283, 290, 296, 297, 367, 369, 373, 379, 380, 385], "pred_valu": [279, 282, 299, 367, 373, 385], "pred_value_max": [279, 367, 373, 385], "target_valu": [279, 282, 295, 299, 306, 363, 367, 373, 385], "target_value_max": [279, 367, 373, 385], "qvalueactor": [280, 282, 305, 362, 368, 370], "double_dqn": 280, "06461": [280, 289], "mult_one_hot": [280, 283, 284, 305], "loss_val": [280, 282, 363, 367, 369, 370, 373, 374, 376, 379, 380, 383], "01345": 281, "distanc": [282, 291, 302, 306, 307, 380], "dcql_loss": 282, "2110": [283, 290], "06169": [283, 290], "num_qvalue_net": [283, 284, 290, 295, 297, 299], "expectil": [283, 290], "tau": [283, 290, 298, 367, 368, 379], "antmaz": [283, 290], "sticht": [283, 290], "onehotcategor": [283, 284, 360], "target_entropy_weight": 284, "disctount": 285, "distributionalqvalueactor": [285, 362], "input_tensordict": [285, 367], "actor_model": 286, "value_model": [286, 288], "imagination_horizon": 286, "unrol": [286, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324], "discount_loss": [286, 288], "lambda_kl": 287, "lambda_reco": 287, "lambda_reward": 287, "reco_loss": 287, "reward_loss": 287, "free_nat": 287, "nat": 287, "delayed_clamp": 287, "global_averag": 287, "value_loss": 288, "fake_data": 288, "ddpgloss": [289, 298, 354, 360, 367, 373, 379, 385], "td3loss": [289, 298, 360], "value_network_update_interv": 289, "qvalueclass": 290, "loss_value_diff": 290, "diff": 290, "old_polici": 291, "new_polici": 291, "apart": [291, 380], "dtarg": 291, "samples_mc_kl": 291, "analyt": 291, "decrement": 291, "loss_": [292, 339, 363, 367, 373], "equip": [292, 370, 372], "gh": 292, "_acceptedkei": 292, "dataclass": 292, "_forward_value_estimator_kei": 292, "alter": [292, 362], "value_estim": [292, 307, 308, 309, 310, 311, 363, 367, 380], "myloss": 292, "action2": 292, "augment": [292, 374, 376, 383], "set_exploration_mod": [292, 360], "deterministic_sampling_mod": 292, "convert_to_funct": [292, 367], "expand_dim": 292, "create_target_param": [292, 367], "compare_against": [292, 367], "_param": 292, "expans": 292, "resampl": 292, "_target_param": 292, "blend": 292, "proxim": [294, 369, 380], "optimis": [294, 340, 369, 379, 380], "flavour": [294, 379, 380, 385], "clipppoloss": [294, 360, 369, 380], "klpenppoloss": [294, 360], "regularis": 294, "06347": 294, "gae": [294, 360, 363, 367, 369, 380], "ppo_loss": 294, "tdlambda": [294, 301, 363, 367], "base_lay": 294, "randn_lik": 294, "samplelogprob": 294, "openreview": 295, "ay8zfzm0tdd": 295, "sub_sample_len": 295, "subsampl": [295, 335, 364], "action_log_prob_actor": 295, "state_action_value_actor": [295, 299], "connectionist": 296, "1992": 296, "doi": 296, "1007": 296, "bf00992696": 296, "actor_net": [296, 367, 369], "1801": 297, "01290": 297, "applic": [297, 305, 371, 372, 381], "1812": 297, "05905": 297, "redqloss": [298, 360], "math": 298, "theta_t": [298, 381], "theta_": [298, 381], "polyak": 298, "policy_nois": 299, "noise_clip": 299, "next_state_valu": [299, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 360], "td0": [300, 367, 379], "strict_shap": 302, "view_a": 302, "qmixer": [305, 360], "local_valu": 305, "visibl": [305, 380], "dafault": 305, "acceptedkei": 305, "global_valu": 305, "penultim": 305, "local_value_network": 305, "mixer_network": 305, "value_modul": [305, 369, 385], "qnet": [305, 367], "next_val_kei": 306, "pred_next_v": 306, "usus": 306, "mse": 306, "q_valu": 306, "n_steps_to_next": 306, "value_next_st": 306, "1506": [307, 312, 320], "02438": [307, 312, 320], "exponenti": [307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 342], "average_ga": [307, 369], "skip_exist": [307, 308, 309, 310], "time_dim": [307, 309, 310, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324], "advang": 307, "gradient_mod": 307, "value_error": [307, 308, 309, 310, 311], "target_param": [307, 308, 309, 310, 311, 367, 380], "98": [307, 308, 309, 310, 368, 380, 381], "94": [307, 310, 367, 368, 380, 381, 383], "unpack": [307, 308, 309, 310], "tensor_kei": [307, 308, 309, 310, 311], "next_valu": [307, 308, 309, 310, 311], "aka": [308, 368, 379], "average_reward": [308, 309, 310], "tdestim": [308, 309, 311], "infti": 309, "valuefunctionbas": 311, "old_stat": [312, 314, 316, 318, 320, 321, 323], "new_stat": [312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "rolling_gamma": [316, 317, 318, 319, 321, 322, 323, 324], "g1": [316, 317, 318, 319, 321, 322, 323, 324], "g2": [316, 317, 318, 319, 321, 322, 323, 324], "g3": [316, 317, 318, 319, 321, 322, 323, 324], "g4": [316, 317, 318, 319, 321, 322, 323, 324], "v3": [316, 317, 318, 319, 321, 322, 323, 324, 386], "preproc": [325, 379], "as_non_tensor": [325, 379], "render_method": 325, "pass_tensordict": 325, "syntat": 325, "sugar": 325, "out_file_bas": 326, "skip_reset": 326, "center_crop": 327, "make_grid": 327, "csv": [327, 329, 331, 368, 375, 376], "wandb": [327, 331, 334, 375, 385], "tensorboard": [327, 331, 333, 375, 385], "exp_nam": [327, 328, 329, 332, 333, 334, 354, 368, 375, 376], "log_dir": [327, 328, 329, 331, 333, 334, 368, 376], "cheetah_video": 327, "run_video": 327, "openxexperiencereplai": 327, "run_video_0": 327, "templat": 328, "pt": [329, 364, 382], "video_fp": 329, "minim": [329, 383], "dependeci": 329, "cur_dir": 329, "csv_log": 329, "video_": 329, "experiment_nam": [330, 331], "uuid": [330, 368, 386], "logger_typ": 331, "logger_nam": 331, "mlflow": [331, 332], "wandb_kwarg": 331, "mlflow_kwarg": 331, "tracking_uri": 332, "uri": 332, "datastor": 332, "tb_log": 333, "tensoarboard": 333, "td_log": 333, "save_dir": 334, "resum": 334, "uncategor": 334, "sub_traj_len": 335, "min_sub_traj_len": 335, "register_op": [335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 364, 368], "process_optim_batch": [335, 341, 342, 364], "td_out": [335, 343], "_process_optim_batch_hook": [335, 364], "batch_subsampl": 335, "clear_cuda": 336, "pre_optim_step": [336, 364], "log_pbar": [337, 338, 340, 342, 364, 368], "progress": [337, 338, 340, 344, 364, 368, 370, 386], "count_fram": 337, "pre_steps_log": [337, 338, 364], "count_frames_log": 337, "lognam": 338, "r_train": [338, 368], "log_reward": [338, 368], "loss_compon": 339, "appl": 339, "optimizer_hook": 339, "record_interv": [340, 367, 368], "record_fram": [340, 347, 367, 368], "policy_explor": [340, 354, 367, 368, 372, 376], "log_kei": [340, 368], "underestim": 340, "set_exploration_typ": [340, 360, 369, 370, 372, 379, 385], "r_evalu": [340, 367], "flatten_tensordict": [341, 368], "max_dim": 341, "rb_trainer": 341, "batch_process": [341, 342, 343, 364], "post_loss": [341, 364], "999": [342, 368], "jitter": 342, "finfo": 342, "default_dtyp": 342, "get_default_dtyp": 342, "reward_norm": 342, "update_reward_stat": 342, "normalize_reward": 342, "make_train": [343, 360], "_process_batch_hook": [343, 364], "select_kei": [343, 364], "versatil": [344, 371], "optim_steps_per_batch": [344, 364, 368], "clip_grad_norm": 344, "clip_norm": 344, "progress_bar": 344, "save_trainer_interv": 344, "log_interv": [344, 368], "save_trainer_fil": [344, 364], "update_weights_interv": [346, 368], "update_weight": 346, "post_step": [346, 364, 368], "cfg": [347, 348, 349, 350, 351, 352, 353, 354, 355, 358], "dictconfig": [347, 348, 349, 350, 352, 353, 354, 355, 358], "unknowingli": 347, "annealing_fram": [347, 367], "init_env_step": [347, 348, 367], "proof_environ": [348, 367], "sta": 348, "ot": 348, "actor_model_explor": [349, 350, 367], "make_env_kwarg": [349, 350], "targetnetupdat": [351, 353, 354], "replayargsconfig": 352, "target_net_updat": [354, 367, 368], "constitu": 354, "egreedywrapp": 354, "env_proof": 354, "obs_spec": 354, "net_valu": 354, "dir": [354, 364, 368], "gettempdir": 354, "argpars": [355, 358], "namespac": [355, 358, 386], "parser": [355, 358], "transformed_env_constructor": [355, 360], "num_env_per_collector": [356, 357], "video_tag": 358, "norm_obs_onli": 358, "use_env_cr": 358, "custom_env_mak": 358, "custom_env": 358, "return_transformed_env": 358, "action_dim_gsd": 358, "state_dim_gsd": 358, "obs_norm_state_dict": 358, "wheter": 358, "maker": [358, 368], "asyncdatacollector": 360, "distributedsyncdatacollector": 360, "submitit_delayed_launch": 360, "raycollector": 360, "rational": 360, "behind": 360, "footnot": 360, "unboundeddiscretetensorspec": 360, "lazystackedtensorspec": 360, "lazystackedcompositespec": 360, "prompttensordicttoken": 360, "rolloutfrommodel": 360, "tokenizeddatasetload": 360, "create_infinite_iter": 360, "constantklcontrol": 360, "adaptiveklcontrol": 360, "consolidate_spec": 360, "check_no_exclusive_kei": 360, "contains_lazy_spec": 360, "nested2t": 360, "h5combin": 360, "h5split": 360, "check_marl_group": 360, "get_available_librari": 360, "make_composite_from_td": [360, 381], "terminated_or_trunc": 360, "dreamerdecod": 360, "braxwrapp": 360, "dmcontrolwrapp": 360, "jumanjienv": 360, "jumanjiwrapp": 360, "meltingpotenv": 360, "meltingpotwrapp": 360, "mogymenv": 360, "mogymwrapp": 360, "multithreadedenvwrapp": 360, "openmlenv": 360, "pettingzooenv": [360, 379], "robohiveenv": 360, "smacv2env": 360, "smacv2wrapp": 360, "vmaswrapp": 360, "qvaluehook": 360, "distributionalqvaluehook": 360, "reset_nois": 360, "cemplann": 360, "mpcplannerbas": 360, "mppiplann": 360, "independentnorm": 360, "truncatednorm": 360, "maskedonehotcategor": 360, "inv_softplu": 360, "vmapmodul": 360, "distributionaldqnloss": [360, 368], "discretesacloss": 360, "iqlloss": 360, "discreteiqlloss": 360, "cqlloss": 360, "discretecqlloss": 360, "dtloss": 360, "onlinedtloss": 360, "a2closs": 360, "reinforceloss": 360, "dreameractorloss": 360, "dreamermodelloss": 360, "dreamervalueloss": 360, "td0estim": [360, 367], "td1estim": [360, 367], "td0_return_estim": 360, "td0_advantage_estim": 360, "td1_return_estim": 360, "vec_td1_return_estim": 360, "td1_advantage_estim": 360, "vec_td1_advantage_estim": 360, "td_lambda_return_estim": 360, "vec_td_lambda_return_estim": 360, "td_lambda_advantage_estim": 360, "vec_td_lambda_advantage_estim": 360, "generalized_advantage_estim": 360, "vec_generalized_advantage_estim": 360, "reward2go": 360, "distance_loss": [360, 367], "hold_out_net": 360, "hold_out_param": [360, 367], "softupd": [360, 367, 368, 370, 373, 376, 379], "hardupd": [360, 367, 373], "batchsubsampl": [360, 364], "clearcudacach": 360, "countframeslog": 360, "logreward": [360, 364, 368], "optimizerhook": [360, 368], "replaybuffertrain": [360, 364, 368], "rewardnorm": 360, "selectkei": [360, 364], "trainerhookbas": [360, 364, 368], "updateweight": [360, 364, 368], "make_collector_offpolici": 360, "make_collector_onpolici": 360, "make_dqn_loss": 360, "make_replay_buff": [360, 367], "make_target_updat": 360, "parallel_env_constructor": [360, 367], "sync_async_collector": 360, "sync_sync_collector": 360, "correct_for_frame_skip": 360, "get_stats_random_rollout": 360, "mlflowlogg": 360, "get_logg": 360, "generate_exp_nam": 360, "journei": 361, "textbook": 361, "highlight": [361, 379], "ever": [361, 380], "bump": 361, "think": [361, 369, 379, 380, 386], "benefit": [361, 371, 379, 380, 383], "pr": 361, "ground": [362, 367, 381], "recycl": [362, 383], "impos": 362, "violat": 362, "noisier": 362, "Their": [362, 379, 380], "sd": 362, "prob_modul": 362, "pick": [362, 367, 368, 372], "hopefulli": [362, 368], "functional_modul": 362, "make_funct": 362, "mathbb": [362, 368], "rightarrow": [362, 368], "soften": 362, "backbon": [362, 370, 372, 378, 385], "make_actor": 362, "make_valu": 362, "shared_param": 362, "make_common": 362, "reusabl": [363, 367, 383], "swappabl": [363, 367], "characterist": [363, 367, 381], "trainabl": [363, 367, 373, 382], "whatev": [363, 367], "smth": [363, 367], "metric": [363, 367], "nutshel": [363, 367], "barto": [363, 379, 380], "chapter": [363, 375], "significantli": [363, 367, 368, 373, 380], "next_stat": 363, "value_net_loss": 363, "pow": [363, 367], "room": 363, "signifi": [363, 379, 380], "underperform": 363, "thin": 363, "intric": [363, 372], "believ": 364, "scheme": [364, 386], "substenti": 364, "_pre_steps_log_hook": 364, "_pre_optim_hook": 364, "sub_batch": 364, "_post_loss_hook": 364, "_post_optim_hook": 364, "post_optim": [364, 368], "_post_optim_log": 364, "post_optim_log": 364, "_post_steps_hook": 364, "_post_steps_log_hook": 364, "post_steps_log": 364, "reserv": 364, "logginghook": 364, "logging_hook": 364, "save_dict": 364, "some_valu": 364, "torchsnapshot": 364, "ckpt_backend": 364, "filepath": 364, "save_train": 364, "load_from_fil": 364, "852": [366, 384], "galleri": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386], "mem": [366, 384], "mb": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386], "torchrl_demo": [366, 384, 385], "685": [366, 381, 384, 385], "rb_tutori": [366, 383, 384], "49": [366, 368, 381, 382, 383, 384], "511": [366, 381, 383, 384], "187": [366, 381, 384, 386], "861": [366, 381, 384], "coding_dqn": [366, 368, 384], "471": [366, 368, 381, 384], "736": [366, 368, 384], "dqn_with_rnn": [366, 370, 384], "695": [366, 370, 384], "1906": [366, 370, 384], "multiagent_ppo": [366, 380, 384], "298": [366, 380, 381, 384], "coding_ddpg": [366, 367, 384], "47": [366, 367, 368, 381, 384], "955": [366, 367, 384], "torchrl_env": [366, 384, 386], "541": [366, 381, 384, 386], "2466": [366, 381, 384, 386], "multiagent_competitive_ddpg": [366, 379, 384], "593": [366, 379, 381, 384], "coding_ppo": [366, 369, 384], "25": [366, 367, 368, 369, 370, 379, 381, 384], "006": [366, 369, 381, 384], "pretrained_model": [366, 382, 384], "51": [366, 368, 381, 382, 384], "766": [366, 382, 384], "1989": [366, 384], "multi_task": [366, 378, 384], "368": [366, 378, 381, 384], "353": [366, 372, 381, 384], "43": [366, 368, 370, 371, 381, 382, 384], "334": [366, 371, 381, 384], "549": [366, 373, 381, 384], "52": [366, 367, 368, 376, 381, 382, 384], "997": [366, 374, 384], "769": [366, 375, 384], "author": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 386], "vincent": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 386], "moen": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 383, 386], "assembl": 367, "focus": [367, 373], "straightforward": [367, 368, 371, 372, 373, 374, 383], "maxim": [367, 373, 381], "transpar": [367, 370], "illustr": [367, 368, 372, 383], "bash": 367, "is_fork": [367, 368, 369, 370, 379, 380, 382], "get_start_method": [367, 368, 369, 370, 379, 380, 382], "is_avail": [367, 368, 369, 370, 379, 380, 382], "collector_devic": 367, "loss_dict": 367, "oblivi": [367, 369, 383], "elementari": 367, "didact": 367, "dilut": 367, "pessimist": [367, 368, 369], "target_actor_network_param": 367, "actor_in_kei": 367, "actor_crit": 367, "noth": [367, 369], "compromis": 367, "hp": 367, "hasattr": 367, "_value_estim": 367, "elif": [367, 368], "notimplementederror": 367, "unknown": 367, "ifgg": 367, "_loss_actor": 367, "td_copi": 367, "actor_network_param": [367, 379], "value_network_param": [367, 379], "_loss_valu": 367, "pred_val": 367, "target_value_network_param": 367, "glue": 367, "_forward": 367, "remaind": 367, "focu": [367, 368, 369, 372, 373, 374, 379], "env_librari": 367, "env_task": 367, "env_arg": [367, 368], "friendli": 367, "torchr": 367, "rescal": 367, "presum": 367, "make_transformed_env": 367, "reward_sc": 367, "marker": 367, "env_per_collector": 367, "transform_state_dict": 367, "make_t_env": 367, "cheat": 367, "10m": 367, "cautiou": 367, "magnitud": [367, 379], "thousand": [367, 370], "get_env_stat": 367, "proof_env": 367, "5000": [367, 368, 369, 376], "recal": [367, 369, 383], "ddpgmlpactor": 367, "ddpgmlpqnet": 367, "materi": 367, "ornsteinuhlenbeckprocesswrapp": [367, 372], "make_ddpg_actor": 367, "q_net": 367, "tight": 367, "decoupl": [367, 373], "10_000": [367, 369], "traj_len": [367, 370], "make_record": 367, "recorder_obj": 367, "flavor": 367, "buffer_s": [367, 368], "random_crop_len": 367, "prb": 367, "buffer_scratch_dir": 367, "temporari": 367, "dataflow": 367, "ceil_div": 367, "utd": [367, 370], "update_to_data": 367, "realiz": 367, "_must_": 367, "001": [367, 381], "outdat": 367, "trick": [367, 368], "despit": 367, "optimizer_actor": 367, "lr": [367, 368, 369, 370, 376, 379, 380, 381], "weight_decai": [367, 368], "optimizer_valu": 367, "total_collection_step": 367, "pretti": [367, 371, 375, 383], "rewards_ev": 367, "collected_fram": 367, "r0": 367, "current_fram": [367, 379], "sampled_tensordict": 367, "gn1": 367, "clip_grad_norm_": [367, 369, 379, 380, 381], "gn2": 367, "gn": [367, 381], "td_record": 367, "rn": 367, "set_descript": [367, 369, 370, 379, 380, 381], "2f": 367, "800": [367, 368], "3252": 367, "83it": [367, 368, 369], "1600": [367, 368], "09": [367, 368, 379, 380, 381], "905": [367, 381], "21it": [367, 368], "2400": [367, 368], "1351": 367, "13it": [367, 368, 381], "3200": [367, 368], "1731": 367, "45it": [367, 381], "4000": [367, 368, 369], "2043": 367, "17it": [367, 370], "48": [367, 368, 380, 381, 382], "4800": [367, 368, 381], "2288": 367, "54it": [367, 368, 381], "56": [367, 368, 379, 381], "5600": 367, "2487": 367, "11it": [367, 368], "57": [367, 368, 381, 382], "93": [367, 368, 381], "6400": [367, 385], "918": 367, "69it": [367, 368, 369, 381], "197": [367, 381], "61": [367, 368, 381, 382], "72": [367, 368, 381, 382], "7200": 367, "07": [367, 368, 381], "639": 367, "36it": [367, 368], "235": [367, 381], "311": [367, 381], "8000": [367, 369], "529": [367, 381], "64it": [367, 368, 381], "96": [367, 368, 379, 381, 382], "169": [367, 381], "8800": 367, "474": [367, 381], "14it": [367, 368], "54": [367, 368, 380, 381, 382, 383], "76": [367, 368, 381], "180": [367, 381], "9600": 367, "376": [367, 381], "73it": [367, 369], "68": [367, 368, 379, 381, 382], "70": [367, 368, 369, 379, 380, 381, 382], "91": [367, 368, 381], "182": [367, 381, 386], "10400it": 367, "360": [367, 381], "87it": [367, 368, 369], "66": [367, 368, 381, 382], "53": [367, 368, 381], "146": [367, 381], "79": [367, 368, 381, 382], "67": [367, 368, 378, 381, 382], "plot": [367, 369, 370, 379, 380, 381], "mention": [367, 370, 383, 386], "matplotlib": [367, 369, 370, 379, 380, 381, 383, 386], "pyplot": [367, 369, 370, 379, 380, 381, 383, 386], "plt": [367, 369, 370, 379, 380, 381, 383, 386], "zip": [367, 377], "legend": [367, 379], "xlabel": [367, 370, 380, 381], "ylabel": [367, 380], "tight_layout": 367, "takeawai": [367, 368], "distpatch": 367, "jupyt": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386], "ipynb": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386], "sphinx": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386], "customis": [368, 379, 380], "road": 368, "aspect": [368, 373], "highest": [368, 372], "prerequisit": [368, 370], "lookup": 368, "amort": [368, 369], "cart": 368, "pole": 368, "un": 368, "actuat": 368, "frictionless": 368, "duelingcnndqnet": 368, "egreedymodul": [368, 370, 372, 376], "is_notebook": 368, "shell": 368, "get_ipython": 368, "__class__": 368, "zmqinteractiveshel": 368, "qtconsol": 368, "terminalinteractiveshel": 368, "ipython": [368, 380, 381], "nameerror": [368, 379], "umbrella": 368, "misplac": 368, "misus": 368, "orchestr": [368, 373, 375], "five": 368, "64x64": 368, "motion": [368, 381], "obs_norm_sd": 368, "mp_context": 368, "simpler": [368, 371], "get_norm_stat": 368, "test_env": 368, "make_model": 368, "dummy_env": 368, "init_bia": 368, "exploration_modul": [368, 370, 372, 376], "eps_greedy_v": 368, "eps_greedy_val_env": 368, "actor_explor": 368, "get_replay_buff": 368, "n_optim": [368, 373, 374], "themselv": 368, "parametriz": 368, "simplic": [368, 369, 374, 382, 383, 385], "get_collector": 368, "cl": 368, "data_collector": 368, "bunch": 368, "power": 368, "ubiquit": [368, 371], "get_loss_modul": 368, "target_updat": [368, 379], "995": [368, 381], "variat": 368, "2e": [368, 381], "wd": 368, "upd": 368, "harder": [368, 385], "5_000": 368, "500000": 368, "100000": 368, "005": [368, 379], "mandatori": [368, 369, 380, 381], "fairer": 368, "budget": 368, "dqn_exp_": 368, "uuid1": [368, 386], "9895": 368, "0737": 368, "registr": [368, 386], "cumbersom": 368, "buffer_hook": 368, "weight_updat": 368, "aliv": 368, "total_reward": 368, "33it": [368, 381], "3718": 368, "9346": [368, 381], "82it": 368, "3688": [368, 381], "55it": [368, 381], "04it": 368, "3444": 368, "55": [368, 380, 381], "81it": [368, 369], "4295": [368, 381], "224": [368, 381, 383], "48it": [368, 381], "3262": 368, "58": [368, 381, 382], "19it": 368, "3566": 368, "288": [368, 381], "65": [368, 381], "07it": [368, 381], "3748": 368, "69": [368, 381, 382, 383], "68it": [368, 369, 381], "3475": 368, "352": [368, 381], "74": [368, 381, 382], "43it": [368, 381], "3808": 368, "384": [368, 381], "78": [368, 381, 382], "38it": 368, "416": [368, 381], "3869": 368, "448": [368, 381], "83": [368, 381, 382], "23it": [368, 370, 381], "480": [368, 381, 382], "85": [368, 381], "29it": 368, "10it": [368, 381], "544": [368, 381], "93it": 368, "3778": 368, "576": [368, 381], "90": [368, 369, 379, 380, 381, 382, 383], "05it": [368, 381], "608": [368, 381], "89": [368, 380, 381], "74it": 368, "3415": 368, "640": 368, "99it": 368, "672": 368, "704": 368, "27it": [368, 381], "16it": 368, "3991": 368, "768": 368, "24it": [368, 381], "80it": [368, 381], "832": 368, "864": 368, "02it": 368, "896": 368, "45": [368, 370, 381], "20it": [368, 381], "928": 368, "960": 368, "32it": [368, 381], "4021": 368, "992": [368, 381], "03it": [368, 381], "58it": [368, 381], "1056": 368, "1088": 368, "97it": 368, "1120": 368, "56it": [368, 381], "1152": 368, "34it": [368, 381], "1184": 368, "26it": 368, "3899": 368, "1216": 368, "01it": [368, 381], "1248": 368, "94it": 368, "1280": 368, "92": [368, 380, 381, 382], "53it": [368, 381], "1344": 368, "22it": 368, "1376": 368, "77it": 368, "1408": 368, "39it": 368, "1440": 368, "1472": 368, "70it": [368, 381], "1504": 368, "63it": [368, 381], "1536": 368, "1568": 368, "72it": 368, "60it": [368, 381], "1632": 368, "4173": 368, "1696": 368, "66it": [368, 381], "1728": 368, "1760": 368, "1792": 368, "4082": [368, 381], "1824": 368, "1856": 368, "1888": 368, "18it": [368, 381], "1920": 368, "42it": [368, 381], "1952": 368, "1984": 368, "2016": 368, "85it": 368, "2048": [368, 382], "75it": 368, "2080": 368, "46it": [368, 381], "2112": [368, 381], "2144": 368, "2176": 368, "09it": 368, "2208": 368, "90it": [368, 370], "2240": 368, "2272": 368, "49it": [368, 381], "12it": 368, "2336": [368, 369], "2368": 368, "57it": [368, 381], "2432": [368, 369], "2464": 368, "2496": 368, "2528": [368, 381], "2560": 368, "65it": [368, 369, 381], "2624": 368, "92it": 368, "2656": [368, 381], "97": [368, 381, 382], "2688": 368, "2720": [368, 381], "2752": 368, "06it": 368, "2784": 368, "59it": [368, 381], "2816": 368, "30it": 368, "2848": 368, "2880": 368, "96it": 368, "2912": 368, "59": [368, 370, 381, 382, 383], "2944": [368, 381], "98it": 368, "60": [368, 369, 379, 380, 381, 385], "2976": [368, 381], "86it": [368, 381], "3040": 368, "67it": [368, 381], "3072": 368, "62": [368, 381, 382], "3104": 368, "63": [368, 381, 382], "3136": 368, "3168": 368, "3232": [368, 381], "6923": 368, "3264": 368, "3296": 368, "3328": 368, "3360": 368, "89it": 368, "3392": 368, "3424": 368, "3456": [368, 381], "3488": 368, "3520": 368, "71": [368, 381, 383], "3552": 368, "3584": 368, "3616": 368, "82": [368, 381, 382], "73": [368, 381, 382], "3648": 368, "3680": 368, "3712": 368, "3744": 368, "3776": 368, "77": [368, 381, 382], "3840": 368, "51it": [368, 381], "3872": 368, "37it": [368, 381], "3904": 368, "52it": [368, 381], "3936": 368, "79it": 368, "3968": 368, "84it": [368, 369], "4032": 368, "4064": 368, "4096": 368, "4128": [368, 381], "4160": 368, "4192": 368, "4224": 368, "4256": [368, 381], "4288": [368, 381], "4320": 368, "61it": [368, 381], "4352": 368, "31it": 368, "4384": 368, "4416": 368, "4448": 368, "4480": 368, "3596": 368, "4512": 368, "4544": 368, "4576": 368, "3445": 368, "4608": 368, "4640": 368, "44it": [368, 381], "4672": [368, 381], "4704": 368, "4736": 368, "4768": 368, "4051": 368, "4832": 368, "4864": 368, "4896": 368, "4928": 368, "4960": 368, "4992": 368, "5024it": 368, "print_csv_files_in_fold": 368, "folder_path": 368, "csv_file": 368, "output_str": 368, "dirpath": 368, "endswith": 368, "strip": 368, "tmp": [368, 383], "tmp903fo8iv": 368, "dqn_exp_dbbd1990": 368, "33ca": 368, "11ef": 368, "bb99": 368, "0242ac110002": 368, "3869387209415436": 368, "39912933111190796": 368, "42945271730422974": 368, "39912936091423035": 368, "40816524624824524": 368, "36880597472190857": 368, "25338509678840637": 368, "1940741091966629": 368, "23892360925674438": 368, "16117075085639954": 368, "28117597103118896": 368, "34604233503341675": 368, "35552895069122314": 368, "26036304235458374": 368, "35469865798950195": 368, "grad_norm_0": 368, "2974138259887695": 368, "585341215133667": 368, "6000170707702637": 368, "5393712520599365": 368, "6847574710845947": 368, "2966442108154297": 368, "5833663940429688": 368, "441770553588867": 368, "6456298828125": 368, "10000000894069672": 368, "69230842590332": 368, "qvaluenetwork": 368, "worst": 368, "accuraci": 368, "fanci": [368, 374], "737": [368, 381], "talk": 369, "repetit": [369, 371, 374], "six": 369, "sophist": [369, 380], "invent": 369, "overview": [369, 373, 379, 380, 385], "theta_k": 369, "pi_": 369, "exceed": 369, "discourag": [369, 381], "indispens": 369, "analyz": 369, "lingua": 369, "franca": 369, "defaultdict": [369, 381], "3e": [369, 370, 379, 380], "max_grad_norm": [369, 379, 380], "sub_batch_s": 369, "num_epoch": [369, 380], "entropy_ep": [369, 380], "charact": 369, "inverteddoublependulum": 369, "transmit": 369, "stai": 369, "supplementari": [369, 386], "told": 369, "confid": [369, 379, 380], "ran": 369, "f_": 369, "mu_": 369, "difficulti": [369, 386], "d_ob": 369, "d_action": 369, "policy_modul": [369, 379, 380], "That": [369, 379], "said": 369, "briefli": [369, 379, 380], "refil": [369, 380], "conveni": [369, 379, 380, 381, 383], "easiest": [369, 373, 379, 380], "mathemat": [369, 379, 380], "tradeoff": [369, 380], "advantage_modul": 369, "lr_schedul": [369, 381], "cosineannealinglr": [369, 381], "eval_str": 369, "tensordict_data": [369, 380], "data_view": [369, 380], "subdata": [369, 379, 380], "cum_reward_str": 369, "4f": [369, 370, 381], "stepcount_str": 369, "param_group": [369, 379], "lr_str": 369, "eval_rollout": 369, "nice": [369, 371, 374], "441": [369, 381], "138": [369, 381], "6001": 369, "0857": 369, "0003": [369, 381], "447": [369, 381], "1233": 369, "3000": 369, "450": [369, 381], "1692": 369, "452": [369, 381], "2046": [369, 381], "0002": [369, 381], "454": [369, 381], "2070": 369, "6000": 369, "455": [369, 381], "2155": 369, "7000": 369, "457": [369, 381], "9000": 369, "451": [369, 381], "2439": 369, "cap": [369, 383], "figsiz": [369, 381], "subplot": [369, 379, 381, 386], "titl": [369, 370, 380, 381], "bit": [369, 370, 371, 379, 380, 383], "84x84": 370, "accessori": 370, "stamp": 370, "assist": 370, "emb": 370, "n_cell": 370, "customiz": 370, "wouldn": 370, "qval": 370, "stoch_polici": 370, "opportun": [370, 379], "uniniti": 370, "again": [370, 371, 372, 374, 380, 382, 383, 386], "redund": 370, "strongli": 370, "sake": [370, 382, 383], "20_000": [370, 381], "longest": 370, "npai": 370, "action_spread": 370, "132": [370, 381, 383], "0005": 370, "150": [370, 381], "topic": [371, 372, 373], "straight": 371, "backtrack": 371, "encapsul": [371, 372, 373], "3029": [371, 373, 374, 375], "deprecationwarn": [371, 373, 374, 375], "reset_with_act": 371, "0167": [371, 381], "tp": 371, "stepped_data": 371, "spatial": 371, "useless": 371, "policyless": 371, "appreci": 371, "monitor": 371, "examin": [371, 379], "tackl": 372, "delv": 372, "bypass": 372, "extractor": 372, "palliat": 372, "additivegaussianwrapp": [372, 379], "had": [372, 374], "exploration_polici": [372, 379], "greedili": 372, "2d": [372, 379, 380], "innov": [372, 373], "rollout_explor": 372, "sole": 373, "tradit": [373, 379], "supervis": [373, 374, 383, 386], "n_collect": 373, "get_next_batch": 373, "ddpg_loss": 373, "total_loss": 373, "prove": 373, "reliev": 373, "concern": 373, "accustom": 374, "surprisingli": 374, "fundament": 374, "art": [374, 379, 380], "pseudo": [374, 381], "multirpocess": 374, "countless": 374, "yourself": [374, 379, 380], "lightweight": 375, "portabl": 375, "everywher": 375, "hyperapamet": 375, "my_exp": 375, "log_scalar": 375, "elaps": 375, "my_scalar": 375, "saw": [375, 381, 383], "my_video": 375, "record_env": [375, 376], "lesson": 376, "voluntarili": 376, "refresh": [376, 379, 380], "value_mlp": 376, "100_000": 376, "init_rand_step": 376, "training_loop": 376, "video_record": 376, "arbitrarili": 376, "total_count": 376, "total_episod": 376, "t0": 376, "t1": 376, "conclud": [376, 382], "tutorials_python": 377, "tutorials_jupyt": 377, "env1_obs_kei": 378, "observation_stand": 378, "env2_obs_kei": 378, "observation_walk": 378, "tdreset1": 378, "tdreset2": 378, "lazy_stack": 378, "policy_common": 378, "policy_stand": 378, "policy_walk": 378, "But": 378, "env1_mak": 378, "env2_mak": 378, "_single_task": 378, "td_rollout": 378, "matteo": [379, 380], "bettini": [379, 380], "benchmarl": [379, 380], "simple_tag": 379, "maddpg": [379, 380], "multiagentparticleenviron": 379, "mpe": 379, "centralis": [379, 380], "tie": [379, 380], "iddpg": [379, 380], "typical": 379, "richard": 379, "andrew": 379, "mit": 379, "press": 379, "2018": 379, "mathbf": [379, 380], "pi": [379, 380, 381], "decentralis": [379, 380], "literatur": [379, 380], "overcom": [379, 380], "stationari": [379, 380], "concurr": [379, 380], "establish": 379, "gui": [379, 380], "multiagentmlp": [379, 380], "is_sphinx": 379, "__sphinx_build__": 379, "team": [379, 380, 385], "n_iter": [379, 380], "evad": 379, "iteration_when_stop_training_evad": 379, "memory_s": 379, "n_optimiser_step": 379, "train_batch_s": 379, "polyak_tau": 379, "chaser": 379, "red": 379, "circl": [379, 380], "touch": [379, 381], "penal": 379, "acceler": [379, 380], "obstacl": 379, "drag": [379, 380], "elast": [379, 380], "collis": [379, 380], "imped": 379, "n_chaser": 379, "n_evad": 379, "n_obstacl": 379, "use_vma": 379, "simple_tag_v3": 379, "num_good": 379, "num_adversari": 379, "num_obstacl": 379, "max_cycl": 379, "num_vmas_env": [379, 380], "num_good_ag": 379, "num_landmark": 379, "adversary_1": 379, "four": [379, 380, 381], "n_agents_in_that_group": 379, "stress": [379, 380], "paramount": [379, 380], "n_rollout_step": [379, 380], "evolut": [379, 380], "group_nam": 379, "n_agents_in_group": 379, "minor": 379, "agents_exploration_polici": 379, "utilis": [379, 380], "withing": 379, "n_obs_per_ag": [379, 380], "n_actions_per_ag": [379, 380], "share_parameters_polici": [379, 380], "policy_net": [379, 380], "_agent": 379, "grant": [379, 380], "converg": [379, 380], "share_parameters_crit": [379, 380], "obs_act": 379, "cat_modul": 379, "critic_modul": 379, "fantast": [379, 380], "reset_td": 379, "interfer": 379, "flatten_kei": 379, "process_batch": 379, "group_shap": 379, "get_item_shap": [379, 380], "nested_done_kei": 379, "nested_terminated_kei": 379, "desc": [379, 380], "episode_reward_mean_": 379, "episode_reward_mean_map": 379, "train_group_map": 379, "deepcopi": 379, "group_batch": 379, "_group": 379, "loss_nam": 379, "episode_reward_mean": [379, 380], "episode_reward_mean_adversari": 379, "episode_reward_mean_ag": 379, "proce": 379, "screen": 379, "fig": 379, "set_ylabel": 379, "axvlin": 379, "color": 379, "orang": 379, "set_xlabel": 379, "video_logg": 379, "vmas_log": 379, "env_with_rend": 379, "vmas_rend": 379, "print_log_dir": 379, "profici": [379, 380], "lidar": 380, "sensor": 380, "mappo": 380, "ippo": 380, "phase": [380, 383], "fed": [380, 383], "analys": 380, "visualis": 380, "vmas_devic": 380, "6_000": 380, "minibatch_s": 380, "generalis": 380, "simd": 380, "parallelis": 380, "warp": 380, "todai": 380, "surround": 380, "dot": [380, 381], "collid": 380, "penalis": 380, "scenario_nam": 380, "final_rew": 380, "agent_collis": 380, "denot": 380, "critic_net": 380, "minibatch": 380, "episode_reward_mean_list": 380, "critic_network_param": 380, "target_critic_network_param": 380, "4579917788505554": 380, "14524875581264496": 380, "168386459350586": 380, "3613134622573853": 380, "921463131904602": 380, "2106335163116455": 380, "1925103664398193": 380, "664064407348633": 380, "6539173126220703": 380, "743558168411255": 380, "xvfb": 380, "pyvirtualdisplai": 380, "1400": [380, 381], "900": 380, "pil": 380, "rendering_callback": 380, "fromarrai": 380, "gif": 380, "save_al": 380, "append_imag": 380, "freeli": 381, "undertaken": 381, "broader": 381, "wider": 381, "algebra": 381, "acquaint": 381, "avenu": 381, "_apply_to_composit": 381, "default_x": 381, "default_i": 381, "torqu": 381, "upward": 381, "angular": 381, "sin": 381, "rad": 381, "sec": 381, "gravit": 381, "angl": 381, "deleg": 381, "new_th": 381, "new_thdot": 381, "thdot": 381, "g_forc": 381, "max_torqu": 381, "angle_norm": 381, "max_spe": 381, "albeit": 381, "gen_param": 381, "high_th": 381, "high_thdot": 381, "low_th": 381, "low_thdot": 381, "trivial": 381, "shortcut": [381, 386], "irrelev": 381, "_make_spec": 381, "td_param": 381, "render_fp": 381, "random_": 381, "_make_step": 381, "staticmethod": 381, "showcas": 381, "skeleton": 381, "_apply_transform": [381, 386], "_inv_apply_transform": [381, 386], "subset": [381, 382], "sine": 381, "cosin": 381, "sintransform": 381, "costransform": 381, "t_sin": 381, "t_co": 381, "cat_transform": 381, "simple_rollout": 381, "unexplor": 381, "init_td": 381, "traj_return": 381, "last_reward": 381, "is_ipython": 381, "inlin": 381, "get_backend": 381, "ion": 381, "gcf": 381, "clear_output": 381, "625": 381, "0748": 381, "519": 381, "0499": 381, "4472": 381, "073": 381, "0685": 381, "0408": 381, "552": 381, "5154": 381, "9086": 381, "9385": 381, "155": 381, "47it": 381, "2568": 381, "4981": 381, "223": 381, "8929": 381, "4491": 381, "581": 381, "3233": 381, "0664": 381, "596": 381, "1021": 381, "5263": 381, "9579": 381, "5807": 381, "8075": 381, "212": 381, "2009": 381, "5525": 381, "914": 381, "2894": 381, "0115": 381, "0977": 381, "1845": 381, "1830": 381, "4858": 381, "233": 381, "2863": 381, "0297": 381, "464": 381, "4617": 381, "5997": 381, "904": 381, "1647": 381, "0777": 381, "901": 381, "4709": 381, "6813": 381, "8317": 381, "3221": 381, "5554": 381, "276": 381, "3353": 381, "701": 381, "8570": 381, "6656": 381, "463": 381, "7779": 381, "6911": 381, "875": 381, "0796": 381, "7082": 381, "308": 381, "0421": 381, "1496": 381, "5037": 381, "1755": 381, "5029": 381, "9454": 381, "665": 381, "9330": 381, "2118": 381, "444": 381, "0995": 381, "6294": 381, "3146": 381, "2909": 381, "461": 381, "9720": 381, "1298": 381, "9923": 381, "0345": 381, "3438": 381, "424": 381, "6953": 381, "5233": 381, "411": 381, "8011": 381, "5329": 381, "2677": 381, "6969": 381, "7010": 381, "9352": 381, "7707": 381, "6178": 381, "5646": 381, "348": 381, "7304": 381, "9407": 381, "942": 381, "3882": 381, "7604": 381, "3507": 381, "8928": 381, "258": 381, "50it": 381, "6978": 381, "4641": 381, "6047": 381, "5005": 381, "4136": 381, "2993": 381, "3222": 381, "4046": 381, "7314": 381, "275": [381, 386], "6331": 381, "9318": 381, "961": 381, "8331": 381, "1604": 381, "4099": 381, "4761": 381, "125": 381, "4262": 381, "6363": 381, "382": 381, "3593": 381, "7377": 381, "2847": 381, "3443": 381, "867": 381, "3592": 381, "4760": 381, "9950": 381, "8021": 381, "3528": 381, "1214": 381, "708": 381, "4023": 381, "3583": 381, "041": 381, "3801": 381, "0310": 381, "120": 381, "4244": 381, "2039": 381, "4850": 381, "8748": 381, "706": 381, "4897": 381, "9210": 381, "8964": 381, "0832": 381, "3934": 381, "456": 381, "8971": 381, "2933": 381, "3377": 381, "6996": 381, "2274": 381, "8916": 381, "098": 381, "2660": 381, "9110": 381, "4503": 381, "6956": 381, "9172": 381, "4026": 381, "946": 381, "9229": 381, "5205": 381, "294": 381, "8872": 381, "6637": 381, "019": 381, "9281": 381, "2082": 381, "724": 381, "8561": 381, "6574": 381, "357": 381, "4138": 381, "5230": 381, "385": 381, "4065": 381, "5642": 381, "921": 381, "9786": 381, "4129": 381, "5831": 381, "266": 381, "7723": 381, "4152": 381, "0898": 381, "389": 381, "5155": 381, "5376": 381, "5616": 381, "4094": 381, "283": 381, "5333": 381, "4803": 381, "895": 381, "6566": 381, "2588": 381, "662": 381, "4732": 381, "7503": 381, "068": 381, "0714": 381, "3370": 381, "059": 381, "8612": 381, "1915": 381, "3855": 381, "0349": 381, "9644": 381, "4538": 381, "445": 381, "0392": 381, "4080": 381, "1648": 381, "9599": 381, "143": 381, "4284": 381, "5946": 381, "2590": 381, "9181": 381, "4621": 381, "9075": 381, "674": 381, "1772": 381, "9444": 381, "351": 381, "9391": 381, "5595": 381, "62it": 381, "8673": 381, "6240": 381, "5919": 381, "1071": 381, "9127": 381, "251": 381, "9799": 381, "3131": 381, "9612": 381, "9705": 381, "8741": 381, "2230": 381, "0972": 381, "0337": 381, "0350": 381, "0654": 381, "2441": 381, "4596": 381, "362": 381, "103": 381, "4362": 381, "171": 381, "104": 381, "4041": 381, "6907": 381, "105": 381, "4664": 381, "2760": 381, "0299": 381, "9712": 381, "349": 381, "107": 381, "3332": 381, "4479": 381, "772": 381, "108": [381, 383], "4357": 381, "9591": 381, "543": 381, "109": 381, "6216": 381, "1353": 381, "692": 381, "110": [381, 383], "6261": 381, "7086": 381, "496": 381, "111": 381, "7758": 381, "9818": 381, "112": 381, "7772": 381, "5055": 381, "113": 381, "5840": 381, "3180": 381, "2083": 381, "115": 381, "5275": 381, "6873": 381, "116": 381, "4107": 381, "1624": 381, "117": 381, "6372": 381, "2571": 381, "118": 381, "4039": 381, "4428": 381, "119": 381, "4728": 381, "5628": 381, "6767": 381, "522": 381, "121": [381, 386], "5873": 381, "5072": 381, "6548": 381, "3766": 381, "123": 381, "5134": 381, "1955": 381, "124": 381, "2481": 381, "0591": 381, "4500": 381, "3368": 381, "126": 381, "9708": 381, "7059": 381, "127": 381, "3031": 381, "2534": 381, "843": 381, "3327": 381, "6193": 381, "129": 381, "4831": 381, "1172": 381, "2593": 381, "4219": 381, "962": 381, "95it": 381, "8380": 381, "899": 381, "2721": 381, "9048": 381, "166": 381, "133": 381, "2419": 381, "5248": 381, "2139": 381, "4278": 381, "135": 381, "0690": 381, "5140": 381, "136": 381, "1140": 381, "7402": 381, "137": 381, "5356": 381, "1636": 381, "35it": 381, "0671": 381, "8798": 381, "139": 381, "8918": 381, "3298": 381, "307": 381, "140": 381, "1779": 381, "141": 381, "1771": 381, "3624": 381, "936": 381, "142": 381, "1683": 381, "4810": 381, "9373": 381, "4435": 381, "4396": 381, "8092": 381, "145": [381, 383], "2572": 381, "4212": 381, "0260": 381, "147": 381, "0939": 381, "6478": 381, "605": 381, "148": 381, "6606": 381, "7289": 381, "149": 381, "9300": 381, "7193": 381, "563": 381, "1166": 381, "8514": 381, "151": 381, "9108": 381, "0672": 381, "292": 381, "152": 381, "8591": 381, "3768": 381, "153": 381, "9976": 381, "154": 381, "0576": 381, "0067": 381, "935": 381, "4199": 381, "1722": 381, "156": 381, "8310": 381, "3466": 381, "157": 381, "8631": 381, "2492": 381, "158": 381, "8763": 381, "1277": 381, "159": 381, "5562": 381, "7446": 381, "1082": 381, "9830": 381, "161": 381, "0946": 381, "5229": 381, "162": [381, 383], "4574": 381, "6900": 381, "163": [381, 382], "2229": 381, "0318": 381, "482": 381, "164": 381, "0543": 381, "0817": 381, "761": 381, "165": 381, "2809": 381, "5118": 381, "366": 381, "1142": 381, "5635": 381, "167": 381, "1949": 381, "2327": 381, "982": 381, "168": [381, 383], "0967": 381, "0387": 381, "0782": 381, "2150": 381, "170": 381, "5222": 381, "3725": 381, "9288": 381, "9837": 381, "1416": 381, "1099": 381, "173": 381, "8620": 381, "8475": 381, "174": 381, "1807": 381, "4375": 381, "175": 381, "1148": 381, "0645": 381, "2751": 381, "8313": 381, "177": [381, 386], "9286": 381, "9770": 381, "178": 381, "5735": 381, "2837": 381, "179": 381, "2926": 381, "9489": 381, "1507": 381, "181": 381, "8724": 381, "3567": 381, "3574": 381, "6140": 381, "183": 381, "7895": 381, "2518": 381, "184": 381, "6146": 381, "185": 381, "8776": 381, "7358": 381, "186": 381, "3722": 381, "8428": 381, "7955": 381, "188": [381, 383], "0092": 381, "7106": 381, "829": 381, "189": 381, "2264": 381, "6919": 381, "190": 381, "1438": 381, "1362": 381, "191": 381, "0618": 381, "8217": 381, "9420": 381, "6765": 381, "193": 381, "7745": 381, "0709": 381, "194": 381, "9478": 381, "6867": 381, "195": 381, "6507": 381, "6225": 381, "196": 381, "2244": 381, "2195": 381, "5385": 381, "9263": 381, "198": 381, "1878": 381, "2374": 381, "8054": 381, "3504": 381, "557": 381, "0766": 381, "201": 381, "2011": 381, "8393": 381, "202": 381, "0803": 381, "7815": 381, "203": 381, "8363": 381, "2460": 381, "204": 381, "8643": 381, "2191": 381, "205": 381, "0773": 381, "1343": 381, "206": 381, "8657": 381, "207": 381, "9304": 381, "7584": 381, "208": 381, "8752": 381, "2307": 381, "209": 381, "5250": 381, "4869": 381, "7837": 381, "5762": 381, "211": 381, "6661": 381, "8600": 381, "2502": 381, "1752": 381, "3075": 381, "8871": 381, "214": 381, "9406": 381, "8090": 381, "215": 381, "6291": 381, "8923": 381, "876": 381, "216": 381, "9504": 381, "21e": 381, "217": 381, "7431": 381, "7880": 381, "218": 381, "4463": 381, "5432": 381, "219": [381, 386], "3793": 381, "3313": 381, "8843": 381, "0369": 381, "065": 381, "221": 381, "4828": 381, "8391": 381, "222": 381, "6265": 381, "2913": 381, "947": 381, "5541": 381, "1252": 381, "7342": 381, "2396": 381, "225": 381, "5936": 381, "1924": 381, "226": 381, "9975": 381, "2045": 381, "227": 381, "8367": 381, "9540": 381, "228": 381, "7259": 381, "6743": 381, "229": 381, "4827": 381, "7528": 381, "230": 381, "7361": 381, "8756": 381, "231": 381, "7646": 381, "1116": 381, "232": 381, "5426": 381, "8385": 381, "5662": 381, "8585": 381, "234": 381, "8234": 381, "7930": 381, "71it": 381, "2648": 381, "9309": 381, "236": 381, "91it": 381, "6817": 381, "237": 381, "0943": 381, "1533": 381, "238": 381, "3045": 381, "0483": 381, "239": 381, "6415": 381, "0201": 381, "241": 381, "4437": 381, "4365": 381, "242": 381, "0358": 381, "4943": 381, "243": 381, "1272": 381, "5003": 381, "1180": 381, "2637": 381, "245": 381, "7197": 381, "0873": 381, "246": 381, "2917": 381, "247": 381, "0160": 381, "0738": 381, "248": 381, "3689": 381, "0120": 381, "249": 381, "5570": 381, "0475": 381, "250": 381, "4423": 381, "2220": 381, "6803": 381, "252": 381, "1465": 381, "7214": 381, "253": 381, "8801": 381, "7034": 381, "254": 381, "9136": 381, "4076": 381, "7589": 381, "5013": 381, "8150": 381, "2241": 381, "257": 381, "0753": 381, "8081": 381, "1951": 381, "8314": 381, "259": 381, "0038": 381, "260": 381, "0889": 381, "4616": 381, "261": 381, "0655": 381, "262": 381, "8333": 381, "9476": 381, "263": 381, "7554": 381, "3798": 381, "264": 381, "3717": 381, "3947": 381, "265": 381, "3060": 381, "6495": 381, "7467": 381, "8889": 381, "267": 381, "8457": 381, "591": 381, "7137": 381, "0536": 381, "771": 381, "269": 381, "1651": 381, "388": 381, "270": 381, "8246": 381, "5709": 381, "281": 381, "271": 381, "7502": 381, "0521": 381, "032": 381, "272": 381, "5475": 381, "7253": 381, "273": 381, "2856": 381, "7130": 381, "274": 381, "2778": 381, "4122": 381, "8368": 381, "1841": 381, "9622": 381, "1603": 381, "003e": 381, "277": 381, "0247": 381, "346": 381, "278": 381, "2238": 381, "6418": 381, "279": 381, "0626": 381, "2538": 381, "280": 381, "0149": 381, "7380": 381, "2167": 381, "8911": 381, "282": 381, "8725": 381, "1983": 381, "8142": 381, "3709": 381, "284": 381, "4989": 381, "285": 381, "6464": 381, "6210": 381, "286": 381, "9726": 381, "0820": 381, "287": 381, "6975": 381, "9091": 381, "4926": 381, "4791": 381, "289": 381, "0905": 381, "3500": 381, "290": 381, "2287": 381, "291": 381, "9918": 381, "5543": 381, "9245": 381, "6444": 381, "631": 381, "293": 381, "0448": 381, "4769": 381, "8566": 381, "7208": 381, "295": 381, "0966": 381, "296": 381, "5303": 381, "1537": 381, "023": 381, "297": 381, "2682": 381, "564": 381, "4318": 381, "5063": 381, "299": 381, "7475": 381, "4190": 381, "8186": 381, "5077": 381, "301": 381, "1883": 381, "5291": 381, "472": 381, "302": 381, "3998": 381, "303": 381, "3622": 381, "0930": 381, "626": 381, "304": 381, "9500": 381, "5664": 381, "305": 381, "5697": 381, "3024": 381, "306": 381, "3117": 381, "0052": 381, "0981": 381, "9312": 381, "3873": 381, "309": 381, "0411": 381, "2650": 381, "1656": 381, "0228": 381, "004": 381, "1196": 381, "2478": 381, "312": 381, "7353": 381, "0812": 381, "313": 381, "3022": 381, "758": 381, "314": 381, "1406": 381, "4626": 381, "315": 381, "2156": 381, "851": 381, "316": 381, "1953": 381, "3774": 381, "317": 381, "08it": 381, "6385": 381, "9917": 381, "318": 381, "2764": 381, "319": 381, "78it": 381, "6391": 381, "9317": 381, "9748": 381, "2679": 381, "321": 381, "8495": 381, "5125": 381, "8177": 381, "6602": 381, "323": 381, "0704": 381, "5776": 381, "324": 381, "9833": [381, 385], "1339": 381, "402": 381, "325": 381, "1238": 381, "326": 381, "9299": 381, "0227": 381, "327": 381, "7727": 381, "1607": 381, "336": 381, "328": 381, "3958": 381, "3223": 381, "763": 381, "329": 381, "4742": 381, "1797": 381, "330": 381, "0144": 381, "0085": 381, "791": 381, "331": 381, "8284": 381, "0428": 381, "332": 381, "7365": 381, "333": 381, "4566": 381, "0781": 381, "086": 381, "3355": 381, "0230": 381, "335": 381, "0423": 381, "076": 381, "3711": 381, "1335": 381, "6855": 381, "337": 381, "0304": 381, "0023": 381, "8459": 381, "338": 381, "9998": 381, "4399": 381, "339": 381, "2303": 381, "1346": 381, "340": 381, "2915": 381, "7116": 381, "341": 381, "5560": 381, "0487": 381, "342": 381, "5119": 381, "061": 381, "343": 381, "3305": 381, "3705": 381, "957": 381, "344": 381, "6068": 381, "345": 381, "5731": 381, "3897": 381, "0376": 381, "347": 381, "0434": 381, "012": 381, "1300": 381, "1215": 381, "0968": 381, "0885": 381, "350": 381, "1348": 381, "0073": 381, "5052": 381, "4184": 381, "2817": 381, "8887": 381, "4779": 381, "1009": 381, "354": 381, "0604": 381, "599": 381, "355": 381, "4486": 381, "1176": 381, "656": 381, "356": 381, "2436": 381, "0668": 381, "8849": 381, "0012": 381, "358": 381, "7511": 381, "8804": 381, "359": 381, "8870": 381, "6728": 381, "8841": 381, "5508": 381, "361": 381, "5242": 381, "0013": 381, "6185": 381, "363": 381, "1378": 381, "0204": 381, "364": 381, "0355": 381, "365": 381, "4884": 381, "0231": 381, "0014": 381, "6793": 381, "367": 381, "9834": 381, "863": 381, "6709": 381, "462": 381, "369": 381, "5199": 381, "9790": 381, "370": 381, "9401": 381, "7802": 381, "371": 381, "6723": 381, "372": 381, "2678": 381, "6201": 381, "373": 381, "2184": 381, "7385": 381, "374": 381, "6344": 381, "617": 381, "375": 381, "9945": 381, "0772": 381, "567": 381, "7576": 381, "0398": 381, "377": 381, "3396": 381, "0022": 381, "094": 381, "378": 381, "3073": 381, "4018": 381, "379": 381, "1869": 381, "380": 381, "0481": 381, "1117": 381, "381": 381, "6823": 381, "981": 381, "8305": 381, "0210": 381, "383": 381, "4908": 381, "0272": 381, "538": 381, "3267": 381, "0111": 381, "7965": 381, "1796": 381, "0039": 381, "5396": 381, "386": 381, "3757": 381, "0490": 381, "387": 381, "1394": 381, "4187": 381, "2986": 381, "7954": 381, "1274": 381, "0063": 381, "813": 381, "390": 381, "8706": 381, "0114": 381, "391": 381, "6922": 381, "2423": 381, "392": 381, "9115": 381, "2602": 381, "393": 381, "2449": 381, "0783": 381, "394": 381, "0631": 381, "0057": 381, "7444": 381, "395": 381, "3339": 381, "396": 381, "4806": 381, "397": 381, "4171": 381, "067": 381, "398": 381, "2618": 381, "5809": 381, "399": 381, "0054": 381, "3364": 381, "8733": 381, "0184": 381, "401": 381, "9137": 381, "0113": 381, "025": 381, "0386": 381, "0625": 381, "403": 381, "1332": 381, "0582": 381, "7816": 381, "404": 381, "8341": 381, "0941": 381, "854": 381, "405": 381, "8615": 381, "588": 381, "406": 381, "3849": 381, "008": 381, "407": 381, "9395": 381, "0765": 381, "055": 381, "408": 381, "2685": 381, "2235": 381, "688": 381, "409": 381, "3052": 381, "4249": 381, "410": 381, "6806": 381, "6383": 381, "3721": 381, "9981": 381, "412": 381, "1862": 381, "822": 381, "413": 381, "9811": 381, "0171": 381, "013": 381, "414": 381, "0252": 381, "0049": 381, "6205": 381, "415": 381, "1108": 381, "4921": 381, "9142": 381, "8130": 381, "417": 381, "1725": 381, "0036": 381, "3196": 381, "418": 381, "7795": 381, "0242": 381, "799": 381, "419": 381, "7737": 381, "0138": 381, "420": 381, "1462": 381, "0053": 381, "421": 381, "9226": 381, "6139": 381, "422": 381, "9889": 381, "0403": 381, "423": 381, "6194": 381, "0032": 381, "3989": 381, "0104": 381, "425": 381, "9960": 381, "0009": 381, "6009": 381, "426": 381, "2697": 381, "0914": 381, "427": 381, "1114": 381, "428": 381, "9862": 381, "1932": 381, "429": 381, "0637": 381, "0623": 381, "082": 381, "430": 381, "9906": 381, "2031": 381, "431": 381, "9948": 381, "0895": 381, "432": 381, "1970": 381, "0256": 381, "4231": 381, "0449": 381, "644": 381, "434": 381, "1039": 381, "1973": 381, "435": 381, "4561": 381, "1225": 381, "436": 381, "0211": 381, "2125": 381, "437": 381, "3866": 381, "0050": 381, "7202": 381, "438": 381, "6388": 381, "0072": 381, "439": 381, "1187": 381, "0015": 381, "5116": 381, "440": 381, "0432": 381, "0025": 381, "7809": 381, "1925": 381, "0103": 381, "442": 381, "9570": 381, "443": 381, "0871": 381, "5601": 381, "0165": 381, "0047": 381, "6061": 381, "2746": 381, "0027": 381, "7887": 381, "446": 381, "1835": 381, "0035": 381, "855": 381, "8420": 381, "548": 381, "2653": 381, "0126": 381, "9736": 381, "449": 381, "0594": 381, "0119": 381, "6196": 381, "4509": 381, "0373": 381, "0620": 381, "6898": 381, "3235": 381, "687": 381, "453": 381, "5879": 381, "8406": 381, "0694": 381, "8259": 381, "0235": 381, "8500": 381, "0024": 381, "4054": 381, "458": 381, "2027": 381, "0894": 381, "459": 381, "5966": 381, "460": 381, "6942": 381, "0016": 381, "4254": 381, "6703": 381, "0145": 381, "8124": 381, "0218": 381, "9196": 381, "0188": 381, "8986": 381, "0884": 381, "0084": 381, "5624": 381, "465": 381, "8862": 381, "0006": 381, "5384": 381, "466": 381, "5837": 381, "467": 381, "8954": 381, "0101": 381, "6751": 381, "468": 381, "8063": 381, "0122": 381, "9635": 381, "469": 381, "0692": 381, "4216": 381, "470": 381, "1227": 381, "0586": 381, "162e": 381, "9690": 381, "4166": 381, "6324": 381, "473": 381, "0778": 381, "8548": 381, "0017": 381, "4408": 381, "475": 381, "8125": 381, "1515": 381, "476": 381, "2733": 381, "0044": 381, "2836": 381, "477": 381, "7497": 381, "7681": 381, "478": 381, "8547": 381, "0105": 381, "7212": 381, "479": 381, "9848": 381, "0019": 381, "6498": 381, "1987": 381, "0011": 381, "5473": 381, "481": 381, "8991": 381, "6091": 381, "9189": 381, "5771": 381, "483": 381, "6781": 381, "7542": 381, "484": 381, "5959": 381, "0064": 381, "485": 381, "2547": 381, "486": 381, "0636": 381, "547": 381, "487": 381, "0065": 381, "488": 381, "1694": 381, "0083": 381, "5759": 381, "489": 381, "0493": 381, "0021": 381, "7805": 381, "490": 381, "0950": 381, "497": 381, "491": 381, "9717": 381, "3672": 381, "492": 381, "0207": 381, "493": 381, "8266": 381, "5365": 381, "494": 381, "2623": 381, "5078": 381, "495": 381, "4545": 381, "09636": 381, "8754": 381, "0010": 381, "498": 381, "0031": 381, "8269": 381, "499": 381, "6642": 381, "2284": 381, "501": 381, "9130": 381, "0008": 381, "502": 381, "503": 381, "7624": 381, "0056": 381, "3858": 381, "504": 381, "0890": 381, "0042": 381, "505": 381, "7505": 381, "2157": 381, "506": 381, "8394": 381, "3413": 381, "507": 381, "9609": 381, "0041": 381, "6905": 381, "508": 381, "8467": 381, "4409": 381, "509": 381, "510": 381, "8128": 381, "3559": 381, "1479": 381, "0264": 381, "1589": 381, "566": 381, "513": 381, "2756": 381, "0046": 381, "5266": 381, "514": 381, "9873": 381, "0112": 381, "9314": 381, "515": 381, "3791": 381, "0721": 381, "516": 381, "4580": 381, "0758": 381, "6114": 381, "517": 381, "2431": 381, "518": 381, "1958": 381, "5553": 381, "8924": 381, "0097": 381, "520": 381, "3737": 381, "0234": 381, "521": 381, "9125": 381, "4623": 381, "3230": 381, "0589": 381, "3784": 381, "523": 381, "9482": 381, "0051": 381, "524": 381, "1979": 381, "0045": 381, "6401": 381, "525": 381, "1588": 381, "0048": 381, "6255": 381, "526": 381, "6084": 381, "3477": 381, "1475": 381, "0209": 381, "528": 381, "7611": 381, "1040": 381, "0099": 381, "0173": 381, "643": 381, "530": 381, "8189": 381, "4358": 381, "531": 381, "9897": 381, "532": 381, "1548": 381, "9751": 381, "533": 381, "6362": 381, "7495": 381, "534": 381, "1749": 381, "9513": 381, "535": 381, "7708": 381, "0371": 381, "536": 381, "2649": 381, "0437": 381, "537": 381, "5491": 381, "0276": 381, "6426": 381, "7294": 381, "078e": 381, "539": 381, "9928": 381, "540": 381, "7937": 381, "0124": 381, "9664": 381, "3342": 381, "542": 381, "5496": 381, "0956": 381, "0059": 381, "545": 381, "9028": 381, "5843": 381, "546": 381, "0674": 381, "0178": 381, "797": 381, "2815": 381, "0599": 381, "1587": 381, "9276": 381, "8228": 381, "6164": 381, "551": 381, "6850": 381, "9167": 381, "3092": 381, "0670": 381, "9177": 381, "553": 381, "1599": 381, "0043": 381, "554": 381, "6367": 381, "555": 381, "3657": 381, "556": 381, "6694": 381, "2622": 381, "0372": 381, "4841": 381, "558": 381, "2707": 381, "757": 381, "559": 381, "2267": 381, "5415": 381, "560": 381, "4556": 381, "0163": 381, "561": 381, "1839": 381, "0809": 381, "6262": 381, "562": 381, "0278": 381, "1112": 381, "6155": 381, "565": 381, "1427": 381, "3582": 381, "624": 381, "7870": 381, "9490": 381, "0439": 381, "8796": 381, "568": 381, "8026": 381, "612": 381, "569": [381, 386], "3147": 381, "8486": 381, "570": 381, "7917": 381, "0129": 381, "571": 381, "9553": 381, "0020": 381, "6871": 381, "572": [381, 386], "3132": 381, "0159": 381, "8646": 381, "573": 381, "5320": 381, "0269": 381, "574": 381, "2955": 381, "0245": 381, "575": 381, "3347": 381, "0179": 381, "9718": 381, "1629": 381, "804": 381, "577": 381, "4164": 381, "0070": 381, "4335": 381, "578": 381, "579": 381, "3049": 381, "9063": 381, "580": 381, "8785": 381, "3295": 381, "5184": 381, "0546": 381, "582": 381, "4589": 381, "583": 381, "4697": 381, "2476": 381, "584": 381, "2397": 381, "585": 381, "4953": 381, "1775": 381, "586": 381, "2258": 381, "0110": 381, "7671": 381, "587": 381, "3981": 381, "8590": 381, "0007": 381, "589": 381, "9820": 381, "4221": 381, "590": 381, "1293": 381, "0116": 381, "868": 381, "1675": 381, "5931": 381, "592": 381, "2910": 381, "5219": 381, "2124": 381, "1730": 381, "594": 381, "2914": 381, "0206": 381, "595": 381, "0172": 381, "3982": 381, "0945": 381, "0121": 381, "4789": 381, "597": 381, "3805": 381, "4074": 381, "598": 381, "3310": 381, "5065": 381, "6028": 381, "6316": 381, "6724": 381, "6523": 381, "601": 381, "0136": 381, "4298": 381, "602": 381, "3524": 381, "2629": 381, "603": 381, "2635": 381, "7839": 381, "604": 381, "6041": 381, "8027": 381, "4170": 381, "4675": 381, "606": 381, "3153": 381, "9316": 381, "607": 381, "0649": 381, "9722": 381, "7989": 381, "0329": 381, "609": 381, "1976": 381, "6852": 381, "610": 381, "4793": 381, "1255": 381, "611": 381, "4581": 381, "0394": 381, "2047": 381, "0326": 381, "613": 381, "8967": 381, "8619": 381, "614": 381, "5906": 381, "6491": 381, "615": 381, "6634": 381, "4394": 381, "616": 381, "0624": 381, "0061": 381, "5676": 381, "3259": 381, "0131": 381, "7733": 381, "618": 381, "7515": 381, "0189": 381, "5575": 381, "619": 381, "9313": 381, "6286": 381, "620": 381, "4325": 381, "7832": 381, "621": 381, "1134": 381, "622": 381, "4572": 381, "0500": 381, "5838": 381, "623": 381, "3818": 381, "8623": 381, "1253": 381, "6622": 381, "subject": 381, "explain": 382, "semat": 382, "r3mtransform": 382, "env_transform": [382, 386], "s3": 382, "amazonaw": 382, "r3m_50": 382, "374m": 382, "9m": 382, "117mb": 382, "5mb": 382, "0m": 382, "8mb": 382, "2m": 382, "7mb": 382, "2mb": 382, "0mb": 382, "105m": 382, "115m": 382, "9mb": 382, "131m": 382, "3mb": 382, "139m": 382, "148m": 382, "162m": 382, "171m": 382, "179m": 382, "6mb": 382, "186m": 382, "195m": 382, "201m": 382, "212m": 382, "218m": 382, "229m": 382, "246m": 382, "4mb": 382, "262m": 382, "268m": 382, "279m": 382, "1mb": 382, "293m": 382, "299m": 382, "311m": 382, "328m": 382, "344m": 382, "360m": 382, "wiser": 382, "batteri": 383, "buffer_list": 383, "lowest": 383, "medium": 383, "buffer_lazytensor": 383, "buffer_lazymemmap": 383, "tempdir": 383, "tmpdhp8p94h": 383, "fullest": 383, "mydata": 383, "background": 383, "question": [383, 385], "_i": 383, "artifici": 383, "0893e": 383, "hamper": 383, "she": 383, "pars": 383, "proport": 383, "hist": 383, "barcontain": 383, "artist": 383, "reappear": 383, "unfold": 383, "problemat": 383, "4th": 383, "prioritizedslicesampl": 383, "tensordictmaxvaluewrit": 383, "demo": 385, "icml": 385, "vmoen": 385, "fb": 385, "invest": 385, "platform": 385, "media": 385, "predominantli": 385, "tensordict1": 385, "tensordict2": 385, "tensordict_sampl": 385, "_sampler": 385, "_sum_tre": 385, "modulenotfounderror": 385, "06984967738389969": 385, "28791671991348267": 385, "noopresetenv": [385, 386], "backbone_modul": 385, "params_expand": 385, "exec_sequ": 385, "tensordict_exp": 385, "base_modul": 385, "0137": 385, "1524": 385, "0641": 385, "viewbackward0": 385, "asstridedbackward0": 385, "8728": 385, "1334": 385, "3494": 385, "6887": 385, "6402": 385, "_safetanhbackward": 385, "1132": 385, "1762": 385, "3430": 385, "2668": 385, "2918": 385, "6239": 385, "roughli": 385, "tensordicts_prealloc": 385, "tensordicts_stack": 385, "tensordict_rollout": [385, 386], "disclaim": 385, "concatmodul": 385, "loss_td": 385, "year": 385, "roadmap": 385, "compris": 385, "contributor": 385, "curiou": 385, "nascent": 385, "unsupervis": 386, "unifi": 386, "_build_env": 386, "bipedalwalk": 386, "bipedalwalkerhardcor": 386, "blackjack": 386, "carrac": 386, "2664": 386, "deserv": 386, "__episode__": 386, "__trajectory__": 386, "void": 386, "reproduct": 386, "reset_data": 386, "tensordict_tprim": 386, "imshow": 386, "axesimag": 386, "0x7f0d56f9f430": 386, "traceback": 386, "1372": 386, "785": 386, "3058": 386, "1424": 386, "_check_version_exist": 386, "ns": 386, "_check_name_exist": 386, "_check_namespace_exist": 386, "namespacenotfound": 386, "suggestion_msg": 386, "wrapper1": 386, "wrapper2": 386, "obviou": 386, "truth": 386, "env0": 386, "env_transformed_bi": 386, "stanc": 386, "transformeddistribut": 386, "base_dist": 386, "concat": 386, "mofidi": 386, "transformedenviron": 386, "moderet": 386, "computation": 386, "legitim": 386, "incom": 386, "amongst": 386, "has_cuda": 386, "wor": 386, "convention": 386, "markovian": 386, "constain": 386, "bar_": 386, "get_someth": 386, "aargh": 386, "is_clos": 386, "foo_list": 386, "parallen": 386, "particularili": 386, "evolv": 386, "steadi": 386, "approx": 386, "_extra_st": 386, "observation_ssq": 386, "observation_sum": 386, "dispach": 386, "absor": 386}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "AdaptiveKLController"], [24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "ConstantKLController"], [28, 0, 1, "", "DiscreteTensorSpec"], [29, 0, 1, "", "Flat2TED"], [30, 0, 1, "", "H5Combine"], [31, 0, 1, "", "H5Split"], [32, 0, 1, "", "LazyStackedCompositeSpec"], [33, 0, 1, "", "LazyStackedTensorSpec"], [34, 0, 1, "", "MultiDiscreteTensorSpec"], [35, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [36, 0, 1, "", "MultiStep"], [37, 0, 1, "", "Nested2TED"], [38, 0, 1, "", "NonTensorSpec"], [39, 0, 1, "", "OneHotDiscreteTensorSpec"], [40, 0, 1, "", "PairwiseDataset"], [41, 0, 1, "", "PrioritizedReplayBuffer"], [42, 0, 1, "", "PromptData"], [43, 0, 1, "", "PromptTensorDictTokenizer"], [44, 0, 1, "", "ReplayBuffer"], [45, 0, 1, "", "RewardData"], [46, 0, 1, "", "RolloutFromModel"], [47, 0, 1, "", "TED2Flat"], [48, 0, 1, "", "TED2Nested"], [49, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [50, 0, 1, "", "TensorDictReplayBuffer"], [51, 0, 1, "", "TensorDictTokenizer"], [52, 0, 1, "", "TensorSpec"], [53, 0, 1, "", "TokenizedDatasetLoader"], [54, 0, 1, "", "UnboundedContinuousTensorSpec"], [55, 0, 1, "", "UnboundedDiscreteTensorSpec"], [56, 0, 1, "", "check_no_exclusive_keys"], [57, 0, 1, "", "consolidate_spec"], [58, 0, 1, "", "contains_lazy_spec"], [59, 0, 1, "", "create_infinite_iterator"], [69, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[23, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "contains"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 3, 1, "", "sample"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 3, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "get"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 3, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 3, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "to_one_hot"], [28, 1, 1, "", "to_one_hot_spec"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 3, 1, "", "sample"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 3, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 3, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 3, 1, "", "sample"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[36, 1, 1, "", "add_module"], [36, 1, 1, "", "apply"], [36, 1, 1, "", "bfloat16"], [36, 1, 1, "", "buffers"], [36, 1, 1, "", "children"], [36, 1, 1, "", "compile"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 1, 1, "", "double"], [36, 1, 1, "", "eval"], [36, 1, 1, "", "extra_repr"], [36, 1, 1, "", "float"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "get_buffer"], [36, 1, 1, "", "get_extra_state"], [36, 1, 1, "", "get_parameter"], [36, 1, 1, "", "get_submodule"], [36, 1, 1, "", "half"], [36, 1, 1, "", "ipu"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "modules"], [36, 1, 1, "", "named_buffers"], [36, 1, 1, "", "named_children"], [36, 1, 1, "", "named_modules"], [36, 1, 1, "", "named_parameters"], [36, 1, 1, "", "parameters"], [36, 1, 1, "", "register_backward_hook"], [36, 1, 1, "", "register_buffer"], [36, 1, 1, "", "register_forward_hook"], [36, 1, 1, "", "register_forward_pre_hook"], [36, 1, 1, "", "register_full_backward_hook"], [36, 1, 1, "", "register_full_backward_pre_hook"], [36, 1, 1, "", "register_load_state_dict_post_hook"], [36, 1, 1, "", "register_module"], [36, 1, 1, "", "register_parameter"], [36, 1, 1, "", "register_state_dict_pre_hook"], [36, 1, 1, "", "requires_grad_"], [36, 1, 1, "", "set_extra_state"], [36, 1, 1, "", "share_memory"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_empty"], [36, 1, 1, "", "train"], [36, 1, 1, "", "type"], [36, 1, 1, "", "xpu"], [36, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 3, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 3, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[40, 3, 1, "", "batch_size"], [40, 3, 1, "", "device"], [40, 1, 1, "", "from_dataset"], [40, 1, 1, "", "from_tensordict"], [40, 1, 1, "", "gather"], [40, 1, 1, "", "get"], [40, 1, 1, "", "is_memmap"], [40, 1, 1, "", "is_shared"], [40, 1, 1, "", "load_memmap"], [40, 1, 1, "", "load_state_dict"], [40, 1, 1, "", "memmap"], [40, 1, 1, "", "memmap_"], [40, 1, 1, "", "memmap_like"], [40, 3, 1, "", "names"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "numel"], [40, 1, 1, "", "replace"], [40, 1, 1, "", "set"], [40, 1, 1, "", "state_dict"], [40, 1, 1, "", "to_tensordict"], [40, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dump"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "load"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "register_load_hook"], [41, 1, 1, "", "register_save_hook"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[42, 3, 1, "", "batch_size"], [42, 3, 1, "", "device"], [42, 1, 1, "", "from_dataset"], [42, 1, 1, "", "from_tensordict"], [42, 1, 1, "", "gather"], [42, 1, 1, "", "get"], [42, 1, 1, "", "is_memmap"], [42, 1, 1, "", "is_shared"], [42, 1, 1, "", "load_memmap"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "memmap"], [42, 1, 1, "", "memmap_"], [42, 1, 1, "", "memmap_like"], [42, 3, 1, "", "names"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "numel"], [42, 1, 1, "", "replace"], [42, 1, 1, "", "set"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "to_tensordict"], [42, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[44, 1, 1, "", "add"], [44, 1, 1, "", "append_transform"], [44, 1, 1, "", "dump"], [44, 1, 1, "", "dumps"], [44, 1, 1, "", "empty"], [44, 1, 1, "", "extend"], [44, 1, 1, "", "insert_transform"], [44, 1, 1, "", "load"], [44, 1, 1, "", "loads"], [44, 1, 1, "", "register_load_hook"], [44, 1, 1, "", "register_save_hook"], [44, 1, 1, "", "sample"], [44, 3, 1, "", "sampler"], [44, 1, 1, "", "save"], [44, 1, 1, "", "set_sampler"], [44, 1, 1, "", "set_storage"], [44, 1, 1, "", "set_writer"], [44, 3, 1, "", "storage"], [44, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[45, 3, 1, "", "batch_size"], [45, 3, 1, "", "device"], [45, 1, 1, "", "from_tensordict"], [45, 1, 1, "", "gather"], [45, 1, 1, "", "get"], [45, 1, 1, "", "is_memmap"], [45, 1, 1, "", "is_shared"], [45, 1, 1, "", "load_memmap"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "memmap"], [45, 1, 1, "", "memmap_"], [45, 1, 1, "", "memmap_like"], [45, 3, 1, "", "names"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "numel"], [45, 1, 1, "", "replace"], [45, 1, 1, "", "set"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to_tensordict"], [45, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[46, 1, 1, "", "create_rollout_td"], [46, 1, 1, "", "generate"], [46, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[49, 1, 1, "", "add"], [49, 1, 1, "", "append_transform"], [49, 1, 1, "", "dump"], [49, 1, 1, "", "dumps"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "extend"], [49, 1, 1, "", "insert_transform"], [49, 1, 1, "", "load"], [49, 1, 1, "", "loads"], [49, 1, 1, "", "register_load_hook"], [49, 1, 1, "", "register_save_hook"], [49, 1, 1, "", "sample"], [49, 3, 1, "", "sampler"], [49, 1, 1, "", "save"], [49, 1, 1, "", "set_sampler"], [49, 1, 1, "", "set_storage"], [49, 1, 1, "", "set_writer"], [49, 3, 1, "", "storage"], [49, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "append_transform"], [50, 1, 1, "", "dump"], [50, 1, 1, "", "dumps"], [50, 1, 1, "", "empty"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "insert_transform"], [50, 1, 1, "", "load"], [50, 1, 1, "", "loads"], [50, 1, 1, "", "register_load_hook"], [50, 1, 1, "", "register_save_hook"], [50, 1, 1, "", "sample"], [50, 3, 1, "", "sampler"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set_sampler"], [50, 1, 1, "", "set_storage"], [50, 1, 1, "", "set_writer"], [50, 3, 1, "", "storage"], [50, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 3, 1, "", "sample"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[53, 1, 1, "", "dataset_to_tensordict"], [53, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 3, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 3, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"]], "torchrl.data.datasets": [[60, 0, 1, "", "AtariDQNExperienceReplay"], [61, 0, 1, "", "BaseDatasetExperienceReplay"], [62, 0, 1, "", "D4RLExperienceReplay"], [63, 0, 1, "", "GenDGRLExperienceReplay"], [64, 0, 1, "", "MinariExperienceReplay"], [65, 0, 1, "", "OpenMLExperienceReplay"], [66, 0, 1, "", "OpenXExperienceReplay"], [67, 0, 1, "", "RobosetExperienceReplay"], [68, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 3, 1, "", "data_path"], [60, 3, 1, "", "data_path_root"], [60, 1, 1, "", "delete"], [60, 1, 1, "", "dump"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "load"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "preprocess"], [60, 1, 1, "", "register_load_hook"], [60, 1, 1, "", "register_save_hook"], [60, 1, 1, "", "sample"], [60, 3, 1, "", "sampler"], [60, 1, 1, "", "save"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 3, 1, "", "storage"], [60, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 3, 1, "", "data_path"], [63, 3, 1, "", "data_path_root"], [63, 1, 1, "", "delete"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "preprocess"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 3, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 3, 1, "", "storage"], [63, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 3, 1, "", "data_path"], [64, 3, 1, "", "data_path_root"], [64, 1, 1, "", "delete"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "preprocess"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 3, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 3, 1, "", "storage"], [64, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 3, 1, "", "data_path"], [65, 3, 1, "", "data_path_root"], [65, 1, 1, "", "delete"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "preprocess"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 3, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 3, 1, "", "storage"], [65, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 3, 1, "", "data_path"], [66, 3, 1, "", "data_path_root"], [66, 1, 1, "", "delete"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "preprocess"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 3, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 3, 1, "", "storage"], [66, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 3, 1, "", "data_path"], [67, 3, 1, "", "data_path_root"], [67, 1, 1, "", "delete"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "preprocess"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 3, 1, "", "data_path"], [68, 3, 1, "", "data_path_root"], [68, 1, 1, "", "delete"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "preprocess"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[70, 0, 1, "", "FlatStorageCheckpointer"], [71, 0, 1, "", "H5StorageCheckpointer"], [72, 0, 1, "", "ImmutableDatasetWriter"], [73, 0, 1, "", "LazyMemmapStorage"], [74, 0, 1, "", "LazyTensorStorage"], [75, 0, 1, "", "ListStorage"], [76, 0, 1, "", "ListStorageCheckpointer"], [77, 0, 1, "", "NestedStorageCheckpointer"], [78, 0, 1, "", "PrioritizedSampler"], [79, 0, 1, "", "PrioritizedSliceSampler"], [80, 0, 1, "", "RandomSampler"], [81, 0, 1, "", "ReplayBufferEnsemble"], [82, 0, 1, "", "RoundRobinWriter"], [83, 0, 1, "", "Sampler"], [84, 0, 1, "", "SamplerEnsemble"], [85, 0, 1, "", "SamplerWithoutReplacement"], [86, 0, 1, "", "SliceSampler"], [87, 0, 1, "", "SliceSamplerWithoutReplacement"], [88, 0, 1, "", "Storage"], [89, 0, 1, "", "StorageCheckpointerBase"], [90, 0, 1, "", "StorageEnsemble"], [91, 0, 1, "", "StorageEnsembleCheckpointer"], [92, 0, 1, "", "TensorDictMaxValueWriter"], [93, 0, 1, "", "TensorDictRoundRobinWriter"], [94, 0, 1, "", "TensorStorage"], [95, 0, 1, "", "TensorStorageCheckpointer"], [96, 0, 1, "", "Writer"], [97, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[72, 1, 1, "", "add"], [72, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[73, 1, 1, "", "attach"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "load"], [73, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[74, 1, 1, "", "attach"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "load"], [74, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[75, 1, 1, "", "attach"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "load"], [75, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[78, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[79, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 3, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 3, 1, "", "storage"], [81, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[82, 1, 1, "", "add"], [82, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[88, 1, 1, "", "attach"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "load"], [88, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[90, 1, 1, "", "attach"], [90, 1, 1, "", "dump"], [90, 1, 1, "", "load"], [90, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[92, 1, 1, "", "add"], [92, 1, 1, "", "extend"], [92, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[96, 1, 1, "", "add"], [96, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.envs": [[98, 2, 1, "", "BraxEnv"], [99, 2, 1, "", "BraxWrapper"], [100, 2, 1, "", "DMControlEnv"], [101, 2, 1, "", "DMControlWrapper"], [102, 0, 1, "", "EnvBase"], [103, 0, 1, "", "EnvCreator"], [104, 0, 1, "", "EnvMetaData"], [105, 2, 1, "", "GymEnv"], [106, 0, 1, "", "GymLikeEnv"], [107, 2, 1, "", "GymWrapper"], [108, 2, 1, "", "HabitatEnv"], [109, 2, 1, "", "IsaacGymEnv"], [110, 2, 1, "", "IsaacGymWrapper"], [111, 2, 1, "", "JumanjiEnv"], [112, 2, 1, "", "JumanjiWrapper"], [113, 2, 1, "", "MOGymEnv"], [114, 2, 1, "", "MOGymWrapper"], [115, 2, 1, "", "MarlGroupMapType"], [116, 2, 1, "", "MeltingpotEnv"], [117, 2, 1, "", "MeltingpotWrapper"], [118, 2, 1, "", "ModelBasedEnvBase"], [119, 2, 1, "", "MultiThreadedEnv"], [120, 2, 1, "", "MultiThreadedEnvWrapper"], [121, 2, 1, "", "OpenMLEnv"], [122, 0, 1, "", "ParallelEnv"], [123, 2, 1, "", "PettingZooEnv"], [124, 2, 1, "", "PettingZooWrapper"], [125, 2, 1, "", "RoboHiveEnv"], [126, 2, 1, "", "SMACv2Env"], [127, 2, 1, "", "SMACv2Wrapper"], [128, 0, 1, "", "SerialEnv"], [129, 2, 1, "", "VmasEnv"], [130, 2, 1, "", "VmasWrapper"], [131, 2, 1, "", "check_marl_grouping"], [132, 2, 1, "", "gym_backend"], [118, 1, 1, "", "rand_step"], [118, 1, 1, "", "reset"], [118, 1, 1, "", "rollout"], [135, 2, 1, "", "set_gym_backend"], [118, 1, 1, "", "set_seed"], [118, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[102, 3, 1, "", "action_key"], [102, 3, 1, "", "action_keys"], [102, 3, 1, "", "action_spec"], [102, 1, 1, "", "add_module"], [102, 1, 1, "", "add_truncated_keys"], [102, 1, 1, "", "append_transform"], [102, 1, 1, "", "apply"], [102, 3, 1, "", "batch_locked"], [102, 3, 1, "", "batch_size"], [102, 1, 1, "", "bfloat16"], [102, 1, 1, "", "buffers"], [102, 1, 1, "", "children"], [102, 1, 1, "", "compile"], [102, 1, 1, "", "cpu"], [102, 1, 1, "", "cuda"], [102, 3, 1, "", "done_key"], [102, 3, 1, "", "done_keys"], [102, 3, 1, "", "done_keys_groups"], [102, 3, 1, "", "done_spec"], [102, 1, 1, "", "double"], [102, 1, 1, "", "empty_cache"], [102, 1, 1, "", "eval"], [102, 1, 1, "", "extra_repr"], [102, 1, 1, "", "fake_tensordict"], [102, 1, 1, "", "float"], [102, 1, 1, "", "forward"], [102, 3, 1, "", "full_action_spec"], [102, 3, 1, "", "full_done_spec"], [102, 3, 1, "", "full_reward_spec"], [102, 3, 1, "", "full_state_spec"], [102, 1, 1, "", "get_buffer"], [102, 1, 1, "", "get_extra_state"], [102, 1, 1, "", "get_parameter"], [102, 1, 1, "", "get_submodule"], [102, 1, 1, "", "half"], [102, 3, 1, "", "input_spec"], [102, 1, 1, "", "ipu"], [102, 1, 1, "", "load_state_dict"], [102, 1, 1, "", "maybe_reset"], [102, 1, 1, "", "modules"], [102, 1, 1, "", "named_buffers"], [102, 1, 1, "", "named_children"], [102, 1, 1, "", "named_modules"], [102, 1, 1, "", "named_parameters"], [102, 3, 1, "", "observation_spec"], [102, 3, 1, "", "output_spec"], [102, 1, 1, "", "parameters"], [102, 1, 1, "", "rand_action"], [102, 1, 1, "id0", "rand_step"], [102, 1, 1, "", "register_backward_hook"], [102, 1, 1, "", "register_buffer"], [102, 1, 1, "", "register_forward_hook"], [102, 1, 1, "", "register_forward_pre_hook"], [102, 1, 1, "", "register_full_backward_hook"], [102, 1, 1, "", "register_full_backward_pre_hook"], [102, 1, 1, "", "register_gym"], [102, 1, 1, "", "register_load_state_dict_post_hook"], [102, 1, 1, "", "register_module"], [102, 1, 1, "", "register_parameter"], [102, 1, 1, "", "register_state_dict_pre_hook"], [102, 1, 1, "", "requires_grad_"], [102, 1, 1, "id1", "reset"], [102, 3, 1, "", "reset_keys"], [102, 3, 1, "", "reward_key"], [102, 3, 1, "", "reward_keys"], [102, 3, 1, "", "reward_spec"], [102, 1, 1, "id2", "rollout"], [102, 1, 1, "", "set_extra_state"], [102, 1, 1, "id3", "set_seed"], [102, 3, 1, "", "shape"], [102, 1, 1, "", "share_memory"], [102, 3, 1, "", "specs"], [102, 1, 1, "", "state_dict"], [102, 3, 1, "", "state_keys"], [102, 3, 1, "", "state_spec"], [102, 1, 1, "id4", "step"], [102, 1, 1, "", "step_and_maybe_reset"], [102, 1, 1, "", "to"], [102, 1, 1, "", "to_empty"], [102, 1, 1, "", "train"], [102, 1, 1, "", "type"], [102, 1, 1, "", "xpu"], [102, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[106, 3, 1, "", "action_key"], [106, 3, 1, "", "action_keys"], [106, 3, 1, "", "action_spec"], [106, 1, 1, "", "add_module"], [106, 1, 1, "", "add_truncated_keys"], [106, 1, 1, "", "append_transform"], [106, 1, 1, "", "apply"], [106, 1, 1, "", "auto_register_info_dict"], [106, 3, 1, "", "batch_locked"], [106, 3, 1, "", "batch_size"], [106, 1, 1, "", "bfloat16"], [106, 1, 1, "", "buffers"], [106, 1, 1, "", "children"], [106, 1, 1, "", "close"], [106, 1, 1, "", "compile"], [106, 1, 1, "", "cpu"], [106, 1, 1, "", "cuda"], [106, 3, 1, "", "done_key"], [106, 3, 1, "", "done_keys"], [106, 3, 1, "", "done_keys_groups"], [106, 3, 1, "", "done_spec"], [106, 1, 1, "", "double"], [106, 1, 1, "", "empty_cache"], [106, 1, 1, "", "eval"], [106, 1, 1, "", "extra_repr"], [106, 1, 1, "", "fake_tensordict"], [106, 1, 1, "", "float"], [106, 1, 1, "", "forward"], [106, 3, 1, "", "full_action_spec"], [106, 3, 1, "", "full_done_spec"], [106, 3, 1, "", "full_reward_spec"], [106, 3, 1, "", "full_state_spec"], [106, 1, 1, "", "get_buffer"], [106, 1, 1, "", "get_extra_state"], [106, 1, 1, "", "get_parameter"], [106, 1, 1, "", "get_submodule"], [106, 1, 1, "", "half"], [106, 3, 1, "", "input_spec"], [106, 1, 1, "", "ipu"], [106, 1, 1, "", "load_state_dict"], [106, 1, 1, "", "maybe_reset"], [106, 1, 1, "", "modules"], [106, 1, 1, "", "named_buffers"], [106, 1, 1, "", "named_children"], [106, 1, 1, "", "named_modules"], [106, 1, 1, "", "named_parameters"], [106, 3, 1, "", "observation_spec"], [106, 3, 1, "", "output_spec"], [106, 1, 1, "", "parameters"], [106, 1, 1, "", "rand_action"], [106, 1, 1, "", "rand_step"], [106, 1, 1, "", "read_action"], [106, 1, 1, "", "read_done"], [106, 1, 1, "", "read_obs"], [106, 1, 1, "", "read_reward"], [106, 1, 1, "", "register_backward_hook"], [106, 1, 1, "", "register_buffer"], [106, 1, 1, "", "register_forward_hook"], [106, 1, 1, "", "register_forward_pre_hook"], [106, 1, 1, "", "register_full_backward_hook"], [106, 1, 1, "", "register_full_backward_pre_hook"], [106, 1, 1, "", "register_gym"], [106, 1, 1, "", "register_load_state_dict_post_hook"], [106, 1, 1, "", "register_module"], [106, 1, 1, "", "register_parameter"], [106, 1, 1, "", "register_state_dict_pre_hook"], [106, 1, 1, "", "requires_grad_"], [106, 1, 1, "", "reset"], [106, 3, 1, "", "reset_keys"], [106, 3, 1, "", "reward_key"], [106, 3, 1, "", "reward_keys"], [106, 3, 1, "", "reward_spec"], [106, 1, 1, "", "rollout"], [106, 1, 1, "", "set_extra_state"], [106, 1, 1, "", "set_info_dict_reader"], [106, 1, 1, "", "set_seed"], [106, 3, 1, "", "shape"], [106, 1, 1, "", "share_memory"], [106, 3, 1, "", "specs"], [106, 1, 1, "", "state_dict"], [106, 3, 1, "", "state_keys"], [106, 3, 1, "", "state_spec"], [106, 1, 1, "", "step"], [106, 1, 1, "", "step_and_maybe_reset"], [106, 1, 1, "", "to"], [106, 1, 1, "", "to_empty"], [106, 1, 1, "", "train"], [106, 1, 1, "", "type"], [106, 1, 1, "", "xpu"], [106, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[122, 3, 1, "", "action_key"], [122, 3, 1, "", "action_keys"], [122, 3, 1, "", "action_spec"], [122, 1, 1, "", "add_module"], [122, 1, 1, "", "add_truncated_keys"], [122, 1, 1, "", "append_transform"], [122, 1, 1, "", "apply"], [122, 3, 1, "", "batch_locked"], [122, 3, 1, "", "batch_size"], [122, 1, 1, "", "bfloat16"], [122, 1, 1, "", "buffers"], [122, 1, 1, "", "children"], [122, 1, 1, "", "compile"], [122, 1, 1, "", "cpu"], [122, 1, 1, "", "cuda"], [122, 3, 1, "", "done_key"], [122, 3, 1, "", "done_keys"], [122, 3, 1, "", "done_keys_groups"], [122, 3, 1, "", "done_spec"], [122, 1, 1, "", "double"], [122, 1, 1, "", "empty_cache"], [122, 1, 1, "", "eval"], [122, 1, 1, "", "extra_repr"], [122, 1, 1, "", "fake_tensordict"], [122, 1, 1, "", "float"], [122, 1, 1, "", "forward"], [122, 3, 1, "", "full_action_spec"], [122, 3, 1, "", "full_done_spec"], [122, 3, 1, "", "full_reward_spec"], [122, 3, 1, "", "full_state_spec"], [122, 1, 1, "", "get_buffer"], [122, 1, 1, "", "get_extra_state"], [122, 1, 1, "", "get_parameter"], [122, 1, 1, "", "get_submodule"], [122, 1, 1, "", "half"], [122, 3, 1, "", "input_spec"], [122, 1, 1, "", "ipu"], [122, 1, 1, "", "load_state_dict"], [122, 1, 1, "", "maybe_reset"], [122, 1, 1, "", "modules"], [122, 1, 1, "", "named_buffers"], [122, 1, 1, "", "named_children"], [122, 1, 1, "", "named_modules"], [122, 1, 1, "", "named_parameters"], [122, 3, 1, "", "observation_spec"], [122, 3, 1, "", "output_spec"], [122, 1, 1, "", "parameters"], [122, 1, 1, "", "rand_action"], [122, 1, 1, "", "rand_step"], [122, 1, 1, "", "register_backward_hook"], [122, 1, 1, "", "register_buffer"], [122, 1, 1, "", "register_forward_hook"], [122, 1, 1, "", "register_forward_pre_hook"], [122, 1, 1, "", "register_full_backward_hook"], [122, 1, 1, "", "register_full_backward_pre_hook"], [122, 1, 1, "", "register_gym"], [122, 1, 1, "", "register_load_state_dict_post_hook"], [122, 1, 1, "", "register_module"], [122, 1, 1, "", "register_parameter"], [122, 1, 1, "", "register_state_dict_pre_hook"], [122, 1, 1, "", "requires_grad_"], [122, 1, 1, "", "reset"], [122, 3, 1, "", "reset_keys"], [122, 3, 1, "", "reward_key"], [122, 3, 1, "", "reward_keys"], [122, 3, 1, "", "reward_spec"], [122, 1, 1, "", "rollout"], [122, 1, 1, "", "set_extra_state"], [122, 1, 1, "", "set_seed"], [122, 3, 1, "", "shape"], [122, 1, 1, "", "share_memory"], [122, 3, 1, "", "specs"], [122, 1, 1, "", "state_dict"], [122, 3, 1, "", "state_keys"], [122, 3, 1, "", "state_spec"], [122, 1, 1, "", "step"], [122, 1, 1, "", "step_and_maybe_reset"], [122, 1, 1, "", "to"], [122, 1, 1, "", "to_empty"], [122, 1, 1, "", "train"], [122, 1, 1, "", "type"], [122, 1, 1, "", "update_kwargs"], [122, 1, 1, "", "xpu"], [122, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[128, 3, 1, "", "action_key"], [128, 3, 1, "", "action_keys"], [128, 3, 1, "", "action_spec"], [128, 1, 1, "", "add_module"], [128, 1, 1, "", "add_truncated_keys"], [128, 1, 1, "", "append_transform"], [128, 1, 1, "", "apply"], [128, 3, 1, "", "batch_locked"], [128, 3, 1, "", "batch_size"], [128, 1, 1, "", "bfloat16"], [128, 1, 1, "", "buffers"], [128, 1, 1, "", "children"], [128, 1, 1, "", "compile"], [128, 1, 1, "", "cpu"], [128, 1, 1, "", "cuda"], [128, 3, 1, "", "done_key"], [128, 3, 1, "", "done_keys"], [128, 3, 1, "", "done_keys_groups"], [128, 3, 1, "", "done_spec"], [128, 1, 1, "", "double"], [128, 1, 1, "", "empty_cache"], [128, 1, 1, "", "eval"], [128, 1, 1, "", "extra_repr"], [128, 1, 1, "", "fake_tensordict"], [128, 1, 1, "", "float"], [128, 1, 1, "", "forward"], [128, 3, 1, "", "full_action_spec"], [128, 3, 1, "", "full_done_spec"], [128, 3, 1, "", "full_reward_spec"], [128, 3, 1, "", "full_state_spec"], [128, 1, 1, "", "get_buffer"], [128, 1, 1, "", "get_extra_state"], [128, 1, 1, "", "get_parameter"], [128, 1, 1, "", "get_submodule"], [128, 1, 1, "", "half"], [128, 3, 1, "", "input_spec"], [128, 1, 1, "", "ipu"], [128, 1, 1, "", "load_state_dict"], [128, 1, 1, "", "maybe_reset"], [128, 1, 1, "", "modules"], [128, 1, 1, "", "named_buffers"], [128, 1, 1, "", "named_children"], [128, 1, 1, "", "named_modules"], [128, 1, 1, "", "named_parameters"], [128, 3, 1, "", "observation_spec"], [128, 3, 1, "", "output_spec"], [128, 1, 1, "", "parameters"], [128, 1, 1, "", "rand_action"], [128, 1, 1, "", "rand_step"], [128, 1, 1, "", "register_backward_hook"], [128, 1, 1, "", "register_buffer"], [128, 1, 1, "", "register_forward_hook"], [128, 1, 1, "", "register_forward_pre_hook"], [128, 1, 1, "", "register_full_backward_hook"], [128, 1, 1, "", "register_full_backward_pre_hook"], [128, 1, 1, "", "register_gym"], [128, 1, 1, "", "register_load_state_dict_post_hook"], [128, 1, 1, "", "register_module"], [128, 1, 1, "", "register_parameter"], [128, 1, 1, "", "register_state_dict_pre_hook"], [128, 1, 1, "", "requires_grad_"], [128, 1, 1, "", "reset"], [128, 3, 1, "", "reset_keys"], [128, 3, 1, "", "reward_key"], [128, 3, 1, "", "reward_keys"], [128, 3, 1, "", "reward_spec"], [128, 1, 1, "", "rollout"], [128, 1, 1, "", "set_extra_state"], [128, 1, 1, "", "set_seed"], [128, 3, 1, "", "shape"], [128, 1, 1, "", "share_memory"], [128, 3, 1, "", "specs"], [128, 1, 1, "", "state_dict"], [128, 3, 1, "", "state_keys"], [128, 3, 1, "", "state_spec"], [128, 1, 1, "", "step"], [128, 1, 1, "", "step_and_maybe_reset"], [128, 1, 1, "", "to"], [128, 1, 1, "", "to_empty"], [128, 1, 1, "", "train"], [128, 1, 1, "", "type"], [128, 1, 1, "", "update_kwargs"], [128, 1, 1, "", "xpu"], [128, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[133, 2, 1, "", "DreamerDecoder"], [134, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[136, 0, 1, "", "ActionDiscretizer"], [137, 0, 1, "", "ActionMask"], [138, 0, 1, "", "AutoResetEnv"], [139, 0, 1, "", "AutoResetTransform"], [140, 0, 1, "", "BatchSizeTransform"], [141, 0, 1, "", "BinarizeReward"], [142, 0, 1, "", "BurnInTransform"], [143, 0, 1, "", "CatFrames"], [144, 0, 1, "", "CatTensors"], [145, 0, 1, "", "CenterCrop"], [146, 0, 1, "", "ClipTransform"], [147, 0, 1, "", "Compose"], [148, 0, 1, "", "DTypeCastTransform"], [149, 0, 1, "", "DeviceCastTransform"], [150, 0, 1, "", "DiscreteActionProjection"], [151, 0, 1, "", "DoubleToFloat"], [152, 0, 1, "", "EndOfLifeTransform"], [153, 0, 1, "", "ExcludeTransform"], [154, 0, 1, "", "FiniteTensorDictCheck"], [155, 0, 1, "", "FlattenObservation"], [156, 0, 1, "", "FrameSkipTransform"], [157, 0, 1, "", "GrayScale"], [158, 0, 1, "", "InitTracker"], [159, 0, 1, "", "KLRewardTransform"], [160, 0, 1, "", "NoopResetEnv"], [161, 0, 1, "", "ObservationNorm"], [162, 0, 1, "", "ObservationTransform"], [163, 0, 1, "", "PermuteTransform"], [164, 0, 1, "", "PinMemoryTransform"], [165, 0, 1, "", "R3MTransform"], [166, 0, 1, "", "RandomCropTensorDict"], [167, 0, 1, "", "RemoveEmptySpecs"], [168, 0, 1, "", "RenameTransform"], [169, 0, 1, "", "Resize"], [170, 0, 1, "", "Reward2GoTransform"], [171, 0, 1, "", "RewardClipping"], [172, 0, 1, "", "RewardScaling"], [173, 0, 1, "", "RewardSum"], [174, 0, 1, "", "SelectTransform"], [175, 0, 1, "", "SignTransform"], [176, 0, 1, "", "SqueezeTransform"], [177, 0, 1, "", "StepCounter"], [178, 0, 1, "", "TargetReturn"], [179, 0, 1, "", "TensorDictPrimer"], [180, 0, 1, "", "TimeMaxPool"], [181, 0, 1, "", "ToTensorImage"], [182, 0, 1, "", "Transform"], [183, 0, 1, "", "TransformedEnv"], [184, 0, 1, "", "UnsqueezeTransform"], [185, 0, 1, "", "VC1Transform"], [186, 0, 1, "", "VIPRewardTransform"], [187, 0, 1, "", "VIPTransform"], [188, 0, 1, "", "VecGymEnvTransform"], [189, 0, 1, "", "VecNorm"], [190, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[136, 0, 1, "", "SamplingStrategy"], [136, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[137, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[138, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[139, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[140, 1, 1, "", "forward"], [140, 1, 1, "", "transform_env_batch_size"], [140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[141, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[146, 1, 1, "", "transform_observation_spec"], [146, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[147, 1, 1, "", "append"], [147, 1, 1, "", "forward"], [147, 1, 1, "", "insert"], [147, 1, 1, "", "to"], [147, 1, 1, "", "transform_env_batch_size"], [147, 1, 1, "", "transform_env_device"], [147, 1, 1, "", "transform_input_spec"], [147, 1, 1, "", "transform_observation_spec"], [147, 1, 1, "", "transform_output_spec"], [147, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[148, 1, 1, "", "forward"], [148, 1, 1, "", "transform_input_spec"], [148, 1, 1, "", "transform_observation_spec"], [148, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_done_spec"], [149, 1, 1, "", "transform_env_device"], [149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"], [149, 1, 1, "", "transform_output_spec"], [149, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[150, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "register_keys"], [152, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[154, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[156, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[161, 1, 1, "", "init_stats"], [161, 1, 1, "", "transform_input_spec"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[163, 1, 1, "", "transform_input_spec"], [163, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[164, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[165, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[166, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[168, 1, 1, "", "forward"], [168, 1, 1, "", "transform_input_spec"], [168, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[169, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[170, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[171, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[172, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_input_spec"], [173, 1, 1, "", "transform_observation_spec"], [173, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[175, 1, 1, "", "transform_observation_spec"], [175, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"], [177, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "transform_input_spec"], [178, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "to"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[182, 3, 1, "", "container"], [182, 1, 1, "", "forward"], [182, 3, 1, "", "parent"], [182, 1, 1, "", "to"], [182, 1, 1, "", "transform_done_spec"], [182, 1, 1, "", "transform_env_batch_size"], [182, 1, 1, "", "transform_env_device"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"], [182, 1, 1, "", "transform_output_spec"], [182, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[183, 1, 1, "", "add_truncated_keys"], [183, 1, 1, "", "append_transform"], [183, 3, 1, "", "batch_locked"], [183, 3, 1, "", "batch_size"], [183, 1, 1, "", "empty_cache"], [183, 1, 1, "", "eval"], [183, 3, 1, "", "input_spec"], [183, 1, 1, "", "insert_transform"], [183, 1, 1, "", "load_state_dict"], [183, 3, 1, "", "output_spec"], [183, 1, 1, "", "set_missing_tolerance"], [183, 1, 1, "", "set_seed"], [183, 1, 1, "", "state_dict"], [183, 1, 1, "", "to"], [183, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[184, 1, 1, "", "transform_input_spec"], [184, 1, 1, "", "transform_observation_spec"], [184, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "make_noload_model"], [185, 1, 1, "", "to"], [185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[187, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[189, 1, 1, "", "build_td_for_shared_vecnorm"], [189, 1, 1, "", "forward"], [189, 1, 1, "", "freeze"], [189, 1, 1, "", "frozen_copy"], [189, 1, 1, "", "get_extra_state"], [189, 3, 1, "", "loc"], [189, 3, 1, "", "scale"], [189, 1, 1, "", "set_extra_state"], [189, 3, 1, "", "standard_normal"], [189, 1, 1, "", "to_observation_norm"], [189, 1, 1, "", "transform_observation_spec"], [189, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[191, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[191, 1, 1, "", "add_module"], [191, 1, 1, "", "apply"], [191, 1, 1, "", "bfloat16"], [191, 1, 1, "", "buffers"], [191, 1, 1, "", "children"], [191, 1, 1, "", "compile"], [191, 3, 1, "", "container"], [191, 1, 1, "", "cpu"], [191, 1, 1, "", "cuda"], [191, 1, 1, "", "double"], [191, 1, 1, "", "eval"], [191, 1, 1, "", "extra_repr"], [191, 1, 1, "", "float"], [191, 1, 1, "", "forward"], [191, 1, 1, "", "get_buffer"], [191, 1, 1, "", "get_extra_state"], [191, 1, 1, "", "get_parameter"], [191, 1, 1, "", "get_submodule"], [191, 1, 1, "", "half"], [191, 1, 1, "", "ipu"], [191, 1, 1, "", "load_state_dict"], [191, 1, 1, "", "modules"], [191, 3, 1, "", "n_steps"], [191, 1, 1, "", "named_buffers"], [191, 1, 1, "", "named_children"], [191, 1, 1, "", "named_modules"], [191, 1, 1, "", "named_parameters"], [191, 1, 1, "", "parameters"], [191, 3, 1, "", "parent"], [191, 1, 1, "", "register_backward_hook"], [191, 1, 1, "", "register_buffer"], [191, 1, 1, "", "register_forward_hook"], [191, 1, 1, "", "register_forward_pre_hook"], [191, 1, 1, "", "register_full_backward_hook"], [191, 1, 1, "", "register_full_backward_pre_hook"], [191, 1, 1, "", "register_load_state_dict_post_hook"], [191, 1, 1, "", "register_module"], [191, 1, 1, "", "register_parameter"], [191, 1, 1, "", "register_state_dict_pre_hook"], [191, 1, 1, "", "requires_grad_"], [191, 1, 1, "", "set_extra_state"], [191, 1, 1, "", "share_memory"], [191, 1, 1, "", "state_dict"], [191, 1, 1, "", "to"], [191, 1, 1, "", "to_empty"], [191, 1, 1, "", "train"], [191, 1, 1, "", "transform_done_spec"], [191, 1, 1, "", "transform_env_batch_size"], [191, 1, 1, "", "transform_env_device"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_output_spec"], [191, 1, 1, "", "transform_reward_spec"], [191, 1, 1, "", "type"], [191, 1, 1, "", "xpu"], [191, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[192, 2, 1, "", "RandomPolicy"], [193, 2, 1, "", "check_env_specs"], [194, 2, 1, "", "exploration_mode"], [195, 2, 1, "", "exploration_type"], [196, 2, 1, "", "get_available_libraries"], [197, 2, 1, "", "make_composite_from_td"], [198, 2, 1, "", "set_exploration_mode"], [199, 2, 1, "", "set_exploration_type"], [200, 2, 1, "", "step_mdp"], [201, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[202, 0, 1, "", "CEMPlanner"], [203, 0, 1, "", "Conv3dNet"], [204, 0, 1, "", "ConvNet"], [205, 0, 1, "", "DTActor"], [206, 0, 1, "", "DdpgCnnActor"], [207, 0, 1, "", "DdpgCnnQNet"], [208, 0, 1, "", "DdpgMlpActor"], [209, 0, 1, "", "DdpgMlpQNet"], [210, 0, 1, "", "DecisionTransformer"], [211, 0, 1, "", "Delta"], [212, 0, 1, "", "DistributionalDQNnet"], [213, 0, 1, "", "DistributionalQValueHook"], [214, 0, 1, "", "DreamerActor"], [215, 0, 1, "", "DuelingCnnDQNet"], [216, 0, 1, "", "GRU"], [217, 0, 1, "", "GRUCell"], [218, 0, 1, "", "GRUModule"], [219, 0, 1, "", "IndependentNormal"], [220, 0, 1, "", "LSTM"], [221, 0, 1, "", "LSTMCell"], [222, 0, 1, "", "LSTMModule"], [223, 0, 1, "", "MLP"], [224, 0, 1, "", "MPCPlannerBase"], [225, 0, 1, "", "MPPIPlanner"], [226, 0, 1, "", "MaskedCategorical"], [227, 0, 1, "", "MaskedOneHotCategorical"], [228, 0, 1, "", "MultiAgentConvNet"], [229, 0, 1, "", "MultiAgentMLP"], [230, 0, 1, "", "NoisyLazyLinear"], [231, 0, 1, "", "NoisyLinear"], [232, 0, 1, "", "NormalParamWrapper"], [233, 0, 1, "", "ObsDecoder"], [234, 0, 1, "", "ObsEncoder"], [235, 0, 1, "", "OneHotCategorical"], [236, 0, 1, "", "OnlineDTActor"], [237, 0, 1, "", "QMixer"], [238, 0, 1, "", "QValueHook"], [239, 0, 1, "", "RSSMPosterior"], [240, 0, 1, "", "RSSMPrior"], [241, 0, 1, "", "Squeeze2dLayer"], [242, 0, 1, "", "SqueezeLayer"], [243, 0, 1, "", "TanhDelta"], [244, 0, 1, "", "TanhNormal"], [245, 0, 1, "", "TruncatedNormal"], [246, 0, 1, "", "VDNMixer"], [247, 0, 1, "", "VmapModule"], [248, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[202, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[203, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[204, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[205, 1, 1, "", "default_config"], [205, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[206, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[207, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[208, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[209, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[210, 0, 1, "", "DTConfig"], [210, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[211, 1, 1, "", "log_prob"], [211, 3, 1, "", "mean"], [211, 3, 1, "", "mode"], [211, 1, 1, "", "rsample"], [211, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[212, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[214, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[215, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[216, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[217, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[218, 1, 1, "", "forward"], [218, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[219, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[220, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[221, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[222, 1, 1, "", "forward"], [222, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.MLP": [[223, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[225, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[226, 1, 1, "", "log_prob"], [226, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[227, 1, 1, "", "log_prob"], [227, 1, 1, "", "rsample"], [227, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[230, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[232, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[233, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[234, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[235, 1, 1, "", "log_prob"], [235, 3, 1, "", "mode"], [235, 1, 1, "", "rsample"], [235, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[236, 1, 1, "", "default_config"], [236, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[237, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[239, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[240, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[242, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[243, 3, 1, "", "mean"], [243, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[244, 1, 1, "", "get_mode"], [244, 3, 1, "", "mean"], [244, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[245, 1, 1, "", "log_prob"], [245, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[246, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[247, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[249, 0, 1, "", "Actor"], [250, 0, 1, "", "ActorCriticOperator"], [251, 0, 1, "", "ActorCriticWrapper"], [252, 0, 1, "", "ActorValueOperator"], [253, 0, 1, "", "AdditiveGaussianWrapper"], [254, 0, 1, "", "DecisionTransformerInferenceWrapper"], [255, 0, 1, "", "DistributionalQValueActor"], [256, 0, 1, "", "DistributionalQValueModule"], [257, 0, 1, "", "EGreedyModule"], [258, 0, 1, "", "EGreedyWrapper"], [259, 0, 1, "", "LMHeadActorValueOperator"], [260, 0, 1, "", "MultiStepActorWrapper"], [261, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [262, 0, 1, "", "ProbabilisticActor"], [263, 0, 1, "", "QValueActor"], [264, 0, 1, "", "QValueModule"], [265, 0, 1, "", "SafeModule"], [266, 0, 1, "", "SafeProbabilisticModule"], [267, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [268, 0, 1, "", "SafeSequential"], [269, 0, 1, "", "TanhModule"], [270, 0, 1, "", "ValueOperator"], [271, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[250, 1, 1, "", "get_critic_operator"], [250, 1, 1, "", "get_policy_head"], [250, 1, 1, "", "get_value_head"], [250, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[251, 1, 1, "", "get_policy_head"], [251, 1, 1, "", "get_policy_operator"], [251, 1, 1, "", "get_value_head"], [251, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[252, 1, 1, "", "get_policy_head"], [252, 1, 1, "", "get_policy_operator"], [252, 1, 1, "", "get_value_head"], [252, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "mask_context"], [254, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[256, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[260, 1, 1, "", "forward"], [260, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[264, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[265, 1, 1, "", "random"], [265, 1, 1, "", "random_sample"], [265, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[266, 1, 1, "", "random"], [266, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[269, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[271, 1, 1, "", "get_reward_operator"], [271, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[272, 0, 1, "", "biased_softplus"], [273, 0, 1, "", "get_primers_from_module"], [274, 0, 1, "", "inv_softplus"], [275, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[272, 1, 1, "", "forward"]], "torchrl.objectives": [[276, 0, 1, "", "A2CLoss"], [277, 0, 1, "", "CQLLoss"], [278, 0, 1, "", "ClipPPOLoss"], [279, 0, 1, "", "DDPGLoss"], [280, 0, 1, "", "DQNLoss"], [281, 0, 1, "", "DTLoss"], [282, 0, 1, "", "DiscreteCQLLoss"], [283, 0, 1, "", "DiscreteIQLLoss"], [284, 0, 1, "", "DiscreteSACLoss"], [285, 0, 1, "", "DistributionalDQNLoss"], [286, 0, 1, "", "DreamerActorLoss"], [287, 0, 1, "", "DreamerModelLoss"], [288, 0, 1, "", "DreamerValueLoss"], [289, 0, 1, "", "HardUpdate"], [290, 0, 1, "", "IQLLoss"], [291, 0, 1, "", "KLPENPPOLoss"], [292, 0, 1, "", "LossModule"], [293, 0, 1, "", "OnlineDTLoss"], [294, 0, 1, "", "PPOLoss"], [295, 0, 1, "", "REDQLoss"], [296, 0, 1, "", "ReinforceLoss"], [297, 0, 1, "", "SACLoss"], [298, 0, 1, "", "SoftUpdate"], [299, 0, 1, "", "TD3Loss"], [300, 0, 1, "", "ValueEstimators"], [301, 0, 1, "", "default_value_kwargs"], [302, 0, 1, "", "distance_loss"], [303, 0, 1, "", "hold_out_net"], [304, 0, 1, "", "hold_out_params"], [306, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[278, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[281, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[283, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[287, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[288, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "loss_value_diff"], [290, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[291, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[292, 1, 1, "", "convert_to_functional"], [292, 1, 1, "", "forward"], [292, 1, 1, "", "make_value_estimator"], [292, 1, 1, "", "named_parameters"], [292, 1, 1, "", "parameters"], [292, 1, 1, "", "set_keys"], [292, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[293, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[294, 1, 1, "", "forward"], [294, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[296, 1, 1, "", "forward"], [296, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "load_state_dict"], [297, 1, 1, "", "make_value_estimator"], [297, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[299, 1, 1, "", "forward"], [299, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[305, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[305, 1, 1, "", "forward"], [305, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[307, 0, 1, "", "GAE"], [308, 0, 1, "", "TD0Estimator"], [309, 0, 1, "", "TD1Estimator"], [310, 0, 1, "", "TDLambdaEstimator"], [311, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[308, 1, 1, "", "forward"], [308, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[311, 1, 1, "", "forward"], [311, 1, 1, "", "set_keys"], [311, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[312, 0, 1, "", "generalized_advantage_estimate"], [313, 0, 1, "", "reward2go"], [314, 0, 1, "", "td0_advantage_estimate"], [315, 0, 1, "", "td0_return_estimate"], [316, 0, 1, "", "td1_advantage_estimate"], [317, 0, 1, "", "td1_return_estimate"], [318, 0, 1, "", "td_lambda_advantage_estimate"], [319, 0, 1, "", "td_lambda_return_estimate"], [320, 0, 1, "", "vec_generalized_advantage_estimate"], [321, 0, 1, "", "vec_td1_advantage_estimate"], [322, 0, 1, "", "vec_td1_return_estimate"], [323, 0, 1, "", "vec_td_lambda_advantage_estimate"], [324, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[325, 2, 1, "", "PixelRenderTransform"], [326, 2, 1, "", "TensorDictRecorder"], [327, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[328, 2, 1, "", "Logger"], [330, 2, 1, "", "generate_exp_name"], [331, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[329, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[332, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[333, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[334, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[335, 0, 1, "", "BatchSubSampler"], [336, 0, 1, "", "ClearCudaCache"], [337, 0, 1, "", "CountFramesLog"], [338, 0, 1, "", "LogReward"], [339, 0, 1, "", "OptimizerHook"], [340, 0, 1, "", "Recorder"], [341, 0, 1, "", "ReplayBufferTrainer"], [342, 0, 1, "", "RewardNormalizer"], [343, 0, 1, "", "SelectKeys"], [344, 0, 1, "", "Trainer"], [345, 0, 1, "", "TrainerHookBase"], [346, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[335, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[336, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[337, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[338, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[339, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[340, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[341, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[342, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[343, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[345, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[346, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[347, 2, 1, "", "correct_for_frame_skip"], [348, 2, 1, "", "get_stats_random_rollout"], [349, 2, 1, "", "make_collector_offpolicy"], [350, 2, 1, "", "make_collector_onpolicy"], [351, 2, 1, "", "make_dqn_loss"], [352, 2, 1, "", "make_replay_buffer"], [353, 2, 1, "", "make_target_updater"], [354, 2, 1, "", "make_trainer"], [355, 2, 1, "", "parallel_env_constructor"], [356, 2, 1, "", "sync_async_collector"], [357, 2, 1, "", "sync_sync_collector"], [358, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 362, 363, 364, 365, 367, 368, 369, 372, 379, 380, 381, 385, 386], "instal": [0, 6, 7, 385], "get": [0, 371, 372, 373, 374, 375, 376], "start": [0, 371, 372, 373, 374, 375, 376], "tutori": [0, 369, 379, 380], "basic": [0, 383], "intermedi": [0, 8], "advanc": 0, "refer": [0, 360], "knowledg": [0, 361], "base": [0, 2, 7, 361], "indic": 0, "tabl": 0, "collector": [1, 367, 368, 369, 370, 374, 376, 379, 380, 385], "packag": [1, 2, 3, 362, 363, 364, 365], "batch": [1, 367, 381, 383], "size": [1, 367, 383], "replai": [1, 2, 367, 368, 369, 370, 374, 376, 379, 380, 383, 385], "buffer": [1, 2, 367, 368, 369, 370, 374, 376, 379, 380, 383, 385], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 367, 368, 369, 374, 376, 379, 380, 385], "distribut": [1, 362], "helper": [1, 3], "function": [1, 4, 363, 368, 369, 373, 379, 380, 385], "compos": [2, 147], "support": 2, "type": 2, "choos": 2, "storag": [2, 88, 367, 374, 383], "sampl": [2, 383], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 368, 383], "trajectori": [2, 383], "checkpoint": [2, 364], "episod": [2, 4], "format": 2, "ted": [2, 371], "The": [2, 367], "rational": 2, "behind": 2, "structur": [2, 383], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 362, 383, 385], "special": [2, 372, 385], "case": 2, "footnot": 2, "multi": [2, 3, 362, 363, 378, 379, 380], "agent": [2, 3, 4, 362, 363, 379, 380], "present": 2, "polici": [2, 4, 367, 369, 370, 372, 376, 378, 379, 380, 381], "rnn": 2, "transform": [2, 3, 182, 367, 369, 371, 379, 380, 381, 383, 385, 386], "step": [2, 367, 369, 371, 374, 379, 380, 383, 386], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 52], "reinforc": [2, 363, 369, 379, 380], "learn": [2, 4, 369, 379, 380], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 362, 363, 364, 379], "env": [3, 381, 385, 386], "vector": [3, 385], "environ": [3, 4, 6, 7, 367, 368, 369, 370, 371, 376, 378, 379, 380, 381, 385, 386], "auto": 3, "reset": [3, 381, 386], "dynam": [3, 4, 383], "spec": [3, 381, 386], "clone": [3, 7], "mask": 3, "action": [3, 4, 370, 381], "record": [3, 340, 364, 367, 375], "video": [3, 375], "domain": [3, 362], "specif": [3, 362, 378], "librari": [3, 385], "thing": [4, 367, 381], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 371, 373, 385], "gener": [4, 362], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 367, 376, 381], "algorithm": [4, 362], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 367, 368, 373, 376], "return": [4, 363], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 385], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 378], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 367, 368, 369], "standard": 4, "explor": [4, 362, 367, 368, 372], "valu": [4, 362, 363, 367, 369, 370, 372], "loss": [4, 367, 368, 369, 370, 376, 379, 380], "earli": 4, "train": [4, 8, 363, 367, 369, 370, 373, 376, 379, 380, 381], "roughli": 4, "uniformli": 4, "random": [4, 379, 380], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 368], "increas": 4, "an": [4, 369, 370, 371, 381], "can": 4, "low": 4, "forward": [4, 367], "model": [4, 362, 367, 368, 370, 373, 382, 385], "also": 4, "us": [4, 6, 9, 370, 382, 383, 385], "offlin": 4, "observ": [4, 367], "space": 4, "effect": [4, 381], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 386], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 367], "render": [7, 376, 379, 380, 386], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 367], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 381], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "adaptiveklcontrol": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "constantklcontrol": 27, "discretetensorspec": 28, "flat2t": 29, "h5combin": 30, "h5split": 31, "lazystackedcompositespec": 32, "lazystackedtensorspec": 33, "multidiscretetensorspec": 34, "multionehotdiscretetensorspec": 35, "multistep": 36, "nested2t": 37, "nontensorspec": 38, "onehotdiscretetensorspec": 39, "pairwisedataset": 40, "prioritizedreplaybuff": 41, "promptdata": 42, "prompttensordicttoken": 43, "replaybuff": 44, "rewarddata": 45, "rolloutfrommodel": 46, "ted2flat": 47, "ted2nest": 48, "tensordictprioritizedreplaybuff": 49, "tensordictreplaybuff": 50, "tensordicttoken": 51, "tokenizeddatasetload": 53, "unboundedcontinuoustensorspec": 54, "unboundeddiscretetensorspec": 55, "check_no_exclusive_kei": 56, "consolidate_spec": 57, "contains_lazy_spec": 58, "create_infinite_iter": 59, "ataridqnexperiencereplai": 60, "basedatasetexperiencereplai": 61, "d4rlexperiencereplai": 62, "gendgrlexperiencereplai": 63, "minariexperiencereplai": 64, "openmlexperiencereplai": 65, "openxexperiencereplai": 66, "robosetexperiencereplai": 67, "vd4rlexperiencereplai": 68, "get_dataload": 69, "flatstoragecheckpoint": 70, "h5storagecheckpoint": 71, "immutabledatasetwrit": 72, "lazymemmapstorag": 73, "lazytensorstorag": 74, "liststorag": 75, "liststoragecheckpoint": 76, "nestedstoragecheckpoint": 77, "prioritizedsampl": 78, "prioritizedslicesampl": 79, "randomsampl": 80, "replaybufferensembl": 81, "roundrobinwrit": 82, "sampler": 83, "samplerensembl": 84, "samplerwithoutreplac": 85, "slicesampl": 86, "slicesamplerwithoutreplac": 87, "storagecheckpointerbas": 89, "storageensembl": 90, "storageensemblecheckpoint": 91, "tensordictmaxvaluewrit": 92, "tensordictroundrobinwrit": 93, "tensorstorag": 94, "tensorstoragecheckpoint": 95, "writer": 96, "writerensembl": 97, "braxenv": 98, "braxwrapp": 99, "dmcontrolenv": 100, "dmcontrolwrapp": 101, "envbas": [102, 381], "envcreat": 103, "envmetadata": 104, "gymenv": 105, "gymlikeenv": 106, "gymwrapp": 107, "habitatenv": 108, "isaacgymenv": 109, "isaacgymwrapp": 110, "jumanjienv": 111, "jumanjiwrapp": 112, "mogymenv": 113, "mogymwrapp": 114, "marlgroupmaptyp": 115, "meltingpotenv": 116, "meltingpotwrapp": 117, "modelbasedenvbas": 118, "multithreadedenv": 119, "multithreadedenvwrapp": 120, "openmlenv": 121, "parallelenv": 122, "pettingzooenv": 123, "pettingzoowrapp": 124, "robohiveenv": 125, "smacv2env": 126, "smacv2wrapp": 127, "serialenv": 128, "vmasenv": 129, "vmaswrapp": 130, "check_marl_group": 131, "gym_backend": 132, "dreamerdecod": 133, "dreamerenv": 134, "set_gym_backend": 135, "actiondiscret": 136, "actionmask": 137, "autoresetenv": 138, "autoresettransform": 139, "batchsizetransform": 140, "binarizereward": 141, "burnintransform": 142, "catfram": [143, 383], "cattensor": 144, "centercrop": 145, "cliptransform": 146, "dtypecasttransform": 148, "devicecasttransform": 149, "discreteactionproject": 150, "doubletofloat": 151, "endoflifetransform": 152, "excludetransform": 153, "finitetensordictcheck": 154, "flattenobserv": 155, "frameskiptransform": 156, "grayscal": 157, "inittrack": 158, "klrewardtransform": 159, "noopresetenv": 160, "observationnorm": 161, "observationtransform": 162, "permutetransform": 163, "pinmemorytransform": 164, "r3mtransform": 165, "randomcroptensordict": 166, "removeemptyspec": 167, "renametransform": 168, "resiz": 169, "reward2gotransform": 170, "rewardclip": 171, "rewardsc": 172, "rewardsum": 173, "selecttransform": 174, "signtransform": 175, "squeezetransform": 176, "stepcount": 177, "targetreturn": 178, "tensordictprim": 179, "timemaxpool": 180, "totensorimag": 181, "transformedenv": 183, "unsqueezetransform": 184, "vc1transform": 185, "viprewardtransform": 186, "viptransform": 187, "vecgymenvtransform": 188, "vecnorm": [189, 386], "gsdenois": 190, "multisteptransform": 191, "randompolici": 192, "check_env_spec": 193, "exploration_mod": 194, "exploration_typ": 195, "get_available_librari": 196, "make_composite_from_td": 197, "set_exploration_mod": 198, "set_exploration_typ": 199, "step_mdp": 200, "terminated_or_trunc": 201, "cemplann": 202, "conv3dnet": 203, "convnet": 204, "dtactor": 205, "ddpgcnnactor": 206, "ddpgcnnqnet": 207, "ddpgmlpactor": 208, "ddpgmlpqnet": 209, "decisiontransform": 210, "delta": 211, "distributionaldqnnet": 212, "distributionalqvaluehook": 213, "dreameractor": 214, "duelingcnndqnet": 215, "gru": 216, "grucel": 217, "grumodul": 218, "independentnorm": 219, "lstm": [220, 370], "lstmcell": 221, "lstmmodul": 222, "mlp": [223, 370], "mpcplannerbas": 224, "mppiplann": 225, "maskedcategor": 226, "maskedonehotcategor": 227, "multiagentconvnet": 228, "multiagentmlp": 229, "noisylazylinear": 230, "noisylinear": 231, "normalparamwrapp": 232, "obsdecod": 233, "obsencod": 234, "onehotcategor": 235, "onlinedtactor": 236, "qmixer": [237, 363], "qvaluehook": 238, "rssmposterior": 239, "rssmprior": 240, "squeeze2dlay": 241, "squeezelay": 242, "tanhdelta": 243, "tanhnorm": 244, "truncatednorm": 245, "vdnmixer": 246, "vmapmodul": 247, "reset_nois": 248, "actor": [249, 362, 367, 372], "actorcriticoper": 250, "actorcriticwrapp": 251, "actorvalueoper": 252, "additivegaussianwrapp": 253, "decisiontransformerinferencewrapp": 254, "distributionalqvalueactor": 255, "distributionalqvaluemodul": 256, "egreedymodul": 257, "egreedywrapp": 258, "lmheadactorvalueoper": 259, "multistepactorwrapp": 260, "ornsteinuhlenbeckprocesswrapp": 261, "probabilisticactor": 262, "qvalueactor": 263, "qvaluemodul": 264, "safemodul": [265, 362], "safeprobabilisticmodul": 266, "safeprobabilistictensordictsequenti": 267, "safesequenti": 268, "tanhmodul": 269, "valueoper": 270, "worldmodelwrapp": 271, "biased_softplu": 272, "get_primers_from_modul": 273, "inv_softplu": 274, "map": [275, 379], "a2closs": 276, "cqlloss": 277, "clipppoloss": 278, "ddpgloss": 279, "dqnloss": 280, "dtloss": 281, "discretecqlloss": 282, "discreteiqlloss": 283, "discretesacloss": 284, "distributionaldqnloss": 285, "dreameractorloss": 286, "dreamermodelloss": 287, "dreamervalueloss": 288, "hardupd": 289, "iqlloss": 290, "klpenppoloss": 291, "lossmodul": [292, 367, 373], "onlinedtloss": 293, "ppoloss": 294, "redqloss": 295, "reinforceloss": 296, "sacloss": 297, "softupd": 298, "td3loss": 299, "valueestim": 300, "default_value_kwarg": 301, "distance_loss": 302, "hold_out_net": 303, "hold_out_param": 304, "qmixerloss": 305, "next_state_valu": 306, "gae": 307, "td0estim": 308, "td1estim": 309, "tdlambdaestim": 310, "valueestimatorbas": 311, "generalized_advantage_estim": 312, "reward2go": 313, "td0_advantage_estim": 314, "td0_return_estim": 315, "td1_advantage_estim": 316, "td1_return_estim": 317, "td_lambda_advantage_estim": 318, "td_lambda_return_estim": 319, "vec_generalized_advantage_estim": 320, "vec_td1_advantage_estim": 321, "vec_td1_return_estim": 322, "vec_td_lambda_advantage_estim": 323, "vec_td_lambda_return_estim": 324, "pixelrendertransform": 325, "tensordictrecord": 326, "videorecord": 327, "logger": [328, 364, 375, 376], "csvlogger": 329, "generate_exp_nam": 330, "get_logg": 331, "mlflowlogg": 332, "tensorboardlogg": 333, "wandblogg": 334, "batchsubsampl": 335, "clearcudacach": 336, "countframeslog": 337, "logreward": 338, "optimizerhook": 339, "replaybuffertrain": 341, "rewardnorm": 342, "selectkei": 343, "trainer": [344, 364, 368], "trainerhookbas": 345, "updateweight": 346, "correct_for_frame_skip": 347, "get_stats_random_rollout": 348, "make_collector_offpolici": 349, "make_collector_onpolici": 350, "make_dqn_loss": 351, "make_replay_buff": 352, "make_target_updat": 353, "make_train": 354, "parallel_env_constructor": 355, "sync_async_collector": 356, "sync_sync_collector": 357, "transformed_env_constructor": 358, "readm": [359, 377], "tuto": [359, 377], "api": 360, "contribut": [361, 385], "content": 361, "modul": [362, 367, 370, 372, 376, 385], "tensordictmodul": [362, 372, 385], "wrapper": [362, 372], "probabilist": [362, 372], "q": [362, 368, 370, 372], "oper": 362, "join": 362, "hook": [362, 364, 368], "regular": 362, "planner": 362, "object": [363, 367, 373, 385], "dqn": [363, 368, 370], "ddpg": [363, 367, 379], "sac": 363, "redq": 363, "iql": 363, "cql": 363, "dt": 363, "td3": 363, "ppo": [363, 369, 380], "a2c": 363, "dreamer": 363, "builder": 364, "_util": 365, "comput": [366, 368, 381, 384], "time": [366, 367, 384], "code": [367, 381], "overview": [367, 370], "setup": [367, 370], "__init__": 367, "method": 367, "estim": 367, "put": 367, "togeth": [367, 381], "call": 367, "parallel": [367, 378, 386], "execut": [367, 378, 381], "stat": 367, "build": [367, 368, 376, 383], "evalu": 367, "construct": 367, "target": [367, 368, 373], "network": [367, 368, 369, 370, 372, 379, 380], "updat": 367, "experi": [367, 381], "result": [367, 369, 379, 380], "conclus": [367, 368, 369, 370, 379, 380, 381, 383], "next": [367, 369, 371, 374, 379, 380, 383], "A": [368, 383], "exampl": [368, 383], "deep": 368, "collect": [368, 369, 374], "paramet": [368, 369, 373], "hyperparamet": [368, 369, 379, 380], "regist": 368, "possibl": 368, "improv": 368, "defin": [369, 379, 380], "loop": [369, 370, 376, 379, 380, 381], "recurr": 370, "convolut": 370, "select": 370, "further": [370, 373], "read": 370, "creat": 371, "run": [371, 386], "rollout": [371, 378, 379, 380, 381, 386], "s": [372, 373], "output": 373, "consider": 373, "log": 375, "own": 376, "first": 376, "design": 376, "divers": 378, "competit": 379, "group": 379, "critic": [379, 380], "pendulum": 381, "write": 381, "_step": 381, "simul": 381, "_reset": 381, "metadata": 381, "_spec": 381, "shape": 381, "seed": [381, 386], "wrap": 381, "class": [381, 385], "test": 381, "our": 381, "custom": [381, 383], "simpl": 381, "pretrain": 382, "vanilla": 383, "integr": 383, "tensorclass": 383, "other": 383, "tensor": 383, "pytre": 383, "iter": 383, "over": 383, "fix": 383, "priorit": 383, "save": 383, "raw": 383, "imag": 383, "more": 383, "complex": 383, "introduct": 385, "config": 385, "sequenc": 385, "program": 385, "ensembl": 385, "meta": 385, "state": 385, "frame_skip": 386, "deepmind": 386, "control": 386, "devic": 386, "close": 386, "access": 386, "attribut": 386, "kwarg": 386}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})