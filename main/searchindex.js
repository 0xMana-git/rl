Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 92, 94, 95, 97, 99, 101, 103, 105, 106, 107, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 131, 132, 134, 137, 138, 139, 140, 141, 144, 145, 148, 153, 154, 156, 157, 159, 160, 162, 166, 168, 169, 172, 178, 179, 183, 184, 185, 186, 188, 196, 197, 198, 199, 200, 201, 203, 206, 207, 209, 211, 221, 222, 225, 226, 228, 229, 230, 231, 238, 240, 242, 244, 246, 247, 248, 252, 253, 255, 262, 263, 268, 269, 271, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 294, 298, 299, 300, 301, 302, 304, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 333, 334, 335, 336, 337, 351, 353, 356, 360, 365, 366, 370, 371, 374, 381, 382, 383, 384, 387, 388, 389, 393, 394, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 411, 412], "open": [0, 5, 7, 12, 48, 50, 53, 79, 86, 394, 405, 406, 411], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "reinforc": [0, 3, 9, 76, 129, 130, 160, 228, 229, 230, 231, 235, 262, 263, 282, 299, 300, 302, 305, 306, 307, 309, 314, 315, 321, 322, 323, 324, 386, 392, 394, 397, 398, 403, 407, 410, 411], "learn": [0, 3, 7, 8, 9, 18, 43, 76, 77, 78, 80, 81, 115, 129, 130, 134, 137, 144, 160, 228, 229, 230, 231, 235, 249, 256, 262, 263, 282, 299, 300, 302, 305, 306, 307, 309, 313, 314, 315, 320, 321, 322, 323, 324, 386, 388, 389, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 73, 131, 196, 256, 276, 285, 293, 299, 301, 316, 317, 319, 321, 361, 385, 387, 388, 389, 390, 393, 394, 395, 400, 403, 405, 406, 408, 409, 412], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 51, 61, 113, 114, 123, 132, 214, 386, 387, 388, 391, 393, 394, 395, 397, 398, 400, 405, 406, 407, 412], "pytorch": [0, 1, 2, 3, 23, 77, 146, 147, 199, 211, 240, 244, 255, 256, 370, 385, 387, 388, 390, 393, 395, 396, 399, 403, 405, 406, 407, 408, 409, 411, 412], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 43, 61, 76, 115, 119, 123, 128, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 152, 207, 209, 244, 360, 387, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 98, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 163, 164, 166, 168, 169, 170, 178, 179, 183, 184, 188, 191, 195, 196, 197, 200, 201, 203, 205, 207, 209, 211, 219, 221, 223, 224, 225, 226, 228, 238, 239, 240, 242, 243, 244, 246, 248, 249, 252, 253, 254, 256, 257, 272, 274, 276, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 351, 353, 360, 366, 382, 383, 384, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "directli": [0, 3, 4, 8, 23, 73, 94, 111, 112, 115, 118, 119, 131, 137, 138, 144, 145, 179, 188, 206, 317, 324, 384, 388, 394, 395, 397, 405, 406, 407, 409], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 156, 157, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 176, 177, 179, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 215, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 331, 332, 333, 334, 335, 336, 339, 351, 352, 353, 361, 367, 370, 373, 374, 378, 380, 381, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412], "pypi": [0, 2, 411], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 99, 115, 119, 122, 125, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 164, 183, 197, 199, 200, 201, 203, 205, 207, 208, 209, 224, 225, 226, 240, 242, 243, 244, 246, 247, 253, 254, 255, 264, 272, 273, 277, 279, 285, 288, 289, 302, 313, 317, 324, 353, 360, 367, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 409, 412], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 105, 115, 118, 119, 120, 122, 123, 125, 129, 130, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 199, 203, 208, 209, 220, 221, 222, 224, 235, 244, 247, 255, 257, 276, 281, 282, 288, 293, 299, 309, 317, 319, 333, 338, 346, 360, 365, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 412], "about": [0, 3, 5, 7, 9, 18, 19, 20, 41, 61, 77, 80, 81, 115, 137, 144, 389, 393, 394, 395, 397, 398, 399, 400, 401, 402, 405, 406, 407, 409, 411, 412], "instruct": [0, 6, 7, 10, 22, 75, 168, 170, 393, 394, 395, 396, 405, 406, 409], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 52, 59, 60, 94, 137, 144, 277, 278, 279, 388, 393, 397, 399, 400, 402, 404, 406], "section": [0, 2, 3, 4, 24, 240, 244, 394, 397, 402, 405, 406], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 43, 52, 64, 82, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 225, 226, 240, 243, 244, 247, 253, 272, 285, 288, 367, 393, 394, 395, 396, 397, 405, 407], "pip": [0, 10, 78, 397, 398, 399, 400, 401, 402, 406, 411, 412], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 39, 41, 43, 48, 49, 50, 52, 53, 59, 60, 63, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 88, 92, 93, 94, 97, 99, 100, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 153, 157, 159, 160, 161, 162, 163, 165, 166, 169, 173, 178, 179, 181, 183, 184, 187, 188, 191, 192, 196, 197, 198, 201, 203, 205, 206, 207, 209, 219, 221, 225, 226, 232, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 263, 274, 276, 282, 284, 285, 286, 287, 292, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 357, 361, 367, 374, 380, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 133, 152, 240, 241, 242, 244, 245, 246, 250, 251, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 39, 40, 41, 42, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 99, 100, 105, 107, 115, 118, 119, 120, 125, 137, 138, 144, 145, 156, 157, 160, 161, 173, 179, 183, 184, 199, 201, 203, 226, 240, 242, 244, 246, 247, 253, 255, 259, 276, 280, 281, 282, 285, 286, 288, 289, 301, 311, 316, 317, 319, 352, 353, 369, 388, 392, 393, 394, 395, 396, 397, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "low": [0, 3, 27, 30, 62, 64, 92, 115, 119, 137, 138, 144, 145, 153, 163, 168, 215, 270, 271, 272, 280, 282, 285, 292, 393, 394, 395, 396, 405, 406, 407, 411, 412], "high": [0, 3, 9, 27, 30, 48, 50, 53, 59, 64, 92, 115, 119, 137, 138, 144, 145, 153, 163, 168, 178, 215, 270, 271, 272, 280, 282, 285, 292, 333, 338, 346, 393, 394, 395, 396, 405, 406, 407, 409, 411, 412], "level": [0, 2, 3, 4, 22, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 118, 120, 160, 195, 316, 393, 394, 400, 411], "abstract": [0, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 45, 46, 55, 56, 62, 64, 65, 66, 67, 68, 73, 74, 78, 109, 115, 180, 248, 337, 362, 371, 390, 395, 407, 411], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 94, 97, 98, 100, 101, 103, 105, 107, 115, 116, 118, 119, 120, 128, 129, 130, 131, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 155, 156, 157, 159, 160, 163, 164, 166, 168, 169, 170, 172, 173, 177, 178, 181, 183, 188, 191, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 215, 218, 219, 223, 231, 233, 238, 240, 241, 242, 244, 245, 246, 248, 250, 251, 252, 253, 254, 256, 260, 263, 264, 267, 280, 281, 284, 285, 286, 288, 289, 290, 291, 292, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 351, 360, 367, 380, 384, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 63, 64, 65, 66, 67, 68, 159, 168, 274, 317, 388, 411], "effici": [0, 1, 2, 4, 8, 240, 256, 302, 388, 393, 394, 395, 396, 399, 400, 402, 404, 405, 406, 408, 409, 411], "modular": [0, 73, 291, 409, 411], "document": [0, 2, 5, 7, 11, 18, 19, 21, 43, 79, 115, 119, 135, 136, 137, 138, 144, 145, 201, 209, 385, 394, 396, 397, 400, 403, 411], "properli": [0, 1, 64, 115, 119, 137, 138, 144, 145, 218, 242, 246, 395, 401, 405, 406, 407, 411], "test": [0, 3, 5, 111, 112, 124, 125, 129, 130, 203, 211, 242, 246, 366, 380, 395, 396, 411], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 91, 92, 94, 97, 99, 100, 101, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 156, 157, 159, 160, 164, 166, 169, 170, 171, 179, 181, 183, 188, 190, 191, 192, 195, 196, 197, 200, 201, 203, 205, 206, 207, 209, 211, 218, 219, 220, 222, 223, 228, 229, 230, 231, 232, 235, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 256, 257, 262, 263, 265, 266, 267, 276, 277, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 339, 351, 353, 355, 358, 359, 360, 361, 365, 380, 382, 383, 386, 388, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412], "code": [0, 3, 5, 7, 8, 14, 15, 79, 115, 119, 137, 138, 144, 145, 183, 201, 203, 222, 240, 241, 242, 244, 245, 246, 285, 291, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412], "aim": [0, 2, 3, 7, 55, 56, 183, 203, 205, 247, 373, 387, 388, 389, 393, 394, 411], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 78, 81, 82, 86, 87, 101, 103, 107, 108, 110, 111, 112, 118, 120, 124, 132, 134, 137, 139, 141, 157, 160, 170, 179, 197, 198, 200, 214, 235, 271, 274, 281, 282, 285, 288, 291, 309, 317, 333, 334, 335, 336, 358, 386, 388, 390, 395, 396, 397, 398, 406, 407, 409, 411], "research": [0, 7, 9, 129, 130, 222, 411], "most": [0, 1, 2, 3, 7, 8, 14, 15, 43, 99, 100, 115, 119, 137, 138, 144, 145, 168, 206, 211, 393, 395, 397, 398, 399, 400, 401, 402, 407, 411, 412], "written": [0, 1, 2, 3, 12, 34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 92, 94, 99, 100, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 153, 160, 170, 177, 191, 195, 198, 206, 209, 218, 219, 224, 262, 263, 276, 285, 288, 289, 293, 299, 301, 316, 319, 321, 332, 351, 352, 353, 388, 389, 390, 393, 396, 398, 404, 407, 411], "highli": [0, 2, 397, 411, 412], "wai": [0, 1, 2, 3, 4, 73, 77, 94, 105, 123, 183, 186, 205, 206, 242, 244, 246, 319, 333, 334, 335, 336, 388, 393, 394, 395, 397, 399, 400, 404, 405, 406, 407, 408, 409, 411, 412], "easili": [0, 1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 389, 393, 394, 395, 397, 398, 399, 402, 405, 406, 411, 412], "swap": [0, 1, 3, 118, 206, 395, 408, 411], "compon": [0, 1, 2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 235, 265, 281, 282, 287, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 365, 370, 393, 394, 395, 396, 398, 399, 402, 404, 405, 406, 407, 408, 411], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 51, 52, 54, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 103, 108, 115, 116, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 224, 227, 228, 232, 235, 236, 242, 246, 261, 264, 265, 271, 273, 280, 283, 284, 292, 295, 296, 298, 305, 318, 351, 353, 367, 384, 386, 392, 394, 396, 398, 400, 401, 402, 403, 408, 410], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 49, 51, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 110, 115, 116, 119, 123, 128, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 166, 169, 197, 201, 207, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 273, 274, 280, 282, 284, 287, 292, 295, 316, 353, 393, 394, 396, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "write": [0, 2, 3, 8, 23, 43, 48, 49, 50, 51, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 103, 110, 115, 119, 163, 181, 182, 191, 193, 195, 199, 219, 276, 288, 289, 291, 293, 302, 303, 304, 306, 307, 308, 315, 320, 322, 324, 325, 332, 337, 353, 388, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 98, 115, 119, 132, 137, 138, 142, 143, 144, 145, 157, 191, 200, 207, 209, 218, 219, 240, 242, 246, 262, 263, 288, 289, 294, 299, 300, 301, 304, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 360, 389, 393, 395, 396, 397, 399, 405, 406, 407, 411, 412], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 161, 164, 166, 167, 169, 179, 183, 188, 197, 200, 201, 203, 205, 209, 210, 250, 251, 274, 288, 299, 300, 302, 303, 315, 319, 320, 322, 324, 325, 339, 393, 395, 405, 406, 407, 409, 411, 412], "littl": [0, 1, 3, 61, 115, 119, 137, 138, 144, 145, 201, 299, 301, 316, 319, 321, 395, 396, 400, 409, 411, 412], "effort": [0, 3, 407, 409, 411], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 107, 108, 110, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 137, 138, 139, 140, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 179, 183, 184, 185, 186, 188, 191, 192, 193, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 331, 333, 334, 335, 336, 337, 351, 352, 360, 361, 363, 366, 367, 370, 372, 373, 374, 380, 384, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "repo": [0, 6, 75, 160, 198, 203, 387, 406, 411], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 99, 100, 113, 114, 118, 120, 121, 141, 221, 239, 263, 304, 307, 315, 331, 399, 411], "align": [0, 240, 244, 411], "exist": [0, 2, 3, 4, 12, 18, 21, 43, 48, 50, 53, 63, 86, 115, 119, 137, 138, 144, 145, 161, 167, 201, 209, 302, 322, 374, 384, 405, 406, 411, 412], "ecosystem": [0, 400, 411], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 79, 86, 87, 94, 97, 99, 105, 107, 115, 116, 119, 123, 129, 130, 137, 138, 144, 145, 146, 147, 157, 160, 195, 196, 197, 198, 201, 209, 220, 221, 239, 240, 242, 244, 246, 252, 254, 263, 271, 282, 284, 289, 299, 302, 316, 317, 319, 321, 353, 393, 394, 395, 396, 397, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "dataset": [0, 36, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 92, 94, 97, 99, 100, 134, 207, 353, 386, 393, 394, 397, 408, 409, 411, 412], "pillar": [0, 411], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 156, 157, 159, 160, 161, 166, 167, 168, 169, 174, 178, 179, 183, 184, 185, 188, 191, 195, 196, 197, 198, 200, 201, 203, 206, 207, 211, 221, 223, 224, 242, 246, 248, 249, 263, 284, 306, 310, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 363, 366, 373, 374, 375, 376, 380, 381, 382, 383, 384, 386, 387, 388, 392, 398, 399, 400, 401, 403, 408, 409, 410], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 48, 50, 53, 54, 63, 115, 119, 131, 137, 138, 144, 145, 166, 183, 197, 203, 205, 208, 209, 225, 226, 227, 232, 234, 242, 246, 247, 248, 249, 253, 254, 261, 264, 273, 277, 278, 279, 283, 288, 294, 296, 299, 300, 301, 302, 304, 305, 306, 307, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 331, 370, 375, 376, 377, 386, 387, 389, 390, 392, 395, 397, 400, 403, 405, 406, 407, 409, 410, 412], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 154, 157, 159, 160, 166, 167, 169, 171, 177, 179, 185, 188, 195, 201, 206, 209, 210, 211, 215, 219, 223, 235, 238, 239, 242, 246, 249, 252, 253, 262, 263, 265, 274, 276, 281, 284, 285, 286, 288, 291, 292, 293, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 351, 353, 360, 361, 367, 370, 372, 375, 380, 382, 383, 384, 386, 388, 389, 390, 392, 396, 397, 398, 399, 403, 407, 408, 409, 410, 412], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 43, 52, 54, 111, 112, 115, 119, 124, 125, 130, 137, 138, 139, 140, 144, 145, 148, 160, 183, 188, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 226, 232, 240, 242, 244, 246, 295, 296, 297, 298, 317, 380, 386, 391, 393, 395, 398, 399, 400, 406, 407, 409, 411, 412], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 43, 48, 50, 53, 56, 86, 87, 91, 92, 105, 107, 115, 116, 119, 137, 138, 144, 145, 146, 157, 159, 161, 164, 165, 173, 179, 183, 191, 197, 200, 201, 203, 205, 209, 211, 240, 242, 243, 244, 246, 249, 253, 257, 265, 271, 272, 280, 282, 284, 285, 287, 288, 289, 299, 301, 302, 303, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 332, 333, 334, 335, 336, 351, 361, 373, 383, 388, 394, 395, 398, 399, 401, 405, 406, 408, 409, 411, 412], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 105, 115, 116, 119, 137, 138, 144, 145, 146, 157, 159, 161, 164, 173, 179, 183, 191, 197, 200, 201, 203, 205, 209, 211, 240, 242, 243, 244, 245, 246, 249, 253, 271, 272, 280, 285, 288, 289, 302, 322, 332, 342, 343, 344, 345, 347, 348, 349, 350, 351, 383, 388, 394, 395, 398, 401, 405, 406, 407, 408, 409, 411, 412], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 43, 54, 57, 73, 79, 157, 160, 188, 195, 209, 210, 242, 246, 262, 263, 367, 370, 372, 375, 376, 380, 382, 383, 386, 389, 390, 409, 412], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 91, 92, 94, 95, 97, 99, 100, 101, 106, 109, 110, 115, 119, 131, 137, 138, 144, 145, 153, 164, 166, 169, 183, 197, 200, 201, 203, 205, 206, 207, 209, 218, 219, 223, 225, 226, 240, 241, 244, 245, 247, 249, 252, 253, 276, 281, 282, 285, 287, 288, 293, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 339, 357, 361, 373, 380, 381, 382, 383, 384, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412], "etc": [0, 2, 3, 7, 8, 12, 43, 62, 79, 115, 119, 137, 138, 144, 145, 177, 201, 209, 247, 253, 271, 394, 395, 400, 409, 411, 412], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 101, 115, 119, 137, 138, 139, 140, 144, 145, 153, 156, 160, 166, 169, 170, 177, 178, 179, 195, 200, 201, 207, 209, 211, 219, 225, 226, 247, 252, 253, 254, 274, 284, 290, 291, 299, 301, 316, 319, 321, 324, 328, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 361, 370, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "few": [0, 2, 8, 119, 353, 361, 395, 396, 398, 405, 406, 409, 411, 412], "depend": [0, 1, 2, 3, 4, 7, 8, 27, 48, 50, 64, 118, 120, 121, 141, 146, 147, 166, 169, 293, 319, 388, 393, 395, 396, 405, 406, 407, 411, 412], "possibl": [0, 2, 3, 4, 23, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 55, 76, 79, 81, 92, 99, 105, 115, 119, 137, 138, 144, 145, 153, 164, 183, 197, 200, 201, 203, 205, 209, 225, 226, 240, 241, 244, 245, 288, 351, 366, 370, 388, 393, 395, 396, 398, 400, 401, 405, 406, 407, 409, 411, 412], "standard": [0, 3, 179, 190, 207, 220, 221, 222, 223, 236, 249, 255, 256, 261, 280, 324, 325, 333, 334, 335, 336, 393, 394, 397, 398, 406, 409, 411], "numpi": [0, 3, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 120, 137, 138, 144, 145, 199, 370, 407, 409, 411, 412], "common": [0, 2, 3, 4, 62, 119, 124, 154, 277, 278, 279, 283, 299, 300, 301, 302, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 380, 387, 388, 390, 393, 395, 398, 401, 404, 405, 406, 407, 408, 411, 412], "openai": [0, 7, 24, 118, 120, 141, 395, 407, 411, 412], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 115, 116, 118, 119, 120, 121, 123, 129, 130, 132, 133, 137, 138, 141, 144, 145, 146, 147, 149, 152, 156, 160, 163, 170, 176, 177, 179, 181, 186, 188, 191, 197, 200, 206, 207, 209, 380, 387, 393, 394, 395, 396, 397, 401, 402, 407, 408, 409, 411], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 92, 94, 99, 100, 107, 113, 114, 115, 118, 119, 120, 121, 123, 125, 132, 133, 137, 138, 139, 140, 141, 144, 145, 153, 156, 160, 161, 163, 164, 166, 168, 169, 173, 179, 183, 184, 188, 195, 196, 197, 198, 200, 201, 203, 205, 207, 209, 244, 246, 252, 253, 276, 280, 281, 285, 286, 288, 289, 290, 291, 299, 301, 302, 303, 307, 308, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 333, 334, 335, 336, 337, 353, 360, 374, 389, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 411, 412], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 103, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 270, 271, 272, 274, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 358, 360, 361, 363, 364, 365, 366, 367, 368, 370, 374, 375, 376, 377, 379, 380, 382, 383, 384, 388, 396, 397, 400, 405, 406, 407, 409, 411], "On": [0, 3, 7, 18, 19, 20, 21, 30, 76, 241, 245, 388, 394, 405, 406], "end": [0, 2, 3, 14, 15, 17, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 98, 99, 100, 115, 119, 137, 138, 144, 145, 170, 181, 195, 196, 201, 209, 225, 226, 240, 241, 244, 245, 248, 284, 302, 322, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "come": [0, 1, 2, 3, 8, 43, 105, 115, 119, 128, 137, 138, 144, 145, 166, 169, 276, 277, 278, 279, 285, 293, 299, 301, 316, 319, 321, 353, 393, 394, 395, 396, 399, 400, 401, 402, 405, 406, 409, 411, 412], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 30, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 98, 101, 107, 115, 117, 119, 120, 129, 130, 131, 137, 138, 139, 140, 144, 145, 146, 147, 152, 154, 156, 157, 160, 161, 164, 166, 169, 176, 177, 183, 188, 195, 196, 197, 198, 200, 201, 203, 205, 207, 209, 211, 216, 217, 219, 221, 240, 242, 244, 246, 248, 252, 253, 271, 280, 288, 301, 302, 308, 313, 317, 319, 322, 337, 361, 366, 367, 376, 384, 387, 388, 389, 391, 393, 394, 395, 396, 398, 399, 400, 404, 405, 406, 407, 408, 409, 411, 412], "re": [0, 2, 3, 8, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 115, 119, 137, 138, 144, 145, 209, 246, 250, 251, 254, 285, 289, 360, 390, 393, 395, 396, 397, 399, 404, 405, 407, 411, 412], "usabl": [0, 390, 396, 411], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 115, 116, 119, 120, 137, 138, 144, 145, 152, 156, 157, 166, 169, 201, 207, 209, 211, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 266, 267, 269, 272, 274, 277, 278, 279, 280, 282, 284, 285, 287, 288, 289, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 380, 386, 388, 393, 396, 397, 398, 401, 404, 407, 409, 412], "cost": [0, 2, 29, 79, 299, 301, 316, 319, 321, 389, 393, 394, 405, 406, 407, 409], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 92, 94, 95, 97, 99, 100, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 218, 219, 223, 227, 228, 229, 230, 231, 233, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 257, 260, 261, 264, 266, 267, 270, 271, 272, 273, 276, 277, 278, 279, 280, 284, 285, 287, 288, 289, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 357, 370, 373, 375, 380, 381, 382, 383, 384, 386, 388, 390, 393, 394, 395, 396, 398, 399, 401, 404, 405, 406, 407, 408, 409, 411, 412], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 49, 50, 53, 61, 63, 73, 76, 80, 81, 91, 92, 99, 115, 116, 119, 123, 128, 132, 137, 138, 139, 140, 144, 145, 159, 166, 169, 197, 199, 207, 209, 242, 246, 252, 253, 262, 263, 282, 287, 386, 390, 393, 394, 396, 397, 405, 406, 407, 408, 409, 411, 412], "good": [0, 1, 4, 9, 137, 393, 395, 396, 398, 406, 411, 412], "runtim": [0, 2, 3, 23, 43, 115, 119, 137, 138, 144, 145, 209, 407], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 148, 166, 169, 178, 201, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 301, 302, 311, 319, 322, 366, 370, 389, 393, 394, 395, 396, 397, 400, 402, 404, 405, 406, 407, 412], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 99, 100, 103, 110, 111, 112, 115, 118, 119, 120, 124, 125, 128, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 195, 197, 207, 209, 224, 242, 246, 262, 263, 277, 278, 279, 302, 308, 313, 317, 324, 353, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412], "read": [0, 2, 3, 7, 23, 30, 31, 34, 37, 49, 51, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 94, 101, 103, 107, 115, 118, 119, 120, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 181, 182, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 200, 203, 204, 206, 207, 209, 219, 224, 260, 276, 277, 278, 279, 281, 284, 285, 288, 289, 291, 293, 294, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 333, 334, 335, 336, 337, 353, 366, 370, 388, 393, 394, 395, 397, 398, 404, 405, 406, 407, 408, 412], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 390, 393, 397, 400, 404, 408, 412], "beyond": [0, 115, 119, 137, 138, 144, 145], "api": [0, 2, 3, 5, 23, 62, 139, 140, 141, 183, 205, 207, 388, 389, 390, 397, 398, 399, 400, 401, 405, 406, 407, 409, 411, 412], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 69, 71, 83, 84, 90, 99, 115, 116, 118, 119, 120, 131, 137, 138, 144, 145, 148, 160, 161, 172, 177, 184, 197, 199, 201, 209, 211, 242, 246, 276, 281, 282, 285, 286, 287, 288, 289, 302, 313, 324, 353, 385, 388, 389, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412], "paper": [0, 76, 79, 111, 112, 113, 114, 121, 124, 125, 129, 130, 132, 133, 141, 146, 147, 183, 203, 205, 240, 264, 273, 306, 314, 324, 393, 395, 405, 406], "releas": [0, 4, 7, 10, 43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322, 411], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 372, 380, 390, 393, 411], "so": [0, 2, 3, 4, 6, 7, 10, 11, 43, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 144, 145, 197, 207, 209, 290, 291, 393, 395, 396, 399, 402, 405, 406, 407, 412], "make": [0, 2, 3, 4, 7, 11, 43, 48, 49, 50, 52, 53, 54, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 97, 101, 103, 110, 115, 119, 120, 123, 125, 127, 133, 137, 138, 144, 145, 153, 171, 179, 183, 184, 188, 195, 203, 209, 211, 222, 224, 240, 241, 242, 244, 245, 246, 252, 253, 255, 281, 289, 299, 301, 316, 319, 321, 333, 334, 335, 336, 351, 367, 376, 384, 388, 389, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "sure": [0, 3, 4, 7, 78, 101, 119, 123, 188, 281, 384, 388, 393, 395, 396, 399, 405, 406, 407, 409, 411, 412], "alwai": [0, 2, 3, 14, 15, 20, 27, 30, 31, 37, 43, 56, 62, 64, 73, 82, 83, 84, 90, 115, 119, 137, 138, 144, 145, 177, 178, 207, 209, 309, 317, 388, 389, 394, 395, 396, 405, 406, 407, 409], "enjoi": [0, 2, 3, 79, 400], "latest": [0, 2, 3, 10, 132, 135, 136, 139, 140, 367, 395, 405, 406, 407, 411], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 62, 63, 77, 92, 99, 100, 115, 119, 128, 137, 138, 139, 140, 142, 143, 144, 145, 157, 160, 173, 177, 181, 197, 198, 202, 207, 211, 222, 225, 226, 236, 237, 240, 241, 242, 244, 245, 246, 247, 252, 255, 256, 289, 296, 299, 301, 316, 319, 321, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 384, 388, 393, 394, 395, 396, 398, 399, 400, 402, 407, 409, 412], "recent": [0, 7, 12, 206, 395, 412], "version": [0, 1, 2, 3, 6, 12, 26, 28, 31, 33, 37, 38, 40, 42, 43, 46, 47, 48, 50, 54, 65, 66, 67, 68, 76, 81, 99, 115, 118, 119, 120, 121, 132, 133, 137, 138, 139, 141, 144, 145, 146, 147, 206, 207, 209, 218, 222, 254, 279, 299, 301, 316, 317, 319, 321, 322, 333, 336, 387, 388, 389, 393, 395, 396, 397, 399, 402, 405, 406, 407, 408, 412], "although": [0, 1, 3, 8, 64, 115, 119, 137, 138, 144, 145, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 390, 393, 394, 400, 409], "core": [0, 3, 8, 390, 396, 398, 411], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 101, 103, 107, 115, 119, 137, 138, 144, 145, 207, 209, 400, 411], "backward": [0, 8, 43, 111, 112, 115, 119, 137, 138, 144, 145, 207, 209, 240, 241, 244, 245, 299, 300, 302, 303, 307, 308, 315, 319, 320, 321, 322, 324, 325, 393, 395, 396, 399, 400, 402, 405, 406, 407], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 43, 75, 94, 97, 99, 100, 101, 105, 115, 119, 121, 134, 137, 138, 144, 145, 160, 195, 203, 207, 209, 240, 241, 242, 244, 245, 246, 286, 299, 300, 302, 303, 304, 306, 307, 308, 315, 317, 319, 320, 321, 322, 324, 325, 328, 393, 396, 409, 411], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 47, 49, 50, 51, 52, 56, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 115, 116, 119, 124, 125, 128, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 156, 157, 159, 161, 164, 166, 167, 168, 169, 177, 179, 181, 183, 185, 188, 191, 195, 196, 197, 200, 201, 203, 205, 207, 209, 215, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 257, 261, 262, 263, 271, 274, 280, 281, 282, 284, 288, 292, 293, 299, 300, 301, 302, 303, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 361, 388, 389, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 107, 111, 112, 115, 118, 119, 121, 122, 124, 125, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 153, 154, 156, 158, 160, 161, 163, 164, 165, 167, 168, 177, 178, 179, 183, 188, 191, 193, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 209, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 255, 256, 257, 260, 262, 263, 266, 267, 270, 271, 272, 274, 276, 280, 282, 287, 288, 291, 292, 295, 296, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 339, 340, 341, 361, 368, 380, 384, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 49, 52, 59, 60, 75, 77, 78, 79, 80, 81, 119, 137, 144, 183, 200, 205, 302, 305, 317, 389, 390, 393, 394, 395, 396, 398, 400, 409, 412], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 218, 219, 220, 221, 223, 224, 234, 235, 238, 239, 242, 246, 248, 249, 252, 253, 262, 263, 264, 265, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 351, 352, 361, 365, 366, 367, 369, 370, 386, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 412], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 86, 177, 185, 277, 278, 279, 288, 307, 315, 324, 386, 393, 405, 407, 411], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 43, 48, 49, 50, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 94, 102, 108, 115, 119, 137, 138, 144, 145, 152, 183, 205, 209, 249, 355, 360, 370, 390, 394, 402, 405], "root": [0, 2, 3, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 137, 160, 198, 218, 242, 243, 246, 271, 272, 396, 397, 405, 406, 407, 408, 409, 412], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 49, 61, 73, 76, 77, 78, 79, 80, 81, 91, 92, 111, 112, 113, 114, 121, 123, 124, 125, 129, 130, 132, 133, 134, 135, 136, 139, 140, 141, 146, 147, 160, 183, 203, 222, 227, 228, 229, 230, 231, 232, 235, 236, 237, 244, 249, 250, 251, 256, 258, 259, 262, 263, 264, 266, 267, 273, 282, 299, 300, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 333, 338, 346, 385, 403, 408, 411], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 73, 76, 77, 79, 111, 112, 113, 114, 118, 121, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 157, 203, 222, 398, 402, 405, 406, 411], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 76, 79, 80, 111, 112, 113, 114, 121, 123, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 222, 408, 411], "setup": [0, 7, 111, 112, 123, 124, 125], "py": [0, 3, 24, 118, 120, 152, 264, 273, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412], "develop": [0, 3, 4, 7, 123, 393, 411], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 33, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 101, 105, 106, 107, 108, 109, 115, 117, 119, 121, 122, 137, 138, 141, 144, 145, 150, 153, 155, 156, 157, 159, 163, 168, 174, 177, 183, 184, 186, 193, 197, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 218, 220, 221, 223, 224, 225, 226, 235, 238, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 253, 254, 256, 257, 274, 280, 281, 282, 284, 285, 286, 289, 291, 292, 295, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 328, 331, 333, 334, 335, 336, 337, 339, 351, 354, 355, 358, 360, 363, 370, 372, 380, 389, 392, 393, 395, 398, 399, 400, 403, 407, 410, 412], "seri": [0, 2, 3, 7, 8, 85, 95, 105, 106, 109, 110, 144, 178, 200, 353, 388, 389, 393, 394, 395, 401, 402, 405, 406, 409, 412], "quick": [0, 73], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 54, 75, 81, 115, 119, 137, 138, 144, 145, 156, 159, 198, 200, 209, 222, 319, 387, 388, 389, 393, 394, 395, 396, 398, 402, 405, 406, 407, 409, 412], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 92, 94, 97, 98, 99, 100, 105, 107, 113, 114, 115, 116, 118, 119, 120, 121, 123, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 153, 156, 157, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 173, 177, 178, 179, 183, 184, 187, 188, 191, 192, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 218, 219, 221, 224, 225, 226, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 262, 263, 274, 276, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 347, 348, 349, 350, 351, 357, 360, 365, 367, 370, 372, 374, 380, 384, 387, 389, 393, 394, 395, 396, 397, 399, 401, 402, 404, 405, 406, 407, 409, 411, 412], "hurri": [0, 397], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 62, 64, 65, 66, 67, 68, 75, 98, 99, 100, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 153, 156, 159, 173, 179, 184, 196, 198, 199, 220, 221, 225, 226, 238, 240, 242, 244, 246, 247, 250, 251, 258, 268, 271, 274, 280, 284, 289, 302, 333, 335, 336, 394, 395, 396, 397, 398, 405, 406, 407, 408, 409, 411, 412], "item": [0, 2, 8, 14, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 98, 105, 153, 172, 250, 251, 303, 304, 306, 361, 389, 390, 393, 395, 396, 399, 400, 405, 406, 407, 409], "navig": [0, 406], "previou": [0, 3, 4, 10, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 197, 209, 219, 240, 244, 267, 280, 395, 396, 397, 398, 402, 407, 412], "whenev": [0, 1, 2, 3, 23, 43, 49, 52, 59, 60, 73, 79, 91, 92, 99, 100, 113, 114, 118, 120, 121, 129, 130, 141, 146, 147, 152, 176, 201, 206, 317, 333, 334, 335, 336, 351, 372, 388, 401, 409], "want": [0, 2, 3, 6, 7, 8, 100, 179, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 388, 393, 394, 395, 396, 397, 399, 400, 401, 405, 406, 407, 408, 409, 411, 412], "ted": [0, 34, 44, 57, 58, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 386, 392, 403, 410], "s": [0, 1, 2, 3, 6, 7, 8, 11, 30, 43, 48, 49, 50, 52, 53, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 100, 105, 111, 112, 115, 119, 123, 124, 125, 129, 130, 132, 137, 138, 139, 140, 144, 145, 146, 147, 160, 164, 183, 195, 197, 199, 200, 201, 203, 205, 207, 209, 211, 220, 221, 225, 226, 238, 242, 246, 251, 252, 253, 256, 264, 271, 273, 277, 279, 282, 284, 285, 288, 289, 292, 300, 302, 307, 313, 315, 317, 322, 324, 333, 334, 335, 336, 337, 351, 388, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 105, 111, 112, 115, 119, 128, 131, 134, 137, 138, 144, 145, 152, 159, 164, 168, 170, 177, 183, 184, 196, 197, 200, 201, 203, 205, 207, 208, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 351, 370, 377, 380, 386, 389, 390, 392, 394, 395, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412], "optim": [0, 1, 2, 8, 43, 54, 111, 112, 115, 119, 137, 138, 144, 145, 201, 209, 223, 249, 255, 256, 271, 300, 302, 317, 318, 319, 322, 365, 366, 370, 380, 389, 390, 392, 395, 396, 397, 398, 400, 403, 405, 406, 407, 410], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 115, 119, 137, 138, 141, 144, 145, 157, 160, 179, 183, 205, 211, 262, 263, 284, 300, 303, 306, 308, 320, 322, 324, 325, 353, 361, 367, 370, 372, 373, 374, 380, 390, 392, 393, 396, 397, 398, 399, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412], "storag": [0, 1, 8, 34, 43, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 102, 103, 104, 105, 107, 108, 115, 117, 119, 137, 138, 144, 145, 159, 160, 166, 169, 188, 209, 386, 390, 392, 394, 395, 396, 397, 399, 402, 403, 405, 406, 408, 410], "log": [0, 3, 4, 8, 11, 54, 233, 234, 235, 250, 251, 260, 271, 272, 281, 282, 285, 289, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 325, 331, 360, 363, 364, 366, 370, 380, 388, 389, 390, 392, 393, 394, 395, 397, 398, 402, 403, 405, 406, 407, 410, 411], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 43, 115, 119, 123, 128, 137, 138, 139, 140, 144, 145, 207, 209, 384, 387, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 409, 410, 411], "own": [0, 1, 3, 14, 15, 17, 22, 43, 115, 119, 137, 138, 139, 140, 144, 145, 209, 353, 392, 394, 395, 397, 403, 405, 406, 407, 410], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 43, 48, 50, 53, 54, 63, 73, 76, 82, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 166, 174, 183, 196, 201, 203, 205, 209, 211, 220, 221, 222, 228, 230, 238, 239, 242, 246, 262, 263, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 333, 370, 372, 380, 386, 388, 390, 392, 394, 397, 400, 401, 403, 408, 409, 410, 412], "loop": [0, 8, 48, 50, 53, 115, 119, 137, 138, 144, 145, 218, 220, 221, 238, 239, 262, 263, 319, 370, 389, 390, 392, 393, 394, 397, 399, 400, 401, 403, 404, 409, 410], "ppo": [0, 4, 8, 285, 289, 301, 316, 319, 386, 388, 392, 393, 394, 398, 399, 403, 405, 410], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 105, 113, 114, 115, 116, 118, 119, 120, 132, 137, 138, 144, 145, 160, 163, 164, 171, 176, 177, 179, 186, 188, 193, 195, 197, 198, 200, 201, 207, 209, 224, 242, 246, 380, 388, 392, 394, 395, 397, 398, 399, 403, 410, 411, 412], "introduct": [0, 389, 392, 397, 403, 405, 406, 410, 412], "multi": [0, 1, 7, 9, 43, 49, 52, 55, 56, 59, 60, 83, 84, 90, 115, 119, 129, 130, 137, 138, 142, 143, 144, 145, 201, 209, 240, 242, 244, 246, 247, 252, 253, 254, 284, 331, 333, 334, 335, 336, 386, 392, 393, 394, 395, 396, 397, 398, 403, 407, 410, 411], "agent": [0, 9, 55, 56, 128, 129, 130, 135, 136, 139, 140, 142, 143, 146, 147, 148, 195, 196, 250, 251, 252, 253, 254, 256, 264, 273, 331, 386, 392, 397, 403, 407, 410], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34, 43, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 242, 246, 248, 249, 284, 288, 317, 351, 352, 353, 374, 375, 376, 380, 382, 383, 384, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 99, 100, 105, 107, 111, 112, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 179, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 211, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 260, 261, 262, 263, 264, 265, 271, 272, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 346, 351, 353, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 380, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412], "pretrain": [0, 392, 403, 410], "recurr": [0, 2, 159, 240, 241, 242, 244, 246, 267, 392, 394, 398, 403, 409, 410], "dqn": [0, 2, 73, 153, 170, 235, 281, 282, 299, 300, 302, 303, 304, 306, 308, 309, 310, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 331, 377, 386, 388, 392, 398, 399, 402, 403, 410], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 43, 57, 111, 112, 115, 119, 131, 137, 138, 144, 145, 168, 177, 196, 210, 216, 217, 220, 221, 224, 235, 238, 239, 242, 246, 252, 253, 256, 262, 263, 265, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 299, 300, 301, 302, 303, 307, 308, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 366, 372, 375, 376, 380, 382, 383, 388, 389, 390, 392, 394, 397, 399, 400, 403, 408, 409, 410, 411, 412], "replai": [0, 8, 16, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 106, 110, 159, 160, 168, 184, 188, 197, 209, 302, 303, 304, 306, 307, 308, 315, 320, 322, 324, 325, 367, 370, 378, 380, 386, 390, 392, 403, 407, 408, 410], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 115, 119, 131, 137, 138, 144, 145, 159, 160, 164, 168, 183, 184, 188, 197, 200, 201, 203, 205, 209, 288, 291, 302, 303, 304, 306, 307, 308, 315, 320, 322, 324, 325, 367, 370, 378, 380, 386, 390, 392, 401, 403, 407, 408, 410, 412], "competit": [0, 3, 129, 130, 392, 403, 406, 410], "ddpg": [0, 228, 229, 230, 231, 303, 314, 323, 386, 388, 392, 394, 399, 403, 406, 410], "task": [0, 2, 3, 9, 54, 55, 56, 63, 76, 79, 113, 114, 115, 119, 122, 129, 130, 137, 138, 139, 140, 141, 144, 145, 146, 147, 183, 195, 201, 203, 205, 307, 315, 392, 393, 394, 395, 396, 397, 398, 403, 405, 406, 407, 410, 411, 412], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 119, 135, 136, 137, 144, 146, 197, 232, 242, 246, 280, 299, 317, 319, 321, 353, 370, 386, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 410], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 43, 45, 48, 50, 53, 62, 63, 86, 87, 88, 94, 97, 101, 103, 107, 110, 115, 119, 124, 137, 138, 144, 145, 153, 166, 169, 170, 179, 183, 200, 201, 203, 207, 209, 210, 242, 246, 249, 252, 253, 264, 271, 273, 276, 277, 285, 288, 289, 290, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 374, 375, 376, 379, 380, 384, 386, 388, 390, 392, 394, 395, 396, 400, 402, 403, 405, 406, 407, 409, 410, 412], "loss": [0, 3, 8, 50, 170, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 331, 332, 333, 365, 370, 377, 380, 389, 390, 392, 397, 399, 400, 401, 403, 407, 409, 410, 411], "trainer": [0, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392, 393, 403, 410], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 176, 177, 179, 181, 183, 185, 186, 187, 188, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 215, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 252, 253, 254, 257, 260, 261, 262, 263, 264, 265, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 292, 293, 296, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 326, 327, 331, 333, 334, 335, 336, 339, 351, 353, 361, 362, 363, 364, 365, 367, 368, 369, 372, 380, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412], "packag": [0, 6, 7, 10, 152, 386, 387, 395, 412], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 43, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 93, 94, 98, 99, 100, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 132, 134, 135, 136, 137, 138, 144, 145, 146, 147, 157, 160, 164, 173, 179, 181, 184, 188, 197, 200, 201, 202, 206, 207, 209, 219, 222, 233, 240, 241, 242, 244, 245, 246, 250, 251, 252, 253, 254, 255, 260, 262, 263, 264, 270, 274, 284, 288, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 364, 367, 368, 369, 370, 372, 382, 383, 384, 386, 388, 389, 390, 394, 395, 396, 397, 400, 402, 404, 405, 406, 408, 411, 412], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 98, 99, 100, 101, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 159, 161, 164, 165, 166, 169, 170, 171, 173, 181, 183, 185, 186, 188, 192, 194, 195, 197, 199, 200, 201, 202, 205, 207, 209, 215, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 257, 260, 261, 262, 263, 264, 265, 266, 267, 270, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 293, 296, 299, 300, 302, 303, 304, 306, 307, 308, 315, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 353, 361, 367, 386, 388, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 411, 412], "interoper": [0, 14, 15, 386], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 35, 41, 43, 48, 49, 50, 52, 53, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 115, 118, 119, 129, 130, 137, 138, 144, 145, 146, 147, 153, 160, 161, 183, 188, 201, 205, 209, 225, 226, 240, 241, 242, 244, 245, 246, 247, 253, 287, 291, 300, 301, 302, 304, 306, 308, 309, 315, 316, 319, 320, 322, 324, 325, 333, 334, 335, 336, 342, 343, 344, 345, 347, 348, 349, 350, 351, 384, 386, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 409], "node": [0, 2, 18, 19, 20, 21, 22, 30, 31, 37, 48, 50, 53, 56, 81, 386, 400], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 52, 59, 60, 94, 139, 140, 177, 179, 220, 221, 223, 233, 234, 235, 236, 243, 249, 250, 251, 257, 260, 261, 266, 267, 270, 271, 272, 280, 281, 282, 285, 289, 290, 299, 300, 301, 302, 307, 308, 309, 315, 316, 319, 320, 321, 322, 324, 325, 386, 390, 394, 395, 398, 400, 405, 406, 407, 411, 412], "helper": [0, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 393, 394, 396, 405, 407], "compos": [0, 3, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 105, 106, 115, 119, 137, 138, 144, 145, 160, 187, 200, 201, 207, 209, 283, 284, 302, 311, 322, 353, 386, 393, 394, 395, 396, 400, 404, 406, 407, 409, 411, 412], "episod": [0, 3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 99, 100, 115, 119, 137, 138, 144, 145, 156, 188, 191, 196, 218, 223, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 386, 394, 397, 402, 405, 406, 409], "format": [0, 3, 34, 41, 42, 43, 44, 47, 57, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 97, 105, 115, 119, 137, 138, 139, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 353, 386, 393, 394, 397, 399, 401, 412], "tensorspec": [0, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 115, 119, 131, 137, 138, 144, 145, 146, 147, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 219, 220, 221, 238, 239, 262, 263, 267, 276, 280, 281, 282, 285, 286, 287, 288, 289, 290, 292, 300, 302, 304, 307, 308, 320, 322, 324, 325, 331, 386, 407], "human": [0, 24, 77, 386, 407], "feedback": [0, 386, 402, 411], "rlhf": [0, 54, 63, 82, 177, 386, 388], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 116, 119, 137, 138, 144, 145, 154, 157, 166, 169, 178, 185, 186, 200, 201, 207, 209, 211, 223, 242, 246, 248, 249, 366, 374, 375, 376, 380, 382, 383, 384, 386, 397, 412], "gymlikeenv": [0, 118, 120, 386], "envmetadata": [0, 386], "vector": [0, 1, 8, 25, 111, 112, 120, 124, 125, 128, 139, 140, 141, 146, 147, 168, 206, 228, 230, 240, 241, 244, 245, 247, 333, 336, 346, 347, 348, 349, 350, 386, 389, 393, 394, 396, 404, 405, 406, 407, 408, 412], "custom": [0, 2, 5, 43, 115, 119, 137, 138, 144, 145, 203, 209, 252, 253, 292, 309, 319, 326, 384, 386, 388, 393, 394, 395, 396, 398, 399, 401, 405, 406], "nativ": [0, 1, 7, 9, 77, 115, 119, 137, 138, 144, 145, 160, 353, 386, 396, 409], "auto": [0, 87, 107, 155, 156, 206, 262, 263, 300, 302, 308, 318, 320, 322, 324, 325, 386, 389, 405, 406], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 155, 156, 157, 160, 170, 173, 176, 178, 183, 191, 195, 196, 197, 198, 200, 201, 203, 206, 207, 209, 211, 219, 224, 240, 242, 246, 254, 262, 263, 275, 284, 317, 352, 386, 389, 393, 394, 395, 396, 397, 400, 404, 405, 406, 411], "dynam": [0, 2, 7, 14, 15, 16, 76, 79, 81, 115, 137, 144, 209, 307, 315, 386, 395, 397, 407], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 111, 112, 115, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 215, 218, 219, 220, 221, 235, 238, 239, 242, 246, 262, 263, 265, 267, 276, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 386, 388, 393, 394, 395, 396, 397, 398, 402, 404, 405, 406, 411], "mask": [0, 1, 4, 23, 25, 26, 29, 33, 39, 40, 41, 42, 47, 139, 140, 145, 154, 184, 209, 224, 235, 238, 239, 250, 251, 265, 280, 281, 282, 286, 287, 367, 386, 394, 396, 412], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 34, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 157, 163, 166, 168, 169, 170, 171, 174, 177, 178, 181, 185, 186, 188, 192, 195, 201, 206, 210, 215, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 242, 246, 247, 248, 249, 250, 251, 252, 261, 262, 263, 264, 265, 267, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 292, 293, 299, 300, 302, 303, 304, 306, 307, 308, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 380, 384, 386, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 401, 404, 405, 406, 408, 409, 411, 412], "record": [0, 2, 11, 43, 115, 119, 137, 138, 144, 145, 150, 153, 177, 209, 319, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 380, 386, 394, 395, 398, 402, 405], "domain": [0, 2, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 168, 197, 215, 276, 281, 282, 285, 286, 287, 288, 289, 290, 291, 296, 386, 395, 396, 398, 399, 405, 406, 407, 411, 412], "actor": [0, 3, 4, 21, 177, 210, 223, 227, 228, 230, 235, 236, 238, 239, 249, 261, 262, 263, 265, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 331, 386, 389, 394, 396, 397, 399, 402, 405, 408, 411], "explor": [0, 1, 208, 220, 221, 238, 239, 256, 262, 263, 276, 281, 282, 285, 286, 287, 288, 289, 299, 317, 366, 375, 376, 380, 386, 395, 396, 397, 399, 400, 402, 405, 406, 407], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 99, 100, 105, 115, 119, 128, 137, 138, 144, 145, 152, 153, 156, 158, 160, 161, 163, 166, 168, 169, 170, 178, 179, 183, 184, 187, 188, 189, 191, 193, 197, 198, 200, 201, 205, 207, 209, 215, 219, 220, 221, 222, 224, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 260, 262, 263, 264, 265, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 361, 363, 364, 365, 366, 367, 370, 380, 386, 390, 394, 399, 400, 401, 404, 405, 406, 407, 409, 411, 412], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 96, 98, 115, 116, 119, 129, 130, 131, 134, 137, 138, 139, 140, 142, 143, 144, 145, 157, 164, 166, 167, 171, 177, 179, 185, 186, 191, 192, 195, 197, 200, 206, 209, 219, 224, 233, 242, 246, 250, 251, 260, 276, 285, 289, 293, 294, 313, 320, 327, 333, 338, 346, 356, 370, 386, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "hook": [0, 2, 34, 43, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 108, 115, 119, 137, 138, 144, 145, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 265, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 386], "planner": [0, 223, 249, 386], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 95, 98, 99, 100, 105, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 171, 177, 179, 181, 183, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 215, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 297, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 361, 368, 369, 380, 386, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "vmap": [0, 240, 241, 244, 245, 254, 274, 288, 291, 317, 386, 388, 411], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 79, 81, 93, 105, 115, 119, 131, 137, 138, 144, 145, 153, 168, 178, 179, 197, 210, 211, 224, 238, 240, 242, 244, 246, 285, 288, 289, 296, 300, 317, 320, 366, 374, 386, 388, 393, 394, 395, 396, 397, 398, 400, 407, 408, 409, 411, 412], "sac": [0, 308, 320, 322, 386], "redq": [0, 320, 386], "crossq": [0, 302, 386], "iql": [0, 307, 315, 386, 393, 405, 406], "cql": [0, 300, 306, 386], "gail": [0, 313, 386], "dt": [0, 138, 262, 263, 386, 407], "td3": [0, 324, 325, 386], "bc": [0, 5, 324, 386, 411], "a2c": [0, 299, 386], "dreamer": [0, 150, 151, 236, 310, 311, 312, 386, 388], "checkpoint": [0, 52, 84, 86, 89, 101, 102, 104, 108, 386, 408, 409], "builder": [0, 386, 394, 412], "logger": [0, 3, 11, 351, 353, 355, 356, 357, 358, 359, 360, 364, 370, 380, 384, 386, 394, 405], "_util": [0, 3, 12, 386, 402], "implement_for": [0, 3, 386], "thing": [0, 3, 7, 8, 115, 119, 137, 138, 144, 145, 252, 253, 387, 395, 396, 397, 398, 399, 400, 401, 405, 406, 409, 412], "consid": [0, 1, 2, 3, 8, 20, 30, 31, 37, 43, 49, 52, 56, 59, 60, 86, 87, 107, 115, 119, 137, 138, 144, 145, 168, 207, 209, 233, 252, 253, 270, 300, 302, 315, 320, 322, 324, 325, 333, 335, 336, 387, 393, 397, 398, 399, 407, 409], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 98, 99, 100, 101, 103, 107, 115, 116, 118, 119, 120, 128, 129, 130, 132, 134, 137, 138, 139, 140, 144, 145, 146, 147, 154, 156, 159, 160, 164, 166, 168, 169, 177, 178, 179, 183, 184, 191, 197, 200, 201, 203, 205, 206, 207, 209, 216, 217, 218, 222, 223, 235, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 265, 271, 284, 285, 288, 289, 291, 295, 300, 301, 302, 304, 309, 315, 316, 317, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 351, 352, 353, 355, 367, 384, 387, 388, 389, 390, 393, 394, 395, 396, 398, 400, 401, 405, 406, 407, 408, 409, 412], "debug": [0, 6, 8, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 387, 412], "work": [0, 1, 2, 3, 4, 8, 12, 43, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 92, 97, 99, 100, 103, 110, 115, 118, 119, 120, 123, 137, 138, 141, 144, 145, 161, 177, 183, 203, 206, 207, 209, 218, 225, 226, 247, 282, 287, 292, 301, 316, 319, 370, 387, 388, 393, 394, 395, 396, 397, 400, 404, 405, 406, 407, 408, 409, 411, 412], "habitat": [0, 3, 121, 387, 408], "lab": [0, 3, 113, 114, 121, 387], "mujoco": [0, 6, 8, 141, 387, 393, 395, 396], "error": [0, 1, 3, 7, 10, 12, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 50, 53, 55, 86, 115, 119, 137, 138, 144, 145, 148, 184, 209, 211, 317, 387, 389, 393, 395, 405, 406, 412], "solut": [0, 2, 3, 6, 7, 9, 21, 387, 388, 390, 411], "resourc": [0, 1, 21, 121, 387, 393, 395, 405, 406], "issu": [0, 3, 4, 5, 8, 73, 77, 84, 86, 87, 107, 118, 123, 160, 184, 198, 218, 276, 281, 282, 285, 286, 287, 288, 289, 387, 411], "customis": [0, 387, 394, 401], "video": [0, 4, 9, 353, 355, 366, 384, 386, 387, 402, 405, 406], "render": [0, 3, 8, 125, 146, 351, 353, 366, 387, 393, 394, 395, 397, 401], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 91, 92, 94, 95, 97, 103, 105, 106, 107, 109, 110, 115, 119, 129, 130, 135, 136, 137, 138, 144, 145, 146, 147, 155, 160, 164, 168, 201, 218, 250, 251, 386, 397, 404, 405, 406, 409, 411], "search": [0, 134, 219, 394], "page": [0, 7, 24, 360, 399], "somewhat": [1, 2, 389, 398, 412], "equival": [1, 3, 25, 26, 29, 30, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 157, 167, 170, 201, 209, 235, 244, 247, 265, 281, 282, 286, 287, 319, 367, 400, 411, 412], "dataload": [1, 82, 98, 100, 394, 400, 409], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 137, 138, 144, 145, 160, 172, 188, 196, 197, 198, 201, 209, 220, 221, 238, 239, 240, 242, 244, 246, 260, 262, 263, 299, 302, 317, 319, 322, 353, 388, 394, 397, 405, 409, 411, 412], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 215, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 291, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 339, 341, 342, 343, 347, 348, 350, 351, 353, 361, 366, 367, 368, 380, 384, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 115, 118, 119, 120, 128, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 156, 159, 172, 177, 183, 192, 200, 201, 205, 209, 246, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 367, 370, 388, 389, 390, 393, 394, 395, 396, 399, 404, 405, 406, 407, 408, 409, 411, 412], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 79, 92, 94, 98, 99, 115, 119, 129, 130, 137, 138, 144, 145, 153, 168, 179, 191, 198, 209, 218, 271, 274, 291, 309, 311, 317, 339, 351, 373, 390, 393, 394, 395, 397, 398, 399, 400, 405, 406, 407, 412], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 30, 31, 37, 38, 43, 45, 46, 48, 49, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 79, 88, 115, 119, 137, 138, 139, 140, 144, 145, 157, 158, 164, 173, 183, 197, 200, 201, 202, 203, 205, 209, 218, 224, 240, 242, 244, 246, 252, 288, 289, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 311, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 388, 393, 396, 405, 406, 407, 409, 412], "static": [1, 12, 54, 63, 92, 99, 100, 121, 138, 207, 315, 397, 407, 409], "like": [1, 2, 3, 4, 7, 11, 21, 30, 31, 37, 43, 45, 49, 52, 56, 59, 60, 63, 88, 94, 100, 115, 119, 121, 128, 137, 138, 139, 140, 144, 145, 170, 197, 199, 209, 211, 240, 244, 253, 283, 299, 301, 316, 319, 320, 321, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 412], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 55, 82, 105, 108, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 159, 166, 168, 169, 178, 186, 197, 201, 209, 216, 217, 238, 242, 246, 262, 263, 301, 302, 316, 317, 319, 322, 353, 367, 372, 382, 383, 384, 388, 393, 394, 395, 396, 400, 405, 406, 407, 409], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 43, 52, 64, 76, 77, 80, 81, 82, 115, 119, 131, 137, 138, 144, 145, 155, 160, 164, 173, 183, 191, 197, 200, 201, 202, 203, 205, 209, 247, 274, 288, 289, 290, 302, 322, 353, 390, 395, 397, 401, 409, 412], "two": [1, 2, 3, 4, 8, 10, 39, 40, 41, 42, 43, 49, 52, 54, 59, 60, 79, 94, 98, 100, 115, 119, 137, 138, 144, 145, 157, 179, 183, 205, 209, 231, 240, 242, 244, 246, 252, 253, 268, 271, 289, 316, 324, 328, 366, 370, 389, 393, 394, 395, 396, 397, 398, 400, 401, 404, 405, 406, 407, 409, 411, 412], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 81, 116, 289, 370, 388, 389, 393, 394, 404, 412], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 92, 94, 97, 98, 99, 100, 103, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 156, 157, 161, 163, 164, 183, 191, 192, 195, 197, 199, 200, 201, 203, 205, 209, 218, 220, 221, 222, 224, 225, 226, 238, 239, 240, 242, 244, 246, 247, 250, 251, 252, 253, 255, 262, 263, 274, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 327, 331, 333, 334, 335, 336, 337, 341, 351, 352, 353, 360, 363, 373, 380, 381, 384, 393, 394, 395, 396, 397, 398, 400, 405, 406, 407, 409, 412], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 97, 98, 99, 100, 101, 103, 113, 114, 115, 118, 119, 120, 121, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 158, 159, 163, 166, 169, 177, 179, 181, 183, 191, 193, 199, 201, 203, 205, 207, 209, 218, 224, 225, 226, 228, 234, 237, 242, 246, 247, 250, 251, 258, 265, 282, 284, 286, 287, 289, 291, 292, 293, 300, 302, 315, 317, 320, 322, 324, 325, 330, 333, 336, 351, 352, 366, 367, 382, 383, 388, 389, 393, 395, 397, 398, 399, 400, 404, 405, 407, 408, 409, 411, 412], "constructor": [1, 2, 16, 18, 19, 20, 21, 52, 63, 79, 91, 105, 115, 119, 132, 137, 138, 144, 145, 146, 156, 200, 225, 226, 247, 285, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 381, 384, 388, 393, 394, 395, 397, 400, 405, 406, 409], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 94, 98, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 171, 179, 192, 209, 222, 224, 225, 226, 247, 252, 253, 269, 276, 281, 285, 286, 288, 290, 291, 293, 317, 330, 366, 369, 370, 389, 390, 393, 395, 396, 400, 402, 405, 406, 407], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 51, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 111, 112, 115, 116, 119, 120, 121, 123, 124, 125, 131, 132, 137, 138, 141, 144, 145, 154, 201, 209, 238, 240, 242, 244, 246, 254, 284, 290, 291, 317, 324, 374, 384, 388, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 409, 410, 412], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 54, 73, 83, 84, 90, 92, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 154, 159, 173, 176, 179, 195, 196, 197, 198, 201, 206, 209, 218, 219, 220, 221, 222, 223, 236, 238, 239, 240, 242, 244, 246, 248, 249, 262, 263, 284, 285, 289, 299, 310, 319, 332, 333, 334, 335, 336, 339, 340, 341, 352, 355, 361, 366, 370, 390, 394, 396, 398, 399, 401, 402, 404, 407, 408, 411], "queri": [1, 3, 14, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 183, 200, 203, 207, 209, 291, 389, 393, 399, 407, 411], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 137, 138, 144, 145, 184, 196, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 252, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 296, 304, 306, 317, 333, 334, 335, 336, 337, 352, 381, 393, 394, 396, 399, 402, 407, 409, 412], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 97, 99, 100, 107, 111, 112, 115, 118, 119, 120, 124, 125, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 147, 153, 159, 160, 168, 174, 178, 179, 190, 195, 198, 201, 207, 209, 220, 221, 222, 223, 225, 226, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 257, 258, 259, 262, 263, 264, 266, 267, 270, 271, 272, 273, 276, 280, 284, 285, 288, 289, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 361, 363, 366, 370, 372, 373, 374, 382, 383, 384, 388, 389, 393, 394, 395, 396, 397, 398, 400, 402, 405, 406, 407, 408, 409, 412], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 43, 63, 78, 98, 105, 115, 119, 120, 137, 138, 144, 145, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 211, 240, 242, 246, 247, 255, 256, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 334, 335, 336, 367, 393, 395, 396, 400, 401, 405, 406, 407, 409, 412], "deliv": [1, 2, 3, 16, 79, 393, 394, 397, 400, 411], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 38, 48, 49, 50, 52, 53, 56, 59, 60, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 115, 118, 119, 120, 128, 137, 138, 139, 140, 144, 145, 207, 240, 242, 244, 245, 246, 284, 290, 291, 300, 302, 315, 320, 322, 324, 325, 352, 361, 386, 388, 394, 397, 404, 405, 407, 411], "user": [1, 2, 3, 5, 8, 23, 43, 73, 75, 79, 81, 92, 100, 115, 119, 137, 138, 144, 145, 161, 196, 201, 209, 211, 232, 302, 319, 322, 324, 353, 381, 389, 390, 393, 394, 397, 399, 400, 407, 411, 412], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 54, 98, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 195, 220, 221, 238, 239, 262, 263, 393, 395, 402, 405, 406, 411, 412], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 94, 99, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 166, 167, 169, 170, 171, 178, 179, 181, 185, 186, 188, 190, 192, 195, 197, 198, 200, 201, 207, 209, 218, 219, 223, 240, 242, 246, 249, 271, 284, 299, 300, 301, 302, 303, 304, 306, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 388, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "state": [1, 2, 3, 4, 14, 15, 16, 17, 34, 43, 49, 52, 54, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 159, 160, 161, 163, 170, 179, 186, 195, 196, 200, 201, 207, 209, 211, 218, 219, 223, 227, 232, 236, 240, 241, 242, 244, 245, 246, 247, 249, 254, 258, 261, 264, 266, 267, 273, 277, 284, 288, 294, 299, 301, 302, 306, 316, 317, 319, 320, 321, 322, 331, 332, 333, 334, 335, 336, 337, 384, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 405, 406, 407, 412], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 34, 43, 48, 50, 53, 54, 73, 94, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 218, 220, 221, 222, 238, 240, 242, 246, 255, 281, 286, 302, 311, 322, 324, 394, 395, 396, 397, 398, 400, 402, 405, 406, 407, 408, 409, 412], "predefin": [1, 394, 396, 400, 409], "becaus": [1, 3, 4, 7, 48, 50, 53, 54, 73, 115, 119, 137, 138, 144, 145, 170, 177, 195, 200, 206, 209, 231, 253, 276, 281, 282, 284, 285, 286, 287, 288, 289, 299, 319, 388, 393, 394, 396, 398, 399, 400, 404, 405, 406, 407, 409, 412], "potenti": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 407, 409], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 43, 54, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 179, 193, 201, 204, 209, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 266, 267, 269, 271, 272, 274, 277, 280, 282, 284, 285, 287, 289, 292, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 374, 389, 393, 395, 396, 397, 398, 404, 405, 406, 408, 409], "heavi": [1, 8, 73, 409], "crucial": [1, 2, 3, 220, 221, 238, 239, 262, 263, 307, 315, 317, 393, 394, 395, 396, 397, 399, 401, 405, 406, 407, 412], "configur": [1, 8, 21, 22, 54, 177, 227, 232, 261, 317, 319, 388, 393, 394, 395, 399, 405, 406, 407], "hyperparamet": [1, 97, 209, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 393, 401, 407, 409], "appropri": [1, 3, 4, 7, 85, 95, 105, 106, 109, 110, 137, 144, 170, 381, 384, 393, 401, 409], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 97, 98, 101, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 388, 389, 393, 396, 398, 402, 405, 406, 407, 408, 411], "take": [1, 2, 3, 8, 23, 54, 76, 102, 108, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 163, 195, 198, 200, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 252, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 283, 284, 285, 287, 292, 295, 298, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 361, 372, 388, 390, 393, 394, 395, 397, 398, 399, 405, 406, 407, 409, 412], "consider": [1, 2, 3, 8, 118, 120, 394, 405, 406, 409], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 115, 119, 125, 129, 130, 131, 137, 138, 139, 140, 144, 145, 146, 147, 156, 166, 169, 196, 201, 207, 209, 219, 225, 226, 242, 246, 247, 293, 299, 300, 301, 302, 303, 304, 306, 308, 309, 313, 316, 317, 319, 320, 321, 322, 324, 325, 331, 333, 336, 393, 394, 395, 397, 405, 406, 407, 412], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 92, 94, 99, 100, 101, 105, 108, 113, 114, 115, 118, 119, 120, 121, 125, 128, 131, 137, 138, 139, 140, 144, 145, 146, 147, 153, 156, 157, 160, 163, 164, 166, 167, 170, 171, 173, 177, 179, 184, 185, 186, 188, 191, 192, 195, 196, 198, 200, 201, 206, 207, 209, 211, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 252, 253, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 285, 287, 288, 289, 292, 295, 299, 301, 302, 308, 314, 316, 317, 319, 320, 321, 323, 324, 332, 333, 334, 335, 336, 337, 353, 355, 365, 366, 367, 370, 380, 382, 383, 384, 388, 390, 393, 394, 395, 396, 398, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "occur": [1, 8, 15, 55, 56, 73, 115, 119, 121, 137, 138, 144, 145, 161, 171, 179, 184, 206, 219, 222, 276, 281, 282, 285, 286, 287, 288, 289, 311, 409, 412], "serial": [1, 2, 3, 43, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 207, 209], "parallel": [1, 3, 8, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 201, 206, 211, 242, 246, 299, 381, 382, 383, 384, 394, 395, 405, 406], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 242, 246, 380, 383, 386, 393, 394, 395, 396, 400, 402, 405, 406, 409], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 128, 131, 134, 137, 138, 139, 140, 141, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 382, 383, 384, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 409, 412], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 48, 50, 53, 62, 63, 76, 81, 82, 116, 132, 137, 144, 207, 382, 383, 384, 393, 394, 395, 411, 412], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 383, 386, 395, 400, 411], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 36, 48, 50, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 99, 100, 128, 139, 140, 240, 244, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 388, 390, 395, 398, 409, 411], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 49, 52, 59, 60, 92, 99, 100, 111, 112, 113, 114, 118, 120, 121, 123, 124, 125, 132, 133, 137, 141, 145, 207, 209, 242, 246, 252, 262, 263, 317, 372, 386, 388, 389, 393, 397, 401, 405, 406, 407], "aggreg": [1, 3, 73, 92, 105, 139, 140, 219, 225, 226, 228, 229, 291], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 43, 48, 49, 50, 51, 52, 53, 59, 60, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 100, 115, 116, 119, 137, 138, 144, 145, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 218, 219, 220, 238, 240, 242, 244, 246, 247, 252, 265, 271, 280, 282, 287, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 372, 388, 389, 394, 396, 397, 398, 401, 402, 407, 408, 411, 412], "final": [1, 2, 3, 4, 21, 48, 50, 53, 54, 197, 206, 220, 221, 238, 239, 240, 242, 244, 246, 252, 262, 263, 283, 290, 333, 366, 388, 393, 394, 395, 401, 402, 405, 406, 407, 412], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 382, 386, 393, 394, 395, 400, 411], "sever": [1, 2, 3, 8, 39, 43, 63, 76, 115, 119, 137, 138, 144, 145, 161, 163, 201, 209, 319, 393, 395, 401, 402, 409, 412], "gather": [1, 3, 18, 20, 21, 63, 82, 86, 87, 92, 99, 107, 184, 251, 254, 260, 317, 332, 374, 387, 394, 395, 396, 400, 405, 406, 407, 409, 412], "continu": [1, 2, 9, 27, 30, 64, 65, 66, 100, 115, 119, 137, 138, 139, 140, 144, 145, 146, 147, 153, 215, 228, 229, 230, 231, 262, 263, 291, 296, 300, 323, 333, 338, 346, 388, 393, 395, 396, 398, 405, 406, 407, 409, 411, 412], "concomitantli": [1, 115, 119, 137, 138, 144, 145], "network": [1, 4, 8, 43, 115, 119, 128, 137, 138, 139, 140, 144, 145, 209, 225, 226, 228, 229, 230, 231, 234, 236, 237, 244, 247, 252, 253, 254, 256, 258, 259, 264, 266, 267, 268, 273, 277, 278, 279, 280, 288, 292, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 329, 331, 333, 334, 335, 336, 337, 379, 380, 388, 389, 390, 399, 402, 404, 407, 412], "impli": [1, 412], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 54, 92, 94, 97, 111, 112, 115, 119, 137, 138, 142, 143, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 240, 241, 242, 244, 245, 246, 252, 254, 256, 288, 299, 300, 301, 302, 308, 311, 322, 324, 372, 379, 388, 390, 393, 394, 395, 396, 404, 407, 409, 411], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 43, 48, 50, 53, 55, 56, 62, 75, 81, 84, 92, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 177, 179, 192, 201, 202, 207, 209, 211, 222, 242, 246, 247, 252, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 405, 406, 407, 408, 409, 411, 412], "slightli": [1, 23, 73, 388, 389, 396, 405, 407, 408, 409, 412], "lag": [1, 393, 394, 395], "therefor": [1, 2, 3, 7, 49, 52, 59, 60, 80, 81, 115, 119, 137, 138, 144, 145, 188, 319, 331, 399, 405, 412], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 34, 36, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 92, 94, 99, 100, 105, 107, 108, 115, 119, 128, 131, 134, 137, 138, 139, 140, 144, 145, 153, 154, 157, 160, 170, 177, 183, 188, 191, 195, 196, 198, 200, 202, 205, 206, 218, 219, 220, 221, 238, 239, 240, 241, 242, 244, 245, 246, 250, 251, 252, 262, 263, 285, 288, 289, 298, 299, 300, 301, 302, 307, 308, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 389, 390, 393, 394, 395, 397, 404, 405, 406, 407, 409, 412], "asynchron": [1, 9, 15, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 299, 382, 393, 394, 395], "off": [1, 2, 4, 243, 272, 281, 322, 351, 366, 375, 388, 390, 393, 394, 395, 398, 399, 405, 406, 408, 412], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 107, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 146, 166, 169, 173, 179, 196, 201, 206, 209, 211, 235, 240, 242, 244, 246, 253, 255, 277, 279, 280, 282, 286, 299, 307, 309, 315, 319, 366, 388, 390, 393, 394, 395, 396, 397, 398, 400, 401, 405, 406, 407, 408, 409, 412], "remot": [1, 2, 18, 19, 20, 21, 137, 144, 412], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 54, 105, 111, 112, 115, 119, 121, 122, 124, 125, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 163, 166, 169, 170, 171, 177, 181, 185, 186, 191, 192, 193, 195, 196, 198, 207, 209, 211, 223, 224, 242, 246, 249, 262, 263, 284, 299, 351, 353, 374, 388, 393, 395, 396, 398, 399, 400, 401, 402, 408, 409, 411], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 192, 320, 333, 334, 335, 336, 337, 389, 393, 395, 398, 399, 400], "synchronis": [1, 116, 405, 406], "either": [1, 2, 5, 22, 25, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 94, 115, 119, 137, 138, 144, 145, 195, 196, 209, 294, 317, 324, 325, 357, 390, 393, 394, 396, 405, 408, 409, 411, 412], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 393, 406, 411], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 91, 92, 94, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 168, 171, 173, 176, 177, 178, 179, 183, 184, 186, 187, 190, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 207, 209, 211, 215, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 237, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 263, 271, 272, 276, 277, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 328, 333, 334, 335, 336, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 360, 363, 364, 366, 367, 370, 384, 388, 389, 390, 393, 394, 395, 396, 397, 398, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "second": [1, 3, 8, 23, 39, 40, 41, 42, 73, 76, 105, 157, 240, 242, 244, 246, 282, 301, 316, 319, 322, 355, 369, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 164, 166, 167, 169, 170, 171, 177, 181, 182, 183, 185, 186, 188, 192, 195, 197, 199, 200, 201, 203, 205, 207, 209, 215, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237, 240, 241, 242, 244, 245, 246, 247, 249, 252, 253, 255, 256, 261, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 293, 296, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 351, 367, 372, 378, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 92, 99, 115, 119, 137, 138, 144, 145, 157, 173, 177, 200, 209, 234, 235, 241, 245, 257, 277, 278, 279, 281, 282, 283, 288, 294, 299, 301, 303, 304, 309, 316, 319, 321, 331, 332, 333, 334, 335, 336, 370, 386, 389, 390, 393, 394, 395, 396, 397, 398, 404, 405, 406, 407, 412], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 43, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 90, 92, 94, 99, 100, 107, 114, 115, 116, 118, 119, 120, 131, 137, 138, 144, 145, 160, 179, 197, 200, 201, 207, 209, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 252, 253, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 295, 300, 302, 304, 307, 308, 315, 317, 320, 322, 324, 325, 331, 333, 334, 335, 336, 351, 353, 357, 366, 374, 375, 376, 380, 382, 383, 388, 389, 390, 393, 395, 396, 397, 398, 407, 409, 412], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 164, 166, 167, 169, 170, 171, 181, 183, 185, 186, 188, 192, 195, 197, 200, 201, 203, 205, 209, 215, 218, 223, 224, 234, 240, 241, 242, 244, 245, 246, 249, 255, 256, 262, 264, 265, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 293, 296, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 351, 367, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 73, 75, 79, 92, 99, 100, 103, 105, 115, 119, 123, 135, 136, 137, 138, 141, 144, 145, 186, 220, 221, 231, 242, 244, 246, 247, 257, 274, 276, 281, 288, 293, 317, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 387, 389, 393, 394, 395, 397, 399, 400, 405, 406, 407, 409, 411, 412], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 94, 95, 99, 100, 101, 103, 105, 106, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 157, 160, 163, 166, 167, 168, 169, 178, 179, 183, 188, 191, 194, 196, 197, 198, 200, 201, 202, 205, 207, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 253, 254, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 274, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 331, 333, 334, 335, 336, 340, 341, 355, 363, 365, 366, 370, 374, 384, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 412], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 111, 112, 115, 119, 121, 122, 123, 137, 138, 144, 145, 164, 177, 182, 183, 197, 200, 201, 203, 205, 209, 240, 241, 244, 245, 288, 362, 393, 394, 395, 396, 405, 406, 408, 412], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 61, 94, 111, 112, 124, 125, 137, 144, 145, 161, 163, 168, 176, 178, 188, 191, 195, 200, 207, 240, 244, 246, 252, 255, 256, 276, 281, 285, 286, 288, 289, 292, 301, 308, 316, 319, 339, 384, 388, 389, 390, 393, 394, 395, 397, 399, 400, 405, 406, 407, 409, 411], "infer": [1, 137, 144, 160, 207, 242, 246, 255, 280, 285, 306, 351, 393, 395, 400, 402, 409], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 43, 73, 76, 92, 99, 100, 111, 112, 113, 114, 115, 118, 119, 124, 125, 131, 132, 133, 137, 138, 144, 145, 178, 179, 201, 207, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 290, 291, 292, 295, 302, 322, 353, 360, 366, 382, 383, 384, 387, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411], "dispatch": [1, 18, 19, 20, 21, 274, 284, 353, 393], "avail": [1, 2, 3, 4, 6, 21, 49, 52, 59, 60, 73, 76, 81, 92, 98, 99, 100, 113, 114, 123, 129, 130, 135, 136, 137, 139, 140, 141, 146, 147, 153, 156, 159, 177, 235, 265, 285, 289, 317, 353, 382, 383, 388, 393, 394, 395, 396, 397, 398, 405, 406, 407, 409, 412], "speed": [1, 2, 4, 8, 29, 115, 119, 137, 138, 144, 145, 389, 393, 394, 395, 396, 405, 406, 407, 409], "avoid": [1, 2, 3, 43, 86, 87, 107, 115, 119, 137, 138, 144, 145, 152, 201, 207, 209, 222, 271, 276, 288, 293, 301, 302, 316, 319, 322, 373, 395, 406], "oom": [1, 3, 48, 50, 53, 86, 87, 107], "choic": [1, 2, 75, 81, 137, 257, 388, 389, 393, 394, 399, 405, 406], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 30, 31, 37, 43, 49, 52, 54, 56, 59, 60, 62, 63, 73, 76, 77, 79, 80, 81, 84, 86, 87, 92, 94, 99, 100, 105, 107, 115, 116, 117, 119, 120, 128, 132, 137, 138, 139, 140, 144, 145, 146, 156, 157, 166, 169, 186, 200, 202, 207, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 273, 274, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 300, 301, 302, 315, 316, 317, 319, 320, 322, 324, 325, 333, 334, 335, 336, 337, 351, 367, 382, 383, 384, 388, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 409, 412], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 79, 91, 100, 115, 119, 123, 134, 137, 138, 144, 145, 153, 160, 173, 202, 207, 219, 242, 246, 280, 388, 389, 394, 406], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 35, 36, 43, 48, 49, 50, 51, 52, 53, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 91, 92, 94, 99, 105, 107, 115, 119, 137, 138, 144, 145, 206, 207, 209, 223, 249, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 360, 386, 390, 393, 395, 396, 398, 400, 402, 405, 406, 408, 412], "while": [1, 2, 3, 7, 8, 23, 43, 115, 119, 137, 138, 144, 145, 188, 201, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 302, 307, 315, 316, 319, 322, 388, 389, 393, 395, 396, 398, 400, 401, 405, 406, 407, 408, 409, 411], "wait": [1, 20, 21, 22, 396, 407], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 50, 52, 53, 59, 62, 73, 76, 77, 79, 80, 81, 82, 86, 87, 92, 94, 99, 100, 105, 107, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 152, 156, 157, 159, 160, 168, 179, 186, 188, 191, 192, 195, 197, 201, 209, 218, 225, 226, 240, 244, 267, 284, 285, 290, 291, 292, 299, 300, 302, 303, 304, 306, 307, 308, 313, 315, 319, 322, 324, 333, 340, 341, 351, 353, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 409, 412], "impact": [1, 2, 3, 79, 125, 166, 169, 222, 299, 301, 316, 319, 321, 394, 396, 405, 406], "memori": [1, 3, 8, 21, 29, 43, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 84, 86, 90, 115, 116, 119, 123, 137, 138, 144, 145, 160, 164, 183, 197, 200, 201, 203, 205, 207, 209, 244, 245, 288, 384, 386, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "manag": [1, 8, 329, 330, 333, 334, 335, 336, 366, 388, 399], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 83, 91, 92, 94, 97, 99, 100, 105, 115, 119, 124, 125, 137, 138, 139, 140, 144, 145, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 218, 219, 220, 221, 223, 224, 234, 235, 238, 239, 242, 246, 248, 249, 262, 263, 265, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 351, 353, 364, 365, 366, 368, 369, 370, 374, 389, 390, 393, 395, 396, 397, 399, 404, 405, 406, 407, 409, 411, 412], "control": [1, 3, 5, 8, 16, 23, 24, 32, 52, 59, 60, 92, 94, 99, 113, 114, 115, 119, 128, 137, 138, 139, 140, 144, 145, 168, 218, 228, 229, 230, 231, 242, 246, 248, 249, 262, 263, 267, 274, 288, 289, 290, 299, 301, 302, 316, 317, 319, 323, 333, 338, 346, 351, 388, 390, 393, 394, 395, 397, 398, 399, 405, 406, 407, 409], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 94, 97, 98, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 160, 161, 166, 169, 174, 177, 178, 179, 183, 184, 195, 197, 198, 200, 201, 203, 207, 209, 211, 234, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 272, 277, 278, 279, 280, 284, 285, 288, 289, 291, 299, 300, 301, 302, 304, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 328, 331, 333, 334, 335, 336, 351, 353, 361, 365, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 409, 412], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 394, 406], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 33, 39, 40, 41, 42, 47, 49, 50, 52, 54, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 92, 94, 97, 99, 115, 119, 137, 138, 139, 140, 144, 145, 156, 157, 160, 163, 166, 169, 171, 174, 181, 193, 201, 207, 209, 222, 224, 242, 246, 253, 333, 335, 336, 366, 370, 389, 393, 394, 395, 396, 398, 399, 400, 402, 405, 406, 407, 409, 412], "heurist": [1, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 263, 284, 393, 400, 412], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 75, 97, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 256, 319, 324, 333, 334, 335, 336, 337, 352, 387, 388, 390, 393, 394, 395, 396, 398, 400, 401, 406, 409, 412], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 75, 79, 98, 99, 103, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 132, 133, 137, 138, 139, 140, 141, 144, 145, 153, 160, 166, 168, 169, 174, 178, 179, 200, 201, 207, 209, 225, 226, 241, 242, 245, 246, 247, 250, 251, 252, 253, 262, 263, 271, 280, 292, 300, 302, 315, 317, 320, 322, 324, 325, 389, 393, 394, 395, 397, 398, 400, 404, 405, 406, 408, 409, 412], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 92, 94, 97, 98, 99, 100, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 165, 166, 168, 169, 170, 171, 173, 177, 178, 179, 181, 183, 184, 188, 190, 191, 192, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 211, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 295, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 380, 384, 389, 390, 393, 394, 395, 396, 398, 405, 408, 409, 411, 412], "behavior": [1, 2, 3, 4, 14, 15, 21, 43, 62, 79, 115, 119, 137, 138, 144, 145, 161, 166, 169, 179, 184, 196, 201, 209, 218, 222, 242, 243, 246, 272, 307, 315, 324, 351, 366, 388, 394, 396, 405, 406, 407, 409], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 160, 166, 169, 179, 197, 198, 246, 285, 289, 290, 291, 372, 382, 383, 388, 393, 394, 397, 398, 406, 407, 412], "choos": [1, 11, 128, 242, 246, 319, 386, 388, 389, 393, 394, 395, 405, 406, 409], "follow": [1, 2, 3, 6, 7, 8, 11, 43, 48, 50, 51, 53, 54, 62, 73, 75, 76, 77, 78, 79, 80, 81, 92, 111, 112, 115, 118, 119, 120, 124, 125, 131, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 156, 177, 183, 203, 207, 209, 225, 226, 240, 242, 244, 246, 247, 282, 285, 286, 287, 298, 299, 300, 301, 302, 303, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 353, 370, 388, 389, 390, 393, 394, 395, 396, 399, 400, 404, 405, 406, 407, 409, 411, 412], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 373, 393, 395, 411], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 43, 73, 160, 174, 209, 220, 221, 238, 262, 263, 284, 352, 353, 355, 363, 366, 370, 373, 374, 393, 394, 395, 396, 398, 405, 406, 409, 411, 412], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 93, 94, 98, 99, 101, 103, 107, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 134, 135, 136, 137, 138, 141, 144, 145, 156, 157, 160, 163, 164, 168, 171, 173, 176, 177, 179, 181, 182, 183, 191, 193, 197, 200, 201, 203, 205, 206, 207, 209, 211, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 253, 254, 255, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 288, 289, 291, 292, 295, 301, 302, 316, 317, 319, 322, 324, 332, 333, 334, 335, 336, 351, 352, 355, 366, 389, 390, 394, 395, 396, 397, 398, 400, 401, 405, 406, 407, 409, 411, 412], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 242, 246, 373, 393, 394, 395, 396, 400, 402, 405, 406, 409, 411], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 39, 41, 43, 44, 52, 54, 58, 59, 73, 75, 76, 79, 92, 94, 97, 99, 100, 102, 105, 115, 116, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 176, 183, 188, 191, 195, 196, 197, 198, 205, 207, 209, 220, 221, 235, 238, 240, 241, 242, 244, 246, 252, 253, 258, 264, 265, 273, 281, 282, 287, 291, 339, 342, 343, 344, 345, 347, 348, 349, 350, 353, 366, 367, 382, 383, 388, 389, 393, 394, 395, 396, 398, 399, 400, 402, 405, 406, 407, 408, 409, 411, 412], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 373, 393, 394, 402], "rand_step": [1, 2, 3, 34, 57, 113, 114, 115, 116, 118, 119, 120, 126, 127, 131, 132, 133, 137, 138, 144, 145, 176, 197, 207, 407, 411, 412], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 393], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 75, 77, 79, 80, 81, 393, 394, 395], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 43, 44, 58, 59, 73, 75, 76, 77, 79, 80, 81, 91, 92, 99, 100, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 184, 195, 200, 209, 223, 246, 249, 262, 263, 319, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 361, 386, 389, 393, 394, 395, 396, 397, 400, 402, 407, 411, 412], "pad": [1, 2, 3, 23, 51, 61, 75, 77, 79, 80, 81, 160, 225, 226, 228, 229, 246, 250, 251, 252, 367], "along": [1, 2, 3, 14, 15, 23, 25, 48, 50, 53, 54, 55, 56, 63, 75, 77, 79, 80, 81, 87, 92, 94, 99, 100, 105, 107, 118, 120, 159, 160, 161, 179, 181, 184, 191, 199, 246, 247, 250, 251, 256, 281, 285, 288, 289, 302, 317, 324, 388, 393, 394, 396, 397, 399, 405, 406, 407, 409], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 78, 85, 91, 92, 95, 105, 106, 109, 110, 115, 119, 137, 138, 144, 145, 153, 156, 159, 160, 164, 183, 196, 197, 199, 200, 201, 203, 205, 209, 248, 288, 298, 309, 370, 387, 394, 395, 404, 405, 406, 407, 409, 412], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 100, 119, 156, 184, 195, 219, 221, 250, 251, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 390, 396], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 34, 37, 56, 57, 59, 77, 113, 114, 115, 118, 119, 120, 137, 138, 144, 145, 146, 147, 174, 184, 207, 209, 235, 250, 251, 265, 271, 281, 282, 286, 287, 289, 328, 333, 367, 393, 395, 396, 397, 398, 399, 405, 406], "valid": [1, 2, 3, 23, 48, 50, 51, 63, 82, 105, 148, 156, 184, 201, 209, 220, 221, 225, 226, 247, 250, 251, 262, 263, 316, 333, 334, 335, 336, 367, 390, 412], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 366, 386, 393, 394], "strategi": [1, 2, 16, 79, 97, 128, 153, 238, 251, 260, 388, 390, 393, 394, 398, 405, 406, 409], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 55, 56, 59, 62, 64, 65, 66, 67, 68, 70, 94, 115, 119, 125, 131, 137, 138, 139, 140, 144, 145, 146, 148, 157, 159, 160, 170, 177, 195, 196, 197, 200, 201, 206, 207, 209, 220, 221, 225, 226, 250, 251, 252, 253, 281, 285, 286, 289, 292, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 325, 331, 353, 370, 380, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 412], "organ": [1, 2, 407, 409], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 115, 118, 119, 120, 137, 138, 141, 144, 145, 157, 160, 166, 169, 170, 188, 195, 206, 207, 209, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 296, 304, 309, 324, 331, 351, 353, 388, 389, 394, 397, 398, 399, 400, 401, 402, 405, 407, 411], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 75, 76, 79, 94, 97, 111, 112, 115, 119, 124, 125, 128, 137, 138, 139, 140, 144, 145, 156, 160, 168, 179, 186, 201, 202, 209, 235, 240, 241, 242, 244, 245, 246, 247, 249, 252, 253, 254, 265, 315, 317, 319, 328, 333, 334, 335, 339, 340, 341, 366, 370, 372, 382, 383, 388, 389, 390, 393, 394, 395, 397, 399, 401, 404, 405, 406, 407, 408, 409, 412], "how": [1, 2, 3, 11, 18, 19, 20, 24, 43, 49, 59, 79, 91, 92, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 209, 254, 285, 299, 301, 314, 316, 317, 319, 353, 355, 370, 387, 388, 393, 394, 395, 396, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "tabl": [1, 388, 394, 398], "summar": [1, 3, 407], "what": [1, 3, 8, 11, 32, 49, 62, 73, 92, 99, 115, 119, 137, 138, 144, 145, 170, 197, 211, 218, 286, 302, 313, 317, 324, 387, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 411, 412], "expect": [1, 2, 3, 4, 7, 30, 43, 52, 62, 63, 92, 98, 99, 115, 119, 131, 134, 137, 138, 144, 145, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 183, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 240, 241, 242, 244, 245, 246, 252, 253, 262, 263, 282, 288, 291, 299, 300, 301, 302, 303, 304, 306, 307, 308, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 374, 387, 388, 389, 390, 393, 395, 396, 397, 398, 399, 400, 405, 406, 407, 409, 412], "n": [1, 2, 3, 6, 7, 25, 26, 29, 33, 41, 42, 43, 47, 54, 115, 119, 137, 138, 144, 145, 160, 168, 173, 202, 209, 240, 241, 244, 249, 262, 263, 284, 289, 299, 300, 308, 317, 332, 367, 388, 390, 394, 395, 396, 398, 405, 406, 409, 412], "b": [1, 2, 3, 7, 8, 23, 30, 31, 37, 48, 50, 52, 53, 54, 56, 59, 60, 86, 105, 240, 241, 244, 245, 252, 253, 255, 256, 264, 273, 292, 333, 334, 335, 336, 337, 339, 353, 388, 394, 408, 409], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 91, 92, 94, 98, 105, 115, 116, 118, 119, 132, 133, 137, 138, 144, 145, 153, 156, 160, 166, 169, 170, 183, 187, 188, 196, 198, 205, 207, 209, 211, 218, 240, 244, 262, 263, 281, 288, 299, 323, 333, 334, 335, 336, 337, 339, 353, 360, 370, 372, 384, 387, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "p": [1, 2, 4, 94, 97, 116, 142, 143, 224], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 73, 75, 77, 79, 80, 81, 111, 112, 115, 119, 124, 125, 137, 138, 139, 140, 144, 145, 164, 166, 167, 169, 176, 183, 188, 192, 196, 197, 199, 200, 201, 203, 205, 206, 209, 240, 243, 244, 247, 252, 267, 271, 272, 288, 291, 298, 299, 300, 302, 303, 304, 306, 307, 308, 315, 317, 319, 320, 321, 322, 324, 325, 372, 382, 383, 384, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 412], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 94, 105, 115, 118, 119, 137, 138, 144, 145, 166, 167, 169, 176, 179, 199, 201, 211, 246, 247, 253, 254, 285, 288, 289, 291, 292, 298, 299, 300, 302, 303, 304, 306, 307, 308, 315, 317, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336, 353, 361, 372, 382, 383, 384, 386, 388, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 405, 406, 407, 409, 412], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 80, 81, 86, 87, 92, 99, 100, 105, 107, 113, 114, 115, 118, 119, 120, 121, 137, 138, 144, 145, 146, 147, 153, 159, 160, 161, 173, 179, 181, 184, 191, 194, 199, 202, 207, 225, 226, 227, 232, 242, 244, 246, 247, 250, 251, 252, 255, 256, 261, 264, 268, 269, 270, 271, 274, 281, 284, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 384, 388, 393, 394, 395, 396, 397, 405, 406, 407, 409], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 94, 105, 111, 112, 115, 116, 119, 124, 125, 128, 134, 137, 138, 139, 140, 141, 144, 145, 152, 159, 161, 184, 191, 197, 198, 201, 207, 209, 218, 224, 236, 240, 244, 246, 262, 263, 284, 300, 301, 302, 308, 311, 315, 316, 317, 319, 320, 322, 324, 325, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 370, 388, 389, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "adapt": [1, 24, 154, 195, 222, 316, 393, 407], "equal": [1, 14, 15, 17, 73, 92, 99, 100, 132, 135, 136, 137, 144, 178, 179, 225, 226, 240, 242, 244, 246, 247, 253, 323, 328, 361, 382, 383, 393, 395, 408], "introduc": [1, 2, 137, 144, 240, 242, 244, 246, 262, 263, 393, 405], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 63, 64, 65, 66, 67, 68, 75, 81, 86, 87, 94, 105, 107, 111, 112, 115, 118, 119, 120, 124, 125, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 156, 183, 197, 201, 203, 209, 211, 228, 242, 246, 269, 289, 290, 291, 353, 361, 373, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 409, 411, 412], "confus": [1, 25, 43, 115, 119, 137, 138, 144, 145, 201, 209], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 75, 77, 79, 80, 81, 86, 87, 88, 94, 97, 98, 99, 100, 101, 103, 107, 115, 118, 119, 120, 131, 137, 138, 144, 145, 163, 167, 168, 185, 192, 199, 203, 207, 209, 238, 240, 242, 246, 256, 257, 280, 282, 287, 289, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 333, 351, 367, 382, 383, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 408, 411, 412], "better": [1, 3, 8, 9, 14, 15, 23, 242, 246, 389, 395, 397, 407, 411], "consist": [1, 2, 3, 43, 49, 52, 59, 60, 76, 79, 115, 119, 137, 138, 144, 145, 177, 206, 209, 226, 247, 393, 394, 395, 407, 408, 412], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 79, 115, 119, 129, 130, 137, 138, 144, 145, 201, 285, 289, 393, 395, 397, 398, 400, 405, 406, 407, 412], "keep": [1, 3, 4, 7, 8, 15, 49, 52, 59, 60, 94, 98, 105, 137, 144, 179, 183, 205, 207, 209, 218, 262, 263, 363, 370, 393, 394, 395, 396, 400, 401, 402, 406, 407, 409, 411, 412], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 73, 76, 183, 205, 300, 303, 306, 308, 320, 322, 324, 325, 389, 393, 394, 398, 399, 405, 406, 409, 412], "interchang": [1, 252, 253, 395, 397, 401, 408, 409], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 43, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 100, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 168, 178, 189, 201, 207, 209, 211, 225, 226, 234, 240, 242, 246, 247, 252, 253, 282, 285, 289, 299, 301, 302, 303, 306, 307, 308, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 328, 333, 366, 370, 389, 393, 394, 396, 400, 405, 406, 407, 409, 412], "wherea": [1, 2, 22, 79, 111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 168, 209, 317, 390, 401], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 59, 62, 64, 65, 66, 67, 68, 76, 79, 81, 91, 92, 115, 119, 131, 137, 138, 144, 145, 183, 197, 201, 205, 207, 209, 238, 239, 242, 244, 246, 250, 251, 262, 263, 285, 289, 302, 304, 307, 308, 322, 331, 333, 334, 335, 336, 337, 393, 394, 395, 397, 399, 400, 401, 405, 406, 407, 408], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 73, 79, 92, 99, 105, 115, 119, 137, 138, 144, 145, 184, 290, 291, 361, 370, 388, 393, 394, 395, 400, 404, 411, 412], "doesn": [1, 4, 12, 105, 132, 166, 169, 397], "understood": [1, 393], "serv": [1, 18, 20, 21, 121, 409, 412], "basi": [1, 105, 252, 409], "simplest": [1, 105, 292, 393, 395, 396, 398, 405, 406, 409, 412], "scenario": [1, 2, 129, 130, 137, 146, 147, 351, 393, 398, 405, 406, 407], "transit": [1, 43, 75, 79, 92, 100, 105, 115, 119, 137, 138, 144, 145, 209, 222, 294, 393, 396, 397, 398, 400, 405, 407, 409], "sampl": [1, 4, 8, 9, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 103, 105, 107, 115, 119, 131, 134, 137, 138, 144, 145, 153, 159, 160, 184, 188, 212, 213, 216, 217, 220, 221, 223, 233, 238, 239, 243, 249, 250, 251, 260, 261, 262, 263, 266, 271, 272, 276, 281, 282, 283, 285, 286, 287, 288, 289, 299, 300, 301, 302, 303, 304, 306, 316, 318, 319, 324, 325, 361, 367, 370, 373, 386, 388, 393, 394, 395, 396, 397, 398, 400, 402, 405, 406, 408, 411, 412], "attent": [1, 2, 8, 393, 396, 412], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 115, 119, 131, 135, 136, 137, 138, 144, 145, 164, 168, 179, 183, 197, 200, 201, 203, 205, 207, 209, 218, 223, 224, 235, 236, 238, 240, 242, 244, 246, 249, 254, 263, 265, 269, 276, 281, 282, 284, 287, 288, 289, 290, 291, 293, 298, 303, 304, 306, 317, 332, 333, 334, 335, 336, 337, 339, 362, 366, 380, 388, 390, 393, 394, 395, 397, 398, 399, 400, 401, 406, 407, 412], "built": [1, 2, 3, 5, 7, 94, 111, 112, 118, 124, 125, 134, 135, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 326, 331, 378, 380, 381, 384, 393, 394, 395, 396, 399, 401, 407, 409, 412], "flatten": [1, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 105, 157, 173, 367, 386, 396, 406], "suffici": [1, 3, 4, 393], "preprocess": [1, 2, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 394], "popul": [1, 2, 3, 14, 15, 16, 49, 52, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 176, 197, 254, 317, 393, 395, 396, 398, 400, 407, 409], "replaybuff": [1, 2, 14, 15, 16, 34, 49, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 99, 109, 160, 184, 188, 209, 304, 309, 331, 378, 380, 386, 395, 400, 402, 405, 406, 408, 409, 411], "lazytensorstorag": [1, 2, 49, 52, 59, 60, 91, 105, 188, 209, 395, 402, 406, 409], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 52, 105, 115, 116, 119, 137, 138, 144, 145, 152, 157, 177, 197, 209, 224, 274, 281, 284, 285, 286, 310, 312, 313, 324, 333, 336, 344, 345, 349, 350, 351, 380, 389, 393, 405, 406, 409, 411, 412], "reshap": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 99, 105, 157, 242, 246, 247, 351, 395, 405, 406], "extend": [1, 2, 8, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 91, 92, 94, 95, 99, 100, 103, 105, 106, 109, 110, 159, 188, 209, 222, 317, 367, 389, 390, 393, 394, 395, 396, 400, 402, 405, 406, 408, 409, 411], "slice": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 153, 159, 409], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 48, 49, 50, 52, 53, 59, 60, 105, 123, 254, 400, 405, 406], "achiev": [1, 2, 3, 4, 43, 115, 119, 123, 137, 138, 144, 145, 196, 209, 219, 224, 285, 367, 390, 393, 394, 395, 396, 405, 406, 407, 409, 412], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 94, 105, 115, 116, 119, 123, 137, 138, 139, 144, 145, 146, 147, 157, 160, 183, 200, 201, 203, 206, 207, 209, 215, 218, 225, 226, 228, 229, 230, 231, 232, 237, 242, 246, 247, 248, 252, 253, 280, 289, 296, 302, 304, 309, 320, 322, 331, 353, 367, 374, 375, 376, 380, 382, 383, 388, 393, 394, 395, 396, 398, 401, 405, 406, 407, 408, 409, 411, 412], "multidimension": [1, 2, 59, 91, 92, 409], "slicesampl": [1, 2, 73, 92, 409], "sampler": [1, 2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 105, 107, 184, 304, 309, 331, 393, 395, 405, 406, 409], "One": [1, 2, 4, 8, 25, 26, 29, 33, 41, 42, 47, 63, 105, 111, 112, 137, 144, 160, 188, 203, 220, 221, 260, 288, 292, 323, 328, 357, 393, 394, 409, 412], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 94, 99, 100, 101, 102, 103, 105, 107, 111, 115, 116, 119, 124, 135, 137, 138, 139, 140, 141, 144, 145, 146, 153, 156, 157, 160, 163, 170, 174, 177, 179, 181, 192, 196, 197, 198, 201, 202, 207, 209, 225, 226, 235, 242, 246, 247, 250, 251, 252, 253, 265, 276, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 323, 324, 325, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 389, 393, 394, 395, 396, 398, 404, 407, 409], "ensur": [1, 2, 3, 43, 49, 59, 91, 92, 98, 115, 119, 137, 138, 144, 145, 153, 160, 183, 195, 201, 203, 207, 209, 242, 246, 281, 388, 394, 395, 407, 409], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 94, 105, 107, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 159, 161, 166, 169, 170, 171, 177, 179, 181, 185, 186, 188, 192, 195, 197, 199, 207, 208, 209, 211, 215, 218, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 237, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 257, 260, 261, 262, 264, 265, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 292, 293, 296, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 367, 370, 380, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 411, 412], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 73, 243, 271, 272, 298, 387, 393, 394, 395, 396, 399, 405, 406, 408, 412], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 32, 43, 48, 50, 62, 101, 105, 115, 119, 123, 128, 137, 138, 139, 140, 144, 145, 160, 163, 173, 183, 186, 198, 201, 205, 207, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 255, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 285, 286, 287, 288, 292, 295, 298, 308, 321, 322, 332, 337, 353, 370, 384, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 409, 411, 412], "dimension": [1, 49, 52, 59, 60, 168, 242, 246, 333, 338, 346, 406], "num_slic": [1, 2, 73, 79, 92, 99, 100, 409], "4": [1, 2, 3, 7, 25, 30, 31, 34, 37, 41, 42, 43, 49, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 99, 100, 107, 111, 112, 113, 114, 115, 119, 124, 125, 126, 127, 128, 131, 133, 137, 138, 142, 143, 144, 145, 153, 154, 156, 157, 160, 170, 188, 195, 196, 207, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 249, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 293, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 351, 352, 388, 392, 393, 394, 395, 396, 398, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 34, 57, 157, 188, 396, 400, 409, 411], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 34, 43, 57, 157, 160, 188, 370, 373, 380, 390, 393, 394, 395, 396, 400, 402, 405, 406, 409, 411], "dim": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 160, 161, 181, 197, 202, 207, 245, 269, 274, 284, 384, 394, 395, 405, 407, 409], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 91, 92, 99, 100, 115, 119, 123, 132, 137, 138, 141, 144, 145, 157, 164, 183, 197, 200, 201, 203, 205, 209, 242, 246, 247, 254, 274, 288, 290, 291, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 351, 353, 355, 388, 390, 393, 394, 395, 396, 397, 398, 399, 401, 405, 406, 407, 409, 412], "ndim": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 86, 87, 91, 92, 105, 107, 115, 119, 137, 138, 144, 145, 209, 284], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 105, 115, 119, 132, 138, 139, 140, 141, 144, 145, 351, 381, 386, 393, 394, 395, 397, 404, 411, 412], "make_env": [1, 3, 137, 144, 147, 207, 351, 375, 376, 393, 394, 412], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 91, 97, 115, 119, 137, 138, 144, 145, 201, 222, 234, 265, 282, 286, 287, 288, 289, 309, 319, 372, 386, 390, 393, 394, 397, 398, 402, 409, 412], "behav": [1, 3, 121, 131, 240, 244, 260, 307, 315, 317, 408], "iif": 1, "accordingli": [1, 2, 92, 195, 196, 244, 286, 396], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 100, 105, 107, 113, 114, 115, 118, 119, 120, 121, 122, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 154, 156, 157, 160, 164, 168, 170, 171, 177, 179, 181, 183, 185, 186, 188, 191, 192, 195, 196, 197, 199, 200, 201, 203, 205, 209, 210, 215, 222, 223, 224, 225, 226, 228, 229, 230, 232, 235, 237, 240, 241, 242, 244, 245, 246, 247, 249, 252, 253, 254, 257, 260, 264, 274, 276, 277, 278, 279, 281, 282, 285, 287, 288, 291, 292, 293, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 311, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 369, 388, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 79, 91, 105, 156, 170, 211, 281, 288, 398, 399, 401, 405, 406], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 92, 94, 100, 115, 119, 121, 132, 135, 136, 137, 138, 144, 145, 156, 157, 160, 184, 196, 197, 198, 200, 201, 209, 212, 213, 218, 236, 262, 263, 267, 271, 284, 299, 301, 302, 309, 316, 319, 321, 322, 356, 390, 393, 394, 395, 396, 399, 405, 406, 407, 409, 411, 412], "fulli": [1, 8, 43, 115, 119, 137, 138, 144, 145, 209, 241, 245, 394, 399, 407, 409], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 94, 95, 98, 100, 101, 103, 105, 106, 107, 109, 110, 115, 116, 119, 132, 137, 138, 139, 140, 144, 145, 146, 147, 154, 156, 173, 183, 184, 188, 201, 203, 207, 209, 211, 219, 224, 225, 226, 232, 247, 256, 280, 284, 288, 289, 290, 291, 299, 300, 302, 303, 304, 306, 307, 308, 315, 317, 319, 320, 321, 322, 324, 325, 333, 335, 336, 351, 358, 370, 387, 389, 393, 394, 395, 398, 399, 405, 406, 407, 409, 411, 412], "consecut": [1, 3, 73, 98, 123, 246, 262, 263, 353, 396, 397, 400, 406, 409, 412], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 79, 115, 116, 118, 119, 132, 133, 137, 138, 144, 145, 183, 205, 209, 299, 370, 384, 394, 395, 397, 398], "therebi": [1, 24, 351, 389, 393, 394], "interrupt": [1, 2, 119, 284, 339], "These": [1, 2, 7, 54, 76, 81, 108, 146, 183, 205, 388, 389, 393, 395, 405, 406, 407, 409, 412], "tool": [1, 2, 3, 5, 396, 397, 405, 407, 409, 412], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 115, 118, 119, 137, 138, 144, 145, 149, 152, 390, 393, 395, 396, 397, 400, 401, 407], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 386], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 386], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 52, 59, 60, 73, 81, 94, 116, 117, 137, 144, 207, 393, 394, 395, 396, 405, 406, 407, 408, 412], "synchron": [1, 14, 19, 21, 48, 50, 53, 132, 382, 383, 394, 395, 405], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 43, 115, 119, 132, 137, 138, 144, 145, 166, 169, 196, 201, 207, 209, 212, 216, 233, 242, 243, 246, 260, 270, 271, 272, 285, 289, 317, 351, 366, 388, 389, 393, 394, 396, 405, 406, 411, 412], "find": [1, 4, 6, 7, 18, 19, 20, 49, 51, 61, 99, 100, 220, 221, 244, 262, 263, 364, 368, 393, 394, 398, 399, 405, 406], "folder": [1, 2, 48, 50, 53, 146, 394], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 113, 114, 115, 116, 118, 119, 120, 121, 129, 130, 131, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 153, 159, 160, 163, 164, 166, 167, 169, 172, 177, 178, 179, 183, 191, 193, 197, 198, 200, 201, 203, 205, 207, 209, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 252, 253, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 288, 289, 291, 292, 295, 296, 299, 300, 302, 311, 315, 317, 319, 320, 321, 322, 324, 325, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 365, 370, 373, 382, 383, 384, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 411, 412], "variou": [1, 2, 3, 242, 246, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 326, 331, 353, 382, 383, 393, 394, 395, 397, 398, 399, 401, 405, 406, 409, 412], "machin": [1, 2, 7, 18, 19, 20, 43, 78, 123, 405, 406, 411], "wonder": 1, "why": [1, 2, 3, 218, 405, 407, 412], "instead": [1, 4, 7, 8, 12, 14, 15, 16, 25, 43, 79, 115, 119, 137, 138, 144, 145, 173, 197, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 299, 301, 302, 304, 307, 308, 309, 315, 316, 319, 320, 321, 322, 331, 333, 337, 341, 384, 388, 389, 397, 398, 402, 407, 409, 412], "lower": [1, 2, 3, 21, 27, 163, 207, 266, 267, 292, 395, 405, 407], "io": [1, 11, 73, 79, 124, 125, 132, 135, 136, 244, 245], "footprint": [1, 2, 409], "commun": [1, 2, 3, 137, 144, 387, 395, 412], "yet": [1, 111, 112, 124, 408], "plai": [1, 3, 139, 140, 145, 160, 394, 395, 399, 409, 412], "role": [1, 3, 130, 394, 399, 412], "opposit": [1, 405], "direct": [1, 2, 43, 115, 119, 137, 138, 144, 145, 209, 240, 244, 317, 394, 399], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 43, 49, 52, 59, 60, 73, 81, 91, 92, 100, 105, 115, 119, 137, 138, 139, 140, 141, 144, 145, 209, 211, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 252, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 281, 282, 284, 286, 287, 292, 295, 351, 353, 389, 393, 394, 395, 396, 397, 398, 399, 405, 407, 408, 409, 411, 412], "faster": [1, 2, 4, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 80, 81, 132, 333, 334, 335, 336, 396, 405, 406], "share": [1, 3, 6, 8, 23, 48, 50, 52, 53, 59, 60, 62, 84, 86, 87, 88, 92, 94, 99, 101, 103, 107, 116, 137, 144, 207, 242, 246, 252, 253, 277, 278, 279, 299, 300, 301, 302, 303, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 384, 386, 388, 395, 396, 402, 404, 405, 406, 411, 412], "among": [1, 3, 139, 140, 405, 406], "prohibit": [1, 3, 105], "slow": [1, 3, 4, 11, 48, 50, 53], "compar": [1, 3, 79, 105, 300, 302, 315, 320, 322, 324, 325, 366, 389, 393, 395, 398, 399, 405, 406, 409, 412], "gpu": [1, 7, 8, 43, 86, 87, 107, 115, 119, 120, 123, 137, 138, 144, 145, 209, 393, 395, 396, 405, 406, 412], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 59, 62, 73, 91, 92, 99, 105, 111, 112, 119, 145, 156, 179, 207, 220, 221, 222, 223, 233, 236, 240, 242, 244, 246, 249, 261, 270, 271, 285, 289, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 388, 389, 393, 394, 395, 398, 405, 406, 407, 409, 411, 412], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 92, 94, 97, 99, 100, 103, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 141, 144, 145, 146, 147, 156, 157, 161, 163, 164, 183, 191, 192, 197, 199, 200, 201, 203, 205, 209, 220, 221, 222, 224, 238, 239, 242, 246, 250, 251, 252, 253, 262, 263, 276, 280, 281, 284, 285, 286, 288, 289, 292, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 327, 331, 333, 334, 335, 336, 337, 341, 351, 360, 381, 393, 394, 395, 398, 401, 405, 406, 409, 412], "build": [1, 3, 7, 23, 30, 43, 49, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 120, 121, 124, 125, 129, 130, 132, 135, 136, 137, 138, 141, 144, 145, 146, 147, 188, 207, 209, 223, 242, 246, 249, 283, 285, 289, 370, 377, 378, 379, 388, 390, 395, 396, 398, 399, 400, 401, 405, 406, 407, 408, 411, 412], "mani": [1, 2, 3, 4, 52, 111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 132, 133, 141, 299, 301, 308, 316, 319, 388, 393, 394, 395, 397, 398, 400, 402, 405, 406, 407, 409, 412], "eg": [1, 2, 3, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 101, 103, 107, 113, 114, 115, 118, 119, 120, 121, 123, 137, 138, 141, 144, 145, 168, 195, 201, 252, 280, 353], "gymnasium": [1, 2, 3, 5, 12, 115, 118, 119, 120, 126, 127, 137, 138, 144, 145, 149, 152, 171, 192, 195, 206, 394, 395, 407, 411], "warn": [1, 3, 220, 221, 238, 239, 262, 263, 394], "quickli": [1, 3, 394, 405, 406, 412], "becom": [1, 3, 4, 21, 240, 244, 405, 406, 412], "quit": [1, 3, 11, 73, 115, 119, 137, 138, 144, 145, 388, 393, 394, 395, 398, 405, 406, 412], "annoi": [1, 3], "By": [1, 2, 3, 30, 31, 37, 56, 113, 114, 115, 118, 119, 120, 121, 129, 130, 137, 138, 139, 140, 141, 144, 145, 146, 147, 274, 289, 317, 366, 384, 389, 393, 405, 408, 409, 412], "filter": [1, 2, 3, 4, 63, 92, 99, 100, 299, 300, 302, 303, 307, 308, 315, 319, 320, 322, 397], "out": [1, 2, 3, 4, 5, 9, 21, 43, 48, 50, 53, 63, 75, 79, 84, 92, 99, 100, 115, 119, 137, 138, 139, 140, 144, 145, 197, 209, 211, 240, 241, 244, 250, 251, 254, 255, 256, 263, 276, 280, 281, 282, 285, 286, 287, 288, 289, 317, 329, 330, 389, 390, 393, 394, 395, 396, 397, 398, 400, 405, 406, 407, 409, 411, 412], "still": [1, 2, 3, 9, 64, 79, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 221, 316, 317, 393, 394, 396, 404, 407, 409, 412], "wish": [1, 3, 11, 14, 15, 17, 79, 152, 399, 409], "displai": [1, 3, 7, 115, 119, 137, 138, 144, 145, 370, 390, 393, 394, 406, 407], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 161, 164, 166, 169, 170, 171, 173, 176, 177, 178, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 195, 197, 199, 200, 201, 202, 203, 205, 207, 209, 211, 218, 219, 221, 222, 223, 224, 225, 226, 228, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 262, 263, 264, 265, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 328, 331, 333, 334, 335, 336, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 360, 363, 364, 366, 367, 368, 370, 384, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "central": [2, 252, 253, 254, 393, 394, 397, 405, 406, 409], "part": [2, 3, 4, 8, 43, 54, 73, 76, 77, 79, 80, 81, 111, 115, 119, 124, 135, 137, 138, 144, 145, 159, 179, 188, 191, 209, 218, 242, 246, 293, 361, 384, 393, 395, 396, 402, 405, 407, 412], "algorithm": [2, 3, 8, 9, 131, 153, 299, 319, 320, 322, 386, 389, 390, 393, 394, 395, 396, 398, 399, 400, 401, 405, 406, 408, 409, 411], "implement": [2, 3, 9, 12, 14, 15, 16, 43, 89, 101, 102, 115, 119, 131, 132, 137, 138, 144, 145, 157, 164, 166, 167, 171, 174, 177, 185, 186, 192, 195, 200, 201, 207, 209, 225, 240, 241, 242, 243, 244, 245, 246, 270, 271, 272, 299, 300, 302, 305, 306, 307, 313, 315, 317, 318, 319, 321, 322, 324, 351, 361, 375, 388, 390, 393, 394, 395, 396, 405, 406, 407, 411], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 30, 43, 49, 52, 54, 59, 60, 73, 75, 79, 81, 86, 98, 100, 105, 111, 112, 115, 116, 119, 123, 124, 125, 137, 138, 144, 145, 160, 177, 183, 186, 203, 206, 207, 209, 211, 223, 246, 252, 253, 254, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 353, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "give": [2, 3, 7, 59, 76, 115, 119, 131, 137, 138, 144, 145, 160, 387, 389, 393, 394, 405, 406, 407, 408, 411], "abil": [2, 317, 407, 409], "panel": [2, 395], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 75, 81, 84, 105, 157, 160, 170, 242, 246, 302, 307, 315, 322, 326, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "includ": [2, 3, 4, 7, 9, 21, 43, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 101, 103, 107, 115, 119, 131, 135, 136, 137, 138, 144, 145, 196, 201, 207, 209, 242, 246, 299, 302, 317, 322, 373, 388, 390, 393, 394, 395, 396, 405, 406, 407, 409, 412], "almost": [2, 396], "physic": [2, 6, 7, 84, 137, 138, 141, 390, 393, 405, 406, 407], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 73, 86, 87, 88, 101, 103, 107, 115, 118, 119, 120, 137, 138, 144, 145, 209, 254, 262, 263, 304, 317, 331, 393, 394, 396, 405, 406, 408, 409], "liststorag": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 409], "veri": [2, 3, 124, 125, 394, 397, 400, 405, 407, 409, 411, 412], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 37, 43, 48, 50, 52, 53, 55, 56, 59, 60, 73, 79, 92, 94, 97, 99, 100, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 156, 157, 186, 209, 218, 247, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 326, 328, 331, 388, 390, 393, 395, 396, 397, 398, 399, 405, 406, 407, 409, 412], "complex": [2, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 393, 394, 397, 398], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 100, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 159, 160, 161, 164, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 215, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 297, 299, 300, 302, 303, 304, 306, 307, 308, 311, 312, 315, 317, 319, 320, 321, 322, 324, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 411, 412], "contigu": [2, 3, 8, 27, 30, 64, 76, 79, 80, 115, 119, 137, 138, 144, 145, 215, 395, 396, 405, 406, 407, 409, 411, 412], "tensorstorag": [2, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 105, 108, 400, 409], "lazymemmapstorag": [2, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 159, 160, 393, 394, 396, 400, 405, 408, 409], "citizen": 2, "pytre": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 108], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 92, 94, 99, 103, 105, 113, 114, 115, 118, 119, 120, 137, 138, 144, 145, 177, 179, 209, 224, 228, 234, 235, 242, 245, 246, 247, 254, 257, 261, 264, 265, 281, 282, 286, 287, 292, 299, 300, 302, 303, 307, 308, 310, 315, 317, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336, 364, 366, 368, 377, 409], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 43, 48, 50, 53, 63, 92, 97, 99, 100, 115, 118, 119, 120, 129, 130, 137, 138, 144, 145, 146, 147, 197, 201, 209, 285, 289, 302, 322, 324, 366, 382, 383, 384, 390, 394, 395, 397, 399, 405, 407, 412], "nest": [2, 3, 23, 30, 31, 34, 36, 37, 43, 44, 48, 50, 52, 53, 56, 57, 58, 69, 86, 87, 90, 94, 107, 115, 118, 119, 120, 137, 138, 144, 145, 160, 195, 198, 209, 219, 284, 333, 334, 335, 336, 337, 351, 390, 394, 395, 406, 407, 409, 411], "construct": [2, 3, 5, 23, 43, 49, 52, 59, 60, 62, 73, 94, 115, 118, 119, 137, 138, 139, 144, 145, 166, 169, 209, 211, 242, 246, 267, 289, 370, 388, 394, 395, 396, 398, 405, 407, 409, 412], "ram": [2, 118, 120, 401, 409], "prealloc": [2, 3, 137, 144, 407], "ve": [2, 54, 393, 396, 402], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 94, 98, 115, 119, 123, 129, 130, 137, 138, 144, 145, 177, 195, 196, 200, 221, 239, 240, 244, 254, 263, 284, 299, 317, 319, 321, 393, 394, 395, 396, 404, 405, 406, 407, 409, 412], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 80, 81, 105, 113, 114, 115, 119, 123, 137, 138, 139, 140, 144, 145, 160, 254, 360, 388, 389, 390, 393, 394, 395, 396, 397, 398, 400, 402, 405, 406, 407, 409, 411, 412], "start": [2, 3, 4, 5, 14, 21, 24, 62, 63, 73, 81, 92, 99, 100, 116, 119, 128, 137, 144, 165, 218, 365, 392, 393, 394, 403, 406, 407, 409, 410, 412], "replay_buff": [2, 8, 14, 15, 16, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 367, 380, 393, 394, 395, 400, 405, 406, 409], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 34, 43, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 153, 154, 156, 157, 159, 160, 163, 170, 171, 176, 177, 179, 181, 183, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 200, 205, 207, 209, 210, 215, 218, 219, 223, 224, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 252, 253, 254, 257, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 292, 293, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 351, 353, 363, 366, 380, 388, 389, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "rb": [2, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 99, 100, 105, 160, 188, 209, 394, 396, 400, 402, 406, 408, 409, 411], "10": [2, 3, 7, 22, 23, 25, 26, 29, 33, 39, 43, 49, 52, 54, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 94, 99, 100, 105, 107, 111, 112, 115, 116, 119, 124, 125, 131, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 157, 159, 160, 196, 198, 199, 209, 223, 224, 227, 228, 230, 232, 234, 238, 239, 240, 241, 242, 244, 245, 246, 249, 261, 262, 263, 274, 285, 292, 296, 300, 304, 306, 313, 319, 320, 321, 325, 331, 333, 334, 335, 336, 339, 353, 361, 390, 393, 394, 395, 396, 397, 398, 402, 405, 406, 407, 409, 411, 412], "add": [2, 3, 4, 6, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 91, 94, 95, 105, 106, 109, 110, 115, 119, 137, 138, 144, 145, 160, 177, 201, 209, 242, 246, 255, 283, 299, 365, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 409, 411], "string": [2, 18, 19, 20, 43, 51, 63, 82, 115, 119, 129, 135, 137, 138, 144, 145, 152, 183, 195, 205, 209, 242, 246, 281, 284, 285, 286, 298, 352, 369, 389, 393, 395, 396, 409], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 39, 41, 49, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 94, 99, 100, 105, 107, 134, 137, 144, 153, 160, 184, 193, 196, 197, 220, 221, 225, 226, 240, 241, 244, 276, 281, 284, 288, 289, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 361, 389, 393, 395, 398, 400, 409, 412], "30": [2, 3, 52, 77, 156, 178, 266, 267, 351, 355, 393, 394, 400, 405, 406, 407, 409], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 101, 103, 105, 107, 115, 116, 118, 119, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 364, 365, 366, 367, 368, 369, 370, 374, 375, 376, 380, 382, 383, 384, 388, 390, 393, 394, 396, 397, 398, 399, 400, 401, 404, 407, 409, 411, 412], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 99, 100, 101, 105, 106, 107, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 155, 156, 157, 159, 160, 161, 162, 164, 165, 168, 173, 174, 178, 179, 181, 183, 184, 187, 194, 195, 198, 201, 202, 203, 205, 209, 211, 215, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 280, 281, 282, 284, 285, 287, 288, 289, 299, 300, 301, 308, 310, 311, 316, 317, 318, 319, 320, 324, 325, 333, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 361, 362, 363, 366, 367, 370, 372, 378, 382, 383, 384, 407, 409], "entri": [2, 3, 14, 15, 17, 23, 30, 31, 34, 37, 43, 48, 50, 51, 53, 56, 57, 63, 70, 75, 76, 77, 78, 80, 81, 99, 100, 113, 114, 115, 118, 119, 120, 121, 129, 130, 137, 138, 141, 144, 145, 146, 147, 156, 160, 162, 163, 165, 166, 169, 170, 173, 176, 179, 181, 183, 186, 188, 191, 193, 195, 196, 197, 205, 207, 209, 218, 219, 242, 250, 251, 280, 281, 284, 286, 287, 300, 302, 322, 333, 334, 335, 336, 388, 393, 395, 396, 397, 398, 399, 401, 405, 406, 407, 408, 409, 412], "onto": [2, 8, 48, 50, 53, 215, 220, 221, 262, 263, 276, 281, 282, 285, 286, 287, 288, 289, 396, 407], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 91, 92, 94, 95, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 146, 147, 153, 160, 161, 195, 196, 197, 198, 201, 209, 219, 225, 226, 247, 250, 251, 253, 262, 263, 284, 286, 287, 295, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 374, 384, 387, 390, 395, 396, 400, 401, 402, 407, 409, 412], "without": [2, 3, 7, 9, 14, 15, 16, 43, 48, 50, 53, 54, 62, 73, 75, 79, 99, 100, 115, 119, 137, 138, 144, 145, 146, 147, 154, 156, 166, 169, 199, 209, 240, 241, 244, 245, 278, 279, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 332, 333, 334, 335, 336, 337, 380, 387, 388, 393, 394, 395, 397, 398, 399, 400, 405, 406, 407, 409, 412], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 48, 49, 50, 53, 54, 59, 91, 92, 115, 119, 131, 137, 138, 139, 140, 144, 145, 154, 156, 157, 166, 168, 169, 185, 195, 196, 201, 204, 207, 209, 219, 220, 221, 223, 238, 239, 240, 242, 246, 249, 254, 262, 263, 285, 286, 287, 288, 289, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 331, 333, 334, 335, 336, 337, 366, 370, 372, 375, 376, 379, 380, 390, 394, 395, 396, 399, 402, 405, 406, 407, 409, 411, 412], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 73, 79, 82, 92, 99, 100, 103, 115, 119, 124, 125, 137, 138, 144, 145, 153, 184, 207, 223, 225, 226, 228, 230, 232, 240, 244, 247, 249, 252, 253, 276, 288, 293, 361, 367, 393, 395, 396, 400, 402, 407, 409, 412], "cursor": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "place": [2, 3, 24, 30, 31, 32, 37, 43, 48, 50, 53, 56, 86, 87, 94, 97, 107, 115, 116, 119, 137, 138, 144, 145, 146, 147, 156, 164, 170, 183, 197, 200, 201, 203, 205, 206, 207, 209, 219, 254, 280, 284, 288, 367, 372, 373, 389, 394, 395, 398, 401, 405, 406, 407, 409], "afterward": [2, 115, 119, 137, 138, 144, 145, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 405, 412], "tell": [2, 3, 4, 7, 139, 140, 393, 396, 400, 405, 406], "our": [2, 3, 7, 8, 11, 18, 52, 160, 353, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 411], "far": [2, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 243, 271, 272, 402, 407, 412], "restrict": [2, 3, 394, 408, 409, 412], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 115, 119, 134, 137, 138, 144, 145, 166, 169, 183, 185, 198, 201, 203, 205, 209, 215, 357, 393, 407], "64": [2, 3, 48, 50, 53, 73, 79, 94, 160, 187, 228, 229, 237, 242, 246, 253, 254, 264, 331, 393, 394, 395, 396, 398, 402, 404, 406, 407, 408, 409, 411, 412], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 99, 100, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 154, 157, 158, 164, 166, 167, 168, 169, 170, 171, 177, 179, 181, 183, 185, 186, 188, 192, 195, 197, 199, 200, 201, 203, 205, 209, 211, 215, 218, 219, 223, 224, 234, 235, 240, 241, 242, 244, 245, 246, 249, 255, 256, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 293, 296, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 339, 388, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "unit8": 2, "img": 2, "randint": [2, 63, 94, 199, 409], "255": [2, 94, 199, 407, 409], "uint8": [2, 3, 30, 48, 50, 53, 73, 79, 113, 114, 129, 130, 170, 181, 199, 394, 401, 408, 409, 411, 412], "next": [2, 3, 4, 8, 14, 15, 16, 23, 30, 31, 34, 36, 37, 43, 49, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 92, 94, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 129, 130, 131, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 153, 156, 157, 159, 160, 166, 169, 170, 171, 176, 177, 181, 185, 186, 188, 191, 192, 195, 197, 206, 207, 209, 215, 218, 223, 241, 242, 245, 246, 249, 267, 284, 294, 296, 299, 300, 302, 303, 304, 306, 307, 308, 309, 315, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 353, 364, 366, 368, 394, 396, 398, 401, 402, 404, 407, 408, 411, 412], "ask": [2, 8, 73, 79, 92, 99, 100, 353, 395, 396, 397, 398, 405, 406, 408, 412], "do": [2, 3, 4, 7, 81, 115, 119, 137, 138, 144, 145, 146, 147, 153, 184, 206, 207, 218, 242, 246, 253, 255, 278, 317, 333, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 411, 412], "automat": [2, 3, 5, 27, 62, 64, 81, 86, 87, 94, 107, 115, 118, 119, 120, 137, 138, 139, 140, 144, 145, 156, 166, 169, 179, 197, 206, 225, 242, 246, 276, 284, 285, 351, 388, 393, 395, 397, 398, 405, 406, 407, 409, 411], "hand": [2, 3, 7, 21, 30, 405, 406, 407], "look": [2, 3, 5, 7, 8, 43, 92, 115, 119, 128, 137, 138, 139, 140, 144, 145, 183, 184, 203, 209, 285, 289, 290, 291, 389, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412], "assum": [2, 3, 6, 30, 54, 59, 60, 75, 77, 79, 80, 81, 83, 84, 90, 99, 115, 119, 137, 138, 144, 145, 159, 162, 165, 173, 183, 184, 191, 197, 201, 203, 205, 215, 224, 242, 246, 274, 292, 304, 309, 322, 331, 342, 343, 344, 345, 347, 348, 349, 350, 353, 393, 395, 396, 404, 407], "lead": [2, 3, 4, 8, 10, 12, 23, 30, 31, 37, 43, 49, 52, 56, 59, 60, 75, 98, 113, 114, 115, 118, 120, 121, 197, 243, 264, 271, 272, 393, 396, 405, 406, 407, 409, 411], "leav": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 68, 115, 211, 219, 393, 400, 409], "tree": [2, 48, 50, 53, 115, 119, 137, 138, 144, 145, 405, 409], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 94, 103, 113, 114, 115, 116, 118, 119, 120, 121, 137, 138, 144, 145, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 225, 226, 233, 242, 246, 247, 252, 253, 270, 276, 280, 281, 285, 286, 288, 289, 292, 293, 300, 302, 308, 316, 318, 320, 322, 367, 372, 388, 393, 395, 404, 406, 407, 409, 412], "don": [2, 3, 4, 6, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 160, 394, 395, 400, 409, 411, 412], "throw": [2, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 412], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 30, 34, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 157, 159, 160, 164, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 200, 201, 209, 210, 218, 219, 223, 224, 232, 234, 235, 238, 239, 242, 246, 249, 262, 263, 264, 265, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 292, 293, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 353, 361, 367, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "max": [2, 23, 50, 59, 63, 82, 91, 92, 105, 168, 198, 262, 263, 271, 272, 300, 301, 302, 308, 318, 320, 322, 393, 395, 396, 402], "label": [2, 50, 51, 54, 63, 393, 405, 409], "100": [2, 14, 15, 16, 17, 43, 49, 52, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 105, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 163, 170, 179, 188, 193, 195, 209, 252, 282, 284, 353, 362, 380, 394, 395, 396, 397, 399, 402, 404, 405, 406, 407, 408, 409, 411, 412], "rb_pytre": 2, "randn": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 100, 107, 159, 179, 215, 224, 227, 228, 232, 234, 235, 240, 241, 244, 245, 250, 251, 252, 257, 260, 261, 265, 276, 277, 278, 279, 280, 281, 285, 286, 288, 291, 292, 293, 299, 300, 302, 303, 304, 306, 307, 308, 315, 317, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336, 369, 388, 409, 411, 412], "c": [2, 3, 6, 7, 30, 48, 50, 52, 53, 59, 60, 78, 179, 199, 244, 245, 394, 409], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 99, 100, 105, 107, 115, 119, 137, 138, 144, 145, 157, 159, 161, 166, 168, 169, 179, 185, 188, 209, 215, 218, 222, 223, 229, 230, 231, 237, 238, 239, 240, 241, 242, 244, 245, 246, 250, 251, 253, 254, 262, 263, 264, 273, 287, 295, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 339, 396, 409, 411], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 119, 122, 137, 144, 152, 153, 157, 160, 163, 166, 169, 177, 186, 193, 207, 211, 215, 224, 253, 257, 274, 333, 334, 335, 336, 361, 369, 400, 404, 409, 412], "len": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 107, 181, 225, 226, 247, 253, 393, 400, 402, 405, 407, 408, 409, 411], "ambigu": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 103, 115, 119, 137, 138, 144, 145, 157, 164, 183, 197, 200, 201, 203, 205, 209, 288, 389, 393, 397, 407], "deal": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 317, 389, 393, 395, 406, 409], "interpret": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 394], "put": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 119, 129, 130, 145, 146, 147, 207, 360, 384, 388, 394, 395, 396, 397, 405, 407], "solv": [2, 4, 9, 10, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 387, 393, 394, 395, 400, 402, 405, 406, 407, 409], "clear": [2, 3, 11, 30, 31, 37, 38, 43, 49, 52, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 123, 137, 138, 144, 145, 209, 362, 397, 400], "cut": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "distinct": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 157, 399, 404], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 209, 235, 240, 244, 247, 397, 407, 409, 411, 412], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 118, 119, 120, 123, 124, 125, 128, 137, 138, 139, 140, 144, 145, 156, 166, 169, 184, 224, 247, 264, 284, 285, 289, 290, 291, 295, 317, 333, 334, 335, 336, 388, 389, 393, 394, 395, 397, 399, 404, 405, 406, 407, 408, 409, 412], "collate_fn": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 409, 411], "__init__": [2, 3, 7, 115, 131, 152, 154, 157, 166, 169, 185, 223, 235, 240, 244, 249, 293, 300, 302, 303, 308, 315, 320, 322, 324, 325, 390, 407, 412], "major": 2, "worri": [2, 61], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 92, 99, 101, 103, 107, 115, 116, 119, 123, 137, 138, 144, 145, 156, 219, 393, 395, 397, 405, 406, 407, 412], "though": [2, 4, 11, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 247, 395, 405, 406], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 51, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 178, 197, 243, 271, 272, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 394, 398, 401, 407, 409, 412], "latter": [2, 18, 19, 20, 43, 75, 115, 119, 137, 138, 144, 145, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 319, 382, 383], "inv": [2, 3, 163, 168, 171, 181, 188, 193, 407], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 99, 100, 101, 102, 103, 105, 107, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 156, 157, 160, 164, 166, 167, 170, 171, 173, 177, 179, 183, 185, 186, 187, 188, 192, 195, 197, 200, 201, 203, 205, 209, 210, 220, 223, 224, 238, 242, 246, 252, 253, 254, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 296, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 313, 315, 317, 319, 320, 321, 322, 324, 325, 331, 337, 351, 352, 381, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 405, 407, 409, 412], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 61, 62, 64, 65, 66, 67, 68, 84, 115, 119, 137, 138, 144, 145, 168, 171, 192, 199, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 250, 251, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 333, 409], "multithread": [2, 3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 132, 133, 400, 409], "thread": [2, 14, 15, 17, 48, 50, 53, 111, 112, 124, 125, 137, 144], "prefetch": [2, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 393, 394, 396, 409], "advis": [2, 11, 76, 401, 412], "benchmark": [2, 3, 9, 111, 112, 124, 125], "techniqu": [2, 8, 137, 144, 394, 400, 409], "real": [2, 5, 79, 289, 389, 396, 407], "life": [2, 170], "adopt": [2, 3, 5, 393, 412], "throughput": [2, 9, 125, 393], "constant": [2, 11, 32, 160, 179, 196, 390, 393, 395, 396, 412], "throughout": [2, 3, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 395, 405, 412], "further": [2, 3, 5, 24, 393, 395, 397], "refin": [2, 79, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331], "coupl": [2, 396, 398, 399, 407, 409], "get": [2, 3, 4, 6, 7, 8, 9, 30, 31, 37, 48, 49, 50, 52, 53, 56, 73, 75, 79, 86, 87, 92, 99, 100, 101, 103, 105, 107, 115, 116, 119, 137, 138, 144, 145, 154, 159, 161, 166, 168, 169, 177, 179, 184, 196, 197, 199, 201, 207, 238, 239, 276, 285, 286, 289, 296, 333, 334, 335, 336, 337, 353, 357, 388, 392, 393, 394, 395, 396, 403, 405, 406, 407, 409, 410, 411, 412], "first_elt": 2, "128": [2, 73, 75, 79, 100, 111, 112, 124, 125, 229, 232, 394, 396, 402, 405, 407, 408, 409], "wa": [2, 3, 5, 7, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 115, 119, 137, 138, 144, 145, 201, 211, 219, 244, 299, 301, 314, 316, 319, 321, 323, 339, 389, 394, 395, 397, 398, 404, 405, 409, 411], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 30, 31, 34, 37, 43, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 152, 153, 156, 157, 160, 161, 166, 167, 168, 169, 176, 179, 185, 186, 188, 191, 195, 197, 198, 199, 207, 209, 215, 218, 219, 225, 226, 228, 229, 230, 231, 232, 235, 237, 238, 239, 242, 246, 247, 250, 251, 252, 253, 257, 260, 262, 263, 265, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 291, 293, 296, 317, 351, 380, 388, 390, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 161], "larger": [2, 4, 242, 246, 307, 315, 411], "volum": 2, "due": [2, 3, 5, 23, 399, 408, 409, 412], "memorymappedtensor": [2, 34, 48, 50, 57, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 355, 400, 408], "well": [2, 3, 8, 21, 23, 43, 49, 51, 52, 59, 60, 62, 92, 97, 101, 108, 115, 119, 137, 138, 144, 145, 201, 209, 228, 244, 266, 267, 317, 324, 337, 393, 394, 396, 397, 398, 399, 401, 408, 409, 411, 412], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 165, 166, 167, 169, 191, 194, 196, 202, 209, 223, 244, 288, 289, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 360, 388, 393, 395, 396, 400, 405], "file": [2, 6, 7, 8, 48, 50, 53, 73, 75, 76, 77, 79, 80, 81, 84, 146, 352, 353, 355, 390, 392, 394, 395, 405, 409, 410, 412], "locat": [2, 7, 48, 50, 53, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 165, 170, 179, 190, 243, 257, 271, 272, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 393, 394, 395, 401, 405, 406, 409], "improv": [2, 4, 11, 174, 299, 389, 405, 406, 409], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 137, 144, 395, 405, 409], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 30, 43, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 99, 100, 113, 114, 115, 118, 119, 120, 123, 137, 138, 144, 145, 154, 160, 188, 191, 198, 207, 209, 219, 238, 239, 252, 253, 285, 289, 316, 317, 319, 393, 394, 396, 397, 399, 401, 407, 409, 412], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 51, 55, 56, 62, 64, 65, 66, 67, 68, 86, 92, 135, 136, 168, 222, 244, 245, 307, 396, 400, 409], "sharabl": [2, 137, 144], "collabor": [2, 79], "rather": [2, 4, 103, 135, 136, 186, 393, 394, 395, 397, 399, 405, 406, 409], "incur": [2, 111, 112, 124, 125], "transmiss": 2, "overhead": [2, 111, 112, 124, 125, 137, 144], "instanti": [2, 3, 14, 15, 21, 48, 49, 50, 52, 53, 59, 60, 62, 91, 92, 123, 156, 200, 253, 351, 393, 394, 398, 399, 401, 405, 406, 407, 409, 412], "content": [2, 8, 16, 30, 31, 37, 48, 49, 50, 52, 53, 56, 59, 60, 98, 115, 118, 119, 120, 132, 137, 138, 144, 145, 185, 225, 226, 247, 252, 253, 285, 317, 395, 407, 411], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 90, 91, 92, 115, 119, 128, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 215, 235, 257, 276, 277, 278, 279, 281, 285, 286, 288, 289, 291, 292, 293, 294, 302, 322, 331, 366, 386, 388, 389, 393, 394, 395, 396, 398, 399, 408, 411], "writer": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 92, 94, 95, 99, 105, 106, 110, 395, 409], "tensordictroundrobinwrit": [2, 94], "goe": [2, 4, 139, 140, 393, 395, 405, 406, 412], "prioritizedsampl": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 304, 309, 331, 393, 409], "access": [2, 3, 7, 8, 11, 43, 49, 76, 78, 115, 119, 137, 138, 144, 145, 183, 203, 209, 384, 387, 393, 397, 405, 406, 407, 409], "show": [2, 11, 43, 115, 119, 137, 138, 144, 145, 209, 253, 353, 388, 393, 395, 396, 405, 406, 407, 409, 411], "tensordictreplaybuff": [2, 49, 52, 59, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 99, 100, 105, 159, 160, 367, 380, 386, 393, 394, 396, 409], "mp": [2, 18, 19, 20, 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 207], "def": [2, 3, 12, 22, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 131, 137, 138, 144, 145, 152, 154, 156, 157, 166, 169, 185, 201, 209, 223, 235, 240, 241, 244, 245, 249, 254, 284, 285, 293, 300, 302, 303, 308, 315, 317, 320, 322, 324, 325, 351, 390, 393, 394, 404, 405, 406, 407, 409, 411, 412], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 34, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 105, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 126, 127, 135, 136, 137, 138, 144, 145, 154, 157, 159, 161, 166, 167, 168, 169, 176, 177, 179, 188, 191, 197, 199, 201, 207, 210, 218, 223, 224, 234, 235, 238, 239, 242, 246, 248, 249, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 285, 286, 288, 291, 293, 331, 334, 335, 336, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 361, 369, 388, 389, 393, 396, 406, 407, 411, 412], "__name__": [2, 3, 14, 15, 22, 116, 351, 394, 411], "__main__": [2, 3, 14, 15, 22, 116, 351, 411], "21": [2, 79, 80, 100, 137, 139, 140, 144, 392, 393, 394, 396, 404, 407, 408, 410], "proc": 2, "target": [2, 4, 8, 21, 24, 43, 115, 116, 119, 137, 138, 144, 145, 196, 200, 209, 288, 289, 299, 300, 301, 302, 303, 304, 306, 308, 309, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 373, 379, 380, 389, 390, 396, 402, 405, 407], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 30, 31, 33, 37, 38, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 56, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 92, 94, 99, 100, 101, 103, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 164, 183, 185, 194, 197, 200, 201, 202, 204, 205, 209, 220, 221, 223, 224, 225, 226, 234, 238, 239, 242, 246, 247, 248, 249, 262, 263, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 360, 363, 367, 370, 384, 394, 395, 412], "join": [2, 116, 386, 394, 395, 405], "now": [2, 3, 7, 49, 52, 59, 60, 94, 135, 136, 137, 160, 253, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 409, 412], "20": [2, 63, 80, 99, 100, 105, 115, 119, 123, 135, 136, 137, 138, 144, 145, 196, 209, 237, 240, 241, 244, 245, 280, 361, 393, 394, 396, 405, 406, 407, 409, 411, 412], "_data": [2, 407], "It": [2, 3, 4, 7, 23, 43, 51, 54, 59, 61, 63, 75, 81, 94, 97, 105, 110, 115, 119, 121, 131, 132, 137, 138, 139, 140, 144, 145, 146, 147, 157, 159, 170, 177, 179, 184, 196, 201, 206, 209, 211, 220, 228, 230, 236, 238, 252, 253, 262, 263, 264, 266, 267, 273, 274, 282, 284, 287, 289, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 325, 331, 332, 333, 351, 360, 366, 387, 388, 389, 393, 394, 396, 397, 405, 406, 407, 408, 409, 411, 412], "difficult": [2, 4, 137, 401], "pai": [2, 8, 393, 396], "word": [2, 3, 11, 54, 73, 75, 77, 79, 80, 81, 317, 393, 400, 407, 412], "1m": [2, 73, 79, 373, 393, 395, 396, 408], "doe": [2, 3, 18, 48, 49, 50, 53, 59, 63, 73, 75, 79, 83, 84, 90, 91, 92, 99, 101, 103, 110, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 207, 232, 240, 241, 242, 244, 245, 246, 255, 274, 280, 290, 291, 299, 301, 309, 316, 317, 319, 332, 370, 388, 390, 393, 394, 395, 396, 397, 400, 405, 407, 409, 412], "howev": [2, 3, 5, 7, 43, 115, 119, 137, 138, 144, 145, 160, 191, 196, 201, 209, 299, 301, 302, 316, 319, 321, 322, 388, 393, 394, 396, 399, 407, 409, 412], "capac": [2, 49, 52, 59, 60, 86, 87, 91, 99, 107, 395, 400], "There": [2, 10, 94, 242, 246, 299, 319, 388, 390, 395, 396, 398, 400, 405, 406, 407, 409, 412], "circumv": 2, "account": [2, 86, 87, 107, 118, 120, 145, 156, 160, 250, 251, 388, 394, 396, 409, 412], "save": [2, 3, 8, 43, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 94, 101, 102, 103, 107, 108, 115, 119, 137, 138, 144, 145, 206, 209, 352, 353, 355, 360, 370, 390, 400, 401, 402, 405, 406], "convent": [2, 3, 73, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 146, 147, 389, 393, 396, 405, 406, 407], "overridden": [2, 3, 73, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 333, 335, 336, 396, 405], "dim_extend": [2, 49, 52, 59, 60], "obtain": [2, 7, 54, 73, 115, 119, 137, 138, 144, 145, 159, 183, 196, 205, 223, 224, 264, 367, 393, 395, 397, 398, 399, 405, 406], "counterpart": 2, "desir": [2, 3, 11, 29, 43, 115, 119, 137, 138, 144, 145, 155, 157, 164, 179, 181, 183, 184, 197, 200, 201, 203, 205, 209, 216, 217, 225, 226, 247, 253, 276, 281, 282, 285, 286, 287, 288, 289, 388, 393, 405, 406, 407, 409], "diversifi": 2, "offer": [2, 3, 7, 111, 112, 115, 119, 124, 125, 129, 130, 137, 138, 144, 145, 351, 388, 393, 394, 397, 399, 400, 405, 407, 409, 412], "accomplish": [2, 211, 397], "anoth": [2, 3, 8, 62, 79, 92, 99, 115, 118, 119, 120, 123, 137, 138, 144, 145, 157, 166, 167, 169, 197, 200, 247, 285, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 388, 389, 393, 395, 396, 398, 399, 404, 405, 406, 407, 412], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 76, 160, 211, 300, 306, 307, 315, 324, 360, 390, 397, 408, 409, 411], "docstr": [2, 43, 115, 119, 137, 138, 144, 145, 209, 397, 398], "extens": [2, 49, 52, 59, 60, 100, 390, 409], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 199, 201, 209, 235, 240, 244, 254, 282, 299, 309, 317, 319, 387, 390, 394, 400, 404, 409], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 115, 119, 137, 138, 144, 145, 166, 169, 207, 209, 219, 240, 242, 244, 246, 262, 263, 285, 289, 309, 394, 398, 404, 405, 406, 412], "happi": 2, "concaten": [2, 8, 14, 15, 21, 39, 41, 79, 160, 161, 179, 200, 244, 247, 291, 393, 394, 398, 405, 406, 407, 409, 412], "schedul": [2, 4, 7, 54, 366, 395, 407], "transformedenv": [2, 3, 11, 43, 115, 116, 119, 137, 138, 144, 145, 153, 154, 157, 160, 163, 164, 166, 169, 170, 171, 173, 176, 177, 178, 179, 181, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 200, 207, 209, 242, 246, 284, 353, 393, 394, 395, 396, 397, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "stepcount": [2, 43, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 200, 209, 224, 393, 394, 395, 396, 397, 402, 405, 406, 411], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 34, 43, 57, 105, 115, 116, 119, 121, 137, 138, 144, 145, 153, 156, 157, 160, 163, 164, 170, 176, 177, 179, 181, 186, 187, 188, 191, 193, 196, 197, 198, 200, 201, 207, 209, 224, 242, 246, 284, 351, 353, 380, 386, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 408, 409, 411, 412], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 160, 188, 386, 400, 409], "cartpol": [2, 3, 11, 34, 43, 57, 113, 114, 115, 119, 137, 138, 144, 145, 156, 157, 160, 191, 196, 207, 209, 284, 351, 394, 396, 398, 400, 401, 402, 409, 412], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 34, 43, 57, 75, 77, 105, 115, 116, 118, 119, 120, 124, 125, 132, 137, 138, 144, 145, 156, 157, 160, 163, 171, 176, 177, 179, 186, 188, 191, 193, 195, 196, 197, 198, 200, 207, 209, 224, 242, 246, 284, 328, 342, 343, 344, 345, 347, 348, 349, 350, 351, 388, 394, 396, 397, 398, 399, 400, 401, 402, 407, 409, 411, 412], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 43, 111, 112, 115, 119, 124, 125, 131, 137, 138, 139, 140, 144, 145, 153, 154, 157, 160, 166, 169, 177, 185, 188, 210, 223, 235, 249, 265, 267, 276, 281, 285, 286, 300, 302, 304, 306, 320, 322, 324, 325, 380, 388, 393, 394, 395, 396, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 411, 412], "8": [2, 3, 6, 7, 43, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 99, 100, 111, 112, 113, 114, 115, 119, 135, 136, 137, 138, 144, 145, 153, 156, 196, 225, 226, 228, 229, 237, 247, 277, 278, 279, 285, 288, 291, 315, 392, 393, 394, 395, 400, 405, 406, 407, 408, 409, 410, 411, 412], "traj_kei": [2, 92, 99, 100, 409], "truncated_kei": [2, 92, 99, 100, 188, 195], "strict_length": [2, 73, 79, 92, 99, 100, 353], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 34, 37, 43, 49, 52, 56, 57, 60, 61, 86, 87, 91, 92, 99, 100, 107, 115, 119, 137, 138, 144, 145, 165, 183, 188, 191, 201, 205, 209, 241, 245, 257, 265, 282, 284, 285, 287, 288, 289, 299, 301, 302, 303, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336, 361, 373, 393, 394, 395, 396, 398, 399, 400, 401, 402, 405, 406, 407, 409, 411, 412], "enumer": [2, 14, 15, 16, 21, 34, 43, 52, 57, 60, 100, 115, 119, 137, 138, 144, 145, 209, 326, 389, 393, 394, 395, 396, 402, 405, 409, 411], "break": [2, 5, 14, 15, 16, 21, 43, 52, 60, 73, 76, 77, 79, 80, 81, 82, 92, 99, 100, 105, 115, 119, 137, 138, 144, 145, 157, 160, 188, 207, 209, 242, 246, 271, 353, 394, 400, 402, 409, 411], "step_count": [2, 14, 15, 16, 43, 115, 119, 124, 125, 137, 138, 144, 145, 195, 209, 395, 396, 397, 402, 411], "32": [2, 22, 30, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 142, 143, 146, 147, 225, 226, 227, 228, 229, 231, 232, 237, 247, 252, 253, 258, 259, 261, 264, 273, 331, 351, 393, 394, 396, 398, 399, 407, 408, 409, 411, 412], "33": [2, 30, 43, 94, 115, 119, 137, 138, 144, 145, 209, 225, 226, 247, 392, 394, 406, 407, 409, 410], "34": [2, 225, 226, 247, 392, 394, 396, 407, 410], "35": [2, 225, 226, 247, 394, 407, 408], "36": [2, 393, 394, 407], "37": [2, 159, 394, 396, 407], "38": [2, 7, 393, 394, 407, 408, 409], "39": [2, 77, 124, 125, 394, 406, 407, 408], "40": [2, 124, 125, 393, 394, 405, 406, 407, 408], "41": [2, 393, 394, 407, 408], "11": [2, 10, 23, 63, 86, 87, 91, 100, 107, 116, 153, 199, 209, 223, 249, 393, 394, 395, 396, 405, 407, 408, 409], "12": [2, 10, 80, 86, 87, 100, 107, 124, 125, 137, 142, 143, 144, 209, 393, 394, 396, 405, 407, 409], "13": [2, 5, 12, 99, 100, 141, 206, 209, 393, 394, 406, 407, 408, 409], "14": [2, 6, 12, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100, 115, 119, 137, 138, 144, 145, 179, 209, 393, 394, 396, 405, 407, 408, 409], "15": [2, 23, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 115, 119, 137, 138, 144, 145, 209, 262, 263, 280, 310, 392, 393, 394, 401, 407, 409, 410], "16": [2, 3, 43, 80, 92, 100, 111, 112, 115, 119, 124, 125, 137, 138, 144, 145, 160, 209, 393, 394, 396, 405, 407, 409], "17": [2, 11, 80, 100, 119, 137, 153, 209, 392, 393, 394, 395, 407, 410], "could": [2, 3, 4, 6, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 394, 395, 401, 405, 406, 408, 412], "sai": [2, 43, 115, 119, 137, 138, 144, 145, 209, 252, 405, 408, 412], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 30, 31, 37, 41, 56, 88, 92, 99, 100, 115, 118, 119, 120, 123, 137, 138, 144, 145, 166, 169, 184, 191, 252, 253, 286, 299, 319, 394, 395, 396, 405, 406, 407], "handl": [2, 3, 21, 43, 115, 119, 137, 138, 144, 145, 206, 207, 209, 246, 247, 299, 317, 319, 370, 382, 383, 393, 394, 395, 397, 399, 406, 409], "suggest": [2, 331, 393, 406], "serialenv": [2, 3, 115, 119, 137, 138, 145, 197, 209, 224, 284, 386, 411, 412], "squeez": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 156, 157, 160, 194, 196, 225, 226, 268, 269, 393, 407, 409], "6": [2, 3, 7, 14, 15, 16, 17, 23, 43, 52, 73, 80, 81, 92, 100, 113, 114, 119, 137, 142, 143, 153, 156, 179, 181, 196, 224, 225, 226, 228, 229, 230, 233, 237, 241, 247, 252, 253, 254, 258, 270, 284, 285, 293, 392, 393, 394, 396, 400, 405, 406, 407, 409, 410, 411], "5": [2, 3, 14, 15, 23, 30, 31, 37, 39, 40, 41, 42, 43, 49, 52, 56, 59, 60, 73, 94, 99, 100, 105, 115, 116, 119, 124, 125, 129, 130, 132, 137, 138, 142, 143, 144, 145, 146, 147, 153, 156, 157, 159, 188, 195, 196, 209, 222, 223, 224, 225, 226, 228, 229, 234, 235, 236, 237, 240, 243, 244, 247, 249, 252, 253, 258, 265, 271, 272, 280, 281, 284, 286, 292, 316, 319, 321, 324, 325, 351, 388, 392, 393, 394, 396, 398, 400, 402, 405, 406, 407, 408, 409, 410, 411, 412], "7": [2, 3, 6, 10, 43, 49, 52, 59, 92, 100, 115, 119, 129, 130, 137, 138, 144, 145, 153, 156, 196, 223, 224, 225, 226, 229, 247, 249, 252, 339, 392, 393, 394, 400, 405, 406, 407, 409, 410, 411], "9": [2, 3, 7, 23, 43, 49, 52, 59, 80, 81, 92, 100, 105, 113, 114, 128, 139, 140, 145, 153, 156, 196, 207, 209, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 326, 331, 389, 392, 393, 394, 400, 405, 406, 407, 408, 409, 410], "18": [2, 80, 100, 142, 143, 146, 147, 209, 253, 392, 393, 394, 405, 406, 407, 408, 410], "19": [2, 80, 99, 100, 105, 209, 393, 394, 405, 406, 407, 408], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 76, 137, 144, 200, 202, 253, 299, 319, 389, 390, 393, 394, 406, 409, 411], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 43, 48, 50, 53, 63, 73, 76, 78, 81, 82, 111, 113, 115, 119, 124, 128, 129, 130, 132, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 168, 171, 186, 191, 192, 195, 201, 203, 206, 209, 219, 242, 246, 281, 286, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 333, 335, 336, 337, 351, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 390, 393, 394, 395, 396, 399, 401, 405, 406, 407, 412], "randomcroptensordict": [2, 393], "unlik": [2, 25, 98, 119, 129, 130, 146, 147, 222, 284, 309, 319, 353, 388, 394, 398, 400, 411], "stop": [2, 3, 16, 21, 54, 81, 92, 99, 100, 115, 119, 137, 138, 144, 145, 395, 400, 405, 406, 411, 412], "signal": [2, 3, 14, 15, 16, 17, 23, 73, 75, 77, 79, 80, 81, 92, 99, 100, 105, 119, 129, 130, 146, 147, 160, 170, 195, 198, 219, 389, 393, 395, 405, 406, 409, 412], "disk": [2, 3, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 370, 390, 393, 394, 396, 400, 401, 409], "dump": [2, 3, 11, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 94, 101, 103, 107, 351, 352, 353, 401, 402, 405], "load": [2, 6, 7, 14, 15, 16, 17, 34, 43, 48, 49, 50, 52, 53, 54, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 94, 101, 102, 103, 107, 108, 114, 115, 119, 137, 138, 144, 145, 152, 207, 209, 384, 390, 393, 395, 409], "json": 2, "metadata": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 75, 115, 119, 137, 138, 144, 145, 302, 324, 395, 397, 399, 400, 405, 406, 412], "anticip": [2, 166, 169], "compli": [2, 79, 388], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 55, 56, 62, 64, 65, 66, 67, 68, 75, 206, 211, 254, 276, 281, 282, 285, 286, 287, 288, 289, 395, 405, 406, 407, 409], "exact": [2, 3, 23, 137, 244], "statu": [2, 3, 115], "prioriti": [2, 4, 49, 59, 60, 86, 87, 88, 91, 92, 101, 103, 107, 302, 303, 304, 306, 307, 308, 309, 315, 320, 322, 324, 325, 331, 390, 393, 394, 409], "heap": 2, "under": [2, 3, 4, 21, 43, 54, 73, 75, 76, 77, 79, 80, 81, 113, 114, 115, 118, 119, 120, 121, 137, 138, 141, 144, 145, 209, 276, 281, 282, 285, 286, 287, 288, 289, 317, 333, 334, 335, 336, 337, 353, 389, 393, 394, 398, 405, 407, 412], "hood": [2, 21, 73, 115, 119, 137, 138, 144, 145, 407], "naiv": [2, 203, 397], "just": [2, 3, 4, 12, 103, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 156, 163, 219, 253, 361, 388, 390, 393, 394, 395, 396, 397, 398, 400, 405, 406, 407, 409, 411, 412], "public": [2, 78, 102, 183, 205], "serializ": 2, "consum": [2, 98, 100, 284, 394, 395, 400, 406, 409], "much": [2, 8, 14, 15, 17, 49, 59, 79, 91, 92, 137, 144, 316, 319, 395, 397, 401, 405, 406, 407, 409, 412], "duplic": [2, 43, 98, 115, 119, 137, 138, 144, 145, 209, 300, 302, 304, 309, 315, 317, 320, 322, 324, 325, 331], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 34, 43, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 175, 176, 177, 179, 180, 181, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 209, 218, 224, 227, 228, 229, 230, 231, 232, 235, 238, 239, 242, 246, 252, 258, 259, 261, 262, 263, 265, 266, 276, 277, 278, 279, 280, 281, 284, 285, 286, 293, 294, 299, 300, 301, 302, 303, 304, 306, 307, 308, 311, 315, 316, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 351, 353, 380, 388, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 411, 412], "plu": [2, 14, 15, 17, 54, 137, 144, 407], "enabl": [2, 7, 8, 75, 86, 87, 98, 107, 157, 242, 246, 262, 263, 284, 351, 353, 366, 395, 397, 405, 406, 407, 409], "three": [2, 25, 26, 29, 33, 39, 40, 41, 42, 47, 82, 302, 388, 390, 395, 397, 398, 405, 406, 407, 409, 412], "flatstoragecheckpoint": 2, "discard": [2, 3, 63, 75, 77, 119, 203, 218, 352, 409, 412], "compress": 2, "At": [2, 238, 248, 394, 395, 396, 400, 404, 407, 408], "correct": [2, 4, 48, 50, 53, 115, 119, 137, 138, 144, 145, 177, 373, 395, 396], "addit": [2, 3, 4, 43, 75, 115, 119, 137, 138, 144, 145, 146, 164, 183, 197, 200, 201, 203, 205, 209, 220, 221, 240, 280, 284, 288, 298, 317, 333, 351, 389, 393, 394, 397, 405, 406, 409], "nestedstoragecheckpoint": 2, "represent": [2, 43, 55, 56, 115, 119, 137, 138, 144, 145, 183, 203, 205, 209, 299, 319, 393, 407, 408, 412], "appar": [2, 3, 363], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 83, 84, 90, 115, 118, 119, 120, 137, 138, 144, 145, 153, 163, 168, 215, 220, 221, 232, 235, 239, 252, 259, 262, 263, 265, 276, 281, 282, 285, 286, 287, 288, 289, 291, 292, 293, 296, 299, 304, 306, 307, 308, 319, 324, 325, 331, 388, 394, 395, 396, 397, 398, 399, 405, 406, 407, 411, 412], "assumpt": [2, 3, 62, 407, 409], "accur": [2, 7, 75, 81, 394, 407, 409], "truncat": [2, 3, 14, 15, 16, 17, 34, 36, 43, 44, 51, 57, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 99, 100, 113, 114, 115, 118, 119, 120, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 170, 171, 178, 185, 188, 195, 201, 209, 219, 242, 246, 272, 284, 339, 393, 395, 396, 397, 398, 400, 401, 404, 405, 408, 409, 411, 412], "marl": [2, 128, 148, 160, 198, 252, 253, 254, 397, 405, 406], "extra": [2, 10, 43, 115, 119, 137, 138, 144, 145, 160, 207, 209, 218, 360, 388, 395, 396, 409], "fail": [2, 7, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 137, 154, 211], "concret": [2, 393, 395], "set_se": [2, 3, 14, 15, 16, 17, 21, 34, 43, 57, 111, 112, 115, 119, 124, 125, 131, 137, 138, 144, 145, 156, 179, 186, 191, 196, 198, 201, 209, 400, 402, 407, 411, 412], "manual_se": [2, 3, 25, 34, 39, 40, 49, 52, 57, 59, 60, 76, 80, 81, 99, 100, 111, 112, 115, 119, 137, 138, 144, 145, 154, 156, 168, 179, 188, 191, 196, 198, 209, 238, 239, 250, 251, 260, 262, 263, 276, 282, 292, 299, 300, 302, 303, 307, 315, 322, 400, 402, 405, 406, 407, 411, 412], "200": [2, 14, 15, 16, 21, 34, 43, 57, 73, 115, 118, 119, 120, 137, 138, 144, 145, 146, 147, 188, 209, 228, 229, 236, 266, 267, 351, 353, 393, 396, 400, 402, 407, 409], "22": [2, 79, 99, 100, 206, 393, 394, 405, 407], "rb_test": 2, "_storag": [2, 408, 409], "max_siz": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 101, 105, 107, 395, 400], "102": [2, 407], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 48, 50, 53, 132, 232, 250, 251, 252, 298, 302, 351, 393, 395, 405, 406], "state_dict": [2, 14, 15, 16, 17, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 207, 209, 252, 253, 302, 322, 384, 390, 393, 394, 412], "load_state_dict": [2, 14, 15, 16, 17, 21, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 207, 209, 302, 322, 390, 393], "drawback": 2, "struggl": 2, "big": [2, 395, 400, 409, 412], "sequenti": [2, 9, 43, 115, 119, 137, 138, 144, 145, 159, 177, 209, 277, 278, 279, 285, 290, 291, 296, 299, 300, 302, 308, 315, 319, 320, 321, 322, 324, 388, 395, 396, 398, 406, 407, 408, 411, 412], "known": [2, 3, 5, 7, 8, 119, 340, 341, 393, 394, 397], "seamless": [2, 247], "integr": [2, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 231, 242, 246, 249, 288, 388, 397, 398, 400, 405, 406, 407, 408], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 222, 393, 394, 399], "essenti": [2, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 394, 397, 405, 407, 409], "understand": [2, 3, 8, 393, 394, 397, 398, 405, 406], "purpos": [2, 3, 7, 11, 115, 119, 137, 138, 144, 145, 160, 240, 299, 301, 313, 316, 319, 321, 380, 393, 395, 396, 399, 401, 405, 406, 408, 412], "guid": [2, 11, 139, 140, 142, 143, 196, 387, 393, 406], "explan": [2, 43, 115, 119, 137, 138, 144, 145, 209], "effect": [2, 3, 30, 43, 49, 52, 59, 60, 73, 79, 92, 94, 97, 99, 100, 115, 119, 137, 138, 144, 145, 156, 160, 201, 209, 370, 388, 393, 398, 405, 409, 412], "realm": [2, 398], "As": [2, 3, 4, 43, 52, 59, 60, 62, 73, 94, 115, 119, 128, 137, 138, 139, 140, 144, 145, 188, 289, 333, 388, 393, 394, 395, 396, 397, 399, 400, 405, 406, 407, 408, 409, 411, 412], "practition": 2, "often": [2, 3, 8, 254, 314, 317, 370, 393, 394, 397, 399, 407, 409, 412], "encount": [2, 4, 79, 284, 387, 394, 398, 407], "situat": [2, 129, 130], "sometim": [2, 3, 62, 396, 412], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 76, 77, 80, 81, 111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 129, 130, 133, 134, 135, 136, 141, 146, 147, 240, 241, 242, 244, 245, 246, 249, 277, 278, 279, 317, 320, 390, 394], "immedi": [2, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 209, 332, 405, 406], "199": [2, 407], "info": [2, 3, 14, 15, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 97, 99, 100, 113, 114, 115, 118, 119, 120, 121, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 203, 206, 208, 360, 397, 402, 405, 406, 409], "glanc": [2, 397], "seem": [2, 393, 396, 397], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 54, 55, 56, 115, 119, 128, 137, 138, 139, 140, 144, 145, 160, 184, 240, 242, 244, 246, 273, 277, 278, 279, 294, 388, 394, 396, 397, 405], "less": [2, 132, 274, 382, 383, 389, 395, 396, 409, 411], "omit": [2, 365, 395, 399, 407, 409], "proper": [2, 3, 4, 6, 7, 333, 334, 335, 336, 394, 395, 405, 406, 409, 412], "imposs": [2, 3, 105, 211, 299, 301, 316, 319, 321], "determin": [2, 49, 59, 75, 91, 92, 115, 119, 137, 138, 144, 145, 146, 147, 183, 205, 252, 262, 263, 394, 398, 405, 406], "complic": [2, 407, 409, 412], "matter": [2, 32, 400], "inconsist": [2, 412], "miss": [2, 3, 4, 6, 7, 12, 30, 43, 115, 119, 137, 138, 144, 145, 201, 209, 218, 290, 291, 299, 302, 322, 387, 393, 396], "primari": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 400], "elimin": [2, 3, 397], "upon": [2, 3, 8, 405, 407], "canon": 2, "definit": [2, 101, 252], "markov": [2, 3, 397, 412], "decis": [2, 3, 227, 261, 280, 305, 318, 396, 397, 398, 405, 406, 409, 412], "mdp": [2, 397, 407], "context": [2, 3, 5, 8, 43, 115, 116, 119, 134, 137, 138, 144, 145, 197, 202, 209, 253, 255, 280, 329, 330, 333, 334, 335, 336, 338, 346, 353, 366, 388, 389, 393, 394, 395, 405, 406, 407, 408, 409], "condit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 63, 64, 65, 66, 67, 68, 196, 207, 281, 282, 284, 286, 287, 298, 393, 405, 407, 409], "complet": [2, 7, 9, 98, 115, 118, 119, 120, 137, 138, 144, 145, 160, 195, 387, 389, 393, 395, 397, 404], "termin": [2, 3, 7, 14, 15, 16, 17, 34, 36, 43, 44, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 113, 114, 115, 118, 119, 120, 124, 125, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 156, 157, 170, 185, 209, 219, 223, 242, 246, 249, 284, 290, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 393, 394, 395, 396, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "reward": [2, 3, 14, 15, 16, 32, 34, 36, 43, 44, 48, 53, 54, 57, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 153, 154, 157, 158, 163, 164, 166, 167, 169, 170, 171, 177, 181, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 204, 205, 207, 209, 215, 218, 223, 242, 249, 280, 284, 294, 299, 300, 302, 303, 304, 306, 307, 308, 311, 315, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 363, 364, 366, 368, 384, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "imit": [2, 3, 313], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 61, 62, 64, 65, 66, 67, 68, 79, 115, 116, 119, 122, 125, 137, 138, 144, 145, 209, 224, 225, 226, 247, 253, 388, 389, 390, 393, 394, 395, 396, 397, 405, 406, 407, 409], "stateless": [2, 3, 115, 119, 137, 138, 144, 145, 157, 200, 317, 351, 393, 397, 407, 412], "simul": [2, 3, 5, 7, 8, 62, 111, 112, 121, 124, 125, 141, 146, 147, 151, 223, 249, 388, 393, 395, 397, 401, 405, 406], "furthermor": [2, 405, 406], "certain": [2, 4, 18, 19, 20, 21, 43, 63, 115, 119, 137, 138, 144, 145, 152, 174, 195, 201, 209, 238, 241, 245, 316, 388, 393, 394, 395, 402, 405, 406, 412], "composit": [2, 3, 25, 26, 27, 28, 29, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 70, 97, 103, 110, 115, 117, 119, 131, 137, 138, 144, 145, 154, 157, 166, 167, 168, 169, 171, 177, 185, 186, 192, 195, 197, 200, 209, 215, 219, 220, 221, 223, 249, 276, 285, 291, 292, 296, 299, 319, 386, 393, 395, 396, 398, 405, 406, 407, 412], "accommod": [2, 3, 397, 398], "uniform": [2, 49, 59, 91, 92, 405], "unambigu": 2, "distinguish": [2, 129, 130, 146, 147], "happen": [2, 3, 115, 119, 137, 138, 144, 145, 221, 394, 399, 400, 401, 408, 412], "limit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 131, 137, 138, 144, 145, 160, 177, 299, 301, 316, 317, 319, 321, 389, 393, 394, 396, 405, 406, 407], "everyth": [2, 394, 395, 396, 401, 402], "belong": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 79, 206, 207, 388, 393, 400, 406], "rule": [2, 137, 166, 169, 289, 388, 395], "field": [2, 3, 14, 15, 16, 17, 23, 30, 34, 43, 48, 50, 51, 53, 54, 57, 59, 60, 61, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 201, 209, 218, 223, 224, 234, 235, 242, 246, 249, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 293, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 374, 387, 388, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "taken": [2, 3, 25, 26, 29, 33, 39, 40, 41, 42, 47, 115, 119, 137, 138, 144, 145, 153, 187, 239, 250, 251, 389, 393, 395, 396, 398, 405, 406, 407], "is_shar": [2, 3, 14, 15, 16, 23, 30, 34, 48, 50, 51, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 181, 185, 186, 188, 192, 195, 197, 207, 218, 223, 224, 234, 235, 242, 246, 249, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 293, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 388, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "brought": [2, 395, 396, 398], "step_mdp": [2, 3, 115, 119, 137, 138, 144, 145, 242, 246, 386, 396, 397, 407, 411, 412], "count": [2, 3, 43, 115, 116, 195, 262, 263, 366, 370, 373, 393, 394, 395, 396, 409, 412], "trigger": [2, 7], "partial": [2, 3, 115, 119, 137, 138, 144, 145, 159, 160, 196, 197, 198, 285, 370, 396], "turn": [2, 18, 19, 20, 21, 48, 50, 53, 145, 175, 202, 206, 281, 351, 366, 389, 393, 394, 396, 398, 407, 408], "retain": 2, "regard": [2, 75, 81, 235, 282, 299, 309, 319, 393, 395, 407], "copi": [2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 79, 86, 115, 119, 137, 138, 144, 145, 156, 186, 196, 201, 207, 209, 218, 242, 246, 254, 280, 302, 317, 322, 351, 389, 393, 394, 396, 397, 405, 409], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 353, 389, 401, 409, 412], "eas": [2, 3, 405, 406], "flat": [2, 105], "manner": [2, 119, 183, 203, 388, 393, 394, 395, 400, 404, 407, 409], "ted2flat": [2, 34, 386], "flat2t": [2, 386], "unflatten": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 157, 284], "deseri": [2, 3, 34], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 113, 114, 115, 119, 137, 138, 144, 145, 173, 174, 194, 195, 198, 201, 202, 209, 257, 302, 322, 389, 395, 405, 406, 407, 409], "both": [2, 3, 7, 43, 49, 52, 59, 60, 79, 115, 116, 118, 119, 129, 130, 137, 138, 139, 140, 144, 145, 153, 160, 186, 201, 209, 219, 225, 226, 242, 245, 246, 247, 252, 253, 277, 278, 279, 282, 287, 299, 301, 302, 303, 307, 308, 315, 316, 317, 319, 320, 321, 322, 324, 325, 366, 388, 393, 395, 397, 399, 405, 406, 407, 408, 409, 412], "mark": [2, 3, 16, 81, 115, 119, 137, 138, 144, 145, 242, 246, 333, 335, 336, 400, 409], "identifi": [2, 51], "abov": [2, 3, 7, 43, 64, 115, 119, 137, 138, 144, 145, 209, 243, 271, 272, 298, 389, 390, 393, 395, 397, 398, 405, 406, 407, 412], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 62, 73, 75, 76, 77, 78, 79, 80, 81, 92, 99, 100, 113, 114, 115, 118, 119, 120, 121, 125, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 157, 158, 160, 163, 164, 165, 166, 167, 169, 171, 177, 179, 183, 185, 186, 191, 192, 195, 198, 200, 201, 203, 205, 206, 209, 211, 219, 220, 221, 225, 226, 227, 228, 229, 232, 234, 235, 236, 240, 241, 242, 244, 245, 246, 247, 252, 253, 257, 262, 263, 265, 274, 276, 277, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 351, 353, 361, 388, 389, 393, 394, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 411, 412], "typic": [2, 3, 4, 8, 43, 115, 119, 137, 138, 144, 145, 170, 196, 209, 285, 300, 302, 317, 319, 322, 388, 389, 390, 395, 397, 399, 400, 405, 406, 407], "adjust": [2, 11, 393, 405, 406, 407], "grumodul": [2, 159, 296], "lstmmodul": [2, 242, 396], "skip": [2, 3, 43, 73, 115, 119, 137, 138, 144, 145, 174, 201, 209, 211, 285, 289, 302, 317, 322, 333, 334, 335, 336, 352, 353, 363, 366, 393, 394, 407], "accumul": [2, 8, 209], "upcom": [2, 317, 342, 343, 344, 345, 347, 348, 349, 350, 393], "popular": [2, 3, 388, 396, 399, 406], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 209, 386, 394], "shift": [2, 34, 36, 43, 44, 57, 83, 84, 90, 295, 333, 334, 335, 336, 395], "approxim": [2, 406, 412], "would": [2, 3, 43, 54, 115, 119, 137, 138, 144, 145, 209, 240, 242, 244, 246, 247, 252, 390, 394, 395, 396, 397, 399, 400, 407, 409, 411, 412], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 160, 232, 261, 299, 305, 318, 319, 361, 384, 395, 396, 406, 409], "2x": 2, "small": [2, 203, 222, 393, 395, 405, 406, 412], "clearer": [2, 398], "lazi": [2, 55, 56, 70, 71, 115, 119, 137, 138, 144, 145, 146, 147, 183, 203, 225, 252, 255, 290, 291, 393, 394, 398, 400, 404, 409, 412], "certainli": 2, "benefici": 2, "welcom": [2, 397], "wrapper": [2, 3, 12, 17, 48, 50, 53, 54, 59, 60, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 206, 210, 221, 224, 239, 257, 263, 274, 280, 284, 289, 294, 333, 358, 359, 360, 384, 386, 395, 396, 397, 405, 406, 408, 412], "around": [2, 5, 7, 17, 59, 60, 131, 210, 284, 289, 333, 393, 394, 406, 412], "selecttransform": [2, 115, 119, 137, 138, 144, 145], "excludetransform": [2, 80, 192, 409], "promptli": 2, "virtual": [2, 3, 118], "instal": [2, 3, 5, 10, 18, 19, 20, 75, 78, 115, 119, 137, 138, 139, 140, 142, 143, 144, 145, 355, 370, 387, 393, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 412], "respons": [2, 3, 8, 92, 99, 115, 119, 137, 138, 144, 145, 370, 399, 400, 412], "d4rl": [2, 75, 81], "repositori": [2, 7, 76, 77, 78, 81, 147, 405, 406], "wheel": [2, 395], "publish": 2, "openml": [2, 78, 134], "scikit": [2, 78, 134], "panda": [2, 78], "raw": [2, 3, 4, 54, 243, 271, 272, 394, 400, 407], "go": [2, 3, 7, 45, 128, 137, 184, 188, 280, 339, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "natur": [2, 3, 393, 396, 398, 399, 400, 409], "modifi": [2, 3, 7, 8, 30, 31, 37, 43, 56, 63, 115, 119, 137, 138, 144, 145, 157, 164, 173, 177, 183, 197, 200, 201, 203, 205, 209, 254, 262, 263, 280, 288, 373, 389, 393, 394, 395, 397, 405, 406, 407], "fly": [2, 207, 316, 389, 395, 407, 409, 412], "least": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 115, 163, 401, 412], "pre": [2, 7, 22, 43, 63, 79, 87, 115, 119, 137, 138, 144, 145, 183, 203, 205, 209, 412], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 209, 240, 244, 254, 271, 281, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 315, 316, 318, 319, 320, 321, 322, 324, 325, 333, 351, 365, 390, 393, 394, 395, 400, 405, 407, 411, 412], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 76, 92, 99, 105, 123, 124, 125, 137, 139, 140, 163, 191, 225, 226, 236, 238, 252, 253, 284, 355, 370, 382, 383, 393, 394, 395, 396, 398, 399, 402, 405, 406, 409, 411], "pipelin": [2, 3, 7, 388, 395], "replac": [2, 3, 6, 7, 30, 31, 37, 43, 56, 73, 79, 92, 99, 100, 156, 168, 170, 176, 218, 238, 388, 405, 409], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 79, 94, 115, 119, 137, 138, 144, 145, 156, 188, 201, 209, 220, 221, 239, 262, 263, 284, 368, 388, 390, 394, 395, 396, 398, 401, 407, 409, 412], "produc": [2, 153, 156, 157, 225, 226, 247, 253, 260, 277, 279, 280, 353, 395, 396, 397, 398, 400, 409, 412], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 83, 98, 115, 119, 137, 138, 139, 140, 144, 145, 201, 209, 299, 300, 302, 315, 317, 319, 320, 321, 322, 324, 325, 395], "download": [2, 7, 10, 73, 75, 76, 77, 79, 80, 81, 123, 183, 205, 353, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 138, 394, 405, 406, 407], "robosetexperiencereplai": [2, 99, 100], "fk1": [2, 80], "v4": [2, 80, 119, 137, 153, 187, 342, 343, 344, 345, 347, 348, 349, 350, 393, 395, 408, 412], "expert": [2, 80], "fk1_microopenrandom_v2d": [2, 80], "func": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 208, 395], "obs_norm": 2, "norm": [2, 4, 8, 111, 112, 222, 370, 393, 394, 395, 405, 406, 407], "num_work": [2, 48, 50, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 132, 137, 144, 393, 394], "os": [2, 50, 63, 82, 394], "cpu_count": [2, 50, 63, 82], "num_chunk": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81], "1000": [2, 4, 52, 86, 91, 99, 100, 115, 119, 137, 138, 144, 145, 160, 207, 220, 238, 262, 263, 285, 289, 314, 393, 394, 395, 396, 398, 400, 402, 408, 409], "mp_start_method": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 137, 144, 394, 411], "fork": [2, 5, 73, 74, 75, 76, 77, 78, 79, 80, 81, 393, 394, 395, 396, 405, 406, 408, 411], "recreat": [2, 407], "customari": [2, 388], "moreov": [2, 3], "fine": [2, 3, 24, 52, 59, 60, 92, 94, 99, 115, 119, 137, 138, 144, 145, 157, 177, 400, 408], "grain": [2, 3, 52, 59, 60, 92, 94, 99, 115, 119, 137, 138, 144, 145, 157], "nomenclatur": 2, "compact": [2, 57, 83, 84, 90], "propos": [2, 160, 170, 248, 314, 323, 388, 396, 409], "replaybufferensembl": [2, 73, 97, 103, 110], "primit": [2, 3, 4, 79, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325], "individu": [2, 4, 18, 19, 20, 21, 43, 63, 92, 94, 105, 115, 119, 129, 130, 137, 138, 144, 145, 209, 393, 406], "dummi": [2, 3, 145, 351, 393, 400, 412], "semant": [2, 55, 56, 118, 120, 388], "ident": [2, 3, 14, 15, 16, 43, 48, 50, 52, 53, 59, 60, 86, 94, 99, 115, 118, 119, 120, 132, 137, 138, 144, 145, 170, 222, 252, 253, 300, 302, 315, 320, 322, 324, 325, 333, 334, 335, 336, 382, 383, 394, 397, 405, 406], "another_kei": [2, 94], "renam": [2, 48, 50, 53, 94, 186, 188, 218, 393], "resiz": [2, 3, 81, 94, 160, 394, 396, 397, 409, 412], "imag": [2, 3, 4, 7, 11, 79, 162, 165, 183, 199, 205, 247, 351, 353, 393, 394, 397, 401, 406, 408, 412], "comops": 2, "totensorimag": [2, 3, 81, 94, 160, 187, 394, 396, 409, 411, 412], "renametransform": [2, 94, 115, 119, 137, 138, 144, 145], "rb0": [2, 94], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 131, 137, 138, 144, 145, 150, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 198, 199, 200, 201, 203, 205, 207, 223, 224, 234, 242, 246, 249, 264, 273, 274, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 289, 291, 292, 293, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 313, 315, 316, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 352, 353, 380, 388, 393, 394, 395, 396, 398, 399, 402, 404, 405, 406, 407, 408, 409, 411, 412], "pixel": [2, 3, 7, 30, 81, 94, 113, 114, 118, 120, 121, 141, 160, 162, 165, 170, 173, 175, 179, 181, 183, 187, 199, 203, 205, 228, 258, 259, 351, 353, 388, 393, 394, 396, 401, 405, 408, 409, 411, 412], "rb1": [2, 94], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 131, 137, 138, 144, 145, 150, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 173, 175, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 196, 198, 199, 200, 203, 205, 207, 223, 224, 234, 235, 242, 246, 249, 264, 265, 273, 274, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 299, 300, 301, 302, 307, 308, 313, 315, 316, 319, 320, 321, 322, 324, 331, 333, 334, 335, 336, 351, 353, 366, 380, 388, 393, 394, 395, 396, 398, 402, 404, 405, 406, 407, 408, 409, 411, 412], "pixels33": [2, 94], "data0": [2, 94], "244": [2, 94, 183, 205, 407], "data1": [2, 94], "_": [2, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 116, 123, 146, 147, 161, 166, 168, 169, 177, 179, 186, 199, 207, 209, 276, 288, 293, 298, 299, 300, 302, 303, 307, 308, 315, 319, 320, 322, 324, 325, 333, 334, 335, 336, 355, 393, 394, 395, 396, 402, 405, 406, 407, 409, 411], "rang": [2, 3, 4, 8, 12, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 105, 115, 116, 119, 129, 130, 137, 138, 144, 145, 188, 199, 207, 209, 241, 245, 316, 324, 325, 389, 390, 393, 395, 396, 399, 400, 402, 405, 406, 407, 409, 411], "parent": [2, 3, 21, 30, 31, 36, 37, 56, 62, 74, 94, 103, 110, 115, 119, 137, 138, 144, 145, 153, 157, 160, 161, 164, 167, 170, 173, 174, 179, 183, 191, 195, 196, 197, 198, 200, 202, 203, 209, 242, 246, 277, 296, 317, 319, 337, 351, 353, 393, 400, 407, 411, 412], "basic": [2, 131, 388, 395, 399, 400, 402, 405, 412], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 156, 200, 201, 207, 209, 233, 243, 255, 260, 270, 271, 272, 284, 299, 302, 317, 319, 321, 322, 398, 400, 407, 409], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 68, 102, 108, 115, 119, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 218, 219, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 252, 253, 254, 255, 256, 262, 263, 265, 266, 267, 268, 269, 271, 274, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 364, 368, 373, 380, 388, 389, 390, 393, 394, 395, 396, 397, 405, 406, 407, 411, 412], "send": [2, 3, 8, 360, 411], "receiv": [2, 3, 43, 54, 115, 119, 137, 138, 144, 145, 200, 201, 209, 247, 339, 389, 393, 395, 399, 404, 407], "spawn": [2, 3, 4, 18, 22, 123, 132, 137, 144, 394, 405, 406], "check_env_spec": [2, 3, 119, 137, 153, 185, 351, 386, 395, 405, 406, 407], "saniti": [2, 3, 7, 211, 395], "automati": 2, "make_composite_from_td": [2, 62, 386, 407], "fall": [2, 4, 75], "categori": [2, 30, 76, 388, 390], "bound": [2, 3, 4, 21, 28, 30, 43, 64, 115, 119, 137, 138, 144, 145, 163, 178, 207, 209, 210, 238, 239, 262, 263, 266, 267, 276, 281, 282, 285, 286, 287, 288, 289, 292, 299, 300, 302, 303, 315, 319, 320, 322, 324, 325, 386, 388, 393, 394, 395, 405, 407, 411, 412], "unbound": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 154, 157, 166, 169, 185, 197, 215, 223, 249, 276, 288, 291, 293, 321, 386, 407, 409], "boundeddiscret": [2, 27, 30, 395], "boundedcontinu": [2, 22, 27, 30, 115, 119, 137, 138, 144, 145, 395, 405, 406, 407, 411, 412], "unboundeddiscret": [2, 64, 138, 386, 407], "unboundedcontinu": [2, 64, 115, 119, 137, 138, 144, 145, 185, 215, 291, 296, 386, 395, 396, 405, 406, 407, 412], "implicitli": 2, "explicitli": [2, 3, 4, 29, 83, 84, 90, 156, 285, 389, 394, 396, 400, 405, 406, 409], "onehot": [2, 25, 26, 29, 33, 41, 42, 47, 111, 112, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 235, 265, 281, 286, 304, 306, 307, 308, 331, 388, 398], "multionehot": [2, 39, 40, 42, 304, 307, 308, 331, 386], "multicategor": [2, 40, 41, 42, 386], "binari": [2, 3, 7, 26, 154, 158, 235, 265, 281, 282, 286, 287, 304, 307, 308, 331, 386], "concept": [2, 115, 119, 137, 138, 144, 145, 394, 409], "arbitrari": [2, 3, 25, 52, 115, 119, 137, 138, 144, 145, 156, 388, 393, 394, 407, 409], "combin": [2, 4, 35, 200, 324, 394, 401, 409], "relat": [2, 3, 4, 10, 49, 137, 173, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 394, 402, 407], "nevertheless": [2, 3, 395, 397, 409], "expand": [2, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 99, 100, 157, 288, 291, 300, 302, 315, 317, 320, 322, 324, 325, 405, 406, 407, 409, 411], "otherwis": [2, 12, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 99, 100, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 160, 161, 168, 179, 196, 197, 198, 201, 207, 209, 222, 240, 243, 244, 252, 253, 271, 272, 281, 286, 292, 300, 302, 311, 317, 318, 322, 333, 335, 336, 366, 367, 390, 393, 394, 395, 396, 407, 412], "similarli": [2, 21, 43, 98, 103, 115, 119, 137, 138, 144, 145, 209, 252, 290, 291, 307, 315, 412], "possess": [2, 62, 75], "unsqueez": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 154, 157, 160, 161, 199, 202, 215, 393, 396, 405, 406, 407], "move": [2, 4, 43, 62, 81, 115, 119, 120, 137, 138, 144, 145, 153, 164, 167, 183, 197, 200, 201, 203, 205, 207, 209, 218, 247, 288, 368, 393, 394, 396, 397, 411, 412], "unbind": [2, 48, 49, 50, 52, 53, 59, 60, 242, 246], "said": [2, 395], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 49, 59, 62, 91, 92, 160, 173, 184, 202, 310, 333, 335, 336, 389, 395, 405, 406, 407], "seen": [2, 18, 19, 20, 21, 30, 31, 37, 56, 115, 119, 137, 138, 144, 145, 389, 393, 394, 396, 399, 405, 406, 409], "predict": [2, 3, 43, 54, 234, 236, 248, 249, 280, 294, 299, 301, 306, 309, 311, 312, 316, 319, 321, 332, 388, 393, 394, 399], "deprec": [2, 23, 26, 28, 31, 33, 37, 38, 40, 42, 43, 46, 47, 66, 68, 115, 119, 137, 138, 144, 145, 201, 209, 212, 216, 239, 299, 301, 302, 304, 307, 308, 309, 315, 316, 319, 320, 321, 322, 331, 333, 334, 335, 336, 341, 412], "utmost": 2, "commonli": [2, 92, 99, 100, 412], "emploi": [2, 256], "languag": [2, 24, 54], "scarc": 2, "address": [2, 409], "subdomain": 2, "facilit": [2, 3, 7, 182, 183, 197, 203, 205, 277, 278, 279, 388, 393, 396, 398, 407], "extern": [2, 3, 166, 169, 405, 412], "token": [2, 50, 51, 54, 61, 63, 82], "dm": [3, 393, 412], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 49, 52, 59, 60, 63, 79, 96, 102, 105, 106, 108, 109, 111, 112, 115, 119, 123, 124, 125, 131, 132, 133, 137, 138, 144, 145, 146, 188, 197, 203, 204, 252, 254, 277, 283, 299, 300, 302, 303, 304, 306, 307, 308, 310, 315, 319, 320, 321, 322, 324, 325, 360, 370, 388, 389, 390, 393, 394, 396, 397, 398, 399, 401, 405, 406, 407, 409, 412], "goal": [3, 4, 73, 74, 75, 76, 77, 78, 79, 80, 81, 196, 393, 394, 395, 396, 406, 407], "abl": [3, 128, 139, 140, 242, 246, 393, 395, 396, 398, 404, 405, 406, 407, 409, 411], "experi": [3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 91, 92, 211, 355, 356, 357, 358, 359, 360, 387, 394, 395, 400, 401, 405, 406, 409], "box": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 118, 120, 254, 317], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 115, 116, 119, 129, 130, 137, 138, 139, 140, 142, 143, 144, 145, 160, 163, 170, 176, 177, 179, 181, 186, 188, 191, 197, 200, 206, 207, 209, 351, 380, 393, 394, 395, 396, 404, 406, 408, 409, 411, 412], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 111, 112, 115, 119, 131, 137, 138, 144, 145, 164, 168, 170, 177, 183, 197, 200, 201, 203, 205, 209, 223, 224, 225, 226, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 253, 254, 257, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 289, 290, 291, 293, 296, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 380, 388, 389, 393, 394, 395, 396, 398, 399, 402, 404, 405, 406, 407, 408, 411], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 64, 94, 115, 119, 137, 138, 144, 145, 155, 156, 200, 206, 211, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 288, 289, 290, 292, 295, 317, 319, 394, 396, 400, 407, 409], "organis": [3, 80, 115, 119, 137, 138, 144, 145, 201, 394], "structur": [3, 7, 48, 49, 50, 52, 53, 54, 59, 60, 62, 63, 105, 115, 119, 137, 138, 144, 145, 166, 169, 219, 252, 262, 263, 299, 319, 333, 334, 335, 336, 337, 386, 389, 393, 395, 396, 397, 400, 405, 406, 407, 408], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 79, 115, 118, 119, 120, 137, 138, 144, 145, 153, 170, 183, 203, 207, 209, 242, 246, 289, 299, 300, 302, 303, 304, 306, 308, 309, 310, 313, 315, 317, 319, 320, 321, 322, 324, 325, 331, 393, 396, 407], "live": [3, 13, 14, 15, 16, 17, 19, 20, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 137, 138, 144, 145, 170, 209], "actual": [3, 4, 7, 48, 50, 53, 73, 75, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 206, 373, 389, 393, 395, 405, 406, 407], "retriev": [3, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 97, 115, 118, 119, 120, 137, 138, 144, 145, 161, 167, 170, 179, 218, 223, 225, 249, 284, 285, 289, 292, 296, 299, 300, 301, 302, 304, 316, 319, 320, 322, 324, 325, 331, 333, 334, 335, 336, 384, 390, 394, 395, 398, 407, 412], "care": [3, 8, 115, 119, 137, 138, 144, 145, 200, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 353, 393, 395, 405, 406, 407, 409], "parametr": [3, 256, 289, 300, 302, 307, 315, 322, 393, 395], "hardwar": 3, "observation_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 179, 181, 183, 185, 187, 191, 193, 195, 196, 197, 198, 199, 200, 202, 203, 206, 207, 209, 223, 242, 246, 249, 374, 380, 393, 395, 399, 404, 405, 406, 407, 412], "pair": [3, 43, 48, 50, 53, 75, 113, 114, 115, 119, 137, 138, 144, 145, 188, 197, 242, 277, 285, 289, 317, 333, 334, 335, 336, 337, 388, 389, 393, 394, 395, 398, 399, 404, 407, 412], "state_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 223, 249, 407, 412], "reward_spec": [3, 115, 119, 131, 137, 138, 144, 145, 154, 157, 158, 163, 164, 166, 167, 169, 185, 189, 190, 191, 193, 200, 202, 209, 223, 249, 395, 405, 406, 407, 412], "done_spec": [3, 115, 119, 137, 138, 144, 145, 166, 167, 169, 170, 185, 200, 209, 219, 405, 406, 407, 412], "flag": [3, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 137, 138, 144, 145, 146, 147, 176, 262, 263, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 388, 405, 406, 407, 408], "input_spec": [3, 115, 119, 131, 137, 138, 144, 145, 153, 157, 164, 166, 167, 168, 179, 181, 185, 186, 191, 192, 195, 196, 197, 200, 201, 202, 204, 209, 395, 407], "full_action_spec": [3, 115, 119, 135, 136, 137, 138, 144, 145, 153, 223, 249, 395, 405, 406], "full_state_spec": [3, 115, 119, 137, 138, 144, 145, 153, 223, 249, 395], "lock": [3, 30, 31, 37, 48, 50, 53, 56, 115, 119, 137, 138, 144, 145, 157, 197, 207, 407], "output_spec": [3, 115, 119, 137, 138, 144, 145, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 201, 209, 407], "full_observation_spec": [3, 115, 119, 137, 138, 144, 145, 223, 249], "full_reward_spec": [3, 115, 119, 137, 138, 144, 145, 157, 167, 185, 405, 406], "full_done_spec": [3, 115, 119, 137, 138, 144, 145, 157, 167, 185, 219, 405, 406], "carri": [3, 21, 41, 63, 115, 119, 137, 138, 144, 145, 197, 317, 394, 396, 405, 406, 407, 409], "nontensorspec": [3, 386], "importantli": [3, 285, 289], "action_s": 3, "help": [3, 4, 43, 62, 115, 119, 137, 138, 144, 145, 170, 209, 299, 301, 316, 319, 321, 387, 389, 393, 394, 395, 396, 405, 406], "With": [3, 124, 125, 128, 196, 390, 394, 404, 405, 406, 409, 412], "necessarili": [3, 115, 119, 137, 138, 144, 145, 412], "present": [3, 43, 48, 49, 50, 52, 53, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 98, 115, 118, 119, 137, 138, 144, 145, 171, 188, 192, 197, 201, 209, 218, 219, 227, 228, 229, 230, 231, 237, 242, 244, 246, 256, 261, 262, 263, 284, 288, 289, 290, 291, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 384, 390, 393, 402, 404, 405, 406, 409, 411], "0s": [3, 73, 79, 197, 396], "step_and_maybe_reset": [3, 115, 119, 137, 138, 144, 145, 397], "done_kei": [3, 23, 34, 36, 44, 57, 83, 84, 90, 115, 119, 137, 138, 144, 145, 156, 160, 170, 188, 195, 209, 218, 405, 406], "assign": [3, 4, 14, 15, 17, 27, 43, 48, 50, 53, 64, 115, 119, 137, 138, 144, 145, 201, 209, 302, 303, 304, 306, 322, 395, 398, 405, 406, 409], "_reset": [3, 115, 119, 131, 137, 138, 144, 145, 154, 156, 157, 160, 166, 169, 176, 185, 219, 223, 249, 405], "data_": [3, 115, 119, 137, 138, 144, 145], "append": [3, 8, 11, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 137, 138, 144, 145, 156, 163, 164, 188, 197, 201, 206, 241, 242, 245, 246, 281, 286, 393, 394, 395, 396, 405, 406, 407, 408, 409, 411], "seed": [3, 14, 15, 16, 17, 21, 52, 59, 60, 80, 94, 115, 119, 131, 137, 138, 139, 140, 144, 145, 146, 147, 154, 157, 166, 169, 185, 201, 211, 351, 370, 405], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 217, 227, 236, 239, 258, 267, 276, 285, 288, 289, 292, 300, 317, 366, 388, 393, 394, 396, 398, 399, 402, 405, 407, 411, 412], "preced": [3, 43, 396], "risk": [3, 184], "overlap": [3, 59, 105], "reproduc": [3, 160, 211, 393, 395, 406], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 43, 48, 50, 51, 54, 61, 63, 64, 82, 86, 87, 88, 91, 92, 107, 115, 119, 137, 138, 144, 145, 168, 189, 195, 196, 198, 222, 270, 271, 272, 292, 300, 302, 307, 308, 315, 317, 318, 322, 353, 367, 393, 394, 395, 396, 398, 405, 406, 409], "max_step": [3, 11, 105, 115, 119, 129, 130, 131, 137, 138, 144, 145, 146, 147, 195, 209, 351, 397, 398, 399, 401, 402, 405, 406, 411, 412], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 111, 112, 115, 119, 131, 137, 138, 144, 145, 159, 177, 221, 224, 235, 239, 242, 246, 249, 263, 264, 265, 273, 274, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 290, 291, 292, 294, 296, 300, 302, 303, 307, 308, 310, 311, 312, 313, 315, 317, 320, 322, 324, 325, 331, 332, 333, 334, 335, 336, 366, 380, 386, 393, 395, 396, 399, 402, 404, 405, 406, 407, 408, 412], "trail": [3, 207], "treat": [3, 43, 389, 398, 399], "figur": [3, 393, 395, 396, 406, 407, 412], "brief": [3, 395, 397, 399, 409], "deliveri": 3, "design": [3, 43, 97, 103, 110, 115, 119, 129, 130, 137, 138, 144, 145, 153, 160, 184, 201, 209, 280, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 407, 409, 412], "metaclass": 3, "everi": [3, 8, 30, 31, 37, 43, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 101, 115, 119, 137, 138, 144, 145, 195, 196, 207, 209, 215, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 252, 253, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 317, 370, 390, 393, 394, 395, 396, 397, 398, 405, 406, 407], "flank": [3, 396], "dual": 3, "strictli": [3, 8, 43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322, 393, 395], "refer": [3, 7, 8, 9, 11, 21, 24, 43, 54, 115, 118, 119, 120, 137, 138, 144, 145, 201, 207, 209, 223, 235, 236, 249, 250, 251, 252, 253, 254, 258, 259, 266, 267, 282, 299, 302, 309, 310, 311, 312, 319, 322, 333, 338, 346, 392, 393, 395, 398, 399, 400, 401, 405, 406, 409, 412], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 91, 92, 115, 119, 137, 138, 144, 145, 179, 183, 188, 190, 203, 205, 207, 209, 218, 226, 233, 250, 251, 252, 253, 255, 256, 260, 264, 270, 271, 272, 273, 288, 306, 308, 314, 320, 323, 346, 364, 366, 367, 375, 376, 378, 380, 381, 382, 383, 384], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 129, 130, 148, 393], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 79, 92, 99, 100, 386], "adjac": [3, 23, 173, 284], "reli": [3, 11, 23, 197, 240, 241, 242, 244, 245, 246, 299, 319, 389, 393, 395, 398, 400, 407, 412], "junction": 3, "inittrack": [3, 242, 246, 284, 393, 396], "tutori": [3, 138, 385, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 412], "scratch": [3, 8, 394, 407], "gym3": 3, "envpool": [3, 132, 133], "interfac": [3, 122, 134, 247, 255, 388, 389, 393, 395, 401, 407, 409], "simultan": [3, 20, 132, 133, 137, 144, 407], "advantag": [3, 8, 237, 299, 301, 316, 319, 321, 333, 334, 335, 336, 337, 338, 340, 342, 344, 346, 347, 349, 389, 390, 393, 394, 395, 396, 406, 407, 412], "scale": [3, 4, 24, 75, 115, 119, 137, 138, 144, 145, 160, 177, 179, 190, 196, 199, 207, 222, 236, 243, 257, 266, 267, 271, 272, 277, 278, 279, 285, 289, 291, 299, 300, 302, 315, 319, 320, 321, 322, 368, 374, 384, 388, 393, 394, 395, 396, 398, 406, 411], "varieti": [3, 11], "inherit": [3, 115, 119, 137, 138, 144, 145, 248, 252, 253, 317, 390, 395, 405, 406], "Of": [3, 7, 387, 407, 412], "cours": [3, 4, 387, 407, 412], "from_pixel": [3, 11, 111, 112, 113, 114, 118, 120, 121, 124, 125, 141, 160, 187, 351, 353, 393, 394, 396, 397, 401, 402, 408, 409, 411, 412], "81": [3, 394, 405, 407], "simpli": [3, 6, 48, 50, 53, 63, 103, 105, 110, 171, 192, 206, 317, 388, 389, 393, 395, 399, 405, 406, 412], "d": [3, 49, 52, 59, 60, 76, 78, 80, 81, 82, 91, 92, 222, 240, 244, 285, 289, 411], "privat": [3, 115, 119, 137, 138, 144, 145, 206, 407, 412], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 39, 41, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 105, 301, 316, 319, 361, 363, 366, 370, 373, 374, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 54, 94, 97, 179, 190, 243, 255, 266, 271, 272, 331, 388, 398, 399, 405, 407, 409], "inner": [3, 115, 119, 137, 138, 144, 145, 168, 390, 394, 395, 406, 412], "logic": [3, 405], "kept": [3, 23, 98, 100, 168, 192, 200, 211, 218, 243, 271, 272, 399, 405], "mind": [3, 73, 79, 92, 99, 100, 115, 119, 137, 138, 144, 145, 405, 406], "desig": 3, "wherev": 3, "expos": [3, 141, 166, 169, 290, 394], "modif": [3, 5, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 173, 209, 219, 317, 389, 395, 407], "lost": [3, 8, 206], "eras": [3, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 45, 46, 47, 62, 64, 65, 66, 67, 68, 92, 99, 115, 119, 137, 138, 144, 145, 201], "intern": [3, 391], "face": [3, 5, 8, 9, 397, 412], "NOT": [3, 83, 84, 90, 184], "outsid": [3, 16, 389, 401, 405, 406, 407], "right": [3, 6, 7, 23, 54, 92, 99, 394, 395, 406, 407, 412], "preliminari": 3, "warranti": 3, "affect": [3, 8, 43, 115, 119, 137, 138, 144, 145, 200, 201, 209, 211, 333, 334, 335, 336, 405], "preclud": 3, "presenc": [3, 399], "annihil": 3, "reason": [3, 4, 8, 43, 79, 115, 119, 137, 138, 139, 140, 144, 145, 183, 203, 209, 246, 389, 393, 394, 395, 399, 400, 405, 407, 409], "advanc": [3, 21, 49, 52, 59, 60, 119, 397, 400, 409], "superse": 3, "pettingzoowrapp": [3, 386], "group": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 115, 119, 128, 129, 130, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 388, 394, 398, 400, 406, 409], "associ": [3, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 266, 384, 393, 409], "environemtn": 3, "__not__": [3, 285, 300, 302, 315, 320, 322, 324, 325], "constrain": [3, 177, 242, 246, 319], "li": 3, "fact": [3, 7, 8, 393, 395, 397, 405, 406, 407, 408, 409, 412], "know": [3, 4, 9, 49, 52, 59, 60, 118, 120, 220, 221, 317, 320, 366, 393, 394, 395, 396, 397, 398, 399, 400, 405, 406, 409], "meaning": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "perfectli": [3, 390, 393, 407], "meaningless": 3, "val": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 399, 411], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 73, 115, 119, 137, 138, 144, 145, 156, 384, 388], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 91, 92, 94, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 156, 157, 160, 161, 166, 168, 169, 170, 171, 173, 177, 178, 179, 181, 183, 185, 186, 188, 190, 191, 192, 195, 197, 199, 201, 202, 203, 205, 207, 209, 211, 215, 218, 219, 222, 223, 224, 225, 226, 228, 229, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 263, 271, 272, 276, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 328, 331, 333, 334, 335, 336, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 360, 363, 364, 366, 367, 368, 370, 384, 394, 395, 396, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "500": [3, 393, 394, 407, 411, 412], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 73, 76, 137, 144], "bottleneck": [3, 8, 92, 99, 100], "great": [3, 7, 8, 405, 411], "speedup": [3, 8, 405, 412], "precis": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 166, 169, 218, 241, 245, 393, 395], "misspecifi": 3, "caus": [3, 7, 8, 86, 87, 107, 115, 119, 123, 137, 138, 144, 145, 184, 412], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 79, 86, 115, 119, 137, 138, 144, 145, 148, 160, 172, 178, 188, 196, 197, 198, 201, 209, 211, 220, 221, 238, 239, 262, 263, 302, 317, 322, 393, 395, 405, 406, 409, 412], "mismatch": [3, 394], "subprocess": [3, 14, 15, 17, 116, 137, 144], "multithreadedenv": [3, 386], "underneath": 3, "higher": [3, 4, 92, 163, 292, 393, 394, 395, 405, 409, 412], "flexibl": [3, 9, 132, 326, 389, 390, 393, 409, 412], "cover": [3, 118, 120, 387, 395, 397, 400, 401, 407, 411], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 31, 37, 43, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 81, 82, 94, 115, 119, 128, 131, 134, 137, 138, 139, 140, 144, 145, 157, 164, 166, 167, 170, 171, 177, 183, 185, 186, 192, 195, 197, 200, 201, 203, 205, 207, 209, 213, 217, 220, 221, 225, 226, 247, 252, 253, 256, 264, 273, 281, 285, 288, 289, 296, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 327, 331, 339, 351, 382, 386, 388, 393, 394, 395, 400, 405, 406, 407, 409, 412], "atari": [3, 4, 73, 160, 353, 401, 412], "classic": [3, 131, 140, 394], "benchmark_batched_env": 3, "seamlessli": [3, 407], "infrastructur": [3, 405, 406], "act": [3, 4, 99, 100, 139, 140, 201, 234, 253, 300, 302, 303, 315, 320, 322, 324, 325, 396, 405, 406, 409], "world": [3, 5, 131, 294, 311, 401, 405, 406, 407, 412], "paradigm": [3, 17, 406], "decpodp": 3, "game": [3, 4, 5, 73, 129, 130, 135, 136, 353, 401], "thank": [3, 393, 397], "carrier": [3, 395, 396, 397, 409], "particular": [3, 43, 63, 75, 76, 115, 119, 137, 138, 144, 145, 201, 209, 389, 390, 394, 396, 397, 404, 406, 409], "thu": [3, 316, 406], "let": [3, 6, 7, 11, 23, 43, 49, 52, 59, 60, 61, 115, 119, 137, 138, 139, 140, 144, 145, 160, 209, 242, 246, 252, 253, 281, 366, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "vma": [3, 146, 147, 351, 405, 406], "robot": [3, 5, 7, 79, 183, 203, 205, 406], "vmasenv": [3, 351, 386, 405, 406], "balanc": [3, 113, 114, 393, 394], "num_env": [3, 21, 118, 122, 133, 146, 147, 351, 405, 406], "n_agent": [3, 146, 147, 252, 253, 254, 264, 273, 331, 351, 405, 406], "ground_rew": 3, "pos_rew": [3, 406], "style": [3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81], "vari": [3, 118, 120, 121, 139, 140, 141, 146, 184, 406], "creation": [3, 137, 144, 412], "info_spec": [3, 137], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 33, 41, 42, 47, 111, 112, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 153, 154, 170, 185, 219, 235, 260, 265, 281, 282, 285, 286, 287, 304, 307, 308, 331, 386, 396, 405, 406, 412], "simpl": [3, 9, 43, 62, 115, 119, 137, 138, 144, 145, 209, 228, 284, 289, 304, 306, 317, 321, 333, 388, 389, 393, 394, 395, 397, 398, 399, 405, 406, 409, 412], "prefix": [3, 23, 43, 48, 50, 53, 63, 115, 119, 137, 138, 144, 145, 201, 209, 285, 302, 317, 322, 352, 396, 399, 412], "exactli": [3, 43, 115, 119, 121, 137, 138, 144, 145, 201, 209, 240, 244, 302, 322, 393, 396, 400, 405, 406], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 115, 119, 137, 138, 144, 145, 153, 154, 168, 210, 218, 220, 221, 223, 238, 239, 248, 249, 262, 263, 284, 405, 406], "reward_kei": [3, 34, 36, 44, 57, 83, 84, 90, 115, 119, 137, 138, 144, 145, 209, 218, 223, 249, 364, 368, 405, 406], "set_kei": [3, 170, 299, 301, 302, 304, 307, 308, 309, 315, 316, 317, 319, 320, 321, 322, 331, 337, 393, 405, 406], "awai": [3, 395, 397, 405, 406], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 39, 40, 41, 42, 45, 46, 47, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 176, 195, 289], "full": [3, 115, 119, 137, 138, 144, 145, 242, 246, 282, 361, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "autoresettransform": 3, "invalid": [3, 43, 105, 115, 119, 137, 138, 144, 145, 148, 209, 250, 251], "nan": [3, 156, 206], "auto_reset": [3, 115, 119, 137, 138, 144, 145, 156, 209, 407], "auto_reset_replac": [3, 156], "placehold": [3, 121, 170, 201], "set_gym_backend": [3, 115, 118, 119, 137, 138, 144, 145, 149, 156, 386, 397], "autoresettinggymenv": [3, 156], "_step": [3, 115, 119, 137, 138, 144, 145, 154, 156, 157, 166, 169, 173, 185, 186], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 37, 43, 48, 50, 53, 56, 115, 119, 131, 137, 138, 144, 145, 154, 156, 157, 164, 166, 169, 183, 185, 197, 200, 201, 203, 205, 209, 220, 221, 223, 235, 238, 249, 252, 253, 264, 273, 285, 288, 293, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 390, 393, 395, 407, 411, 412], "super": [3, 131, 154, 156, 157, 166, 169, 185, 223, 235, 249, 293, 300, 302, 303, 308, 315, 320, 322, 324, 325, 393, 407, 411, 412], "td_reset": [3, 156], "exclud": [3, 8, 75, 80, 115, 119, 137, 138, 144, 145, 156, 160, 171, 218, 264, 301, 319, 405, 406, 409], "r": [3, 4, 43, 153, 154, 156, 163, 179, 193, 207, 222, 224, 241, 289, 298, 332, 351, 388, 394, 407, 412], "break_when_any_don": [3, 115, 119, 137, 138, 144, 145, 156, 209, 224, 284, 406], "3633e": [3, 156], "02": [3, 115, 119, 137, 138, 144, 145, 156, 392, 393, 394, 396, 402, 405, 407, 408, 410], "4877e": [3, 156], "01": [3, 156, 179, 222, 262, 263, 295, 299, 301, 316, 319, 392, 393, 394, 396, 406, 407, 408, 410], "2849e": [3, 156], "7584e": [3, 156], "6609e": [3, 156], "6166e": [3, 156], "8366e": [3, 156], "2761e": [3, 156], "5685e": [3, 156], "4102e": [3, 156], "8111e": [3, 156], "9959e": [3, 156], "0865e": [3, 156], "5644e": [3, 156], "2119e": [3, 156], "2542e": [3, 156], "03": [3, 115, 119, 137, 138, 144, 145, 156, 179, 392, 393, 394, 396, 407, 408, 410], "9952e": [3, 156], "4059e": [3, 156], "2094e": [3, 156], "9009e": [3, 156], "5140e": [3, 156], "3554e": [3, 156], "2920e": [3, 156], "7893e": [3, 156], "6429e": [3, 156], "3057e": [3, 156], "2867e": [3, 156], "6963e": [3, 156], "3818e": [3, 156], "2576e": [3, 156], "2679e": [3, 156], "1640e": [3, 156], "00": [3, 111, 112, 156, 392, 393, 394, 396, 405, 406, 407, 408, 410], "6972e": [3, 156], "0212e": [3, 156], "5959e": [3, 156], "4637e": [3, 156], "3121e": [3, 156], "2168e": [3, 156], "5232e": [3, 156], "7704e": [3, 156], "7457e": [3, 156], "4127e": [3, 156], "1064e": [3, 156], "0854e": [3, 156], "5712e": [3, 156], "2189e": [3, 156], "5235e": [3, 156], "8289e": [3, 156], "0009e": [3, 156], "0257e": [3, 156], "8893e": [3, 156], "5872e": [3, 156], "9405e": [3, 156], "7766e": [3, 156], "0403e": [3, 156], "0626e": [3, 156], "2959e": [3, 156], "7263e": [3, 156], "2775e": [3, 156], "9564e": [3, 156], "0411e": [3, 156], "6769e": [3, 156], "6354e": [3, 156], "8698e": [3, 156], "1765e": [3, 156], "6292e": [3, 156], "5375e": [3, 156], "1820e": [3, 156], "7023e": [3, 156], "5836e": [3, 156], "9016e": [3, 156], "4826e": [3, 156], "6191e": [3, 156], "6387e": [3, 156], "8667e": [3, 156], "2056e": [3, 156], "1147e": [3, 156], "5991e": [3, 156], "0278e": [3, 156], "5219e": [3, 156], "3067e": [3, 156], "6617e": [3, 156], "3322e": [3, 156], "2629e": [3, 156], "4599e": [3, 156], "7298e": [3, 156], "5848e": [3, 156], "0148e": [3, 156], "5745e": [3, 156], "6982e": [3, 156], "7877e": [3, 156], "3527e": [3, 156], "7285e": [3, 156], "6668e": [3, 156], "0583e": [3, 156], "6956e": [3, 156], "3962e": [3, 156], "9845e": [3, 156], "5015e": [3, 156], "5903e": [3, 156], "9993e": [3, 156], "9418e": [3, 156], "0196e": [3, 156], "6557e": [3, 156], "2109e": [3, 156], "8997e": [3, 156], "1507e": [3, 156], "7363e": [3, 156], "0310e": [3, 156], "9574e": [3, 156], "8980e": [3, 156], "0090e": [3, 156], "forecast": 3, "awar": [3, 7, 86, 87, 88, 101, 103, 107, 242, 246, 394, 396], "detect": [3, 81, 317, 389], "return_contigu": [3, 115, 119, 137, 138, 144, 145, 211, 404], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 115, 117, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 170, 171, 172, 173, 176, 177, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 201, 206, 207, 209, 218, 219, 220, 221, 223, 238, 242, 246, 248, 249, 262, 263, 280, 282, 284, 287, 288, 289, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 331, 332, 333, 334, 335, 336, 337, 370, 393, 405, 407], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 30, 32, 43, 49, 54, 59, 64, 79, 91, 92, 94, 115, 119, 137, 138, 144, 145, 153, 156, 160, 164, 166, 169, 177, 179, 183, 188, 189, 190, 196, 197, 199, 200, 201, 203, 205, 207, 209, 220, 221, 222, 224, 233, 236, 240, 243, 244, 247, 250, 251, 255, 256, 266, 267, 270, 272, 288, 292, 295, 297, 298, 299, 300, 301, 302, 306, 307, 308, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 368, 393, 394, 409, 412], "_set_se": [3, 154, 157, 166, 169, 185, 407], "lazystackedtensordict": [3, 56, 73, 115, 119, 131, 137, 138, 144, 145, 404], "float32": [3, 14, 15, 16, 27, 30, 34, 48, 49, 50, 53, 54, 57, 59, 60, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 92, 107, 111, 112, 115, 118, 119, 120, 124, 125, 131, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 153, 157, 166, 169, 170, 171, 179, 181, 185, 186, 188, 192, 195, 197, 199, 215, 218, 223, 224, 234, 235, 242, 246, 249, 262, 263, 264, 265, 273, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 291, 293, 296, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 331, 388, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412], "exclusive_field": [3, 73, 404], "stack_dim": [3, 73, 404], "dramat": 3, "carefulli": [3, 405, 406, 412], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 209, 211, 276, 281, 282, 285, 286, 287, 288, 289, 300, 302, 315, 320, 322, 324, 325, 395, 405, 406], "plain": [3, 8, 397], "larg": [3, 4, 29, 48, 50, 53, 166, 169, 203, 299, 301, 316, 319, 321, 394, 395, 405, 406, 409], "expens": [3, 92, 99, 100, 351, 409], "absent": [3, 30, 31, 37, 56, 75, 115, 119, 137, 138, 144, 145, 201], "torchvis": [3, 11, 183, 205, 355, 405, 411, 412], "base_env": [3, 112, 115, 119, 120, 125, 136, 137, 138, 144, 145, 153, 154, 157, 163, 166, 168, 169, 177, 181, 185, 187, 193, 195, 197, 198, 201, 209, 353, 393, 394, 395, 405, 408, 411, 412], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 131, 137, 138, 144, 145, 152, 155, 157, 164, 170, 197, 201, 209, 225, 226, 247, 254, 298, 317, 351, 375, 376, 382, 383, 384, 394, 409], "bring": [3, 395, 397, 412], "signific": [3, 5, 8, 395, 412], "kind": [3, 52, 62, 218, 399, 405, 409], "consult": 3, "interest": [3, 285, 289, 388, 394, 395, 397, 406, 407, 412], "resize_par": 3, "easi": [3, 5, 11, 73, 78, 113, 114, 115, 119, 124, 125, 137, 138, 144, 145, 220, 221, 238, 239, 262, 263, 388, 389, 393, 394, 395, 406, 408, 409, 412], "graph": [3, 4, 8, 111, 112, 124, 125, 329, 330, 393, 407], "revers": [3, 244], "order": [3, 11, 16, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 100, 115, 119, 137, 138, 144, 145, 161, 166, 169, 181, 201, 209, 276, 281, 288, 290, 291, 293, 299, 300, 302, 303, 307, 308, 315, 319, 320, 321, 322, 324, 325, 394, 405, 406], "chain": [3, 48, 49, 50, 52, 53, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 164, 168, 225, 226, 291, 412], "invers": [3, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 160, 166, 169, 171, 179, 188, 209, 297, 307, 315, 407], "in_keys_inv": [3, 150, 163, 166, 167, 169, 179, 180, 181, 185, 186, 188, 193, 200, 393, 404, 407, 412], "append_transform": [3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 150, 153, 159, 183, 197, 201, 203, 207, 224, 242, 246, 351, 393, 396, 405, 407, 409, 411, 412], "doubletofloat": [3, 393, 395, 404], "float64": [3, 43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 113, 114, 115, 119, 129, 130, 137, 138, 144, 145, 153, 164, 166, 169, 183, 197, 200, 201, 203, 205, 209, 288, 404], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 118, 119, 120, 137, 138, 144, 145, 166, 169, 170, 191, 201, 209, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 351, 353, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 390, 393, 395, 397, 409], "manipul": [3, 4, 8, 113, 114, 183, 203], "third_transform": 3, "unexpect": [3, 43, 115, 119, 137, 138, 144, 145, 209, 412], "behviour": 3, "fortun": [3, 396, 397, 398, 401], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 73, 86, 115, 119, 137, 138, 144, 145, 197, 209, 219, 289, 333, 334, 335, 336, 393, 395, 401, 405, 406], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 86, 87, 88, 92, 98, 99, 101, 103, 107, 115, 119, 137, 138, 144, 145, 157, 164, 166, 167, 169, 171, 177, 185, 186, 192, 195, 200, 201, 207, 209, 244, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 389, 393, 396, 405, 406, 407, 408, 409, 412], "catfram": [3, 284, 394], "hold": [3, 329, 330, 407, 409], "notic": [3, 105, 160, 395, 402, 407], "parenthood": 3, "henc": [3, 49, 184, 219, 252, 388, 393, 395, 405, 406, 407], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 137, 144, 351, 407], "discret": [3, 25, 26, 27, 29, 30, 33, 39, 40, 41, 42, 47, 64, 67, 68, 115, 118, 119, 120, 129, 130, 137, 138, 139, 140, 144, 145, 146, 147, 153, 168, 260, 265, 306, 307, 308, 309, 388, 394, 395, 398, 405, 406, 407, 412], "might": [3, 48, 50, 51, 53, 357, 387, 393, 397, 412], "action_mask": [3, 124, 125, 139, 140, 142, 143, 154], "unavail": [3, 139, 140], "probabl": [3, 4, 8, 54, 94, 97, 224, 233, 235, 238, 240, 242, 244, 246, 247, 250, 251, 260, 271, 272, 285, 289, 302, 388, 394, 398, 411], "probabilistictensordictmodul": [3, 177, 289, 290, 411], "tensordictsequenti": [3, 224, 238, 242, 246, 262, 281, 284, 290, 296, 388, 393, 394, 396, 398, 402, 404, 405, 408, 411], "maskedcategor": [3, 251, 386], "linear": [3, 14, 15, 16, 17, 21, 43, 111, 112, 115, 119, 131, 137, 138, 144, 145, 164, 177, 183, 197, 200, 201, 203, 205, 209, 223, 224, 225, 226, 228, 229, 230, 231, 235, 237, 238, 239, 247, 249, 252, 253, 255, 256, 257, 262, 263, 265, 266, 267, 276, 277, 278, 279, 283, 284, 285, 286, 288, 291, 293, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 380, 388, 394, 404, 408, 411], "in_feat": 3, "out_feat": 3, "logit": [3, 50, 54, 234, 250, 251, 260, 282, 285, 307, 308, 388], "dist": [3, 10, 250, 251, 260, 395, 398], "distribution_class": [3, 177, 277, 278, 279, 280, 285, 289, 291, 299, 300, 302, 307, 308, 315, 319, 320, 321, 322, 388, 393, 395, 398, 405, 406, 411], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 77, 111, 112, 115, 119, 120, 124, 125, 130, 133, 135, 136, 137, 138, 139, 140, 144, 145, 147, 209, 211, 221, 239, 242, 246, 263, 274, 277, 278, 279, 284, 286, 294, 317, 331, 388, 393, 394, 395, 396, 399, 402, 405, 406, 412], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 154, 184, 209], "enviorn": [3, 129, 139, 140, 146, 147], "itself": [3, 43, 115, 119, 137, 138, 144, 145, 149, 156, 209, 317, 324, 395, 397], "ey": 3, "report": [3, 111, 112, 124, 125, 401], "foremost": 3, "callback": [3, 115, 119, 137, 138, 144, 145, 406], "ad": [3, 4, 16, 23, 43, 49, 52, 59, 60, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 115, 119, 137, 138, 144, 145, 191, 201, 209, 222, 255, 256, 262, 263, 299, 301, 302, 304, 309, 316, 319, 322, 331, 394, 396, 398, 405, 409, 412], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 60, 91, 92, 98, 191, 207, 209, 262, 263, 284, 358, 363, 394, 396, 397, 400, 406, 407, 409], "tensordictrecord": [3, 386], "videorecord": [3, 11, 351, 386, 395, 401, 402, 405], "csvlogger": [3, 11, 351, 353, 386, 394, 401, 402, 405], "wandblogg": [3, 386, 401], "tensorboardlogg": [3, 380, 386, 401], "tag": [3, 7, 11, 351, 353, 355, 358, 384, 401, 402, 405], "mp4": [3, 351, 353, 355, 402, 405], "video_format": [3, 351, 353, 355, 402, 405], "whc": 3, "cwh": 3, "exp": [3, 257, 298], "al": [3, 24, 118, 120, 170, 181, 223, 412], "pong": [3, 73, 133, 181, 412], "v5": [3, 118, 120, 133, 170, 181, 412], "cach": [3, 48, 50, 63, 73, 75, 76, 77, 79, 80, 81, 82, 92, 99, 115, 119, 137, 138, 144, 145, 156, 166, 169, 183, 201, 205, 218, 362, 408], "grow": 3, "until": [3, 7, 21, 198, 200, 209, 395, 396, 402, 405, 406], "dumpi": 3, "tediou": [3, 397], "workspac": [3, 115, 119, 137, 138, 144, 145], "pixelrendertransform": [3, 386, 405], "stream": [3, 79], "alik": [3, 351], "envcreat": [3, 16, 22, 137, 144, 351, 380, 381, 384, 386, 393, 394, 411, 412], "render_mod": [3, 351, 407], "rgb_arrai": [3, 351, 405, 406, 407], "uncom": [3, 401], "line": [3, 7, 43, 73, 115, 119, 137, 138, 144, 145, 209, 394, 395, 401, 405, 406, 412], "comment": [3, 390, 394, 411], "pixels_record": [3, 351], "close": [3, 16, 119, 132, 177, 299, 301, 316, 319, 351, 393, 394, 395, 397, 404, 405, 407, 411], "mission": 3, "irrespect": [3, 288, 289], "dmcontrol": [3, 115, 119, 137, 138, 144, 145], "jumanji": [3, 115, 119, 124, 125, 137, 138, 144, 145], "special": [3, 65, 67, 386, 388, 393, 396, 412], "framework": [3, 4, 9, 22, 111, 112, 115, 119, 124, 125, 131, 137, 138, 144, 145, 240, 411, 412], "Its": [3, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 207, 209, 288, 337], "success": [3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 160, 200, 238, 302, 324, 394, 400, 402, 407, 409, 411], "foundat": [3, 5, 139, 140, 395, 406], "inspir": [3, 407], "gone": [3, 4, 5, 284], "hard": [3, 7, 105, 113, 114, 137, 314, 394, 412], "prefer": [3, 14, 15, 17, 20, 23, 24, 49, 52, 59, 60, 184, 192, 319, 324, 367, 388, 395, 405, 406, 409], "maintain": [3, 5, 9, 32, 407], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 394, 395, 396, 400, 405, 406, 407, 409, 412], "decor": [3, 8, 12, 152, 317, 333, 334, 335, 336, 411], "relev": [3, 54, 333, 334, 335, 336, 337, 360, 407], "gym_backend": [3, 152, 386], "env1": [3, 224, 404], "venv": 3, "python3": [3, 6, 7, 10, 395, 412], "site": [3, 6, 7, 80, 152, 395, 412], "env2": [3, 404], "_env": [3, 6, 118, 412], "classic_control": 3, "pendulumenv": [3, 386, 407], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 127, 149], "handi": [3, 115, 119, 137, 138, 144, 145, 401], "side": [3, 4, 412], "v0": [3, 14, 15, 115, 119, 121, 124, 125, 126, 127, 137, 138, 144, 145, 164, 201, 207, 380, 412], "26": [3, 115, 119, 137, 138, 144, 145, 393, 394, 406, 407, 408], "fun": [3, 12, 152, 395, 405, 406], "reveal": 4, "bug": [4, 411], "curv": 4, "exploit": [4, 398], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 177, 405, 406, 408], "coeffici": [4, 24, 32, 54, 177, 406], "bonu": [4, 299, 301, 316, 319], "beta": [4, 49, 59, 91, 92, 307, 315, 316, 393, 394, 409, 411], "reduc": [4, 6, 29, 105, 196, 222, 271, 386, 394, 405], "downstream": [4, 389, 393], "formul": [4, 405, 406], "ob": [4, 8, 23, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 99, 100, 105, 115, 119, 137, 138, 144, 145, 154, 156, 166, 167, 169, 179, 193, 199, 215, 218, 228, 229, 230, 231, 252, 253, 254, 286, 293, 300, 302, 303, 308, 315, 320, 322, 324, 325, 333, 334, 335, 336, 394, 404, 405, 407, 409, 411, 412], "rate": [4, 11, 73, 207, 332, 394, 395, 405, 406], "gradient": [4, 43, 115, 119, 137, 138, 144, 145, 201, 209, 243, 251, 256, 260, 271, 272, 299, 301, 302, 303, 307, 308, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 332, 333, 334, 335, 336, 370, 393, 395, 405, 406, 407], "easier": [4, 388, 393], "local": [4, 7, 10, 16, 21, 43, 92, 99, 115, 119, 137, 138, 144, 145, 201, 209, 252, 253, 264, 273, 331, 358, 360, 401, 402, 405, 406], "optima": 4, "sens": [4, 48, 50, 53, 400, 407], "product": [4, 9, 240, 241, 244, 245, 382, 383], "sum": [4, 21, 41, 105, 111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 159, 191, 250, 251, 271, 273, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 315, 316, 318, 319, 320, 321, 322, 324, 325, 332, 339, 389, 393, 394, 395, 396, 399, 402, 405, 406, 407, 412], "stat": [4, 179, 207, 374, 384, 394, 395], "w": [4, 94, 135, 136, 160, 162, 165, 187, 199, 240, 262, 263, 353, 394, 396, 409], "yield": [4, 14, 15, 16, 21, 43, 115, 119, 137, 138, 144, 145, 209, 317, 393, 399], "insight": 4, "auxiliari": [4, 399], "credit": 4, "futur": [4, 23, 43, 48, 50, 53, 83, 84, 90, 115, 119, 137, 138, 144, 145, 183, 201, 205, 209, 247, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 387, 411], "past": [4, 284, 394, 409], "spars": [4, 396], "intermedi": [4, 14, 15, 159, 224, 242, 246, 282, 393, 408], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 393], "discov": 4, "score": [4, 54], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 411], "select": [4, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 129, 130, 139, 140, 146, 147, 154, 156, 157, 159, 160, 161, 164, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 182, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 203, 204, 206, 207, 209, 210, 223, 242, 246, 281, 286, 369, 393, 397, 409], "explicit": [4, 12, 63, 94, 409], "mechan": [4, 43, 115, 119, 137, 138, 144, 145, 201, 209, 394, 399, 407], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 115, 119, 137, 138, 144, 145, 244, 307, 315, 395, 406], "addition": 4, "timestep": [4, 54, 75, 188, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 405, 406], "realli": 4, "huge": [4, 253, 396], "std": [4, 179, 207, 220, 221, 257, 261, 393, 412], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 396, 397, 399, 400, 401, 402, 403, 404, 408, 409, 410], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 115, 119, 135, 136, 137, 138, 144, 145, 159, 179, 183, 197, 200, 201, 203, 208, 209, 220, 221, 222, 223, 238, 239, 240, 241, 244, 245, 249, 252, 253, 254, 255, 256, 262, 263, 284, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 331, 384, 388, 389, 393, 394, 396, 397, 398, 400, 405, 407, 412], "estim": [4, 73, 92, 99, 100, 170, 177, 228, 271, 277, 278, 279, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 389, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "unseen": 4, "extrins": 4, "wrong": [4, 92, 99], "bonus": 4, "denser": 4, "prior": [4, 267, 311, 406], "freshli": 4, "drop": [4, 98, 100, 218], "meant": [4, 43, 131], "encourag": [4, 137, 393, 394, 409], "measur": [4, 86, 87, 107, 111, 112, 124, 125, 395, 400], "novelti": 4, "revisit": 4, "previous": [4, 395, 412], "diminish": 4, "decreas": [4, 24, 398], "ideal": [4, 179, 407], "down": [4, 14, 15, 16, 17, 389, 396, 397], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 48, 50, 53, 56, 394, 395, 396, 399, 400, 405, 406, 407, 411, 412], "distil": 4, "nois": [4, 208, 256, 262, 263, 275, 320, 324, 325, 366, 384, 393, 405], "exploratori": [4, 299, 301, 316, 319], "misalign": 4, "trade": [4, 398], "unavoid": 4, "divers": [4, 137, 144], "bootstrap": [4, 309, 334, 340, 341, 393, 396], "noisi": [4, 255, 256, 275, 388], "unstabl": [4, 243, 271, 272], "inher": [4, 299, 319], "stochast": [4, 177, 236, 256, 258, 267, 300, 302, 305, 307, 308, 313, 315, 318, 320, 322, 388, 395, 398, 406], "enemi": 4, "pomdp": [4, 409], "loos": [4, 388, 394, 395], "nonexist": 4, "architectur": [4, 232, 399, 405, 406], "sequenc": [4, 14, 15, 16, 17, 24, 30, 31, 37, 39, 41, 49, 51, 52, 54, 56, 61, 63, 79, 82, 85, 94, 95, 97, 103, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145, 150, 158, 159, 160, 161, 162, 165, 166, 168, 169, 173, 175, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 196, 198, 199, 200, 207, 225, 226, 233, 235, 240, 244, 247, 250, 251, 252, 253, 260, 265, 269, 280, 290, 291, 305, 352, 353, 365, 366, 367, 369, 370, 388, 393, 395, 396, 404, 405, 406, 412], "lstm": [4, 197, 245, 246, 257], "rel": [4, 94, 197, 233, 270, 393, 394, 405, 406, 409], "tend": 4, "stabl": [4, 9, 10, 134], "compens": 4, "descent": [4, 256], "minimum": [4, 64, 137, 144, 189, 236, 257, 270, 271, 272, 292, 295, 298, 300, 302, 308, 317, 318, 322, 361, 393, 395, 402, 405, 406], "manual": [4, 11, 18, 20, 21, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 119, 120, 393, 396, 409], "deviat": [4, 179, 207, 220, 221, 223, 236, 249, 255, 256, 261, 319, 324, 325, 393, 398, 406], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 92, 99, 156, 240, 241, 244, 245, 397, 398, 399, 400, 401, 402], "stabil": [4, 174, 299, 301, 316, 319, 321], "stage": [4, 393, 407], "never": [4, 14, 15, 17, 27, 64, 92, 400], "prevent": [4, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 47, 56, 84, 207, 243, 271, 272, 299, 301, 316, 319, 321, 368, 401, 409], "entir": [4, 79, 115, 119, 137, 138, 144, 145, 252, 395, 397, 407, 409], "submit": [4, 118, 157, 387, 411], "system": [4, 5, 84, 395, 405, 406, 407], "adequ": [4, 211, 395, 405, 406], "infeas": 4, "allevi": [4, 388], "prune": 4, "fire": [4, 43, 115, 119, 137, 138, 144, 145, 209], "illeg": 4, "chess": [4, 135, 136], "grasp": 4, "top": [4, 105, 111, 112, 124, 125, 165, 223, 249, 398], "wherein": 4, "cumul": [4, 191, 196, 223, 339, 395], "q": [4, 9, 115, 119, 137, 138, 144, 145, 228, 229, 230, 231, 234, 235, 237, 264, 265, 273, 279, 282, 286, 287, 300, 302, 303, 304, 306, 307, 308, 309, 314, 315, 320, 322, 324, 325, 331, 386, 393, 399], "flow": [4, 393, 395, 405, 406, 407, 409], "reparameter": [4, 233, 251, 260], "soft": [4, 314, 322, 323, 405], "critic": [4, 8, 277, 283, 299, 301, 302, 303, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 393, 399], "clip": [4, 54, 163, 189, 299, 301, 316, 319, 321, 324, 325, 370, 395, 406, 407], "oppos": [4, 63], "incorrect": 4, "thought": [4, 115, 119, 137, 138, 144, 145], "region": 4, "squash": [4, 396, 411], "tanh": [4, 225, 226, 240, 241, 243, 244, 245, 247, 253, 270, 271, 272, 292, 395, 398, 405, 406, 407, 408, 411], "prob": [4, 250, 251, 260, 395, 406], "rememb": [4, 405], "remap": 4, "origin": [4, 8, 48, 50, 53, 54, 123, 167, 168, 177, 183, 201, 205, 209, 240, 285, 288, 289, 300, 302, 314, 315, 317, 319, 320, 322, 324, 325, 393, 404, 407, 412], "histor": 5, "ceas": 5, "farama": [5, 77, 126, 127, 139, 140, 395, 407], "best": [5, 9, 123, 242, 246, 405, 406, 409, 411], "gymwrapp": [5, 115, 119, 137, 138, 144, 145, 171, 192, 195, 206, 386, 395, 411, 412], "feel": [5, 387, 402, 411], "free": [5, 7, 166, 169, 299, 311, 319, 390, 395, 402, 406, 411], "gladli": 5, "prepar": [6, 36, 76, 395], "conda": [6, 7, 387], "cmake": 6, "activ": [6, 7, 9, 225, 226, 232, 236, 247, 252, 253, 301, 316, 319, 388, 407, 411], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 76, 387], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 121], "y": [6, 7, 52, 134, 237, 252, 274, 393, 406, 409], "facebookresearch": [6, 76, 121], "subdirectori": 6, "verbos": [6, 402], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 70, 115, 119, 137, 138, 144, 145, 185, 194, 209, 317, 405, 406, 411, 412], "command": [6, 7, 10, 145, 395, 405, 406, 407, 412], "readm": [6, 7, 146], "md": [6, 7], "habitatenv": [6, 386], "_has_habitat": 6, "available_env": [6, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 129, 130, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 412], "startswith": [6, 224, 389, 393, 399], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 116, 317, 393], "env_nam": [6, 111, 113, 115, 118, 119, 121, 124, 126, 132, 137, 138, 141, 144, 145, 393, 395, 412], "llvmlite": 6, "config": [6, 7, 183, 205, 227, 232, 261, 374, 375, 376, 378, 381], "var": [6, 7, 43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 317, 322], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 281, 317], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 317, 322, 409], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 115, 394, 402], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 75], "stand": [7, 35, 113, 114, 137, 144, 404, 407], "joint": [7, 394], "contact": [7, 51, 405], "engin": [7, 141, 407], "biomechan": 7, "graphic": 7, "anim": [7, 406], "area": 7, "demand": [7, 401, 412], "fast": [7, 9, 111, 112, 186, 218, 320, 393, 394, 395], "articul": 7, "acquir": [7, 395], "deepmind": [7, 8, 9, 79, 113, 114, 115, 119, 129, 130, 135, 136, 137, 138, 144, 145, 170, 395, 397], "whomev": 7, "licenc": 7, "incorpor": [7, 115, 119, 137, 138, 144, 145, 220, 221, 238, 239, 262, 263, 324, 396, 398, 407], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 387], "tip": [7, 387], "glfw": [7, 393], "osmesa": 7, "egl": 7, "advic": [7, 79, 412], "sudo": [7, 387], "apt": [7, 406], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 277, 278, 279], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 393, 395, 396, 405, 406, 409], "roboti": 7, "html": [7, 14, 15, 132, 134, 135, 136], "wget": 7, "mujoco210": 7, "tar": [7, 76], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 137, 144], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 48, 50, 63, 82], "bin": [7, 235, 282, 388], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 231, 285, 289, 393, 395, 409], "nvidia": [7, 123], "older": [7, 12], "hack": [7, 393], "adatp": 7, "script": [7, 76, 211, 380, 384, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "unnot": [7, 184], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 84, 394, 409], "troubleshoot": 7, "gl": 7, "h": [7, 94, 160, 162, 165, 187, 199, 240, 241, 242, 244, 245, 246, 249, 353, 394, 396, 409], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 33, 41, 42, 47], "directori": [7, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 86, 358, 360, 390, 393, 398, 401, 405], "devel": 7, "ubuntu": [7, 123], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 394, 396, 404], "libstdc": 7, "glibcxx_3": 7, "29": [7, 394, 405, 407], "compil": [7, 23, 43, 92, 99, 100, 115, 119, 137, 138, 144, 145, 209, 240, 241, 244, 245, 271], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 206, 395, 404], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 178, 201, 209, 302, 322, 389, 412], "job": [7, 18, 19, 20, 22, 52, 59, 60, 94, 409, 411], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 111, 112, 394, 406, 407], "114": [7, 407], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 407], "offscreenopenglcontext": 7, "opengl": [7, 405, 406], "global": [7, 43, 52, 59, 60, 94, 115, 119, 137, 138, 139, 140, 144, 145, 209, 264, 273, 285, 289, 331, 390, 393, 405, 406], "cuda_visible_devic": 7, "id": [7, 23, 54, 92, 94, 99, 100, 115, 118, 119, 137, 138, 144, 145, 262, 263, 302, 320, 356, 360, 400, 409], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 405], "onscreen": 7, "101": [7, 407], "correctli": [7, 43, 115, 119, 137, 138, 144, 145, 209], "lgl": 7, "libegl": 7, "x11": [7, 406], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 390], "n_training_step": 8, "datapoint": [8, 63, 409], "n_data_per_train": 8, "no_grad": [8, 43, 115, 119, 137, 138, 144, 145, 177, 209, 240, 241, 244, 245, 333, 334, 335, 336, 395, 396, 406], "loss_fn": [8, 396, 399, 400, 411], "zero_grad": [8, 43, 115, 119, 137, 138, 144, 145, 209, 390, 393, 395, 396, 399, 402, 405, 406, 407], "backpropag": [8, 111, 112, 124, 125, 137, 299, 300, 301, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 325, 331, 399, 406, 407], "differenti": [8, 63, 111, 112, 177, 302, 324, 333, 334, 335, 336, 396, 398, 399, 405, 406, 407], "denomin": 8, "artifact": 8, "numer": [8, 52, 119, 207, 243, 271, 272, 276, 281, 282, 285, 286, 287, 288, 289, 368, 395, 409, 412], "misconcept": 8, "freed": 8, "appear": [8, 11, 27, 64, 73, 79, 92, 99, 100, 407, 409], "compuat": 8, "fix": [8, 32, 137, 197, 300, 302, 318, 322, 394, 402, 407, 412], "retain_graph": [8, 111, 112], "discuss": [8, 9, 400, 405, 406], "inplac": [8, 43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 209, 393], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 137, 138, 144, 145, 154, 156, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 200, 203, 204, 206, 207, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 266, 267, 269, 273, 274, 280, 282, 284, 285, 287, 288, 289, 292, 293, 295, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 331, 333, 334, 335, 336, 337, 389, 395, 407, 411], "submodul": [8, 43, 115, 119, 137, 138, 144, 145, 149, 197, 209, 242, 246, 296, 317], "param": [8, 43, 54, 115, 119, 131, 137, 138, 144, 145, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209, 233, 235, 252, 253, 254, 270, 280, 285, 288, 291, 317, 327, 330, 333, 334, 335, 336, 337, 393, 402, 405, 406, 407, 408, 411], "grad": [8, 43, 111, 112, 115, 119, 137, 138, 144, 145, 209, 393, 395], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 139, 140, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 257, 264, 288], "factor": [8, 11, 24, 43, 188, 209, 220, 221, 222, 238, 239, 243, 256, 262, 263, 271, 272, 300, 306, 309, 310, 312, 323, 339, 393, 394, 398, 402, 405, 406, 409, 412], "fit": [8, 12, 179, 197, 389, 390, 393], "bottlneck": 8, "brax": [8, 111, 112, 115, 119, 137, 138, 144, 145, 186, 397, 412], "jax": [8, 12, 111, 112, 124, 125], "improperli": 8, "underli": [8, 115, 119, 137, 138, 144, 145, 317, 397, 399, 401, 407], "tedeiou": 8, "priorit": [8, 49, 59, 91, 92, 302, 303, 304, 306, 307, 308, 315, 320, 322, 324, 325, 393, 394, 400], "amount": [8, 262, 263, 394, 409], "costli": [8, 407], "constitut": [8, 394, 406, 407], "profil": 8, "frequent": [8, 409], "program": [8, 307, 315, 412], "functorch": [8, 10], "incl": 8, "suit": [8, 114, 395, 397, 411, 412], "mujoco_instal": 8, "valueerror": [8, 43, 115, 119, 137, 138, 144, 145, 209], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 98, 181, 411, 412], "idea": [9, 320, 390, 396, 398, 405, 406], "introductori": 9, "intro": [9, 395, 396], "dai": [9, 411], "2022": [9, 10, 407, 411], "spin": [9, 113, 114], "deep": [9, 160, 228, 229, 230, 231, 234, 262, 263, 299, 302, 314, 322, 323, 393, 405], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 398], "summari": [9, 179, 207, 393, 394, 395, 396], "reddit": 9, "reagent": 9, "orient": [9, 81, 412], "baselines3": 9, "tf": 9, "bandit": [9, 134], "tensorflow": [9, 250, 251], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 402], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 411], "grade": 9, "factori": [9, 61, 393], "cherri": 9, "jaxrl": 9, "mbrl": [9, 131, 388], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 407], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 395, 396, 405, 406], "notebook": [10, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "24": [10, 80, 100, 118, 132, 133, 284, 392, 393, 394, 396, 405, 407, 408, 410, 411], "pip3": [10, 393, 395, 396, 405, 406], "url": [10, 121], "org": [10, 14, 15, 24, 49, 76, 77, 79, 81, 91, 92, 111, 112, 113, 114, 121, 124, 125, 129, 130, 132, 133, 134, 141, 146, 147, 160, 183, 203, 222, 227, 228, 229, 230, 231, 232, 235, 236, 237, 244, 249, 250, 251, 256, 258, 259, 262, 263, 264, 266, 267, 273, 282, 299, 300, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 321, 322, 323, 324, 333, 338, 346, 385, 403, 408], "whl": 10, "u": [10, 78, 240, 241, 244, 245, 407], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 395, 405, 406, 407, 409], "power": [11, 394], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 386], "ultim": [11, 243, 271, 272], "ffmpeg": 11, "whatev": [11, 389, 393], "fed": [11, 406, 409], "feed": [11, 183, 205, 317, 388, 393, 405, 406, 409], "suppos": [11, 137, 366, 390, 412], "snippet": [11, 183, 203, 393], "gave": 11, "extrem": [11, 137, 144, 299, 301, 316, 319, 321], "blurri": 11, "stitch": 11, "exp_nam": [11, 353, 354, 355, 358, 359, 360, 380, 394, 401, 402], "my_exp": [11, 401], "pixels_onli": [11, 113, 114, 118, 120, 121, 141, 393, 394, 401, 402, 411, 412], "my_video": [11, 401], "record_env": [11, 401, 402], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 279, 388], "module_nam": [12, 317], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 91, 92, 94, 105, 111, 113, 114, 115, 117, 118, 119, 120, 121, 124, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 156, 160, 170, 176, 177, 183, 187, 195, 196, 201, 203, 205, 206, 207, 209, 212, 216, 219, 223, 234, 235, 242, 246, 248, 249, 252, 253, 254, 255, 256, 257, 264, 265, 273, 276, 281, 282, 285, 286, 287, 288, 289, 292, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 328, 331, 332, 333, 334, 335, 336, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 378, 384, 394, 395], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 242, 246, 411], "longer": [12, 394, 402, 405, 406, 409], "x": [12, 23, 43, 52, 54, 79, 100, 177, 199, 222, 224, 226, 235, 237, 240, 241, 242, 244, 245, 246, 247, 249, 252, 253, 274, 281, 285, 286, 295, 298, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 370, 393, 405, 407, 409, 411], "23": [12, 80, 100, 392, 393, 394, 400, 407, 410], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 80, 111, 112, 119, 124, 125, 245, 298, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 393, 394, 395, 396, 402, 405, 406, 407, 409, 412], "classmethod": [12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 203, 227, 261], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 43, 45, 46, 48, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 68, 80, 84, 92, 99, 100, 115, 116, 117, 118, 119, 120, 129, 130, 132, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 177, 197, 201, 206, 207, 209, 225, 226, 227, 228, 229, 230, 231, 232, 237, 247, 261, 285, 289, 302, 322, 324, 357, 358, 366, 375, 376, 382, 383, 384, 393, 394, 395, 409, 412], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 116, 137, 144, 393, 411], "device_typ": [14, 16, 17, 25, 29, 39, 45, 225, 226, 227, 228, 229, 230, 231, 237, 247, 252, 253, 255, 256, 261], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 394], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 394], "create_env_kwarg": [14, 15, 16, 17, 21, 116, 132, 137, 144, 393, 412], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 43, 188, 394, 409], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 285, 317, 366, 393, 394, 395, 396, 398, 405, 411], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 213, 217, 285, 289, 366], "exploration_mod": [14, 16, 17, 18, 19, 20, 386, 388], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 48, 50, 53, 137, 144], "num_sub_thread": [14, 15, 17, 137, 144], "set_trunc": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145], "use_buff": [14, 15, 16, 137, 144], "replay_buffer_chunk": 14, "datacollector": [14, 15, 16, 17, 43, 289, 319, 395, 400, 409], "recept": 14, "safe": [14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 221, 263, 271, 276, 281, 282, 285, 286, 287, 288, 289, 291, 388, 411], "sota": [14, 15, 131, 174, 321, 361, 375, 393, 394, 411], "guard": [14, 15], "doc": [14, 15, 61, 121, 124, 125, 134, 141, 360, 394, 395, 405, 406, 409, 412], "env_mak": [14, 15, 16, 21, 380, 412], "2000": [14, 15, 16, 43, 63, 122, 353, 409], "50": [14, 15, 16, 21, 51, 54, 73, 81, 99, 100, 129, 130, 209, 394, 396, 405, 406, 407, 409], "shutdown": [14, 15, 16, 17, 21, 157, 393, 411], "del": [14, 15, 16, 393, 394, 395, 404, 405, 411, 412], "int64": [14, 15, 16, 23, 25, 26, 29, 33, 34, 39, 40, 41, 42, 47, 48, 50, 51, 53, 54, 57, 59, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 115, 119, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 153, 157, 170, 181, 188, 195, 235, 262, 263, 265, 281, 282, 285, 286, 287, 388, 395, 396, 397, 398, 400, 401, 407, 409, 411], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 159, 274, 281, 284, 286, 396], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 63], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 394], "divis": [14, 15, 16, 17, 18, 19, 20, 73, 79, 92, 99, 100, 222, 406], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 119, 156, 197, 206, 246, 396, 407, 408], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 372, 394], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 82, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 164, 166, 169, 177, 183, 197, 200, 201, 203, 205, 207, 209, 288, 405, 412], "span": [14, 15, 16, 17, 18, 19, 20, 21, 79, 92, 99], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 43, 209, 284, 394, 395, 405, 406], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 54, 360, 388, 405, 406, 407], "round": [14, 15, 16, 17, 18, 19, 20, 21, 73], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 43, 77, 115, 119, 137, 138, 144, 145, 209], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 206, 411], "ratio": [14, 15, 17, 54, 393, 395], "finish": [14, 15, 17, 21, 119, 188, 412], "rest": [14, 15, 17, 388, 395, 396, 405, 407, 411], "earli": [14, 15, 17, 43, 119, 195, 411], "safeti": [14, 15, 17, 131, 137, 144], "harm": [14, 15, 17, 137, 144], "exclus": [14, 15, 69, 70, 73, 79, 92, 99, 100, 157, 171, 173, 240, 242, 244, 246, 250, 251, 281, 282, 286, 287, 323, 324, 325, 333, 334, 335, 336, 337, 360, 384, 388], "add_truncated_kei": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145, 201], "ordereddict": [14, 15, 16, 17, 21, 43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 302, 322, 394], "form": [14, 15, 17, 43, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 115, 119, 137, 138, 144, 145, 207, 209, 240, 242, 244, 246, 298, 299, 301, 316, 319, 370, 388, 395, 398, 406], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 115, 119, 137, 138, 144, 145, 201], "integ": [14, 15, 16, 17, 23, 39, 41, 43, 54, 92, 99, 100, 101, 115, 119, 137, 138, 144, 145, 153, 156, 170, 174, 179, 195, 225, 226, 247, 252, 253, 302, 307, 315, 322, 409], "increment": [14, 15, 16, 17, 115, 119, 137, 138, 144, 145, 179, 316], "env_fn": [14, 15, 16, 17, 116, 382, 383], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 99, 100, 230, 231, 407], "out_se": [14, 15, 16, 17, 412], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 28, 30, 31, 33, 37, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 90, 91, 92, 94, 99, 100, 101, 103, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 154, 155, 157, 164, 183, 185, 194, 197, 200, 201, 202, 204, 205, 208, 209, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 234, 237, 238, 239, 242, 243, 246, 247, 248, 249, 252, 253, 254, 260, 262, 263, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 331, 332, 333, 334, 335, 336, 337, 351, 353, 357, 358, 360, 363, 370, 375, 376, 381, 382, 383, 389, 395, 406], "return_same_td": 16, "interruptor": 16, "cautious": [16, 319], "whole": [16, 30, 31, 37, 43, 56, 63, 115, 119, 137, 138, 144, 145, 201, 209, 285, 302, 322, 361, 393, 395], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 398], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 370], "respect": [18, 19, 20, 43, 115, 119, 137, 138, 144, 145, 158, 164, 166, 169, 183, 184, 193, 197, 200, 201, 203, 205, 209, 240, 244, 252, 267, 288, 293, 299, 301, 316, 319, 321, 333, 335, 336, 365, 395, 396, 405, 406], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 387, 394, 395, 398, 401, 404, 409], "fashion": [18, 20, 21, 48, 50, 53, 100], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 115, 119, 137, 138, 144, 145, 173], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 49, 52, 59, 60, 75, 115, 119, 137, 138, 144, 145, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295, 393], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 407], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 393], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 73, 285, 289], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 382, 383, 393, 394], "coordin": [21, 165], "init": [21, 43, 115, 119, 137, 138, 144, 145, 207, 209, 252, 253, 254, 360, 394, 395], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 232, 394, 409], "equat": [21, 79, 119, 207, 262, 263, 298, 301, 323, 395, 397, 407], "exce": [21, 409], "indefinit": [21, 72], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 222, 370, 393, 396], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 324, 399], "jump": [22, 397], "host": [22, 43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 227, 232, 261, 280], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 27, 28, 29, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 92, 99, 100, 115, 119, 137, 138, 144, 145, 150, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 175, 176, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 207, 209, 210, 218, 219, 220, 221, 224, 235, 238, 239, 262, 263, 265, 280, 284, 289, 304, 331, 351, 353], "as_nest": 23, "durat": [23, 406], "meta": [23, 48, 50, 53, 62, 75, 117, 121, 299, 301, 316, 319, 321, 390, 395, 405, 406, 409], "aren": [23, 196, 396], "eventu": [23, 264, 396, 407], "supersed": 23, "recov": [23, 75, 77, 79, 80, 81, 99, 100, 221, 239, 263, 290, 307, 315, 404], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 118, 120], "stride": [23, 43, 115, 119, 137, 138, 144, 145, 209, 225, 226, 228, 229, 237, 252, 394, 405, 411], "jag": 23, "focu": [23, 393, 394, 395, 398, 399, 400, 405], "team": [23, 405, 406, 411], "cat": [23, 293, 300, 302, 303, 315, 320, 322, 324, 325, 405, 409, 411], "arang": [23, 92, 153, 235, 251, 281, 361, 388, 409], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 60, 64, 73, 79, 99, 124, 125, 135, 136, 145, 215, 284, 409], "data_split": 23, "got": [23, 400], "init_kl_coef": 24, "horizon": [24, 129, 130, 146, 147, 223, 249, 395], "kl": [24, 32, 54, 177, 311, 316], "describ": [24, 62, 161, 200, 210, 270, 271, 304, 356, 389, 393, 395, 405, 406, 407, 412], "ziegler": 24, "et": [24, 223], "relax": [24, 351], "penalti": [24, 54, 313, 316], "strai": [24, 54], "greater": [24, 73, 92, 99, 100, 242, 246, 302, 393, 394, 411], "increas": [24, 84, 198, 262, 263, 405, 406], "pull": [24, 409], "toward": [24, 205], "aggress": 24, "kl_coef": [24, 32, 54], "arxiv": [24, 49, 76, 79, 81, 91, 92, 111, 112, 113, 114, 124, 125, 129, 130, 132, 133, 141, 146, 147, 160, 183, 203, 222, 227, 228, 229, 230, 231, 232, 235, 236, 237, 244, 249, 256, 258, 259, 262, 263, 264, 266, 267, 273, 282, 299, 300, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 322, 323, 324, 333, 338, 346, 408], "pdf": [24, 160, 227, 228, 229, 230, 231, 235, 262, 263, 282, 302, 309, 313, 320, 323, 324, 333, 338, 346], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 405, 406], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 177], "newest": 24, "int8": [25, 115, 128, 139, 140, 158], "encod": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 111, 112, 115, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 153, 168, 259, 260, 266, 298, 388, 394, 395, 396, 398, 407, 409], "null": [25, 27, 28, 30, 31, 37, 38, 45, 46, 49, 55, 56, 59, 62, 64, 65, 66, 67, 68, 91, 92, 158], "denot": [25, 406], "nmber": 25, "clariti": 25, "rand": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 124, 125, 131, 135, 136, 154, 157, 166, 169, 185, 210, 223, 249, 285, 299, 300, 302, 303, 304, 306, 307, 308, 315, 317, 319, 320, 322, 324, 325, 407, 411, 412], "assert_is_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "clear_device_": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "op": [25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 45, 46, 47, 62, 64, 65, 66, 67, 68, 178, 206, 220, 221, 238, 353, 372], "is_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 412], "np": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 119, 292, 351, 405, 407], "ndarrai": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 119, 262, 263, 292, 351, 405], "ignore_devic": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "arrai": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 54, 55, 56, 62, 64, 65, 66, 67, 68, 91, 115, 119, 120, 137, 138, 144, 145, 170, 240, 241, 244, 245, 393, 405, 409], "broadcast": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "compliant": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "singleton": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 225, 226, 247, 268, 269], "start_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "end_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "implements_for_spec": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "torch_funct": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "index_typ": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 45, 46, 55, 56, 62, 64, 65, 66, 67, 68], "tensor_to_index": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "make_neg_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "convert": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 137, 138, 141, 144, 145, 164, 166, 169, 183, 197, 200, 201, 203, 205, 207, 209, 288, 298, 317, 393, 394, 395, 407, 409], "shortcut": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 407, 412], "ndimens": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 393], "violat": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 388], "proxi": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 251, 260, 285, 389], "project": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 168, 220, 221, 244, 262, 263, 276, 281, 282, 285, 286, 287, 288, 289, 360, 388, 411, 412], "uniformli": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 93, 317, 412], "normal": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145, 179, 207, 220, 221, 222, 225, 226, 243, 247, 250, 251, 257, 271, 272, 285, 289, 301, 302, 316, 319, 366, 368, 384, 388, 390, 396, 398, 406, 412], "drawn": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 197, 238, 285, 289, 395, 405, 406], "dest": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 183, 203, 205, 288], "to_categor": [25, 26, 29, 33, 39, 40, 41, 42, 47], "to_categorical_spec": [25, 26, 29, 33, 39, 40, 41, 42, 47], "to_numpi": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 137, 138, 144, 145], "transformed_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 200, 201, 257, 270, 384], "check_spec_encod": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "to_one_hot": [25, 26, 29, 33, 39, 40, 41, 42, 47], "hot": [25, 26, 29, 33, 39, 40, 41, 42, 47, 111, 112, 118, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 139, 140, 141, 146, 147, 153, 154, 168, 235, 260, 265, 281, 282, 286, 287, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 396], "categ": [25, 26, 29, 33, 41, 42, 285], "categ_sampl": [25, 26, 29, 33, 41, 42, 47], "onehot_sampl": [25, 26, 29, 33, 41, 42], "to_one_hot_spec": [25, 26, 29, 33, 39, 40, 41, 42, 47], "categoricalbox": [25, 26, 29, 33, 41, 42, 47, 138, 398, 405, 406, 412], "type_check": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "update_mask": [25, 26, 29, 33, 39, 40, 41, 42, 47], "outcom": [25, 26, 29, 33, 39, 40, 41, 42, 47, 233, 270, 317, 405], "disabl": [25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 115, 119, 137, 138, 144, 145, 201, 209, 243, 272, 351, 393, 405], "unmask": [25, 26, 29, 33, 39, 40, 41, 42, 47], "ts": [25, 26, 29, 33, 39, 40, 41, 42, 47], "upper": [27, 97, 178], "continuousbox": [27, 30, 64, 115, 119, 137, 138, 144, 145, 215, 395, 396, 405, 406, 407, 411, 412], "inst": 29, "descript": [30, 146, 156, 394, 395], "akin": 30, "unnam": 30, "compositespec": [30, 386, 407, 412], "constraint": [30, 131, 271, 395, 406], "pixels_spec": 30, "observation_vector_spec": 30, "composite_spec": 30, "observation_vector": [30, 161, 393], "_nodefault": [30, 31, 37, 48, 50, 53, 56], "is_empti": [30, 31, 37, 56, 407], "include_nest": [30, 31, 37, 56], "leaves_onli": [30, 31, 37, 56], "is_leaf": [30, 31, 37, 56], "_compositespecitemsview": [30, 31, 37, 56], "children": [30, 31, 37, 43, 56, 115, 119, 137, 138, 144, 145, 209], "_compositespeckeysview": [30, 31, 37, 56], "reflect": [30, 31, 37, 56, 120, 139, 140, 206, 218, 317, 373, 394, 395, 396, 406], "lock_": [30, 31, 37, 56], "recurs": [30, 31, 37, 43, 56, 69, 70, 115, 119, 137, 138, 144, 145, 209, 317], "succeed": [30, 31, 37, 56], "selected_kei": [30, 31, 37, 56, 192, 393], "unlock_": [30, 31, 37, 56], "unlock": [30, 31, 37, 48, 50, 53, 56], "_compositespecvaluesview": [30, 31, 37, 56], "multipli": [32, 240, 244, 299, 300, 301, 302, 308, 316, 318, 319, 320, 322, 368, 393, 405], "calcul": [32, 54, 188, 240, 299, 301, 306, 316, 319, 321, 324], "shift_kei": [34, 36, 44, 57], "is_full_kei": [34, 36, 44, 57], "is_ful": [34, 36, 44, 57], "tempfil": [34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 380, 393, 394, 405, 409], "register_save_hook": [34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "temporarydirectori": [34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 393, 394, 405, 409], "tmpdir": [34, 49, 52, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 393, 394, 405], "rb_load": [34, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "register_load_hook": [34, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "persist": [35, 43, 115, 119, 137, 138, 144, 145, 201, 209, 218, 302, 322], "filesystem": [35, 409], "ted2nest": [36, 386], "stackedcomposit": [37, 386], "nvec": [39, 41], "remove_singleton": 39, "cardin": [39, 41, 235, 265, 281, 282, 287, 395], "ax": [39, 255, 256, 405], "m": [39, 43, 115, 119, 137, 138, 144, 145, 168, 209, 224, 289, 388, 394, 407], "Not": [39, 40, 52, 111, 112, 124, 242, 246], "neither": [39, 40, 41, 42, 79, 407], "use_regist": 41, "mone_hot": [41, 42], "boxlist": [41, 42], "gamma": [43, 188, 209, 249, 299, 300, 302, 303, 304, 306, 308, 309, 310, 312, 315, 317, 319, 320, 321, 322, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 380, 389, 393, 394, 395, 405, 406, 411], "sutton": [43, 389, 405, 406], "1988": 43, "tempor": [43, 242, 246, 249, 334, 335, 340, 341], "44": [43, 394, 396, 407, 408], "discount": [43, 79, 116, 188, 209, 300, 306, 309, 310, 312, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 389, 394, 395, 405, 406], "ahead": [43, 209, 412], "bias": [43, 240, 241, 244, 245, 295, 389, 393], "mitig": 43, "pleas": [43, 77, 115, 118, 119, 137, 138, 139, 140, 144, 145, 157, 160, 198, 201, 209, 252, 253, 254, 302, 322, 387], "multisteptransform": [43, 386], "99": [43, 188, 207, 249, 312, 327, 332, 339, 380, 393, 394, 395, 399, 402, 405, 406, 407, 411], "add_modul": [43, 115, 119, 137, 138, 144, 145, 209], "child": [43, 115, 119, 137, 138, 144, 145, 209, 394], "fn": [43, 51, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 209, 257, 382, 383], "init_weight": [43, 115, 119, 137, 138, 144, 145, 209], "fill_": [43, 115, 119, 137, 138, 144, 145, 209, 394, 396, 412], "net": [43, 115, 119, 137, 138, 144, 145, 209, 229, 231, 234, 237, 253, 299, 300, 302, 308, 315, 319, 320, 321, 322, 380, 394, 407, 408, 411], "in_featur": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 225, 226, 228, 229, 230, 231, 237, 247, 252, 253, 255, 256, 277, 288, 296, 304, 306, 398, 399, 411], "out_featur": [43, 115, 119, 131, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 223, 225, 226, 228, 229, 230, 231, 236, 237, 242, 246, 247, 249, 252, 253, 255, 256, 277, 281, 288, 296, 304, 306, 388, 393, 396, 398, 399, 402, 411], "bia": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 222, 225, 226, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 253, 255, 256, 257, 262, 263, 288, 295, 297, 298, 302, 317, 322, 389, 393, 394, 395, 396, 406, 411], "requires_grad": [43, 111, 112, 115, 119, 137, 138, 144, 145, 177, 201, 209, 302, 322], "bfloat16": [43, 115, 119, 137, 138, 144, 145, 209], "datatyp": [43, 115, 119, 137, 138, 144, 145, 209, 409], "member": [43, 115, 119, 137, 138, 144, 145, 209, 317, 353], "xdoctest": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 302, 317, 322], "buf": [43, 115, 119, 137, 138, 144, 145, 209], "20l": [43, 115, 119, 137, 138, 144, 145, 209, 317], "1l": [43, 115, 119, 137, 138, 144, 145, 209, 317], "5l": [43, 115, 119, 137, 138, 144, 145, 209, 317], "__call__": [43, 51, 115, 119, 137, 138, 144, 145, 209, 289, 390, 412], "doubl": [43, 115, 119, 137, 138, 144, 145, 164, 166, 167, 169, 183, 197, 200, 201, 203, 205, 209, 288, 304, 309, 314, 320, 323, 331, 393, 394, 395, 396, 412], "eval": [43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 388, 393, 394, 395], "evalu": [43, 115, 119, 120, 129, 130, 137, 138, 144, 145, 201, 209, 233, 250, 251, 260, 272, 320, 375, 376, 394, 395, 402], "dropout": [43, 115, 119, 137, 138, 144, 145, 201, 209, 224, 240, 242, 244, 246, 247, 388, 396], "batchnorm": [43, 115, 119, 137, 138, 144, 145, 201, 209, 222], "comparison": [43, 115, 119, 137, 138, 144, 145, 201, 209, 317, 393, 394], "similar": [43, 48, 50, 52, 53, 79, 115, 119, 137, 138, 139, 140, 144, 145, 164, 183, 197, 200, 201, 203, 204, 205, 207, 209, 277, 279, 285, 288, 289, 389, 393, 394, 395, 396, 398, 399, 400, 401, 407, 409, 412], "extra_repr": [43, 115, 119, 137, 138, 144, 145, 209], "nontermin": 43, "original_reward": 43, "newli": [43, 115, 119, 137, 138, 144, 145], "OR": 43, "get_buff": [43, 115, 119, 137, 138, 144, 145, 209], "get_submodul": [43, 115, 119, 137, 138, 144, 145, 209], "qualifi": [43, 115, 119, 137, 138, 144, 145, 209], "referenc": [43, 115, 119, 137, 138, 144, 145, 209], "attributeerror": [43, 115, 119, 137, 138, 144, 145, 209], "resolv": [43, 115, 119, 137, 138, 144, 145, 209], "someth": [43, 115, 119, 128, 137, 138, 144, 145, 209, 387, 394, 395, 407, 412], "get_extra_st": [43, 115, 119, 137, 138, 144, 145, 207, 209], "set_extra_st": [43, 115, 119, 137, 138, 144, 145, 207, 209], "picklabl": [43, 115, 119, 137, 138, 144, 145, 207, 209], "pickl": [43, 115, 119, 137, 138, 144, 145, 207, 209], "get_paramet": [43, 115, 119, 137, 138, 144, 145, 209], "net_b": [43, 115, 119, 137, 138, 144, 145, 209], "net_c": [43, 115, 119, 137, 138, 144, 145, 209], "conv": [43, 115, 119, 137, 138, 144, 145, 209, 225, 226, 394], "conv2d": [43, 115, 119, 137, 138, 144, 145, 209, 226, 228, 229, 237, 252, 411], "kernel_s": [43, 115, 119, 137, 138, 144, 145, 209, 225, 226, 228, 229, 237, 252, 258, 394, 411], "diagram": [43, 115, 119, 137, 138, 144, 145, 209], "degre": [43, 115, 119, 137, 138, 144, 145, 209], "named_modul": [43, 115, 119, 137, 138, 144, 145, 209], "o": [43, 115, 119, 137, 138, 144, 145, 209, 245], "half": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 393], "ipu": [43, 115, 119, 137, 138, 144, 145, 209], "strict": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "descend": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "get_swap_module_params_on_convers": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "enforc": [43, 98, 115, 119, 137, 138, 144, 145, 201, 209, 290, 302, 322, 407], "preserv": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "missing_kei": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "unexpected_kei": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "namedtupl": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "l": [43, 115, 119, 137, 138, 144, 145, 209, 240, 244, 332, 395, 407], "idx": [43, 115, 119, 137, 138, 144, 145, 209], "mtia": [43, 115, 119, 137, 138, 144, 145, 209], "named_buff": [43, 115, 119, 137, 138, 144, 145, 209], "remove_dupl": [43, 115, 119, 137, 138, 144, 145, 209, 317], "prepend": [43, 115, 119, 137, 138, 144, 145, 209, 317], "running_var": [43, 115, 119, 137, 138, 144, 145, 209], "named_children": [43, 115, 119, 137, 138, 144, 145, 209], "conv4": [43, 115, 119, 137, 138, 144, 145, 209], "conv5": [43, 115, 119, 137, 138, 144, 145, 209], "memo": [43, 115, 119, 137, 138, 144, 145, 209], "named_paramet": [43, 115, 119, 137, 138, 144, 145, 177, 209, 317], "register_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "removablehandl": [43, 115, 119, 137, 138, 144, 145, 209], "favor": [43, 115, 119, 137, 138, 144, 145, 209, 395], "register_full_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_buff": [43, 115, 119, 137, 138, 144, 145, 209], "running_mean": [43, 115, 119, 137, 138, 144, 145, 209], "alongsid": [43, 115, 119, 137, 138, 144, 145, 209, 401], "num_featur": [43, 115, 119, 137, 138, 144, 145, 209, 222], "register_forward_hook": [43, 115, 119, 137, 138, 144, 145, 209, 235, 265], "with_kwarg": [43, 115, 119, 137, 138, 144, 145, 209], "always_cal": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_forward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "regardless": [43, 115, 119, 137, 138, 144, 145, 209, 301, 316, 319], "register_forward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "invok": [43, 115, 119, 137, 138, 144, 145, 209], "And": [43, 115, 119, 137, 138, 144, 145, 209, 399], "forward_pr": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_forward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "grad_input": [43, 115, 119, 137, 138, 144, 145, 209], "grad_output": [43, 115, 119, 137, 138, 144, 145, 209], "subsequ": [43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 156, 209, 396, 405], "technic": [43, 115, 119, 137, 138, 144, 145, 209, 394, 396, 398], "caller": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_full_backward_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_full_backward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "backward_pr": [43, 115, 119, 137, 138, 144, 145, 209], "register_module_full_backward_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_load_state_dict_post_hook": [43, 115, 119, 137, 138, 144, 145, 209], "incompatible_kei": [43, 115, 119, 137, 138, 144, 145, 209], "thrown": [43, 55, 115, 119, 137, 138, 144, 145, 209, 409], "register_load_state_dict_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "local_metadata": [43, 115, 119, 137, 138, 144, 145, 209], "error_msg": [43, 115, 119, 137, 138, 144, 145, 209], "noqa": [43, 115, 119, 137, 138, 144, 145, 209], "b950": [43, 115, 119, 137, 138, 144, 145, 209], "register_modul": [43, 115, 119, 137, 138, 144, 145, 209, 390], "alia": [43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 115, 119, 137, 138, 144, 145, 209], "register_paramet": [43, 115, 119, 137, 138, 144, 145, 209], "register_state_dict_post_hook": [43, 115, 119, 137, 138, 144, 145, 209], "register_state_dict_pre_hook": [43, 115, 119, 137, 138, 144, 145, 209], "keep_var": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "requires_grad_": [43, 115, 119, 137, 138, 144, 145, 209], "autograd": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322], "freez": [43, 115, 119, 137, 138, 144, 145, 207, 209], "finetun": [43, 115, 119, 137, 138, 144, 145, 209], "gan": [43, 115, 119, 137, 138, 144, 145, 209], "set_submodul": [43, 115, 119, 137, 138, 144, 145, 209], "overid": [43, 115, 119, 137, 138, 144, 145, 209], "share_memori": [43, 115, 116, 119, 137, 138, 144, 145, 209, 393], "share_memory_": [43, 115, 119, 137, 138, 144, 145, 209, 411], "destin": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 159, 166, 167, 169, 201, 203, 207, 209, 218, 302, 322, 353], "averag": [43, 115, 119, 137, 138, 144, 145, 201, 207, 209, 262, 263, 302, 310, 311, 322, 368, 393, 395], "shallow": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 322, 396], "detach": [43, 115, 119, 137, 138, 144, 145, 201, 209, 302, 313, 317, 322, 324, 333, 334, 335, 336, 393], "non_block": [43, 48, 50, 53, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 396], "memory_format": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "channels_last": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "unchang": [43, 115, 119, 137, 138, 144, 145, 164, 168, 183, 197, 200, 201, 203, 205, 209, 238, 288, 367, 393, 409], "tri": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 401], "pin": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "4d": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "ignore_w": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "1913": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "3420": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "5113": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "2325": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "torch_doctest_cuda1": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "gpu1": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "1914": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "5112": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 407], "2324": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "float16": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 241, 245, 288], "cdoubl": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "3741": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "j": [43, 49, 91, 92, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 390, 399], "2382": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "5593": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288, 407], "4443": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "complex128": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "6122": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "1150": [43, 115, 119, 137, 138, 144, 145, 164, 183, 197, 200, 201, 203, 205, 209, 288], "to_empti": [43, 115, 119, 137, 138, 144, 145, 209], "dst_type": [43, 115, 119, 137, 138, 144, 145, 209], "xpu": [43, 115, 119, 137, 138, 144, 145, 209], "set_to_non": [43, 115, 119, 137, 138, 144, 145, 209], "row": [44, 58, 124, 125], "shae": 45, "nontensordata": [45, 73, 79, 135, 136, 351], "nontensor": [46, 386], "one_hot": [47, 235, 251, 265], "one_hot_sampl": 47, "chosen_data": [48, 82], "rewarddata": [48, 82, 386], "rejected_data": [48, 82], "from_dataset": [48, 50, 82], "dataset_nam": [48, 50, 54, 63, 82, 134], "max_length": [48, 50, 51, 61, 63, 82, 402], "550": [48, 50, 54, 63, 82, 99, 100, 407], "root_dir": [48, 50, 63, 82], "from_disk": [48, 50, 63, 82], "carperai": [48, 50, 54, 63], "openai_summarize_comparison": [48, 50, 63], "sequen": [48, 50], "load_from_disk": [48, 50, 63, 82], "load_dataset": [48, 50, 63, 82], "attention_mask": [48, 50, 51, 53, 54, 61, 63, 82], "92534": 48, "input_id": [48, 50, 51, 53, 54, 61, 63, 82], "end_scor": [48, 53, 54, 82], "sub_data": [48, 50], "from_tensordict": [48, 50, 53], "non_tensordict": [48, 50, 53], "getattr": [48, 50, 53], "tensorclass": [48, 50, 53, 82, 86, 87, 107], "load_memmap": [48, 50, 53], "load_": [48, 50, 53], "load_memmap_": [48, 50, 53], "fetch": [48, 50, 53, 111, 112, 113, 114, 177, 398, 408, 409], "fromkei": [48, 50, 53], "memmap": [48, 50, 53, 86, 137, 144, 207, 353, 355, 367, 409], "saved_td": [48, 50, 53], "td_load": [48, 50, 53], "fake": [48, 50, 53, 115, 119, 137, 138, 144, 145, 393, 394], "_subclass": [48, 50, 53], "faketensormod": [48, 50, 53], "faketensor": [48, 50, 53], "from_flatten": [48, 50, 53], "attemptedli": [48, 50, 53], "copy_exist": [48, 50, 53], "return_earli": [48, 50, 53], "share_non_tensor": [48, 50, 53], "existsok": [48, 50, 53, 86], "mimic": [48, 50, 53, 115, 119, 137, 138, 144, 145], "cross": [48, 50, 53, 223], "anymor": [48, 50, 53, 201, 288], "tensordictfutur": [48, 50, 53], "serialis": [48, 50, 53], "deepli": [48, 50, 53], "insid": [48, 50, 53, 137, 412], "memmap_": [48, 50, 53, 207], "memmap_lik": [48, 50, 53], "contentless": [48, 50, 53], "1_000_000": [48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 393, 396, 405], "alloc": [48, 50, 53, 87, 250, 251, 393], "memmap_refresh_": [48, 50, 53], "refresh": [48, 50, 53, 402, 405, 406], "saved_path": [48, 50, 53], "setattr": [48, 50, 53], "tent": [48, 50, 53, 63], "to_tensordict": [48, 50, 53, 396], "alpha": [49, 59, 91, 92, 225, 226, 228, 229, 230, 231, 237, 252, 300, 302, 308, 318, 320, 322, 324, 393, 409, 411], "ep": [49, 59, 91, 92, 179, 207, 222, 262, 263, 301, 323, 368, 393, 394, 396, 399, 402], "1e": [49, 59, 91, 92, 179, 207, 222, 233, 236, 257, 270, 393, 394, 395, 406], "08": [49, 59, 91, 92, 393, 394, 405, 407], "pin_memori": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 182, 393, 411], "schaul": [49, 91, 92], "quan": [49, 91, 92], "antonogl": [49, 91, 92], "silver": [49, 91, 92], "2015": [49, 91, 92], "ab": [49, 76, 79, 81, 91, 92, 111, 112, 113, 114, 124, 125, 129, 130, 132, 133, 141, 146, 147, 159, 183, 203, 207, 222, 227, 232, 236, 237, 244, 249, 256, 258, 259, 264, 266, 267, 273, 299, 300, 304, 305, 306, 307, 310, 311, 312, 314, 315, 318, 319, 322, 408], "1511": [49, 91, 92, 237], "05952": [49, 91, 92], "expon": [49, 59, 91, 92], "\u03b1": [49, 59, 91, 92], "delta": [49, 59, 91, 92, 240, 244, 270, 285, 289, 386, 389, 405], "1_000": [49, 52, 59, 60, 405, 409], "merg": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 407], "mini": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 406], "decid": [49, 52, 59, 60, 405, 411], "meth": [49, 52, 59, 60, 242, 246, 317, 407], "incompat": [49, 52, 59, 60, 321, 409], "drop_last": [49, 52, 59, 60, 98, 100], "notion": [49, 52, 59, 60], "caution": [49, 52, 59, 60, 98, 211, 412], "codebas": [49, 52, 59, 60, 407], "approach": [49, 52, 59, 60, 179, 222, 252, 253, 324, 393, 395, 399, 400, 405, 412], "return_info": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 409], "tensordictprioritizedreplaybuff": [49, 386, 411], "simplifi": [49, 398, 407, 409], "_weight": [49, 59, 91, 92, 409, 411], "update_prior": [49, 91, 92, 367, 390, 394, 409, 411], "36278465": 49, "invert": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 297, 395], "tqdm": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 370, 393, 395, 396, 405, 406, 407], "randomsampl": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 393, 405], "td_error": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 302, 303, 304, 306, 307, 308, 309, 315, 317, 320, 322, 324, 325, 331, 393, 399, 409, 411], "update_tensordict_prior": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 393, 409, 411], "insert_transform": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 155, 201], "insert": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 94, 95, 105, 106, 109, 110, 155, 164, 201, 202], "set_sampl": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "set_storag": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "set_writ": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "write_count": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "prompt_rindex": [50, 51, 54], "promptdatatldr": 50, "116722": 50, "prompt": [51, 54], "return_tensordict": [51, 61], "recip": [51, 115, 119, 137, 138, 144, 145, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295], "text": [51, 54, 61, 77, 240, 241, 244, 245, 262, 263, 395], "tensodict": [51, 61], "orign": [51, 61], "valid_sampl": 51, "eough": 51, "toknen": 51, "meet": 51, "criterion": 51, "autotoken": [51, 61, 63], "from_pretrain": [51, 54, 61], "gpt2": [51, 54, 61, 63, 227, 232, 261], "pad_token": [51, 61], "eos_token": 51, "enough": [51, 409], "inde": [51, 168, 395, 407], "storagecheckpointerbas": [52, 101], "roundrobinwrit": [52, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81], "depth": [52, 62, 115, 119, 131, 137, 138, 141, 144, 145, 223, 225, 226, 228, 229, 230, 231, 236, 237, 247, 249, 252, 253, 254, 258, 259, 281, 388, 394, 397, 399, 400, 404, 405, 406, 409], "_pytre": [52, 409], "tree_map": [52, 409], "did": [52, 206, 339, 394, 395, 400, 409, 412], "assert0": [52, 409], "ref_model": 54, "reward_model": [54, 294], "max_new_token": 54, "score_clip": 54, "kl_schedul": 54, "klcontrollerbas": 54, "num_step": 54, "causal": 54, "sentenc": 54, "frozen": [54, 177, 207], "gpt2rewardmodel": 54, "get_dataload": [54, 386], "promptdata": [54, 386], "gpt2lmheadmodel": 54, "dl": 54, "block_siz": [54, 82], "tensorclass_typ": [54, 82], "openai_summarize_tldr": 54, "config_class": 54, "model_path": 54, "rollout_from_model": 54, "rollout_from_data": 54, "600": [54, 401, 407, 409], "reward_kl": [54, 177], "reward_raw": 54, "sample_log_prob": [54, 277, 278, 279, 285, 289, 291, 319, 395, 398, 406, 411], "create_rollout_td": 54, "log_prob": [54, 233, 250, 251, 260, 272, 289, 302], "log_ratio": 54, "replic": [54, 389], "rindex": 54, "eo": 54, "term": [54, 177, 244, 245, 255, 256, 298, 299, 308, 372, 394, 395, 397, 398, 406], "generation_config": 54, "generationconfig": 54, "ti": [54, 342, 343, 344, 345, 347, 348, 349, 350, 394], "log_probs_gen": 54, "logprobs_of_label": 54, "heterogen": [55, 56, 128, 139, 140, 211, 252, 253, 393, 394], "220": [57, 407], "priority_kei": [59, 60, 74, 91, 302, 304, 307, 308, 309, 315, 317, 320, 322, 324, 325, 331, 409, 411], "reduct": [59, 91, 92, 105, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 315, 316, 318, 319, 320, 321, 322, 324, 325], "prioritizedreplaybuff": [59, 386, 411], "min": [59, 91, 92, 105, 262, 263, 271, 272, 300, 301, 302, 308, 318, 320, 322, 394, 395], "median": [59, 91, 92, 105, 124, 125, 153, 285, 289], "include_info": [59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81], "huggingfac": [61, 76, 81, 283], "co": [61, 170, 407], "pad_trunc": 61, "am": [61, 395], "me": 61, "reassur": 61, "ok": 61, "primarili": [62, 184, 398], "dataclass": [62, 317], "educ": 62, "guess": 62, "knowledg": [62, 115, 119, 137, 138, 144, 145, 399, 401], "tokenizer_fn": 63, "tensordicttoken": [63, 386], "pre_tokenization_hook": 63, "valid_s": 63, "tokenizer_class": 63, "tokenizer_model_nam": 63, "tokein": 63, "elementwis": 63, "vocabulari": 63, "loader": [63, 395], "185068": 63, "dataset_to_tensordict": 63, "data_dir": 63, "batch_dim": [63, 384], "valid_mask_kei": 63, "conver": 63, "batch_dimens": 63, "filder": 63, "from_dict": 63, "data_memmap": 63, "recurse_through_entri": 70, "recurse_through_stack": 70, "consolid": 70, "dataset_id": [73, 75, 76, 77, 79, 80, 81], "num_proc": 73, "slice_len": [73, 79, 92, 99, 100, 353], "strict_len": 73, "arari": 73, "2600": [73, 395], "million": [73, 396], "consequ": [73, 84, 244, 400], "50x10": 73, "available_dataset": [73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100], "ataridqn": 73, "immutabledatasetwrit": [73, 74, 75, 76, 77, 78, 79, 80, 81], "shorter": [73, 79, 92, 99, 100], "Be": [73, 79, 92, 99, 100], "game_nam": 73, "krull": 73, "1d": [73, 91, 92, 99, 100, 105], "cheapli": 73, "invalid_rang": 73, "999998": 73, "999999": 73, "add_count": 73, "84": [73, 187, 394, 396, 407, 408], "valueestim": [73, 299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 327, 331, 386, 389, 393, 405, 406], "convolut": [73, 225, 226, 228, 229, 252, 268, 398], "2657628": 73, "2657629": 73, "2657630": 73, "2657631": 73, "2657632": 73, "2657633": 73, "2657634": 73, "2657635": 73, "2657636": 73, "2657637": 73, "2657638": 73, "2657639": 73, "2657640": 73, "2657641": 73, "2657642": 73, "2657643": 73, "2657644": 73, "2657645": 73, "2657646": 73, "2657647": 73, "2657648": 73, "2657649": 73, "2657650": 73, "2657651": 73, "2657652": 73, "2657653": 73, "2657654": 73, "2657655": 73, "2657656": 73, "2657657": 73, "2657658": 73, "2657659": 73, "2657660": 73, "2657661": 73, "2657662": 73, "2657663": 73, "2657664": 73, "2657665": 73, "2657666": 73, "2657667": 73, "2657668": 73, "2657669": 73, "2657670": 73, "2657671": 73, "2657672": 73, "2657673": 73, "2657674": 73, "2657675": 73, "2657676": 73, "2657677": 73, "2657678": 73, "2657679": 73, "2657680": 73, "2657681": 73, "2657682": 73, "2657683": 73, "2657684": 73, "2657685": 73, "2657686": 73, "2657687": 73, "2657688": 73, "2657689": 73, "2657690": 73, "2657691": 73, "1995687": 73, "1995688": 73, "1995689": 73, "1995690": 73, "1995691": 73, "1995692": 73, "1995693": 73, "1995694": 73, "1995695": 73, "1995696": 73, "1995697": 73, "1995698": 73, "1995699": 73, "1995700": 73, "1995701": 73, "1995702": 73, "1995703": 73, "1995704": 73, "1995705": 73, "1995706": 73, "1995707": 73, "1995708": 73, "1995709": 73, "1995710": 73, "1995711": 73, "1995712": 73, "1995713": 73, "1995714": 73, "1995715": 73, "1995716": 73, "1995717": 73, "1995718": 73, "1995719": 73, "1995720": 73, "1995721": 73, "1995722": 73, "1995723": 73, "1995724": 73, "1995725": 73, "1995726": 73, "1995727": 73, "1995728": 73, "1995729": 73, "1995730": 73, "1995731": 73, "1995732": 73, "1995733": 73, "1995734": 73, "1995735": 73, "1995736": 73, "1995737": 73, "1995738": 73, "1995739": 73, "1995740": 73, "1995741": 73, "1995742": 73, "1995743": 73, "1995744": 73, "1995745": 73, "1995746": 73, "1995747": 73, "1995748": 73, "1995749": 73, "1995750": 73, "left": [73, 75, 79, 92, 99, 157, 164, 165, 166, 167, 171, 177, 183, 185, 186, 192, 195, 198, 200, 203, 205, 209, 238, 252, 394, 395, 400, 401], "untouch": [73, 79, 157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "_max_run": 73, "dataset_asterix": 73, "asterix": 73, "dataset_pong": 73, "sample_from_al": [73, 94, 97], "buffer_id": [73, 97, 103], "hidden": [73, 137, 144, 159, 228, 236, 240, 241, 242, 244, 245, 246, 258, 259, 266, 267, 277, 278, 279, 280, 288, 291, 301, 316, 319, 388, 396, 404, 411], "data_path": [73, 74, 75, 76, 77, 78, 79, 80, 81], "data_path_root": [73, 74, 75, 76, 77, 78, 79, 80, 81], "delet": [73, 74, 75, 76, 77, 78, 79, 80, 81, 161, 360], "chunksiz": [73, 74, 75, 76, 77, 78, 79, 80, 81], "pool": [73, 74, 75, 76, 77, 78, 79, 80, 81, 198], "max_tasks_per_child": [73, 74, 75, 76, 77, 78, 79, 80, 81], "worker_thread": [73, 74, 75, 76, 77, 78, 79, 80, 81], "index_with_gener": [73, 74, 75, 76, 77, 78, 79, 80, 81], "pbar": [73, 74, 75, 76, 77, 78, 79, 80, 81, 393, 395, 396, 405, 406, 407], "num_fram": [73, 74, 75, 76, 77, 78, 79, 80, 81], "unitari": [73, 74, 75, 76, 77, 78, 79, 80, 81, 407], "minariexperiencereplai": [73, 74, 75, 76, 78, 79, 80, 81], "1000000": [73, 74, 75, 76, 77, 78, 79, 80, 81], "distance_from_origin": [73, 74, 75, 76, 77, 78, 79, 80, 81], "forward_reward": [73, 74, 75, 76, 77, 78, 79, 80, 81], "qpo": [73, 74, 75, 76, 77, 78, 79, 80, 81], "qvel": [73, 74, 75, 76, 77, 78, 79, 80, 81], "reward_ctrl": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "reward_forward": [73, 74, 75, 76, 77, 78, 79, 80, 81], "reward_surv": [73, 74, 75, 76, 77, 78, 79, 80, 81], "x_posit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "x_veloc": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 137], "y_posit": [73, 74, 75, 76, 77, 78, 79, 80, 81], "y_veloc": [73, 74, 75, 76, 77, 78, 79, 80, 81], "achieved_go": [73, 74, 75, 76, 77, 78, 79, 80, 81], "desired_go": [73, 74, 75, 76, 77, 78, 79, 80, 81], "27": [73, 74, 75, 76, 77, 78, 79, 80, 81, 111, 112, 137, 144, 392, 394, 402, 407, 408, 410], "_collate_id": [73, 74, 75, 76, 77, 78, 79, 80, 81], "0x120e21dc0": [73, 74, 75, 76, 77, 78, 79, 80, 81], "cattensor": [73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 137, 138, 144, 145, 393, 404, 407, 412], "cat_tensor": [73, 74, 75, 76, 77, 78, 79, 80, 81], "cat_next_tensor": [73, 74, 75, 76, 77, 78, 79, 80, 81], "new_storag": [73, 74, 75, 76, 77, 78, 79, 80, 81], "31": [73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 125, 394, 396, 407, 408], "full_storag": [73, 74, 75, 76, 77, 78, 79, 80, 81], "0x168406fc0": [73, 74, 75, 76, 77, 78, 79, 80, 81], "from_env": 75, "use_truncated_as_don": 75, "direct_download": 75, "terminate_on_end": 75, "env_kwarg": [75, 80, 81, 157, 382, 383, 393], "reconstruct": [75, 99, 100, 311, 393, 412], "get_dataset": 75, "qlearning_dataset": 75, "fewer": [75, 92, 99], "unexpectedli": 75, "traj_split": 75, "observationnorm": [75, 207, 384, 393, 394, 395, 396, 411], "maze2d": 75, "umaz": 75, "loc": [75, 115, 119, 137, 138, 144, 145, 177, 179, 190, 207, 243, 257, 271, 272, 277, 278, 279, 285, 289, 291, 299, 300, 302, 315, 319, 320, 321, 322, 374, 384, 388, 393, 394, 395, 396, 398, 406, 411], "gen": 76, "dgrl": 76, "accompani": [76, 157, 195], "gap": 76, "2312": 76, "05742": 76, "gen_dgrl": 76, "procgen": 76, "bigfish": 76, "bossfight": 76, "1m_e": 76, "1m_": 76, "comma": 76, "npy": 76, "extract": [76, 156, 283, 393, 395, 411], "mmap": [76, 80, 81], "minut": [76, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "internet": [76, 81], "connect": [76, 81], "minari": 77, "websit": [77, 79], "currenrtli": 77, "minari_data": 77, "door": 77, "torchrl_logg": [77, 402], "28": [77, 252, 392, 394, 399, 407, 408, 410], "door_body_po": 77, "dua": 78, "graff": 78, "2017": 78, "uci": 78, "archiv": 78, "ic": 78, "edu": 78, "ml": 78, "sklearn": [78, 134], "adult_num": [78, 134], "adult_onehot": [78, 134], "mushroom_num": [78, 134], "mushroom_onehot": [78, 134], "covertyp": [78, 134], "shuttl": [78, 134], "magic": [78, 134, 397], "shuffl": [79, 98, 100, 406], "embodi": [79, 408], "institut": 79, "demonstr": [79, 395, 400, 405, 406, 407, 409, 412], "527": [79, 407], "skill": 79, "160266": 79, "googl": [79, 80, 111, 112, 129, 130, 135, 136, 222, 395, 396, 405, 406], "open_x_embodi": 79, "2310": [79, 141], "08864": 79, "language_instruct": 79, "get_non_tensor": 79, "nor": 79, "insuffici": 79, "chosen": [79, 146, 147, 196, 197, 264, 265, 273, 287, 353, 388, 401], "openx": 79, "__will": 79, "change__": 79, "randomli": [79, 98, 145, 178, 179, 197, 238, 285, 289, 398, 405, 406, 407, 409], "crop": [79, 162, 184, 353], "modal": [79, 393], "cmu_stretch": [79, 353], "is_init": [79, 81, 159, 176, 242, 246, 262, 263, 284, 296, 396], "language_embed": 79, "512": [79, 237, 394, 407], "lift": 79, "green": [79, 405], "garbag": 79, "lid": 79, "roboset": 80, "h5": [80, 81, 84], "roboh": [80, 141], "concis": [80, 399], "75": [80, 394, 396, 407, 408], "totensor": 81, "image_s": 81, "v": [81, 207, 240, 241, 244, 245, 277, 307, 315, 322, 388, 393, 394], "npz": 81, "2206": [81, 132, 133], "04779": [81, 300, 306], "vd4rl": 81, "squar": [81, 162, 165, 243, 271, 272, 353], "rectangular": [81, 225, 226], "walker_walk": 81, "64px": 81, "height": [81, 162, 165, 187], "veloc": [81, 113, 114, 115, 119, 137, 138, 144, 145, 160, 405, 406, 407, 412], "infinit": [82, 129, 130, 146, 147, 400, 409], "block": [82, 85, 110, 388, 396, 405], "pairwisedataset": [82, 386], "256": [82, 129, 130, 232, 394, 395, 405, 406, 407], "checkpoint_fil": 84, "h5_kwarg": 84, "iff": 84, "suffix": [84, 366], "h5py": 84, "create_dataset": 84, "temporarili": [84, 211, 400, 409], "immut": [85, 115, 119, 137, 144, 186, 201], "piec": [85, 95, 106, 109, 110, 393, 394, 395, 401, 405, 406, 407, 409], "scratch_dir": [86, 393, 409], "sent": [86, 87, 107, 207], "mistak": [86, 87, 107], "overewritten": 86, "tensorstoragecheckpoint": 86, "pathlib": 86, "main_ckpt_dir": 86, "rb_memmap": 86, "10_000_000": 86, "myclass": [86, 87, 107], "foo": [86, 87, 107, 280, 409, 412], "bar": [86, 87, 107, 280, 363, 364, 366, 370, 390, 394], "attach": [86, 87, 88, 101, 103, 107, 394], "entiti": [86, 87, 88, 101, 103, 107], "zero_": [87, 107, 215], "liststoag": 89, "max_capac": [91, 92, 393, 409], "max_priority_within_buff": [91, 92], "data_0": 91, "data_1": 91, "smoothen": 91, "tdrb": 91, "pack": [91, 240, 244, 395, 397, 412], "nd": [91, 92], "sum_tre": [91, 92], "min_tre": [91, 92], "end_kei": [92, 99, 100], "cache_valu": [92, 99, 100], "closer": 92, "readili": [92, 99, 100], "conjunct": [92, 99, 100, 394], "Will": [92, 99, 132, 353], "buffer0": [92, 99], "immutablewrit": [92, 99], "buffer1": [92, 99], "other_sampl": [92, 99], "short": [92, 99, 100, 111, 112, 124, 125, 137, 211, 244, 245, 394, 395, 397, 398, 406, 409], "tolist": 92, "120110917137936e": 92, "06": [92, 233, 270, 393, 394, 396, 406, 407, 408], "storageensembl": [94, 97], "samplerensembl": 94, "writerensembl": [94, 103], "num_buffer_sampl": [94, 97], "ensembl": [94, 97, 103, 104, 110, 288, 320], "forbidden": 94, "collat": 94, "0x13a2ef430": 94, "0x13a2f9310": 94, "interpol": [94, 187, 394, 396], "interpolationmod": [94, 396], "bilinear": [94, 187, 396], "0x13a2f9220": 94, "0x13a2f9f70": 94, "0x13a2d9b50": 94, "0x13a2f95b0": 94, "0x128648260": 94, "kw": [95, 106], "roundrobin": [95, 106], "incomplet": [98, 100], "fresh": 98, "haven": [98, 408], "remain": [98, 159, 167, 168, 177, 196, 256, 399], "draw": [98, 238], "slicesamplerwithoutreplac": [99, 409], "320": [99, 100, 113, 114, 394, 407], "700": [99, 100], "uniqu": [99, 100, 129, 130, 160, 170, 196, 197, 198, 284, 360, 400, 409], "dataid": [99, 100], "__len__": 101, "rank_kei": 105, "rank": [105, 223], "samplerwithoutreplac": [105, 395, 406, 409], "get_insert_index": 105, "convers": [111, 112, 124, 125, 389], "2106": [111, 112, 305, 324], "13281": [111, 112], "categorical_action_encod": [111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 137, 138, 141, 144, 145], "frame_skip": [111, 112, 113, 114, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 141, 174, 363, 366, 373, 390, 393, 394, 395, 411], "repeat": [111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 141, 223, 395, 405, 406, 407], "allow_done_after_reset": [111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141], "toler": [111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 135, 136, 141, 233, 270], "availalb": [111, 112, 124, 125], "is_avail": [111, 112, 393, 394, 395, 396, 405, 406, 408], "els": [111, 112, 157, 240, 241, 244, 245, 258, 388, 390, 393, 394, 395, 396, 405, 406, 407, 408], "ant": [111, 112, 115, 119, 122, 137, 138, 144, 145, 408, 412], "87": [111, 112, 394, 407, 408], "acrobot": [111, 112, 113, 114, 412], "advant": [111, 112, 124, 125], "timer": [111, 112, 124, 125], "timeit": [111, 112, 124, 125], "310": [111, 112, 392, 397, 404, 407, 410], "ms": [111, 112, 124, 125], "268": [111, 112, 407], "433": [111, 112, 407], "80": [111, 112, 393, 394, 405, 406, 407, 408], "213": [111, 112, 407], "8605": [111, 112], "pipelineenv": 112, "get_environ": 112, "dm_control": [113, 114, 393, 404, 412], "2006": [113, 114, 300, 306, 407], "12983": [113, 114], "task_nam": [113, 115, 119, 137, 138, 144, 145], "cheetah": [113, 114, 115, 119, 137, 138, 144, 145, 353, 393], "240": [113, 114, 407, 411], "swingup": [113, 114, 412], "swingup_spars": [113, 114], "ball_in_cup": [113, 114], "catch": [113, 114], "balance_spars": [113, 114], "three_pol": [113, 114], "two_pol": [113, 114], "finger": [113, 114], "turn_easi": [113, 114], "turn_hard": [113, 114], "fish": [113, 114], "upright": [113, 114, 394], "swim": [113, 114], "hopper": [113, 114], "hop": [113, 114], "humanoid": [113, 114, 137, 144, 404], "walk": [113, 114, 137, 144, 394, 404], "run_pure_st": [113, 114], "bring_bal": [113, 114], "bring_peg": [113, 114], "insert_bal": [113, 114], "insert_peg": [113, 114], "point_mass": [113, 114], "reacher": [113, 114], "swimmer": [113, 114], "swimmer6": [113, 114], "swimmer15": [113, 114], "walker": [113, 114], "dog": [113, 114], "trot": [113, 114], "humanoid_cmu": [113, 114], "lqr": [113, 114], "lqr_2_1": [113, 114], "lqr_6_2": [113, 114], "quadrup": [113, 114], "escap": [113, 114], "stacker": [113, 114], "stack_2": [113, 114], "stack_4": [113, 114], "deviceless": 115, "run_type_check": [115, 131], "counterenv": 115, "discretebox": [115, 119, 137, 138, 144, 145], "sort": [115, 119, 137, 138, 144, 145, 161, 262, 263], "another_act": [115, 119, 137, 138, 144, 145], "mutabl": [115, 119, 137, 138, 144, 145], "_callabletransform": [115, 119, 137, 138, 144, 145], "batch_lock": [115, 117, 119, 137, 144, 157, 197, 201, 407], "done_keys_group": [115, 119, 137, 138, 144, 145], "outer": [115, 119, 137, 138, 144, 145, 390, 393, 394, 412], "another_don": [115, 119, 137, 138, 144, 145], "empty_cach": [115, 119, 137, 138, 144, 145, 201], "fake_tensordict": [115, 119, 137, 138, 144, 145, 394], "silent": [115, 119, 137, 138, 144, 145, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 254, 257, 258, 259, 261, 262, 263, 266, 267, 269, 274, 280, 282, 284, 287, 292, 295], "braxenv": [115, 119, 137, 138, 144, 145, 186, 386, 397], "envnam": [115, 119, 137, 138, 144, 145], "pipeline_st": [115, 119, 137, 138, 144, 145], "attibut": [115, 119, 137, 138, 144, 145], "maybe_reset": [115, 119, 137, 138, 144, 145], "speak": [115, 119, 137, 138, 144, 145, 393], "rand_act": [115, 119, 128, 137, 138, 139, 140, 144, 145, 157, 397], "register_gym": [115, 119, 137, 138, 144, 145, 397], "entry_point": [115, 119, 137, 138, 144, 145], "info_kei": [115, 119, 137, 138, 144, 145], "reward_threshold": [115, 119, 137, 138, 144, 145], "nondeterminist": [115, 119, 137, 138, 144, 145], "max_episode_step": [115, 118, 119, 120, 137, 138, 144, 145], "order_enforc": [115, 119, 137, 138, 144, 145], "autoreset": [115, 119, 137, 138, 144, 145], "disable_env_check": [115, 118, 119, 132, 133, 137, 138, 144, 145], "apply_api_compat": [115, 119, 137, 138, 144, 145], "nasium": [115, 119, 137, 138, 144, 145], "scope": [115, 119, 137, 138, 144, 145, 412], "dmcontrolenv": [115, 119, 137, 138, 144, 145, 353, 386, 393, 397, 404, 412], "dmc": [115, 119, 137, 138, 144, 145], "removeemptyspec": [115, 119, 137, 138, 144, 145], "threshold": [115, 119, 137, 138, 144, 145, 238, 300, 301, 395], "learnt": [115, 119, 137, 138, 144, 145, 380], "checker": [115, 118, 119, 132, 133, 137, 138, 144, 145], "stepapicompat": [115, 119, 137, 138, 144, 145], "deem": [115, 119, 129, 130, 137, 138, 144, 145, 146, 147], "envgym": [115, 119, 137, 138, 144, 145], "0855": [115, 119, 137, 138, 144, 145], "0215": [115, 119, 137, 138, 144, 145], "0881": [115, 119, 137, 138, 144, 145], "0412": [115, 119, 137, 138, 144, 145], "1101": [115, 119, 137, 138, 144, 145], "0080": [115, 119, 137, 138, 144, 145], "0254": [115, 119, 137, 138, 144, 145], "0424": [115, 119, 137, 138, 144, 145], "9609e": [115, 119, 137, 138, 144, 145], "9776e": [115, 119, 137, 138, 144, 145], "04": [115, 119, 123, 137, 138, 144, 145, 392, 393, 394, 405, 407, 408, 410], "6347e": [115, 119, 137, 138, 144, 145], "3842e": [115, 119, 137, 138, 144, 145], "5338e": [115, 119, 137, 138, 144, 145], "3064e": [115, 119, 137, 138, 144, 145], "0381e": [115, 119, 137, 138, 144, 145], "6656e": [115, 119, 137, 138, 144, 145], "05": [115, 119, 137, 138, 144, 145, 222, 392, 393, 394, 405, 407, 408, 410], "0204e": [115, 119, 137, 138, 144, 145], "action_spac": [115, 119, 137, 138, 144, 145, 170, 235, 265, 281, 282, 286, 287, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 396, 398, 402], "0833": [115, 119, 137, 138, 144, 145], "0275": [115, 119, 137, 138, 144, 145], "0612": [115, 119, 137, 138, 144, 145], "0770": [115, 119, 137, 138, 144, 145, 407], "1256": [115, 119, 137, 138, 144, 145, 407], "0082": [115, 119, 137, 138, 144, 145], "0186": [115, 119, 137, 138, 144, 145], "0476": [115, 119, 137, 138, 144, 145], "2221": [115, 119, 137, 138, 144, 145], "2256": [115, 119, 137, 138, 144, 145], "5930": [115, 119, 137, 138, 144, 145], "6937": [115, 119, 137, 138, 144, 145], "5865": [115, 119, 137, 138, 144, 145], "5479": [115, 119, 137, 138, 144, 145], "0187": [115, 119, 137, 138, 144, 145], "6825": [115, 119, 137, 138, 144, 145, 407], "5224": [115, 119, 137, 138, 144, 145], "0018": [115, 119, 137, 138, 144, 145, 407], "1005": [115, 119, 137, 138, 144, 145], "0335": [115, 119, 137, 138, 144, 145], "0268": [115, 119, 137, 138, 144, 145, 407], "0133": [115, 119, 137, 138, 144, 145], "0627": [115, 119, 137, 138, 144, 145], "0074": [115, 119, 137, 138, 144, 145, 407], "0488": [115, 119, 137, 138, 144, 145, 407], "0353": [115, 119, 137, 138, 144, 145], "0075": [115, 119, 137, 138, 144, 145, 407], "0069": [115, 119, 137, 138, 144, 145, 407], "0098": [115, 119, 137, 138, 144, 145, 407], "0058": [115, 119, 137, 138, 144, 145, 407], "0033": [115, 119, 137, 138, 144, 145, 407], "0157": [115, 119, 137, 138, 144, 145], "0004": [115, 119, 137, 138, 144, 145, 407], "0381": [115, 119, 137, 138, 144, 145], "0452": [115, 119, 137, 138, 144, 145], "11355747": [115, 119, 137, 138, 144, 145], "04257728": [115, 119, 137, 138, 144, 145], "00408397": [115, 119, 137, 138, 144, 145], "04155852": [115, 119, 137, 138, 144, 145], "0389733": [115, 119, 137, 138, 144, 145], "01409826": [115, 119, 137, 138, 144, 145], "0978704": [115, 119, 137, 138, 144, 145], "08808327": [115, 119, 137, 138, 144, 145], "03970837": [115, 119, 137, 138, 144, 145], "00535434": [115, 119, 137, 138, 144, 145], "02353762": [115, 119, 137, 138, 144, 145], "05116226": [115, 119, 137, 138, 144, 145], "02788907": [115, 119, 137, 138, 144, 145], "06848346": [115, 119, 137, 138, 144, 145], "05154399": [115, 119, 137, 138, 144, 145], "0371798": [115, 119, 137, 138, 144, 145], "05128025": [115, 119, 137, 138, 144, 145], "dydact": [115, 119, 137, 138, 144, 145], "gym_env": [115, 119, 137, 138, 144, 145, 411], "reset_kei": [115, 119, 137, 138, 144, 145, 160, 191, 196, 197, 198, 405], "multitask": [115, 119, 137, 138, 144, 145], "multiag": [115, 119, 128, 137, 138, 139, 140, 144, 145, 219, 253, 264, 273, 331], "another_reward": [115, 119, 137, 138, 144, 145], "auto_cast_to_devic": [115, 119, 137, 138, 144, 145, 406], "break_when_all_don": [115, 119, 137, 138, 144, 145], "soon": [115, 119, 137, 138, 139, 140, 144, 145], "__sort": [115, 119, 137, 138, 144, 145], "as__": [115, 119, 137, 138, 144, 145], "todo": [115, 119, 137, 138, 144, 145], "argmaxmodul": [115, 119, 137, 138, 144, 145], "argmax": [115, 119, 137, 138, 144, 145, 235, 265, 282, 287, 398], "n_ob": [115, 119, 137, 138, 144, 145, 177, 284, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 399], "n_act": [115, 119, 137, 138, 144, 145, 177, 299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 399], "ourselv": [115, 119, 137, 138, 144, 145, 395, 412], "emul": [115, 119, 137, 138, 144, 145], "epoch": [115, 119, 137, 138, 144, 145, 370, 395, 405, 406], "input_td": [115, 119, 137, 138, 144, 145], "rollout_td": [115, 119, 137, 138, 144, 145], "state_kei": [115, 119, 137, 138, 144, 145], "prevail": [115, 119, 137, 138, 144, 145, 161, 191, 219], "creator": [116, 375, 376, 382, 383, 384], "substitut": [116, 196, 207, 398], "vecnorm": [116, 384], "env_creat": [116, 393], "test_env1": 116, "_td": 116, "observation_count": [116, 412], "test_env2": 116, "sleep": [116, 412], "ps": 116, "p1": 116, "p2": 116, "9934": 116, "env_str": 117, "device_map": 117, "accross": [118, 120], "registri": 118, "asyncvectorenv": 118, "involv": [118, 120, 121, 129, 130, 141, 157, 242, 246, 397, 399], "pixel_observ": [118, 120, 121, 141], "pixelobservationwrapp": [118, 120, 121, 141], "adventur": [118, 120], "airraid": [118, 120, 412], "alien": [118, 120], "time_limit": 118, "timelimit": [118, 129, 130, 146, 147], "default_info_dict_read": [118, 119, 120, 137], "reader": [118, 119, 120, 137, 394], "set_info_dict_read": [118, 119, 120, 137, 397], "info_dict": [118, 119, 120, 137], "auto_register_info_dict": [118, 119, 120, 137], "multibinari": [118, 120], "multidiscret": [118, 120], "rag": [118, 120], "gym_conversion_exampl": [118, 120], "info_dict_read": [119, 137], "ignore_priv": 119, "baseinfodictread": 119, "tensordictprim": [119, 137, 224, 242, 246, 296, 396], "succe": [119, 137], "underscor": 119, "primer": [119, 197, 224, 242, 246, 296, 396], "halfcheetah": [119, 137, 153, 187, 393], "reward_run": [119, 137], "read_act": 119, "read_don": 119, "nonsens": 119, "fallback": 119, "broken": [119, 211], "read_ob": 119, "dictat": [119, 285, 289, 319, 393, 407], "read_reward": 119, "hoc": [119, 137, 398], "dict_read": 119, "my_info_kei": 119, "some_env": 119, "vecenv": 120, "vectorenv": 120, "convert_actions_to_numpi": 120, "isaaclab": 120, "secur": 121, "habitat3": 121, "ai": [121, 408], "habitatrenderpick": 121, "isaacgym": [122, 123], "isaacgymwrapp": [122, 386], "isaacgymenv": [123, 386], "webpag": 123, "isaac": 123, "essenc": [123, 397], "instadeepai": [124, 125], "2306": [124, 125], "09884": [124, 125], "snake": [124, 125], "grid": [124, 125, 353], "bodi": [124, 125], "body_st": [124, 125], "fruit_posit": [124, 125], "col": [124, 125], "head_posit": [124, 125], "tail": [124, 125], "game2048": [124, 125], "maze": [124, 125], "cleaner": [124, 125], "cvrp": [124, 125], "multicvrp": [124, 125], "minesweep": [124, 125], "rubikscub": [124, 125], "knapsack": [124, 125], "sudoku": [124, 125], "tsp": [124, 125], "connector": [124, 125], "v2": [124, 125, 142, 143, 328, 342, 343, 344, 345, 347, 348, 349, 350, 396, 412], "mmst": [124, 125], "graphcolor": [124, 125], "partli": [124, 125], "scrambl": [124, 125], "robotwarehous": [124, 125], "tetri": [124, 125], "binpack": [124, 125], "jobshop": [124, 125], "0x1fca91910": 124, "122": [124, 125, 407, 412], "0x1ff9baee0": 124, "134": [124, 125, 407], "0x1ff9ba7c0": 124, "172": [124, 125, 407], "drastic": [125, 137, 409], "rubric": [125, 179, 291], "mo": [126, 127], "minecart": [126, 127], "mo_gym": 127, "qualnam": 128, "leverag": [128, 139, 140, 393, 406, 412], "neural": [128, 139, 140, 225, 226, 268, 288, 388, 394, 395, 396, 398, 405, 406, 407, 412], "group_map": [128, 129, 130, 135, 136, 139, 140, 146, 147, 148, 405], "constructiuon": [128, 139, 140], "premad": [128, 129, 130, 139, 140, 146, 147, 331], "all_in_one_group": [128, 135, 136, 148], "agent_0": [128, 139, 140, 148, 405], "agent_1": [128, 139, 140, 148], "agent_2": [128, 139, 140, 148], "agent_3": 128, "one_group_per_ag": [128, 139, 140], "meltingpot": [129, 130], "2211": [129, 130, 392, 396, 410], "13746": [129, 130], "melt": [129, 130], "pot": [129, 130], "novel": [129, 130, 399], "social": [129, 130], "familiar": [129, 130, 394, 406, 412], "unfamiliar": [129, 130], "broad": [129, 130], "cooper": [129, 130, 405, 406], "decept": [129, 130], "reciproc": [129, 130], "trust": [129, 130, 246], "stubborn": [129, 130], "substrat": [129, 130], "ml_collect": 129, "config_dict": 129, "configdict": 129, "categorical_act": [129, 130, 135, 136, 139, 140, 142, 143, 146, 147], "marlgroupmaptyp": [129, 130, 135, 136, 139, 140, 146, 147, 148, 386, 405], "agent_nam": [129, 130, 146, 147, 148], "agent_names_to_indices_map": [129, 130, 146, 147], "env_torchrl": [129, 130], "commons_harvest__open": [129, 130], "rgb": [129, 130], "144": [129, 130, 407], "192": [129, 130, 394, 407], "collective_reward": [129, 130], "ready_to_shoot": [129, 130], "88": [129, 130, 142, 143, 393, 394, 407, 408, 409], "substrate_config": 130, "get_config": 130, "mp_env": 130, "build_from_config": 130, "default_player_rol": 130, "environn": 131, "mymbenv": [131, 223, 249], "world_model": [131, 223, 249, 311], "hidden_observ": [131, 223, 249], "mlp": [131, 223, 225, 226, 228, 229, 230, 231, 237, 242, 246, 249, 253, 254, 277, 281, 296, 304, 306, 388, 394, 398, 399, 402, 404, 408, 411], "worldmodelwrapp": [131, 223, 249], "activation_class": [131, 223, 225, 226, 228, 229, 230, 231, 236, 237, 247, 249, 252, 253, 394, 398, 405, 406, 411], "relu": [131, 223, 232, 249, 257, 298], "activate_last_lay": [131, 223, 231, 247, 249], "sail": [132, 133], "sg": [132, 133], "10558": [132, 133], "readthedoc": [132, 135, 136], "en": [132, 135, 136], "python_interfac": 132, "envpoolmixin": 133, "env_bas": 133, "task_id": 133, "env_typ": 133, "gym_reset_return_info": 133, "envpool_env": 133, "www": [134, 250, 251], "fetch_openml": 134, "106": [134, 407], "openspiel": [135, 136], "open_spiel": [135, 136], "game_str": 135, "return_st": [135, 136, 139, 140], "4672": [135, 136, 394, 407], "current_play": [135, 136], "fen": [135, 136], "rnbqkbnr": [135, 136], "pppppppp": [135, 136], "kqkq": [135, 136], "674": [135, 407], "2048": [135, 136, 394, 408], "add_nois": [135, 136], "amazon": [135, 136], "backgammon": [135, 136], "restor": [135, 136], "td_restor": [135, 136], "pyspiel": 136, "load_gam": 136, "new_initial_st": 136, "3009": 136, "my_env_fun": [137, 144], "custom_attribute_list": [137, 144], "custom_attribut": [137, 144], "custom_method_list": [137, 144], "custom_method": [137, 144], "deploi": [137, 144, 157], "slight": [137, 144, 394], "share_individual_td": [137, 144], "shared_memori": [137, 144], "policy_proof": [137, 144], "ll": [137, 144, 240, 241, 244, 245, 393, 394, 395, 396, 397, 398, 399, 400, 402, 406, 412], "serial_for_singl": [137, 144, 394], "circular": [137, 144, 393], "list_of_kwarg": [137, 144], "com_veloc": [137, 144], "head_height": [137, 144], "joint_angl": [137, 144], "torso_vert": [137, 144], "stringent": [137, 395, 405, 406], "inter": 137, "penv": 137, "env_fix": 137, "influenc": 137, "thumb": [137, 395], "myenv": [137, 157, 166, 169], "pipe": 137, "update_kwarg": [137, 144], "th": [138, 173, 202, 240, 244, 407], "thdot": [138, 407], "max_spe": [138, 407], "max_torqu": [138, 407], "gen_param": [138, 407], "gravit": [138, 407], "torqu": [138, 407], "pettingzoo": [139, 140, 405, 406], "pet": [139, 140], "zoo": [139, 140], "__": [139, 140], "aecenv": [139, 140], "use_mask": [139, 140], "dead": [139, 140], "done_on_ani": [139, 140, 405], "compulsori": [139, 140], "adversary_0": [139, 140, 405], "adversari": [139, 140, 313, 405], "sisl": 139, "multiwalker_v9": 139, "aec": [139, 140], "n_piston": [139, 140], "pistonball_v6": [139, 140], "piston": [139, 140], "piston_0": [139, 140], "piston_1": [139, 140], "piston_20": [139, 140], "tictactoe_v3": [139, 140], "player": [139, 140, 145], "player_1": [139, 140], "player_2": [139, 140], "butterfli": 140, "parallel_env": [140, 393, 411, 412], "vikashplu": 141, "wiki": 141, "06828": 141, "from_depth": 141, "smacv2": [142, 143], "starcraft": [142, 143], "challeng": [142, 143, 397, 407, 408], "10gen_terran": [142, 143], "10gen_zerg": [142, 143], "10gen_protoss": [142, 143], "3m": [142, 143], "8m": [142, 143, 408], "25m": [142, 143], "5m_vs_6m": [142, 143], "8m_vs_9m": [142, 143], "10m_vs_11m": [142, 143], "27m_vs_30m": [142, 143], "mmm": [142, 143], "mmm2": [142, 143], "2s3z": [142, 143], "3s5z": [142, 143], "3s5z_vs_3s6z": [142, 143], "3s_vs_3z": [142, 143], "3s_vs_4z": [142, 143], "3s_vs_5z": [142, 143], "1c3s5z": [142, 143], "2m_vs_1z": [142, 143], "corridor": [142, 143], "6h_vs_8z": [142, 143], "2s_vs_1sc": [142, 143], "so_many_banel": [142, 143], "bane_vs_ban": [142, 143], "2c_vs_64zg": [142, 143], "old": [142, 143, 316, 412], "smac": [142, 143], "map_nam": [142, 143], "176": [142, 143, 407], "battle_won": [142, 143], "dead_al": [142, 143], "dead_enemi": [142, 143], "episode_limit": [142, 143], "322": [142, 143, 407], "Or": [142, 143, 252], "procedur": [142, 143], "distribution_config": [142, 143], "n_unit": [142, 143], "n_enemi": [142, 143], "team_gen": [142, 143], "dist_typ": [142, 143], "weighted_team": [142, 143], "unit_typ": [142, 143], "marin": [142, 143], "maraud": [142, 143], "medivac": [142, 143], "exception_unit_typ": [142, 143], "start_posit": [142, 143], "surrounded_and_reflect": [142, 143], "map_x": [142, 143], "map_i": [142, 143], "capability_config": [142, 143], "131": [142, 143, 407], "starcraft2env": 143, "tic": 145, "tac": 145, "toe": 145, "single_play": 145, "player1": 145, "desired_batch_s": 145, "board": 145, "player0": 145, "proroklab": [146, 147], "vectorizedmultiagentsimul": [146, 147], "2207": [146, 147], "03530": [146, 147], "basescenario": 146, "perfrom": [146, 147], "defaultt": 146, "continuous_act": [146, 147, 351, 405, 406], "repositiori": 146, "sparsiti": 146, "unbatched_action_spec": [146, 147, 406], "unbatched_observation_spec": [146, 147], "unbatched_reward_spec": [146, 147], "het_spec": [146, 147], "het_specs_map": [146, 147], "flock": [146, 147, 351], "agent_collision_rew": [146, 147], "agent_distance_rew": [146, 147], "ca": 148, "environment4": 148, "get_group_map": 148, "sumbodul": 149, "model_bas": [150, 151, 223, 249], "out_keys_inv": [150, 163, 166, 167, 169, 179, 180, 181, 185, 186, 193, 200, 407], "decod": [150, 258], "model_based_env": [150, 310], "dreamerenv": [150, 310, 386], "model_based_env_ev": 150, "num_interv": 153, "out_action_kei": 153, "samplingstrategi": 153, "optino": 153, "intenum": 153, "interv": [153, 352, 353, 362, 372, 394, 407], "action_disc": 153, "transform_input_spec": [153, 157, 164, 166, 167, 168, 179, 181, 185, 186, 191, 195, 196, 197, 200, 202, 204, 209], "masker": 154, "tensor_spec": [154, 210, 219, 307, 308, 319, 321], "maskedenv": 154, "ones_lik": 154, "scatter": 154, "fill_float": 156, "fill_int": 156, "fill_bool": 156, "someenvclass": 156, "autoresetenv": 156, "argumet": 156, "fooenv": 156, "sign": [156, 193, 333, 405], "envtyp": 156, "reshape_fn": 157, "reset_func": 157, "environmt": 157, "request": [157, 184], "tensordict_batch_s": 157, "tensordict_reset": [157, 407], "transform_env_batch_s": [157, 164, 200, 209], "transform_output_spec": [157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "transform_observation_spec": [157, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 175, 176, 177, 179, 181, 185, 186, 187, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 206, 207, 209, 407], "transform_reward_spec": [157, 158, 163, 164, 166, 167, 171, 177, 185, 186, 189, 190, 191, 192, 193, 195, 200, 202, 209], "transformfull_done_spec": [157, 164, 166, 167, 171, 177, 185, 186, 192, 195, 200, 209], "biner": 158, "burn_in": 159, "burn": 159, "date": [159, 356], "retur": 159, "burnt": 159, "gru_modul": [159, 242, 296], "input_s": [159, 240, 241, 242, 244, 245, 246, 296, 396], "hidden_s": [159, 240, 241, 242, 244, 245, 246, 296, 396], "set_recurrent_mod": [159, 242, 246, 396], "burn_in_transform": 159, "gru": [159, 197, 241, 242, 296], "num_lay": [159, 240, 242, 244, 246, 258, 259, 296], "86": [159, 394, 407], "3008": [159, 394], "0344": 159, "padding_valu": [160, 250, 251], "as_invers": 160, "movement": 160, "1312": [160, 394], "5602": 160, "unsqueezetransform": [160, 407, 409], "consumpt": [160, 386], "followin": 160, "pictur": 160, "pixels_trsf": [160, 409], "grayscal": [160, 394, 396, 409, 412], "data_exclud": [160, 409], "del_kei": [161, 203, 404, 407], "unsqueeze_if_oor": 161, "observation_posit": 161, "observation_veloc": 161, "key1": [161, 361, 369], "key2": [161, 361, 369], "center": [162, 353], "width": [162, 165, 187], "scalar": [163, 189, 220, 221, 229, 231, 238, 239, 255, 256, 262, 263, 295, 299, 300, 301, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 388, 394, 399, 407], "permit": [163, 173, 202, 299, 301, 316, 319, 321], "rewardsc": [164, 201, 393, 394, 396], "rewardclip": 164, "transformed_env": [164, 200, 201, 397], "transform_env_devic": [164, 167, 200, 209], "dtype_in": 166, "dtype_out": 166, "scan": [166, 169, 290, 291], "resp": [166, 169], "not_transform": [166, 169], "constructedw": [166, 169], "orig_devic": 167, "unspecifi": 167, "transform_done_spec": [167, 200, 209], "num_actions_effect": 168, "max_act": 168, "include_forward": 168, "num_act": [168, 308, 398], "action_out": 168, "_call": [168, 173, 407], "eol_kei": 170, "lives_kei": 170, "eol_attribut": 170, "unwrap": 170, "breakout": 170, "210": [170, 181, 393, 407], "160": [170, 181, 394, 407], "eol_transform": 170, "eol": 170, "dqnloss": [170, 299, 300, 302, 303, 306, 308, 309, 310, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 331, 377, 386, 389, 394, 396, 402], "register_kei": 170, "loss_or_advantag": 170, "lossmodul": [170, 370, 379, 380, 386, 389], "valueestimatorbas": [170, 317, 386], "excluded_kei": 171, "finit": [172, 398, 409], "first_dim": 173, "last_dim": 173, "allow_positive_dim": [173, 202], "frameskip": 173, "repeatedli": [174, 395, 406], "init_kei": [176, 284], "tracker": 176, "pi_curr": 177, "pi_0": 177, "overfit": 177, "probabilist": [177, 285, 299, 319, 386, 395, 411], "get_dist": [177, 289, 290], "mod": [177, 224, 242, 246, 284, 292, 396, 402], "normalparamextractor": [177, 277, 278, 279, 285, 291, 299, 300, 302, 308, 315, 319, 320, 321, 322, 324, 325, 388, 395, 398, 406, 411], "probabilisticactor": [177, 277, 278, 279, 280, 299, 300, 302, 305, 307, 308, 315, 318, 319, 320, 321, 322, 324, 325, 388, 393, 395, 398, 405, 406], "tanhnorm": [177, 277, 278, 279, 285, 291, 299, 300, 302, 315, 319, 320, 321, 322, 324, 325, 386, 395, 406, 411], "return_log_prob": [177, 277, 278, 279, 285, 289, 291, 321, 388, 395, 398, 405, 406, 411], "apply_": 177, "copy_": [177, 393], "formulat": 177, "diverg": [177, 242, 246, 285, 289, 311, 316], "noop": [178, 411], "trial": 178, "standard_norm": [179, 190, 207, 393, 394, 396], "affin": [179, 190, 207], "layer": [179, 207, 222, 225, 226, 228, 229, 234, 236, 240, 241, 242, 244, 245, 246, 247, 252, 253, 255, 256, 258, 259, 268, 269, 275, 283, 292, 388, 394, 395, 396, 398, 405, 408], "epsilon": [179, 220, 221, 238, 239, 262, 263, 323, 368, 394, 395, 396, 398], "recover": 179, "set_default_tensor_typ": 179, "doubletensor": 179, "isclos": 179, "next_ob": [179, 333, 334, 335, 336, 411], "init_stat": [179, 393, 394, 395, 396], "3752e": 179, "5087e": 179, "9294e": 179, "9636": 179, "5608": 179, "6408": 179, "num_it": [179, 394, 395], "reduce_dim": [179, 393, 394, 395, 396], "cat_dim": [179, 393, 394, 395, 396], "keep_dim": [179, 394, 396], "statist": [179, 207, 222, 321, 384, 393, 394, 395, 412], "gaussian": [179, 197, 220, 221, 223, 249, 255, 256, 261, 395, 405], "empir": [179, 223, 249, 285, 289, 393, 395, 406], "3d": [179, 225], "third": [179, 282, 405, 406], "reorder": 181, "in_keys_in": 181, "channel": [181, 199, 252, 258, 259, 394], "r3m": [183, 408], "resnet": [183, 203, 205], "visual": [183, 203, 205, 353, 395, 405, 407], "embed": [183, 203, 204, 205, 228, 264, 276, 277, 278, 279, 288, 293, 408], "ego4d": [183, 203, 205], "univers": [183, 203, 205, 397], "suraj": [183, 203], "nair": [183, 203], "aravind": [183, 203], "rajeswaran": [183, 203], "vikash": [183, 203, 205], "kumar": [183, 203, 205], "chelsea": [183, 203], "finn": [183, 203], "abhinav": [183, 203], "gupta": [183, 203], "2203": [183, 203, 249, 408], "12601": [183, 203, 408], "_init": [183, 203, 393], "resnet50": [183, 205, 408], "model_nam": [183, 203, 205, 356], "resnet34": 183, "resnet18": 183, "r3m_vec": [183, 408], "stack_imag": [183, 205], "tread": [183, 205], "separet": [183, 205], "hub": [183, 205, 397, 408], "resnet50_weight": [183, 205], "imagenet1k_v1": [183, 205], "download_path": [183, 205], "tensor_pixels_kei": [183, 205], "sub_seq_len": 184, "sample_dim": [184, 393], "hesit": 184, "robust": [184, 222], "mix": [184, 264, 273, 331, 393, 405, 406], "improp": 184, "dummyenv": 185, "another_oth": 185, "other_reward": 185, "create_copi": 186, "stuff": [186, 400], "newnam": 186, "r2g": 188, "reward_to_go": 188, "bernoulli_": 188, "9010": 188, "9404": [188, 339], "9701": [188, 339], "9900": [188, 339], "0000": [188, 198, 238, 239, 292, 339, 394, 396, 407, 411], "crash": 188, "clamp_min": 189, "clamp_max": 189, "clip_min": 189, "clip_max": 189, "episode_": 191, "reward1": 191, "reward2": 191, "episode_reward": [191, 405, 406], "keep_reward": 192, "keep_don": 192, "logical_or": 193, "squeeze_dim": 194, "step_count_kei": 195, "update_don": 195, "disjunct": 195, "recognis": 195, "target_return": 196, "subtract": 196, "default_valu": [197, 296, 396], "unit": [197, 223, 236, 240, 241, 258, 259, 266, 267, 395], "transfomedenv": 197, "mykei": 197, "__unless": 197, "exists__": 197, "get_primers_from_modul": [197, 224, 242, 246, 386], "10th": 198, "0216": 198, "1149": 198, "1990": 198, "2749": 198, "3281": 198, "9290": 198, "3702": 198, "8978": 198, "from_int": 199, "shape_toler": 199, "permuat": 199, "ri": 199, "principl": 200, "cattransform": 200, "notabl": 200, "rewardsum": [200, 209, 218, 405, 406], "smoothli": [201, 222], "add_1": 201, "cache_spec": 201, "set_missing_toler": 201, "keyerror": 201, "unsqueeze_dim": [202, 407], "danger": 202, "vc1": 203, "vc1_vec": 203, "untrain": 203, "make_noload_model": 203, "vip": [204, 205, 408], "implicit": [205, 307, 315, 409], "jason": 205, "ma": 205, "shagun": 205, "sodhani": 205, "dinesh": 205, "jayaraman": 205, "osbert": 205, "bastani": 205, "ami": 205, "zhang": 205, "vip_vec": 205, "final_nam": 206, "sb3": 206, "terminal_obs_read": 206, "truli": [206, 411], "till": 206, "shared_td": 207, "decai": [207, 220, 221, 238, 323, 368, 393, 394, 396, 412], "9999": [207, 407], "0001": [207, 236, 257, 407], "to_observation_norm": 207, "frozen_copi": 207, "race": 207, "underflow": [207, 368], "build_td_for_shared_vecnorm": 207, "memmori": 207, "queue": [207, 409], "td_share": 207, "unfreez": 207, "train_env": 207, "eval_env": 207, "state_dim": [208, 227, 232, 261, 266, 267, 280], "action_dim": [208, 227, 228, 230, 232, 261, 280, 393, 404], "gsde": [208, 320, 384], "gsdemodul": 208, "rb_transform": 209, "resist": 209, "insensit": 209, "sensit": [209, 394], "_orig": 209, "95": [209, 249, 327, 394, 395, 396, 407], "tdreset": [209, 404], "window": [209, 284, 405, 409, 411], "edit": [209, 400], "cube": 210, "check_dtyp": 211, "discrep": [211, 299, 301, 303, 304, 316, 319, 321, 331], "rng": [211, 407], "revert": [211, 398, 409], "unsqueeze_null_shap": 215, "probabilistictdmodul": [216, 217, 247, 285, 289, 332, 366], "next_tensordict": 218, "keep_oth": [218, 407], "exclude_reward": 218, "exclude_don": 218, "exclude_act": 218, "next_": 218, "funtion": 218, "_stepmdp": 218, "write_full_fals": 219, "_terminated_or_trunc": 219, "po": [220, 221, 239], "sigma_init": [220, 221, 405], "sigma_end": [220, 221, 405], "annealing_num_step": [220, 221, 238, 239, 262, 263, 393, 394, 396, 398, 402, 405], "sigma": [220, 221, 240, 241, 243, 244, 245, 262, 263, 271, 272, 395, 405], "captur": [220, 221, 238, 239, 262, 263], "omiss": [220, 221, 238, 239, 262, 263], "ommit": [220, 221, 238, 239, 262, 263], "momentum": 222, "max_r": 222, "max_d": 222, "warmup_step": 222, "batchrenorm": 222, "1702": 222, "03275": 222, "corenet": 222, "enhanc": 222, "warmup": 222, "phase": [222, 406, 409], "outlier": 222, "period": 222, "varianc": [222, 223, 243, 257, 271, 272, 389, 393, 395, 406], "warm": 222, "renorm": 222, "entropi": [223, 299, 300, 301, 302, 307, 308, 315, 316, 318, 319, 320, 322, 324, 325, 406], "botev": 223, "2013": 223, "cem": 223, "plan": [223, 248, 249], "k": [223, 224, 240, 241, 244, 245], "maximis": [223, 228, 230, 249, 388, 394, 395, 406], "modelbasedenv": [223, 249], "planning_horizon": [223, 249], "optim_step": [223, 249, 394, 402], "mpc": [223, 248, 249], "num_candid": [223, 249], "candid": [223, 249], "top_k": [223, 249], "modelbasedenvbas": [223, 248, 249, 386], "safemodul": [223, 248, 277, 279, 289, 299, 300, 302, 307, 308, 315, 319, 320, 321, 322, 324, 325, 375, 376, 380, 386, 411], "consistentdropout": 224, "input_shap": 224, "batcht": 224, "make_tensordict_prim": [224, 242, 246, 396], "input_dtyp": 224, "pase": 224, "get_default_dtyp": [224, 368], "mask_6127171760": 224, "seq": [224, 240, 242, 244, 246, 284, 396, 402, 404], "env0": [224, 412], "num_cel": [225, 226, 228, 229, 230, 231, 236, 237, 242, 246, 247, 252, 253, 277, 296, 394, 395, 396, 398, 399, 402, 405, 406, 411], "elu": [225, 226, 228, 229, 230, 231, 236, 237, 252, 394, 411], "activation_kwarg": [225, 226, 247], "norm_class": [225, 226, 228, 229, 247], "norm_kwarg": [225, 226, 247], "bias_last_lay": [225, 226, 228, 229, 230, 231, 237, 247], "aggregator_class": [225, 226, 228, 229, 394, 396, 411], "squashdim": [225, 226, 228, 237, 252, 411], "aggregator_kwarg": [225, 226, 228, 229, 394, 396], "squeeze_output": [225, 226, 228, 229, 394, 396], "cell": [225, 226, 240, 241, 242, 244, 245, 246, 247, 252, 253, 395, 397, 398, 399, 400, 401, 402], "kernel": [225, 226, 237, 252], "cnet": [225, 226], "conv3d": 225, "lazyconv2d": [226, 228, 229, 237, 252, 411], "transformer_config": [227, 261, 280], "decisiontransform": [227, 261], "dtconfig": [227, 232, 261], "2202": [227, 232, 318], "05607": [227, 232, 318], "return_to_go": [227, 232, 261, 280], "conv_net_kwarg": [228, 229], "mlp_net_kwarg": [228, 229, 230], "use_avg_pool": [228, 229], "WITH": [228, 229, 230, 231, 262, 263, 323], "1509": [228, 229, 230, 231, 249, 262, 263, 304, 314, 323, 407], "02971": [228, 229, 230, 231, 262, 263, 323], "reus": [228, 360], "convnet": [228, 229, 237, 252, 396, 398, 411], "ndims_in": 228, "avgpool": [228, 229], "lazylinear": [228, 229, 230, 231, 237, 247, 388, 395, 398, 407, 408, 411], "2304": [228, 394], "adaptiveavgpool2d": [229, 394, 396], "output_s": [229, 394, 396], "squeeze2dlay": 229, "400": [230, 231, 401, 406, 407, 409], "mlp_net_kwargs_net1": 231, "mlp_net_kwargs_net2": 231, "mlp1": 231, "mlp2": 231, "decion": 232, "desdescrib": 232, "n_embd": 232, "n_layer": [232, 240, 244], "n_head": 232, "n_inner": 232, "n_posit": 232, "resid_pdrop": 232, "attn_pdrop": 232, "gpt2config": 232, "atol": [233, 270], "rtol": [233, 270], "batch_shap": [233, 270], "event_shap": [233, 270], "absolut": [233, 270, 393], "densiti": [233, 250, 251, 260, 272], "mass": [233, 250, 251, 260, 272, 407], "rsampl": [233, 251, 260, 289], "sample_shap": [233, 250, 251, 260], "softmax": [234, 251, 260, 281, 282], "action_valu": [234, 235, 265, 281, 282, 286, 287, 308, 317, 331, 388, 396, 398, 402], "var_num": [235, 265, 281, 282, 287], "action_value_kei": [235, 265, 281, 282, 286, 287, 317, 331], "action_mask_kei": [235, 238, 239, 265, 281, 282, 286, 287], "perspect": [235, 282, 309, 395], "1707": [235, 282, 309, 319], "06887": [235, 282, 309], "mult": [235, 253, 265, 281, 282, 286, 287], "tensordict_modul": [235, 240, 241, 244, 245, 265, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 302, 303, 307, 308, 315, 319, 320, 321, 322, 324, 325, 388], "nbin": [235, 281, 388], "customdistributionalqv": 235, "log_softmax": [235, 281], "from_modul": [235, 288, 291, 411], "qvalue_actor": [235, 265, 281, 286, 388], "to_modul": [235, 288, 291, 393, 411], "std_bia": 236, "std_min_val": 236, "belief": [236, 258, 266, 267], "1912": [236, 310, 311, 312], "01603": [236, 310, 311, 312], "softplu": [236, 257, 295, 297, 298], "out_features_valu": 237, "cnn_kwarg": [237, 394], "mlp_kwarg": [237, 394], "duel": 237, "cnn": [237, 252, 394, 398, 411], "06581": 237, "greedi": [238, 239, 265, 282, 287, 394, 396, 398], "eps_init": [238, 239, 262, 263, 394, 396, 398, 402], "eps_end": [238, 239, 262, 263, 394], "explorative_polici": [238, 239, 262, 263], "9055": [238, 239, 407], "9277": [238, 239], "6295": [238, 239], "2532": [238, 239], "grad_fn": [238, 239, 276, 411], "addbackward0": [238, 239], "batch_first": [240, 242, 244, 246, 396], "bidirect": [240, 244, 396], "cudnn": [240, 241, 244, 245, 396], "rnn": [240, 241, 242, 244, 245, 246, 396, 398], "device_count": [240, 241, 244, 245, 412], "n_in": [240, 241, 244, 245], "n_out": [240, 241, 244, 245], "h0": [240, 241, 244, 245], "h1": [240, 241, 244, 245], "vectoris": [240, 241, 244, 245], "call_gru": [240, 241], "h_out": [240, 241, 244, 245], "batched_cal": [240, 241, 244, 245], "gate": [240, 241, 244], "r_t": 240, "w_": [240, 241, 244, 245], "ir": [240, 241], "x_t": [240, 244], "b_": [240, 241, 244, 245], "hr": [240, 241, 244], "h_": [240, 241, 244], "z_t": 240, "iz": [240, 241], "hz": [240, 241], "n_t": 240, "odot": [240, 241, 244, 245], "hn": [240, 241, 244], "h_t": [240, 244], "sigmoid": [240, 241, 244, 245], "hadamard": [240, 241, 244, 245], "multilay": [240, 244], "_t": [240, 244, 406, 407], "ge": [240, 244], "bernoulli": [240, 244], "b_ih": [240, 241, 244, 245, 246], "b_hh": [240, 241, 244, 245, 246], "h_0": [240, 244, 245], "unbatch": [240, 244], "pack_padded_sequ": [240, 244], "pack_sequ": [240, 244], "num": [240, 244, 402], "_layer": [240, 244], "_size": [240, 241, 244, 245], "h_n": [240, 244], "packedsequ": [240, 244], "weight_ih_l": [240, 244], "learnabl": [240, 241, 244, 245], "w_ir": 240, "w_iz": 240, "w_in": 240, "num_direct": [240, 244], "weight_hh_l": [240, 244], "w_hr": 240, "w_hz": 240, "w_hn": 240, "bias_ih_l": [240, 244], "b_ir": 240, "b_iz": 240, "b_in": 240, "bias_hh_l": [240, 244], "b_hr": 240, "b_hz": 240, "b_hn": 240, "mathcal": [240, 241, 244, 245], "sqrt": [240, 241, 244, 245, 262, 263], "frac": [240, 241, 244, 245, 395], "seq_len": [240, 244], "subtli": 240, "matrix": [240, 244, 255, 256], "contrast": [240, 314, 409], "hx": [240, 241, 244, 245], "lstmcell": [241, 246], "gru_cel": 241, "z": 241, "weight_ih": [241, 245], "weight_hh": [241, 245], "bias_ih": [241, 245], "bias_hh": [241, 245], "rocm": [241, 245], "embedd": [242, 246], "grucel": [242, 288], "python_bas": [242, 246], "recurrent_st": [242, 246, 296, 396], "custom_kei": [242, 246], "recurrent_mod": [242, 246], "rs": [242, 393], "gru_module_train": 242, "policy_train": [242, 246], "traj_td": [242, 246], "supplementari": [242, 246, 395, 412], "That": [242, 246, 395, 405], "dealt": [242, 246], "poorli": [242, 246], "data_collector": [242, 246, 394], "policy_infer": [242, 246], "td_inf": [242, 246], "assert_clos": [242, 246], "upscal": [243, 271, 272], "tanh_loc": [243, 271, 272], "event_dim": [243, 270, 271], "poor": [243, 271, 272], "explos": [243, 271, 272], "switch": [243, 272, 351], "formula": [243, 271, 272, 299, 301, 316, 319, 389, 395], "proj_siz": 244, "c0": [244, 245], "c1": [244, 245], "call_lstm": [244, 245], "c_out": [244, 245], "i_t": 244, "ii": [244, 245], "hi": [244, 245], "f_t": 244, "hf": [244, 245], "g_t": 244, "ig": [244, 245], "hg": [244, 245], "o_t": 244, "ho": [244, 245], "c_t": 244, "c_": 244, "forget": 244, "1402": 244, "1128": 244, "c_0": [244, 245], "proj": 244, "c_n": 244, "w_ii": 244, "w_if": 244, "w_ig": 244, "w_io": 244, "w_hi": 244, "w_hf": 244, "w_hg": 244, "w_ho": 244, "b_ii": 244, "b_if": 244, "b_ig": 244, "b_io": 244, "b_hi": 244, "b_hf": 244, "b_hg": 244, "b_ho": 244, "weight_hr_l": 244, "_revers": 244, "analog": [244, 398], "cn": 244, "lstm_cell": 245, "h_1": 245, "c_1": 245, "time_step": [245, 284], "cx": 245, "correspont": 246, "recurrent_state_h": [246, 396], "recurrent_state_c": [246, 396], "triplet": [246, 286, 287], "lstm_modul": 246, "rs_h": 246, "rs_c": 246, "hidden0": 246, "hidden1": 246, "single_bias_last_lay": 247, "layer_class": 247, "layer_kwarg": 247, "perceptron": [247, 398], "aslo": 247, "42": [247, 299, 300, 302, 303, 307, 315, 322, 392, 394, 407, 409, 410], "noisylinear": [247, 255, 386, 394], "noisylazylinear": [247, 386], "mpcplanner": 248, "tensordict_out": [248, 395, 412], "mppi": 249, "covari": 249, "william": [249, 321], "aldrich": 249, "theodor": 249, "01149": 249, "hansen": 249, "wang": 249, "su": 249, "04955": 249, "valueoper": [249, 277, 278, 279, 299, 300, 301, 302, 303, 308, 315, 316, 319, 320, 321, 322, 324, 325, 380, 388, 393, 395, 399], "tdlambdaestim": [249, 386, 393], "value_net": [249, 304, 306, 321, 333, 334, 335, 336, 395, 398, 399, 402], "adv": 249, "lmbda": [249, 327, 333, 336, 338, 344, 345, 346, 349, 350, 389, 393, 395, 406], "value_network": [249, 303, 304, 306, 307, 309, 315, 322, 333, 334, 335, 336, 389, 393, 395, 399, 402, 405], "temperatur": [249, 300, 307, 315], "neg_inf": [250, 251], "inf": [250, 251], "api_doc": [250, 251], "tf_agent": [250, 251], "event": [250, 251, 260, 342, 343, 344, 345, 347, 348, 349, 350, 409], "unnorm": [250, 251, 260], "sparse_mask": [250, 251], "dens": [250, 251], "0831": [250, 251], "1203": [250, 251], "0928": [250, 251], "1972": [250, 251], "grad_method": [251, 260], "reparamgradientstrategi": [251, 260], "passthrough": [251, 260], "relaxedonehot": [251, 260], "zeros_lik": [251, 407], "sample_non_valid": 251, "share_param": [252, 253, 254, 405, 406], "use_td_param": [252, 253, 254], "get_stateful_net": [252, 253, 254, 317, 388, 389], "from_stateful_net": [252, 253, 254, 317, 389], "homogen": [252, 253, 405, 406], "tensordictparam": [252, 253], "_empty_net": [252, 253], "roughli": [252, 253, 411], "agent_network": [252, 253], "modulelist": [252, 253, 411], "2592": [252, 394], "decentr": 252, "n_agent_input": [253, 254, 405, 406], "n_agent_output": [253, 254, 405, 406], "lazili": [253, 407], "toech": 253, "centalis": 253, "shown": [253, 388, 404, 405, 406, 409], "agent_dim": 254, "vmap_random": [254, 317, 389], "stateful_net": [254, 317], "Such": [254, 317], "deepcopi": [254, 317, 405], "multiagentmlp": [254, 405, 406], "snet": 254, "hasattr": [254, 393, 395], "kaiming_normal_": 254, "reset_paramet": 254, "std_init": [255, 256], "initialize_paramet": 255, "isol": [255, 317], "1706": [256, 273], "10295v3": 256, "induc": 256, "aid": 256, "scale_map": 257, "biased_softplus_1": 257, "scale_lb": [257, 266, 267], "module_norm": 257, "1803": [258, 259, 264], "10122": [258, 259], "rnn_hidden": 258, "latent": 259, "excacli": 260, "inres": 261, "mu": [261, 262, 263, 395], "ornstein": [262, 263, 393], "uhlenbeck": [262, 263, 393], "ou": [262, 263, 393], "correl": [262, 263], "noise_t": [262, 263], "noise_": [262, 263], "theta": [262, 263, 395, 407], "sigma_t": [262, 263], "sigma_": [262, 263], "anneal": [262, 263, 394, 398, 405], "ou_prev_nois": [262, 263], "ou_step": [262, 263], "x0": [262, 263], "sigma_min": [262, 263], "n_steps_ann": [262, 263], "is_init_kei": [262, 263], "_ou_prev_nois": [262, 263], "_ou_step": [262, 263], "state_shap": [264, 331], "mixing_embed_dim": [264, 331], "qmix": [264, 405, 406], "mixer": [264, 273, 331], "monoton": 264, "hyper": 264, "11485": 264, "qmixerloss": [264, 273], "qmix_vdn": [264, 273], "chosen_action_valu": [264, 265, 273, 286, 287, 331, 388, 396, 398], "vdn": [264, 273], "hidden_dim": [266, 267], "posterior": [266, 311], "rssm": [266, 267, 311], "1811": [266, 267], "04551": [266, 267], "obs_embed": 266, "rnn_hidden_dim": 267, "dream": 267, "safe_tanh": 271, "tanhtransform": 271, "overflow": [271, 276, 281, 282, 285, 286, 287, 288, 289], "get_mod": 271, "adam": [271, 393, 394, 395, 396, 399, 402, 405, 406, 407], "decomposit": 273, "05296": 273, "hide": [274, 395, 405, 406], "satisfi": [274, 388], "vmap_dim": 274, "lam": 274, "sample_in": 274, "sample_in_td": 274, "vm": 274, "translat": [276, 285], "character": [276, 281, 285, 286, 288, 409], "td_modul": [276, 277, 278, 279, 285, 288, 289, 291, 293, 398, 411], "3635": 276, "0340": 276, "1476": 276, "3911": [276, 407], "1664": [276, 394, 407], "5455": 276, "2247": 276, "4583": 276, "2916": 276, "2160": 276, "5337": 276, "5193": 276, "addmmbackward0": 276, "actorvalueoper": [277, 301, 316, 319, 388, 398], "get_policy_oper": [277, 278, 279, 301, 316, 319, 388], "standalon": [277, 278, 279, 398], "tdmodul": [277, 278, 279, 380], "get_critic_oper": 277, "common_oper": [277, 279], "policy_oper": [277, 278, 279], "value_oper": [277, 278, 279], "module_hidden": [277, 279], "td_module_hidden": [277, 279], "module_act": [277, 279], "td_module_act": [277, 278, 279], "module_valu": [277, 278, 279], "td_module_valu": [277, 278, 279], "state_action_valu": [277, 293, 300, 302, 307, 315, 322, 332, 380, 388, 393, 405, 411], "td_clone": [277, 278, 279], "tensordictmodulewrapp": [277, 375, 376, 380], "get_policy_head": [277, 278, 279], "safesequenti": [277, 278, 279, 331], "head": [277, 279, 296, 301, 316, 319], "get_value_head": [277, 278, 279], "get_value_oper": [277, 278, 279, 301, 316, 319], "action_modul": 278, "state_valu": [278, 279, 293, 301, 307, 315, 316, 319, 320, 322, 333, 334, 335, 336, 338, 340, 342, 344, 346, 347, 349, 388, 393, 395, 406], "actorcriticoper": [279, 388, 398], "embeddig": 279, "refet": 279, "actorcriticwrapp": [279, 388, 393], "inferec": 280, "set_tensor_kei": 280, "dt_inference_wrapp": 280, "baz": 280, "inference_context": 280, "obs_dim": 280, "tanhdelta": [280, 386, 393, 405], "dtactor": 280, "actor_modul": [280, 411], "dist_class": 280, "dist_kwarg": 280, "distribution_kwarg": [280, 285, 289, 395, 405, 406], "inference_actor": 280, "sequence_length": 280, "mask_context": 280, "out_act": 280, "qvaluemodul": [281, 286, 331, 396, 398, 402], "distributionaldqnnet": 281, "make_log_softmax": 281, "my_action_valu": [282, 287], "chanc": 282, "thid": 282, "lmheadmodel": 283, "actor_head": [283, 301, 316, 319], "base_model": 283, "lm_head": 283, "macro": 284, "lookahead": 284, "n_action": [284, 300, 302, 304, 306, 318, 322], "reshape_cat": 284, "actor_bas": 284, "obs_cat": 284, "obs_cat_reshap": 284, "action_orig": 284, "counter": [284, 363, 390], "default_interaction_typ": [285, 289, 398], "interaction_typ": [285, 289, 395], "datacollectorbas": [285, 372, 375, 376, 380, 386], "set_interaction_typ": [285, 289], "compositedistribut": [285, 299, 319, 398], "distribution_map": 285, "name_map": 285, "cache_dist": [285, 289], "n_empirical_estim": [285, 289], "compound": [285, 398], "chose": 287, "functionalmodul": 288, "functionalmodulewithbuff": 288, "td_fmodul": 288, "td_function": 288, "td_state": 288, "params_repeat": 288, "td_vmap": [288, 291], "random_sampl": [288, 289], "suppli": 289, "fist": 289, "log_prob_kei": [289, 406], "probabilistictensordictsequenti": [290, 299, 301, 316, 319, 321, 375, 376, 411], "partial_toler": [290, 291, 404], "who": [290, 291], "AND": [290, 291, 302], "tensordictsequenci": 291, "tensordictsequ": 291, "safeprobabilisticmodul": [291, 388], "spec1": 291, "net1": 291, "module1": 291, "td_module1": 291, "spec2": 291, "module2": 291, "td_module2": 291, "clamp": [292, 311, 370, 405, 407], "boundari": [292, 395, 405, 406], "resolut": 292, "9944": 292, "9991": 292, "3020": 292, "2299": [292, 407], "5418": 292, "2989": 292, "6849": 292, "3169": 292, "2690": 292, "9649": [292, 407], "5686": 292, "8602": 292, "0315": 292, "8455": [292, 407], "6027": 292, "4746": 292, "7843": 292, "7782": 292, "2111": 292, "5115": 292, "4687": 292, "5760": 292, "custommodul": 293, "imaginari": 294, "imagin": 294, "transition_model": 294, "get_reward_oper": 294, "get_transition_model_oper": 294, "min_val": [295, 298], "_bia": 295, "surject": 298, "expln": 298, "biased_softplu": [298, 386], "beggin": 298, "biased_softplus_": 298, "syntax": [298, 393], "met": [298, 405, 407], "1602": 299, "01783v2": 299, "actor_network": [299, 300, 301, 302, 303, 305, 307, 308, 315, 316, 318, 319, 320, 321, 322, 324, 325, 389, 393, 395, 399, 405, 406], "critic_network": [299, 301, 316, 319, 321, 395, 406], "entropy_bonu": [299, 301, 316, 319, 395], "favour": [299, 301, 316, 319], "samples_mc_entropi": [299, 301, 316, 318, 319], "mont": [299, 301, 316, 319, 393], "carlo": [299, 301, 316, 319, 393], "entropy_coef": [299, 301, 316, 319, 395, 406], "critic_coef": [299, 301, 316, 319, 395], "loss_critic_typ": [299, 301, 316, 319, 321, 395], "l1": [299, 301, 303, 304, 308, 316, 319, 320, 321, 324, 325, 328, 331, 388, 393], "l2": [299, 301, 303, 304, 305, 306, 308, 311, 312, 316, 319, 320, 321, 324, 325, 328, 331, 393, 405], "smooth_l1": [299, 300, 301, 302, 303, 304, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 328, 331, 395], "separate_loss": [299, 301, 302, 303, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325], "propag": [299, 301, 302, 303, 307, 308, 315, 316, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336, 395, 405, 406], "advantage_kei": [299, 301, 316, 319, 321, 333, 334, 335, 336], "value_target_kei": [299, 301, 316, 319, 321, 333, 334, 335, 336], "value_target": [299, 301, 316, 319, 321, 333, 334, 335, 336, 395, 406], "ddp": [299, 301, 316, 319, 321], "fsdp": [299, 301, 316, 319, 321], "divid": [299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 315, 316, 318, 319, 320, 321, 322, 324, 325, 373, 388, 393, 405, 406, 407], "clip_valu": [299, 301, 316, 319, 321], "loss_crit": [299, 319, 395, 406], "loss_entropi": [299, 319, 395, 406], "loss_object": [299, 319, 395, 406], "recur": [299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336, 337, 398], "next_reward": [299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336], "next_don": [299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336], "next_termin": [299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 333, 334, 335, 336], "loss_obj": 299, "next_observ": [299, 300, 302, 303, 304, 306, 307, 308, 315, 319, 320, 321, 322, 324, 325, 404], "sacloss": [299, 314, 323, 386], "select_out_kei": [299, 300, 302, 303, 307, 308, 315, 319, 320, 322, 324, 325], "fraction": 299, "make_value_estim": [299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 326, 331, 389, 393, 394, 405, 406, 411], "value_typ": [299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 327, 331, 393], "hyperparam": [299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 393], "enum": [299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 327, 331, 393], "default_value_estim": [299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 393, 411], "default_value_kwarg": [299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 386, 393], "dqn_loss": [299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 326, 331], "td1": [299, 300, 302, 303, 304, 306, 308, 309, 310, 315, 317, 319, 320, 321, 322, 324, 325, 331, 393], "conserv": [300, 306], "qvalue_network": [300, 302, 307, 308, 315, 320, 322, 324, 325], "unti": [300, 302, 315, 320, 322, 324, 325], "loss_funct": [300, 302, 303, 304, 305, 306, 307, 308, 315, 320, 322, 324, 325, 328, 331, 393, 405], "alpha_init": [300, 302, 308, 318, 320, 322], "min_alpha": [300, 302, 308, 318, 320, 322], "max_alpha": [300, 302, 308, 318, 320, 322], "fixed_alpha": [300, 302, 308, 318, 320, 322], "target_entropi": [300, 302, 308, 318, 320, 322], "prod": [300, 302, 318, 322], "delay_actor": [300, 303, 322, 324, 325], "delay_qvalu": [300, 308, 320, 322, 324, 325], "min_q_weight": 300, "max_q_backup": 300, "backup": 300, "deterministic_backup": 300, "num_random": 300, "with_lagrang": 300, "lagrang": 300, "lagrange_thresh": 300, "valueclass": [300, 302, 303, 308, 320, 322, 324, 325], "qvalu": [300, 302, 307, 308, 315, 320, 322, 324, 325], "loss_actor": [300, 302, 303, 307, 308, 315, 320, 321, 322, 324, 325, 365, 393, 399, 405, 411], "loss_actor_bc": 300, "loss_alpha": [300, 302, 308, 320, 322], "loss_cql": [300, 306], "loss_qvalu": [300, 302, 306, 307, 308, 315, 320, 322, 324, 325], "loss_alpha_prim": 300, "clip_epsilon": [301, 395, 406], "normalize_advantag": [301, 316, 319, 406], "value_kei": [301, 316, 319, 333, 334, 335, 336, 393], "somemodul": [301, 316, 319], "someactor": [301, 316, 319], "value_head": [301, 316, 319], "somevalu": [301, 316, 319], "loss_modul": [301, 314, 316, 317, 319, 323, 370, 379, 380, 389, 390, 393, 394, 395, 405, 406, 409], "IN": 302, "FOR": 302, "simplic": [302, 394, 395, 400, 408, 409, 411], "openreview": [302, 320], "pczqttstix": 302, "qvalue_loss": [302, 324], "actor_loss": [302, 324], "alpha_loss": 302, "num_qvalue_net": [302, 307, 308, 315, 320, 322, 324, 325], "target_entropy_buff": 302, "delay_valu": [303, 304, 306, 309, 321, 322, 331, 394, 396, 402, 405], "loss_valu": [303, 307, 315, 321, 322, 393, 395, 399, 405, 406, 411], "pred_valu": [303, 306, 324, 325, 393, 399, 411], "pred_value_max": [303, 393, 399, 411], "target_valu": [303, 306, 320, 324, 325, 332, 389, 393, 399, 411], "target_value_max": [303, 393, 399, 411], "qvalueactor": [304, 306, 331, 388, 394, 396], "double_dqn": 304, "06461": [304, 314], "mult_one_hot": [304, 307, 308, 331], "loss_val": [304, 306, 389, 393, 395, 396, 399, 400, 402, 405, 406, 409], "01345": 305, "distanc": [306, 316, 328, 332, 333, 406], "dcql_loss": 306, "2110": [307, 315], "06169": [307, 315], "expectil": [307, 315], "tau": [307, 315, 323, 393, 394, 405], "antmaz": [307, 315], "sticht": [307, 315], "onehotcategor": [307, 308, 386], "target_entropy_weight": 308, "disctount": 309, "distributionalqvalueactor": [309, 388], "input_tensordict": [309, 393], "actor_model": 310, "value_model": [310, 312], "imagination_horizon": 310, "unrol": [310, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350], "discount_loss": [310, 312], "lambda_kl": 311, "lambda_reco": 311, "lambda_reward": 311, "reco_loss": 311, "reward_loss": 311, "free_nat": 311, "nat": 311, "delayed_clamp": 311, "global_averag": 311, "value_loss": 312, "fake_data": 312, "1606": 313, "03476": 313, "discriminator_network": 313, "use_grad_penalti": 313, "gp_lambda": 313, "discrimin": 313, "ddpgloss": [314, 323, 380, 386, 393, 399, 405, 411], "td3loss": [314, 323, 386], "value_network_update_interv": 314, "qvalueclass": 315, "loss_value_diff": 315, "diff": 315, "old_polici": 316, "new_polici": 316, "apart": [316, 406], "dtarg": 316, "samples_mc_kl": 316, "analyt": 316, "decrement": 316, "loss_": [317, 365, 389, 393, 399], "equip": [317, 396, 398], "gh": 317, "_acceptedkei": 317, "_forward_value_estimator_kei": 317, "alter": [317, 388], "value_estim": [317, 333, 334, 335, 336, 337, 389, 393, 406], "myloss": 317, "action2": 317, "augment": [317, 400, 402, 409], "set_exploration_mod": [317, 386, 388], "deterministic_sampling_mod": 317, "convert_to_funct": [317, 393], "expand_dim": 317, "create_target_param": [317, 393], "compare_against": [317, 393], "_param": 317, "expans": 317, "resampl": 317, "_target_param": 317, "network_nam": 317, "blend": 317, "add_random_modul": [317, 389], "proxim": [319, 395, 406], "flavor": [319, 393, 405, 406, 411], "clipppoloss": [319, 386, 395, 406], "klpenppoloss": [319, 386], "06347": 319, "gae": [319, 386, 389, 393, 395, 406], "ppo_loss": 319, "tdlambda": [319, 327, 389, 393], "base_lay": 319, "randn_lik": 319, "samplelogprob": 319, "ay8zfzm0tdd": 320, "sub_sample_len": 320, "subsampl": [320, 361, 390], "action_log_prob_actor": 320, "state_action_value_actor": [320, 324, 325], "connectionist": 321, "1992": 321, "doi": 321, "1007": 321, "bf00992696": 321, "actor_net": [321, 393, 395], "1801": 322, "01290": 322, "applic": [322, 331, 397, 398, 407], "1812": 322, "05905": 322, "redqloss": [323, 386], "math": 323, "theta_t": [323, 407], "theta_": [323, 407], "polyak": 323, "minimalist": 324, "06860": 324, "policy_nois": [324, 325], "noise_clip": [324, 325], "td3_bc": 324, "bc_loss": 324, "lmbd": 324, "next_state_valu": [324, 325, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 386], "td0": [326, 393, 405], "strict_shap": 328, "view_a": 328, "qmixer": [331, 386], "local_valu": 331, "visibl": [331, 406], "dafault": 331, "acceptedkei": 331, "global_valu": 331, "penultim": 331, "local_value_network": 331, "mixer_network": 331, "value_modul": [331, 395, 411], "qnet": [331, 393], "next_val_kei": 332, "pred_next_v": 332, "usus": 332, "mse": 332, "q_valu": 332, "n_steps_to_next": 332, "value_next_st": 332, "1506": [333, 338, 346], "02438": [333, 338, 346], "exponenti": [333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 368], "average_ga": [333, 395], "skip_exist": [333, 334, 335, 336], "time_dim": [333, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350], "advang": 333, "gradient_mod": 333, "value_error": [333, 334, 335, 336, 337], "target_param": [333, 334, 335, 336, 337, 393, 406], "98": [333, 334, 335, 336, 393, 394, 407], "94": [333, 336, 394, 407], "unpack": [333, 334, 335, 336], "tensor_kei": [333, 334, 335, 336, 337], "next_valu": [333, 334, 335, 336, 337], "aka": [334, 394, 405], "average_reward": [334, 335, 336], "tdestim": [334, 335, 337], "infti": 335, "valuefunctionbas": 337, "old_stat": [338, 340, 342, 344, 346, 347, 349], "new_stat": [338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350], "rolling_gamma": [342, 343, 344, 345, 347, 348, 349, 350], "g1": [342, 343, 344, 345, 347, 348, 349, 350], "g2": [342, 343, 344, 345, 347, 348, 349, 350], "g3": [342, 343, 344, 345, 347, 348, 349, 350], "g4": [342, 343, 344, 345, 347, 348, 349, 350], "v3": [342, 343, 344, 345, 347, 348, 349, 350, 412], "preproc": [351, 405], "as_non_tensor": [351, 405], "render_method": 351, "pass_tensordict": 351, "syntat": 351, "sugar": 351, "out_file_bas": 352, "skip_reset": 352, "center_crop": 353, "make_grid": 353, "csv": [353, 355, 357, 394, 401, 402], "wandb": [353, 357, 360, 401, 411], "tensorboard": [353, 357, 359, 401, 411], "log_dir": [353, 354, 355, 357, 359, 360, 394, 402], "cheetah_video": 353, "run_video": 353, "openxexperiencereplai": 353, "run_video_0": 353, "templat": 354, "pt": [355, 390, 408], "video_fp": 355, "minim": [355, 409], "dependeci": 355, "cur_dir": 355, "csv_log": 355, "add_video": 355, "video_": 355, "experiment_nam": [356, 357], "uuid": [356, 394, 412], "logger_typ": 357, "logger_nam": 357, "mlflow": [357, 358], "wandb_kwarg": 357, "mlflow_kwarg": 357, "tracking_uri": 358, "uri": 358, "datastor": 358, "tb_log": 359, "tensoarboard": 359, "td_log": 359, "save_dir": 360, "resum": 360, "uncategor": 360, "sub_traj_len": 361, "min_sub_traj_len": 361, "register_op": [361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 390, 394], "process_optim_batch": [361, 367, 368, 390], "td_out": [361, 369], "_process_optim_batch_hook": [361, 390], "batch_subsampl": 361, "clear_cuda": 362, "pre_optim_step": [362, 390], "log_pbar": [363, 364, 366, 368, 390, 394], "progress": [363, 364, 366, 370, 390, 394, 396, 412], "count_fram": 363, "pre_steps_log": [363, 364, 390], "count_frames_log": 363, "lognam": 364, "r_train": [364, 394], "log_reward": [364, 394], "loss_compon": 365, "appl": 365, "optimizer_hook": 365, "record_interv": [366, 393, 394], "record_fram": [366, 373, 393, 394], "policy_explor": [366, 380, 393, 394, 398, 402], "log_kei": [366, 394], "underestim": 366, "set_exploration_typ": [366, 386, 395, 396, 398, 405, 411], "r_evalu": [366, 393], "flatten_tensordict": [367, 394], "max_dim": 367, "rb_trainer": 367, "batch_process": [367, 368, 369, 390], "post_loss": [367, 390], "999": [368, 394], "jitter": 368, "finfo": 368, "default_dtyp": 368, "reward_norm": 368, "update_reward_stat": 368, "normalize_reward": 368, "make_train": [369, 386], "_process_batch_hook": [369, 390], "select_kei": [369, 390], "versatil": [370, 397], "optim_steps_per_batch": [370, 390, 394], "clip_grad_norm": 370, "clip_norm": 370, "progress_bar": 370, "save_trainer_interv": 370, "log_interv": [370, 394], "save_trainer_fil": [370, 390], "update_weights_interv": [372, 394], "update_weight": 372, "post_step": [372, 390, 394], "cfg": [373, 374, 375, 376, 377, 378, 379, 380, 381, 384], "dictconfig": [373, 374, 375, 376, 378, 379, 380, 381, 384], "unknowingli": 373, "annealing_fram": [373, 393], "init_env_step": [373, 374, 393], "proof_environ": [374, 393], "sta": 374, "ot": 374, "actor_model_explor": [375, 376, 393], "make_env_kwarg": [375, 376], "targetnetupdat": [377, 379, 380], "replayargsconfig": 378, "target_net_updat": [380, 393, 394], "constitu": 380, "egreedywrapp": 380, "env_proof": 380, "obs_spec": 380, "net_valu": 380, "dir": [380, 390, 394], "gettempdir": 380, "argpars": [381, 384], "namespac": [381, 384, 412], "parser": [381, 384], "transformed_env_constructor": [381, 386], "num_env_per_collector": [382, 383], "video_tag": 384, "norm_obs_onli": 384, "use_env_cr": 384, "custom_env_mak": 384, "custom_env": 384, "return_transformed_env": 384, "action_dim_gsd": 384, "state_dim_gsd": 384, "obs_norm_state_dict": 384, "wheter": 384, "maker": [384, 394], "asyncdatacollector": 386, "distributedsyncdatacollector": 386, "submitit_delayed_launch": 386, "raycollector": 386, "rational": 386, "footnot": 386, "binarydiscretetensorspec": 386, "boundedtensorspec": 386, "discretetensorspec": 386, "lazystackedcompositespec": 386, "lazystackedtensorspec": 386, "multidiscretetensorspec": 386, "multionehotdiscretetensorspec": 386, "onehotdiscretetensorspec": 386, "unboundedcontinuoustensorspec": 386, "unboundeddiscretetensorspec": 386, "prompttensordicttoken": 386, "rolloutfrommodel": 386, "tokenizeddatasetload": 386, "create_infinite_iter": 386, "constantklcontrol": 386, "adaptiveklcontrol": 386, "consolidate_spec": 386, "check_no_exclusive_kei": 386, "contains_lazy_spec": 386, "nested2t": 386, "h5combin": 386, "h5split": 386, "tictactoeenv": 386, "check_marl_group": 386, "get_available_librari": 386, "terminated_or_trunc": 386, "dreamerdecod": 386, "braxwrapp": 386, "dmcontrolwrapp": 386, "jumanjienv": 386, "jumanjiwrapp": 386, "meltingpotenv": 386, "meltingpotwrapp": 386, "mogymenv": 386, "mogymwrapp": 386, "multithreadedenvwrapp": 386, "openmlenv": 386, "openspielwrapp": 386, "openspielenv": 386, "pettingzooenv": [386, 405], "robohiveenv": 386, "smacv2env": 386, "smacv2wrapp": 386, "vmaswrapp": 386, "qvaluehook": 386, "distributionalqvaluehook": 386, "reset_nois": 386, "cemplann": 386, "mpcplannerbas": 386, "mppiplann": 386, "independentnorm": 386, "normalparamwrapp": 386, "truncatednorm": 386, "maskedonehotcategor": 386, "inv_softplu": 386, "vmapmodul": 386, "distributionaldqnloss": [386, 394], "discretesacloss": 386, "crossqloss": 386, "iqlloss": 386, "discreteiqlloss": 386, "cqlloss": 386, "discretecqlloss": 386, "gailloss": 386, "dtloss": 386, "onlinedtloss": 386, "td3bcloss": 386, "ppoloss": 386, "a2closs": 386, "reinforceloss": 386, "dreameractorloss": 386, "dreamermodelloss": 386, "dreamervalueloss": 386, "td0estim": [386, 393], "td1estim": [386, 393], "td0_return_estim": 386, "td0_advantage_estim": 386, "td1_return_estim": 386, "vec_td1_return_estim": 386, "td1_advantage_estim": 386, "vec_td1_advantage_estim": 386, "td_lambda_return_estim": 386, "vec_td_lambda_return_estim": 386, "td_lambda_advantage_estim": 386, "vec_td_lambda_advantage_estim": 386, "generalized_advantage_estim": 386, "vec_generalized_advantage_estim": 386, "reward2go": 386, "distance_loss": [386, 393], "hold_out_net": 386, "hold_out_param": [386, 393], "softupd": [386, 393, 394, 396, 399, 402, 405], "hardupd": [386, 393, 399], "batchsubsampl": [386, 390], "clearcudacach": 386, "countframeslog": 386, "logreward": [386, 390, 394], "optimizerhook": [386, 394], "replaybuffertrain": [386, 390, 394], "rewardnorm": 386, "selectkei": [386, 390], "trainerhookbas": [386, 390, 394], "updateweight": [386, 390, 394], "make_collector_offpolici": 386, "make_collector_onpolici": 386, "make_dqn_loss": 386, "make_replay_buff": [386, 393], "make_target_updat": 386, "parallel_env_constructor": [386, 393], "sync_async_collector": 386, "sync_sync_collector": 386, "correct_for_frame_skip": 386, "get_stats_random_rollout": 386, "mlflowlogg": 386, "get_logg": 386, "generate_exp_nam": 386, "journei": 387, "textbook": 387, "highlight": [387, 405], "ever": [387, 406], "bump": 387, "think": [387, 395, 405, 406, 412], "benefit": [387, 397, 405, 406, 409], "pr": 387, "ground": [388, 393, 407], "recycl": [388, 409], "impos": 388, "noisier": 388, "Their": [388, 405, 406], "consistentdropoutmodul": 388, "sd": 388, "prob_modul": 388, "pick": [388, 393, 394, 398], "hopefulli": [388, 394], "functional_modul": 388, "make_funct": 388, "mathbb": [388, 394], "rightarrow": [388, 394], "soften": 388, "backbon": [388, 396, 398, 404, 411], "make_actor": 388, "make_valu": 388, "shared_param": 388, "make_common": 388, "reusabl": [389, 393, 409], "swappabl": [389, 393], "characterist": [389, 393, 407], "trainabl": [389, 393, 399, 408], "smth": [389, 393], "metric": [389, 393], "plenti": 389, "amort": [389, 394, 395], "told": [389, 395], "pseudo": [389, 400, 407], "buri": 389, "str_valu": 389, "nutshel": [389, 393], "barto": [389, 405, 406], "chapter": [389, 401], "significantli": [389, 393, 394, 399, 406], "next_stat": 389, "value_net_loss": 389, "pow": [389, 393], "room": 389, "signifi": [389, 405, 406], "underperform": 389, "thin": 389, "intric": [389, 398], "believ": 390, "scheme": [390, 412], "substenti": 390, "_pre_steps_log_hook": 390, "_pre_optim_hook": 390, "sub_batch": 390, "_post_loss_hook": 390, "_post_optim_hook": 390, "post_optim": [390, 394], "_post_optim_log": 390, "post_optim_log": 390, "_post_steps_hook": 390, "_post_steps_log_hook": 390, "post_steps_log": 390, "reserv": 390, "logginghook": 390, "logging_hook": 390, "save_dict": 390, "some_valu": 390, "torchsnapshot": 390, "ckpt_backend": 390, "filepath": 390, "save_train": 390, "load_from_fil": 390, "641": [392, 410], "galleri": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "mem": [392, 410], "mb": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412], "torchrl_demo": [392, 410, 411], "866": [392, 393, 410, 411], "356": [392, 395, 407, 410, 411], "rb_tutori": [392, 409, 410], "474": [392, 407, 409, 410], "458": [392, 407, 410], "dqn_with_rnn": [392, 396, 410], "075": [392, 396, 410], "coding_dqn": [392, 394, 410], "080": [392, 394, 410], "1077": [392, 410], "59": [392, 394, 406, 407, 410], "702": [392, 407, 410], "308": [392, 398, 407, 410], "multiagent_ppo": [392, 406, 410], "822": [392, 406, 407, 410], "311": [392, 400, 407, 410], "coding_ddpg": [392, 393, 410], "317": [392, 393, 407, 410], "torchrl_env": [392, 410, 412], "159": [392, 407, 410, 412], "4152": [392, 407, 410, 412], "multiagent_competitive_ddpg": [392, 405, 410], "47": [392, 394, 396, 405, 407, 408, 410], "382": [392, 405, 407, 410], "coding_ppo": [392, 395, 410], "691": [392, 395, 410], "4150": [392, 410], "multi_task": [392, 404, 410], "208": [392, 404, 407, 410], "309": [392, 407, 410], "pretrained_model": [392, 408, 410], "58": [392, 393, 394, 407, 408, 409, 410], "499": [392, 407, 408, 410], "3707": [392, 408, 410], "57": [392, 393, 394, 398, 407, 408, 410], "248": [392, 398, 407, 410], "48": [392, 393, 394, 396, 397, 407, 408, 410], "951": [392, 397, 410], "434": [392, 399, 407, 410], "312": [392, 399, 402, 405, 406, 407, 410], "346": [392, 402, 407, 410], "359": [392, 400, 407, 410], "478": [392, 401, 407, 410], "348": [392, 407, 410], "author": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 409, 412], "vincent": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 409, 412], "moen": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 409, 412], "assembl": 393, "focus": [393, 399], "straightforward": [393, 394, 397, 398, 399, 400, 409], "maxim": [393, 399, 407], "transpar": [393, 396], "illustr": [393, 394, 398, 409], "bash": 393, "is_fork": [393, 394, 395, 396, 405, 406, 408], "get_start_method": [393, 394, 395, 396, 405, 406, 408], "collector_devic": 393, "loss_dict": 393, "oblivi": [393, 395, 409], "elementari": 393, "didact": 393, "dilut": 393, "pessimist": [393, 394, 395], "target_actor_network_param": 393, "actor_in_kei": 393, "actor_crit": 393, "noth": [393, 395], "compromis": 393, "hp": 393, "_value_estim": 393, "elif": [393, 394], "notimplementederror": [393, 395], "unknown": 393, "_loss_actor": 393, "td_copi": 393, "actor_network_param": [393, 405], "value_network_param": [393, 405], "_loss_valu": 393, "pred_val": 393, "target_value_network_param": 393, "glue": 393, "_forward": 393, "remaind": 393, "env_librari": 393, "env_task": 393, "env_arg": [393, 394], "friendli": 393, "torchr": 393, "rescal": 393, "presum": 393, "make_transformed_env": 393, "reward_sc": 393, "marker": 393, "env_per_collector": 393, "transform_state_dict": 393, "make_t_env": 393, "cheat": 393, "10m": 393, "cautiou": 393, "magnitud": [393, 405], "thousand": [393, 396], "get_env_stat": 393, "proof_env": 393, "5000": [393, 394, 402], "recal": [393, 395, 409], "ddpgmlpactor": 393, "ddpgmlpqnet": 393, "materi": 393, "ornsteinuhlenbeckprocessmodul": [393, 398], "make_ddpg_actor": 393, "q_net": 393, "tight": 393, "decoupl": [393, 399], "10_000": [393, 395], "traj_len": [393, 396], "make_record": 393, "recorder_obj": 393, "buffer_s": [393, 394], "random_crop_len": 393, "prb": 393, "buffer_scratch_dir": 393, "temporari": 393, "25": [393, 394, 396, 407], "dataflow": 393, "ceil_div": 393, "utd": [393, 396], "update_to_data": 393, "realiz": 393, "_must_": 393, "001": [393, 407], "outdat": 393, "trick": [393, 394], "despit": 393, "optimizer_actor": 393, "lr": [393, 394, 395, 396, 402, 405, 406, 407], "weight_decai": [393, 394], "optimizer_valu": 393, "total_collection_step": 393, "pretti": [393, 397, 401, 409], "rewards_ev": 393, "collected_fram": 393, "r0": 393, "numel": [393, 395, 396, 402, 405, 408, 409], "current_fram": [393, 405], "sampled_tensordict": 393, "gn1": 393, "clip_grad_norm_": [393, 395, 405, 406, 407], "gn2": 393, "gn": [393, 407], "td_record": 393, "rn": 393, "set_descript": [393, 395, 396, 405, 406, 407], "2f": 393, "800": [393, 394], "2939": 393, "19it": [393, 394, 407], "1600": [393, 394], "09": [393, 394, 407], "873": 393, "59it": [393, 394, 407], "2400": [393, 394], "1273": 393, "17it": [393, 394, 407], "3200": [393, 394], "1632": [393, 394], "73it": [393, 394, 407], "4000": [393, 394], "1927": 393, "24it": [393, 394], "4800": [393, 394, 407], "2162": 393, "71it": [393, 407], "56": [393, 394, 405, 407, 408], "5600": 393, "2301": 393, "86it": [393, 394, 407], "52": [393, 394, 407, 408], "70": [393, 394, 405, 406, 407, 408, 409], "79": [393, 394, 407, 408], "167": [393, 407, 409], "538": [393, 407], "61": [393, 394, 407, 408], "96": [393, 394, 407, 408], "6400": [393, 411], "68": [393, 394, 406, 407], "97": [393, 394, 407, 408], "355": [393, 407], "62": [393, 394, 407, 408], "72": [393, 394, 407, 408], "7200": 393, "07": [393, 394, 405, 407, 408], "625": [393, 407], "85it": [393, 394], "85": [393, 394, 407], "125": [393, 407], "51": [393, 394, 407], "422": [393, 407], "8000": 393, "526": [393, 407], "21it": [393, 394], "235": [393, 407], "49": [393, 394, 407, 408], "78": [393, 394, 405, 407], "8800": 393, "472": [393, 407], "37it": [393, 394], "65": [393, 394, 407, 408], "365": [393, 407], "280": [393, 407], "55": [393, 394, 407, 408], "9600": 393, "375": [393, 407], "44it": [393, 394], "89": [393, 394, 407, 409], "76": [393, 394, 407], "238": [393, 407], "254": [393, 407], "74": [393, 394, 406, 407, 408], "10400it": 393, "347": [393, 407], "14it": [393, 394], "82": [393, 394, 405, 407], "93": [393, 394, 407, 408], "204": [393, 407], "83": [393, 394, 405, 407, 408], "plot": [393, 395, 396, 405, 406, 407], "mention": [393, 396, 409, 412], "matplotlib": [393, 395, 396, 405, 406, 407, 409, 412], "pyplot": [393, 395, 396, 405, 406, 407, 409, 412], "plt": [393, 395, 396, 405, 406, 407, 409, 412], "zip": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "legend": [393, 405], "xlabel": [393, 396, 406, 407], "ylabel": [393, 406], "tight_layout": 393, "takeawai": [393, 394], "distpatch": 393, "jupyt": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "ipynb": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412], "sphinx": [393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412], "road": 394, "aspect": [394, 399], "highest": [394, 398], "prerequisit": [394, 396], "lookup": 394, "cart": 394, "pole": 394, "un": 394, "actuat": 394, "frictionless": 394, "duelingcnndqnet": 394, "egreedymodul": [394, 396, 398, 402], "is_notebook": 394, "shell": 394, "get_ipython": 394, "__class__": 394, "zmqinteractiveshel": 394, "qtconsol": 394, "terminalinteractiveshel": 394, "ipython": [394, 406, 407], "nameerror": [394, 405], "umbrella": 394, "misplac": 394, "misus": 394, "orchestr": [394, 399, 401], "five": 394, "64x64": 394, "motion": [394, 407], "obs_norm_sd": 394, "mp_context": 394, "simpler": [394, 397], "get_norm_stat": 394, "test_env": 394, "make_model": 394, "dummy_env": 394, "init_bia": 394, "exploration_modul": [394, 396, 398, 402], "eps_greedy_v": 394, "eps_greedy_val_env": 394, "actor_explor": 394, "get_replay_buff": 394, "n_optim": [394, 399, 400], "themselv": 394, "parametriz": 394, "get_collector": 394, "cl": 394, "bunch": 394, "ubiquit": [394, 397], "get_loss_modul": 394, "target_updat": [394, 405], "995": [394, 407], "variat": 394, "2e": [394, 407], "wd": 394, "upd": 394, "harder": [394, 411], "5_000": 394, "500000": 394, "100000": 394, "005": [394, 405], "mandatori": [394, 395, 406, 407], "fairer": 394, "budget": 394, "dqn_exp_": 394, "uuid1": [394, 412], "9895": 394, "0737": 394, "registr": [394, 412], "cumbersom": 394, "buffer_hook": 394, "weight_updat": 394, "aliv": 394, "total_reward": 394, "15it": [394, 407], "3688": [394, 407], "9346": [394, 407], "45": [394, 396, 407, 409], "39it": [394, 396], "90it": 394, "43it": [394, 407], "3718": 394, "66it": [394, 407], "4051": 394, "22it": 394, "4021": 394, "224": [394, 407], "3535": 394, "12it": 394, "288": [394, 407], "76it": 394, "3991": 394, "47it": [394, 407], "352": [394, 407], "73": [394, 407, 409], "79it": 394, "3353": [394, 407], "384": [394, 407], "3262": 394, "416": [394, 407], "02it": 394, "448": [394, 407], "31it": [394, 407], "480": [394, 407, 408], "57it": 394, "97it": [394, 407], "4295": [394, 407], "544": [394, 407], "54": [394, 407, 408], "00it": 394, "576": [394, 407], "608": [394, 407], "640": 394, "41it": 394, "672": 394, "53": [394, 406, 407, 408], "55it": [394, 407], "3566": 394, "704": 394, "38it": [394, 407], "736": 394, "35it": [394, 407], "768": 394, "832": 394, "58it": [394, 407], "864": 394, "05it": 394, "896": 394, "77it": 394, "928": 394, "23it": 394, "960": 394, "84it": 394, "4082": [394, 407], "992": [394, 407], "42it": [394, 407], "33it": 394, "1056": 394, "1088": 394, "88it": 394, "3475": 394, "1120": 394, "51it": [394, 407], "4173": 394, "1152": 394, "1184": 394, "70it": [394, 407], "1216": 394, "63it": [394, 407], "1248": 394, "43": [394, 407], "3778": 394, "1280": 394, "1344": 394, "82it": 394, "1376": 394, "25it": 394, "1408": 394, "1440": 394, "89it": 394, "1472": 394, "75it": 394, "1504": 394, "1536": 394, "28it": 394, "1568": 394, "1696": 394, "18it": 394, "1728": 394, "08it": 394, "1760": 394, "49it": 394, "1792": 394, "1824": 394, "1856": 394, "13it": 394, "1888": 394, "93it": 394, "1920": 394, "48it": 394, "3869": 394, "1952": 394, "94it": [394, 407], "1984": 394, "2016": 394, "2080": 394, "69it": [394, 407], "2112": [394, 407], "2144": 394, "30it": [394, 407], "2176": 394, "2208": 394, "2240": 394, "2272": 394, "2336": 394, "2368": 394, "90": [394, 405, 406, 407], "36it": [394, 407], "78it": 394, "2432": 394, "2464": 394, "2496": 394, "2528": [394, 407], "10it": 394, "2560": 394, "2624": 394, "2656": [394, 407], "99it": [394, 407], "2688": 394, "62it": [394, 407], "2720": [394, 407], "2752": 394, "2784": 394, "2816": 394, "91": [394, 407], "2848": 394, "2880": 394, "92": [394, 407, 408], "2912": 394, "2944": [394, 407], "60": [394, 405, 406, 407, 408, 411], "2976": [394, 407], "72it": [394, 407], "91it": [394, 407], "3040": 394, "07it": 394, "3072": 394, "34it": [394, 407], "3104": 394, "63": [394, 407, 408, 409], "3136": 394, "3168": 394, "80it": 394, "3232": [394, 407], "52it": 394, "3264": 394, "66": [394, 406, 407], "3296": 394, "83it": [394, 396], "67": [394, 404, 406, 407, 408], "3328": 394, "3360": 394, "81it": 394, "3392": 394, "20it": 394, "3424": 394, "53it": 394, "69": [394, 407], "3456": [394, 407], "61it": [394, 407], "3488": 394, "3520": 394, "64it": [394, 407], "71": [394, 405, 407, 409], "3552": 394, "3584": 394, "01it": 394, "3616": 394, "3648": 394, "3680": 394, "3712": 394, "3744": 394, "3776": 394, "3808": 394, "77": [394, 407], "3840": 394, "3872": 394, "54it": 394, "3904": 394, "26it": 394, "3936": 394, "56it": [394, 407], "3968": 394, "4032": 394, "60it": [394, 407], "4064": 394, "4096": 394, "4128": [394, 407], "4160": 394, "95it": 394, "4192": 394, "40it": [394, 407], "4224": 394, "4256": [394, 407], "4288": [394, 407], "4320": 394, "4352": 394, "4384": 394, "46it": 394, "4416": 394, "4448": 394, "4480": 394, "98it": 394, "4512": 394, "4544": 394, "4576": 394, "4608": 394, "4640": 394, "4704": 394, "4736": 394, "4768": 394, "4832": 394, "4864": 394, "4896": 394, "87it": 394, "4928": 394, "4960": 394, "4992": 394, "5024it": 394, "print_csv_files_in_fold": 394, "folder_path": 394, "csv_file": 394, "output_str": 394, "dirpath": 394, "endswith": 394, "strip": 394, "tmp": [394, 409], "tmpq_bdufvc": 394, "dqn_exp_6d9e1a68": 394, "7524": 394, "11ef": 394, "84bb": 394, "0242ac110002": 394, "42945271730422974": 394, "39912933111190796": 394, "3411939740180969": 394, "37777969241142273": 394, "2081187665462494": 394, "33007940649986267": 394, "31058815121650696": 394, "3904288709163666": 394, "3785577714443207": 394, "33565860986709595": 394, "26382362842559814": 394, "grad_norm_0": 394, "5421621799468994": 394, "914013385772705": 394, "205916166305542": 394, "490574598312378": 394, "3924367427825928": 394, "978982448577881": 394, "393829822540283": 394, "6359496116638184": 394, "07039213180542": 394, "10000000894069672": 394, "999999523162842": 394, "qvaluenetwork": 394, "worst": 394, "accuraci": 394, "fanci": [394, 400], "1078": 394, "talk": 395, "repetit": [395, 397, 400], "six": 395, "sophist": [395, 406], "invent": 395, "overview": [395, 399, 405, 406, 411], "theta_k": 395, "pi_": 395, "exceed": 395, "discourag": [395, 407], "indispens": 395, "analyz": 395, "lingua": 395, "franca": 395, "defaultdict": [395, 407], "3e": [395, 396, 405, 406], "max_grad_norm": [395, 405, 406], "sub_batch_s": 395, "num_epoch": [395, 406], "entropy_ep": [395, 406], "charact": 395, "inverteddoublependulum": 395, "transmit": 395, "stai": 395, "confid": [395, 405, 406], "ran": 395, "f_": 395, "mu_": 395, "difficulti": [395, 412], "d_ob": 395, "d_action": 395, "policy_modul": [395, 405, 406], "briefli": [395, 405, 406], "refil": [395, 406], "easiest": [395, 399, 405, 406], "mathemat": [395, 405, 406], "tradeoff": [395, 406], "advantage_modul": 395, "lr_schedul": [395, 407], "cosineannealinglr": [395, 407], "eval_str": 395, "tensordict_data": [395, 406], "data_view": [395, 406], "subdata": [395, 405, 406], "cum_reward_str": 395, "4f": [395, 396, 407], "stepcount_str": 395, "param_group": [395, 405], "lr_str": 395, "eval_rollout": 395, "nice": [395, 397, 400], "traceback": [395, 412], "656": [395, 407], "_rollout_stop_earli": 395, "2687": 395, "1735": 395, "_wrapped_call_impl": 395, "_call_impl": 395, "1746": 395, "forward_cal": 395, "325": [395, 407], "_self": 395, "668": 395, "_requires_sampl": 395, "438": [395, 407], "out_tensor": 395, "_dist_sampl": 395, "534": [395, 407], "583": [395, 407], "cap": [395, 409], "figsiz": [395, 407], "subplot": [395, 405, 407, 412], "titl": [395, 396, 406, 407], "bit": [395, 396, 397, 405, 406, 409], "4151": 395, "84x84": 396, "accessori": 396, "stamp": 396, "assist": 396, "emb": 396, "n_cell": 396, "customiz": 396, "wouldn": 396, "qval": 396, "stoch_polici": 396, "opportun": [396, 405], "uniniti": 396, "again": [396, 397, 398, 400, 406, 408, 409, 412], "redund": 396, "strongli": 396, "sake": [396, 408, 409], "20_000": [396, 407], "longest": 396, "npai": 396, "action_spread": 396, "133": [396, 407], "0003": [396, 407], "68it": [396, 407], "150": [396, 407], "04it": 396, "topic": [397, 398, 399], "straight": 397, "backtrack": 397, "encapsul": [397, 398, 399], "reset_with_act": 397, "2283": 397, "tp": 397, "stepped_data": 397, "spatial": 397, "useless": 397, "policyless": 397, "appreci": 397, "monitor": 397, "examin": [397, 405], "tackl": 398, "delv": 398, "bypass": 398, "extractor": 398, "palliat": 398, "additivegaussianmodul": [398, 405], "had": [398, 400], "exploration_polici": [398, 405], "greedili": 398, "2d": [398, 405, 406], "innov": [398, 399], "rollout_explor": 398, "sole": 399, "tradit": [399, 405], "supervis": [399, 400, 409, 412], "n_collect": 399, "get_next_batch": 399, "ddpg_loss": 399, "total_loss": 399, "prove": 399, "reliev": 399, "concern": 399, "accustom": 400, "surprisingli": 400, "fundament": 400, "art": [400, 405, 406], "multirpocess": 400, "countless": 400, "yourself": [400, 405, 406], "lightweight": 401, "portabl": 401, "everywher": 401, "log_scalar": 401, "elaps": 401, "my_scalar": 401, "saw": [401, 407, 409], "excess": 401, "349": [401, 407], "lesson": 402, "voluntarili": 402, "value_mlp": 402, "100_000": 402, "init_rand_step": 402, "training_loop": 402, "video_record": 402, "arbitrarili": 402, "total_count": 402, "total_episod": 402, "t0": 402, "t1": 402, "conclud": [402, 408], "tutorials_python": 403, "tutorials_jupyt": 403, "env1_obs_kei": 404, "observation_stand": 404, "env2_obs_kei": 404, "observation_walk": 404, "tdreset1": 404, "tdreset2": 404, "lazy_stack": 404, "policy_common": 404, "policy_stand": 404, "policy_walk": 404, "But": 404, "env1_mak": 404, "env2_mak": 404, "_single_task": 404, "td_rollout": 404, "matteo": [405, 406], "bettini": [405, 406], "benchmarl": [405, 406], "simple_tag": 405, "maddpg": [405, 406], "multiagentparticleenviron": 405, "mpe": 405, "centralis": [405, 406], "tie": [405, 406], "iddpg": [405, 406], "optimis": [405, 406], "typical": 405, "richard": 405, "andrew": 405, "mit": 405, "press": 405, "2018": 405, "mathbf": [405, 406], "pi": [405, 406, 407], "decentralis": [405, 406], "literatur": [405, 406], "overcom": [405, 406], "stationari": [405, 406], "concurr": [405, 406], "establish": 405, "gui": [405, 406], "is_sphinx": 405, "__sphinx_build__": 405, "n_iter": [405, 406], "evad": 405, "iteration_when_stop_training_evad": 405, "memory_s": 405, "n_optimiser_step": 405, "train_batch_s": 405, "polyak_tau": 405, "chaser": 405, "red": 405, "circl": [405, 406], "touch": [405, 407], "penal": [405, 406], "acceler": [405, 406], "obstacl": 405, "drag": [405, 406], "elast": [405, 406], "collis": [405, 406], "imped": 405, "n_chaser": 405, "n_evad": 405, "n_obstacl": 405, "use_vma": 405, "simple_tag_v3": 405, "num_good": 405, "num_adversari": 405, "num_obstacl": 405, "max_cycl": 405, "num_vmas_env": [405, 406], "num_good_ag": 405, "num_landmark": 405, "adversary_1": 405, "four": [405, 406, 407], "n_agents_in_that_group": 405, "stress": [405, 406], "paramount": [405, 406], "n_rollout_step": [405, 406], "evolut": [405, 406], "group_nam": 405, "n_agents_in_group": 405, "minor": 405, "agents_exploration_polici": 405, "utilis": [405, 406], "withing": 405, "n_obs_per_ag": [405, 406], "n_actions_per_ag": [405, 406], "share_parameters_polici": [405, 406], "policy_net": [405, 406], "_agent": 405, "grant": [405, 406], "converg": [405, 406], "share_parameters_crit": [405, 406], "obs_act": 405, "cat_modul": 405, "critic_modul": 405, "fantast": [405, 406], "reset_td": 405, "interfer": 405, "flatten_kei": 405, "process_batch": 405, "group_shap": 405, "get_item_shap": [405, 406], "nested_done_kei": 405, "nested_terminated_kei": 405, "desc": [405, 406], "episode_reward_mean_": 405, "episode_reward_mean_map": 405, "train_group_map": 405, "group_batch": 405, "_group": 405, "loss_nam": 405, "episode_reward_mean": [405, 406], "episode_reward_mean_adversari": 405, "episode_reward_mean_ag": 405, "proce": 405, "screen": 405, "fig": 405, "set_ylabel": 405, "axvlin": 405, "color": 405, "orang": 405, "set_xlabel": 405, "video_logg": 405, "vmas_log": 405, "env_with_rend": 405, "vmas_rend": 405, "print_log_dir": 405, "profici": [405, 406], "lidar": 406, "sensor": 406, "mappo": 406, "ippo": 406, "analys": 406, "visualis": 406, "vmas_devic": 406, "6_000": 406, "minibatch_s": 406, "generalis": 406, "simd": 406, "warp": 406, "todai": 406, "surround": 406, "dot": [406, 407], "collid": 406, "scenario_nam": 406, "final_rew": 406, "agent_collis": 406, "critic_net": 406, "minibatch": 406, "episode_reward_mean_list": 406, "critic_network_param": 406, "target_critic_network_param": 406, "4579917788505554": 406, "14524875581264496": 406, "168386459350586": 406, "3613134622573853": 406, "921463131904602": 406, "2106335163116455": 406, "1925103664398193": 406, "664064407348633": 406, "6539173126220703": 406, "743558168411255": 406, "xvfb": 406, "pyvirtualdisplai": 406, "1400": [406, 407], "900": 406, "pil": 406, "rendering_callback": 406, "fromarrai": 406, "gif": 406, "save_al": 406, "append_imag": 406, "freeli": 407, "undertaken": 407, "broader": 407, "wider": 407, "algebra": 407, "acquaint": 407, "avenu": 407, "_apply_to_composit": 407, "default_x": 407, "default_i": 407, "upward": 407, "angular": 407, "sin": 407, "rad": 407, "sec": 407, "angl": 407, "deleg": 407, "new_th": 407, "new_thdot": 407, "g_forc": 407, "angle_norm": 407, "albeit": 407, "high_th": 407, "high_thdot": 407, "low_th": 407, "low_thdot": 407, "trivial": 407, "irrelev": 407, "_make_spec": 407, "td_param": 407, "render_fp": 407, "random_": 407, "_make_step": 407, "staticmethod": 407, "showcas": 407, "skeleton": 407, "_apply_transform": [407, 412], "_inv_apply_transform": [407, 412], "subset": [407, 408], "sine": 407, "cosin": 407, "sintransform": 407, "costransform": 407, "t_sin": 407, "t_co": 407, "cat_transform": 407, "simple_rollout": 407, "unexplor": 407, "init_td": 407, "traj_return": 407, "last_reward": 407, "is_ipython": 407, "inlin": 407, "get_backend": 407, "ion": 407, "gcf": 407, "clear_output": 407, "0748": 407, "519": 407, "0499": 407, "4472": 407, "073": 407, "65it": 407, "0685": 407, "0408": 407, "552": 407, "92it": 407, "5154": 407, "9086": 407, "9385": 407, "155": 407, "2568": 407, "4981": 407, "223": 407, "8929": 407, "4491": 407, "581": 407, "3233": 407, "0664": 407, "596": 407, "1021": 407, "5263": 407, "9579": 407, "5807": 407, "8075": 407, "212": 407, "2009": 407, "5525": 407, "914": 407, "2894": 407, "0115": 407, "0977": 407, "1845": 407, "1830": 407, "4858": 407, "233": 407, "2863": 407, "0297": 407, "464": 407, "4617": 407, "5997": 407, "904": 407, "1647": 407, "0777": 407, "901": 407, "4709": 407, "6813": 407, "8317": 407, "3221": 407, "5554": 407, "276": 407, "701": 407, "8570": 407, "6656": 407, "463": 407, "7779": 407, "6911": 407, "875": 407, "0796": 407, "7082": 407, "0421": 407, "1496": 407, "5037": 407, "1755": 407, "5029": 407, "9454": 407, "665": 407, "9330": 407, "2118": 407, "444": 407, "0995": 407, "6294": 407, "3146": 407, "2909": 407, "461": 407, "9720": 407, "1298": 407, "9923": 407, "0345": 407, "3438": 407, "424": 407, "6953": 407, "5233": 407, "411": 407, "8011": 407, "5329": 407, "2677": 407, "6969": 407, "7010": 407, "376": 407, "9352": 407, "7707": 407, "6178": 407, "5646": 407, "7304": 407, "9407": 407, "942": 407, "3882": 407, "7604": 407, "3507": 407, "8928": 407, "258": 407, "6978": 407, "4641": 407, "549": 407, "6047": 407, "5005": 407, "4136": 407, "2993": 407, "3222": 407, "4046": 407, "7314": 407, "275": [407, 412], "6331": 407, "9318": 407, "961": 407, "8331": 407, "1604": 407, "4099": 407, "4761": 407, "4262": 407, "6363": 407, "3593": 407, "7377": 407, "2847": 407, "3443": 407, "867": 407, "3592": 407, "4760": 407, "441": 407, "9950": 407, "8021": 407, "3528": 407, "1214": 407, "708": 407, "4023": 407, "3583": 407, "041": 407, "3801": 407, "0310": 407, "120": [407, 409], "4244": 407, "2039": 407, "4850": 407, "8748": 407, "706": 407, "4897": 407, "9210": 407, "8964": 407, "0832": 407, "3934": 407, "456": 407, "8971": 407, "2933": 407, "3377": 407, "6996": 407, "2274": 407, "8916": 407, "098": 407, "2660": 407, "9110": 407, "4503": 407, "6956": 407, "9172": 407, "4026": 407, "946": 407, "9229": 407, "5205": 407, "294": 407, "8872": 407, "6637": 407, "019": 407, "9281": 407, "2082": 407, "724": 407, "8561": 407, "6574": 407, "357": 407, "4138": 407, "5230": 407, "385": 407, "4065": 407, "5642": 407, "921": 407, "9786": 407, "4129": 407, "5831": 407, "266": 407, "7723": 407, "0898": 407, "389": 407, "5155": 407, "5376": 407, "5616": 407, "4094": 407, "283": 407, "5333": 407, "4803": 407, "895": 407, "6566": 407, "2588": 407, "662": 407, "4732": 407, "7503": 407, "068": 407, "0714": 407, "3370": 407, "059": 407, "8612": 407, "1915": 407, "3855": 407, "0349": 407, "67it": 407, "9644": 407, "4538": 407, "445": 407, "0392": 407, "4080": 407, "1648": 407, "9599": 407, "143": 407, "4284": 407, "5946": 407, "2590": 407, "9181": 407, "4621": 407, "9075": 407, "1772": 407, "9444": 407, "351": 407, "9391": 407, "5595": 407, "8673": 407, "6240": 407, "5919": 407, "1071": 407, "9127": 407, "251": 407, "9799": 407, "3131": 407, "9612": 407, "9705": 407, "8741": 407, "2230": 407, "0972": 407, "0337": 407, "0350": 407, "0654": 407, "2441": 407, "4596": 407, "362": 407, "103": 407, "4362": 407, "171": [407, 412], "104": 407, "4041": 407, "6907": 407, "105": 407, "4664": 407, "2760": 407, "0299": 407, "9712": 407, "107": 407, "3332": 407, "4479": 407, "772": 407, "108": 407, "4357": 407, "9591": 407, "543": 407, "109": 407, "6216": 407, "1353": 407, "692": 407, "110": 407, "6261": 407, "7086": 407, "496": 407, "111": 407, "7758": 407, "9818": 407, "112": 407, "7772": 407, "5055": 407, "113": [407, 409], "5840": 407, "3180": 407, "2083": 407, "115": 407, "5275": 407, "6873": 407, "116": 407, "4107": 407, "1624": 407, "117": 407, "6372": 407, "2571": 407, "118": 407, "74it": 407, "4039": 407, "4428": 407, "119": 407, "4728": 407, "5628": 407, "6767": 407, "2466": 407, "522": 407, "121": [407, 412], "5873": 407, "5072": 407, "6548": 407, "3766": 407, "123": 407, "5134": 407, "1955": 407, "124": 407, "2481": 407, "0591": 407, "4500": 407, "3368": 407, "126": 407, "9708": 407, "7059": 407, "127": 407, "3031": 407, "2534": 407, "843": 407, "3327": 407, "6193": 407, "129": [407, 409], "4831": 407, "1172": 407, "2593": 407, "4219": 407, "962": 407, "8380": 407, "899": 407, "132": [407, 409], "2721": 407, "9048": 407, "166": 407, "2419": 407, "5248": 407, "2139": 407, "4278": 407, "135": 407, "0690": 407, "5140": 407, "136": 407, "1140": 407, "7402": 407, "137": [407, 409], "5356": 407, "1636": 407, "138": 407, "0671": 407, "8798": 407, "139": 407, "8918": 407, "3298": 407, "307": 407, "140": 407, "1779": 407, "141": 407, "1771": 407, "3624": 407, "936": 407, "142": 407, "1683": 407, "4810": 407, "9373": 407, "4435": 407, "4396": 407, "8092": 407, "145": 407, "2572": 407, "146": 407, "4212": 407, "0260": 407, "147": 407, "0939": 407, "6478": 407, "605": 407, "148": 407, "6606": 407, "7289": 407, "149": 407, "9300": 407, "7193": 407, "563": 407, "1166": 407, "8514": 407, "151": 407, "9108": 407, "0672": 407, "292": 407, "152": 407, "8591": 407, "3768": 407, "153": 407, "9976": 407, "154": 407, "0576": 407, "0067": 407, "935": 407, "4199": 407, "1722": 407, "156": [407, 409], "8310": 407, "3466": 407, "157": 407, "8631": 407, "2492": 407, "158": 407, "8763": 407, "1277": 407, "5562": 407, "7446": 407, "1082": 407, "9830": 407, "161": 407, "0946": 407, "5229": 407, "162": 407, "4574": 407, "6900": 407, "163": [407, 408], "2229": 407, "0318": 407, "482": 407, "164": 407, "0543": 407, "0817": 407, "761": 407, "165": 407, "2809": 407, "5118": 407, "366": 407, "1142": 407, "5635": 407, "1949": 407, "2327": 407, "982": 407, "168": 407, "0967": 407, "0387": 407, "457": 407, "169": [407, 409], "0782": 407, "2150": 407, "170": 407, "5222": 407, "3725": 407, "9288": 407, "9837": 407, "1416": 407, "1099": 407, "173": 407, "8620": 407, "8475": 407, "174": 407, "1807": 407, "4375": 407, "175": 407, "32it": 407, "1148": 407, "0645": 407, "2751": 407, "8313": 407, "177": 407, "9286": 407, "9770": 407, "178": 407, "5735": 407, "2837": 407, "179": 407, "2926": 407, "9489": 407, "180": 407, "1507": 407, "181": 407, "8724": 407, "3567": 407, "182": [407, 412], "3574": 407, "6140": 407, "183": 407, "50it": 407, "7895": 407, "2518": 407, "184": 407, "6146": 407, "185": 407, "8776": 407, "7358": 407, "186": 407, "3722": 407, "8428": 407, "187": [407, 412], "7955": 407, "188": 407, "0092": 407, "7106": 407, "829": 407, "189": 407, "2264": 407, "6919": 407, "190": 407, "1438": 407, "1362": 407, "191": 407, "0618": 407, "8217": 407, "9420": 407, "6765": 407, "193": 407, "7745": 407, "0709": 407, "194": 407, "9478": 407, "6867": 407, "195": 407, "6507": 407, "6225": 407, "196": 407, "2244": 407, "2195": 407, "197": 407, "5385": 407, "9263": 407, "198": 407, "1878": 407, "2374": 407, "8054": 407, "3504": 407, "557": 407, "0766": 407, "201": 407, "2011": 407, "8393": 407, "202": 407, "0803": 407, "7815": 407, "203": 407, "8363": 407, "2460": 407, "8643": 407, "2191": 407, "593": 407, "205": 407, "0773": 407, "1343": 407, "206": 407, "8657": 407, "207": 407, "9304": 407, "7584": 407, "8752": 407, "2307": 407, "209": 407, "5250": 407, "4869": 407, "7837": 407, "5762": 407, "211": 407, "6661": 407, "8600": 407, "2502": 407, "1752": 407, "3075": 407, "8871": 407, "214": 407, "9406": 407, "8090": 407, "215": 407, "6291": 407, "8923": 407, "876": 407, "216": 407, "9504": 407, "21e": 407, "217": 407, "7431": 407, "7880": 407, "218": 407, "4463": 407, "5432": 407, "219": [407, 412], "3793": 407, "3313": 407, "8843": 407, "0369": 407, "065": 407, "221": 407, "4828": 407, "8391": 407, "222": 407, "6265": 407, "2913": 407, "947": 407, "5541": 407, "1252": 407, "7342": 407, "2396": 407, "225": 407, "5936": 407, "1924": 407, "226": 407, "9975": 407, "2045": 407, "227": 407, "8367": 407, "9540": 407, "228": 407, "7259": 407, "6743": 407, "229": 407, "4827": 407, "7528": 407, "230": 407, "7361": 407, "8756": 407, "231": 407, "7646": 407, "1116": 407, "232": 407, "5426": 407, "8385": 407, "5662": 407, "8585": 407, "234": [407, 409], "8234": 407, "7930": 407, "2648": 407, "9309": 407, "236": 407, "6817": 407, "237": 407, "0943": 407, "1533": 407, "3045": 407, "0483": 407, "239": 407, "6415": 407, "0201": 407, "241": 407, "4437": 407, "4365": 407, "242": 407, "0358": 407, "4943": 407, "243": 407, "1272": 407, "5003": 407, "1180": 407, "2637": 407, "245": 407, "7197": 407, "0873": 407, "246": 407, "2917": 407, "247": 407, "0160": 407, "0738": 407, "3689": 407, "0120": 407, "249": 407, "5570": 407, "0475": 407, "250": 407, "4423": 407, "2220": 407, "6803": 407, "252": 407, "1465": 407, "7214": 407, "253": 407, "8801": 407, "7034": 407, "9136": 407, "4076": 407, "7589": 407, "5013": 407, "8150": 407, "2241": 407, "257": 407, "0753": 407, "8081": 407, "1951": 407, "8314": 407, "259": 407, "0038": 407, "260": 407, "0889": 407, "4616": 407, "261": 407, "0655": 407, "262": 407, "8333": 407, "9476": 407, "263": 407, "7554": 407, "3798": 407, "264": 407, "3717": 407, "3947": 407, "529": 407, "265": 407, "3060": 407, "6495": 407, "7467": 407, "8889": 407, "267": 407, "8457": 407, "591": 407, "7137": 407, "0536": 407, "771": 407, "269": 407, "1651": 407, "388": 407, "270": 407, "8246": 407, "5709": 407, "281": 407, "271": 407, "7502": 407, "0521": 407, "032": 407, "272": 407, "5475": 407, "7253": 407, "273": 407, "2856": 407, "7130": 407, "274": 407, "2778": 407, "4122": 407, "8368": 407, "1841": 407, "9622": 407, "1603": 407, "003e": 407, "277": 407, "0247": 407, "278": 407, "2238": 407, "6418": 407, "279": 407, "0626": 407, "2538": 407, "0149": 407, "7380": 407, "2167": 407, "8911": 407, "282": 407, "8725": 407, "1983": 407, "8142": 407, "3709": 407, "284": 407, "4989": 407, "285": 407, "6464": 407, "6210": 407, "286": 407, "9726": 407, "0820": 407, "287": 407, "6975": 407, "9091": 407, "4926": 407, "4791": 407, "289": 407, "0905": 407, "3500": 407, "290": 407, "2287": 407, "291": 407, "9918": 407, "5543": 407, "9245": 407, "6444": 407, "631": 407, "293": 407, "0448": 407, "4769": 407, "8566": 407, "7208": 407, "295": 407, "0966": 407, "296": 407, "5303": 407, "1537": 407, "023": 407, "297": 407, "2682": 407, "564": 407, "298": 407, "4318": 407, "5063": 407, "299": 407, "7475": 407, "4190": 407, "8186": 407, "5077": 407, "301": 407, "1883": 407, "5291": 407, "302": 407, "3998": 407, "303": 407, "3622": 407, "0930": 407, "626": 407, "304": 407, "9500": 407, "5664": 407, "305": 407, "5697": 407, "3024": 407, "306": 407, "3117": 407, "0052": 407, "006": 407, "0981": 407, "9312": 407, "3873": 407, "0411": 407, "2650": 407, "1656": 407, "0228": 407, "004": 407, "1196": 407, "2478": 407, "7353": 407, "0812": 407, "313": 407, "3022": 407, "758": 407, "314": 407, "1406": 407, "4626": 407, "315": 407, "2156": 407, "851": 407, "316": 407, "1953": 407, "3774": 407, "6385": 407, "9917": 407, "318": 407, "2764": 407, "905": 407, "319": 407, "6391": 407, "9317": 407, "9748": 407, "2679": 407, "321": 407, "8495": 407, "5125": 407, "8177": 407, "6602": 407, "323": 407, "0704": 407, "5776": 407, "324": 407, "9833": [407, 411], "1339": 407, "402": 407, "1238": 407, "326": 407, "9299": 407, "0227": 407, "327": 407, "7727": 407, "1607": 407, "336": 407, "328": 407, "3958": 407, "3223": 407, "763": 407, "329": 407, "4742": 407, "1797": 407, "330": 407, "0144": 407, "0085": 407, "791": 407, "331": 407, "8284": 407, "0428": 407, "332": 407, "7365": 407, "333": 407, "4566": 407, "0781": 407, "086": 407, "334": 407, "3355": 407, "0230": 407, "335": 407, "0423": 407, "076": 407, "3711": 407, "1335": 407, "6855": 407, "337": 407, "0304": 407, "0023": 407, "8459": 407, "338": 407, "9998": 407, "4399": 407, "339": 407, "2303": 407, "1346": 407, "340": 407, "2915": 407, "7116": 407, "341": 407, "5560": 407, "0487": 407, "342": 407, "5119": 407, "061": 407, "343": 407, "3305": 407, "3705": 407, "957": 407, "344": 407, "6068": 407, "345": 407, "5731": 407, "3897": 407, "0376": 407, "0434": 407, "012": 407, "1300": 407, "1215": 407, "0968": 407, "0885": 407, "350": 407, "1348": 407, "0073": 407, "5052": 407, "4184": 407, "2817": 407, "8887": 407, "353": 407, "4779": 407, "1009": 407, "354": 407, "96it": 407, "0604": 407, "599": 407, "4486": 407, "1176": 407, "2436": 407, "0668": 407, "8849": 407, "0012": 407, "358": 407, "7511": 407, "8804": 407, "8870": 407, "6728": 407, "360": 407, "45it": 407, "8841": 407, "5508": 407, "361": 407, "5242": 407, "0013": 407, "6185": 407, "363": 407, "1378": 407, "0204": 407, "364": 407, "0355": 407, "685": 407, "4884": 407, "0231": 407, "0014": 407, "6793": 407, "367": 407, "9834": 407, "863": 407, "368": 407, "6709": 407, "462": 407, "369": 407, "5199": 407, "9790": 407, "370": 407, "9401": 407, "7802": 407, "371": 407, "6723": 407, "372": 407, "2678": 407, "6201": 407, "373": 407, "2184": 407, "7385": 407, "374": 407, "6344": 407, "617": 407, "9945": 407, "0772": 407, "567": 407, "7576": 407, "0398": 407, "377": 407, "3396": 407, "0022": 407, "094": 407, "378": 407, "3073": 407, "4018": 407, "379": 407, "1869": 407, "380": 407, "0481": 407, "1117": 407, "381": 407, "6823": 407, "981": 407, "8305": 407, "0210": 407, "383": 407, "4908": 407, "0272": 407, "3267": 407, "0111": 407, "7965": 407, "1796": 407, "0039": 407, "5396": 407, "386": 407, "3757": 407, "0490": 407, "387": 407, "1394": 407, "4187": 407, "2986": 407, "7954": 407, "1274": 407, "0063": 407, "813": 407, "390": 407, "8706": 407, "0114": 407, "391": 407, "6922": 407, "2423": 407, "392": 407, "9115": 407, "2602": 407, "393": 407, "2449": 407, "0783": 407, "394": 407, "0631": 407, "0057": 407, "7444": 407, "395": 407, "3339": 407, "0167": 407, "396": 407, "4806": 407, "397": 407, "4171": 407, "067": 407, "398": 407, "2618": 407, "5809": 407, "399": 407, "0054": 407, "3364": 407, "8733": 407, "0184": 407, "401": 407, "9137": 407, "0113": 407, "025": 407, "0386": 407, "0625": 407, "403": 407, "1332": 407, "0582": 407, "7816": 407, "404": 407, "8341": 407, "0941": 407, "854": 407, "405": 407, "8615": 407, "588": 407, "406": 407, "3849": 407, "008": 407, "407": 407, "9395": 407, "0765": 407, "055": 407, "408": 407, "2685": 407, "2235": 407, "688": 407, "409": 407, "3052": 407, "4249": 407, "410": 407, "6806": 407, "6383": 407, "3721": 407, "9981": 407, "412": 407, "1862": 407, "413": 407, "9811": 407, "0171": 407, "013": 407, "414": 407, "0252": 407, "0049": 407, "6205": 407, "415": 407, "1108": 407, "4921": 407, "9142": 407, "8130": 407, "417": 407, "1725": 407, "0036": 407, "3196": 407, "418": 407, "7795": 407, "0242": 407, "799": [407, 412], "419": 407, "7737": 407, "0138": 407, "420": 407, "1462": 407, "0053": 407, "421": 407, "9226": 407, "6139": 407, "9889": 407, "0403": 407, "423": 407, "6194": 407, "0032": 407, "3989": 407, "0104": 407, "425": 407, "9960": 407, "0009": 407, "6009": 407, "426": 407, "2697": 407, "0914": 407, "427": 407, "1114": 407, "428": 407, "9862": 407, "1932": 407, "429": 407, "0637": 407, "0623": 407, "082": 407, "430": 407, "9906": 407, "2031": 407, "431": 407, "9948": 407, "0895": 407, "432": 407, "1970": 407, "0256": 407, "4231": 407, "0449": 407, "644": 407, "1039": 407, "1973": 407, "435": 407, "4561": 407, "1225": 407, "436": 407, "0211": 407, "2125": 407, "437": 407, "3866": 407, "0050": 407, "7202": 407, "6388": 407, "0072": 407, "439": 407, "1187": 407, "0015": 407, "5116": 407, "440": 407, "0432": 407, "0025": 407, "7809": 407, "1925": 407, "0103": 407, "442": 407, "9570": 407, "0002": 407, "443": 407, "0871": 407, "5601": 407, "0165": 407, "0047": 407, "6061": 407, "2746": 407, "0027": 407, "7887": 407, "446": 407, "1835": 407, "0035": 407, "855": 407, "447": 407, "8420": 407, "548": 407, "2653": 407, "0126": 407, "9736": 407, "449": 407, "0594": 407, "0119": 407, "6196": 407, "450": 407, "4509": 407, "0373": 407, "451": 407, "0620": 407, "452": 407, "6898": 407, "3235": 407, "687": 407, "453": 407, "5879": 407, "454": 407, "8406": 407, "0694": 407, "455": 407, "8259": 407, "0235": 407, "8500": 407, "0024": 407, "4054": 407, "2027": 407, "0894": 407, "459": [407, 409], "5966": 407, "460": 407, "6942": 407, "0016": 407, "4254": 407, "6703": 407, "0145": 407, "8124": 407, "0218": 407, "9196": 407, "0188": 407, "8986": 407, "0884": 407, "0084": 407, "5624": 407, "465": 407, "8862": 407, "0006": 407, "5384": 407, "466": 407, "5837": 407, "467": 407, "8954": 407, "0101": 407, "6751": 407, "468": 407, "8063": 407, "0122": 407, "9635": 407, "469": 407, "0692": 407, "4216": 407, "470": 407, "1227": 407, "0586": 407, "162e": 407, "471": 407, "9690": 407, "4166": 407, "6324": 407, "473": 407, "0778": 407, "8548": 407, "0017": 407, "4408": 407, "475": 407, "8125": 407, "1515": 407, "476": 407, "2733": 407, "0044": 407, "2836": 407, "477": 407, "7497": 407, "7681": 407, "8547": 407, "0105": 407, "7212": 407, "479": 407, "9848": 407, "0019": 407, "6498": 407, "1987": 407, "0011": 407, "5473": 407, "481": 407, "8991": 407, "6091": 407, "9189": 407, "5771": 407, "483": 407, "6781": 407, "7542": 407, "484": 407, "5959": 407, "0064": 407, "485": 407, "2547": 407, "486": 407, "0636": 407, "547": 407, "487": 407, "0065": 407, "488": 407, "1694": 407, "0083": 407, "5759": 407, "489": 407, "0493": 407, "0021": 407, "7805": 407, "490": 407, "0950": 407, "497": 407, "491": 407, "9717": 407, "3672": 407, "492": 407, "0207": 407, "493": 407, "8266": 407, "5365": 407, "494": 407, "2623": 407, "5078": 407, "495": 407, "4545": 407, "09636": 407, "8754": 407, "0010": 407, "498": 407, "0031": 407, "8269": 407, "6642": 407, "2284": 407, "501": 407, "9130": 407, "0008": 407, "502": 407, "503": 407, "7624": 407, "0056": 407, "3858": 407, "504": 407, "0890": 407, "0042": 407, "505": 407, "7505": 407, "2157": 407, "506": 407, "8394": 407, "3413": 407, "507": 407, "9609": 407, "0041": 407, "6905": 407, "508": 407, "8467": 407, "4409": 407, "509": 407, "510": 407, "8128": 407, "3559": 407, "511": 407, "1479": 407, "0264": 407, "1589": 407, "566": 407, "513": 407, "2756": 407, "0046": 407, "5266": 407, "514": 407, "9873": 407, "0112": 407, "9314": 407, "515": 407, "3791": 407, "0721": 407, "516": 407, "4580": 407, "0758": 407, "6114": 407, "517": 407, "2431": 407, "518": 407, "1958": 407, "5553": 407, "8924": 407, "0097": 407, "520": 407, "3737": 407, "0234": 407, "521": 407, "9125": 407, "4623": 407, "3230": 407, "0589": 407, "3784": 407, "523": 407, "9482": 407, "0051": 407, "524": 407, "1979": 407, "0045": 407, "6401": 407, "525": 407, "1588": 407, "0048": 407, "6255": 407, "6084": 407, "3477": 407, "1475": 407, "0209": 407, "528": 407, "7611": 407, "1040": 407, "0099": 407, "0173": 407, "643": 407, "530": 407, "8189": 407, "4358": 407, "531": 407, "9897": 407, "532": 407, "1548": 407, "9751": 407, "533": 407, "6362": 407, "7495": 407, "1749": 407, "9513": 407, "535": 407, "7708": 407, "0371": 407, "536": 407, "2649": 407, "0437": 407, "537": 407, "5491": 407, "0276": 407, "6426": 407, "7294": 407, "078e": 407, "539": 407, "9928": 407, "540": 407, "7937": 407, "0124": 407, "9664": 407, "541": 407, "3342": 407, "542": 407, "2046": 407, "5496": 407, "0956": 407, "0059": 407, "545": 407, "9028": 407, "5843": 407, "546": 407, "0674": 407, "0178": 407, "797": 407, "2815": 407, "0599": 407, "1587": 407, "9276": 407, "8228": 407, "6164": 407, "551": 407, "6850": 407, "9167": 407, "3092": 407, "0670": 407, "9177": 407, "553": 407, "1599": 407, "0043": 407, "554": 407, "6367": 407, "555": 407, "3657": 407, "556": 407, "6694": 407, "2622": 407, "0372": 407, "4841": 407, "558": 407, "2707": 407, "757": 407, "559": 407, "2267": 407, "5415": 407, "560": 407, "4556": 407, "0163": 407, "561": 407, "1839": 407, "0809": 407, "6262": 407, "562": 407, "0278": 407, "1112": 407, "6155": 407, "565": 407, "1427": 407, "3582": 407, "624": 407, "7870": 407, "9490": 407, "0439": 407, "8796": 407, "568": 407, "8026": 407, "612": 407, "569": [407, 412], "3147": 407, "8486": 407, "570": 407, "7917": 407, "0129": 407, "571": 407, "9553": 407, "0020": 407, "6871": 407, "572": 407, "3132": 407, "0159": 407, "8646": 407, "573": 407, "5320": 407, "0269": 407, "574": 407, "2955": 407, "0245": 407, "575": [407, 412], "3347": 407, "0179": 407, "9718": 407, "1629": 407, "804": 407, "577": 407, "4164": 407, "0070": 407, "4335": 407, "578": 407, "579": 407, "3049": 407, "9063": 407, "580": 407, "8785": 407, "3295": 407, "5184": 407, "0546": 407, "582": 407, "4589": 407, "4697": 407, "2476": 407, "584": 407, "2397": 407, "585": 407, "4953": 407, "1775": 407, "586": 407, "2258": 407, "0110": 407, "7671": 407, "587": 407, "3981": 407, "8590": 407, "0007": 407, "589": 407, "9820": 407, "4221": 407, "590": 407, "1293": 407, "0116": 407, "868": 407, "1675": 407, "5931": 407, "592": 407, "2910": 407, "5219": 407, "2124": 407, "1730": 407, "737": 407, "594": 407, "2914": 407, "0206": 407, "595": 407, "0172": 407, "3982": 407, "0945": 407, "0121": 407, "4789": 407, "597": 407, "3805": 407, "4074": 407, "598": 407, "3310": 407, "5065": 407, "6028": 407, "6316": 407, "6724": 407, "6523": 407, "601": 407, "0136": 407, "4298": 407, "602": 407, "3524": 407, "2629": 407, "603": 407, "2635": 407, "7839": 407, "604": 407, "6041": 407, "8027": 407, "4170": 407, "4675": 407, "606": 407, "3153": 407, "9316": 407, "607": 407, "0649": 407, "9722": 407, "7989": 407, "0329": 407, "609": 407, "1976": 407, "6852": 407, "610": 407, "4793": 407, "1255": 407, "611": 407, "4581": 407, "0394": 407, "2047": 407, "0326": 407, "613": 407, "8967": 407, "8619": 407, "614": 407, "5906": 407, "6491": 407, "615": 407, "6634": 407, "4394": 407, "616": 407, "0624": 407, "0061": 407, "5676": 407, "3259": 407, "0131": 407, "7733": 407, "618": 407, "7515": 407, "0189": 407, "5575": 407, "619": 407, "9313": 407, "6286": 407, "620": 407, "4325": 407, "7832": 407, "621": 407, "1134": 407, "622": 407, "4572": 407, "0500": 407, "5838": 407, "623": 407, "3818": 407, "8623": 407, "1253": 407, "6622": 407, "subject": 407, "explain": 408, "semat": 408, "r3mtransform": 408, "env_transform": [408, 412], "s3": 408, "amazonaw": 408, "r3m_50": 408, "374m": 408, "75m": 408, "7mb": 408, "9m": 408, "3mb": 408, "4mb": 408, "8mb": 408, "2m": 408, "2mb": 408, "6m": 408, "4m": 408, "0mb": 408, "105m": 408, "115m": 408, "9mb": 408, "131m": 408, "144m": 408, "151m": 408, "164m": 408, "6mb": 408, "180m": 408, "5mb": 408, "195m": 408, "204m": 408, "212m": 408, "219m": 408, "229m": 408, "244m": 408, "251m": 408, "262m": 408, "268m": 408, "277m": 408, "282m": 408, "295m": 408, "311m": 408, "326m": 408, "331m": 408, "342m": 408, "346m": 408, "360m": 408, "1mb": 408, "wiser": 408, "batteri": 409, "buffer_list": 409, "lowest": 409, "medium": 409, "buffer_lazytensor": 409, "buffer_lazymemmap": 409, "tempdir": 409, "tmpyxtf6tl2": 409, "fullest": 409, "mydata": 409, "background": 409, "question": [409, 411], "_i": 409, "artifici": 409, "0893e": 409, "hamper": 409, "she": 409, "pars": 409, "proport": 409, "hist": 409, "barcontain": 409, "artist": 409, "reappear": 409, "unfold": 409, "problemat": 409, "4th": 409, "prioritizedslicesampl": 409, "tensordictmaxvaluewrit": 409, "demo": 411, "icml": 411, "vmoen": 411, "fb": 411, "invest": 411, "platform": 411, "media": 411, "predominantli": 411, "tensordict1": 411, "tensordict2": 411, "tensordict_sampl": 411, "_sampler": 411, "_sum_tre": 411, "modulenotfounderror": 411, "06984967738389969": 411, "28791671991348267": 411, "noopresetenv": [411, 412], "backbone_modul": 411, "params_expand": 411, "exec_sequ": 411, "tensordict_exp": 411, "base_modul": 411, "0137": 411, "1524": 411, "0641": 411, "viewbackward0": 411, "asstridedbackward0": 411, "8728": 411, "1334": 411, "3494": 411, "6887": 411, "6402": 411, "_safetanhnoepsbackward": 411, "1132": 411, "1762": 411, "3430": 411, "2668": 411, "2918": 411, "6239": 411, "tensordicts_prealloc": 411, "tensordicts_stack": 411, "tensordict_rollout": [411, 412], "disclaim": 411, "concatmodul": 411, "loss_td": 411, "year": 411, "roadmap": 411, "compris": 411, "contributor": 411, "curiou": 411, "nascent": 411, "unsupervis": 412, "unifi": 412, "_build_env": 412, "bipedalwalk": 412, "bipedalwalkerhardcor": 412, "blackjack": 412, "carrac": 412, "0908": 412, "deserv": 412, "__episode__": 412, "__trajectory__": 412, "void": 412, "reproduct": 412, "reset_data": 412, "tensordict_tprim": 412, "imshow": 412, "axesimag": 412, "0x7f96f03ce6a0": 412, "1383": 412, "3091": 412, "1435": 412, "_check_version_exist": 412, "ns": 412, "_check_name_exist": 412, "_check_namespace_exist": 412, "namespacenotfound": 412, "suggestion_msg": 412, "wrapper1": 412, "wrapper2": 412, "obviou": 412, "truth": 412, "env_transformed_bi": 412, "stanc": 412, "transformeddistribut": 412, "base_dist": 412, "concat": 412, "mofidi": 412, "transformedenviron": 412, "moderet": 412, "computation": 412, "legitim": 412, "incom": 412, "amongst": 412, "has_cuda": 412, "wor": 412, "convention": 412, "markovian": 412, "constain": 412, "bar_": 412, "get_someth": 412, "aargh": 412, "is_clos": 412, "foo_list": 412, "parallen": 412, "particularili": 412, "evolv": 412, "steadi": 412, "approx": 412, "_extra_st": 412, "observation_ssq": 412, "observation_sum": 412, "dispach": 412, "absor": 412}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "Bounded"], [28, 0, 1, "", "BoundedTensorSpec"], [29, 0, 1, "", "Categorical"], [30, 0, 1, "", "Composite"], [31, 0, 1, "", "CompositeSpec"], [32, 0, 1, "", "ConstantKLController"], [33, 0, 1, "", "DiscreteTensorSpec"], [34, 0, 1, "", "Flat2TED"], [35, 0, 1, "", "H5Combine"], [36, 0, 1, "", "H5Split"], [37, 0, 1, "", "LazyStackedCompositeSpec"], [38, 0, 1, "", "LazyStackedTensorSpec"], [39, 0, 1, "", "MultiCategorical"], [40, 0, 1, "", "MultiDiscreteTensorSpec"], [41, 0, 1, "", "MultiOneHot"], [42, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [43, 0, 1, "", "MultiStep"], [44, 0, 1, "", "Nested2TED"], [45, 0, 1, "", "NonTensor"], [46, 0, 1, "", "NonTensorSpec"], [47, 0, 1, "", "OneHotDiscreteTensorSpec"], [48, 0, 1, "", "PairwiseDataset"], [49, 0, 1, "", "PrioritizedReplayBuffer"], [50, 0, 1, "", "PromptData"], [51, 0, 1, "", "PromptTensorDictTokenizer"], [52, 0, 1, "", "ReplayBuffer"], [53, 0, 1, "", "RewardData"], [54, 0, 1, "", "RolloutFromModel"], [55, 0, 1, "", "Stacked"], [56, 0, 1, "", "StackedComposite"], [57, 0, 1, "", "TED2Flat"], [58, 0, 1, "", "TED2Nested"], [59, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [60, 0, 1, "", "TensorDictReplayBuffer"], [61, 0, 1, "", "TensorDictTokenizer"], [62, 0, 1, "", "TensorSpec"], [63, 0, 1, "", "TokenizedDatasetLoader"], [64, 0, 1, "", "Unbounded"], [65, 0, 1, "", "UnboundedContinuous"], [66, 0, 1, "", "UnboundedContinuousTensorSpec"], [67, 0, 1, "", "UnboundedDiscrete"], [68, 0, 1, "", "UnboundedDiscreteTensorSpec"], [69, 0, 1, "", "check_no_exclusive_keys"], [70, 0, 1, "", "consolidate_spec"], [71, 0, 1, "", "contains_lazy_spec"], [72, 0, 1, "", "create_infinite_iterator"], [82, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.Bounded": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "clone"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 4, 1, "", "device"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "make_neg_dim"], [27, 4, 1, "", "ndim"], [27, 1, 1, "", "ndimension"], [27, 1, 1, "", "one"], [27, 1, 1, "", "ones"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unsqueeze"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"], [27, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 3, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 4, 1, "", "device"], [30, 1, 1, "", "empty"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "get"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_empty"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "items"], [30, 1, 1, "", "keys"], [30, 1, 1, "", "lock_"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unlock_"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "values"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 3, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 4, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "to_one_hot"], [33, 1, 1, "", "to_one_hot_spec"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "update_mask"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedCompositeSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 4, 1, "", "device"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "get"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_empty"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "items"], [37, 1, 1, "", "keys"], [37, 1, 1, "", "lock_"], [37, 1, 1, "", "make_neg_dim"], [37, 4, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unlock_"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "values"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 4, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 4, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.MultiCategorical": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 3, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "to_one_hot"], [39, 1, 1, "", "to_one_hot_spec"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "update_mask"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 3, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "to_one_hot"], [40, 1, 1, "", "to_one_hot_spec"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 3, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 4, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "compile"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "mtia"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_load_state_dict_pre_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "register_state_dict_post_hook"], [43, 1, 1, "", "register_state_dict_pre_hook"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_submodule"], [43, 1, 1, "", "share_memory"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 4, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 4, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 3, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[48, 4, 1, "", "batch_size"], [48, 4, 1, "", "device"], [48, 1, 1, "", "from_dataset"], [48, 1, 1, "", "from_tensordict"], [48, 1, 1, "", "get"], [48, 1, 1, "", "load"], [48, 1, 1, "", "load_"], [48, 1, 1, "", "load_memmap"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "memmap"], [48, 1, 1, "", "memmap_"], [48, 1, 1, "", "memmap_like"], [48, 1, 1, "", "memmap_refresh_"], [48, 4, 1, "", "names"], [48, 1, 1, "", "save"], [48, 1, 1, "", "set"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to_tensordict"], [48, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[49, 1, 1, "", "add"], [49, 1, 1, "", "append_transform"], [49, 1, 1, "", "dump"], [49, 1, 1, "", "dumps"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "extend"], [49, 1, 1, "", "insert_transform"], [49, 1, 1, "", "load"], [49, 1, 1, "", "loads"], [49, 1, 1, "", "register_load_hook"], [49, 1, 1, "", "register_save_hook"], [49, 1, 1, "", "sample"], [49, 4, 1, "", "sampler"], [49, 1, 1, "", "save"], [49, 1, 1, "", "set_sampler"], [49, 1, 1, "", "set_storage"], [49, 1, 1, "", "set_writer"], [49, 4, 1, "", "storage"], [49, 4, 1, "", "write_count"], [49, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[50, 4, 1, "", "batch_size"], [50, 4, 1, "", "device"], [50, 1, 1, "", "from_dataset"], [50, 1, 1, "", "from_tensordict"], [50, 1, 1, "", "get"], [50, 1, 1, "", "load"], [50, 1, 1, "", "load_"], [50, 1, 1, "", "load_memmap"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "memmap"], [50, 1, 1, "", "memmap_"], [50, 1, 1, "", "memmap_like"], [50, 1, 1, "", "memmap_refresh_"], [50, 4, 1, "", "names"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to_tensordict"], [50, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dump"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "load"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "register_load_hook"], [52, 1, 1, "", "register_save_hook"], [52, 1, 1, "", "sample"], [52, 4, 1, "", "sampler"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 4, 1, "", "storage"], [52, 4, 1, "", "write_count"], [52, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[53, 4, 1, "", "batch_size"], [53, 4, 1, "", "device"], [53, 1, 1, "", "from_tensordict"], [53, 1, 1, "", "get"], [53, 1, 1, "", "load"], [53, 1, 1, "", "load_"], [53, 1, 1, "", "load_memmap"], [53, 1, 1, "", "load_state_dict"], [53, 1, 1, "", "memmap"], [53, 1, 1, "", "memmap_"], [53, 1, 1, "", "memmap_like"], [53, 1, 1, "", "memmap_refresh_"], [53, 4, 1, "", "names"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set"], [53, 1, 1, "", "state_dict"], [53, 1, 1, "", "to_tensordict"], [53, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[54, 1, 1, "", "create_rollout_td"], [54, 1, 1, "", "generate"], [54, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.Stacked": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 4, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "clone"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 4, 1, "", "device"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "get"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_empty"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "items"], [56, 1, 1, "", "keys"], [56, 1, 1, "", "lock_"], [56, 1, 1, "", "make_neg_dim"], [56, 4, 1, "", "ndim"], [56, 1, 1, "", "ndimension"], [56, 1, 1, "", "one"], [56, 1, 1, "", "ones"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "unlock_"], [56, 1, 1, "", "unsqueeze"], [56, 1, 1, "", "values"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"], [56, 1, 1, "", "zeros"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 1, 1, "", "dump"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "load"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "register_load_hook"], [59, 1, 1, "", "register_save_hook"], [59, 1, 1, "", "sample"], [59, 4, 1, "", "sampler"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 4, 1, "", "storage"], [59, 4, 1, "", "write_count"], [59, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 1, 1, "", "dump"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "load"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "register_load_hook"], [60, 1, 1, "", "register_save_hook"], [60, 1, 1, "", "sample"], [60, 4, 1, "", "sampler"], [60, 1, 1, "", "save"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 4, 1, "", "storage"], [60, 4, 1, "", "write_count"], [60, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[63, 1, 1, "", "dataset_to_tensordict"], [63, 1, 1, "", "load"]], "torchrl.data.Unbounded": [[64, 1, 1, "", "assert_is_in"], [64, 1, 1, "", "clear_device_"], [64, 1, 1, "", "clone"], [64, 1, 1, "", "contains"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 4, 1, "", "device"], [64, 1, 1, "", "encode"], [64, 1, 1, "", "expand"], [64, 1, 1, "", "flatten"], [64, 1, 1, "", "implements_for_spec"], [64, 1, 1, "", "index"], [64, 1, 1, "", "is_in"], [64, 1, 1, "", "make_neg_dim"], [64, 4, 1, "", "ndim"], [64, 1, 1, "", "ndimension"], [64, 1, 1, "", "one"], [64, 1, 1, "", "ones"], [64, 1, 1, "", "project"], [64, 1, 1, "", "rand"], [64, 1, 1, "", "reshape"], [64, 1, 1, "", "sample"], [64, 1, 1, "", "squeeze"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_numpy"], [64, 1, 1, "", "type_check"], [64, 1, 1, "", "unflatten"], [64, 1, 1, "", "unsqueeze"], [64, 1, 1, "", "view"], [64, 1, 1, "", "zero"], [64, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[65, 1, 1, "", "assert_is_in"], [65, 1, 1, "", "clear_device_"], [65, 1, 1, "", "clone"], [65, 1, 1, "", "contains"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 4, 1, "", "device"], [65, 1, 1, "", "encode"], [65, 1, 1, "", "expand"], [65, 1, 1, "", "flatten"], [65, 1, 1, "", "implements_for_spec"], [65, 1, 1, "", "index"], [65, 1, 1, "", "is_in"], [65, 1, 1, "", "make_neg_dim"], [65, 4, 1, "", "ndim"], [65, 1, 1, "", "ndimension"], [65, 1, 1, "", "one"], [65, 1, 1, "", "ones"], [65, 1, 1, "", "project"], [65, 1, 1, "", "rand"], [65, 1, 1, "", "reshape"], [65, 1, 1, "", "sample"], [65, 1, 1, "", "squeeze"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_numpy"], [65, 1, 1, "", "type_check"], [65, 1, 1, "", "unflatten"], [65, 1, 1, "", "unsqueeze"], [65, 1, 1, "", "view"], [65, 1, 1, "", "zero"], [65, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[66, 1, 1, "", "assert_is_in"], [66, 1, 1, "", "clear_device_"], [66, 1, 1, "", "clone"], [66, 1, 1, "", "contains"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 4, 1, "", "device"], [66, 1, 1, "", "encode"], [66, 1, 1, "", "expand"], [66, 1, 1, "", "flatten"], [66, 1, 1, "", "implements_for_spec"], [66, 1, 1, "", "index"], [66, 1, 1, "", "is_in"], [66, 1, 1, "", "make_neg_dim"], [66, 4, 1, "", "ndim"], [66, 1, 1, "", "ndimension"], [66, 1, 1, "", "one"], [66, 1, 1, "", "ones"], [66, 1, 1, "", "project"], [66, 1, 1, "", "rand"], [66, 1, 1, "", "reshape"], [66, 1, 1, "", "sample"], [66, 1, 1, "", "squeeze"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_numpy"], [66, 1, 1, "", "type_check"], [66, 1, 1, "", "unflatten"], [66, 1, 1, "", "unsqueeze"], [66, 1, 1, "", "view"], [66, 1, 1, "", "zero"], [66, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[67, 1, 1, "", "assert_is_in"], [67, 1, 1, "", "clear_device_"], [67, 1, 1, "", "clone"], [67, 1, 1, "", "contains"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 4, 1, "", "device"], [67, 1, 1, "", "encode"], [67, 1, 1, "", "expand"], [67, 1, 1, "", "flatten"], [67, 1, 1, "", "implements_for_spec"], [67, 1, 1, "", "index"], [67, 1, 1, "", "is_in"], [67, 1, 1, "", "make_neg_dim"], [67, 4, 1, "", "ndim"], [67, 1, 1, "", "ndimension"], [67, 1, 1, "", "one"], [67, 1, 1, "", "ones"], [67, 1, 1, "", "project"], [67, 1, 1, "", "rand"], [67, 1, 1, "", "reshape"], [67, 1, 1, "", "sample"], [67, 1, 1, "", "squeeze"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_numpy"], [67, 1, 1, "", "type_check"], [67, 1, 1, "", "unflatten"], [67, 1, 1, "", "unsqueeze"], [67, 1, 1, "", "view"], [67, 1, 1, "", "zero"], [67, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[68, 1, 1, "", "assert_is_in"], [68, 1, 1, "", "clear_device_"], [68, 1, 1, "", "clone"], [68, 1, 1, "", "contains"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 4, 1, "", "device"], [68, 1, 1, "", "encode"], [68, 1, 1, "", "expand"], [68, 1, 1, "", "flatten"], [68, 1, 1, "", "implements_for_spec"], [68, 1, 1, "", "index"], [68, 1, 1, "", "is_in"], [68, 1, 1, "", "make_neg_dim"], [68, 4, 1, "", "ndim"], [68, 1, 1, "", "ndimension"], [68, 1, 1, "", "one"], [68, 1, 1, "", "ones"], [68, 1, 1, "", "project"], [68, 1, 1, "", "rand"], [68, 1, 1, "", "reshape"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "squeeze"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_numpy"], [68, 1, 1, "", "type_check"], [68, 1, 1, "", "unflatten"], [68, 1, 1, "", "unsqueeze"], [68, 1, 1, "", "view"], [68, 1, 1, "", "zero"], [68, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[73, 0, 1, "", "AtariDQNExperienceReplay"], [74, 0, 1, "", "BaseDatasetExperienceReplay"], [75, 0, 1, "", "D4RLExperienceReplay"], [76, 0, 1, "", "GenDGRLExperienceReplay"], [77, 0, 1, "", "MinariExperienceReplay"], [78, 0, 1, "", "OpenMLExperienceReplay"], [79, 0, 1, "", "OpenXExperienceReplay"], [80, 0, 1, "", "RobosetExperienceReplay"], [81, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[73, 1, 1, "", "add"], [73, 1, 1, "", "append_transform"], [73, 4, 1, "", "data_path"], [73, 4, 1, "", "data_path_root"], [73, 1, 1, "", "delete"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "empty"], [73, 1, 1, "", "extend"], [73, 1, 1, "", "insert_transform"], [73, 1, 1, "", "load"], [73, 1, 1, "", "loads"], [73, 1, 1, "", "preprocess"], [73, 1, 1, "", "register_load_hook"], [73, 1, 1, "", "register_save_hook"], [73, 1, 1, "", "sample"], [73, 4, 1, "", "sampler"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set_sampler"], [73, 1, 1, "", "set_storage"], [73, 1, 1, "", "set_writer"], [73, 4, 1, "", "storage"], [73, 4, 1, "", "write_count"], [73, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[74, 1, 1, "", "add"], [74, 1, 1, "", "append_transform"], [74, 4, 1, "", "data_path"], [74, 4, 1, "", "data_path_root"], [74, 1, 1, "", "delete"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "dumps"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "extend"], [74, 1, 1, "", "insert_transform"], [74, 1, 1, "", "load"], [74, 1, 1, "", "loads"], [74, 1, 1, "", "preprocess"], [74, 1, 1, "", "register_load_hook"], [74, 1, 1, "", "register_save_hook"], [74, 1, 1, "", "sample"], [74, 4, 1, "", "sampler"], [74, 1, 1, "", "save"], [74, 1, 1, "", "set_sampler"], [74, 1, 1, "", "set_storage"], [74, 1, 1, "", "set_writer"], [74, 4, 1, "", "storage"], [74, 4, 1, "", "write_count"], [74, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[75, 1, 1, "", "add"], [75, 1, 1, "", "append_transform"], [75, 4, 1, "", "data_path"], [75, 4, 1, "", "data_path_root"], [75, 1, 1, "", "delete"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "dumps"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "extend"], [75, 1, 1, "", "insert_transform"], [75, 1, 1, "", "load"], [75, 1, 1, "", "loads"], [75, 1, 1, "", "preprocess"], [75, 1, 1, "", "register_load_hook"], [75, 1, 1, "", "register_save_hook"], [75, 1, 1, "", "sample"], [75, 4, 1, "", "sampler"], [75, 1, 1, "", "save"], [75, 1, 1, "", "set_sampler"], [75, 1, 1, "", "set_storage"], [75, 1, 1, "", "set_writer"], [75, 4, 1, "", "storage"], [75, 4, 1, "", "write_count"], [75, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[76, 1, 1, "", "add"], [76, 1, 1, "", "append_transform"], [76, 4, 1, "", "data_path"], [76, 4, 1, "", "data_path_root"], [76, 1, 1, "", "delete"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "dumps"], [76, 1, 1, "", "empty"], [76, 1, 1, "", "extend"], [76, 1, 1, "", "insert_transform"], [76, 1, 1, "", "load"], [76, 1, 1, "", "loads"], [76, 1, 1, "", "preprocess"], [76, 1, 1, "", "register_load_hook"], [76, 1, 1, "", "register_save_hook"], [76, 1, 1, "", "sample"], [76, 4, 1, "", "sampler"], [76, 1, 1, "", "save"], [76, 1, 1, "", "set_sampler"], [76, 1, 1, "", "set_storage"], [76, 1, 1, "", "set_writer"], [76, 4, 1, "", "storage"], [76, 4, 1, "", "write_count"], [76, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[77, 1, 1, "", "add"], [77, 1, 1, "", "append_transform"], [77, 4, 1, "", "data_path"], [77, 4, 1, "", "data_path_root"], [77, 1, 1, "", "delete"], [77, 1, 1, "", "dump"], [77, 1, 1, "", "dumps"], [77, 1, 1, "", "empty"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "insert_transform"], [77, 1, 1, "", "load"], [77, 1, 1, "", "loads"], [77, 1, 1, "", "preprocess"], [77, 1, 1, "", "register_load_hook"], [77, 1, 1, "", "register_save_hook"], [77, 1, 1, "", "sample"], [77, 4, 1, "", "sampler"], [77, 1, 1, "", "save"], [77, 1, 1, "", "set_sampler"], [77, 1, 1, "", "set_storage"], [77, 1, 1, "", "set_writer"], [77, 4, 1, "", "storage"], [77, 4, 1, "", "write_count"], [77, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 4, 1, "", "data_path"], [78, 4, 1, "", "data_path_root"], [78, 1, 1, "", "delete"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "preprocess"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 4, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 4, 1, "", "storage"], [78, 4, 1, "", "write_count"], [78, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 4, 1, "", "data_path"], [79, 4, 1, "", "data_path_root"], [79, 1, 1, "", "delete"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "preprocess"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 4, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 4, 1, "", "storage"], [79, 4, 1, "", "write_count"], [79, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 4, 1, "", "data_path"], [80, 4, 1, "", "data_path_root"], [80, 1, 1, "", "delete"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "preprocess"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 4, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 4, 1, "", "storage"], [80, 4, 1, "", "write_count"], [80, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 4, 1, "", "data_path"], [81, 4, 1, "", "data_path_root"], [81, 1, 1, "", "delete"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "preprocess"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 4, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 4, 1, "", "storage"], [81, 4, 1, "", "write_count"], [81, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[83, 0, 1, "", "FlatStorageCheckpointer"], [84, 0, 1, "", "H5StorageCheckpointer"], [85, 0, 1, "", "ImmutableDatasetWriter"], [86, 0, 1, "", "LazyMemmapStorage"], [87, 0, 1, "", "LazyTensorStorage"], [88, 0, 1, "", "ListStorage"], [89, 0, 1, "", "ListStorageCheckpointer"], [90, 0, 1, "", "NestedStorageCheckpointer"], [91, 0, 1, "", "PrioritizedSampler"], [92, 0, 1, "", "PrioritizedSliceSampler"], [93, 0, 1, "", "RandomSampler"], [94, 0, 1, "", "ReplayBufferEnsemble"], [95, 0, 1, "", "RoundRobinWriter"], [96, 0, 1, "", "Sampler"], [97, 0, 1, "", "SamplerEnsemble"], [98, 0, 1, "", "SamplerWithoutReplacement"], [99, 0, 1, "", "SliceSampler"], [100, 0, 1, "", "SliceSamplerWithoutReplacement"], [101, 0, 1, "", "Storage"], [102, 0, 1, "", "StorageCheckpointerBase"], [103, 0, 1, "", "StorageEnsemble"], [104, 0, 1, "", "StorageEnsembleCheckpointer"], [105, 0, 1, "", "TensorDictMaxValueWriter"], [106, 0, 1, "", "TensorDictRoundRobinWriter"], [107, 0, 1, "", "TensorStorage"], [108, 0, 1, "", "TensorStorageCheckpointer"], [109, 0, 1, "", "Writer"], [110, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[85, 1, 1, "", "add"], [85, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[86, 1, 1, "", "attach"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "load"], [86, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[87, 1, 1, "", "attach"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "load"], [87, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[88, 1, 1, "", "attach"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "load"], [88, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[91, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[92, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[94, 1, 1, "", "add"], [94, 1, 1, "", "append_transform"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "dumps"], [94, 1, 1, "", "empty"], [94, 1, 1, "", "extend"], [94, 1, 1, "", "insert_transform"], [94, 1, 1, "", "load"], [94, 1, 1, "", "loads"], [94, 1, 1, "", "register_load_hook"], [94, 1, 1, "", "register_save_hook"], [94, 1, 1, "", "sample"], [94, 4, 1, "", "sampler"], [94, 1, 1, "", "save"], [94, 1, 1, "", "set_sampler"], [94, 1, 1, "", "set_storage"], [94, 1, 1, "", "set_writer"], [94, 4, 1, "", "storage"], [94, 4, 1, "", "write_count"], [94, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[95, 1, 1, "", "add"], [95, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[105, 1, 1, "", "add"], [105, 1, 1, "", "extend"], [105, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[106, 1, 1, "", "add"], [106, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[107, 1, 1, "", "attach"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "load"], [107, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[109, 1, 1, "", "add"], [109, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[110, 1, 1, "", "add"], [110, 1, 1, "", "extend"]], "torchrl.envs": [[111, 2, 1, "", "BraxEnv"], [112, 2, 1, "", "BraxWrapper"], [113, 2, 1, "", "DMControlEnv"], [114, 2, 1, "", "DMControlWrapper"], [115, 0, 1, "", "EnvBase"], [116, 0, 1, "", "EnvCreator"], [117, 0, 1, "", "EnvMetaData"], [118, 2, 1, "", "GymEnv"], [119, 0, 1, "", "GymLikeEnv"], [120, 2, 1, "", "GymWrapper"], [121, 2, 1, "", "HabitatEnv"], [122, 2, 1, "", "IsaacGymEnv"], [123, 2, 1, "", "IsaacGymWrapper"], [124, 2, 1, "", "JumanjiEnv"], [125, 2, 1, "", "JumanjiWrapper"], [126, 2, 1, "", "MOGymEnv"], [127, 2, 1, "", "MOGymWrapper"], [128, 2, 1, "", "MarlGroupMapType"], [129, 2, 1, "", "MeltingpotEnv"], [130, 2, 1, "", "MeltingpotWrapper"], [131, 2, 1, "", "ModelBasedEnvBase"], [132, 2, 1, "", "MultiThreadedEnv"], [133, 2, 1, "", "MultiThreadedEnvWrapper"], [134, 2, 1, "", "OpenMLEnv"], [135, 2, 1, "", "OpenSpielEnv"], [136, 2, 1, "", "OpenSpielWrapper"], [137, 0, 1, "", "ParallelEnv"], [138, 0, 1, "", "PendulumEnv"], [139, 2, 1, "", "PettingZooEnv"], [140, 2, 1, "", "PettingZooWrapper"], [141, 2, 1, "", "RoboHiveEnv"], [142, 2, 1, "", "SMACv2Env"], [143, 2, 1, "", "SMACv2Wrapper"], [144, 0, 1, "", "SerialEnv"], [145, 0, 1, "", "TicTacToeEnv"], [146, 2, 1, "", "VmasEnv"], [147, 2, 1, "", "VmasWrapper"], [148, 2, 1, "", "check_marl_grouping"], [149, 2, 1, "", "gym_backend"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "rollout"], [152, 2, 1, "", "set_gym_backend"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[115, 4, 1, "", "action_key"], [115, 4, 1, "", "action_keys"], [115, 4, 1, "", "action_spec"], [115, 1, 1, "", "add_module"], [115, 1, 1, "", "add_truncated_keys"], [115, 1, 1, "", "append_transform"], [115, 1, 1, "", "apply"], [115, 4, 1, "", "batch_locked"], [115, 4, 1, "", "batch_size"], [115, 1, 1, "", "bfloat16"], [115, 1, 1, "", "buffers"], [115, 1, 1, "", "children"], [115, 1, 1, "", "compile"], [115, 1, 1, "", "cpu"], [115, 1, 1, "", "cuda"], [115, 4, 1, "", "done_key"], [115, 4, 1, "", "done_keys"], [115, 4, 1, "", "done_keys_groups"], [115, 4, 1, "", "done_spec"], [115, 1, 1, "", "double"], [115, 1, 1, "", "empty_cache"], [115, 1, 1, "", "eval"], [115, 1, 1, "", "extra_repr"], [115, 1, 1, "", "fake_tensordict"], [115, 1, 1, "", "float"], [115, 1, 1, "", "forward"], [115, 4, 1, "", "full_action_spec"], [115, 4, 1, "", "full_done_spec"], [115, 4, 1, "", "full_reward_spec"], [115, 4, 1, "", "full_state_spec"], [115, 1, 1, "", "get_buffer"], [115, 1, 1, "", "get_extra_state"], [115, 1, 1, "", "get_parameter"], [115, 1, 1, "", "get_submodule"], [115, 1, 1, "", "half"], [115, 4, 1, "", "input_spec"], [115, 1, 1, "", "ipu"], [115, 1, 1, "", "load_state_dict"], [115, 1, 1, "", "maybe_reset"], [115, 1, 1, "", "modules"], [115, 1, 1, "", "mtia"], [115, 1, 1, "", "named_buffers"], [115, 1, 1, "", "named_children"], [115, 1, 1, "", "named_modules"], [115, 1, 1, "", "named_parameters"], [115, 4, 1, "", "observation_spec"], [115, 4, 1, "", "output_spec"], [115, 1, 1, "", "parameters"], [115, 1, 1, "", "rand_action"], [115, 1, 1, "id0", "rand_step"], [115, 1, 1, "", "register_backward_hook"], [115, 1, 1, "", "register_buffer"], [115, 1, 1, "", "register_forward_hook"], [115, 1, 1, "", "register_forward_pre_hook"], [115, 1, 1, "", "register_full_backward_hook"], [115, 1, 1, "", "register_full_backward_pre_hook"], [115, 1, 1, "", "register_gym"], [115, 1, 1, "", "register_load_state_dict_post_hook"], [115, 1, 1, "", "register_load_state_dict_pre_hook"], [115, 1, 1, "", "register_module"], [115, 1, 1, "", "register_parameter"], [115, 1, 1, "", "register_state_dict_post_hook"], [115, 1, 1, "", "register_state_dict_pre_hook"], [115, 1, 1, "", "requires_grad_"], [115, 1, 1, "id1", "reset"], [115, 4, 1, "", "reset_keys"], [115, 4, 1, "", "reward_key"], [115, 4, 1, "", "reward_keys"], [115, 4, 1, "", "reward_spec"], [115, 1, 1, "id2", "rollout"], [115, 1, 1, "", "set_extra_state"], [115, 1, 1, "id3", "set_seed"], [115, 1, 1, "", "set_submodule"], [115, 4, 1, "", "shape"], [115, 1, 1, "", "share_memory"], [115, 4, 1, "", "specs"], [115, 1, 1, "", "state_dict"], [115, 4, 1, "", "state_keys"], [115, 4, 1, "", "state_spec"], [115, 1, 1, "id4", "step"], [115, 1, 1, "", "step_and_maybe_reset"], [115, 1, 1, "", "to"], [115, 1, 1, "", "to_empty"], [115, 1, 1, "", "train"], [115, 1, 1, "", "type"], [115, 1, 1, "", "xpu"], [115, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[119, 4, 1, "", "action_key"], [119, 4, 1, "", "action_keys"], [119, 4, 1, "", "action_spec"], [119, 1, 1, "", "add_module"], [119, 1, 1, "", "add_truncated_keys"], [119, 1, 1, "", "append_transform"], [119, 1, 1, "", "apply"], [119, 1, 1, "", "auto_register_info_dict"], [119, 4, 1, "", "batch_locked"], [119, 4, 1, "", "batch_size"], [119, 1, 1, "", "bfloat16"], [119, 1, 1, "", "buffers"], [119, 1, 1, "", "children"], [119, 1, 1, "", "close"], [119, 1, 1, "", "compile"], [119, 1, 1, "", "cpu"], [119, 1, 1, "", "cuda"], [119, 4, 1, "", "done_key"], [119, 4, 1, "", "done_keys"], [119, 4, 1, "", "done_keys_groups"], [119, 4, 1, "", "done_spec"], [119, 1, 1, "", "double"], [119, 1, 1, "", "empty_cache"], [119, 1, 1, "", "eval"], [119, 1, 1, "", "extra_repr"], [119, 1, 1, "", "fake_tensordict"], [119, 1, 1, "", "float"], [119, 1, 1, "", "forward"], [119, 4, 1, "", "full_action_spec"], [119, 4, 1, "", "full_done_spec"], [119, 4, 1, "", "full_reward_spec"], [119, 4, 1, "", "full_state_spec"], [119, 1, 1, "", "get_buffer"], [119, 1, 1, "", "get_extra_state"], [119, 1, 1, "", "get_parameter"], [119, 1, 1, "", "get_submodule"], [119, 1, 1, "", "half"], [119, 4, 1, "", "input_spec"], [119, 1, 1, "", "ipu"], [119, 1, 1, "", "load_state_dict"], [119, 1, 1, "", "maybe_reset"], [119, 1, 1, "", "modules"], [119, 1, 1, "", "mtia"], [119, 1, 1, "", "named_buffers"], [119, 1, 1, "", "named_children"], [119, 1, 1, "", "named_modules"], [119, 1, 1, "", "named_parameters"], [119, 4, 1, "", "observation_spec"], [119, 4, 1, "", "output_spec"], [119, 1, 1, "", "parameters"], [119, 1, 1, "", "rand_action"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "read_action"], [119, 1, 1, "", "read_done"], [119, 1, 1, "", "read_obs"], [119, 1, 1, "", "read_reward"], [119, 1, 1, "", "register_backward_hook"], [119, 1, 1, "", "register_buffer"], [119, 1, 1, "", "register_forward_hook"], [119, 1, 1, "", "register_forward_pre_hook"], [119, 1, 1, "", "register_full_backward_hook"], [119, 1, 1, "", "register_full_backward_pre_hook"], [119, 1, 1, "", "register_gym"], [119, 1, 1, "", "register_load_state_dict_post_hook"], [119, 1, 1, "", "register_load_state_dict_pre_hook"], [119, 1, 1, "", "register_module"], [119, 1, 1, "", "register_parameter"], [119, 1, 1, "", "register_state_dict_post_hook"], [119, 1, 1, "", "register_state_dict_pre_hook"], [119, 1, 1, "", "requires_grad_"], [119, 1, 1, "", "reset"], [119, 4, 1, "", "reset_keys"], [119, 4, 1, "", "reward_key"], [119, 4, 1, "", "reward_keys"], [119, 4, 1, "", "reward_spec"], [119, 1, 1, "", "rollout"], [119, 1, 1, "", "set_extra_state"], [119, 1, 1, "", "set_info_dict_reader"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "set_submodule"], [119, 4, 1, "", "shape"], [119, 1, 1, "", "share_memory"], [119, 4, 1, "", "specs"], [119, 1, 1, "", "state_dict"], [119, 4, 1, "", "state_keys"], [119, 4, 1, "", "state_spec"], [119, 1, 1, "", "step"], [119, 1, 1, "", "step_and_maybe_reset"], [119, 1, 1, "", "to"], [119, 1, 1, "", "to_empty"], [119, 1, 1, "", "train"], [119, 1, 1, "", "type"], [119, 1, 1, "", "xpu"], [119, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[137, 4, 1, "", "action_key"], [137, 4, 1, "", "action_keys"], [137, 4, 1, "", "action_spec"], [137, 1, 1, "", "add_module"], [137, 1, 1, "", "add_truncated_keys"], [137, 1, 1, "", "append_transform"], [137, 1, 1, "", "apply"], [137, 4, 1, "", "batch_locked"], [137, 4, 1, "", "batch_size"], [137, 1, 1, "", "bfloat16"], [137, 1, 1, "", "buffers"], [137, 1, 1, "", "children"], [137, 1, 1, "", "compile"], [137, 1, 1, "", "cpu"], [137, 1, 1, "", "cuda"], [137, 4, 1, "", "done_key"], [137, 4, 1, "", "done_keys"], [137, 4, 1, "", "done_keys_groups"], [137, 4, 1, "", "done_spec"], [137, 1, 1, "", "double"], [137, 1, 1, "", "empty_cache"], [137, 1, 1, "", "eval"], [137, 1, 1, "", "extra_repr"], [137, 1, 1, "", "fake_tensordict"], [137, 1, 1, "", "float"], [137, 1, 1, "", "forward"], [137, 4, 1, "", "full_action_spec"], [137, 4, 1, "", "full_done_spec"], [137, 4, 1, "", "full_reward_spec"], [137, 4, 1, "", "full_state_spec"], [137, 1, 1, "", "get_buffer"], [137, 1, 1, "", "get_extra_state"], [137, 1, 1, "", "get_parameter"], [137, 1, 1, "", "get_submodule"], [137, 1, 1, "", "half"], [137, 4, 1, "", "input_spec"], [137, 1, 1, "", "ipu"], [137, 1, 1, "", "load_state_dict"], [137, 1, 1, "", "maybe_reset"], [137, 1, 1, "", "modules"], [137, 1, 1, "", "mtia"], [137, 1, 1, "", "named_buffers"], [137, 1, 1, "", "named_children"], [137, 1, 1, "", "named_modules"], [137, 1, 1, "", "named_parameters"], [137, 4, 1, "", "observation_spec"], [137, 4, 1, "", "output_spec"], [137, 1, 1, "", "parameters"], [137, 1, 1, "", "rand_action"], [137, 1, 1, "", "rand_step"], [137, 1, 1, "", "register_backward_hook"], [137, 1, 1, "", "register_buffer"], [137, 1, 1, "", "register_forward_hook"], [137, 1, 1, "", "register_forward_pre_hook"], [137, 1, 1, "", "register_full_backward_hook"], [137, 1, 1, "", "register_full_backward_pre_hook"], [137, 1, 1, "", "register_gym"], [137, 1, 1, "", "register_load_state_dict_post_hook"], [137, 1, 1, "", "register_load_state_dict_pre_hook"], [137, 1, 1, "", "register_module"], [137, 1, 1, "", "register_parameter"], [137, 1, 1, "", "register_state_dict_post_hook"], [137, 1, 1, "", "register_state_dict_pre_hook"], [137, 1, 1, "", "requires_grad_"], [137, 1, 1, "", "reset"], [137, 4, 1, "", "reset_keys"], [137, 4, 1, "", "reward_key"], [137, 4, 1, "", "reward_keys"], [137, 4, 1, "", "reward_spec"], [137, 1, 1, "", "rollout"], [137, 1, 1, "", "set_extra_state"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "set_submodule"], [137, 4, 1, "", "shape"], [137, 1, 1, "", "share_memory"], [137, 4, 1, "", "specs"], [137, 1, 1, "", "state_dict"], [137, 4, 1, "", "state_keys"], [137, 4, 1, "", "state_spec"], [137, 1, 1, "", "step"], [137, 1, 1, "", "step_and_maybe_reset"], [137, 1, 1, "", "to"], [137, 1, 1, "", "to_empty"], [137, 1, 1, "", "train"], [137, 1, 1, "", "type"], [137, 1, 1, "", "update_kwargs"], [137, 1, 1, "", "xpu"], [137, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[138, 4, 1, "", "action_key"], [138, 4, 1, "", "action_keys"], [138, 4, 1, "", "action_spec"], [138, 1, 1, "", "add_module"], [138, 1, 1, "", "add_truncated_keys"], [138, 1, 1, "", "append_transform"], [138, 1, 1, "", "apply"], [138, 4, 1, "", "batch_size"], [138, 1, 1, "", "bfloat16"], [138, 1, 1, "", "buffers"], [138, 1, 1, "", "children"], [138, 1, 1, "", "compile"], [138, 1, 1, "", "cpu"], [138, 1, 1, "", "cuda"], [138, 4, 1, "", "done_key"], [138, 4, 1, "", "done_keys"], [138, 4, 1, "", "done_keys_groups"], [138, 4, 1, "", "done_spec"], [138, 1, 1, "", "double"], [138, 1, 1, "", "empty_cache"], [138, 1, 1, "", "eval"], [138, 1, 1, "", "extra_repr"], [138, 1, 1, "", "fake_tensordict"], [138, 1, 1, "", "float"], [138, 1, 1, "", "forward"], [138, 4, 1, "", "full_action_spec"], [138, 4, 1, "", "full_done_spec"], [138, 4, 1, "", "full_reward_spec"], [138, 4, 1, "", "full_state_spec"], [138, 1, 1, "", "gen_params"], [138, 1, 1, "", "get_buffer"], [138, 1, 1, "", "get_extra_state"], [138, 1, 1, "", "get_parameter"], [138, 1, 1, "", "get_submodule"], [138, 1, 1, "", "half"], [138, 4, 1, "", "input_spec"], [138, 1, 1, "", "ipu"], [138, 1, 1, "", "load_state_dict"], [138, 1, 1, "", "maybe_reset"], [138, 1, 1, "", "modules"], [138, 1, 1, "", "mtia"], [138, 1, 1, "", "named_buffers"], [138, 1, 1, "", "named_children"], [138, 1, 1, "", "named_modules"], [138, 1, 1, "", "named_parameters"], [138, 4, 1, "", "observation_spec"], [138, 4, 1, "", "output_spec"], [138, 1, 1, "", "parameters"], [138, 1, 1, "", "rand_action"], [138, 1, 1, "", "rand_step"], [138, 1, 1, "", "register_backward_hook"], [138, 1, 1, "", "register_buffer"], [138, 1, 1, "", "register_forward_hook"], [138, 1, 1, "", "register_forward_pre_hook"], [138, 1, 1, "", "register_full_backward_hook"], [138, 1, 1, "", "register_full_backward_pre_hook"], [138, 1, 1, "", "register_gym"], [138, 1, 1, "", "register_load_state_dict_post_hook"], [138, 1, 1, "", "register_load_state_dict_pre_hook"], [138, 1, 1, "", "register_module"], [138, 1, 1, "", "register_parameter"], [138, 1, 1, "", "register_state_dict_post_hook"], [138, 1, 1, "", "register_state_dict_pre_hook"], [138, 1, 1, "", "requires_grad_"], [138, 1, 1, "", "reset"], [138, 4, 1, "", "reset_keys"], [138, 4, 1, "", "reward_key"], [138, 4, 1, "", "reward_keys"], [138, 4, 1, "", "reward_spec"], [138, 1, 1, "", "rollout"], [138, 1, 1, "", "set_extra_state"], [138, 1, 1, "", "set_seed"], [138, 1, 1, "", "set_submodule"], [138, 4, 1, "", "shape"], [138, 1, 1, "", "share_memory"], [138, 4, 1, "", "specs"], [138, 1, 1, "", "state_dict"], [138, 4, 1, "", "state_keys"], [138, 4, 1, "", "state_spec"], [138, 1, 1, "", "step"], [138, 1, 1, "", "step_and_maybe_reset"], [138, 1, 1, "", "to"], [138, 1, 1, "", "to_empty"], [138, 1, 1, "", "train"], [138, 1, 1, "", "type"], [138, 1, 1, "", "xpu"], [138, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[144, 4, 1, "", "action_key"], [144, 4, 1, "", "action_keys"], [144, 4, 1, "", "action_spec"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 4, 1, "", "batch_locked"], [144, 4, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "children"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 4, 1, "", "done_key"], [144, 4, 1, "", "done_keys"], [144, 4, 1, "", "done_keys_groups"], [144, 4, 1, "", "done_spec"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 4, 1, "", "full_action_spec"], [144, 4, 1, "", "full_done_spec"], [144, 4, 1, "", "full_reward_spec"], [144, 4, 1, "", "full_state_spec"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 4, 1, "", "input_spec"], [144, 1, 1, "", "ipu"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 4, 1, "", "observation_spec"], [144, 4, 1, "", "output_spec"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 4, 1, "", "reset_keys"], [144, 4, 1, "", "reward_key"], [144, 4, 1, "", "reward_keys"], [144, 4, 1, "", "reward_spec"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_submodule"], [144, 4, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 4, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 4, 1, "", "state_keys"], [144, 4, 1, "", "state_spec"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "update_kwargs"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[145, 4, 1, "", "action_key"], [145, 4, 1, "", "action_keys"], [145, 4, 1, "", "action_spec"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 4, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 4, 1, "", "done_key"], [145, 4, 1, "", "done_keys"], [145, 4, 1, "", "done_keys_groups"], [145, 4, 1, "", "done_spec"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 4, 1, "", "full_action_spec"], [145, 4, 1, "", "full_done_spec"], [145, 4, 1, "", "full_reward_spec"], [145, 4, 1, "", "full_state_spec"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 4, 1, "", "input_spec"], [145, 1, 1, "", "ipu"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 4, 1, "", "observation_spec"], [145, 4, 1, "", "output_spec"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 4, 1, "", "reset_keys"], [145, 4, 1, "", "reward_key"], [145, 4, 1, "", "reward_keys"], [145, 4, 1, "", "reward_spec"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_submodule"], [145, 4, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 4, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 4, 1, "", "state_keys"], [145, 4, 1, "", "state_spec"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[150, 2, 1, "", "DreamerDecoder"], [151, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[153, 0, 1, "", "ActionDiscretizer"], [154, 0, 1, "", "ActionMask"], [155, 0, 1, "", "AutoResetEnv"], [156, 0, 1, "", "AutoResetTransform"], [157, 0, 1, "", "BatchSizeTransform"], [158, 0, 1, "", "BinarizeReward"], [159, 0, 1, "", "BurnInTransform"], [160, 0, 1, "", "CatFrames"], [161, 0, 1, "", "CatTensors"], [162, 0, 1, "", "CenterCrop"], [163, 0, 1, "", "ClipTransform"], [164, 0, 1, "", "Compose"], [165, 0, 1, "", "Crop"], [166, 0, 1, "", "DTypeCastTransform"], [167, 0, 1, "", "DeviceCastTransform"], [168, 0, 1, "", "DiscreteActionProjection"], [169, 0, 1, "", "DoubleToFloat"], [170, 0, 1, "", "EndOfLifeTransform"], [171, 0, 1, "", "ExcludeTransform"], [172, 0, 1, "", "FiniteTensorDictCheck"], [173, 0, 1, "", "FlattenObservation"], [174, 0, 1, "", "FrameSkipTransform"], [175, 0, 1, "", "GrayScale"], [176, 0, 1, "", "InitTracker"], [177, 0, 1, "", "KLRewardTransform"], [178, 0, 1, "", "NoopResetEnv"], [179, 0, 1, "", "ObservationNorm"], [180, 0, 1, "", "ObservationTransform"], [181, 0, 1, "", "PermuteTransform"], [182, 0, 1, "", "PinMemoryTransform"], [183, 0, 1, "", "R3MTransform"], [184, 0, 1, "", "RandomCropTensorDict"], [185, 0, 1, "", "RemoveEmptySpecs"], [186, 0, 1, "", "RenameTransform"], [187, 0, 1, "", "Resize"], [188, 0, 1, "", "Reward2GoTransform"], [189, 0, 1, "", "RewardClipping"], [190, 0, 1, "", "RewardScaling"], [191, 0, 1, "", "RewardSum"], [192, 0, 1, "", "SelectTransform"], [193, 0, 1, "", "SignTransform"], [194, 0, 1, "", "SqueezeTransform"], [195, 0, 1, "", "StepCounter"], [196, 0, 1, "", "TargetReturn"], [197, 0, 1, "", "TensorDictPrimer"], [198, 0, 1, "", "TimeMaxPool"], [199, 0, 1, "", "ToTensorImage"], [200, 0, 1, "", "Transform"], [201, 0, 1, "", "TransformedEnv"], [202, 0, 1, "", "UnsqueezeTransform"], [203, 0, 1, "", "VC1Transform"], [204, 0, 1, "", "VIPRewardTransform"], [205, 0, 1, "", "VIPTransform"], [206, 0, 1, "", "VecGymEnvTransform"], [207, 0, 1, "", "VecNorm"], [208, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[153, 0, 1, "", "SamplingStrategy"], [153, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[154, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[155, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[156, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_env_batch_size"], [157, 1, 1, "", "transform_input_spec"], [157, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[158, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[159, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[163, 1, 1, "", "transform_observation_spec"], [163, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[164, 1, 1, "", "append"], [164, 1, 1, "", "forward"], [164, 1, 1, "", "insert"], [164, 1, 1, "", "to"], [164, 1, 1, "", "transform_env_batch_size"], [164, 1, 1, "", "transform_env_device"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"], [164, 1, 1, "", "transform_output_spec"], [164, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_observation_spec"], [166, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "transform_done_spec"], [167, 1, 1, "", "transform_env_device"], [167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_observation_spec"], [167, 1, 1, "", "transform_output_spec"], [167, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[168, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "register_keys"], [170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[172, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[174, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[175, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[179, 1, 1, "", "init_stats"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[182, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[183, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[184, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_input_spec"], [185, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[188, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[189, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[190, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "to"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[200, 4, 1, "", "container"], [200, 1, 1, "", "forward"], [200, 4, 1, "", "parent"], [200, 1, 1, "", "to"], [200, 1, 1, "", "transform_done_spec"], [200, 1, 1, "", "transform_env_batch_size"], [200, 1, 1, "", "transform_env_device"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_output_spec"], [200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[201, 1, 1, "", "add_truncated_keys"], [201, 1, 1, "", "append_transform"], [201, 4, 1, "", "batch_locked"], [201, 4, 1, "", "batch_size"], [201, 1, 1, "", "empty_cache"], [201, 1, 1, "", "eval"], [201, 4, 1, "", "input_spec"], [201, 1, 1, "", "insert_transform"], [201, 1, 1, "", "load_state_dict"], [201, 4, 1, "", "output_spec"], [201, 1, 1, "", "set_missing_tolerance"], [201, 1, 1, "", "set_seed"], [201, 1, 1, "", "state_dict"], [201, 1, 1, "", "to"], [201, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[202, 1, 1, "", "transform_input_spec"], [202, 1, 1, "", "transform_observation_spec"], [202, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "make_noload_model"], [203, 1, 1, "", "to"], [203, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[205, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[207, 1, 1, "", "build_td_for_shared_vecnorm"], [207, 1, 1, "", "forward"], [207, 1, 1, "", "freeze"], [207, 1, 1, "", "frozen_copy"], [207, 1, 1, "", "get_extra_state"], [207, 4, 1, "", "loc"], [207, 4, 1, "", "scale"], [207, 1, 1, "", "set_extra_state"], [207, 4, 1, "", "standard_normal"], [207, 1, 1, "", "to_observation_norm"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[209, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[209, 1, 1, "", "add_module"], [209, 1, 1, "", "apply"], [209, 1, 1, "", "bfloat16"], [209, 1, 1, "", "buffers"], [209, 1, 1, "", "children"], [209, 1, 1, "", "compile"], [209, 4, 1, "", "container"], [209, 1, 1, "", "cpu"], [209, 1, 1, "", "cuda"], [209, 1, 1, "", "double"], [209, 1, 1, "", "eval"], [209, 1, 1, "", "extra_repr"], [209, 1, 1, "", "float"], [209, 1, 1, "", "forward"], [209, 1, 1, "", "get_buffer"], [209, 1, 1, "", "get_extra_state"], [209, 1, 1, "", "get_parameter"], [209, 1, 1, "", "get_submodule"], [209, 1, 1, "", "half"], [209, 1, 1, "", "ipu"], [209, 1, 1, "", "load_state_dict"], [209, 1, 1, "", "modules"], [209, 1, 1, "", "mtia"], [209, 4, 1, "", "n_steps"], [209, 1, 1, "", "named_buffers"], [209, 1, 1, "", "named_children"], [209, 1, 1, "", "named_modules"], [209, 1, 1, "", "named_parameters"], [209, 1, 1, "", "parameters"], [209, 4, 1, "", "parent"], [209, 1, 1, "", "register_backward_hook"], [209, 1, 1, "", "register_buffer"], [209, 1, 1, "", "register_forward_hook"], [209, 1, 1, "", "register_forward_pre_hook"], [209, 1, 1, "", "register_full_backward_hook"], [209, 1, 1, "", "register_full_backward_pre_hook"], [209, 1, 1, "", "register_load_state_dict_post_hook"], [209, 1, 1, "", "register_load_state_dict_pre_hook"], [209, 1, 1, "", "register_module"], [209, 1, 1, "", "register_parameter"], [209, 1, 1, "", "register_state_dict_post_hook"], [209, 1, 1, "", "register_state_dict_pre_hook"], [209, 1, 1, "", "requires_grad_"], [209, 1, 1, "", "set_extra_state"], [209, 1, 1, "", "set_submodule"], [209, 1, 1, "", "share_memory"], [209, 1, 1, "", "state_dict"], [209, 1, 1, "", "to"], [209, 1, 1, "", "to_empty"], [209, 1, 1, "", "train"], [209, 1, 1, "", "transform_done_spec"], [209, 1, 1, "", "transform_env_batch_size"], [209, 1, 1, "", "transform_env_device"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"], [209, 1, 1, "", "transform_reward_spec"], [209, 1, 1, "", "type"], [209, 1, 1, "", "xpu"], [209, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[210, 2, 1, "", "RandomPolicy"], [211, 2, 1, "", "check_env_specs"], [212, 2, 1, "", "exploration_mode"], [213, 2, 1, "", "exploration_type"], [214, 2, 1, "", "get_available_libraries"], [215, 2, 1, "", "make_composite_from_td"], [216, 2, 1, "", "set_exploration_mode"], [217, 2, 1, "", "set_exploration_type"], [218, 2, 1, "", "step_mdp"], [219, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[220, 0, 1, "", "AdditiveGaussianModule"], [221, 0, 1, "", "AdditiveGaussianWrapper"], [222, 0, 1, "", "BatchRenorm1d"], [223, 0, 1, "", "CEMPlanner"], [224, 0, 1, "", "ConsistentDropoutModule"], [225, 0, 1, "", "Conv3dNet"], [226, 0, 1, "", "ConvNet"], [227, 0, 1, "", "DTActor"], [228, 0, 1, "", "DdpgCnnActor"], [229, 0, 1, "", "DdpgCnnQNet"], [230, 0, 1, "", "DdpgMlpActor"], [231, 0, 1, "", "DdpgMlpQNet"], [232, 0, 1, "", "DecisionTransformer"], [233, 0, 1, "", "Delta"], [234, 0, 1, "", "DistributionalDQNnet"], [235, 0, 1, "", "DistributionalQValueHook"], [236, 0, 1, "", "DreamerActor"], [237, 0, 1, "", "DuelingCnnDQNet"], [238, 0, 1, "", "EGreedyModule"], [239, 0, 1, "", "EGreedyWrapper"], [240, 0, 1, "", "GRU"], [241, 0, 1, "", "GRUCell"], [242, 0, 1, "", "GRUModule"], [243, 0, 1, "", "IndependentNormal"], [244, 0, 1, "", "LSTM"], [245, 0, 1, "", "LSTMCell"], [246, 0, 1, "", "LSTMModule"], [247, 0, 1, "", "MLP"], [248, 0, 1, "", "MPCPlannerBase"], [249, 0, 1, "", "MPPIPlanner"], [250, 0, 1, "", "MaskedCategorical"], [251, 0, 1, "", "MaskedOneHotCategorical"], [252, 0, 1, "", "MultiAgentConvNet"], [253, 0, 1, "", "MultiAgentMLP"], [254, 0, 1, "", "MultiAgentNetBase"], [255, 0, 1, "", "NoisyLazyLinear"], [256, 0, 1, "", "NoisyLinear"], [257, 0, 1, "", "NormalParamWrapper"], [258, 0, 1, "", "ObsDecoder"], [259, 0, 1, "", "ObsEncoder"], [260, 0, 1, "", "OneHotCategorical"], [261, 0, 1, "", "OnlineDTActor"], [262, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [263, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [264, 0, 1, "", "QMixer"], [265, 0, 1, "", "QValueHook"], [266, 0, 1, "", "RSSMPosterior"], [267, 0, 1, "", "RSSMPrior"], [268, 0, 1, "", "Squeeze2dLayer"], [269, 0, 1, "", "SqueezeLayer"], [270, 0, 1, "", "TanhDelta"], [271, 0, 1, "", "TanhNormal"], [272, 0, 1, "", "TruncatedNormal"], [273, 0, 1, "", "VDNMixer"], [274, 0, 1, "", "VmapModule"], [275, 0, 1, "", "reset_noise"]], "torchrl.modules.AdditiveGaussianModule": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[222, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[223, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropoutModule": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[225, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[226, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[227, 1, 1, "", "default_config"], [227, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[228, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[229, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[230, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[231, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[232, 0, 1, "", "DTConfig"], [232, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[233, 1, 1, "", "log_prob"], [233, 4, 1, "", "mean"], [233, 4, 1, "", "mode"], [233, 1, 1, "", "rsample"], [233, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[234, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[236, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[237, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "step"]], "torchrl.modules.GRU": [[240, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[241, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[242, 1, 1, "", "forward"], [242, 1, 1, "id0", "make_tensordict_primer"], [242, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[243, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[244, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[245, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[246, 1, 1, "", "forward"], [246, 1, 1, "id0", "make_tensordict_primer"], [246, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[247, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[249, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[250, 1, 1, "", "log_prob"], [250, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[251, 1, 1, "", "log_prob"], [251, 1, 1, "", "rsample"], [251, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "from_stateful_net"], [254, 1, 1, "", "get_stateful_net"], [254, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[255, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[257, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[258, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[259, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[260, 1, 1, "", "log_prob"], [260, 4, 1, "", "mode"], [260, 1, 1, "", "rsample"], [260, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[261, 1, 1, "", "default_config"], [261, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[264, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[266, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[267, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[269, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[270, 4, 1, "", "mean"], [270, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[271, 1, 1, "", "get_mode"], [271, 4, 1, "", "mean"], [271, 4, 1, "", "mode"], [271, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[272, 1, 1, "", "log_prob"], [272, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[273, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[274, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[276, 0, 1, "", "Actor"], [277, 0, 1, "", "ActorCriticOperator"], [278, 0, 1, "", "ActorCriticWrapper"], [279, 0, 1, "", "ActorValueOperator"], [280, 0, 1, "", "DecisionTransformerInferenceWrapper"], [281, 0, 1, "", "DistributionalQValueActor"], [282, 0, 1, "", "DistributionalQValueModule"], [283, 0, 1, "", "LMHeadActorValueOperator"], [284, 0, 1, "", "MultiStepActorWrapper"], [285, 0, 1, "", "ProbabilisticActor"], [286, 0, 1, "", "QValueActor"], [287, 0, 1, "", "QValueModule"], [288, 0, 1, "", "SafeModule"], [289, 0, 1, "", "SafeProbabilisticModule"], [290, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [291, 0, 1, "", "SafeSequential"], [292, 0, 1, "", "TanhModule"], [293, 0, 1, "", "ValueOperator"], [294, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[277, 1, 1, "", "get_critic_operator"], [277, 1, 1, "", "get_policy_head"], [277, 1, 1, "", "get_value_head"], [277, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[278, 1, 1, "", "get_policy_head"], [278, 1, 1, "", "get_policy_operator"], [278, 1, 1, "", "get_value_head"], [278, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[279, 1, 1, "", "get_policy_head"], [279, 1, 1, "", "get_policy_operator"], [279, 1, 1, "", "get_value_head"], [279, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "mask_context"], [280, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[282, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[284, 1, 1, "", "forward"], [284, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[287, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[288, 1, 1, "", "random"], [288, 1, 1, "", "random_sample"], [288, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[289, 1, 1, "", "random"], [289, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[292, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[294, 1, 1, "", "get_reward_operator"], [294, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[295, 0, 1, "", "biased_softplus"], [296, 0, 1, "", "get_primers_from_module"], [297, 0, 1, "", "inv_softplus"], [298, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[295, 1, 1, "", "forward"]], "torchrl.objectives": [[299, 0, 1, "", "A2CLoss"], [300, 0, 1, "", "CQLLoss"], [301, 0, 1, "", "ClipPPOLoss"], [302, 0, 1, "", "CrossQLoss"], [303, 0, 1, "", "DDPGLoss"], [304, 0, 1, "", "DQNLoss"], [305, 0, 1, "", "DTLoss"], [306, 0, 1, "", "DiscreteCQLLoss"], [307, 0, 1, "", "DiscreteIQLLoss"], [308, 0, 1, "", "DiscreteSACLoss"], [309, 0, 1, "", "DistributionalDQNLoss"], [310, 0, 1, "", "DreamerActorLoss"], [311, 0, 1, "", "DreamerModelLoss"], [312, 0, 1, "", "DreamerValueLoss"], [313, 0, 1, "", "GAILLoss"], [314, 0, 1, "", "HardUpdate"], [315, 0, 1, "", "IQLLoss"], [316, 0, 1, "", "KLPENPPOLoss"], [317, 0, 1, "", "LossModule"], [318, 0, 1, "", "OnlineDTLoss"], [319, 0, 1, "", "PPOLoss"], [320, 0, 1, "", "REDQLoss"], [321, 0, 1, "", "ReinforceLoss"], [322, 0, 1, "", "SACLoss"], [323, 0, 1, "", "SoftUpdate"], [324, 0, 1, "", "TD3BCLoss"], [325, 0, 1, "", "TD3Loss"], [326, 0, 1, "", "ValueEstimators"], [327, 0, 1, "", "default_value_kwargs"], [328, 0, 1, "", "distance_loss"], [329, 0, 1, "", "hold_out_net"], [330, 0, 1, "", "hold_out_params"], [332, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[299, 1, 1, "", "forward"], [299, 4, 1, "", "functional"], [299, 1, 1, "", "loss_critic"], [299, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[300, 1, 1, "", "forward"], [300, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[301, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[302, 1, 1, "", "actor_loss"], [302, 1, 1, "", "alpha_loss"], [302, 1, 1, "", "forward"], [302, 1, 1, "", "load_state_dict"], [302, 1, 1, "", "make_value_estimator"], [302, 1, 1, "", "qvalue_loss"], [302, 1, 1, "", "state_dict"], [302, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[303, 1, 1, "", "forward"], [303, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[304, 1, 1, "", "forward"], [304, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[305, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[306, 1, 1, "", "forward"], [306, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[307, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[308, 1, 1, "", "forward"], [308, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[309, 1, 1, "", "forward"], [309, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[311, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[312, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[313, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "loss_value_diff"], [315, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[316, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[317, 1, 1, "", "convert_to_functional"], [317, 1, 1, "", "forward"], [317, 1, 1, "", "from_stateful_net"], [317, 4, 1, "", "functional"], [317, 1, 1, "", "get_stateful_net"], [317, 1, 1, "", "make_value_estimator"], [317, 1, 1, "", "named_parameters"], [317, 1, 1, "", "parameters"], [317, 1, 1, "", "set_keys"], [317, 4, 1, "", "value_estimator"], [317, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[318, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[319, 1, 1, "", "forward"], [319, 4, 1, "", "functional"], [319, 1, 1, "", "loss_critic"], [319, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[320, 1, 1, "", "forward"], [320, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[321, 1, 1, "", "forward"], [321, 4, 1, "", "functional"], [321, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[322, 1, 1, "", "forward"], [322, 1, 1, "", "load_state_dict"], [322, 1, 1, "", "make_value_estimator"], [322, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[324, 1, 1, "", "actor_loss"], [324, 1, 1, "", "forward"], [324, 1, 1, "", "make_value_estimator"], [324, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[325, 1, 1, "", "forward"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[331, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[331, 1, 1, "", "forward"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[333, 0, 1, "", "GAE"], [334, 0, 1, "", "TD0Estimator"], [335, 0, 1, "", "TD1Estimator"], [336, 0, 1, "", "TDLambdaEstimator"], [337, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[333, 1, 1, "", "forward"], [333, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[334, 1, 1, "", "forward"], [334, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[335, 1, 1, "", "forward"], [335, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[336, 1, 1, "", "forward"], [336, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[337, 1, 1, "", "forward"], [337, 1, 1, "", "set_keys"], [337, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[338, 0, 1, "", "generalized_advantage_estimate"], [339, 0, 1, "", "reward2go"], [340, 0, 1, "", "td0_advantage_estimate"], [341, 0, 1, "", "td0_return_estimate"], [342, 0, 1, "", "td1_advantage_estimate"], [343, 0, 1, "", "td1_return_estimate"], [344, 0, 1, "", "td_lambda_advantage_estimate"], [345, 0, 1, "", "td_lambda_return_estimate"], [346, 0, 1, "", "vec_generalized_advantage_estimate"], [347, 0, 1, "", "vec_td1_advantage_estimate"], [348, 0, 1, "", "vec_td1_return_estimate"], [349, 0, 1, "", "vec_td_lambda_advantage_estimate"], [350, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[351, 2, 1, "", "PixelRenderTransform"], [352, 2, 1, "", "TensorDictRecorder"], [353, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[354, 2, 1, "", "Logger"], [356, 2, 1, "", "generate_exp_name"], [357, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[355, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[358, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[359, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[360, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[361, 0, 1, "", "BatchSubSampler"], [362, 0, 1, "", "ClearCudaCache"], [363, 0, 1, "", "CountFramesLog"], [364, 0, 1, "", "LogReward"], [365, 0, 1, "", "OptimizerHook"], [366, 0, 1, "", "Recorder"], [367, 0, 1, "", "ReplayBufferTrainer"], [368, 0, 1, "", "RewardNormalizer"], [369, 0, 1, "", "SelectKeys"], [370, 0, 1, "", "Trainer"], [371, 0, 1, "", "TrainerHookBase"], [372, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[361, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[362, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[363, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[364, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[365, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[366, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[367, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[368, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[369, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[371, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[372, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[373, 2, 1, "", "correct_for_frame_skip"], [374, 2, 1, "", "get_stats_random_rollout"], [375, 2, 1, "", "make_collector_offpolicy"], [376, 2, 1, "", "make_collector_onpolicy"], [377, 2, 1, "", "make_dqn_loss"], [378, 2, 1, "", "make_replay_buffer"], [379, 2, 1, "", "make_target_updater"], [380, 2, 1, "", "make_trainer"], [381, 2, 1, "", "parallel_env_constructor"], [382, 2, 1, "", "sync_async_collector"], [383, 2, 1, "", "sync_sync_collector"], [384, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 388, 389, 390, 391, 393, 394, 395, 398, 405, 406, 407, 411, 412], "instal": [0, 6, 7, 411], "get": [0, 397, 398, 399, 400, 401, 402], "start": [0, 397, 398, 399, 400, 401, 402], "tutori": [0, 395, 405, 406], "basic": [0, 409], "intermedi": [0, 8], "advanc": 0, "refer": [0, 386], "knowledg": [0, 387], "base": [0, 2, 7, 387], "indic": 0, "tabl": 0, "collector": [1, 393, 394, 395, 396, 400, 402, 405, 406, 411], "packag": [1, 2, 3, 388, 389, 390, 391], "batch": [1, 393, 407, 409], "size": [1, 393, 409], "replai": [1, 2, 393, 394, 395, 396, 400, 402, 405, 406, 409, 411], "buffer": [1, 2, 393, 394, 395, 396, 400, 402, 405, 406, 409, 411], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 393, 394, 395, 400, 402, 405, 406, 411], "distribut": [1, 388], "helper": [1, 3], "function": [1, 4, 389, 394, 395, 399, 405, 406, 411], "compos": [2, 164], "support": 2, "type": 2, "choos": 2, "storag": [2, 101, 393, 400, 409], "sampl": [2, 409], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 394, 409], "trajectori": [2, 409], "checkpoint": [2, 390], "episod": [2, 4], "format": 2, "ted": [2, 397], "The": [2, 393], "rational": 2, "behind": 2, "structur": [2, 409], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 388, 409, 411], "special": [2, 398, 411], "case": 2, "footnot": 2, "multi": [2, 3, 388, 389, 404, 405, 406], "agent": [2, 3, 4, 388, 389, 405, 406], "present": 2, "polici": [2, 4, 393, 395, 396, 398, 402, 404, 405, 406, 407], "rnn": 2, "transform": [2, 3, 200, 393, 395, 397, 405, 406, 407, 409, 411, 412], "step": [2, 393, 395, 397, 400, 405, 406, 409, 412], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 62], "numer": 2, "subclass": 2, "categor": [2, 29], "reinforc": [2, 389, 395, 405, 406], "learn": [2, 4, 395, 405, 406], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 388, 389, 390, 405], "env": [3, 407, 411, 412], "vector": [3, 411], "custom": [3, 11, 407, 409], "nativ": 3, "environ": [3, 4, 6, 7, 393, 394, 395, 396, 397, 402, 404, 405, 406, 407, 411, 412], "auto": 3, "reset": [3, 407, 412], "dynam": [3, 4, 409], "spec": [3, 407, 412], "clone": [3, 7], "mask": 3, "action": [3, 4, 396, 407], "record": [3, 366, 390, 393, 401], "video": [3, 11, 401], "domain": [3, 388], "specif": [3, 388, 404], "librari": [3, 411], "thing": [4, 393, 407], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 397, 399, 411], "gener": [4, 11, 388], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 393, 402, 407], "algorithm": [4, 388], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 393, 394, 399, 402], "return": [4, 389], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 411], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 404], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 393, 394, 395], "standard": 4, "explor": [4, 388, 393, 394, 398], "valu": [4, 388, 389, 393, 395, 396, 398], "loss": [4, 393, 394, 395, 396, 402, 405, 406], "earli": 4, "train": [4, 8, 389, 393, 395, 396, 399, 402, 405, 406, 407], "roughli": 4, "uniformli": 4, "random": [4, 389, 405, 406], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 394], "increas": 4, "an": [4, 395, 396, 397, 407], "can": 4, "low": 4, "forward": [4, 393], "model": [4, 388, 393, 394, 396, 399, 408, 411], "also": 4, "us": [4, 6, 9, 396, 408, 409, 411], "offlin": 4, "observ": [4, 393], "space": 4, "effect": [4, 407], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 412], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 393], "render": [7, 11, 402, 405, 406, 412], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 393], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 407], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 394, 409], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": 25, "binarydiscretetensorspec": 26, "bound": 27, "boundedtensorspec": 28, "composit": 30, "compositespec": 31, "constantklcontrol": 32, "discretetensorspec": 33, "flat2t": 34, "h5combin": 35, "h5split": 36, "lazystackedcompositespec": 37, "lazystackedtensorspec": 38, "multicategor": 39, "multidiscretetensorspec": 40, "multionehot": 41, "multionehotdiscretetensorspec": 42, "multistep": 43, "nested2t": 44, "nontensor": 45, "nontensorspec": 46, "onehotdiscretetensorspec": 47, "pairwisedataset": 48, "prioritizedreplaybuff": 49, "promptdata": 50, "prompttensordicttoken": 51, "replaybuff": 52, "rewarddata": 53, "rolloutfrommodel": 54, "stack": 55, "stackedcomposit": 56, "ted2flat": 57, "ted2nest": 58, "tensordictprioritizedreplaybuff": 59, "tensordictreplaybuff": 60, "tensordicttoken": 61, "tokenizeddatasetload": 63, "unbound": 64, "unboundedcontinu": 65, "unboundedcontinuoustensorspec": 66, "unboundeddiscret": 67, "unboundeddiscretetensorspec": 68, "check_no_exclusive_kei": 69, "consolidate_spec": 70, "contains_lazy_spec": 71, "create_infinite_iter": 72, "ataridqnexperiencereplai": 73, "basedatasetexperiencereplai": 74, "d4rlexperiencereplai": 75, "gendgrlexperiencereplai": 76, "minariexperiencereplai": 77, "openmlexperiencereplai": 78, "openxexperiencereplai": 79, "robosetexperiencereplai": 80, "vd4rlexperiencereplai": 81, "get_dataload": 82, "flatstoragecheckpoint": 83, "h5storagecheckpoint": 84, "immutabledatasetwrit": 85, "lazymemmapstorag": 86, "lazytensorstorag": 87, "liststorag": 88, "liststoragecheckpoint": 89, "nestedstoragecheckpoint": 90, "prioritizedsampl": 91, "prioritizedslicesampl": 92, "randomsampl": 93, "replaybufferensembl": 94, "roundrobinwrit": 95, "sampler": 96, "samplerensembl": 97, "samplerwithoutreplac": 98, "slicesampl": 99, "slicesamplerwithoutreplac": 100, "storagecheckpointerbas": 102, "storageensembl": 103, "storageensemblecheckpoint": 104, "tensordictmaxvaluewrit": 105, "tensordictroundrobinwrit": 106, "tensorstorag": 107, "tensorstoragecheckpoint": 108, "writer": 109, "writerensembl": 110, "braxenv": 111, "braxwrapp": 112, "dmcontrolenv": 113, "dmcontrolwrapp": 114, "envbas": [115, 407], "envcreat": 116, "envmetadata": 117, "gymenv": 118, "gymlikeenv": 119, "gymwrapp": 120, "habitatenv": 121, "isaacgymenv": 122, "isaacgymwrapp": 123, "jumanjienv": 124, "jumanjiwrapp": 125, "mogymenv": 126, "mogymwrapp": 127, "marlgroupmaptyp": 128, "meltingpotenv": 129, "meltingpotwrapp": 130, "modelbasedenvbas": 131, "multithreadedenv": 132, "multithreadedenvwrapp": 133, "openmlenv": 134, "openspielenv": 135, "openspielwrapp": 136, "parallelenv": 137, "pendulumenv": 138, "pettingzooenv": 139, "pettingzoowrapp": 140, "robohiveenv": 141, "smacv2env": 142, "smacv2wrapp": 143, "serialenv": 144, "tictactoeenv": 145, "vmasenv": 146, "vmaswrapp": 147, "check_marl_group": 148, "gym_backend": 149, "dreamerdecod": 150, "dreamerenv": 151, "set_gym_backend": 152, "actiondiscret": 153, "actionmask": 154, "autoresetenv": 155, "autoresettransform": 156, "batchsizetransform": 157, "binarizereward": 158, "burnintransform": 159, "catfram": [160, 409], "cattensor": 161, "centercrop": 162, "cliptransform": 163, "crop": 165, "dtypecasttransform": 166, "devicecasttransform": 167, "discreteactionproject": 168, "doubletofloat": 169, "endoflifetransform": 170, "excludetransform": 171, "finitetensordictcheck": 172, "flattenobserv": 173, "frameskiptransform": 174, "grayscal": 175, "inittrack": 176, "klrewardtransform": 177, "noopresetenv": 178, "observationnorm": 179, "observationtransform": 180, "permutetransform": 181, "pinmemorytransform": 182, "r3mtransform": 183, "randomcroptensordict": 184, "removeemptyspec": 185, "renametransform": 186, "resiz": 187, "reward2gotransform": 188, "rewardclip": 189, "rewardsc": 190, "rewardsum": 191, "selecttransform": 192, "signtransform": 193, "squeezetransform": 194, "stepcount": 195, "targetreturn": 196, "tensordictprim": 197, "timemaxpool": 198, "totensorimag": 199, "transformedenv": 201, "unsqueezetransform": 202, "vc1transform": 203, "viprewardtransform": 204, "viptransform": 205, "vecgymenvtransform": 206, "vecnorm": [207, 412], "gsdenois": 208, "multisteptransform": 209, "randompolici": 210, "check_env_spec": 211, "exploration_mod": 212, "exploration_typ": 213, "get_available_librari": 214, "make_composite_from_td": 215, "set_exploration_mod": 216, "set_exploration_typ": 217, "step_mdp": 218, "terminated_or_trunc": 219, "additivegaussianmodul": 220, "additivegaussianwrapp": 221, "batchrenorm1d": 222, "cemplann": 223, "consistentdropoutmodul": 224, "conv3dnet": 225, "convnet": 226, "dtactor": 227, "ddpgcnnactor": 228, "ddpgcnnqnet": 229, "ddpgmlpactor": 230, "ddpgmlpqnet": 231, "decisiontransform": 232, "delta": 233, "distributionaldqnnet": 234, "distributionalqvaluehook": 235, "dreameractor": 236, "duelingcnndqnet": 237, "egreedymodul": 238, "egreedywrapp": 239, "gru": 240, "grucel": 241, "grumodul": 242, "independentnorm": 243, "lstm": [244, 396], "lstmcell": 245, "lstmmodul": 246, "mlp": [247, 396], "mpcplannerbas": 248, "mppiplann": 249, "maskedcategor": 250, "maskedonehotcategor": 251, "multiagentconvnet": 252, "multiagentmlp": 253, "multiagentnetbas": 254, "noisylazylinear": 255, "noisylinear": 256, "normalparamwrapp": 257, "obsdecod": 258, "obsencod": 259, "onehotcategor": 260, "onlinedtactor": 261, "ornsteinuhlenbeckprocessmodul": 262, "ornsteinuhlenbeckprocesswrapp": 263, "qmixer": [264, 389], "qvaluehook": 265, "rssmposterior": 266, "rssmprior": 267, "squeeze2dlay": 268, "squeezelay": 269, "tanhdelta": 270, "tanhnorm": 271, "truncatednorm": 272, "vdnmixer": 273, "vmapmodul": 274, "reset_nois": 275, "actor": [276, 388, 393, 398], "actorcriticoper": 277, "actorcriticwrapp": 278, "actorvalueoper": 279, "decisiontransformerinferencewrapp": 280, "distributionalqvalueactor": 281, "distributionalqvaluemodul": 282, "lmheadactorvalueoper": 283, "multistepactorwrapp": 284, "probabilisticactor": 285, "qvalueactor": 286, "qvaluemodul": 287, "safemodul": [288, 388], "safeprobabilisticmodul": 289, "safeprobabilistictensordictsequenti": 290, "safesequenti": 291, "tanhmodul": 292, "valueoper": 293, "worldmodelwrapp": 294, "biased_softplu": 295, "get_primers_from_modul": 296, "inv_softplu": 297, "map": [298, 405], "a2closs": 299, "cqlloss": 300, "clipppoloss": 301, "crossqloss": 302, "ddpgloss": 303, "dqnloss": 304, "dtloss": 305, "discretecqlloss": 306, "discreteiqlloss": 307, "discretesacloss": 308, "distributionaldqnloss": 309, "dreameractorloss": 310, "dreamermodelloss": 311, "dreamervalueloss": 312, "gailloss": 313, "hardupd": 314, "iqlloss": 315, "klpenppoloss": 316, "lossmodul": [317, 393, 399], "onlinedtloss": 318, "ppoloss": 319, "redqloss": 320, "reinforceloss": 321, "sacloss": 322, "softupd": 323, "td3bcloss": 324, "td3loss": 325, "valueestim": 326, "default_value_kwarg": 327, "distance_loss": 328, "hold_out_net": 329, "hold_out_param": 330, "qmixerloss": 331, "next_state_valu": 332, "gae": 333, "td0estim": 334, "td1estim": 335, "tdlambdaestim": 336, "valueestimatorbas": 337, "generalized_advantage_estim": 338, "reward2go": 339, "td0_advantage_estim": 340, "td0_return_estim": 341, "td1_advantage_estim": 342, "td1_return_estim": 343, "td_lambda_advantage_estim": 344, "td_lambda_return_estim": 345, "vec_generalized_advantage_estim": 346, "vec_td1_advantage_estim": 347, "vec_td1_return_estim": 348, "vec_td_lambda_advantage_estim": 349, "vec_td_lambda_return_estim": 350, "pixelrendertransform": 351, "tensordictrecord": 352, "videorecord": 353, "logger": [354, 390, 401, 402], "csvlogger": 355, "generate_exp_nam": 356, "get_logg": 357, "mlflowlogg": 358, "tensorboardlogg": 359, "wandblogg": 360, "batchsubsampl": 361, "clearcudacach": 362, "countframeslog": 363, "logreward": 364, "optimizerhook": 365, "replaybuffertrain": 367, "rewardnorm": 368, "selectkei": 369, "trainer": [370, 390, 394], "trainerhookbas": 371, "updateweight": 372, "correct_for_frame_skip": 373, "get_stats_random_rollout": 374, "make_collector_offpolici": 375, "make_collector_onpolici": 376, "make_dqn_loss": 377, "make_replay_buff": 378, "make_target_updat": 379, "make_train": 380, "parallel_env_constructor": 381, "sync_async_collector": 382, "sync_sync_collector": 383, "transformed_env_constructor": 384, "readm": [385, 403], "tuto": [385, 403], "api": 386, "contribut": [387, 411], "content": 387, "modul": [388, 393, 396, 398, 402, 411], "tensordictmodul": [388, 398, 411], "wrapper": [388, 398], "probabilist": [388, 398], "q": [388, 394, 396, 398], "oper": 388, "join": 388, "hook": [388, 390, 394], "regular": 388, "planner": 388, "object": [389, 393, 399, 411], "torch": 389, "vmap": 389, "dqn": [389, 394, 396], "ddpg": [389, 393, 405], "sac": 389, "redq": 389, "crossq": 389, "iql": 389, "cql": 389, "gail": 389, "dt": 389, "td3": 389, "bc": 389, "ppo": [389, 395, 406], "a2c": 389, "dreamer": 389, "builder": 390, "_util": 391, "comput": [392, 394, 407, 410], "time": [392, 393, 410], "code": [393, 407], "overview": [393, 396], "setup": [393, 396], "__init__": 393, "method": 393, "estim": 393, "put": 393, "togeth": [393, 407], "call": 393, "parallel": [393, 404, 412], "execut": [393, 404, 407], "stat": 393, "build": [393, 394, 402, 409], "evalu": 393, "construct": 393, "target": [393, 394, 399], "network": [393, 394, 395, 396, 398, 405, 406], "updat": 393, "experi": [393, 407], "result": [393, 395, 405, 406], "conclus": [393, 394, 395, 396, 405, 406, 407, 409], "next": [393, 395, 397, 400, 405, 406, 409], "A": [394, 409], "deep": 394, "collect": [394, 395, 400], "paramet": [394, 395, 399], "hyperparamet": [394, 395, 405, 406], "regist": 394, "possibl": 394, "improv": 394, "defin": [395, 405, 406], "loop": [395, 396, 402, 405, 406, 407], "recurr": 396, "convolut": 396, "select": 396, "further": [396, 399], "read": 396, "creat": 397, "run": [397, 412], "rollout": [397, 404, 405, 406, 407, 412], "s": [398, 399], "output": 399, "consider": 399, "log": 401, "own": 402, "first": 402, "design": 402, "divers": 404, "competit": 405, "group": 405, "critic": [405, 406], "pendulum": 407, "write": 407, "_step": 407, "simul": 407, "_reset": 407, "metadata": 407, "_spec": 407, "shape": 407, "seed": [407, 412], "wrap": 407, "class": [407, 411], "test": 407, "our": 407, "simpl": 407, "pretrain": 408, "vanilla": 409, "integr": 409, "tensorclass": 409, "other": 409, "tensor": 409, "pytre": 409, "iter": 409, "over": 409, "fix": 409, "priorit": 409, "save": 409, "raw": 409, "imag": 409, "more": 409, "complex": 409, "introduct": 411, "config": 411, "sequenc": 411, "program": 411, "ensembl": 411, "meta": 411, "state": 411, "frame_skip": 412, "deepmind": 412, "control": 412, "devic": 412, "close": 412, "access": 412, "attribut": 412, "kwarg": 412}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})