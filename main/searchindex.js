Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "BatchRenorm1d", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 92, 94, 95, 97, 99, 101, 103, 105, 106, 107, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 146, 151, 152, 154, 155, 157, 158, 160, 164, 166, 167, 170, 176, 177, 181, 182, 183, 184, 186, 194, 195, 196, 197, 198, 199, 201, 204, 205, 207, 209, 218, 220, 221, 223, 224, 225, 226, 233, 235, 237, 239, 240, 241, 245, 246, 248, 259, 260, 262, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 286, 287, 291, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 330, 331, 332, 333, 334, 348, 350, 353, 357, 362, 363, 367, 368, 371, 378, 379, 380, 381, 384, 385, 386, 390, 391, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 408, 409], "open": [0, 5, 7, 12, 48, 50, 53, 79, 391, 402, 403, 408], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "reinforc": [0, 3, 9, 76, 129, 130, 158, 223, 224, 225, 226, 230, 275, 280, 281, 296, 297, 299, 302, 303, 304, 306, 311, 312, 318, 319, 320, 321, 383, 389, 391, 394, 395, 400, 404, 407, 408], "learn": [0, 3, 7, 8, 9, 18, 43, 76, 77, 78, 80, 81, 115, 129, 130, 134, 135, 142, 158, 223, 224, 225, 226, 230, 242, 249, 275, 280, 281, 296, 297, 299, 302, 303, 304, 306, 310, 311, 312, 317, 318, 319, 320, 321, 383, 385, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 409], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 73, 131, 194, 249, 267, 282, 290, 296, 298, 313, 314, 316, 318, 358, 382, 384, 385, 386, 387, 390, 391, 392, 397, 400, 402, 403, 405, 406, 409], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 51, 61, 113, 114, 123, 132, 212, 383, 384, 385, 388, 390, 391, 392, 394, 395, 397, 402, 403, 404, 409], "pytorch": [0, 1, 2, 3, 23, 77, 144, 145, 197, 209, 233, 237, 248, 249, 367, 382, 384, 385, 387, 390, 392, 393, 396, 400, 402, 403, 404, 405, 406, 408, 409], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 43, 61, 76, 115, 119, 123, 128, 129, 130, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 150, 205, 207, 237, 357, 384, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 98, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 154, 155, 157, 158, 161, 162, 164, 166, 167, 168, 176, 177, 181, 182, 186, 189, 193, 194, 195, 198, 199, 201, 203, 205, 207, 209, 217, 219, 220, 221, 223, 233, 235, 236, 237, 239, 241, 242, 245, 246, 247, 249, 250, 263, 265, 267, 272, 274, 275, 276, 277, 279, 282, 283, 284, 285, 286, 287, 288, 289, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 348, 350, 357, 363, 379, 380, 381, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "directli": [0, 3, 4, 8, 23, 73, 94, 111, 112, 115, 118, 119, 131, 135, 136, 142, 143, 177, 186, 204, 314, 321, 381, 385, 391, 392, 394, 402, 403, 404, 406], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 213, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 262, 263, 264, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 328, 329, 330, 331, 332, 333, 336, 348, 349, 350, 358, 364, 367, 370, 371, 375, 377, 378, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409], "pypi": [0, 2, 408], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 99, 115, 119, 122, 125, 129, 130, 132, 135, 136, 137, 138, 139, 142, 143, 144, 145, 162, 181, 195, 197, 198, 199, 201, 203, 205, 206, 207, 220, 221, 233, 236, 237, 240, 246, 247, 248, 255, 263, 264, 268, 270, 282, 285, 286, 299, 310, 314, 321, 350, 357, 364, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 406, 409], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 105, 115, 118, 119, 120, 122, 123, 125, 129, 130, 135, 136, 137, 138, 139, 142, 143, 144, 145, 197, 201, 206, 207, 218, 230, 237, 240, 248, 250, 267, 271, 272, 274, 275, 285, 290, 296, 306, 314, 316, 330, 335, 343, 357, 362, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 409], "about": [0, 3, 5, 7, 9, 18, 19, 20, 41, 61, 77, 80, 81, 115, 135, 142, 386, 390, 391, 392, 394, 395, 396, 397, 398, 399, 402, 403, 404, 406, 408, 409], "instruct": [0, 6, 7, 10, 22, 75, 166, 168, 390, 391, 392, 393, 402, 403, 406], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 52, 59, 60, 94, 135, 142, 268, 269, 270, 385, 390, 394, 396, 397, 399, 401, 403], "section": [0, 2, 3, 4, 24, 233, 237, 391, 394, 399, 402, 403], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 43, 52, 64, 82, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 220, 221, 233, 236, 237, 240, 246, 263, 282, 285, 364, 390, 391, 392, 393, 394, 402, 404], "pip": [0, 10, 78, 394, 395, 396, 397, 398, 399, 403, 408, 409], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 39, 41, 43, 48, 49, 50, 52, 53, 59, 60, 63, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 88, 92, 93, 94, 97, 99, 100, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 151, 155, 157, 158, 159, 160, 161, 163, 164, 167, 171, 176, 177, 179, 181, 182, 185, 186, 189, 190, 194, 195, 196, 199, 201, 203, 204, 205, 207, 217, 220, 221, 227, 230, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 265, 267, 272, 275, 276, 277, 279, 281, 282, 283, 284, 289, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 354, 358, 364, 371, 377, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 133, 150, 233, 234, 235, 237, 238, 239, 243, 244, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 39, 40, 41, 42, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 99, 100, 105, 107, 115, 118, 119, 120, 125, 135, 136, 142, 143, 154, 155, 158, 159, 171, 177, 181, 182, 197, 199, 201, 221, 233, 235, 237, 239, 240, 246, 248, 252, 267, 273, 274, 275, 282, 283, 285, 286, 298, 308, 313, 314, 316, 349, 350, 366, 385, 389, 390, 391, 392, 393, 394, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "low": [0, 3, 27, 30, 62, 64, 92, 115, 119, 135, 136, 142, 143, 151, 161, 166, 213, 261, 262, 263, 273, 275, 282, 289, 390, 391, 392, 393, 402, 403, 404, 408, 409], "high": [0, 3, 9, 27, 30, 48, 50, 53, 59, 64, 92, 115, 119, 135, 136, 142, 143, 151, 161, 166, 176, 213, 261, 262, 263, 273, 275, 282, 289, 330, 335, 343, 390, 391, 392, 393, 402, 403, 404, 406, 408, 409], "level": [0, 2, 3, 4, 22, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 118, 120, 158, 193, 313, 390, 391, 397, 408], "abstract": [0, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 45, 46, 55, 56, 62, 64, 65, 66, 67, 68, 73, 74, 78, 109, 115, 178, 241, 334, 359, 368, 387, 392, 404, 408], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 94, 97, 98, 100, 101, 103, 105, 107, 115, 116, 118, 119, 120, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 153, 154, 155, 157, 158, 161, 162, 164, 166, 167, 168, 170, 171, 175, 176, 179, 181, 186, 189, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 213, 216, 217, 219, 226, 228, 233, 234, 235, 237, 238, 239, 241, 243, 244, 245, 246, 247, 249, 253, 255, 258, 273, 274, 276, 279, 281, 282, 283, 285, 286, 287, 288, 289, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 325, 328, 329, 330, 331, 332, 333, 334, 348, 357, 364, 377, 381, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 63, 64, 65, 66, 67, 68, 157, 166, 265, 314, 385, 408], "effici": [0, 1, 2, 4, 8, 233, 249, 299, 385, 390, 391, 392, 393, 396, 397, 399, 401, 402, 403, 405, 406, 408], "modular": [0, 73, 288, 406, 408], "document": [0, 2, 5, 7, 11, 18, 19, 21, 43, 79, 115, 119, 135, 136, 142, 143, 199, 207, 382, 391, 393, 394, 397, 400, 408], "properli": [0, 1, 64, 115, 119, 135, 136, 142, 143, 216, 235, 239, 392, 398, 402, 403, 404, 408], "test": [0, 3, 5, 111, 112, 124, 125, 129, 130, 201, 209, 235, 239, 363, 377, 392, 393, 408], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 91, 92, 94, 97, 99, 100, 101, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 154, 155, 157, 158, 162, 164, 167, 168, 169, 177, 179, 181, 186, 188, 189, 190, 193, 194, 195, 198, 199, 201, 203, 204, 205, 207, 209, 216, 217, 218, 219, 223, 224, 225, 226, 227, 230, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 249, 250, 256, 257, 258, 267, 268, 271, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 336, 348, 350, 352, 355, 356, 357, 358, 362, 377, 379, 380, 383, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409], "code": [0, 3, 5, 7, 8, 14, 15, 79, 115, 119, 135, 136, 142, 143, 181, 199, 201, 218, 233, 234, 235, 237, 238, 239, 282, 288, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409], "aim": [0, 2, 3, 7, 55, 56, 181, 201, 203, 240, 370, 384, 385, 386, 390, 391, 408], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 78, 81, 82, 86, 87, 101, 103, 107, 108, 110, 111, 112, 118, 120, 124, 132, 134, 135, 137, 139, 155, 158, 168, 177, 195, 196, 198, 212, 230, 265, 274, 275, 282, 285, 288, 306, 314, 330, 331, 332, 333, 355, 383, 385, 387, 392, 393, 394, 395, 403, 404, 406, 408], "research": [0, 7, 9, 129, 130, 218, 408], "most": [0, 1, 2, 3, 7, 8, 14, 15, 43, 99, 100, 115, 119, 135, 136, 142, 143, 166, 204, 209, 390, 392, 394, 395, 396, 397, 398, 399, 404, 408, 409], "written": [0, 1, 2, 3, 12, 34, 48, 50, 53, 57, 63, 75, 76, 79, 84, 86, 92, 94, 99, 100, 113, 114, 115, 118, 119, 120, 121, 135, 136, 139, 142, 143, 151, 158, 168, 175, 189, 193, 196, 204, 207, 216, 217, 267, 280, 281, 282, 285, 286, 290, 296, 298, 313, 316, 318, 329, 348, 349, 350, 385, 386, 387, 390, 393, 395, 401, 404, 408], "highli": [0, 2, 394, 408, 409], "wai": [0, 1, 2, 3, 4, 73, 77, 94, 105, 123, 181, 184, 203, 204, 235, 237, 239, 316, 330, 331, 332, 333, 385, 390, 391, 392, 394, 396, 397, 401, 402, 403, 404, 405, 406, 408, 409], "easili": [0, 1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 386, 390, 391, 392, 394, 395, 396, 399, 402, 403, 408, 409], "swap": [0, 1, 3, 118, 204, 392, 405, 408], "compon": [0, 1, 2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 230, 256, 274, 275, 284, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 362, 367, 390, 391, 392, 393, 395, 396, 399, 401, 402, 403, 404, 405, 408], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 51, 52, 54, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 103, 108, 115, 116, 119, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 222, 223, 227, 230, 231, 235, 239, 254, 255, 256, 264, 273, 278, 279, 289, 292, 293, 295, 302, 315, 348, 350, 364, 381, 383, 389, 391, 393, 395, 397, 398, 399, 400, 405, 407], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 49, 51, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 110, 115, 116, 119, 123, 128, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 164, 167, 195, 199, 205, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 264, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 313, 350, 390, 391, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "write": [0, 2, 3, 8, 23, 43, 48, 49, 50, 51, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 103, 110, 115, 119, 161, 179, 180, 189, 191, 193, 197, 217, 267, 285, 286, 288, 290, 299, 300, 301, 303, 304, 305, 312, 317, 319, 321, 322, 329, 334, 350, 385, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 98, 115, 119, 132, 135, 136, 140, 141, 142, 143, 155, 189, 198, 205, 207, 216, 217, 233, 235, 239, 280, 281, 285, 286, 291, 296, 297, 298, 301, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 357, 386, 390, 392, 393, 394, 396, 402, 403, 404, 408, 409], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 137, 138, 142, 143, 159, 162, 164, 165, 167, 177, 181, 186, 195, 198, 199, 201, 203, 207, 208, 243, 244, 265, 285, 296, 297, 299, 300, 312, 316, 317, 319, 321, 322, 336, 390, 392, 402, 403, 404, 406, 408, 409], "littl": [0, 1, 3, 61, 115, 119, 135, 136, 142, 143, 199, 296, 298, 313, 316, 318, 392, 393, 397, 406, 408, 409], "effort": [0, 3, 404, 406, 408], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 107, 108, 110, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 142, 143, 144, 145, 150, 151, 152, 154, 155, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 181, 182, 183, 184, 186, 189, 190, 191, 193, 195, 196, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 328, 330, 331, 332, 333, 334, 348, 349, 357, 358, 360, 363, 364, 367, 369, 370, 371, 377, 381, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "repo": [0, 6, 75, 158, 196, 201, 384, 403, 408], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 99, 100, 113, 114, 118, 120, 121, 139, 272, 277, 281, 301, 304, 312, 328, 396, 408], "align": [0, 233, 237, 408], "exist": [0, 2, 3, 4, 12, 18, 21, 43, 48, 50, 53, 63, 115, 119, 135, 136, 142, 143, 159, 165, 199, 207, 299, 319, 371, 381, 402, 403, 408, 409], "ecosystem": [0, 397, 408], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 79, 86, 87, 94, 97, 99, 105, 107, 115, 116, 119, 123, 129, 130, 135, 136, 142, 143, 144, 145, 155, 158, 193, 194, 195, 196, 199, 207, 233, 235, 237, 239, 245, 247, 262, 271, 272, 275, 277, 279, 281, 286, 296, 299, 313, 314, 316, 318, 350, 390, 391, 392, 393, 394, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "dataset": [0, 36, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 92, 94, 97, 99, 100, 134, 205, 350, 383, 390, 391, 394, 405, 406, 408, 409], "pillar": [0, 408], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 154, 155, 157, 158, 159, 164, 165, 166, 167, 172, 176, 177, 181, 182, 183, 186, 189, 193, 194, 195, 196, 198, 199, 201, 204, 205, 209, 219, 235, 239, 241, 242, 272, 279, 281, 303, 307, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 358, 360, 363, 370, 371, 372, 373, 377, 378, 379, 380, 381, 383, 384, 385, 389, 395, 396, 397, 398, 400, 405, 406, 407], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 48, 50, 53, 54, 63, 115, 119, 131, 135, 136, 142, 143, 164, 181, 195, 201, 203, 206, 207, 220, 221, 222, 227, 229, 235, 239, 240, 241, 242, 246, 247, 254, 255, 264, 268, 269, 270, 278, 285, 291, 293, 296, 297, 298, 299, 301, 302, 303, 304, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 328, 367, 372, 373, 374, 383, 384, 386, 387, 389, 392, 394, 397, 400, 402, 403, 404, 406, 407, 409], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 152, 155, 157, 158, 164, 165, 167, 169, 175, 177, 183, 186, 193, 199, 204, 207, 208, 209, 213, 217, 219, 230, 235, 239, 242, 245, 246, 256, 265, 267, 274, 276, 277, 279, 280, 281, 282, 283, 285, 288, 289, 290, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 348, 350, 357, 358, 364, 367, 369, 372, 377, 379, 380, 381, 383, 385, 386, 387, 389, 393, 394, 395, 396, 400, 404, 405, 406, 407, 409], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 43, 52, 54, 111, 112, 115, 119, 124, 125, 130, 135, 136, 137, 138, 142, 143, 146, 158, 181, 186, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 227, 233, 237, 292, 293, 294, 295, 314, 377, 383, 388, 390, 392, 395, 396, 397, 403, 404, 406, 408, 409], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 43, 48, 50, 53, 56, 86, 87, 91, 92, 105, 107, 115, 116, 119, 135, 136, 142, 143, 144, 155, 157, 159, 162, 163, 171, 177, 181, 189, 195, 198, 199, 201, 203, 207, 209, 233, 235, 236, 237, 239, 242, 246, 250, 256, 262, 263, 273, 275, 279, 282, 284, 285, 286, 296, 298, 299, 300, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 329, 330, 331, 332, 333, 348, 358, 370, 380, 385, 391, 392, 395, 396, 398, 402, 403, 405, 406, 408, 409], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 105, 115, 116, 119, 135, 136, 142, 143, 144, 155, 157, 159, 162, 171, 177, 181, 189, 195, 198, 199, 201, 203, 207, 209, 233, 235, 236, 237, 238, 239, 242, 246, 262, 263, 273, 282, 285, 286, 299, 319, 329, 339, 340, 341, 342, 344, 345, 346, 347, 348, 380, 385, 391, 392, 395, 398, 402, 403, 404, 405, 406, 408, 409], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 43, 54, 57, 73, 79, 155, 158, 186, 193, 207, 208, 235, 239, 280, 281, 364, 367, 369, 372, 373, 377, 379, 380, 383, 386, 387, 406, 409], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 91, 92, 94, 95, 97, 99, 100, 101, 106, 109, 110, 115, 119, 131, 135, 136, 142, 143, 151, 162, 164, 167, 181, 195, 198, 199, 201, 203, 204, 205, 207, 216, 217, 219, 220, 221, 233, 234, 237, 238, 240, 242, 245, 246, 267, 274, 275, 282, 284, 285, 290, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 336, 354, 358, 370, 377, 378, 379, 380, 381, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409], "etc": [0, 2, 3, 7, 8, 12, 43, 62, 79, 115, 119, 135, 136, 142, 143, 175, 199, 207, 240, 246, 262, 391, 392, 397, 406, 408, 409], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 101, 115, 119, 135, 136, 137, 138, 142, 143, 151, 154, 158, 164, 167, 168, 175, 176, 177, 193, 198, 199, 205, 207, 209, 217, 220, 221, 240, 245, 246, 247, 265, 279, 287, 288, 296, 298, 313, 316, 318, 321, 325, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 358, 367, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "few": [0, 2, 8, 119, 350, 358, 392, 393, 395, 402, 403, 406, 408, 409], "depend": [0, 1, 2, 3, 4, 7, 8, 27, 48, 50, 64, 118, 120, 121, 139, 144, 145, 164, 167, 290, 316, 385, 390, 392, 393, 402, 403, 404, 408, 409], "possibl": [0, 2, 3, 4, 23, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 55, 76, 79, 81, 92, 99, 105, 115, 119, 135, 136, 142, 143, 151, 162, 181, 195, 198, 199, 201, 203, 207, 220, 221, 233, 234, 237, 238, 285, 348, 363, 367, 385, 390, 392, 393, 395, 397, 398, 402, 403, 404, 406, 408, 409], "standard": [0, 3, 177, 188, 205, 218, 219, 231, 242, 248, 249, 254, 271, 272, 273, 321, 322, 330, 331, 332, 333, 390, 391, 394, 395, 403, 406, 408], "numpi": [0, 3, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 197, 367, 404, 406, 408, 409], "common": [0, 2, 3, 4, 62, 119, 124, 152, 268, 269, 270, 278, 296, 297, 298, 299, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 377, 384, 385, 387, 390, 392, 395, 398, 401, 402, 403, 404, 405, 408, 409], "openai": [0, 7, 24, 118, 120, 139, 392, 404, 408, 409], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 115, 116, 118, 119, 120, 121, 123, 129, 130, 132, 133, 135, 136, 139, 142, 143, 144, 145, 147, 150, 154, 158, 161, 168, 174, 175, 177, 179, 184, 186, 189, 195, 198, 204, 205, 207, 377, 384, 390, 391, 392, 393, 394, 398, 399, 404, 405, 406, 408], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 92, 94, 99, 100, 107, 113, 114, 115, 118, 119, 120, 121, 123, 125, 132, 133, 135, 136, 137, 138, 139, 142, 143, 151, 154, 158, 159, 161, 162, 164, 166, 167, 171, 177, 181, 182, 186, 193, 194, 195, 196, 198, 199, 201, 203, 205, 207, 237, 239, 245, 246, 267, 273, 274, 282, 283, 285, 286, 287, 288, 296, 298, 299, 300, 304, 305, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 350, 357, 371, 386, 387, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 408, 409], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 103, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 181, 182, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 263, 265, 267, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 355, 357, 358, 360, 361, 362, 363, 364, 365, 367, 371, 372, 373, 374, 376, 377, 379, 380, 381, 385, 393, 394, 397, 402, 403, 404, 406, 408], "On": [0, 3, 7, 18, 19, 20, 21, 30, 76, 234, 238, 385, 391, 402, 403], "end": [0, 2, 3, 14, 15, 17, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 98, 99, 100, 115, 119, 135, 136, 142, 143, 168, 179, 193, 194, 199, 207, 220, 221, 233, 234, 237, 238, 241, 279, 299, 319, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "come": [0, 1, 2, 3, 8, 43, 105, 115, 119, 128, 135, 136, 142, 143, 164, 167, 267, 268, 269, 270, 282, 290, 296, 298, 313, 316, 318, 350, 390, 391, 392, 393, 396, 397, 398, 399, 402, 403, 406, 408, 409], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 30, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 98, 101, 107, 115, 117, 119, 120, 129, 130, 131, 135, 136, 137, 138, 142, 143, 144, 145, 150, 152, 154, 155, 158, 159, 162, 164, 167, 174, 175, 181, 186, 193, 194, 195, 196, 198, 199, 201, 203, 205, 207, 209, 214, 215, 217, 233, 235, 237, 239, 241, 245, 246, 262, 272, 273, 285, 299, 305, 310, 314, 316, 319, 334, 358, 363, 364, 373, 381, 384, 385, 386, 388, 390, 391, 392, 393, 395, 396, 397, 401, 402, 403, 404, 405, 406, 408, 409], "re": [0, 2, 3, 8, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 115, 119, 135, 136, 142, 143, 207, 239, 243, 244, 247, 282, 286, 357, 387, 390, 392, 393, 394, 396, 401, 402, 404, 408, 409], "usabl": [0, 387, 393, 408], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 115, 116, 119, 135, 136, 142, 143, 150, 154, 155, 164, 167, 199, 205, 207, 209, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 257, 258, 260, 263, 265, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 377, 383, 385, 390, 393, 394, 395, 398, 401, 404, 406, 409], "cost": [0, 2, 29, 79, 296, 298, 313, 316, 318, 386, 390, 391, 402, 403, 404, 406], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 92, 94, 95, 97, 99, 100, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 216, 217, 219, 222, 223, 224, 225, 226, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 250, 253, 254, 255, 257, 258, 261, 262, 263, 264, 267, 268, 269, 270, 273, 279, 282, 284, 285, 286, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 354, 367, 370, 372, 377, 378, 379, 380, 381, 383, 385, 387, 390, 391, 392, 393, 395, 396, 398, 401, 402, 403, 404, 405, 406, 408, 409], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 49, 50, 53, 61, 63, 73, 76, 80, 81, 91, 92, 99, 115, 116, 119, 123, 128, 132, 135, 136, 137, 138, 142, 143, 157, 164, 167, 195, 197, 205, 207, 235, 239, 245, 246, 275, 280, 281, 284, 383, 387, 390, 391, 393, 394, 402, 403, 404, 405, 406, 408, 409], "good": [0, 1, 4, 9, 135, 390, 392, 393, 395, 403, 408, 409], "runtim": [0, 2, 3, 23, 43, 115, 119, 135, 136, 142, 143, 207, 404], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 113, 114, 115, 118, 119, 120, 121, 135, 136, 139, 142, 143, 146, 164, 167, 176, 199, 207, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 298, 299, 308, 316, 319, 363, 367, 386, 390, 391, 392, 393, 394, 397, 399, 401, 402, 403, 404, 409], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 99, 100, 103, 110, 111, 112, 115, 118, 119, 120, 124, 125, 128, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 193, 195, 205, 207, 235, 239, 268, 269, 270, 280, 281, 299, 305, 310, 314, 321, 350, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409], "read": [0, 2, 3, 7, 23, 30, 31, 34, 37, 49, 51, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 94, 101, 103, 107, 115, 118, 119, 120, 135, 136, 142, 143, 152, 154, 155, 157, 158, 159, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 179, 180, 182, 183, 184, 186, 189, 190, 191, 193, 194, 195, 196, 198, 201, 202, 204, 205, 207, 217, 253, 267, 268, 269, 270, 274, 279, 282, 285, 286, 288, 290, 291, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 330, 331, 332, 333, 334, 350, 363, 367, 385, 390, 391, 392, 394, 395, 401, 402, 403, 404, 405, 409], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 387, 390, 394, 397, 401, 405, 409], "beyond": [0, 115, 119, 135, 136, 142, 143], "api": [0, 2, 3, 5, 23, 62, 137, 138, 139, 181, 203, 205, 386, 387, 394, 395, 396, 397, 398, 402, 403, 404, 406, 408, 409], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 69, 71, 83, 84, 90, 99, 115, 116, 118, 119, 120, 131, 135, 136, 142, 143, 146, 158, 159, 170, 175, 182, 195, 197, 199, 207, 209, 235, 239, 267, 274, 275, 282, 283, 284, 285, 286, 299, 310, 321, 350, 382, 385, 386, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409], "paper": [0, 76, 79, 111, 112, 113, 114, 121, 124, 125, 129, 130, 132, 133, 139, 144, 145, 181, 201, 203, 233, 255, 264, 303, 311, 321, 390, 392, 402, 403], "releas": [0, 4, 7, 10, 43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319, 408], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 369, 377, 387, 390, 408], "so": [0, 2, 3, 4, 6, 7, 10, 11, 43, 48, 50, 53, 54, 115, 119, 129, 130, 135, 136, 142, 143, 195, 205, 207, 287, 288, 390, 392, 393, 396, 399, 402, 403, 404, 409], "make": [0, 2, 3, 4, 7, 11, 43, 48, 49, 50, 52, 53, 54, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 97, 101, 103, 110, 115, 119, 120, 123, 125, 127, 133, 135, 136, 142, 143, 151, 169, 177, 181, 182, 186, 193, 201, 207, 209, 218, 233, 234, 235, 237, 238, 239, 245, 246, 248, 274, 286, 296, 298, 313, 316, 318, 330, 331, 332, 333, 348, 364, 373, 381, 385, 386, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "sure": [0, 3, 4, 7, 78, 101, 119, 123, 186, 274, 381, 385, 390, 392, 393, 396, 402, 403, 404, 406, 408, 409], "alwai": [0, 2, 3, 14, 15, 20, 27, 30, 31, 37, 43, 56, 62, 64, 73, 82, 83, 84, 90, 115, 119, 135, 136, 142, 143, 175, 176, 205, 207, 306, 314, 385, 386, 391, 392, 393, 402, 403, 404, 406], "enjoi": [0, 2, 3, 79, 397], "latest": [0, 2, 3, 10, 132, 137, 138, 364, 392, 402, 403, 404, 408], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 62, 63, 77, 92, 99, 100, 115, 119, 128, 135, 136, 137, 138, 140, 141, 142, 143, 155, 158, 171, 175, 179, 195, 196, 200, 205, 209, 218, 220, 221, 231, 232, 233, 234, 235, 237, 238, 239, 240, 245, 248, 249, 286, 293, 296, 298, 313, 316, 318, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 381, 385, 390, 391, 392, 393, 395, 396, 397, 399, 404, 406, 409], "recent": [0, 7, 12, 204, 409], "version": [0, 1, 2, 3, 6, 12, 26, 28, 31, 33, 37, 38, 40, 42, 43, 46, 47, 48, 50, 54, 65, 66, 67, 68, 76, 81, 99, 115, 118, 119, 120, 121, 132, 133, 135, 136, 137, 139, 142, 143, 144, 145, 204, 205, 207, 216, 218, 247, 270, 296, 298, 313, 314, 316, 318, 319, 330, 333, 384, 385, 386, 390, 392, 393, 394, 396, 399, 402, 403, 404, 405, 409], "although": [0, 1, 3, 8, 64, 115, 119, 135, 136, 142, 143, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 387, 390, 391, 397, 406], "core": [0, 3, 8, 387, 393, 395, 408], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 101, 103, 107, 115, 119, 135, 136, 142, 143, 205, 207, 397, 408], "backward": [0, 8, 43, 111, 112, 115, 119, 135, 136, 142, 143, 205, 207, 233, 234, 237, 238, 296, 297, 299, 300, 304, 305, 312, 316, 317, 318, 319, 321, 322, 390, 392, 393, 396, 397, 399, 402, 403, 404], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 43, 75, 94, 97, 99, 100, 101, 105, 115, 119, 121, 134, 135, 136, 142, 143, 158, 193, 201, 205, 207, 233, 234, 235, 237, 238, 239, 283, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 316, 317, 318, 319, 321, 322, 325, 390, 393, 406, 408], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 47, 49, 50, 51, 52, 56, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 115, 116, 119, 124, 125, 128, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 154, 155, 157, 159, 162, 164, 165, 166, 167, 175, 177, 179, 181, 183, 186, 189, 193, 194, 195, 198, 199, 201, 203, 205, 207, 213, 217, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 250, 254, 262, 265, 273, 274, 275, 276, 277, 279, 280, 281, 285, 289, 290, 296, 297, 298, 299, 300, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 329, 330, 331, 332, 333, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 358, 385, 386, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 107, 111, 112, 115, 118, 119, 121, 122, 124, 125, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 151, 152, 154, 156, 158, 159, 161, 162, 163, 165, 166, 175, 176, 177, 181, 186, 189, 191, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 207, 218, 219, 220, 221, 223, 224, 225, 226, 227, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 253, 257, 258, 261, 262, 263, 265, 267, 271, 272, 273, 275, 276, 277, 280, 281, 284, 285, 288, 289, 292, 293, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 336, 337, 338, 358, 365, 377, 381, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 49, 52, 59, 60, 75, 77, 78, 79, 80, 81, 119, 135, 142, 181, 198, 203, 299, 302, 314, 386, 387, 390, 391, 392, 393, 395, 397, 406, 409], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 180, 181, 182, 183, 184, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 213, 216, 217, 219, 229, 230, 235, 239, 241, 242, 245, 246, 255, 256, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 348, 349, 358, 362, 363, 364, 366, 367, 383, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 409], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 86, 175, 183, 268, 269, 270, 285, 304, 312, 321, 383, 390, 402, 404, 408], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 43, 48, 49, 50, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 94, 102, 108, 115, 119, 135, 136, 142, 143, 150, 181, 203, 207, 242, 352, 357, 367, 387, 391, 399, 402], "root": [0, 2, 3, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 135, 158, 196, 216, 235, 236, 239, 262, 263, 393, 394, 402, 403, 404, 405, 406, 409], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 49, 61, 73, 76, 77, 78, 79, 80, 81, 91, 92, 111, 112, 113, 114, 121, 123, 124, 125, 129, 130, 132, 133, 134, 137, 138, 139, 144, 145, 158, 181, 201, 218, 222, 223, 224, 225, 226, 227, 230, 231, 232, 237, 242, 243, 244, 249, 251, 252, 255, 257, 258, 264, 275, 280, 281, 296, 297, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 330, 335, 343, 382, 400, 405, 408], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 73, 76, 77, 79, 111, 112, 113, 114, 118, 121, 124, 125, 129, 130, 132, 133, 137, 138, 139, 144, 145, 155, 201, 218, 395, 399, 402, 403, 408], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 76, 79, 80, 111, 112, 113, 114, 121, 123, 124, 125, 129, 130, 132, 133, 137, 138, 139, 144, 145, 218, 405, 408], "setup": [0, 7, 111, 112, 123, 124, 125], "py": [0, 3, 24, 118, 120, 150, 255, 264, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409], "develop": [0, 3, 4, 7, 123, 390, 408], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 33, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 101, 105, 106, 107, 108, 109, 115, 117, 119, 121, 122, 135, 136, 139, 142, 143, 148, 151, 153, 154, 155, 157, 161, 166, 172, 175, 181, 182, 184, 191, 195, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 216, 219, 220, 221, 230, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 246, 247, 249, 250, 265, 271, 272, 273, 274, 275, 276, 279, 282, 283, 286, 288, 289, 292, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 328, 330, 331, 332, 333, 334, 336, 348, 351, 352, 355, 357, 360, 367, 369, 377, 386, 389, 390, 392, 395, 396, 397, 400, 404, 407, 409], "seri": [0, 2, 3, 7, 8, 85, 95, 105, 106, 109, 110, 142, 176, 198, 350, 385, 386, 390, 391, 392, 398, 399, 402, 403, 406, 409], "quick": [0, 73], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 54, 75, 81, 115, 119, 135, 136, 142, 143, 154, 157, 196, 198, 207, 218, 316, 384, 385, 386, 390, 391, 392, 393, 395, 399, 402, 403, 404, 406, 409], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 92, 94, 97, 98, 99, 100, 105, 107, 113, 114, 115, 116, 118, 119, 120, 121, 123, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 151, 154, 155, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 171, 175, 176, 177, 181, 182, 185, 186, 189, 190, 194, 195, 196, 197, 198, 199, 201, 203, 205, 207, 216, 217, 220, 221, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 265, 267, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 344, 345, 346, 347, 348, 354, 357, 362, 364, 367, 369, 371, 377, 381, 384, 386, 390, 391, 392, 393, 394, 396, 398, 399, 401, 402, 403, 404, 406, 408, 409], "hurri": [0, 394], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 62, 64, 65, 66, 67, 68, 75, 98, 99, 100, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 139, 142, 143, 151, 154, 157, 171, 177, 182, 194, 196, 197, 220, 221, 233, 235, 237, 239, 240, 243, 244, 251, 259, 262, 265, 271, 272, 273, 276, 279, 286, 299, 330, 332, 333, 391, 392, 393, 394, 395, 402, 403, 404, 405, 406, 408, 409], "item": [0, 2, 8, 14, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 52, 55, 56, 62, 63, 64, 65, 66, 67, 68, 82, 92, 98, 105, 151, 170, 243, 244, 300, 301, 303, 358, 386, 387, 390, 392, 393, 396, 397, 402, 403, 404, 406], "navig": [0, 403], "previou": [0, 3, 4, 10, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 135, 136, 142, 143, 195, 207, 217, 233, 237, 258, 273, 392, 393, 394, 395, 399, 404, 409], "whenev": [0, 1, 2, 3, 23, 43, 49, 52, 59, 60, 73, 79, 91, 92, 99, 100, 113, 114, 118, 120, 121, 129, 130, 139, 144, 145, 150, 174, 199, 204, 314, 330, 331, 332, 333, 348, 369, 385, 398, 406], "want": [0, 2, 3, 6, 7, 8, 100, 177, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 385, 390, 391, 392, 393, 394, 396, 397, 398, 402, 403, 404, 405, 406, 408, 409], "ted": [0, 34, 44, 57, 58, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 383, 389, 400, 407], "s": [0, 1, 2, 3, 6, 7, 8, 11, 30, 43, 48, 49, 50, 52, 53, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 100, 105, 111, 112, 115, 119, 123, 124, 125, 129, 130, 132, 135, 136, 137, 138, 142, 143, 144, 145, 158, 162, 181, 193, 195, 197, 198, 199, 201, 203, 205, 207, 209, 220, 221, 235, 239, 244, 245, 246, 249, 255, 264, 268, 270, 271, 272, 275, 276, 279, 282, 285, 286, 289, 297, 299, 304, 310, 312, 314, 319, 321, 330, 331, 332, 333, 334, 348, 385, 389, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 105, 111, 112, 115, 119, 128, 131, 134, 135, 136, 142, 143, 150, 157, 162, 166, 168, 175, 181, 182, 194, 195, 198, 199, 201, 203, 205, 206, 207, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 330, 331, 332, 333, 334, 348, 367, 374, 377, 383, 386, 387, 389, 391, 392, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409], "optim": [0, 1, 2, 8, 43, 54, 111, 112, 115, 119, 135, 136, 142, 143, 199, 207, 219, 242, 248, 249, 262, 297, 299, 314, 315, 316, 319, 362, 367, 377, 386, 387, 389, 392, 393, 394, 395, 397, 400, 402, 403, 404, 407], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 115, 119, 135, 136, 139, 142, 143, 155, 158, 177, 181, 203, 209, 279, 280, 281, 297, 300, 303, 305, 317, 319, 321, 322, 350, 358, 364, 367, 369, 370, 371, 377, 387, 389, 390, 393, 394, 395, 396, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409], "storag": [0, 1, 8, 34, 43, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 102, 103, 104, 105, 107, 108, 115, 117, 119, 135, 136, 142, 143, 157, 158, 164, 167, 186, 207, 383, 387, 389, 391, 392, 393, 394, 396, 399, 400, 402, 403, 405, 407], "log": [0, 3, 4, 8, 11, 54, 228, 229, 230, 243, 244, 253, 262, 263, 274, 275, 282, 286, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 322, 328, 357, 360, 361, 363, 367, 377, 385, 386, 387, 389, 390, 391, 392, 394, 395, 399, 400, 402, 403, 404, 407, 408], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 43, 115, 119, 123, 128, 135, 136, 137, 138, 142, 143, 205, 207, 381, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 406, 407, 408], "own": [0, 1, 3, 14, 15, 17, 22, 43, 115, 119, 135, 136, 137, 138, 142, 143, 207, 350, 389, 391, 392, 394, 400, 402, 403, 404, 407], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 43, 48, 50, 53, 54, 63, 73, 76, 82, 115, 119, 129, 130, 135, 136, 137, 138, 142, 143, 164, 172, 181, 194, 199, 201, 203, 207, 209, 218, 223, 225, 235, 239, 271, 272, 276, 277, 280, 281, 296, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 330, 367, 369, 377, 383, 387, 389, 391, 394, 397, 398, 400, 405, 406, 407, 409], "loop": [0, 8, 48, 50, 53, 115, 119, 135, 136, 142, 143, 216, 271, 272, 276, 277, 280, 281, 316, 367, 386, 387, 389, 390, 391, 394, 396, 397, 398, 400, 401, 406, 407], "ppo": [0, 4, 8, 282, 286, 298, 313, 316, 383, 385, 389, 390, 391, 395, 396, 400, 402, 407], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 105, 113, 114, 115, 116, 118, 119, 120, 132, 135, 136, 142, 143, 158, 161, 162, 169, 174, 175, 177, 184, 186, 191, 193, 195, 196, 198, 199, 205, 207, 235, 239, 377, 385, 389, 391, 392, 394, 395, 396, 400, 407, 408, 409], "introduct": [0, 386, 389, 394, 400, 402, 403, 407, 409], "multi": [0, 1, 7, 9, 43, 49, 52, 55, 56, 59, 60, 83, 84, 90, 115, 119, 129, 130, 135, 136, 140, 141, 142, 143, 199, 207, 233, 235, 237, 239, 240, 245, 246, 247, 279, 328, 330, 331, 332, 333, 383, 389, 390, 391, 392, 393, 394, 395, 400, 404, 407, 408], "agent": [0, 9, 55, 56, 128, 129, 130, 137, 138, 140, 141, 144, 145, 146, 193, 194, 243, 244, 245, 246, 247, 249, 255, 264, 328, 383, 389, 394, 400, 404, 407], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34, 43, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 235, 239, 241, 242, 279, 285, 314, 348, 349, 350, 371, 372, 373, 377, 379, 380, 381, 383, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 99, 100, 105, 107, 111, 112, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 177, 181, 182, 183, 184, 186, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 207, 209, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 253, 254, 255, 256, 262, 263, 264, 265, 267, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 343, 348, 350, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 375, 377, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409], "pretrain": [0, 389, 400, 407], "recurr": [0, 2, 157, 233, 234, 235, 237, 239, 258, 389, 391, 395, 400, 406, 407], "dqn": [0, 2, 73, 151, 168, 230, 274, 275, 296, 297, 299, 300, 301, 303, 305, 306, 307, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 328, 374, 383, 385, 389, 395, 396, 399, 400, 407], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 43, 57, 111, 112, 115, 119, 131, 135, 136, 142, 143, 166, 175, 194, 208, 214, 215, 230, 235, 239, 245, 246, 249, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 289, 296, 297, 298, 299, 300, 304, 305, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 363, 369, 372, 373, 377, 379, 380, 385, 386, 387, 389, 391, 394, 396, 397, 400, 405, 406, 407, 408, 409], "replai": [0, 8, 16, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 106, 110, 157, 158, 166, 182, 186, 195, 207, 299, 300, 301, 303, 304, 305, 312, 317, 319, 321, 322, 364, 367, 375, 377, 383, 387, 389, 400, 404, 405, 407], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 115, 119, 131, 135, 136, 142, 143, 157, 158, 162, 166, 181, 182, 186, 195, 198, 199, 201, 203, 207, 285, 288, 299, 300, 301, 303, 304, 305, 312, 317, 319, 321, 322, 364, 367, 375, 377, 383, 387, 389, 398, 400, 404, 405, 407, 409], "competit": [0, 3, 129, 130, 389, 400, 403, 407], "ddpg": [0, 223, 224, 225, 226, 300, 311, 320, 383, 385, 389, 391, 396, 400, 403, 407], "task": [0, 2, 3, 9, 54, 55, 56, 63, 76, 79, 113, 114, 115, 119, 122, 129, 130, 135, 136, 137, 138, 139, 142, 143, 144, 145, 181, 193, 199, 201, 203, 304, 312, 389, 390, 391, 392, 393, 394, 395, 400, 402, 403, 404, 407, 408, 409], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 119, 135, 142, 144, 195, 227, 235, 239, 273, 296, 314, 316, 318, 350, 367, 383, 386, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406, 407], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 43, 45, 48, 50, 53, 62, 63, 86, 87, 88, 94, 97, 101, 103, 107, 110, 115, 119, 124, 135, 136, 142, 143, 151, 164, 167, 168, 177, 181, 198, 199, 201, 205, 207, 208, 235, 239, 242, 245, 246, 255, 264, 267, 268, 282, 285, 286, 287, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 371, 372, 373, 376, 377, 381, 383, 385, 387, 389, 391, 392, 393, 397, 399, 400, 402, 403, 404, 406, 407, 409], "loss": [0, 3, 8, 50, 168, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 330, 362, 367, 374, 377, 386, 387, 389, 394, 396, 397, 398, 400, 404, 406, 407, 408], "trainer": [0, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 389, 390, 400, 407], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 174, 175, 177, 179, 181, 183, 184, 185, 186, 189, 191, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 207, 208, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 245, 246, 247, 250, 253, 254, 255, 256, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 323, 324, 328, 330, 331, 332, 333, 336, 348, 350, 358, 359, 360, 361, 362, 364, 365, 366, 369, 377, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409], "packag": [0, 6, 7, 10, 150, 383, 384, 409], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 43, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 93, 94, 98, 99, 100, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 132, 134, 135, 136, 142, 143, 144, 145, 155, 158, 162, 171, 177, 179, 182, 186, 195, 198, 199, 200, 204, 205, 207, 217, 218, 228, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 248, 253, 255, 261, 265, 279, 280, 281, 285, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 358, 361, 364, 365, 366, 367, 369, 379, 380, 381, 383, 385, 386, 387, 391, 392, 393, 394, 397, 399, 401, 402, 403, 405, 408, 409], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 98, 99, 100, 101, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 155, 157, 159, 162, 163, 164, 167, 168, 169, 171, 179, 181, 183, 184, 186, 190, 192, 193, 195, 197, 198, 199, 200, 203, 205, 207, 213, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 250, 253, 254, 255, 256, 257, 258, 261, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 288, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 350, 358, 364, 383, 385, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 408, 409], "interoper": [0, 14, 15, 383], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 35, 41, 43, 48, 49, 50, 52, 53, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 115, 118, 119, 129, 130, 135, 136, 142, 143, 144, 145, 151, 158, 159, 181, 186, 199, 203, 207, 220, 221, 233, 234, 235, 237, 238, 239, 240, 246, 284, 288, 297, 298, 299, 301, 303, 305, 306, 312, 313, 316, 317, 319, 321, 322, 330, 331, 332, 333, 339, 340, 341, 342, 344, 345, 346, 347, 348, 381, 383, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406], "node": [0, 2, 18, 19, 20, 21, 22, 30, 31, 37, 48, 50, 53, 56, 81, 383, 397], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 52, 59, 60, 94, 137, 138, 175, 177, 219, 228, 229, 230, 231, 236, 242, 243, 244, 250, 253, 254, 257, 258, 261, 262, 263, 271, 272, 273, 274, 275, 282, 286, 287, 296, 297, 298, 299, 304, 305, 306, 312, 313, 316, 317, 318, 319, 321, 322, 383, 387, 391, 392, 395, 397, 402, 403, 404, 408, 409], "helper": [0, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 390, 391, 393, 402, 404], "compos": [0, 3, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 93, 94, 95, 96, 105, 106, 115, 119, 135, 136, 142, 143, 158, 185, 198, 199, 205, 207, 278, 279, 299, 308, 319, 350, 383, 390, 391, 392, 393, 397, 401, 403, 404, 406, 408, 409], "episod": [0, 3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 99, 100, 115, 119, 135, 136, 142, 143, 154, 186, 189, 194, 216, 219, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 383, 391, 394, 399, 402, 403, 406], "format": [0, 3, 34, 41, 42, 43, 44, 47, 57, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 97, 105, 115, 119, 135, 136, 137, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 350, 383, 390, 391, 394, 396, 398, 409], "tensorspec": [0, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 115, 119, 131, 135, 136, 142, 143, 144, 145, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 177, 179, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 217, 258, 267, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 297, 299, 301, 304, 305, 317, 319, 321, 322, 328, 383, 404], "human": [0, 24, 77, 383, 404], "feedback": [0, 383, 399, 408], "rlhf": [0, 54, 63, 82, 175, 383, 385], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 116, 119, 135, 136, 142, 143, 152, 155, 164, 167, 176, 183, 184, 198, 199, 205, 207, 209, 219, 235, 239, 241, 242, 363, 371, 372, 373, 377, 379, 380, 381, 383, 394, 409], "gymlikeenv": [0, 118, 120, 383], "envmetadata": [0, 383], "vector": [0, 1, 8, 25, 111, 112, 120, 124, 125, 128, 137, 138, 139, 144, 145, 166, 204, 223, 225, 233, 234, 237, 238, 240, 330, 333, 343, 344, 345, 346, 347, 383, 386, 390, 391, 393, 401, 402, 403, 404, 405, 409], "custom": [0, 2, 5, 43, 115, 119, 135, 136, 142, 143, 201, 207, 245, 246, 289, 306, 316, 323, 381, 383, 385, 390, 391, 392, 393, 395, 396, 398, 402, 403], "nativ": [0, 1, 7, 9, 77, 115, 119, 135, 136, 142, 143, 158, 350, 383, 393, 406], "auto": [0, 87, 107, 153, 154, 204, 280, 281, 297, 299, 305, 315, 317, 319, 321, 322, 383, 386, 402, 403], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 153, 154, 155, 158, 168, 171, 174, 176, 181, 189, 193, 194, 195, 196, 198, 199, 201, 204, 205, 207, 209, 217, 233, 235, 239, 247, 266, 279, 280, 281, 314, 349, 383, 386, 390, 391, 392, 393, 394, 397, 401, 402, 403, 408], "dynam": [0, 2, 7, 14, 15, 16, 76, 79, 81, 115, 135, 142, 207, 304, 312, 383, 392, 394, 404], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 111, 112, 115, 117, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 139, 142, 143, 144, 145, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 179, 181, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 213, 216, 217, 230, 235, 239, 256, 258, 267, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 288, 289, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 383, 385, 390, 391, 392, 393, 394, 395, 399, 401, 402, 403, 408], "mask": [0, 1, 4, 23, 25, 26, 29, 33, 39, 40, 41, 42, 47, 137, 138, 143, 152, 182, 207, 230, 243, 244, 256, 273, 274, 275, 276, 277, 283, 284, 364, 383, 391, 393, 409], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 34, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 155, 161, 164, 166, 167, 168, 169, 172, 175, 176, 179, 183, 184, 186, 190, 193, 199, 204, 208, 213, 216, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 239, 240, 241, 242, 243, 244, 245, 254, 255, 256, 258, 261, 262, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 289, 290, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 377, 381, 383, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 401, 402, 403, 405, 406, 408, 409], "record": [0, 2, 11, 43, 115, 119, 135, 136, 142, 143, 148, 151, 175, 207, 316, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 377, 383, 391, 392, 395, 399, 402], "domain": [0, 2, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 166, 195, 213, 267, 274, 275, 282, 283, 284, 285, 286, 287, 288, 293, 383, 392, 393, 395, 396, 402, 403, 404, 408, 409], "actor": [0, 3, 4, 21, 175, 208, 219, 222, 223, 225, 230, 231, 242, 254, 256, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 328, 383, 386, 391, 393, 394, 396, 399, 402, 405, 408], "explor": [0, 1, 206, 249, 267, 271, 272, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 296, 314, 363, 372, 373, 377, 383, 392, 393, 394, 396, 397, 399, 402, 403, 404], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 99, 100, 105, 115, 119, 128, 135, 136, 142, 143, 150, 151, 154, 156, 158, 159, 161, 164, 166, 167, 168, 176, 177, 181, 182, 185, 186, 187, 189, 191, 195, 196, 198, 199, 203, 205, 207, 213, 217, 218, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 236, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 253, 255, 256, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 358, 360, 361, 362, 363, 364, 367, 377, 383, 387, 391, 396, 397, 398, 401, 402, 403, 404, 406, 408, 409], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 96, 98, 115, 116, 119, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 155, 162, 164, 165, 169, 175, 177, 183, 184, 189, 190, 193, 195, 198, 204, 207, 217, 228, 235, 239, 243, 244, 253, 267, 282, 286, 290, 291, 310, 317, 324, 330, 335, 343, 353, 367, 383, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "hook": [0, 2, 34, 43, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 108, 115, 119, 135, 136, 142, 143, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 256, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 383], "planner": [0, 219, 242, 383], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 95, 98, 99, 100, 105, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 169, 175, 177, 179, 181, 183, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 207, 208, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 352, 358, 365, 366, 377, 383, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "vmap": [0, 233, 234, 237, 238, 247, 265, 285, 288, 314, 383, 385, 408], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 79, 81, 93, 105, 115, 119, 131, 135, 136, 142, 143, 151, 166, 176, 177, 195, 208, 209, 233, 235, 237, 239, 276, 282, 285, 286, 293, 297, 314, 317, 363, 371, 383, 385, 390, 391, 392, 393, 394, 395, 397, 404, 405, 406, 408, 409], "sac": [0, 305, 317, 319, 383], "redq": [0, 317, 383], "crossq": [0, 299, 383], "iql": [0, 304, 312, 383, 390, 402, 403], "cql": [0, 297, 303, 383], "gail": [0, 310, 383], "dt": [0, 136, 280, 281, 383, 404], "td3": [0, 321, 322, 383], "bc": [0, 5, 321, 383, 408], "a2c": [0, 296, 383], "dreamer": [0, 148, 149, 231, 307, 308, 309, 383, 385], "checkpoint": [0, 52, 84, 86, 89, 101, 102, 104, 108, 383, 405, 406], "builder": [0, 383, 391, 409], "logger": [0, 3, 11, 348, 350, 352, 353, 354, 355, 356, 357, 361, 367, 377, 381, 383, 391, 402], "_util": [0, 3, 12, 383, 399], "implement_for": [0, 3, 383], "thing": [0, 3, 7, 8, 115, 119, 135, 136, 142, 143, 245, 246, 384, 392, 393, 394, 395, 396, 397, 398, 402, 403, 406, 409], "consid": [0, 1, 2, 3, 8, 20, 30, 31, 37, 43, 49, 52, 56, 59, 60, 86, 87, 107, 115, 119, 135, 136, 142, 143, 166, 205, 207, 228, 245, 246, 261, 297, 299, 312, 317, 319, 321, 322, 330, 332, 333, 384, 390, 394, 395, 396, 404, 406], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 98, 99, 100, 101, 103, 107, 115, 116, 118, 119, 120, 128, 129, 130, 132, 134, 135, 136, 137, 138, 142, 143, 144, 145, 152, 154, 157, 158, 162, 164, 166, 167, 175, 176, 177, 181, 182, 189, 195, 198, 199, 201, 203, 204, 205, 207, 214, 215, 216, 218, 219, 230, 233, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 256, 262, 279, 282, 285, 286, 288, 292, 297, 298, 299, 301, 306, 312, 313, 314, 316, 317, 319, 321, 322, 323, 328, 329, 330, 331, 332, 333, 348, 349, 350, 352, 364, 381, 384, 385, 386, 387, 390, 391, 392, 393, 395, 397, 398, 402, 403, 404, 405, 406, 409], "debug": [0, 6, 8, 54, 73, 74, 75, 76, 77, 78, 79, 80, 81, 384, 409], "work": [0, 1, 2, 3, 4, 8, 12, 43, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 92, 97, 99, 100, 103, 110, 115, 118, 119, 120, 123, 135, 136, 139, 142, 143, 159, 175, 181, 201, 204, 205, 207, 216, 220, 221, 240, 275, 284, 289, 298, 313, 316, 367, 384, 385, 390, 391, 392, 393, 394, 397, 401, 402, 403, 404, 405, 406, 408, 409], "habitat": [0, 3, 121, 384, 405], "lab": [0, 3, 113, 114, 121, 384], "mujoco": [0, 6, 8, 139, 384, 390, 392, 393], "error": [0, 1, 3, 7, 10, 12, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 50, 53, 55, 115, 119, 135, 136, 142, 143, 146, 182, 207, 209, 314, 384, 386, 390, 392, 402, 403, 409], "solut": [0, 2, 3, 6, 7, 9, 21, 384, 385, 387, 408], "resourc": [0, 1, 21, 121, 384, 390, 392, 402, 403], "issu": [0, 3, 4, 5, 8, 73, 77, 84, 86, 87, 107, 118, 123, 158, 182, 196, 216, 267, 274, 275, 282, 283, 284, 285, 286, 384, 408], "customis": [0, 384, 391, 398, 402, 403], "video": [0, 4, 9, 350, 352, 363, 381, 383, 384, 399, 402, 403], "render": [0, 3, 8, 125, 144, 348, 350, 363, 384, 390, 391, 392, 394, 398], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 91, 92, 94, 95, 97, 103, 105, 106, 107, 109, 110, 115, 119, 129, 130, 135, 136, 142, 143, 144, 145, 153, 158, 162, 166, 199, 216, 243, 244, 383, 394, 401, 402, 403, 406, 408], "search": [0, 134, 217, 391], "page": [0, 7, 24, 357, 396], "somewhat": [1, 2, 386, 395, 409], "equival": [1, 3, 25, 26, 29, 30, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 139, 142, 143, 155, 165, 168, 199, 207, 230, 237, 240, 256, 274, 275, 283, 284, 316, 364, 397, 408, 409], "dataload": [1, 82, 98, 100, 391, 397, 406], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 135, 136, 142, 143, 158, 170, 186, 194, 195, 196, 199, 207, 233, 235, 237, 239, 253, 271, 272, 276, 277, 280, 281, 299, 314, 319, 350, 385, 391, 394, 402, 406, 408, 409], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 172, 175, 177, 179, 181, 182, 183, 184, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 207, 208, 213, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 292, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 308, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 344, 345, 347, 348, 350, 358, 363, 364, 365, 377, 381, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 115, 118, 119, 120, 128, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 154, 157, 170, 175, 181, 190, 198, 199, 203, 207, 239, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 364, 367, 385, 386, 387, 390, 391, 392, 393, 396, 401, 402, 403, 404, 405, 406, 408, 409], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 79, 92, 94, 98, 99, 115, 119, 129, 130, 135, 136, 142, 143, 151, 166, 177, 189, 196, 207, 216, 262, 265, 288, 306, 308, 314, 336, 348, 370, 387, 390, 391, 392, 394, 395, 396, 397, 402, 403, 404, 409], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 30, 31, 37, 38, 43, 45, 46, 48, 49, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 79, 88, 115, 119, 135, 136, 137, 138, 142, 143, 155, 156, 162, 171, 181, 195, 198, 199, 200, 201, 203, 207, 216, 233, 235, 237, 239, 245, 285, 286, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 308, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 385, 390, 393, 402, 403, 404, 406, 409], "static": [1, 12, 54, 63, 92, 99, 100, 121, 136, 205, 312, 394, 404, 406], "like": [1, 2, 3, 4, 7, 11, 21, 30, 31, 37, 43, 45, 49, 52, 56, 59, 60, 63, 88, 94, 100, 115, 119, 121, 128, 135, 136, 137, 138, 142, 143, 168, 195, 197, 207, 209, 233, 237, 246, 278, 296, 298, 313, 316, 317, 318, 386, 390, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 409], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 55, 82, 105, 108, 115, 118, 119, 120, 121, 135, 136, 139, 142, 143, 157, 164, 166, 167, 176, 184, 195, 199, 207, 214, 215, 235, 239, 276, 280, 281, 298, 299, 313, 314, 316, 319, 350, 364, 369, 379, 380, 381, 385, 390, 391, 392, 393, 397, 402, 403, 404, 406], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 43, 52, 64, 76, 77, 80, 81, 82, 115, 119, 131, 135, 136, 142, 143, 153, 158, 162, 171, 181, 189, 195, 198, 199, 200, 201, 203, 207, 240, 265, 285, 286, 287, 299, 319, 350, 387, 392, 394, 398, 406, 409], "two": [1, 2, 3, 4, 8, 10, 39, 40, 41, 42, 43, 49, 52, 54, 59, 60, 79, 94, 98, 100, 115, 119, 135, 136, 142, 143, 155, 177, 181, 203, 207, 226, 233, 235, 237, 239, 245, 246, 259, 262, 286, 313, 321, 325, 363, 367, 386, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 406, 408, 409], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 81, 116, 286, 367, 385, 386, 390, 391, 401, 409], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 91, 92, 94, 97, 98, 99, 100, 103, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 139, 142, 143, 144, 145, 154, 155, 159, 161, 162, 181, 189, 190, 193, 195, 197, 198, 199, 201, 203, 207, 216, 218, 220, 221, 233, 235, 237, 239, 240, 243, 244, 245, 246, 248, 265, 267, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 324, 328, 330, 331, 332, 333, 334, 338, 348, 349, 350, 357, 360, 370, 377, 378, 381, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 406, 409], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 97, 98, 99, 100, 101, 103, 113, 114, 115, 118, 119, 120, 121, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 156, 157, 161, 164, 167, 175, 177, 179, 181, 189, 191, 197, 199, 201, 203, 205, 207, 216, 220, 221, 223, 229, 232, 235, 239, 240, 243, 244, 251, 256, 275, 279, 283, 284, 286, 288, 289, 290, 297, 299, 312, 314, 317, 319, 321, 322, 327, 330, 333, 348, 349, 363, 364, 379, 380, 385, 386, 390, 392, 394, 395, 396, 397, 401, 402, 404, 405, 406, 408, 409], "constructor": [1, 2, 16, 18, 19, 20, 21, 52, 63, 79, 91, 105, 115, 119, 132, 135, 136, 142, 143, 144, 154, 198, 220, 221, 240, 282, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 378, 381, 385, 390, 391, 392, 394, 397, 402, 403, 406], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 94, 98, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 169, 177, 190, 207, 218, 220, 221, 240, 245, 246, 260, 267, 274, 282, 283, 285, 287, 288, 290, 314, 327, 363, 366, 367, 386, 387, 390, 392, 393, 397, 399, 402, 403, 404], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 51, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 111, 112, 115, 116, 119, 120, 121, 123, 124, 125, 131, 132, 135, 136, 139, 142, 143, 152, 199, 207, 233, 235, 237, 239, 247, 276, 279, 287, 288, 314, 321, 371, 381, 385, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 406, 407, 409], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 54, 73, 83, 84, 90, 92, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 152, 157, 171, 174, 177, 193, 194, 195, 196, 199, 204, 207, 216, 217, 218, 219, 231, 233, 235, 237, 239, 241, 242, 271, 272, 276, 277, 279, 280, 281, 282, 286, 296, 307, 316, 329, 330, 331, 332, 333, 336, 337, 338, 349, 352, 358, 363, 367, 387, 391, 393, 395, 396, 398, 399, 401, 404, 405, 408], "queri": [1, 3, 14, 43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 181, 198, 201, 205, 207, 288, 386, 390, 396, 404, 408], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 135, 136, 142, 143, 182, 194, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 245, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 293, 301, 303, 314, 330, 331, 332, 333, 334, 349, 378, 390, 391, 393, 396, 399, 404, 406, 409], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 97, 99, 100, 107, 111, 112, 115, 118, 119, 120, 124, 125, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 151, 157, 158, 166, 172, 176, 177, 188, 193, 196, 199, 205, 207, 218, 219, 220, 221, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 250, 251, 252, 255, 257, 258, 261, 262, 263, 264, 267, 271, 272, 273, 276, 277, 279, 280, 281, 282, 285, 286, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 358, 360, 363, 367, 369, 370, 371, 379, 380, 381, 385, 386, 390, 391, 392, 393, 394, 395, 397, 399, 402, 403, 404, 405, 406, 409], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 43, 63, 78, 98, 105, 115, 119, 135, 136, 142, 143, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 207, 209, 233, 235, 239, 240, 248, 249, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 331, 332, 333, 364, 390, 392, 393, 397, 398, 402, 403, 404, 406, 409], "deliv": [1, 2, 3, 16, 79, 390, 391, 394, 397, 408], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 38, 48, 49, 50, 52, 53, 56, 59, 60, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 115, 118, 119, 120, 128, 135, 136, 137, 138, 142, 143, 205, 233, 235, 237, 238, 239, 279, 287, 288, 297, 299, 312, 317, 319, 321, 322, 349, 358, 383, 385, 391, 394, 401, 402, 404, 408], "user": [1, 2, 3, 5, 8, 23, 43, 73, 75, 79, 81, 92, 100, 115, 119, 135, 136, 142, 143, 159, 194, 199, 207, 209, 227, 299, 316, 319, 321, 350, 378, 386, 387, 390, 391, 394, 396, 397, 404, 408, 409], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 54, 98, 115, 119, 129, 130, 135, 136, 142, 143, 144, 145, 193, 271, 272, 276, 277, 280, 281, 390, 392, 399, 402, 403, 408, 409], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 94, 99, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 158, 164, 165, 167, 168, 169, 176, 177, 179, 183, 184, 186, 188, 190, 193, 195, 196, 198, 199, 205, 207, 216, 217, 219, 233, 235, 239, 242, 279, 296, 297, 298, 299, 300, 301, 303, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 385, 386, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "state": [1, 2, 3, 4, 14, 15, 16, 17, 34, 43, 49, 52, 54, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 94, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 157, 158, 159, 161, 168, 177, 184, 193, 194, 198, 199, 205, 207, 209, 216, 217, 219, 222, 227, 231, 233, 234, 235, 237, 238, 239, 240, 242, 247, 251, 254, 255, 257, 258, 264, 268, 279, 285, 291, 296, 298, 299, 303, 313, 314, 316, 317, 318, 319, 328, 329, 330, 331, 332, 333, 334, 381, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 402, 403, 404, 409], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 34, 43, 48, 50, 53, 54, 73, 94, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 132, 133, 135, 136, 139, 142, 143, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 176, 177, 179, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 216, 218, 233, 235, 239, 248, 271, 272, 274, 276, 283, 299, 308, 319, 321, 391, 392, 393, 394, 395, 397, 399, 402, 403, 404, 405, 406, 409], "predefin": [1, 391, 393, 397, 406], "becaus": [1, 3, 4, 7, 48, 50, 53, 54, 73, 115, 119, 135, 136, 142, 143, 168, 175, 193, 198, 204, 207, 226, 246, 267, 274, 275, 279, 282, 283, 284, 285, 286, 385, 390, 391, 393, 395, 396, 397, 401, 402, 403, 404, 406, 409], "potenti": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 404, 406], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 43, 54, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 177, 191, 199, 202, 207, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 250, 251, 252, 253, 254, 257, 258, 260, 262, 263, 265, 268, 271, 272, 273, 275, 276, 279, 280, 281, 282, 284, 286, 289, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 371, 386, 390, 392, 393, 394, 395, 401, 402, 403, 405, 406], "heavi": [1, 8, 73, 406], "crucial": [1, 2, 3, 271, 272, 276, 277, 280, 281, 304, 312, 314, 390, 391, 392, 393, 394, 396, 398, 402, 403, 404, 409], "configur": [1, 8, 21, 22, 54, 175, 222, 227, 254, 314, 316, 385, 390, 391, 392, 396, 402, 403, 404], "hyperparamet": [1, 97, 207, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 390, 398, 404, 406], "appropri": [1, 3, 4, 7, 85, 95, 105, 106, 109, 110, 135, 142, 168, 378, 381, 390, 398, 406], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 97, 98, 101, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 381, 385, 386, 390, 393, 395, 399, 402, 403, 404, 405, 408], "take": [1, 2, 3, 8, 23, 54, 76, 102, 108, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 161, 193, 196, 198, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 245, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 289, 292, 295, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 358, 369, 385, 387, 390, 391, 392, 394, 395, 396, 402, 403, 404, 406, 409], "consider": [1, 2, 3, 8, 118, 120, 391, 402, 403, 406], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 125, 129, 130, 131, 135, 136, 137, 138, 142, 143, 144, 145, 154, 164, 167, 194, 199, 205, 207, 217, 220, 221, 235, 239, 240, 290, 296, 297, 298, 299, 300, 301, 303, 305, 306, 310, 313, 314, 316, 317, 318, 319, 321, 322, 328, 330, 333, 390, 391, 392, 394, 402, 403, 404, 409], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 94, 99, 100, 101, 105, 108, 113, 114, 115, 118, 119, 120, 121, 125, 128, 131, 135, 136, 137, 138, 142, 143, 144, 145, 151, 154, 155, 158, 161, 162, 164, 165, 168, 169, 171, 175, 177, 182, 183, 184, 186, 189, 190, 193, 194, 196, 198, 199, 204, 205, 207, 209, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 245, 246, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 282, 284, 285, 286, 289, 292, 296, 298, 299, 305, 311, 313, 314, 316, 317, 318, 320, 321, 329, 330, 331, 332, 333, 334, 350, 352, 362, 363, 364, 367, 377, 379, 380, 381, 385, 387, 390, 391, 392, 393, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "occur": [1, 8, 15, 55, 56, 73, 115, 119, 121, 135, 136, 142, 143, 159, 169, 177, 182, 204, 217, 218, 267, 274, 275, 282, 283, 284, 285, 286, 308, 406, 409], "serial": [1, 2, 3, 43, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 135, 136, 142, 143, 205, 207], "parallel": [1, 3, 8, 115, 118, 119, 120, 135, 136, 137, 138, 142, 143, 199, 204, 209, 235, 239, 296, 378, 379, 380, 381, 391, 392, 402, 403], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 34, 43, 57, 155, 158, 186, 235, 239, 377, 380, 383, 390, 391, 392, 393, 397, 399, 402, 403, 406], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 128, 131, 134, 135, 136, 137, 138, 139, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 379, 380, 381, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 406, 409], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 48, 50, 53, 62, 63, 76, 81, 82, 116, 132, 135, 142, 205, 379, 380, 381, 390, 391, 392, 408, 409], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 380, 383, 392, 397, 408], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 36, 48, 50, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 99, 100, 128, 137, 138, 233, 237, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 385, 387, 392, 395, 406, 408], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 49, 52, 59, 60, 92, 99, 100, 111, 112, 113, 114, 118, 120, 121, 123, 124, 125, 132, 133, 135, 139, 143, 205, 207, 235, 239, 245, 280, 281, 314, 369, 383, 385, 386, 390, 394, 398, 402, 403, 404], "aggreg": [1, 3, 73, 92, 105, 137, 138, 217, 220, 221, 223, 224, 288], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 43, 48, 49, 50, 51, 52, 53, 59, 60, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 100, 115, 116, 119, 135, 136, 142, 143, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 176, 177, 179, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 209, 216, 217, 233, 235, 237, 239, 240, 245, 256, 262, 271, 273, 275, 276, 284, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 369, 385, 386, 391, 393, 394, 395, 398, 399, 404, 405, 408, 409], "final": [1, 2, 3, 4, 21, 48, 50, 53, 54, 195, 204, 233, 235, 237, 239, 245, 271, 272, 276, 277, 278, 280, 281, 287, 330, 363, 385, 390, 391, 392, 398, 399, 402, 403, 404, 409], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 379, 383, 390, 391, 392, 397, 408], "sever": [1, 2, 3, 8, 39, 43, 63, 76, 115, 119, 135, 136, 142, 143, 159, 161, 199, 207, 316, 390, 392, 398, 399, 406, 409], "gather": [1, 3, 18, 20, 21, 63, 82, 86, 87, 92, 99, 107, 182, 244, 247, 253, 314, 329, 371, 384, 391, 392, 393, 397, 402, 403, 404, 406, 409], "continu": [1, 2, 9, 27, 30, 64, 65, 66, 100, 115, 119, 135, 136, 137, 138, 142, 143, 144, 145, 151, 213, 223, 224, 225, 226, 280, 281, 288, 293, 297, 320, 330, 335, 343, 385, 390, 392, 393, 395, 402, 403, 404, 406, 408, 409], "concomitantli": [1, 115, 119, 135, 136, 142, 143], "network": [1, 4, 8, 43, 115, 119, 128, 135, 136, 137, 138, 142, 143, 207, 220, 221, 223, 224, 225, 226, 229, 231, 232, 237, 240, 245, 246, 247, 249, 251, 252, 255, 257, 258, 259, 264, 268, 269, 270, 273, 285, 289, 297, 298, 299, 300, 301, 303, 304, 305, 306, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 326, 328, 330, 331, 332, 333, 334, 376, 377, 385, 386, 387, 396, 399, 401, 404, 409], "impli": [1, 409], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 54, 92, 94, 97, 111, 112, 115, 119, 135, 136, 140, 141, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 233, 234, 235, 237, 238, 239, 245, 247, 249, 285, 296, 297, 298, 299, 305, 308, 319, 321, 369, 376, 385, 387, 390, 391, 392, 393, 401, 404, 406, 408], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 43, 48, 50, 53, 55, 56, 62, 75, 81, 84, 92, 115, 118, 119, 120, 121, 135, 136, 139, 142, 143, 175, 177, 190, 199, 200, 205, 207, 209, 218, 235, 239, 240, 245, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 408, 409], "slightli": [1, 23, 73, 385, 386, 393, 402, 404, 405, 406, 409], "lag": [1, 390, 391, 392], "therefor": [1, 2, 3, 7, 49, 52, 59, 60, 80, 81, 115, 119, 135, 136, 142, 143, 186, 316, 328, 396, 402, 409], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 34, 36, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 92, 94, 99, 100, 105, 107, 108, 115, 119, 128, 131, 134, 135, 136, 137, 138, 142, 143, 151, 152, 155, 158, 168, 175, 181, 186, 189, 193, 194, 196, 198, 200, 203, 204, 216, 217, 233, 234, 235, 237, 238, 239, 243, 244, 245, 271, 272, 276, 277, 280, 281, 282, 285, 286, 295, 296, 297, 298, 299, 304, 305, 306, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 386, 387, 390, 391, 392, 394, 401, 402, 403, 404, 406, 409], "asynchron": [1, 9, 15, 21, 43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 296, 379, 390, 391, 392], "off": [1, 2, 4, 236, 263, 274, 319, 348, 363, 372, 385, 387, 390, 391, 392, 395, 396, 402, 403, 405, 409], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 107, 115, 118, 119, 120, 135, 136, 137, 138, 142, 143, 144, 164, 167, 171, 177, 194, 199, 204, 207, 209, 230, 233, 235, 237, 239, 246, 248, 268, 270, 273, 275, 283, 296, 304, 306, 312, 316, 363, 385, 387, 390, 391, 392, 393, 394, 395, 397, 398, 402, 403, 404, 405, 406, 409], "remot": [1, 2, 18, 19, 20, 21, 135, 142, 409], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 54, 105, 111, 112, 115, 119, 121, 122, 124, 125, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 158, 161, 164, 167, 168, 169, 175, 179, 183, 184, 189, 190, 191, 193, 194, 196, 205, 207, 209, 219, 235, 239, 242, 279, 280, 281, 296, 348, 350, 371, 385, 390, 392, 393, 395, 396, 397, 398, 399, 405, 406, 408], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 115, 119, 129, 130, 135, 136, 142, 143, 144, 145, 190, 317, 330, 331, 332, 333, 334, 386, 390, 392, 395, 396, 397], "synchronis": [1, 116, 402, 403], "either": [1, 2, 5, 22, 25, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 94, 115, 119, 135, 136, 142, 143, 193, 194, 207, 291, 314, 321, 322, 354, 387, 390, 391, 393, 402, 405, 406, 408, 409], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 390, 403, 408], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 91, 92, 94, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 157, 158, 159, 162, 166, 169, 171, 174, 175, 176, 177, 181, 182, 184, 185, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 203, 205, 207, 209, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 262, 263, 267, 268, 269, 270, 272, 274, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 296, 297, 298, 299, 300, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 325, 330, 331, 332, 333, 336, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 357, 360, 361, 363, 364, 367, 381, 385, 386, 387, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "second": [1, 3, 8, 23, 39, 40, 41, 42, 73, 76, 105, 155, 233, 235, 237, 239, 275, 298, 313, 316, 319, 352, 366, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 155, 162, 164, 165, 167, 168, 169, 175, 179, 180, 181, 183, 184, 186, 190, 193, 195, 197, 198, 199, 201, 203, 205, 207, 213, 216, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 245, 246, 248, 249, 254, 255, 256, 264, 267, 268, 269, 270, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 288, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 348, 364, 369, 375, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 92, 99, 115, 119, 135, 136, 142, 143, 155, 171, 175, 198, 207, 229, 230, 234, 238, 250, 268, 269, 270, 274, 275, 278, 285, 291, 296, 298, 300, 301, 306, 313, 316, 318, 328, 329, 330, 331, 332, 333, 367, 383, 386, 387, 390, 391, 392, 393, 394, 395, 401, 402, 403, 404, 409], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 43, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 90, 92, 94, 99, 100, 107, 114, 115, 116, 118, 119, 120, 131, 135, 136, 142, 143, 158, 177, 195, 198, 199, 205, 207, 213, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 245, 246, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 292, 297, 299, 301, 304, 305, 312, 314, 317, 319, 321, 322, 328, 330, 331, 332, 333, 348, 350, 354, 363, 371, 372, 373, 377, 379, 380, 385, 386, 387, 390, 392, 393, 394, 395, 404, 406, 409], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 155, 162, 164, 165, 167, 168, 169, 179, 181, 183, 184, 186, 190, 193, 195, 198, 199, 201, 203, 207, 213, 216, 219, 229, 233, 234, 235, 237, 238, 239, 242, 248, 249, 255, 256, 264, 267, 268, 269, 270, 273, 274, 275, 279, 280, 282, 283, 284, 285, 288, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 348, 364, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 73, 75, 79, 92, 99, 100, 103, 105, 115, 119, 123, 135, 136, 139, 142, 143, 184, 226, 235, 237, 239, 240, 250, 265, 267, 271, 272, 274, 285, 290, 314, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 384, 386, 390, 391, 392, 394, 396, 397, 402, 403, 404, 406, 408, 409], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 94, 95, 99, 100, 101, 103, 105, 106, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 152, 155, 158, 161, 164, 165, 166, 167, 176, 177, 181, 186, 189, 192, 194, 195, 196, 198, 199, 200, 203, 205, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 246, 247, 250, 251, 252, 253, 254, 256, 257, 258, 260, 265, 267, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 292, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 328, 330, 331, 332, 333, 337, 338, 352, 360, 362, 363, 367, 371, 381, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 409], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 111, 112, 115, 119, 121, 122, 123, 135, 136, 142, 143, 162, 175, 180, 181, 195, 198, 199, 201, 203, 207, 233, 234, 237, 238, 285, 359, 390, 391, 392, 393, 402, 403, 405, 409], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 61, 94, 111, 112, 124, 125, 135, 142, 143, 159, 161, 166, 174, 176, 186, 189, 193, 198, 205, 233, 237, 239, 245, 248, 249, 267, 274, 282, 283, 285, 286, 289, 298, 305, 313, 316, 336, 381, 385, 386, 387, 390, 391, 392, 394, 396, 397, 402, 403, 404, 406, 408], "infer": [1, 135, 142, 158, 205, 235, 239, 248, 273, 282, 303, 348, 390, 392, 397, 399, 406], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 43, 73, 76, 92, 99, 100, 111, 112, 113, 114, 115, 118, 119, 124, 125, 131, 132, 133, 135, 136, 142, 143, 176, 177, 199, 205, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 287, 288, 289, 292, 299, 319, 350, 357, 363, 379, 380, 381, 384, 387, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408], "dispatch": [1, 18, 19, 20, 21, 265, 279, 350, 390], "avail": [1, 2, 3, 4, 6, 21, 49, 52, 59, 60, 73, 76, 81, 92, 98, 99, 100, 113, 114, 123, 129, 130, 135, 137, 138, 139, 144, 145, 151, 154, 157, 175, 230, 256, 282, 286, 314, 350, 379, 380, 385, 390, 391, 392, 393, 394, 395, 402, 403, 404, 406, 409], "speed": [1, 2, 4, 8, 29, 115, 119, 135, 136, 142, 143, 386, 390, 391, 392, 393, 402, 403, 404, 406], "avoid": [1, 2, 3, 43, 86, 87, 107, 115, 119, 135, 136, 142, 143, 150, 199, 205, 207, 218, 267, 285, 290, 298, 299, 313, 316, 319, 370, 392, 403], "oom": [1, 3, 48, 50, 53, 86, 87, 107], "choic": [1, 2, 75, 81, 135, 250, 385, 386, 390, 391, 396, 402, 403], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 30, 31, 37, 43, 49, 52, 54, 56, 59, 60, 62, 63, 73, 76, 77, 79, 80, 81, 84, 86, 87, 92, 94, 99, 100, 105, 107, 115, 116, 117, 119, 128, 132, 135, 136, 137, 138, 142, 143, 144, 154, 155, 164, 167, 184, 198, 200, 205, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 245, 246, 247, 248, 250, 251, 252, 254, 255, 257, 258, 260, 264, 265, 267, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 297, 298, 299, 312, 313, 314, 316, 317, 319, 321, 322, 330, 331, 332, 333, 334, 348, 364, 379, 380, 381, 385, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 406, 409], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 79, 91, 100, 115, 119, 123, 134, 135, 136, 142, 143, 151, 158, 171, 200, 205, 217, 235, 239, 273, 385, 386, 391, 403], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 35, 36, 43, 48, 49, 50, 51, 52, 53, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 91, 92, 94, 99, 105, 107, 115, 119, 135, 136, 142, 143, 204, 205, 207, 219, 242, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 357, 383, 387, 390, 392, 393, 395, 397, 399, 402, 403, 405, 409], "while": [1, 2, 3, 7, 8, 23, 43, 115, 119, 135, 136, 142, 143, 186, 199, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 299, 304, 312, 313, 316, 319, 385, 386, 390, 392, 393, 395, 397, 398, 402, 403, 404, 405, 406, 408], "wait": [1, 20, 21, 22, 393, 404], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 50, 52, 53, 59, 62, 73, 76, 77, 79, 80, 81, 82, 86, 87, 92, 94, 99, 100, 105, 107, 115, 119, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 150, 154, 155, 157, 158, 166, 177, 184, 186, 189, 190, 193, 195, 199, 207, 216, 220, 221, 233, 237, 258, 279, 282, 287, 288, 289, 296, 297, 299, 300, 301, 303, 304, 305, 310, 312, 316, 319, 321, 330, 337, 338, 348, 350, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 406, 409], "impact": [1, 2, 3, 79, 125, 164, 167, 218, 296, 298, 313, 316, 318, 391, 393, 402, 403], "memori": [1, 3, 8, 21, 29, 43, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 84, 86, 90, 115, 116, 119, 123, 135, 136, 142, 143, 158, 162, 181, 195, 198, 199, 201, 203, 205, 207, 237, 238, 285, 381, 383, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "manag": [1, 8, 326, 327, 330, 331, 332, 333, 363, 396], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 83, 91, 92, 94, 97, 99, 100, 105, 115, 119, 124, 125, 135, 136, 137, 138, 142, 143, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180, 181, 182, 183, 184, 186, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 216, 217, 219, 229, 230, 235, 239, 241, 242, 256, 267, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 348, 350, 361, 362, 363, 365, 366, 367, 371, 386, 387, 390, 392, 393, 394, 396, 401, 402, 403, 404, 406, 408, 409], "control": [1, 3, 5, 8, 16, 23, 24, 32, 52, 59, 60, 92, 94, 99, 113, 114, 115, 119, 128, 135, 136, 137, 138, 142, 143, 166, 216, 223, 224, 225, 226, 235, 239, 241, 242, 258, 265, 280, 281, 285, 286, 287, 296, 298, 299, 313, 314, 316, 320, 330, 335, 343, 348, 385, 387, 390, 391, 392, 394, 395, 396, 402, 403, 404, 406], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 94, 97, 98, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 129, 130, 132, 133, 135, 136, 139, 142, 143, 144, 145, 158, 159, 164, 167, 172, 175, 176, 177, 181, 182, 193, 195, 196, 198, 199, 201, 205, 207, 209, 229, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 263, 268, 269, 270, 273, 279, 282, 285, 286, 288, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 325, 328, 330, 331, 332, 333, 348, 350, 358, 362, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 409], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 391, 403], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 33, 39, 40, 41, 42, 47, 49, 50, 52, 54, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 92, 94, 97, 99, 115, 119, 135, 136, 137, 138, 142, 143, 154, 155, 158, 161, 164, 167, 169, 172, 179, 191, 199, 205, 207, 218, 235, 239, 246, 330, 332, 333, 363, 367, 386, 390, 391, 392, 393, 395, 396, 397, 399, 402, 403, 404, 406, 409], "heurist": [1, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 279, 281, 390, 397, 409], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 75, 97, 105, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 249, 316, 321, 330, 331, 332, 333, 334, 349, 384, 385, 387, 390, 391, 392, 393, 395, 397, 398, 403, 406, 409], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 75, 79, 98, 99, 103, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 132, 133, 135, 136, 137, 138, 139, 142, 143, 151, 158, 164, 166, 167, 172, 176, 177, 198, 199, 205, 207, 220, 221, 234, 235, 238, 239, 240, 243, 244, 245, 246, 262, 273, 280, 281, 289, 297, 299, 312, 314, 317, 319, 321, 322, 386, 390, 391, 392, 394, 395, 397, 401, 402, 403, 405, 406, 409], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 91, 92, 94, 97, 98, 99, 100, 105, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 152, 154, 155, 156, 157, 158, 159, 163, 164, 166, 167, 168, 169, 171, 175, 176, 177, 179, 181, 182, 186, 188, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 209, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 260, 261, 262, 263, 267, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 377, 381, 386, 387, 390, 391, 392, 393, 395, 402, 405, 406, 408, 409], "behaviour": [1, 3, 14, 15, 21, 62, 79, 119, 159, 164, 167, 177, 182, 194, 216, 218, 235, 236, 239, 263, 348, 363, 385, 391, 402, 406], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 158, 164, 167, 177, 195, 196, 239, 282, 286, 287, 288, 369, 379, 380, 385, 390, 391, 394, 395, 403, 404, 409], "choos": [1, 11, 128, 235, 239, 316, 383, 385, 386, 390, 391, 392, 402, 403, 406], "follow": [1, 2, 3, 6, 7, 8, 11, 43, 48, 50, 51, 53, 54, 62, 73, 75, 76, 77, 78, 79, 80, 81, 92, 111, 112, 115, 118, 119, 120, 124, 125, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 154, 175, 181, 201, 205, 207, 220, 221, 233, 235, 237, 239, 240, 275, 282, 283, 284, 295, 296, 297, 298, 299, 300, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 350, 367, 385, 386, 387, 390, 391, 392, 393, 396, 397, 401, 402, 403, 404, 406, 408, 409], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 370, 390, 392, 408], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 43, 73, 158, 172, 207, 271, 272, 276, 279, 280, 281, 349, 350, 352, 360, 363, 367, 370, 371, 390, 391, 392, 393, 395, 402, 403, 406, 408, 409], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 93, 94, 98, 99, 101, 103, 107, 108, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 134, 135, 136, 139, 142, 143, 154, 155, 158, 161, 162, 166, 169, 171, 174, 175, 177, 179, 180, 181, 189, 191, 195, 198, 199, 201, 203, 204, 205, 207, 209, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 246, 247, 248, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 277, 279, 280, 281, 284, 285, 286, 288, 289, 292, 298, 299, 313, 314, 316, 319, 321, 329, 330, 331, 332, 333, 348, 349, 352, 363, 386, 387, 391, 392, 393, 394, 395, 397, 398, 402, 403, 404, 406, 408, 409], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 34, 43, 57, 155, 158, 186, 235, 239, 370, 390, 391, 392, 393, 397, 399, 402, 403, 406, 408], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 39, 41, 43, 44, 52, 54, 58, 59, 73, 75, 76, 79, 92, 94, 97, 99, 100, 102, 105, 115, 116, 119, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 151, 174, 181, 186, 189, 193, 194, 195, 196, 203, 205, 207, 230, 233, 234, 235, 237, 239, 245, 246, 251, 255, 256, 264, 271, 272, 274, 275, 276, 284, 288, 336, 339, 340, 341, 342, 344, 345, 346, 347, 350, 363, 364, 379, 380, 385, 386, 390, 391, 392, 393, 395, 396, 397, 399, 402, 403, 404, 405, 406, 408, 409], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 370, 390, 391, 399], "rand_step": [1, 2, 3, 34, 57, 113, 114, 115, 116, 118, 119, 120, 126, 127, 131, 132, 133, 135, 136, 142, 143, 174, 195, 205, 404, 408, 409], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 390], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 75, 77, 79, 80, 81, 390, 391, 392], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 43, 44, 58, 59, 73, 75, 76, 77, 79, 80, 81, 91, 92, 99, 100, 105, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 182, 193, 198, 207, 219, 239, 242, 280, 281, 316, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 358, 383, 386, 390, 391, 392, 393, 394, 397, 399, 404, 408, 409], "pad": [1, 2, 3, 23, 51, 61, 75, 77, 79, 80, 81, 158, 220, 221, 223, 224, 239, 243, 244, 245, 364], "along": [1, 2, 3, 14, 15, 23, 25, 48, 50, 53, 54, 55, 56, 63, 75, 77, 79, 80, 81, 87, 92, 94, 99, 100, 105, 107, 118, 120, 157, 158, 159, 177, 179, 182, 189, 197, 239, 240, 243, 244, 249, 274, 282, 285, 286, 299, 314, 321, 385, 390, 391, 393, 394, 396, 402, 403, 404, 406], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 78, 85, 91, 92, 95, 105, 106, 109, 110, 115, 119, 135, 136, 142, 143, 151, 154, 157, 158, 162, 181, 194, 195, 197, 198, 199, 201, 203, 207, 241, 285, 295, 306, 367, 384, 391, 392, 401, 402, 403, 404, 406, 409], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 100, 119, 154, 182, 193, 217, 243, 244, 272, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 387, 393], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 34, 37, 56, 57, 59, 77, 113, 114, 115, 118, 119, 120, 135, 136, 142, 143, 144, 145, 172, 182, 205, 207, 230, 243, 244, 256, 274, 275, 283, 284, 286, 325, 330, 364, 390, 392, 393, 394, 395, 396, 402, 403], "valid": [1, 2, 3, 23, 48, 50, 51, 63, 82, 105, 146, 154, 182, 199, 207, 220, 221, 240, 243, 244, 271, 272, 280, 281, 313, 330, 331, 332, 333, 364, 387, 409], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 363, 383, 390, 391], "strategi": [1, 2, 16, 79, 97, 128, 151, 244, 253, 276, 385, 387, 390, 391, 395, 402, 403, 406], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 55, 56, 59, 62, 64, 65, 66, 67, 68, 70, 94, 115, 119, 125, 131, 135, 136, 137, 138, 142, 143, 144, 146, 155, 157, 158, 168, 175, 193, 194, 195, 198, 199, 204, 205, 207, 220, 221, 243, 244, 245, 246, 271, 272, 274, 282, 283, 286, 289, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 322, 328, 350, 367, 377, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 409], "organ": [1, 2, 404, 406], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 115, 118, 119, 120, 135, 136, 139, 142, 143, 155, 158, 164, 167, 168, 186, 193, 204, 205, 207, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 293, 301, 306, 321, 328, 348, 350, 385, 386, 391, 394, 395, 396, 397, 398, 399, 402, 404, 408], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 75, 76, 79, 94, 97, 111, 112, 115, 119, 124, 125, 128, 135, 136, 137, 138, 142, 143, 154, 158, 166, 177, 184, 199, 200, 207, 230, 233, 234, 235, 237, 238, 239, 240, 242, 245, 246, 247, 256, 312, 314, 316, 325, 330, 331, 332, 336, 337, 338, 363, 367, 369, 379, 380, 385, 386, 387, 390, 391, 392, 394, 396, 398, 401, 402, 403, 404, 405, 406, 409], "how": [1, 2, 3, 11, 18, 19, 20, 24, 43, 49, 59, 79, 91, 92, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 207, 247, 282, 296, 298, 311, 313, 314, 316, 350, 352, 367, 384, 385, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "tabl": [1, 385, 391, 395], "summar": [1, 3, 404], "what": [1, 3, 8, 11, 32, 49, 62, 73, 92, 99, 115, 119, 135, 136, 142, 143, 168, 195, 209, 216, 283, 299, 310, 314, 321, 384, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 408, 409], "expect": [1, 2, 3, 4, 7, 30, 43, 52, 62, 63, 92, 98, 99, 115, 119, 131, 134, 135, 136, 142, 143, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 177, 179, 181, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 209, 233, 234, 235, 237, 238, 239, 245, 246, 275, 280, 281, 285, 288, 296, 297, 298, 299, 300, 301, 303, 304, 305, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 371, 384, 385, 386, 387, 390, 392, 393, 394, 395, 396, 397, 402, 403, 404, 406, 409], "n": [1, 2, 3, 6, 7, 25, 26, 29, 33, 41, 42, 43, 47, 54, 115, 119, 135, 136, 142, 143, 158, 166, 171, 200, 207, 233, 234, 237, 242, 279, 280, 281, 286, 296, 297, 305, 314, 329, 364, 385, 387, 391, 393, 395, 402, 403, 406, 409], "b": [1, 2, 3, 7, 8, 23, 30, 31, 37, 48, 50, 52, 53, 54, 56, 59, 60, 86, 105, 233, 234, 237, 238, 245, 246, 248, 249, 255, 264, 289, 330, 331, 332, 333, 334, 336, 350, 385, 391, 405, 406], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 91, 92, 94, 98, 105, 115, 116, 118, 119, 132, 133, 135, 136, 142, 143, 151, 154, 158, 164, 167, 168, 181, 185, 186, 194, 196, 203, 205, 207, 209, 216, 233, 237, 274, 280, 281, 285, 320, 330, 331, 332, 333, 334, 336, 350, 357, 367, 369, 381, 384, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "p": [1, 2, 4, 94, 97, 116, 140, 141], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 73, 75, 77, 79, 80, 81, 111, 112, 115, 119, 124, 125, 135, 136, 137, 138, 142, 143, 162, 164, 165, 167, 174, 181, 186, 190, 194, 195, 197, 198, 199, 201, 203, 204, 207, 233, 236, 237, 240, 245, 258, 262, 263, 285, 288, 295, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 316, 317, 318, 319, 321, 322, 369, 379, 380, 381, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 409], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 94, 105, 115, 118, 119, 135, 136, 142, 143, 164, 165, 167, 174, 177, 197, 199, 209, 239, 240, 246, 247, 282, 285, 286, 288, 289, 295, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333, 350, 358, 369, 379, 380, 381, 383, 385, 386, 387, 390, 391, 392, 393, 394, 395, 397, 398, 402, 403, 404, 406, 409], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 80, 81, 86, 87, 92, 99, 100, 105, 107, 113, 114, 115, 118, 119, 120, 121, 135, 136, 142, 143, 144, 145, 151, 157, 158, 159, 171, 177, 179, 182, 189, 192, 197, 200, 205, 220, 221, 222, 227, 235, 237, 239, 240, 243, 244, 245, 248, 249, 254, 255, 259, 260, 261, 262, 265, 274, 279, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 381, 385, 390, 391, 392, 393, 394, 402, 403, 404, 406], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 43, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 94, 105, 111, 112, 115, 116, 119, 124, 125, 128, 134, 135, 136, 137, 138, 139, 142, 143, 150, 157, 159, 182, 189, 195, 196, 199, 205, 207, 216, 231, 233, 237, 239, 279, 280, 281, 297, 298, 299, 305, 308, 312, 313, 314, 316, 317, 319, 321, 322, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 367, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "adapt": [1, 24, 152, 193, 218, 313, 390, 404], "equal": [1, 14, 15, 17, 73, 92, 99, 100, 132, 135, 142, 176, 177, 220, 221, 233, 235, 237, 239, 240, 246, 320, 325, 358, 379, 380, 390, 392, 405], "introduc": [1, 2, 135, 142, 233, 235, 237, 239, 280, 281, 390, 402], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 63, 64, 65, 66, 67, 68, 75, 81, 86, 87, 94, 105, 107, 111, 112, 115, 118, 119, 120, 124, 125, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 154, 181, 195, 199, 201, 207, 209, 223, 235, 239, 260, 286, 287, 288, 350, 358, 370, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 406, 408, 409], "confus": [1, 25, 43, 115, 119, 135, 136, 142, 143, 199, 207], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 75, 77, 79, 80, 81, 86, 87, 88, 94, 97, 98, 99, 100, 101, 103, 107, 115, 118, 119, 120, 131, 135, 136, 142, 143, 161, 165, 166, 183, 190, 197, 201, 205, 207, 233, 235, 239, 249, 250, 273, 275, 276, 284, 286, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 330, 348, 364, 379, 380, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 408, 409], "better": [1, 3, 8, 9, 14, 15, 23, 235, 239, 386, 392, 394, 404, 408], "consist": [1, 2, 3, 43, 49, 52, 59, 60, 76, 79, 115, 119, 135, 136, 142, 143, 175, 204, 207, 221, 240, 390, 391, 392, 404, 405, 409], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 79, 115, 119, 129, 130, 135, 136, 142, 143, 199, 282, 286, 390, 392, 394, 395, 397, 402, 403, 404, 409], "keep": [1, 3, 4, 7, 8, 15, 49, 52, 59, 60, 94, 98, 105, 135, 142, 177, 181, 203, 205, 207, 216, 280, 281, 360, 367, 390, 391, 392, 393, 397, 398, 399, 403, 404, 406, 408, 409], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 73, 76, 181, 203, 297, 300, 303, 305, 317, 319, 321, 322, 386, 390, 391, 395, 396, 402, 403, 406, 409], "interchang": [1, 245, 246, 392, 394, 398, 405, 406], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 43, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 100, 115, 119, 129, 130, 135, 136, 142, 143, 144, 145, 166, 176, 187, 199, 205, 207, 209, 220, 221, 229, 233, 235, 239, 240, 245, 246, 275, 282, 286, 296, 298, 299, 300, 303, 304, 305, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 325, 330, 363, 367, 386, 390, 391, 393, 397, 402, 403, 404, 406, 409], "wherea": [1, 2, 22, 79, 111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 139, 166, 207, 314, 387, 398], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 55, 56, 59, 62, 64, 65, 66, 67, 68, 76, 79, 81, 91, 92, 115, 119, 131, 135, 136, 142, 143, 181, 195, 199, 203, 205, 207, 235, 237, 239, 243, 244, 276, 277, 280, 281, 282, 286, 299, 301, 304, 305, 319, 328, 330, 331, 332, 333, 334, 390, 391, 392, 394, 396, 397, 398, 402, 403, 404, 405], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 73, 79, 92, 99, 105, 115, 119, 135, 136, 142, 143, 182, 287, 288, 358, 367, 385, 390, 391, 392, 397, 401, 408, 409], "doesn": [1, 4, 12, 105, 132, 164, 167, 394], "understood": [1, 390], "serv": [1, 18, 20, 21, 121, 406, 409], "basi": [1, 105, 245, 406], "simplest": [1, 105, 289, 390, 392, 393, 395, 402, 403, 406, 409], "scenario": [1, 2, 129, 130, 135, 144, 145, 348, 390, 395, 402, 403, 404], "transit": [1, 43, 75, 79, 92, 100, 105, 115, 119, 135, 136, 142, 143, 207, 218, 291, 390, 393, 394, 395, 397, 402, 404, 406], "sampl": [1, 4, 8, 9, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 97, 98, 99, 100, 103, 105, 107, 115, 119, 131, 134, 135, 136, 142, 143, 151, 157, 158, 182, 186, 210, 211, 214, 215, 219, 228, 236, 242, 243, 244, 253, 254, 257, 262, 263, 267, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 296, 297, 298, 299, 300, 301, 303, 313, 315, 316, 321, 322, 358, 364, 367, 370, 383, 385, 390, 391, 392, 393, 394, 395, 397, 399, 402, 403, 405, 408, 409], "attent": [1, 2, 8, 390, 393, 409], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 115, 119, 131, 135, 136, 142, 143, 162, 166, 177, 181, 195, 198, 199, 201, 203, 205, 207, 216, 219, 230, 231, 233, 237, 242, 247, 256, 260, 267, 274, 275, 276, 279, 281, 284, 285, 286, 287, 288, 290, 295, 300, 301, 303, 314, 329, 330, 331, 332, 333, 334, 336, 359, 363, 377, 385, 387, 390, 391, 392, 394, 395, 396, 397, 398, 403, 404, 409], "built": [1, 2, 3, 5, 7, 94, 111, 112, 118, 124, 125, 134, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 323, 328, 375, 377, 378, 381, 390, 391, 392, 393, 396, 398, 404, 406, 409], "flatten": [1, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 105, 155, 171, 364, 383, 393, 403], "suffici": [1, 3, 4, 390], "preprocess": [1, 2, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 391], "popul": [1, 2, 3, 49, 52, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 174, 195, 247, 314, 390, 392, 393, 395, 397, 404, 406], "replaybuff": [1, 2, 34, 49, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 99, 109, 158, 182, 186, 207, 301, 306, 328, 375, 377, 383, 392, 397, 399, 402, 403, 405, 406, 408], "lazytensorstorag": [1, 2, 49, 52, 59, 60, 91, 105, 186, 207, 392, 399, 403, 406], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 52, 105, 115, 116, 119, 135, 136, 142, 143, 150, 155, 175, 195, 207, 265, 274, 279, 282, 283, 307, 309, 310, 321, 330, 333, 341, 342, 346, 347, 348, 377, 386, 390, 402, 403, 406, 408, 409], "reshap": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 99, 105, 155, 235, 239, 240, 348, 392, 402, 403], "extend": [1, 2, 8, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 91, 92, 94, 95, 99, 100, 103, 105, 106, 109, 110, 157, 186, 207, 218, 314, 364, 386, 387, 390, 391, 392, 393, 397, 399, 402, 403, 405, 406, 408], "slice": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 151, 157, 406], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 48, 49, 50, 52, 53, 59, 60, 105, 123, 247, 397, 402, 403], "achiev": [1, 2, 3, 4, 43, 115, 119, 123, 135, 136, 142, 143, 194, 207, 217, 282, 364, 387, 390, 391, 392, 393, 402, 403, 404, 406, 409], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 94, 105, 115, 116, 119, 123, 135, 136, 137, 142, 143, 144, 145, 155, 158, 181, 198, 199, 201, 204, 205, 207, 213, 216, 220, 221, 223, 224, 225, 226, 227, 232, 235, 239, 240, 241, 245, 246, 273, 286, 293, 299, 301, 306, 317, 319, 328, 350, 364, 371, 372, 373, 377, 379, 380, 385, 390, 391, 392, 393, 395, 398, 402, 403, 404, 405, 406, 408, 409], "multidimension": [1, 2, 59, 91, 92, 406], "slicesampl": [1, 2, 73, 92, 406], "sampler": [1, 2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 105, 107, 182, 301, 306, 328, 390, 392, 402, 403, 406], "One": [1, 2, 4, 8, 25, 26, 29, 33, 41, 42, 47, 63, 105, 111, 112, 135, 142, 158, 186, 201, 253, 271, 272, 285, 289, 320, 325, 354, 390, 391, 406, 409], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 92, 94, 99, 100, 101, 102, 103, 105, 107, 111, 115, 116, 119, 124, 135, 136, 137, 138, 139, 142, 143, 144, 151, 154, 155, 158, 161, 168, 172, 175, 177, 179, 190, 194, 195, 196, 199, 200, 205, 207, 220, 221, 230, 235, 239, 240, 243, 244, 245, 246, 256, 267, 274, 275, 279, 282, 283, 284, 285, 286, 289, 290, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 320, 321, 322, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 352, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 386, 390, 391, 392, 393, 395, 401, 404, 406], "ensur": [1, 2, 3, 43, 49, 59, 91, 92, 98, 115, 119, 135, 136, 142, 143, 151, 158, 181, 193, 199, 201, 205, 207, 235, 239, 274, 385, 391, 392, 404, 406], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 94, 105, 107, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 155, 157, 159, 164, 167, 168, 169, 175, 177, 179, 183, 184, 186, 190, 193, 195, 197, 205, 206, 207, 209, 213, 216, 219, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 250, 253, 254, 255, 256, 261, 262, 264, 267, 268, 269, 270, 273, 274, 275, 279, 280, 282, 283, 284, 285, 288, 289, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 358, 364, 367, 377, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 408, 409], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 73, 236, 262, 263, 295, 384, 390, 391, 392, 393, 396, 402, 403, 405, 409], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 32, 43, 48, 50, 62, 101, 105, 115, 119, 123, 128, 135, 136, 137, 138, 142, 143, 158, 161, 171, 181, 184, 196, 199, 203, 205, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 248, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 282, 283, 284, 285, 289, 292, 295, 305, 318, 319, 329, 334, 350, 367, 381, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 406, 408, 409], "dimension": [1, 49, 52, 59, 60, 166, 235, 239, 330, 335, 343, 403], "num_slic": [1, 2, 73, 79, 92, 99, 100, 406], "4": [1, 2, 3, 7, 25, 30, 31, 34, 37, 41, 42, 43, 49, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 99, 100, 107, 111, 112, 113, 114, 115, 119, 124, 125, 126, 127, 128, 131, 133, 135, 136, 140, 141, 142, 143, 151, 152, 154, 155, 158, 168, 186, 193, 194, 205, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 237, 238, 240, 242, 245, 246, 250, 251, 252, 253, 254, 255, 256, 264, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 288, 290, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 348, 349, 385, 389, 390, 391, 392, 393, 395, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 34, 57, 155, 186, 393, 397, 406, 408], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 34, 43, 57, 155, 158, 186, 367, 370, 377, 387, 390, 391, 392, 393, 397, 399, 402, 403, 406, 408], "dim": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 158, 159, 179, 195, 200, 205, 238, 260, 265, 279, 381, 391, 392, 402, 404, 406], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 91, 92, 99, 100, 115, 119, 123, 132, 135, 136, 139, 142, 143, 155, 162, 181, 195, 198, 199, 201, 203, 207, 235, 239, 240, 247, 265, 285, 287, 288, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 348, 350, 352, 385, 387, 390, 391, 392, 393, 394, 395, 396, 398, 402, 403, 404, 406, 409], "ndim": [1, 2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 86, 87, 91, 92, 105, 107, 115, 119, 135, 136, 142, 143, 207, 279], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 105, 115, 119, 132, 136, 137, 138, 139, 142, 143, 348, 378, 383, 390, 391, 392, 394, 401, 408, 409], "make_env": [1, 3, 135, 142, 145, 205, 348, 372, 373, 390, 391, 409], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 91, 97, 115, 119, 135, 136, 142, 143, 199, 218, 229, 256, 275, 283, 284, 285, 286, 306, 369, 383, 387, 390, 391, 394, 395, 399, 406, 409], "behav": [1, 3, 121, 131, 233, 237, 253, 304, 312, 314, 405], "iif": 1, "accordingli": [1, 2, 92, 193, 194, 237, 283, 393], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 100, 105, 107, 113, 114, 115, 118, 119, 120, 121, 122, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 154, 155, 158, 162, 166, 168, 169, 175, 177, 179, 181, 183, 184, 186, 189, 190, 193, 194, 195, 197, 198, 199, 201, 203, 207, 208, 213, 218, 219, 220, 221, 223, 224, 225, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 245, 246, 247, 250, 253, 255, 265, 267, 268, 269, 270, 274, 275, 282, 284, 285, 288, 289, 290, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 308, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 336, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 366, 385, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 79, 91, 105, 154, 168, 209, 274, 285, 395, 396, 398, 402, 403], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 92, 94, 100, 115, 119, 121, 132, 135, 136, 142, 143, 154, 155, 158, 182, 194, 195, 196, 198, 199, 207, 210, 211, 216, 231, 258, 279, 280, 281, 296, 298, 299, 306, 313, 316, 318, 319, 353, 387, 390, 391, 392, 393, 396, 402, 403, 404, 406, 408, 409], "fulli": [1, 8, 43, 115, 119, 135, 136, 142, 143, 207, 234, 238, 391, 396, 404, 406], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 94, 95, 98, 100, 101, 103, 105, 106, 107, 109, 110, 115, 116, 119, 132, 135, 136, 137, 138, 142, 143, 144, 145, 152, 154, 171, 181, 182, 186, 199, 201, 205, 207, 209, 217, 220, 221, 227, 240, 249, 273, 279, 285, 286, 287, 288, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 316, 317, 318, 319, 321, 322, 330, 332, 333, 348, 355, 367, 384, 386, 390, 391, 392, 395, 396, 402, 403, 404, 406, 408, 409], "consecut": [1, 3, 73, 98, 123, 239, 280, 281, 350, 393, 394, 397, 403, 406, 409], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 79, 115, 116, 118, 119, 132, 133, 135, 136, 142, 143, 181, 203, 207, 367, 381, 391, 392, 394, 395], "therebi": [1, 24, 348, 386, 390, 391], "interrupt": [1, 2, 119, 279, 336], "These": [1, 2, 7, 54, 76, 81, 108, 144, 181, 203, 385, 386, 390, 392, 402, 403, 404, 406, 409], "tool": [1, 2, 3, 5, 393, 394, 402, 404, 406, 409], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 115, 118, 119, 135, 136, 142, 143, 147, 150, 387, 390, 392, 393, 394, 397, 398, 404], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 383], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 383], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 73, 81, 116, 117, 135, 142, 205, 390, 391, 392, 393, 402, 403, 404, 405, 409], "synchron": [1, 14, 19, 21, 48, 50, 53, 132, 379, 380, 391, 392, 402], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 43, 115, 119, 132, 135, 136, 142, 143, 164, 167, 194, 199, 205, 207, 210, 214, 228, 235, 236, 239, 253, 261, 262, 263, 282, 286, 314, 348, 363, 386, 390, 391, 393, 402, 403, 408, 409], "find": [1, 4, 6, 7, 18, 19, 20, 49, 51, 61, 99, 100, 237, 271, 272, 280, 281, 361, 365, 390, 391, 395, 396, 402, 403], "folder": [1, 2, 48, 50, 53, 144, 391], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 113, 114, 115, 116, 118, 119, 120, 121, 129, 130, 131, 135, 136, 137, 138, 142, 143, 144, 145, 146, 151, 157, 158, 161, 162, 164, 165, 167, 170, 175, 176, 177, 181, 189, 191, 195, 196, 198, 199, 201, 203, 205, 207, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 245, 246, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 285, 286, 288, 289, 292, 293, 296, 297, 299, 308, 312, 314, 316, 317, 318, 319, 321, 322, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 362, 367, 370, 379, 380, 381, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 408, 409], "variou": [1, 2, 3, 235, 239, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 323, 328, 350, 379, 380, 390, 391, 392, 394, 395, 396, 398, 402, 403, 406, 409], "machin": [1, 2, 7, 18, 19, 20, 43, 78, 123, 402, 403, 408], "wonder": 1, "why": [1, 2, 3, 216, 402, 404, 409], "instead": [1, 4, 7, 8, 12, 25, 43, 79, 115, 119, 135, 136, 142, 143, 171, 195, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 296, 298, 299, 301, 304, 305, 306, 312, 313, 316, 317, 318, 319, 328, 330, 334, 338, 381, 385, 386, 394, 395, 399, 404, 406, 409], "lower": [1, 2, 3, 21, 27, 161, 205, 257, 258, 289, 392, 402, 404], "io": [1, 11, 73, 79, 124, 125, 132, 237, 238], "footprint": [1, 2, 406], "commun": [1, 2, 3, 135, 142, 384, 392, 409], "yet": [1, 111, 112, 124, 405], "plai": [1, 3, 137, 138, 143, 158, 391, 392, 396, 406, 409], "role": [1, 3, 130, 391, 396, 409], "opposit": [1, 402], "direct": [1, 2, 43, 115, 119, 135, 136, 142, 143, 207, 233, 237, 314, 391, 396], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 43, 49, 52, 59, 60, 73, 81, 91, 92, 100, 105, 115, 119, 135, 136, 137, 138, 139, 142, 143, 207, 209, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 245, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 289, 292, 348, 350, 386, 390, 391, 392, 393, 394, 395, 396, 402, 404, 405, 406, 408, 409], "faster": [1, 2, 4, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 80, 81, 132, 330, 331, 332, 333, 393, 402, 403], "share": [1, 3, 6, 8, 23, 48, 50, 53, 62, 84, 86, 87, 88, 92, 99, 101, 103, 107, 116, 135, 142, 205, 235, 239, 245, 246, 268, 269, 270, 296, 297, 298, 299, 300, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 381, 383, 385, 392, 393, 399, 401, 402, 403, 408, 409], "among": [1, 3, 137, 138, 402, 403], "prohibit": [1, 3, 105], "slow": [1, 3, 4, 11, 48, 50, 53], "compar": [1, 3, 79, 105, 297, 299, 312, 317, 319, 321, 322, 363, 386, 390, 392, 395, 396, 402, 403, 406, 409], "gpu": [1, 7, 8, 43, 86, 87, 107, 115, 119, 123, 135, 136, 142, 143, 207, 390, 392, 393, 402, 403, 409], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 59, 62, 73, 91, 92, 99, 105, 111, 112, 119, 143, 154, 177, 205, 218, 219, 228, 231, 233, 235, 237, 239, 242, 254, 261, 262, 271, 272, 282, 286, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 385, 386, 390, 391, 392, 395, 402, 403, 404, 406, 408, 409], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 91, 92, 94, 97, 99, 100, 103, 107, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 139, 142, 143, 144, 145, 154, 155, 159, 161, 162, 181, 189, 190, 195, 197, 198, 199, 201, 203, 207, 218, 235, 239, 243, 244, 245, 246, 267, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 285, 286, 289, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 315, 316, 317, 318, 319, 321, 322, 324, 328, 330, 331, 332, 333, 334, 338, 348, 357, 378, 390, 391, 392, 395, 398, 402, 403, 406, 409], "build": [1, 3, 7, 23, 30, 43, 49, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 120, 121, 124, 125, 129, 130, 132, 135, 136, 139, 142, 143, 144, 145, 186, 205, 207, 219, 235, 239, 242, 278, 282, 286, 367, 374, 375, 376, 385, 387, 392, 393, 395, 396, 397, 398, 402, 403, 404, 405, 408, 409], "mani": [1, 2, 3, 4, 52, 111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 132, 133, 139, 296, 298, 305, 313, 316, 385, 390, 391, 392, 394, 395, 397, 399, 402, 403, 404, 406, 409], "eg": [1, 2, 3, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 101, 103, 107, 113, 114, 115, 118, 119, 120, 121, 123, 135, 136, 139, 142, 143, 166, 193, 199, 245, 273, 350], "gymnasium": [1, 2, 3, 5, 12, 115, 118, 119, 120, 126, 127, 135, 136, 142, 143, 147, 150, 169, 190, 193, 204, 391, 392, 404, 408], "warn": [1, 3, 271, 272, 276, 277, 280, 281, 391], "quickli": [1, 3, 391, 402, 403, 409], "becom": [1, 3, 4, 21, 233, 237, 402, 403, 409], "quit": [1, 3, 11, 73, 115, 119, 135, 136, 142, 143, 385, 390, 391, 392, 395, 402, 403, 409], "annoi": [1, 3], "By": [1, 2, 3, 30, 31, 37, 56, 113, 114, 115, 118, 119, 120, 121, 129, 130, 135, 136, 137, 138, 139, 142, 143, 144, 145, 265, 286, 314, 363, 381, 386, 390, 402, 405, 406, 409], "filter": [1, 2, 3, 4, 63, 92, 99, 100, 296, 297, 299, 300, 304, 305, 312, 316, 317, 319, 394], "out": [1, 2, 3, 4, 5, 9, 21, 43, 48, 50, 53, 63, 75, 79, 84, 92, 99, 100, 115, 119, 135, 136, 137, 138, 142, 143, 195, 207, 209, 233, 234, 237, 243, 244, 247, 248, 249, 267, 273, 274, 275, 281, 282, 283, 284, 285, 286, 314, 326, 327, 386, 387, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 406, 408, 409], "still": [1, 2, 3, 9, 64, 79, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 272, 313, 314, 390, 391, 393, 401, 404, 406, 409], "wish": [1, 3, 11, 14, 15, 17, 79, 150, 396, 406], "displai": [1, 3, 7, 115, 119, 135, 136, 142, 143, 367, 387, 390, 391, 403, 404], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 158, 159, 162, 164, 167, 168, 169, 171, 174, 175, 176, 177, 179, 181, 182, 183, 184, 186, 188, 189, 190, 193, 195, 197, 198, 199, 200, 201, 203, 205, 207, 209, 216, 217, 218, 219, 220, 221, 223, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 255, 256, 262, 263, 264, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 325, 328, 330, 331, 332, 333, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 357, 360, 361, 363, 364, 365, 367, 381, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "central": [2, 245, 246, 247, 390, 391, 394, 402, 403, 406], "part": [2, 3, 4, 8, 43, 54, 73, 76, 77, 79, 80, 81, 111, 115, 119, 124, 135, 136, 142, 143, 157, 177, 186, 189, 207, 216, 235, 239, 290, 358, 381, 390, 392, 393, 399, 402, 404, 409], "algorithm": [2, 3, 8, 9, 131, 151, 296, 316, 317, 319, 383, 386, 387, 390, 391, 392, 393, 395, 396, 397, 398, 402, 403, 405, 406, 408], "implement": [2, 3, 9, 12, 14, 15, 16, 43, 89, 101, 102, 115, 119, 131, 132, 135, 136, 142, 143, 155, 162, 164, 165, 169, 172, 175, 183, 184, 190, 193, 198, 199, 205, 207, 220, 233, 234, 235, 236, 237, 238, 239, 261, 262, 263, 296, 297, 299, 302, 303, 304, 310, 312, 314, 315, 316, 318, 319, 321, 348, 358, 372, 385, 387, 390, 391, 392, 393, 402, 403, 404, 408], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 30, 43, 49, 52, 54, 59, 60, 73, 75, 79, 81, 86, 98, 100, 105, 111, 112, 115, 116, 119, 123, 124, 125, 135, 136, 142, 143, 158, 175, 181, 184, 201, 204, 205, 207, 209, 219, 239, 245, 246, 247, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 350, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "give": [2, 3, 7, 59, 76, 115, 119, 131, 135, 136, 142, 143, 158, 384, 386, 390, 391, 402, 403, 404, 405, 408], "abil": [2, 314, 404, 406], "panel": [2, 392], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 75, 81, 84, 105, 155, 158, 168, 235, 239, 299, 304, 312, 319, 323, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "includ": [2, 3, 4, 7, 9, 21, 43, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 101, 103, 107, 115, 119, 131, 135, 136, 142, 143, 194, 199, 205, 207, 235, 239, 299, 314, 319, 370, 385, 387, 390, 391, 392, 393, 402, 403, 404, 406, 409], "almost": [2, 393], "physic": [2, 6, 7, 84, 135, 136, 139, 387, 390, 402, 403, 404], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 73, 86, 87, 88, 101, 103, 107, 115, 118, 119, 120, 135, 136, 142, 143, 207, 247, 280, 281, 301, 314, 328, 390, 391, 393, 402, 403, 405, 406], "liststorag": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 406], "veri": [2, 3, 124, 125, 391, 394, 397, 402, 404, 406, 408, 409], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 37, 43, 48, 50, 52, 53, 55, 56, 59, 60, 73, 79, 92, 94, 97, 99, 100, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 154, 155, 184, 207, 216, 240, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 323, 325, 328, 385, 387, 390, 392, 393, 394, 395, 396, 402, 403, 404, 406, 409], "complex": [2, 43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 390, 391, 394, 395], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 100, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 157, 158, 159, 162, 164, 166, 167, 168, 169, 171, 174, 177, 179, 181, 182, 183, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 294, 296, 297, 299, 300, 301, 303, 304, 305, 308, 309, 312, 314, 316, 317, 318, 319, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 408, 409], "contigu": [2, 3, 8, 27, 30, 64, 76, 79, 80, 115, 119, 135, 136, 142, 143, 213, 392, 393, 402, 403, 404, 406, 408, 409], "tensorstorag": [2, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 91, 92, 105, 108, 397, 406], "lazymemmapstorag": [2, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 99, 100, 157, 158, 390, 391, 393, 397, 402, 405, 406], "citizen": 2, "pytre": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 108], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 92, 94, 99, 103, 105, 113, 114, 115, 118, 119, 120, 135, 136, 142, 143, 175, 177, 207, 223, 229, 230, 235, 238, 239, 240, 247, 250, 254, 255, 256, 274, 275, 283, 284, 289, 296, 297, 299, 300, 304, 305, 307, 312, 314, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333, 361, 363, 365, 374, 406], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 43, 48, 50, 53, 63, 92, 97, 99, 100, 115, 118, 119, 120, 129, 130, 135, 136, 142, 143, 144, 145, 195, 199, 207, 282, 286, 299, 319, 321, 363, 379, 380, 381, 387, 391, 392, 394, 396, 402, 404, 409], "nest": [2, 3, 23, 30, 31, 34, 36, 37, 43, 44, 48, 50, 52, 53, 56, 57, 58, 69, 86, 87, 90, 94, 107, 115, 118, 119, 120, 135, 136, 142, 143, 158, 193, 196, 207, 217, 279, 330, 331, 332, 333, 334, 348, 387, 391, 392, 403, 404, 406, 408], "construct": [2, 3, 5, 23, 43, 49, 52, 59, 60, 62, 73, 94, 115, 118, 119, 135, 136, 137, 142, 143, 164, 167, 207, 209, 235, 239, 258, 286, 367, 385, 391, 392, 393, 395, 402, 404, 406, 409], "ram": [2, 118, 120, 398, 406], "prealloc": [2, 3, 135, 142, 404], "ve": [2, 54, 390, 393, 399], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 94, 98, 115, 119, 123, 129, 130, 135, 136, 142, 143, 175, 193, 194, 198, 233, 237, 247, 272, 277, 279, 281, 296, 314, 316, 318, 390, 391, 392, 393, 401, 402, 403, 404, 406, 409], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 80, 81, 105, 113, 114, 115, 119, 123, 135, 136, 137, 138, 142, 143, 158, 247, 357, 385, 386, 387, 390, 391, 392, 393, 394, 395, 397, 399, 402, 403, 404, 406, 408, 409], "start": [2, 3, 4, 5, 14, 21, 24, 62, 63, 73, 81, 92, 99, 100, 116, 119, 128, 135, 142, 163, 216, 362, 389, 390, 391, 400, 403, 404, 406, 407, 409], "replay_buff": [2, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 364, 377, 390, 391, 392, 397, 402, 403, 406], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 34, 43, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 154, 155, 157, 158, 161, 168, 169, 174, 175, 177, 179, 181, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 198, 203, 205, 207, 208, 213, 216, 217, 219, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 245, 246, 247, 250, 255, 256, 264, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 348, 350, 360, 363, 377, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "rb": [2, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 99, 100, 105, 158, 186, 207, 391, 393, 397, 399, 403, 405, 406, 408], "10": [2, 3, 7, 22, 23, 25, 26, 29, 33, 39, 43, 49, 52, 54, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 94, 99, 100, 105, 107, 111, 112, 115, 116, 119, 124, 125, 131, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 152, 155, 157, 158, 194, 196, 197, 207, 219, 222, 223, 225, 227, 229, 233, 234, 235, 237, 238, 239, 242, 254, 265, 276, 277, 280, 281, 282, 289, 293, 297, 301, 303, 310, 316, 317, 318, 322, 328, 330, 331, 332, 333, 336, 350, 358, 387, 390, 391, 392, 393, 394, 395, 399, 402, 403, 404, 406, 408, 409], "add": [2, 3, 4, 6, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 91, 94, 95, 105, 106, 109, 110, 115, 119, 135, 136, 142, 143, 158, 175, 199, 207, 235, 239, 248, 278, 296, 362, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 406, 408], "string": [2, 18, 19, 20, 43, 51, 63, 82, 115, 119, 129, 135, 136, 142, 143, 150, 181, 193, 203, 207, 235, 239, 274, 279, 282, 283, 295, 349, 366, 386, 390, 392, 393, 406], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 39, 41, 49, 52, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 92, 94, 99, 100, 105, 107, 134, 135, 142, 151, 158, 182, 191, 194, 195, 220, 221, 233, 234, 237, 267, 271, 272, 274, 279, 285, 286, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 358, 386, 390, 392, 395, 397, 406, 409], "30": [2, 3, 52, 77, 154, 176, 257, 258, 348, 352, 389, 391, 392, 397, 402, 403, 404, 405, 406, 407, 408], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 101, 103, 105, 107, 115, 116, 118, 119, 128, 129, 130, 131, 135, 136, 137, 138, 142, 143, 144, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 171, 173, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 377, 379, 380, 381, 385, 387, 390, 391, 393, 394, 395, 396, 397, 398, 401, 404, 406, 408, 409], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 99, 100, 101, 105, 106, 107, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 153, 154, 155, 157, 158, 159, 160, 162, 163, 166, 171, 172, 176, 177, 179, 181, 182, 185, 192, 193, 196, 199, 200, 201, 203, 207, 209, 213, 218, 219, 220, 221, 222, 223, 225, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 296, 297, 298, 305, 307, 308, 313, 314, 315, 316, 317, 321, 322, 330, 332, 333, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 358, 359, 360, 363, 364, 367, 369, 375, 379, 380, 381, 404, 406], "entri": [2, 3, 14, 15, 17, 23, 30, 31, 34, 37, 43, 48, 50, 51, 53, 56, 57, 63, 70, 75, 76, 77, 78, 80, 81, 99, 100, 113, 114, 115, 118, 119, 120, 121, 129, 130, 135, 136, 139, 142, 143, 144, 145, 154, 158, 160, 161, 163, 164, 167, 168, 171, 174, 177, 179, 181, 184, 186, 189, 191, 193, 194, 195, 203, 205, 207, 216, 217, 235, 243, 244, 273, 274, 279, 283, 284, 297, 299, 319, 330, 331, 332, 333, 385, 390, 392, 393, 394, 395, 396, 398, 402, 403, 404, 405, 406, 409], "onto": [2, 8, 48, 50, 53, 213, 267, 271, 272, 274, 275, 280, 281, 282, 283, 284, 285, 286, 393, 404], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 91, 92, 94, 95, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 139, 142, 143, 144, 145, 151, 158, 159, 193, 194, 195, 196, 199, 207, 217, 220, 221, 240, 243, 244, 246, 279, 280, 281, 283, 284, 292, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 371, 381, 384, 387, 392, 393, 397, 398, 399, 404, 406, 409], "without": [2, 3, 7, 9, 14, 15, 16, 43, 48, 50, 53, 54, 62, 73, 75, 79, 99, 100, 115, 119, 135, 136, 142, 143, 144, 145, 152, 154, 164, 167, 197, 207, 233, 234, 237, 238, 269, 270, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 329, 330, 331, 332, 333, 334, 377, 384, 385, 390, 391, 392, 394, 395, 396, 397, 402, 403, 404, 406, 409], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 48, 49, 50, 53, 54, 59, 91, 92, 115, 119, 131, 135, 136, 137, 138, 142, 143, 152, 154, 155, 164, 166, 167, 183, 193, 194, 199, 202, 205, 207, 217, 219, 233, 235, 239, 242, 247, 271, 272, 276, 277, 280, 281, 282, 283, 284, 285, 286, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 328, 330, 331, 332, 333, 334, 363, 367, 369, 372, 373, 376, 377, 387, 391, 392, 393, 396, 399, 402, 403, 404, 406, 408, 409], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 51, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 73, 79, 82, 92, 99, 100, 103, 115, 119, 124, 125, 135, 136, 142, 143, 151, 182, 205, 219, 220, 221, 223, 225, 227, 233, 237, 240, 242, 245, 246, 267, 285, 290, 358, 364, 390, 392, 393, 397, 399, 404, 406, 409], "cursor": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "place": [2, 3, 24, 30, 31, 32, 37, 43, 48, 50, 53, 56, 86, 87, 94, 97, 107, 115, 116, 119, 135, 136, 142, 143, 144, 145, 154, 162, 168, 181, 195, 198, 199, 201, 203, 204, 205, 207, 217, 247, 273, 279, 285, 364, 369, 370, 386, 391, 392, 395, 398, 402, 403, 404, 406], "afterward": [2, 115, 119, 135, 136, 142, 143, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 402, 409], "tell": [2, 3, 4, 7, 137, 138, 390, 393, 397, 402, 403], "our": [2, 3, 7, 8, 11, 18, 52, 158, 350, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 408], "far": [2, 54, 236, 262, 263, 399, 404, 409], "restrict": [2, 3, 391, 405, 406, 409], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 94, 115, 119, 134, 135, 136, 142, 143, 164, 167, 181, 183, 196, 199, 201, 203, 207, 213, 354, 390, 404], "64": [2, 3, 48, 50, 53, 73, 79, 94, 158, 185, 223, 224, 232, 235, 239, 246, 247, 255, 328, 390, 391, 392, 393, 395, 399, 401, 403, 404, 405, 406, 408, 409], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 99, 100, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 152, 155, 156, 162, 164, 165, 166, 167, 168, 169, 175, 177, 179, 181, 183, 184, 186, 190, 193, 195, 197, 198, 199, 201, 203, 207, 209, 213, 216, 217, 219, 229, 230, 233, 234, 235, 237, 238, 239, 242, 248, 249, 255, 256, 264, 267, 268, 269, 270, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 288, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 336, 385, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "unit8": 2, "img": 2, "randint": [2, 63, 94, 197, 406], "255": [2, 94, 197, 404, 406], "uint8": [2, 3, 30, 48, 50, 53, 73, 79, 113, 114, 129, 130, 168, 179, 197, 391, 398, 405, 406, 408, 409], "next": [2, 3, 4, 8, 14, 15, 16, 23, 30, 31, 34, 36, 37, 43, 49, 52, 54, 56, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 92, 94, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 129, 130, 131, 135, 136, 140, 141, 142, 143, 144, 145, 151, 154, 155, 157, 158, 164, 167, 168, 169, 174, 175, 179, 183, 184, 186, 189, 190, 193, 195, 204, 205, 207, 213, 216, 219, 234, 235, 238, 239, 242, 258, 279, 291, 293, 296, 297, 299, 300, 301, 303, 304, 305, 306, 312, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 350, 361, 363, 365, 391, 393, 395, 398, 399, 401, 404, 405, 408, 409], "ask": [2, 8, 73, 79, 92, 99, 100, 350, 392, 393, 394, 395, 402, 403, 405, 409], "do": [2, 3, 4, 7, 81, 115, 119, 135, 136, 142, 143, 144, 145, 151, 182, 204, 205, 216, 235, 239, 246, 248, 269, 314, 330, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 408, 409], "automat": [2, 3, 5, 27, 62, 64, 81, 86, 87, 94, 107, 115, 118, 119, 120, 135, 136, 137, 138, 142, 143, 154, 164, 167, 177, 195, 204, 220, 235, 239, 267, 279, 282, 348, 385, 390, 392, 394, 395, 402, 403, 404, 406, 408], "hand": [2, 3, 7, 21, 30, 402, 403, 404], "look": [2, 3, 5, 7, 8, 43, 92, 115, 119, 128, 135, 136, 137, 138, 142, 143, 181, 182, 201, 207, 282, 286, 287, 288, 386, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409], "assum": [2, 3, 6, 30, 54, 59, 60, 75, 77, 79, 80, 81, 83, 84, 90, 99, 115, 119, 135, 136, 142, 143, 157, 160, 163, 171, 181, 182, 189, 195, 199, 201, 203, 213, 235, 239, 265, 289, 301, 306, 319, 328, 339, 340, 341, 342, 344, 345, 346, 347, 350, 390, 392, 393, 401, 404], "lead": [2, 3, 4, 8, 10, 12, 23, 30, 31, 37, 43, 49, 52, 56, 59, 60, 75, 98, 113, 114, 115, 118, 120, 121, 195, 236, 255, 262, 263, 390, 393, 402, 403, 404, 406, 408], "leav": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 68, 115, 209, 217, 390, 397, 406], "tree": [2, 48, 50, 53, 115, 119, 135, 136, 142, 143, 402, 406], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 94, 103, 113, 114, 115, 116, 118, 119, 120, 121, 135, 136, 142, 143, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 177, 179, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 220, 221, 228, 235, 239, 240, 245, 246, 261, 267, 273, 274, 282, 283, 285, 286, 289, 290, 297, 299, 305, 313, 315, 317, 319, 364, 369, 385, 390, 392, 401, 403, 404, 406, 409], "don": [2, 3, 4, 6, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 158, 391, 392, 397, 406, 408, 409], "throw": [2, 43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 207, 409], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 30, 34, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 94, 99, 100, 105, 107, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 155, 157, 158, 162, 164, 167, 168, 169, 179, 183, 184, 186, 190, 193, 195, 198, 199, 207, 208, 216, 217, 219, 227, 229, 230, 235, 239, 242, 255, 256, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 350, 358, 364, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "max": [2, 23, 50, 59, 63, 82, 91, 92, 105, 166, 196, 262, 263, 280, 281, 297, 298, 299, 305, 315, 317, 319, 390, 392, 393, 399], "label": [2, 50, 51, 54, 63, 390, 402, 406], "100": [2, 14, 15, 16, 17, 43, 49, 52, 59, 60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 105, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 161, 168, 177, 186, 191, 193, 207, 245, 275, 279, 350, 359, 377, 391, 392, 393, 394, 396, 399, 401, 402, 403, 404, 405, 406, 408, 409], "rb_pytre": 2, "randn": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 92, 94, 99, 100, 107, 157, 177, 213, 222, 223, 227, 229, 230, 233, 234, 237, 238, 243, 244, 245, 250, 253, 254, 256, 267, 268, 269, 270, 273, 274, 282, 283, 285, 288, 289, 290, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333, 366, 385, 406, 408, 409], "c": [2, 3, 6, 7, 30, 48, 50, 52, 53, 59, 60, 78, 177, 197, 237, 238, 391, 406], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 99, 100, 105, 107, 115, 119, 135, 136, 142, 143, 155, 157, 159, 164, 166, 167, 177, 183, 186, 207, 213, 216, 218, 219, 224, 225, 226, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 247, 255, 264, 276, 277, 280, 281, 284, 292, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 336, 393, 406, 408], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 119, 122, 135, 142, 150, 151, 155, 158, 161, 164, 167, 175, 184, 191, 205, 209, 213, 246, 250, 265, 330, 331, 332, 333, 358, 366, 397, 401, 406, 409], "len": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 107, 179, 220, 221, 240, 246, 390, 397, 399, 402, 404, 405, 406, 408], "ambigu": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 103, 115, 119, 135, 136, 142, 143, 155, 162, 181, 195, 198, 199, 201, 203, 207, 285, 386, 390, 394, 404], "deal": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 314, 386, 390, 392, 403, 406], "interpret": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 391], "put": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 119, 129, 130, 143, 144, 145, 205, 357, 381, 385, 391, 392, 393, 394, 402, 404], "solv": [2, 4, 9, 10, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 384, 390, 391, 392, 397, 399, 402, 403, 404, 406], "clear": [2, 3, 11, 30, 31, 37, 38, 43, 49, 52, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 123, 135, 136, 142, 143, 207, 359, 394, 397], "cut": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "distinct": [2, 3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 155, 396, 401], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 135, 136, 142, 143, 152, 207, 230, 233, 237, 240, 394, 404, 406, 408, 409], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 30, 31, 37, 56, 79, 111, 112, 115, 118, 119, 120, 123, 124, 125, 128, 135, 136, 137, 138, 142, 143, 154, 164, 167, 182, 240, 255, 279, 282, 286, 287, 288, 292, 314, 330, 331, 332, 333, 385, 386, 390, 391, 392, 394, 396, 401, 402, 403, 404, 405, 406, 409], "collate_fn": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 406, 408], "__init__": [2, 3, 7, 115, 131, 150, 152, 155, 164, 167, 183, 219, 230, 233, 237, 242, 290, 297, 299, 300, 305, 312, 317, 319, 321, 322, 387, 404, 409], "major": 2, "worri": [2, 61], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 86, 87, 88, 92, 99, 101, 103, 107, 115, 116, 119, 123, 135, 136, 142, 143, 154, 217, 390, 392, 394, 402, 403, 404, 409], "though": [2, 4, 11, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 240, 392, 402, 403], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 51, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 176, 195, 236, 262, 263, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 391, 395, 398, 404, 406, 409], "latter": [2, 18, 19, 20, 43, 75, 115, 119, 135, 136, 142, 143, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 316, 379, 380], "inv": [2, 3, 161, 166, 169, 179, 186, 191, 404], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 94, 99, 100, 101, 102, 103, 105, 107, 115, 118, 119, 120, 121, 135, 136, 139, 142, 143, 154, 155, 158, 162, 164, 165, 168, 169, 171, 175, 177, 181, 183, 184, 185, 186, 190, 193, 195, 198, 199, 201, 203, 207, 208, 219, 235, 239, 245, 246, 247, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 282, 283, 284, 285, 286, 287, 293, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 310, 312, 314, 316, 317, 318, 319, 321, 322, 328, 334, 348, 349, 378, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 402, 404, 406, 409], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51, 55, 56, 61, 62, 64, 65, 66, 67, 68, 84, 115, 119, 135, 136, 142, 143, 166, 169, 190, 197, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 330, 406], "multithread": [2, 3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 132, 133, 397, 406], "thread": [2, 14, 15, 17, 48, 50, 53, 111, 112, 124, 125, 135, 142], "prefetch": [2, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 390, 391, 393, 406], "advis": [2, 11, 76, 398, 409], "benchmark": [2, 3, 9, 111, 112, 124, 125], "techniqu": [2, 8, 135, 142, 391, 397, 406], "real": [2, 5, 79, 286, 386, 393, 404], "life": [2, 168], "adopt": [2, 3, 5, 390, 409], "throughput": [2, 9, 125, 390], "constant": [2, 11, 32, 158, 177, 194, 387, 390, 392, 393, 409], "throughout": [2, 3, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 392, 402, 409], "further": [2, 3, 5, 24, 390, 392, 394], "refin": [2, 79, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328], "coupl": [2, 393, 395, 396, 404, 406], "get": [2, 3, 4, 6, 7, 8, 9, 30, 31, 37, 48, 49, 50, 52, 53, 56, 73, 75, 79, 86, 87, 92, 99, 100, 101, 103, 105, 107, 115, 116, 119, 135, 136, 142, 143, 152, 157, 159, 164, 166, 167, 175, 177, 182, 194, 195, 197, 199, 205, 267, 276, 277, 282, 283, 286, 293, 330, 331, 332, 333, 334, 350, 354, 385, 389, 390, 391, 392, 393, 400, 402, 403, 404, 406, 407, 408, 409], "first_elt": 2, "128": [2, 73, 75, 79, 100, 111, 112, 124, 125, 224, 227, 391, 393, 399, 402, 404, 405, 406], "wa": [2, 3, 5, 7, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 98, 99, 115, 119, 135, 136, 142, 143, 199, 209, 217, 237, 296, 298, 311, 313, 316, 318, 320, 336, 386, 391, 392, 394, 395, 401, 402, 406, 408], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 30, 31, 34, 37, 43, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 99, 100, 105, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 154, 155, 158, 159, 164, 165, 166, 167, 174, 177, 183, 184, 186, 189, 193, 195, 196, 197, 205, 207, 213, 216, 217, 220, 221, 223, 224, 225, 226, 227, 230, 232, 235, 239, 240, 243, 244, 245, 246, 250, 253, 256, 267, 268, 269, 270, 273, 274, 276, 277, 279, 280, 281, 282, 283, 285, 288, 290, 293, 314, 348, 377, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 159], "larger": [2, 4, 235, 239, 304, 312, 408], "volum": 2, "due": [2, 3, 5, 23, 396, 405, 406, 409], "serialis": [2, 48, 50, 53], "memorymappedtensor": [2, 34, 48, 50, 57, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 352, 397, 405], "well": [2, 3, 8, 21, 23, 43, 49, 51, 52, 59, 60, 62, 92, 97, 101, 108, 115, 119, 135, 136, 142, 143, 199, 207, 223, 237, 257, 258, 314, 321, 334, 390, 391, 393, 394, 395, 396, 398, 405, 406, 408, 409], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 163, 164, 165, 167, 189, 192, 194, 200, 207, 219, 237, 285, 286, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 357, 385, 390, 392, 393, 397, 402], "file": [2, 6, 7, 8, 48, 50, 53, 73, 75, 76, 77, 79, 80, 81, 84, 144, 349, 350, 352, 387, 389, 391, 402, 406, 407, 409], "locat": [2, 7, 48, 50, 53, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 135, 136, 142, 143, 163, 168, 177, 188, 236, 250, 262, 263, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 390, 391, 392, 398, 402, 403, 406], "improv": [2, 4, 11, 172, 296, 386, 402, 403, 406], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 135, 142, 392, 402, 406], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 30, 43, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 99, 100, 113, 114, 115, 118, 119, 120, 123, 135, 136, 142, 143, 152, 158, 186, 189, 196, 205, 207, 217, 245, 246, 276, 277, 282, 286, 313, 314, 316, 390, 391, 393, 394, 396, 398, 404, 406, 409], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 51, 55, 56, 62, 64, 65, 66, 67, 68, 86, 92, 166, 218, 237, 238, 304, 393, 397, 406], "sharabl": [2, 135, 142], "collabor": [2, 79], "rather": [2, 4, 103, 184, 390, 391, 392, 394, 396, 402, 403, 406], "incur": [2, 111, 112, 124, 125], "transmiss": 2, "overhead": [2, 111, 112, 124, 125, 135, 142], "instanti": [2, 3, 14, 15, 21, 48, 49, 50, 52, 53, 59, 60, 62, 91, 92, 123, 154, 198, 246, 348, 390, 391, 395, 396, 398, 402, 403, 404, 406, 409], "content": [2, 8, 16, 30, 31, 37, 48, 49, 50, 52, 53, 56, 59, 60, 98, 115, 118, 119, 120, 132, 135, 136, 142, 143, 183, 220, 221, 240, 245, 246, 282, 314, 392, 404, 408], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 90, 91, 92, 115, 119, 128, 129, 130, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 179, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 207, 213, 230, 250, 267, 268, 269, 270, 274, 282, 283, 285, 286, 288, 289, 290, 291, 299, 319, 328, 363, 383, 385, 386, 390, 391, 392, 393, 395, 396, 405, 408], "writer": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 92, 94, 95, 99, 105, 106, 110, 392, 406], "tensordictroundrobinwrit": [2, 94], "goe": [2, 4, 137, 138, 390, 392, 402, 403, 409], "prioritizedsampl": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 301, 306, 328, 390, 406], "access": [2, 3, 7, 8, 11, 43, 49, 76, 78, 115, 119, 135, 136, 142, 143, 181, 201, 207, 381, 384, 390, 394, 402, 403, 404, 406], "show": [2, 11, 43, 115, 119, 135, 136, 142, 143, 207, 246, 350, 385, 390, 392, 393, 402, 403, 404, 406, 408], "tensordictreplaybuff": [2, 49, 52, 59, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 99, 100, 105, 157, 158, 364, 377, 383, 390, 391, 393, 406], "mp": [2, 18, 19, 20, 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 205], "def": [2, 3, 12, 22, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 131, 135, 136, 142, 143, 150, 152, 154, 155, 164, 167, 183, 199, 207, 219, 230, 233, 234, 237, 238, 242, 247, 279, 282, 290, 297, 299, 300, 305, 312, 314, 317, 319, 321, 322, 348, 387, 390, 391, 401, 402, 403, 404, 406, 408, 409], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 34, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 105, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 126, 127, 135, 136, 142, 143, 152, 155, 157, 159, 164, 165, 166, 167, 174, 175, 177, 186, 189, 195, 197, 199, 205, 208, 216, 219, 229, 230, 235, 239, 241, 242, 255, 256, 264, 267, 268, 269, 270, 273, 274, 276, 277, 280, 281, 282, 283, 285, 288, 290, 328, 331, 332, 333, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 358, 366, 385, 386, 390, 393, 403, 404, 408, 409], "__name__": [2, 3, 14, 15, 22, 116, 348, 391, 408], "__main__": [2, 3, 14, 15, 22, 116, 348, 408], "21": [2, 79, 80, 100, 135, 137, 138, 142, 389, 390, 391, 393, 399, 401, 402, 404, 407], "proc": 2, "target": [2, 4, 8, 21, 24, 43, 115, 116, 119, 135, 136, 142, 143, 194, 198, 207, 285, 286, 296, 297, 298, 299, 300, 301, 303, 305, 306, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 333, 334, 370, 376, 377, 386, 387, 393, 399, 402, 404], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 30, 31, 33, 37, 38, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 56, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 92, 94, 99, 100, 101, 103, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 162, 181, 183, 192, 195, 198, 199, 200, 202, 203, 207, 219, 220, 221, 229, 235, 239, 240, 241, 242, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 357, 360, 364, 367, 381, 391, 409], "join": [2, 116, 383, 391, 392, 402], "now": [2, 3, 7, 49, 52, 59, 60, 94, 135, 158, 246, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 405, 406, 409], "20": [2, 63, 80, 99, 100, 105, 115, 119, 123, 135, 136, 142, 143, 194, 207, 232, 233, 234, 237, 238, 273, 358, 389, 391, 392, 393, 397, 402, 403, 404, 405, 406, 407, 408, 409], "_data": [2, 404], "It": [2, 3, 4, 7, 23, 43, 51, 54, 59, 61, 63, 75, 81, 94, 97, 105, 110, 115, 119, 121, 131, 132, 135, 136, 137, 138, 142, 143, 144, 145, 155, 157, 168, 175, 177, 182, 194, 199, 204, 207, 209, 223, 225, 231, 245, 246, 255, 257, 258, 264, 265, 271, 275, 276, 279, 280, 281, 284, 286, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 322, 328, 329, 330, 348, 357, 363, 384, 385, 386, 390, 391, 393, 394, 402, 403, 404, 405, 406, 408, 409], "difficult": [2, 4, 135, 398], "pai": [2, 8, 390, 393], "word": [2, 3, 11, 54, 73, 75, 77, 79, 80, 81, 314, 390, 397, 404, 409], "1m": [2, 73, 79, 370, 390, 392, 393, 405], "doe": [2, 3, 18, 48, 49, 50, 53, 59, 63, 73, 75, 79, 83, 84, 90, 91, 92, 99, 101, 103, 110, 115, 119, 129, 130, 135, 136, 142, 143, 144, 145, 205, 227, 233, 234, 235, 237, 238, 239, 248, 265, 273, 287, 288, 296, 298, 306, 313, 314, 316, 329, 367, 385, 387, 390, 391, 392, 393, 394, 397, 402, 404, 406, 409], "howev": [2, 3, 5, 7, 43, 115, 119, 135, 136, 142, 143, 158, 189, 194, 199, 207, 296, 298, 299, 313, 316, 318, 319, 385, 390, 391, 393, 396, 404, 406, 409], "capac": [2, 49, 52, 59, 60, 86, 87, 91, 99, 107, 392, 397], "There": [2, 10, 94, 235, 239, 385, 387, 392, 393, 395, 397, 402, 403, 404, 406, 409], "circumv": 2, "account": [2, 86, 87, 107, 118, 120, 143, 154, 158, 243, 244, 385, 391, 393, 406, 409], "save": [2, 3, 8, 43, 48, 49, 50, 52, 53, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 94, 101, 102, 103, 107, 108, 115, 119, 135, 136, 142, 143, 204, 207, 349, 350, 352, 357, 367, 387, 397, 398, 399, 402, 403], "convent": [2, 3, 73, 75, 76, 77, 78, 79, 80, 81, 115, 119, 135, 136, 142, 143, 144, 145, 386, 390, 393, 402, 403, 404], "overridden": [2, 3, 73, 76, 77, 79, 80, 81, 115, 119, 135, 136, 142, 143, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 330, 332, 333, 393, 402], "dim_extend": [2, 49, 52, 59, 60], "obtain": [2, 7, 54, 73, 115, 119, 135, 136, 142, 143, 157, 181, 194, 203, 219, 255, 364, 390, 392, 394, 395, 396, 402, 403], "counterpart": 2, "desir": [2, 3, 11, 29, 43, 115, 119, 135, 136, 142, 143, 153, 155, 162, 177, 179, 181, 182, 195, 198, 199, 201, 203, 207, 214, 215, 220, 221, 240, 246, 267, 274, 275, 282, 283, 284, 285, 286, 385, 390, 402, 403, 404, 406], "diversifi": 2, "offer": [2, 3, 7, 111, 112, 115, 119, 124, 125, 129, 130, 135, 136, 142, 143, 348, 385, 390, 391, 394, 396, 397, 402, 404, 406, 409], "accomplish": [2, 209, 394], "anoth": [2, 3, 8, 62, 79, 92, 99, 115, 118, 119, 120, 123, 135, 136, 142, 143, 155, 164, 165, 167, 195, 198, 240, 282, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 385, 386, 390, 392, 393, 395, 396, 401, 402, 403, 404, 409], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 76, 158, 209, 297, 303, 304, 312, 321, 357, 387, 394, 405, 406, 408], "docstr": [2, 43, 115, 119, 135, 136, 142, 143, 207, 394, 395], "extens": [2, 49, 52, 59, 60, 100, 387, 406], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 137, 138, 142, 143, 197, 199, 207, 230, 233, 237, 247, 275, 296, 306, 314, 316, 384, 387, 391, 397, 401, 406], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 115, 119, 135, 136, 142, 143, 164, 167, 205, 207, 217, 233, 235, 237, 239, 280, 281, 282, 286, 306, 391, 395, 401, 402, 403, 409], "happi": 2, "concaten": [2, 8, 14, 15, 21, 39, 41, 79, 158, 159, 177, 198, 237, 240, 288, 390, 391, 395, 402, 403, 404, 406, 409], "schedul": [2, 4, 7, 54, 363, 392, 404], "transformedenv": [2, 3, 11, 43, 115, 116, 119, 135, 136, 142, 143, 151, 152, 155, 158, 161, 162, 164, 167, 168, 169, 171, 174, 175, 176, 177, 179, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 198, 205, 207, 235, 239, 279, 350, 390, 391, 392, 393, 394, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "stepcount": [2, 43, 115, 119, 129, 130, 135, 136, 142, 143, 144, 145, 198, 207, 390, 391, 392, 393, 394, 399, 402, 403, 408], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 34, 43, 57, 105, 115, 116, 119, 121, 135, 136, 142, 143, 151, 154, 155, 158, 161, 162, 168, 174, 175, 177, 179, 184, 185, 186, 189, 191, 194, 195, 196, 198, 199, 205, 207, 235, 239, 279, 348, 350, 377, 383, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 405, 406, 408, 409], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 43, 158, 186, 383, 397, 406], "cartpol": [2, 3, 11, 34, 43, 57, 113, 114, 115, 119, 135, 136, 142, 143, 154, 155, 158, 189, 194, 205, 207, 279, 348, 391, 393, 395, 397, 398, 399, 406, 409], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 34, 43, 57, 75, 77, 105, 115, 116, 118, 119, 120, 124, 125, 132, 135, 136, 142, 143, 154, 155, 158, 161, 169, 174, 175, 177, 184, 186, 189, 191, 193, 194, 195, 196, 198, 205, 207, 235, 239, 279, 325, 339, 340, 341, 342, 344, 345, 346, 347, 348, 385, 391, 393, 394, 395, 396, 397, 398, 399, 404, 406, 408, 409], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 43, 111, 112, 115, 119, 124, 125, 131, 135, 136, 137, 138, 142, 143, 151, 152, 155, 158, 164, 167, 175, 183, 186, 208, 219, 230, 242, 256, 258, 267, 274, 282, 283, 297, 299, 301, 303, 317, 319, 321, 322, 377, 385, 390, 391, 392, 393, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 408, 409], "8": [2, 3, 6, 7, 43, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 99, 100, 111, 112, 113, 114, 115, 119, 135, 136, 142, 143, 151, 154, 194, 220, 221, 223, 224, 232, 240, 268, 269, 270, 282, 285, 288, 312, 389, 390, 391, 397, 402, 403, 404, 405, 406, 407, 408, 409], "traj_kei": [2, 92, 99, 100, 406], "truncated_kei": [2, 92, 99, 100, 186, 193], "strict_length": [2, 73, 79, 92, 99, 100, 350], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 34, 37, 43, 49, 52, 56, 57, 60, 61, 86, 87, 91, 92, 99, 100, 107, 115, 119, 135, 136, 142, 143, 163, 181, 186, 189, 199, 203, 207, 234, 238, 250, 256, 275, 279, 282, 284, 285, 286, 296, 298, 299, 300, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333, 358, 370, 390, 391, 392, 393, 395, 396, 397, 398, 399, 402, 403, 404, 406, 408, 409], "enumer": [2, 14, 15, 16, 21, 34, 43, 52, 57, 60, 100, 115, 119, 135, 136, 142, 143, 207, 323, 386, 390, 391, 392, 393, 399, 402, 406, 408], "break": [2, 5, 14, 15, 16, 21, 43, 52, 60, 73, 76, 77, 79, 80, 81, 82, 92, 99, 100, 105, 115, 119, 135, 136, 142, 143, 155, 158, 186, 205, 207, 235, 239, 350, 391, 397, 399, 406, 408], "step_count": [2, 14, 15, 16, 43, 115, 119, 124, 125, 135, 136, 142, 143, 193, 207, 392, 393, 394, 399, 408], "32": [2, 22, 30, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 100, 140, 141, 144, 145, 220, 221, 222, 223, 224, 226, 227, 232, 240, 245, 246, 251, 252, 254, 255, 264, 328, 348, 390, 391, 393, 395, 396, 404, 405, 406, 408, 409], "33": [2, 30, 43, 94, 115, 119, 135, 136, 142, 143, 207, 220, 221, 240, 390, 391, 392, 403, 404, 405], "34": [2, 220, 221, 240, 391, 402, 404], "35": [2, 220, 221, 240, 391, 404], "36": [2, 391, 392, 404, 405, 406], "37": [2, 157, 391, 404], "38": [2, 7, 389, 391, 404, 406, 407, 409], "39": [2, 77, 124, 125, 391, 392, 393, 403, 404, 405], "40": [2, 124, 125, 389, 390, 391, 392, 402, 403, 404, 405, 407], "41": [2, 391, 404, 405], "11": [2, 10, 23, 63, 86, 87, 91, 100, 107, 116, 151, 197, 207, 219, 242, 390, 391, 392, 393, 402, 404, 405, 406], "12": [2, 10, 80, 86, 87, 100, 107, 124, 125, 135, 140, 141, 142, 207, 390, 391, 392, 393, 402, 404, 406], "13": [2, 5, 12, 99, 100, 139, 204, 207, 389, 390, 391, 392, 398, 403, 404, 406, 407], "14": [2, 6, 12, 73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100, 115, 119, 135, 136, 142, 143, 177, 207, 390, 391, 392, 393, 402, 404, 405, 406], "15": [2, 23, 73, 74, 75, 76, 77, 78, 79, 80, 81, 100, 115, 119, 135, 136, 142, 143, 207, 273, 280, 281, 307, 391, 393, 404, 406], "16": [2, 3, 43, 80, 92, 100, 111, 112, 115, 119, 124, 125, 135, 136, 142, 143, 158, 207, 390, 391, 392, 393, 402, 404, 406], "17": [2, 11, 80, 100, 119, 135, 151, 207, 390, 391, 393, 402, 404, 405], "could": [2, 3, 4, 6, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 391, 392, 398, 402, 403, 405, 409], "sai": [2, 43, 115, 119, 135, 136, 142, 143, 207, 245, 402, 405, 409], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 30, 31, 37, 41, 56, 88, 92, 99, 100, 115, 118, 119, 120, 123, 135, 136, 142, 143, 164, 167, 182, 189, 245, 246, 283, 391, 392, 393, 402, 403, 404], "handl": [2, 3, 21, 43, 115, 119, 135, 136, 142, 143, 204, 205, 207, 239, 240, 314, 367, 379, 380, 390, 391, 392, 394, 396, 403, 406], "suggest": [2, 328, 390, 403], "serialenv": [2, 3, 115, 119, 135, 136, 143, 195, 207, 279, 383, 408, 409], "squeez": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 154, 155, 158, 192, 194, 220, 221, 259, 260, 390, 404, 406], "6": [2, 3, 7, 14, 15, 16, 17, 23, 43, 52, 73, 80, 81, 92, 100, 113, 114, 119, 135, 140, 141, 151, 154, 177, 179, 194, 220, 221, 223, 224, 225, 228, 232, 234, 240, 245, 246, 247, 251, 261, 279, 282, 290, 389, 390, 391, 397, 402, 403, 404, 406, 407, 408], "5": [2, 3, 14, 15, 23, 30, 31, 37, 39, 40, 41, 42, 43, 49, 52, 56, 59, 60, 73, 94, 99, 100, 105, 115, 116, 119, 124, 125, 129, 130, 132, 135, 136, 140, 141, 142, 143, 144, 145, 151, 154, 155, 157, 186, 193, 194, 207, 218, 219, 220, 221, 223, 224, 229, 230, 231, 232, 233, 236, 237, 240, 242, 245, 246, 251, 256, 262, 263, 273, 274, 279, 283, 289, 313, 316, 318, 321, 322, 348, 385, 389, 390, 391, 393, 395, 397, 399, 402, 403, 404, 406, 407, 408, 409], "7": [2, 3, 6, 10, 43, 49, 52, 59, 92, 100, 115, 119, 129, 130, 135, 136, 142, 143, 151, 154, 194, 219, 220, 221, 224, 240, 242, 245, 336, 389, 390, 391, 393, 397, 402, 403, 404, 405, 406, 407, 408], "9": [2, 3, 7, 23, 43, 49, 52, 59, 80, 81, 92, 100, 105, 113, 114, 128, 137, 138, 143, 151, 154, 194, 205, 207, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 323, 328, 386, 389, 390, 391, 392, 397, 402, 403, 404, 406, 407], "18": [2, 80, 100, 140, 141, 144, 145, 207, 246, 389, 390, 391, 392, 393, 403, 404, 407], "19": [2, 80, 99, 100, 105, 207, 390, 391, 392, 393, 402, 403, 404], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 76, 135, 142, 198, 200, 246, 386, 387, 390, 391, 403, 406, 408], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 43, 48, 50, 53, 63, 73, 76, 78, 81, 82, 111, 113, 115, 119, 124, 128, 129, 130, 132, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 166, 169, 184, 189, 190, 193, 199, 201, 204, 207, 217, 235, 239, 274, 283, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 330, 332, 333, 334, 348, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 387, 390, 391, 392, 393, 396, 398, 402, 403, 404, 409], "randomcroptensordict": [2, 390], "unlik": [2, 25, 98, 119, 129, 130, 144, 145, 218, 279, 306, 316, 350, 391, 395, 397, 408], "stop": [2, 3, 16, 21, 54, 81, 92, 99, 100, 115, 119, 135, 136, 142, 143, 392, 397, 402, 403, 408, 409], "signal": [2, 3, 14, 15, 16, 17, 23, 73, 75, 77, 79, 80, 81, 92, 99, 100, 105, 119, 129, 130, 144, 145, 158, 168, 193, 196, 217, 386, 390, 392, 402, 403, 406, 409], "disk": [2, 3, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 367, 387, 390, 391, 393, 397, 398, 406], "dump": [2, 3, 11, 34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 94, 101, 103, 107, 348, 349, 350, 398, 399, 402], "load": [2, 6, 7, 14, 15, 16, 17, 34, 43, 48, 49, 50, 52, 53, 54, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 94, 101, 102, 103, 107, 108, 114, 115, 119, 135, 136, 142, 143, 150, 205, 207, 381, 387, 390, 392, 406], "json": 2, "metadata": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 75, 115, 119, 135, 136, 142, 143, 299, 321, 392, 394, 396, 397, 402, 403, 409], "anticip": [2, 164, 167], "compli": [2, 79], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 55, 56, 62, 64, 65, 66, 67, 68, 75, 204, 209, 247, 267, 274, 275, 282, 283, 284, 285, 286, 392, 402, 403, 404, 406], "exact": [2, 3, 23, 135, 237], "statu": [2, 3, 115], "prioriti": [2, 4, 49, 59, 60, 86, 87, 88, 91, 92, 101, 103, 107, 299, 300, 301, 303, 304, 305, 306, 312, 317, 319, 321, 322, 328, 387, 390, 391, 406], "heap": 2, "under": [2, 3, 4, 21, 43, 54, 73, 75, 76, 77, 79, 80, 81, 113, 114, 115, 118, 119, 120, 121, 135, 136, 139, 142, 143, 207, 267, 274, 275, 282, 283, 284, 285, 286, 314, 330, 331, 332, 333, 334, 350, 386, 390, 391, 395, 402, 404, 409], "hood": [2, 21, 73, 115, 119, 135, 136, 142, 143, 404], "naiv": [2, 201, 394], "just": [2, 3, 4, 12, 103, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 132, 133, 135, 136, 137, 138, 139, 142, 143, 154, 161, 217, 246, 358, 385, 387, 390, 391, 392, 393, 394, 395, 397, 402, 403, 404, 406, 408, 409], "public": [2, 78, 102, 181, 203], "serializ": 2, "consum": [2, 98, 100, 279, 391, 392, 397, 403, 406], "much": [2, 8, 14, 15, 17, 49, 59, 79, 91, 92, 135, 142, 313, 316, 392, 394, 398, 402, 403, 404, 406, 409], "duplic": [2, 43, 98, 115, 119, 135, 136, 142, 143, 207, 297, 299, 301, 306, 312, 314, 317, 319, 321, 322, 328], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 34, 43, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 173, 174, 175, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 216, 222, 223, 224, 225, 226, 227, 230, 235, 239, 245, 251, 252, 254, 256, 257, 267, 268, 269, 270, 273, 274, 276, 277, 279, 280, 281, 282, 283, 290, 291, 296, 297, 298, 299, 300, 301, 303, 304, 305, 308, 312, 313, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 348, 350, 377, 385, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 408, 409], "plu": [2, 14, 15, 17, 54, 135, 142, 404], "enabl": [2, 7, 8, 75, 86, 87, 98, 107, 155, 235, 239, 279, 280, 281, 348, 350, 363, 392, 394, 402, 403, 404, 406], "three": [2, 25, 26, 29, 33, 39, 40, 41, 42, 47, 82, 299, 385, 387, 392, 394, 395, 402, 403, 404, 406, 409], "flatstoragecheckpoint": 2, "discard": [2, 3, 63, 75, 77, 119, 201, 216, 349, 406, 409], "compress": 2, "At": [2, 241, 276, 391, 392, 393, 397, 401, 404, 405], "correct": [2, 4, 48, 50, 53, 115, 119, 135, 136, 142, 143, 175, 370, 392, 393], "addit": [2, 3, 4, 43, 75, 115, 119, 135, 136, 142, 143, 144, 162, 181, 195, 198, 199, 201, 203, 207, 233, 271, 272, 273, 279, 285, 295, 314, 330, 348, 386, 390, 391, 394, 402, 403, 406], "nestedstoragecheckpoint": 2, "represent": [2, 43, 55, 56, 115, 119, 135, 136, 142, 143, 181, 201, 203, 207, 390, 404, 405, 409], "appar": [2, 3, 360], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 83, 84, 90, 115, 118, 119, 120, 135, 136, 142, 143, 151, 161, 166, 213, 227, 230, 245, 252, 256, 267, 271, 272, 274, 275, 277, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 301, 303, 304, 305, 321, 322, 328, 385, 391, 392, 393, 394, 395, 396, 402, 403, 404, 408, 409], "assumpt": [2, 3, 62, 404, 406], "accur": [2, 7, 75, 81, 391, 404, 406], "truncat": [2, 3, 14, 15, 16, 17, 34, 36, 43, 44, 51, 57, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 92, 99, 100, 113, 114, 115, 118, 119, 120, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 151, 168, 169, 176, 183, 186, 193, 199, 207, 217, 235, 239, 263, 279, 336, 390, 392, 393, 394, 395, 397, 398, 401, 402, 405, 406, 408, 409], "marl": [2, 128, 146, 158, 196, 245, 246, 247, 394, 402, 403], "extra": [2, 10, 43, 115, 119, 135, 136, 142, 143, 158, 205, 207, 216, 357, 385, 392, 393, 406], "fail": [2, 7, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 135, 152, 209], "concret": [2, 390, 392], "set_se": [2, 3, 14, 15, 16, 17, 21, 34, 43, 57, 111, 112, 115, 119, 124, 125, 131, 135, 136, 142, 143, 154, 177, 184, 189, 194, 196, 199, 207, 397, 399, 404, 408, 409], "manual_se": [2, 3, 25, 34, 39, 40, 49, 52, 57, 59, 60, 76, 80, 81, 99, 100, 111, 112, 115, 119, 135, 136, 142, 143, 152, 154, 166, 177, 186, 189, 194, 196, 207, 243, 244, 253, 267, 275, 276, 277, 280, 281, 289, 296, 297, 299, 300, 304, 312, 319, 397, 399, 402, 403, 404, 408, 409], "200": [2, 14, 15, 16, 21, 34, 43, 57, 73, 115, 118, 119, 120, 135, 136, 142, 143, 144, 145, 186, 207, 223, 224, 231, 257, 258, 348, 350, 390, 393, 397, 399, 404, 406], "22": [2, 79, 99, 100, 204, 390, 391, 392, 402, 404], "rb_test": 2, "_storag": [2, 405, 406], "max_siz": [2, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 101, 105, 107, 392, 397], "102": [2, 404, 406], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 48, 50, 53, 132, 227, 243, 244, 245, 295, 299, 348, 390, 392, 402, 403], "state_dict": [2, 14, 15, 16, 17, 21, 43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 199, 205, 207, 245, 246, 299, 319, 381, 387, 390, 391, 409], "load_state_dict": [2, 14, 15, 16, 17, 21, 43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 199, 205, 207, 299, 319, 387, 390], "drawback": 2, "struggl": 2, "big": [2, 392, 397, 406, 409], "sequenti": [2, 9, 43, 115, 119, 135, 136, 142, 143, 157, 175, 207, 268, 269, 270, 282, 287, 288, 293, 296, 297, 299, 305, 312, 316, 317, 318, 319, 321, 385, 392, 393, 395, 403, 404, 405, 408, 409], "known": [2, 3, 5, 7, 8, 119, 337, 338, 390, 391, 394], "seamless": [2, 240], "integr": [2, 43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 226, 235, 239, 242, 285, 385, 394, 395, 397, 402, 403, 404, 405], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 218, 390, 391, 396], "essenti": [2, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 391, 394, 402, 404, 406], "understand": [2, 3, 8, 390, 391, 394, 395, 402, 403], "purpos": [2, 3, 7, 11, 115, 119, 135, 136, 142, 143, 158, 233, 296, 298, 310, 313, 316, 318, 377, 390, 392, 393, 396, 398, 402, 403, 405, 409], "guid": [2, 11, 137, 138, 140, 141, 194, 384, 390, 403], "explan": [2, 43, 115, 119, 135, 136, 142, 143, 207], "effect": [2, 3, 30, 43, 49, 52, 59, 60, 73, 79, 92, 94, 97, 99, 100, 115, 119, 135, 136, 142, 143, 154, 158, 199, 207, 367, 390, 395, 402, 406, 409], "realm": [2, 395], "As": [2, 3, 4, 43, 52, 59, 60, 62, 73, 94, 115, 119, 128, 135, 136, 137, 138, 142, 143, 186, 286, 330, 385, 390, 391, 392, 393, 394, 396, 397, 402, 403, 404, 405, 406, 408, 409], "practition": 2, "often": [2, 3, 8, 247, 311, 314, 367, 390, 391, 394, 396, 404, 406, 409], "encount": [2, 4, 79, 279, 384, 391, 395, 404], "situat": [2, 129, 130], "sometim": [2, 3, 62, 393, 409], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 76, 77, 80, 81, 111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 129, 130, 133, 134, 139, 144, 145, 233, 234, 235, 237, 238, 239, 242, 268, 269, 270, 314, 317, 387, 391], "immedi": [2, 30, 31, 37, 43, 56, 115, 119, 135, 136, 142, 143, 207, 329, 402, 403], "199": [2, 404], "info": [2, 3, 14, 15, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 97, 99, 100, 113, 114, 115, 118, 119, 120, 121, 129, 130, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 201, 204, 206, 357, 394, 399, 402, 403, 406], "glanc": [2, 394], "seem": [2, 390, 393, 394], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 54, 55, 56, 115, 119, 128, 135, 136, 137, 138, 142, 143, 158, 182, 233, 235, 237, 239, 264, 268, 269, 270, 291, 385, 391, 393, 394, 402], "less": [2, 132, 265, 379, 380, 386, 392, 393, 406, 408], "omit": [2, 362, 392, 396, 404, 406], "proper": [2, 3, 4, 6, 7, 330, 331, 332, 333, 391, 392, 402, 403, 406, 409], "imposs": [2, 3, 105, 209, 296, 298, 313, 316, 318], "determin": [2, 49, 59, 75, 91, 92, 115, 119, 135, 136, 142, 143, 144, 145, 181, 203, 245, 280, 281, 391, 395, 402, 403], "complic": [2, 404, 406, 409], "matter": [2, 32, 397], "inconsist": [2, 409], "miss": [2, 3, 4, 6, 7, 12, 30, 43, 115, 119, 135, 136, 142, 143, 199, 207, 216, 287, 288, 299, 319, 384, 390, 393], "behavior": [2, 4, 43, 62, 115, 119, 135, 136, 142, 143, 199, 207, 304, 312, 321, 393, 403, 404], "primari": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 397], "elimin": [2, 3, 394], "upon": [2, 3, 8, 402, 404], "canon": 2, "definit": [2, 101, 245], "markov": [2, 3, 394, 409], "decis": [2, 3, 222, 254, 273, 302, 315, 393, 394, 395, 402, 403, 406, 409], "mdp": [2, 394, 404], "context": [2, 3, 5, 8, 43, 115, 116, 119, 134, 135, 136, 142, 143, 195, 200, 207, 246, 248, 273, 326, 327, 330, 331, 332, 333, 335, 343, 350, 363, 385, 386, 390, 391, 392, 402, 403, 404, 405, 406], "condit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 63, 64, 65, 66, 67, 68, 194, 205, 274, 275, 279, 283, 284, 295, 390, 402, 404, 406], "complet": [2, 7, 9, 98, 115, 118, 119, 120, 135, 136, 142, 143, 158, 193, 384, 386, 390, 392, 394, 401], "termin": [2, 3, 7, 14, 15, 16, 17, 34, 36, 43, 44, 54, 57, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 113, 114, 115, 118, 119, 120, 124, 125, 129, 130, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 154, 155, 168, 183, 207, 217, 219, 235, 239, 242, 279, 287, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "reward": [2, 3, 14, 15, 16, 32, 34, 36, 43, 44, 48, 53, 54, 57, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 105, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 151, 152, 155, 156, 161, 162, 164, 165, 167, 168, 169, 175, 179, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 198, 199, 200, 202, 203, 205, 207, 213, 216, 219, 235, 242, 273, 279, 291, 296, 297, 299, 300, 301, 303, 304, 305, 308, 312, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 360, 361, 363, 365, 381, 386, 387, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "imit": [2, 3, 310], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 61, 62, 64, 65, 66, 67, 68, 79, 115, 116, 119, 122, 125, 135, 136, 142, 143, 207, 220, 221, 240, 246, 385, 386, 387, 390, 391, 392, 393, 394, 402, 403, 404, 406], "stateless": [2, 3, 115, 119, 135, 136, 142, 143, 155, 198, 314, 348, 390, 394, 404, 409], "simul": [2, 3, 5, 7, 8, 62, 111, 112, 121, 124, 125, 139, 144, 145, 149, 219, 242, 385, 390, 392, 394, 398, 402, 403], "furthermor": [2, 402, 403], "certain": [2, 4, 18, 19, 20, 21, 43, 63, 115, 119, 135, 136, 142, 143, 150, 172, 193, 199, 207, 234, 238, 276, 313, 385, 390, 391, 392, 399, 402, 403, 409], "composit": [2, 3, 25, 26, 27, 28, 29, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 70, 97, 103, 110, 115, 117, 119, 131, 135, 136, 142, 143, 152, 155, 164, 165, 166, 167, 169, 175, 183, 184, 190, 193, 195, 198, 207, 213, 217, 219, 242, 267, 271, 272, 282, 288, 289, 293, 383, 390, 392, 393, 395, 402, 403, 404, 409], "accommod": [2, 3, 394, 395], "uniform": [2, 49, 59, 91, 92, 402], "unambigu": 2, "distinguish": [2, 129, 130, 144, 145], "happen": [2, 3, 115, 119, 135, 136, 142, 143, 272, 391, 396, 397, 398, 405, 409], "limit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 131, 135, 136, 142, 143, 158, 175, 296, 298, 313, 314, 316, 318, 386, 390, 391, 393, 402, 403, 404], "everyth": [2, 391, 392, 393, 398, 399], "belong": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 79, 204, 205, 385, 390, 397, 403], "rule": [2, 135, 164, 167, 286, 385, 392], "field": [2, 3, 14, 15, 16, 17, 23, 30, 34, 43, 48, 50, 51, 53, 54, 57, 59, 60, 61, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 155, 164, 167, 168, 169, 179, 183, 184, 186, 190, 193, 195, 199, 207, 216, 219, 229, 230, 235, 239, 242, 255, 256, 264, 267, 268, 269, 270, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 288, 290, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 371, 384, 385, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "taken": [2, 3, 25, 26, 29, 33, 39, 40, 41, 42, 47, 115, 119, 135, 136, 142, 143, 151, 185, 243, 244, 277, 386, 390, 392, 393, 395, 402, 403, 404], "is_shar": [2, 3, 14, 15, 16, 23, 30, 34, 48, 50, 51, 53, 54, 57, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 91, 107, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 151, 155, 164, 167, 168, 169, 179, 183, 184, 186, 190, 193, 195, 205, 216, 219, 229, 230, 235, 239, 242, 255, 256, 264, 267, 268, 269, 270, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 288, 290, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 385, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "brought": [2, 392, 393, 395], "step_mdp": [2, 3, 115, 119, 135, 136, 142, 143, 235, 239, 383, 393, 394, 404, 408, 409], "count": [2, 3, 43, 115, 116, 193, 280, 281, 363, 367, 370, 390, 391, 392, 393, 406, 409], "trigger": [2, 7], "partial": [2, 3, 115, 119, 135, 136, 142, 143, 157, 158, 194, 195, 196, 282, 367, 393], "turn": [2, 18, 19, 20, 21, 48, 50, 53, 143, 173, 200, 204, 274, 348, 363, 386, 390, 391, 393, 395, 404, 405], "retain": 2, "regard": [2, 75, 81, 230, 275, 296, 306, 316, 390, 392, 404], "copi": [2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 79, 86, 115, 119, 135, 136, 142, 143, 154, 184, 194, 199, 205, 207, 216, 235, 239, 247, 273, 299, 314, 319, 348, 386, 390, 391, 393, 394, 402, 406], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 350, 386, 398, 406, 409], "eas": [2, 3, 402, 403], "flat": [2, 105], "manner": [2, 119, 181, 201, 385, 390, 391, 392, 397, 401, 404, 406], "ted2flat": [2, 34, 383], "flat2t": [2, 383], "unflatten": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 155, 279], "deseri": [2, 3, 34], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 113, 114, 115, 119, 135, 136, 142, 143, 171, 172, 192, 193, 196, 199, 200, 207, 250, 299, 319, 386, 392, 402, 403, 404, 406], "both": [2, 3, 7, 43, 49, 52, 59, 60, 79, 115, 116, 118, 119, 129, 130, 135, 136, 137, 138, 142, 143, 151, 158, 184, 199, 207, 217, 220, 221, 235, 238, 239, 240, 245, 246, 268, 269, 270, 275, 284, 296, 298, 299, 300, 304, 305, 312, 313, 314, 316, 317, 318, 319, 321, 322, 363, 385, 390, 392, 394, 396, 402, 403, 404, 405, 406, 409], "mark": [2, 3, 16, 81, 115, 119, 135, 136, 142, 143, 235, 239, 330, 332, 333, 397, 406], "identifi": [2, 51], "abov": [2, 3, 7, 43, 64, 115, 119, 135, 136, 142, 143, 207, 236, 262, 263, 295, 386, 387, 390, 392, 394, 395, 402, 403, 404, 409], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 62, 73, 75, 76, 77, 78, 79, 80, 81, 92, 99, 100, 113, 114, 115, 118, 119, 120, 121, 125, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 155, 156, 158, 161, 162, 163, 164, 165, 167, 169, 175, 177, 181, 183, 184, 189, 190, 193, 196, 198, 199, 201, 203, 204, 207, 209, 217, 220, 221, 222, 223, 224, 227, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 245, 246, 250, 256, 265, 267, 268, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 348, 350, 358, 385, 386, 390, 391, 392, 393, 394, 395, 398, 401, 402, 403, 404, 405, 408, 409], "typic": [2, 3, 4, 8, 43, 115, 119, 135, 136, 142, 143, 168, 194, 207, 282, 297, 299, 314, 316, 319, 385, 386, 387, 392, 394, 396, 397, 402, 403, 404], "adjust": [2, 11, 390, 402, 403, 404], "grumodul": [2, 157, 293], "lstmmodul": [2, 235, 393], "skip": [2, 3, 43, 73, 115, 119, 135, 136, 142, 143, 172, 199, 207, 209, 282, 286, 299, 314, 319, 330, 331, 332, 333, 349, 350, 360, 363, 390, 391, 404], "accumul": [2, 8, 207], "upcom": [2, 314, 339, 340, 341, 342, 344, 345, 346, 347, 390], "popular": [2, 3, 385, 393, 396, 403], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 207, 383, 391], "shift": [2, 34, 36, 43, 44, 57, 83, 84, 90, 292, 330, 331, 332, 333, 392], "approxim": [2, 403, 409], "would": [2, 3, 43, 54, 115, 119, 135, 136, 142, 143, 207, 233, 235, 237, 239, 240, 245, 387, 391, 392, 393, 394, 396, 397, 404, 406, 408, 409], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 158, 227, 254, 296, 302, 315, 316, 358, 381, 392, 393, 403, 406], "2x": 2, "small": [2, 201, 218, 390, 392, 402, 403, 409], "clearer": [2, 395], "lazi": [2, 55, 56, 70, 71, 115, 119, 135, 136, 142, 143, 144, 145, 181, 201, 220, 245, 248, 287, 288, 390, 391, 395, 397, 401, 406, 409], "certainli": 2, "benefici": 2, "welcom": [2, 394], "wrapper": [2, 3, 12, 17, 48, 50, 53, 54, 59, 60, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 204, 208, 250, 265, 272, 273, 277, 279, 281, 286, 291, 330, 355, 356, 357, 381, 383, 392, 393, 394, 402, 403, 405, 409], "around": [2, 5, 7, 17, 59, 60, 131, 208, 279, 286, 330, 390, 391, 403, 409], "selecttransform": [2, 115, 119, 135, 136, 142, 143], "excludetransform": [2, 80, 190, 406], "promptli": 2, "virtual": [2, 3, 118], "instal": [2, 3, 5, 10, 18, 19, 20, 75, 78, 115, 119, 135, 136, 137, 138, 140, 141, 142, 143, 352, 367, 384, 390, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 409], "respons": [2, 3, 8, 92, 99, 115, 119, 135, 136, 142, 143, 367, 396, 397, 409], "d4rl": [2, 75, 81], "repositori": [2, 7, 76, 77, 78, 81, 145, 402, 403], "wheel": [2, 392], "publish": 2, "openml": [2, 78, 134], "scikit": [2, 78, 134], "panda": [2, 78], "raw": [2, 3, 4, 54, 236, 262, 263, 391, 397, 404], "go": [2, 3, 7, 45, 128, 135, 182, 186, 273, 336, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "natur": [2, 3, 390, 393, 395, 396, 397, 406], "modifi": [2, 3, 7, 8, 30, 31, 37, 43, 56, 63, 115, 119, 135, 136, 142, 143, 155, 162, 171, 175, 181, 195, 198, 199, 201, 203, 207, 247, 273, 280, 281, 285, 370, 386, 390, 391, 392, 394, 402, 403, 404], "fly": [2, 205, 313, 386, 392, 404, 406, 409], "least": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 115, 161, 398, 409], "pre": [2, 7, 22, 43, 63, 79, 87, 115, 119, 135, 136, 142, 143, 181, 201, 203, 207, 409], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 135, 136, 142, 143, 152, 154, 155, 157, 158, 159, 162, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 180, 182, 183, 184, 186, 189, 190, 193, 194, 195, 196, 198, 199, 201, 202, 204, 205, 207, 233, 237, 247, 262, 274, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 312, 313, 315, 316, 317, 318, 319, 321, 322, 330, 348, 362, 387, 390, 391, 392, 397, 402, 404, 408, 409], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 76, 92, 99, 105, 123, 124, 125, 135, 137, 138, 161, 189, 220, 221, 231, 245, 246, 276, 279, 352, 367, 379, 380, 390, 391, 392, 393, 395, 396, 399, 402, 403, 406, 408], "pipelin": [2, 3, 7, 385, 392], "replac": [2, 3, 6, 7, 30, 31, 37, 43, 56, 73, 79, 92, 99, 100, 154, 166, 168, 174, 216, 276, 385, 402, 406], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 43, 48, 50, 53, 79, 94, 115, 119, 135, 136, 142, 143, 154, 186, 199, 207, 271, 272, 277, 279, 280, 281, 365, 385, 387, 391, 392, 393, 395, 398, 404, 406, 409], "produc": [2, 151, 154, 155, 220, 221, 240, 246, 253, 268, 270, 273, 350, 392, 393, 394, 395, 397, 406, 409], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 79, 83, 98, 115, 119, 135, 136, 137, 138, 142, 143, 199, 207, 296, 297, 299, 312, 314, 316, 317, 318, 319, 321, 322, 392], "download": [2, 7, 10, 73, 75, 76, 77, 79, 80, 81, 123, 181, 203, 350, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 136, 391, 402, 403, 404], "robosetexperiencereplai": [2, 99, 100], "fk1": [2, 80], "v4": [2, 80, 119, 135, 151, 185, 339, 340, 341, 342, 344, 345, 346, 347, 390, 392, 405, 409], "expert": [2, 80], "fk1_microopenrandom_v2d": [2, 80], "func": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 206], "obs_norm": 2, "norm": [2, 4, 8, 111, 112, 218, 367, 390, 391, 392, 402, 403, 404], "num_work": [2, 48, 50, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 132, 135, 142, 390, 391], "os": [2, 50, 63, 82, 391], "cpu_count": [2, 50, 63, 82], "num_chunk": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81], "1000": [2, 4, 52, 86, 91, 99, 100, 115, 119, 135, 136, 142, 143, 158, 205, 271, 276, 280, 281, 282, 286, 311, 390, 391, 392, 393, 395, 397, 399, 405, 406], "mp_start_method": [2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 135, 142, 391, 408], "fork": [2, 5, 73, 74, 75, 76, 77, 78, 79, 80, 81, 390, 391, 392, 393, 402, 403, 405, 408], "recreat": [2, 404], "customari": [2, 385], "moreov": [2, 3], "fine": [2, 3, 24, 52, 59, 60, 92, 94, 99, 115, 119, 135, 136, 142, 143, 155, 175, 397, 405], "grain": [2, 3, 52, 59, 60, 92, 94, 99, 115, 119, 135, 136, 142, 143, 155], "nomenclatur": 2, "compact": [2, 57, 83, 84, 90], "propos": [2, 158, 168, 241, 311, 320, 385, 393, 406], "replaybufferensembl": [2, 73, 97, 103, 110], "primit": [2, 3, 4, 79, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322], "individu": [2, 4, 18, 19, 20, 21, 43, 63, 92, 94, 105, 115, 119, 129, 130, 135, 136, 142, 143, 207, 390, 403], "dummi": [2, 3, 143, 348, 390, 397, 409], "semant": [2, 55, 56, 118, 120, 385], "ident": [2, 3, 14, 15, 16, 43, 48, 50, 52, 53, 59, 60, 86, 94, 99, 115, 118, 119, 120, 132, 135, 136, 142, 143, 168, 218, 245, 246, 297, 299, 312, 317, 319, 321, 322, 330, 331, 332, 333, 379, 380, 391, 394, 402, 403], "another_kei": [2, 94], "renam": [2, 48, 50, 53, 94, 184, 186, 216, 390], "resiz": [2, 3, 81, 94, 158, 391, 393, 394, 406, 409], "imag": [2, 3, 4, 7, 11, 79, 160, 163, 181, 197, 203, 240, 348, 350, 390, 391, 394, 398, 403, 405, 409], "comops": 2, "totensorimag": [2, 3, 81, 94, 158, 185, 391, 393, 406, 408, 409], "renametransform": [2, 94, 115, 119, 135, 136, 142, 143], "rb0": [2, 94], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 131, 135, 136, 142, 143, 148, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 171, 173, 175, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 191, 194, 196, 197, 198, 199, 201, 203, 205, 219, 229, 235, 239, 242, 255, 264, 265, 267, 268, 269, 270, 273, 274, 279, 282, 283, 285, 286, 288, 289, 290, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 310, 312, 313, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 349, 350, 377, 385, 390, 391, 392, 393, 395, 396, 399, 401, 402, 403, 404, 405, 406, 408, 409], "pixel": [2, 3, 7, 30, 81, 94, 113, 114, 118, 120, 121, 139, 158, 160, 163, 168, 171, 173, 177, 179, 181, 185, 197, 201, 203, 223, 251, 252, 348, 350, 385, 390, 391, 393, 398, 402, 405, 406, 408, 409], "rb1": [2, 94], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 115, 119, 131, 135, 136, 142, 143, 148, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 171, 173, 175, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 191, 194, 196, 197, 198, 201, 203, 205, 219, 229, 230, 235, 239, 242, 255, 256, 264, 265, 267, 268, 269, 270, 273, 275, 279, 282, 283, 284, 285, 286, 288, 289, 290, 293, 296, 297, 298, 299, 304, 305, 310, 312, 313, 316, 317, 318, 319, 321, 328, 330, 331, 332, 333, 348, 350, 363, 377, 385, 390, 391, 392, 393, 395, 399, 401, 402, 403, 404, 405, 406, 408, 409], "pixels33": [2, 94], "data0": [2, 94], "244": [2, 94, 181, 203, 389, 403, 404, 407], "data1": [2, 94], "_": [2, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 116, 123, 144, 145, 159, 164, 166, 167, 175, 177, 184, 197, 205, 207, 267, 285, 290, 295, 296, 297, 299, 300, 304, 305, 312, 316, 317, 319, 321, 322, 330, 331, 332, 333, 352, 390, 391, 392, 393, 399, 402, 403, 404, 406, 408], "rang": [2, 3, 4, 8, 12, 49, 52, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 94, 105, 115, 116, 119, 129, 130, 135, 136, 142, 143, 186, 197, 205, 207, 234, 238, 313, 321, 322, 386, 387, 390, 392, 393, 396, 397, 399, 402, 403, 404, 406, 408], "parent": [2, 3, 21, 30, 31, 36, 37, 56, 62, 74, 94, 103, 110, 115, 119, 135, 136, 142, 143, 151, 155, 158, 159, 162, 165, 168, 171, 172, 177, 181, 189, 193, 194, 195, 196, 198, 200, 201, 207, 235, 239, 268, 293, 314, 316, 334, 348, 350, 390, 397, 404, 408, 409], "basic": [2, 131, 385, 392, 396, 397, 399, 402, 409], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 135, 136, 142, 143, 154, 198, 199, 205, 207, 228, 236, 248, 253, 261, 262, 263, 279, 296, 299, 314, 316, 318, 319, 395, 397, 404, 406], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 68, 102, 108, 115, 119, 129, 130, 131, 134, 135, 136, 137, 138, 142, 143, 144, 145, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 180, 181, 182, 183, 184, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 216, 217, 218, 220, 221, 223, 224, 225, 226, 229, 230, 233, 234, 235, 237, 238, 239, 240, 245, 246, 247, 248, 249, 256, 257, 258, 259, 260, 262, 265, 267, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 361, 365, 370, 377, 385, 386, 387, 390, 391, 392, 393, 394, 402, 403, 404, 408, 409], "send": [2, 3, 8, 357, 408], "receiv": [2, 3, 43, 54, 115, 119, 135, 136, 142, 143, 198, 199, 207, 240, 336, 386, 390, 392, 396, 401, 404], "spawn": [2, 3, 4, 18, 22, 123, 132, 135, 142, 391, 402, 403], "check_env_spec": [2, 3, 119, 135, 151, 183, 348, 383, 392, 402, 403, 404], "saniti": [2, 3, 7, 209, 392], "automati": 2, "make_composite_from_td": [2, 62, 383, 404], "fall": [2, 4, 75], "categori": [2, 30, 76, 385, 387], "bound": [2, 3, 4, 21, 28, 30, 43, 64, 115, 119, 135, 136, 142, 143, 161, 176, 205, 207, 208, 257, 258, 267, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 289, 296, 297, 299, 300, 312, 316, 317, 319, 321, 322, 383, 385, 390, 391, 392, 402, 404, 408, 409], "unbound": [2, 3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 135, 136, 142, 143, 152, 155, 164, 167, 183, 195, 213, 219, 242, 267, 285, 288, 290, 318, 383, 404, 406], "boundeddiscret": [2, 27, 30, 392], "boundedcontinu": [2, 22, 27, 30, 115, 119, 135, 136, 142, 143, 392, 402, 403, 404, 408, 409], "unboundeddiscret": [2, 64, 136, 383, 404], "unboundedcontinu": [2, 64, 115, 119, 135, 136, 142, 143, 183, 213, 288, 293, 383, 392, 393, 402, 403, 404, 409], "implicitli": 2, "explicitli": [2, 3, 4, 29, 83, 84, 90, 154, 282, 386, 391, 393, 397, 402, 403, 406], "onehot": [2, 25, 26, 29, 33, 41, 42, 47, 111, 112, 118, 120, 121, 124, 125, 132, 133, 139, 230, 256, 274, 283, 301, 303, 304, 305, 328, 385, 395], "multionehot": [2, 39, 40, 42, 301, 304, 305, 328, 383], "multicategor": [2, 40, 41, 42, 383], "binari": [2, 3, 7, 26, 152, 156, 230, 256, 274, 275, 283, 284, 301, 304, 305, 328, 383], "concept": [2, 115, 119, 135, 136, 142, 143, 391, 406], "arbitrari": [2, 3, 25, 52, 115, 119, 135, 136, 142, 143, 154, 385, 390, 391, 404, 406], "combin": [2, 4, 35, 198, 321, 391, 398, 406], "relat": [2, 3, 4, 10, 49, 135, 171, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 391, 399, 404], "nevertheless": [2, 3, 392, 394, 406], "expand": [2, 8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 86, 99, 100, 155, 285, 288, 297, 299, 312, 314, 317, 319, 321, 322, 402, 403, 404, 406, 408], "otherwis": [2, 12, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 99, 100, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 158, 159, 166, 177, 194, 195, 196, 199, 205, 207, 218, 233, 236, 237, 245, 246, 262, 263, 274, 283, 289, 297, 299, 308, 314, 315, 319, 330, 332, 333, 363, 364, 387, 390, 391, 392, 393, 404, 409], "similarli": [2, 21, 43, 98, 103, 115, 119, 135, 136, 142, 143, 207, 245, 287, 288, 304, 312, 409], "possess": [2, 62, 75], "unsqueez": [2, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 152, 155, 158, 159, 197, 200, 213, 390, 393, 402, 403, 404], "move": [2, 4, 43, 62, 81, 115, 119, 135, 136, 142, 143, 151, 162, 165, 181, 195, 198, 199, 201, 203, 205, 207, 216, 240, 285, 365, 390, 391, 393, 394, 408, 409], "unbind": [2, 48, 49, 50, 52, 53, 59, 60, 235, 239], "said": [2, 392], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 49, 59, 62, 91, 92, 158, 171, 182, 200, 307, 330, 332, 333, 386, 392, 402, 403, 404], "seen": [2, 18, 19, 20, 21, 30, 31, 37, 56, 115, 119, 135, 136, 142, 143, 386, 390, 391, 393, 396, 402, 403, 406], "predict": [2, 3, 43, 54, 229, 231, 241, 242, 273, 291, 296, 298, 303, 306, 308, 309, 313, 316, 318, 329, 385, 390, 391, 396], "deprec": [2, 23, 26, 28, 31, 33, 37, 38, 40, 42, 43, 46, 47, 66, 68, 115, 119, 135, 136, 142, 143, 199, 207, 210, 214, 277, 296, 298, 299, 301, 304, 305, 306, 312, 313, 316, 317, 318, 319, 328, 330, 331, 332, 333, 338, 409], "utmost": 2, "commonli": [2, 92, 99, 100, 409], "emploi": [2, 249], "languag": [2, 24, 54], "scarc": 2, "address": [2, 406], "subdomain": 2, "facilit": [2, 3, 7, 180, 181, 195, 201, 203, 268, 269, 270, 385, 390, 393, 395, 404], "extern": [2, 3, 164, 167, 402, 409], "token": [2, 50, 51, 54, 61, 63, 82], "dm": [3, 390, 409], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 49, 52, 59, 60, 63, 79, 96, 102, 105, 106, 108, 109, 111, 112, 115, 119, 123, 124, 125, 131, 132, 133, 135, 136, 142, 143, 144, 186, 195, 201, 202, 245, 247, 268, 278, 296, 297, 299, 300, 301, 303, 304, 305, 307, 312, 316, 317, 318, 319, 321, 322, 357, 367, 385, 386, 387, 390, 391, 393, 394, 395, 396, 398, 402, 403, 404, 406, 409], "goal": [3, 4, 73, 74, 75, 76, 77, 78, 79, 80, 81, 194, 390, 391, 392, 393, 403, 404], "abl": [3, 128, 137, 138, 235, 239, 390, 392, 393, 395, 401, 402, 403, 404, 406, 408], "experi": [3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 91, 92, 209, 352, 353, 354, 355, 356, 357, 384, 391, 392, 397, 398, 402, 403, 406], "box": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 118, 120, 247, 314], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 115, 116, 119, 129, 130, 135, 136, 137, 138, 140, 141, 142, 143, 158, 161, 168, 174, 175, 177, 179, 184, 186, 189, 195, 198, 204, 205, 207, 348, 377, 390, 391, 392, 393, 401, 403, 405, 406, 408, 409], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 111, 112, 115, 119, 131, 135, 136, 142, 143, 162, 166, 168, 175, 181, 195, 198, 199, 201, 203, 207, 219, 220, 221, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 250, 255, 256, 264, 267, 268, 269, 270, 273, 274, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 377, 385, 386, 390, 391, 392, 393, 395, 396, 399, 401, 402, 403, 404, 405, 408], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 64, 94, 115, 119, 135, 136, 142, 143, 153, 154, 198, 204, 209, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 285, 286, 287, 289, 292, 314, 316, 391, 393, 397, 404, 406], "organis": [3, 80, 115, 119, 135, 136, 142, 143, 199, 391], "structur": [3, 7, 48, 49, 50, 52, 53, 54, 59, 60, 62, 63, 105, 115, 119, 135, 136, 142, 143, 164, 167, 217, 245, 280, 281, 330, 331, 332, 333, 334, 383, 386, 390, 392, 393, 394, 397, 402, 403, 404, 405], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 79, 115, 118, 119, 120, 135, 136, 142, 143, 151, 168, 181, 201, 205, 207, 235, 239, 286, 296, 297, 299, 300, 301, 303, 305, 306, 307, 310, 312, 314, 316, 317, 318, 319, 321, 322, 328, 390, 393, 404], "live": [3, 13, 14, 15, 16, 17, 19, 20, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 131, 135, 136, 142, 143, 168, 207], "actual": [3, 4, 7, 48, 50, 53, 73, 75, 76, 77, 79, 80, 81, 115, 119, 135, 136, 142, 143, 204, 370, 386, 390, 392, 402, 403, 404], "retriev": [3, 48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 97, 115, 118, 119, 120, 135, 136, 142, 143, 159, 165, 168, 177, 216, 219, 220, 242, 279, 282, 286, 289, 293, 296, 297, 298, 299, 301, 313, 316, 317, 319, 321, 322, 328, 330, 331, 332, 333, 381, 387, 391, 392, 395, 404, 409], "care": [3, 8, 115, 119, 135, 136, 142, 143, 198, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 350, 390, 392, 402, 403, 404, 406], "parametr": [3, 249, 286, 297, 299, 304, 312, 319, 390, 392], "hardwar": 3, "observation_spec": [3, 115, 119, 131, 135, 136, 142, 143, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 171, 173, 174, 175, 177, 179, 181, 183, 185, 189, 191, 193, 194, 195, 196, 197, 198, 200, 201, 204, 205, 207, 219, 235, 239, 242, 371, 377, 390, 392, 396, 401, 402, 403, 404, 409], "pair": [3, 43, 48, 50, 53, 75, 113, 114, 115, 119, 135, 136, 142, 143, 186, 195, 235, 268, 282, 286, 314, 330, 331, 332, 333, 334, 385, 386, 390, 391, 392, 395, 396, 401, 404, 409], "state_spec": [3, 115, 119, 131, 135, 136, 142, 143, 152, 219, 242, 404, 409], "reward_spec": [3, 115, 119, 131, 135, 136, 142, 143, 152, 155, 156, 161, 162, 164, 165, 167, 183, 187, 188, 189, 191, 198, 200, 207, 219, 242, 392, 402, 403, 404, 409], "done_spec": [3, 115, 119, 135, 136, 142, 143, 164, 165, 167, 168, 183, 198, 207, 217, 402, 403, 404, 409], "flag": [3, 8, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 129, 130, 135, 136, 142, 143, 144, 145, 174, 280, 281, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 385, 402, 403, 404, 405], "input_spec": [3, 115, 119, 131, 135, 136, 142, 143, 151, 155, 162, 164, 165, 166, 177, 179, 183, 184, 189, 190, 193, 194, 195, 198, 199, 200, 202, 207, 392, 404], "full_action_spec": [3, 115, 119, 135, 136, 142, 143, 151, 219, 242, 392, 402, 403], "full_state_spec": [3, 115, 119, 135, 136, 142, 143, 151, 219, 242, 392], "lock": [3, 30, 31, 37, 48, 50, 53, 56, 115, 119, 135, 136, 142, 143, 155, 195, 205, 404], "output_spec": [3, 115, 119, 135, 136, 142, 143, 155, 162, 164, 165, 169, 175, 183, 184, 190, 193, 198, 199, 207, 404], "full_observation_spec": [3, 115, 119, 135, 136, 142, 143, 219, 242], "full_reward_spec": [3, 115, 119, 135, 136, 142, 143, 155, 165, 183, 402, 403], "full_done_spec": [3, 115, 119, 135, 136, 142, 143, 155, 165, 183, 217, 402, 403], "carri": [3, 21, 41, 63, 115, 119, 135, 136, 142, 143, 195, 314, 391, 393, 402, 403, 404, 406], "nontensorspec": [3, 383], "importantli": [3, 282, 286], "action_s": 3, "help": [3, 4, 43, 62, 115, 119, 135, 136, 142, 143, 168, 207, 296, 298, 313, 316, 318, 384, 386, 390, 391, 392, 393, 402, 403], "With": [3, 124, 125, 128, 194, 387, 391, 401, 402, 403, 406, 409], "necessarili": [3, 115, 119, 135, 136, 142, 143, 409], "present": [3, 43, 48, 49, 50, 52, 53, 59, 60, 62, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 98, 115, 118, 119, 135, 136, 142, 143, 169, 186, 190, 195, 199, 207, 216, 217, 222, 223, 224, 225, 226, 232, 235, 237, 239, 249, 254, 279, 280, 281, 285, 286, 287, 288, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 381, 387, 390, 399, 401, 402, 403, 406, 408], "0s": [3, 73, 79, 195, 393], "step_and_maybe_reset": [3, 115, 119, 135, 136, 142, 143, 394], "done_kei": [3, 23, 34, 36, 44, 57, 83, 84, 90, 115, 119, 135, 136, 142, 143, 154, 158, 168, 186, 193, 207, 216, 402, 403], "assign": [3, 4, 14, 15, 17, 27, 43, 48, 50, 53, 64, 115, 119, 135, 136, 142, 143, 199, 207, 299, 300, 301, 303, 319, 392, 395, 402, 403, 406], "_reset": [3, 115, 119, 131, 135, 136, 142, 143, 152, 154, 155, 158, 164, 167, 174, 183, 217, 219, 242, 402], "data_": [3, 115, 119, 135, 136, 142, 143], "append": [3, 8, 11, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 135, 136, 142, 143, 154, 161, 162, 186, 195, 199, 204, 234, 235, 238, 239, 274, 283, 390, 391, 392, 393, 402, 403, 404, 405, 406, 408], "seed": [3, 14, 15, 16, 17, 21, 52, 59, 60, 80, 94, 115, 119, 131, 135, 136, 137, 138, 142, 143, 144, 145, 152, 155, 164, 167, 183, 199, 209, 348, 367, 402], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 215, 222, 231, 251, 258, 267, 277, 282, 285, 286, 289, 297, 314, 363, 385, 390, 391, 393, 395, 396, 399, 402, 404, 408, 409], "preced": [3, 43, 393], "risk": [3, 182], "overlap": [3, 59, 105], "reproduc": [3, 158, 209, 390, 392, 403], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 43, 48, 50, 51, 54, 61, 63, 64, 82, 86, 87, 88, 91, 92, 107, 115, 119, 135, 136, 142, 143, 166, 187, 193, 194, 196, 218, 261, 262, 263, 289, 297, 299, 304, 305, 312, 314, 315, 319, 350, 364, 390, 391, 392, 393, 395, 402, 403, 406], "max_step": [3, 11, 105, 115, 119, 129, 130, 131, 135, 136, 142, 143, 144, 145, 193, 207, 348, 394, 395, 396, 398, 399, 402, 403, 408, 409], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 111, 112, 115, 119, 131, 135, 136, 142, 143, 157, 175, 230, 235, 239, 242, 255, 256, 264, 265, 268, 269, 270, 272, 273, 274, 277, 279, 281, 282, 283, 284, 285, 287, 288, 289, 291, 293, 297, 299, 300, 304, 305, 307, 308, 309, 310, 312, 314, 317, 319, 321, 322, 328, 329, 330, 331, 332, 333, 363, 377, 383, 390, 392, 393, 396, 399, 401, 402, 403, 404, 405, 409], "trail": [3, 205], "treat": [3, 43, 386, 395, 396], "figur": [3, 390, 392, 393, 403, 404, 409], "brief": [3, 392, 394, 396, 406], "deliveri": 3, "design": [3, 43, 97, 103, 110, 115, 119, 129, 130, 135, 136, 142, 143, 151, 158, 182, 199, 207, 273, 296, 297, 298, 299, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 406, 409], "metaclass": 3, "everi": [3, 8, 30, 31, 37, 43, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 101, 115, 119, 135, 136, 142, 143, 193, 194, 205, 207, 213, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 245, 246, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 314, 367, 387, 390, 391, 392, 393, 394, 395, 402, 403, 404], "flank": [3, 393], "dual": 3, "strictli": [3, 8, 43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319, 390, 392], "refer": [3, 7, 8, 9, 11, 21, 24, 43, 54, 115, 118, 119, 120, 135, 136, 142, 143, 199, 205, 207, 219, 230, 231, 242, 243, 244, 245, 246, 247, 251, 252, 257, 258, 275, 296, 299, 306, 307, 308, 309, 316, 319, 330, 335, 343, 389, 390, 392, 395, 396, 397, 398, 402, 403, 406, 409], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 91, 92, 115, 119, 135, 136, 142, 143, 177, 181, 186, 188, 201, 203, 205, 207, 216, 221, 228, 243, 244, 245, 246, 248, 249, 253, 255, 261, 262, 263, 264, 285, 303, 305, 311, 317, 320, 343, 361, 363, 364, 372, 373, 375, 377, 378, 379, 380, 381], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 129, 130, 146, 390], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 73, 79, 92, 99, 100, 383], "adjac": [3, 23, 171, 279], "reli": [3, 11, 23, 195, 233, 234, 235, 237, 238, 239, 296, 386, 390, 392, 395, 397, 404, 409], "junction": 3, "inittrack": [3, 235, 239, 279, 390, 393], "tutori": [3, 136, 382, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 409], "scratch": [3, 8, 391, 404], "gym3": 3, "envpool": [3, 132, 133], "interfac": [3, 122, 134, 240, 248, 385, 386, 390, 392, 398, 404, 406], "simultan": [3, 20, 132, 133, 135, 142, 404], "advantag": [3, 8, 232, 296, 298, 313, 316, 318, 330, 331, 332, 333, 334, 335, 337, 339, 341, 343, 344, 346, 386, 387, 390, 391, 392, 393, 403, 404, 409], "scale": [3, 4, 24, 75, 115, 119, 135, 136, 142, 143, 158, 175, 177, 188, 194, 197, 205, 218, 231, 236, 250, 257, 258, 262, 263, 268, 269, 270, 282, 286, 288, 296, 297, 299, 312, 316, 317, 318, 319, 365, 371, 381, 385, 390, 391, 392, 393, 395, 403, 408], "varieti": [3, 11], "inherit": [3, 115, 119, 135, 136, 142, 143, 241, 245, 246, 314, 387, 392, 402, 403], "Of": [3, 7, 384, 404, 409], "cours": [3, 4, 384, 404, 409], "from_pixel": [3, 11, 111, 112, 113, 114, 118, 120, 121, 124, 125, 139, 158, 185, 348, 350, 390, 391, 393, 394, 398, 399, 405, 406, 408, 409], "81": [3, 391, 404, 405], "simpli": [3, 6, 48, 50, 53, 63, 103, 105, 110, 169, 190, 204, 314, 385, 386, 390, 392, 396, 402, 403, 409], "d": [3, 49, 52, 59, 60, 76, 78, 80, 81, 82, 91, 92, 218, 233, 237, 282, 286, 408], "privat": [3, 115, 119, 135, 136, 142, 143, 204, 404, 409], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 39, 41, 48, 50, 53, 73, 100, 105, 298, 313, 316, 358, 360, 363, 367, 370, 371, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 48, 50, 53, 54, 94, 97, 177, 188, 236, 248, 257, 262, 263, 328, 385, 395, 396, 402, 404, 406], "inner": [3, 115, 119, 135, 136, 142, 143, 166, 387, 391, 392, 403, 409], "logic": [3, 402], "kept": [3, 23, 98, 100, 166, 190, 198, 209, 216, 236, 262, 263, 396, 402], "mind": [3, 73, 79, 92, 99, 100, 115, 119, 135, 136, 142, 143, 402, 403], "desig": 3, "wherev": 3, "expos": [3, 139, 164, 167, 287, 391], "modif": [3, 5, 30, 31, 37, 43, 56, 115, 119, 135, 136, 142, 143, 171, 207, 217, 314, 386, 392, 404], "lost": [3, 8, 204], "eras": [3, 25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 45, 46, 47, 62, 64, 65, 66, 67, 68, 92, 99, 115, 119, 135, 136, 142, 143, 199], "intern": [3, 388], "face": [3, 5, 8, 9, 394, 409], "NOT": [3, 83, 84, 90, 182], "outsid": [3, 16, 386, 398, 402, 403, 404], "right": [3, 6, 7, 23, 54, 92, 99, 391, 392, 403, 404, 409], "preliminari": 3, "warranti": 3, "affect": [3, 8, 43, 115, 119, 135, 136, 142, 143, 198, 199, 207, 209, 330, 331, 332, 333, 402], "preclud": 3, "presenc": [3, 396], "annihil": 3, "reason": [3, 4, 8, 43, 79, 115, 119, 135, 136, 137, 138, 142, 143, 181, 201, 207, 239, 386, 390, 391, 392, 396, 397, 402, 404, 406], "advanc": [3, 21, 49, 52, 59, 60, 119, 394, 397, 406], "superse": 3, "pettingzoowrapp": [3, 383], "group": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 115, 119, 128, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 146, 385, 391, 395, 397, 403, 406], "associ": [3, 43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 207, 257, 381, 390, 406], "environemtn": 3, "__not__": [3, 282, 297, 299, 312, 317, 319, 321, 322], "constrain": [3, 175, 235, 239, 316], "li": 3, "fact": [3, 7, 8, 390, 392, 394, 402, 403, 404, 405, 406, 409], "know": [3, 4, 9, 49, 52, 59, 60, 118, 120, 271, 272, 314, 317, 363, 390, 391, 392, 393, 394, 395, 396, 397, 402, 403, 406], "meaning": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "perfectli": [3, 387, 390, 404], "meaningless": 3, "val": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 396, 408], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 52, 55, 56, 62, 64, 65, 66, 67, 68, 73, 115, 119, 135, 136, 142, 143, 154, 381, 385], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 92, 94, 97, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155, 158, 159, 164, 166, 167, 168, 169, 171, 175, 176, 177, 179, 181, 183, 184, 186, 188, 189, 190, 193, 195, 197, 199, 200, 201, 203, 205, 207, 209, 213, 216, 217, 218, 219, 220, 221, 223, 224, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 247, 248, 249, 262, 263, 267, 274, 275, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 325, 328, 330, 331, 332, 333, 336, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 357, 360, 361, 363, 364, 365, 367, 381, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "500": [3, 390, 391, 404, 408, 409], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 73, 76, 135, 142], "bottleneck": [3, 8, 92, 99, 100], "great": [3, 7, 8, 402, 408], "speedup": [3, 8, 402, 409], "precis": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 164, 167, 216, 234, 238, 390, 392], "misspecifi": 3, "caus": [3, 7, 8, 86, 87, 107, 115, 119, 123, 135, 136, 142, 143, 182, 409], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 79, 115, 119, 135, 136, 142, 143, 146, 158, 170, 176, 186, 194, 195, 196, 199, 207, 209, 271, 272, 276, 277, 280, 281, 299, 314, 319, 390, 392, 402, 403, 406, 409], "mismatch": [3, 391], "subprocess": [3, 14, 15, 17, 116, 135, 142], "multithreadedenv": [3, 383], "underneath": 3, "higher": [3, 4, 92, 161, 289, 390, 391, 392, 402, 406, 409], "flexibl": [3, 9, 132, 323, 386, 387, 390, 406, 409], "cover": [3, 118, 120, 384, 392, 394, 397, 398, 404, 408], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 31, 37, 43, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 81, 82, 94, 115, 119, 128, 131, 134, 135, 136, 137, 138, 142, 143, 155, 162, 164, 165, 168, 169, 175, 181, 183, 184, 190, 193, 195, 198, 199, 201, 203, 205, 207, 211, 215, 220, 221, 240, 245, 246, 249, 255, 264, 271, 272, 274, 282, 285, 286, 293, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 324, 328, 336, 348, 379, 383, 385, 390, 391, 392, 397, 402, 403, 404, 406, 409], "atari": [3, 4, 73, 158, 350, 398, 409], "classic": [3, 131, 138, 391], "benchmark_batched_env": 3, "seamlessli": [3, 404], "infrastructur": [3, 402, 403], "act": [3, 4, 99, 100, 137, 138, 199, 229, 246, 297, 299, 300, 312, 317, 319, 321, 322, 393, 402, 403, 406], "world": [3, 5, 131, 291, 308, 398, 402, 403, 404, 409], "paradigm": [3, 17, 403], "decpodp": 3, "game": [3, 4, 5, 73, 129, 130, 350, 398], "thank": [3, 390, 394], "carrier": [3, 392, 393, 394, 406], "particular": [3, 43, 63, 75, 76, 115, 119, 135, 136, 142, 143, 199, 207, 386, 387, 391, 393, 394, 401, 403, 406], "thu": [3, 313, 403], "let": [3, 6, 7, 11, 23, 43, 49, 52, 59, 60, 61, 115, 119, 135, 136, 137, 138, 142, 143, 158, 207, 235, 239, 245, 246, 274, 363, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "vma": [3, 144, 145, 348, 402, 403], "robot": [3, 5, 7, 79, 181, 201, 203, 403], "vmasenv": [3, 348, 383, 402, 403], "balanc": [3, 113, 114, 390, 391], "num_env": [3, 21, 118, 122, 133, 144, 145, 348, 402, 403], "n_agent": [3, 144, 145, 245, 246, 247, 255, 264, 328, 348, 402, 403], "ground_rew": 3, "pos_rew": [3, 403], "style": [3, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81], "vari": [3, 118, 120, 121, 137, 138, 139, 144, 182, 403], "creation": [3, 135, 142, 409], "info_spec": [3, 135], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 33, 41, 42, 47, 111, 112, 115, 118, 119, 120, 121, 124, 125, 129, 130, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 145, 151, 152, 168, 183, 217, 230, 253, 256, 274, 275, 282, 283, 284, 301, 304, 305, 328, 383, 393, 402, 403, 409], "simpl": [3, 9, 43, 62, 115, 119, 135, 136, 142, 143, 207, 223, 279, 286, 301, 303, 314, 318, 330, 385, 386, 390, 391, 392, 394, 395, 396, 402, 403, 406, 409], "prefix": [3, 23, 43, 48, 50, 53, 63, 115, 119, 135, 136, 142, 143, 199, 207, 282, 299, 314, 319, 349, 393, 396, 409], "exactli": [3, 43, 115, 119, 121, 135, 136, 142, 143, 199, 207, 233, 237, 299, 319, 390, 393, 397, 402, 403], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 115, 119, 135, 136, 142, 143, 151, 152, 166, 208, 216, 219, 241, 242, 271, 272, 276, 277, 279, 280, 281, 402, 403], "reward_kei": [3, 34, 36, 44, 57, 83, 84, 90, 115, 119, 135, 136, 142, 143, 207, 216, 219, 242, 361, 365, 402, 403], "set_kei": [3, 168, 296, 298, 299, 301, 304, 305, 306, 312, 313, 314, 316, 317, 318, 319, 328, 334, 390, 402, 403], "awai": [3, 392, 394, 402, 403], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 39, 40, 41, 42, 45, 46, 47, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 174, 193, 286], "full": [3, 115, 119, 135, 136, 142, 143, 235, 239, 275, 358, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "autoresettransform": 3, "invalid": [3, 43, 105, 115, 119, 135, 136, 142, 143, 146, 207, 243, 244], "nan": [3, 154, 204], "auto_reset": [3, 115, 119, 135, 136, 142, 143, 154, 207, 404], "auto_reset_replac": [3, 154], "placehold": [3, 121, 168, 199], "set_gym_backend": [3, 115, 118, 119, 135, 136, 142, 143, 147, 154, 383, 394], "autoresettinggymenv": [3, 154], "_step": [3, 115, 119, 135, 136, 142, 143, 152, 154, 155, 164, 167, 171, 183, 184], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 37, 43, 48, 50, 53, 56, 115, 119, 131, 135, 136, 142, 143, 152, 154, 155, 162, 164, 167, 181, 183, 195, 198, 199, 201, 203, 207, 219, 230, 242, 245, 246, 255, 264, 271, 272, 276, 282, 285, 290, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 387, 390, 404, 408, 409], "super": [3, 131, 152, 154, 155, 164, 167, 183, 219, 230, 242, 290, 297, 299, 300, 305, 312, 317, 319, 321, 322, 390, 404, 408, 409], "td_reset": [3, 154], "exclud": [3, 8, 75, 80, 115, 119, 135, 136, 142, 143, 154, 158, 169, 216, 255, 402, 403, 406], "r": [3, 4, 43, 151, 152, 154, 161, 177, 191, 205, 218, 234, 286, 295, 329, 348, 385, 391, 404, 409], "break_when_any_don": [3, 115, 119, 135, 136, 142, 143, 154, 207, 279, 403], "3633e": [3, 154], "02": [3, 115, 119, 135, 136, 142, 143, 154, 389, 390, 391, 392, 399, 402, 404, 405, 407], "4877e": [3, 154], "01": [3, 154, 177, 218, 280, 281, 292, 298, 313, 316, 389, 390, 391, 393, 403, 404, 405, 407], "2849e": [3, 154], "7584e": [3, 154], "6609e": [3, 154], "6166e": [3, 154], "8366e": [3, 154], "2761e": [3, 154], "5685e": [3, 154], "4102e": [3, 154], "8111e": [3, 154], "9959e": [3, 154], "0865e": [3, 154], "5644e": [3, 154], "2119e": [3, 154], "2542e": [3, 154], "03": [3, 115, 119, 135, 136, 142, 143, 154, 177, 390, 391, 404, 405], "9952e": [3, 154], "4059e": [3, 154], "2094e": [3, 154], "9009e": [3, 154], "5140e": [3, 154], "3554e": [3, 154], "2920e": [3, 154], "7893e": [3, 154], "6429e": [3, 154], "3057e": [3, 154], "2867e": [3, 154], "6963e": [3, 154], "3818e": [3, 154], "2576e": [3, 154], "2679e": [3, 154], "1640e": [3, 154], "00": [3, 111, 112, 154, 389, 390, 391, 392, 393, 402, 403, 404, 405, 407], "6972e": [3, 154], "0212e": [3, 154], "5959e": [3, 154], "4637e": [3, 154], "3121e": [3, 154], "2168e": [3, 154], "5232e": [3, 154], "7704e": [3, 154], "7457e": [3, 154], "4127e": [3, 154], "1064e": [3, 154], "0854e": [3, 154], "5712e": [3, 154], "2189e": [3, 154], "5235e": [3, 154], "8289e": [3, 154], "0009e": [3, 154], "0257e": [3, 154], "8893e": [3, 154], "5872e": [3, 154], "9405e": [3, 154], "7766e": [3, 154], "0403e": [3, 154], "0626e": [3, 154], "2959e": [3, 154], "7263e": [3, 154], "2775e": [3, 154], "9564e": [3, 154], "0411e": [3, 154], "6769e": [3, 154], "6354e": [3, 154], "8698e": [3, 154], "1765e": [3, 154], "6292e": [3, 154], "5375e": [3, 154], "1820e": [3, 154], "7023e": [3, 154], "5836e": [3, 154], "9016e": [3, 154], "4826e": [3, 154], "6191e": [3, 154], "6387e": [3, 154], "8667e": [3, 154], "2056e": [3, 154], "1147e": [3, 154], "5991e": [3, 154], "0278e": [3, 154], "5219e": [3, 154], "3067e": [3, 154], "6617e": [3, 154], "3322e": [3, 154], "2629e": [3, 154], "4599e": [3, 154], "7298e": [3, 154], "5848e": [3, 154], "0148e": [3, 154], "5745e": [3, 154], "6982e": [3, 154], "7877e": [3, 154], "3527e": [3, 154], "7285e": [3, 154], "6668e": [3, 154], "0583e": [3, 154], "6956e": [3, 154], "3962e": [3, 154], "9845e": [3, 154], "5015e": [3, 154], "5903e": [3, 154], "9993e": [3, 154], "9418e": [3, 154], "0196e": [3, 154], "6557e": [3, 154], "2109e": [3, 154], "8997e": [3, 154], "1507e": [3, 154], "7363e": [3, 154], "0310e": [3, 154], "9574e": [3, 154], "8980e": [3, 154], "0090e": [3, 154], "forecast": 3, "awar": [3, 7, 86, 87, 88, 101, 103, 107, 235, 239, 391, 393], "detect": [3, 81, 314, 386], "return_contigu": [3, 115, 119, 135, 136, 142, 143, 209, 401], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 115, 117, 119, 135, 136, 142, 143, 152, 154, 155, 157, 158, 159, 162, 164, 165, 168, 169, 170, 171, 174, 175, 180, 182, 183, 184, 186, 189, 190, 193, 194, 195, 196, 198, 199, 204, 205, 207, 216, 217, 219, 235, 239, 241, 242, 271, 272, 273, 275, 276, 279, 280, 281, 284, 285, 286, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 329, 330, 331, 332, 333, 334, 367, 390, 402, 404], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 30, 32, 43, 49, 54, 59, 64, 79, 91, 92, 94, 115, 119, 135, 136, 142, 143, 151, 154, 158, 162, 164, 167, 175, 177, 181, 186, 187, 188, 194, 195, 197, 198, 199, 201, 203, 205, 207, 218, 228, 231, 233, 236, 237, 240, 243, 244, 248, 249, 257, 258, 261, 263, 271, 272, 285, 289, 292, 294, 295, 296, 297, 298, 299, 303, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 365, 390, 391, 406, 409], "_set_se": [3, 152, 155, 164, 167, 183, 404], "lazystackedtensordict": [3, 56, 73, 115, 119, 131, 135, 136, 142, 143, 401], "float32": [3, 14, 15, 16, 27, 30, 34, 48, 49, 50, 53, 54, 57, 59, 60, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 91, 92, 107, 111, 112, 115, 118, 119, 120, 124, 125, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 151, 155, 164, 167, 168, 169, 177, 179, 183, 184, 186, 190, 193, 195, 197, 213, 216, 219, 229, 230, 235, 239, 242, 255, 256, 264, 267, 268, 269, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 288, 290, 293, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 328, 385, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409], "exclusive_field": [3, 73, 401], "stack_dim": [3, 73, 401], "dramat": 3, "carefulli": [3, 402, 403, 409], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 207, 209, 267, 274, 275, 282, 283, 284, 285, 286, 297, 299, 312, 317, 319, 321, 322, 392, 402, 403], "plain": [3, 8, 394], "larg": [3, 4, 29, 48, 50, 53, 164, 167, 201, 296, 298, 313, 316, 318, 391, 392, 402, 403, 406], "expens": [3, 92, 99, 100, 348, 406], "absent": [3, 30, 31, 37, 56, 75, 115, 119, 135, 136, 142, 143, 199], "torchvis": [3, 11, 181, 203, 352, 402, 408, 409], "base_env": [3, 112, 115, 119, 120, 125, 135, 136, 142, 143, 151, 152, 155, 161, 164, 166, 167, 175, 179, 183, 185, 191, 193, 195, 196, 199, 207, 350, 390, 391, 392, 402, 405, 408, 409], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 116, 119, 131, 135, 136, 142, 143, 150, 153, 155, 162, 168, 195, 199, 207, 220, 221, 240, 247, 295, 314, 348, 372, 373, 379, 380, 381, 391, 406], "bring": [3, 392, 394, 409], "signific": [3, 5, 8, 392, 409], "kind": [3, 52, 62, 216, 396, 402, 406], "consult": 3, "interest": [3, 282, 286, 385, 391, 392, 394, 403, 404, 409], "resize_par": 3, "easi": [3, 5, 11, 73, 78, 113, 114, 115, 119, 124, 125, 135, 136, 142, 143, 271, 272, 276, 277, 280, 281, 385, 386, 390, 391, 392, 403, 405, 406, 409], "graph": [3, 4, 8, 111, 112, 124, 125, 326, 327, 390, 404], "revers": [3, 237], "order": [3, 11, 16, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 98, 100, 115, 119, 135, 136, 142, 143, 159, 164, 167, 179, 199, 207, 267, 274, 285, 287, 288, 290, 296, 297, 299, 300, 304, 305, 312, 316, 317, 318, 319, 321, 322, 391, 402, 403], "chain": [3, 48, 49, 50, 52, 53, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 162, 166, 220, 221, 288, 409], "invers": [3, 4, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 158, 164, 167, 169, 177, 186, 207, 294, 304, 312, 404], "in_keys_inv": [3, 148, 161, 164, 165, 167, 177, 178, 179, 183, 184, 186, 191, 198, 390, 401, 404, 409], "append_transform": [3, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 135, 136, 142, 143, 148, 151, 157, 181, 195, 199, 201, 205, 235, 239, 348, 390, 393, 402, 404, 406, 408, 409], "doubletofloat": [3, 390, 392, 401], "float64": [3, 43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 113, 114, 115, 119, 129, 130, 135, 136, 142, 143, 151, 162, 164, 167, 181, 195, 198, 199, 201, 203, 207, 285, 401], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 118, 119, 120, 135, 136, 142, 143, 164, 167, 168, 189, 199, 207, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 348, 350, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 387, 390, 392, 394, 406], "manipul": [3, 4, 8, 113, 114, 181, 201], "third_transform": 3, "unexpect": [3, 43, 115, 119, 135, 136, 142, 143, 207, 409], "behviour": 3, "fortun": [3, 393, 394, 395, 398], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 73, 86, 115, 119, 135, 136, 142, 143, 195, 207, 217, 286, 330, 331, 332, 333, 390, 392, 398, 402, 403], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 86, 87, 88, 92, 98, 99, 101, 103, 107, 115, 119, 135, 136, 142, 143, 155, 162, 164, 165, 167, 169, 175, 183, 184, 190, 193, 198, 199, 205, 207, 237, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 386, 390, 393, 402, 403, 404, 405, 406, 409], "catfram": [3, 279, 391], "hold": [3, 326, 327, 404, 406], "notic": [3, 105, 158, 392, 399, 404], "parenthood": 3, "henc": [3, 49, 182, 217, 245, 385, 390, 392, 402, 403, 404], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 135, 142, 348, 404], "discret": [3, 25, 26, 27, 29, 30, 33, 39, 40, 41, 42, 47, 64, 67, 68, 115, 118, 119, 120, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 151, 166, 253, 256, 303, 304, 305, 306, 385, 391, 392, 395, 402, 403, 404, 409], "might": [3, 48, 50, 51, 53, 354, 384, 390, 394, 409], "action_mask": [3, 124, 125, 137, 138, 140, 141, 152], "unavail": [3, 137, 138], "probabl": [3, 4, 8, 54, 94, 97, 228, 230, 233, 235, 237, 239, 240, 243, 244, 253, 262, 263, 276, 282, 286, 299, 385, 391, 395, 408], "probabilistictensordictmodul": [3, 175, 286, 287, 408], "tensordictsequenti": [3, 235, 239, 274, 276, 279, 280, 287, 293, 385, 390, 391, 393, 395, 399, 401, 402, 405, 408], "maskedcategor": [3, 244, 383], "linear": [3, 14, 15, 16, 17, 21, 43, 111, 112, 115, 119, 131, 135, 136, 142, 143, 162, 175, 181, 195, 198, 199, 201, 203, 207, 219, 220, 221, 223, 224, 225, 226, 230, 232, 240, 242, 245, 246, 248, 249, 250, 256, 257, 258, 267, 268, 269, 270, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 290, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 377, 385, 391, 401, 405, 408], "in_feat": 3, "out_feat": 3, "logit": [3, 50, 54, 229, 243, 244, 253, 275, 282, 304, 305, 385], "dist": [3, 10, 243, 244, 253, 395], "distribution_class": [3, 175, 268, 269, 270, 273, 282, 286, 288, 296, 297, 299, 304, 305, 312, 316, 317, 318, 319, 385, 390, 392, 395, 402, 403, 408], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32, 43, 54, 77, 111, 112, 115, 119, 120, 124, 125, 130, 133, 135, 136, 137, 138, 142, 143, 145, 207, 209, 235, 239, 265, 268, 269, 270, 272, 277, 279, 281, 283, 291, 314, 328, 385, 390, 391, 392, 393, 396, 399, 402, 403, 409], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 152, 182, 207], "enviorn": [3, 129, 137, 138, 144, 145], "itself": [3, 43, 115, 119, 135, 136, 142, 143, 147, 154, 207, 314, 321, 392, 394], "ey": 3, "report": [3, 111, 112, 124, 125, 398], "foremost": 3, "callback": [3, 115, 119, 135, 136, 142, 143, 403], "ad": [3, 4, 16, 23, 43, 49, 52, 59, 60, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 115, 119, 135, 136, 142, 143, 189, 199, 207, 218, 248, 249, 280, 281, 296, 298, 299, 301, 306, 313, 316, 319, 328, 391, 393, 395, 402, 406, 409], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 60, 91, 92, 98, 189, 205, 207, 279, 280, 281, 355, 360, 391, 393, 394, 397, 403, 404, 406], "tensordictrecord": [3, 383], "videorecord": [3, 11, 348, 383, 392, 398, 399, 402], "csvlogger": [3, 11, 348, 350, 383, 391, 398, 399, 402], "wandblogg": [3, 383, 398], "tensorboardlogg": [3, 377, 383, 398], "tag": [3, 7, 11, 348, 350, 352, 355, 381, 398, 399, 402], "mp4": [3, 348, 350, 352, 399, 402], "video_format": [3, 348, 350, 352, 399, 402], "whc": 3, "cwh": 3, "exp": [3, 250, 295], "al": [3, 24, 118, 120, 168, 179, 219, 409], "pong": [3, 73, 133, 179, 409], "v5": [3, 118, 120, 133, 168, 179, 409], "cach": [3, 48, 50, 63, 73, 75, 76, 77, 79, 80, 81, 82, 92, 99, 115, 119, 135, 136, 142, 143, 154, 164, 167, 181, 199, 203, 216, 359, 405], "grow": 3, "until": [3, 7, 21, 196, 198, 207, 392, 393, 399, 402, 403], "dumpi": 3, "tediou": [3, 394], "workspac": [3, 115, 119, 135, 136, 142, 143], "pixelrendertransform": [3, 383, 402], "stream": [3, 79], "alik": [3, 348], "envcreat": [3, 16, 22, 135, 142, 348, 377, 378, 381, 383, 390, 391, 408, 409], "render_mod": [3, 348, 404], "rgb_arrai": [3, 348, 402, 403, 404], "uncom": [3, 398], "line": [3, 7, 43, 73, 115, 119, 135, 136, 142, 143, 207, 391, 398, 402, 403, 409], "comment": [3, 387, 391, 408], "pixels_record": [3, 348], "close": [3, 16, 119, 132, 175, 296, 298, 313, 316, 348, 390, 391, 394, 401, 402, 404, 408], "mission": 3, "irrespect": [3, 285, 286], "dmcontrol": [3, 115, 119, 135, 136, 142, 143], "jumanji": [3, 115, 119, 124, 125, 135, 136, 142, 143], "special": [3, 65, 67, 383, 385, 390, 393, 409], "framework": [3, 4, 9, 22, 111, 112, 115, 119, 124, 125, 131, 135, 136, 142, 143, 233, 408, 409], "Its": [3, 43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 205, 207, 285, 334], "success": [3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 158, 198, 276, 299, 321, 391, 397, 399, 404, 406, 408], "foundat": [3, 5, 137, 138, 392, 403], "inspir": [3, 404], "gone": [3, 4, 5, 279], "hard": [3, 7, 105, 113, 114, 135, 311, 391, 409], "prefer": [3, 14, 15, 17, 20, 23, 24, 49, 52, 59, 60, 182, 190, 316, 321, 364, 385, 392, 402, 403, 406], "maintain": [3, 5, 9, 32, 404], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 391, 392, 393, 397, 402, 403, 404, 406, 409], "decor": [3, 8, 12, 150, 314, 330, 331, 332, 333, 408], "relev": [3, 54, 330, 331, 332, 333, 334, 357, 404], "gym_backend": [3, 150, 383], "env1": [3, 401], "venv": 3, "python3": [3, 6, 7, 10, 409], "site": [3, 6, 7, 80, 150, 409], "env2": [3, 401], "_env": [3, 6, 118, 409], "classic_control": 3, "pendulumenv": [3, 383, 404], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 127, 147], "handi": [3, 115, 119, 135, 136, 142, 143, 398], "side": [3, 4, 409], "v0": [3, 14, 15, 115, 119, 121, 124, 125, 126, 127, 135, 136, 142, 143, 162, 199, 205, 377, 409], "26": [3, 115, 119, 135, 136, 142, 143, 390, 391, 403, 404, 405], "fun": [3, 12, 150, 392, 402, 403], "reveal": 4, "bug": [4, 408], "curv": 4, "exploit": [4, 395], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 175, 402, 403, 405], "coeffici": [4, 24, 32, 54, 175, 403], "bonu": [4, 296, 298, 313, 316], "beta": [4, 49, 59, 91, 92, 304, 312, 313, 390, 391, 406, 408], "reduc": [4, 6, 29, 105, 194, 218, 262, 383, 391, 402], "downstream": [4, 386, 390], "formul": [4, 402, 403], "ob": [4, 8, 23, 30, 31, 37, 49, 52, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 99, 100, 105, 115, 119, 135, 136, 142, 143, 152, 154, 164, 165, 167, 177, 191, 197, 213, 216, 223, 224, 225, 226, 245, 246, 247, 283, 290, 297, 299, 300, 305, 312, 317, 319, 321, 322, 330, 331, 332, 333, 391, 401, 402, 404, 406, 408, 409], "rate": [4, 11, 73, 205, 329, 391, 392, 402, 403], "gradient": [4, 43, 115, 119, 135, 136, 142, 143, 199, 207, 236, 244, 249, 253, 262, 263, 296, 298, 299, 300, 304, 305, 310, 312, 313, 314, 316, 317, 318, 319, 321, 322, 329, 330, 331, 332, 333, 367, 390, 392, 402, 403, 404], "easier": [4, 385, 390], "local": [4, 7, 10, 16, 21, 43, 92, 99, 115, 119, 135, 136, 142, 143, 199, 207, 245, 246, 255, 264, 328, 355, 357, 398, 399, 402, 403], "optima": 4, "sens": [4, 48, 50, 53, 397, 404], "product": [4, 9, 233, 234, 237, 238, 379, 380], "sum": [4, 21, 41, 105, 111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 139, 157, 189, 243, 244, 262, 264, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 312, 313, 315, 316, 317, 318, 319, 321, 322, 329, 336, 386, 390, 391, 392, 393, 396, 399, 402, 403, 404, 409], "stat": [4, 177, 205, 371, 381, 391, 392], "w": [4, 94, 158, 160, 163, 185, 197, 233, 280, 281, 350, 391, 393, 406], "yield": [4, 16, 21, 43, 115, 119, 135, 136, 142, 143, 207, 314, 390, 396], "insight": 4, "auxiliari": [4, 396], "credit": 4, "futur": [4, 23, 43, 48, 50, 53, 83, 84, 90, 115, 119, 135, 136, 142, 143, 181, 199, 203, 207, 240, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 384, 408], "past": [4, 279, 391, 406], "spars": [4, 393], "intermedi": [4, 14, 15, 157, 235, 239, 275, 390, 405], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 390], "discov": 4, "score": [4, 54], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 408], "select": [4, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 129, 130, 137, 138, 144, 145, 152, 154, 155, 157, 158, 159, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 180, 182, 183, 184, 186, 189, 190, 193, 194, 195, 196, 198, 201, 202, 204, 205, 207, 208, 219, 235, 239, 274, 283, 366, 390, 394, 406], "explicit": [4, 12, 63, 94, 406], "mechan": [4, 43, 115, 119, 135, 136, 142, 143, 199, 207, 391, 396, 404], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 115, 119, 135, 136, 142, 143, 237, 304, 312, 392, 403], "addition": 4, "timestep": [4, 54, 75, 186, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 402, 403], "realli": 4, "huge": [4, 246, 393], "std": [4, 177, 205, 250, 254, 271, 272, 390, 409], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 393, 394, 396, 397, 398, 399, 400, 401, 405, 406, 407], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 105, 115, 119, 135, 136, 142, 143, 157, 177, 181, 195, 198, 199, 201, 206, 207, 218, 219, 233, 234, 237, 238, 242, 245, 246, 247, 248, 249, 271, 272, 276, 277, 279, 280, 281, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 381, 385, 386, 390, 391, 393, 394, 395, 397, 402, 404, 409], "estim": [4, 73, 92, 99, 100, 168, 175, 223, 262, 268, 269, 270, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "unseen": 4, "extrins": 4, "wrong": [4, 92, 99], "bonus": 4, "denser": 4, "prior": [4, 258, 308, 403], "freshli": 4, "drop": [4, 98, 100, 216], "meant": [4, 43, 131], "encourag": [4, 135, 390, 391, 406], "measur": [4, 86, 87, 107, 111, 112, 124, 125, 392, 397], "novelti": 4, "revisit": 4, "previous": [4, 392, 409], "diminish": 4, "decreas": [4, 24, 395], "ideal": [4, 177, 404], "down": [4, 14, 15, 16, 17, 386, 393, 394], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 37, 48, 50, 53, 56, 391, 392, 393, 396, 397, 402, 403, 404, 408, 409], "distil": 4, "nois": [4, 206, 249, 266, 280, 281, 317, 321, 322, 363, 381, 390, 402], "exploratori": [4, 296, 298, 313, 316], "misalign": 4, "trade": [4, 395], "unavoid": 4, "divers": [4, 135, 142], "bootstrap": [4, 306, 331, 337, 338, 390, 393], "noisi": [4, 248, 249, 266, 385], "unstabl": [4, 236, 262, 263], "inher": 4, "stochast": [4, 175, 231, 249, 251, 258, 297, 299, 302, 304, 305, 310, 312, 315, 317, 319, 385, 392, 395, 403], "enemi": 4, "pomdp": [4, 406], "loos": [4, 385, 391, 392], "nonexist": 4, "architectur": [4, 227, 396, 402, 403], "sequenc": [4, 14, 15, 16, 17, 24, 30, 31, 37, 39, 41, 49, 51, 52, 54, 56, 61, 63, 79, 82, 85, 94, 95, 97, 103, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 139, 142, 143, 148, 156, 157, 158, 159, 160, 163, 164, 166, 167, 171, 173, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 194, 196, 197, 198, 205, 220, 221, 228, 230, 233, 237, 240, 243, 244, 245, 246, 253, 256, 260, 273, 287, 288, 302, 349, 350, 362, 363, 364, 366, 367, 385, 390, 392, 393, 401, 402, 403, 409], "lstm": [4, 195, 238, 239, 250], "rel": [4, 94, 195, 228, 261, 390, 391, 402, 403, 406], "tend": 4, "stabl": [4, 9, 10, 134], "compens": 4, "descent": [4, 249], "minimum": [4, 64, 135, 142, 187, 231, 250, 261, 262, 263, 289, 292, 295, 297, 299, 305, 314, 315, 319, 358, 390, 392, 399, 402, 403], "manual": [4, 11, 18, 20, 21, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 119, 120, 390, 393, 406], "deviat": [4, 177, 205, 219, 231, 242, 248, 249, 254, 271, 272, 316, 321, 322, 390, 395, 403], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 92, 99, 154, 233, 234, 237, 238, 394, 395, 396, 397, 398, 399], "stabil": [4, 172, 296, 298, 313, 316, 318], "stage": [4, 390, 404], "never": [4, 14, 15, 17, 27, 64, 92, 397], "prevent": [4, 25, 26, 29, 30, 31, 33, 37, 39, 40, 41, 42, 47, 56, 84, 205, 236, 262, 263, 296, 298, 313, 316, 318, 365, 398, 406], "entir": [4, 79, 115, 119, 135, 136, 142, 143, 245, 392, 394, 404, 406], "submit": [4, 118, 155, 384, 408], "system": [4, 5, 84, 392, 402, 403, 404], "adequ": [4, 209, 392, 402, 403], "infeas": 4, "allevi": [4, 385], "prune": 4, "fire": [4, 43, 115, 119, 135, 136, 142, 143, 207], "illeg": 4, "chess": 4, "grasp": 4, "top": [4, 105, 111, 112, 124, 125, 163, 219, 242, 395], "wherein": 4, "cumul": [4, 189, 194, 219, 336, 392], "q": [4, 9, 115, 119, 135, 136, 142, 143, 223, 224, 225, 226, 229, 230, 232, 255, 256, 264, 270, 275, 283, 284, 297, 299, 300, 301, 303, 304, 305, 306, 311, 312, 317, 319, 321, 322, 328, 383, 390, 396], "flow": [4, 390, 392, 402, 403, 404, 406], "reparameter": [4, 228, 244, 253], "soft": [4, 311, 319, 320, 402], "critic": [4, 8, 268, 278, 296, 298, 299, 300, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 390, 396], "clip": [4, 54, 161, 187, 296, 298, 313, 316, 318, 321, 322, 367, 392, 403, 404], "oppos": [4, 63], "incorrect": 4, "thought": [4, 115, 119, 135, 136, 142, 143], "region": 4, "squash": [4, 393, 408], "tanh": [4, 220, 221, 233, 234, 236, 237, 238, 240, 246, 261, 262, 263, 289, 392, 395, 402, 403, 404, 405, 408], "prob": [4, 243, 244, 253, 392, 403], "rememb": [4, 402], "remap": 4, "origin": [4, 8, 48, 50, 53, 54, 123, 165, 166, 175, 181, 199, 203, 207, 233, 282, 285, 286, 297, 299, 311, 312, 314, 316, 317, 319, 321, 322, 390, 401, 404, 409], "histor": 5, "ceas": 5, "farama": [5, 77, 126, 127, 137, 138, 392, 404], "best": [5, 9, 123, 235, 239, 402, 403, 406, 408], "gymwrapp": [5, 115, 119, 135, 136, 142, 143, 169, 190, 193, 204, 383, 392, 408, 409], "feel": [5, 384, 399, 408], "free": [5, 7, 164, 167, 296, 308, 316, 387, 392, 399, 403, 408], "gladli": 5, "prepar": [6, 36, 76, 392], "conda": [6, 7, 384], "cmake": 6, "activ": [6, 7, 9, 220, 221, 227, 231, 240, 245, 246, 298, 313, 316, 385, 404, 408], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 76, 384], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 121], "y": [6, 7, 52, 134, 232, 245, 265, 390, 403, 406], "facebookresearch": [6, 76, 121], "subdirectori": 6, "verbos": [6, 399], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 70, 115, 119, 135, 136, 142, 143, 183, 192, 207, 314, 402, 403, 408, 409], "command": [6, 7, 10, 143, 392, 402, 403, 404, 409], "readm": [6, 7, 144], "md": [6, 7], "habitatenv": [6, 383], "_has_habitat": 6, "available_env": [6, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 129, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 409], "startswith": [6, 386, 390, 396], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 116, 314, 390], "env_nam": [6, 111, 113, 115, 118, 119, 121, 124, 126, 132, 135, 136, 139, 142, 143, 390, 392, 409], "llvmlite": 6, "config": [6, 7, 181, 203, 222, 227, 254, 371, 372, 373, 375, 378], "var": [6, 7, 43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 314, 319], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 274, 314], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 314, 319, 406], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 115, 391, 399], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 75], "stand": [7, 35, 113, 114, 135, 142, 401, 404], "joint": [7, 391], "contact": [7, 51, 402], "engin": [7, 139, 404], "biomechan": 7, "graphic": 7, "anim": [7, 403], "area": 7, "demand": [7, 398, 409], "fast": [7, 9, 111, 112, 184, 216, 317, 390, 391, 392], "articul": 7, "acquir": [7, 392], "deepmind": [7, 8, 9, 79, 113, 114, 115, 119, 129, 130, 135, 136, 142, 143, 168, 392, 394], "whomev": 7, "licenc": 7, "incorpor": [7, 115, 119, 135, 136, 142, 143, 271, 272, 276, 277, 280, 281, 321, 393, 395, 404], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 384], "tip": [7, 384], "glfw": [7, 390], "osmesa": 7, "egl": 7, "advic": [7, 79, 409], "sudo": [7, 384], "apt": [7, 403], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 268, 269, 270], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 390, 392, 393, 402, 403, 406], "roboti": 7, "html": [7, 14, 15, 132, 134], "wget": 7, "mujoco210": 7, "tar": [7, 76], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 135, 142], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 48, 50, 63, 82], "bin": [7, 230, 275, 385], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 226, 282, 286, 390, 392, 406], "nvidia": [7, 123], "older": [7, 12], "hack": [7, 390], "adatp": 7, "script": [7, 76, 209, 377, 381, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "unnot": [7, 182], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 84, 391, 406], "troubleshoot": 7, "gl": 7, "h": [7, 94, 158, 160, 163, 185, 197, 233, 234, 235, 237, 238, 239, 242, 350, 391, 393, 406], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 33, 41, 42, 47], "directori": [7, 48, 50, 53, 63, 73, 75, 76, 77, 79, 80, 81, 86, 355, 357, 387, 390, 395, 398, 402], "devel": 7, "ubuntu": [7, 123], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 391, 393, 401], "libstdc": 7, "glibcxx_3": 7, "29": [7, 390, 391, 404], "compil": [7, 23, 43, 92, 99, 100, 115, 119, 135, 136, 142, 143, 207, 233, 234, 237, 238], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 204, 392, 401], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 30, 31, 37, 43, 56, 115, 119, 135, 136, 142, 143, 176, 199, 207, 299, 319, 386, 409], "job": [7, 18, 19, 20, 22, 52, 59, 60, 94, 406, 408], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 111, 112, 390, 391, 403, 404], "114": [7, 404], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 404, 406], "offscreenopenglcontext": 7, "opengl": [7, 402, 403], "global": [7, 43, 52, 59, 60, 94, 115, 119, 135, 136, 137, 138, 142, 143, 207, 255, 264, 282, 286, 328, 387, 390, 402, 403], "cuda_visible_devic": 7, "id": [7, 23, 54, 92, 94, 99, 100, 115, 118, 119, 135, 136, 142, 143, 280, 281, 299, 317, 353, 357, 397, 406], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 402], "onscreen": 7, "101": [7, 392, 404], "correctli": [7, 43, 115, 119, 135, 136, 142, 143, 207], "lgl": 7, "libegl": 7, "x11": [7, 403], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 387], "n_training_step": 8, "datapoint": [8, 63, 406], "n_data_per_train": 8, "no_grad": [8, 43, 115, 119, 135, 136, 142, 143, 175, 207, 233, 234, 237, 238, 330, 331, 332, 333, 392, 393, 403], "loss_fn": [8, 393, 396, 397, 408], "zero_grad": [8, 43, 115, 119, 135, 136, 142, 143, 207, 387, 390, 392, 393, 396, 399, 402, 403, 404], "backpropag": [8, 111, 112, 124, 125, 135, 296, 297, 298, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 322, 328, 396, 403, 404], "differenti": [8, 63, 111, 112, 175, 299, 321, 330, 331, 332, 333, 393, 395, 396, 402, 403, 404], "denomin": 8, "artifact": 8, "numer": [8, 52, 119, 205, 236, 262, 263, 267, 274, 275, 282, 283, 284, 285, 286, 365, 392, 406, 409], "misconcept": 8, "freed": 8, "appear": [8, 11, 27, 64, 73, 79, 92, 99, 100, 404, 406], "compuat": 8, "fix": [8, 32, 135, 195, 297, 299, 315, 319, 391, 399, 404, 409], "retain_graph": [8, 111, 112], "discuss": [8, 9, 397, 402, 403], "inplac": [8, 43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 207, 390], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 115, 119, 135, 136, 142, 143, 152, 154, 155, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180, 181, 182, 183, 184, 186, 189, 190, 193, 194, 195, 196, 198, 201, 202, 204, 205, 207, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 245, 246, 247, 248, 250, 251, 252, 254, 255, 257, 258, 260, 264, 265, 271, 272, 273, 275, 276, 279, 280, 281, 282, 284, 285, 286, 289, 290, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 386, 404, 408], "submodul": [8, 43, 115, 119, 135, 136, 142, 143, 147, 195, 207, 235, 239, 293, 314], "param": [8, 43, 54, 115, 119, 131, 135, 136, 142, 143, 155, 162, 164, 165, 169, 175, 183, 184, 190, 193, 198, 207, 228, 230, 245, 246, 247, 261, 273, 282, 285, 288, 314, 324, 327, 330, 331, 332, 333, 334, 390, 399, 402, 403, 404, 405, 408], "grad": [8, 43, 111, 112, 115, 119, 135, 136, 142, 143, 207, 390, 392], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 54, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 137, 138, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 250, 255, 285], "factor": [8, 11, 24, 43, 186, 207, 218, 236, 249, 262, 263, 271, 272, 276, 277, 280, 281, 297, 303, 306, 307, 309, 320, 336, 390, 391, 395, 399, 402, 403, 406, 409], "fit": [8, 12, 177, 195, 386, 387, 390], "bottlneck": 8, "brax": [8, 111, 112, 115, 119, 135, 136, 142, 143, 184, 394, 409], "jax": [8, 12, 111, 112, 124, 125], "improperli": 8, "underli": [8, 115, 119, 135, 136, 142, 143, 314, 394, 396, 398, 404], "tedeiou": 8, "priorit": [8, 49, 59, 91, 92, 299, 300, 301, 303, 304, 305, 312, 317, 319, 321, 322, 390, 391, 397], "amount": [8, 280, 281, 391, 406], "costli": [8, 404], "constitut": [8, 391, 403, 404], "profil": 8, "frequent": [8, 406], "program": [8, 304, 312, 409], "functorch": [8, 10], "incl": 8, "suit": [8, 114, 392, 394, 408, 409], "mujoco_instal": 8, "valueerror": [8, 43, 115, 119, 135, 136, 142, 143, 207], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 98, 179, 408, 409], "idea": [9, 317, 387, 393, 395, 402, 403], "introductori": 9, "intro": [9, 392, 393], "dai": [9, 408], "2022": [9, 10, 404, 408], "spin": [9, 113, 114], "deep": [9, 158, 223, 224, 225, 226, 229, 280, 281, 296, 299, 311, 319, 320, 390, 402], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 395], "summari": [9, 177, 205, 390, 391, 392, 393], "reddit": 9, "reagent": 9, "orient": [9, 81, 409], "baselines3": 9, "tf": 9, "bandit": [9, 134], "tensorflow": [9, 243, 244], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 399], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 408], "grade": 9, "factori": [9, 61, 390], "cherri": 9, "jaxrl": 9, "mbrl": [9, 131, 385], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 404], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 392, 393, 402, 403], "notebook": [10, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "24": [10, 80, 100, 118, 132, 133, 279, 390, 391, 402, 404], "pip3": [10, 390, 392, 393, 402, 403], "url": [10, 121], "org": [10, 14, 15, 24, 49, 76, 77, 79, 81, 91, 92, 111, 112, 113, 114, 121, 124, 125, 129, 130, 132, 133, 134, 139, 144, 145, 158, 181, 201, 218, 222, 223, 224, 225, 226, 227, 230, 231, 232, 237, 242, 243, 244, 249, 251, 252, 255, 257, 258, 264, 275, 280, 281, 296, 297, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 318, 319, 320, 321, 330, 335, 343, 382, 400, 405], "whl": 10, "u": [10, 78, 233, 234, 237, 238, 404], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 392, 402, 403, 404, 406], "power": [11, 391], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 383], "ultim": [11, 236, 262, 263], "ffmpeg": 11, "whatev": [11, 386, 390], "fed": [11, 403, 406], "feed": [11, 181, 203, 314, 385, 390, 402, 403, 406], "suppos": [11, 135, 363, 387, 409], "snippet": [11, 181, 201, 390], "gave": 11, "extrem": [11, 135, 142, 296, 298, 313, 316, 318], "blurri": 11, "stitch": 11, "exp_nam": [11, 350, 351, 352, 355, 356, 357, 377, 391, 398, 399], "my_exp": [11, 398], "pixels_onli": [11, 113, 114, 118, 120, 121, 139, 390, 391, 398, 399, 408, 409], "my_video": [11, 398], "record_env": [11, 398, 399], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 270, 385], "module_nam": [12, 314], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 91, 92, 94, 105, 111, 113, 114, 115, 117, 118, 119, 120, 121, 124, 129, 130, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 154, 158, 168, 174, 175, 181, 185, 193, 194, 199, 201, 203, 204, 205, 207, 210, 214, 217, 219, 229, 230, 235, 239, 241, 242, 245, 246, 247, 248, 249, 250, 255, 256, 264, 267, 274, 275, 282, 283, 284, 285, 286, 289, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 325, 328, 329, 330, 331, 332, 333, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 371, 375, 381, 391, 392], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 235, 239, 408], "longer": [12, 391, 399, 402, 403, 406], "x": [12, 23, 43, 52, 54, 79, 100, 175, 197, 218, 221, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 245, 246, 265, 274, 282, 283, 292, 295, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 367, 390, 402, 404, 406, 408], "23": [12, 80, 100, 391, 393, 402, 404, 405], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 80, 111, 112, 119, 124, 125, 238, 295, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 390, 391, 392, 393, 399, 402, 403, 404, 406, 409], "classmethod": [12, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 201, 222, 254], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 43, 45, 46, 48, 50, 52, 53, 55, 56, 62, 64, 65, 66, 67, 68, 80, 84, 92, 99, 100, 115, 116, 117, 118, 119, 120, 129, 130, 132, 135, 136, 137, 138, 142, 143, 144, 145, 146, 175, 195, 199, 204, 205, 207, 220, 221, 222, 223, 224, 225, 226, 227, 232, 240, 254, 282, 286, 299, 319, 354, 355, 363, 372, 373, 379, 380, 381, 390, 391, 392, 406, 409], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 116, 135, 142, 390, 408], "device_typ": [14, 16, 17, 25, 29, 39, 45, 220, 221, 222, 223, 224, 225, 226, 232, 240, 245, 246, 248, 249, 254], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 391], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 391], "create_env_kwarg": [14, 15, 16, 17, 21, 116, 132, 135, 142, 390, 409], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 43, 186, 391, 406], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 282, 314, 363, 390, 391, 392, 393, 395, 402, 408], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 211, 215, 282, 286, 363], "exploration_mod": [14, 16, 17, 18, 19, 20, 383, 385], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 48, 50, 53, 135, 142], "num_sub_thread": [14, 15, 17, 135, 142], "set_trunc": [14, 15, 16, 17, 115, 119, 135, 136, 142, 143], "use_buff": [14, 15, 16, 135, 142], "datacollector": [14, 15, 16, 17, 43, 286, 316, 392, 397, 406], "recept": 14, "safe": [14, 15, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 92, 99, 267, 272, 274, 275, 281, 282, 283, 284, 285, 286, 288, 385, 408], "sota": [14, 15, 131, 172, 318, 358, 372, 390, 391, 408], "guard": [14, 15], "doc": [14, 15, 61, 121, 124, 125, 134, 139, 357, 391, 402, 403, 406, 409], "env_mak": [14, 15, 16, 21, 377, 409], "2000": [14, 15, 16, 43, 63, 122, 350, 392, 406], "50": [14, 15, 16, 21, 51, 54, 73, 81, 99, 100, 129, 130, 207, 389, 390, 391, 392, 393, 402, 403, 404, 405, 406, 407], "shutdown": [14, 15, 16, 17, 21, 155, 390, 408], "del": [14, 15, 16, 390, 391, 392, 401, 402, 408, 409], "int64": [14, 15, 16, 23, 25, 26, 29, 33, 34, 39, 40, 41, 42, 47, 48, 50, 51, 53, 54, 57, 59, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 91, 115, 119, 128, 129, 130, 134, 135, 136, 137, 138, 140, 141, 142, 143, 151, 155, 168, 179, 186, 193, 230, 256, 274, 275, 280, 281, 282, 283, 284, 385, 392, 393, 394, 395, 397, 398, 404, 406, 408], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 157, 265, 274, 279, 283, 393], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 63], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 391], "divis": [14, 15, 16, 17, 18, 19, 20, 73, 79, 92, 99, 100, 218, 403], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 119, 154, 195, 204, 239, 393, 404, 405], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 369, 391], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 82, 111, 112, 113, 114, 115, 118, 119, 120, 124, 125, 132, 133, 135, 136, 139, 142, 143, 162, 164, 167, 175, 181, 195, 198, 199, 201, 203, 205, 207, 285, 402, 409], "span": [14, 15, 16, 17, 18, 19, 20, 21, 79, 92, 99], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 43, 207, 279, 391, 392, 402, 403], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 54, 357, 385, 402, 403, 404], "round": [14, 15, 16, 17, 18, 19, 20, 21, 73], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 43, 77, 115, 119, 135, 136, 142, 143, 207], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 204, 408], "ratio": [14, 15, 17, 54, 390, 392], "finish": [14, 15, 17, 21, 119, 186, 409], "rest": [14, 15, 17, 385, 392, 393, 402, 404, 408], "earli": [14, 15, 17, 43, 119, 193, 408], "safeti": [14, 15, 17, 131, 135, 142], "harm": [14, 15, 17, 135, 142], "exclus": [14, 15, 69, 70, 73, 79, 92, 99, 100, 155, 169, 171, 233, 235, 237, 239, 243, 244, 274, 275, 283, 284, 320, 321, 322, 330, 331, 332, 333, 334, 357, 381, 385], "add_truncated_kei": [14, 15, 16, 17, 115, 119, 135, 136, 142, 143, 199], "ordereddict": [14, 15, 16, 17, 21, 43, 115, 119, 135, 136, 142, 143, 199, 205, 207, 299, 319, 391], "form": [14, 15, 17, 43, 49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 115, 119, 135, 136, 142, 143, 205, 207, 233, 235, 237, 239, 295, 296, 298, 313, 316, 367, 385, 395, 403], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 115, 119, 135, 136, 142, 143, 199], "integ": [14, 15, 16, 17, 23, 39, 41, 43, 54, 92, 99, 100, 101, 115, 119, 135, 136, 142, 143, 151, 154, 168, 172, 177, 193, 220, 221, 240, 245, 246, 299, 304, 312, 319, 406], "increment": [14, 15, 16, 17, 115, 119, 135, 136, 142, 143, 177, 313], "env_fn": [14, 15, 16, 17, 116, 379, 380], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 99, 100, 225, 226, 404], "out_se": [14, 15, 16, 17, 409], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 28, 30, 31, 33, 37, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 58, 59, 60, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 90, 91, 92, 94, 99, 100, 101, 103, 105, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 155, 162, 181, 183, 192, 195, 198, 199, 200, 202, 203, 206, 207, 219, 220, 221, 223, 224, 225, 226, 229, 232, 235, 236, 239, 240, 241, 242, 245, 246, 247, 253, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 328, 329, 330, 331, 332, 333, 334, 348, 350, 354, 355, 357, 360, 367, 372, 373, 378, 379, 380, 386, 392, 403], "return_same_td": 16, "interruptor": 16, "cautious": [16, 316], "whole": [16, 30, 31, 37, 43, 56, 63, 115, 119, 135, 136, 142, 143, 199, 207, 282, 299, 319, 358, 390, 392], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 395], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 367], "respect": [18, 19, 20, 43, 115, 119, 135, 136, 142, 143, 156, 162, 164, 167, 181, 182, 191, 195, 198, 199, 201, 203, 207, 233, 237, 245, 258, 285, 290, 296, 298, 313, 316, 318, 330, 332, 333, 362, 392, 393, 402, 403], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 384, 391, 392, 395, 398, 401, 406], "fashion": [18, 20, 21, 48, 50, 53, 100], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 73, 76, 77, 79, 80, 81, 115, 119, 135, 136, 142, 143, 171], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 49, 52, 59, 60, 75, 115, 119, 135, 136, 142, 143, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292, 390], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 404], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 390], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 73, 282, 286], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 379, 380, 390, 391], "coordin": [21, 163], "init": [21, 43, 115, 119, 135, 136, 142, 143, 205, 207, 245, 246, 247, 357, 391, 392], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 227, 391, 406], "equat": [21, 79, 119, 205, 280, 281, 295, 298, 320, 392, 394, 404], "exce": [21, 406], "indefinit": [21, 72], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 218, 367, 390, 392, 393], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 321, 396], "jump": [22, 394], "host": [22, 43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 222, 227, 254, 273], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 27, 28, 29, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 57, 62, 63, 64, 65, 66, 67, 68, 92, 99, 100, 115, 119, 135, 136, 142, 143, 148, 151, 152, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 171, 173, 174, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 201, 205, 207, 208, 216, 217, 230, 256, 271, 272, 273, 276, 277, 279, 280, 281, 286, 301, 328, 348, 350], "as_nest": 23, "durat": [23, 403], "meta": [23, 48, 50, 53, 62, 75, 117, 121, 296, 298, 313, 316, 318, 387, 392, 402, 403, 406], "aren": [23, 194, 393], "eventu": [23, 255, 393, 404], "supersed": 23, "recov": [23, 75, 77, 79, 80, 81, 99, 100, 272, 277, 281, 287, 304, 312, 401], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 118, 120], "stride": [23, 43, 115, 119, 135, 136, 142, 143, 207, 220, 221, 223, 224, 232, 245, 391, 402, 408], "jag": 23, "focu": [23, 390, 391, 392, 395, 396, 397, 402], "team": [23, 402, 403, 408], "cat": [23, 290, 297, 299, 300, 312, 317, 319, 321, 322, 402, 406, 408], "arang": [23, 92, 151, 230, 244, 274, 358, 385, 406], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 60, 64, 73, 79, 99, 124, 125, 143, 213, 279, 406], "data_split": 23, "got": [23, 397], "init_kl_coef": 24, "horizon": [24, 129, 130, 144, 145, 219, 242, 392], "kl": [24, 32, 54, 175, 308, 313], "describ": [24, 62, 159, 198, 208, 261, 262, 301, 353, 386, 390, 392, 402, 403, 404, 409], "ziegler": 24, "et": [24, 219], "relax": [24, 348], "penalti": [24, 54, 310, 313], "strai": [24, 54], "greater": [24, 73, 92, 99, 100, 235, 239, 299, 390, 391, 408], "increas": [24, 84, 196, 280, 281, 402, 403], "pull": [24, 406], "toward": [24, 203], "aggress": 24, "kl_coef": [24, 32, 54], "arxiv": [24, 49, 76, 79, 81, 91, 92, 111, 112, 113, 114, 124, 125, 129, 130, 132, 133, 139, 144, 145, 158, 181, 201, 218, 222, 223, 224, 225, 226, 227, 230, 231, 232, 237, 242, 249, 251, 252, 255, 257, 258, 264, 275, 280, 281, 296, 297, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 315, 316, 319, 320, 321, 330, 335, 343, 405], "pdf": [24, 158, 222, 223, 224, 225, 226, 230, 275, 280, 281, 299, 306, 310, 317, 320, 321, 330, 335, 343], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 402, 403], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 175], "newest": 24, "int8": [25, 115, 128, 137, 138, 156], "encod": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 111, 112, 115, 118, 120, 121, 124, 125, 132, 133, 139, 151, 166, 252, 253, 257, 295, 385, 391, 392, 393, 395, 404, 406], "null": [25, 27, 28, 30, 31, 37, 38, 45, 46, 49, 55, 56, 59, 62, 64, 65, 66, 67, 68, 91, 92, 156], "denot": [25, 403], "nmber": 25, "clariti": 25, "rand": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 111, 112, 124, 125, 131, 152, 155, 164, 167, 183, 208, 219, 242, 282, 296, 297, 299, 300, 301, 303, 304, 305, 312, 314, 316, 317, 319, 321, 322, 404, 408, 409], "assert_is_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "clear_device_": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "op": [25, 26, 27, 28, 29, 33, 39, 40, 41, 42, 45, 46, 47, 62, 64, 65, 66, 67, 68, 176, 204, 271, 272, 276, 350, 369], "is_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 409], "np": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 119, 289, 348, 402, 404], "ndarrai": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 119, 280, 281, 289, 348, 402], "ignore_devic": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "arrai": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 54, 55, 56, 62, 64, 65, 66, 67, 68, 91, 115, 119, 135, 136, 142, 143, 168, 233, 234, 237, 238, 390, 402, 406], "broadcast": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "compliant": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "singleton": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 220, 221, 240, 259, 260], "start_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "end_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "implements_for_spec": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "torch_funct": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "index_typ": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 45, 46, 55, 56, 62, 64, 65, 66, 67, 68], "tensor_to_index": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "make_neg_dim": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "convert": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 139, 142, 143, 162, 164, 167, 181, 195, 198, 199, 201, 203, 205, 207, 285, 295, 314, 390, 391, 392, 404, 406], "shortcut": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 404, 409], "ndimens": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 390], "violat": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 385], "proxi": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 50, 53, 55, 56, 62, 64, 65, 66, 67, 68, 244, 253, 282, 386], "project": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 166, 237, 267, 271, 272, 274, 275, 280, 281, 282, 283, 284, 285, 286, 357, 385, 408, 409], "uniformli": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 93, 314, 409], "normal": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143, 177, 205, 218, 220, 221, 236, 240, 243, 244, 250, 262, 263, 271, 272, 282, 286, 298, 299, 313, 316, 363, 365, 381, 385, 387, 393, 395, 403, 409], "drawn": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 195, 276, 282, 286, 392, 402, 403], "dest": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 181, 201, 203, 285], "to_categor": [25, 26, 29, 33, 39, 40, 41, 42, 47], "to_categorical_spec": [25, 26, 29, 33, 39, 40, 41, 42, 47], "to_numpi": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 115, 119, 135, 136, 142, 143], "transformed_in": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68, 198, 199, 250, 261, 381], "check_spec_encod": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "to_one_hot": [25, 26, 29, 33, 39, 40, 41, 42, 47], "hot": [25, 26, 29, 33, 39, 40, 41, 42, 47, 111, 112, 118, 120, 121, 124, 125, 129, 130, 132, 133, 137, 138, 139, 144, 145, 151, 152, 166, 230, 253, 256, 274, 275, 283, 284, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 393], "categ": [25, 26, 29, 33, 41, 42, 282], "categ_sampl": [25, 26, 29, 33, 41, 42, 47], "onehot_sampl": [25, 26, 29, 33, 41, 42], "to_one_hot_spec": [25, 26, 29, 33, 39, 40, 41, 42, 47], "categoricalbox": [25, 26, 29, 33, 41, 42, 47, 136, 395, 402, 403, 409], "type_check": [25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 55, 56, 62, 64, 65, 66, 67, 68], "update_mask": [25, 26, 29, 33, 39, 40, 41, 42, 47], "outcom": [25, 26, 29, 33, 39, 40, 41, 42, 47, 228, 261, 314, 402], "disabl": [25, 26, 29, 33, 39, 40, 41, 42, 43, 47, 115, 119, 135, 136, 142, 143, 199, 207, 236, 263, 348, 390, 402], "unmask": [25, 26, 29, 33, 39, 40, 41, 42, 47], "ts": [25, 26, 29, 33, 39, 40, 41, 42, 47], "upper": [27, 97, 176], "continuousbox": [27, 30, 64, 115, 119, 135, 136, 142, 143, 213, 392, 393, 402, 403, 404, 408, 409], "inst": 29, "descript": [30, 144, 154, 391, 392], "akin": 30, "unnam": 30, "compositespec": [30, 383, 404, 409], "constraint": [30, 131, 392, 403], "pixels_spec": 30, "observation_vector_spec": 30, "composite_spec": 30, "observation_vector": [30, 159, 390], "_nodefault": [30, 31, 37, 48, 50, 53, 56], "is_empti": [30, 31, 37, 56, 404], "include_nest": [30, 31, 37, 56], "leaves_onli": [30, 31, 37, 56], "is_leaf": [30, 31, 37, 56], "_compositespecitemsview": [30, 31, 37, 56], "children": [30, 31, 37, 43, 56, 115, 119, 135, 136, 142, 143, 207], "_compositespeckeysview": [30, 31, 37, 56], "reflect": [30, 31, 37, 56, 120, 137, 138, 204, 216, 314, 370, 391, 392, 393, 403], "lock_": [30, 31, 37, 56], "recurs": [30, 31, 37, 43, 56, 69, 70, 115, 119, 135, 136, 142, 143, 207, 314], "succeed": [30, 31, 37, 56], "selected_kei": [30, 31, 37, 56, 190, 390], "unlock_": [30, 31, 37, 56], "unlock": [30, 31, 37, 48, 50, 53, 56], "_compositespecvaluesview": [30, 31, 37, 56], "multipli": [32, 233, 237, 297, 298, 299, 305, 313, 315, 316, 317, 319, 365, 390, 402], "calcul": [32, 54, 186, 233, 296, 298, 303, 313, 316, 318, 321], "shift_kei": [34, 36, 44, 57], "is_full_kei": [34, 36, 44, 57], "is_ful": [34, 36, 44, 57], "tempfil": [34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 94, 377, 390, 391, 402, 406], "register_save_hook": [34, 49, 52, 57, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "temporarydirectori": [34, 48, 49, 50, 52, 53, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 390, 391, 402, 406], "tmpdir": [34, 49, 52, 57, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 390, 391, 402], "rb_load": [34, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "register_load_hook": [34, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "persist": [35, 43, 115, 119, 135, 136, 142, 143, 199, 207, 216, 299, 319], "filesystem": [35, 406], "ted2nest": [36, 383], "stackedcomposit": [37, 383], "nvec": [39, 41], "remove_singleton": 39, "cardin": [39, 41, 230, 256, 274, 275, 284, 392], "ax": [39, 248, 249, 402], "m": [39, 43, 115, 119, 135, 136, 142, 143, 166, 207, 286, 385, 391, 404], "Not": [39, 40, 52, 111, 112, 124, 235, 239], "neither": [39, 40, 41, 42, 79, 404], "use_regist": 41, "mone_hot": [41, 42], "boxlist": [41, 42], "gamma": [43, 186, 207, 242, 296, 297, 299, 300, 301, 303, 305, 306, 307, 309, 312, 314, 316, 317, 318, 319, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 377, 386, 390, 391, 392, 402, 403, 408], "sutton": [43, 386, 402, 403], "1988": 43, "tempor": [43, 235, 239, 242, 331, 332, 337, 338], "44": [43, 391, 404, 405], "discount": [43, 79, 116, 186, 207, 297, 303, 306, 307, 309, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 386, 391, 392, 402, 403], "ahead": [43, 207, 409], "bias": [43, 233, 234, 237, 238, 292, 386, 390], "mitig": 43, "pleas": [43, 77, 115, 118, 119, 135, 136, 137, 138, 142, 143, 155, 158, 196, 199, 207, 245, 246, 247, 299, 319, 384], "multisteptransform": [43, 383], "99": [43, 186, 205, 242, 309, 324, 329, 336, 377, 390, 391, 392, 396, 399, 402, 403, 404, 405, 408], "add_modul": [43, 115, 119, 135, 136, 142, 143, 207], "child": [43, 115, 119, 135, 136, 142, 143, 207, 391], "fn": [43, 51, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 135, 136, 142, 143, 207, 250, 379, 380], "init_weight": [43, 115, 119, 135, 136, 142, 143, 207], "fill_": [43, 115, 119, 135, 136, 142, 143, 207, 391, 393, 409], "net": [43, 115, 119, 135, 136, 142, 143, 207, 224, 226, 229, 232, 246, 296, 297, 299, 305, 312, 316, 317, 318, 319, 377, 391, 404, 405, 408], "in_featur": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 220, 221, 223, 224, 225, 226, 232, 240, 245, 246, 248, 249, 268, 285, 293, 301, 303, 395, 396, 408], "out_featur": [43, 115, 119, 131, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 219, 220, 221, 223, 224, 225, 226, 231, 232, 235, 239, 240, 242, 245, 246, 248, 249, 268, 274, 285, 293, 301, 303, 385, 390, 393, 395, 396, 399, 408], "bia": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 218, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 235, 237, 238, 239, 240, 246, 248, 249, 250, 276, 277, 280, 281, 285, 292, 294, 295, 299, 314, 319, 386, 390, 391, 392, 393, 403, 408], "requires_grad": [43, 111, 112, 115, 119, 135, 136, 142, 143, 175, 199, 207, 299, 319], "bfloat16": [43, 115, 119, 135, 136, 142, 143, 207], "datatyp": [43, 115, 119, 135, 136, 142, 143, 207, 406], "member": [43, 115, 119, 135, 136, 142, 143, 207, 314, 350], "xdoctest": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 299, 314, 319], "buf": [43, 115, 119, 135, 136, 142, 143, 207], "20l": [43, 115, 119, 135, 136, 142, 143, 207, 314], "1l": [43, 115, 119, 135, 136, 142, 143, 207, 314], "5l": [43, 115, 119, 135, 136, 142, 143, 207, 314], "__call__": [43, 51, 115, 119, 135, 136, 142, 143, 207, 286, 387, 409], "doubl": [43, 115, 119, 135, 136, 142, 143, 162, 164, 165, 167, 181, 195, 198, 199, 201, 203, 207, 285, 301, 306, 311, 317, 320, 328, 390, 391, 392, 393, 409], "eval": [43, 115, 119, 135, 136, 142, 143, 199, 205, 207, 390, 391, 392], "evalu": [43, 115, 119, 129, 130, 135, 136, 142, 143, 199, 207, 228, 243, 244, 253, 263, 317, 372, 373, 391, 392, 399], "dropout": [43, 115, 119, 135, 136, 142, 143, 199, 207, 233, 235, 237, 239, 240, 393], "batchnorm": [43, 115, 119, 135, 136, 142, 143, 199, 207, 218], "comparison": [43, 115, 119, 135, 136, 142, 143, 199, 207, 314, 390, 391], "similar": [43, 48, 50, 52, 53, 79, 115, 119, 135, 136, 137, 138, 142, 143, 162, 181, 195, 198, 199, 201, 202, 203, 205, 207, 268, 270, 282, 285, 286, 386, 390, 391, 392, 393, 395, 396, 397, 398, 404, 406, 409], "extra_repr": [43, 115, 119, 135, 136, 142, 143, 207], "nontermin": 43, "original_reward": 43, "newli": [43, 115, 119, 135, 136, 142, 143], "OR": 43, "get_buff": [43, 115, 119, 135, 136, 142, 143, 207], "get_submodul": [43, 115, 119, 135, 136, 142, 143, 207], "qualifi": [43, 115, 119, 135, 136, 142, 143, 207], "referenc": [43, 115, 119, 135, 136, 142, 143, 207], "attributeerror": [43, 115, 119, 135, 136, 142, 143, 207], "resolv": [43, 115, 119, 135, 136, 142, 143, 207], "someth": [43, 115, 119, 128, 135, 136, 142, 143, 207, 384, 391, 392, 404, 409], "get_extra_st": [43, 115, 119, 135, 136, 142, 143, 205, 207], "set_extra_st": [43, 115, 119, 135, 136, 142, 143, 205, 207], "picklabl": [43, 115, 119, 135, 136, 142, 143, 205, 207], "pickl": [43, 115, 119, 135, 136, 142, 143, 205, 207], "get_paramet": [43, 115, 119, 135, 136, 142, 143, 207], "net_b": [43, 115, 119, 135, 136, 142, 143, 207], "net_c": [43, 115, 119, 135, 136, 142, 143, 207], "conv": [43, 115, 119, 135, 136, 142, 143, 207, 220, 221, 391], "conv2d": [43, 115, 119, 135, 136, 142, 143, 207, 221, 223, 224, 232, 245, 408], "kernel_s": [43, 115, 119, 135, 136, 142, 143, 207, 220, 221, 223, 224, 232, 245, 251, 391, 408], "diagram": [43, 115, 119, 135, 136, 142, 143, 207], "degre": [43, 115, 119, 135, 136, 142, 143, 207], "named_modul": [43, 115, 119, 135, 136, 142, 143, 207], "o": [43, 115, 119, 135, 136, 142, 143, 207, 238], "half": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 390], "ipu": [43, 115, 119, 135, 136, 142, 143, 207], "strict": [43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "descend": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "get_swap_module_params_on_convers": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "enforc": [43, 98, 115, 119, 135, 136, 142, 143, 199, 207, 287, 299, 319, 404], "preserv": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "missing_kei": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "unexpected_kei": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "namedtupl": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "l": [43, 115, 119, 135, 136, 142, 143, 207, 233, 237, 329, 392, 404], "idx": [43, 115, 119, 135, 136, 142, 143, 207], "mtia": [43, 115, 119, 135, 136, 142, 143, 207], "named_buff": [43, 115, 119, 135, 136, 142, 143, 207], "remove_dupl": [43, 115, 119, 135, 136, 142, 143, 207, 314], "prepend": [43, 115, 119, 135, 136, 142, 143, 207, 314], "running_var": [43, 115, 119, 135, 136, 142, 143, 207], "named_children": [43, 115, 119, 135, 136, 142, 143, 207], "conv4": [43, 115, 119, 135, 136, 142, 143, 207], "conv5": [43, 115, 119, 135, 136, 142, 143, 207], "memo": [43, 115, 119, 135, 136, 142, 143, 207], "named_paramet": [43, 115, 119, 135, 136, 142, 143, 175, 207, 314], "register_backward_hook": [43, 115, 119, 135, 136, 142, 143, 207], "removablehandl": [43, 115, 119, 135, 136, 142, 143, 207], "favor": [43, 115, 119, 135, 136, 142, 143, 207, 392], "register_full_backward_hook": [43, 115, 119, 135, 136, 142, 143, 207], "register_buff": [43, 115, 119, 135, 136, 142, 143, 207], "running_mean": [43, 115, 119, 135, 136, 142, 143, 207], "alongsid": [43, 115, 119, 135, 136, 142, 143, 207, 398], "num_featur": [43, 115, 119, 135, 136, 142, 143, 207, 218], "register_forward_hook": [43, 115, 119, 135, 136, 142, 143, 207, 230, 256], "with_kwarg": [43, 115, 119, 135, 136, 142, 143, 207], "always_cal": [43, 115, 119, 135, 136, 142, 143, 207], "register_module_forward_hook": [43, 115, 119, 135, 136, 142, 143, 207], "regardless": [43, 115, 119, 135, 136, 142, 143, 207, 298, 313, 316], "register_forward_pre_hook": [43, 115, 119, 135, 136, 142, 143, 207], "invok": [43, 115, 119, 135, 136, 142, 143, 207], "And": [43, 115, 119, 135, 136, 142, 143, 207, 396], "forward_pr": [43, 115, 119, 135, 136, 142, 143, 207], "register_module_forward_pre_hook": [43, 115, 119, 135, 136, 142, 143, 207], "grad_input": [43, 115, 119, 135, 136, 142, 143, 207], "grad_output": [43, 115, 119, 135, 136, 142, 143, 207], "subsequ": [43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 135, 136, 142, 143, 154, 207, 393, 402], "technic": [43, 115, 119, 135, 136, 142, 143, 207, 391, 393, 395], "caller": [43, 115, 119, 135, 136, 142, 143, 207], "register_module_full_backward_hook": [43, 115, 119, 135, 136, 142, 143, 207], "register_full_backward_pre_hook": [43, 115, 119, 135, 136, 142, 143, 207], "backward_pr": [43, 115, 119, 135, 136, 142, 143, 207], "register_module_full_backward_pre_hook": [43, 115, 119, 135, 136, 142, 143, 207], "register_load_state_dict_post_hook": [43, 115, 119, 135, 136, 142, 143, 207], "incompatible_kei": [43, 115, 119, 135, 136, 142, 143, 207], "thrown": [43, 55, 115, 119, 135, 136, 142, 143, 207, 406], "register_load_state_dict_pre_hook": [43, 115, 119, 135, 136, 142, 143, 207], "local_metadata": [43, 115, 119, 135, 136, 142, 143, 207], "error_msg": [43, 115, 119, 135, 136, 142, 143, 207], "noqa": [43, 115, 119, 135, 136, 142, 143, 207], "b950": [43, 115, 119, 135, 136, 142, 143, 207], "register_modul": [43, 115, 119, 135, 136, 142, 143, 207, 387], "alia": [43, 49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 94, 101, 103, 107, 115, 119, 135, 136, 142, 143, 207], "register_paramet": [43, 115, 119, 135, 136, 142, 143, 207], "register_state_dict_post_hook": [43, 115, 119, 135, 136, 142, 143, 207], "register_state_dict_pre_hook": [43, 115, 119, 135, 136, 142, 143, 207], "keep_var": [43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "requires_grad_": [43, 115, 119, 135, 136, 142, 143, 207], "autograd": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319], "freez": [43, 115, 119, 135, 136, 142, 143, 205, 207], "finetun": [43, 115, 119, 135, 136, 142, 143, 207], "gan": [43, 115, 119, 135, 136, 142, 143, 207], "set_submodul": [43, 115, 119, 135, 136, 142, 143, 207], "overid": [43, 115, 119, 135, 136, 142, 143, 207], "share_memori": [43, 115, 116, 119, 135, 136, 142, 143, 207, 390], "share_memory_": [43, 115, 119, 135, 136, 142, 143, 207, 408], "destin": [43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 157, 164, 165, 167, 199, 201, 205, 207, 216, 299, 319, 350], "averag": [43, 115, 119, 135, 136, 142, 143, 199, 205, 207, 280, 281, 299, 307, 308, 319, 365, 390, 392], "shallow": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 319, 393], "detach": [43, 115, 119, 135, 136, 142, 143, 199, 207, 299, 310, 314, 319, 321, 330, 331, 332, 333, 390], "non_block": [43, 48, 50, 53, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 393], "memory_format": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "channels_last": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "unchang": [43, 115, 119, 135, 136, 142, 143, 162, 166, 181, 195, 198, 199, 201, 203, 207, 276, 285, 364, 390, 406], "tri": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 398], "pin": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "4d": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "ignore_w": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "1913": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "3420": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "5113": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "2325": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "torch_doctest_cuda1": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "gpu1": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "1914": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "5112": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 404], "2324": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "float16": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 234, 238, 285], "cdoubl": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "3741": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "j": [43, 49, 91, 92, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 387, 396], "2382": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "5593": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285, 404], "4443": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "complex128": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "6122": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "1150": [43, 115, 119, 135, 136, 142, 143, 162, 181, 195, 198, 199, 201, 203, 207, 285], "to_empti": [43, 115, 119, 135, 136, 142, 143, 207], "dst_type": [43, 115, 119, 135, 136, 142, 143, 207], "xpu": [43, 115, 119, 135, 136, 142, 143, 207], "set_to_non": [43, 115, 119, 135, 136, 142, 143, 207], "row": [44, 58, 124, 125], "shae": 45, "nontensordata": [45, 73, 79, 348], "nontensor": [46, 383], "one_hot": [47, 230, 244, 256], "one_hot_sampl": 47, "chosen_data": [48, 82], "rewarddata": [48, 82, 383], "rejected_data": [48, 82], "from_dataset": [48, 50, 82], "dataset_nam": [48, 50, 54, 63, 82, 134], "max_length": [48, 50, 51, 61, 63, 82, 399], "550": [48, 50, 54, 63, 82, 99, 100, 404], "root_dir": [48, 50, 63, 82], "from_disk": [48, 50, 63, 82], "carperai": [48, 50, 54, 63], "openai_summarize_comparison": [48, 50, 63], "sequen": [48, 50], "load_from_disk": [48, 50, 63, 82], "load_dataset": [48, 50, 63, 82], "attention_mask": [48, 50, 51, 53, 54, 61, 63, 82], "92534": 48, "input_id": [48, 50, 51, 53, 54, 61, 63, 82], "end_scor": [48, 53, 54, 82], "sub_data": [48, 50], "from_tensordict": [48, 50, 53], "non_tensordict": [48, 50, 53], "getattr": [48, 50, 53], "tensorclass": [48, 50, 53, 82, 86, 87, 107], "load_memmap": [48, 50, 53], "load_": [48, 50, 53], "load_memmap_": [48, 50, 53], "fetch": [48, 50, 53, 111, 112, 113, 114, 175, 395, 405, 406], "fromkei": [48, 50, 53], "memmap": [48, 50, 53, 86, 135, 142, 205, 350, 352, 364, 406], "saved_td": [48, 50, 53], "td_load": [48, 50, 53], "fake": [48, 50, 53, 115, 119, 135, 136, 142, 143, 390, 391], "_subclass": [48, 50, 53], "faketensormod": [48, 50, 53], "faketensor": [48, 50, 53], "from_flatten": [48, 50, 53], "attemptedli": [48, 50, 53], "copy_exist": [48, 50, 53], "return_earli": [48, 50, 53], "share_non_tensor": [48, 50, 53], "mimic": [48, 50, 53, 115, 119, 135, 136, 142, 143], "cross": [48, 50, 53, 219], "anymor": [48, 50, 53, 199, 285], "tensordictfutur": [48, 50, 53], "deepli": [48, 50, 53], "insid": [48, 50, 53, 135, 409], "memmap_": [48, 50, 53, 205], "memmap_lik": [48, 50, 53], "contentless": [48, 50, 53], "1_000_000": [48, 49, 50, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 99, 390, 393, 402], "alloc": [48, 50, 53, 87, 243, 244, 390], "memmap_refresh_": [48, 50, 53], "refresh": [48, 50, 53, 399, 402, 403], "saved_path": [48, 50, 53], "setattr": [48, 50, 53], "tent": [48, 50, 53, 63], "to_tensordict": [48, 50, 53, 393], "alpha": [49, 59, 91, 92, 220, 221, 223, 224, 225, 226, 232, 245, 297, 299, 305, 315, 317, 319, 321, 390, 406, 408], "ep": [49, 59, 91, 92, 177, 205, 218, 280, 281, 298, 320, 365, 390, 391, 393, 396, 399], "1e": [49, 59, 91, 92, 177, 205, 218, 228, 231, 250, 261, 390, 391, 392, 403], "08": [49, 59, 91, 92, 390, 391, 392, 402, 404], "pin_memori": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 180, 390, 408], "schaul": [49, 91, 92], "quan": [49, 91, 92], "antonogl": [49, 91, 92], "silver": [49, 91, 92], "2015": [49, 91, 92], "ab": [49, 76, 79, 81, 91, 92, 111, 112, 113, 114, 124, 125, 129, 130, 132, 133, 139, 144, 145, 157, 181, 201, 205, 218, 222, 227, 231, 232, 237, 242, 249, 251, 252, 255, 257, 258, 264, 296, 297, 301, 302, 303, 304, 307, 308, 309, 311, 312, 315, 316, 319, 405], "1511": [49, 91, 92, 232], "05952": [49, 91, 92], "expon": [49, 59, 91, 92], "\u03b1": [49, 59, 91, 92], "delta": [49, 59, 91, 92, 233, 237, 261, 282, 286, 383, 386, 402], "1_000": [49, 52, 59, 60, 402, 406], "merg": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 404], "mini": [49, 52, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 403], "decid": [49, 52, 59, 60, 402, 408], "meth": [49, 52, 59, 60, 235, 239, 314, 404], "incompat": [49, 52, 59, 60, 318, 406], "drop_last": [49, 52, 59, 60, 98, 100], "notion": [49, 52, 59, 60], "caution": [49, 52, 59, 60, 98, 209, 409], "codebas": [49, 52, 59, 60, 404], "approach": [49, 52, 59, 60, 177, 218, 245, 246, 321, 390, 392, 396, 397, 402, 409], "return_info": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94, 406], "tensordictprioritizedreplaybuff": [49, 383, 408], "simplifi": [49, 395, 404, 406], "_weight": [49, 59, 91, 92, 406, 408], "update_prior": [49, 91, 92, 364, 387, 391, 406, 408], "36278465": 49, "invert": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 294, 392], "tqdm": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 367, 390, 392, 393, 402, 403, 404], "randomsampl": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 390, 402], "td_error": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 299, 300, 301, 303, 304, 305, 306, 312, 314, 317, 319, 321, 322, 328, 390, 396, 406, 408], "update_tensordict_prior": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 390, 406, 408], "insert_transform": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94, 153, 199], "insert": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 94, 95, 105, 106, 109, 110, 153, 162, 199, 200], "set_sampl": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "set_storag": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "set_writ": [49, 52, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 94], "prompt_rindex": [50, 51, 54], "promptdatatldr": 50, "116722": 50, "prompt": [51, 54], "return_tensordict": [51, 61], "recip": [51, 115, 119, 135, 136, 142, 143, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292], "text": [51, 54, 61, 77, 233, 234, 237, 238, 280, 281, 392], "tensodict": [51, 61], "orign": [51, 61], "valid_sampl": 51, "eough": 51, "toknen": 51, "meet": 51, "criterion": 51, "autotoken": [51, 61, 63], "from_pretrain": [51, 54, 61], "gpt2": [51, 54, 61, 63, 222, 227, 254], "pad_token": [51, 61], "eos_token": 51, "enough": [51, 406], "inde": [51, 166, 392, 404], "storagecheckpointerbas": [52, 101], "roundrobinwrit": [52, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81], "depth": [52, 62, 115, 119, 131, 135, 136, 139, 142, 143, 219, 220, 221, 223, 224, 225, 226, 231, 232, 240, 242, 245, 246, 247, 251, 252, 274, 385, 391, 394, 396, 397, 401, 402, 403, 406], "_pytre": [52, 406], "tree_map": [52, 406], "did": [52, 204, 336, 391, 392, 397, 406, 409], "assert0": [52, 406], "ref_model": 54, "reward_model": [54, 291], "max_new_token": 54, "score_clip": 54, "kl_schedul": 54, "klcontrollerbas": 54, "num_step": 54, "causal": 54, "sentenc": 54, "frozen": [54, 175, 205], "gpt2rewardmodel": 54, "get_dataload": [54, 383], "promptdata": [54, 383], "gpt2lmheadmodel": 54, "dl": 54, "block_siz": [54, 82], "tensorclass_typ": [54, 82], "openai_summarize_tldr": 54, "config_class": 54, "model_path": 54, "rollout_from_model": 54, "rollout_from_data": 54, "600": [54, 398, 404, 406], "reward_kl": [54, 175], "reward_raw": 54, "sample_log_prob": [54, 268, 269, 270, 282, 286, 288, 316, 392, 395, 403, 408], "create_rollout_td": 54, "log_prob": [54, 228, 243, 244, 253, 263, 286, 299], "log_ratio": 54, "replic": [54, 386], "rindex": 54, "eo": 54, "term": [54, 175, 237, 238, 248, 249, 295, 296, 305, 369, 391, 392, 394, 395, 403], "generation_config": 54, "generationconfig": 54, "ti": [54, 339, 340, 341, 342, 344, 345, 346, 347, 391], "log_probs_gen": 54, "logprobs_of_label": 54, "heterogen": [55, 56, 128, 137, 138, 209, 245, 246, 390, 391], "220": [57, 404, 406], "priority_kei": [59, 60, 74, 91, 299, 301, 304, 305, 306, 312, 314, 317, 319, 321, 322, 328, 406, 408], "reduct": [59, 91, 92, 105, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 312, 313, 315, 316, 317, 318, 319, 321, 322], "prioritizedreplaybuff": [59, 383, 408], "min": [59, 91, 92, 105, 262, 263, 280, 281, 297, 298, 299, 305, 315, 317, 319, 391, 392], "median": [59, 91, 92, 105, 124, 125, 151, 282, 286], "include_info": [59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81], "huggingfac": [61, 76, 81, 278], "co": [61, 168, 404], "pad_trunc": 61, "am": 61, "me": 61, "reassur": 61, "ok": 61, "primarili": [62, 182, 395], "dataclass": [62, 314], "educ": 62, "guess": 62, "knowledg": [62, 115, 119, 135, 136, 142, 143, 396, 398], "tokenizer_fn": 63, "tensordicttoken": [63, 383], "pre_tokenization_hook": 63, "valid_s": 63, "tokenizer_class": 63, "tokenizer_model_nam": 63, "tokein": 63, "elementwis": 63, "vocabulari": 63, "loader": [63, 392], "185068": 63, "dataset_to_tensordict": 63, "data_dir": 63, "batch_dim": [63, 381], "valid_mask_kei": 63, "conver": 63, "batch_dimens": 63, "filder": 63, "from_dict": 63, "data_memmap": 63, "recurse_through_entri": 70, "recurse_through_stack": 70, "consolid": 70, "dataset_id": [73, 75, 76, 77, 79, 80, 81], "num_proc": 73, "slice_len": [73, 79, 92, 99, 100, 350], "strict_len": 73, "arari": 73, "2600": 73, "million": [73, 393], "consequ": [73, 84, 237, 397], "50x10": 73, "available_dataset": [73, 74, 75, 76, 77, 78, 79, 80, 81, 99, 100], "ataridqn": 73, "immutabledatasetwrit": [73, 74, 75, 76, 77, 78, 79, 80, 81], "shorter": [73, 79, 92, 99, 100], "Be": [73, 79, 92, 99, 100], "game_nam": 73, "krull": 73, "1d": [73, 91, 92, 99, 100, 105], "cheapli": 73, "invalid_rang": 73, "999998": 73, "999999": 73, "add_count": 73, "84": [73, 185, 390, 391, 393, 404, 405], "valueestim": [73, 296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 324, 328, 383, 386, 390, 402, 403], "convolut": [73, 220, 221, 223, 224, 245, 259, 395], "2657628": 73, "2657629": 73, "2657630": 73, "2657631": 73, "2657632": 73, "2657633": 73, "2657634": 73, "2657635": 73, "2657636": 73, "2657637": 73, "2657638": 73, "2657639": 73, "2657640": 73, "2657641": 73, "2657642": 73, "2657643": 73, "2657644": 73, "2657645": 73, "2657646": 73, "2657647": 73, "2657648": 73, "2657649": 73, "2657650": 73, "2657651": 73, "2657652": 73, "2657653": 73, "2657654": 73, "2657655": 73, "2657656": 73, "2657657": 73, "2657658": 73, "2657659": 73, "2657660": 73, "2657661": 73, "2657662": 73, "2657663": 73, "2657664": 73, "2657665": 73, "2657666": 73, "2657667": 73, "2657668": 73, "2657669": 73, "2657670": 73, "2657671": 73, "2657672": 73, "2657673": 73, "2657674": 73, "2657675": 73, "2657676": 73, "2657677": 73, "2657678": 73, "2657679": 73, "2657680": 73, "2657681": 73, "2657682": 73, "2657683": 73, "2657684": 73, "2657685": 73, "2657686": 73, "2657687": 73, "2657688": 73, "2657689": 73, "2657690": 73, "2657691": 73, "1995687": 73, "1995688": 73, "1995689": 73, "1995690": 73, "1995691": 73, "1995692": 73, "1995693": 73, "1995694": 73, "1995695": 73, "1995696": 73, "1995697": 73, "1995698": 73, "1995699": 73, "1995700": 73, "1995701": 73, "1995702": 73, "1995703": 73, "1995704": 73, "1995705": 73, "1995706": 73, "1995707": 73, "1995708": 73, "1995709": 73, "1995710": 73, "1995711": 73, "1995712": 73, "1995713": 73, "1995714": 73, "1995715": 73, "1995716": 73, "1995717": 73, "1995718": 73, "1995719": 73, "1995720": 73, "1995721": 73, "1995722": 73, "1995723": 73, "1995724": 73, "1995725": 73, "1995726": 73, "1995727": 73, "1995728": 73, "1995729": 73, "1995730": 73, "1995731": 73, "1995732": 73, "1995733": 73, "1995734": 73, "1995735": 73, "1995736": 73, "1995737": 73, "1995738": 73, "1995739": 73, "1995740": 73, "1995741": 73, "1995742": 73, "1995743": 73, "1995744": 73, "1995745": 73, "1995746": 73, "1995747": 73, "1995748": 73, "1995749": 73, "1995750": 73, "left": [73, 75, 79, 92, 99, 155, 162, 163, 164, 165, 169, 175, 181, 183, 184, 190, 193, 196, 198, 201, 203, 207, 245, 276, 391, 392, 397, 398], "untouch": [73, 79, 155, 162, 164, 165, 169, 175, 183, 184, 190, 193, 198, 207], "_max_run": 73, "dataset_asterix": 73, "asterix": 73, "dataset_pong": 73, "sample_from_al": [73, 94, 97], "buffer_id": [73, 97, 103], "hidden": [73, 135, 142, 157, 223, 231, 233, 234, 235, 237, 238, 239, 251, 252, 257, 258, 268, 269, 270, 273, 285, 288, 298, 313, 316, 385, 393, 401, 408], "data_path": [73, 74, 75, 76, 77, 78, 79, 80, 81], "data_path_root": [73, 74, 75, 76, 77, 78, 79, 80, 81], "delet": [73, 74, 75, 76, 77, 78, 79, 80, 81, 159, 357], "chunksiz": [73, 74, 75, 76, 77, 78, 79, 80, 81], "pool": [73, 74, 75, 76, 77, 78, 79, 80, 81, 196], "max_tasks_per_child": [73, 74, 75, 76, 77, 78, 79, 80, 81], "worker_thread": [73, 74, 75, 76, 77, 78, 79, 80, 81], "index_with_gener": [73, 74, 75, 76, 77, 78, 79, 80, 81], "pbar": [73, 74, 75, 76, 77, 78, 79, 80, 81, 390, 392, 393, 402, 403, 404], "num_fram": [73, 74, 75, 76, 77, 78, 79, 80, 81], "unitari": [73, 74, 75, 76, 77, 78, 79, 80, 81, 404], "minariexperiencereplai": [73, 74, 75, 76, 78, 79, 80, 81], "1000000": [73, 74, 75, 76, 77, 78, 79, 80, 81], "distance_from_origin": [73, 74, 75, 76, 77, 78, 79, 80, 81], "forward_reward": [73, 74, 75, 76, 77, 78, 79, 80, 81], "qpo": [73, 74, 75, 76, 77, 78, 79, 80, 81], "qvel": [73, 74, 75, 76, 77, 78, 79, 80, 81], "reward_ctrl": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 135], "reward_forward": [73, 74, 75, 76, 77, 78, 79, 80, 81], "reward_surv": [73, 74, 75, 76, 77, 78, 79, 80, 81], "x_posit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 135], "x_veloc": [73, 74, 75, 76, 77, 78, 79, 80, 81, 119, 135], "y_posit": [73, 74, 75, 76, 77, 78, 79, 80, 81], "y_veloc": [73, 74, 75, 76, 77, 78, 79, 80, 81], "achieved_go": [73, 74, 75, 76, 77, 78, 79, 80, 81], "desired_go": [73, 74, 75, 76, 77, 78, 79, 80, 81], "27": [73, 74, 75, 76, 77, 78, 79, 80, 81, 111, 112, 135, 142, 389, 390, 391, 392, 404, 407], "_collate_id": [73, 74, 75, 76, 77, 78, 79, 80, 81], "0x120e21dc0": [73, 74, 75, 76, 77, 78, 79, 80, 81], "cattensor": [73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 119, 135, 136, 142, 143, 390, 401, 404, 409], "cat_tensor": [73, 74, 75, 76, 77, 78, 79, 80, 81], "cat_next_tensor": [73, 74, 75, 76, 77, 78, 79, 80, 81], "new_storag": [73, 74, 75, 76, 77, 78, 79, 80, 81], "31": [73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 125, 389, 391, 392, 402, 404, 407], "full_storag": [73, 74, 75, 76, 77, 78, 79, 80, 81], "0x168406fc0": [73, 74, 75, 76, 77, 78, 79, 80, 81], "from_env": 75, "use_truncated_as_don": 75, "direct_download": 75, "terminate_on_end": 75, "env_kwarg": [75, 80, 81, 155, 379, 380, 390], "reconstruct": [75, 99, 100, 308, 390, 409], "get_dataset": 75, "qlearning_dataset": 75, "fewer": [75, 92, 99], "unexpectedli": 75, "traj_split": 75, "observationnorm": [75, 205, 381, 390, 391, 392, 393, 408], "maze2d": 75, "umaz": 75, "loc": [75, 115, 119, 135, 136, 142, 143, 175, 177, 188, 205, 236, 250, 262, 263, 268, 269, 270, 282, 286, 288, 296, 297, 299, 312, 316, 317, 318, 319, 371, 381, 385, 390, 391, 392, 393, 395, 403, 408], "gen": 76, "dgrl": 76, "accompani": [76, 155, 193], "gap": 76, "2312": 76, "05742": 76, "gen_dgrl": 76, "procgen": 76, "bigfish": 76, "bossfight": 76, "1m_e": 76, "1m_": 76, "comma": 76, "npy": 76, "extract": [76, 154, 278, 390, 392, 408], "mmap": [76, 80, 81], "minut": [76, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "internet": [76, 81], "connect": [76, 81], "minari": 77, "websit": [77, 79], "currenrtli": 77, "minari_data": 77, "door": 77, "torchrl_logg": [77, 399], "28": [77, 245, 389, 391, 404, 407], "door_body_po": 77, "dua": 78, "graff": 78, "2017": 78, "uci": 78, "archiv": 78, "ic": 78, "edu": 78, "ml": 78, "sklearn": [78, 134], "adult_num": [78, 134], "adult_onehot": [78, 134], "mushroom_num": [78, 134], "mushroom_onehot": [78, 134], "covertyp": [78, 134], "shuttl": [78, 134], "magic": [78, 134, 394], "shuffl": [79, 98, 100, 403], "embodi": [79, 405], "institut": 79, "demonstr": [79, 392, 397, 402, 403, 404, 406, 409], "527": [79, 404], "skill": 79, "160266": 79, "googl": [79, 80, 111, 112, 129, 130, 218, 392, 393, 402, 403], "open_x_embodi": 79, "2310": [79, 139], "08864": 79, "language_instruct": 79, "get_non_tensor": 79, "nor": 79, "insuffici": 79, "chosen": [79, 144, 145, 194, 195, 255, 256, 264, 284, 350, 385, 398], "openx": 79, "__will": 79, "change__": 79, "randomli": [79, 98, 143, 176, 177, 195, 276, 282, 286, 395, 402, 403, 404, 406], "crop": [79, 160, 182, 350], "modal": [79, 390], "cmu_stretch": [79, 350], "is_init": [79, 81, 157, 174, 235, 239, 279, 280, 281, 293, 393], "language_embed": 79, "512": [79, 232, 391, 404], "lift": 79, "green": [79, 402], "garbag": 79, "lid": 79, "roboset": 80, "h5": [80, 81, 84], "roboh": [80, 139], "concis": [80, 396], "75": [80, 391, 393, 404, 405], "totensor": 81, "image_s": 81, "v": [81, 205, 233, 234, 237, 238, 268, 304, 312, 319, 385, 390, 391], "npz": 81, "2206": [81, 132, 133], "04779": [81, 297, 303], "vd4rl": 81, "squar": [81, 160, 163, 236, 262, 263, 350], "rectangular": [81, 220, 221], "walker_walk": 81, "64px": 81, "height": [81, 160, 163, 185], "veloc": [81, 113, 114, 115, 119, 135, 136, 142, 143, 158, 402, 403, 404, 409], "infinit": [82, 129, 130, 144, 145, 397, 406], "block": [82, 85, 110, 385, 393, 402], "pairwisedataset": [82, 383], "256": [82, 129, 130, 227, 391, 392, 402, 403, 404], "checkpoint_fil": 84, "h5_kwarg": 84, "iff": 84, "suffix": [84, 363], "h5py": 84, "create_dataset": 84, "temporarili": [84, 209, 397, 406], "immut": [85, 115, 119, 135, 142, 184, 199], "piec": [85, 95, 106, 109, 110, 390, 391, 392, 398, 402, 403, 404, 406], "scratch_dir": [86, 390, 406], "sent": [86, 87, 107, 205], "mistak": [86, 87, 107], "tensorstoragecheckpoint": 86, "pathlib": 86, "main_ckpt_dir": 86, "rb_memmap": 86, "10_000_000": 86, "myclass": [86, 87, 107], "foo": [86, 87, 107, 273, 406, 409], "bar": [86, 87, 107, 273, 360, 361, 363, 367, 387, 391], "attach": [86, 87, 88, 101, 103, 107, 391], "entiti": [86, 87, 88, 101, 103, 107], "zero_": [87, 107, 213], "liststoag": 89, "max_capac": [91, 92, 390, 406], "max_priority_within_buff": [91, 92], "data_0": 91, "data_1": 91, "smoothen": 91, "tdrb": 91, "pack": [91, 233, 237, 392, 394, 409], "nd": [91, 92], "sum_tre": [91, 92], "min_tre": [91, 92], "end_kei": [92, 99, 100], "cache_valu": [92, 99, 100], "closer": 92, "readili": [92, 99, 100], "conjunct": [92, 99, 100, 391], "Will": [92, 99, 132, 350], "buffer0": [92, 99], "immutablewrit": [92, 99], "buffer1": [92, 99], "other_sampl": [92, 99], "short": [92, 99, 100, 111, 112, 124, 125, 135, 209, 237, 238, 391, 392, 394, 395, 403, 406], "tolist": 92, "120110917137936e": 92, "06": [92, 228, 261, 390, 391, 392, 403, 404], "storageensembl": [94, 97], "samplerensembl": 94, "writerensembl": [94, 103], "num_buffer_sampl": [94, 97], "ensembl": [94, 97, 103, 104, 110, 285, 317], "forbidden": 94, "collat": 94, "0x13a2ef430": 94, "0x13a2f9310": 94, "interpol": [94, 185, 391, 393], "interpolationmod": [94, 393], "bilinear": [94, 185, 393], "0x13a2f9220": 94, "0x13a2f9f70": 94, "0x13a2d9b50": 94, "0x13a2f95b0": 94, "0x128648260": 94, "kw": [95, 106], "roundrobin": [95, 106], "incomplet": [98, 100], "fresh": 98, "haven": [98, 405], "remain": [98, 157, 165, 166, 175, 194, 249, 396], "draw": [98, 276], "slicesamplerwithoutreplac": [99, 406], "320": [99, 100, 113, 114, 389, 391, 403, 404, 407], "700": [99, 100], "uniqu": [99, 100, 129, 130, 158, 168, 194, 195, 196, 279, 357, 397, 406], "dataid": [99, 100], "__len__": 101, "rank_kei": 105, "rank": [105, 219], "samplerwithoutreplac": [105, 392, 403, 406], "get_insert_index": 105, "convers": [111, 112, 124, 125, 386], "2106": [111, 112, 302, 321], "13281": [111, 112], "categorical_action_encod": [111, 112, 115, 118, 119, 120, 121, 124, 125, 132, 133, 135, 136, 139, 142, 143], "frame_skip": [111, 112, 113, 114, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 139, 172, 360, 363, 370, 387, 390, 391, 392, 408], "repeat": [111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 139, 219, 392, 402, 403, 404], "allow_done_after_reset": [111, 112, 113, 114, 115, 118, 120, 121, 124, 125, 132, 133, 139], "toler": [111, 112, 113, 114, 118, 120, 121, 124, 125, 132, 133, 139, 228, 261], "availalb": [111, 112, 124, 125], "is_avail": [111, 112, 390, 391, 392, 393, 402, 403, 405], "els": [111, 112, 155, 233, 234, 237, 238, 251, 385, 387, 390, 391, 392, 393, 402, 403, 404, 405], "ant": [111, 112, 115, 119, 122, 135, 136, 142, 143, 405, 409], "87": [111, 112, 391, 404, 405], "acrobot": [111, 112, 113, 114, 409], "advant": [111, 112, 124, 125], "timer": [111, 112, 124, 125], "timeit": [111, 112, 124, 125], "310": [111, 112, 404], "ms": [111, 112, 124, 125], "268": [111, 112, 404], "433": [111, 112, 404], "80": [111, 112, 390, 391, 392, 402, 403, 404, 406], "213": [111, 112, 404], "8605": [111, 112], "pipelineenv": 112, "get_environ": 112, "dm_control": [113, 114, 390, 401, 409], "2006": [113, 114, 297, 303, 404], "12983": [113, 114], "task_nam": [113, 115, 119, 135, 136, 142, 143], "cheetah": [113, 114, 115, 119, 135, 136, 142, 143, 350, 390], "240": [113, 114, 404, 408], "swingup": [113, 114, 409], "swingup_spars": [113, 114], "ball_in_cup": [113, 114], "catch": [113, 114], "balance_spars": [113, 114], "three_pol": [113, 114], "two_pol": [113, 114], "finger": [113, 114], "turn_easi": [113, 114], "turn_hard": [113, 114], "fish": [113, 114], "upright": [113, 114, 391], "swim": [113, 114], "hopper": [113, 114], "hop": [113, 114], "humanoid": [113, 114, 135, 142, 401], "walk": [113, 114, 135, 142, 391, 401], "run_pure_st": [113, 114], "bring_bal": [113, 114], "bring_peg": [113, 114], "insert_bal": [113, 114], "insert_peg": [113, 114], "point_mass": [113, 114], "reacher": [113, 114], "swimmer": [113, 114], "swimmer6": [113, 114], "swimmer15": [113, 114], "walker": [113, 114], "dog": [113, 114], "trot": [113, 114], "humanoid_cmu": [113, 114], "lqr": [113, 114], "lqr_2_1": [113, 114], "lqr_6_2": [113, 114], "quadrup": [113, 114], "escap": [113, 114], "stacker": [113, 114], "stack_2": [113, 114], "stack_4": [113, 114], "deviceless": 115, "run_type_check": [115, 131], "counterenv": 115, "discretebox": [115, 119, 135, 136, 142, 143], "sort": [115, 119, 135, 136, 142, 143, 159, 280, 281], "another_act": [115, 119, 135, 136, 142, 143], "mutabl": [115, 119, 135, 136, 142, 143], "_callabletransform": [115, 119, 135, 136, 142, 143], "batch_lock": [115, 117, 119, 135, 142, 155, 195, 199, 404], "done_keys_group": [115, 119, 135, 136, 142, 143], "outer": [115, 119, 135, 136, 142, 143, 387, 390, 391, 409], "another_don": [115, 119, 135, 136, 142, 143], "empty_cach": [115, 119, 135, 136, 142, 143, 199], "fake_tensordict": [115, 119, 135, 136, 142, 143, 391], "silent": [115, 119, 135, 136, 142, 143, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 247, 250, 251, 252, 254, 257, 258, 260, 265, 271, 272, 273, 275, 276, 279, 280, 281, 284, 289, 292], "braxenv": [115, 119, 135, 136, 142, 143, 184, 383, 394], "envnam": [115, 119, 135, 136, 142, 143], "pipeline_st": [115, 119, 135, 136, 142, 143], "attibut": [115, 119, 135, 136, 142, 143], "maybe_reset": [115, 119, 135, 136, 142, 143], "speak": [115, 119, 135, 136, 142, 143, 390], "rand_act": [115, 119, 128, 135, 136, 137, 138, 142, 143, 155, 394], "register_gym": [115, 119, 135, 136, 142, 143, 394], "entry_point": [115, 119, 135, 136, 142, 143], "info_kei": [115, 119, 135, 136, 142, 143], "reward_threshold": [115, 119, 135, 136, 142, 143], "nondeterminist": [115, 119, 135, 136, 142, 143], "max_episode_step": [115, 118, 119, 120, 135, 136, 142, 143], "order_enforc": [115, 119, 135, 136, 142, 143], "autoreset": [115, 119, 135, 136, 142, 143], "disable_env_check": [115, 118, 119, 132, 133, 135, 136, 142, 143], "apply_api_compat": [115, 119, 135, 136, 142, 143], "nasium": [115, 119, 135, 136, 142, 143], "scope": [115, 119, 135, 136, 142, 143, 409], "dmcontrolenv": [115, 119, 135, 136, 142, 143, 350, 383, 390, 394, 401, 409], "dmc": [115, 119, 135, 136, 142, 143], "removeemptyspec": [115, 119, 135, 136, 142, 143], "threshold": [115, 119, 135, 136, 142, 143, 276, 297, 298, 392], "learnt": [115, 119, 135, 136, 142, 143, 377], "checker": [115, 118, 119, 132, 133, 135, 136, 142, 143], "stepapicompat": [115, 119, 135, 136, 142, 143], "deem": [115, 119, 129, 130, 135, 136, 142, 143, 144, 145], "envgym": [115, 119, 135, 136, 142, 143], "0855": [115, 119, 135, 136, 142, 143], "0215": [115, 119, 135, 136, 142, 143], "0881": [115, 119, 135, 136, 142, 143], "0412": [115, 119, 135, 136, 142, 143], "1101": [115, 119, 135, 136, 142, 143], "0080": [115, 119, 135, 136, 142, 143], "0254": [115, 119, 135, 136, 142, 143], "0424": [115, 119, 135, 136, 142, 143], "9609e": [115, 119, 135, 136, 142, 143], "9776e": [115, 119, 135, 136, 142, 143], "04": [115, 119, 123, 135, 136, 142, 143, 389, 390, 391, 392, 402, 404, 405, 407], "6347e": [115, 119, 135, 136, 142, 143], "3842e": [115, 119, 135, 136, 142, 143], "5338e": [115, 119, 135, 136, 142, 143], "3064e": [115, 119, 135, 136, 142, 143], "0381e": [115, 119, 135, 136, 142, 143], "6656e": [115, 119, 135, 136, 142, 143], "05": [115, 119, 135, 136, 142, 143, 218, 389, 390, 391, 402, 404, 407], "0204e": [115, 119, 135, 136, 142, 143], "action_spac": [115, 119, 135, 136, 142, 143, 168, 230, 256, 274, 275, 283, 284, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 393, 395, 399], "0833": [115, 119, 135, 136, 142, 143], "0275": [115, 119, 135, 136, 142, 143], "0612": [115, 119, 135, 136, 142, 143], "0770": [115, 119, 135, 136, 142, 143, 404], "1256": [115, 119, 135, 136, 142, 143, 404], "0082": [115, 119, 135, 136, 142, 143], "0186": [115, 119, 135, 136, 142, 143], "0476": [115, 119, 135, 136, 142, 143], "2221": [115, 119, 135, 136, 142, 143], "2256": [115, 119, 135, 136, 142, 143], "5930": [115, 119, 135, 136, 142, 143], "6937": [115, 119, 135, 136, 142, 143], "5865": [115, 119, 135, 136, 142, 143], "5479": [115, 119, 135, 136, 142, 143], "0187": [115, 119, 135, 136, 142, 143], "6825": [115, 119, 135, 136, 142, 143, 404], "5224": [115, 119, 135, 136, 142, 143], "0018": [115, 119, 135, 136, 142, 143, 404], "1005": [115, 119, 135, 136, 142, 143], "0335": [115, 119, 135, 136, 142, 143], "0268": [115, 119, 135, 136, 142, 143, 404], "0133": [115, 119, 135, 136, 142, 143], "0627": [115, 119, 135, 136, 142, 143], "0074": [115, 119, 135, 136, 142, 143, 404], "0488": [115, 119, 135, 136, 142, 143, 404], "0353": [115, 119, 135, 136, 142, 143], "0075": [115, 119, 135, 136, 142, 143, 404], "0069": [115, 119, 135, 136, 142, 143, 404], "0098": [115, 119, 135, 136, 142, 143, 404], "0058": [115, 119, 135, 136, 142, 143, 404], "0033": [115, 119, 135, 136, 142, 143, 404], "0157": [115, 119, 135, 136, 142, 143], "0004": [115, 119, 135, 136, 142, 143, 393, 404], "0381": [115, 119, 135, 136, 142, 143], "0452": [115, 119, 135, 136, 142, 143], "11355747": [115, 119, 135, 136, 142, 143], "04257728": [115, 119, 135, 136, 142, 143], "00408397": [115, 119, 135, 136, 142, 143], "04155852": [115, 119, 135, 136, 142, 143], "0389733": [115, 119, 135, 136, 142, 143], "01409826": [115, 119, 135, 136, 142, 143], "0978704": [115, 119, 135, 136, 142, 143], "08808327": [115, 119, 135, 136, 142, 143], "03970837": [115, 119, 135, 136, 142, 143], "00535434": [115, 119, 135, 136, 142, 143], "02353762": [115, 119, 135, 136, 142, 143], "05116226": [115, 119, 135, 136, 142, 143], "02788907": [115, 119, 135, 136, 142, 143], "06848346": [115, 119, 135, 136, 142, 143], "05154399": [115, 119, 135, 136, 142, 143], "0371798": [115, 119, 135, 136, 142, 143], "05128025": [115, 119, 135, 136, 142, 143], "dydact": [115, 119, 135, 136, 142, 143], "gym_env": [115, 119, 135, 136, 142, 143, 408], "reset_kei": [115, 119, 135, 136, 142, 143, 158, 189, 194, 195, 196, 402], "multitask": [115, 119, 135, 136, 142, 143], "multiag": [115, 119, 128, 135, 136, 137, 138, 142, 143, 217, 246, 255, 264, 328], "another_reward": [115, 119, 135, 136, 142, 143], "auto_cast_to_devic": [115, 119, 135, 136, 142, 143, 403], "soon": [115, 119, 135, 136, 137, 138, 142, 143], "__sort": [115, 119, 135, 136, 142, 143], "as__": [115, 119, 135, 136, 142, 143], "argmaxmodul": [115, 119, 135, 136, 142, 143], "argmax": [115, 119, 135, 136, 142, 143, 230, 256, 275, 284, 395], "n_ob": [115, 119, 135, 136, 142, 143, 175, 279, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 396], "n_act": [115, 119, 135, 136, 142, 143, 175, 296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 396], "ourselv": [115, 119, 135, 136, 142, 143, 392, 409], "emul": [115, 119, 135, 136, 142, 143], "epoch": [115, 119, 135, 136, 142, 143, 367, 392, 402, 403], "input_td": [115, 119, 135, 136, 142, 143], "rollout_td": [115, 119, 135, 136, 142, 143], "state_kei": [115, 119, 135, 136, 142, 143], "prevail": [115, 119, 135, 136, 142, 143, 159, 189, 217], "creator": [116, 372, 373, 379, 380, 381], "substitut": [116, 194, 205, 395], "vecnorm": [116, 381], "env_creat": [116, 390], "test_env1": 116, "_td": 116, "observation_count": [116, 409], "test_env2": 116, "sleep": [116, 409], "ps": 116, "p1": 116, "p2": 116, "9934": 116, "env_str": 117, "device_map": 117, "accross": [118, 120], "registri": 118, "asyncvectorenv": 118, "involv": [118, 120, 121, 129, 130, 139, 155, 235, 239, 394, 396], "pixel_observ": [118, 120, 121, 139], "pixelobservationwrapp": [118, 120, 121, 139], "adventur": [118, 120], "airraid": [118, 120, 409], "alien": [118, 120], "time_limit": 118, "timelimit": [118, 129, 130, 144, 145], "default_info_dict_read": [118, 119, 120, 135], "reader": [118, 119, 120, 135, 391], "set_info_dict_read": [118, 119, 120, 135, 394], "info_dict": [118, 119, 120, 135], "auto_register_info_dict": [118, 119, 120, 135], "multibinari": [118, 120], "multidiscret": [118, 120], "rag": [118, 120], "gym_conversion_exampl": [118, 120], "info_dict_read": [119, 135], "ignore_priv": 119, "baseinfodictread": 119, "tensordictprim": [119, 135, 235, 239, 293, 393], "succe": [119, 135], "underscor": 119, "primer": [119, 195, 235, 239, 293, 393], "halfcheetah": [119, 135, 151, 185, 390], "reward_run": [119, 135], "read_act": 119, "read_don": 119, "nonsens": 119, "fallback": 119, "broken": [119, 209], "read_ob": 119, "dictat": [119, 282, 286, 316, 390, 404], "read_reward": 119, "hoc": [119, 135, 395], "dict_read": 119, "my_info_kei": 119, "some_env": 119, "vecenv": 120, "vectorenv": 120, "secur": 121, "habitat3": 121, "ai": [121, 405], "habitatrenderpick": 121, "isaacgym": [122, 123], "isaacgymwrapp": [122, 383], "isaacgymenv": [123, 383], "webpag": 123, "isaac": 123, "essenc": [123, 394], "instadeepai": [124, 125], "2306": [124, 125], "09884": [124, 125], "snake": [124, 125], "grid": [124, 125, 350], "bodi": [124, 125], "body_st": [124, 125], "fruit_posit": [124, 125], "col": [124, 125], "head_posit": [124, 125], "tail": [124, 125], "game2048": [124, 125], "maze": [124, 125], "cleaner": [124, 125], "cvrp": [124, 125], "multicvrp": [124, 125], "minesweep": [124, 125], "rubikscub": [124, 125], "knapsack": [124, 125], "sudoku": [124, 125], "tsp": [124, 125], "connector": [124, 125], "v2": [124, 125, 140, 141, 325, 339, 340, 341, 342, 344, 345, 346, 347, 393, 409], "mmst": [124, 125], "graphcolor": [124, 125], "partli": [124, 125], "scrambl": [124, 125], "robotwarehous": [124, 125], "tetri": [124, 125], "binpack": [124, 125], "jobshop": [124, 125], "0x1fca91910": 124, "122": [124, 125, 404, 406, 409], "0x1ff9baee0": 124, "134": [124, 125, 390, 404], "0x1ff9ba7c0": 124, "172": [124, 125, 404, 406], "drastic": [125, 135, 406], "rubric": [125, 177, 288], "mo": [126, 127], "minecart": [126, 127], "mo_gym": 127, "qualnam": 128, "leverag": [128, 137, 138, 390, 403, 409], "neural": [128, 137, 138, 220, 221, 259, 285, 385, 391, 392, 393, 395, 402, 403, 404, 409], "group_map": [128, 129, 130, 137, 138, 144, 145, 146, 402], "constructiuon": [128, 137, 138], "premad": [128, 129, 130, 137, 138, 144, 145, 328], "all_in_one_group": [128, 146], "agent_0": [128, 137, 138, 146, 402], "agent_1": [128, 137, 138, 146], "agent_2": [128, 137, 138, 146], "agent_3": 128, "one_group_per_ag": [128, 137, 138], "meltingpot": [129, 130], "2211": [129, 130], "13746": [129, 130], "melt": [129, 130], "pot": [129, 130], "novel": [129, 130, 396], "social": [129, 130], "familiar": [129, 130, 391, 403, 409], "unfamiliar": [129, 130], "broad": [129, 130], "cooper": [129, 130, 402, 403], "decept": [129, 130], "reciproc": [129, 130], "trust": [129, 130, 239], "stubborn": [129, 130], "substrat": [129, 130], "ml_collect": 129, "config_dict": 129, "configdict": 129, "categorical_act": [129, 130, 137, 138, 140, 141, 144, 145], "marlgroupmaptyp": [129, 130, 137, 138, 144, 145, 146, 383, 402], "agent_nam": [129, 130, 144, 145, 146], "agent_names_to_indices_map": [129, 130, 144, 145], "env_torchrl": [129, 130], "commons_harvest__open": [129, 130], "rgb": [129, 130], "144": [129, 130, 404], "192": [129, 130, 391, 404], "collective_reward": [129, 130], "ready_to_shoot": [129, 130], "88": [129, 130, 140, 141, 390, 391, 402, 404], "substrate_config": 130, "get_config": 130, "mp_env": 130, "build_from_config": 130, "default_player_rol": 130, "environn": 131, "mymbenv": [131, 219, 242], "world_model": [131, 219, 242, 308], "hidden_observ": [131, 219, 242], "mlp": [131, 219, 220, 221, 223, 224, 225, 226, 232, 235, 239, 242, 246, 247, 268, 274, 293, 301, 303, 385, 391, 395, 396, 399, 401, 405, 408], "worldmodelwrapp": [131, 219, 242], "activation_class": [131, 219, 220, 221, 223, 224, 225, 226, 231, 232, 240, 242, 245, 246, 391, 395, 402, 403, 408], "relu": [131, 219, 227, 242, 250, 295], "activate_last_lay": [131, 219, 226, 240, 242], "sail": [132, 133], "sg": [132, 133], "10558": [132, 133], "readthedoc": 132, "en": 132, "python_interfac": 132, "envpoolmixin": 133, "env_bas": 133, "task_id": 133, "env_typ": 133, "gym_reset_return_info": 133, "envpool_env": 133, "www": [134, 243, 244], "fetch_openml": 134, "106": [134, 404], "my_env_fun": [135, 142], "custom_attribute_list": [135, 142], "custom_attribut": [135, 142], "custom_method_list": [135, 142], "custom_method": [135, 142], "deploi": [135, 142, 155], "slight": [135, 142, 391], "share_individual_td": [135, 142], "shared_memori": [135, 142], "policy_proof": [135, 142], "ll": [135, 142, 233, 234, 237, 238, 390, 391, 392, 393, 394, 395, 396, 397, 399, 403, 409], "serial_for_singl": [135, 142, 391], "circular": [135, 142, 390], "list_of_kwarg": [135, 142], "com_veloc": [135, 142], "head_height": [135, 142], "joint_angl": [135, 142], "torso_vert": [135, 142], "stringent": [135, 392, 402, 403], "inter": 135, "penv": 135, "env_fix": 135, "influenc": 135, "thumb": [135, 392], "myenv": [135, 155, 164, 167], "pipe": 135, "update_kwarg": [135, 142], "th": [136, 171, 200, 233, 237, 404], "thdot": [136, 404], "max_spe": [136, 404], "max_torqu": [136, 404], "gen_param": [136, 404], "gravit": [136, 404], "torqu": [136, 404], "pettingzoo": [137, 138, 402, 403], "pet": [137, 138], "zoo": [137, 138], "__": [137, 138], "aecenv": [137, 138], "use_mask": [137, 138], "dead": [137, 138], "done_on_ani": [137, 138, 402], "compulsori": [137, 138], "adversary_0": [137, 138, 402], "adversari": [137, 138, 310, 402], "vectoris": [137, 138, 233, 234, 237, 238], "sisl": 137, "multiwalker_v9": 137, "return_st": [137, 138], "aec": [137, 138], "n_piston": [137, 138], "pistonball_v6": [137, 138], "piston": [137, 138], "piston_0": [137, 138], "piston_1": [137, 138], "piston_20": [137, 138], "tictactoe_v3": [137, 138], "player": [137, 138, 143], "player_1": [137, 138], "player_2": [137, 138], "butterfli": 138, "parallel_env": [138, 390, 408, 409], "vikashplu": 139, "wiki": 139, "06828": 139, "from_depth": 139, "smacv2": [140, 141], "starcraft": [140, 141], "challeng": [140, 141, 394, 404, 405], "10gen_terran": [140, 141], "10gen_zerg": [140, 141], "10gen_protoss": [140, 141], "3m": [140, 141], "8m": [140, 141, 405], "25m": [140, 141], "5m_vs_6m": [140, 141], "8m_vs_9m": [140, 141], "10m_vs_11m": [140, 141], "27m_vs_30m": [140, 141], "mmm": [140, 141], "mmm2": [140, 141], "2s3z": [140, 141], "3s5z": [140, 141], "3s5z_vs_3s6z": [140, 141], "3s_vs_3z": [140, 141], "3s_vs_4z": [140, 141], "3s_vs_5z": [140, 141], "1c3s5z": [140, 141], "2m_vs_1z": [140, 141], "corridor": [140, 141], "6h_vs_8z": [140, 141], "2s_vs_1sc": [140, 141], "so_many_banel": [140, 141], "bane_vs_ban": [140, 141], "2c_vs_64zg": [140, 141], "old": [140, 141, 313, 409], "smac": [140, 141], "map_nam": [140, 141], "176": [140, 141, 404], "battle_won": [140, 141], "dead_al": [140, 141], "dead_enemi": [140, 141], "episode_limit": [140, 141], "322": [140, 141, 390, 404], "Or": [140, 141, 245], "procedur": [140, 141], "distribution_config": [140, 141], "n_unit": [140, 141], "n_enemi": [140, 141], "team_gen": [140, 141], "dist_typ": [140, 141], "weighted_team": [140, 141], "unit_typ": [140, 141], "marin": [140, 141], "maraud": [140, 141], "medivac": [140, 141], "exception_unit_typ": [140, 141], "start_posit": [140, 141], "surrounded_and_reflect": [140, 141], "map_x": [140, 141], "map_i": [140, 141], "capability_config": [140, 141], "131": [140, 141, 404], "starcraft2env": 141, "tic": 143, "tac": 143, "toe": 143, "single_play": 143, "player1": 143, "desired_batch_s": 143, "board": 143, "player0": 143, "proroklab": [144, 145], "vectorizedmultiagentsimul": [144, 145], "2207": [144, 145, 390], "03530": [144, 145], "basescenario": 144, "perfrom": [144, 145], "defaultt": 144, "continuous_act": [144, 145, 348, 402, 403], "repositiori": 144, "sparsiti": 144, "unbatched_action_spec": [144, 145, 403], "unbatched_observation_spec": [144, 145], "unbatched_reward_spec": [144, 145], "het_spec": [144, 145], "het_specs_map": [144, 145], "flock": [144, 145, 348], "agent_collision_rew": [144, 145], "agent_distance_rew": [144, 145], "ca": 146, "environment4": 146, "get_group_map": 146, "sumbodul": 147, "model_bas": [148, 149, 219, 242], "out_keys_inv": [148, 161, 164, 165, 167, 177, 178, 179, 183, 184, 191, 198, 404], "decod": [148, 251], "model_based_env": [148, 307], "dreamerenv": [148, 307, 383], "model_based_env_ev": 148, "num_interv": 151, "out_action_kei": 151, "samplingstrategi": 151, "optino": 151, "intenum": 151, "interv": [151, 349, 350, 359, 369, 391, 404], "action_disc": 151, "transform_input_spec": [151, 155, 162, 164, 165, 166, 177, 179, 183, 184, 189, 193, 194, 195, 198, 200, 202, 207], "masker": 152, "tensor_spec": [152, 208, 217, 304, 305, 316, 318], "maskedenv": 152, "ones_lik": 152, "scatter": 152, "fill_float": 154, "fill_int": 154, "fill_bool": 154, "someenvclass": 154, "autoresetenv": 154, "argumet": 154, "fooenv": 154, "sign": [154, 191, 330, 402], "envtyp": 154, "reshape_fn": 155, "reset_func": 155, "environmt": 155, "request": [155, 182], "tensordict_batch_s": 155, "tensordict_reset": [155, 404], "transform_env_batch_s": [155, 162, 198, 207], "transform_output_spec": [155, 162, 164, 165, 169, 175, 183, 184, 190, 193, 198, 207], "transform_observation_spec": [155, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 173, 174, 175, 177, 179, 183, 184, 185, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 204, 205, 207, 404], "transform_reward_spec": [155, 156, 161, 162, 164, 165, 169, 175, 183, 184, 187, 188, 189, 190, 191, 193, 198, 200, 207], "transformfull_done_spec": [155, 162, 164, 165, 169, 175, 183, 184, 190, 193, 198, 207], "biner": 156, "burn_in": 157, "burn": 157, "date": [157, 353], "retur": 157, "burnt": 157, "gru_modul": [157, 235, 293], "input_s": [157, 233, 234, 235, 237, 238, 239, 293, 393], "hidden_s": [157, 233, 234, 235, 237, 238, 239, 293, 393], "set_recurrent_mod": [157, 235, 239, 393], "burn_in_transform": 157, "gru": [157, 195, 234, 235, 293], "num_lay": [157, 233, 235, 237, 239, 251, 252, 293], "86": [157, 391, 402, 404, 405], "3008": [157, 391], "0344": 157, "padding_valu": [158, 243, 244], "as_invers": 158, "movement": 158, "1312": [158, 391], "5602": 158, "unsqueezetransform": [158, 404, 406], "consumpt": [158, 383], "followin": 158, "pictur": 158, "pixels_trsf": [158, 406], "grayscal": [158, 391, 393, 406, 409], "data_exclud": [158, 406], "del_kei": [159, 201, 401, 404], "unsqueeze_if_oor": 159, "observation_posit": 159, "observation_veloc": 159, "key1": [159, 358, 366], "key2": [159, 358, 366], "center": [160, 350], "width": [160, 163, 185], "scalar": [161, 187, 224, 226, 248, 249, 271, 272, 276, 277, 280, 281, 292, 296, 297, 298, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 328, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 385, 391, 396, 404], "permit": [161, 171, 200, 296, 298, 313, 316, 318], "rewardsc": [162, 199, 390, 391, 393], "rewardclip": 162, "transformed_env": [162, 198, 199, 394], "transform_env_devic": [162, 165, 198, 207], "dtype_in": 164, "dtype_out": 164, "scan": [164, 167, 287, 288], "resp": [164, 167], "not_transform": [164, 167], "constructedw": [164, 167], "orig_devic": 165, "unspecifi": 165, "transform_done_spec": [165, 198, 207], "num_actions_effect": 166, "max_act": 166, "include_forward": 166, "num_act": [166, 305, 395], "action_out": 166, "_call": [166, 171, 404], "eol_kei": 168, "lives_kei": 168, "eol_attribut": 168, "unwrap": 168, "breakout": 168, "210": [168, 179, 404], "160": [168, 179, 391, 404], "eol_transform": 168, "eol": 168, "dqnloss": [168, 296, 297, 299, 300, 303, 305, 306, 307, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 328, 374, 383, 386, 391, 393, 399], "register_kei": 168, "loss_or_advantag": 168, "lossmodul": [168, 367, 376, 377, 383, 386], "valueestimatorbas": [168, 314, 383], "excluded_kei": 169, "finit": [170, 395, 406], "first_dim": 171, "last_dim": 171, "allow_positive_dim": [171, 200], "frameskip": 171, "repeatedli": [172, 392, 403], "init_kei": [174, 279], "tracker": 174, "pi_curr": 175, "pi_0": 175, "overfit": 175, "probabilist": [175, 282, 383, 392, 408], "get_dist": [175, 286, 287], "mod": [175, 235, 239, 279, 289, 393, 399], "normalparamextractor": [175, 268, 269, 270, 282, 288, 296, 297, 299, 305, 312, 316, 317, 318, 319, 321, 322, 385, 392, 395, 403, 408], "probabilisticactor": [175, 268, 269, 270, 273, 296, 297, 299, 302, 304, 305, 312, 315, 316, 317, 318, 319, 321, 322, 385, 390, 392, 395, 402, 403], "tanhnorm": [175, 268, 269, 270, 282, 288, 296, 297, 299, 312, 316, 317, 318, 319, 321, 322, 383, 392, 403, 408], "return_log_prob": [175, 268, 269, 270, 282, 286, 288, 318, 385, 392, 395, 402, 403, 408], "apply_": 175, "copy_": [175, 390], "formulat": 175, "diverg": [175, 235, 239, 282, 286, 308, 313], "noop": [176, 408], "trial": 176, "standard_norm": [177, 188, 205, 390, 391, 393], "affin": [177, 188, 205], "layer": [177, 205, 218, 220, 221, 223, 224, 229, 231, 233, 234, 235, 237, 238, 239, 240, 245, 246, 248, 249, 251, 252, 259, 260, 266, 278, 289, 385, 391, 392, 393, 395, 402, 405], "epsilon": [177, 271, 272, 276, 277, 280, 281, 320, 365, 391, 392, 393, 395], "recover": 177, "set_default_tensor_typ": 177, "doubletensor": 177, "isclos": 177, "next_ob": [177, 330, 331, 332, 333, 408], "init_stat": [177, 390, 391, 392, 393], "3752e": 177, "5087e": 177, "9294e": 177, "9636": 177, "5608": 177, "6408": 177, "num_it": [177, 391, 392], "reduce_dim": [177, 390, 391, 392, 393], "cat_dim": [177, 390, 391, 392, 393], "keep_dim": [177, 391, 393], "statist": [177, 205, 218, 318, 381, 390, 391, 392, 409], "gaussian": [177, 195, 219, 242, 248, 249, 254, 271, 272, 392, 402], "empir": [177, 219, 242, 282, 286, 390, 392, 403], "3d": [177, 220], "third": [177, 275, 402, 403], "reorder": 179, "in_keys_in": 179, "channel": [179, 197, 245, 251, 252, 391], "r3m": [181, 405], "resnet": [181, 201, 203], "visual": [181, 201, 203, 350, 392, 402, 404], "embed": [181, 201, 202, 203, 223, 255, 267, 268, 269, 270, 285, 290, 405], "ego4d": [181, 201, 203], "univers": [181, 201, 203, 394], "suraj": [181, 201], "nair": [181, 201], "aravind": [181, 201], "rajeswaran": [181, 201], "vikash": [181, 201, 203], "kumar": [181, 201, 203], "chelsea": [181, 201], "finn": [181, 201], "abhinav": [181, 201], "gupta": [181, 201], "2203": [181, 201, 242, 405], "12601": [181, 201, 405], "_init": [181, 201, 390], "resnet50": [181, 203, 405], "model_nam": [181, 201, 203, 353], "resnet34": 181, "resnet18": 181, "r3m_vec": [181, 405], "stack_imag": [181, 203], "tread": [181, 203], "separet": [181, 203], "hub": [181, 203, 394, 405], "resnet50_weight": [181, 203], "imagenet1k_v1": [181, 203], "download_path": [181, 203], "tensor_pixels_kei": [181, 203], "sub_seq_len": 182, "sample_dim": [182, 390], "hesit": 182, "robust": [182, 218], "mix": [182, 255, 264, 328, 390, 402, 403], "improp": 182, "dummyenv": 183, "another_oth": 183, "other_reward": 183, "create_copi": 184, "stuff": [184, 397], "newnam": 184, "r2g": 186, "reward_to_go": 186, "bernoulli_": 186, "9010": 186, "9404": [186, 336], "9701": [186, 336], "9900": [186, 336], "0000": [186, 196, 276, 277, 289, 336, 392, 393, 404, 408], "crash": 186, "clamp_min": 187, "clamp_max": 187, "clip_min": 187, "clip_max": 187, "episode_": 189, "reward1": 189, "reward2": 189, "episode_reward": [189, 402, 403], "keep_reward": 190, "keep_don": 190, "logical_or": 191, "squeeze_dim": 192, "step_count_kei": 193, "update_don": 193, "disjunct": 193, "recognis": 193, "target_return": 194, "subtract": 194, "default_valu": [195, 293, 393], "unit": [195, 219, 231, 233, 234, 251, 252, 257, 258, 392], "transfomedenv": 195, "mykei": 195, "__unless": 195, "exists__": 195, "get_primers_from_modul": [195, 235, 239, 383], "10th": 196, "0216": 196, "1149": 196, "1990": 196, "2749": 196, "3281": 196, "9290": 196, "3702": 196, "8978": 196, "from_int": 197, "shape_toler": 197, "permuat": 197, "ri": 197, "principl": 198, "cattransform": 198, "notabl": 198, "rewardsum": [198, 207, 216, 402, 403], "smoothli": [199, 218], "add_1": 199, "cache_spec": 199, "set_missing_toler": 199, "keyerror": 199, "unsqueeze_dim": [200, 404], "danger": 200, "vc1": 201, "vc1_vec": 201, "untrain": 201, "make_noload_model": 201, "vip": [202, 203, 405], "implicit": [203, 304, 312, 406], "jason": 203, "ma": 203, "shagun": 203, "sodhani": 203, "dinesh": 203, "jayaraman": 203, "osbert": 203, "bastani": 203, "ami": 203, "zhang": 203, "vip_vec": 203, "final_nam": 204, "sb3": 204, "terminal_obs_read": 204, "truli": [204, 408], "till": 204, "shared_td": 205, "decai": [205, 271, 272, 276, 320, 365, 390, 391, 393, 409], "9999": [205, 404], "0001": [205, 231, 250, 392, 404], "to_observation_norm": 205, "frozen_copi": 205, "race": 205, "underflow": [205, 365], "build_td_for_shared_vecnorm": 205, "memmori": 205, "queue": [205, 406], "td_share": 205, "unfreez": 205, "train_env": 205, "eval_env": 205, "state_dim": [206, 222, 227, 254, 257, 258, 273], "action_dim": [206, 222, 223, 225, 227, 254, 273, 390, 401], "gsde": [206, 317, 381], "gsdemodul": 206, "rb_transform": 207, "resist": 207, "insensit": 207, "sensit": [207, 391], "_orig": 207, "95": [207, 242, 324, 391, 392, 393, 404, 405], "tdreset": [207, 401], "window": [207, 279, 402, 406, 408], "edit": [207, 397], "cube": 208, "check_dtyp": 209, "discrep": [209, 296, 298, 300, 301, 313, 316, 318, 328], "rng": [209, 404], "revert": [209, 395, 406], "unsqueeze_null_shap": 213, "probabilistictdmodul": [214, 215, 240, 282, 286, 329, 363], "next_tensordict": 216, "keep_oth": [216, 404], "exclude_reward": 216, "exclude_don": 216, "exclude_act": 216, "next_": 216, "funtion": 216, "_stepmdp": 216, "write_full_fals": 217, "_terminated_or_trunc": 217, "momentum": 218, "max_r": 218, "max_d": 218, "warmup_step": 218, "batchrenorm": 218, "1702": 218, "03275": 218, "corenet": 218, "enhanc": 218, "warmup": 218, "phase": [218, 403, 406], "outlier": 218, "period": 218, "varianc": [218, 219, 236, 250, 262, 263, 386, 390, 392, 403], "warm": 218, "renorm": 218, "entropi": [219, 296, 297, 298, 299, 304, 305, 312, 313, 315, 316, 317, 319, 321, 322, 403], "botev": 219, "2013": 219, "cem": 219, "plan": [219, 241, 242], "k": [219, 233, 234, 237, 238], "maximis": [219, 223, 225, 242, 385, 391, 392, 403], "modelbasedenv": [219, 242], "planning_horizon": [219, 242], "optim_step": [219, 242, 391, 399], "mpc": [219, 241, 242], "num_candid": [219, 242], "candid": [219, 242], "top_k": [219, 242], "modelbasedenvbas": [219, 241, 242, 383], "safemodul": [219, 241, 268, 270, 286, 296, 297, 299, 304, 305, 312, 316, 317, 318, 319, 321, 322, 372, 373, 377, 383, 408], "num_cel": [220, 221, 223, 224, 225, 226, 231, 232, 235, 239, 240, 245, 246, 268, 293, 391, 392, 393, 395, 396, 399, 402, 403, 408], "elu": [220, 221, 223, 224, 225, 226, 231, 232, 245, 391, 408], "activation_kwarg": [220, 221, 240], "norm_class": [220, 221, 223, 224, 240], "norm_kwarg": [220, 221, 240], "bias_last_lay": [220, 221, 223, 224, 225, 226, 232, 240], "aggregator_class": [220, 221, 223, 224, 391, 393, 408], "squashdim": [220, 221, 223, 232, 245, 408], "aggregator_kwarg": [220, 221, 223, 224, 391, 393], "squeeze_output": [220, 221, 223, 224, 391, 393], "cell": [220, 221, 233, 234, 235, 237, 238, 239, 240, 245, 246, 392, 394, 395, 396, 397, 398, 399], "kernel": [220, 221, 232, 245], "cnet": [220, 221], "conv3d": 220, "lazyconv2d": [221, 223, 224, 232, 245, 408], "transformer_config": [222, 254, 273], "decisiontransform": [222, 254], "dtconfig": [222, 227, 254], "2202": [222, 227, 315], "05607": [222, 227, 315], "return_to_go": [222, 227, 254, 273], "conv_net_kwarg": [223, 224], "mlp_net_kwarg": [223, 224, 225], "use_avg_pool": [223, 224], "WITH": [223, 224, 225, 226, 280, 281, 320], "1509": [223, 224, 225, 226, 242, 280, 281, 301, 311, 320, 404], "02971": [223, 224, 225, 226, 280, 281, 320], "reus": [223, 357], "convnet": [223, 224, 232, 245, 393, 395, 408], "ndims_in": 223, "avgpool": [223, 224], "lazylinear": [223, 224, 225, 226, 232, 240, 385, 392, 395, 404, 405, 408], "2304": [223, 391], "adaptiveavgpool2d": [224, 391, 393], "output_s": [224, 391, 393], "squeeze2dlay": 224, "400": [225, 226, 398, 403, 404, 406], "mlp_net_kwargs_net1": 226, "mlp_net_kwargs_net2": 226, "mlp1": 226, "mlp2": 226, "decion": 227, "desdescrib": 227, "n_embd": 227, "n_layer": [227, 233, 237], "n_head": 227, "n_inner": 227, "n_posit": 227, "resid_pdrop": 227, "attn_pdrop": 227, "gpt2config": 227, "atol": [228, 261], "rtol": [228, 261], "batch_shap": [228, 261], "event_shap": [228, 261], "absolut": [228, 261, 390], "densiti": [228, 243, 244, 253, 263], "mass": [228, 243, 244, 253, 263, 404], "rsampl": [228, 244, 253, 286], "sample_shap": [228, 243, 244, 253], "softmax": [229, 244, 253, 274, 275], "action_valu": [229, 230, 256, 274, 275, 283, 284, 305, 314, 328, 385, 393, 395, 399], "var_num": [230, 256, 274, 275, 284], "action_value_kei": [230, 256, 274, 275, 283, 284, 314, 328], "action_mask_kei": [230, 256, 274, 275, 276, 277, 283, 284], "perspect": [230, 275, 306, 392], "1707": [230, 275, 306, 316], "06887": [230, 275, 306], "mult": [230, 246, 256, 274, 275, 283, 284], "tensordict_modul": [230, 233, 234, 237, 238, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 299, 300, 304, 305, 312, 316, 317, 318, 319, 321, 322, 385], "nbin": [230, 274, 385], "customdistributionalqv": 230, "log_softmax": [230, 274], "from_modul": [230, 285, 288, 408], "qvalue_actor": [230, 256, 274, 283, 385], "to_modul": [230, 285, 288, 390, 408], "std_bia": 231, "std_min_val": 231, "belief": [231, 251, 257, 258], "1912": [231, 307, 308, 309], "01603": [231, 307, 308, 309], "softplu": [231, 250, 292, 294, 295], "out_features_valu": 232, "cnn_kwarg": [232, 391], "mlp_kwarg": [232, 391], "duel": 232, "cnn": [232, 245, 391, 395, 408], "06581": 232, "batch_first": [233, 235, 237, 239, 393], "bidirect": [233, 237, 393], "cudnn": [233, 234, 237, 238, 393], "rnn": [233, 234, 235, 237, 238, 239, 393, 395], "device_count": [233, 234, 237, 238, 409], "n_in": [233, 234, 237, 238], "n_out": [233, 234, 237, 238], "h0": [233, 234, 237, 238], "h1": [233, 234, 237, 238], "call_gru": [233, 234], "h_out": [233, 234, 237, 238], "batched_cal": [233, 234, 237, 238], "gate": [233, 234, 237], "r_t": 233, "sigma": [233, 234, 236, 237, 238, 262, 263, 271, 272, 280, 281, 392, 402], "w_": [233, 234, 237, 238], "ir": [233, 234], "x_t": [233, 237], "b_": [233, 234, 237, 238], "hr": [233, 234, 237], "h_": [233, 234, 237], "z_t": 233, "iz": [233, 234], "hz": [233, 234], "n_t": 233, "odot": [233, 234, 237, 238], "hn": [233, 234, 237], "h_t": [233, 237], "sigmoid": [233, 234, 237, 238], "hadamard": [233, 234, 237, 238], "multilay": [233, 237], "_t": [233, 237, 403, 404], "ge": [233, 237], "bernoulli": [233, 237], "b_ih": [233, 234, 237, 238, 239], "b_hh": [233, 234, 237, 238, 239], "seq": [233, 235, 237, 239, 279, 393, 399, 401], "h_0": [233, 237, 238], "unbatch": [233, 237], "pack_padded_sequ": [233, 237], "pack_sequ": [233, 237], "num": [233, 237, 399], "_layer": [233, 237], "_size": [233, 234, 237, 238], "h_n": [233, 237], "packedsequ": [233, 237], "weight_ih_l": [233, 237], "learnabl": [233, 234, 237, 238], "w_ir": 233, "w_iz": 233, "w_in": 233, "num_direct": [233, 237], "weight_hh_l": [233, 237], "w_hr": 233, "w_hz": 233, "w_hn": 233, "bias_ih_l": [233, 237], "b_ir": 233, "b_iz": 233, "b_in": 233, "bias_hh_l": [233, 237], "b_hr": 233, "b_hz": 233, "b_hn": 233, "mathcal": [233, 234, 237, 238], "sqrt": [233, 234, 237, 238, 280, 281], "frac": [233, 234, 237, 238, 392], "seq_len": [233, 237], "subtli": 233, "matrix": [233, 237, 248, 249], "contrast": [233, 311, 406], "hx": [233, 234, 237, 238], "lstmcell": [234, 239], "gru_cel": 234, "z": 234, "weight_ih": [234, 238], "weight_hh": [234, 238], "bias_ih": [234, 238], "bias_hh": [234, 238], "rocm": [234, 238], "embedd": [235, 239], "grucel": [235, 285], "python_bas": [235, 239], "recurrent_st": [235, 239, 293, 393], "custom_kei": [235, 239], "recurrent_mod": [235, 239], "make_tensordict_prim": [235, 239, 393], "rs": [235, 390], "gru_module_train": 235, "policy_train": [235, 239], "traj_td": [235, 239], "supplementari": [235, 239, 392, 409], "That": [235, 239, 392, 402], "dealt": [235, 239], "poorli": [235, 239], "data_collector": [235, 239, 391], "policy_infer": [235, 239], "td_inf": [235, 239], "assert_clos": [235, 239], "upscal": [236, 262, 263], "tanh_loc": [236, 262, 263], "event_dim": [236, 261, 262], "poor": [236, 262, 263], "explos": [236, 262, 263], "switch": [236, 263, 348], "formula": [236, 262, 263, 296, 298, 313, 316, 386, 392], "proj_siz": 237, "c0": [237, 238], "c1": [237, 238], "call_lstm": [237, 238], "c_out": [237, 238], "i_t": 237, "ii": [237, 238], "hi": [237, 238], "f_t": 237, "hf": [237, 238], "g_t": 237, "ig": [237, 238], "hg": [237, 238], "o_t": 237, "ho": [237, 238], "c_t": 237, "c_": 237, "forget": 237, "1402": 237, "1128": 237, "c_0": [237, 238], "proj": 237, "c_n": 237, "w_ii": 237, "w_if": 237, "w_ig": 237, "w_io": 237, "w_hi": 237, "w_hf": 237, "w_hg": 237, "w_ho": 237, "b_ii": 237, "b_if": 237, "b_ig": 237, "b_io": 237, "b_hi": 237, "b_hf": 237, "b_hg": 237, "b_ho": 237, "weight_hr_l": 237, "_revers": 237, "analog": [237, 395], "cn": 237, "lstm_cell": 238, "h_1": 238, "c_1": 238, "time_step": [238, 279], "cx": 238, "correspont": 239, "recurrent_state_h": [239, 393], "recurrent_state_c": [239, 393], "triplet": [239, 283, 284], "lstm_modul": 239, "rs_h": 239, "rs_c": 239, "hidden0": 239, "hidden1": 239, "single_bias_last_lay": 240, "layer_class": 240, "layer_kwarg": 240, "perceptron": [240, 395], "aslo": 240, "42": [240, 296, 297, 299, 300, 304, 312, 319, 389, 391, 404, 407], "noisylinear": [240, 248, 383, 391], "noisylazylinear": [240, 383], "mpcplanner": 241, "tensordict_out": [241, 409], "mppi": 242, "covari": 242, "william": [242, 318], "aldrich": 242, "theodor": 242, "01149": 242, "hansen": 242, "wang": 242, "su": 242, "04955": 242, "valueoper": [242, 268, 269, 270, 296, 297, 298, 299, 300, 305, 312, 313, 316, 317, 318, 319, 321, 322, 377, 385, 390, 392, 396], "tdlambdaestim": [242, 383, 390], "value_net": [242, 301, 303, 318, 330, 331, 332, 333, 392, 395, 396, 399], "adv": 242, "lmbda": [242, 324, 330, 333, 335, 341, 342, 343, 346, 347, 386, 390, 392, 403], "value_network": [242, 300, 301, 303, 304, 306, 312, 319, 330, 331, 332, 333, 386, 390, 392, 396, 399, 402], "temperatur": [242, 297, 304, 312], "neg_inf": [243, 244], "inf": [243, 244], "api_doc": [243, 244], "tf_agent": [243, 244], "event": [243, 244, 253, 339, 340, 341, 342, 344, 345, 346, 347, 406], "unnorm": [243, 244, 253], "sparse_mask": [243, 244], "dens": [243, 244], "0831": [243, 244], "1203": [243, 244], "0928": [243, 244], "1972": [243, 244], "grad_method": [244, 253], "reparamgradientstrategi": [244, 253], "passthrough": [244, 253], "relaxedonehot": [244, 253], "zeros_lik": [244, 404], "sample_non_valid": 244, "share_param": [245, 246, 247, 402, 403], "use_td_param": [245, 246, 247], "get_stateful_net": [245, 246, 247, 314, 385, 386], "from_stateful_net": [245, 246, 247, 314, 386], "homogen": [245, 246, 402, 403], "tensordictparam": [245, 246], "_empty_net": [245, 246], "roughli": [245, 246, 408], "agent_network": [245, 246], "modulelist": [245, 246, 408], "2592": [245, 391], "decentr": 245, "n_agent_input": [246, 247, 402, 403], "n_agent_output": [246, 247, 402, 403], "lazili": [246, 404], "toech": 246, "centalis": 246, "shown": [246, 385, 401, 402, 403, 406], "agent_dim": 247, "vmap_random": [247, 314, 386], "stateful_net": [247, 314], "Such": [247, 314], "deepcopi": [247, 314, 402], "multiagentmlp": [247, 402, 403], "snet": 247, "hasattr": [247, 390], "kaiming_normal_": 247, "reset_paramet": 247, "std_init": [248, 249], "initialize_paramet": 248, "isol": [248, 314], "1706": [249, 264], "10295v3": 249, "induc": 249, "aid": 249, "scale_map": 250, "biased_softplus_1": 250, "scale_lb": [250, 257, 258], "module_norm": 250, "1803": [251, 252, 255], "10122": [251, 252], "rnn_hidden": 251, "latent": 252, "excacli": 253, "inres": 254, "mu": [254, 280, 281, 392], "state_shap": [255, 328], "mixing_embed_dim": [255, 328], "qmix": [255, 402, 403], "mixer": [255, 264, 328], "monoton": 255, "hyper": 255, "11485": 255, "qmixerloss": [255, 264], "qmix_vdn": [255, 264], "chosen_action_valu": [255, 256, 264, 283, 284, 328, 385, 393, 395], "vdn": [255, 264], "greedi": [256, 275, 276, 277, 284, 391, 393, 395], "hidden_dim": [257, 258], "posterior": [257, 308], "rssm": [257, 258, 308], "1811": [257, 258], "04551": [257, 258], "obs_embed": 257, "rnn_hidden_dim": 258, "dream": 258, "tanhtransform": 262, "get_mod": 262, "adam": [262, 390, 391, 392, 393, 396, 399, 402, 403, 404], "decomposit": 264, "05296": 264, "hide": [265, 392, 402, 403], "satisfi": [265, 385], "vmap_dim": 265, "lam": 265, "sample_in": 265, "sample_in_td": 265, "vm": 265, "translat": [267, 282], "character": [267, 274, 282, 283, 285, 406], "overflow": [267, 274, 275, 282, 283, 284, 285, 286], "td_modul": [267, 268, 269, 270, 282, 285, 286, 288, 290, 395, 408], "3635": 267, "0340": 267, "1476": 267, "3911": [267, 404], "1664": [267, 391, 404], "5455": 267, "2247": 267, "4583": 267, "2916": 267, "2160": 267, "5337": 267, "5193": 267, "grad_fn": [267, 276, 277, 408], "addmmbackward0": 267, "actorvalueoper": [268, 298, 313, 316, 385, 395], "get_policy_oper": [268, 269, 270, 298, 313, 316, 385], "standalon": [268, 269, 270, 395], "tdmodul": [268, 269, 270, 377], "get_critic_oper": 268, "common_oper": [268, 270], "policy_oper": [268, 269, 270], "value_oper": [268, 269, 270], "module_hidden": [268, 270], "td_module_hidden": [268, 270], "module_act": [268, 270], "td_module_act": [268, 269, 270], "module_valu": [268, 269, 270], "td_module_valu": [268, 269, 270], "state_action_valu": [268, 290, 297, 299, 304, 312, 319, 329, 377, 385, 390, 402, 408], "td_clone": [268, 269, 270], "tensordictmodulewrapp": [268, 372, 373, 377], "get_policy_head": [268, 269, 270], "safesequenti": [268, 269, 270, 328], "head": [268, 270, 293, 298, 313, 316], "get_value_head": [268, 269, 270], "get_value_oper": [268, 269, 270, 298, 313, 316], "action_modul": 269, "state_valu": [269, 270, 290, 298, 304, 312, 313, 316, 317, 319, 330, 331, 332, 333, 335, 337, 339, 341, 343, 344, 346, 385, 390, 392, 403], "actorcriticoper": [270, 385, 395], "embeddig": 270, "refet": 270, "actorcriticwrapp": [270, 385, 390], "po": [271, 272, 277], "sigma_init": [271, 272, 402], "sigma_end": [271, 272, 402], "annealing_num_step": [271, 272, 276, 277, 280, 281, 390, 391, 393, 395, 399, 402], "captur": [271, 272, 276, 277, 280, 281], "omiss": [271, 272, 276, 277, 280, 281], "ommit": [271, 272, 276, 277, 280, 281], "inferec": 273, "set_tensor_kei": 273, "dt_inference_wrapp": 273, "baz": 273, "inference_context": 273, "obs_dim": 273, "tanhdelta": [273, 383, 390, 402], "dtactor": 273, "actor_modul": [273, 408], "dist_class": 273, "dist_kwarg": 273, "distribution_kwarg": [273, 282, 286, 392, 402, 403], "inference_actor": 273, "sequence_length": 273, "mask_context": 273, "out_act": 273, "qvaluemodul": [274, 283, 328, 393, 395, 399], "distributionaldqnnet": 274, "make_log_softmax": 274, "my_action_valu": [275, 284], "chanc": 275, "thid": 275, "eps_init": [276, 277, 280, 281, 391, 393, 395, 399], "eps_end": [276, 277, 280, 281, 391], "explorative_polici": [276, 277, 280, 281], "9055": [276, 277, 404], "9277": [276, 277], "6295": [276, 277], "2532": [276, 277], "addbackward0": [276, 277], "lmheadmodel": 278, "actor_head": [278, 298, 313, 316], "base_model": 278, "lm_head": 278, "macro": 279, "lookahead": 279, "n_action": [279, 297, 299, 301, 303, 315, 319], "reshape_cat": 279, "actor_bas": 279, "obs_cat": 279, "obs_cat_reshap": 279, "action_orig": 279, "counter": [279, 360, 387], "ornstein": [280, 281, 390], "uhlenbeck": [280, 281, 390], "ou": [280, 281, 390], "correl": [280, 281], "noise_t": [280, 281], "noise_": [280, 281], "theta": [280, 281, 392, 404], "sigma_t": [280, 281], "sigma_": [280, 281], "anneal": [280, 281, 391, 395, 402], "ou_prev_nois": [280, 281], "ou_step": [280, 281], "x0": [280, 281], "sigma_min": [280, 281], "n_steps_ann": [280, 281], "is_init_kei": [280, 281], "_ou_prev_nois": [280, 281], "_ou_step": [280, 281], "default_interaction_typ": [282, 286, 395], "interaction_typ": [282, 286], "datacollectorbas": [282, 369, 372, 373, 377, 383], "set_interaction_typ": [282, 286], "compositedistribut": [282, 395], "distribution_map": 282, "name_map": 282, "cache_dist": [282, 286], "n_empirical_estim": [282, 286], "compound": [282, 395], "chose": 284, "functionalmodul": 285, "functionalmodulewithbuff": 285, "td_fmodul": 285, "td_function": 285, "td_state": 285, "params_repeat": 285, "td_vmap": [285, 288], "random_sampl": [285, 286], "suppli": 286, "fist": 286, "log_prob_kei": [286, 403], "probabilistictensordictsequenti": [287, 296, 298, 313, 316, 318, 372, 373, 408], "partial_toler": [287, 288, 401], "who": [287, 288], "AND": [287, 288, 299], "tensordictsequenci": 288, "tensordictsequ": 288, "safeprobabilisticmodul": [288, 385], "spec1": 288, "net1": 288, "module1": 288, "td_module1": 288, "spec2": 288, "module2": 288, "td_module2": 288, "clamp": [289, 308, 367, 402, 404], "boundari": [289, 392, 402, 403], "resolut": 289, "9944": 289, "9991": 289, "3020": 289, "2299": [289, 404], "5418": 289, "2989": 289, "6849": 289, "3169": 289, "2690": 289, "9649": [289, 404], "5686": 289, "8602": 289, "0315": 289, "8455": [289, 404], "6027": 289, "4746": 289, "7843": 289, "7782": 289, "2111": 289, "5115": 289, "4687": 289, "5760": 289, "custommodul": 290, "imaginari": 291, "imagin": 291, "transition_model": 291, "get_reward_oper": 291, "get_transition_model_oper": 291, "min_val": [292, 295], "_bia": 292, "surject": 295, "expln": 295, "biased_softplu": [295, 383], "beggin": 295, "biased_softplus_": 295, "syntax": [295, 390], "met": [295, 402, 404], "1602": 296, "01783v2": 296, "actor_network": [296, 297, 298, 299, 300, 302, 304, 305, 312, 313, 315, 316, 317, 318, 319, 321, 322, 386, 390, 392, 396, 402, 403], "critic_network": [296, 298, 313, 316, 318, 392, 403], "entropy_bonu": [296, 298, 313, 316, 392], "favour": [296, 298, 313, 316], "samples_mc_entropi": [296, 298, 313, 315, 316], "mont": [296, 298, 313, 316, 390], "carlo": [296, 298, 313, 316, 390], "entropy_coef": [296, 298, 313, 316, 392, 403], "critic_coef": [296, 298, 313, 316, 392], "loss_critic_typ": [296, 298, 313, 316, 318, 392], "l1": [296, 298, 300, 301, 305, 313, 316, 317, 318, 321, 322, 325, 328, 385, 390], "l2": [296, 298, 300, 301, 302, 303, 305, 308, 309, 313, 316, 317, 318, 321, 322, 325, 328, 390, 402], "smooth_l1": [296, 297, 298, 299, 300, 301, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 325, 328, 392], "separate_loss": [296, 298, 299, 300, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322], "propag": [296, 298, 299, 300, 304, 305, 312, 313, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333, 392, 402, 403], "advantage_kei": [296, 298, 313, 316, 318, 330, 331, 332, 333], "value_target_kei": [296, 298, 313, 316, 318, 330, 331, 332, 333], "value_target": [296, 298, 313, 316, 318, 330, 331, 332, 333, 392, 403], "ddp": [296, 298, 313, 316, 318], "fsdp": [296, 298, 313, 316, 318], "divid": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 312, 313, 315, 316, 317, 318, 319, 321, 322, 370, 385, 390, 402, 403, 404], "clip_valu": [296, 298, 313, 316, 318], "loss_crit": [296, 316, 392, 403], "loss_entropi": [296, 316, 392, 403], "loss_object": [296, 316, 392, 403], "recur": [296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333, 334, 395], "next_reward": [296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333], "next_don": [296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333], "next_termin": [296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 330, 331, 332, 333], "loss_obj": 296, "next_observ": [296, 297, 299, 300, 301, 303, 304, 305, 312, 316, 317, 318, 319, 321, 322, 401], "sacloss": [296, 311, 320, 383], "select_out_kei": [296, 297, 299, 300, 304, 305, 312, 316, 317, 319, 321, 322], "make_value_estim": [296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 323, 328, 386, 390, 391, 402, 403, 408], "value_typ": [296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 324, 328, 390], "hyperparam": [296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 390], "enum": [296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 324, 328, 390], "default_value_estim": [296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 390, 408], "default_value_kwarg": [296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 383, 390], "dqn_loss": [296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 323, 328], "td1": [296, 297, 299, 300, 301, 303, 305, 306, 307, 312, 314, 316, 317, 318, 319, 321, 322, 328, 390], "conserv": [297, 303], "qvalue_network": [297, 299, 304, 305, 312, 317, 319, 321, 322], "unti": [297, 299, 312, 317, 319, 321, 322], "loss_funct": [297, 299, 300, 301, 302, 303, 304, 305, 312, 317, 319, 321, 322, 325, 328, 390, 402], "alpha_init": [297, 299, 305, 315, 317, 319], "min_alpha": [297, 299, 305, 315, 317, 319], "max_alpha": [297, 299, 305, 315, 317, 319], "fixed_alpha": [297, 299, 305, 315, 317, 319], "target_entropi": [297, 299, 305, 315, 317, 319], "prod": [297, 299, 315, 319], "delay_actor": [297, 300, 319, 321, 322], "delay_qvalu": [297, 305, 317, 319, 321, 322], "min_q_weight": 297, "max_q_backup": 297, "backup": 297, "deterministic_backup": 297, "num_random": 297, "with_lagrang": 297, "lagrang": 297, "lagrange_thresh": 297, "valueclass": [297, 299, 300, 305, 317, 319, 321, 322], "qvalu": [297, 299, 304, 305, 312, 317, 319, 321, 322], "loss_actor": [297, 299, 300, 304, 305, 312, 317, 318, 319, 321, 322, 362, 390, 396, 402, 408], "loss_actor_bc": 297, "loss_alpha": [297, 299, 305, 317, 319], "loss_cql": [297, 303], "loss_qvalu": [297, 299, 303, 304, 305, 312, 317, 319, 321, 322], "loss_alpha_prim": 297, "clip_epsilon": [298, 392, 403], "normalize_advantag": [298, 313, 316, 403], "value_kei": [298, 313, 316, 330, 331, 332, 333, 390], "somemodul": [298, 313, 316], "someactor": [298, 313, 316], "value_head": [298, 313, 316], "somevalu": [298, 313, 316], "loss_modul": [298, 311, 313, 314, 316, 320, 367, 376, 377, 386, 387, 390, 391, 392, 402, 403, 406], "IN": 299, "FOR": 299, "simplic": [299, 391, 392, 397, 405, 406, 408], "openreview": [299, 317], "pczqttstix": 299, "qvalue_loss": [299, 321], "actor_loss": [299, 321], "alpha_loss": 299, "num_qvalue_net": [299, 304, 305, 312, 317, 319, 321, 322], "target_entropy_buff": 299, "delay_valu": [300, 301, 303, 306, 318, 319, 328, 391, 393, 399, 402], "loss_valu": [300, 304, 312, 318, 319, 390, 392, 396, 402, 403, 408], "pred_valu": [300, 303, 321, 322, 390, 396, 408], "pred_value_max": [300, 390, 396, 408], "target_valu": [300, 303, 317, 321, 322, 329, 386, 390, 396, 408], "target_value_max": [300, 390, 396, 408], "qvalueactor": [301, 303, 328, 385, 391, 393], "double_dqn": 301, "06461": [301, 311], "mult_one_hot": [301, 304, 305, 328], "loss_val": [301, 303, 386, 390, 392, 393, 396, 397, 399, 402, 403, 406], "01345": 302, "distanc": [303, 313, 325, 329, 330, 403], "dcql_loss": 303, "2110": [304, 312], "06169": [304, 312], "expectil": [304, 312], "tau": [304, 312, 320, 390, 391, 402], "antmaz": [304, 312], "sticht": [304, 312], "onehotcategor": [304, 305, 383], "target_entropy_weight": 305, "disctount": 306, "distributionalqvalueactor": [306, 385], "input_tensordict": [306, 390], "actor_model": 307, "value_model": [307, 309], "imagination_horizon": 307, "unrol": [307, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347], "discount_loss": [307, 309], "lambda_kl": 308, "lambda_reco": 308, "lambda_reward": 308, "reco_loss": 308, "reward_loss": 308, "free_nat": 308, "nat": 308, "delayed_clamp": 308, "global_averag": 308, "value_loss": 309, "fake_data": 309, "1606": 310, "03476": 310, "discriminator_network": 310, "use_grad_penalti": 310, "gp_lambda": 310, "discrimin": 310, "ddpgloss": [311, 320, 377, 383, 390, 396, 402, 408], "td3loss": [311, 320, 383], "value_network_update_interv": 311, "qvalueclass": 312, "loss_value_diff": 312, "diff": 312, "old_polici": 313, "new_polici": 313, "apart": [313, 403], "dtarg": 313, "samples_mc_kl": 313, "analyt": 313, "decrement": 313, "loss_": [314, 362, 386, 390, 396], "equip": [314, 393, 395], "gh": 314, "_acceptedkei": 314, "_forward_value_estimator_kei": 314, "alter": [314, 385], "value_estim": [314, 330, 331, 332, 333, 334, 386, 390, 403], "myloss": 314, "action2": 314, "augment": [314, 397, 399, 406], "set_exploration_mod": [314, 383], "deterministic_sampling_mod": 314, "convert_to_funct": [314, 390], "expand_dim": 314, "create_target_param": [314, 390], "compare_against": [314, 390], "_param": 314, "expans": 314, "resampl": 314, "_target_param": 314, "network_nam": 314, "blend": 314, "add_random_modul": [314, 386], "proxim": [316, 392, 403], "optimis": [316, 363, 392, 402, 403], "flavour": [316, 402, 403, 408], "clipppoloss": [316, 383, 392, 403], "klpenppoloss": [316, 383], "regularis": 316, "06347": 316, "gae": [316, 383, 386, 390, 392, 403], "ppo_loss": 316, "tdlambda": [316, 324, 386, 390], "base_lay": 316, "randn_lik": 316, "samplelogprob": 316, "ay8zfzm0tdd": 317, "sub_sample_len": 317, "subsampl": [317, 358, 387], "action_log_prob_actor": 317, "state_action_value_actor": [317, 321, 322], "connectionist": 318, "1992": 318, "doi": 318, "1007": 318, "bf00992696": 318, "actor_net": [318, 390, 392], "1801": 319, "01290": 319, "applic": [319, 328, 394, 395, 404], "1812": 319, "05905": 319, "redqloss": [320, 383], "math": 320, "theta_t": [320, 404], "theta_": [320, 404], "polyak": 320, "minimalist": 321, "06860": 321, "policy_nois": [321, 322], "noise_clip": [321, 322], "td3_bc": 321, "bc_loss": 321, "lmbd": 321, "next_state_valu": [321, 322, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 383], "td0": [323, 390, 402], "strict_shap": 325, "view_a": 325, "qmixer": [328, 383], "local_valu": 328, "visibl": [328, 403], "dafault": 328, "acceptedkei": 328, "global_valu": 328, "penultim": 328, "local_value_network": 328, "mixer_network": 328, "value_modul": [328, 392, 408], "qnet": [328, 390], "next_val_kei": 329, "pred_next_v": 329, "usus": 329, "mse": 329, "q_valu": 329, "n_steps_to_next": 329, "value_next_st": 329, "1506": [330, 335, 343], "02438": [330, 335, 343], "exponenti": [330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 365], "average_ga": [330, 392], "skip_exist": [330, 331, 332, 333], "time_dim": [330, 332, 333, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347], "advang": 330, "gradient_mod": 330, "value_error": [330, 331, 332, 333, 334], "target_param": [330, 331, 332, 333, 334, 390, 403], "98": [330, 331, 332, 333, 391, 404, 405, 406], "94": [330, 333, 391, 404, 405], "unpack": [330, 331, 332, 333], "tensor_kei": [330, 331, 332, 333, 334], "next_valu": [330, 331, 332, 333, 334], "aka": [331, 391, 402], "average_reward": [331, 332, 333], "tdestim": [331, 332, 334], "infti": 332, "valuefunctionbas": 334, "old_stat": [335, 337, 339, 341, 343, 344, 346], "new_stat": [335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347], "rolling_gamma": [339, 340, 341, 342, 344, 345, 346, 347], "g1": [339, 340, 341, 342, 344, 345, 346, 347], "g2": [339, 340, 341, 342, 344, 345, 346, 347], "g3": [339, 340, 341, 342, 344, 345, 346, 347], "g4": [339, 340, 341, 342, 344, 345, 346, 347], "v3": [339, 340, 341, 342, 344, 345, 346, 347, 409], "preproc": [348, 402], "as_non_tensor": [348, 402], "render_method": 348, "pass_tensordict": 348, "syntat": 348, "sugar": 348, "out_file_bas": 349, "skip_reset": 349, "center_crop": 350, "make_grid": 350, "csv": [350, 352, 354, 391, 398, 399], "wandb": [350, 354, 357, 398, 408], "tensorboard": [350, 354, 356, 398, 408], "log_dir": [350, 351, 352, 354, 356, 357, 391, 399], "cheetah_video": 350, "run_video": 350, "openxexperiencereplai": 350, "run_video_0": 350, "templat": 351, "pt": [352, 387, 405], "video_fp": 352, "minim": [352, 406], "dependeci": 352, "cur_dir": 352, "csv_log": 352, "add_video": 352, "video_": 352, "experiment_nam": [353, 354], "uuid": [353, 391, 409], "logger_typ": 354, "logger_nam": 354, "mlflow": [354, 355], "wandb_kwarg": 354, "mlflow_kwarg": 354, "tracking_uri": 355, "uri": 355, "datastor": 355, "tb_log": 356, "tensoarboard": 356, "td_log": 356, "save_dir": 357, "resum": 357, "uncategor": 357, "sub_traj_len": 358, "min_sub_traj_len": 358, "register_op": [358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 387, 391], "process_optim_batch": [358, 364, 365, 387], "td_out": [358, 366], "_process_optim_batch_hook": [358, 387], "batch_subsampl": 358, "clear_cuda": 359, "pre_optim_step": [359, 387], "log_pbar": [360, 361, 363, 365, 387, 391], "progress": [360, 361, 363, 367, 387, 391, 393, 409], "count_fram": 360, "pre_steps_log": [360, 361, 387], "count_frames_log": 360, "lognam": 361, "r_train": [361, 391], "log_reward": [361, 391], "loss_compon": 362, "appl": 362, "optimizer_hook": 362, "record_interv": [363, 390, 391], "record_fram": [363, 370, 390, 391], "policy_explor": [363, 377, 390, 391, 395, 399], "log_kei": [363, 391], "underestim": 363, "set_exploration_typ": [363, 383, 392, 393, 395, 402, 408], "r_evalu": [363, 390], "flatten_tensordict": [364, 391], "max_dim": 364, "rb_trainer": 364, "batch_process": [364, 365, 366, 387], "post_loss": [364, 387], "999": [365, 391], "jitter": 365, "finfo": 365, "default_dtyp": 365, "get_default_dtyp": 365, "reward_norm": 365, "update_reward_stat": 365, "normalize_reward": 365, "make_train": [366, 383], "_process_batch_hook": [366, 387], "select_kei": [366, 387], "versatil": [367, 394], "optim_steps_per_batch": [367, 387, 391], "clip_grad_norm": 367, "clip_norm": 367, "progress_bar": 367, "save_trainer_interv": 367, "log_interv": [367, 391], "save_trainer_fil": [367, 387], "update_weights_interv": [369, 391], "update_weight": 369, "post_step": [369, 387, 391], "cfg": [370, 371, 372, 373, 374, 375, 376, 377, 378, 381], "dictconfig": [370, 371, 372, 373, 375, 376, 377, 378, 381], "unknowingli": 370, "annealing_fram": [370, 390], "init_env_step": [370, 371, 390], "proof_environ": [371, 390], "sta": 371, "ot": 371, "actor_model_explor": [372, 373, 390], "make_env_kwarg": [372, 373], "targetnetupdat": [374, 376, 377], "replayargsconfig": 375, "target_net_updat": [377, 390, 391], "constitu": 377, "egreedywrapp": 377, "env_proof": 377, "obs_spec": 377, "net_valu": 377, "dir": [377, 387, 391], "gettempdir": 377, "argpars": [378, 381], "namespac": [378, 381, 409], "parser": [378, 381], "transformed_env_constructor": [378, 383], "num_env_per_collector": [379, 380], "video_tag": 381, "norm_obs_onli": 381, "use_env_cr": 381, "custom_env_mak": 381, "custom_env": 381, "return_transformed_env": 381, "action_dim_gsd": 381, "state_dim_gsd": 381, "obs_norm_state_dict": 381, "wheter": 381, "maker": [381, 391], "asyncdatacollector": 383, "distributedsyncdatacollector": 383, "submitit_delayed_launch": 383, "raycollector": 383, "rational": 383, "footnot": 383, "binarydiscretetensorspec": 383, "boundedtensorspec": 383, "discretetensorspec": 383, "lazystackedcompositespec": 383, "lazystackedtensorspec": 383, "multidiscretetensorspec": 383, "multionehotdiscretetensorspec": 383, "onehotdiscretetensorspec": 383, "unboundedcontinuoustensorspec": 383, "unboundeddiscretetensorspec": 383, "prompttensordicttoken": 383, "rolloutfrommodel": 383, "tokenizeddatasetload": 383, "create_infinite_iter": 383, "constantklcontrol": 383, "adaptiveklcontrol": 383, "consolidate_spec": 383, "check_no_exclusive_kei": 383, "contains_lazy_spec": 383, "nested2t": 383, "h5combin": 383, "h5split": 383, "tictactoeenv": 383, "check_marl_group": 383, "get_available_librari": 383, "terminated_or_trunc": 383, "dreamerdecod": 383, "braxwrapp": 383, "dmcontrolwrapp": 383, "jumanjienv": 383, "jumanjiwrapp": 383, "meltingpotenv": 383, "meltingpotwrapp": 383, "mogymenv": 383, "mogymwrapp": 383, "multithreadedenvwrapp": 383, "openmlenv": 383, "pettingzooenv": [383, 402], "robohiveenv": 383, "smacv2env": 383, "smacv2wrapp": 383, "vmaswrapp": 383, "qvaluehook": 383, "distributionalqvaluehook": 383, "reset_nois": 383, "cemplann": 383, "mpcplannerbas": 383, "mppiplann": 383, "independentnorm": 383, "normalparamwrapp": 383, "truncatednorm": 383, "maskedonehotcategor": 383, "inv_softplu": 383, "vmapmodul": 383, "distributionaldqnloss": [383, 391], "discretesacloss": 383, "crossqloss": 383, "iqlloss": 383, "discreteiqlloss": 383, "cqlloss": 383, "discretecqlloss": 383, "gailloss": 383, "dtloss": 383, "onlinedtloss": 383, "td3bcloss": 383, "ppoloss": 383, "a2closs": 383, "reinforceloss": 383, "dreameractorloss": 383, "dreamermodelloss": 383, "dreamervalueloss": 383, "td0estim": [383, 390], "td1estim": [383, 390], "td0_return_estim": 383, "td0_advantage_estim": 383, "td1_return_estim": 383, "vec_td1_return_estim": 383, "td1_advantage_estim": 383, "vec_td1_advantage_estim": 383, "td_lambda_return_estim": 383, "vec_td_lambda_return_estim": 383, "td_lambda_advantage_estim": 383, "vec_td_lambda_advantage_estim": 383, "generalized_advantage_estim": 383, "vec_generalized_advantage_estim": 383, "reward2go": 383, "distance_loss": [383, 390], "hold_out_net": 383, "hold_out_param": [383, 390], "softupd": [383, 390, 391, 393, 396, 399, 402], "hardupd": [383, 390, 396], "batchsubsampl": [383, 387], "clearcudacach": 383, "countframeslog": 383, "logreward": [383, 387, 391], "optimizerhook": [383, 391], "replaybuffertrain": [383, 387, 391], "rewardnorm": 383, "selectkei": [383, 387], "trainerhookbas": [383, 387, 391], "updateweight": [383, 387, 391], "make_collector_offpolici": 383, "make_collector_onpolici": 383, "make_dqn_loss": 383, "make_replay_buff": [383, 390], "make_target_updat": 383, "parallel_env_constructor": [383, 390], "sync_async_collector": 383, "sync_sync_collector": 383, "correct_for_frame_skip": 383, "get_stats_random_rollout": 383, "mlflowlogg": 383, "get_logg": 383, "generate_exp_nam": 383, "journei": 384, "textbook": 384, "highlight": [384, 402], "ever": [384, 403], "bump": 384, "think": [384, 392, 402, 403, 409], "benefit": [384, 394, 402, 403, 406], "pr": 384, "ground": [385, 390, 404], "recycl": [385, 406], "impos": 385, "noisier": 385, "Their": [385, 402, 403], "sd": 385, "prob_modul": 385, "pick": [385, 390, 391, 395], "hopefulli": [385, 391], "functional_modul": 385, "make_funct": 385, "mathbb": [385, 391], "rightarrow": [385, 391], "soften": 385, "backbon": [385, 393, 395, 401, 408], "make_actor": 385, "make_valu": 385, "shared_param": 385, "make_common": 385, "reusabl": [386, 390, 406], "swappabl": [386, 390], "characterist": [386, 390, 404], "trainabl": [386, 390, 396, 405], "smth": [386, 390], "metric": [386, 390], "plenti": 386, "amort": [386, 391, 392], "told": [386, 392], "pseudo": [386, 397, 404], "buri": 386, "str_valu": 386, "nutshel": [386, 390], "barto": [386, 402, 403], "chapter": [386, 398], "significantli": [386, 390, 391, 396, 403], "next_stat": 386, "value_net_loss": 386, "pow": [386, 390], "room": 386, "signifi": [386, 402, 403], "underperform": 386, "thin": 386, "intric": [386, 395], "believ": 387, "scheme": [387, 409], "substenti": 387, "_pre_steps_log_hook": 387, "_pre_optim_hook": 387, "sub_batch": 387, "_post_loss_hook": 387, "_post_optim_hook": 387, "post_optim": [387, 391], "_post_optim_log": 387, "post_optim_log": 387, "_post_steps_hook": 387, "_post_steps_log_hook": 387, "post_steps_log": 387, "reserv": 387, "logginghook": 387, "logging_hook": 387, "save_dict": 387, "some_valu": 387, "torchsnapshot": 387, "ckpt_backend": 387, "filepath": 387, "save_train": 387, "load_from_fil": 387, "25": [389, 390, 391, 393, 396, 402, 404, 407], "629": [389, 407], "galleri": [389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "mem": [389, 407], "mb": [389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409], "torchrl_demo": [389, 407, 408], "066": [389, 407, 408], "358": [389, 404, 407], "rb_tutori": [389, 406, 407], "59": [389, 390, 391, 393, 403, 404, 406, 407], "904": [389, 404, 406, 407], "474": [389, 404, 407], "018": [389, 404, 407], "317": [389, 395, 404, 407], "coding_dqn": [389, 391, 407], "667": [389, 391, 407], "1032": [389, 391, 407], "dqn_with_rnn": [389, 393, 407], "294": [389, 393, 404, 407], "2189": [389, 393, 407], "multiagent_ppo": [389, 403, 407], "319": [389, 397, 404, 407], "coding_ddpg": [389, 390, 407], "54": [389, 390, 391, 404, 407], "618": [389, 390, 404, 407], "324": [389, 404, 407], "torchrl_env": [389, 407, 409], "318": [389, 392, 394, 401, 404, 407, 409], "4094": [389, 404, 407, 409], "multiagent_competitive_ddpg": [389, 402, 407], "988": [389, 402, 407], "coding_ppo": [389, 392, 407], "651": [389, 392, 407], "multi_task": [389, 401, 407], "51": [389, 390, 391, 401, 404, 407], "663": [389, 401, 407], "pretrained_model": [389, 405, 407], "714": [389, 405, 407], "3624": [389, 404, 407], "47": [389, 391, 395, 404, 405, 407], "135": [389, 393, 395, 404, 407], "316": [389, 404, 407], "43": [389, 391, 393, 394, 404, 407], "295": [389, 394, 404, 407], "167": [389, 396, 404, 407], "452": [389, 399, 404, 407], "693": [389, 397, 407], "741": [389, 398, 407], "357": [389, 398, 404, 407], "author": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 406, 409], "vincent": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 406, 409], "moen": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 406, 409], "assembl": 390, "focus": [390, 396], "straightforward": [390, 391, 394, 395, 396, 397, 406], "maxim": [390, 396, 404], "transpar": [390, 393], "illustr": [390, 391, 395, 406], "bash": 390, "is_fork": [390, 391, 392, 393, 402, 403, 405], "get_start_method": [390, 391, 392, 393, 402, 403, 405], "collector_devic": 390, "loss_dict": 390, "oblivi": [390, 392, 406], "elementari": 390, "didact": 390, "dilut": 390, "pessimist": [390, 391, 392], "target_actor_network_param": 390, "actor_in_kei": 390, "actor_crit": 390, "noth": [390, 392], "compromis": 390, "hp": 390, "_value_estim": 390, "elif": [390, 391], "notimplementederror": 390, "unknown": 390, "_loss_actor": 390, "td_copi": 390, "actor_network_param": [390, 402], "value_network_param": [390, 402], "_loss_valu": 390, "pred_val": 390, "target_value_network_param": 390, "glue": 390, "_forward": 390, "remaind": 390, "env_librari": 390, "env_task": 390, "env_arg": [390, 391], "friendli": 390, "torchr": 390, "rescal": 390, "presum": 390, "make_transformed_env": 390, "reward_sc": 390, "marker": 390, "env_per_collector": 390, "transform_state_dict": 390, "make_t_env": 390, "cheat": 390, "10m": 390, "cautiou": 390, "magnitud": [390, 402], "thousand": [390, 393], "get_env_stat": 390, "proof_env": 390, "5000": [390, 391, 392, 399], "recal": [390, 392, 406], "ddpgmlpactor": 390, "ddpgmlpqnet": 390, "materi": 390, "ornsteinuhlenbeckprocessmodul": [390, 395], "make_ddpg_actor": 390, "q_net": 390, "tight": 390, "decoupl": [390, 396], "10_000": [390, 392], "traj_len": [390, 393], "make_record": 390, "recorder_obj": 390, "flavor": 390, "buffer_s": [390, 391], "random_crop_len": 390, "prb": 390, "buffer_scratch_dir": 390, "temporari": 390, "dataflow": 390, "ceil_div": 390, "utd": [390, 393], "update_to_data": 390, "realiz": 390, "_must_": 390, "001": [390, 404], "outdat": 390, "trick": [390, 391], "despit": 390, "optimizer_actor": 390, "lr": [390, 391, 392, 393, 399, 402, 403, 404], "weight_decai": [390, 391], "optimizer_valu": 390, "total_collection_step": 390, "pretti": [390, 394, 398, 406], "rewards_ev": 390, "collected_fram": 390, "r0": 390, "numel": [390, 392, 393, 399, 402, 405, 406], "current_fram": [390, 402], "sampled_tensordict": 390, "gn1": 390, "clip_grad_norm_": [390, 392, 402, 403, 404], "gn2": 390, "gn": [390, 404], "td_record": 390, "rn": 390, "set_descript": [390, 392, 393, 402, 403, 404], "2f": 390, "800": [390, 391], "3245": 390, "03it": [390, 404], "1600": [390, 391], "09": [390, 391, 404], "857": 390, "08it": 390, "2400": [390, 391], "1265": 390, "82it": 390, "3200": [390, 391], "1634": 390, "77it": [390, 391], "4000": [390, 391, 392], "1945": 390, "23it": [390, 391, 393, 404], "48": [390, 391, 404], "4800": [390, 391, 404], "52it": [390, 391, 404], "56": [390, 391, 404], "5600": 390, "2404": 390, "48it": [390, 391, 392, 404], "79": [390, 391, 404, 405], "55": [390, 391, 404, 405], "52": [390, 391, 404], "6400": [390, 408], "897": 390, "06it": [390, 391], "85": [390, 391, 404, 405], "49": [390, 391, 404], "189": [390, 404], "72": [390, 391, 404], "7200": 390, "07": [390, 391, 402, 404], "634": 390, "26it": 390, "93": [390, 391, 404, 405], "127": [390, 404], "83": [390, 391, 402, 404], "292": [390, 404], "90": [390, 391, 392, 402, 403, 404, 405], "8000": [390, 392], "529": [390, 404], "40it": [390, 404], "45": [390, 391, 392, 393, 402, 404], "177": [390, 404], "97": [390, 391, 404], "229": [390, 404], "82": [390, 391, 404], "8800": 390, "473": [390, 404], "83it": [390, 391, 393], "70": [390, 391, 392, 402, 403, 404, 405, 406], "174": [390, 404], "96": [390, 391, 404], "9600": 390, "372": [390, 404], "56it": [390, 404], "66": [390, 391, 404, 405], "53": [390, 391, 403, 404, 405], "214": [390, 404], "74": [390, 391, 402, 403, 404], "10400it": 390, "349": [390, 404], "60it": [390, 391, 404], "129": [390, 404, 406], "91": [390, 391, 404], "280": [390, 404], "76": [390, 391, 404, 406], "57": [390, 391, 404], "plot": [390, 392, 393, 402, 403, 404], "mention": [390, 393, 406, 409], "matplotlib": [390, 392, 393, 402, 403, 404, 406, 409], "pyplot": [390, 392, 393, 402, 403, 404, 406, 409], "plt": [390, 392, 393, 402, 403, 404, 406, 409], "zip": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "legend": [390, 402], "xlabel": [390, 393, 403, 404], "ylabel": [390, 403], "tight_layout": 390, "takeawai": [390, 391], "distpatch": 390, "325": [390, 404], "jupyt": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "ipynb": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409], "sphinx": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409], "road": 391, "aspect": [391, 396], "highest": [391, 395], "prerequisit": [391, 393], "lookup": 391, "cart": 391, "pole": 391, "un": 391, "actuat": 391, "frictionless": 391, "duelingcnndqnet": 391, "egreedymodul": [391, 393, 395, 399], "is_notebook": 391, "shell": 391, "get_ipython": 391, "__class__": 391, "zmqinteractiveshel": 391, "qtconsol": 391, "terminalinteractiveshel": 391, "ipython": [391, 403, 404], "nameerror": [391, 402], "umbrella": 391, "misplac": 391, "misus": 391, "orchestr": [391, 396, 398], "five": 391, "64x64": 391, "motion": [391, 404], "obs_norm_sd": 391, "mp_context": 391, "simpler": [391, 394], "get_norm_stat": 391, "test_env": 391, "make_model": 391, "dummy_env": 391, "init_bia": 391, "exploration_modul": [391, 393, 395, 399], "eps_greedy_v": 391, "eps_greedy_val_env": 391, "actor_explor": 391, "get_replay_buff": 391, "n_optim": [391, 396, 397], "themselv": 391, "parametriz": 391, "get_collector": 391, "cl": 391, "bunch": 391, "ubiquit": [391, 394], "get_loss_modul": 391, "target_updat": [391, 402], "995": [391, 404], "variat": 391, "2e": [391, 404], "wd": 391, "upd": 391, "harder": [391, 408], "5_000": 391, "500000": 391, "100000": 391, "005": [391, 402], "mandatori": [391, 392, 403, 404], "fairer": 391, "budget": 391, "dqn_exp_": 391, "uuid1": [391, 409], "9895": 391, "0737": 391, "registr": [391, 409], "cumbersom": 391, "buffer_hook": 391, "weight_updat": 391, "aliv": 391, "total_reward": 391, "18it": 391, "3688": [391, 404], "9174": 391, "50it": [391, 404], "04it": 391, "3505": 391, "85it": 391, "3748": 391, "21it": [391, 392], "00it": 391, "4082": [391, 404], "224": [391, 404], "17it": [391, 392], "3657": [391, 404], "58": [391, 404, 405], "09it": 391, "288": [391, 404], "73it": [391, 404], "4295": [391, 404], "73": [391, 404, 405, 406], "53it": [391, 404], "352": [391, 404], "46it": [391, 404], "384": [391, 404], "10it": [391, 392], "3596": 391, "416": [391, 404], "89": [391, 404], "01it": 391, "3475": 391, "448": [391, 404], "44it": [391, 392, 404], "3991": 391, "480": [391, 392, 404, 405], "92": [391, 404, 405], "3353": [391, 404], "38it": [391, 404], "544": [391, 404], "576": [391, 404], "70it": 391, "608": [391, 404], "96it": 391, "4021": 391, "640": 391, "76it": 391, "3869": 391, "672": 391, "79it": 391, "4173": 391, "704": 391, "736": 391, "768": 391, "3566": 391, "832": 391, "864": 391, "99it": [391, 404], "896": 391, "49it": [391, 404], "928": 391, "69it": 391, "3718": 391, "960": 391, "992": [391, 404], "84it": 391, "3960": 391, "1056": 391, "68it": 391, "1088": 391, "29it": 391, "1120": 391, "97it": [391, 404], "1152": 391, "75it": 391, "1184": 391, "71it": [391, 404], "1216": 391, "1248": 391, "87it": 391, "1280": 391, "98it": 391, "59it": [391, 404], "1344": 391, "1376": 391, "80it": [391, 392], "1408": 391, "61it": [391, 404], "1440": 391, "74it": [391, 404], "1472": 391, "1504": 391, "1536": 391, "89it": 391, "1568": 391, "1632": 391, "41it": [391, 404], "1696": 391, "35it": 391, "1728": 391, "1760": 391, "1792": 391, "1824": 391, "05it": 391, "1856": 391, "1888": 391, "1920": 391, "07it": 391, "1952": 391, "62it": [391, 404], "1984": 391, "72it": 391, "2016": 391, "45it": [391, 404], "2048": [391, 405], "2080": 391, "2112": [391, 404], "2144": 391, "2176": 391, "2208": 391, "12it": 391, "2240": 391, "2272": 391, "39it": [391, 404], "66it": 391, "2336": 391, "90it": [391, 392, 393], "2368": 391, "2432": 391, "2464": 391, "67it": 391, "2496": 391, "57it": [391, 404], "2528": [391, 404], "31it": 391, "2560": 391, "11it": [391, 404], "14it": 391, "2624": 391, "2656": [391, 404], "2688": 391, "2720": [391, 404], "47it": [391, 404], "2752": 391, "2784": 391, "2816": 391, "58it": [391, 404], "2848": 391, "2880": 391, "2912": 391, "65it": [391, 404], "2944": [391, 404], "60": [391, 392, 402, 403, 404, 408], "2976": [391, 404], "61": [391, 402, 404, 405], "3040": 391, "3072": 391, "62": [391, 404], "3104": 391, "32it": [391, 404], "63": [391, 403, 404, 405, 406], "3136": 391, "3168": 391, "65": [391, 403, 404], "3232": [391, 404], "6923": 391, "3264": 391, "3296": 391, "67": [391, 401, 403, 404], "3328": 391, "3360": 391, "15it": [391, 404], "68": [391, 404], "3392": 391, "3424": 391, "69": [391, 403, 404], "3456": [391, 404], "3488": 391, "3520": 391, "19it": 391, "71": [391, 404, 406], "3552": 391, "3584": 391, "3616": 391, "3648": 391, "3680": 391, "3712": 391, "3744": 391, "27it": 391, "3776": 391, "3808": 391, "28it": [391, 404], "77": [391, 404], "3840": 391, "43it": [391, 404], "3872": 391, "78": [391, 404, 406], "3904": 391, "94it": 391, "3936": 391, "3968": 391, "4032": 391, "37it": [391, 404], "4064": 391, "30it": [391, 392, 404], "4096": 391, "4128": [391, 404], "4160": 391, "78it": 391, "4192": 391, "4224": 391, "4256": [391, 404], "4288": [391, 404], "95it": 391, "4320": 391, "4352": 391, "20it": 391, "4384": 391, "64it": [391, 404], "4416": 391, "4448": 391, "4480": 391, "92it": 391, "4512": 391, "63it": [391, 404], "4544": 391, "24it": [391, 393], "4576": 391, "4608": 391, "4640": 391, "16it": [391, 392, 404], "4672": [391, 404], "4704": 391, "4736": 391, "4768": 391, "4832": 391, "4864": 391, "4896": 391, "4928": 391, "4960": 391, "4992": 391, "5024it": 391, "42it": [391, 404], "print_csv_files_in_fold": 391, "folder_path": 391, "csv_file": 391, "output_str": 391, "dirpath": 391, "endswith": 391, "strip": 391, "tmp": [391, 406], "tmpb_97241f": 391, "dqn_exp_212e78aa": 391, "5646": [391, 404], "11ef": 391, "80bf": 391, "0242ac110002": 391, "42945271730422974": 391, "39597463607788086": 391, "39912933111190796": 391, "41726210713386536": 391, "3515782356262207": 391, "16334903240203857": 391, "2825799882411957": 391, "346629798412323": 391, "3237038850784302": 391, "34395402669906616": 391, "2745116651058197": 391, "3059176802635193": 391, "3215958774089813": 391, "grad_norm_0": 391, "0666491985321045": 391, "1000728607177734": 391, "9019510746002197": 391, "673990249633789": 391, "318467617034912": 391, "42486047744751": 391, "732058525085449": 391, "520477056503296": 391, "036282539367676": 391, "10000000894069672": 391, "69230842590332": 391, "qvaluenetwork": 391, "worst": 391, "accuraci": 391, "fanci": [391, 397], "talk": 392, "repetit": [392, 394, 397], "six": 392, "sophist": [392, 403], "invent": 392, "overview": [392, 396, 402, 403, 408], "theta_k": 392, "pi_": 392, "exceed": 392, "discourag": [392, 404], "indispens": 392, "analyz": 392, "lingua": 392, "franca": 392, "defaultdict": [392, 404], "3e": [392, 393, 402, 403], "max_grad_norm": [392, 402, 403], "sub_batch_s": 392, "num_epoch": [392, 403], "entropy_ep": [392, 403], "charact": 392, "inverteddoublependulum": 392, "transmit": 392, "stai": 392, "confid": [392, 402, 403], "ran": 392, "f_": 392, "mu_": 392, "difficulti": [392, 409], "d_ob": 392, "d_action": 392, "policy_modul": [392, 402, 403], "briefli": [392, 402, 403], "refil": [392, 403], "easiest": [392, 396, 402, 403], "mathemat": [392, 402, 403], "tradeoff": [392, 403], "advantage_modul": 392, "lr_schedul": [392, 404], "cosineannealinglr": [392, 404], "eval_str": 392, "tensordict_data": [392, 403], "data_view": [392, 403], "subdata": [392, 402, 403], "cum_reward_str": 392, "4f": [392, 393, 404], "stepcount_str": 392, "param_group": [392, 402], "lr_str": 392, "eval_rollout": 392, "nice": [392, 394, 397], "471": [392, 404], "5584": 392, "0885": [392, 404], "0003": [392, 404], "1278": 392, "3000": 392, "475": [392, 404, 406], "1549": 392, "1929": 392, "0002": [392, 404], "483": [392, 404], "2117": 392, "6000": 392, "484": [392, 404], "2274": [392, 404], "7000": 392, "486": [392, 404], "2359": 392, "2429": 392, "9000": 392, "476": [392, 404], "2609": 392, "479": [392, 404], "25it": 392, "2615": 392, "cap": [392, 406], "figsiz": [392, 404], "subplot": [392, 402, 404, 409], "titl": [392, 393, 403, 404], "bit": [392, 393, 394, 402, 403, 406], "84x84": 393, "accessori": 393, "stamp": 393, "assist": 393, "emb": 393, "n_cell": 393, "customiz": 393, "wouldn": 393, "qval": 393, "stoch_polici": 393, "opportun": [393, 402], "uniniti": 393, "again": [393, 394, 395, 397, 403, 405, 406, 409], "redund": 393, "strongli": 393, "sake": [393, 405, 406], "20_000": [393, 404], "longest": 393, "npai": 393, "action_spread": 393, "0005": 393, "150": [393, 404], "topic": [394, 395, 396], "straight": 394, "backtrack": 394, "encapsul": [394, 395, 396], "reset_with_act": 394, "0461": 394, "tp": 394, "stepped_data": 394, "spatial": 394, "useless": 394, "policyless": 394, "appreci": 394, "monitor": 394, "examin": [394, 402], "tackl": 395, "delv": 395, "bypass": 395, "extractor": 395, "palliat": 395, "additivegaussianmodul": [395, 402], "had": [395, 397], "exploration_polici": [395, 402], "greedili": 395, "2d": [395, 402, 403], "innov": [395, 396], "rollout_explor": 395, "sole": 396, "tradit": [396, 402], "supervis": [396, 397, 406, 409], "n_collect": 396, "get_next_batch": 396, "ddpg_loss": 396, "total_loss": 396, "prove": 396, "reliev": 396, "concern": 396, "321": [396, 399, 402, 404], "accustom": 397, "surprisingli": 397, "fundament": 397, "art": [397, 402, 403], "multirpocess": 397, "countless": 397, "yourself": [397, 402, 403], "lightweight": 398, "portabl": 398, "everywher": 398, "log_scalar": 398, "elaps": 398, "my_scalar": 398, "saw": [398, 404, 406], "excess": 398, "lesson": 399, "voluntarili": 399, "value_mlp": 399, "100_000": 399, "init_rand_step": 399, "training_loop": 399, "video_record": 399, "arbitrarili": 399, "total_count": 399, "total_episod": 399, "t0": 399, "t1": 399, "conclud": [399, 405], "tutorials_python": 400, "tutorials_jupyt": 400, "env1_obs_kei": 401, "observation_stand": 401, "env2_obs_kei": 401, "observation_walk": 401, "tdreset1": 401, "tdreset2": 401, "lazy_stack": 401, "policy_common": 401, "policy_stand": 401, "policy_walk": 401, "But": 401, "env1_mak": 401, "env2_mak": 401, "_single_task": 401, "td_rollout": 401, "matteo": [402, 403], "bettini": [402, 403], "benchmarl": [402, 403], "simple_tag": 402, "maddpg": [402, 403], "multiagentparticleenviron": 402, "mpe": 402, "centralis": [402, 403], "tie": [402, 403], "iddpg": [402, 403], "typical": 402, "richard": 402, "andrew": 402, "mit": 402, "press": 402, "2018": 402, "mathbf": [402, 403], "pi": [402, 403, 404], "decentralis": [402, 403], "literatur": [402, 403], "overcom": [402, 403], "stationari": [402, 403], "concurr": [402, 403], "establish": 402, "gui": [402, 403], "is_sphinx": 402, "__sphinx_build__": 402, "n_iter": [402, 403], "evad": 402, "iteration_when_stop_training_evad": 402, "memory_s": 402, "n_optimiser_step": 402, "train_batch_s": 402, "polyak_tau": 402, "chaser": 402, "red": 402, "circl": [402, 403], "touch": [402, 404], "penal": 402, "acceler": [402, 403], "obstacl": 402, "drag": [402, 403], "elast": [402, 403], "collis": [402, 403], "imped": 402, "n_chaser": 402, "n_evad": 402, "n_obstacl": 402, "use_vma": 402, "simple_tag_v3": 402, "num_good": 402, "num_adversari": 402, "num_obstacl": 402, "max_cycl": 402, "num_vmas_env": [402, 403], "num_good_ag": 402, "num_landmark": 402, "adversary_1": 402, "four": [402, 403, 404], "n_agents_in_that_group": 402, "stress": [402, 403], "paramount": [402, 403], "n_rollout_step": [402, 403], "evolut": [402, 403], "group_nam": 402, "n_agents_in_group": 402, "minor": 402, "agents_exploration_polici": 402, "utilis": [402, 403], "withing": 402, "n_obs_per_ag": [402, 403], "n_actions_per_ag": [402, 403], "share_parameters_polici": [402, 403], "policy_net": [402, 403], "_agent": 402, "grant": [402, 403], "converg": [402, 403], "share_parameters_crit": [402, 403], "obs_act": 402, "cat_modul": 402, "critic_modul": 402, "fantast": [402, 403], "reset_td": 402, "interfer": 402, "flatten_kei": 402, "process_batch": 402, "group_shap": 402, "get_item_shap": [402, 403], "nested_done_kei": 402, "nested_terminated_kei": 402, "desc": [402, 403], "episode_reward_mean_": 402, "episode_reward_mean_map": 402, "train_group_map": 402, "group_batch": 402, "_group": 402, "loss_nam": 402, "episode_reward_mean": [402, 403], "episode_reward_mean_adversari": 402, "episode_reward_mean_ag": 402, "proce": 402, "screen": 402, "fig": 402, "set_ylabel": 402, "axvlin": 402, "color": 402, "orang": 402, "set_xlabel": 402, "video_logg": 402, "vmas_log": 402, "env_with_rend": 402, "vmas_rend": 402, "print_log_dir": 402, "profici": [402, 403], "lidar": 403, "sensor": 403, "mappo": 403, "ippo": 403, "analys": 403, "visualis": 403, "vmas_devic": 403, "6_000": 403, "minibatch_s": 403, "generalis": 403, "simd": 403, "parallelis": 403, "warp": 403, "todai": 403, "surround": 403, "dot": [403, 404], "collid": 403, "penalis": 403, "scenario_nam": 403, "final_rew": 403, "agent_collis": 403, "critic_net": 403, "minibatch": 403, "episode_reward_mean_list": 403, "critic_network_param": 403, "target_critic_network_param": 403, "4579917788505554": 403, "14524875581264496": 403, "168386459350586": 403, "3613134622573853": 403, "921463131904602": 403, "2106335163116455": 403, "1925103664398193": 403, "664064407348633": 403, "6539173126220703": 403, "743558168411255": 403, "xvfb": 403, "pyvirtualdisplai": 403, "1400": [403, 404], "900": 403, "pil": 403, "rendering_callback": 403, "fromarrai": 403, "gif": 403, "save_al": 403, "append_imag": 403, "freeli": 404, "undertaken": 404, "broader": 404, "wider": 404, "algebra": 404, "acquaint": 404, "avenu": 404, "_apply_to_composit": 404, "default_x": 404, "default_i": 404, "upward": 404, "angular": 404, "sin": 404, "rad": 404, "sec": 404, "angl": 404, "deleg": 404, "new_th": 404, "new_thdot": 404, "g_forc": 404, "angle_norm": 404, "albeit": 404, "high_th": 404, "high_thdot": 404, "low_th": 404, "low_thdot": 404, "trivial": 404, "irrelev": 404, "_make_spec": 404, "td_param": 404, "render_fp": 404, "random_": 404, "_make_step": 404, "staticmethod": 404, "showcas": 404, "skeleton": 404, "_apply_transform": [404, 409], "_inv_apply_transform": [404, 409], "subset": [404, 405], "sine": 404, "cosin": 404, "sintransform": 404, "costransform": 404, "t_sin": 404, "t_co": 404, "cat_transform": 404, "simple_rollout": 404, "unexplor": 404, "init_td": 404, "traj_return": 404, "last_reward": 404, "is_ipython": 404, "inlin": 404, "get_backend": 404, "ion": 404, "gcf": 404, "clear_output": 404, "625": 404, "0748": 404, "519": 404, "22it": 404, "0499": 404, "4472": 404, "073": 404, "33it": 404, "0685": 404, "0408": 404, "552": 404, "5154": 404, "9086": 404, "9385": 404, "155": 404, "2568": 404, "4981": 404, "223": 404, "8929": 404, "4491": 404, "581": 404, "51it": 404, "3233": 404, "0664": 404, "596": 404, "1021": 404, "5263": 404, "9579": 404, "54it": 404, "5807": 404, "8075": 404, "212": 404, "55it": 404, "2009": 404, "5525": 404, "914": 404, "2894": 404, "0115": 404, "0977": 404, "1845": 404, "1830": 404, "4858": 404, "233": 404, "2863": 404, "0297": 404, "464": 404, "4617": 404, "5997": 404, "1647": 404, "0777": 404, "901": 404, "4709": 404, "6813": 404, "8317": 404, "3221": 404, "5554": 404, "276": 404, "701": 404, "8570": 404, "6656": 404, "463": 404, "7779": 404, "6911": 404, "875": 404, "0796": 404, "7082": 404, "308": 404, "0421": 404, "1496": 404, "5037": 404, "1755": 404, "5029": 404, "9454": 404, "665": 404, "9330": 404, "2118": 404, "444": 404, "0995": 404, "6294": 404, "3146": 404, "2909": 404, "461": 404, "9720": 404, "1298": 404, "9923": 404, "0345": 404, "3438": 404, "424": 404, "6953": 404, "5233": 404, "411": 404, "8011": 404, "5329": 404, "2677": 404, "6969": 404, "7010": 404, "376": 404, "9352": 404, "7707": 404, "6178": 404, "348": 404, "7304": 404, "9407": 404, "942": 404, "3882": 404, "7604": 404, "3507": 404, "8928": 404, "258": 404, "6978": 404, "4641": 404, "549": 404, "6047": 404, "5005": 404, "4136": 404, "2993": 404, "3222": 404, "4046": 404, "7314": 404, "275": [404, 409], "6331": 404, "9318": 404, "961": 404, "8331": 404, "1604": 404, "4099": 404, "4761": 404, "125": 404, "4262": 404, "6363": 404, "382": 404, "3593": 404, "7377": 404, "2847": 404, "3443": 404, "867": 404, "3592": 404, "4760": 404, "441": 404, "9950": 404, "8021": 404, "3528": 404, "1214": 404, "708": 404, "4023": 404, "3583": 404, "041": 404, "3801": 404, "0310": 404, "120": 404, "4244": 404, "2039": 404, "4850": 404, "8748": 404, "706": 404, "4897": 404, "9210": 404, "8964": 404, "0832": 404, "3934": 404, "456": 404, "8971": 404, "2933": 404, "3377": 404, "6996": 404, "8916": 404, "098": 404, "2660": 404, "9110": 404, "4503": 404, "6956": 404, "9172": 404, "4026": 404, "946": 404, "9229": 404, "5205": 404, "8872": 404, "6637": 404, "019": 404, "9281": 404, "2082": 404, "724": 404, "8561": 404, "6574": 404, "4138": 404, "5230": 404, "385": 404, "4065": 404, "5642": 404, "921": 404, "9786": 404, "4129": 404, "5831": 404, "266": 404, "7723": 404, "4152": 404, "0898": 404, "389": 404, "5155": 404, "5376": 404, "5616": 404, "283": 404, "5333": 404, "4803": 404, "895": 404, "6566": 404, "2588": 404, "662": 404, "4732": 404, "7503": 404, "068": 404, "0714": 404, "3370": 404, "059": 404, "8612": 404, "1915": 404, "3855": 404, "0349": 404, "9644": 404, "4538": 404, "445": 404, "0392": 404, "4080": 404, "1648": 404, "9599": 404, "143": 404, "4284": 404, "5946": 404, "2590": 404, "9181": 404, "4621": 404, "9075": 404, "674": 404, "1772": 404, "9444": 404, "351": 404, "9391": 404, "5595": 404, "8673": 404, "6240": 404, "5919": 404, "1071": 404, "9127": 404, "251": 404, "9799": 404, "3131": 404, "9612": 404, "9705": 404, "8741": 404, "2230": 404, "0972": 404, "0337": 404, "0350": 404, "0654": 404, "2441": 404, "4596": 404, "362": 404, "103": 404, "4362": 404, "171": [404, 409], "104": 404, "4041": 404, "6907": 404, "105": 404, "4664": 404, "2760": 404, "0299": 404, "9712": 404, "107": 404, "3332": 404, "4479": 404, "772": 404, "108": 404, "4357": 404, "9591": 404, "543": 404, "109": 404, "6216": 404, "1353": 404, "692": 404, "110": 404, "6261": 404, "7086": 404, "496": 404, "111": [404, 406], "7758": 404, "9818": 404, "112": 404, "7772": 404, "5055": 404, "113": 404, "5840": 404, "3180": 404, "2083": 404, "115": 404, "5275": 404, "6873": 404, "116": 404, "4107": 404, "1624": 404, "117": [404, 406], "6372": 404, "2571": 404, "118": 404, "4039": 404, "4428": 404, "119": 404, "4728": 404, "5628": 404, "6767": 404, "2466": 404, "522": 404, "121": [404, 409], "5873": 404, "5072": 404, "6548": 404, "3766": 404, "123": 404, "5134": 404, "1955": 404, "124": [404, 406], "2481": 404, "0591": 404, "4500": 404, "3368": 404, "126": 404, "9708": 404, "7059": 404, "3031": 404, "2534": 404, "843": 404, "3327": 404, "6193": 404, "4831": 404, "1172": 404, "2593": 404, "4219": 404, "962": 404, "8380": 404, "899": 404, "132": 404, "2721": 404, "9048": 404, "166": 404, "133": 404, "2419": 404, "5248": 404, "2139": 404, "4278": 404, "0690": 404, "5140": 404, "136": 404, "1140": 404, "7402": 404, "137": 404, "5356": 404, "1636": 404, "138": [404, 406], "0671": 404, "8798": 404, "139": 404, "8918": 404, "3298": 404, "307": 404, "140": 404, "1779": 404, "141": 404, "1771": 404, "936": 404, "142": 404, "1683": 404, "4810": 404, "9373": 404, "4435": 404, "4396": 404, "8092": 404, "145": 404, "2572": 404, "146": 404, "4212": 404, "0260": 404, "147": 404, "0939": 404, "6478": 404, "605": 404, "148": 404, "6606": 404, "7289": 404, "149": 404, "9300": 404, "7193": 404, "563": 404, "1166": 404, "8514": 404, "151": 404, "9108": 404, "0672": 404, "152": 404, "8591": 404, "3768": 404, "153": 404, "9976": 404, "154": 404, "0576": 404, "0067": 404, "935": 404, "4199": 404, "1722": 404, "156": 404, "8310": 404, "3466": 404, "157": 404, "8631": 404, "2492": 404, "158": 404, "8763": 404, "1277": 404, "159": 404, "5562": 404, "7446": 404, "1082": 404, "9830": 404, "161": 404, "0946": 404, "5229": 404, "162": 404, "4574": 404, "6900": 404, "163": [404, 405], "2229": 404, "0318": 404, "482": 404, "164": 404, "0543": 404, "0817": 404, "761": 404, "165": 404, "2809": 404, "5118": 404, "366": 404, "1142": 404, "5635": 404, "1949": 404, "2327": 404, "982": 404, "168": 404, "0967": 404, "0387": 404, "457": 404, "169": 404, "0782": 404, "2150": 404, "170": 404, "5222": 404, "3725": 404, "9288": 404, "9837": 404, "1416": 404, "1099": 404, "173": 404, "8620": 404, "8475": 404, "1807": 404, "4375": 404, "175": 404, "1148": 404, "0645": 404, "2751": 404, "8313": 404, "9286": 404, "9770": 404, "178": 404, "5735": 404, "2837": 404, "179": 404, "2926": 404, "9489": 404, "180": 404, "1507": 404, "181": 404, "8724": 404, "3567": 404, "182": [404, 409], "3574": 404, "6140": 404, "183": 404, "7895": 404, "2518": 404, "184": 404, "6146": 404, "185": 404, "8776": 404, "7358": 404, "186": 404, "3722": 404, "8428": 404, "187": [404, 409], "7955": 404, "188": 404, "0092": 404, "7106": 404, "829": 404, "2264": 404, "6919": 404, "190": 404, "1438": 404, "1362": 404, "191": 404, "0618": 404, "8217": 404, "9420": 404, "6765": 404, "193": 404, "7745": 404, "0709": 404, "194": 404, "9478": 404, "6867": 404, "195": 404, "6507": 404, "6225": 404, "196": 404, "2244": 404, "2195": 404, "197": 404, "5385": 404, "9263": 404, "198": 404, "1878": 404, "2374": 404, "8054": 404, "3504": 404, "557": 404, "0766": 404, "201": 404, "2011": 404, "8393": 404, "202": 404, "0803": 404, "7815": 404, "203": 404, "8363": 404, "2460": 404, "204": 404, "8643": 404, "2191": 404, "593": 404, "205": 404, "0773": 404, "1343": 404, "206": 404, "8657": 404, "207": 404, "9304": 404, "7584": 404, "208": 404, "8752": 404, "2307": 404, "209": 404, "5250": 404, "4869": 404, "7837": 404, "5762": 404, "211": 404, "6661": 404, "8600": 404, "2502": 404, "1752": 404, "3075": 404, "8871": 404, "9406": 404, "8090": 404, "215": 404, "6291": 404, "8923": 404, "876": 404, "216": 404, "9504": 404, "21e": 404, "217": 404, "7431": 404, "7880": 404, "218": 404, "4463": 404, "5432": 404, "219": [404, 409], "3793": 404, "3313": 404, "8843": 404, "0369": 404, "065": 404, "221": 404, "4828": 404, "8391": 404, "222": 404, "6265": 404, "2913": 404, "947": 404, "5541": 404, "1252": 404, "7342": 404, "2396": 404, "225": 404, "5936": 404, "1924": 404, "226": 404, "9975": 404, "2045": 404, "227": 404, "8367": 404, "9540": 404, "228": 404, "7259": 404, "6743": 404, "4827": 404, "7528": 404, "230": 404, "7361": 404, "8756": 404, "231": 404, "7646": 404, "1116": 404, "232": 404, "5426": 404, "8385": 404, "5662": 404, "8585": 404, "234": 404, "8234": 404, "7930": 404, "235": 404, "2648": 404, "9309": 404, "236": 404, "6817": 404, "237": 404, "0943": 404, "1533": 404, "238": 404, "3045": 404, "0483": 404, "239": 404, "6415": 404, "0201": 404, "241": 404, "4437": 404, "4365": 404, "242": 404, "0358": 404, "4943": 404, "243": 404, "1272": 404, "5003": 404, "1180": 404, "2637": 404, "245": 404, "7197": 404, "0873": 404, "246": 404, "2917": 404, "247": 404, "0160": 404, "0738": 404, "248": 404, "3689": 404, "0120": 404, "249": 404, "5570": 404, "0475": 404, "250": 404, "4423": 404, "2220": 404, "6803": 404, "252": 404, "1465": 404, "7214": 404, "253": 404, "8801": 404, "7034": 404, "254": 404, "9136": 404, "4076": 404, "7589": 404, "5013": 404, "8150": 404, "2241": 404, "257": 404, "0753": 404, "8081": 404, "1951": 404, "8314": 404, "259": 404, "0038": 404, "260": 404, "0889": 404, "4616": 404, "261": 404, "0655": 404, "262": 404, "8333": 404, "9476": 404, "263": 404, "7554": 404, "3798": 404, "264": 404, "3717": 404, "3947": 404, "265": 404, "3060": 404, "6495": 404, "7467": 404, "8889": 404, "267": 404, "8457": 404, "591": 404, "7137": 404, "0536": 404, "771": 404, "269": 404, "1651": 404, "388": 404, "270": 404, "8246": 404, "5709": 404, "281": 404, "271": 404, "7502": 404, "0521": 404, "032": 404, "272": 404, "5475": 404, "7253": 404, "273": 404, "2856": 404, "7130": 404, "274": 404, "2778": 404, "4122": 404, "8368": 404, "1841": 404, "9622": 404, "1603": 404, "003e": 404, "277": 404, "0247": 404, "346": 404, "278": 404, "2238": 404, "6418": 404, "279": 404, "0626": 404, "2538": 404, "0149": 404, "7380": 404, "2167": 404, "8911": 404, "282": 404, "8725": 404, "1983": 404, "8142": 404, "3709": 404, "284": 404, "4989": 404, "285": 404, "6464": 404, "6210": 404, "286": 404, "9726": 404, "0820": 404, "287": 404, "6975": 404, "9091": 404, "4926": 404, "4791": 404, "289": 404, "0905": 404, "3500": 404, "290": 404, "2287": 404, "291": 404, "9918": 404, "5543": 404, "9245": 404, "6444": 404, "631": 404, "293": 404, "0448": 404, "4769": 404, "8566": 404, "7208": 404, "0966": 404, "296": 404, "5303": 404, "1537": 404, "023": 404, "297": 404, "2682": 404, "564": [404, 409], "298": 404, "4318": 404, "5063": 404, "299": 404, "7475": 404, "4190": 404, "8186": 404, "5077": 404, "301": 404, "1883": 404, "5291": 404, "472": 404, "302": 404, "3998": 404, "303": 404, "3622": 404, "0930": 404, "626": 404, "304": 404, "9500": 404, "5664": 404, "305": 404, "5697": 404, "3024": 404, "306": 404, "3117": 404, "0052": 404, "006": 404, "0981": 404, "9312": 404, "3873": 404, "309": 404, "0411": 404, "2650": 404, "1656": 404, "0228": 404, "004": 404, "311": 404, "1196": 404, "2478": 404, "312": 404, "7353": 404, "0812": 404, "313": 404, "3022": 404, "758": 404, "314": 404, "1406": 404, "4626": 404, "315": 404, "2156": 404, "851": 404, "1953": 404, "3774": 404, "6385": 404, "9917": 404, "2764": 404, "905": 404, "6391": 404, "9317": 404, "9748": 404, "2679": 404, "8495": 404, "5125": 404, "8177": 404, "6602": 404, "323": 404, "0704": 404, "5776": 404, "9833": [404, 408], "1339": 404, "402": 404, "1238": 404, "326": 404, "9299": 404, "0227": 404, "327": 404, "7727": 404, "1607": 404, "336": 404, "328": 404, "3958": 404, "3223": 404, "763": 404, "329": 404, "4742": 404, "1797": 404, "330": 404, "0144": 404, "0085": 404, "791": 404, "331": 404, "8284": 404, "0428": 404, "332": 404, "7365": 404, "333": 404, "4566": 404, "0781": 404, "086": 404, "334": 404, "3355": 404, "0230": 404, "335": 404, "9346": 404, "0423": 404, "076": 404, "3711": 404, "1335": 404, "6855": 404, "337": 404, "0304": 404, "0023": 404, "8459": 404, "338": 404, "9998": 404, "4399": 404, "339": 404, "2303": 404, "1346": 404, "340": 404, "2915": 404, "7116": 404, "341": 404, "5560": 404, "0487": 404, "342": 404, "5119": 404, "061": 404, "343": 404, "3305": 404, "3705": 404, "957": 404, "344": 404, "6068": 404, "345": 404, "5731": 404, "3897": 404, "0376": 404, "347": 404, "0434": 404, "012": 404, "1300": 404, "1215": 404, "0968": 404, "350": 404, "1348": 404, "0073": 404, "5052": 404, "4184": 404, "2817": 404, "8887": 404, "353": 404, "4779": 404, "1009": 404, "354": 404, "02it": 404, "0604": 404, "599": 404, "355": 404, "4486": 404, "1176": 404, "656": 404, "356": 404, "2436": 404, "0668": 404, "93it": 404, "8849": 404, "0012": 404, "7511": 404, "8804": 404, "359": [404, 408], "8870": 404, "6728": 404, "360": 404, "8841": 404, "5508": 404, "361": 404, "5242": 404, "0013": 404, "6185": 404, "363": 404, "1378": 404, "0204": 404, "364": 404, "0355": 404, "685": 404, "365": 404, "4884": 404, "0231": 404, "0014": 404, "6793": 404, "367": 404, "9834": 404, "863": 404, "368": 404, "6709": 404, "462": 404, "369": 404, "5199": 404, "9790": 404, "370": 404, "9401": 404, "7802": 404, "371": 404, "6723": 404, "2678": 404, "6201": 404, "373": 404, "2184": 404, "7385": 404, "374": 404, "6344": 404, "617": 404, "375": 404, "9945": 404, "0772": 404, "567": 404, "7576": 404, "0398": 404, "377": 404, "3396": 404, "0022": 404, "094": 404, "378": 404, "3073": 404, "4018": 404, "379": 404, "1869": 404, "380": 404, "0481": 404, "1117": 404, "381": 404, "6823": 404, "981": 404, "8305": 404, "0210": 404, "383": 404, "4908": 404, "0272": 404, "538": 404, "3267": 404, "0111": 404, "7965": 404, "1796": 404, "0039": 404, "5396": 404, "386": 404, "3757": 404, "0490": 404, "387": 404, "1394": 404, "4187": 404, "2986": 404, "7954": 404, "1274": 404, "0063": 404, "813": 404, "390": 404, "8706": 404, "0114": 404, "391": 404, "6922": 404, "2423": 404, "392": 404, "9115": 404, "2602": 404, "393": 404, "2449": 404, "0783": 404, "394": 404, "0631": 404, "0057": 404, "7444": 404, "395": 404, "3339": 404, "0167": 404, "396": 404, "4806": 404, "397": 404, "4171": 404, "067": 404, "398": 404, "2618": 404, "5809": 404, "399": 404, "0054": 404, "3364": 404, "8733": 404, "0184": 404, "401": 404, "9137": 404, "0113": 404, "025": 404, "0386": 404, "0625": 404, "403": 404, "1332": 404, "0582": 404, "7816": 404, "404": 404, "8341": 404, "0941": 404, "854": 404, "405": 404, "8615": 404, "588": 404, "406": 404, "3849": 404, "008": 404, "407": 404, "9395": 404, "0765": 404, "055": 404, "408": 404, "2685": 404, "2235": 404, "688": 404, "409": 404, "3052": 404, "4249": 404, "410": 404, "6806": 404, "6383": 404, "3721": 404, "9981": 404, "412": 404, "1862": 404, "822": 404, "413": 404, "9811": 404, "0171": 404, "013": 404, "414": 404, "0252": 404, "0049": 404, "6205": 404, "415": 404, "1108": 404, "4921": 404, "9142": 404, "8130": 404, "417": 404, "1725": 404, "0036": 404, "3196": 404, "418": 404, "7795": 404, "0242": 404, "799": 404, "419": 404, "7737": 404, "0138": 404, "420": 404, "1462": 404, "0053": 404, "421": 404, "9226": 404, "6139": 404, "422": 404, "9889": 404, "0403": 404, "423": 404, "6194": 404, "0032": 404, "3989": 404, "0104": 404, "425": 404, "9960": 404, "0009": 404, "6009": 404, "426": 404, "2697": 404, "0914": 404, "427": 404, "1114": 404, "428": 404, "9862": 404, "1932": 404, "429": 404, "0637": 404, "0623": 404, "082": 404, "430": 404, "9906": 404, "2031": 404, "431": 404, "9948": 404, "0895": 404, "432": 404, "1970": 404, "0256": 404, "4231": 404, "0449": 404, "644": 404, "434": 404, "1039": 404, "1973": 404, "435": 404, "4561": 404, "1225": 404, "436": 404, "0211": 404, "2125": 404, "437": 404, "3866": 404, "0050": 404, "7202": 404, "438": 404, "6388": 404, "0072": 404, "439": 404, "1187": 404, "0015": 404, "5116": 404, "440": 404, "0432": 404, "0025": 404, "7809": 404, "1925": 404, "0103": 404, "442": 404, "9570": 404, "443": 404, "0871": 404, "5601": 404, "0165": 404, "0047": 404, "6061": 404, "2746": 404, "0027": 404, "7887": 404, "446": 404, "1835": 404, "0035": 404, "855": 404, "447": 404, "8420": 404, "548": 404, "2653": 404, "0126": 404, "9736": 404, "449": 404, "0594": 404, "0119": 404, "6196": 404, "450": 404, "4509": 404, "0373": 404, "451": 404, "0620": 404, "6898": 404, "3235": 404, "687": 404, "453": 404, "5879": 404, "454": 404, "8406": 404, "0694": 404, "455": 404, "8259": 404, "0235": 404, "8500": 404, "0024": 404, "4054": 404, "458": 404, "2027": 404, "0894": 404, "459": 404, "5966": 404, "460": 404, "6942": 404, "0016": 404, "4254": 404, "6703": 404, "0145": 404, "8124": 404, "0218": 404, "9196": 404, "0188": 404, "8986": 404, "0884": 404, "0084": 404, "5624": 404, "465": 404, "8862": 404, "0006": 404, "5384": 404, "466": 404, "5837": 404, "467": 404, "8954": 404, "0101": 404, "6751": 404, "468": 404, "8063": 404, "0122": 404, "9635": 404, "469": 404, "0692": 404, "4216": 404, "470": 404, "1227": 404, "0586": 404, "162e": 404, "9690": 404, "4166": 404, "6324": 404, "0778": 404, "8548": 404, "0017": 404, "4408": 404, "8125": 404, "1515": 404, "2733": 404, "0044": 404, "2836": 404, "477": 404, "7497": 404, "7681": 404, "478": 404, "8547": 404, "0105": 404, "7212": 404, "9848": 404, "0019": 404, "6498": 404, "1987": 404, "0011": 404, "5473": 404, "481": 404, "8991": 404, "6091": 404, "9189": 404, "5771": 404, "6781": 404, "7542": 404, "5959": 404, "0064": 404, "485": 404, "2547": 404, "0636": 404, "547": 404, "487": 404, "0065": 404, "488": 404, "1694": 404, "0083": 404, "5759": 404, "489": 404, "0493": 404, "0021": 404, "7805": 404, "490": 404, "0950": 404, "497": 404, "491": 404, "9717": 404, "3672": 404, "492": 404, "0207": 404, "493": 404, "8266": 404, "5365": 404, "494": 404, "2623": 404, "5078": 404, "495": 404, "4545": 404, "09636": 404, "8754": 404, "0010": 404, "498": 404, "0031": 404, "8269": 404, "499": 404, "6642": 404, "2284": 404, "501": 404, "9130": 404, "0008": 404, "502": 404, "503": 404, "7624": 404, "0056": 404, "3858": 404, "504": 404, "0890": 404, "0042": 404, "505": 404, "7505": 404, "2157": 404, "506": 404, "8394": 404, "3413": 404, "507": 404, "9609": 404, "0041": 404, "6905": 404, "508": 404, "8467": 404, "4409": 404, "509": 404, "510": 404, "8128": 404, "3559": 404, "511": 404, "1479": 404, "0264": 404, "1589": 404, "566": 404, "513": 404, "2756": 404, "0046": 404, "5266": 404, "514": 404, "9873": 404, "0112": 404, "9314": 404, "515": 404, "3791": 404, "0721": 404, "516": 404, "4580": 404, "0758": 404, "6114": 404, "517": 404, "2431": 404, "518": 404, "1958": 404, "5553": 404, "8924": 404, "0097": 404, "520": 404, "3737": 404, "0234": 404, "521": 404, "9125": 404, "4623": 404, "3230": 404, "0589": 404, "3784": 404, "523": 404, "9482": 404, "0051": 404, "524": 404, "1979": 404, "0045": 404, "6401": 404, "525": 404, "1588": 404, "0048": 404, "6255": 404, "526": 404, "6084": 404, "3477": 404, "1475": 404, "0209": 404, "528": 404, "7611": 404, "1040": 404, "0099": 404, "0173": 404, "643": 404, "530": 404, "8189": 404, "4358": 404, "531": 404, "9897": 404, "532": 404, "1548": 404, "9751": 404, "533": 404, "6362": 404, "7495": 404, "534": 404, "1749": 404, "9513": 404, "535": 404, "7708": 404, "0371": 404, "536": 404, "2649": 404, "0437": 404, "537": 404, "5491": 404, "0276": 404, "6426": 404, "7294": 404, "078e": 404, "539": 404, "9928": 404, "540": 404, "7937": 404, "0124": 404, "9664": 404, "541": 404, "3342": 404, "542": 404, "2046": 404, "5496": 404, "0956": 404, "0059": 404, "545": 404, "9028": 404, "5843": 404, "546": 404, "0674": 404, "0178": 404, "797": 404, "2815": 404, "0599": 404, "1587": 404, "9276": 404, "8228": 404, "6164": 404, "551": 404, "6850": 404, "9167": 404, "3092": 404, "0670": 404, "9177": 404, "553": 404, "1599": 404, "0043": 404, "554": 404, "6367": 404, "555": 404, "556": 404, "6694": 404, "2622": 404, "0372": 404, "4841": 404, "558": 404, "2707": 404, "757": 404, "559": 404, "2267": 404, "5415": 404, "560": 404, "4556": 404, "0163": 404, "561": 404, "1839": 404, "0809": 404, "6262": 404, "562": 404, "0278": 404, "1112": 404, "6155": 404, "565": 404, "1427": 404, "3582": 404, "624": 404, "7870": 404, "9490": 404, "0439": 404, "8796": 404, "568": 404, "8026": 404, "612": 404, "569": [404, 409], "3147": 404, "8486": 404, "570": 404, "7917": 404, "0129": 404, "571": 404, "9553": 404, "0020": 404, "6871": 404, "572": 404, "3132": 404, "0159": 404, "8646": 404, "573": 404, "5320": 404, "0269": 404, "574": 404, "2955": 404, "0245": 404, "575": 404, "3347": 404, "0179": 404, "9718": 404, "1629": 404, "804": 404, "577": 404, "4164": 404, "0070": 404, "4335": 404, "578": 404, "579": 404, "3049": 404, "9063": 404, "580": 404, "8785": 404, "3295": 404, "5184": 404, "0546": 404, "582": 404, "4589": 404, "583": 404, "4697": 404, "2476": 404, "584": 404, "2397": 404, "585": 404, "4953": 404, "1775": 404, "586": 404, "2258": 404, "0110": 404, "7671": 404, "587": 404, "3981": 404, "8590": 404, "0007": 404, "589": 404, "9820": 404, "4221": 404, "590": 404, "1293": 404, "0116": 404, "868": 404, "1675": 404, "5931": 404, "592": 404, "2910": 404, "5219": 404, "2124": 404, "1730": 404, "737": 404, "594": 404, "2914": 404, "0206": 404, "595": 404, "0172": 404, "3982": 404, "0945": 404, "0121": 404, "4789": 404, "597": 404, "3805": 404, "4074": 404, "598": 404, "3310": 404, "5065": 404, "6028": 404, "6316": 404, "6724": 404, "6523": 404, "601": 404, "0136": 404, "4298": 404, "602": 404, "3524": 404, "2629": 404, "603": 404, "2635": 404, "7839": 404, "604": 404, "6041": 404, "8027": 404, "4170": 404, "4675": 404, "606": 404, "3153": 404, "9316": 404, "607": 404, "0649": 404, "9722": 404, "7989": 404, "0329": 404, "609": 404, "1976": 404, "6852": 404, "610": 404, "4793": 404, "1255": 404, "611": 404, "4581": 404, "0394": 404, "2047": 404, "0326": 404, "613": 404, "8967": 404, "8619": 404, "614": 404, "5906": 404, "6491": 404, "615": 404, "6634": 404, "4394": 404, "616": 404, "0624": 404, "0061": 404, "5676": 404, "3259": 404, "0131": 404, "7733": 404, "7515": 404, "0189": 404, "5575": 404, "619": 404, "9313": 404, "6286": 404, "620": 404, "4325": 404, "7832": 404, "621": 404, "1134": 404, "622": 404, "4572": 404, "0500": 404, "5838": 404, "623": 404, "3818": 404, "8623": 404, "1253": 404, "6622": 404, "subject": 404, "explain": 405, "semat": 405, "r3mtransform": 405, "env_transform": [405, 409], "s3": 405, "amazonaw": 405, "r3m_50": 405, "374m": 405, "38m": 405, "7mb": 405, "2m": 405, "146mb": 405, "107mb": 405, "0m": 405, "116mb": 405, "110mb": 405, "5mb": 405, "4m": 405, "113m": 405, "108mb": 405, "124m": 405, "106mb": 405, "134m": 405, "104mb": 405, "145m": 405, "103mb": 405, "155m": 405, "102mb": 405, "165m": 405, "8mb": 405, "177m": 405, "187m": 405, "197m": 405, "2mb": 405, "207m": 405, "217m": 405, "101mb": 405, "227m": 405, "236m": 405, "100mb": 405, "246m": 405, "1mb": 405, "262m": 405, "105mb": 405, "272m": 405, "282m": 405, "6mb": 405, "302m": 405, "109mb": 405, "314m": 405, "326m": 405, "336m": 405, "347m": 405, "357m": 405, "367m": 405, "wiser": 405, "3625": 405, "batteri": 406, "buffer_list": 406, "lowest": 406, "medium": 406, "buffer_lazytensor": 406, "buffer_lazymemmap": 406, "tempdir": 406, "tmpwmb7b8ut": 406, "fullest": 406, "mydata": 406, "background": 406, "question": [406, 408], "_i": 406, "artifici": 406, "0893e": 406, "hamper": 406, "she": 406, "pars": 406, "proport": 406, "hist": 406, "barcontain": 406, "artist": 406, "reappear": 406, "unfold": 406, "problemat": 406, "4th": 406, "prioritizedslicesampl": 406, "tensordictmaxvaluewrit": 406, "demo": 408, "icml": 408, "vmoen": 408, "fb": 408, "invest": 408, "platform": 408, "media": 408, "predominantli": 408, "tensordict1": 408, "tensordict2": 408, "tensordict_sampl": 408, "_sampler": 408, "_sum_tre": 408, "modulenotfounderror": 408, "28791671991348267": 408, "noopresetenv": [408, 409], "backbone_modul": 408, "params_expand": 408, "exec_sequ": 408, "tensordict_exp": 408, "base_modul": 408, "0137": 408, "1524": 408, "0641": 408, "viewbackward0": 408, "asstridedbackward0": 408, "8728": 408, "1334": 408, "3494": 408, "6887": 408, "6402": 408, "_safetanhbackward": 408, "1132": 408, "1762": 408, "3430": 408, "2668": 408, "2918": 408, "6239": 408, "tensordicts_prealloc": 408, "tensordicts_stack": 408, "tensordict_rollout": [408, 409], "disclaim": 408, "concatmodul": 408, "loss_td": 408, "year": 408, "roadmap": 408, "compris": 408, "contributor": 408, "curiou": 408, "nascent": 408, "unsupervis": 409, "unifi": 409, "_build_env": 409, "bipedalwalk": 409, "bipedalwalkerhardcor": 409, "blackjack": 409, "carrac": 409, "3033": 409, "deserv": 409, "__episode__": 409, "__trajectory__": 409, "void": 409, "reproduct": 409, "reset_data": 409, "tensordict_tprim": 409, "imshow": 409, "axesimag": 409, "0x7f95450b7760": 409, "traceback": 409, "1361": 409, "777": 409, "3042": 409, "1413": 409, "_check_version_exist": 409, "ns": 409, "_check_name_exist": 409, "_check_namespace_exist": 409, "namespacenotfound": 409, "suggestion_msg": 409, "wrapper1": 409, "wrapper2": 409, "obviou": 409, "truth": 409, "env0": 409, "env_transformed_bi": 409, "stanc": 409, "transformeddistribut": 409, "base_dist": 409, "concat": 409, "mofidi": 409, "transformedenviron": 409, "moderet": 409, "computation": 409, "legitim": 409, "incom": 409, "amongst": 409, "has_cuda": 409, "wor": 409, "convention": 409, "markovian": 409, "constain": 409, "bar_": 409, "get_someth": 409, "aargh": 409, "is_clos": 409, "foo_list": 409, "parallen": 409, "particularili": 409, "evolv": 409, "steadi": 409, "approx": 409, "_extra_st": 409, "observation_ssq": 409, "observation_sum": 409, "dispach": 409, "absor": 409}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "Bounded"], [28, 0, 1, "", "BoundedTensorSpec"], [29, 0, 1, "", "Categorical"], [30, 0, 1, "", "Composite"], [31, 0, 1, "", "CompositeSpec"], [32, 0, 1, "", "ConstantKLController"], [33, 0, 1, "", "DiscreteTensorSpec"], [34, 0, 1, "", "Flat2TED"], [35, 0, 1, "", "H5Combine"], [36, 0, 1, "", "H5Split"], [37, 0, 1, "", "LazyStackedCompositeSpec"], [38, 0, 1, "", "LazyStackedTensorSpec"], [39, 0, 1, "", "MultiCategorical"], [40, 0, 1, "", "MultiDiscreteTensorSpec"], [41, 0, 1, "", "MultiOneHot"], [42, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [43, 0, 1, "", "MultiStep"], [44, 0, 1, "", "Nested2TED"], [45, 0, 1, "", "NonTensor"], [46, 0, 1, "", "NonTensorSpec"], [47, 0, 1, "", "OneHotDiscreteTensorSpec"], [48, 0, 1, "", "PairwiseDataset"], [49, 0, 1, "", "PrioritizedReplayBuffer"], [50, 0, 1, "", "PromptData"], [51, 0, 1, "", "PromptTensorDictTokenizer"], [52, 0, 1, "", "ReplayBuffer"], [53, 0, 1, "", "RewardData"], [54, 0, 1, "", "RolloutFromModel"], [55, 0, 1, "", "Stacked"], [56, 0, 1, "", "StackedComposite"], [57, 0, 1, "", "TED2Flat"], [58, 0, 1, "", "TED2Nested"], [59, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [60, 0, 1, "", "TensorDictReplayBuffer"], [61, 0, 1, "", "TensorDictTokenizer"], [62, 0, 1, "", "TensorSpec"], [63, 0, 1, "", "TokenizedDatasetLoader"], [64, 0, 1, "", "Unbounded"], [65, 0, 1, "", "UnboundedContinuous"], [66, 0, 1, "", "UnboundedContinuousTensorSpec"], [67, 0, 1, "", "UnboundedDiscrete"], [68, 0, 1, "", "UnboundedDiscreteTensorSpec"], [69, 0, 1, "", "check_no_exclusive_keys"], [70, 0, 1, "", "consolidate_spec"], [71, 0, 1, "", "contains_lazy_spec"], [72, 0, 1, "", "create_infinite_iterator"], [82, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.Bounded": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "clone"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 4, 1, "", "device"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "make_neg_dim"], [27, 4, 1, "", "ndim"], [27, 1, 1, "", "ndimension"], [27, 1, 1, "", "one"], [27, 1, 1, "", "ones"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unsqueeze"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"], [27, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 3, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_categorical"], [29, 1, 1, "", "to_categorical_spec"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 4, 1, "", "device"], [30, 1, 1, "", "empty"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "get"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_empty"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "items"], [30, 1, 1, "", "keys"], [30, 1, 1, "", "lock_"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unlock_"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "values"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "clone"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 3, 1, "", "device"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "make_neg_dim"], [33, 4, 1, "", "ndim"], [33, 1, 1, "", "ndimension"], [33, 1, 1, "", "one"], [33, 1, 1, "", "ones"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "to_one_hot"], [33, 1, 1, "", "to_one_hot_spec"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unsqueeze"], [33, 1, 1, "", "update_mask"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"], [33, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedCompositeSpec": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 4, 1, "", "device"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "get"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_empty"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "items"], [37, 1, 1, "", "keys"], [37, 1, 1, "", "lock_"], [37, 1, 1, "", "make_neg_dim"], [37, 4, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unlock_"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "values"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 4, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 4, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.MultiCategorical": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 3, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "to_one_hot"], [39, 1, 1, "", "to_one_hot_spec"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "update_mask"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 3, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "to_one_hot"], [40, 1, 1, "", "to_one_hot_spec"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 3, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 4, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "compile"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "mtia"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_load_state_dict_pre_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "register_state_dict_post_hook"], [43, 1, 1, "", "register_state_dict_pre_hook"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_submodule"], [43, 1, 1, "", "share_memory"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 4, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "clone"], [46, 1, 1, "", "contains"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 4, 1, "", "device"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "make_neg_dim"], [46, 4, 1, "", "ndim"], [46, 1, 1, "", "ndimension"], [46, 1, 1, "", "one"], [46, 1, 1, "", "ones"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "sample"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "unsqueeze"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"], [46, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 3, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_categorical"], [47, 1, 1, "", "to_categorical_spec"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "to_one_hot"], [47, 1, 1, "", "to_one_hot_spec"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "update_mask"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[48, 4, 1, "", "batch_size"], [48, 4, 1, "", "device"], [48, 1, 1, "", "from_dataset"], [48, 1, 1, "", "from_tensordict"], [48, 1, 1, "", "get"], [48, 1, 1, "", "load"], [48, 1, 1, "", "load_"], [48, 1, 1, "", "load_memmap"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "memmap"], [48, 1, 1, "", "memmap_"], [48, 1, 1, "", "memmap_like"], [48, 1, 1, "", "memmap_refresh_"], [48, 4, 1, "", "names"], [48, 1, 1, "", "save"], [48, 1, 1, "", "set"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to_tensordict"], [48, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[49, 1, 1, "", "add"], [49, 1, 1, "", "append_transform"], [49, 1, 1, "", "dump"], [49, 1, 1, "", "dumps"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "extend"], [49, 1, 1, "", "insert_transform"], [49, 1, 1, "", "load"], [49, 1, 1, "", "loads"], [49, 1, 1, "", "register_load_hook"], [49, 1, 1, "", "register_save_hook"], [49, 1, 1, "", "sample"], [49, 4, 1, "", "sampler"], [49, 1, 1, "", "save"], [49, 1, 1, "", "set_sampler"], [49, 1, 1, "", "set_storage"], [49, 1, 1, "", "set_writer"], [49, 4, 1, "", "storage"], [49, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[50, 4, 1, "", "batch_size"], [50, 4, 1, "", "device"], [50, 1, 1, "", "from_dataset"], [50, 1, 1, "", "from_tensordict"], [50, 1, 1, "", "get"], [50, 1, 1, "", "load"], [50, 1, 1, "", "load_"], [50, 1, 1, "", "load_memmap"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "memmap"], [50, 1, 1, "", "memmap_"], [50, 1, 1, "", "memmap_like"], [50, 1, 1, "", "memmap_refresh_"], [50, 4, 1, "", "names"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to_tensordict"], [50, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dump"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "load"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "register_load_hook"], [52, 1, 1, "", "register_save_hook"], [52, 1, 1, "", "sample"], [52, 4, 1, "", "sampler"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 4, 1, "", "storage"], [52, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[53, 4, 1, "", "batch_size"], [53, 4, 1, "", "device"], [53, 1, 1, "", "from_tensordict"], [53, 1, 1, "", "get"], [53, 1, 1, "", "load"], [53, 1, 1, "", "load_"], [53, 1, 1, "", "load_memmap"], [53, 1, 1, "", "load_state_dict"], [53, 1, 1, "", "memmap"], [53, 1, 1, "", "memmap_"], [53, 1, 1, "", "memmap_like"], [53, 1, 1, "", "memmap_refresh_"], [53, 4, 1, "", "names"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set"], [53, 1, 1, "", "state_dict"], [53, 1, 1, "", "to_tensordict"], [53, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[54, 1, 1, "", "create_rollout_td"], [54, 1, 1, "", "generate"], [54, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.Stacked": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 4, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "clone"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 4, 1, "", "device"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "get"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_empty"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "items"], [56, 1, 1, "", "keys"], [56, 1, 1, "", "lock_"], [56, 1, 1, "", "make_neg_dim"], [56, 4, 1, "", "ndim"], [56, 1, 1, "", "ndimension"], [56, 1, 1, "", "one"], [56, 1, 1, "", "ones"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "unlock_"], [56, 1, 1, "", "unsqueeze"], [56, 1, 1, "", "values"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"], [56, 1, 1, "", "zeros"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 1, 1, "", "dump"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "load"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "register_load_hook"], [59, 1, 1, "", "register_save_hook"], [59, 1, 1, "", "sample"], [59, 4, 1, "", "sampler"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 4, 1, "", "storage"], [59, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 1, 1, "", "dump"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "load"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "register_load_hook"], [60, 1, 1, "", "register_save_hook"], [60, 1, 1, "", "sample"], [60, 4, 1, "", "sampler"], [60, 1, 1, "", "save"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 4, 1, "", "storage"], [60, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[63, 1, 1, "", "dataset_to_tensordict"], [63, 1, 1, "", "load"]], "torchrl.data.Unbounded": [[64, 1, 1, "", "assert_is_in"], [64, 1, 1, "", "clear_device_"], [64, 1, 1, "", "clone"], [64, 1, 1, "", "contains"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 4, 1, "", "device"], [64, 1, 1, "", "encode"], [64, 1, 1, "", "expand"], [64, 1, 1, "", "flatten"], [64, 1, 1, "", "implements_for_spec"], [64, 1, 1, "", "index"], [64, 1, 1, "", "is_in"], [64, 1, 1, "", "make_neg_dim"], [64, 4, 1, "", "ndim"], [64, 1, 1, "", "ndimension"], [64, 1, 1, "", "one"], [64, 1, 1, "", "ones"], [64, 1, 1, "", "project"], [64, 1, 1, "", "rand"], [64, 1, 1, "", "reshape"], [64, 1, 1, "", "sample"], [64, 1, 1, "", "squeeze"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_numpy"], [64, 1, 1, "", "type_check"], [64, 1, 1, "", "unflatten"], [64, 1, 1, "", "unsqueeze"], [64, 1, 1, "", "view"], [64, 1, 1, "", "zero"], [64, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[65, 1, 1, "", "assert_is_in"], [65, 1, 1, "", "clear_device_"], [65, 1, 1, "", "clone"], [65, 1, 1, "", "contains"], [65, 1, 1, "", "cpu"], [65, 1, 1, "", "cuda"], [65, 4, 1, "", "device"], [65, 1, 1, "", "encode"], [65, 1, 1, "", "expand"], [65, 1, 1, "", "flatten"], [65, 1, 1, "", "implements_for_spec"], [65, 1, 1, "", "index"], [65, 1, 1, "", "is_in"], [65, 1, 1, "", "make_neg_dim"], [65, 4, 1, "", "ndim"], [65, 1, 1, "", "ndimension"], [65, 1, 1, "", "one"], [65, 1, 1, "", "ones"], [65, 1, 1, "", "project"], [65, 1, 1, "", "rand"], [65, 1, 1, "", "reshape"], [65, 1, 1, "", "sample"], [65, 1, 1, "", "squeeze"], [65, 1, 1, "", "to"], [65, 1, 1, "", "to_numpy"], [65, 1, 1, "", "type_check"], [65, 1, 1, "", "unflatten"], [65, 1, 1, "", "unsqueeze"], [65, 1, 1, "", "view"], [65, 1, 1, "", "zero"], [65, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[66, 1, 1, "", "assert_is_in"], [66, 1, 1, "", "clear_device_"], [66, 1, 1, "", "clone"], [66, 1, 1, "", "contains"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 4, 1, "", "device"], [66, 1, 1, "", "encode"], [66, 1, 1, "", "expand"], [66, 1, 1, "", "flatten"], [66, 1, 1, "", "implements_for_spec"], [66, 1, 1, "", "index"], [66, 1, 1, "", "is_in"], [66, 1, 1, "", "make_neg_dim"], [66, 4, 1, "", "ndim"], [66, 1, 1, "", "ndimension"], [66, 1, 1, "", "one"], [66, 1, 1, "", "ones"], [66, 1, 1, "", "project"], [66, 1, 1, "", "rand"], [66, 1, 1, "", "reshape"], [66, 1, 1, "", "sample"], [66, 1, 1, "", "squeeze"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_numpy"], [66, 1, 1, "", "type_check"], [66, 1, 1, "", "unflatten"], [66, 1, 1, "", "unsqueeze"], [66, 1, 1, "", "view"], [66, 1, 1, "", "zero"], [66, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[67, 1, 1, "", "assert_is_in"], [67, 1, 1, "", "clear_device_"], [67, 1, 1, "", "clone"], [67, 1, 1, "", "contains"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 4, 1, "", "device"], [67, 1, 1, "", "encode"], [67, 1, 1, "", "expand"], [67, 1, 1, "", "flatten"], [67, 1, 1, "", "implements_for_spec"], [67, 1, 1, "", "index"], [67, 1, 1, "", "is_in"], [67, 1, 1, "", "make_neg_dim"], [67, 4, 1, "", "ndim"], [67, 1, 1, "", "ndimension"], [67, 1, 1, "", "one"], [67, 1, 1, "", "ones"], [67, 1, 1, "", "project"], [67, 1, 1, "", "rand"], [67, 1, 1, "", "reshape"], [67, 1, 1, "", "sample"], [67, 1, 1, "", "squeeze"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_numpy"], [67, 1, 1, "", "type_check"], [67, 1, 1, "", "unflatten"], [67, 1, 1, "", "unsqueeze"], [67, 1, 1, "", "view"], [67, 1, 1, "", "zero"], [67, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[68, 1, 1, "", "assert_is_in"], [68, 1, 1, "", "clear_device_"], [68, 1, 1, "", "clone"], [68, 1, 1, "", "contains"], [68, 1, 1, "", "cpu"], [68, 1, 1, "", "cuda"], [68, 4, 1, "", "device"], [68, 1, 1, "", "encode"], [68, 1, 1, "", "expand"], [68, 1, 1, "", "flatten"], [68, 1, 1, "", "implements_for_spec"], [68, 1, 1, "", "index"], [68, 1, 1, "", "is_in"], [68, 1, 1, "", "make_neg_dim"], [68, 4, 1, "", "ndim"], [68, 1, 1, "", "ndimension"], [68, 1, 1, "", "one"], [68, 1, 1, "", "ones"], [68, 1, 1, "", "project"], [68, 1, 1, "", "rand"], [68, 1, 1, "", "reshape"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "squeeze"], [68, 1, 1, "", "to"], [68, 1, 1, "", "to_numpy"], [68, 1, 1, "", "type_check"], [68, 1, 1, "", "unflatten"], [68, 1, 1, "", "unsqueeze"], [68, 1, 1, "", "view"], [68, 1, 1, "", "zero"], [68, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[73, 0, 1, "", "AtariDQNExperienceReplay"], [74, 0, 1, "", "BaseDatasetExperienceReplay"], [75, 0, 1, "", "D4RLExperienceReplay"], [76, 0, 1, "", "GenDGRLExperienceReplay"], [77, 0, 1, "", "MinariExperienceReplay"], [78, 0, 1, "", "OpenMLExperienceReplay"], [79, 0, 1, "", "OpenXExperienceReplay"], [80, 0, 1, "", "RobosetExperienceReplay"], [81, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[73, 1, 1, "", "add"], [73, 1, 1, "", "append_transform"], [73, 4, 1, "", "data_path"], [73, 4, 1, "", "data_path_root"], [73, 1, 1, "", "delete"], [73, 1, 1, "", "dump"], [73, 1, 1, "", "dumps"], [73, 1, 1, "", "empty"], [73, 1, 1, "", "extend"], [73, 1, 1, "", "insert_transform"], [73, 1, 1, "", "load"], [73, 1, 1, "", "loads"], [73, 1, 1, "", "preprocess"], [73, 1, 1, "", "register_load_hook"], [73, 1, 1, "", "register_save_hook"], [73, 1, 1, "", "sample"], [73, 4, 1, "", "sampler"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set_sampler"], [73, 1, 1, "", "set_storage"], [73, 1, 1, "", "set_writer"], [73, 4, 1, "", "storage"], [73, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[74, 1, 1, "", "add"], [74, 1, 1, "", "append_transform"], [74, 4, 1, "", "data_path"], [74, 4, 1, "", "data_path_root"], [74, 1, 1, "", "delete"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "dumps"], [74, 1, 1, "", "empty"], [74, 1, 1, "", "extend"], [74, 1, 1, "", "insert_transform"], [74, 1, 1, "", "load"], [74, 1, 1, "", "loads"], [74, 1, 1, "", "preprocess"], [74, 1, 1, "", "register_load_hook"], [74, 1, 1, "", "register_save_hook"], [74, 1, 1, "", "sample"], [74, 4, 1, "", "sampler"], [74, 1, 1, "", "save"], [74, 1, 1, "", "set_sampler"], [74, 1, 1, "", "set_storage"], [74, 1, 1, "", "set_writer"], [74, 4, 1, "", "storage"], [74, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[75, 1, 1, "", "add"], [75, 1, 1, "", "append_transform"], [75, 4, 1, "", "data_path"], [75, 4, 1, "", "data_path_root"], [75, 1, 1, "", "delete"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "dumps"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "extend"], [75, 1, 1, "", "insert_transform"], [75, 1, 1, "", "load"], [75, 1, 1, "", "loads"], [75, 1, 1, "", "preprocess"], [75, 1, 1, "", "register_load_hook"], [75, 1, 1, "", "register_save_hook"], [75, 1, 1, "", "sample"], [75, 4, 1, "", "sampler"], [75, 1, 1, "", "save"], [75, 1, 1, "", "set_sampler"], [75, 1, 1, "", "set_storage"], [75, 1, 1, "", "set_writer"], [75, 4, 1, "", "storage"], [75, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[76, 1, 1, "", "add"], [76, 1, 1, "", "append_transform"], [76, 4, 1, "", "data_path"], [76, 4, 1, "", "data_path_root"], [76, 1, 1, "", "delete"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "dumps"], [76, 1, 1, "", "empty"], [76, 1, 1, "", "extend"], [76, 1, 1, "", "insert_transform"], [76, 1, 1, "", "load"], [76, 1, 1, "", "loads"], [76, 1, 1, "", "preprocess"], [76, 1, 1, "", "register_load_hook"], [76, 1, 1, "", "register_save_hook"], [76, 1, 1, "", "sample"], [76, 4, 1, "", "sampler"], [76, 1, 1, "", "save"], [76, 1, 1, "", "set_sampler"], [76, 1, 1, "", "set_storage"], [76, 1, 1, "", "set_writer"], [76, 4, 1, "", "storage"], [76, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[77, 1, 1, "", "add"], [77, 1, 1, "", "append_transform"], [77, 4, 1, "", "data_path"], [77, 4, 1, "", "data_path_root"], [77, 1, 1, "", "delete"], [77, 1, 1, "", "dump"], [77, 1, 1, "", "dumps"], [77, 1, 1, "", "empty"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "insert_transform"], [77, 1, 1, "", "load"], [77, 1, 1, "", "loads"], [77, 1, 1, "", "preprocess"], [77, 1, 1, "", "register_load_hook"], [77, 1, 1, "", "register_save_hook"], [77, 1, 1, "", "sample"], [77, 4, 1, "", "sampler"], [77, 1, 1, "", "save"], [77, 1, 1, "", "set_sampler"], [77, 1, 1, "", "set_storage"], [77, 1, 1, "", "set_writer"], [77, 4, 1, "", "storage"], [77, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[78, 1, 1, "", "add"], [78, 1, 1, "", "append_transform"], [78, 4, 1, "", "data_path"], [78, 4, 1, "", "data_path_root"], [78, 1, 1, "", "delete"], [78, 1, 1, "", "dump"], [78, 1, 1, "", "dumps"], [78, 1, 1, "", "empty"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "insert_transform"], [78, 1, 1, "", "load"], [78, 1, 1, "", "loads"], [78, 1, 1, "", "preprocess"], [78, 1, 1, "", "register_load_hook"], [78, 1, 1, "", "register_save_hook"], [78, 1, 1, "", "sample"], [78, 4, 1, "", "sampler"], [78, 1, 1, "", "save"], [78, 1, 1, "", "set_sampler"], [78, 1, 1, "", "set_storage"], [78, 1, 1, "", "set_writer"], [78, 4, 1, "", "storage"], [78, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 4, 1, "", "data_path"], [79, 4, 1, "", "data_path_root"], [79, 1, 1, "", "delete"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "preprocess"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 4, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 4, 1, "", "storage"], [79, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 4, 1, "", "data_path"], [80, 4, 1, "", "data_path_root"], [80, 1, 1, "", "delete"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "preprocess"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 4, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 4, 1, "", "storage"], [80, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 4, 1, "", "data_path"], [81, 4, 1, "", "data_path_root"], [81, 1, 1, "", "delete"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "preprocess"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 4, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 4, 1, "", "storage"], [81, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[83, 0, 1, "", "FlatStorageCheckpointer"], [84, 0, 1, "", "H5StorageCheckpointer"], [85, 0, 1, "", "ImmutableDatasetWriter"], [86, 0, 1, "", "LazyMemmapStorage"], [87, 0, 1, "", "LazyTensorStorage"], [88, 0, 1, "", "ListStorage"], [89, 0, 1, "", "ListStorageCheckpointer"], [90, 0, 1, "", "NestedStorageCheckpointer"], [91, 0, 1, "", "PrioritizedSampler"], [92, 0, 1, "", "PrioritizedSliceSampler"], [93, 0, 1, "", "RandomSampler"], [94, 0, 1, "", "ReplayBufferEnsemble"], [95, 0, 1, "", "RoundRobinWriter"], [96, 0, 1, "", "Sampler"], [97, 0, 1, "", "SamplerEnsemble"], [98, 0, 1, "", "SamplerWithoutReplacement"], [99, 0, 1, "", "SliceSampler"], [100, 0, 1, "", "SliceSamplerWithoutReplacement"], [101, 0, 1, "", "Storage"], [102, 0, 1, "", "StorageCheckpointerBase"], [103, 0, 1, "", "StorageEnsemble"], [104, 0, 1, "", "StorageEnsembleCheckpointer"], [105, 0, 1, "", "TensorDictMaxValueWriter"], [106, 0, 1, "", "TensorDictRoundRobinWriter"], [107, 0, 1, "", "TensorStorage"], [108, 0, 1, "", "TensorStorageCheckpointer"], [109, 0, 1, "", "Writer"], [110, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[85, 1, 1, "", "add"], [85, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[86, 1, 1, "", "attach"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "load"], [86, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[87, 1, 1, "", "attach"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "load"], [87, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[88, 1, 1, "", "attach"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "load"], [88, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[91, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[92, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[94, 1, 1, "", "add"], [94, 1, 1, "", "append_transform"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "dumps"], [94, 1, 1, "", "empty"], [94, 1, 1, "", "extend"], [94, 1, 1, "", "insert_transform"], [94, 1, 1, "", "load"], [94, 1, 1, "", "loads"], [94, 1, 1, "", "register_load_hook"], [94, 1, 1, "", "register_save_hook"], [94, 1, 1, "", "sample"], [94, 4, 1, "", "sampler"], [94, 1, 1, "", "save"], [94, 1, 1, "", "set_sampler"], [94, 1, 1, "", "set_storage"], [94, 1, 1, "", "set_writer"], [94, 4, 1, "", "storage"], [94, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[95, 1, 1, "", "add"], [95, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[101, 1, 1, "", "attach"], [101, 1, 1, "", "dump"], [101, 1, 1, "", "load"], [101, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[105, 1, 1, "", "add"], [105, 1, 1, "", "extend"], [105, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[106, 1, 1, "", "add"], [106, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[107, 1, 1, "", "attach"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "load"], [107, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[109, 1, 1, "", "add"], [109, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[110, 1, 1, "", "add"], [110, 1, 1, "", "extend"]], "torchrl.envs": [[111, 2, 1, "", "BraxEnv"], [112, 2, 1, "", "BraxWrapper"], [113, 2, 1, "", "DMControlEnv"], [114, 2, 1, "", "DMControlWrapper"], [115, 0, 1, "", "EnvBase"], [116, 0, 1, "", "EnvCreator"], [117, 0, 1, "", "EnvMetaData"], [118, 2, 1, "", "GymEnv"], [119, 0, 1, "", "GymLikeEnv"], [120, 2, 1, "", "GymWrapper"], [121, 2, 1, "", "HabitatEnv"], [122, 2, 1, "", "IsaacGymEnv"], [123, 2, 1, "", "IsaacGymWrapper"], [124, 2, 1, "", "JumanjiEnv"], [125, 2, 1, "", "JumanjiWrapper"], [126, 2, 1, "", "MOGymEnv"], [127, 2, 1, "", "MOGymWrapper"], [128, 2, 1, "", "MarlGroupMapType"], [129, 2, 1, "", "MeltingpotEnv"], [130, 2, 1, "", "MeltingpotWrapper"], [131, 2, 1, "", "ModelBasedEnvBase"], [132, 2, 1, "", "MultiThreadedEnv"], [133, 2, 1, "", "MultiThreadedEnvWrapper"], [134, 2, 1, "", "OpenMLEnv"], [135, 0, 1, "", "ParallelEnv"], [136, 0, 1, "", "PendulumEnv"], [137, 2, 1, "", "PettingZooEnv"], [138, 2, 1, "", "PettingZooWrapper"], [139, 2, 1, "", "RoboHiveEnv"], [140, 2, 1, "", "SMACv2Env"], [141, 2, 1, "", "SMACv2Wrapper"], [142, 0, 1, "", "SerialEnv"], [143, 0, 1, "", "TicTacToeEnv"], [144, 2, 1, "", "VmasEnv"], [145, 2, 1, "", "VmasWrapper"], [146, 2, 1, "", "check_marl_grouping"], [147, 2, 1, "", "gym_backend"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "reset"], [131, 1, 1, "", "rollout"], [150, 2, 1, "", "set_gym_backend"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[115, 4, 1, "", "action_key"], [115, 4, 1, "", "action_keys"], [115, 4, 1, "", "action_spec"], [115, 1, 1, "", "add_module"], [115, 1, 1, "", "add_truncated_keys"], [115, 1, 1, "", "append_transform"], [115, 1, 1, "", "apply"], [115, 4, 1, "", "batch_locked"], [115, 4, 1, "", "batch_size"], [115, 1, 1, "", "bfloat16"], [115, 1, 1, "", "buffers"], [115, 1, 1, "", "children"], [115, 1, 1, "", "compile"], [115, 1, 1, "", "cpu"], [115, 1, 1, "", "cuda"], [115, 4, 1, "", "done_key"], [115, 4, 1, "", "done_keys"], [115, 4, 1, "", "done_keys_groups"], [115, 4, 1, "", "done_spec"], [115, 1, 1, "", "double"], [115, 1, 1, "", "empty_cache"], [115, 1, 1, "", "eval"], [115, 1, 1, "", "extra_repr"], [115, 1, 1, "", "fake_tensordict"], [115, 1, 1, "", "float"], [115, 1, 1, "", "forward"], [115, 4, 1, "", "full_action_spec"], [115, 4, 1, "", "full_done_spec"], [115, 4, 1, "", "full_reward_spec"], [115, 4, 1, "", "full_state_spec"], [115, 1, 1, "", "get_buffer"], [115, 1, 1, "", "get_extra_state"], [115, 1, 1, "", "get_parameter"], [115, 1, 1, "", "get_submodule"], [115, 1, 1, "", "half"], [115, 4, 1, "", "input_spec"], [115, 1, 1, "", "ipu"], [115, 1, 1, "", "load_state_dict"], [115, 1, 1, "", "maybe_reset"], [115, 1, 1, "", "modules"], [115, 1, 1, "", "mtia"], [115, 1, 1, "", "named_buffers"], [115, 1, 1, "", "named_children"], [115, 1, 1, "", "named_modules"], [115, 1, 1, "", "named_parameters"], [115, 4, 1, "", "observation_spec"], [115, 4, 1, "", "output_spec"], [115, 1, 1, "", "parameters"], [115, 1, 1, "", "rand_action"], [115, 1, 1, "id0", "rand_step"], [115, 1, 1, "", "register_backward_hook"], [115, 1, 1, "", "register_buffer"], [115, 1, 1, "", "register_forward_hook"], [115, 1, 1, "", "register_forward_pre_hook"], [115, 1, 1, "", "register_full_backward_hook"], [115, 1, 1, "", "register_full_backward_pre_hook"], [115, 1, 1, "", "register_gym"], [115, 1, 1, "", "register_load_state_dict_post_hook"], [115, 1, 1, "", "register_load_state_dict_pre_hook"], [115, 1, 1, "", "register_module"], [115, 1, 1, "", "register_parameter"], [115, 1, 1, "", "register_state_dict_post_hook"], [115, 1, 1, "", "register_state_dict_pre_hook"], [115, 1, 1, "", "requires_grad_"], [115, 1, 1, "id1", "reset"], [115, 4, 1, "", "reset_keys"], [115, 4, 1, "", "reward_key"], [115, 4, 1, "", "reward_keys"], [115, 4, 1, "", "reward_spec"], [115, 1, 1, "id2", "rollout"], [115, 1, 1, "", "set_extra_state"], [115, 1, 1, "id3", "set_seed"], [115, 1, 1, "", "set_submodule"], [115, 4, 1, "", "shape"], [115, 1, 1, "", "share_memory"], [115, 4, 1, "", "specs"], [115, 1, 1, "", "state_dict"], [115, 4, 1, "", "state_keys"], [115, 4, 1, "", "state_spec"], [115, 1, 1, "id4", "step"], [115, 1, 1, "", "step_and_maybe_reset"], [115, 1, 1, "", "to"], [115, 1, 1, "", "to_empty"], [115, 1, 1, "", "train"], [115, 1, 1, "", "type"], [115, 1, 1, "", "xpu"], [115, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[119, 4, 1, "", "action_key"], [119, 4, 1, "", "action_keys"], [119, 4, 1, "", "action_spec"], [119, 1, 1, "", "add_module"], [119, 1, 1, "", "add_truncated_keys"], [119, 1, 1, "", "append_transform"], [119, 1, 1, "", "apply"], [119, 1, 1, "", "auto_register_info_dict"], [119, 4, 1, "", "batch_locked"], [119, 4, 1, "", "batch_size"], [119, 1, 1, "", "bfloat16"], [119, 1, 1, "", "buffers"], [119, 1, 1, "", "children"], [119, 1, 1, "", "close"], [119, 1, 1, "", "compile"], [119, 1, 1, "", "cpu"], [119, 1, 1, "", "cuda"], [119, 4, 1, "", "done_key"], [119, 4, 1, "", "done_keys"], [119, 4, 1, "", "done_keys_groups"], [119, 4, 1, "", "done_spec"], [119, 1, 1, "", "double"], [119, 1, 1, "", "empty_cache"], [119, 1, 1, "", "eval"], [119, 1, 1, "", "extra_repr"], [119, 1, 1, "", "fake_tensordict"], [119, 1, 1, "", "float"], [119, 1, 1, "", "forward"], [119, 4, 1, "", "full_action_spec"], [119, 4, 1, "", "full_done_spec"], [119, 4, 1, "", "full_reward_spec"], [119, 4, 1, "", "full_state_spec"], [119, 1, 1, "", "get_buffer"], [119, 1, 1, "", "get_extra_state"], [119, 1, 1, "", "get_parameter"], [119, 1, 1, "", "get_submodule"], [119, 1, 1, "", "half"], [119, 4, 1, "", "input_spec"], [119, 1, 1, "", "ipu"], [119, 1, 1, "", "load_state_dict"], [119, 1, 1, "", "maybe_reset"], [119, 1, 1, "", "modules"], [119, 1, 1, "", "mtia"], [119, 1, 1, "", "named_buffers"], [119, 1, 1, "", "named_children"], [119, 1, 1, "", "named_modules"], [119, 1, 1, "", "named_parameters"], [119, 4, 1, "", "observation_spec"], [119, 4, 1, "", "output_spec"], [119, 1, 1, "", "parameters"], [119, 1, 1, "", "rand_action"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "read_action"], [119, 1, 1, "", "read_done"], [119, 1, 1, "", "read_obs"], [119, 1, 1, "", "read_reward"], [119, 1, 1, "", "register_backward_hook"], [119, 1, 1, "", "register_buffer"], [119, 1, 1, "", "register_forward_hook"], [119, 1, 1, "", "register_forward_pre_hook"], [119, 1, 1, "", "register_full_backward_hook"], [119, 1, 1, "", "register_full_backward_pre_hook"], [119, 1, 1, "", "register_gym"], [119, 1, 1, "", "register_load_state_dict_post_hook"], [119, 1, 1, "", "register_load_state_dict_pre_hook"], [119, 1, 1, "", "register_module"], [119, 1, 1, "", "register_parameter"], [119, 1, 1, "", "register_state_dict_post_hook"], [119, 1, 1, "", "register_state_dict_pre_hook"], [119, 1, 1, "", "requires_grad_"], [119, 1, 1, "", "reset"], [119, 4, 1, "", "reset_keys"], [119, 4, 1, "", "reward_key"], [119, 4, 1, "", "reward_keys"], [119, 4, 1, "", "reward_spec"], [119, 1, 1, "", "rollout"], [119, 1, 1, "", "set_extra_state"], [119, 1, 1, "", "set_info_dict_reader"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "set_submodule"], [119, 4, 1, "", "shape"], [119, 1, 1, "", "share_memory"], [119, 4, 1, "", "specs"], [119, 1, 1, "", "state_dict"], [119, 4, 1, "", "state_keys"], [119, 4, 1, "", "state_spec"], [119, 1, 1, "", "step"], [119, 1, 1, "", "step_and_maybe_reset"], [119, 1, 1, "", "to"], [119, 1, 1, "", "to_empty"], [119, 1, 1, "", "train"], [119, 1, 1, "", "type"], [119, 1, 1, "", "xpu"], [119, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[135, 4, 1, "", "action_key"], [135, 4, 1, "", "action_keys"], [135, 4, 1, "", "action_spec"], [135, 1, 1, "", "add_module"], [135, 1, 1, "", "add_truncated_keys"], [135, 1, 1, "", "append_transform"], [135, 1, 1, "", "apply"], [135, 4, 1, "", "batch_locked"], [135, 4, 1, "", "batch_size"], [135, 1, 1, "", "bfloat16"], [135, 1, 1, "", "buffers"], [135, 1, 1, "", "children"], [135, 1, 1, "", "compile"], [135, 1, 1, "", "cpu"], [135, 1, 1, "", "cuda"], [135, 4, 1, "", "done_key"], [135, 4, 1, "", "done_keys"], [135, 4, 1, "", "done_keys_groups"], [135, 4, 1, "", "done_spec"], [135, 1, 1, "", "double"], [135, 1, 1, "", "empty_cache"], [135, 1, 1, "", "eval"], [135, 1, 1, "", "extra_repr"], [135, 1, 1, "", "fake_tensordict"], [135, 1, 1, "", "float"], [135, 1, 1, "", "forward"], [135, 4, 1, "", "full_action_spec"], [135, 4, 1, "", "full_done_spec"], [135, 4, 1, "", "full_reward_spec"], [135, 4, 1, "", "full_state_spec"], [135, 1, 1, "", "get_buffer"], [135, 1, 1, "", "get_extra_state"], [135, 1, 1, "", "get_parameter"], [135, 1, 1, "", "get_submodule"], [135, 1, 1, "", "half"], [135, 4, 1, "", "input_spec"], [135, 1, 1, "", "ipu"], [135, 1, 1, "", "load_state_dict"], [135, 1, 1, "", "maybe_reset"], [135, 1, 1, "", "modules"], [135, 1, 1, "", "mtia"], [135, 1, 1, "", "named_buffers"], [135, 1, 1, "", "named_children"], [135, 1, 1, "", "named_modules"], [135, 1, 1, "", "named_parameters"], [135, 4, 1, "", "observation_spec"], [135, 4, 1, "", "output_spec"], [135, 1, 1, "", "parameters"], [135, 1, 1, "", "rand_action"], [135, 1, 1, "", "rand_step"], [135, 1, 1, "", "register_backward_hook"], [135, 1, 1, "", "register_buffer"], [135, 1, 1, "", "register_forward_hook"], [135, 1, 1, "", "register_forward_pre_hook"], [135, 1, 1, "", "register_full_backward_hook"], [135, 1, 1, "", "register_full_backward_pre_hook"], [135, 1, 1, "", "register_gym"], [135, 1, 1, "", "register_load_state_dict_post_hook"], [135, 1, 1, "", "register_load_state_dict_pre_hook"], [135, 1, 1, "", "register_module"], [135, 1, 1, "", "register_parameter"], [135, 1, 1, "", "register_state_dict_post_hook"], [135, 1, 1, "", "register_state_dict_pre_hook"], [135, 1, 1, "", "requires_grad_"], [135, 1, 1, "", "reset"], [135, 4, 1, "", "reset_keys"], [135, 4, 1, "", "reward_key"], [135, 4, 1, "", "reward_keys"], [135, 4, 1, "", "reward_spec"], [135, 1, 1, "", "rollout"], [135, 1, 1, "", "set_extra_state"], [135, 1, 1, "", "set_seed"], [135, 1, 1, "", "set_submodule"], [135, 4, 1, "", "shape"], [135, 1, 1, "", "share_memory"], [135, 4, 1, "", "specs"], [135, 1, 1, "", "state_dict"], [135, 4, 1, "", "state_keys"], [135, 4, 1, "", "state_spec"], [135, 1, 1, "", "step"], [135, 1, 1, "", "step_and_maybe_reset"], [135, 1, 1, "", "to"], [135, 1, 1, "", "to_empty"], [135, 1, 1, "", "train"], [135, 1, 1, "", "type"], [135, 1, 1, "", "update_kwargs"], [135, 1, 1, "", "xpu"], [135, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[136, 4, 1, "", "action_key"], [136, 4, 1, "", "action_keys"], [136, 4, 1, "", "action_spec"], [136, 1, 1, "", "add_module"], [136, 1, 1, "", "add_truncated_keys"], [136, 1, 1, "", "append_transform"], [136, 1, 1, "", "apply"], [136, 4, 1, "", "batch_size"], [136, 1, 1, "", "bfloat16"], [136, 1, 1, "", "buffers"], [136, 1, 1, "", "children"], [136, 1, 1, "", "compile"], [136, 1, 1, "", "cpu"], [136, 1, 1, "", "cuda"], [136, 4, 1, "", "done_key"], [136, 4, 1, "", "done_keys"], [136, 4, 1, "", "done_keys_groups"], [136, 4, 1, "", "done_spec"], [136, 1, 1, "", "double"], [136, 1, 1, "", "empty_cache"], [136, 1, 1, "", "eval"], [136, 1, 1, "", "extra_repr"], [136, 1, 1, "", "fake_tensordict"], [136, 1, 1, "", "float"], [136, 1, 1, "", "forward"], [136, 4, 1, "", "full_action_spec"], [136, 4, 1, "", "full_done_spec"], [136, 4, 1, "", "full_reward_spec"], [136, 4, 1, "", "full_state_spec"], [136, 1, 1, "", "gen_params"], [136, 1, 1, "", "get_buffer"], [136, 1, 1, "", "get_extra_state"], [136, 1, 1, "", "get_parameter"], [136, 1, 1, "", "get_submodule"], [136, 1, 1, "", "half"], [136, 4, 1, "", "input_spec"], [136, 1, 1, "", "ipu"], [136, 1, 1, "", "load_state_dict"], [136, 1, 1, "", "maybe_reset"], [136, 1, 1, "", "modules"], [136, 1, 1, "", "mtia"], [136, 1, 1, "", "named_buffers"], [136, 1, 1, "", "named_children"], [136, 1, 1, "", "named_modules"], [136, 1, 1, "", "named_parameters"], [136, 4, 1, "", "observation_spec"], [136, 4, 1, "", "output_spec"], [136, 1, 1, "", "parameters"], [136, 1, 1, "", "rand_action"], [136, 1, 1, "", "rand_step"], [136, 1, 1, "", "register_backward_hook"], [136, 1, 1, "", "register_buffer"], [136, 1, 1, "", "register_forward_hook"], [136, 1, 1, "", "register_forward_pre_hook"], [136, 1, 1, "", "register_full_backward_hook"], [136, 1, 1, "", "register_full_backward_pre_hook"], [136, 1, 1, "", "register_gym"], [136, 1, 1, "", "register_load_state_dict_post_hook"], [136, 1, 1, "", "register_load_state_dict_pre_hook"], [136, 1, 1, "", "register_module"], [136, 1, 1, "", "register_parameter"], [136, 1, 1, "", "register_state_dict_post_hook"], [136, 1, 1, "", "register_state_dict_pre_hook"], [136, 1, 1, "", "requires_grad_"], [136, 1, 1, "", "reset"], [136, 4, 1, "", "reset_keys"], [136, 4, 1, "", "reward_key"], [136, 4, 1, "", "reward_keys"], [136, 4, 1, "", "reward_spec"], [136, 1, 1, "", "rollout"], [136, 1, 1, "", "set_extra_state"], [136, 1, 1, "", "set_seed"], [136, 1, 1, "", "set_submodule"], [136, 4, 1, "", "shape"], [136, 1, 1, "", "share_memory"], [136, 4, 1, "", "specs"], [136, 1, 1, "", "state_dict"], [136, 4, 1, "", "state_keys"], [136, 4, 1, "", "state_spec"], [136, 1, 1, "", "step"], [136, 1, 1, "", "step_and_maybe_reset"], [136, 1, 1, "", "to"], [136, 1, 1, "", "to_empty"], [136, 1, 1, "", "train"], [136, 1, 1, "", "type"], [136, 1, 1, "", "xpu"], [136, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[142, 4, 1, "", "action_key"], [142, 4, 1, "", "action_keys"], [142, 4, 1, "", "action_spec"], [142, 1, 1, "", "add_module"], [142, 1, 1, "", "add_truncated_keys"], [142, 1, 1, "", "append_transform"], [142, 1, 1, "", "apply"], [142, 4, 1, "", "batch_locked"], [142, 4, 1, "", "batch_size"], [142, 1, 1, "", "bfloat16"], [142, 1, 1, "", "buffers"], [142, 1, 1, "", "children"], [142, 1, 1, "", "compile"], [142, 1, 1, "", "cpu"], [142, 1, 1, "", "cuda"], [142, 4, 1, "", "done_key"], [142, 4, 1, "", "done_keys"], [142, 4, 1, "", "done_keys_groups"], [142, 4, 1, "", "done_spec"], [142, 1, 1, "", "double"], [142, 1, 1, "", "empty_cache"], [142, 1, 1, "", "eval"], [142, 1, 1, "", "extra_repr"], [142, 1, 1, "", "fake_tensordict"], [142, 1, 1, "", "float"], [142, 1, 1, "", "forward"], [142, 4, 1, "", "full_action_spec"], [142, 4, 1, "", "full_done_spec"], [142, 4, 1, "", "full_reward_spec"], [142, 4, 1, "", "full_state_spec"], [142, 1, 1, "", "get_buffer"], [142, 1, 1, "", "get_extra_state"], [142, 1, 1, "", "get_parameter"], [142, 1, 1, "", "get_submodule"], [142, 1, 1, "", "half"], [142, 4, 1, "", "input_spec"], [142, 1, 1, "", "ipu"], [142, 1, 1, "", "load_state_dict"], [142, 1, 1, "", "maybe_reset"], [142, 1, 1, "", "modules"], [142, 1, 1, "", "mtia"], [142, 1, 1, "", "named_buffers"], [142, 1, 1, "", "named_children"], [142, 1, 1, "", "named_modules"], [142, 1, 1, "", "named_parameters"], [142, 4, 1, "", "observation_spec"], [142, 4, 1, "", "output_spec"], [142, 1, 1, "", "parameters"], [142, 1, 1, "", "rand_action"], [142, 1, 1, "", "rand_step"], [142, 1, 1, "", "register_backward_hook"], [142, 1, 1, "", "register_buffer"], [142, 1, 1, "", "register_forward_hook"], [142, 1, 1, "", "register_forward_pre_hook"], [142, 1, 1, "", "register_full_backward_hook"], [142, 1, 1, "", "register_full_backward_pre_hook"], [142, 1, 1, "", "register_gym"], [142, 1, 1, "", "register_load_state_dict_post_hook"], [142, 1, 1, "", "register_load_state_dict_pre_hook"], [142, 1, 1, "", "register_module"], [142, 1, 1, "", "register_parameter"], [142, 1, 1, "", "register_state_dict_post_hook"], [142, 1, 1, "", "register_state_dict_pre_hook"], [142, 1, 1, "", "requires_grad_"], [142, 1, 1, "", "reset"], [142, 4, 1, "", "reset_keys"], [142, 4, 1, "", "reward_key"], [142, 4, 1, "", "reward_keys"], [142, 4, 1, "", "reward_spec"], [142, 1, 1, "", "rollout"], [142, 1, 1, "", "set_extra_state"], [142, 1, 1, "", "set_seed"], [142, 1, 1, "", "set_submodule"], [142, 4, 1, "", "shape"], [142, 1, 1, "", "share_memory"], [142, 4, 1, "", "specs"], [142, 1, 1, "", "state_dict"], [142, 4, 1, "", "state_keys"], [142, 4, 1, "", "state_spec"], [142, 1, 1, "", "step"], [142, 1, 1, "", "step_and_maybe_reset"], [142, 1, 1, "", "to"], [142, 1, 1, "", "to_empty"], [142, 1, 1, "", "train"], [142, 1, 1, "", "type"], [142, 1, 1, "", "update_kwargs"], [142, 1, 1, "", "xpu"], [142, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[143, 4, 1, "", "action_key"], [143, 4, 1, "", "action_keys"], [143, 4, 1, "", "action_spec"], [143, 1, 1, "", "add_module"], [143, 1, 1, "", "add_truncated_keys"], [143, 1, 1, "", "append_transform"], [143, 1, 1, "", "apply"], [143, 4, 1, "", "batch_size"], [143, 1, 1, "", "bfloat16"], [143, 1, 1, "", "buffers"], [143, 1, 1, "", "children"], [143, 1, 1, "", "compile"], [143, 1, 1, "", "cpu"], [143, 1, 1, "", "cuda"], [143, 4, 1, "", "done_key"], [143, 4, 1, "", "done_keys"], [143, 4, 1, "", "done_keys_groups"], [143, 4, 1, "", "done_spec"], [143, 1, 1, "", "double"], [143, 1, 1, "", "empty_cache"], [143, 1, 1, "", "eval"], [143, 1, 1, "", "extra_repr"], [143, 1, 1, "", "fake_tensordict"], [143, 1, 1, "", "float"], [143, 1, 1, "", "forward"], [143, 4, 1, "", "full_action_spec"], [143, 4, 1, "", "full_done_spec"], [143, 4, 1, "", "full_reward_spec"], [143, 4, 1, "", "full_state_spec"], [143, 1, 1, "", "get_buffer"], [143, 1, 1, "", "get_extra_state"], [143, 1, 1, "", "get_parameter"], [143, 1, 1, "", "get_submodule"], [143, 1, 1, "", "half"], [143, 4, 1, "", "input_spec"], [143, 1, 1, "", "ipu"], [143, 1, 1, "", "load_state_dict"], [143, 1, 1, "", "maybe_reset"], [143, 1, 1, "", "modules"], [143, 1, 1, "", "mtia"], [143, 1, 1, "", "named_buffers"], [143, 1, 1, "", "named_children"], [143, 1, 1, "", "named_modules"], [143, 1, 1, "", "named_parameters"], [143, 4, 1, "", "observation_spec"], [143, 4, 1, "", "output_spec"], [143, 1, 1, "", "parameters"], [143, 1, 1, "", "rand_action"], [143, 1, 1, "", "rand_step"], [143, 1, 1, "", "register_backward_hook"], [143, 1, 1, "", "register_buffer"], [143, 1, 1, "", "register_forward_hook"], [143, 1, 1, "", "register_forward_pre_hook"], [143, 1, 1, "", "register_full_backward_hook"], [143, 1, 1, "", "register_full_backward_pre_hook"], [143, 1, 1, "", "register_gym"], [143, 1, 1, "", "register_load_state_dict_post_hook"], [143, 1, 1, "", "register_load_state_dict_pre_hook"], [143, 1, 1, "", "register_module"], [143, 1, 1, "", "register_parameter"], [143, 1, 1, "", "register_state_dict_post_hook"], [143, 1, 1, "", "register_state_dict_pre_hook"], [143, 1, 1, "", "requires_grad_"], [143, 1, 1, "", "reset"], [143, 4, 1, "", "reset_keys"], [143, 4, 1, "", "reward_key"], [143, 4, 1, "", "reward_keys"], [143, 4, 1, "", "reward_spec"], [143, 1, 1, "", "rollout"], [143, 1, 1, "", "set_extra_state"], [143, 1, 1, "", "set_seed"], [143, 1, 1, "", "set_submodule"], [143, 4, 1, "", "shape"], [143, 1, 1, "", "share_memory"], [143, 4, 1, "", "specs"], [143, 1, 1, "", "state_dict"], [143, 4, 1, "", "state_keys"], [143, 4, 1, "", "state_spec"], [143, 1, 1, "", "step"], [143, 1, 1, "", "step_and_maybe_reset"], [143, 1, 1, "", "to"], [143, 1, 1, "", "to_empty"], [143, 1, 1, "", "train"], [143, 1, 1, "", "type"], [143, 1, 1, "", "xpu"], [143, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[148, 2, 1, "", "DreamerDecoder"], [149, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[151, 0, 1, "", "ActionDiscretizer"], [152, 0, 1, "", "ActionMask"], [153, 0, 1, "", "AutoResetEnv"], [154, 0, 1, "", "AutoResetTransform"], [155, 0, 1, "", "BatchSizeTransform"], [156, 0, 1, "", "BinarizeReward"], [157, 0, 1, "", "BurnInTransform"], [158, 0, 1, "", "CatFrames"], [159, 0, 1, "", "CatTensors"], [160, 0, 1, "", "CenterCrop"], [161, 0, 1, "", "ClipTransform"], [162, 0, 1, "", "Compose"], [163, 0, 1, "", "Crop"], [164, 0, 1, "", "DTypeCastTransform"], [165, 0, 1, "", "DeviceCastTransform"], [166, 0, 1, "", "DiscreteActionProjection"], [167, 0, 1, "", "DoubleToFloat"], [168, 0, 1, "", "EndOfLifeTransform"], [169, 0, 1, "", "ExcludeTransform"], [170, 0, 1, "", "FiniteTensorDictCheck"], [171, 0, 1, "", "FlattenObservation"], [172, 0, 1, "", "FrameSkipTransform"], [173, 0, 1, "", "GrayScale"], [174, 0, 1, "", "InitTracker"], [175, 0, 1, "", "KLRewardTransform"], [176, 0, 1, "", "NoopResetEnv"], [177, 0, 1, "", "ObservationNorm"], [178, 0, 1, "", "ObservationTransform"], [179, 0, 1, "", "PermuteTransform"], [180, 0, 1, "", "PinMemoryTransform"], [181, 0, 1, "", "R3MTransform"], [182, 0, 1, "", "RandomCropTensorDict"], [183, 0, 1, "", "RemoveEmptySpecs"], [184, 0, 1, "", "RenameTransform"], [185, 0, 1, "", "Resize"], [186, 0, 1, "", "Reward2GoTransform"], [187, 0, 1, "", "RewardClipping"], [188, 0, 1, "", "RewardScaling"], [189, 0, 1, "", "RewardSum"], [190, 0, 1, "", "SelectTransform"], [191, 0, 1, "", "SignTransform"], [192, 0, 1, "", "SqueezeTransform"], [193, 0, 1, "", "StepCounter"], [194, 0, 1, "", "TargetReturn"], [195, 0, 1, "", "TensorDictPrimer"], [196, 0, 1, "", "TimeMaxPool"], [197, 0, 1, "", "ToTensorImage"], [198, 0, 1, "", "Transform"], [199, 0, 1, "", "TransformedEnv"], [200, 0, 1, "", "UnsqueezeTransform"], [201, 0, 1, "", "VC1Transform"], [202, 0, 1, "", "VIPRewardTransform"], [203, 0, 1, "", "VIPTransform"], [204, 0, 1, "", "VecGymEnvTransform"], [205, 0, 1, "", "VecNorm"], [206, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[151, 0, 1, "", "SamplingStrategy"], [151, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[152, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[153, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[154, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "transform_env_batch_size"], [155, 1, 1, "", "transform_input_spec"], [155, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[156, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[157, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[161, 1, 1, "", "transform_observation_spec"], [161, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[162, 1, 1, "", "append"], [162, 1, 1, "", "forward"], [162, 1, 1, "", "insert"], [162, 1, 1, "", "to"], [162, 1, 1, "", "transform_env_batch_size"], [162, 1, 1, "", "transform_env_device"], [162, 1, 1, "", "transform_input_spec"], [162, 1, 1, "", "transform_observation_spec"], [162, 1, 1, "", "transform_output_spec"], [162, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[163, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"], [164, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[165, 1, 1, "", "forward"], [165, 1, 1, "", "transform_done_spec"], [165, 1, 1, "", "transform_env_device"], [165, 1, 1, "", "transform_input_spec"], [165, 1, 1, "", "transform_observation_spec"], [165, 1, 1, "", "transform_output_spec"], [165, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[166, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[168, 1, 1, "", "forward"], [168, 1, 1, "", "register_keys"], [168, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[170, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[172, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[177, 1, 1, "", "init_stats"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[180, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[181, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[182, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "transform_input_spec"], [184, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[186, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[187, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[188, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_input_spec"], [189, 1, 1, "", "transform_observation_spec"], [189, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[191, 1, 1, "", "transform_observation_spec"], [191, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[193, 1, 1, "", "forward"], [193, 1, 1, "", "transform_input_spec"], [193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[194, 1, 1, "", "forward"], [194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "to"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[198, 4, 1, "", "container"], [198, 1, 1, "", "forward"], [198, 4, 1, "", "parent"], [198, 1, 1, "", "to"], [198, 1, 1, "", "transform_done_spec"], [198, 1, 1, "", "transform_env_batch_size"], [198, 1, 1, "", "transform_env_device"], [198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_observation_spec"], [198, 1, 1, "", "transform_output_spec"], [198, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[199, 1, 1, "", "add_truncated_keys"], [199, 1, 1, "", "append_transform"], [199, 4, 1, "", "batch_locked"], [199, 4, 1, "", "batch_size"], [199, 1, 1, "", "empty_cache"], [199, 1, 1, "", "eval"], [199, 4, 1, "", "input_spec"], [199, 1, 1, "", "insert_transform"], [199, 1, 1, "", "load_state_dict"], [199, 4, 1, "", "output_spec"], [199, 1, 1, "", "set_missing_tolerance"], [199, 1, 1, "", "set_seed"], [199, 1, 1, "", "state_dict"], [199, 1, 1, "", "to"], [199, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "make_noload_model"], [201, 1, 1, "", "to"], [201, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[203, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[205, 1, 1, "", "build_td_for_shared_vecnorm"], [205, 1, 1, "", "forward"], [205, 1, 1, "", "freeze"], [205, 1, 1, "", "frozen_copy"], [205, 1, 1, "", "get_extra_state"], [205, 4, 1, "", "loc"], [205, 4, 1, "", "scale"], [205, 1, 1, "", "set_extra_state"], [205, 4, 1, "", "standard_normal"], [205, 1, 1, "", "to_observation_norm"], [205, 1, 1, "", "transform_observation_spec"], [205, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[207, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[207, 1, 1, "", "add_module"], [207, 1, 1, "", "apply"], [207, 1, 1, "", "bfloat16"], [207, 1, 1, "", "buffers"], [207, 1, 1, "", "children"], [207, 1, 1, "", "compile"], [207, 4, 1, "", "container"], [207, 1, 1, "", "cpu"], [207, 1, 1, "", "cuda"], [207, 1, 1, "", "double"], [207, 1, 1, "", "eval"], [207, 1, 1, "", "extra_repr"], [207, 1, 1, "", "float"], [207, 1, 1, "", "forward"], [207, 1, 1, "", "get_buffer"], [207, 1, 1, "", "get_extra_state"], [207, 1, 1, "", "get_parameter"], [207, 1, 1, "", "get_submodule"], [207, 1, 1, "", "half"], [207, 1, 1, "", "ipu"], [207, 1, 1, "", "load_state_dict"], [207, 1, 1, "", "modules"], [207, 1, 1, "", "mtia"], [207, 4, 1, "", "n_steps"], [207, 1, 1, "", "named_buffers"], [207, 1, 1, "", "named_children"], [207, 1, 1, "", "named_modules"], [207, 1, 1, "", "named_parameters"], [207, 1, 1, "", "parameters"], [207, 4, 1, "", "parent"], [207, 1, 1, "", "register_backward_hook"], [207, 1, 1, "", "register_buffer"], [207, 1, 1, "", "register_forward_hook"], [207, 1, 1, "", "register_forward_pre_hook"], [207, 1, 1, "", "register_full_backward_hook"], [207, 1, 1, "", "register_full_backward_pre_hook"], [207, 1, 1, "", "register_load_state_dict_post_hook"], [207, 1, 1, "", "register_load_state_dict_pre_hook"], [207, 1, 1, "", "register_module"], [207, 1, 1, "", "register_parameter"], [207, 1, 1, "", "register_state_dict_post_hook"], [207, 1, 1, "", "register_state_dict_pre_hook"], [207, 1, 1, "", "requires_grad_"], [207, 1, 1, "", "set_extra_state"], [207, 1, 1, "", "set_submodule"], [207, 1, 1, "", "share_memory"], [207, 1, 1, "", "state_dict"], [207, 1, 1, "", "to"], [207, 1, 1, "", "to_empty"], [207, 1, 1, "", "train"], [207, 1, 1, "", "transform_done_spec"], [207, 1, 1, "", "transform_env_batch_size"], [207, 1, 1, "", "transform_env_device"], [207, 1, 1, "", "transform_input_spec"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "transform_output_spec"], [207, 1, 1, "", "transform_reward_spec"], [207, 1, 1, "", "type"], [207, 1, 1, "", "xpu"], [207, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[208, 2, 1, "", "RandomPolicy"], [209, 2, 1, "", "check_env_specs"], [210, 2, 1, "", "exploration_mode"], [211, 2, 1, "", "exploration_type"], [212, 2, 1, "", "get_available_libraries"], [213, 2, 1, "", "make_composite_from_td"], [214, 2, 1, "", "set_exploration_mode"], [215, 2, 1, "", "set_exploration_type"], [216, 2, 1, "", "step_mdp"], [217, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[218, 0, 1, "", "BatchRenorm1d"], [219, 0, 1, "", "CEMPlanner"], [220, 0, 1, "", "Conv3dNet"], [221, 0, 1, "", "ConvNet"], [222, 0, 1, "", "DTActor"], [223, 0, 1, "", "DdpgCnnActor"], [224, 0, 1, "", "DdpgCnnQNet"], [225, 0, 1, "", "DdpgMlpActor"], [226, 0, 1, "", "DdpgMlpQNet"], [227, 0, 1, "", "DecisionTransformer"], [228, 0, 1, "", "Delta"], [229, 0, 1, "", "DistributionalDQNnet"], [230, 0, 1, "", "DistributionalQValueHook"], [231, 0, 1, "", "DreamerActor"], [232, 0, 1, "", "DuelingCnnDQNet"], [233, 0, 1, "", "GRU"], [234, 0, 1, "", "GRUCell"], [235, 0, 1, "", "GRUModule"], [236, 0, 1, "", "IndependentNormal"], [237, 0, 1, "", "LSTM"], [238, 0, 1, "", "LSTMCell"], [239, 0, 1, "", "LSTMModule"], [240, 0, 1, "", "MLP"], [241, 0, 1, "", "MPCPlannerBase"], [242, 0, 1, "", "MPPIPlanner"], [243, 0, 1, "", "MaskedCategorical"], [244, 0, 1, "", "MaskedOneHotCategorical"], [245, 0, 1, "", "MultiAgentConvNet"], [246, 0, 1, "", "MultiAgentMLP"], [247, 0, 1, "", "MultiAgentNetBase"], [248, 0, 1, "", "NoisyLazyLinear"], [249, 0, 1, "", "NoisyLinear"], [250, 0, 1, "", "NormalParamWrapper"], [251, 0, 1, "", "ObsDecoder"], [252, 0, 1, "", "ObsEncoder"], [253, 0, 1, "", "OneHotCategorical"], [254, 0, 1, "", "OnlineDTActor"], [255, 0, 1, "", "QMixer"], [256, 0, 1, "", "QValueHook"], [257, 0, 1, "", "RSSMPosterior"], [258, 0, 1, "", "RSSMPrior"], [259, 0, 1, "", "Squeeze2dLayer"], [260, 0, 1, "", "SqueezeLayer"], [261, 0, 1, "", "TanhDelta"], [262, 0, 1, "", "TanhNormal"], [263, 0, 1, "", "TruncatedNormal"], [264, 0, 1, "", "VDNMixer"], [265, 0, 1, "", "VmapModule"], [266, 0, 1, "", "reset_noise"]], "torchrl.modules.BatchRenorm1d": [[218, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[219, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[220, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[221, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[222, 1, 1, "", "default_config"], [222, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[223, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[224, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[225, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[226, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[227, 0, 1, "", "DTConfig"], [227, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[228, 1, 1, "", "log_prob"], [228, 4, 1, "", "mean"], [228, 4, 1, "", "mode"], [228, 1, 1, "", "rsample"], [228, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[229, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[231, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[232, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[233, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[234, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[235, 1, 1, "", "forward"], [235, 1, 1, "id0", "make_tensordict_primer"], [235, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[236, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[237, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[238, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[239, 1, 1, "", "forward"], [239, 1, 1, "id0", "make_tensordict_primer"], [239, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[240, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[242, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[243, 1, 1, "", "log_prob"], [243, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[244, 1, 1, "", "log_prob"], [244, 1, 1, "", "rsample"], [244, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "from_stateful_net"], [247, 1, 1, "", "get_stateful_net"], [247, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[248, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[250, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[251, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[252, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[253, 1, 1, "", "log_prob"], [253, 4, 1, "", "mode"], [253, 1, 1, "", "rsample"], [253, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[254, 1, 1, "", "default_config"], [254, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[255, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[257, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[258, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[260, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[261, 4, 1, "", "mean"], [261, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[262, 1, 1, "", "get_mode"], [262, 4, 1, "", "mean"], [262, 4, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[263, 1, 1, "", "log_prob"], [263, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[264, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[265, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[267, 0, 1, "", "Actor"], [268, 0, 1, "", "ActorCriticOperator"], [269, 0, 1, "", "ActorCriticWrapper"], [270, 0, 1, "", "ActorValueOperator"], [271, 0, 1, "", "AdditiveGaussianModule"], [272, 0, 1, "", "AdditiveGaussianWrapper"], [273, 0, 1, "", "DecisionTransformerInferenceWrapper"], [274, 0, 1, "", "DistributionalQValueActor"], [275, 0, 1, "", "DistributionalQValueModule"], [276, 0, 1, "", "EGreedyModule"], [277, 0, 1, "", "EGreedyWrapper"], [278, 0, 1, "", "LMHeadActorValueOperator"], [279, 0, 1, "", "MultiStepActorWrapper"], [280, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [281, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [282, 0, 1, "", "ProbabilisticActor"], [283, 0, 1, "", "QValueActor"], [284, 0, 1, "", "QValueModule"], [285, 0, 1, "", "SafeModule"], [286, 0, 1, "", "SafeProbabilisticModule"], [287, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [288, 0, 1, "", "SafeSequential"], [289, 0, 1, "", "TanhModule"], [290, 0, 1, "", "ValueOperator"], [291, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[268, 1, 1, "", "get_critic_operator"], [268, 1, 1, "", "get_policy_head"], [268, 1, 1, "", "get_value_head"], [268, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[269, 1, 1, "", "get_policy_head"], [269, 1, 1, "", "get_policy_operator"], [269, 1, 1, "", "get_value_head"], [269, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[270, 1, 1, "", "get_policy_head"], [270, 1, 1, "", "get_policy_operator"], [270, 1, 1, "", "get_value_head"], [270, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianModule": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "mask_context"], [273, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[275, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[279, 1, 1, "", "forward"], [279, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[284, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[285, 1, 1, "", "random"], [285, 1, 1, "", "random_sample"], [285, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[286, 1, 1, "", "random"], [286, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[289, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[291, 1, 1, "", "get_reward_operator"], [291, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[292, 0, 1, "", "biased_softplus"], [293, 0, 1, "", "get_primers_from_module"], [294, 0, 1, "", "inv_softplus"], [295, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[292, 1, 1, "", "forward"]], "torchrl.objectives": [[296, 0, 1, "", "A2CLoss"], [297, 0, 1, "", "CQLLoss"], [298, 0, 1, "", "ClipPPOLoss"], [299, 0, 1, "", "CrossQLoss"], [300, 0, 1, "", "DDPGLoss"], [301, 0, 1, "", "DQNLoss"], [302, 0, 1, "", "DTLoss"], [303, 0, 1, "", "DiscreteCQLLoss"], [304, 0, 1, "", "DiscreteIQLLoss"], [305, 0, 1, "", "DiscreteSACLoss"], [306, 0, 1, "", "DistributionalDQNLoss"], [307, 0, 1, "", "DreamerActorLoss"], [308, 0, 1, "", "DreamerModelLoss"], [309, 0, 1, "", "DreamerValueLoss"], [310, 0, 1, "", "GAILLoss"], [311, 0, 1, "", "HardUpdate"], [312, 0, 1, "", "IQLLoss"], [313, 0, 1, "", "KLPENPPOLoss"], [314, 0, 1, "", "LossModule"], [315, 0, 1, "", "OnlineDTLoss"], [316, 0, 1, "", "PPOLoss"], [317, 0, 1, "", "REDQLoss"], [318, 0, 1, "", "ReinforceLoss"], [319, 0, 1, "", "SACLoss"], [320, 0, 1, "", "SoftUpdate"], [321, 0, 1, "", "TD3BCLoss"], [322, 0, 1, "", "TD3Loss"], [323, 0, 1, "", "ValueEstimators"], [324, 0, 1, "", "default_value_kwargs"], [325, 0, 1, "", "distance_loss"], [326, 0, 1, "", "hold_out_net"], [327, 0, 1, "", "hold_out_params"], [329, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[296, 1, 1, "", "forward"], [296, 4, 1, "", "functional"], [296, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[298, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[299, 1, 1, "", "actor_loss"], [299, 1, 1, "", "alpha_loss"], [299, 1, 1, "", "forward"], [299, 1, 1, "", "load_state_dict"], [299, 1, 1, "", "make_value_estimator"], [299, 1, 1, "", "qvalue_loss"], [299, 1, 1, "", "state_dict"], [299, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[300, 1, 1, "", "forward"], [300, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[301, 1, 1, "", "forward"], [301, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[302, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[303, 1, 1, "", "forward"], [303, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[304, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[305, 1, 1, "", "forward"], [305, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[306, 1, 1, "", "forward"], [306, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[308, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[309, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[310, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[312, 1, 1, "", "forward"], [312, 1, 1, "", "loss_value_diff"], [312, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[313, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[314, 1, 1, "", "convert_to_functional"], [314, 1, 1, "", "forward"], [314, 1, 1, "", "from_stateful_net"], [314, 4, 1, "", "functional"], [314, 1, 1, "", "get_stateful_net"], [314, 1, 1, "", "make_value_estimator"], [314, 1, 1, "", "named_parameters"], [314, 1, 1, "", "parameters"], [314, 1, 1, "", "set_keys"], [314, 4, 1, "", "value_estimator"], [314, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[315, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[316, 1, 1, "", "forward"], [316, 4, 1, "", "functional"], [316, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[318, 1, 1, "", "forward"], [318, 4, 1, "", "functional"], [318, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "load_state_dict"], [319, 1, 1, "", "make_value_estimator"], [319, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[321, 1, 1, "", "actor_loss"], [321, 1, 1, "", "forward"], [321, 1, 1, "", "make_value_estimator"], [321, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[322, 1, 1, "", "forward"], [322, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[328, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[328, 1, 1, "", "forward"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[330, 0, 1, "", "GAE"], [331, 0, 1, "", "TD0Estimator"], [332, 0, 1, "", "TD1Estimator"], [333, 0, 1, "", "TDLambdaEstimator"], [334, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[330, 1, 1, "", "forward"], [330, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[331, 1, 1, "", "forward"], [331, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[332, 1, 1, "", "forward"], [332, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[333, 1, 1, "", "forward"], [333, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[334, 1, 1, "", "forward"], [334, 1, 1, "", "set_keys"], [334, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[335, 0, 1, "", "generalized_advantage_estimate"], [336, 0, 1, "", "reward2go"], [337, 0, 1, "", "td0_advantage_estimate"], [338, 0, 1, "", "td0_return_estimate"], [339, 0, 1, "", "td1_advantage_estimate"], [340, 0, 1, "", "td1_return_estimate"], [341, 0, 1, "", "td_lambda_advantage_estimate"], [342, 0, 1, "", "td_lambda_return_estimate"], [343, 0, 1, "", "vec_generalized_advantage_estimate"], [344, 0, 1, "", "vec_td1_advantage_estimate"], [345, 0, 1, "", "vec_td1_return_estimate"], [346, 0, 1, "", "vec_td_lambda_advantage_estimate"], [347, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[348, 2, 1, "", "PixelRenderTransform"], [349, 2, 1, "", "TensorDictRecorder"], [350, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[351, 2, 1, "", "Logger"], [353, 2, 1, "", "generate_exp_name"], [354, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[352, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[355, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[356, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[357, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[358, 0, 1, "", "BatchSubSampler"], [359, 0, 1, "", "ClearCudaCache"], [360, 0, 1, "", "CountFramesLog"], [361, 0, 1, "", "LogReward"], [362, 0, 1, "", "OptimizerHook"], [363, 0, 1, "", "Recorder"], [364, 0, 1, "", "ReplayBufferTrainer"], [365, 0, 1, "", "RewardNormalizer"], [366, 0, 1, "", "SelectKeys"], [367, 0, 1, "", "Trainer"], [368, 0, 1, "", "TrainerHookBase"], [369, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[358, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[359, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[360, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[361, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[362, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[363, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[364, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[365, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[366, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[368, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[369, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[370, 2, 1, "", "correct_for_frame_skip"], [371, 2, 1, "", "get_stats_random_rollout"], [372, 2, 1, "", "make_collector_offpolicy"], [373, 2, 1, "", "make_collector_onpolicy"], [374, 2, 1, "", "make_dqn_loss"], [375, 2, 1, "", "make_replay_buffer"], [376, 2, 1, "", "make_target_updater"], [377, 2, 1, "", "make_trainer"], [378, 2, 1, "", "parallel_env_constructor"], [379, 2, 1, "", "sync_async_collector"], [380, 2, 1, "", "sync_sync_collector"], [381, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 385, 386, 387, 388, 390, 391, 392, 395, 402, 403, 404, 408, 409], "instal": [0, 6, 7, 408], "get": [0, 394, 395, 396, 397, 398, 399], "start": [0, 394, 395, 396, 397, 398, 399], "tutori": [0, 392, 402, 403], "basic": [0, 406], "intermedi": [0, 8], "advanc": 0, "refer": [0, 383], "knowledg": [0, 384], "base": [0, 2, 7, 384], "indic": 0, "tabl": 0, "collector": [1, 390, 391, 392, 393, 397, 399, 402, 403, 408], "packag": [1, 2, 3, 385, 386, 387, 388], "batch": [1, 390, 404, 406], "size": [1, 390, 406], "replai": [1, 2, 390, 391, 392, 393, 397, 399, 402, 403, 406, 408], "buffer": [1, 2, 390, 391, 392, 393, 397, 399, 402, 403, 406, 408], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 390, 391, 392, 397, 399, 402, 403, 408], "distribut": [1, 385], "helper": [1, 3], "function": [1, 4, 386, 391, 392, 396, 402, 403, 408], "compos": [2, 162], "support": 2, "type": 2, "choos": 2, "storag": [2, 101, 390, 397, 406], "sampl": [2, 406], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 391, 406], "trajectori": [2, 406], "checkpoint": [2, 387], "episod": [2, 4], "format": 2, "ted": [2, 394], "The": [2, 390], "rational": 2, "behind": 2, "structur": [2, 406], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 385, 406, 408], "special": [2, 395, 408], "case": 2, "footnot": 2, "multi": [2, 3, 385, 386, 401, 402, 403], "agent": [2, 3, 4, 385, 386, 402, 403], "present": 2, "polici": [2, 4, 390, 392, 393, 395, 399, 401, 402, 403, 404], "rnn": 2, "transform": [2, 3, 198, 390, 392, 394, 402, 403, 404, 406, 408, 409], "step": [2, 390, 392, 394, 397, 402, 403, 406, 409], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 62], "numer": 2, "subclass": 2, "categor": [2, 29], "reinforc": [2, 386, 392, 402, 403], "learn": [2, 4, 392, 402, 403], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 385, 386, 387, 402], "env": [3, 404, 408, 409], "vector": [3, 408], "custom": [3, 11, 404, 406], "nativ": 3, "environ": [3, 4, 6, 7, 390, 391, 392, 393, 394, 399, 401, 402, 403, 404, 408, 409], "auto": 3, "reset": [3, 404, 409], "dynam": [3, 4, 406], "spec": [3, 404, 409], "clone": [3, 7], "mask": 3, "action": [3, 4, 393, 404], "record": [3, 363, 387, 390, 398], "video": [3, 11, 398], "domain": [3, 385], "specif": [3, 385, 401], "librari": [3, 408], "thing": [4, 390, 404], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 394, 396, 408], "gener": [4, 11, 385], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 390, 399, 404], "algorithm": [4, 385], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 390, 391, 396, 399], "return": [4, 386], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 408], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 401], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 390, 391, 392], "standard": 4, "explor": [4, 385, 390, 391, 395], "valu": [4, 385, 386, 390, 392, 393, 395], "loss": [4, 390, 391, 392, 393, 399, 402, 403], "earli": 4, "train": [4, 8, 386, 390, 392, 393, 396, 399, 402, 403, 404], "roughli": 4, "uniformli": 4, "random": [4, 386, 402, 403], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 391], "increas": 4, "an": [4, 392, 393, 394, 404], "can": 4, "low": 4, "forward": [4, 390], "model": [4, 385, 390, 391, 393, 396, 405, 408], "also": 4, "us": [4, 6, 9, 393, 405, 406, 408], "offlin": 4, "observ": [4, 390], "space": 4, "effect": [4, 404], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 409], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 390], "render": [7, 11, 399, 402, 403, 409], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 390], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 404], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 391, 406], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": 25, "binarydiscretetensorspec": 26, "bound": 27, "boundedtensorspec": 28, "composit": 30, "compositespec": 31, "constantklcontrol": 32, "discretetensorspec": 33, "flat2t": 34, "h5combin": 35, "h5split": 36, "lazystackedcompositespec": 37, "lazystackedtensorspec": 38, "multicategor": 39, "multidiscretetensorspec": 40, "multionehot": 41, "multionehotdiscretetensorspec": 42, "multistep": 43, "nested2t": 44, "nontensor": 45, "nontensorspec": 46, "onehotdiscretetensorspec": 47, "pairwisedataset": 48, "prioritizedreplaybuff": 49, "promptdata": 50, "prompttensordicttoken": 51, "replaybuff": 52, "rewarddata": 53, "rolloutfrommodel": 54, "stack": 55, "stackedcomposit": 56, "ted2flat": 57, "ted2nest": 58, "tensordictprioritizedreplaybuff": 59, "tensordictreplaybuff": 60, "tensordicttoken": 61, "tokenizeddatasetload": 63, "unbound": 64, "unboundedcontinu": 65, "unboundedcontinuoustensorspec": 66, "unboundeddiscret": 67, "unboundeddiscretetensorspec": 68, "check_no_exclusive_kei": 69, "consolidate_spec": 70, "contains_lazy_spec": 71, "create_infinite_iter": 72, "ataridqnexperiencereplai": 73, "basedatasetexperiencereplai": 74, "d4rlexperiencereplai": 75, "gendgrlexperiencereplai": 76, "minariexperiencereplai": 77, "openmlexperiencereplai": 78, "openxexperiencereplai": 79, "robosetexperiencereplai": 80, "vd4rlexperiencereplai": 81, "get_dataload": 82, "flatstoragecheckpoint": 83, "h5storagecheckpoint": 84, "immutabledatasetwrit": 85, "lazymemmapstorag": 86, "lazytensorstorag": 87, "liststorag": 88, "liststoragecheckpoint": 89, "nestedstoragecheckpoint": 90, "prioritizedsampl": 91, "prioritizedslicesampl": 92, "randomsampl": 93, "replaybufferensembl": 94, "roundrobinwrit": 95, "sampler": 96, "samplerensembl": 97, "samplerwithoutreplac": 98, "slicesampl": 99, "slicesamplerwithoutreplac": 100, "storagecheckpointerbas": 102, "storageensembl": 103, "storageensemblecheckpoint": 104, "tensordictmaxvaluewrit": 105, "tensordictroundrobinwrit": 106, "tensorstorag": 107, "tensorstoragecheckpoint": 108, "writer": 109, "writerensembl": 110, "braxenv": 111, "braxwrapp": 112, "dmcontrolenv": 113, "dmcontrolwrapp": 114, "envbas": [115, 404], "envcreat": 116, "envmetadata": 117, "gymenv": 118, "gymlikeenv": 119, "gymwrapp": 120, "habitatenv": 121, "isaacgymenv": 122, "isaacgymwrapp": 123, "jumanjienv": 124, "jumanjiwrapp": 125, "mogymenv": 126, "mogymwrapp": 127, "marlgroupmaptyp": 128, "meltingpotenv": 129, "meltingpotwrapp": 130, "modelbasedenvbas": 131, "multithreadedenv": 132, "multithreadedenvwrapp": 133, "openmlenv": 134, "parallelenv": 135, "pendulumenv": 136, "pettingzooenv": 137, "pettingzoowrapp": 138, "robohiveenv": 139, "smacv2env": 140, "smacv2wrapp": 141, "serialenv": 142, "tictactoeenv": 143, "vmasenv": 144, "vmaswrapp": 145, "check_marl_group": 146, "gym_backend": 147, "dreamerdecod": 148, "dreamerenv": 149, "set_gym_backend": 150, "actiondiscret": 151, "actionmask": 152, "autoresetenv": 153, "autoresettransform": 154, "batchsizetransform": 155, "binarizereward": 156, "burnintransform": 157, "catfram": [158, 406], "cattensor": 159, "centercrop": 160, "cliptransform": 161, "crop": 163, "dtypecasttransform": 164, "devicecasttransform": 165, "discreteactionproject": 166, "doubletofloat": 167, "endoflifetransform": 168, "excludetransform": 169, "finitetensordictcheck": 170, "flattenobserv": 171, "frameskiptransform": 172, "grayscal": 173, "inittrack": 174, "klrewardtransform": 175, "noopresetenv": 176, "observationnorm": 177, "observationtransform": 178, "permutetransform": 179, "pinmemorytransform": 180, "r3mtransform": 181, "randomcroptensordict": 182, "removeemptyspec": 183, "renametransform": 184, "resiz": 185, "reward2gotransform": 186, "rewardclip": 187, "rewardsc": 188, "rewardsum": 189, "selecttransform": 190, "signtransform": 191, "squeezetransform": 192, "stepcount": 193, "targetreturn": 194, "tensordictprim": 195, "timemaxpool": 196, "totensorimag": 197, "transformedenv": 199, "unsqueezetransform": 200, "vc1transform": 201, "viprewardtransform": 202, "viptransform": 203, "vecgymenvtransform": 204, "vecnorm": [205, 409], "gsdenois": 206, "multisteptransform": 207, "randompolici": 208, "check_env_spec": 209, "exploration_mod": 210, "exploration_typ": 211, "get_available_librari": 212, "make_composite_from_td": 213, "set_exploration_mod": 214, "set_exploration_typ": 215, "step_mdp": 216, "terminated_or_trunc": 217, "batchrenorm1d": 218, "cemplann": 219, "conv3dnet": 220, "convnet": 221, "dtactor": 222, "ddpgcnnactor": 223, "ddpgcnnqnet": 224, "ddpgmlpactor": 225, "ddpgmlpqnet": 226, "decisiontransform": 227, "delta": 228, "distributionaldqnnet": 229, "distributionalqvaluehook": 230, "dreameractor": 231, "duelingcnndqnet": 232, "gru": 233, "grucel": 234, "grumodul": 235, "independentnorm": 236, "lstm": [237, 393], "lstmcell": 238, "lstmmodul": 239, "mlp": [240, 393], "mpcplannerbas": 241, "mppiplann": 242, "maskedcategor": 243, "maskedonehotcategor": 244, "multiagentconvnet": 245, "multiagentmlp": 246, "multiagentnetbas": 247, "noisylazylinear": 248, "noisylinear": 249, "normalparamwrapp": 250, "obsdecod": 251, "obsencod": 252, "onehotcategor": 253, "onlinedtactor": 254, "qmixer": [255, 386], "qvaluehook": 256, "rssmposterior": 257, "rssmprior": 258, "squeeze2dlay": 259, "squeezelay": 260, "tanhdelta": 261, "tanhnorm": 262, "truncatednorm": 263, "vdnmixer": 264, "vmapmodul": 265, "reset_nois": 266, "actor": [267, 385, 390, 395], "actorcriticoper": 268, "actorcriticwrapp": 269, "actorvalueoper": 270, "additivegaussianmodul": 271, "additivegaussianwrapp": 272, "decisiontransformerinferencewrapp": 273, "distributionalqvalueactor": 274, "distributionalqvaluemodul": 275, "egreedymodul": 276, "egreedywrapp": 277, "lmheadactorvalueoper": 278, "multistepactorwrapp": 279, "ornsteinuhlenbeckprocessmodul": 280, "ornsteinuhlenbeckprocesswrapp": 281, "probabilisticactor": 282, "qvalueactor": 283, "qvaluemodul": 284, "safemodul": [285, 385], "safeprobabilisticmodul": 286, "safeprobabilistictensordictsequenti": 287, "safesequenti": 288, "tanhmodul": 289, "valueoper": 290, "worldmodelwrapp": 291, "biased_softplu": 292, "get_primers_from_modul": 293, "inv_softplu": 294, "map": [295, 402], "a2closs": 296, "cqlloss": 297, "clipppoloss": 298, "crossqloss": 299, "ddpgloss": 300, "dqnloss": 301, "dtloss": 302, "discretecqlloss": 303, "discreteiqlloss": 304, "discretesacloss": 305, "distributionaldqnloss": 306, "dreameractorloss": 307, "dreamermodelloss": 308, "dreamervalueloss": 309, "gailloss": 310, "hardupd": 311, "iqlloss": 312, "klpenppoloss": 313, "lossmodul": [314, 390, 396], "onlinedtloss": 315, "ppoloss": 316, "redqloss": 317, "reinforceloss": 318, "sacloss": 319, "softupd": 320, "td3bcloss": 321, "td3loss": 322, "valueestim": 323, "default_value_kwarg": 324, "distance_loss": 325, "hold_out_net": 326, "hold_out_param": 327, "qmixerloss": 328, "next_state_valu": 329, "gae": 330, "td0estim": 331, "td1estim": 332, "tdlambdaestim": 333, "valueestimatorbas": 334, "generalized_advantage_estim": 335, "reward2go": 336, "td0_advantage_estim": 337, "td0_return_estim": 338, "td1_advantage_estim": 339, "td1_return_estim": 340, "td_lambda_advantage_estim": 341, "td_lambda_return_estim": 342, "vec_generalized_advantage_estim": 343, "vec_td1_advantage_estim": 344, "vec_td1_return_estim": 345, "vec_td_lambda_advantage_estim": 346, "vec_td_lambda_return_estim": 347, "pixelrendertransform": 348, "tensordictrecord": 349, "videorecord": 350, "logger": [351, 387, 398, 399], "csvlogger": 352, "generate_exp_nam": 353, "get_logg": 354, "mlflowlogg": 355, "tensorboardlogg": 356, "wandblogg": 357, "batchsubsampl": 358, "clearcudacach": 359, "countframeslog": 360, "logreward": 361, "optimizerhook": 362, "replaybuffertrain": 364, "rewardnorm": 365, "selectkei": 366, "trainer": [367, 387, 391], "trainerhookbas": 368, "updateweight": 369, "correct_for_frame_skip": 370, "get_stats_random_rollout": 371, "make_collector_offpolici": 372, "make_collector_onpolici": 373, "make_dqn_loss": 374, "make_replay_buff": 375, "make_target_updat": 376, "make_train": 377, "parallel_env_constructor": 378, "sync_async_collector": 379, "sync_sync_collector": 380, "transformed_env_constructor": 381, "readm": [382, 400], "tuto": [382, 400], "api": 383, "contribut": [384, 408], "content": 384, "modul": [385, 390, 393, 395, 399, 408], "tensordictmodul": [385, 395, 408], "wrapper": [385, 395], "probabilist": [385, 395], "q": [385, 391, 393, 395], "oper": 385, "join": 385, "hook": [385, 387, 391], "regular": 385, "planner": 385, "object": [386, 390, 396, 408], "torch": 386, "vmap": 386, "dqn": [386, 391, 393], "ddpg": [386, 390, 402], "sac": 386, "redq": 386, "crossq": 386, "iql": 386, "cql": 386, "gail": 386, "dt": 386, "td3": 386, "bc": 386, "ppo": [386, 392, 403], "a2c": 386, "dreamer": 386, "builder": 387, "_util": 388, "comput": [389, 391, 404, 407], "time": [389, 390, 407], "code": [390, 404], "overview": [390, 393], "setup": [390, 393], "__init__": 390, "method": 390, "estim": 390, "put": 390, "togeth": [390, 404], "call": 390, "parallel": [390, 401, 409], "execut": [390, 401, 404], "stat": 390, "build": [390, 391, 399, 406], "evalu": 390, "construct": 390, "target": [390, 391, 396], "network": [390, 391, 392, 393, 395, 402, 403], "updat": 390, "experi": [390, 404], "result": [390, 392, 402, 403], "conclus": [390, 391, 392, 393, 402, 403, 404, 406], "next": [390, 392, 394, 397, 402, 403, 406], "A": [391, 406], "deep": 391, "collect": [391, 392, 397], "paramet": [391, 392, 396], "hyperparamet": [391, 392, 402, 403], "regist": 391, "possibl": 391, "improv": 391, "defin": [392, 402, 403], "loop": [392, 393, 399, 402, 403, 404], "recurr": 393, "convolut": 393, "select": 393, "further": [393, 396], "read": 393, "creat": 394, "run": [394, 409], "rollout": [394, 401, 402, 403, 404, 409], "s": [395, 396], "output": 396, "consider": 396, "log": 398, "own": 399, "first": 399, "design": 399, "divers": 401, "competit": 402, "group": 402, "critic": [402, 403], "pendulum": 404, "write": 404, "_step": 404, "simul": 404, "_reset": 404, "metadata": 404, "_spec": 404, "shape": 404, "seed": [404, 409], "wrap": 404, "class": [404, 408], "test": 404, "our": 404, "simpl": 404, "pretrain": 405, "vanilla": 406, "integr": 406, "tensorclass": 406, "other": 406, "tensor": 406, "pytre": 406, "iter": 406, "over": 406, "fix": 406, "priorit": 406, "save": 406, "raw": 406, "imag": 406, "more": 406, "complex": 406, "introduct": 408, "config": 408, "sequenc": 408, "program": 408, "ensembl": 408, "meta": 408, "state": 408, "frame_skip": 409, "deepmind": 409, "control": 409, "devic": 409, "close": 409, "access": 409, "attribut": 409, "kwarg": 409}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})