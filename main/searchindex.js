Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TED2Flat", "TED2Nested", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "BatchRenorm1d", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 82, 83, 85, 87, 89, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 119, 120, 122, 123, 124, 125, 126, 127, 130, 131, 134, 139, 140, 142, 143, 145, 146, 148, 152, 154, 155, 158, 164, 165, 169, 170, 171, 172, 174, 182, 183, 184, 185, 186, 187, 189, 192, 193, 195, 197, 206, 208, 209, 211, 212, 213, 214, 221, 223, 225, 227, 228, 229, 233, 234, 236, 247, 248, 250, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 274, 275, 279, 283, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 318, 319, 320, 321, 322, 336, 338, 341, 345, 350, 351, 355, 356, 359, 366, 367, 368, 369, 372, 373, 374, 378, 379, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 396, 397], "open": [0, 5, 7, 12, 41, 43, 46, 67, 379, 390, 391, 396], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "reinforc": [0, 3, 9, 64, 117, 118, 146, 211, 212, 213, 214, 218, 263, 268, 269, 284, 285, 287, 290, 291, 292, 294, 299, 300, 306, 307, 308, 309, 371, 377, 379, 382, 383, 388, 392, 395, 396], "learn": [0, 3, 7, 8, 9, 18, 37, 64, 65, 66, 68, 69, 103, 117, 118, 122, 123, 130, 146, 211, 212, 213, 214, 218, 230, 237, 263, 268, 269, 284, 285, 287, 290, 291, 292, 294, 298, 299, 300, 305, 306, 307, 308, 309, 371, 373, 374, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395, 396, 397], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 61, 119, 182, 237, 255, 270, 278, 284, 286, 301, 302, 304, 306, 346, 370, 372, 373, 374, 375, 378, 379, 380, 385, 388, 390, 391, 393, 394, 397], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 44, 52, 101, 102, 111, 120, 200, 371, 372, 373, 376, 378, 379, 380, 382, 383, 385, 390, 391, 392, 397], "pytorch": [0, 1, 2, 3, 23, 65, 132, 133, 185, 197, 221, 225, 236, 237, 355, 370, 372, 373, 375, 378, 380, 381, 384, 388, 390, 391, 392, 393, 394, 396, 397], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 37, 52, 64, 103, 107, 111, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 138, 193, 195, 225, 345, 372, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 79, 80, 82, 86, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 149, 150, 152, 154, 155, 156, 164, 165, 169, 170, 174, 177, 181, 182, 183, 186, 187, 189, 191, 193, 195, 197, 205, 207, 208, 209, 211, 221, 223, 224, 225, 227, 229, 230, 233, 234, 235, 237, 238, 251, 253, 255, 260, 262, 263, 264, 265, 267, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 336, 338, 345, 351, 367, 368, 369, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "directli": [0, 3, 4, 8, 23, 61, 82, 99, 100, 103, 106, 107, 119, 123, 124, 130, 131, 165, 174, 192, 302, 309, 369, 373, 379, 380, 382, 390, 391, 392, 394], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 142, 143, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 201, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 250, 251, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 301, 302, 304, 305, 306, 307, 309, 310, 312, 316, 317, 318, 319, 320, 321, 324, 336, 337, 338, 346, 352, 355, 358, 359, 363, 365, 366, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397], "pypi": [0, 2, 396], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 103, 107, 110, 113, 117, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 150, 169, 183, 185, 186, 187, 189, 191, 193, 194, 195, 208, 209, 221, 224, 225, 228, 234, 235, 236, 243, 251, 252, 256, 258, 270, 273, 274, 287, 298, 302, 309, 338, 345, 352, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 394, 397], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 93, 103, 106, 107, 108, 110, 111, 113, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 185, 189, 194, 195, 206, 218, 225, 228, 236, 238, 255, 259, 260, 262, 263, 273, 278, 284, 294, 302, 304, 318, 323, 331, 345, 350, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393, 397], "about": [0, 3, 5, 7, 9, 18, 19, 20, 52, 65, 68, 69, 103, 123, 130, 374, 378, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 396, 397], "instruct": [0, 6, 7, 10, 22, 63, 154, 156, 378, 379, 380, 381, 390, 391, 394], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 123, 130, 256, 257, 258, 373, 378, 382, 384, 385, 387, 389, 391], "section": [0, 2, 3, 4, 24, 221, 225, 379, 382, 387, 390, 391], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 70, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 208, 209, 221, 224, 225, 228, 234, 251, 270, 273, 352, 378, 379, 380, 381, 382, 390, 392], "pip": [0, 10, 66, 382, 383, 384, 385, 386, 387, 391, 396, 397], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 80, 81, 82, 85, 87, 88, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 143, 145, 146, 147, 148, 149, 151, 152, 155, 159, 164, 165, 167, 169, 170, 173, 174, 177, 178, 182, 183, 184, 187, 189, 191, 192, 193, 195, 205, 208, 209, 215, 218, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 253, 255, 260, 263, 264, 265, 267, 269, 270, 271, 272, 277, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 342, 346, 352, 359, 365, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "python": [0, 3, 5, 6, 7, 10, 11, 14, 15, 21, 121, 138, 221, 222, 223, 225, 226, 227, 231, 232, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "first": [0, 1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 35, 36, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 103, 106, 107, 108, 113, 123, 124, 130, 131, 142, 143, 146, 147, 159, 165, 169, 170, 185, 187, 189, 209, 221, 223, 225, 227, 228, 234, 236, 240, 255, 261, 262, 263, 270, 271, 273, 274, 286, 296, 301, 302, 304, 337, 338, 354, 373, 377, 378, 379, 380, 381, 382, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "low": [0, 3, 26, 80, 103, 107, 123, 124, 130, 131, 139, 149, 154, 201, 249, 250, 251, 261, 263, 270, 277, 378, 379, 380, 390, 391, 392, 396, 397], "high": [0, 3, 9, 26, 41, 43, 46, 50, 80, 103, 107, 123, 124, 130, 131, 139, 149, 154, 164, 201, 249, 250, 251, 261, 263, 270, 277, 318, 323, 331, 378, 379, 380, 390, 391, 392, 394, 396, 397], "level": [0, 2, 3, 4, 22, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 106, 108, 146, 181, 301, 378, 379, 385, 396], "abstract": [0, 3, 8, 25, 26, 27, 29, 33, 34, 35, 39, 53, 55, 56, 61, 62, 66, 97, 103, 166, 229, 322, 347, 356, 375, 380, 392, 396], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 82, 85, 86, 88, 89, 91, 93, 95, 103, 104, 106, 107, 108, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 141, 142, 143, 145, 146, 149, 150, 152, 154, 155, 156, 158, 159, 163, 164, 167, 169, 174, 177, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 201, 204, 205, 207, 214, 216, 221, 222, 223, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 241, 243, 246, 261, 262, 264, 267, 269, 270, 271, 273, 274, 275, 276, 277, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 313, 316, 317, 318, 319, 320, 321, 322, 336, 345, 352, 365, 369, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 145, 154, 253, 302, 373, 396], "effici": [0, 1, 2, 4, 8, 221, 237, 287, 373, 378, 379, 380, 381, 384, 385, 387, 389, 390, 391, 393, 394, 396], "modular": [0, 61, 276, 394, 396], "document": [0, 2, 5, 7, 11, 18, 19, 21, 37, 67, 103, 107, 123, 124, 130, 131, 187, 195, 370, 379, 381, 382, 385, 388, 396], "properli": [0, 1, 103, 107, 123, 124, 130, 131, 204, 223, 227, 380, 386, 390, 391, 392, 396], "test": [0, 3, 5, 99, 100, 112, 113, 117, 118, 189, 197, 223, 227, 351, 365, 380, 381, 396], "The": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 79, 80, 82, 85, 87, 88, 89, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 142, 143, 145, 146, 150, 152, 155, 156, 157, 165, 167, 169, 174, 176, 177, 178, 181, 182, 183, 186, 187, 189, 191, 192, 193, 195, 197, 204, 205, 206, 207, 211, 212, 213, 214, 215, 218, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 237, 238, 244, 245, 246, 255, 256, 259, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 324, 336, 338, 340, 343, 344, 345, 346, 350, 365, 367, 368, 371, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 396, 397], "code": [0, 3, 5, 7, 8, 14, 15, 67, 103, 107, 123, 124, 130, 131, 169, 187, 189, 206, 221, 222, 223, 225, 226, 227, 270, 276, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397], "aim": [0, 2, 3, 7, 33, 34, 169, 189, 191, 228, 358, 372, 373, 374, 378, 379, 396], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 41, 43, 46, 66, 69, 70, 74, 75, 89, 91, 95, 96, 98, 99, 100, 106, 108, 112, 120, 122, 123, 125, 127, 143, 146, 156, 165, 183, 184, 186, 200, 218, 253, 262, 263, 270, 273, 276, 294, 302, 318, 319, 320, 321, 343, 371, 373, 375, 380, 381, 382, 383, 391, 392, 394, 396], "research": [0, 7, 9, 117, 118, 206, 396], "most": [0, 1, 2, 3, 7, 8, 14, 15, 37, 87, 88, 103, 107, 123, 124, 130, 131, 154, 192, 197, 378, 380, 382, 383, 384, 385, 386, 387, 392, 396, 397], "written": [0, 1, 2, 3, 12, 30, 41, 43, 46, 48, 54, 63, 64, 67, 72, 74, 80, 82, 87, 88, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 139, 146, 156, 163, 177, 181, 184, 192, 195, 204, 205, 255, 268, 269, 270, 273, 274, 278, 284, 286, 301, 304, 306, 317, 336, 337, 338, 373, 374, 375, 378, 381, 383, 389, 392, 396], "highli": [0, 2, 382, 396, 397], "wai": [0, 1, 2, 3, 4, 61, 65, 82, 93, 111, 169, 172, 191, 192, 223, 225, 227, 304, 318, 319, 320, 321, 373, 378, 379, 380, 382, 384, 385, 389, 390, 391, 392, 393, 394, 396, 397], "easili": [0, 1, 2, 3, 7, 103, 107, 123, 124, 130, 131, 374, 378, 379, 380, 382, 383, 384, 387, 390, 391, 396, 397], "swap": [0, 1, 3, 106, 192, 380, 393, 396], "compon": [0, 1, 2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 218, 244, 262, 263, 272, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 350, 355, 378, 379, 380, 381, 383, 384, 387, 389, 390, 391, 392, 393, 396], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 91, 96, 103, 104, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 210, 211, 215, 218, 219, 223, 227, 242, 243, 244, 252, 261, 266, 267, 277, 280, 281, 283, 290, 303, 336, 338, 352, 369, 371, 377, 379, 381, 383, 385, 386, 387, 388, 393, 395], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 98, 103, 104, 107, 111, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 152, 155, 183, 187, 193, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 252, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 301, 338, 378, 379, 381, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "write": [0, 2, 3, 8, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 91, 98, 103, 107, 149, 167, 168, 177, 179, 181, 185, 205, 255, 273, 274, 276, 278, 287, 288, 289, 291, 292, 293, 300, 305, 307, 309, 310, 317, 322, 338, 373, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397], "new": [0, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 107, 120, 123, 124, 128, 129, 130, 131, 143, 177, 186, 193, 195, 204, 205, 221, 223, 227, 268, 269, 273, 274, 279, 284, 285, 286, 289, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 345, 374, 378, 380, 381, 382, 384, 390, 391, 392, 396, 397], "ones": [0, 2, 23, 27, 37, 42, 45, 50, 51, 103, 107, 123, 124, 125, 126, 130, 131, 147, 150, 152, 153, 155, 165, 169, 174, 183, 186, 187, 189, 191, 195, 196, 231, 232, 253, 273, 284, 285, 287, 288, 300, 304, 305, 307, 309, 310, 324, 378, 380, 390, 391, 392, 394, 396, 397], "littl": [0, 1, 3, 52, 103, 107, 123, 124, 130, 131, 187, 284, 286, 301, 304, 306, 380, 381, 385, 394, 396, 397], "effort": [0, 3, 392, 394, 396], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 95, 96, 98, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 165, 169, 170, 171, 172, 174, 177, 178, 179, 181, 183, 184, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 316, 318, 319, 320, 321, 322, 336, 337, 345, 346, 348, 351, 352, 355, 357, 358, 359, 365, 369, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "repo": [0, 6, 63, 146, 184, 189, 372, 391, 396], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 87, 88, 101, 102, 106, 108, 109, 127, 260, 265, 269, 289, 292, 300, 316, 384, 396], "align": [0, 221, 225, 396], "exist": [0, 2, 3, 4, 12, 18, 21, 37, 41, 43, 46, 54, 103, 107, 123, 124, 130, 131, 147, 153, 187, 195, 287, 307, 359, 369, 390, 391, 396, 397], "ecosystem": [0, 385, 396], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 61, 67, 74, 75, 82, 85, 87, 93, 95, 103, 104, 107, 111, 117, 118, 123, 124, 130, 131, 132, 133, 143, 146, 181, 182, 183, 184, 187, 195, 221, 223, 225, 227, 233, 235, 250, 259, 260, 263, 265, 267, 269, 274, 284, 287, 301, 302, 304, 306, 338, 378, 379, 380, 381, 382, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "dataset": [0, 32, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 85, 87, 88, 122, 193, 338, 371, 378, 379, 382, 393, 394, 396, 397], "pillar": [0, 396], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 142, 143, 145, 146, 147, 152, 153, 154, 155, 160, 164, 165, 169, 170, 171, 174, 177, 181, 182, 183, 184, 186, 187, 189, 192, 193, 197, 207, 223, 227, 229, 230, 260, 267, 269, 291, 295, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 346, 348, 351, 358, 359, 360, 361, 365, 366, 367, 368, 369, 371, 372, 373, 377, 383, 384, 385, 386, 388, 393, 394, 395], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 43, 46, 47, 54, 103, 107, 119, 123, 124, 130, 131, 152, 169, 183, 189, 191, 194, 195, 208, 209, 210, 215, 217, 223, 227, 228, 229, 230, 234, 235, 242, 243, 252, 256, 257, 258, 266, 273, 279, 281, 284, 285, 286, 287, 289, 290, 291, 292, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 316, 355, 360, 361, 362, 371, 372, 374, 375, 377, 380, 382, 385, 388, 390, 391, 392, 394, 395, 397], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 140, 143, 145, 146, 152, 153, 155, 157, 163, 165, 171, 174, 181, 187, 192, 195, 196, 197, 201, 205, 207, 218, 223, 227, 230, 233, 234, 244, 253, 255, 262, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 336, 338, 345, 346, 352, 355, 357, 360, 365, 367, 368, 369, 371, 373, 374, 375, 377, 381, 382, 383, 384, 388, 392, 393, 394, 395, 397], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 45, 47, 99, 100, 103, 107, 112, 113, 118, 123, 124, 125, 126, 130, 131, 134, 146, 169, 174, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 215, 221, 225, 280, 281, 282, 283, 302, 365, 371, 376, 378, 380, 383, 384, 385, 391, 392, 394, 396, 397], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 40, 41, 43, 46, 74, 75, 79, 80, 93, 95, 103, 104, 107, 123, 124, 130, 131, 132, 143, 145, 147, 150, 151, 159, 165, 169, 177, 183, 186, 187, 189, 191, 195, 197, 221, 223, 224, 225, 227, 230, 234, 238, 244, 250, 251, 261, 263, 267, 270, 272, 273, 274, 284, 286, 287, 288, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 317, 318, 319, 320, 321, 336, 346, 358, 368, 373, 379, 380, 383, 384, 386, 390, 391, 393, 394, 396, 397], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 40, 41, 43, 46, 93, 103, 104, 107, 123, 124, 130, 131, 132, 143, 145, 147, 150, 159, 165, 169, 177, 183, 186, 187, 189, 191, 195, 197, 221, 223, 224, 225, 226, 227, 230, 234, 250, 251, 261, 270, 273, 274, 287, 307, 317, 327, 328, 329, 330, 332, 333, 334, 335, 336, 368, 373, 379, 380, 383, 386, 390, 391, 392, 393, 394, 396, 397], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 37, 47, 48, 61, 67, 143, 146, 174, 181, 195, 196, 223, 227, 268, 269, 352, 355, 357, 360, 361, 365, 367, 368, 371, 374, 375, 394, 397], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 80, 82, 83, 85, 87, 88, 89, 94, 97, 98, 103, 107, 119, 123, 124, 130, 131, 139, 150, 152, 155, 169, 183, 186, 187, 189, 191, 192, 193, 195, 204, 205, 207, 208, 209, 221, 222, 225, 226, 228, 230, 233, 234, 255, 262, 263, 270, 272, 273, 278, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 324, 342, 346, 358, 365, 366, 367, 368, 369, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 396, 397], "etc": [0, 2, 3, 7, 8, 12, 37, 55, 56, 67, 103, 107, 123, 124, 130, 131, 163, 187, 195, 228, 234, 250, 379, 380, 385, 394, 396, 397], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 89, 103, 107, 123, 124, 125, 126, 130, 131, 139, 142, 146, 152, 155, 156, 163, 164, 165, 181, 186, 187, 193, 195, 197, 205, 208, 209, 228, 233, 234, 235, 253, 267, 275, 276, 284, 286, 301, 304, 306, 309, 313, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 346, 355, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "few": [0, 2, 8, 107, 338, 346, 380, 381, 383, 390, 391, 394, 396, 397], "depend": [0, 1, 2, 3, 4, 7, 8, 41, 43, 106, 108, 109, 127, 132, 133, 152, 155, 278, 304, 373, 378, 380, 381, 390, 391, 392, 396, 397], "possibl": [0, 2, 3, 4, 23, 25, 29, 34, 35, 36, 37, 40, 64, 67, 69, 80, 87, 93, 103, 107, 123, 124, 130, 131, 139, 150, 169, 183, 186, 187, 189, 191, 195, 208, 209, 221, 222, 225, 226, 273, 336, 351, 355, 373, 378, 380, 381, 383, 385, 386, 390, 391, 392, 394, 396, 397], "standard": [0, 3, 165, 176, 193, 206, 207, 219, 230, 236, 237, 242, 259, 260, 261, 309, 310, 318, 319, 320, 321, 378, 379, 382, 383, 391, 394, 396], "numpi": [0, 3, 12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 185, 355, 392, 394, 396, 397], "common": [0, 2, 3, 4, 107, 112, 140, 256, 257, 258, 266, 284, 285, 286, 287, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 365, 372, 373, 375, 378, 380, 383, 386, 389, 390, 391, 392, 393, 396, 397], "openai": [0, 7, 24, 106, 108, 127, 380, 392, 396, 397], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 103, 104, 106, 107, 108, 109, 111, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 135, 138, 142, 146, 149, 156, 162, 163, 165, 167, 172, 174, 177, 183, 186, 192, 193, 195, 365, 372, 378, 379, 380, 381, 382, 386, 387, 392, 393, 394, 396], "onli": [0, 1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 82, 87, 88, 95, 101, 102, 103, 106, 107, 108, 109, 111, 113, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 142, 146, 147, 149, 150, 152, 154, 155, 159, 165, 169, 170, 174, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 225, 227, 233, 234, 255, 261, 262, 270, 271, 273, 274, 275, 276, 284, 286, 287, 288, 292, 293, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 318, 319, 320, 321, 322, 338, 345, 359, 374, 375, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 396, 397], "option": [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 169, 170, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 197, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249, 250, 251, 253, 255, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 343, 345, 346, 348, 349, 350, 351, 352, 353, 355, 359, 360, 361, 362, 364, 365, 367, 368, 369, 373, 381, 382, 385, 390, 391, 392, 394, 396], "On": [0, 3, 7, 18, 19, 20, 21, 27, 64, 222, 226, 373, 379, 390, 391], "end": [0, 2, 3, 14, 15, 17, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 86, 87, 88, 103, 107, 123, 124, 130, 131, 156, 167, 181, 182, 187, 195, 208, 209, 221, 222, 225, 226, 229, 267, 287, 307, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "come": [0, 1, 2, 3, 8, 37, 93, 103, 107, 116, 123, 124, 130, 131, 152, 155, 255, 256, 257, 258, 270, 278, 284, 286, 301, 304, 306, 338, 378, 379, 380, 381, 384, 385, 386, 387, 390, 391, 394, 396, 397], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 29, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 86, 89, 95, 103, 105, 107, 108, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 138, 140, 142, 143, 146, 147, 150, 152, 155, 162, 163, 169, 174, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 197, 202, 203, 205, 221, 223, 225, 227, 229, 233, 234, 250, 260, 261, 273, 287, 293, 298, 302, 304, 307, 322, 346, 351, 352, 361, 369, 372, 373, 374, 376, 378, 379, 380, 381, 383, 384, 385, 389, 390, 391, 392, 393, 394, 396, 397], "re": [0, 2, 3, 8, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 124, 130, 131, 195, 227, 231, 232, 235, 270, 274, 345, 375, 378, 380, 381, 382, 384, 389, 390, 392, 396, 397], "usabl": [0, 375, 381, 396], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 104, 107, 123, 124, 130, 131, 138, 142, 143, 152, 155, 187, 193, 195, 197, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 245, 246, 248, 251, 253, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 365, 371, 373, 378, 381, 382, 383, 386, 389, 392, 394, 397], "cost": [0, 2, 29, 67, 284, 286, 301, 304, 306, 374, 378, 379, 390, 391, 392, 394], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 80, 82, 83, 85, 87, 88, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 204, 205, 207, 210, 211, 212, 213, 214, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 238, 241, 242, 243, 245, 246, 249, 250, 251, 252, 255, 256, 257, 258, 261, 267, 270, 272, 273, 274, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 313, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 338, 342, 355, 358, 360, 365, 366, 367, 368, 369, 371, 373, 375, 378, 379, 380, 381, 383, 384, 386, 389, 390, 391, 392, 393, 394, 396, 397], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 46, 52, 54, 61, 64, 68, 69, 79, 80, 87, 103, 104, 107, 111, 116, 120, 123, 124, 125, 126, 130, 131, 145, 152, 155, 183, 185, 193, 195, 223, 227, 233, 234, 263, 268, 269, 272, 371, 375, 378, 379, 381, 382, 390, 391, 392, 393, 394, 396, 397], "good": [0, 1, 4, 9, 123, 378, 380, 381, 383, 391, 396, 397], "runtim": [0, 2, 3, 23, 37, 103, 107, 123, 124, 130, 131, 195, 392], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 134, 152, 155, 164, 187, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 286, 287, 296, 304, 307, 351, 355, 374, 378, 379, 380, 381, 382, 385, 387, 389, 390, 391, 392, 397], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 80, 82, 87, 88, 91, 98, 99, 100, 103, 106, 107, 108, 112, 113, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 181, 183, 193, 195, 223, 227, 256, 257, 258, 268, 269, 287, 293, 298, 302, 309, 338, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 396, 397], "read": [0, 2, 3, 7, 23, 27, 30, 33, 42, 44, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 82, 89, 91, 95, 103, 106, 107, 108, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 167, 168, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 186, 189, 190, 192, 193, 195, 205, 241, 255, 256, 257, 258, 262, 267, 270, 273, 274, 276, 278, 279, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 318, 319, 320, 321, 322, 338, 351, 355, 373, 378, 379, 380, 382, 383, 389, 390, 391, 392, 393, 397], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 375, 378, 382, 385, 389, 393, 397], "beyond": [0, 103, 107, 123, 124, 130, 131], "api": [0, 2, 3, 5, 23, 125, 126, 127, 169, 191, 193, 374, 375, 382, 383, 384, 385, 386, 390, 391, 392, 394, 396, 397], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 55, 56, 57, 59, 71, 72, 78, 87, 103, 104, 106, 107, 108, 119, 123, 124, 130, 131, 134, 146, 147, 158, 163, 170, 183, 185, 187, 195, 197, 223, 227, 255, 262, 263, 270, 271, 272, 273, 274, 287, 298, 309, 338, 370, 373, 374, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397], "paper": [0, 64, 67, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 127, 132, 133, 169, 189, 191, 221, 243, 252, 291, 299, 309, 378, 380, 390, 391], "releas": [0, 4, 7, 10, 37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307, 396], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 357, 365, 375, 378, 396], "so": [0, 2, 3, 4, 6, 7, 10, 11, 37, 41, 43, 46, 47, 103, 107, 117, 118, 123, 124, 130, 131, 183, 193, 195, 275, 276, 378, 380, 381, 384, 387, 390, 391, 392, 397], "make": [0, 2, 3, 4, 7, 11, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 89, 91, 98, 103, 107, 108, 111, 113, 115, 121, 123, 124, 130, 131, 139, 157, 165, 169, 170, 174, 181, 189, 195, 197, 206, 221, 222, 223, 225, 226, 227, 233, 234, 236, 262, 274, 284, 286, 301, 304, 306, 318, 319, 320, 321, 336, 352, 361, 369, 373, 374, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "sure": [0, 3, 4, 7, 66, 89, 107, 111, 174, 262, 369, 373, 378, 380, 381, 384, 390, 391, 392, 394, 396, 397], "alwai": [0, 2, 3, 14, 15, 20, 27, 33, 37, 61, 70, 71, 72, 78, 103, 107, 123, 124, 130, 131, 163, 164, 193, 195, 294, 302, 373, 374, 379, 380, 381, 390, 391, 392, 394], "enjoi": [0, 2, 3, 67, 385], "latest": [0, 2, 3, 10, 120, 125, 126, 352, 380, 390, 391, 392, 396], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 40, 54, 65, 80, 87, 88, 103, 107, 116, 123, 124, 125, 126, 128, 129, 130, 131, 143, 146, 159, 163, 167, 183, 184, 188, 193, 197, 206, 208, 209, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 236, 237, 274, 281, 284, 286, 301, 304, 306, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 369, 373, 378, 379, 380, 381, 383, 384, 385, 387, 392, 394, 397], "recent": [0, 7, 12, 192, 397], "version": [0, 1, 2, 3, 6, 12, 37, 41, 43, 47, 64, 69, 87, 103, 106, 107, 108, 109, 120, 121, 123, 124, 125, 127, 130, 131, 132, 133, 192, 193, 195, 204, 206, 235, 258, 284, 286, 301, 302, 304, 306, 307, 318, 321, 372, 373, 374, 378, 380, 381, 382, 384, 387, 390, 391, 392, 393, 397], "although": [0, 1, 3, 8, 103, 107, 123, 124, 130, 131, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 375, 378, 379, 385, 394], "core": [0, 3, 8, 375, 381, 383, 396], "guarante": [0, 2, 37, 41, 43, 46, 74, 75, 76, 89, 91, 95, 103, 107, 123, 124, 130, 131, 193, 195, 385, 396], "backward": [0, 8, 37, 99, 100, 103, 107, 123, 124, 130, 131, 193, 195, 221, 222, 225, 226, 284, 285, 287, 288, 292, 293, 300, 304, 305, 306, 307, 309, 310, 378, 380, 381, 384, 385, 387, 390, 391, 392], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 37, 63, 82, 85, 87, 88, 89, 93, 103, 107, 109, 122, 123, 124, 130, 131, 146, 181, 189, 193, 195, 221, 222, 223, 225, 226, 227, 271, 284, 285, 287, 288, 289, 291, 292, 293, 300, 302, 304, 305, 306, 307, 309, 310, 313, 378, 381, 394, 396], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 27, 29, 30, 33, 35, 36, 37, 40, 42, 43, 44, 45, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 142, 143, 145, 147, 150, 152, 153, 154, 155, 163, 165, 167, 169, 171, 174, 177, 181, 182, 183, 186, 187, 189, 191, 193, 195, 201, 205, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 225, 226, 227, 228, 231, 232, 233, 234, 235, 238, 242, 250, 253, 261, 262, 263, 264, 265, 267, 268, 269, 273, 277, 278, 284, 285, 286, 287, 288, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 317, 318, 319, 320, 321, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 346, 373, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 389, 390, 391, 392, 394, 395, 396, 397], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 29, 30, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 95, 99, 100, 103, 106, 107, 109, 110, 112, 113, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 139, 140, 142, 144, 146, 147, 149, 150, 151, 153, 154, 163, 164, 165, 169, 174, 177, 179, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 206, 207, 208, 209, 211, 212, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 236, 237, 238, 241, 245, 246, 249, 250, 251, 253, 255, 259, 260, 261, 263, 264, 265, 268, 269, 272, 273, 276, 277, 280, 281, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 324, 325, 326, 346, 353, 365, 369, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 42, 45, 50, 51, 63, 65, 66, 67, 68, 69, 107, 123, 130, 169, 186, 191, 287, 290, 302, 374, 375, 378, 379, 380, 381, 383, 385, 394, 397], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 201, 204, 205, 207, 217, 218, 223, 227, 229, 230, 233, 234, 243, 244, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 336, 337, 346, 350, 351, 352, 354, 355, 371, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 397], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 27, 33, 74, 163, 171, 256, 257, 258, 273, 292, 300, 309, 371, 378, 390, 392, 396], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 82, 90, 96, 103, 107, 123, 124, 130, 131, 138, 169, 191, 195, 230, 340, 345, 355, 375, 379, 387, 390], "root": [0, 2, 3, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 123, 146, 184, 204, 223, 224, 227, 250, 251, 381, 382, 390, 391, 392, 393, 394, 397], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 42, 52, 61, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 122, 125, 126, 127, 132, 133, 146, 169, 189, 206, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 230, 231, 232, 237, 239, 240, 243, 245, 246, 252, 263, 268, 269, 284, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 318, 323, 331, 370, 388, 393, 396], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 61, 64, 65, 67, 99, 100, 101, 102, 106, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 143, 189, 206, 383, 387, 390, 391, 396], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 64, 67, 68, 99, 100, 101, 102, 109, 111, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 206, 393, 396], "setup": [0, 7, 99, 100, 111, 112, 113], "py": [0, 3, 24, 106, 108, 138, 243, 252, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397], "develop": [0, 3, 4, 7, 111, 378, 396], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 89, 93, 94, 95, 96, 97, 103, 105, 107, 109, 110, 123, 124, 127, 130, 131, 136, 139, 141, 142, 143, 145, 149, 154, 160, 163, 169, 170, 172, 179, 183, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 204, 207, 208, 209, 218, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 234, 235, 237, 238, 253, 259, 260, 261, 262, 263, 264, 267, 270, 271, 274, 276, 277, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 316, 318, 319, 320, 321, 322, 324, 336, 339, 340, 343, 345, 348, 355, 357, 365, 374, 377, 378, 380, 383, 384, 385, 388, 392, 395, 397], "seri": [0, 2, 3, 7, 8, 40, 73, 83, 93, 94, 97, 98, 130, 164, 186, 338, 373, 374, 378, 379, 380, 386, 387, 390, 391, 394, 397], "quick": [0, 61], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 29, 47, 63, 69, 103, 107, 123, 124, 130, 131, 142, 145, 184, 186, 195, 206, 304, 372, 373, 374, 378, 379, 380, 381, 383, 387, 390, 391, 392, 394, 397], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 80, 82, 85, 86, 87, 88, 93, 95, 101, 102, 103, 104, 106, 107, 108, 109, 111, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 135, 139, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 159, 163, 164, 165, 169, 170, 173, 174, 177, 178, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 204, 205, 208, 209, 221, 222, 223, 225, 226, 227, 228, 231, 232, 233, 234, 235, 253, 255, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 332, 333, 334, 335, 336, 342, 345, 350, 352, 355, 357, 359, 365, 369, 372, 374, 378, 379, 380, 381, 382, 384, 386, 387, 389, 390, 391, 392, 394, 396, 397], "hurri": [0, 382], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 53, 55, 56, 63, 86, 87, 88, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 139, 142, 145, 159, 165, 170, 182, 184, 185, 208, 209, 221, 223, 225, 227, 228, 231, 232, 239, 247, 250, 253, 259, 260, 261, 264, 267, 274, 287, 318, 320, 321, 379, 380, 381, 382, 383, 390, 391, 392, 393, 394, 396, 397], "item": [0, 2, 8, 14, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 54, 55, 56, 70, 80, 86, 93, 139, 158, 231, 232, 288, 289, 291, 346, 374, 375, 378, 380, 381, 384, 385, 390, 391, 392, 394], "navig": [0, 391], "previou": [0, 3, 4, 10, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 183, 195, 205, 221, 225, 246, 261, 380, 381, 382, 383, 387, 392, 397], "whenev": [0, 1, 2, 3, 23, 37, 42, 45, 50, 51, 61, 67, 79, 80, 87, 88, 101, 102, 106, 108, 109, 117, 118, 127, 132, 133, 138, 162, 187, 192, 302, 318, 319, 320, 321, 336, 357, 373, 386, 394], "want": [0, 2, 3, 6, 7, 8, 88, 165, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 373, 378, 379, 380, 381, 382, 384, 385, 386, 390, 391, 392, 393, 394, 396, 397], "ted": [0, 30, 38, 48, 49, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 371, 377, 388, 395], "s": [0, 1, 2, 3, 6, 7, 8, 11, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 88, 93, 99, 100, 103, 107, 111, 112, 113, 117, 118, 120, 123, 124, 125, 126, 130, 131, 132, 133, 146, 150, 169, 181, 183, 185, 186, 187, 189, 191, 193, 195, 197, 208, 209, 223, 227, 232, 233, 234, 237, 243, 252, 256, 258, 259, 260, 263, 264, 267, 270, 273, 274, 277, 285, 287, 292, 298, 300, 302, 307, 309, 318, 319, 320, 321, 322, 336, 373, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 93, 99, 100, 103, 107, 116, 119, 122, 123, 124, 130, 131, 138, 145, 150, 154, 156, 163, 169, 170, 182, 183, 186, 187, 189, 191, 193, 194, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 320, 321, 322, 336, 355, 362, 365, 371, 374, 375, 377, 379, 380, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397], "optim": [0, 1, 2, 8, 37, 47, 99, 100, 103, 107, 123, 124, 130, 131, 187, 195, 207, 230, 236, 237, 250, 285, 287, 302, 303, 304, 307, 350, 355, 365, 374, 375, 377, 380, 381, 382, 383, 385, 388, 390, 391, 392, 395], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 103, 107, 123, 124, 127, 130, 131, 143, 146, 165, 169, 191, 197, 267, 268, 269, 285, 288, 291, 293, 305, 307, 309, 310, 338, 346, 352, 355, 357, 358, 359, 365, 375, 377, 378, 381, 382, 383, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397], "storag": [0, 1, 8, 30, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 88, 90, 91, 92, 93, 95, 96, 103, 105, 107, 123, 124, 130, 131, 145, 146, 152, 155, 174, 195, 371, 375, 377, 379, 380, 381, 382, 384, 387, 388, 390, 391, 393, 395], "log": [0, 3, 4, 8, 11, 47, 216, 217, 218, 231, 232, 241, 250, 251, 262, 263, 270, 274, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 310, 316, 345, 348, 349, 351, 355, 365, 373, 374, 375, 377, 378, 379, 380, 382, 383, 387, 388, 390, 391, 392, 395, 396], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 37, 103, 107, 111, 116, 123, 124, 125, 126, 130, 131, 193, 195, 369, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 394, 395, 396], "own": [0, 1, 3, 14, 15, 17, 22, 37, 103, 107, 123, 124, 125, 126, 130, 131, 195, 338, 377, 379, 380, 382, 388, 390, 391, 392, 395], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 37, 41, 43, 46, 47, 54, 61, 64, 70, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 152, 160, 169, 182, 187, 189, 191, 195, 197, 206, 211, 213, 223, 227, 259, 260, 264, 265, 268, 269, 284, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 318, 355, 357, 365, 371, 375, 377, 379, 382, 385, 386, 388, 393, 394, 395, 397], "loop": [0, 8, 41, 43, 46, 103, 107, 123, 124, 130, 131, 204, 259, 260, 264, 265, 268, 269, 304, 355, 374, 375, 377, 378, 379, 382, 384, 385, 386, 388, 389, 394, 395], "ppo": [0, 4, 8, 270, 274, 286, 301, 304, 371, 373, 377, 378, 379, 383, 384, 388, 390, 395], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 93, 101, 102, 103, 104, 106, 107, 108, 120, 123, 124, 130, 131, 146, 149, 150, 157, 162, 163, 165, 172, 174, 179, 181, 183, 184, 186, 187, 193, 195, 223, 227, 365, 373, 377, 379, 380, 382, 383, 384, 388, 395, 396, 397], "introduct": [0, 374, 377, 382, 388, 390, 391, 395, 397], "multi": [0, 1, 7, 9, 33, 34, 37, 42, 45, 50, 51, 71, 72, 78, 103, 107, 117, 118, 123, 124, 128, 129, 130, 131, 187, 195, 221, 223, 225, 227, 228, 233, 234, 235, 267, 316, 318, 319, 320, 321, 371, 377, 378, 379, 380, 381, 382, 383, 388, 392, 395, 396], "agent": [0, 9, 33, 34, 116, 117, 118, 125, 126, 128, 129, 132, 133, 134, 181, 182, 231, 232, 233, 234, 235, 237, 243, 252, 316, 371, 377, 382, 388, 392, 395], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30, 37, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 223, 227, 229, 230, 267, 273, 302, 336, 337, 338, 359, 360, 361, 365, 367, 368, 369, 371, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 78, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 169, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 197, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 241, 242, 243, 244, 250, 251, 252, 253, 255, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 331, 336, 338, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 363, 365, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397], "pretrain": [0, 377, 388, 395], "recurr": [0, 2, 145, 221, 222, 223, 225, 227, 246, 377, 379, 383, 388, 394, 395], "dqn": [0, 2, 61, 139, 156, 218, 262, 263, 284, 285, 287, 288, 289, 291, 293, 294, 295, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 316, 362, 371, 373, 377, 383, 384, 387, 388, 395], "polici": [0, 1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 30, 37, 48, 99, 100, 103, 107, 119, 123, 124, 130, 131, 154, 163, 182, 196, 202, 203, 218, 223, 227, 233, 234, 237, 244, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 277, 284, 285, 286, 287, 288, 292, 293, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 351, 357, 360, 361, 365, 367, 368, 373, 374, 375, 377, 379, 382, 384, 385, 388, 393, 394, 395, 396, 397], "replai": [0, 8, 16, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 93, 94, 98, 145, 146, 154, 170, 174, 183, 195, 287, 288, 289, 291, 292, 293, 300, 305, 307, 309, 310, 352, 355, 363, 365, 371, 375, 377, 388, 392, 393, 395], "buffer": [0, 3, 4, 8, 14, 15, 16, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 98, 103, 107, 119, 123, 124, 130, 131, 145, 146, 150, 154, 169, 170, 174, 183, 186, 187, 189, 191, 195, 273, 276, 287, 288, 289, 291, 292, 293, 300, 305, 307, 309, 310, 352, 355, 363, 365, 371, 375, 377, 386, 388, 392, 393, 395, 397], "competit": [0, 3, 117, 118, 377, 388, 391, 395], "ddpg": [0, 211, 212, 213, 214, 288, 299, 308, 371, 373, 377, 379, 384, 388, 391, 395], "task": [0, 2, 3, 9, 33, 34, 47, 54, 64, 67, 101, 102, 103, 107, 110, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 169, 181, 187, 189, 191, 292, 300, 377, 378, 379, 380, 381, 382, 383, 388, 390, 391, 392, 395, 396, 397], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 107, 123, 130, 132, 183, 215, 223, 227, 261, 284, 302, 304, 306, 338, 355, 371, 374, 375, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 394, 395], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 37, 41, 43, 46, 53, 54, 74, 75, 76, 82, 85, 89, 91, 95, 98, 103, 107, 112, 123, 124, 130, 131, 139, 152, 155, 156, 165, 169, 186, 187, 189, 193, 195, 196, 223, 227, 230, 233, 234, 243, 252, 255, 256, 270, 273, 274, 275, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 359, 360, 361, 364, 365, 369, 371, 373, 375, 377, 379, 380, 381, 385, 387, 388, 390, 391, 392, 394, 395, 397], "loss": [0, 3, 8, 43, 156, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 316, 317, 318, 350, 355, 362, 365, 374, 375, 377, 382, 384, 385, 386, 388, 392, 394, 395, 396], "trainer": [0, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 377, 378, 388, 395], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 162, 163, 165, 167, 169, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 235, 238, 241, 242, 243, 244, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 311, 312, 316, 318, 319, 320, 321, 324, 336, 338, 346, 347, 348, 349, 350, 352, 353, 354, 357, 365, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397], "packag": [0, 6, 7, 10, 138, 371, 372, 397], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 29, 37, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 120, 122, 123, 124, 130, 131, 132, 133, 143, 146, 150, 159, 165, 167, 170, 174, 183, 186, 187, 188, 192, 193, 195, 205, 206, 216, 221, 222, 223, 225, 226, 227, 231, 232, 233, 234, 235, 236, 241, 243, 249, 253, 267, 268, 269, 273, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 346, 349, 352, 353, 354, 355, 357, 367, 368, 369, 371, 373, 374, 375, 379, 380, 381, 382, 385, 387, 389, 390, 391, 393, 396, 397], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 145, 147, 150, 151, 152, 155, 156, 157, 159, 167, 169, 171, 172, 174, 178, 180, 181, 183, 185, 186, 187, 188, 191, 193, 195, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 238, 241, 242, 243, 244, 245, 246, 249, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 300, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 338, 346, 352, 371, 373, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 396, 397], "interoper": [0, 14, 15, 371], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 37, 41, 42, 43, 45, 46, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 106, 107, 117, 118, 123, 124, 130, 131, 132, 133, 139, 146, 147, 169, 174, 187, 191, 195, 208, 209, 221, 222, 223, 225, 226, 227, 228, 234, 272, 276, 285, 286, 287, 289, 291, 293, 294, 300, 301, 304, 305, 307, 309, 310, 318, 319, 320, 321, 327, 328, 329, 330, 332, 333, 334, 335, 336, 369, 371, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393, 394], "node": [0, 2, 18, 19, 20, 21, 22, 27, 33, 41, 43, 46, 69, 371, 385], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 125, 126, 163, 165, 207, 216, 217, 218, 219, 224, 230, 231, 232, 238, 241, 242, 245, 246, 249, 250, 251, 259, 260, 261, 262, 263, 270, 274, 275, 284, 285, 286, 287, 292, 293, 294, 300, 301, 304, 305, 306, 307, 309, 310, 371, 375, 379, 380, 383, 385, 390, 391, 392, 396, 397], "helper": [0, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 378, 379, 381, 390, 392], "compos": [0, 3, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 83, 84, 93, 94, 103, 107, 123, 124, 130, 131, 146, 173, 186, 187, 193, 195, 266, 267, 287, 296, 307, 338, 371, 378, 379, 380, 381, 385, 389, 391, 392, 394, 396, 397], "episod": [0, 3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 103, 107, 123, 124, 130, 131, 142, 174, 177, 182, 204, 207, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 371, 379, 382, 387, 390, 391, 394], "format": [0, 3, 30, 36, 37, 38, 40, 48, 49, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 85, 93, 103, 107, 123, 124, 125, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 338, 371, 378, 379, 382, 384, 386, 397], "tensorspec": [0, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 55, 56, 57, 58, 59, 103, 107, 119, 123, 124, 130, 131, 132, 133, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 205, 246, 255, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 277, 285, 287, 289, 292, 293, 305, 307, 309, 310, 316, 371, 392], "human": [0, 24, 65, 371, 392], "feedback": [0, 371, 387, 396], "rlhf": [0, 47, 54, 70, 163, 371, 373], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 104, 107, 123, 124, 130, 131, 140, 143, 152, 155, 164, 171, 172, 186, 187, 193, 195, 197, 207, 223, 227, 229, 230, 351, 359, 360, 361, 365, 367, 368, 369, 371, 382, 397], "gymlikeenv": [0, 106, 108, 371], "envmetadata": [0, 371], "vector": [0, 1, 8, 25, 29, 40, 99, 100, 108, 112, 113, 116, 125, 126, 127, 132, 133, 154, 192, 211, 213, 221, 222, 225, 226, 228, 318, 321, 331, 332, 333, 334, 335, 371, 374, 378, 379, 381, 389, 390, 391, 392, 393, 397], "custom": [0, 2, 5, 37, 103, 107, 123, 124, 130, 131, 189, 195, 233, 234, 277, 294, 304, 311, 369, 371, 373, 378, 379, 380, 381, 383, 384, 386, 390, 391], "nativ": [0, 1, 7, 9, 65, 103, 107, 123, 124, 130, 131, 146, 338, 371, 381, 394], "auto": [0, 75, 95, 141, 142, 192, 268, 269, 285, 287, 293, 303, 305, 307, 309, 310, 371, 374, 390, 391], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 141, 142, 143, 146, 156, 159, 162, 164, 169, 177, 181, 182, 183, 184, 186, 187, 189, 192, 193, 195, 197, 205, 221, 223, 227, 235, 254, 267, 268, 269, 302, 337, 371, 374, 378, 379, 380, 381, 382, 385, 389, 390, 391, 396], "dynam": [0, 7, 14, 15, 16, 64, 67, 69, 103, 123, 130, 195, 292, 300, 371, 380, 382, 392], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 57, 58, 59, 63, 99, 100, 103, 105, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 127, 130, 131, 132, 133, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 201, 204, 205, 218, 223, 227, 244, 246, 255, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 371, 373, 378, 379, 380, 381, 382, 383, 387, 389, 390, 391, 396], "mask": [0, 1, 4, 23, 25, 29, 35, 36, 40, 125, 126, 131, 140, 170, 195, 218, 231, 232, 244, 261, 262, 263, 264, 265, 271, 272, 352, 371, 379, 381, 397], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 29, 30, 40, 47, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 143, 149, 152, 154, 155, 156, 157, 160, 163, 164, 167, 171, 172, 174, 178, 181, 187, 192, 196, 201, 204, 207, 210, 211, 212, 213, 214, 215, 217, 218, 219, 223, 227, 228, 229, 230, 231, 232, 233, 242, 243, 244, 246, 249, 250, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 277, 278, 284, 285, 287, 288, 289, 291, 292, 293, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 365, 369, 371, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 389, 390, 391, 393, 394, 396, 397], "record": [0, 2, 11, 37, 103, 107, 123, 124, 130, 131, 136, 139, 163, 195, 304, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 371, 379, 380, 383, 387, 390], "domain": [0, 2, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 154, 183, 201, 255, 262, 263, 270, 271, 272, 273, 274, 275, 276, 281, 371, 380, 381, 383, 384, 390, 391, 392, 396, 397], "actor": [0, 3, 4, 21, 163, 196, 207, 210, 211, 213, 218, 219, 230, 242, 244, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 316, 371, 374, 379, 381, 382, 384, 387, 390, 393, 396], "explor": [0, 1, 194, 237, 255, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 284, 302, 351, 360, 361, 365, 371, 380, 381, 382, 384, 385, 387, 390, 391, 392], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 103, 107, 116, 123, 124, 130, 131, 138, 139, 142, 144, 146, 147, 149, 152, 154, 155, 156, 164, 165, 169, 170, 173, 174, 175, 177, 179, 183, 184, 186, 187, 191, 193, 195, 201, 205, 206, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 241, 243, 244, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 346, 348, 349, 350, 351, 352, 355, 365, 371, 375, 379, 384, 385, 386, 389, 390, 391, 392, 394, 396, 397], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 84, 86, 103, 104, 107, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 143, 150, 152, 153, 157, 163, 165, 171, 172, 177, 178, 181, 183, 186, 192, 195, 205, 216, 223, 227, 231, 232, 241, 255, 270, 274, 278, 279, 298, 305, 312, 318, 323, 331, 341, 355, 371, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "hook": [0, 2, 30, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 96, 103, 107, 123, 124, 130, 131, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 244, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 371], "planner": [0, 207, 230, 371], "torch": [0, 1, 2, 3, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 83, 86, 87, 88, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 163, 165, 167, 169, 171, 172, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 281, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 346, 353, 354, 365, 371, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "vmap": [0, 221, 222, 225, 226, 235, 253, 273, 276, 302, 371, 373, 396], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 47, 53, 55, 56, 67, 69, 81, 93, 103, 107, 119, 123, 124, 130, 131, 139, 154, 164, 165, 183, 196, 197, 221, 223, 225, 227, 264, 270, 273, 274, 281, 285, 302, 305, 351, 359, 371, 373, 378, 379, 380, 381, 382, 383, 385, 392, 393, 394, 396, 397], "sac": [0, 293, 305, 307, 371], "redq": [0, 305, 371], "crossq": [0, 287, 371], "iql": [0, 292, 300, 371, 378, 390, 391], "cql": [0, 285, 291, 371], "gail": [0, 298, 371], "dt": [0, 124, 268, 269, 371, 392], "td3": [0, 309, 310, 371], "bc": [0, 5, 309, 371, 396], "a2c": [0, 284, 371], "dreamer": [0, 136, 137, 219, 295, 296, 297, 371, 373], "checkpoint": [0, 45, 72, 74, 77, 89, 90, 92, 96, 371, 393, 394], "builder": [0, 371, 379, 397], "logger": [0, 3, 11, 336, 338, 340, 341, 342, 343, 344, 345, 349, 355, 365, 369, 371, 379, 390], "_util": [0, 3, 12, 371, 387], "implement_for": [0, 3, 371], "thing": [0, 3, 7, 8, 103, 107, 123, 124, 130, 131, 233, 234, 372, 380, 381, 382, 383, 384, 385, 386, 390, 391, 394, 397], "consid": [0, 1, 2, 3, 8, 20, 27, 33, 37, 42, 45, 50, 51, 74, 75, 95, 103, 107, 123, 124, 130, 131, 154, 193, 195, 216, 233, 234, 249, 285, 287, 300, 305, 307, 309, 310, 318, 320, 321, 372, 378, 382, 383, 384, 392, 394], "when": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 88, 89, 91, 95, 103, 104, 106, 107, 108, 116, 117, 118, 120, 122, 123, 124, 125, 126, 130, 131, 132, 133, 140, 142, 145, 146, 150, 152, 154, 155, 163, 164, 165, 169, 170, 177, 183, 186, 187, 189, 191, 192, 193, 195, 202, 203, 204, 206, 207, 218, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 244, 250, 267, 270, 273, 274, 276, 280, 285, 286, 287, 289, 294, 300, 301, 302, 304, 305, 307, 309, 310, 311, 316, 317, 318, 319, 320, 321, 336, 337, 338, 340, 352, 369, 372, 373, 374, 375, 378, 379, 380, 381, 383, 385, 386, 390, 391, 392, 393, 394, 397], "debug": [0, 6, 8, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 372, 397], "work": [0, 1, 2, 3, 4, 8, 11, 12, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 80, 85, 87, 88, 91, 98, 103, 106, 107, 108, 111, 123, 124, 127, 130, 131, 147, 163, 169, 189, 192, 193, 195, 204, 208, 209, 228, 263, 272, 277, 286, 301, 304, 355, 372, 373, 378, 379, 380, 381, 382, 385, 389, 390, 391, 392, 393, 394, 396, 397], "habitat": [0, 3, 109, 372, 393], "lab": [0, 3, 101, 102, 109, 372], "mujoco": [0, 6, 8, 127, 372, 378, 380, 381], "error": [0, 1, 3, 7, 10, 12, 25, 29, 34, 35, 36, 37, 40, 41, 43, 46, 103, 107, 123, 124, 130, 131, 134, 170, 195, 197, 302, 372, 374, 378, 380, 390, 391, 397], "solut": [0, 2, 3, 6, 7, 9, 21, 372, 373, 375, 396], "resourc": [0, 1, 21, 109, 372, 378, 380, 390, 391], "issu": [0, 3, 4, 5, 8, 61, 65, 72, 74, 75, 95, 106, 111, 146, 170, 184, 204, 255, 262, 263, 270, 271, 272, 273, 274, 372, 396], "customis": [0, 372, 379, 386, 390, 391], "video": [0, 4, 9, 338, 340, 351, 369, 371, 372, 387, 390, 391], "render": [0, 3, 8, 113, 132, 336, 338, 351, 372, 378, 379, 380, 382, 386], "index": [0, 3, 7, 8, 10, 16, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 79, 80, 82, 83, 85, 91, 93, 94, 95, 97, 98, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 141, 146, 150, 154, 187, 204, 231, 232, 371, 382, 389, 390, 391, 394, 396], "search": [0, 122, 205, 379], "page": [0, 7, 24, 345, 384], "somewhat": [1, 2, 374, 383, 397], "equival": [1, 3, 25, 27, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 143, 153, 156, 187, 195, 218, 225, 228, 244, 262, 263, 271, 272, 304, 352, 385, 396, 397], "dataload": [1, 70, 86, 88, 379, 385, 394], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 146, 158, 174, 182, 183, 184, 187, 195, 221, 223, 225, 227, 241, 259, 260, 264, 265, 268, 269, 287, 302, 307, 338, 373, 379, 382, 390, 394, 396, 397], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 160, 163, 165, 167, 169, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 320, 321, 324, 326, 327, 328, 332, 333, 335, 336, 338, 346, 351, 352, 353, 365, 369, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397], "thei": [1, 2, 3, 4, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 103, 106, 107, 108, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 142, 145, 158, 163, 169, 178, 186, 187, 191, 195, 227, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 352, 355, 373, 374, 375, 378, 379, 380, 381, 384, 389, 390, 391, 392, 393, 394, 396, 397], "over": [1, 2, 3, 4, 8, 14, 15, 37, 45, 51, 52, 54, 60, 61, 67, 80, 86, 87, 103, 107, 117, 118, 123, 124, 130, 131, 139, 154, 165, 177, 184, 195, 204, 250, 253, 276, 294, 296, 302, 324, 336, 358, 375, 378, 379, 380, 382, 383, 384, 385, 390, 391, 392, 397], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 39, 41, 42, 43, 46, 50, 51, 67, 76, 103, 107, 123, 124, 125, 126, 130, 131, 143, 144, 150, 159, 169, 183, 186, 187, 188, 189, 191, 195, 204, 221, 223, 225, 227, 233, 273, 274, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 373, 378, 381, 390, 391, 392, 394, 397], "static": [1, 12, 47, 54, 80, 87, 88, 109, 124, 193, 300, 382, 392, 394], "like": [1, 2, 3, 4, 7, 11, 21, 27, 33, 37, 42, 45, 50, 51, 54, 76, 82, 88, 103, 107, 109, 116, 123, 124, 125, 126, 130, 131, 156, 183, 185, 195, 197, 221, 225, 234, 266, 284, 286, 301, 304, 305, 306, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 397], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 70, 93, 96, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 145, 152, 154, 155, 164, 172, 183, 187, 195, 202, 203, 223, 227, 264, 268, 269, 286, 287, 301, 302, 304, 307, 338, 352, 357, 367, 368, 369, 373, 378, 379, 380, 381, 385, 390, 391, 392, 394], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 45, 64, 65, 68, 69, 70, 103, 107, 119, 123, 124, 130, 131, 141, 146, 150, 159, 169, 177, 183, 186, 187, 188, 189, 191, 195, 228, 253, 273, 274, 275, 287, 307, 338, 375, 380, 382, 386, 394, 397], "two": [1, 2, 3, 4, 8, 10, 35, 36, 37, 42, 45, 47, 50, 51, 67, 82, 86, 88, 103, 107, 123, 124, 130, 131, 143, 165, 169, 191, 195, 214, 221, 223, 225, 227, 233, 234, 247, 250, 274, 301, 309, 313, 351, 355, 374, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 392, 394, 396, 397], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 69, 104, 274, 355, 373, 374, 378, 379, 389, 397], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 86, 87, 88, 91, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 127, 130, 131, 132, 133, 142, 143, 147, 149, 150, 169, 177, 178, 181, 183, 185, 186, 187, 189, 191, 195, 204, 206, 208, 209, 221, 223, 225, 227, 228, 231, 232, 233, 234, 236, 253, 255, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 312, 316, 318, 319, 320, 321, 322, 326, 336, 337, 338, 345, 348, 358, 365, 366, 369, 378, 379, 380, 381, 382, 383, 385, 390, 391, 392, 394, 397], "list": [1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 85, 86, 87, 88, 89, 91, 101, 102, 103, 106, 107, 108, 109, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 144, 145, 149, 152, 155, 163, 165, 167, 169, 177, 179, 185, 187, 189, 191, 193, 195, 204, 208, 209, 211, 217, 220, 223, 227, 228, 231, 232, 239, 244, 263, 267, 271, 272, 274, 276, 277, 278, 285, 287, 300, 302, 305, 307, 309, 310, 315, 318, 321, 336, 337, 351, 352, 367, 368, 373, 374, 378, 380, 382, 383, 384, 385, 389, 390, 392, 393, 394, 396, 397], "constructor": [1, 2, 16, 18, 19, 20, 21, 45, 54, 67, 79, 93, 103, 107, 120, 123, 124, 130, 131, 132, 142, 186, 208, 209, 228, 270, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 366, 369, 373, 378, 379, 380, 382, 385, 390, 391, 394], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 82, 86, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 157, 165, 178, 195, 206, 208, 209, 228, 233, 234, 248, 255, 262, 270, 271, 273, 275, 276, 278, 302, 315, 351, 354, 355, 374, 375, 378, 380, 381, 385, 387, 390, 391, 392], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 44, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 82, 99, 100, 103, 104, 107, 108, 109, 111, 112, 113, 119, 120, 123, 124, 127, 130, 131, 140, 187, 195, 221, 223, 225, 227, 235, 264, 267, 275, 276, 302, 309, 359, 369, 373, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 394, 395, 397], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 47, 61, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 140, 145, 159, 162, 165, 181, 182, 183, 184, 187, 192, 195, 204, 205, 206, 207, 219, 221, 223, 225, 227, 229, 230, 259, 260, 264, 265, 267, 268, 269, 270, 274, 284, 295, 304, 317, 318, 319, 320, 321, 324, 325, 326, 337, 340, 346, 351, 355, 375, 379, 381, 383, 384, 386, 387, 389, 392, 393, 396], "queri": [1, 3, 14, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 169, 186, 189, 193, 195, 276, 374, 378, 384, 392, 396], "defin": [1, 2, 12, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 170, 182, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 281, 289, 291, 302, 318, 319, 320, 321, 322, 337, 366, 378, 379, 381, 384, 387, 392, 394, 397], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 29, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 85, 87, 88, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 139, 145, 146, 154, 160, 164, 165, 176, 181, 184, 187, 193, 195, 206, 207, 208, 209, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 238, 239, 240, 243, 245, 246, 249, 250, 251, 252, 255, 259, 260, 261, 264, 265, 267, 268, 269, 270, 273, 274, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 346, 348, 351, 355, 357, 358, 359, 367, 368, 369, 373, 374, 378, 379, 380, 381, 382, 383, 385, 387, 390, 391, 392, 393, 394, 397], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 37, 54, 66, 86, 93, 103, 107, 123, 124, 130, 131, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 195, 197, 221, 223, 227, 228, 236, 237, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 319, 320, 321, 352, 378, 380, 381, 385, 386, 390, 391, 392, 394, 397], "deliv": [1, 2, 3, 16, 67, 378, 379, 382, 385, 396], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 33, 34, 41, 42, 43, 45, 46, 50, 51, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 103, 106, 107, 108, 116, 123, 124, 125, 126, 130, 131, 193, 221, 223, 225, 226, 227, 267, 275, 276, 285, 287, 300, 305, 307, 309, 310, 337, 346, 373, 379, 382, 389, 390, 392, 396], "user": [1, 2, 3, 5, 8, 23, 37, 61, 63, 67, 69, 80, 88, 103, 107, 123, 124, 130, 131, 147, 182, 187, 195, 197, 215, 287, 304, 307, 309, 338, 366, 374, 375, 378, 379, 382, 384, 385, 392, 396, 397], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 47, 86, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 181, 259, 260, 264, 265, 268, 269, 378, 380, 387, 390, 391, 396, 397], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 82, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 152, 153, 155, 156, 157, 164, 165, 167, 171, 172, 174, 176, 178, 181, 183, 184, 186, 187, 193, 195, 204, 205, 207, 221, 223, 227, 230, 267, 284, 285, 286, 287, 288, 289, 291, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 373, 374, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "state": [1, 2, 3, 4, 14, 15, 16, 17, 30, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 142, 145, 146, 147, 149, 156, 165, 172, 181, 182, 186, 187, 193, 195, 197, 204, 205, 207, 210, 215, 219, 221, 222, 223, 225, 226, 227, 228, 230, 235, 239, 242, 243, 245, 246, 252, 256, 267, 273, 279, 284, 286, 287, 291, 301, 302, 304, 305, 306, 307, 316, 317, 318, 319, 320, 321, 322, 369, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 392, 397], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 30, 37, 41, 43, 46, 47, 61, 82, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 120, 121, 123, 124, 127, 130, 131, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 206, 221, 223, 227, 236, 259, 260, 262, 264, 271, 287, 296, 307, 309, 379, 380, 381, 382, 383, 385, 387, 390, 391, 392, 393, 394, 397], "predefin": [1, 379, 381, 385, 394], "becaus": [1, 3, 4, 7, 41, 43, 46, 47, 61, 103, 107, 123, 124, 130, 131, 156, 163, 181, 186, 192, 195, 214, 234, 255, 262, 263, 267, 270, 271, 272, 273, 274, 373, 378, 379, 381, 383, 384, 385, 389, 390, 391, 392, 394, 397], "potenti": [1, 2, 392, 394], "comput": [1, 3, 4, 8, 14, 16, 21, 29, 37, 47, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 165, 179, 187, 190, 195, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 238, 239, 240, 241, 242, 245, 246, 248, 250, 251, 253, 256, 259, 260, 261, 263, 264, 267, 268, 269, 270, 272, 274, 277, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 359, 374, 378, 380, 381, 382, 383, 389, 390, 391, 393, 394], "heavi": [1, 8, 61, 394], "crucial": [1, 2, 3, 259, 260, 264, 265, 268, 269, 292, 300, 302, 378, 379, 380, 381, 382, 384, 386, 390, 391, 392, 397], "configur": [1, 8, 21, 22, 47, 163, 210, 215, 242, 302, 304, 373, 378, 379, 380, 384, 390, 391, 392], "hyperparamet": [1, 85, 195, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 378, 386, 392, 394], "appropri": [1, 3, 4, 7, 11, 73, 83, 93, 94, 97, 98, 123, 130, 156, 366, 369, 378, 386, 394], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 81, 82, 85, 86, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 373, 374, 378, 381, 383, 387, 390, 391, 392, 393, 396], "take": [1, 2, 3, 8, 23, 47, 64, 90, 96, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 149, 181, 184, 186, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 277, 280, 283, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 346, 357, 373, 375, 378, 379, 380, 382, 383, 384, 390, 391, 392, 394, 397], "consider": [1, 2, 3, 8, 106, 108, 379, 390, 391, 394], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 113, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 142, 152, 155, 182, 187, 193, 195, 205, 208, 209, 223, 227, 228, 278, 284, 285, 286, 287, 288, 289, 291, 293, 294, 298, 301, 302, 304, 305, 306, 307, 309, 310, 316, 318, 321, 378, 379, 380, 382, 390, 391, 392, 397], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 80, 82, 87, 88, 89, 93, 96, 101, 102, 103, 106, 107, 108, 109, 113, 116, 119, 123, 124, 125, 126, 130, 131, 132, 133, 139, 142, 143, 146, 149, 150, 152, 153, 156, 157, 159, 163, 165, 170, 171, 172, 174, 177, 178, 181, 182, 184, 186, 187, 192, 193, 195, 197, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 234, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 270, 272, 273, 274, 277, 280, 284, 286, 287, 293, 299, 301, 302, 304, 305, 306, 308, 309, 317, 318, 319, 320, 321, 322, 338, 340, 350, 351, 352, 355, 365, 367, 368, 369, 373, 375, 378, 379, 380, 381, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "occur": [1, 8, 15, 33, 34, 61, 103, 107, 109, 123, 124, 130, 131, 147, 157, 165, 170, 192, 205, 206, 255, 262, 263, 270, 271, 272, 273, 274, 296, 394, 397], "serial": [1, 2, 3, 37, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 193, 195], "parallel": [1, 3, 8, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 187, 192, 197, 223, 227, 284, 366, 367, 368, 369, 379, 380, 390, 391], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 174, 223, 227, 365, 368, 371, 378, 379, 380, 381, 385, 387, 390, 391, 394], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 116, 119, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 367, 368, 369, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 394, 397], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 43, 46, 54, 64, 69, 70, 104, 120, 123, 130, 193, 367, 368, 369, 378, 379, 380, 396, 397], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 368, 371, 380, 385, 396], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 32, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 87, 88, 116, 125, 126, 221, 225, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 373, 375, 380, 383, 394, 396], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 80, 87, 88, 99, 100, 101, 102, 106, 108, 109, 111, 112, 113, 120, 121, 123, 127, 131, 193, 195, 223, 227, 233, 268, 269, 302, 357, 371, 373, 374, 378, 382, 386, 390, 391, 392], "aggreg": [1, 3, 61, 80, 93, 125, 126, 205, 208, 209, 211, 212, 276], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 37, 41, 42, 43, 44, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 104, 107, 123, 124, 130, 131, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 197, 204, 205, 221, 223, 225, 227, 228, 233, 244, 250, 259, 261, 263, 264, 272, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 357, 373, 374, 379, 381, 382, 383, 386, 387, 392, 393, 396, 397], "final": [1, 2, 3, 4, 21, 41, 43, 46, 47, 183, 192, 221, 223, 225, 227, 233, 259, 260, 264, 265, 266, 268, 269, 275, 318, 351, 373, 378, 379, 380, 386, 387, 390, 391, 392, 397], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 367, 371, 378, 379, 380, 385, 396], "sever": [1, 2, 3, 8, 35, 37, 54, 64, 103, 107, 123, 124, 130, 131, 147, 149, 187, 195, 304, 378, 380, 386, 387, 394, 397], "gather": [1, 3, 18, 20, 21, 54, 70, 74, 75, 80, 87, 95, 170, 232, 235, 241, 302, 317, 359, 372, 379, 380, 381, 385, 390, 391, 392, 394, 397], "continu": [1, 2, 9, 26, 55, 88, 103, 107, 123, 124, 125, 126, 130, 131, 132, 133, 139, 201, 211, 212, 213, 214, 268, 269, 276, 281, 285, 308, 318, 323, 331, 373, 378, 380, 381, 383, 390, 391, 392, 394, 396, 397], "concomitantli": [1, 103, 107, 123, 124, 130, 131], "network": [1, 4, 8, 37, 103, 107, 116, 123, 124, 125, 126, 130, 131, 195, 208, 209, 211, 212, 213, 214, 217, 219, 220, 225, 228, 233, 234, 235, 237, 239, 240, 243, 245, 246, 247, 252, 256, 257, 258, 261, 273, 277, 285, 286, 287, 288, 289, 291, 292, 293, 294, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 314, 316, 318, 319, 320, 321, 322, 364, 365, 373, 374, 375, 384, 387, 389, 392, 397], "impli": [1, 397], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 47, 80, 82, 85, 99, 100, 103, 107, 123, 124, 128, 129, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 221, 222, 223, 225, 226, 227, 233, 235, 237, 273, 284, 285, 286, 287, 293, 296, 307, 309, 357, 364, 373, 375, 378, 379, 380, 381, 389, 392, 394, 396], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 34, 37, 41, 43, 46, 63, 69, 72, 80, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 163, 165, 178, 187, 188, 193, 195, 197, 206, 223, 227, 228, 233, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 392, 393, 394, 396, 397], "slightli": [1, 23, 61, 373, 374, 381, 390, 392, 393, 394, 397], "lag": [1, 378, 379, 380], "therefor": [1, 2, 3, 7, 42, 45, 50, 51, 68, 69, 103, 107, 123, 124, 130, 131, 174, 304, 316, 384, 390, 397], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 30, 32, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 80, 82, 87, 88, 93, 95, 96, 103, 107, 116, 119, 122, 123, 124, 125, 126, 130, 131, 139, 140, 143, 146, 156, 163, 169, 174, 177, 181, 182, 184, 186, 188, 191, 192, 204, 205, 221, 222, 223, 225, 226, 227, 231, 232, 233, 259, 260, 264, 265, 268, 269, 270, 273, 274, 283, 284, 285, 286, 287, 292, 293, 294, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 374, 375, 378, 379, 380, 382, 389, 390, 391, 392, 394, 397], "asynchron": [1, 9, 15, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 284, 367, 378, 379, 380], "off": [1, 2, 4, 224, 251, 262, 307, 336, 351, 360, 373, 375, 378, 379, 380, 383, 384, 390, 391, 393, 397], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 95, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 132, 152, 155, 159, 165, 182, 187, 192, 195, 197, 218, 221, 223, 225, 227, 234, 236, 256, 258, 261, 263, 271, 284, 292, 294, 300, 304, 351, 373, 375, 378, 379, 380, 381, 382, 383, 385, 386, 390, 391, 392, 393, 394, 397], "remot": [1, 2, 18, 19, 20, 21, 123, 130, 397], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 47, 93, 99, 100, 103, 107, 109, 110, 112, 113, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 149, 152, 155, 156, 157, 163, 167, 171, 172, 177, 178, 179, 181, 182, 184, 193, 195, 197, 207, 223, 227, 230, 267, 268, 269, 284, 336, 338, 359, 373, 378, 380, 381, 383, 384, 385, 386, 387, 393, 394, 396], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 178, 305, 318, 319, 320, 321, 322, 374, 378, 380, 383, 384, 385], "synchronis": [1, 104, 390, 391], "either": [1, 2, 5, 22, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 103, 107, 123, 124, 130, 131, 181, 182, 195, 279, 302, 309, 310, 342, 375, 378, 379, 381, 390, 393, 394, 396, 397], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 378, 391, 396], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 154, 157, 159, 162, 163, 164, 165, 169, 170, 172, 173, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 193, 195, 197, 201, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 250, 251, 255, 256, 257, 258, 260, 262, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 286, 287, 288, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 313, 318, 319, 320, 321, 324, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 345, 348, 349, 351, 352, 355, 369, 373, 374, 375, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "second": [1, 3, 8, 23, 35, 36, 61, 64, 93, 143, 221, 223, 225, 227, 263, 286, 301, 304, 307, 340, 354, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 150, 152, 153, 155, 156, 157, 163, 167, 168, 169, 171, 172, 174, 178, 181, 183, 185, 186, 187, 189, 191, 193, 195, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 236, 237, 242, 243, 244, 252, 255, 256, 257, 258, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 276, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 336, 352, 357, 363, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 53, 54, 55, 56, 80, 87, 103, 107, 123, 124, 130, 131, 143, 159, 163, 186, 195, 217, 218, 222, 226, 238, 256, 257, 258, 262, 263, 266, 273, 279, 284, 286, 288, 289, 294, 301, 304, 306, 316, 317, 318, 319, 320, 321, 355, 371, 374, 375, 378, 379, 380, 381, 382, 383, 389, 390, 391, 392, 397], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 78, 80, 82, 87, 88, 95, 102, 103, 104, 106, 107, 108, 119, 123, 124, 130, 131, 146, 165, 183, 186, 187, 193, 195, 201, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 233, 234, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 285, 287, 289, 292, 293, 300, 302, 305, 307, 309, 310, 316, 318, 319, 320, 321, 336, 338, 342, 351, 359, 360, 361, 365, 367, 368, 373, 374, 375, 378, 380, 381, 382, 383, 392, 394, 397], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 27, 30, 33, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 150, 152, 153, 155, 156, 157, 167, 169, 171, 172, 174, 178, 181, 183, 186, 187, 189, 191, 195, 201, 204, 207, 217, 221, 222, 223, 225, 226, 227, 230, 236, 237, 243, 244, 252, 255, 256, 257, 258, 261, 262, 263, 267, 268, 270, 271, 272, 273, 276, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 336, 352, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "slower": 1, "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 61, 63, 67, 80, 87, 88, 91, 93, 103, 107, 111, 123, 124, 127, 130, 131, 172, 214, 223, 225, 227, 228, 238, 253, 255, 259, 260, 262, 273, 278, 302, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 372, 374, 378, 379, 380, 382, 384, 385, 390, 391, 392, 394, 396, 397], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 29, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 78, 79, 80, 82, 83, 87, 88, 89, 91, 93, 94, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 143, 146, 149, 152, 153, 154, 155, 164, 165, 169, 174, 177, 180, 182, 183, 184, 186, 187, 188, 191, 193, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 248, 253, 255, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 316, 318, 319, 320, 321, 325, 326, 340, 348, 350, 351, 355, 359, 369, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 397], "cuda": [1, 2, 3, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 99, 100, 103, 107, 109, 110, 111, 123, 124, 130, 131, 150, 163, 168, 169, 183, 186, 187, 189, 191, 195, 221, 222, 225, 226, 273, 347, 378, 379, 380, 381, 390, 391, 393, 397], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 29, 52, 82, 99, 100, 112, 113, 123, 130, 131, 147, 149, 154, 162, 164, 174, 177, 181, 186, 193, 221, 225, 227, 233, 236, 237, 255, 262, 270, 271, 273, 274, 277, 286, 293, 301, 304, 324, 369, 373, 374, 375, 378, 379, 380, 382, 384, 385, 390, 391, 392, 394, 396], "infer": [1, 123, 130, 146, 193, 223, 227, 236, 261, 270, 291, 336, 378, 380, 385, 387, 394], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 37, 61, 64, 80, 87, 88, 99, 100, 101, 102, 103, 106, 107, 112, 113, 119, 120, 121, 123, 124, 130, 131, 164, 165, 187, 193, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 275, 276, 277, 280, 287, 307, 338, 345, 351, 367, 368, 369, 372, 375, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396], "dispatch": [1, 18, 19, 20, 21, 253, 267, 338, 378], "avail": [1, 2, 3, 4, 6, 21, 42, 45, 50, 51, 61, 64, 69, 80, 86, 87, 88, 101, 102, 111, 117, 118, 123, 125, 126, 127, 132, 133, 139, 142, 145, 163, 218, 244, 270, 274, 302, 338, 367, 368, 373, 378, 379, 380, 381, 382, 383, 390, 391, 392, 394, 397], "speed": [1, 2, 4, 8, 29, 103, 107, 123, 124, 130, 131, 374, 378, 379, 380, 381, 390, 391, 392, 394], "avoid": [1, 2, 3, 37, 74, 75, 95, 103, 107, 123, 124, 130, 131, 138, 187, 193, 195, 206, 255, 273, 278, 286, 287, 301, 304, 307, 358, 380, 391], "oom": [1, 3, 41, 43, 46, 74, 75, 95], "choic": [1, 2, 63, 69, 123, 238, 373, 374, 378, 379, 384, 390, 391], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 33, 37, 42, 45, 47, 50, 51, 54, 61, 64, 65, 67, 68, 69, 72, 74, 75, 80, 82, 87, 88, 93, 95, 103, 104, 105, 107, 116, 120, 123, 124, 125, 126, 130, 131, 132, 142, 143, 152, 155, 172, 186, 188, 193, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 234, 235, 236, 238, 239, 240, 242, 243, 245, 246, 248, 252, 253, 255, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 285, 286, 287, 300, 301, 302, 304, 305, 307, 309, 310, 318, 319, 320, 321, 322, 336, 352, 367, 368, 369, 373, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 394, 397], "ie": [1, 3, 18, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 50, 53, 54, 55, 56, 67, 79, 88, 103, 107, 111, 122, 123, 124, 130, 131, 139, 146, 159, 188, 193, 205, 223, 227, 261, 373, 374, 379, 391], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 37, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 87, 93, 95, 103, 107, 123, 124, 130, 131, 192, 193, 195, 207, 230, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 345, 371, 375, 378, 380, 381, 383, 385, 387, 390, 391, 393, 397], "while": [1, 2, 3, 7, 8, 23, 37, 103, 107, 123, 124, 130, 131, 174, 187, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 287, 292, 300, 301, 304, 307, 373, 374, 378, 380, 381, 383, 385, 386, 390, 391, 392, 393, 394, 396], "wait": [1, 20, 21, 22, 381, 392], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 29, 35, 36, 37, 40, 41, 43, 45, 46, 50, 61, 64, 65, 67, 68, 69, 70, 74, 75, 80, 82, 87, 88, 93, 95, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 138, 142, 143, 145, 146, 154, 165, 172, 174, 177, 178, 181, 183, 187, 195, 204, 208, 209, 221, 225, 246, 267, 270, 275, 276, 277, 284, 285, 287, 288, 289, 291, 292, 293, 298, 300, 304, 307, 309, 318, 325, 326, 336, 338, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 394, 397], "impact": [1, 2, 3, 67, 113, 152, 155, 206, 284, 286, 301, 304, 306, 379, 381, 390, 391], "memori": [1, 3, 8, 21, 29, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 72, 74, 78, 103, 104, 107, 111, 123, 124, 130, 131, 146, 150, 169, 183, 186, 187, 189, 191, 193, 195, 225, 226, 273, 369, 371, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "manag": [1, 8, 314, 315, 318, 319, 320, 321, 351, 384], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 71, 79, 80, 82, 85, 87, 88, 93, 103, 107, 112, 113, 123, 124, 125, 126, 130, 131, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 204, 205, 207, 217, 218, 223, 227, 229, 230, 244, 255, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 336, 338, 349, 350, 351, 353, 354, 355, 359, 374, 375, 378, 380, 381, 382, 384, 389, 390, 391, 392, 394, 396, 397], "control": [1, 3, 5, 8, 16, 23, 24, 28, 80, 87, 101, 102, 103, 107, 116, 123, 124, 125, 126, 130, 131, 154, 204, 211, 212, 213, 214, 223, 227, 229, 230, 246, 253, 268, 269, 273, 274, 275, 284, 286, 287, 301, 302, 304, 308, 318, 323, 331, 336, 373, 375, 378, 379, 380, 382, 383, 384, 390, 391, 392, 394], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 85, 86, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 146, 147, 152, 155, 160, 163, 164, 165, 169, 170, 181, 183, 184, 186, 187, 189, 193, 195, 197, 217, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 251, 256, 257, 258, 261, 267, 270, 273, 274, 276, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 313, 316, 318, 319, 320, 321, 336, 338, 346, 350, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393, 394, 397], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 379, 391], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 29, 35, 36, 40, 42, 43, 45, 47, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 80, 82, 85, 87, 103, 107, 123, 124, 125, 126, 130, 131, 142, 143, 146, 149, 152, 155, 157, 160, 167, 179, 187, 193, 195, 206, 223, 227, 234, 318, 320, 321, 351, 355, 374, 378, 379, 380, 381, 383, 384, 385, 387, 390, 391, 392, 394, 397], "heurist": [1, 4, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 267, 269, 378, 385, 397], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 63, 85, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 237, 304, 309, 318, 319, 320, 321, 322, 337, 372, 373, 375, 378, 379, 380, 381, 383, 385, 386, 391, 394, 397], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 52, 54, 63, 67, 86, 87, 91, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 127, 130, 131, 139, 146, 152, 154, 155, 160, 164, 165, 186, 187, 193, 195, 208, 209, 222, 223, 226, 227, 228, 231, 232, 233, 234, 250, 261, 268, 269, 277, 285, 287, 300, 302, 305, 307, 309, 310, 374, 378, 379, 380, 382, 383, 385, 389, 390, 391, 393, 394, 397], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 79, 80, 82, 85, 86, 87, 88, 93, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 151, 152, 154, 155, 156, 157, 159, 163, 164, 165, 167, 169, 170, 174, 176, 177, 178, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 197, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 249, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 365, 369, 374, 375, 378, 379, 380, 381, 383, 390, 393, 394, 396, 397], "behaviour": [1, 3, 14, 15, 21, 67, 107, 147, 152, 155, 165, 170, 182, 204, 206, 223, 224, 227, 251, 336, 351, 373, 379, 390, 394], "besid": 1, "those": [1, 2, 3, 5, 7, 27, 33, 103, 107, 123, 124, 130, 131, 146, 152, 155, 165, 183, 184, 227, 270, 274, 275, 276, 357, 367, 368, 373, 378, 379, 382, 383, 391, 392, 397], "choos": [1, 11, 116, 223, 227, 304, 371, 373, 374, 378, 379, 380, 390, 391, 394], "follow": [1, 2, 3, 6, 7, 8, 11, 37, 41, 43, 44, 46, 47, 61, 63, 64, 65, 66, 67, 68, 69, 80, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 142, 163, 169, 189, 193, 195, 208, 209, 221, 223, 225, 227, 228, 263, 270, 271, 272, 283, 284, 285, 286, 287, 288, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 338, 355, 373, 374, 375, 378, 379, 380, 381, 384, 385, 389, 390, 391, 392, 394, 396, 397], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 358, 378, 380, 396], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 37, 61, 146, 160, 195, 259, 260, 264, 267, 268, 269, 337, 338, 340, 348, 351, 355, 358, 359, 378, 379, 380, 381, 383, 390, 391, 394, 396, 397], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 81, 82, 86, 87, 89, 91, 95, 96, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 122, 123, 124, 127, 130, 131, 142, 143, 146, 149, 150, 154, 157, 159, 162, 163, 165, 167, 168, 169, 177, 179, 183, 186, 187, 189, 191, 192, 193, 195, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 234, 235, 236, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 265, 267, 268, 269, 272, 273, 274, 276, 277, 280, 286, 287, 301, 302, 304, 307, 309, 317, 318, 319, 320, 321, 336, 337, 340, 351, 374, 375, 379, 380, 381, 382, 383, 385, 386, 390, 391, 392, 394, 396, 397], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 174, 223, 227, 358, 378, 379, 380, 381, 385, 387, 390, 391, 394, 396], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 32, 35, 36, 37, 38, 45, 47, 49, 50, 61, 63, 64, 67, 80, 82, 85, 87, 88, 90, 93, 103, 104, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 162, 169, 174, 177, 181, 182, 183, 184, 191, 193, 195, 218, 221, 222, 223, 225, 227, 233, 234, 239, 243, 244, 252, 259, 260, 262, 263, 264, 272, 276, 324, 327, 328, 329, 330, 332, 333, 334, 335, 338, 351, 352, 367, 368, 373, 374, 378, 379, 380, 381, 383, 384, 385, 387, 390, 391, 392, 393, 394, 396, 397], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 358, 378, 379, 387], "rand_step": [1, 2, 3, 30, 48, 101, 102, 103, 104, 106, 107, 108, 114, 115, 119, 120, 121, 123, 124, 130, 131, 162, 183, 193, 392, 396, 397], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 378], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 63, 65, 67, 68, 69, 378, 379, 380], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 32, 37, 38, 49, 50, 61, 63, 64, 65, 67, 68, 69, 79, 80, 87, 88, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 170, 181, 186, 195, 207, 227, 230, 268, 269, 304, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 346, 371, 374, 378, 379, 380, 381, 382, 385, 387, 392, 396, 397], "pad": [1, 2, 3, 23, 44, 52, 63, 65, 67, 68, 69, 146, 208, 209, 211, 212, 227, 231, 232, 233, 352], "along": [1, 2, 3, 14, 15, 23, 33, 34, 41, 43, 46, 47, 54, 63, 65, 67, 68, 69, 75, 80, 82, 87, 88, 93, 95, 106, 108, 145, 146, 147, 165, 167, 170, 177, 185, 227, 228, 231, 232, 237, 262, 270, 273, 274, 287, 302, 309, 373, 378, 379, 381, 382, 384, 390, 391, 392, 394], "point": [1, 2, 3, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 66, 73, 79, 80, 83, 93, 94, 97, 98, 103, 107, 123, 124, 130, 131, 139, 142, 145, 146, 150, 169, 182, 183, 185, 186, 187, 189, 191, 195, 229, 273, 283, 294, 355, 372, 379, 380, 389, 390, 391, 392, 394, 397], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 80, 87, 88, 107, 142, 170, 181, 205, 231, 232, 260, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 375, 381], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 48, 50, 65, 101, 102, 103, 106, 107, 108, 123, 124, 130, 131, 132, 133, 160, 170, 193, 195, 218, 231, 232, 244, 262, 263, 271, 272, 274, 313, 318, 352, 378, 380, 381, 382, 383, 384, 390, 391], "valid": [1, 2, 3, 23, 41, 43, 44, 54, 70, 93, 134, 142, 170, 187, 195, 208, 209, 228, 231, 232, 259, 260, 268, 269, 301, 318, 319, 320, 321, 352, 375, 397], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 351, 371, 378, 379], "strategi": [1, 2, 16, 67, 85, 116, 139, 232, 241, 264, 373, 375, 378, 379, 383, 390, 391, 394], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 50, 53, 55, 56, 58, 82, 103, 107, 113, 119, 123, 124, 125, 126, 130, 131, 132, 134, 143, 145, 146, 156, 163, 181, 182, 183, 186, 187, 192, 193, 195, 208, 209, 231, 232, 233, 234, 259, 260, 262, 270, 271, 274, 277, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 310, 316, 338, 355, 365, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 397], "organ": [1, 2, 392, 394], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 103, 106, 107, 108, 123, 124, 127, 130, 131, 143, 146, 152, 155, 156, 174, 181, 192, 193, 195, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 281, 289, 294, 309, 316, 336, 338, 373, 374, 379, 382, 383, 384, 385, 386, 387, 390, 392, 396], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 54, 55, 56, 63, 64, 67, 85, 99, 100, 103, 107, 112, 113, 116, 123, 124, 125, 126, 130, 131, 142, 146, 154, 165, 172, 187, 188, 195, 218, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 235, 244, 300, 302, 304, 313, 318, 319, 320, 324, 325, 326, 351, 355, 357, 367, 368, 373, 374, 375, 378, 379, 380, 382, 384, 386, 389, 390, 391, 392, 393, 394, 397], "how": [1, 2, 3, 11, 18, 19, 20, 24, 37, 42, 50, 67, 79, 80, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 195, 235, 270, 284, 286, 299, 301, 302, 304, 338, 340, 355, 372, 373, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "tabl": [1, 373, 379, 383], "summar": [1, 3, 392], "what": [1, 3, 8, 11, 28, 42, 53, 61, 80, 87, 103, 107, 123, 124, 130, 131, 156, 183, 197, 204, 271, 287, 298, 302, 309, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 387, 390, 391, 392, 393, 394, 396, 397], "expect": [1, 2, 3, 4, 7, 27, 37, 45, 53, 54, 80, 86, 87, 103, 107, 119, 122, 123, 124, 130, 131, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 197, 221, 222, 223, 225, 226, 227, 233, 234, 263, 268, 269, 273, 276, 284, 285, 286, 287, 288, 289, 291, 292, 293, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 359, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 390, 391, 392, 394, 397], "n": [1, 2, 3, 6, 7, 25, 29, 37, 40, 47, 103, 107, 123, 124, 130, 131, 146, 154, 159, 188, 195, 221, 222, 225, 230, 267, 268, 269, 274, 284, 285, 293, 302, 317, 352, 373, 375, 379, 381, 383, 390, 391, 394, 397], "b": [1, 2, 3, 7, 8, 23, 27, 33, 41, 43, 45, 46, 47, 50, 51, 74, 93, 221, 222, 225, 226, 233, 234, 236, 237, 243, 252, 277, 318, 319, 320, 321, 322, 324, 338, 373, 379, 393, 394], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 79, 80, 82, 86, 93, 103, 104, 106, 107, 120, 121, 123, 124, 130, 131, 139, 142, 146, 152, 155, 156, 169, 173, 174, 182, 184, 191, 193, 195, 197, 204, 221, 225, 262, 268, 269, 273, 308, 318, 319, 320, 321, 322, 324, 338, 345, 355, 357, 369, 372, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "p": [1, 2, 4, 82, 85, 104, 128, 129], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 61, 63, 65, 67, 68, 69, 99, 100, 103, 107, 112, 113, 123, 124, 125, 126, 130, 131, 150, 152, 153, 155, 162, 169, 174, 178, 182, 183, 185, 186, 187, 189, 191, 192, 195, 221, 224, 225, 228, 233, 246, 250, 251, 273, 276, 283, 284, 285, 287, 288, 289, 291, 292, 293, 300, 302, 304, 305, 306, 307, 309, 310, 357, 367, 368, 369, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 397], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 79, 80, 82, 93, 103, 106, 107, 123, 124, 130, 131, 152, 153, 155, 162, 165, 185, 187, 197, 227, 228, 234, 235, 270, 273, 274, 276, 277, 283, 284, 285, 287, 288, 289, 291, 292, 293, 300, 302, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 338, 346, 357, 367, 368, 369, 371, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386, 390, 391, 392, 394, 397], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 53, 54, 55, 56, 63, 65, 67, 68, 69, 74, 75, 80, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 123, 124, 130, 131, 132, 133, 139, 145, 146, 147, 159, 165, 167, 170, 177, 180, 185, 188, 193, 208, 209, 210, 215, 223, 225, 227, 228, 231, 232, 233, 236, 237, 242, 243, 247, 248, 249, 250, 253, 262, 267, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 369, 373, 378, 379, 380, 381, 382, 390, 391, 392, 394], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 37, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 82, 93, 99, 100, 103, 104, 107, 112, 113, 116, 122, 123, 124, 125, 126, 127, 130, 131, 138, 145, 147, 170, 177, 183, 184, 187, 193, 195, 204, 219, 221, 225, 227, 267, 268, 269, 285, 286, 287, 293, 296, 300, 301, 302, 304, 305, 307, 309, 310, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 355, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "adapt": [1, 24, 140, 181, 206, 301, 378, 392], "equal": [1, 14, 15, 17, 61, 80, 87, 88, 120, 123, 130, 164, 165, 208, 209, 221, 223, 225, 227, 228, 234, 308, 313, 346, 367, 368, 378, 380, 393], "introduc": [1, 2, 123, 130, 221, 223, 225, 227, 268, 269, 378, 390], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 45, 53, 54, 55, 56, 63, 69, 74, 75, 82, 93, 95, 99, 100, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 142, 169, 183, 187, 189, 195, 197, 211, 223, 227, 248, 274, 275, 276, 338, 346, 358, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 394, 396, 397], "confus": [1, 37, 103, 107, 123, 124, 130, 131, 187, 195], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 37, 41, 42, 43, 46, 50, 51, 54, 61, 63, 65, 67, 68, 69, 74, 75, 76, 82, 85, 86, 87, 88, 89, 91, 95, 103, 106, 107, 108, 119, 123, 124, 130, 131, 149, 153, 154, 171, 178, 185, 189, 193, 195, 221, 223, 227, 237, 238, 261, 263, 264, 272, 274, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 318, 336, 352, 367, 368, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 390, 391, 392, 393, 396, 397], "better": [1, 3, 8, 9, 14, 15, 23, 223, 227, 374, 380, 382, 392, 396], "consist": [1, 2, 3, 37, 42, 45, 50, 51, 64, 67, 103, 107, 123, 124, 130, 131, 163, 192, 195, 209, 228, 378, 379, 380, 392, 393, 397], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 67, 103, 107, 117, 118, 123, 124, 130, 131, 187, 270, 274, 378, 380, 382, 383, 385, 390, 391, 392, 397], "keep": [1, 3, 4, 7, 8, 15, 42, 45, 50, 51, 86, 93, 123, 130, 165, 169, 191, 193, 195, 204, 268, 269, 348, 355, 378, 379, 380, 381, 385, 386, 387, 391, 392, 394, 396, 397], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 61, 64, 169, 191, 285, 288, 291, 293, 305, 307, 309, 310, 374, 378, 379, 383, 384, 390, 391, 394, 397], "interchang": [1, 233, 234, 380, 382, 386, 393, 394], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 37, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 88, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 154, 164, 175, 187, 193, 195, 197, 208, 209, 217, 221, 223, 227, 228, 233, 234, 263, 270, 274, 284, 286, 287, 288, 291, 292, 293, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 313, 318, 351, 355, 374, 378, 379, 381, 385, 390, 391, 392, 394, 397], "wherea": [1, 2, 22, 67, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 154, 195, 302, 375, 386], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 50, 53, 55, 56, 64, 67, 69, 79, 80, 103, 107, 119, 123, 124, 130, 131, 169, 183, 187, 191, 193, 195, 223, 225, 227, 231, 232, 264, 265, 268, 269, 270, 274, 287, 289, 292, 293, 307, 316, 318, 319, 320, 321, 322, 378, 379, 380, 382, 384, 385, 386, 390, 391, 392, 393], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 61, 67, 80, 87, 93, 103, 107, 123, 124, 130, 131, 170, 275, 276, 346, 355, 373, 378, 379, 380, 385, 389, 396, 397], "doesn": [1, 4, 12, 93, 120, 152, 155, 382], "understood": [1, 378], "serv": [1, 18, 20, 21, 109, 394, 397], "basi": [1, 93, 233, 394], "simplest": [1, 93, 277, 378, 380, 381, 383, 390, 391, 394, 397], "scenario": [1, 2, 117, 118, 123, 132, 133, 336, 378, 383, 390, 391, 392], "transit": [1, 37, 63, 67, 80, 88, 93, 103, 107, 123, 124, 130, 131, 195, 206, 279, 378, 381, 382, 383, 385, 390, 392, 394], "sampl": [1, 4, 8, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 91, 93, 95, 103, 107, 119, 122, 123, 124, 130, 131, 139, 145, 146, 170, 174, 198, 199, 202, 203, 207, 216, 224, 230, 231, 232, 241, 242, 245, 250, 251, 255, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 284, 285, 286, 287, 288, 289, 291, 301, 303, 304, 309, 310, 346, 352, 355, 358, 371, 373, 378, 379, 380, 381, 382, 383, 385, 387, 390, 391, 393, 396, 397], "attent": [1, 2, 8, 378, 381, 397], "given": [1, 2, 3, 14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 103, 107, 119, 123, 124, 130, 131, 150, 154, 165, 169, 183, 186, 187, 189, 191, 193, 195, 204, 207, 218, 219, 221, 225, 230, 235, 244, 248, 255, 262, 263, 264, 267, 269, 272, 273, 274, 275, 276, 278, 283, 288, 289, 291, 302, 317, 318, 319, 320, 321, 322, 324, 347, 351, 365, 373, 375, 378, 379, 380, 382, 383, 384, 385, 386, 391, 392, 397], "built": [1, 2, 3, 5, 7, 82, 99, 100, 106, 112, 113, 122, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 311, 316, 363, 365, 366, 369, 378, 379, 380, 381, 384, 386, 392, 394, 397], "flatten": [1, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 93, 143, 159, 352, 371, 381, 391], "suffici": [1, 3, 4, 378], "preprocess": [1, 2, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 379], "popul": [1, 2, 3, 42, 45, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 162, 183, 235, 302, 378, 380, 381, 383, 385, 392, 394], "replaybuff": [1, 2, 30, 42, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 79, 80, 82, 87, 97, 146, 170, 174, 195, 289, 294, 316, 363, 365, 371, 380, 385, 387, 390, 391, 393, 394, 396], "lazytensorstorag": [1, 2, 42, 45, 50, 51, 79, 93, 174, 195, 380, 387, 391, 394], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 45, 93, 103, 104, 107, 123, 124, 130, 131, 138, 143, 163, 183, 195, 253, 262, 267, 270, 271, 295, 297, 298, 309, 318, 321, 329, 330, 334, 335, 336, 365, 374, 378, 390, 391, 394, 396, 397], "reshap": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 87, 93, 143, 223, 227, 228, 336, 380, 390, 391], "extend": [1, 2, 8, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 42, 45, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 79, 80, 82, 83, 87, 88, 91, 93, 94, 97, 98, 145, 174, 195, 206, 302, 352, 374, 375, 378, 379, 380, 381, 385, 387, 390, 391, 393, 394, 396], "slice": [1, 2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 139, 145, 394], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 42, 43, 45, 46, 50, 51, 93, 111, 235, 385, 390, 391], "achiev": [1, 2, 3, 4, 37, 103, 107, 111, 123, 124, 130, 131, 182, 195, 205, 270, 352, 375, 378, 379, 380, 381, 390, 391, 392, 394, 397], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 93, 103, 104, 107, 111, 123, 124, 125, 130, 131, 132, 133, 143, 146, 169, 186, 187, 189, 192, 193, 195, 201, 204, 208, 209, 211, 212, 213, 214, 215, 220, 223, 227, 228, 229, 233, 234, 261, 274, 281, 287, 289, 294, 305, 307, 316, 338, 352, 359, 360, 361, 365, 367, 368, 373, 378, 379, 380, 381, 383, 386, 390, 391, 392, 393, 394, 396, 397], "multidimension": [1, 2, 50, 79, 80, 394], "slicesampl": [1, 2, 61, 80, 394], "sampler": [1, 2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 95, 170, 289, 294, 316, 378, 380, 390, 391, 394], "One": [1, 2, 4, 8, 25, 29, 36, 40, 54, 93, 99, 100, 123, 130, 146, 174, 189, 241, 259, 260, 273, 277, 308, 313, 342, 378, 379, 394, 397], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 80, 82, 87, 88, 89, 90, 91, 93, 95, 99, 103, 104, 107, 112, 123, 124, 125, 126, 127, 130, 131, 132, 139, 142, 143, 146, 149, 156, 160, 163, 165, 167, 178, 182, 183, 184, 187, 188, 193, 195, 208, 209, 218, 223, 227, 228, 231, 232, 233, 234, 244, 255, 262, 263, 267, 270, 271, 272, 273, 274, 277, 278, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 308, 309, 310, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 374, 378, 379, 380, 381, 383, 389, 392, 394], "ensur": [1, 2, 3, 37, 42, 50, 79, 80, 86, 103, 107, 123, 124, 130, 131, 139, 146, 169, 181, 187, 189, 193, 195, 223, 227, 262, 373, 379, 380, 392, 394], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 82, 93, 95, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 145, 147, 152, 155, 156, 157, 163, 165, 167, 171, 172, 174, 178, 181, 183, 185, 193, 194, 195, 197, 201, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 238, 241, 242, 243, 244, 249, 250, 252, 255, 256, 257, 258, 261, 262, 263, 267, 268, 270, 271, 272, 273, 276, 277, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 346, 352, 355, 365, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 396, 397], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 61, 224, 250, 251, 283, 372, 378, 379, 380, 381, 384, 390, 391, 393, 397], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 28, 37, 41, 43, 89, 93, 103, 107, 111, 116, 123, 124, 125, 126, 130, 131, 146, 149, 159, 169, 172, 184, 187, 191, 193, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 236, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 270, 271, 272, 273, 277, 280, 283, 293, 306, 307, 317, 322, 338, 355, 369, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 396, 397], "dimension": [1, 42, 45, 50, 51, 154, 223, 227, 318, 323, 331, 391], "num_slic": [1, 2, 61, 67, 80, 87, 88, 394], "4": [1, 2, 3, 7, 25, 27, 29, 30, 33, 37, 40, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 87, 88, 95, 99, 100, 101, 102, 103, 107, 112, 113, 114, 115, 116, 119, 121, 123, 124, 128, 129, 130, 131, 139, 140, 142, 143, 146, 156, 174, 181, 182, 193, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 225, 226, 228, 230, 233, 234, 238, 239, 240, 241, 242, 243, 244, 252, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 278, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 336, 337, 373, 377, 378, 379, 380, 381, 383, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 30, 48, 143, 174, 381, 385, 394, 396], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 30, 37, 48, 143, 146, 174, 355, 358, 365, 375, 378, 379, 380, 381, 385, 387, 390, 391, 394, 396], "dim": [1, 2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 146, 147, 167, 183, 188, 193, 226, 248, 253, 267, 369, 379, 380, 390, 392, 394], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 53, 54, 55, 56, 63, 65, 67, 79, 80, 87, 88, 103, 107, 111, 120, 123, 124, 127, 130, 131, 143, 150, 169, 183, 186, 187, 189, 191, 195, 223, 227, 228, 235, 253, 273, 275, 276, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 336, 338, 340, 373, 375, 378, 379, 380, 381, 382, 383, 384, 386, 390, 391, 392, 394, 397], "ndim": [1, 2, 42, 45, 50, 51, 74, 75, 79, 80, 93, 95, 103, 107, 123, 124, 130, 131, 195, 267], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 93, 103, 107, 120, 124, 125, 126, 127, 130, 131, 336, 366, 371, 378, 379, 380, 382, 389, 396, 397], "make_env": [1, 3, 123, 130, 133, 193, 336, 360, 361, 378, 379, 397], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 79, 85, 103, 107, 123, 124, 130, 131, 187, 206, 217, 244, 263, 271, 272, 273, 274, 294, 357, 371, 375, 378, 379, 382, 383, 387, 394, 397], "behav": [1, 3, 109, 119, 221, 225, 241, 292, 300, 302, 393], "iif": 1, "accordingli": [1, 80, 181, 182, 225, 271, 381], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 27, 29, 33, 35, 36, 37, 40, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 93, 95, 101, 102, 103, 106, 107, 108, 109, 110, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 142, 143, 146, 150, 154, 156, 157, 163, 165, 167, 169, 171, 172, 174, 177, 178, 181, 182, 183, 185, 186, 187, 189, 191, 195, 196, 201, 206, 207, 208, 209, 211, 212, 213, 215, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 235, 238, 241, 243, 253, 255, 256, 257, 258, 262, 263, 270, 272, 273, 276, 277, 278, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 324, 327, 328, 329, 330, 332, 333, 334, 335, 336, 338, 354, 373, 375, 377, 378, 379, 380, 381, 382, 383, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 67, 79, 93, 142, 156, 197, 262, 273, 383, 384, 386, 390, 391], "current": [1, 2, 3, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 80, 82, 88, 103, 107, 109, 120, 123, 124, 130, 131, 142, 143, 146, 170, 182, 183, 184, 186, 187, 195, 198, 199, 204, 219, 246, 267, 268, 269, 284, 286, 287, 294, 301, 304, 306, 307, 341, 375, 378, 379, 380, 381, 384, 390, 391, 392, 394, 396, 397], "fulli": [1, 8, 37, 103, 107, 123, 124, 130, 131, 195, 222, 226, 379, 384, 392, 394], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83, 86, 88, 89, 91, 93, 94, 95, 97, 98, 103, 104, 107, 120, 123, 124, 125, 126, 130, 131, 132, 133, 140, 142, 159, 169, 170, 174, 187, 189, 193, 195, 197, 205, 208, 209, 215, 228, 237, 261, 267, 273, 274, 275, 276, 284, 285, 287, 288, 289, 291, 292, 293, 300, 302, 304, 305, 306, 307, 309, 310, 318, 320, 321, 336, 343, 355, 372, 374, 378, 379, 380, 383, 384, 390, 391, 392, 394, 396, 397], "consecut": [1, 3, 61, 86, 111, 227, 268, 269, 338, 381, 382, 385, 391, 394, 397], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 103, 104, 106, 107, 120, 121, 123, 124, 130, 131, 169, 191, 195, 355, 369, 379, 380, 382, 383], "therebi": [1, 24, 336, 374, 378, 379], "interrupt": [1, 2, 107, 267, 324], "These": [1, 2, 7, 47, 64, 69, 96, 132, 169, 191, 373, 374, 378, 380, 390, 391, 392, 394, 397], "tool": [1, 2, 3, 5, 381, 382, 390, 392, 394, 397], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 103, 106, 107, 123, 124, 130, 131, 135, 138, 375, 378, 380, 381, 382, 385, 386, 392], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 371], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 371], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 61, 69, 104, 105, 123, 130, 193, 378, 379, 380, 381, 390, 391, 392, 393, 397], "synchron": [1, 14, 19, 21, 41, 43, 46, 120, 367, 368, 379, 380, 390], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 120, 123, 124, 130, 131, 152, 155, 182, 187, 193, 195, 198, 202, 216, 223, 224, 227, 241, 249, 250, 251, 270, 274, 302, 336, 351, 374, 378, 379, 381, 390, 391, 396, 397], "find": [1, 4, 6, 7, 18, 19, 20, 42, 44, 52, 87, 88, 225, 259, 260, 268, 269, 349, 353, 378, 379, 383, 384, 390, 391], "folder": [1, 2, 41, 43, 46, 132, 379], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 104, 106, 107, 108, 109, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 134, 139, 145, 146, 149, 150, 152, 153, 155, 158, 163, 164, 165, 169, 177, 179, 183, 184, 186, 187, 189, 191, 193, 195, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 234, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 284, 285, 287, 296, 300, 302, 304, 305, 306, 307, 309, 310, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 350, 355, 358, 367, 368, 369, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 396, 397], "variou": [1, 2, 3, 223, 227, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 311, 316, 338, 367, 368, 378, 379, 380, 382, 383, 384, 386, 390, 391, 394, 397], "machin": [1, 2, 7, 18, 19, 20, 37, 66, 111, 390, 391, 396], "wonder": 1, "why": [1, 2, 3, 204, 390, 392, 397], "instead": [1, 4, 7, 8, 12, 29, 37, 67, 103, 107, 123, 124, 130, 131, 159, 183, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 284, 286, 287, 289, 292, 293, 294, 300, 301, 304, 305, 306, 307, 316, 318, 322, 326, 369, 373, 374, 382, 383, 387, 392, 394, 397], "lower": [1, 2, 3, 21, 26, 149, 193, 245, 246, 277, 380, 390, 392], "io": [1, 11, 61, 67, 112, 113, 120, 225, 226], "footprint": [1, 2, 394], "commun": [1, 2, 3, 123, 130, 372, 380, 397], "yet": [1, 99, 100, 112, 393], "plai": [1, 3, 125, 126, 131, 146, 379, 380, 384, 394, 397], "role": [1, 3, 118, 379, 384, 397], "opposit": [1, 390], "direct": [1, 2, 37, 103, 107, 123, 124, 130, 131, 195, 221, 225, 302, 379, 384], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 69, 79, 80, 88, 93, 103, 107, 123, 124, 125, 126, 127, 130, 131, 195, 197, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 277, 280, 336, 338, 374, 378, 379, 380, 381, 382, 383, 384, 390, 392, 393, 394, 396, 397], "faster": [1, 2, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 68, 69, 120, 318, 319, 320, 321, 381, 390, 391], "share": [1, 3, 6, 8, 23, 41, 43, 46, 72, 74, 75, 76, 80, 87, 89, 91, 95, 104, 123, 130, 193, 223, 227, 233, 234, 256, 257, 258, 284, 285, 286, 287, 288, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 369, 371, 373, 380, 381, 387, 389, 390, 391, 396, 397], "among": [1, 3, 125, 126, 390, 391], "prohibit": [1, 3, 93], "slow": [1, 3, 4, 11, 41, 43, 46], "compar": [1, 3, 67, 93, 285, 287, 300, 305, 307, 309, 310, 351, 374, 378, 380, 383, 384, 390, 391, 394, 397], "gpu": [1, 7, 8, 37, 74, 75, 95, 103, 107, 111, 123, 124, 130, 131, 195, 378, 380, 381, 390, 391, 397], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 50, 61, 79, 80, 87, 93, 99, 100, 107, 131, 142, 165, 193, 206, 207, 216, 219, 221, 223, 225, 227, 230, 242, 249, 250, 259, 260, 270, 274, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 373, 374, 378, 379, 380, 383, 390, 391, 392, 394, 396, 397], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 79, 80, 82, 85, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 120, 121, 123, 124, 127, 130, 131, 132, 133, 142, 143, 147, 149, 150, 169, 177, 178, 183, 185, 186, 187, 189, 191, 195, 206, 223, 227, 231, 232, 233, 234, 255, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 273, 274, 277, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 312, 316, 318, 319, 320, 321, 322, 326, 336, 345, 366, 378, 379, 380, 383, 386, 390, 391, 394, 397], "build": [1, 3, 7, 23, 27, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 108, 109, 112, 113, 117, 118, 120, 123, 124, 127, 130, 131, 132, 133, 174, 193, 195, 207, 223, 227, 230, 266, 270, 274, 355, 362, 363, 364, 373, 375, 380, 381, 383, 384, 385, 386, 390, 391, 392, 393, 396, 397], "mani": [1, 2, 3, 4, 45, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 127, 284, 286, 293, 301, 304, 373, 378, 379, 380, 382, 383, 385, 387, 390, 391, 392, 394, 397], "eg": [1, 2, 3, 12, 41, 43, 46, 74, 75, 76, 89, 91, 95, 101, 102, 103, 106, 107, 108, 109, 111, 123, 124, 127, 130, 131, 154, 181, 187, 233, 261, 338], "gymnasium": [1, 3, 5, 12, 103, 106, 107, 108, 114, 115, 123, 124, 130, 131, 135, 138, 157, 178, 181, 192, 379, 380, 392, 396], "warn": [1, 3, 259, 260, 264, 265, 268, 269, 379], "quickli": [1, 3, 379, 390, 391, 397], "becom": [1, 3, 4, 21, 221, 225, 390, 391, 397], "quit": [1, 3, 11, 61, 103, 107, 123, 124, 130, 131, 373, 378, 379, 380, 383, 390, 391, 397], "annoi": [1, 3], "By": [1, 2, 3, 27, 33, 40, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 127, 130, 131, 132, 133, 253, 274, 302, 351, 369, 374, 378, 390, 393, 394, 397], "filter": [1, 2, 3, 4, 54, 80, 87, 88, 284, 285, 287, 288, 292, 293, 300, 304, 305, 307, 382], "out": [1, 2, 3, 4, 5, 9, 21, 37, 41, 43, 46, 54, 63, 67, 72, 80, 87, 88, 103, 107, 123, 124, 125, 126, 130, 131, 183, 195, 197, 221, 222, 225, 231, 232, 235, 236, 237, 255, 261, 262, 263, 269, 270, 271, 272, 273, 274, 302, 314, 315, 374, 375, 378, 379, 380, 381, 382, 383, 385, 390, 391, 392, 394, 396, 397], "still": [1, 2, 3, 9, 67, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 260, 301, 302, 378, 379, 381, 389, 392, 394, 397], "wish": [1, 3, 11, 14, 15, 17, 67, 138, 384, 394], "displai": [1, 3, 7, 103, 107, 123, 124, 130, 131, 355, 375, 378, 379, 391, 392], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 82, 85, 86, 87, 88, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 147, 150, 152, 155, 156, 157, 159, 162, 163, 164, 165, 167, 169, 170, 171, 172, 174, 176, 177, 178, 181, 183, 185, 186, 187, 188, 189, 191, 193, 195, 197, 204, 205, 206, 207, 208, 209, 211, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 243, 244, 250, 251, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 313, 316, 318, 319, 320, 321, 327, 328, 329, 330, 332, 333, 334, 335, 336, 338, 345, 348, 349, 351, 352, 353, 355, 369, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "central": [2, 233, 234, 235, 378, 379, 382, 390, 391, 394], "part": [2, 3, 4, 8, 37, 47, 61, 64, 65, 67, 68, 69, 99, 103, 107, 112, 123, 124, 130, 131, 145, 165, 174, 177, 195, 204, 223, 227, 278, 346, 369, 378, 380, 381, 387, 390, 392, 397], "algorithm": [2, 3, 8, 9, 119, 139, 284, 304, 305, 307, 371, 374, 375, 378, 379, 380, 381, 383, 384, 385, 386, 390, 391, 393, 394, 396], "implement": [2, 3, 9, 12, 14, 15, 16, 37, 77, 89, 90, 103, 107, 119, 120, 123, 124, 130, 131, 143, 150, 152, 153, 157, 160, 163, 171, 172, 178, 181, 186, 187, 193, 195, 208, 221, 222, 223, 224, 225, 226, 227, 249, 250, 251, 284, 285, 287, 290, 291, 292, 298, 300, 302, 303, 304, 306, 307, 309, 336, 346, 360, 373, 375, 378, 379, 380, 381, 390, 391, 392, 396], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 37, 42, 45, 47, 50, 51, 61, 63, 67, 69, 74, 86, 88, 93, 99, 100, 103, 104, 107, 111, 112, 113, 123, 124, 130, 131, 146, 163, 169, 172, 189, 192, 193, 195, 197, 207, 227, 233, 234, 235, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 338, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "give": [2, 3, 7, 50, 64, 103, 107, 119, 123, 124, 130, 131, 146, 372, 374, 378, 379, 390, 391, 392, 393, 396], "abil": [2, 302, 392, 394], "panel": [2, 380], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 63, 69, 72, 93, 143, 146, 156, 223, 227, 287, 292, 300, 307, 311, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "includ": [2, 3, 4, 7, 9, 21, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 89, 91, 95, 103, 107, 119, 123, 124, 130, 131, 182, 187, 193, 195, 223, 227, 287, 302, 307, 358, 373, 375, 378, 379, 380, 381, 390, 391, 392, 394, 397], "almost": [2, 381], "physic": [2, 6, 7, 72, 123, 124, 127, 375, 378, 390, 391, 392], "theori": 2, "crude": 2, "made": [2, 3, 23, 37, 45, 61, 74, 75, 76, 89, 91, 95, 103, 106, 107, 108, 123, 124, 130, 131, 195, 235, 268, 269, 289, 302, 316, 378, 379, 381, 390, 391, 393, 394], "liststorag": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 394], "veri": [2, 3, 112, 113, 379, 382, 385, 390, 392, 394, 396, 397], "ineffici": [2, 4], "allow": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 34, 37, 40, 41, 43, 46, 61, 67, 80, 82, 85, 87, 88, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 142, 143, 172, 195, 204, 228, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 311, 313, 316, 373, 375, 378, 380, 381, 382, 383, 384, 390, 391, 392, 394, 397], "complex": [2, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 378, 379, 382, 383], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 87, 88, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 145, 146, 147, 150, 152, 154, 155, 156, 157, 159, 162, 165, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 195, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 282, 284, 285, 287, 288, 289, 291, 292, 293, 296, 297, 300, 302, 304, 305, 306, 307, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 396, 397], "contigu": [2, 3, 8, 64, 67, 68, 103, 107, 123, 124, 130, 131, 201, 380, 390, 391, 392, 394, 396, 397], "tensorstorag": [2, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 79, 80, 93, 96, 385, 394], "lazymemmapstorag": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 87, 88, 145, 146, 378, 379, 381, 385, 390, 393, 394], "citizen": 2, "pytre": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 96], "tupl": [2, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 80, 82, 87, 91, 93, 101, 102, 103, 106, 107, 108, 123, 124, 130, 131, 163, 165, 195, 211, 217, 218, 223, 226, 227, 228, 235, 238, 242, 243, 244, 262, 263, 271, 272, 277, 284, 285, 287, 288, 292, 293, 295, 300, 302, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 349, 351, 353, 362, 394], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 37, 41, 43, 46, 54, 80, 85, 87, 88, 103, 106, 107, 108, 117, 118, 123, 124, 130, 131, 132, 133, 183, 187, 195, 270, 274, 287, 307, 309, 351, 367, 368, 369, 375, 379, 380, 382, 384, 390, 392, 397], "nest": [2, 3, 23, 27, 30, 32, 33, 37, 38, 41, 43, 45, 46, 48, 49, 57, 74, 75, 78, 82, 95, 103, 106, 107, 108, 123, 124, 130, 131, 146, 181, 184, 195, 205, 267, 318, 319, 320, 321, 322, 336, 375, 379, 380, 391, 392, 394, 396], "construct": [2, 3, 5, 23, 37, 42, 45, 50, 51, 61, 82, 103, 106, 107, 123, 124, 125, 130, 131, 152, 155, 195, 197, 223, 227, 246, 274, 355, 373, 379, 380, 381, 383, 390, 392, 394, 397], "ram": [2, 106, 108, 386, 394], "prealloc": [2, 3, 123, 130, 392], "ve": [2, 47, 378, 381, 387], "been": [2, 3, 5, 7, 8, 18, 20, 21, 47, 82, 86, 103, 107, 111, 117, 118, 123, 124, 130, 131, 163, 181, 182, 186, 221, 225, 235, 260, 265, 267, 269, 284, 302, 304, 306, 378, 379, 380, 381, 389, 390, 391, 392, 394, 397], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 68, 69, 93, 101, 102, 103, 107, 111, 123, 124, 125, 126, 130, 131, 146, 235, 345, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 387, 390, 391, 392, 394, 396, 397], "start": [2, 3, 4, 5, 14, 21, 24, 54, 61, 69, 80, 87, 88, 104, 107, 116, 123, 130, 151, 204, 350, 377, 378, 379, 388, 391, 392, 394, 395, 397], "replay_buff": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 352, 365, 378, 379, 380, 385, 390, 391, 394], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 30, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 142, 143, 145, 146, 149, 156, 157, 162, 163, 165, 167, 169, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 186, 191, 193, 195, 196, 201, 204, 205, 207, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 235, 238, 243, 244, 252, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 336, 338, 348, 351, 365, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "rb": [2, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 146, 174, 195, 379, 381, 385, 387, 391, 393, 394, 396], "10": [2, 3, 7, 22, 23, 25, 27, 29, 37, 42, 45, 47, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 82, 87, 88, 93, 95, 99, 100, 103, 104, 107, 112, 113, 119, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 143, 145, 146, 182, 184, 185, 195, 207, 210, 211, 213, 215, 217, 221, 222, 223, 225, 226, 227, 230, 242, 253, 264, 265, 268, 269, 270, 277, 281, 285, 289, 291, 298, 304, 305, 306, 310, 316, 318, 319, 320, 321, 324, 338, 346, 375, 378, 379, 380, 381, 382, 383, 387, 390, 391, 392, 393, 394, 396, 397], "add": [2, 3, 4, 6, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 79, 82, 83, 93, 94, 97, 98, 103, 107, 123, 124, 130, 131, 146, 163, 187, 195, 223, 227, 236, 266, 284, 350, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 396], "string": [2, 18, 19, 20, 37, 44, 54, 70, 103, 107, 117, 123, 124, 130, 131, 138, 169, 181, 191, 195, 223, 227, 262, 267, 270, 271, 283, 337, 354, 374, 378, 380, 381, 394], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 35, 36, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 79, 80, 82, 87, 88, 93, 95, 122, 123, 130, 139, 146, 170, 179, 182, 183, 208, 209, 221, 222, 225, 255, 259, 260, 262, 267, 273, 274, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 346, 374, 378, 380, 383, 385, 394, 397], "30": [2, 3, 45, 65, 142, 164, 245, 246, 336, 340, 378, 379, 380, 385, 390, 391, 392, 394], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 89, 91, 93, 95, 103, 104, 106, 107, 116, 117, 118, 119, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 349, 350, 351, 352, 353, 354, 355, 359, 360, 361, 365, 367, 368, 369, 373, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 396, 397], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 154, 159, 160, 164, 165, 167, 169, 170, 173, 180, 181, 184, 187, 188, 189, 191, 195, 197, 201, 206, 207, 208, 209, 210, 211, 213, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 284, 285, 286, 293, 295, 296, 301, 302, 303, 304, 305, 309, 310, 318, 320, 321, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 346, 347, 348, 351, 352, 355, 357, 363, 367, 368, 369, 392, 394], "entri": [2, 3, 14, 15, 17, 23, 27, 30, 33, 37, 41, 43, 44, 46, 48, 54, 58, 63, 64, 65, 66, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 127, 130, 131, 132, 133, 142, 146, 148, 149, 151, 152, 155, 156, 159, 162, 165, 167, 169, 172, 174, 177, 179, 181, 182, 183, 191, 193, 195, 204, 205, 223, 231, 232, 261, 262, 267, 271, 272, 285, 287, 307, 318, 319, 320, 321, 373, 378, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 397], "onto": [2, 8, 40, 41, 43, 46, 201, 255, 259, 260, 262, 263, 268, 269, 270, 271, 272, 273, 274, 381, 392], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 79, 80, 82, 83, 85, 86, 87, 88, 93, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 132, 133, 139, 146, 147, 181, 182, 183, 184, 187, 195, 205, 208, 209, 228, 231, 232, 234, 267, 268, 269, 271, 272, 280, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 359, 369, 372, 375, 380, 381, 385, 386, 387, 392, 394, 397], "without": [2, 3, 7, 9, 14, 15, 16, 37, 41, 43, 46, 47, 61, 63, 67, 87, 88, 103, 107, 123, 124, 130, 131, 132, 133, 140, 142, 152, 155, 185, 195, 221, 222, 225, 226, 257, 258, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 317, 318, 319, 320, 321, 322, 365, 372, 373, 378, 379, 380, 382, 383, 384, 385, 390, 391, 392, 394, 397], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 41, 42, 43, 46, 47, 50, 79, 80, 103, 107, 119, 123, 124, 125, 126, 130, 131, 140, 142, 143, 152, 154, 155, 171, 181, 182, 187, 190, 193, 195, 205, 207, 221, 223, 227, 230, 235, 259, 260, 264, 265, 268, 269, 270, 271, 272, 273, 274, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 316, 318, 319, 320, 321, 322, 351, 355, 357, 360, 361, 364, 365, 375, 379, 380, 381, 384, 387, 390, 391, 392, 394, 396, 397], "length": [2, 20, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 44, 47, 52, 53, 54, 55, 56, 61, 67, 70, 80, 87, 88, 91, 103, 107, 112, 113, 123, 124, 130, 131, 139, 170, 193, 207, 208, 209, 211, 213, 215, 221, 225, 228, 230, 233, 234, 255, 273, 278, 346, 352, 378, 380, 381, 385, 387, 392, 394, 397], "cursor": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "place": [2, 3, 24, 27, 28, 33, 37, 41, 43, 46, 74, 75, 82, 85, 95, 103, 104, 107, 123, 124, 130, 131, 132, 133, 142, 150, 156, 169, 183, 186, 187, 189, 191, 192, 193, 195, 205, 235, 261, 267, 273, 352, 357, 358, 374, 379, 380, 383, 386, 390, 391, 392, 394], "afterward": [2, 103, 107, 123, 124, 130, 131, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 390, 397], "tell": [2, 3, 4, 7, 125, 126, 378, 381, 385, 390, 391], "our": [2, 3, 7, 8, 11, 18, 45, 146, 338, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 396], "far": [2, 47, 224, 250, 251, 387, 392, 397], "restrict": [2, 3, 379, 393, 394, 397], "empti": [2, 3, 27, 33, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 82, 103, 107, 122, 123, 124, 130, 131, 152, 155, 169, 171, 184, 187, 189, 191, 195, 201, 342, 378, 392], "64": [2, 3, 41, 43, 46, 61, 67, 82, 146, 173, 211, 212, 220, 223, 227, 234, 235, 243, 316, 378, 379, 380, 381, 383, 387, 389, 390, 392, 394, 396, 397], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 87, 88, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 140, 143, 144, 150, 152, 153, 154, 155, 156, 157, 163, 165, 167, 169, 171, 172, 174, 178, 181, 183, 185, 186, 187, 189, 191, 195, 197, 201, 204, 205, 207, 217, 218, 221, 222, 223, 225, 226, 227, 230, 236, 237, 243, 244, 252, 255, 256, 257, 258, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 276, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 324, 373, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "unit8": 2, "img": 2, "randint": [2, 54, 82, 185, 394], "255": [2, 82, 185, 392, 394], "uint8": [2, 3, 41, 43, 46, 56, 61, 67, 101, 102, 117, 118, 156, 167, 185, 379, 386, 393, 394, 396, 397], "next": [2, 3, 4, 8, 14, 15, 16, 23, 27, 30, 32, 33, 37, 42, 45, 47, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 117, 118, 119, 123, 124, 128, 129, 130, 131, 132, 133, 139, 142, 143, 145, 146, 152, 155, 156, 157, 162, 163, 167, 171, 172, 174, 177, 178, 181, 183, 192, 193, 195, 201, 204, 207, 222, 223, 226, 227, 230, 246, 267, 279, 281, 284, 285, 287, 288, 289, 291, 292, 293, 294, 300, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 338, 349, 351, 353, 379, 381, 383, 386, 387, 389, 392, 393, 396, 397], "ask": [2, 8, 61, 67, 80, 87, 88, 338, 380, 381, 382, 383, 390, 391, 393, 397], "do": [2, 3, 4, 7, 69, 103, 107, 123, 124, 130, 131, 132, 133, 139, 170, 192, 193, 204, 223, 227, 234, 236, 257, 302, 318, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 396, 397], "automat": [2, 3, 5, 69, 74, 75, 82, 95, 103, 106, 107, 108, 123, 124, 125, 126, 130, 131, 142, 152, 155, 165, 183, 192, 208, 223, 227, 255, 267, 270, 336, 373, 378, 380, 382, 383, 390, 391, 392, 394, 396], "hand": [2, 3, 7, 21, 27, 390, 391, 392], "look": [2, 3, 5, 7, 8, 37, 80, 103, 107, 116, 123, 124, 125, 126, 130, 131, 169, 170, 189, 195, 270, 274, 275, 276, 374, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 396, 397], "assum": [2, 3, 6, 27, 40, 47, 50, 51, 63, 65, 67, 68, 69, 71, 72, 78, 87, 103, 107, 123, 124, 130, 131, 145, 148, 151, 159, 169, 170, 177, 183, 187, 189, 191, 201, 223, 227, 253, 277, 289, 294, 307, 316, 327, 328, 329, 330, 332, 333, 334, 335, 338, 378, 380, 381, 389, 392], "lead": [2, 3, 4, 8, 10, 12, 23, 27, 33, 37, 42, 45, 50, 51, 63, 86, 101, 102, 103, 106, 108, 109, 183, 224, 243, 250, 251, 378, 381, 390, 391, 392, 394, 396], "leav": [2, 25, 27, 29, 33, 35, 36, 40, 41, 43, 45, 46, 103, 197, 205, 378, 385, 394], "tree": [2, 41, 43, 46, 103, 107, 123, 124, 130, 131, 390, 394], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 82, 91, 101, 102, 103, 104, 106, 107, 108, 109, 123, 124, 130, 131, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 208, 209, 216, 223, 227, 228, 233, 234, 249, 255, 261, 262, 270, 271, 273, 274, 277, 278, 285, 287, 293, 301, 303, 305, 307, 352, 357, 373, 378, 380, 389, 391, 392, 394, 397], "don": [2, 3, 4, 6, 7, 11, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 146, 379, 380, 385, 394, 396, 397], "throw": [2, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 195, 397], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 27, 30, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 80, 81, 82, 87, 88, 93, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 143, 145, 146, 150, 152, 155, 156, 157, 167, 171, 172, 174, 178, 181, 183, 186, 187, 195, 196, 204, 205, 207, 215, 217, 218, 223, 227, 230, 243, 244, 252, 253, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 338, 346, 352, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "max": [2, 23, 40, 43, 50, 54, 70, 79, 80, 93, 154, 184, 250, 251, 268, 269, 285, 286, 287, 293, 303, 305, 307, 378, 380, 381, 387], "label": [2, 43, 44, 47, 54, 378, 390, 394], "100": [2, 14, 15, 16, 17, 37, 42, 45, 50, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 149, 156, 165, 174, 179, 181, 195, 233, 263, 267, 338, 347, 365, 379, 380, 381, 382, 384, 387, 389, 390, 391, 392, 393, 394, 396, 397], "rb_pytre": 2, "randn": [2, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 80, 82, 87, 88, 95, 145, 165, 201, 210, 211, 215, 217, 218, 221, 222, 225, 226, 231, 232, 233, 238, 241, 242, 244, 255, 256, 257, 258, 261, 262, 270, 271, 273, 276, 277, 278, 284, 285, 287, 288, 289, 291, 292, 293, 300, 302, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 354, 373, 394, 396, 397], "c": [2, 3, 6, 7, 27, 41, 43, 45, 46, 50, 51, 66, 165, 185, 225, 226, 379, 394], "zero": [2, 3, 4, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 87, 88, 93, 95, 103, 107, 123, 124, 130, 131, 143, 145, 147, 152, 154, 155, 165, 171, 174, 195, 201, 204, 206, 207, 212, 213, 214, 220, 221, 222, 223, 225, 226, 227, 231, 232, 234, 235, 243, 252, 264, 265, 268, 269, 272, 280, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 324, 381, 394, 396], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 107, 110, 123, 130, 138, 139, 143, 146, 149, 152, 155, 163, 172, 179, 193, 197, 201, 234, 238, 253, 318, 319, 320, 321, 346, 354, 385, 389, 394, 397], "len": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 95, 167, 208, 209, 228, 234, 378, 385, 387, 390, 392, 393, 394, 396], "ambigu": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 91, 103, 107, 123, 124, 130, 131, 143, 150, 169, 183, 186, 187, 189, 191, 195, 273, 374, 378, 382, 392], "deal": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 302, 374, 378, 380, 391, 394], "interpret": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 379], "put": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 117, 118, 131, 132, 133, 193, 345, 369, 373, 379, 380, 381, 382, 390, 392], "solv": [2, 4, 9, 10, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 372, 378, 379, 380, 385, 387, 390, 391, 392, 394], "clear": [2, 3, 11, 27, 33, 34, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 111, 123, 124, 130, 131, 195, 347, 382, 385], "cut": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "distinct": [2, 3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 143, 384, 389], "view": [2, 3, 8, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 195, 218, 221, 225, 228, 382, 392, 394, 396, 397], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 27, 33, 67, 99, 100, 103, 106, 107, 108, 111, 112, 113, 116, 123, 124, 125, 126, 130, 131, 142, 152, 155, 170, 228, 243, 267, 270, 274, 275, 276, 280, 302, 318, 319, 320, 321, 373, 374, 378, 379, 380, 382, 384, 389, 390, 391, 392, 393, 394, 397], "collate_fn": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 394, 396], "__init__": [2, 3, 7, 103, 119, 138, 140, 143, 152, 155, 171, 207, 218, 221, 225, 230, 278, 285, 287, 288, 293, 300, 305, 307, 309, 310, 375, 392, 397], "major": 2, "worri": [2, 52], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 74, 75, 76, 80, 87, 89, 91, 95, 103, 104, 107, 111, 123, 124, 130, 131, 142, 205, 378, 380, 382, 390, 391, 392, 397], "though": [2, 4, 11, 103, 107, 123, 124, 130, 131, 228, 380, 390, 391], "too": [2, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 47, 53, 55, 56, 103, 107, 123, 124, 130, 131, 164, 183, 224, 250, 251, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 379, 383, 386, 392, 394, 397], "latter": [2, 18, 19, 20, 37, 63, 103, 107, 123, 124, 130, 131, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 304, 367, 368], "inv": [2, 3, 149, 154, 157, 167, 174, 179, 392], "method": [2, 3, 4, 12, 16, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 79, 80, 82, 87, 88, 89, 90, 91, 93, 95, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 142, 143, 146, 150, 152, 153, 156, 157, 159, 163, 165, 169, 171, 172, 173, 174, 178, 181, 183, 186, 187, 189, 191, 195, 196, 207, 223, 227, 233, 234, 235, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 270, 271, 272, 273, 274, 275, 281, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 302, 304, 305, 306, 307, 309, 310, 316, 322, 336, 337, 366, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 390, 392, 394, 397], "obvious": 2, "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 44, 52, 53, 55, 56, 72, 103, 107, 123, 124, 130, 131, 154, 157, 178, 185, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 231, 232, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 318, 394], "multithread": [2, 3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 120, 121, 385, 394], "thread": [2, 14, 15, 17, 41, 43, 46, 99, 100, 112, 113, 123, 130], "prefetch": [2, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 70, 378, 379, 381, 394], "advis": [2, 11, 64, 386, 397], "benchmark": [2, 3, 9, 99, 100, 112, 113], "techniqu": [2, 8, 123, 130, 379, 385, 394], "real": [2, 5, 67, 274, 374, 381, 392], "life": [2, 156], "adopt": [2, 3, 5, 378, 397], "throughput": [2, 9, 113, 378], "constant": [2, 11, 28, 146, 165, 182, 375, 378, 380, 381, 397], "throughout": [2, 3, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 380, 390, 397], "further": [2, 3, 5, 24, 378, 380, 382], "refin": [2, 67, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316], "coupl": [2, 381, 383, 384, 392, 394], "get": [2, 3, 4, 6, 7, 8, 9, 27, 33, 41, 42, 43, 45, 46, 61, 63, 67, 74, 75, 80, 87, 88, 89, 91, 93, 95, 103, 104, 107, 123, 124, 130, 131, 140, 145, 147, 152, 154, 155, 163, 165, 170, 182, 183, 185, 187, 193, 255, 264, 265, 270, 271, 274, 281, 318, 319, 320, 321, 322, 338, 342, 373, 377, 378, 379, 380, 381, 388, 390, 391, 392, 394, 395, 396, 397], "first_elt": 2, "128": [2, 61, 63, 67, 88, 99, 100, 112, 113, 212, 215, 379, 381, 387, 390, 392, 393, 394], "wa": [2, 3, 5, 7, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 86, 87, 103, 107, 123, 124, 130, 131, 187, 197, 205, 225, 284, 286, 299, 301, 304, 306, 308, 324, 374, 379, 380, 382, 383, 389, 390, 394, 396], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 29, 30, 33, 37, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 87, 88, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 138, 139, 142, 143, 146, 147, 152, 153, 154, 155, 162, 165, 171, 172, 174, 177, 181, 183, 184, 185, 193, 195, 201, 204, 205, 208, 209, 211, 212, 213, 214, 215, 218, 220, 223, 227, 228, 231, 232, 233, 234, 238, 241, 244, 255, 256, 257, 258, 261, 262, 264, 265, 267, 268, 269, 270, 271, 273, 276, 278, 281, 302, 336, 365, 373, 375, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 147], "larger": [2, 4, 223, 227, 292, 300, 396], "volum": 2, "due": [2, 3, 5, 23, 384, 393, 394, 397], "serialis": [2, 41, 43, 46], "memorymappedtensor": [2, 30, 41, 43, 48, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 340, 385, 393], "well": [2, 3, 8, 11, 21, 23, 37, 42, 44, 45, 50, 51, 80, 85, 89, 96, 103, 107, 123, 124, 130, 131, 187, 195, 211, 225, 245, 246, 302, 309, 322, 378, 379, 381, 382, 383, 384, 386, 393, 394, 396, 397], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 151, 152, 153, 155, 177, 180, 182, 188, 195, 207, 225, 273, 274, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 345, 373, 378, 380, 381, 385, 390], "file": [2, 6, 7, 8, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 72, 132, 337, 338, 340, 375, 377, 379, 390, 394, 395, 397], "locat": [2, 7, 41, 43, 46, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 151, 156, 165, 176, 224, 238, 250, 251, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 378, 379, 380, 386, 390, 391, 394], "improv": [2, 4, 11, 160, 284, 374, 390, 391, 394], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 123, 130, 380, 390, 394], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 37, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 87, 88, 101, 102, 103, 106, 107, 108, 111, 123, 124, 130, 131, 140, 146, 174, 177, 184, 193, 195, 205, 233, 234, 264, 265, 270, 274, 301, 302, 304, 378, 379, 381, 382, 384, 386, 392, 394, 397], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 44, 53, 55, 56, 74, 80, 154, 206, 225, 226, 292, 381, 385, 394], "sharabl": [2, 123, 130], "collabor": [2, 67], "rather": [2, 4, 91, 172, 378, 379, 380, 382, 384, 390, 391, 394], "incur": [2, 99, 100, 112, 113], "transmiss": 2, "overhead": [2, 99, 100, 112, 113, 123, 130], "subclass": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 82, 103, 107, 123, 124, 130, 131, 141, 142, 186, 192, 197, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 273, 274, 275, 277, 280, 302, 304, 379, 381, 385, 392, 394], "instanti": [2, 3, 14, 15, 21, 41, 42, 43, 45, 46, 50, 51, 79, 80, 111, 142, 186, 234, 336, 378, 379, 383, 384, 386, 390, 391, 392, 394, 397], "content": [2, 8, 16, 27, 33, 41, 42, 43, 45, 46, 50, 51, 86, 103, 106, 107, 108, 120, 123, 124, 130, 131, 171, 208, 209, 228, 233, 234, 270, 302, 380, 392, 396], "map": [2, 3, 8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 78, 79, 80, 103, 107, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 195, 201, 218, 238, 255, 256, 257, 258, 262, 270, 271, 273, 274, 276, 277, 278, 279, 287, 307, 316, 351, 371, 373, 374, 378, 379, 380, 381, 383, 384, 393, 396], "writer": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 80, 82, 83, 87, 93, 94, 98, 380, 394], "tensordictroundrobinwrit": [2, 82], "goe": [2, 4, 125, 126, 378, 380, 390, 391, 397], "prioritizedsampl": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 82, 289, 294, 316, 378, 394], "access": [2, 3, 7, 8, 11, 37, 42, 64, 66, 103, 107, 123, 124, 130, 131, 169, 189, 195, 369, 372, 378, 382, 390, 391, 392, 394], "show": [2, 11, 37, 103, 107, 123, 124, 130, 131, 195, 234, 338, 373, 378, 380, 381, 390, 391, 392, 394, 396], "tensordictreplaybuff": [2, 42, 45, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 87, 88, 93, 145, 146, 352, 365, 371, 378, 379, 381, 394], "mp": [2, 18, 19, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 104, 193], "def": [2, 3, 12, 22, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 124, 130, 131, 138, 140, 142, 143, 152, 155, 171, 187, 195, 207, 218, 221, 222, 225, 226, 230, 235, 267, 270, 278, 285, 287, 288, 293, 300, 302, 305, 307, 309, 310, 336, 375, 378, 379, 389, 390, 391, 392, 394, 396, 397], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 82, 93, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 114, 115, 123, 124, 130, 131, 140, 143, 145, 147, 152, 153, 154, 155, 162, 163, 165, 174, 177, 183, 185, 187, 193, 196, 204, 207, 217, 218, 223, 227, 229, 230, 243, 244, 252, 255, 256, 257, 258, 261, 262, 264, 265, 268, 269, 270, 271, 273, 276, 278, 316, 319, 320, 321, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 346, 354, 373, 374, 378, 381, 391, 392, 396, 397], "__name__": [2, 3, 14, 15, 22, 104, 336, 379, 396], "__main__": [2, 3, 14, 15, 22, 104, 336, 396], "21": [2, 67, 68, 88, 123, 125, 126, 130, 377, 379, 387, 389, 390, 392, 395], "proc": 2, "target": [2, 4, 8, 21, 24, 37, 103, 104, 107, 123, 124, 130, 131, 182, 186, 195, 273, 274, 284, 285, 286, 287, 288, 289, 291, 293, 294, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 320, 321, 322, 358, 364, 365, 374, 375, 381, 387, 390, 392], "arg": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 45, 46, 49, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 80, 82, 87, 88, 89, 91, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 150, 169, 171, 180, 183, 186, 187, 188, 190, 191, 195, 207, 208, 209, 217, 223, 227, 228, 229, 230, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 345, 348, 352, 355, 369, 379, 397], "join": [2, 104, 371, 379, 380, 390], "now": [2, 3, 7, 42, 123, 146, 234, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 393, 394, 397], "20": [2, 54, 68, 87, 88, 93, 103, 107, 111, 123, 124, 130, 131, 182, 195, 220, 221, 222, 225, 226, 261, 346, 377, 378, 379, 380, 381, 385, 390, 391, 392, 394, 395, 396, 397], "_data": [2, 392], "It": [2, 3, 4, 7, 23, 37, 44, 47, 50, 52, 54, 63, 69, 82, 85, 93, 98, 103, 107, 109, 119, 120, 123, 124, 125, 126, 130, 131, 132, 133, 143, 145, 156, 163, 165, 170, 182, 187, 192, 195, 197, 211, 213, 219, 233, 234, 243, 245, 246, 252, 253, 259, 263, 264, 267, 268, 269, 272, 274, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 308, 310, 316, 317, 318, 336, 345, 351, 372, 373, 374, 378, 379, 381, 382, 390, 391, 392, 393, 394, 396, 397], "difficult": [2, 4, 123, 386], "pai": [2, 8, 378, 381], "word": [2, 3, 11, 47, 61, 63, 65, 67, 68, 69, 302, 378, 385, 392, 397], "1m": [2, 61, 67, 358, 378, 380, 381, 393], "doe": [2, 3, 18, 41, 42, 43, 46, 50, 54, 61, 63, 67, 71, 72, 78, 79, 80, 87, 89, 91, 98, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 193, 215, 221, 222, 223, 225, 226, 227, 236, 253, 261, 275, 276, 284, 286, 294, 301, 302, 304, 317, 355, 373, 375, 378, 379, 380, 381, 382, 385, 390, 392, 394, 397], "howev": [2, 3, 5, 7, 37, 103, 107, 123, 124, 130, 131, 146, 177, 182, 187, 195, 284, 286, 287, 301, 304, 306, 307, 373, 378, 379, 381, 384, 392, 394, 397], "capac": [2, 42, 45, 50, 51, 74, 75, 79, 87, 95, 380, 385], "There": [2, 10, 82, 223, 227, 373, 375, 380, 381, 383, 385, 390, 391, 392, 394, 397], "circumv": 2, "account": [2, 74, 75, 95, 106, 108, 131, 142, 146, 231, 232, 373, 379, 381, 394, 397], "save": [2, 3, 8, 37, 41, 42, 43, 45, 46, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 82, 89, 90, 91, 95, 96, 103, 107, 123, 124, 130, 131, 192, 195, 337, 338, 340, 345, 355, 375, 385, 386, 387, 390, 391], "convent": [2, 3, 61, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 132, 133, 374, 378, 381, 390, 391, 392], "overridden": [2, 3, 61, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 318, 320, 321, 381, 390], "dim_extend": [2, 42, 45, 50, 51], "obtain": [2, 7, 47, 61, 103, 107, 123, 124, 130, 131, 145, 169, 182, 191, 207, 243, 352, 378, 380, 382, 383, 384, 390, 391], "counterpart": 2, "desir": [2, 3, 11, 37, 103, 107, 123, 124, 130, 131, 141, 143, 150, 165, 167, 169, 170, 183, 186, 187, 189, 191, 195, 202, 203, 208, 209, 228, 234, 255, 262, 263, 270, 271, 272, 273, 274, 373, 378, 390, 391, 392, 394], "diversifi": 2, "offer": [2, 3, 7, 99, 100, 103, 107, 112, 113, 117, 118, 123, 124, 130, 131, 336, 373, 378, 379, 382, 384, 385, 390, 392, 394, 397], "accomplish": [2, 197, 382], "anoth": [2, 3, 8, 67, 80, 87, 103, 106, 107, 108, 111, 123, 124, 130, 131, 143, 152, 153, 155, 183, 186, 228, 270, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 373, 374, 378, 380, 381, 383, 384, 389, 390, 391, 392, 397], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 64, 146, 197, 285, 291, 292, 300, 309, 345, 375, 382, 393, 394, 396], "docstr": [2, 37, 103, 107, 123, 124, 130, 131, 195, 382, 383], "extens": [2, 42, 45, 50, 51, 88, 375, 394], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 125, 126, 130, 131, 185, 187, 195, 218, 221, 225, 235, 263, 284, 294, 302, 304, 372, 375, 379, 385, 389, 394], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 103, 107, 123, 124, 130, 131, 152, 155, 193, 195, 205, 221, 223, 225, 227, 268, 269, 270, 274, 294, 379, 383, 389, 390, 391, 397], "happi": 2, "concaten": [2, 8, 14, 15, 21, 35, 36, 67, 146, 147, 165, 186, 225, 228, 276, 378, 379, 383, 390, 391, 392, 394, 397], "schedul": [2, 4, 7, 47, 351, 380, 392], "transformedenv": [2, 3, 11, 37, 103, 104, 107, 123, 124, 130, 131, 139, 140, 143, 146, 149, 150, 152, 155, 156, 157, 159, 162, 163, 164, 165, 167, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 186, 193, 195, 223, 227, 267, 338, 378, 379, 380, 381, 382, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "stepcount": [2, 37, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 186, 195, 378, 379, 380, 381, 382, 387, 390, 391, 396], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 93, 103, 104, 107, 109, 123, 124, 130, 131, 139, 142, 143, 146, 149, 150, 156, 162, 163, 165, 167, 172, 173, 174, 177, 179, 182, 183, 184, 186, 187, 193, 195, 223, 227, 267, 336, 338, 365, 371, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 394, 396, 397], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 146, 174, 371, 385, 394], "cartpol": [2, 3, 11, 30, 37, 48, 101, 102, 103, 107, 123, 124, 130, 131, 142, 143, 146, 177, 182, 193, 195, 267, 336, 379, 381, 383, 385, 386, 387, 394, 397], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 30, 37, 48, 63, 65, 93, 103, 104, 106, 107, 108, 112, 113, 120, 123, 124, 130, 131, 142, 143, 146, 149, 157, 162, 163, 165, 172, 174, 177, 179, 181, 182, 183, 184, 186, 193, 195, 223, 227, 267, 313, 327, 328, 329, 330, 332, 333, 334, 335, 336, 373, 379, 381, 382, 383, 384, 385, 386, 387, 392, 394, 396, 397], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 99, 100, 103, 107, 112, 113, 119, 123, 124, 125, 126, 130, 131, 139, 140, 143, 146, 152, 155, 163, 171, 174, 196, 207, 218, 230, 244, 246, 255, 262, 270, 271, 285, 287, 289, 291, 305, 307, 309, 310, 365, 373, 378, 379, 380, 381, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 396, 397], "8": [2, 3, 6, 7, 37, 45, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 87, 88, 99, 100, 101, 102, 103, 107, 123, 124, 130, 131, 139, 142, 182, 208, 209, 211, 212, 220, 228, 256, 257, 258, 270, 273, 276, 300, 377, 378, 379, 385, 390, 391, 392, 393, 394, 395, 396, 397], "traj_kei": [2, 80, 87, 88, 394], "truncated_kei": [2, 80, 87, 88, 174, 181], "strict_length": [2, 61, 67, 80, 87, 88, 338], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 30, 33, 37, 42, 45, 48, 51, 52, 74, 75, 79, 80, 87, 88, 95, 103, 107, 123, 124, 130, 131, 151, 169, 174, 177, 187, 191, 195, 222, 226, 238, 244, 263, 267, 270, 272, 273, 274, 284, 286, 287, 288, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 346, 358, 378, 379, 380, 381, 383, 384, 385, 386, 387, 390, 391, 392, 394, 396, 397], "enumer": [2, 14, 15, 16, 21, 30, 37, 45, 48, 51, 88, 103, 107, 123, 124, 130, 131, 195, 311, 374, 378, 379, 380, 381, 387, 390, 394, 396], "break": [2, 5, 14, 15, 16, 21, 37, 45, 51, 61, 64, 65, 67, 68, 69, 70, 80, 87, 88, 93, 103, 107, 123, 124, 130, 131, 143, 146, 174, 193, 195, 223, 227, 338, 379, 385, 387, 394, 396], "step_count": [2, 14, 15, 16, 37, 103, 107, 112, 113, 123, 124, 130, 131, 181, 195, 380, 381, 382, 387, 396], "32": [2, 22, 27, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 88, 128, 129, 132, 133, 208, 209, 210, 211, 212, 214, 215, 220, 228, 233, 234, 239, 240, 242, 243, 252, 316, 336, 378, 379, 380, 381, 383, 384, 392, 393, 394, 396, 397], "33": [2, 27, 37, 82, 103, 107, 123, 124, 130, 131, 195, 208, 209, 228, 379, 391, 392], "34": [2, 208, 209, 228, 378, 379, 392], "35": [2, 208, 209, 228, 378, 379, 380, 392, 393], "36": [2, 379, 390, 392], "37": [2, 145, 377, 378, 379, 381, 392, 393, 395, 397], "38": [2, 7, 377, 379, 392, 395], "39": [2, 65, 112, 113, 377, 378, 379, 381, 392, 393, 395], "40": [2, 112, 113, 377, 378, 379, 380, 390, 391, 392, 395], "41": [2, 379, 392], "11": [2, 10, 23, 29, 40, 54, 74, 75, 79, 88, 95, 104, 139, 185, 195, 207, 230, 378, 379, 380, 390, 392, 394], "12": [2, 10, 68, 74, 75, 88, 95, 112, 113, 123, 128, 129, 130, 195, 378, 379, 380, 381, 390, 392, 394], "13": [2, 5, 12, 87, 88, 127, 192, 195, 377, 378, 379, 381, 386, 391, 392, 393, 394, 395], "14": [2, 6, 12, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88, 103, 107, 123, 124, 130, 131, 165, 195, 378, 379, 380, 390, 392, 393, 394], "15": [2, 23, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 103, 107, 123, 124, 130, 131, 195, 261, 268, 269, 295, 378, 379, 381, 392, 394], "16": [2, 3, 37, 68, 80, 88, 99, 100, 103, 107, 112, 113, 123, 124, 130, 131, 146, 195, 378, 379, 380, 381, 390, 392, 394], "17": [2, 11, 68, 88, 107, 123, 139, 195, 378, 379, 380, 390, 392], "could": [2, 3, 4, 6, 23, 379, 380, 386, 390, 391, 393, 397], "sai": [2, 37, 103, 107, 123, 124, 130, 131, 195, 233, 390, 393, 397], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 27, 29, 33, 36, 40, 76, 80, 87, 88, 103, 106, 107, 108, 111, 123, 124, 130, 131, 152, 155, 170, 177, 233, 234, 271, 379, 380, 381, 390, 391, 392], "handl": [2, 3, 21, 37, 103, 107, 123, 124, 130, 131, 192, 193, 195, 227, 228, 302, 355, 367, 368, 378, 379, 380, 382, 384, 391, 394], "suggest": [2, 316, 378, 391], "serialenv": [2, 3, 103, 107, 123, 124, 131, 183, 195, 267, 371, 396, 397], "squeez": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 142, 143, 146, 180, 182, 208, 209, 247, 248, 378, 392, 394], "6": [2, 3, 7, 14, 15, 16, 17, 23, 37, 45, 61, 68, 69, 80, 88, 101, 102, 107, 123, 128, 129, 139, 142, 165, 167, 182, 208, 209, 211, 212, 213, 216, 220, 222, 228, 233, 234, 235, 239, 249, 267, 270, 278, 377, 378, 379, 385, 390, 391, 392, 394, 395, 396], "5": [2, 3, 14, 15, 23, 25, 27, 33, 35, 36, 37, 42, 45, 50, 51, 61, 82, 87, 88, 93, 103, 104, 107, 112, 113, 117, 118, 120, 123, 124, 128, 129, 130, 131, 132, 133, 139, 142, 143, 145, 174, 181, 182, 195, 206, 207, 208, 209, 211, 212, 217, 218, 219, 220, 221, 224, 225, 228, 230, 233, 234, 239, 244, 250, 251, 261, 262, 267, 271, 277, 301, 304, 306, 309, 310, 336, 373, 377, 378, 379, 383, 385, 387, 390, 391, 392, 394, 395, 396, 397], "7": [2, 3, 6, 10, 29, 37, 40, 42, 45, 50, 80, 88, 103, 107, 117, 118, 123, 124, 130, 131, 139, 142, 182, 207, 208, 209, 212, 228, 230, 233, 324, 377, 378, 379, 381, 385, 390, 391, 392, 393, 394, 395, 396], "9": [2, 3, 7, 23, 37, 42, 45, 50, 68, 69, 80, 88, 93, 101, 102, 116, 125, 126, 131, 139, 142, 182, 193, 195, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 311, 316, 374, 377, 378, 379, 380, 381, 385, 390, 391, 392, 394, 395], "18": [2, 68, 88, 128, 129, 132, 133, 195, 234, 377, 378, 379, 380, 381, 391, 392, 393, 395], "19": [2, 68, 87, 88, 93, 195, 377, 378, 379, 380, 381, 390, 392, 395], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 64, 123, 130, 186, 188, 234, 374, 375, 378, 379, 391, 394, 396], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 37, 41, 43, 46, 54, 61, 64, 66, 69, 70, 99, 101, 103, 107, 112, 116, 117, 118, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 154, 157, 172, 177, 178, 181, 187, 189, 192, 195, 205, 223, 227, 262, 271, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 318, 320, 321, 322, 336, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 375, 378, 379, 380, 381, 384, 386, 390, 391, 392, 397], "randomcroptensordict": [2, 378], "unlik": [2, 86, 107, 117, 118, 132, 133, 206, 267, 294, 304, 338, 379, 383, 385, 396], "stop": [2, 3, 16, 21, 47, 69, 80, 87, 88, 103, 107, 123, 124, 130, 131, 380, 385, 390, 391, 396, 397], "signal": [2, 3, 14, 15, 16, 17, 23, 61, 63, 65, 67, 68, 69, 80, 87, 88, 93, 107, 117, 118, 132, 133, 146, 156, 181, 184, 205, 374, 378, 380, 390, 391, 394, 397], "disk": [2, 3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 82, 355, 375, 378, 379, 381, 385, 386, 394], "dump": [2, 3, 11, 30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 91, 95, 336, 337, 338, 386, 387, 390], "load": [2, 6, 7, 14, 15, 16, 17, 30, 37, 41, 42, 43, 45, 46, 47, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 82, 89, 90, 91, 95, 96, 102, 103, 107, 123, 124, 130, 131, 138, 193, 195, 369, 375, 378, 380, 394], "json": 2, "metadata": [2, 61, 63, 103, 107, 123, 124, 130, 131, 287, 309, 380, 382, 384, 385, 390, 391, 397], "anticip": [2, 152, 155], "compli": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 67], "back": [2, 24, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 53, 55, 56, 63, 192, 197, 235, 255, 262, 263, 270, 271, 272, 273, 274, 380, 390, 391, 392, 394], "exact": [2, 3, 23, 123, 225], "statu": [2, 3, 103], "prioriti": [2, 4, 42, 50, 51, 74, 75, 76, 79, 80, 89, 91, 95, 287, 288, 289, 291, 292, 293, 294, 300, 305, 307, 309, 310, 316, 375, 378, 379, 394], "heap": 2, "under": [2, 3, 4, 21, 37, 47, 61, 63, 64, 65, 67, 68, 69, 101, 102, 103, 106, 107, 108, 109, 123, 124, 127, 130, 131, 195, 255, 262, 263, 270, 271, 272, 273, 274, 302, 318, 319, 320, 321, 322, 338, 374, 378, 379, 383, 390, 392, 397], "hood": [2, 21, 61, 103, 107, 123, 124, 130, 131, 392], "naiv": [2, 189, 382], "just": [2, 3, 4, 12, 91, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 116, 120, 121, 123, 124, 125, 126, 127, 130, 131, 142, 149, 205, 234, 346, 373, 375, 378, 379, 380, 381, 382, 383, 385, 390, 391, 392, 394, 396, 397], "public": [2, 66, 90, 169, 191], "serializ": 2, "consum": [2, 86, 88, 267, 379, 380, 385, 391, 394], "much": [2, 8, 11, 14, 15, 17, 42, 50, 67, 79, 80, 123, 130, 301, 304, 380, 382, 386, 390, 391, 392, 394, 397], "duplic": [2, 37, 86, 103, 107, 123, 124, 130, 131, 195, 285, 287, 289, 294, 300, 302, 305, 307, 309, 310, 316], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 30, 37, 48, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 165, 166, 167, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 204, 210, 211, 212, 213, 214, 215, 218, 223, 227, 233, 239, 240, 242, 244, 245, 255, 256, 257, 258, 261, 262, 264, 265, 267, 268, 269, 270, 271, 278, 279, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 300, 301, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 336, 338, 365, 373, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 396, 397], "plu": [2, 14, 15, 17, 47, 123, 130, 392], "enabl": [2, 7, 8, 63, 74, 75, 86, 95, 143, 223, 227, 267, 268, 269, 336, 338, 351, 380, 382, 390, 391, 392, 394], "three": [2, 25, 29, 35, 36, 40, 70, 287, 373, 375, 380, 382, 383, 390, 391, 392, 394, 397], "flatstoragecheckpoint": 2, "discard": [2, 3, 54, 63, 65, 107, 189, 204, 337, 394, 397], "compress": 2, "At": [2, 229, 264, 379, 380, 381, 385, 389, 392, 393], "correct": [2, 4, 41, 43, 46, 103, 107, 123, 124, 130, 131, 163, 358, 380, 381], "addit": [2, 3, 4, 37, 63, 103, 107, 123, 124, 130, 131, 132, 150, 169, 183, 186, 187, 189, 191, 195, 221, 259, 260, 261, 267, 273, 283, 302, 318, 336, 374, 378, 379, 382, 390, 391, 394], "nestedstoragecheckpoint": 2, "represent": [2, 33, 34, 37, 103, 107, 123, 124, 130, 131, 169, 189, 191, 195, 378, 392, 393, 397], "appar": [2, 3, 348], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 71, 72, 78, 103, 106, 107, 108, 123, 124, 130, 131, 139, 149, 154, 201, 215, 218, 233, 240, 244, 255, 259, 260, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 281, 289, 291, 292, 293, 309, 310, 316, 373, 379, 380, 381, 382, 383, 384, 390, 391, 392, 396, 397], "assumpt": [2, 3, 392, 394], "accur": [2, 7, 63, 69, 379, 392, 394], "truncat": [2, 3, 14, 15, 16, 17, 30, 32, 37, 38, 44, 48, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 80, 87, 88, 101, 102, 103, 106, 107, 108, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 156, 157, 164, 171, 174, 181, 187, 195, 205, 223, 227, 251, 267, 324, 378, 380, 381, 382, 383, 385, 386, 389, 390, 393, 394, 396, 397], "marl": [2, 116, 134, 146, 184, 233, 234, 235, 382, 390, 391], "extra": [2, 10, 37, 103, 107, 123, 124, 130, 131, 146, 193, 195, 204, 345, 373, 380, 381, 394], "fail": [2, 7, 22, 27, 33, 123, 140, 197], "concret": [2, 378, 380], "set_se": [2, 3, 14, 15, 16, 17, 21, 30, 37, 48, 99, 100, 103, 107, 112, 113, 119, 123, 124, 130, 131, 142, 165, 172, 177, 182, 184, 187, 195, 385, 387, 392, 396, 397], "manual_se": [2, 3, 30, 42, 45, 48, 50, 51, 64, 68, 69, 87, 88, 99, 100, 103, 107, 123, 124, 130, 131, 140, 142, 154, 165, 174, 177, 182, 184, 195, 231, 232, 241, 255, 263, 264, 265, 268, 269, 277, 284, 285, 287, 288, 292, 300, 307, 385, 387, 390, 391, 392, 396, 397], "200": [2, 14, 15, 16, 21, 30, 37, 48, 61, 103, 106, 107, 108, 123, 124, 130, 131, 132, 133, 174, 195, 211, 212, 219, 245, 246, 336, 338, 378, 381, 385, 387, 392, 394], "22": [2, 67, 87, 88, 192, 379, 390, 392, 393], "rb_test": 2, "_storag": [2, 393, 394], "max_siz": [2, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 89, 93, 95, 380, 385], "102": [2, 392], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 41, 43, 46, 120, 215, 231, 232, 233, 283, 287, 336, 378, 380, 390, 391], "state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 193, 195, 233, 234, 287, 307, 369, 375, 378, 379, 397], "load_state_dict": [2, 14, 15, 16, 17, 21, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 193, 195, 287, 307, 375, 378], "drawback": 2, "struggl": 2, "big": [2, 380, 385, 394, 397], "sequenti": [2, 9, 37, 103, 107, 123, 124, 130, 131, 145, 163, 195, 256, 257, 258, 270, 275, 276, 281, 284, 285, 287, 293, 300, 304, 305, 306, 307, 309, 373, 380, 381, 383, 391, 392, 393, 396, 397], "known": [2, 3, 5, 7, 8, 107, 325, 326, 378, 379, 382], "seamless": [2, 228], "integr": [2, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 214, 223, 227, 230, 273, 373, 382, 383, 385, 390, 391, 392, 393], "indiffer": 2, "particularli": 2, "heavili": [2, 11], "smooth": [2, 206, 378, 379, 384], "essenti": [2, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 379, 382, 390, 392, 394], "understand": [2, 3, 8, 378, 379, 382, 383, 390, 391], "purpos": [2, 3, 7, 11, 103, 107, 123, 124, 130, 131, 146, 221, 284, 286, 298, 301, 304, 306, 365, 378, 380, 381, 384, 386, 390, 391, 393, 397], "guid": [2, 11, 125, 126, 128, 129, 182, 372, 378, 391], "explan": [2, 37, 103, 107, 123, 124, 130, 131, 195], "effect": [2, 3, 27, 37, 42, 45, 50, 51, 61, 67, 80, 82, 85, 87, 88, 103, 107, 123, 124, 130, 131, 142, 146, 187, 195, 355, 378, 383, 390, 394, 397], "realm": [2, 383], "As": [2, 3, 4, 37, 61, 103, 107, 116, 123, 124, 125, 126, 130, 131, 174, 274, 318, 373, 378, 379, 380, 381, 382, 384, 385, 390, 391, 392, 393, 394, 396, 397], "practition": 2, "often": [2, 3, 8, 235, 299, 302, 355, 378, 379, 382, 384, 392, 394, 397], "encount": [2, 4, 67, 267, 372, 379, 383, 392], "situat": [2, 117, 118], "sometim": [2, 3, 381, 397], "variabl": [2, 3, 4, 7, 8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 64, 65, 68, 69, 99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 117, 118, 121, 122, 127, 132, 133, 221, 222, 223, 225, 226, 227, 230, 256, 257, 258, 302, 305, 375, 379], "immedi": [2, 27, 33, 37, 103, 107, 123, 124, 130, 131, 195, 317, 390, 391], "199": [2, 392], "info": [2, 3, 14, 15, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 85, 87, 88, 101, 102, 103, 106, 107, 108, 109, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 189, 192, 194, 345, 382, 387, 390, 391, 394], "glanc": [2, 382], "seem": [2, 378, 381, 382], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 47, 103, 107, 116, 123, 124, 125, 126, 130, 131, 146, 170, 221, 223, 225, 227, 252, 256, 257, 258, 279, 373, 379, 381, 382, 390], "less": [2, 120, 253, 367, 368, 374, 380, 381, 394, 396], "omit": [2, 350, 380, 384, 392, 394], "proper": [2, 3, 4, 6, 7, 318, 319, 320, 321, 379, 380, 390, 391, 394, 397], "imposs": [2, 3, 93, 197, 284, 286, 301, 304, 306], "determin": [2, 42, 50, 63, 79, 80, 103, 107, 123, 124, 130, 131, 132, 133, 169, 191, 233, 268, 269, 379, 383, 390, 391], "complic": [2, 392, 394, 397], "matter": [2, 11, 28, 385], "inconsist": [2, 397], "miss": [2, 3, 4, 6, 7, 12, 27, 37, 103, 107, 123, 124, 130, 131, 187, 195, 204, 275, 276, 287, 307, 372, 378, 381], "behavior": [2, 4, 37, 103, 107, 123, 124, 130, 131, 187, 195, 292, 300, 309, 381, 391, 392], "primari": [2, 385], "elimin": [2, 3, 382], "upon": [2, 3, 8, 390, 392], "canon": 2, "definit": [2, 40, 89, 233], "markov": [2, 3, 382, 397], "decis": [2, 3, 210, 242, 261, 290, 303, 381, 382, 383, 390, 391, 394, 397], "mdp": [2, 382, 392], "context": [2, 3, 5, 8, 37, 103, 104, 107, 122, 123, 124, 130, 131, 183, 188, 195, 234, 236, 261, 314, 315, 318, 319, 320, 321, 323, 331, 338, 351, 373, 374, 378, 379, 380, 390, 391, 392, 393, 394], "condit": [2, 54, 182, 193, 262, 263, 267, 271, 272, 283, 378, 390, 392, 394], "complet": [2, 7, 9, 86, 103, 106, 107, 108, 123, 124, 130, 131, 146, 181, 372, 374, 378, 380, 382, 389], "termin": [2, 3, 7, 14, 15, 16, 17, 30, 32, 37, 38, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 101, 102, 103, 106, 107, 108, 112, 113, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 142, 143, 156, 171, 195, 205, 207, 223, 227, 230, 267, 275, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "reward": [2, 3, 14, 15, 16, 28, 30, 32, 37, 38, 41, 46, 47, 48, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 139, 140, 143, 144, 149, 150, 152, 153, 155, 156, 157, 163, 167, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 190, 191, 193, 195, 201, 204, 207, 223, 230, 261, 267, 279, 284, 285, 287, 288, 289, 291, 292, 293, 296, 300, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 348, 349, 351, 353, 369, 374, 375, 378, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "imit": [2, 3, 298], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 52, 53, 55, 56, 67, 103, 104, 107, 110, 113, 123, 124, 130, 131, 195, 208, 209, 228, 234, 373, 374, 375, 378, 379, 380, 381, 382, 390, 391, 392, 394], "stateless": [2, 3, 103, 107, 123, 124, 130, 131, 143, 186, 302, 336, 378, 382, 392, 397], "simul": [2, 3, 5, 7, 8, 99, 100, 109, 112, 113, 127, 132, 133, 137, 207, 230, 373, 378, 380, 382, 386, 390, 391], "furthermor": [2, 390, 391], "certain": [2, 4, 18, 19, 20, 21, 37, 54, 103, 107, 123, 124, 130, 131, 138, 160, 181, 187, 195, 222, 226, 264, 301, 373, 378, 379, 380, 387, 390, 391, 397], "composit": [2, 3, 27, 33, 85, 91, 98, 103, 107, 123, 124, 130, 131, 270, 380, 383, 392], "accommod": [2, 3, 382, 383], "uniform": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 53, 55, 56, 79, 80, 390], "unambigu": 2, "distinguish": [2, 117, 118, 132, 133], "happen": [2, 3, 103, 107, 123, 124, 130, 131, 260, 379, 384, 385, 386, 393, 397], "limit": [2, 47, 103, 107, 119, 123, 124, 130, 131, 146, 163, 284, 286, 301, 302, 304, 306, 374, 378, 379, 381, 390, 391, 392], "everyth": [2, 379, 380, 381, 386, 387], "belong": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 67, 192, 193, 373, 378, 385, 391], "rule": [2, 123, 152, 155, 274, 373, 380], "field": [2, 3, 14, 15, 16, 17, 23, 27, 30, 37, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 152, 155, 156, 157, 167, 171, 172, 174, 178, 181, 183, 187, 195, 204, 207, 217, 218, 223, 227, 230, 243, 244, 252, 255, 256, 257, 258, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 276, 278, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 359, 372, 373, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "taken": [2, 3, 25, 29, 35, 36, 40, 103, 107, 123, 124, 130, 131, 139, 173, 231, 232, 265, 374, 378, 380, 381, 383, 390, 391, 392], "is_shar": [2, 3, 14, 15, 16, 23, 27, 30, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 79, 95, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 139, 143, 152, 155, 156, 157, 167, 171, 172, 174, 178, 181, 183, 193, 204, 207, 217, 218, 223, 227, 230, 243, 244, 252, 255, 256, 257, 258, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 276, 278, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 373, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "brought": [2, 380, 381, 383], "step_mdp": [2, 3, 103, 107, 123, 124, 130, 131, 223, 227, 371, 381, 382, 392, 396, 397], "count": [2, 3, 37, 103, 104, 181, 268, 269, 351, 355, 358, 378, 379, 380, 381, 394, 397], "trigger": [2, 7], "partial": [2, 3, 103, 107, 123, 124, 130, 131, 145, 146, 182, 183, 184, 270, 355, 381], "turn": [2, 18, 19, 20, 21, 41, 43, 46, 131, 161, 188, 192, 262, 336, 351, 374, 378, 379, 381, 383, 392, 393], "retain": 2, "regard": [2, 63, 69, 218, 263, 284, 294, 304, 378, 380, 392], "copi": [2, 3, 12, 18, 19, 20, 21, 37, 41, 43, 46, 47, 54, 67, 74, 103, 107, 123, 124, 130, 131, 142, 172, 182, 187, 193, 195, 204, 223, 227, 235, 261, 287, 302, 307, 336, 374, 378, 379, 381, 382, 390, 394], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 338, 374, 386, 394, 397], "eas": [2, 3, 390, 391], "flat": [2, 93], "manner": [2, 107, 169, 189, 373, 378, 379, 380, 385, 389, 392, 394], "ted2flat": [2, 30, 371], "flat2t": [2, 371], "unflatten": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 143, 267], "deseri": [2, 3, 30], "posit": [2, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 101, 102, 103, 107, 123, 124, 130, 131, 159, 160, 180, 181, 184, 187, 188, 195, 238, 287, 307, 374, 380, 390, 391, 392, 394], "both": [2, 3, 7, 37, 42, 45, 50, 51, 67, 103, 104, 106, 107, 117, 118, 123, 124, 125, 126, 130, 131, 139, 146, 172, 187, 195, 205, 208, 209, 223, 226, 227, 228, 233, 234, 256, 257, 258, 263, 272, 284, 286, 287, 288, 292, 293, 300, 301, 302, 304, 305, 306, 307, 309, 310, 351, 373, 378, 380, 382, 384, 390, 391, 392, 393, 394, 397], "mark": [2, 3, 16, 69, 103, 107, 123, 124, 130, 131, 223, 227, 318, 320, 321, 385, 394], "identifi": [2, 44], "abov": [2, 3, 7, 37, 103, 107, 123, 124, 130, 131, 195, 224, 250, 251, 283, 374, 375, 378, 380, 382, 383, 390, 391, 392, 397], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 80, 87, 88, 101, 102, 103, 106, 107, 108, 109, 113, 117, 118, 119, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 143, 144, 146, 149, 150, 151, 152, 153, 155, 157, 163, 165, 169, 171, 172, 177, 178, 181, 184, 186, 187, 189, 191, 192, 195, 197, 205, 208, 209, 210, 211, 212, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 233, 234, 238, 244, 253, 255, 256, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 336, 338, 346, 373, 374, 378, 379, 380, 381, 382, 383, 386, 389, 390, 391, 392, 393, 396, 397], "typic": [2, 3, 4, 8, 37, 103, 107, 123, 124, 130, 131, 156, 182, 195, 270, 285, 287, 302, 304, 307, 373, 374, 375, 380, 382, 384, 385, 390, 391, 392], "adjust": [2, 11, 378, 390, 391, 392], "grumodul": [2, 145, 281], "lstmmodul": [2, 223, 381], "skip": [2, 3, 37, 61, 103, 107, 123, 124, 130, 131, 160, 187, 195, 197, 270, 274, 287, 302, 307, 318, 319, 320, 321, 337, 338, 348, 351, 378, 379, 392], "accumul": [2, 8, 195], "upcom": [2, 302, 327, 328, 329, 330, 332, 333, 334, 335, 378], "popular": [2, 3, 373, 381, 384, 391], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 195, 371, 379], "shift": [2, 30, 32, 37, 38, 48, 71, 72, 78, 280, 318, 319, 320, 321, 380], "approxim": [2, 391, 397], "would": [2, 3, 11, 37, 47, 103, 107, 123, 124, 130, 131, 195, 221, 223, 225, 227, 228, 233, 375, 379, 380, 381, 382, 384, 385, 392, 394, 396, 397], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 146, 215, 242, 284, 290, 303, 304, 346, 369, 380, 381, 391, 394], "2x": 2, "small": [2, 189, 206, 378, 380, 390, 391, 397], "clearer": [2, 383], "lazi": [2, 33, 34, 58, 59, 103, 107, 123, 124, 130, 131, 132, 133, 169, 189, 208, 233, 236, 275, 276, 378, 379, 383, 385, 389, 394, 397], "certainli": 2, "benefici": 2, "welcom": [2, 382], "wrapper": [2, 3, 12, 17, 41, 43, 46, 47, 50, 51, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 192, 196, 238, 253, 260, 261, 265, 267, 269, 274, 279, 318, 343, 344, 345, 369, 371, 380, 381, 382, 390, 391, 393, 397], "around": [2, 5, 7, 17, 50, 51, 119, 196, 267, 274, 318, 378, 379, 391, 397], "selecttransform": [2, 103, 107, 123, 124, 130, 131], "excludetransform": [2, 68, 178, 394], "promptli": 2, "virtual": [2, 3, 106], "instal": [2, 3, 5, 10, 18, 19, 20, 63, 66, 103, 107, 123, 124, 125, 126, 128, 129, 130, 131, 340, 355, 372, 378, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 397], "respons": [2, 3, 8, 80, 87, 103, 107, 123, 124, 130, 131, 355, 384, 385, 397], "d4rl": [2, 63, 69], "repositori": [2, 7, 64, 65, 66, 69, 133, 390, 391], "wheel": [2, 380], "publish": 2, "openml": [2, 66, 122], "scikit": [2, 66, 122], "panda": [2, 66], "raw": [2, 3, 4, 47, 224, 250, 251, 379, 385, 392], "go": [2, 3, 7, 116, 123, 170, 174, 261, 324, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "natur": [2, 3, 378, 381, 383, 384, 385, 394], "modifi": [2, 3, 7, 8, 27, 33, 37, 54, 103, 107, 123, 124, 130, 131, 143, 150, 159, 163, 169, 183, 186, 187, 189, 191, 195, 235, 261, 268, 269, 273, 358, 374, 378, 379, 380, 382, 390, 391, 392], "fly": [2, 193, 301, 374, 380, 392, 394, 397], "least": [2, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 103, 149, 386, 397], "pre": [2, 7, 22, 37, 54, 67, 75, 103, 107, 123, 124, 130, 131, 169, 189, 191, 195, 397], "appli": [2, 3, 4, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 168, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 186, 187, 189, 190, 192, 193, 195, 221, 225, 235, 250, 262, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 303, 304, 305, 306, 307, 309, 310, 318, 336, 350, 375, 378, 379, 380, 385, 390, 392, 396, 397], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 64, 80, 87, 93, 111, 112, 113, 123, 125, 126, 149, 177, 208, 209, 219, 233, 234, 264, 267, 340, 355, 367, 368, 378, 379, 380, 381, 383, 384, 387, 390, 391, 394, 396], "pipelin": [2, 3, 7, 373, 380], "replac": [2, 3, 6, 7, 27, 33, 37, 61, 67, 80, 87, 88, 142, 154, 156, 162, 204, 264, 373, 390, 394], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 46, 67, 82, 103, 107, 123, 124, 130, 131, 142, 174, 187, 195, 259, 260, 265, 267, 268, 269, 353, 373, 375, 379, 380, 381, 383, 386, 392, 394, 397], "produc": [2, 139, 142, 143, 208, 209, 228, 234, 241, 256, 258, 261, 338, 380, 381, 382, 383, 385, 394, 397], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 67, 71, 86, 103, 107, 123, 124, 125, 126, 130, 131, 187, 195, 284, 285, 287, 300, 302, 304, 305, 306, 307, 309, 310, 380], "download": [2, 7, 10, 61, 63, 64, 65, 67, 68, 69, 111, 169, 191, 338, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 124, 379, 390, 391, 392], "robosetexperiencereplai": [2, 87, 88], "fk1": [2, 68], "v4": [2, 68, 107, 123, 139, 173, 327, 328, 329, 330, 332, 333, 334, 335, 378, 380, 393, 397], "expert": [2, 68], "fk1_microopenrandom_v2d": [2, 68], "func": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 194], "obs_norm": 2, "norm": [2, 4, 8, 99, 100, 206, 355, 378, 379, 380, 390, 391, 392], "num_work": [2, 41, 43, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 120, 123, 130, 378, 379], "os": [2, 43, 54, 70, 379], "cpu_count": [2, 43, 54, 70], "num_chunk": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69], "1000": [2, 4, 45, 74, 79, 87, 88, 103, 107, 123, 124, 130, 131, 146, 193, 259, 264, 268, 269, 270, 274, 299, 378, 379, 380, 381, 383, 385, 387, 393, 394], "mp_start_method": [2, 61, 62, 63, 64, 65, 66, 67, 68, 69, 123, 130, 379, 396], "fork": [2, 5, 61, 62, 63, 64, 65, 66, 67, 68, 69, 378, 379, 380, 381, 390, 391, 393, 396], "recreat": [2, 392], "customari": [2, 373], "moreov": [2, 3], "fine": [2, 3, 24, 80, 87, 103, 107, 123, 124, 130, 131, 143, 163, 385, 393], "grain": [2, 3, 80, 87, 103, 107, 123, 124, 130, 131, 143], "nomenclatur": 2, "compact": [2, 48, 71, 72, 78], "propos": [2, 146, 156, 229, 299, 308, 373, 381, 394], "replaybufferensembl": [2, 61, 85, 91, 98], "primit": [2, 3, 4, 67, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310], "individu": [2, 4, 18, 19, 20, 21, 37, 54, 80, 82, 93, 103, 107, 117, 118, 123, 124, 130, 131, 195, 378, 391], "dummi": [2, 3, 131, 336, 378, 385, 397], "semant": [2, 33, 34, 106, 108, 373], "ident": [2, 3, 14, 15, 16, 37, 41, 43, 46, 74, 87, 103, 106, 107, 108, 120, 123, 124, 130, 131, 156, 206, 233, 234, 285, 287, 300, 305, 307, 309, 310, 318, 319, 320, 321, 367, 368, 379, 382, 390, 391], "another_kei": [2, 82], "renam": [2, 41, 43, 46, 82, 172, 174, 204, 378], "resiz": [2, 3, 69, 82, 146, 379, 381, 382, 394, 397], "imag": [2, 3, 4, 7, 11, 67, 148, 151, 169, 185, 191, 228, 336, 338, 378, 379, 382, 386, 391, 393, 397], "comops": 2, "totensorimag": [2, 3, 69, 82, 146, 173, 379, 381, 394, 396, 397], "renametransform": [2, 82, 103, 107, 123, 124, 130, 131], "rb0": [2, 82], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 124, 130, 131, 136, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 159, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 182, 184, 185, 186, 187, 189, 191, 193, 207, 217, 223, 227, 230, 243, 252, 253, 255, 256, 257, 258, 261, 262, 267, 270, 271, 273, 274, 276, 277, 278, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 298, 300, 301, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 337, 338, 365, 373, 378, 379, 380, 381, 383, 384, 387, 389, 390, 391, 392, 393, 394, 396, 397], "pixel": [2, 3, 7, 27, 69, 82, 101, 102, 106, 108, 109, 127, 146, 148, 151, 156, 159, 161, 165, 167, 169, 173, 185, 189, 191, 211, 239, 240, 336, 338, 373, 378, 379, 381, 386, 390, 393, 394, 396, 397], "rb1": [2, 82], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 103, 107, 119, 123, 124, 130, 131, 136, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 159, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 182, 184, 185, 186, 189, 191, 193, 207, 217, 218, 223, 227, 230, 243, 244, 252, 253, 255, 256, 257, 258, 261, 263, 267, 270, 271, 272, 273, 274, 276, 277, 278, 281, 284, 285, 286, 287, 292, 293, 298, 300, 301, 304, 305, 306, 307, 309, 316, 318, 319, 320, 321, 336, 338, 351, 365, 373, 378, 379, 380, 381, 383, 387, 389, 390, 391, 392, 393, 394, 396, 397], "pixels33": [2, 82], "data0": [2, 82], "244": [2, 82, 169, 191, 392], "data1": [2, 82], "_": [2, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 104, 111, 132, 133, 147, 152, 154, 155, 163, 165, 172, 185, 193, 195, 255, 273, 278, 283, 284, 285, 287, 288, 292, 293, 300, 304, 305, 307, 309, 310, 318, 319, 320, 321, 340, 378, 379, 380, 381, 387, 390, 391, 392, 394, 396], "rang": [2, 3, 4, 8, 12, 29, 42, 45, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 82, 93, 103, 104, 107, 117, 118, 123, 124, 130, 131, 174, 185, 193, 195, 222, 226, 301, 309, 310, 374, 375, 378, 380, 381, 384, 385, 387, 390, 391, 392, 394, 396], "parent": [2, 3, 21, 27, 32, 33, 53, 62, 82, 91, 98, 103, 107, 123, 124, 130, 131, 139, 143, 146, 147, 150, 153, 156, 159, 160, 165, 169, 177, 181, 182, 183, 184, 186, 188, 189, 195, 223, 227, 256, 281, 302, 304, 322, 336, 338, 378, 385, 392, 396, 397], "basic": [2, 119, 373, 380, 384, 385, 387, 390, 397], "properti": [2, 3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 124, 130, 131, 142, 186, 187, 193, 195, 216, 224, 236, 241, 249, 250, 251, 267, 284, 287, 302, 304, 306, 307, 383, 385, 392, 394], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 52, 53, 55, 56, 90, 96, 103, 107, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 133, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 204, 205, 206, 208, 209, 211, 212, 213, 214, 217, 218, 221, 222, 223, 225, 226, 227, 228, 233, 234, 235, 236, 237, 244, 245, 246, 247, 248, 250, 253, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 349, 353, 358, 365, 373, 374, 375, 378, 379, 380, 381, 382, 390, 391, 392, 396, 397], "send": [2, 3, 8, 345, 396], "receiv": [2, 3, 37, 47, 103, 107, 123, 124, 130, 131, 186, 187, 195, 228, 324, 374, 378, 380, 384, 389, 392], "spawn": [2, 3, 4, 18, 22, 111, 120, 123, 130, 379, 390, 391], "check_env_spec": [2, 3, 107, 123, 139, 171, 336, 371, 380, 390, 391, 392], "saniti": [2, 3, 7, 197, 380], "utmost": 2, "commonli": [2, 80, 87, 88, 397], "emploi": [2, 237], "languag": [2, 24, 47], "scarc": 2, "address": [2, 394], "subdomain": 2, "facilit": [2, 3, 7, 168, 169, 183, 189, 191, 256, 257, 258, 373, 378, 381, 383, 392], "extern": [2, 3, 152, 155, 390, 397], "token": [2, 43, 44, 47, 52, 54, 70], "dm": [3, 378, 397], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 45, 50, 51, 54, 67, 84, 90, 93, 94, 96, 97, 99, 100, 103, 107, 111, 112, 113, 119, 120, 121, 123, 124, 130, 131, 132, 174, 183, 189, 190, 233, 235, 256, 266, 284, 285, 287, 288, 289, 291, 292, 293, 295, 300, 304, 305, 306, 307, 309, 310, 345, 355, 373, 374, 375, 378, 379, 381, 382, 383, 384, 386, 390, 391, 392, 394, 397], "goal": [3, 4, 61, 62, 63, 64, 65, 66, 67, 68, 69, 182, 378, 379, 380, 381, 391, 392], "abl": [3, 116, 125, 126, 223, 227, 378, 380, 381, 383, 389, 390, 391, 392, 394, 396], "experi": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 79, 80, 197, 340, 341, 342, 343, 344, 345, 372, 379, 380, 385, 386, 390, 391, 394], "box": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 106, 108, 235, 302], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 103, 104, 107, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 146, 149, 156, 162, 163, 165, 167, 172, 174, 177, 183, 186, 192, 193, 195, 336, 365, 378, 379, 380, 381, 389, 391, 393, 394, 396, 397], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 99, 100, 103, 107, 119, 123, 124, 130, 131, 150, 154, 156, 163, 169, 183, 186, 187, 189, 191, 195, 207, 208, 209, 211, 212, 213, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 235, 238, 243, 244, 252, 255, 256, 257, 258, 261, 262, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 365, 373, 374, 378, 379, 380, 381, 383, 384, 387, 389, 390, 391, 392, 393, 396], "organis": [3, 68, 103, 107, 123, 124, 130, 131, 187, 379], "arbitrari": [3, 40, 45, 103, 107, 123, 124, 130, 131, 142, 373, 378, 379, 392, 394], "structur": [3, 7, 41, 42, 43, 45, 46, 47, 50, 51, 54, 93, 103, 107, 123, 124, 130, 131, 152, 155, 205, 233, 268, 269, 318, 319, 320, 321, 322, 371, 374, 378, 380, 381, 382, 385, 390, 391, 392, 393], "attribut": [3, 4, 24, 28, 30, 37, 41, 43, 46, 48, 54, 67, 103, 106, 107, 108, 123, 124, 130, 131, 139, 156, 169, 189, 193, 195, 223, 227, 274, 284, 285, 287, 288, 289, 291, 293, 294, 295, 298, 300, 302, 304, 305, 306, 307, 309, 310, 316, 378, 381, 392], "live": [3, 13, 14, 15, 16, 17, 19, 20, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 119, 123, 124, 130, 131, 156, 195], "actual": [3, 4, 7, 41, 43, 46, 61, 63, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 192, 358, 374, 378, 380, 390, 391, 392], "retriev": [3, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 85, 103, 106, 107, 108, 123, 124, 130, 131, 147, 153, 156, 165, 204, 207, 208, 230, 267, 270, 274, 277, 281, 284, 285, 286, 287, 289, 301, 304, 305, 307, 309, 310, 316, 318, 319, 320, 321, 369, 375, 379, 380, 383, 392, 397], "care": [3, 8, 103, 107, 123, 124, 130, 131, 186, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 338, 378, 380, 390, 391, 392, 394], "parametr": [3, 237, 274, 285, 287, 292, 300, 307, 378, 380], "hardwar": 3, "observation_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 161, 162, 163, 165, 167, 169, 171, 173, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 192, 193, 195, 207, 223, 227, 230, 359, 365, 378, 380, 384, 389, 390, 391, 392, 397], "compositespec": [3, 33, 34, 58, 103, 105, 107, 119, 123, 124, 130, 131, 140, 143, 152, 153, 154, 155, 157, 163, 171, 172, 178, 181, 183, 186, 195, 201, 205, 207, 230, 255, 259, 260, 270, 276, 277, 281, 371, 378, 380, 381, 390, 391, 392, 397], "pair": [3, 37, 41, 43, 46, 63, 101, 102, 103, 107, 123, 124, 130, 131, 174, 183, 223, 256, 270, 274, 302, 318, 319, 320, 321, 322, 373, 374, 378, 379, 380, 383, 384, 389, 392, 397], "state_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 207, 230, 392, 397], "reward_spec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 144, 149, 150, 152, 153, 155, 171, 175, 176, 177, 179, 186, 188, 195, 207, 230, 380, 390, 391, 392, 397], "done_spec": [3, 103, 107, 123, 124, 130, 131, 152, 153, 155, 156, 171, 186, 195, 205, 390, 391, 392, 397], "flag": [3, 8, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 117, 118, 123, 124, 130, 131, 132, 133, 162, 268, 269, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 373, 390, 391, 392, 393], "input_spec": [3, 103, 107, 119, 123, 124, 130, 131, 139, 143, 150, 152, 153, 154, 165, 167, 171, 172, 177, 178, 181, 182, 183, 186, 187, 188, 190, 195, 380, 392], "full_action_spec": [3, 103, 107, 123, 124, 130, 131, 139, 207, 230, 380, 390, 391], "full_state_spec": [3, 103, 107, 123, 124, 130, 131, 139, 207, 230, 380], "lock": [3, 27, 33, 41, 43, 46, 103, 107, 123, 124, 130, 131, 143, 183, 193, 392], "output_spec": [3, 103, 107, 123, 124, 130, 131, 143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 187, 195, 392], "full_observation_spec": [3, 103, 107, 123, 124, 130, 131, 207, 230], "full_reward_spec": [3, 103, 107, 123, 124, 130, 131, 143, 153, 171, 390, 391], "full_done_spec": [3, 103, 107, 123, 124, 130, 131, 143, 153, 171, 205, 390, 391], "carri": [3, 21, 54, 103, 107, 123, 124, 130, 131, 183, 302, 379, 381, 390, 391, 392, 394], "nontensorspec": [3, 371], "importantli": [3, 270, 274], "action_s": 3, "help": [3, 4, 37, 103, 107, 123, 124, 130, 131, 156, 195, 284, 286, 301, 304, 306, 372, 374, 378, 379, 380, 381, 390, 391], "With": [3, 112, 113, 116, 182, 375, 379, 389, 390, 391, 394, 397], "necessarili": [3, 103, 107, 123, 124, 130, 131, 397], "present": [3, 37, 41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 86, 103, 106, 107, 123, 124, 130, 131, 157, 174, 178, 183, 187, 195, 204, 205, 210, 211, 212, 213, 214, 220, 223, 225, 227, 237, 242, 267, 268, 269, 273, 274, 275, 276, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 369, 375, 378, 387, 389, 390, 391, 394, 396], "0s": [3, 61, 67, 183, 381], "step_and_maybe_reset": [3, 103, 107, 123, 124, 130, 131, 382], "done_kei": [3, 23, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 124, 130, 131, 142, 146, 156, 174, 181, 195, 204, 390, 391], "assign": [3, 4, 14, 15, 17, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 195, 287, 288, 289, 291, 307, 380, 383, 390, 391, 394], "_reset": [3, 103, 107, 119, 123, 124, 130, 131, 140, 142, 143, 146, 152, 155, 162, 171, 205, 207, 230, 390], "data_": [3, 103, 107, 123, 124, 130, 131], "append": [3, 8, 11, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 123, 124, 130, 131, 142, 149, 150, 174, 183, 187, 192, 222, 223, 226, 227, 262, 271, 378, 379, 380, 381, 390, 391, 392, 393, 394, 396], "seed": [3, 14, 15, 16, 17, 21, 68, 103, 107, 119, 123, 124, 125, 126, 130, 131, 132, 133, 140, 143, 152, 155, 171, 187, 197, 336, 355, 390], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 203, 210, 219, 239, 246, 255, 265, 270, 273, 274, 277, 285, 302, 351, 373, 378, 379, 381, 383, 384, 387, 390, 392, 396, 397], "preced": [3, 37, 381], "risk": [3, 170], "overlap": [3, 50, 93], "reproduc": [3, 146, 197, 378, 380, 391], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 37, 41, 43, 44, 47, 52, 54, 70, 74, 75, 76, 79, 80, 95, 103, 107, 123, 124, 130, 131, 154, 175, 181, 182, 184, 206, 249, 250, 251, 277, 285, 287, 292, 293, 300, 302, 303, 307, 338, 352, 378, 379, 380, 381, 383, 390, 391, 394], "max_step": [3, 11, 93, 103, 107, 117, 118, 119, 123, 124, 130, 131, 132, 133, 181, 195, 336, 382, 383, 384, 386, 387, 390, 391, 396, 397], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 47, 99, 100, 103, 107, 119, 123, 124, 130, 131, 145, 163, 218, 223, 227, 230, 243, 244, 252, 253, 256, 257, 258, 260, 261, 262, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 285, 287, 288, 292, 293, 295, 296, 297, 298, 300, 302, 305, 307, 309, 310, 316, 317, 318, 319, 320, 321, 351, 365, 371, 378, 380, 381, 384, 387, 389, 390, 391, 392, 393, 397], "trail": [3, 193], "treat": [3, 37, 374, 383, 384], "figur": [3, 378, 380, 381, 391, 392, 397], "brief": [3, 380, 382, 384, 394], "deliveri": 3, "design": [3, 37, 40, 85, 91, 98, 103, 107, 117, 118, 123, 124, 130, 131, 139, 146, 170, 187, 195, 261, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 378, 379, 380, 381, 382, 383, 384, 389, 390, 391, 392, 394, 397], "metaclass": 3, "everi": [3, 8, 27, 33, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 89, 103, 107, 123, 124, 130, 131, 181, 182, 193, 195, 201, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 234, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 302, 355, 375, 378, 379, 380, 381, 382, 383, 390, 391, 392], "flank": [3, 381], "dual": 3, "strictli": [3, 8, 37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307, 378, 380], "refer": [3, 7, 8, 9, 11, 21, 24, 37, 47, 103, 106, 107, 108, 123, 124, 130, 131, 187, 193, 195, 207, 218, 219, 230, 231, 232, 233, 234, 235, 239, 240, 245, 246, 263, 284, 287, 294, 295, 296, 297, 304, 307, 318, 323, 331, 377, 378, 380, 383, 384, 385, 386, 390, 391, 394, 397], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 79, 80, 103, 107, 123, 124, 130, 131, 165, 169, 174, 176, 189, 191, 193, 195, 204, 209, 216, 231, 232, 233, 234, 236, 237, 241, 243, 249, 250, 251, 252, 273, 291, 293, 299, 305, 308, 331, 349, 351, 352, 360, 361, 363, 365, 366, 367, 368, 369], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 117, 118, 134, 378], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 61, 67, 80, 87, 88, 371], "adjac": [3, 23, 159, 267], "reli": [3, 11, 23, 183, 221, 222, 223, 225, 226, 227, 284, 374, 378, 380, 383, 385, 392, 397], "junction": 3, "inittrack": [3, 223, 227, 267, 378, 381], "tutori": [3, 124, 370, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 397], "scratch": [3, 8, 379, 392], "gym3": 3, "envpool": [3, 120, 121], "interfac": [3, 110, 122, 228, 236, 373, 374, 378, 380, 386, 392, 394], "simultan": [3, 20, 120, 121, 123, 130, 392], "advantag": [3, 8, 220, 284, 286, 301, 304, 306, 318, 319, 320, 321, 322, 323, 325, 327, 329, 331, 332, 334, 374, 375, 378, 379, 380, 381, 391, 392, 397], "scale": [3, 4, 24, 63, 103, 107, 123, 124, 130, 131, 146, 163, 165, 176, 182, 185, 193, 206, 219, 224, 238, 245, 246, 250, 251, 256, 257, 258, 270, 274, 276, 284, 285, 287, 300, 304, 305, 306, 307, 353, 359, 369, 373, 378, 379, 380, 381, 383, 391, 396], "varieti": [3, 11], "inherit": [3, 103, 107, 123, 124, 130, 131, 229, 233, 234, 302, 375, 380, 390, 391], "Of": [3, 7, 372, 392, 397], "cours": [3, 4, 372, 392, 397], "from_pixel": [3, 11, 99, 100, 101, 102, 106, 108, 109, 112, 113, 127, 146, 173, 336, 338, 378, 379, 381, 382, 386, 387, 393, 394, 396, 397], "81": [3, 379, 392, 393], "simpli": [3, 6, 41, 43, 46, 54, 91, 93, 98, 157, 178, 192, 302, 373, 374, 378, 380, 384, 390, 391, 397], "d": [3, 42, 45, 50, 51, 64, 66, 68, 69, 70, 79, 80, 206, 221, 225, 270, 274, 396], "privat": [3, 103, 107, 123, 124, 130, 131, 192, 392, 397], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 35, 36, 40, 41, 43, 46, 61, 88, 93, 286, 301, 304, 346, 348, 351, 355, 358, 359, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 43, 46, 47, 82, 85, 165, 176, 224, 236, 245, 250, 251, 316, 373, 383, 384, 390, 392, 394], "inner": [3, 103, 107, 123, 124, 130, 131, 154, 375, 379, 380, 391, 397], "logic": [3, 390], "nevertheless": [3, 380, 382, 394], "kept": [3, 23, 86, 88, 154, 178, 186, 197, 204, 224, 250, 251, 384, 390], "mind": [3, 61, 67, 80, 87, 88, 103, 107, 123, 124, 130, 131, 390, 391], "desig": 3, "wherev": 3, "expos": [3, 127, 152, 155, 275, 379], "modif": [3, 5, 27, 33, 37, 103, 107, 123, 124, 130, 131, 159, 195, 205, 302, 374, 380, 392], "lost": [3, 8, 192], "eras": [3, 80, 87, 103, 107, 123, 124, 130, 131, 187], "intern": [3, 376], "face": [3, 5, 8, 9, 382, 397], "NOT": [3, 71, 72, 78, 170], "outsid": [3, 16, 374, 386, 390, 391, 392], "right": [3, 6, 7, 23, 47, 80, 87, 379, 380, 391, 392, 397], "preliminari": 3, "warranti": 3, "affect": [3, 8, 37, 103, 107, 123, 124, 130, 131, 186, 187, 195, 197, 318, 319, 320, 321, 390], "preclud": 3, "presenc": [3, 384], "annihil": 3, "reason": [3, 4, 8, 37, 67, 103, 107, 123, 124, 125, 126, 130, 131, 169, 189, 195, 227, 374, 378, 379, 380, 384, 385, 390, 392, 394], "advanc": [3, 21, 42, 45, 50, 51, 107, 382, 385, 394], "explicitli": [3, 4, 71, 72, 78, 142, 270, 374, 379, 381, 385, 390, 391, 394], "superse": 3, "pettingzoowrapp": [3, 371], "group": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 103, 107, 116, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 134, 373, 379, 383, 385, 391, 394], "associ": [3, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 195, 245, 369, 378, 394], "environemtn": 3, "__not__": [3, 270, 285, 287, 300, 305, 307, 309, 310], "constrain": [3, 163, 223, 227, 304], "li": 3, "fact": [3, 7, 8, 378, 380, 382, 390, 391, 392, 393, 394, 397], "predict": [3, 37, 47, 217, 219, 229, 230, 261, 279, 284, 286, 291, 294, 296, 297, 301, 304, 306, 317, 373, 378, 379, 384], "know": [3, 4, 9, 42, 45, 50, 51, 106, 108, 259, 260, 302, 305, 351, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391, 394], "meaning": 3, "perfectli": [3, 375, 378, 392], "meaningless": 3, "val": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 384, 396], "agent0": 3, "agent1": 3, "overrid": [3, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 45, 53, 55, 56, 61, 103, 107, 123, 124, 130, 131, 142, 369, 373], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 80, 82, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 142, 143, 146, 147, 152, 154, 155, 156, 157, 159, 163, 164, 165, 167, 169, 171, 172, 174, 176, 177, 178, 181, 183, 185, 187, 188, 189, 191, 193, 195, 197, 201, 204, 205, 206, 207, 208, 209, 211, 212, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 250, 251, 255, 262, 263, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 313, 316, 318, 319, 320, 321, 324, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 345, 348, 349, 351, 352, 353, 355, 369, 379, 380, 381, 382, 383, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "500": [3, 378, 379, 392, 396, 397], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 61, 64, 123, 130], "bottleneck": [3, 8, 80, 87, 88], "great": [3, 7, 8, 390, 396], "speedup": [3, 8, 390, 397], "precis": [3, 152, 155, 204, 222, 226, 378, 380], "misspecifi": 3, "caus": [3, 7, 8, 74, 75, 95, 103, 107, 111, 123, 124, 130, 131, 170, 397], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 67, 103, 107, 123, 124, 130, 131, 134, 146, 158, 164, 174, 182, 183, 184, 187, 195, 197, 259, 260, 264, 265, 268, 269, 287, 302, 307, 378, 380, 390, 391, 394, 397], "mismatch": [3, 379], "subprocess": [3, 14, 15, 17, 104, 123, 130], "multithreadedenv": [3, 371], "underneath": 3, "higher": [3, 4, 80, 149, 277, 378, 379, 380, 390, 394, 397], "flexibl": [3, 9, 120, 311, 374, 375, 378, 394, 397], "cover": [3, 106, 108, 372, 380, 382, 385, 386, 392, 396], "type": [3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 69, 70, 82, 103, 107, 116, 119, 122, 123, 124, 125, 126, 130, 131, 143, 150, 152, 153, 156, 157, 163, 169, 171, 172, 178, 181, 183, 186, 187, 189, 191, 193, 195, 199, 203, 208, 209, 228, 233, 234, 237, 243, 252, 259, 260, 262, 270, 273, 274, 281, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 312, 316, 324, 336, 367, 371, 373, 378, 379, 380, 385, 390, 391, 392, 394, 397], "atari": [3, 4, 61, 146, 338, 386, 397], "classic": [3, 119, 126, 379], "benchmark_batched_env": 3, "seamlessli": [3, 392], "infrastructur": [3, 390, 391], "act": [3, 4, 87, 88, 125, 126, 187, 217, 234, 285, 287, 288, 300, 305, 307, 309, 310, 381, 390, 391, 394], "world": [3, 5, 119, 279, 296, 386, 390, 391, 392, 397], "paradigm": [3, 17, 391], "decpodp": 3, "game": [3, 4, 5, 61, 117, 118, 338, 386], "thank": [3, 378, 382], "carrier": [3, 380, 381, 382, 394], "particular": [3, 37, 54, 63, 64, 103, 107, 123, 124, 130, 131, 187, 195, 374, 375, 379, 381, 382, 389, 391, 394], "thu": [3, 301, 391], "let": [3, 6, 7, 11, 23, 37, 42, 45, 50, 51, 52, 103, 107, 123, 124, 125, 126, 130, 131, 146, 195, 223, 227, 233, 234, 262, 351, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "vma": [3, 132, 133, 336, 390, 391], "robot": [3, 5, 7, 67, 169, 189, 191, 391], "vmasenv": [3, 336, 371, 390, 391], "balanc": [3, 101, 102, 378, 379], "num_env": [3, 21, 106, 110, 121, 132, 133, 336, 390, 391], "n_agent": [3, 132, 133, 233, 234, 235, 243, 252, 316, 336, 390, 391], "ground_rew": 3, "pos_rew": [3, 391], "style": [3, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69], "relat": [3, 4, 10, 42, 123, 159, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 379, 387, 392], "vari": [3, 106, 108, 109, 125, 126, 127, 132, 170, 391], "creation": [3, 123, 130, 397], "info_spec": [3, 123], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 25, 40, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 140, 171, 205, 289, 292, 293, 316, 371, 390, 391, 397], "simpl": [3, 9, 37, 40, 103, 107, 123, 124, 130, 131, 195, 211, 267, 274, 289, 291, 302, 306, 318, 373, 374, 378, 379, 380, 382, 383, 384, 390, 391, 394, 397], "prefix": [3, 23, 37, 41, 43, 46, 54, 103, 107, 123, 124, 130, 131, 187, 195, 270, 287, 302, 307, 337, 381, 384, 397], "exactli": [3, 37, 103, 107, 109, 123, 124, 130, 131, 187, 195, 221, 225, 287, 307, 378, 381, 385, 390, 391], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 103, 107, 123, 124, 130, 131, 139, 140, 154, 196, 204, 207, 229, 230, 259, 260, 264, 265, 267, 268, 269, 390, 391], "reward_kei": [3, 30, 32, 38, 48, 71, 72, 78, 103, 107, 123, 124, 130, 131, 195, 204, 207, 230, 349, 353, 390, 391], "set_kei": [3, 156, 284, 286, 287, 289, 292, 293, 294, 300, 301, 302, 304, 305, 306, 307, 316, 322, 378, 390, 391], "awai": [3, 380, 382, 390, 391], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 162, 181, 274], "full": [3, 103, 107, 123, 124, 130, 131, 223, 227, 263, 346, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "autoresettransform": 3, "invalid": [3, 37, 93, 103, 107, 123, 124, 130, 131, 134, 195, 231, 232], "nan": [3, 142, 192], "auto_reset": [3, 103, 107, 123, 124, 130, 131, 142, 195, 392], "auto_reset_replac": [3, 142], "placehold": [3, 109, 156, 187], "set_gym_backend": [3, 103, 106, 107, 123, 124, 130, 131, 135, 142, 371, 382], "autoresettinggymenv": [3, 142], "_step": [3, 103, 107, 123, 124, 130, 131, 140, 142, 143, 152, 155, 159, 171, 172], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 37, 41, 43, 46, 103, 107, 119, 123, 124, 130, 131, 140, 142, 143, 150, 152, 155, 169, 171, 183, 186, 187, 189, 191, 195, 207, 218, 230, 233, 234, 243, 252, 259, 260, 264, 270, 273, 278, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 375, 378, 392, 396, 397], "super": [3, 119, 140, 142, 143, 152, 155, 171, 207, 218, 230, 278, 285, 287, 288, 293, 300, 305, 307, 309, 310, 378, 392, 396, 397], "td_reset": [3, 142], "exclud": [3, 8, 63, 68, 103, 107, 123, 124, 130, 131, 142, 146, 157, 204, 243, 390, 391, 394], "r": [3, 4, 37, 139, 140, 142, 149, 165, 179, 193, 206, 222, 274, 283, 317, 336, 373, 379, 392, 397], "break_when_any_don": [3, 103, 107, 123, 124, 130, 131, 142, 195, 267, 391], "3633e": [3, 142], "02": [3, 103, 107, 123, 124, 130, 131, 142, 377, 378, 379, 380, 387, 390, 392, 393, 395], "4877e": [3, 142], "01": [3, 142, 165, 206, 268, 269, 280, 286, 301, 304, 377, 378, 379, 381, 391, 392, 393, 395], "2849e": [3, 142], "7584e": [3, 142], "6609e": [3, 142], "6166e": [3, 142], "8366e": [3, 142], "2761e": [3, 142], "5685e": [3, 142], "4102e": [3, 142], "8111e": [3, 142], "9959e": [3, 142], "0865e": [3, 142], "5644e": [3, 142], "2119e": [3, 142], "2542e": [3, 142], "03": [3, 103, 107, 123, 124, 130, 131, 142, 165, 377, 378, 379, 392, 393, 395], "9952e": [3, 142], "4059e": [3, 142], "2094e": [3, 142], "9009e": [3, 142], "5140e": [3, 142], "3554e": [3, 142], "2920e": [3, 142], "7893e": [3, 142], "6429e": [3, 142], "3057e": [3, 142], "2867e": [3, 142], "6963e": [3, 142], "3818e": [3, 142], "2576e": [3, 142], "2679e": [3, 142], "1640e": [3, 142], "00": [3, 99, 100, 142, 377, 378, 379, 380, 381, 390, 391, 392, 393, 395], "6972e": [3, 142], "0212e": [3, 142], "5959e": [3, 142], "4637e": [3, 142], "3121e": [3, 142], "2168e": [3, 142], "5232e": [3, 142], "7704e": [3, 142], "7457e": [3, 142], "4127e": [3, 142], "1064e": [3, 142], "0854e": [3, 142], "5712e": [3, 142], "2189e": [3, 142], "5235e": [3, 142], "8289e": [3, 142], "0009e": [3, 142], "0257e": [3, 142], "8893e": [3, 142], "5872e": [3, 142], "9405e": [3, 142], "7766e": [3, 142], "0403e": [3, 142], "0626e": [3, 142], "2959e": [3, 142], "7263e": [3, 142], "2775e": [3, 142], "9564e": [3, 142], "0411e": [3, 142], "6769e": [3, 142], "6354e": [3, 142], "8698e": [3, 142], "1765e": [3, 142], "6292e": [3, 142], "5375e": [3, 142], "1820e": [3, 142], "7023e": [3, 142], "5836e": [3, 142], "9016e": [3, 142], "4826e": [3, 142], "6191e": [3, 142], "6387e": [3, 142], "8667e": [3, 142], "2056e": [3, 142], "1147e": [3, 142], "5991e": [3, 142], "0278e": [3, 142], "5219e": [3, 142], "3067e": [3, 142], "6617e": [3, 142], "3322e": [3, 142], "2629e": [3, 142], "4599e": [3, 142], "7298e": [3, 142], "5848e": [3, 142], "0148e": [3, 142], "5745e": [3, 142], "6982e": [3, 142], "7877e": [3, 142], "3527e": [3, 142], "7285e": [3, 142], "6668e": [3, 142], "0583e": [3, 142], "6956e": [3, 142], "3962e": [3, 142], "9845e": [3, 142], "5015e": [3, 142], "5903e": [3, 142], "9993e": [3, 142], "9418e": [3, 142], "0196e": [3, 142], "6557e": [3, 142], "2109e": [3, 142], "8997e": [3, 142], "1507e": [3, 142], "7363e": [3, 142], "0310e": [3, 142], "9574e": [3, 142], "8980e": [3, 142], "0090e": [3, 142], "forecast": 3, "awar": [3, 7, 74, 75, 76, 89, 91, 95, 223, 227, 379, 381], "detect": [3, 69, 302, 374], "return_contigu": [3, 103, 107, 123, 124, 130, 131, 197, 389], "unboundedcontinuoustensorspec": [3, 103, 107, 119, 123, 124, 130, 131, 140, 143, 152, 155, 171, 183, 201, 207, 230, 255, 273, 276, 278, 281, 306, 371, 380, 381, 390, 391, 392, 397], "boundedtensorspec": [3, 22, 27, 103, 107, 123, 124, 130, 131, 196, 264, 265, 268, 269, 270, 277, 284, 285, 287, 288, 300, 304, 305, 307, 309, 310, 371, 380, 390, 391, 392, 396, 397], "binarydiscretetensorspec": [3, 140, 289, 292, 293, 316, 371], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 33, 34, 37, 41, 43, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 93, 103, 105, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 152, 153, 156, 157, 158, 159, 162, 163, 168, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 186, 187, 192, 193, 195, 204, 205, 207, 223, 227, 229, 230, 259, 260, 261, 263, 264, 267, 268, 269, 272, 273, 274, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 355, 378, 390, 392], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 26, 28, 29, 37, 40, 42, 47, 50, 55, 67, 79, 80, 82, 103, 107, 123, 124, 130, 131, 139, 142, 146, 150, 152, 155, 163, 165, 169, 174, 175, 176, 182, 183, 185, 186, 187, 189, 191, 193, 195, 206, 216, 219, 221, 224, 225, 228, 231, 232, 236, 237, 245, 246, 249, 251, 259, 260, 273, 277, 280, 282, 283, 284, 285, 286, 287, 291, 292, 293, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 317, 323, 324, 325, 326, 327, 328, 329, 330, 331, 353, 378, 379, 394, 397], "_set_se": [3, 140, 143, 152, 155, 171, 392], "lazystackedtensordict": [3, 33, 61, 103, 107, 119, 123, 124, 130, 131, 389], "float32": [3, 14, 15, 16, 27, 30, 41, 42, 43, 46, 47, 48, 50, 51, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 79, 80, 95, 99, 100, 103, 106, 107, 108, 112, 113, 119, 122, 123, 124, 128, 129, 130, 131, 132, 133, 139, 143, 152, 155, 156, 157, 165, 167, 171, 172, 174, 178, 181, 183, 185, 201, 204, 207, 217, 218, 223, 227, 230, 243, 244, 252, 255, 256, 257, 258, 261, 262, 267, 268, 269, 270, 271, 272, 273, 276, 278, 281, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 316, 373, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397], "exclusive_field": [3, 61, 389], "stack_dim": [3, 61, 389], "dramat": 3, "carefulli": [3, 390, 391, 397], "against": [3, 5, 7, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131, 195, 197, 255, 262, 263, 270, 271, 272, 273, 274, 285, 287, 300, 305, 307, 309, 310, 380, 390, 391], "plain": [3, 8, 382], "larg": [3, 4, 29, 41, 43, 46, 152, 155, 189, 284, 286, 301, 304, 306, 379, 380, 390, 391, 394], "expens": [3, 80, 87, 88, 336, 394], "absent": [3, 27, 33, 63, 103, 107, 123, 124, 130, 131, 187], "torchvis": [3, 11, 169, 191, 340, 390, 396, 397], "base_env": [3, 100, 103, 107, 108, 113, 123, 124, 130, 131, 139, 140, 143, 149, 152, 154, 155, 163, 167, 171, 173, 179, 181, 183, 184, 187, 195, 338, 378, 379, 380, 390, 393, 396, 397], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 104, 107, 119, 123, 124, 130, 131, 138, 141, 143, 150, 156, 183, 187, 195, 208, 209, 228, 235, 283, 302, 336, 360, 361, 367, 368, 369, 379, 394], "bring": [3, 380, 382, 397], "signific": [3, 5, 8, 380, 397], "kind": [3, 45, 53, 204, 384, 390, 394], "consult": 3, "interest": [3, 270, 274, 373, 379, 380, 382, 391, 392, 397], "resize_par": 3, "easi": [3, 5, 11, 61, 66, 101, 102, 103, 107, 112, 113, 123, 124, 130, 131, 259, 260, 264, 265, 268, 269, 373, 374, 378, 379, 380, 391, 393, 394, 397], "graph": [3, 4, 8, 99, 100, 112, 113, 314, 315, 378, 392], "revers": [3, 225], "order": [3, 11, 16, 37, 40, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 86, 88, 103, 107, 123, 124, 130, 131, 147, 152, 155, 167, 187, 195, 255, 262, 273, 275, 276, 278, 284, 285, 287, 288, 292, 293, 300, 304, 305, 306, 307, 309, 310, 379, 390, 391], "chain": [3, 41, 42, 43, 45, 46, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 150, 154, 208, 209, 276, 397], "invers": [3, 4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 146, 152, 155, 157, 165, 174, 195, 282, 292, 300, 392], "in_keys_inv": [3, 136, 149, 152, 153, 155, 165, 166, 167, 171, 172, 174, 179, 186, 378, 389, 392, 397], "append_transform": [3, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 136, 139, 145, 169, 183, 187, 189, 193, 223, 227, 336, 378, 381, 390, 392, 394, 396, 397], "doubletofloat": [3, 378, 380, 389], "float64": [3, 37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 101, 102, 103, 107, 117, 118, 123, 124, 130, 131, 139, 150, 152, 155, 169, 183, 186, 187, 189, 191, 195, 273, 389], "regist": [3, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 106, 107, 108, 123, 124, 130, 131, 152, 155, 156, 177, 187, 195, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 336, 338, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 375, 378, 380, 382, 394], "manipul": [3, 4, 8, 101, 102, 169, 189], "third_transform": 3, "unexpect": [3, 37, 103, 107, 123, 124, 130, 131, 195, 397], "behviour": 3, "fortun": [3, 381, 382, 383, 386], "alreadi": [3, 8, 12, 37, 41, 43, 46, 54, 61, 74, 103, 107, 123, 124, 130, 131, 183, 195, 205, 274, 318, 319, 320, 321, 378, 380, 386, 390, 391], "chang": [3, 5, 7, 11, 23, 37, 42, 45, 50, 51, 61, 74, 75, 76, 80, 86, 87, 89, 91, 95, 103, 107, 123, 124, 130, 131, 143, 150, 152, 153, 155, 157, 163, 171, 172, 178, 181, 186, 187, 193, 195, 225, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 374, 378, 381, 390, 391, 392, 393, 394, 397], "catfram": [3, 267, 379], "hold": [3, 314, 315, 392, 394], "notic": [3, 93, 146, 380, 387, 392], "parenthood": 3, "henc": [3, 42, 170, 205, 233, 373, 378, 380, 390, 391, 392], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 123, 130, 336, 392], "discret": [3, 25, 29, 35, 36, 40, 56, 103, 106, 107, 108, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 139, 154, 241, 244, 291, 292, 293, 294, 373, 379, 383, 390, 391, 392, 397], "might": [3, 41, 43, 44, 46, 342, 372, 378, 382, 397], "action_mask": [3, 112, 113, 125, 126, 128, 129, 140], "unavail": [3, 125, 126], "probabl": [3, 4, 8, 47, 82, 85, 216, 218, 221, 223, 225, 227, 228, 231, 232, 241, 250, 251, 264, 270, 274, 287, 373, 379, 383, 396], "categor": [3, 29, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 139, 140, 156, 218, 241, 244, 262, 263, 270, 271, 272, 289, 292, 293, 316, 381], "probabilistictensordictmodul": [3, 163, 274, 275, 396], "tensordictsequenti": [3, 223, 227, 262, 264, 267, 268, 275, 281, 373, 378, 379, 381, 383, 387, 389, 390, 393, 396], "maskedcategor": [3, 232, 371], "linear": [3, 14, 15, 16, 17, 21, 37, 99, 100, 103, 107, 119, 123, 124, 130, 131, 150, 163, 169, 183, 186, 187, 189, 191, 195, 207, 208, 209, 211, 212, 213, 214, 218, 220, 228, 230, 233, 234, 236, 237, 238, 244, 245, 246, 255, 256, 257, 258, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 278, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 365, 373, 379, 389, 393, 396], "in_feat": 3, "out_feat": 3, "logit": [3, 43, 47, 217, 231, 232, 241, 263, 270, 292, 293, 373], "dist": [3, 10, 231, 232, 241, 383], "distribution_class": [3, 163, 256, 257, 258, 261, 270, 274, 276, 284, 285, 287, 292, 293, 300, 304, 305, 306, 307, 373, 378, 380, 383, 390, 391, 396], "wrap": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 37, 47, 65, 99, 100, 103, 107, 108, 112, 113, 118, 121, 123, 124, 125, 126, 130, 131, 133, 195, 197, 223, 227, 253, 256, 257, 258, 260, 265, 267, 269, 271, 279, 302, 316, 373, 378, 379, 380, 381, 384, 387, 390, 391, 397], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 140, 170, 195], "enviorn": [3, 117, 125, 126, 132, 133], "itself": [3, 37, 103, 107, 123, 124, 130, 131, 135, 142, 195, 302, 309, 380, 382], "ey": 3, "report": [3, 99, 100, 112, 113, 386], "foremost": 3, "callback": [3, 103, 107, 123, 124, 130, 131, 391], "ad": [3, 4, 16, 23, 37, 42, 45, 50, 51, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 103, 107, 123, 124, 130, 131, 177, 187, 195, 206, 236, 237, 268, 269, 284, 286, 287, 289, 294, 301, 304, 307, 316, 379, 381, 383, 390, 394, 397], "track": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 51, 79, 80, 86, 177, 193, 195, 267, 268, 269, 343, 348, 379, 381, 382, 385, 391, 392, 394], "tensordictrecord": [3, 371], "videorecord": [3, 11, 336, 371, 380, 386, 387, 390], "csvlogger": [3, 11, 336, 338, 371, 379, 386, 387, 390], "wandblogg": [3, 371, 386], "tensorboardlogg": [3, 365, 371, 386], "tag": [3, 7, 11, 336, 338, 340, 343, 369, 386, 387, 390], "mp4": [3, 336, 338, 340, 387, 390], "video_format": [3, 336, 338, 340, 387, 390], "whc": 3, "cwh": 3, "exp": [3, 238, 283], "al": [3, 24, 106, 108, 156, 167, 207, 397], "pong": [3, 61, 121, 167, 397], "v5": [3, 106, 108, 121, 156, 167, 397], "cach": [3, 41, 43, 54, 61, 63, 64, 65, 67, 68, 69, 70, 80, 87, 103, 107, 123, 124, 130, 131, 142, 152, 155, 169, 187, 191, 204, 347, 393], "grow": 3, "until": [3, 7, 21, 184, 186, 195, 380, 381, 387, 390, 391], "dumpi": 3, "tediou": [3, 382], "workspac": [3, 103, 107, 123, 124, 130, 131], "pixelrendertransform": [3, 371, 390], "stream": [3, 67], "alik": [3, 336], "envcreat": [3, 16, 22, 123, 130, 336, 365, 366, 369, 371, 378, 379, 396, 397], "render_mod": [3, 336, 392], "rgb_arrai": [3, 336, 390, 391, 392], "uncom": [3, 386], "line": [3, 7, 37, 61, 103, 107, 123, 124, 130, 131, 195, 379, 386, 390, 391, 397], "comment": [3, 375, 379, 396], "pixels_record": [3, 336], "close": [3, 16, 107, 120, 163, 284, 286, 301, 304, 336, 378, 379, 382, 389, 390, 392, 396], "mission": 3, "irrespect": [3, 273, 274], "dmcontrol": [3, 103, 107, 123, 124, 130, 131], "jumanji": [3, 103, 107, 112, 113, 123, 124, 130, 131], "special": [3, 371, 373, 378, 381, 397], "framework": [3, 4, 9, 22, 99, 100, 103, 107, 112, 113, 119, 123, 124, 130, 131, 221, 396, 397], "Its": [3, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 193, 195, 273, 322], "success": [3, 61, 62, 63, 64, 65, 66, 67, 68, 69, 146, 186, 264, 287, 309, 379, 385, 387, 392, 394, 396], "foundat": [3, 5, 125, 126, 380, 391], "inspir": [3, 392], "gone": [3, 4, 5, 267], "hard": [3, 7, 93, 101, 102, 123, 299, 379, 397], "prefer": [3, 14, 15, 17, 20, 23, 24, 42, 45, 50, 51, 170, 178, 304, 309, 352, 373, 380, 390, 391, 394], "maintain": [3, 5, 9, 28, 392], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 379, 380, 381, 385, 390, 391, 392, 394, 397], "decor": [3, 8, 12, 138, 302, 318, 319, 320, 321, 396], "relev": [3, 47, 318, 319, 320, 321, 322, 345, 392], "gym_backend": [3, 138, 371], "env1": [3, 389], "venv": 3, "python3": [3, 6, 7, 10, 397], "site": [3, 6, 7, 68, 138, 397], "env2": [3, 389], "_env": [3, 6, 106, 397], "classic_control": 3, "pendulumenv": [3, 371, 392], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 115, 135], "handi": [3, 103, 107, 123, 124, 130, 131, 386], "side": [3, 4, 397], "v0": [3, 14, 15, 103, 107, 109, 112, 113, 114, 115, 123, 124, 130, 131, 150, 187, 193, 365, 397], "26": [3, 103, 107, 123, 124, 130, 131, 377, 378, 379, 380, 391, 392, 393, 395], "fun": [3, 12, 138, 380, 390, 391], "reveal": 4, "bug": [4, 396], "curv": 4, "exploit": [4, 383], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 24, 163, 390, 391, 393], "coeffici": [4, 24, 28, 47, 163, 391], "bonu": [4, 284, 286, 301, 304], "beta": [4, 42, 50, 79, 80, 292, 300, 301, 378, 379, 394, 396], "reduc": [4, 6, 29, 93, 182, 206, 250, 371, 379, 390], "downstream": [4, 374, 378], "formul": [4, 390, 391], "ob": [4, 8, 23, 27, 33, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 82, 87, 88, 93, 103, 107, 123, 124, 130, 131, 140, 142, 152, 153, 155, 165, 179, 185, 201, 204, 211, 212, 213, 214, 233, 234, 235, 271, 278, 285, 287, 288, 293, 300, 305, 307, 309, 310, 318, 319, 320, 321, 379, 389, 390, 392, 394, 396, 397], "rate": [4, 11, 61, 193, 317, 379, 380, 390, 391], "gradient": [4, 37, 103, 107, 123, 124, 130, 131, 187, 195, 224, 232, 237, 241, 250, 251, 284, 286, 287, 288, 292, 293, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 317, 318, 319, 320, 321, 355, 378, 380, 390, 391, 392], "easier": [4, 373, 378], "local": [4, 7, 10, 16, 21, 37, 80, 87, 103, 107, 123, 124, 130, 131, 187, 195, 233, 234, 243, 252, 316, 343, 345, 386, 387, 390, 391], "optima": 4, "sens": [4, 41, 43, 46, 385, 392], "product": [4, 9, 221, 222, 225, 226, 367, 368], "sum": [4, 21, 36, 40, 93, 99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 145, 177, 231, 232, 250, 252, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 301, 303, 304, 305, 306, 307, 309, 310, 317, 324, 374, 378, 379, 380, 381, 384, 387, 390, 391, 392, 397], "stat": [4, 165, 193, 359, 369, 379, 380], "w": [4, 82, 146, 148, 151, 173, 185, 221, 268, 269, 338, 379, 381, 394], "yield": [4, 16, 21, 37, 103, 107, 123, 124, 130, 131, 195, 302, 378, 384], "insight": 4, "auxiliari": [4, 384], "credit": 4, "futur": [4, 23, 37, 41, 43, 46, 71, 72, 78, 103, 107, 123, 124, 130, 131, 169, 187, 191, 195, 228, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 372, 396], "past": [4, 267, 379, 394], "spars": [4, 381], "intermedi": [4, 14, 15, 145, 223, 227, 263, 378, 393], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 378], "discov": 4, "score": [4, 47], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 396], "select": [4, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 117, 118, 125, 126, 132, 133, 140, 142, 143, 145, 146, 147, 150, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 168, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 186, 189, 190, 192, 193, 195, 196, 207, 223, 227, 262, 271, 354, 378, 382, 394], "fall": [4, 63], "explicit": [4, 12, 54, 82, 394], "mechan": [4, 37, 103, 107, 123, 124, 130, 131, 187, 195, 379, 384, 392], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 103, 107, 123, 124, 130, 131, 225, 292, 300, 380, 391], "addition": 4, "timestep": [4, 47, 63, 174, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 390, 391], "realli": 4, "huge": [4, 234, 381], "std": [4, 165, 193, 238, 242, 259, 260, 378, 397], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 377, 381, 382, 384, 385, 386, 387, 388, 389, 393, 394, 395], "initi": [4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 29, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 93, 103, 107, 123, 124, 130, 131, 145, 165, 169, 183, 186, 187, 189, 194, 195, 206, 207, 221, 222, 225, 226, 230, 233, 234, 235, 236, 237, 259, 260, 264, 265, 267, 268, 269, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 369, 373, 374, 378, 379, 381, 382, 383, 385, 390, 392, 397], "estim": [4, 61, 80, 87, 88, 156, 163, 211, 250, 256, 257, 258, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "unseen": 4, "extrins": 4, "wrong": [4, 80, 87], "bonus": 4, "denser": 4, "prior": [4, 246, 296, 391], "freshli": 4, "drop": [4, 86, 88, 204], "meant": [4, 37, 119], "encourag": [4, 123, 378, 379, 394], "measur": [4, 74, 75, 95, 99, 100, 112, 113, 380, 385], "novelti": 4, "revisit": 4, "previous": [4, 380, 397], "diminish": 4, "decreas": [4, 24, 383], "ideal": [4, 165, 392], "down": [4, 14, 15, 16, 17, 374, 381, 382], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 41, 43, 46, 379, 380, 381, 384, 385, 390, 391, 392, 396, 397], "distil": 4, "nois": [4, 194, 237, 254, 268, 269, 305, 309, 310, 351, 369, 378, 390], "exploratori": [4, 284, 286, 301, 304], "misalign": 4, "trade": [4, 383], "unavoid": 4, "divers": [4, 123, 130], "bootstrap": [4, 294, 319, 325, 326, 378, 381], "noisi": [4, 236, 237, 254, 373], "unstabl": [4, 224, 250, 251], "inher": 4, "stochast": [4, 163, 219, 237, 239, 246, 285, 287, 290, 292, 293, 298, 300, 303, 305, 307, 373, 380, 383, 391], "enemi": 4, "pomdp": [4, 394], "loos": [4, 373, 379, 380], "nonexist": 4, "architectur": [4, 215, 384, 390, 391], "sequenc": [4, 14, 15, 16, 17, 24, 27, 33, 35, 36, 42, 44, 45, 47, 52, 54, 67, 70, 73, 82, 83, 85, 91, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 136, 144, 145, 146, 147, 148, 151, 152, 154, 155, 159, 161, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 182, 184, 185, 186, 193, 208, 209, 216, 218, 221, 225, 228, 231, 232, 233, 234, 241, 244, 248, 261, 275, 276, 290, 337, 338, 350, 351, 352, 354, 355, 373, 378, 380, 381, 389, 390, 391, 397], "lstm": [4, 183, 226, 227, 238], "rel": [4, 82, 183, 216, 249, 378, 379, 390, 391, 394], "tend": 4, "stabl": [4, 9, 10, 122], "compens": 4, "descent": [4, 237], "minimum": [4, 123, 130, 175, 219, 238, 249, 250, 251, 277, 280, 283, 285, 287, 293, 302, 303, 307, 346, 378, 380, 387, 390, 391], "manual": [4, 11, 18, 20, 21, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 107, 108, 378, 381, 394], "deviat": [4, 165, 193, 207, 219, 230, 236, 237, 242, 259, 260, 304, 309, 310, 378, 383, 391], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 80, 87, 142, 221, 222, 225, 226, 382, 383, 384, 385, 386, 387], "stabil": [4, 160, 284, 286, 301, 304, 306], "stage": [4, 378, 392], "never": [4, 14, 15, 17, 80, 385], "prevent": [4, 25, 27, 29, 33, 35, 36, 40, 72, 193, 224, 250, 251, 284, 286, 301, 304, 306, 353, 386, 394], "entir": [4, 67, 103, 107, 123, 124, 130, 131, 233, 380, 382, 392, 394], "submit": [4, 106, 143, 372, 396], "system": [4, 5, 72, 380, 390, 391, 392], "adequ": [4, 197, 380, 390, 391], "infeas": 4, "allevi": [4, 373], "prune": 4, "fire": [4, 37, 103, 107, 123, 124, 130, 131, 195], "illeg": 4, "move": [4, 37, 69, 103, 107, 123, 124, 130, 131, 139, 150, 153, 169, 183, 186, 187, 189, 191, 193, 195, 204, 228, 273, 353, 378, 379, 381, 382, 396, 397], "chess": 4, "combin": [4, 31, 186, 309, 379, 386, 394], "grasp": 4, "top": [4, 93, 99, 100, 112, 113, 151, 207, 230, 383], "wherein": 4, "cumul": [4, 177, 182, 207, 324, 380], "q": [4, 9, 103, 107, 123, 124, 130, 131, 211, 212, 213, 214, 217, 218, 220, 243, 244, 252, 258, 263, 271, 272, 285, 287, 288, 289, 291, 292, 293, 294, 299, 300, 305, 307, 309, 310, 316, 371, 378, 384], "flow": [4, 378, 380, 390, 391, 392, 394], "reparameter": [4, 216, 232, 241], "soft": [4, 299, 307, 308, 390], "critic": [4, 8, 256, 266, 284, 286, 287, 288, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 378, 384], "clip": [4, 47, 149, 175, 284, 286, 301, 304, 306, 309, 310, 355, 380, 391, 392], "oppos": [4, 54], "incorrect": 4, "thought": [4, 103, 107, 123, 124, 130, 131], "bound": [4, 21, 26, 27, 37, 103, 107, 123, 124, 130, 131, 149, 164, 193, 195, 245, 246, 255, 262, 263, 269, 270, 271, 272, 273, 274, 277, 309, 310, 373, 378, 379, 380, 390, 397], "region": 4, "squash": [4, 381, 396], "tanh": [4, 208, 209, 221, 222, 224, 225, 226, 228, 234, 249, 250, 251, 277, 380, 383, 390, 391, 392, 393, 396], "prob": [4, 231, 232, 241, 380, 391], "rememb": [4, 390], "remap": 4, "origin": [4, 8, 41, 43, 46, 47, 111, 153, 154, 163, 169, 187, 191, 195, 221, 270, 273, 274, 285, 287, 299, 300, 302, 304, 305, 307, 309, 310, 378, 389, 392, 397], "histor": 5, "ceas": 5, "farama": [5, 65, 114, 115, 125, 126, 380, 392], "best": [5, 9, 111, 223, 227, 390, 391, 394, 396], "gymwrapp": [5, 103, 107, 123, 124, 130, 131, 157, 178, 181, 192, 371, 380, 396, 397], "feel": [5, 372, 387, 396], "free": [5, 7, 152, 155, 284, 296, 304, 375, 380, 387, 391, 396], "gladli": 5, "prepar": [6, 32, 64, 380], "conda": [6, 7, 372], "cmake": 6, "activ": [6, 7, 9, 208, 209, 215, 219, 228, 233, 234, 286, 301, 304, 373, 392, 396], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 64, 372], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 109], "y": [6, 7, 45, 122, 220, 233, 253, 378, 391, 394], "facebookresearch": [6, 64, 109], "subdirectori": 6, "verbos": [6, 387], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 58, 103, 107, 123, 124, 130, 131, 171, 180, 195, 302, 390, 391, 396, 397], "command": [6, 7, 10, 131, 380, 390, 391, 392, 397], "readm": [6, 7, 132], "md": [6, 7], "habitatenv": [6, 371], "_has_habitat": 6, "available_env": [6, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 114, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 397], "startswith": [6, 374, 378, 384], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 104, 302, 378], "env_nam": [6, 99, 101, 103, 106, 107, 109, 112, 114, 120, 123, 124, 127, 130, 131, 378, 380, 397], "llvmlite": 6, "config": [6, 7, 169, 191, 210, 215, 242, 359, 360, 361, 363, 366], "var": [6, 7, 37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 302, 307], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 262, 302], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 302, 307, 394], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 103, 379, 387], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 63], "stand": [7, 31, 101, 102, 123, 130, 389, 392], "joint": [7, 379], "contact": [7, 44, 390], "engin": [7, 127, 392], "biomechan": 7, "graphic": 7, "anim": [7, 391], "area": 7, "demand": [7, 386, 397], "fast": [7, 9, 99, 100, 172, 204, 305, 378, 379, 380], "articul": 7, "acquir": [7, 380], "deepmind": [7, 8, 9, 67, 101, 102, 103, 107, 117, 118, 123, 124, 130, 131, 156, 380, 382], "whomev": 7, "licenc": 7, "incorpor": [7, 103, 107, 123, 124, 130, 131, 259, 260, 264, 265, 268, 269, 309, 381, 383, 392], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 372], "tip": [7, 372], "glfw": [7, 378], "osmesa": 7, "egl": 7, "advic": [7, 67, 397], "sudo": [7, 372], "apt": [7, 391], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 256, 257, 258], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 25, 29, 40, 144, 218, 244, 262, 263, 271, 272, 289, 292, 293, 316], "mkdir": 7, "earlier": [7, 378, 380, 381, 390, 391, 394], "roboti": 7, "html": [7, 14, 15, 120, 122], "wget": 7, "mujoco210": 7, "tar": [7, 64], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 123, 130], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 41, 43, 54, 70], "bin": [7, 218, 263, 373], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 214, 270, 274, 378, 380, 394], "nvidia": [7, 111], "older": [7, 12], "hack": [7, 378], "adatp": 7, "script": [7, 64, 197, 365, 369, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "unnot": [7, 170], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 72, 379, 394], "troubleshoot": 7, "gl": 7, "h": [7, 82, 146, 148, 151, 173, 185, 221, 222, 223, 225, 226, 227, 230, 338, 379, 381, 394], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21], "directori": [7, 41, 43, 46, 54, 61, 63, 64, 65, 67, 68, 69, 74, 343, 345, 375, 378, 383, 386, 390], "devel": 7, "ubuntu": [7, 111], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 379, 381, 389], "libstdc": 7, "glibcxx_3": 7, "29": [7, 379, 392], "compil": [7, 23, 37, 80, 87, 88, 103, 107, 123, 124, 130, 131, 195, 221, 222, 225, 226], "libosmesa": 7, "libgcc": 7, "Then": [7, 14, 15, 16, 17, 18, 19, 20, 21, 192, 380, 389], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 33, 37, 103, 107, 123, 124, 130, 131, 164, 187, 195, 287, 307, 374, 397], "job": [7, 18, 19, 20, 22, 45, 394, 396], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 99, 100, 377, 379, 383, 392, 395], "114": [7, 392], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 381, 392, 394], "offscreenopenglcontext": 7, "opengl": [7, 390, 391], "global": [7, 37, 103, 107, 123, 124, 125, 126, 130, 131, 195, 243, 252, 270, 274, 316, 375, 378, 390, 391], "cuda_visible_devic": 7, "id": [7, 23, 47, 80, 82, 87, 88, 103, 106, 107, 123, 124, 130, 131, 268, 269, 287, 305, 341, 345, 385, 394], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 390], "onscreen": 7, "101": [7, 392], "correctli": [7, 37, 103, 107, 123, 124, 130, 131, 195], "lgl": 7, "libegl": 7, "x11": [7, 391], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 375], "n_training_step": 8, "datapoint": [8, 54, 394], "n_data_per_train": 8, "no_grad": [8, 37, 103, 107, 123, 124, 130, 131, 163, 195, 221, 222, 225, 226, 318, 319, 320, 321, 380, 381, 391], "loss_fn": [8, 381, 384, 385, 396], "zero_grad": [8, 37, 103, 107, 123, 124, 130, 131, 195, 375, 378, 380, 381, 384, 387, 390, 391, 392], "backpropag": [8, 99, 100, 112, 113, 123, 284, 285, 286, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 310, 316, 384, 391, 392], "differenti": [8, 54, 99, 100, 163, 287, 309, 318, 319, 320, 321, 381, 383, 384, 390, 391, 392], "denomin": 8, "artifact": 8, "numer": [8, 45, 107, 193, 224, 250, 251, 255, 262, 263, 270, 271, 272, 273, 274, 353, 380, 394, 397], "misconcept": 8, "freed": 8, "appear": [8, 11, 40, 61, 67, 80, 87, 88, 392, 394], "compuat": 8, "fix": [8, 28, 123, 183, 285, 287, 303, 307, 379, 387, 392, 397], "retain_graph": [8, 99, 100], "discuss": [8, 9, 385, 390, 391], "inplac": [8, 37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 195, 378], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 103, 107, 123, 124, 130, 131, 140, 142, 143, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 171, 172, 174, 177, 178, 181, 182, 183, 184, 186, 189, 190, 192, 193, 195, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 233, 234, 235, 236, 238, 239, 240, 242, 243, 245, 246, 248, 252, 253, 259, 260, 261, 263, 264, 267, 268, 269, 270, 272, 273, 274, 277, 278, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 318, 319, 320, 321, 322, 374, 392, 396], "submodul": [8, 37, 103, 107, 123, 124, 130, 131, 135, 183, 195, 223, 227, 281, 302], "param": [8, 37, 47, 103, 107, 119, 123, 124, 130, 131, 143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 195, 216, 218, 233, 234, 235, 249, 261, 270, 273, 276, 302, 312, 315, 318, 319, 320, 321, 322, 378, 387, 390, 391, 392, 393, 396], "grad": [8, 37, 99, 100, 103, 107, 123, 124, 130, 131, 195, 378, 380], "whose": [8, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 47, 53, 55, 56, 103, 107, 123, 124, 125, 126, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 238, 243, 273], "neg": [8, 14, 15, 16, 17, 18, 19, 20, 21, 42, 50, 79, 80, 146, 159, 170, 188, 295, 318, 320, 321, 374, 380, 390, 391, 392], "factor": [8, 11, 24, 37, 174, 195, 206, 224, 237, 250, 251, 259, 260, 264, 265, 268, 269, 285, 291, 294, 295, 297, 308, 324, 378, 379, 383, 387, 390, 391, 394, 397], "fit": [8, 12, 165, 183, 374, 375, 378], "bottlneck": 8, "brax": [8, 99, 100, 103, 107, 123, 124, 130, 131, 172, 382, 397], "jax": [8, 12, 99, 100, 112, 113], "improperli": 8, "underli": [8, 103, 107, 123, 124, 130, 131, 302, 382, 384, 386, 392], "tedeiou": 8, "priorit": [8, 42, 50, 79, 80, 287, 288, 289, 291, 292, 293, 300, 305, 307, 309, 310, 378, 379, 385], "amount": [8, 268, 269, 379, 394], "costli": [8, 392], "constitut": [8, 379, 391, 392], "profil": 8, "frequent": [8, 394], "program": [8, 292, 300, 397], "functorch": [8, 10], "incl": 8, "suit": [8, 102, 380, 382, 396, 397], "mujoco_instal": 8, "valueerror": [8, 37, 103, 107, 123, 124, 130, 131, 195], "bad": 8, "fds_to_keep": 8, "expand": [8, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 74, 87, 88, 143, 273, 276, 285, 287, 300, 302, 305, 307, 309, 310, 390, 391, 392, 394, 396], "new_shap": 8, "permut": [8, 86, 167, 396, 397], "idea": [9, 305, 375, 381, 383, 390, 391], "introductori": 9, "intro": [9, 380, 381], "dai": [9, 396], "2022": [9, 10, 392, 396], "spin": [9, 101, 102], "deep": [9, 146, 211, 212, 213, 214, 217, 268, 269, 284, 287, 299, 307, 308, 378, 390], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 383], "summari": [9, 165, 193, 378, 379, 380, 381], "reddit": 9, "reagent": 9, "orient": [9, 69, 397], "baselines3": 9, "tf": 9, "bandit": [9, 122], "tensorflow": [9, 231, 232], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 387], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 396], "grade": 9, "factori": [9, 52, 378], "cherri": 9, "jaxrl": 9, "mbrl": [9, 119, 373], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 392], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 380, 381, 390, 391], "notebook": [10, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "24": [10, 68, 88, 106, 120, 121, 267, 378, 379, 390, 392], "pip3": [10, 378, 380, 381, 390, 391], "url": [10, 109], "org": [10, 14, 15, 24, 42, 64, 65, 67, 69, 79, 80, 99, 100, 101, 102, 109, 112, 113, 117, 118, 120, 121, 122, 127, 132, 133, 146, 169, 189, 206, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 230, 231, 232, 237, 239, 240, 243, 245, 246, 252, 263, 268, 269, 284, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 303, 304, 306, 307, 308, 309, 318, 323, 331, 370, 388, 393], "whl": 10, "u": [10, 66, 221, 222, 225, 226, 392], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 380, 390, 391, 392, 394], "power": [11, 379], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 371], "ultim": [11, 224, 250, 251], "ffmpeg": 11, "whatev": [11, 374, 378], "fed": [11, 391, 394], "feed": [11, 169, 191, 302, 373, 378, 390, 391, 394], "suppos": [11, 123, 351, 375, 397], "snippet": [11, 169, 189, 378], "gave": 11, "extrem": [11, 123, 130, 284, 286, 301, 304, 306], "blurri": 11, "stitch": 11, "exp_nam": [11, 338, 339, 340, 343, 344, 345, 365, 379, 386, 387], "my_exp": [11, 386], "pixels_onli": [11, 101, 102, 106, 108, 109, 127, 378, 379, 386, 387, 396, 397], "my_video": [11, 386], "record_env": [11, 386, 387], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 258, 373], "module_nam": [12, 302], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 79, 80, 82, 93, 99, 101, 102, 103, 105, 106, 107, 108, 109, 112, 117, 118, 120, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 142, 146, 156, 162, 163, 169, 173, 181, 182, 187, 189, 191, 192, 193, 195, 198, 202, 205, 207, 217, 218, 223, 227, 229, 230, 233, 234, 235, 236, 237, 238, 243, 244, 252, 255, 262, 263, 270, 271, 272, 273, 274, 277, 278, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 313, 316, 317, 318, 319, 320, 321, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 363, 369, 379, 380], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 223, 227, 396], "longer": [12, 379, 387, 390, 391, 394], "x": [12, 23, 27, 37, 45, 47, 67, 88, 163, 185, 206, 209, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 253, 262, 270, 271, 280, 283, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 355, 378, 390, 392, 394, 396], "23": [12, 68, 88, 378, 379, 381, 390, 392], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 68, 99, 100, 107, 112, 113, 226, 283, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 378, 379, 380, 381, 387, 390, 391, 392, 394, 397], "otherwis": [12, 22, 23, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 80, 82, 87, 88, 99, 100, 103, 106, 107, 108, 109, 112, 113, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 133, 146, 147, 154, 165, 182, 183, 184, 187, 193, 195, 206, 221, 224, 225, 233, 234, 250, 251, 262, 271, 277, 285, 287, 296, 302, 303, 307, 318, 320, 321, 351, 352, 375, 378, 379, 380, 381, 392, 397], "classmethod": [12, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 43, 46, 53, 55, 56, 103, 107, 123, 124, 130, 131, 189, 210, 242], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 29, 33, 34, 35, 37, 41, 43, 45, 46, 68, 72, 80, 87, 88, 103, 104, 105, 106, 107, 108, 117, 118, 120, 123, 124, 125, 126, 130, 131, 132, 133, 134, 163, 183, 187, 192, 193, 195, 208, 209, 210, 211, 212, 213, 214, 215, 220, 228, 242, 270, 274, 287, 307, 342, 343, 351, 360, 361, 367, 368, 369, 378, 379, 380, 394, 397], "setter": 12, "setter_dict": 12, "kwd": 13, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 104, 123, 130, 378, 396], "device_typ": [14, 16, 17, 29, 35, 39, 40, 208, 209, 210, 211, 212, 213, 214, 220, 228, 233, 234, 236, 237, 242], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 379], "policy_devic": [14, 15, 16, 17, 18, 19, 20, 21, 379], "create_env_kwarg": [14, 15, 16, 17, 21, 104, 120, 123, 130, 378, 397], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 37, 174, 379, 394], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 270, 302, 351, 378, 379, 380, 381, 383, 390, 396], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 199, 203, 270, 274, 351], "exploration_mod": [14, 16, 17, 18, 19, 20, 371, 373], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 41, 43, 46, 123, 130], "num_sub_thread": [14, 15, 17, 123, 130], "set_trunc": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131], "use_buff": [14, 15, 16, 123, 130], "datacollector": [14, 15, 16, 17, 37, 274, 304, 380, 385, 394], "recept": 14, "safe": [14, 15, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 80, 87, 255, 260, 262, 263, 269, 270, 271, 272, 273, 274, 276, 373, 396], "sota": [14, 15, 119, 160, 306, 346, 360, 378, 379, 396], "guard": [14, 15], "doc": [14, 15, 52, 109, 112, 113, 122, 127, 345, 379, 390, 391, 394, 397], "env_mak": [14, 15, 16, 21, 365, 397], "2000": [14, 15, 16, 37, 54, 110, 338, 380, 394], "50": [14, 15, 16, 21, 44, 47, 61, 69, 87, 88, 117, 118, 195, 377, 379, 380, 381, 390, 391, 392, 394, 395, 396], "shutdown": [14, 15, 16, 17, 21, 143, 378, 396], "del": [14, 15, 16, 378, 379, 380, 389, 390, 396, 397], "int64": [14, 15, 16, 23, 25, 29, 30, 35, 36, 40, 41, 43, 44, 46, 47, 48, 50, 52, 54, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 79, 103, 107, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 139, 143, 156, 167, 174, 181, 218, 244, 262, 263, 268, 269, 270, 271, 272, 373, 380, 381, 382, 383, 385, 386, 392, 394, 396], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 145, 253, 262, 267, 271, 381], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 54], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 379], "divis": [14, 15, 16, 17, 18, 19, 20, 61, 67, 80, 87, 88, 206, 391], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 61, 107, 142, 183, 192, 227, 381, 392, 393], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 357, 379], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 53, 55, 56, 70, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 120, 121, 123, 124, 127, 130, 131, 150, 152, 155, 163, 169, 183, 186, 187, 189, 191, 193, 195, 273, 390, 397], "span": [14, 15, 16, 17, 18, 19, 20, 21, 67, 80, 87], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 37, 195, 267, 379, 380, 390, 391], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 47, 345, 373, 390, 391, 392], "round": [14, 15, 16, 17, 18, 19, 20, 21, 61], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 37, 65, 103, 107, 123, 124, 130, 131, 195], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 192, 396], "ratio": [14, 15, 17, 47, 378, 380], "finish": [14, 15, 17, 21, 107, 174, 397], "rest": [14, 15, 17, 373, 380, 381, 390, 392, 396], "earli": [14, 15, 17, 37, 107, 181, 396], "safeti": [14, 15, 17, 119, 123, 130], "harm": [14, 15, 17, 123, 130], "exclus": [14, 15, 57, 58, 61, 67, 80, 87, 88, 143, 157, 159, 221, 223, 225, 227, 231, 232, 262, 263, 271, 272, 308, 309, 310, 318, 319, 320, 321, 322, 345, 369, 373], "add_truncated_kei": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131, 187], "ordereddict": [14, 15, 16, 17, 21, 37, 103, 107, 123, 124, 130, 131, 187, 193, 195, 287, 307, 379], "form": [14, 15, 17, 37, 42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 78, 103, 107, 123, 124, 130, 131, 193, 195, 221, 223, 225, 227, 283, 284, 286, 301, 304, 355, 373, 383, 391], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 103, 107, 123, 124, 130, 131, 187], "integ": [14, 15, 16, 17, 23, 35, 36, 37, 40, 47, 56, 80, 87, 88, 89, 103, 107, 123, 124, 130, 131, 139, 142, 156, 160, 165, 181, 208, 209, 228, 233, 234, 287, 292, 300, 307, 394], "increment": [14, 15, 16, 17, 103, 107, 123, 124, 130, 131, 165, 301], "env_fn": [14, 15, 16, 17, 104, 367, 368], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 87, 88, 213, 214, 392], "out_se": [14, 15, 16, 17, 397], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "kwarg": [15, 16, 17, 21, 26, 27, 37, 39, 41, 42, 43, 45, 46, 49, 50, 51, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 78, 79, 80, 82, 87, 88, 89, 91, 93, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 143, 150, 169, 171, 180, 183, 186, 187, 188, 190, 191, 194, 195, 207, 208, 209, 211, 212, 213, 214, 217, 220, 223, 224, 227, 228, 229, 230, 233, 234, 235, 241, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 336, 338, 342, 343, 345, 348, 355, 360, 361, 366, 367, 368, 374, 380, 391], "return_same_td": 16, "interruptor": 16, "cautious": [16, 304], "whole": [16, 27, 33, 37, 54, 103, 107, 123, 124, 130, 131, 187, 195, 270, 287, 307, 346, 378, 380], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 383], "policy_state_dict": 16, "env_state_dict": 16, "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 355], "respect": [18, 19, 20, 37, 103, 107, 123, 124, 130, 131, 144, 150, 152, 155, 169, 170, 179, 183, 186, 187, 189, 191, 195, 221, 225, 233, 246, 273, 278, 284, 286, 301, 304, 306, 318, 320, 321, 350, 380, 381, 390, 391], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 372, 379, 380, 383, 386, 389, 394], "fashion": [18, 20, 21, 41, 43, 46, 88], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 61, 64, 65, 67, 68, 69, 103, 107, 123, 124, 130, 131, 159], "seen": [18, 19, 20, 21, 27, 33, 103, 107, 123, 124, 130, 131, 374, 378, 379, 381, 384, 390, 391, 394], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 42, 45, 50, 51, 63, 103, 107, 123, 124, 130, 131, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280, 378], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 392], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 378], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 40, 61, 270, 274], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 367, 368, 378, 379], "coordin": [21, 151], "init": [21, 37, 103, 107, 123, 124, 130, 131, 193, 195, 233, 234, 235, 345, 379, 380], "autodetect": 21, "similarli": [21, 37, 86, 91, 103, 107, 123, 124, 130, 131, 195, 233, 275, 276, 292, 300, 397], "num_cpu": 21, "num_gpu": 21, "1024": [21, 215, 379, 394], "equat": [21, 67, 107, 193, 268, 269, 283, 286, 308, 380, 382, 392], "exce": [21, 394], "indefinit": [21, 60], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 206, 355, 378, 380, 381], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 309, 384], "jump": [22, 382], "host": [22, 37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 210, 215, 242, 261], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "nestedkei": [23, 25, 26, 29, 30, 33, 34, 35, 36, 39, 40, 41, 43, 46, 48, 53, 54, 55, 56, 80, 87, 88, 103, 107, 123, 124, 130, 131, 136, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 159, 161, 162, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 189, 193, 195, 196, 204, 205, 218, 244, 259, 260, 261, 264, 265, 267, 268, 269, 274, 289, 316, 336, 338], "as_nest": 23, "durat": [23, 391], "meta": [23, 41, 43, 46, 53, 63, 105, 109, 284, 286, 301, 304, 306, 375, 380, 390, 391, 394], "aren": [23, 182, 381], "deprec": [23, 37, 103, 107, 123, 124, 130, 131, 187, 195, 198, 202, 265, 284, 286, 287, 289, 292, 293, 294, 300, 301, 304, 305, 306, 307, 316, 318, 319, 320, 321, 326, 397], "eventu": [23, 243, 381, 392], "supersed": 23, "recov": [23, 63, 65, 67, 68, 69, 87, 88, 260, 265, 269, 275, 292, 300, 389], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 106, 108], "stride": [23, 37, 103, 107, 123, 124, 130, 131, 195, 208, 209, 211, 212, 220, 233, 379, 390, 396], "jag": 23, "focu": [23, 378, 379, 380, 383, 384, 385, 390], "team": [23, 390, 391, 396], "cat": [23, 278, 285, 287, 288, 300, 305, 307, 309, 310, 390, 394, 396], "arang": [23, 29, 40, 80, 139, 218, 232, 262, 346, 373, 394], "obs_": 23, "trajectory_id": 23, "int32": [23, 51, 61, 67, 87, 112, 113, 131, 201, 267, 394], "data_split": 23, "got": [23, 385], "init_kl_coef": 24, "horizon": [24, 117, 118, 132, 133, 207, 230, 380], "kl": [24, 28, 47, 163, 296, 301], "describ": [24, 53, 147, 186, 196, 249, 250, 289, 341, 374, 378, 380, 390, 391, 392, 397], "ziegler": 24, "et": [24, 207], "relax": [24, 336], "penalti": [24, 47, 298, 301], "strai": [24, 47], "greater": [24, 61, 80, 87, 88, 223, 227, 287, 378, 379, 396], "increas": [24, 72, 184, 268, 269, 390, 391], "pull": [24, 394], "toward": [24, 191], "aggress": 24, "kl_coef": [24, 28, 47], "arxiv": [24, 42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 127, 132, 133, 146, 169, 189, 206, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 230, 237, 239, 240, 243, 245, 246, 252, 263, 268, 269, 284, 285, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 303, 304, 307, 308, 309, 318, 323, 331, 393], "pdf": [24, 146, 210, 211, 212, 213, 214, 218, 263, 268, 269, 287, 294, 298, 305, 308, 309, 318, 323, 331], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 390, 391], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 163], "newest": 24, "int8": [25, 103, 116, 125, 126, 144], "assert_is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "clear_device_": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "op": [25, 26, 29, 35, 36, 39, 40, 53, 55, 56, 164, 192, 259, 260, 264, 338, 357], "is_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 397], "encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 50, 51, 53, 55, 56, 99, 100, 103, 106, 108, 109, 112, 113, 120, 121, 127, 139, 154, 240, 241, 245, 283, 373, 379, 380, 381, 383, 392, 394], "ndarrai": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 268, 269, 277, 336, 390], "ignore_devic": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "np": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 107, 277, 336, 390, 392], "complient": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "singleton": [25, 26, 27, 29, 33, 34, 35, 36, 37, 39, 40, 53, 55, 56, 208, 209, 228, 247, 248], "start_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "end_dim": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "implements_for_spec": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "torch_funct": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "tensor_to_index": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "project": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 154, 225, 255, 259, 260, 262, 263, 268, 269, 270, 271, 272, 273, 274, 345, 373, 396, 397], "rand": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 42, 45, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 99, 100, 112, 113, 119, 140, 143, 152, 155, 171, 196, 207, 230, 270, 284, 285, 287, 288, 289, 291, 292, 293, 300, 302, 304, 305, 307, 309, 310, 392, 396, 397], "unbound": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 50, 51, 53, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 183, 201, 392, 394], "to_numpi": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 103, 107, 123, 124, 130, 131], "transformed_in": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56, 186, 187, 238, 249, 369], "check_spec_encod": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "to_one_hot": [25, 29, 35], "hot": [25, 29, 35, 36, 40, 99, 100, 106, 108, 109, 112, 113, 117, 118, 120, 121, 125, 126, 127, 132, 133, 139, 140, 154, 218, 241, 244, 262, 263, 271, 272, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 381], "to_one_hot_spec": [25, 29, 35], "onehotdiscretetensorspec": [25, 29, 218, 244, 262, 271, 289, 291, 292, 293, 316, 371, 373, 383], "convert": [25, 29, 35, 36, 37, 38, 40, 41, 43, 46, 49, 54, 99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131, 150, 152, 155, 169, 183, 186, 187, 189, 191, 193, 195, 273, 283, 302, 378, 379, 380, 392, 394], "type_check": [25, 26, 27, 29, 33, 34, 35, 36, 39, 40, 53, 55, 56], "update_mask": [25, 29, 35, 36, 40], "outcom": [25, 29, 35, 36, 40, 216, 249, 302, 390], "disabl": [25, 29, 35, 36, 37, 40, 103, 107, 123, 124, 130, 131, 187, 195, 224, 251, 336, 378, 390], "unmask": [25, 29, 35, 36, 40], "ts": [25, 29, 35, 36, 40], "upper": [26, 85, 164], "unnam": 27, "constraint": [27, 119, 380, 391], "pixels_spec": 27, "observation_vector_spec": 27, "composite_spec": 27, "observation_vector": [27, 147, 378], "td_project": 27, "_nodefault": [27, 33, 41, 43, 46], "is_empti": [27, 33, 392], "include_nest": [27, 33], "leaves_onli": [27, 33], "is_leaf": [27, 33], "_compositespecitemsview": [27, 33], "children": [27, 33, 37, 103, 107, 123, 124, 130, 131, 195], "_compositespeckeysview": [27, 33], "reflect": [27, 33, 108, 125, 126, 192, 204, 302, 358, 379, 380, 381, 391], "lock_": [27, 33], "recurs": [27, 33, 37, 57, 58, 103, 107, 123, 124, 130, 131, 195, 302], "succeed": [27, 33], "selected_kei": [27, 33, 178, 378], "unlock_": [27, 33], "unlock": [27, 33, 41, 43, 46], "_compositespecvaluesview": [27, 33], "multipli": [28, 221, 225, 285, 286, 287, 293, 301, 303, 304, 305, 307, 353, 378, 390], "calcul": [28, 47, 174, 221, 284, 286, 291, 301, 304, 306, 309], "onehottensorspec": [29, 99, 100, 106, 108, 109, 112, 113, 120, 121, 127], "action_valu": [29, 40, 217, 218, 244, 262, 263, 271, 272, 293, 302, 316, 373, 381, 383, 387], "argmax": [29, 103, 107, 123, 124, 130, 131, 218, 244, 263, 272, 383], "chosen_action_valu": [29, 40, 243, 244, 252, 271, 272, 316, 373, 381, 383], "shift_kei": [30, 32, 38, 48], "is_full_kei": [30, 32, 38, 48], "is_ful": [30, 32, 38, 48], "tempfil": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 82, 365, 378, 379, 390, 394], "register_save_hook": [30, 42, 45, 48, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "temporarydirectori": [30, 41, 42, 43, 45, 46, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 378, 379, 390, 394], "tmpdir": [30, 42, 45, 48, 50, 51, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 378, 379, 390], "rb_load": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "register_load_hook": [30, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "persist": [31, 37, 103, 107, 123, 124, 130, 131, 187, 195, 204, 287, 307], "filesystem": [31, 394], "ted2nest": [32, 371], "drawn": [33, 34, 183, 264, 270, 274, 380, 390, 391], "heterogen": [33, 34, 116, 125, 126, 197, 233, 234, 378, 379], "thrown": [34, 37, 103, 107, 123, 124, 130, 131, 195, 394], "nvec": [35, 36], "remove_singleton": 35, "cardin": [35, 36, 218, 244, 262, 263, 272, 380], "ax": [35, 236, 237, 390], "m": [35, 37, 103, 107, 123, 124, 130, 131, 154, 195, 274, 373, 379, 392], "multionehotdiscretetensorspec": [35, 289, 292, 293, 316, 371], "neither": [35, 36, 67, 392], "use_regist": [36, 40], "to_categor": [36, 40], "to_categorical_spec": [36, 40], "multidiscretetensorspec": [36, 371], "gamma": [37, 174, 195, 230, 284, 285, 287, 288, 289, 291, 293, 294, 295, 297, 300, 302, 304, 305, 306, 307, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 365, 374, 378, 379, 380, 390, 391, 396], "sutton": [37, 374, 390, 391], "1988": 37, "tempor": [37, 223, 227, 230, 319, 320, 325, 326], "44": [37, 379, 392, 393, 394], "discount": [37, 67, 104, 174, 195, 285, 291, 294, 295, 297, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 374, 379, 380, 390, 391], "ahead": [37, 195, 397], "bias": [37, 221, 222, 225, 226, 280, 374, 378], "mitig": 37, "pleas": [37, 65, 103, 106, 107, 123, 124, 125, 126, 130, 131, 143, 146, 184, 187, 195, 233, 234, 235, 287, 307, 372], "multisteptransform": [37, 371], "99": [37, 174, 193, 230, 297, 312, 317, 324, 365, 378, 379, 380, 384, 387, 390, 391, 392, 396], "add_modul": [37, 103, 107, 123, 124, 130, 131, 195], "child": [37, 103, 107, 123, 124, 130, 131, 195, 379], "fn": [37, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 195, 238, 367, 368], "init_weight": [37, 103, 107, 123, 124, 130, 131, 195], "fill_": [37, 103, 107, 123, 124, 130, 131, 195, 379, 381, 397], "net": [37, 103, 107, 123, 124, 130, 131, 195, 212, 214, 217, 220, 234, 284, 285, 287, 293, 300, 304, 305, 306, 307, 365, 379, 392, 393, 396], "in_featur": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 208, 209, 211, 212, 213, 214, 220, 228, 233, 234, 236, 237, 256, 273, 281, 289, 291, 383, 384, 396], "out_featur": [37, 103, 107, 119, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 207, 208, 209, 211, 212, 213, 214, 219, 220, 223, 227, 228, 230, 233, 234, 236, 237, 256, 262, 273, 281, 289, 291, 373, 378, 381, 383, 384, 387, 396], "bia": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 206, 208, 209, 211, 212, 213, 214, 219, 220, 221, 222, 223, 225, 226, 227, 228, 234, 236, 237, 238, 264, 265, 268, 269, 273, 280, 282, 283, 287, 302, 307, 374, 378, 379, 380, 381, 391, 396], "requires_grad": [37, 99, 100, 103, 107, 123, 124, 130, 131, 163, 187, 195, 287, 307], "bfloat16": [37, 103, 107, 123, 124, 130, 131, 195], "datatyp": [37, 103, 107, 123, 124, 130, 131, 195, 394], "member": [37, 103, 107, 123, 124, 130, 131, 195, 302, 338], "xdoctest": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 287, 302, 307], "buf": [37, 103, 107, 123, 124, 130, 131, 195], "20l": [37, 103, 107, 123, 124, 130, 131, 195, 302], "1l": [37, 103, 107, 123, 124, 130, 131, 195, 302], "5l": [37, 103, 107, 123, 124, 130, 131, 195, 302], "__call__": [37, 44, 103, 107, 123, 124, 130, 131, 195, 274, 375, 397], "doubl": [37, 55, 103, 107, 123, 124, 130, 131, 150, 152, 153, 155, 169, 183, 186, 187, 189, 191, 195, 273, 289, 294, 299, 305, 308, 316, 378, 379, 380, 381, 397], "eval": [37, 103, 107, 123, 124, 130, 131, 187, 193, 195, 378, 379, 380], "evalu": [37, 103, 107, 117, 118, 123, 124, 130, 131, 187, 195, 216, 231, 232, 241, 251, 305, 360, 361, 379, 380, 387], "dropout": [37, 103, 107, 123, 124, 130, 131, 187, 195, 221, 223, 225, 227, 228, 381], "batchnorm": [37, 103, 107, 123, 124, 130, 131, 187, 195, 206], "comparison": [37, 103, 107, 123, 124, 130, 131, 187, 195, 302, 378, 379], "similar": [37, 41, 43, 45, 46, 67, 103, 107, 123, 124, 125, 126, 130, 131, 150, 169, 183, 186, 187, 189, 190, 191, 193, 195, 256, 258, 270, 273, 274, 374, 378, 379, 380, 381, 383, 384, 385, 386, 392, 394, 397], "extra_repr": [37, 103, 107, 123, 124, 130, 131, 195], "nontermin": 37, "original_reward": 37, "newli": [37, 103, 107, 123, 124, 130, 131], "OR": 37, "get_buff": [37, 103, 107, 123, 124, 130, 131, 195], "get_submodul": [37, 103, 107, 123, 124, 130, 131, 195], "qualifi": [37, 103, 107, 123, 124, 130, 131, 195], "referenc": [37, 103, 107, 123, 124, 130, 131, 195], "attributeerror": [37, 103, 107, 123, 124, 130, 131, 195], "resolv": [37, 103, 107, 123, 124, 130, 131, 195], "someth": [37, 103, 107, 116, 123, 124, 130, 131, 195, 372, 379, 380, 392, 397], "get_extra_st": [37, 103, 107, 123, 124, 130, 131, 193, 195], "set_extra_st": [37, 103, 107, 123, 124, 130, 131, 193, 195], "picklabl": [37, 103, 107, 123, 124, 130, 131, 193, 195], "pickl": [37, 103, 107, 123, 124, 130, 131, 193, 195], "get_paramet": [37, 103, 107, 123, 124, 130, 131, 195], "net_b": [37, 103, 107, 123, 124, 130, 131, 195], "net_c": [37, 103, 107, 123, 124, 130, 131, 195], "conv": [37, 103, 107, 123, 124, 130, 131, 195, 208, 209, 379], "conv2d": [37, 103, 107, 123, 124, 130, 131, 195, 209, 211, 212, 220, 233, 396], "kernel_s": [37, 103, 107, 123, 124, 130, 131, 195, 208, 209, 211, 212, 220, 233, 239, 379, 396], "diagram": [37, 103, 107, 123, 124, 130, 131, 195], "degre": [37, 103, 107, 123, 124, 130, 131, 195], "named_modul": [37, 103, 107, 123, 124, 130, 131, 195], "o": [37, 103, 107, 123, 124, 130, 131, 195, 226], "half": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 378], "ipu": [37, 103, 107, 123, 124, 130, 131, 195], "strict": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "descend": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "get_swap_module_params_on_convers": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "enforc": [37, 86, 103, 107, 123, 124, 130, 131, 187, 195, 275, 287, 307, 392], "preserv": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "missing_kei": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "unexpected_kei": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "namedtupl": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "l": [37, 103, 107, 123, 124, 130, 131, 195, 221, 225, 317, 380, 392], "idx": [37, 103, 107, 123, 124, 130, 131, 195], "mtia": [37, 103, 107, 123, 124, 130, 131, 195], "named_buff": [37, 103, 107, 123, 124, 130, 131, 195], "remove_dupl": [37, 103, 107, 123, 124, 130, 131, 195, 302], "prepend": [37, 103, 107, 123, 124, 130, 131, 195, 302], "running_var": [37, 103, 107, 123, 124, 130, 131, 195], "named_children": [37, 103, 107, 123, 124, 130, 131, 195], "conv4": [37, 103, 107, 123, 124, 130, 131, 195], "conv5": [37, 103, 107, 123, 124, 130, 131, 195], "memo": [37, 103, 107, 123, 124, 130, 131, 195], "named_paramet": [37, 103, 107, 123, 124, 130, 131, 163, 195, 302], "register_backward_hook": [37, 103, 107, 123, 124, 130, 131, 195], "removablehandl": [37, 103, 107, 123, 124, 130, 131, 195], "favor": [37, 103, 107, 123, 124, 130, 131, 195, 380], "register_full_backward_hook": [37, 103, 107, 123, 124, 130, 131, 195], "register_buff": [37, 103, 107, 123, 124, 130, 131, 195], "running_mean": [37, 103, 107, 123, 124, 130, 131, 195], "alongsid": [37, 103, 107, 123, 124, 130, 131, 195, 386], "num_featur": [37, 103, 107, 123, 124, 130, 131, 195, 206], "register_forward_hook": [37, 103, 107, 123, 124, 130, 131, 195, 218, 244], "with_kwarg": [37, 103, 107, 123, 124, 130, 131, 195], "always_cal": [37, 103, 107, 123, 124, 130, 131, 195], "register_module_forward_hook": [37, 103, 107, 123, 124, 130, 131, 195], "regardless": [37, 103, 107, 123, 124, 130, 131, 195, 286, 301, 304], "register_forward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "invok": [37, 103, 107, 123, 124, 130, 131, 195], "And": [37, 103, 107, 123, 124, 130, 131, 195, 384], "forward_pr": [37, 103, 107, 123, 124, 130, 131, 195], "register_module_forward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "grad_input": [37, 103, 107, 123, 124, 130, 131, 195], "grad_output": [37, 103, 107, 123, 124, 130, 131, 195], "subsequ": [37, 61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 142, 195, 381, 390], "technic": [37, 103, 107, 123, 124, 130, 131, 195, 379, 381, 383], "caller": [37, 103, 107, 123, 124, 130, 131, 195], "register_module_full_backward_hook": [37, 103, 107, 123, 124, 130, 131, 195], "register_full_backward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "backward_pr": [37, 103, 107, 123, 124, 130, 131, 195], "register_module_full_backward_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "register_load_state_dict_post_hook": [37, 103, 107, 123, 124, 130, 131, 195], "incompatible_kei": [37, 103, 107, 123, 124, 130, 131, 195], "register_load_state_dict_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "local_metadata": [37, 103, 107, 123, 124, 130, 131, 195], "error_msg": [37, 103, 107, 123, 124, 130, 131, 195], "noqa": [37, 103, 107, 123, 124, 130, 131, 195], "b950": [37, 103, 107, 123, 124, 130, 131, 195], "register_modul": [37, 103, 107, 123, 124, 130, 131, 195, 375], "alia": [37, 42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 82, 89, 91, 95, 103, 107, 123, 124, 130, 131, 195], "register_paramet": [37, 103, 107, 123, 124, 130, 131, 195], "register_state_dict_post_hook": [37, 103, 107, 123, 124, 130, 131, 195], "register_state_dict_pre_hook": [37, 103, 107, 123, 124, 130, 131, 195], "keep_var": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "requires_grad_": [37, 103, 107, 123, 124, 130, 131, 195], "autograd": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307], "freez": [37, 103, 107, 123, 124, 130, 131, 193, 195], "finetun": [37, 103, 107, 123, 124, 130, 131, 195], "gan": [37, 103, 107, 123, 124, 130, 131, 195], "set_submodul": [37, 103, 107, 123, 124, 130, 131, 195], "overid": [37, 103, 107, 123, 124, 130, 131, 195], "share_memori": [37, 103, 104, 107, 123, 124, 130, 131, 195, 378], "share_memory_": [37, 103, 107, 123, 124, 130, 131, 195, 396], "destin": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 145, 152, 153, 155, 187, 189, 193, 195, 204, 287, 307, 338], "averag": [37, 103, 107, 123, 124, 130, 131, 187, 193, 195, 268, 269, 287, 295, 296, 307, 353, 378, 380], "shallow": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 307, 381], "detach": [37, 103, 107, 123, 124, 130, 131, 187, 195, 287, 298, 302, 307, 309, 318, 319, 320, 321, 378], "non_block": [37, 41, 43, 46, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 381], "memory_format": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "channels_last": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "unchang": [37, 103, 107, 123, 124, 130, 131, 150, 154, 169, 183, 186, 187, 189, 191, 195, 264, 273, 352, 378, 394], "tri": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 386], "pin": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "4d": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "ignore_w": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "1913": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "3420": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "5113": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "2325": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "torch_doctest_cuda1": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "gpu1": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "1914": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "5112": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 392], "2324": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "float16": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 222, 226, 273], "cdoubl": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "3741": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "j": [37, 42, 79, 80, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 375, 384], "2382": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "5593": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273, 392], "4443": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "complex128": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "6122": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "1150": [37, 103, 107, 123, 124, 130, 131, 150, 169, 183, 186, 187, 189, 191, 195, 273], "to_empti": [37, 103, 107, 123, 124, 130, 131, 195], "dst_type": [37, 103, 107, 123, 124, 130, 131, 195], "xpu": [37, 103, 107, 123, 124, 130, 131, 195], "set_to_non": [37, 103, 107, 123, 124, 130, 131, 195], "row": [38, 49, 112, 113], "unidimension": 40, "keepdim": 40, "user_regist": 40, "priori": 40, "uniqu": [40, 87, 88, 117, 118, 146, 156, 182, 183, 184, 267, 345, 385, 394], "discretebox": [40, 103, 107, 123, 124, 130, 131, 383, 390, 391, 397], "chosen_data": [41, 70], "rewarddata": [41, 70, 371], "rejected_data": [41, 70], "from_dataset": [41, 43, 70], "dataset_nam": [41, 43, 47, 54, 70, 122], "max_length": [41, 43, 44, 52, 54, 70, 387], "550": [41, 43, 47, 54, 70, 87, 88, 392], "root_dir": [41, 43, 54, 70], "from_disk": [41, 43, 54, 70], "carperai": [41, 43, 47, 54], "openai_summarize_comparison": [41, 43, 54], "sequen": [41, 43], "load_from_disk": [41, 43, 54, 70], "load_dataset": [41, 43, 54, 70], "attention_mask": [41, 43, 44, 46, 47, 52, 54, 70], "92534": 41, "input_id": [41, 43, 44, 46, 47, 52, 54, 70], "end_scor": [41, 46, 47, 70], "sub_data": [41, 43], "from_tensordict": [41, 43, 46], "non_tensordict": [41, 43, 46], "getattr": [41, 43, 46], "tensorclass": [41, 43, 46, 70, 74, 75, 95], "proxi": [41, 43, 46, 232, 241, 270, 374], "load_memmap": [41, 43, 46], "load_": [41, 43, 46], "load_memmap_": [41, 43, 46], "fetch": [41, 43, 46, 99, 100, 101, 102, 163, 383, 393, 394], "fromkei": [41, 43, 46], "memmap": [41, 43, 46, 74, 123, 130, 193, 338, 340, 352, 394], "saved_td": [41, 43, 46], "td_load": [41, 43, 46], "fake": [41, 43, 46, 103, 107, 123, 124, 130, 131, 378, 379], "_subclass": [41, 43, 46], "faketensormod": [41, 43, 46], "faketensor": [41, 43, 46], "from_flatten": [41, 43, 46], "attemptedli": [41, 43, 46], "copy_exist": [41, 43, 46], "return_earli": [41, 43, 46], "share_non_tensor": [41, 43, 46], "mimic": [41, 43, 46, 103, 107, 123, 124, 130, 131], "cross": [41, 43, 46, 207], "anymor": [41, 43, 46, 187, 273], "tensordictfutur": [41, 43, 46], "deepli": [41, 43, 46], "insid": [41, 43, 46, 123, 397], "memmap_": [41, 43, 46, 193], "memmap_lik": [41, 43, 46], "contentless": [41, 43, 46], "1_000_000": [41, 42, 43, 45, 46, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 87, 378, 381, 390], "alloc": [41, 43, 46, 75, 231, 232, 378], "memmap_refresh_": [41, 43, 46], "refresh": [41, 43, 46, 387, 390, 391], "saved_path": [41, 43, 46], "setattr": [41, 43, 46], "tent": [41, 43, 46, 54], "to_tensordict": [41, 43, 46, 381], "unbind": [41, 42, 43, 45, 46, 50, 51, 223, 227], "alpha": [42, 50, 79, 80, 208, 209, 211, 212, 213, 214, 220, 233, 285, 287, 293, 303, 305, 307, 309, 378, 394, 396], "ep": [42, 50, 79, 80, 165, 193, 206, 268, 269, 286, 308, 353, 378, 379, 381, 384, 387], "1e": [42, 50, 79, 80, 165, 193, 206, 216, 219, 238, 249, 378, 379, 380, 391], "08": [42, 50, 79, 80, 378, 379, 380, 390, 392], "pin_memori": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 168, 378, 396], "schaul": [42, 79, 80], "quan": [42, 79, 80], "antonogl": [42, 79, 80], "silver": [42, 79, 80], "2015": [42, 79, 80], "ab": [42, 64, 67, 69, 79, 80, 99, 100, 101, 102, 112, 113, 117, 118, 120, 121, 127, 132, 133, 145, 169, 189, 193, 206, 210, 215, 219, 220, 225, 230, 237, 239, 240, 243, 245, 246, 252, 284, 285, 289, 290, 291, 292, 295, 296, 297, 299, 300, 303, 304, 307, 393], "1511": [42, 79, 80, 220], "05952": [42, 79, 80], "expon": [42, 50, 79, 80], "\u03b1": [42, 50, 79, 80], "delta": [42, 50, 79, 80, 221, 225, 249, 270, 274, 371, 374, 390], "null": [42, 50, 79, 80, 144], "1_000": [42, 45, 50, 51, 390, 394], "merg": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 392], "mini": [42, 45, 50, 51, 61, 63, 64, 65, 66, 67, 68, 69, 391], "decid": [42, 45, 50, 51, 390, 396], "meth": [42, 45, 50, 51, 223, 227, 302, 392], "incompat": [42, 45, 50, 51, 306, 394], "drop_last": [42, 45, 50, 51, 86, 88], "notion": [42, 45, 50, 51], "caution": [42, 45, 50, 51, 86, 197, 397], "codebas": [42, 45, 50, 51, 392], "approach": [42, 45, 50, 51, 165, 206, 233, 234, 309, 378, 380, 384, 385, 390, 397], "return_info": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 79, 80, 82, 394], "tensordictprioritizedreplaybuff": [42, 371, 396], "simplifi": [42, 383, 392, 394], "_weight": [42, 50, 79, 80, 394, 396], "arrai": [42, 47, 79, 103, 107, 123, 124, 130, 131, 156, 221, 222, 225, 226, 378, 390, 394], "update_prior": [42, 79, 80, 352, 375, 379, 394, 396], "36278465": 42, "invert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 282, 380], "tqdm": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 355, 378, 380, 381, 390, 391, 392], "randomsampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 378, 390], "td_error": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 287, 288, 289, 291, 292, 293, 294, 300, 302, 305, 307, 309, 310, 316, 378, 384, 394, 396], "update_tensordict_prior": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 378, 394, 396], "insert_transform": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82, 141, 187], "insert": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 82, 83, 93, 94, 97, 98, 141, 150, 187, 188], "set_sampl": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_storag": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "set_writ": [42, 45, 50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 82], "prompt_rindex": [43, 44, 47], "promptdatatldr": 43, "116722": 43, "prompt": [44, 47], "return_tensordict": [44, 52], "recip": [44, 103, 107, 123, 124, 130, 131, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280], "text": [44, 47, 52, 65, 221, 222, 225, 226, 268, 269, 380], "tensodict": [44, 52], "orign": [44, 52], "valid_sampl": 44, "eough": 44, "toknen": 44, "meet": 44, "criterion": 44, "autotoken": [44, 52, 54], "from_pretrain": [44, 47, 52], "gpt2": [44, 47, 52, 54, 210, 215, 242], "pad_token": [44, 52], "eos_token": 44, "enough": [44, 394], "inde": [44, 154, 380, 392], "storagecheckpointerbas": [45, 89], "roundrobinwrit": [45, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "Not": [45, 99, 100, 112, 223, 227], "depth": [45, 103, 107, 119, 123, 124, 127, 130, 131, 207, 208, 209, 211, 212, 213, 214, 219, 220, 228, 230, 233, 234, 235, 239, 240, 262, 373, 379, 382, 384, 385, 389, 390, 391, 394], "_pytre": [45, 394], "tree_map": [45, 394], "did": [45, 192, 324, 379, 380, 385, 394, 397], "assert0": [45, 394], "ref_model": 47, "reward_model": [47, 279], "max_new_token": 47, "score_clip": 47, "kl_schedul": 47, "klcontrollerbas": 47, "num_step": 47, "causal": 47, "sentenc": 47, "frozen": [47, 163, 193], "gpt2rewardmodel": 47, "get_dataload": [47, 371], "promptdata": [47, 371], "gpt2lmheadmodel": 47, "dl": 47, "block_siz": [47, 70], "tensorclass_typ": [47, 70], "openai_summarize_tldr": 47, "config_class": 47, "model_path": 47, "rollout_from_model": 47, "rollout_from_data": 47, "600": [47, 386, 392, 394], "reward_kl": [47, 163], "reward_raw": 47, "sample_log_prob": [47, 256, 257, 258, 270, 274, 276, 304, 380, 383, 391, 396], "create_rollout_td": 47, "log_prob": [47, 216, 231, 232, 241, 251, 274, 287], "log_ratio": 47, "replic": [47, 374], "rindex": 47, "eo": 47, "term": [47, 163, 225, 226, 236, 237, 283, 284, 293, 357, 379, 380, 382, 383, 391], "generation_config": 47, "generationconfig": 47, "ti": [47, 327, 328, 329, 330, 332, 333, 334, 335, 379], "log_probs_gen": 47, "logprobs_of_label": 47, "220": [48, 392], "priority_kei": [50, 51, 62, 79, 287, 289, 292, 293, 294, 300, 302, 305, 307, 309, 310, 316, 394, 396], "reduct": [50, 79, 80, 93, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 303, 304, 305, 306, 307, 309, 310], "prioritizedreplaybuff": [50, 371, 396], "min": [50, 79, 80, 93, 250, 251, 268, 269, 285, 286, 287, 293, 303, 305, 307, 379, 380], "median": [50, 79, 80, 93, 112, 113, 139, 270, 274], "include_info": [50, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69], "huggingfac": [52, 64, 69, 266], "co": [52, 156, 392], "pad_trunc": 52, "am": 52, "me": 52, "reassur": 52, "ok": 52, "tokenizer_fn": 54, "tensordicttoken": [54, 371], "pre_tokenization_hook": 54, "valid_s": 54, "tokenizer_class": 54, "tokenizer_model_nam": 54, "tokein": 54, "elementwis": 54, "vocabulari": 54, "loader": [54, 380], "185068": 54, "dataset_to_tensordict": 54, "data_dir": 54, "batch_dim": [54, 369], "valid_mask_kei": 54, "conver": 54, "batch_dimens": 54, "filder": 54, "from_dict": 54, "data_memmap": 54, "recurse_through_entri": 58, "recurse_through_stack": 58, "consolid": 58, "dataset_id": [61, 63, 64, 65, 67, 68, 69], "num_proc": 61, "slice_len": [61, 67, 80, 87, 88, 338], "strict_len": 61, "arari": 61, "2600": 61, "million": [61, 381], "consequ": [61, 72, 225, 385], "50x10": 61, "available_dataset": [61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 88], "ataridqn": 61, "immutabledatasetwrit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "shorter": [61, 67, 80, 87, 88], "Be": [61, 67, 80, 87, 88], "game_nam": 61, "krull": 61, "1d": [61, 79, 80, 87, 88, 93], "cheapli": 61, "nontensordata": [61, 67, 336], "invalid_rang": 61, "999998": 61, "999999": 61, "add_count": 61, "84": [61, 173, 379, 381, 391, 392], "valueestim": [61, 284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 312, 316, 371, 374, 378, 390, 391], "convolut": [61, 208, 209, 211, 212, 233, 247, 383], "2657628": 61, "2657629": 61, "2657630": 61, "2657631": 61, "2657632": 61, "2657633": 61, "2657634": 61, "2657635": 61, "2657636": 61, "2657637": 61, "2657638": 61, "2657639": 61, "2657640": 61, "2657641": 61, "2657642": 61, "2657643": 61, "2657644": 61, "2657645": 61, "2657646": 61, "2657647": 61, "2657648": 61, "2657649": 61, "2657650": 61, "2657651": 61, "2657652": 61, "2657653": 61, "2657654": 61, "2657655": 61, "2657656": 61, "2657657": 61, "2657658": 61, "2657659": 61, "2657660": 61, "2657661": 61, "2657662": 61, "2657663": 61, "2657664": 61, "2657665": 61, "2657666": 61, "2657667": 61, "2657668": 61, "2657669": 61, "2657670": 61, "2657671": 61, "2657672": 61, "2657673": 61, "2657674": 61, "2657675": 61, "2657676": 61, "2657677": 61, "2657678": 61, "2657679": 61, "2657680": 61, "2657681": 61, "2657682": 61, "2657683": 61, "2657684": 61, "2657685": 61, "2657686": 61, "2657687": 61, "2657688": 61, "2657689": 61, "2657690": 61, "2657691": 61, "1995687": 61, "1995688": 61, "1995689": 61, "1995690": 61, "1995691": 61, "1995692": 61, "1995693": 61, "1995694": 61, "1995695": 61, "1995696": 61, "1995697": 61, "1995698": 61, "1995699": 61, "1995700": 61, "1995701": 61, "1995702": 61, "1995703": 61, "1995704": 61, "1995705": 61, "1995706": 61, "1995707": 61, "1995708": 61, "1995709": 61, "1995710": 61, "1995711": 61, "1995712": 61, "1995713": 61, "1995714": 61, "1995715": 61, "1995716": 61, "1995717": 61, "1995718": 61, "1995719": 61, "1995720": 61, "1995721": 61, "1995722": 61, "1995723": 61, "1995724": 61, "1995725": 61, "1995726": 61, "1995727": 61, "1995728": 61, "1995729": 61, "1995730": 61, "1995731": 61, "1995732": 61, "1995733": 61, "1995734": 61, "1995735": 61, "1995736": 61, "1995737": 61, "1995738": 61, "1995739": 61, "1995740": 61, "1995741": 61, "1995742": 61, "1995743": 61, "1995744": 61, "1995745": 61, "1995746": 61, "1995747": 61, "1995748": 61, "1995749": 61, "1995750": 61, "left": [61, 63, 67, 80, 87, 143, 150, 151, 152, 153, 157, 163, 169, 171, 172, 178, 181, 184, 186, 189, 191, 195, 233, 264, 379, 380, 385, 386], "untouch": [61, 67, 143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 195], "_max_run": 61, "dataset_asterix": 61, "asterix": 61, "dataset_pong": 61, "sample_from_al": [61, 82, 85], "buffer_id": [61, 85, 91], "hidden": [61, 123, 130, 145, 211, 219, 221, 222, 223, 225, 226, 227, 239, 240, 245, 246, 256, 257, 258, 261, 273, 276, 286, 301, 304, 373, 381, 389, 396], "data_path": [61, 62, 63, 64, 65, 66, 67, 68, 69], "data_path_root": [61, 62, 63, 64, 65, 66, 67, 68, 69], "delet": [61, 62, 63, 64, 65, 66, 67, 68, 69, 147, 345], "chunksiz": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pool": [61, 62, 63, 64, 65, 66, 67, 68, 69, 184], "max_tasks_per_child": [61, 62, 63, 64, 65, 66, 67, 68, 69], "worker_thread": [61, 62, 63, 64, 65, 66, 67, 68, 69], "index_with_gener": [61, 62, 63, 64, 65, 66, 67, 68, 69], "pbar": [61, 62, 63, 64, 65, 66, 67, 68, 69, 378, 380, 381, 390, 391, 392], "dest": [61, 62, 63, 64, 65, 66, 67, 68, 69, 169, 189, 191, 273], "num_fram": [61, 62, 63, 64, 65, 66, 67, 68, 69], "unitari": [61, 62, 63, 64, 65, 66, 67, 68, 69, 392], "minariexperiencereplai": [61, 62, 63, 64, 66, 67, 68, 69], "1000000": [61, 62, 63, 64, 65, 66, 67, 68, 69], "distance_from_origin": [61, 62, 63, 64, 65, 66, 67, 68, 69], "forward_reward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qpo": [61, 62, 63, 64, 65, 66, 67, 68, 69], "qvel": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_ctrl": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "reward_forward": [61, 62, 63, 64, 65, 66, 67, 68, 69], "reward_surv": [61, 62, 63, 64, 65, 66, 67, 68, 69], "x_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "x_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 123], "y_posit": [61, 62, 63, 64, 65, 66, 67, 68, 69], "y_veloc": [61, 62, 63, 64, 65, 66, 67, 68, 69], "achieved_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "desired_go": [61, 62, 63, 64, 65, 66, 67, 68, 69], "27": [61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 100, 123, 130, 377, 378, 379, 390, 392, 393, 395], "_collate_id": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x120e21dc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cattensor": [61, 62, 63, 64, 65, 66, 67, 68, 69, 103, 107, 123, 124, 130, 131, 378, 389, 392, 397], "cat_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "cat_next_tensor": [61, 62, 63, 64, 65, 66, 67, 68, 69], "new_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "31": [61, 62, 63, 64, 65, 66, 67, 68, 69, 112, 113, 377, 379, 390, 392, 393, 395], "full_storag": [61, 62, 63, 64, 65, 66, 67, 68, 69], "0x168406fc0": [61, 62, 63, 64, 65, 66, 67, 68, 69], "from_env": 63, "use_truncated_as_don": 63, "direct_download": 63, "terminate_on_end": 63, "env_kwarg": [63, 68, 69, 143, 367, 368, 378], "reconstruct": [63, 87, 88, 296, 378, 397], "get_dataset": 63, "qlearning_dataset": 63, "fewer": [63, 80, 87], "possess": 63, "unexpectedli": 63, "traj_split": 63, "observationnorm": [63, 193, 369, 378, 379, 380, 381, 396], "maze2d": 63, "umaz": 63, "loc": [63, 103, 107, 123, 124, 130, 131, 163, 165, 176, 193, 224, 238, 250, 251, 256, 257, 258, 270, 274, 276, 284, 285, 287, 300, 304, 305, 306, 307, 359, 369, 373, 378, 379, 380, 381, 383, 391, 396], "gen": 64, "dgrl": 64, "accompani": [64, 143, 181], "gap": 64, "2312": 64, "05742": 64, "gen_dgrl": 64, "procgen": 64, "bigfish": 64, "bossfight": 64, "categori": [64, 373, 375], "1m_e": 64, "1m_": 64, "comma": 64, "npy": 64, "extract": [64, 142, 266, 378, 380, 396], "mmap": [64, 68, 69], "minut": [64, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "internet": [64, 69], "connect": [64, 69], "minari": 65, "websit": [65, 67], "currenrtli": 65, "minari_data": 65, "door": 65, "torchrl_logg": [65, 387], "28": [65, 233, 378, 379, 380, 392, 393], "door_body_po": 65, "dua": 66, "graff": 66, "2017": 66, "uci": 66, "archiv": 66, "ic": 66, "edu": 66, "ml": 66, "sklearn": [66, 122], "adult_num": [66, 122], "adult_onehot": [66, 122], "mushroom_num": [66, 122], "mushroom_onehot": [66, 122], "covertyp": [66, 122], "shuttl": [66, 122], "magic": [66, 122, 382], "shuffl": [67, 86, 88, 391], "embodi": [67, 393], "institut": 67, "demonstr": [67, 380, 385, 390, 391, 392, 394, 397], "527": [67, 392], "skill": 67, "160266": 67, "googl": [67, 68, 99, 100, 117, 118, 206, 380, 381, 390, 391], "open_x_embodi": 67, "2310": [67, 127], "08864": 67, "language_instruct": 67, "get_non_tensor": 67, "nor": 67, "insuffici": 67, "chosen": [67, 132, 133, 182, 183, 243, 244, 252, 272, 338, 373, 386], "openx": 67, "__will": 67, "change__": 67, "randomli": [67, 86, 131, 164, 165, 183, 264, 270, 274, 383, 390, 391, 392, 394], "crop": [67, 148, 170, 338], "modal": [67, 378], "cmu_stretch": [67, 338], "is_init": [67, 69, 145, 162, 223, 227, 267, 268, 269, 281, 381], "language_embed": 67, "512": [67, 220, 379, 392], "lift": 67, "green": [67, 390], "garbag": 67, "lid": 67, "roboset": 68, "h5": [68, 69, 72], "roboh": [68, 127], "concis": [68, 384], "75": [68, 378, 379, 381, 391, 392, 394], "totensor": 69, "image_s": 69, "v": [69, 193, 221, 222, 225, 226, 256, 292, 300, 307, 373, 378, 379], "npz": 69, "2206": [69, 120, 121], "04779": [69, 285, 291], "vd4rl": 69, "squar": [69, 148, 151, 224, 250, 251, 338], "rectangular": [69, 208, 209], "walker_walk": 69, "64px": 69, "height": [69, 148, 151, 173], "veloc": [69, 101, 102, 103, 107, 123, 124, 130, 131, 146, 390, 391, 392, 397], "infinit": [70, 117, 118, 132, 133, 385, 394], "block": [70, 73, 98, 373, 381, 390], "pairwisedataset": [70, 371], "256": [70, 117, 118, 215, 379, 380, 390, 391, 392], "checkpoint_fil": 72, "h5_kwarg": 72, "iff": 72, "suffix": [72, 351], "h5py": 72, "create_dataset": 72, "temporarili": [72, 197, 385, 394], "immut": [73, 103, 107, 123, 130, 172, 187], "piec": [73, 83, 94, 97, 98, 378, 379, 380, 386, 390, 391, 392, 394], "scratch_dir": [74, 378, 394], "sent": [74, 75, 95, 193], "mistak": [74, 75, 95], "tensorstoragecheckpoint": 74, "pathlib": 74, "main_ckpt_dir": 74, "rb_memmap": 74, "10_000_000": 74, "myclass": [74, 75, 95], "foo": [74, 75, 95, 261, 394, 397], "bar": [74, 75, 95, 261, 348, 349, 351, 355, 375, 379], "attach": [74, 75, 76, 89, 91, 95, 379], "entiti": [74, 75, 76, 89, 91, 95], "zero_": [75, 95, 201], "liststoag": 77, "max_capac": [79, 80, 378, 394], "max_priority_within_buff": [79, 80], "data_0": 79, "data_1": 79, "smoothen": 79, "tdrb": 79, "pack": [79, 221, 225, 380, 382, 397], "nd": [79, 80], "sum_tre": [79, 80], "min_tre": [79, 80], "end_kei": [80, 87, 88], "cache_valu": [80, 87, 88], "closer": 80, "readili": [80, 87, 88], "conjunct": [80, 87, 88, 379], "Will": [80, 87, 120, 338], "buffer0": [80, 87], "immutablewrit": [80, 87], "buffer1": [80, 87], "other_sampl": [80, 87], "short": [80, 87, 88, 99, 100, 112, 113, 123, 197, 225, 226, 379, 380, 382, 383, 391, 394], "unsqueez": [80, 140, 143, 146, 147, 185, 188, 201, 378, 381, 390, 391, 392], "tolist": 80, "120110917137936e": 80, "06": [80, 216, 249, 378, 379, 380, 391, 392, 393], "uniformli": [81, 302, 397], "storageensembl": [82, 85], "samplerensembl": 82, "writerensembl": [82, 91], "num_buffer_sampl": [82, 85], "ensembl": [82, 85, 91, 92, 98, 273, 305], "forbidden": 82, "collat": 82, "0x13a2ef430": 82, "0x13a2f9310": 82, "interpol": [82, 173, 379, 381], "interpolationmod": [82, 381], "bilinear": [82, 173, 381], "0x13a2f9220": 82, "0x13a2f9f70": 82, "0x13a2d9b50": 82, "0x13a2f95b0": 82, "0x128648260": 82, "kw": [83, 94], "roundrobin": [83, 94], "incomplet": [86, 88], "fresh": 86, "haven": [86, 393], "remain": [86, 145, 153, 154, 163, 182, 237, 384], "draw": [86, 264], "slicesamplerwithoutreplac": [87, 394], "320": [87, 88, 101, 102, 377, 379, 390, 391, 392, 395], "700": [87, 88], "dataid": [87, 88], "__len__": 89, "rank_kei": 93, "rank": [93, 207], "samplerwithoutreplac": [93, 380, 391, 394], "get_insert_index": 93, "convers": [99, 100, 112, 113, 374], "2106": [99, 100, 290, 309], "13281": [99, 100], "categorical_action_encod": [99, 100, 103, 106, 107, 108, 109, 112, 113, 120, 121, 123, 124, 127, 130, 131], "frame_skip": [99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 120, 121, 127, 160, 348, 351, 358, 375, 378, 379, 380, 396], "repeat": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 207, 380, 390, 391, 392], "allow_done_after_reset": [99, 100, 101, 102, 103, 106, 108, 109, 112, 113, 120, 121, 127], "toler": [99, 100, 101, 102, 106, 108, 109, 112, 113, 120, 121, 127, 216, 249], "availalb": [99, 100, 112, 113], "is_avail": [99, 100, 378, 379, 380, 381, 390, 391, 393], "els": [99, 100, 143, 221, 222, 225, 226, 239, 373, 375, 378, 379, 380, 381, 390, 391, 392, 393], "ant": [99, 100, 103, 107, 110, 123, 124, 130, 131, 393, 397], "87": [99, 100, 379, 392], "acrobot": [99, 100, 101, 102, 397], "advant": [99, 100, 112, 113], "timer": [99, 100, 112, 113], "timeit": [99, 100, 112, 113], "310": [99, 100, 392], "ms": [99, 100, 112, 113], "268": [99, 100, 392], "433": [99, 100, 378, 392], "80": [99, 100, 378, 379, 380, 390, 391, 392, 393], "213": [99, 100, 392], "8605": [99, 100], "pipelineenv": 100, "get_environ": 100, "dm_control": [101, 102, 378, 389, 397], "2006": [101, 102, 285, 291, 392], "12983": [101, 102], "task_nam": [101, 103, 107, 123, 124, 130, 131], "cheetah": [101, 102, 103, 107, 123, 124, 130, 131, 338, 378], "240": [101, 102, 392, 396], "swingup": [101, 102, 397], "swingup_spars": [101, 102], "ball_in_cup": [101, 102], "catch": [101, 102], "balance_spars": [101, 102], "three_pol": [101, 102], "two_pol": [101, 102], "finger": [101, 102], "turn_easi": [101, 102], "turn_hard": [101, 102], "fish": [101, 102], "upright": [101, 102, 379], "swim": [101, 102], "hopper": [101, 102], "hop": [101, 102], "humanoid": [101, 102, 123, 130, 389], "walk": [101, 102, 123, 130, 379, 389], "run_pure_st": [101, 102], "bring_bal": [101, 102], "bring_peg": [101, 102], "insert_bal": [101, 102], "insert_peg": [101, 102], "point_mass": [101, 102], "reacher": [101, 102], "swimmer": [101, 102], "swimmer6": [101, 102], "swimmer15": [101, 102], "walker": [101, 102], "dog": [101, 102], "trot": [101, 102], "humanoid_cmu": [101, 102], "lqr": [101, 102], "lqr_2_1": [101, 102], "lqr_6_2": [101, 102], "quadrup": [101, 102], "escap": [101, 102], "stacker": [101, 102], "stack_2": [101, 102], "stack_4": [101, 102], "deviceless": 103, "run_type_check": [103, 119], "counterenv": 103, "continuousbox": [103, 107, 123, 124, 130, 131, 201, 380, 390, 391, 392, 396, 397], "sort": [103, 107, 123, 124, 130, 131, 147, 268, 269], "another_act": [103, 107, 123, 124, 130, 131], "mutabl": [103, 107, 123, 124, 130, 131], "_callabletransform": [103, 107, 123, 124, 130, 131], "batch_lock": [103, 105, 107, 123, 130, 143, 183, 187, 392], "done_keys_group": [103, 107, 123, 124, 130, 131], "outer": [103, 107, 123, 124, 130, 131, 375, 378, 379, 397], "another_don": [103, 107, 123, 124, 130, 131], "empty_cach": [103, 107, 123, 124, 130, 131, 187], "fake_tensordict": [103, 107, 123, 124, 130, 131, 379], "silent": [103, 107, 123, 124, 130, 131, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 235, 238, 239, 240, 242, 245, 246, 248, 253, 259, 260, 261, 263, 264, 267, 268, 269, 272, 277, 280], "braxenv": [103, 107, 123, 124, 130, 131, 172, 371, 382], "envnam": [103, 107, 123, 124, 130, 131], "pipeline_st": [103, 107, 123, 124, 130, 131], "attibut": [103, 107, 123, 124, 130, 131], "maybe_reset": [103, 107, 123, 124, 130, 131], "speak": [103, 107, 123, 124, 130, 131, 378], "rand_act": [103, 107, 116, 123, 124, 125, 126, 130, 131, 143, 382], "register_gym": [103, 107, 123, 124, 130, 131, 382], "entry_point": [103, 107, 123, 124, 130, 131], "info_kei": [103, 107, 123, 124, 130, 131], "reward_threshold": [103, 107, 123, 124, 130, 131], "nondeterminist": [103, 107, 123, 124, 130, 131], "max_episode_step": [103, 106, 107, 108, 123, 124, 130, 131], "order_enforc": [103, 107, 123, 124, 130, 131], "autoreset": [103, 107, 123, 124, 130, 131], "disable_env_check": [103, 106, 107, 120, 121, 123, 124, 130, 131], "apply_api_compat": [103, 107, 123, 124, 130, 131], "nasium": [103, 107, 123, 124, 130, 131], "scope": [103, 107, 123, 124, 130, 131, 397], "dmcontrolenv": [103, 107, 123, 124, 130, 131, 338, 371, 378, 382, 389, 397], "dmc": [103, 107, 123, 124, 130, 131], "removeemptyspec": [103, 107, 123, 124, 130, 131], "threshold": [103, 107, 123, 124, 130, 131, 264, 285, 286, 380], "learnt": [103, 107, 123, 124, 130, 131, 365], "knowledg": [103, 107, 123, 124, 130, 131, 384, 386], "checker": [103, 106, 107, 120, 121, 123, 124, 130, 131], "stepapicompat": [103, 107, 123, 124, 130, 131], "concept": [103, 107, 123, 124, 130, 131, 379, 394], "deem": [103, 107, 117, 118, 123, 124, 130, 131, 132, 133], "envgym": [103, 107, 123, 124, 130, 131], "0855": [103, 107, 123, 124, 130, 131], "0215": [103, 107, 123, 124, 130, 131], "0881": [103, 107, 123, 124, 130, 131], "0412": [103, 107, 123, 124, 130, 131], "1101": [103, 107, 123, 124, 130, 131], "0080": [103, 107, 123, 124, 130, 131], "0254": [103, 107, 123, 124, 130, 131], "0424": [103, 107, 123, 124, 130, 131], "9609e": [103, 107, 123, 124, 130, 131], "9776e": [103, 107, 123, 124, 130, 131], "04": [103, 107, 111, 123, 124, 130, 131, 378, 379, 380, 390, 392, 393], "6347e": [103, 107, 123, 124, 130, 131], "3842e": [103, 107, 123, 124, 130, 131], "5338e": [103, 107, 123, 124, 130, 131], "3064e": [103, 107, 123, 124, 130, 131], "0381e": [103, 107, 123, 124, 130, 131], "6656e": [103, 107, 123, 124, 130, 131], "05": [103, 107, 123, 124, 130, 131, 206, 377, 378, 379, 390, 392, 393, 395], "0204e": [103, 107, 123, 124, 130, 131], "action_spac": [103, 107, 123, 124, 130, 131, 156, 218, 244, 262, 263, 271, 272, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 381, 383, 387], "0833": [103, 107, 123, 124, 130, 131], "0275": [103, 107, 123, 124, 130, 131], "0612": [103, 107, 123, 124, 130, 131], "0770": [103, 107, 123, 124, 130, 131, 392], "1256": [103, 107, 123, 124, 130, 131, 392], "0082": [103, 107, 123, 124, 130, 131], "0186": [103, 107, 123, 124, 130, 131], "0476": [103, 107, 123, 124, 130, 131], "2221": [103, 107, 123, 124, 130, 131], "2256": [103, 107, 123, 124, 130, 131], "5930": [103, 107, 123, 124, 130, 131], "6937": [103, 107, 123, 124, 130, 131], "5865": [103, 107, 123, 124, 130, 131], "5479": [103, 107, 123, 124, 130, 131], "0187": [103, 107, 123, 124, 130, 131], "6825": [103, 107, 123, 124, 130, 131, 392], "5224": [103, 107, 123, 124, 130, 131], "0018": [103, 107, 123, 124, 130, 131, 392], "1005": [103, 107, 123, 124, 130, 131], "0335": [103, 107, 123, 124, 130, 131], "0268": [103, 107, 123, 124, 130, 131, 392], "0133": [103, 107, 123, 124, 130, 131], "0627": [103, 107, 123, 124, 130, 131], "0074": [103, 107, 123, 124, 130, 131, 392], "0488": [103, 107, 123, 124, 130, 131, 392], "0353": [103, 107, 123, 124, 130, 131], "0075": [103, 107, 123, 124, 130, 131, 392], "0069": [103, 107, 123, 124, 130, 131, 392], "0098": [103, 107, 123, 124, 130, 131, 392], "0058": [103, 107, 123, 124, 130, 131, 392], "0033": [103, 107, 123, 124, 130, 131, 392], "0157": [103, 107, 123, 124, 130, 131], "0004": [103, 107, 123, 124, 130, 131, 381, 392], "0381": [103, 107, 123, 124, 130, 131], "0452": [103, 107, 123, 124, 130, 131], "11355747": [103, 107, 123, 124, 130, 131], "04257728": [103, 107, 123, 124, 130, 131], "00408397": [103, 107, 123, 124, 130, 131], "04155852": [103, 107, 123, 124, 130, 131], "0389733": [103, 107, 123, 124, 130, 131], "01409826": [103, 107, 123, 124, 130, 131], "0978704": [103, 107, 123, 124, 130, 131], "08808327": [103, 107, 123, 124, 130, 131], "03970837": [103, 107, 123, 124, 130, 131], "00535434": [103, 107, 123, 124, 130, 131], "02353762": [103, 107, 123, 124, 130, 131], "05116226": [103, 107, 123, 124, 130, 131], "02788907": [103, 107, 123, 124, 130, 131], "06848346": [103, 107, 123, 124, 130, 131], "05154399": [103, 107, 123, 124, 130, 131], "0371798": [103, 107, 123, 124, 130, 131], "05128025": [103, 107, 123, 124, 130, 131], "dydact": [103, 107, 123, 124, 130, 131], "gym_env": [103, 107, 123, 124, 130, 131, 396], "reset_kei": [103, 107, 123, 124, 130, 131, 146, 177, 182, 183, 184, 390], "multitask": [103, 107, 123, 124, 130, 131], "multiag": [103, 107, 116, 123, 124, 125, 126, 130, 131, 205, 234, 243, 252, 316], "another_reward": [103, 107, 123, 124, 130, 131], "auto_cast_to_devic": [103, 107, 123, 124, 130, 131, 391], "soon": [103, 107, 123, 124, 125, 126, 130, 131], "__sort": [103, 107, 123, 124, 130, 131], "as__": [103, 107, 123, 124, 130, 131], "normal": [103, 107, 123, 124, 130, 131, 165, 193, 206, 208, 209, 224, 228, 231, 232, 238, 250, 251, 259, 260, 270, 274, 286, 287, 301, 304, 351, 353, 369, 373, 375, 381, 383, 391, 397], "argmaxmodul": [103, 107, 123, 124, 130, 131], "n_ob": [103, 107, 123, 124, 130, 131, 163, 267, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 384], "n_act": [103, 107, 123, 124, 130, 131, 163, 284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 384], "ourselv": [103, 107, 123, 124, 130, 131, 380, 397], "emul": [103, 107, 123, 124, 130, 131], "epoch": [103, 107, 123, 124, 130, 131, 355, 380, 390, 391], "input_td": [103, 107, 123, 124, 130, 131], "rollout_td": [103, 107, 123, 124, 130, 131], "state_kei": [103, 107, 123, 124, 130, 131], "prevail": [103, 107, 123, 124, 130, 131, 147, 177, 205], "creator": [104, 360, 361, 367, 368, 369], "substitut": [104, 182, 193, 383], "vecnorm": [104, 369], "env_creat": [104, 378], "test_env1": 104, "_td": 104, "observation_count": [104, 397], "test_env2": 104, "sleep": [104, 397], "ps": 104, "p1": 104, "p2": 104, "9934": 104, "env_str": 105, "device_map": 105, "accross": [106, 108], "registri": 106, "asyncvectorenv": 106, "involv": [106, 108, 109, 117, 118, 127, 143, 223, 227, 382, 384], "pixel_observ": [106, 108, 109, 127], "pixelobservationwrapp": [106, 108, 109, 127], "adventur": [106, 108], "airraid": [106, 108, 397], "alien": [106, 108], "time_limit": 106, "timelimit": [106, 117, 118, 132, 133], "default_info_dict_read": [106, 107, 108, 123], "reader": [106, 107, 108, 123, 379], "set_info_dict_read": [106, 107, 108, 123, 382], "info_dict": [106, 107, 108, 123], "auto_register_info_dict": [106, 107, 108, 123], "multibinari": [106, 108], "multidiscret": [106, 108], "rag": [106, 108], "gym_conversion_exampl": [106, 108], "info_dict_read": [107, 123], "ignore_priv": 107, "baseinfodictread": 107, "tensordictprim": [107, 123, 223, 227, 281, 381], "succe": [107, 123], "underscor": 107, "primer": [107, 183, 223, 227, 281, 381], "halfcheetah": [107, 123, 139, 173, 378], "reward_run": [107, 123], "read_act": 107, "read_don": 107, "nonsens": 107, "fallback": 107, "broken": [107, 197], "read_ob": 107, "dictat": [107, 270, 274, 304, 378, 392], "read_reward": 107, "hoc": [107, 123, 383], "dict_read": 107, "my_info_kei": 107, "some_env": 107, "vecenv": 108, "vectorenv": 108, "secur": 109, "habitat3": 109, "ai": [109, 393], "habitatrenderpick": 109, "isaacgym": [110, 111], "isaacgymwrapp": [110, 371], "isaacgymenv": [111, 371], "webpag": 111, "isaac": 111, "essenc": [111, 382], "instadeepai": [112, 113], "2306": [112, 113], "09884": [112, 113], "snake": [112, 113], "grid": [112, 113, 338], "bodi": [112, 113], "body_st": [112, 113], "fruit_posit": [112, 113], "col": [112, 113], "head_posit": [112, 113], "tail": [112, 113], "game2048": [112, 113], "maze": [112, 113], "cleaner": [112, 113], "cvrp": [112, 113], "multicvrp": [112, 113], "minesweep": [112, 113], "rubikscub": [112, 113], "knapsack": [112, 113], "sudoku": [112, 113], "tsp": [112, 113], "connector": [112, 113], "v2": [112, 113, 128, 129, 313, 327, 328, 329, 330, 332, 333, 334, 335, 381, 397], "mmst": [112, 113], "graphcolor": [112, 113], "partli": [112, 113], "scrambl": [112, 113], "robotwarehous": [112, 113], "tetri": [112, 113], "binpack": [112, 113], "jobshop": [112, 113], "0x1fca91910": 112, "122": [112, 113, 392, 397], "0x1ff9baee0": 112, "134": [112, 113, 392], "0x1ff9ba7c0": 112, "172": [112, 113, 392], "drastic": [113, 123, 394], "rubric": [113, 165, 276], "mo": [114, 115], "minecart": [114, 115], "mo_gym": 115, "qualnam": 116, "leverag": [116, 125, 126, 378, 391, 397], "neural": [116, 125, 126, 208, 209, 247, 273, 373, 379, 380, 381, 383, 390, 391, 392, 397], "group_map": [116, 117, 118, 125, 126, 132, 133, 134, 390], "constructiuon": [116, 125, 126], "premad": [116, 117, 118, 125, 126, 132, 133, 316], "all_in_one_group": [116, 134], "agent_0": [116, 125, 126, 134, 390], "agent_1": [116, 125, 126, 134], "agent_2": [116, 125, 126, 134], "agent_3": 116, "one_group_per_ag": [116, 125, 126], "meltingpot": [117, 118], "2211": [117, 118], "13746": [117, 118], "melt": [117, 118], "pot": [117, 118], "novel": [117, 118, 384], "social": [117, 118], "familiar": [117, 118, 379, 391, 397], "unfamiliar": [117, 118], "broad": [117, 118], "cooper": [117, 118, 390, 391], "decept": [117, 118], "reciproc": [117, 118], "trust": [117, 118, 227], "stubborn": [117, 118], "substrat": [117, 118], "ml_collect": 117, "config_dict": 117, "configdict": 117, "categorical_act": [117, 118, 125, 126, 128, 129, 132, 133], "marlgroupmaptyp": [117, 118, 125, 126, 132, 133, 134, 371, 390], "agent_nam": [117, 118, 132, 133, 134], "agent_names_to_indices_map": [117, 118, 132, 133], "env_torchrl": [117, 118], "commons_harvest__open": [117, 118], "rgb": [117, 118], "144": [117, 118, 392], "192": [117, 118, 379, 392], "collective_reward": [117, 118], "ready_to_shoot": [117, 118], "88": [117, 118, 128, 129, 378, 379, 392, 393], "substrate_config": 118, "get_config": 118, "mp_env": 118, "build_from_config": 118, "default_player_rol": 118, "environn": 119, "mymbenv": [119, 207, 230], "world_model": [119, 207, 230, 296], "hidden_observ": [119, 207, 230], "mlp": [119, 207, 208, 209, 211, 212, 213, 214, 220, 223, 227, 230, 234, 235, 256, 262, 281, 289, 291, 373, 379, 383, 384, 387, 389, 393, 396], "worldmodelwrapp": [119, 207, 230], "activation_class": [119, 207, 208, 209, 211, 212, 213, 214, 219, 220, 228, 230, 233, 234, 379, 383, 390, 391, 396], "relu": [119, 207, 215, 230, 238, 283], "activate_last_lay": [119, 207, 214, 228, 230], "sail": [120, 121], "sg": [120, 121], "10558": [120, 121], "readthedoc": 120, "en": 120, "python_interfac": 120, "envpoolmixin": 121, "env_bas": 121, "task_id": 121, "env_typ": 121, "gym_reset_return_info": 121, "envpool_env": 121, "www": [122, 231, 232], "fetch_openml": 122, "106": [122, 392], "my_env_fun": [123, 130], "custom_attribute_list": [123, 130], "custom_attribut": [123, 130], "custom_method_list": [123, 130], "custom_method": [123, 130], "deploi": [123, 130, 143], "slight": [123, 130, 379], "share_individual_td": [123, 130], "shared_memori": [123, 130], "policy_proof": [123, 130], "ll": [123, 130, 221, 222, 225, 226, 378, 379, 380, 381, 382, 383, 384, 385, 387, 391, 397], "serial_for_singl": [123, 130, 379], "circular": [123, 130, 378], "list_of_kwarg": [123, 130], "com_veloc": [123, 130], "head_height": [123, 130], "joint_angl": [123, 130], "torso_vert": [123, 130], "stringent": [123, 380, 390, 391], "inter": 123, "penv": 123, "env_fix": 123, "influenc": 123, "thumb": [123, 380], "myenv": [123, 143, 152, 155], "pipe": 123, "update_kwarg": [123, 130], "th": [124, 159, 188, 221, 225, 392], "thdot": [124, 392], "max_spe": [124, 392], "max_torqu": [124, 392], "gen_param": [124, 392], "gravit": [124, 392], "torqu": [124, 392], "pettingzoo": [125, 126, 390, 391], "pet": [125, 126], "zoo": [125, 126], "__": [125, 126], "aecenv": [125, 126], "use_mask": [125, 126], "dead": [125, 126], "done_on_ani": [125, 126, 390], "compulsori": [125, 126], "adversary_0": [125, 126, 390], "adversari": [125, 126, 298, 390], "vectoris": [125, 126, 221, 222, 225, 226], "sisl": 125, "multiwalker_v9": 125, "return_st": [125, 126], "aec": [125, 126], "n_piston": [125, 126], "pistonball_v6": [125, 126], "piston": [125, 126], "piston_0": [125, 126], "piston_1": [125, 126], "piston_20": [125, 126], "tictactoe_v3": [125, 126], "player": [125, 126, 131], "player_1": [125, 126], "player_2": [125, 126], "butterfli": 126, "parallel_env": [126, 378, 396, 397], "vikashplu": 127, "wiki": 127, "06828": 127, "from_depth": 127, "smacv2": [128, 129], "starcraft": [128, 129], "challeng": [128, 129, 382, 392, 393], "10gen_terran": [128, 129], "10gen_zerg": [128, 129], "10gen_protoss": [128, 129], "3m": [128, 129], "8m": [128, 129, 393], "25m": [128, 129], "5m_vs_6m": [128, 129], "8m_vs_9m": [128, 129], "10m_vs_11m": [128, 129], "27m_vs_30m": [128, 129], "mmm": [128, 129], "mmm2": [128, 129], "2s3z": [128, 129], "3s5z": [128, 129], "3s5z_vs_3s6z": [128, 129], "3s_vs_3z": [128, 129], "3s_vs_4z": [128, 129], "3s_vs_5z": [128, 129], "1c3s5z": [128, 129], "2m_vs_1z": [128, 129], "corridor": [128, 129], "6h_vs_8z": [128, 129], "2s_vs_1sc": [128, 129], "so_many_banel": [128, 129], "bane_vs_ban": [128, 129], "2c_vs_64zg": [128, 129], "old": [128, 129, 301, 397], "smac": [128, 129], "map_nam": [128, 129], "176": [128, 129, 392, 397], "battle_won": [128, 129], "dead_al": [128, 129], "dead_enemi": [128, 129], "episode_limit": [128, 129], "322": [128, 129, 392], "Or": [128, 129, 233], "procedur": [128, 129], "distribution_config": [128, 129], "n_unit": [128, 129], "n_enemi": [128, 129], "team_gen": [128, 129], "dist_typ": [128, 129], "weighted_team": [128, 129], "unit_typ": [128, 129], "marin": [128, 129], "maraud": [128, 129], "medivac": [128, 129], "exception_unit_typ": [128, 129], "start_posit": [128, 129], "surrounded_and_reflect": [128, 129], "map_x": [128, 129], "map_i": [128, 129], "capability_config": [128, 129], "131": [128, 129, 392], "starcraft2env": 129, "tic": 131, "tac": 131, "toe": 131, "single_play": 131, "player1": 131, "desired_batch_s": 131, "board": 131, "player0": 131, "proroklab": [132, 133], "vectorizedmultiagentsimul": [132, 133], "2207": [132, 133], "03530": [132, 133], "basescenario": 132, "descript": [132, 142, 379, 380], "perfrom": [132, 133], "defaultt": 132, "continuous_act": [132, 133, 336, 390, 391], "repositiori": 132, "sparsiti": 132, "unbatched_action_spec": [132, 133, 391], "unbatched_observation_spec": [132, 133], "unbatched_reward_spec": [132, 133], "het_spec": [132, 133], "het_specs_map": [132, 133], "flock": [132, 133, 336], "agent_collision_rew": [132, 133], "agent_distance_rew": [132, 133], "ca": 134, "environment4": 134, "get_group_map": 134, "sumbodul": 135, "model_bas": [136, 137, 207, 230], "out_keys_inv": [136, 149, 152, 153, 155, 165, 166, 167, 171, 172, 179, 186, 392], "decod": [136, 239], "model_based_env": [136, 295], "dreamerenv": [136, 295, 371], "model_based_env_ev": 136, "num_interv": 139, "out_action_kei": 139, "samplingstrategi": 139, "optino": 139, "intenum": 139, "interv": [139, 337, 338, 347, 357, 379, 392], "action_disc": 139, "transform_input_spec": [139, 143, 150, 152, 153, 154, 165, 167, 171, 172, 177, 181, 182, 183, 186, 188, 190, 195], "masker": 140, "tensor_spec": [140, 196, 205, 292, 293, 304, 306], "maskedenv": 140, "ones_lik": 140, "scatter": 140, "fill_float": 142, "fill_int": 142, "fill_bool": 142, "someenvclass": 142, "autoresetenv": 142, "argumet": 142, "fooenv": 142, "sign": [142, 179, 318, 390], "envtyp": 142, "reshape_fn": 143, "reset_func": 143, "environmt": 143, "request": [143, 170], "tensordict_batch_s": 143, "tensordict_reset": [143, 392], "transform_env_batch_s": [143, 150, 186, 195], "transform_output_spec": [143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 195], "transform_observation_spec": [143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 165, 167, 171, 172, 173, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 192, 193, 195, 392], "transform_reward_spec": [143, 144, 149, 150, 152, 153, 157, 163, 171, 172, 175, 176, 177, 178, 179, 181, 186, 188, 195], "transformfull_done_spec": [143, 150, 152, 153, 157, 163, 171, 172, 178, 181, 186, 195], "biner": 144, "burn_in": 145, "burn": 145, "date": [145, 341], "retur": 145, "burnt": 145, "gru_modul": [145, 223, 281], "input_s": [145, 221, 222, 223, 225, 226, 227, 281, 381], "hidden_s": [145, 221, 222, 223, 225, 226, 227, 281, 381], "set_recurrent_mod": [145, 223, 227, 381], "burn_in_transform": 145, "gru": [145, 183, 222, 223, 281], "num_lay": [145, 221, 223, 225, 227, 239, 240, 281], "86": [145, 378, 379, 390, 392, 393], "3008": [145, 379], "0344": 145, "padding_valu": [146, 231, 232], "as_invers": 146, "movement": 146, "1312": [146, 379], "5602": 146, "unsqueezetransform": [146, 392, 394], "consumpt": [146, 371], "followin": 146, "pictur": 146, "pixels_trsf": [146, 394], "grayscal": [146, 379, 381, 394, 397], "data_exclud": [146, 394], "del_kei": [147, 189, 389, 392], "unsqueeze_if_oor": 147, "observation_posit": 147, "observation_veloc": 147, "key1": [147, 346, 354], "key2": [147, 346, 354], "center": [148, 338], "width": [148, 151, 173], "scalar": [149, 175, 212, 214, 236, 237, 259, 260, 264, 265, 268, 269, 280, 284, 285, 286, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 316, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 373, 379, 384, 392], "permit": [149, 159, 188, 284, 286, 301, 304, 306], "rewardsc": [150, 187, 378, 379, 381], "rewardclip": 150, "transformed_env": [150, 186, 187, 382], "transform_env_devic": [150, 153, 186, 195], "dtype_in": 152, "dtype_out": 152, "scan": [152, 155, 275, 276], "resp": [152, 155], "not_transform": [152, 155], "constructedw": [152, 155], "orig_devic": 153, "unspecifi": 153, "transform_done_spec": [153, 186, 195], "num_actions_effect": 154, "max_act": 154, "include_forward": 154, "num_act": [154, 293, 383], "action_out": 154, "_call": [154, 159, 392], "eol_kei": 156, "lives_kei": 156, "eol_attribut": 156, "unwrap": 156, "breakout": 156, "210": [156, 167, 392], "160": [156, 167, 379, 392], "eol_transform": 156, "eol": 156, "dqnloss": [156, 284, 285, 287, 288, 291, 293, 294, 295, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 316, 362, 371, 374, 379, 381, 387], "register_kei": 156, "loss_or_advantag": 156, "lossmodul": [156, 355, 364, 365, 371, 374], "valueestimatorbas": [156, 302, 371], "excluded_kei": 157, "finit": [158, 383, 394], "first_dim": 159, "last_dim": 159, "allow_positive_dim": [159, 188], "frameskip": 159, "repeatedli": [160, 380, 391], "init_kei": [162, 267], "tracker": 162, "pi_curr": 163, "pi_0": 163, "overfit": 163, "probabilist": [163, 270, 371, 380, 396], "get_dist": [163, 274, 275], "mod": [163, 223, 227, 267, 277, 381, 387], "normalparamextractor": [163, 256, 257, 258, 270, 276, 284, 285, 287, 293, 300, 304, 305, 306, 307, 309, 310, 373, 380, 383, 391, 396], "probabilisticactor": [163, 256, 257, 258, 261, 284, 285, 287, 290, 292, 293, 300, 303, 304, 305, 306, 307, 309, 310, 373, 378, 380, 383, 390, 391], "tanhnorm": [163, 256, 257, 258, 270, 276, 284, 285, 287, 300, 304, 305, 306, 307, 309, 310, 371, 380, 391, 396], "return_log_prob": [163, 256, 257, 258, 270, 274, 276, 306, 373, 380, 383, 390, 391, 396], "apply_": 163, "copy_": [163, 378], "formulat": 163, "diverg": [163, 223, 227, 270, 274, 296, 301], "noop": [164, 396], "trial": 164, "standard_norm": [165, 176, 193, 378, 379, 381], "affin": [165, 176, 193], "layer": [165, 193, 206, 208, 209, 211, 212, 217, 219, 221, 222, 223, 225, 226, 227, 228, 233, 234, 236, 237, 239, 240, 247, 248, 254, 266, 277, 373, 379, 380, 381, 383, 390, 393], "epsilon": [165, 259, 260, 264, 265, 268, 269, 308, 353, 379, 380, 381, 383], "recover": 165, "set_default_tensor_typ": 165, "doubletensor": 165, "isclos": 165, "next_ob": [165, 318, 319, 320, 321, 396], "init_stat": [165, 378, 379, 380, 381], "3752e": 165, "5087e": 165, "9294e": 165, "9636": 165, "5608": 165, "6408": 165, "num_it": [165, 379, 380], "reduce_dim": [165, 378, 379, 380, 381], "cat_dim": [165, 378, 379, 380, 381], "keep_dim": [165, 379, 381], "statist": [165, 193, 206, 306, 369, 378, 379, 380, 397], "gaussian": [165, 183, 207, 230, 236, 237, 242, 259, 260, 380, 390], "empir": [165, 207, 230, 270, 274, 378, 380, 391], "3d": [165, 208], "third": [165, 263, 390, 391], "reorder": 167, "in_keys_in": 167, "channel": [167, 185, 233, 239, 240, 379], "r3m": [169, 393], "resnet": [169, 189, 191], "visual": [169, 189, 191, 338, 380, 390, 392], "embed": [169, 189, 190, 191, 211, 243, 255, 256, 257, 258, 273, 278, 393], "ego4d": [169, 189, 191], "univers": [169, 189, 191, 382], "suraj": [169, 189], "nair": [169, 189], "aravind": [169, 189], "rajeswaran": [169, 189], "vikash": [169, 189, 191], "kumar": [169, 189, 191], "chelsea": [169, 189], "finn": [169, 189], "abhinav": [169, 189], "gupta": [169, 189], "2203": [169, 189, 230, 393], "12601": [169, 189, 393], "_init": [169, 189, 378], "resnet50": [169, 191, 393], "model_nam": [169, 189, 191, 341], "resnet34": 169, "resnet18": 169, "r3m_vec": [169, 393], "stack_imag": [169, 191], "tread": [169, 191], "separet": [169, 191], "hub": [169, 191, 382, 393], "resnet50_weight": [169, 191], "imagenet1k_v1": [169, 191], "download_path": [169, 191], "tensor_pixels_kei": [169, 191], "sub_seq_len": 170, "sample_dim": [170, 378], "primarili": [170, 383], "hesit": 170, "robust": [170, 206], "mix": [170, 243, 252, 316, 378, 390, 391], "improp": 170, "dummyenv": 171, "another_oth": 171, "other_reward": 171, "create_copi": 172, "stuff": [172, 385], "newnam": 172, "r2g": 174, "reward_to_go": 174, "bernoulli_": 174, "9010": 174, "9404": [174, 324], "9701": [174, 324], "9900": [174, 324], "0000": [174, 184, 264, 265, 277, 324, 380, 381, 392, 396], "crash": 174, "clamp_min": 175, "clamp_max": 175, "clip_min": 175, "clip_max": 175, "episode_": 177, "reward1": 177, "reward2": 177, "episode_reward": [177, 390, 391], "keep_reward": 178, "keep_don": 178, "logical_or": 179, "squeeze_dim": 180, "step_count_kei": 181, "update_don": 181, "disjunct": 181, "recognis": 181, "target_return": 182, "subtract": 182, "default_valu": [183, 281, 381], "unit": [183, 207, 219, 221, 222, 239, 240, 245, 246, 380], "transfomedenv": 183, "mykei": 183, "__unless": 183, "exists__": 183, "get_primers_from_modul": [183, 223, 227, 371], "10th": 184, "0216": 184, "1149": 184, "1990": 184, "2749": 184, "3281": 184, "9290": 184, "3702": 184, "8978": 184, "from_int": 185, "shape_toler": 185, "permuat": 185, "ri": 185, "principl": 186, "cattransform": 186, "notabl": 186, "rewardsum": [186, 195, 204, 390, 391], "smoothli": [187, 206], "add_1": 187, "cache_spec": 187, "set_missing_toler": 187, "keyerror": 187, "unsqueeze_dim": [188, 392], "danger": 188, "vc1": 189, "vc1_vec": 189, "untrain": 189, "make_noload_model": 189, "vip": [190, 191, 393], "implicit": [191, 292, 300, 394], "jason": 191, "ma": 191, "shagun": 191, "sodhani": 191, "dinesh": 191, "jayaraman": 191, "osbert": 191, "bastani": 191, "ami": 191, "zhang": 191, "vip_vec": 191, "final_nam": 192, "sb3": 192, "terminal_obs_read": 192, "truli": [192, 396], "till": 192, "shared_td": 193, "decai": [193, 259, 260, 264, 308, 353, 378, 379, 381, 397], "9999": [193, 392], "0001": [193, 219, 238, 380, 392], "to_observation_norm": 193, "frozen_copi": 193, "race": 193, "underflow": [193, 353], "build_td_for_shared_vecnorm": 193, "memmori": 193, "queue": [193, 394], "td_share": 193, "unfreez": 193, "train_env": 193, "eval_env": 193, "state_dim": [194, 210, 215, 242, 245, 246, 261], "action_dim": [194, 210, 211, 213, 215, 242, 261, 378, 389], "gsde": [194, 305, 369], "gsdemodul": 194, "rb_transform": 195, "resist": 195, "insensit": 195, "sensit": [195, 379], "_orig": 195, "95": [195, 230, 312, 379, 380, 381, 392], "tdreset": [195, 389], "window": [195, 267, 390, 394, 396], "edit": [195, 385], "cube": 196, "check_dtyp": 197, "discrep": [197, 284, 286, 288, 289, 301, 304, 306, 316], "rng": [197, 392], "revert": [197, 383, 394], "unsqueeze_null_shap": 201, "probabilistictdmodul": [202, 203, 228, 270, 274, 317, 351], "next_tensordict": 204, "keep_oth": [204, 392], "exclude_reward": 204, "exclude_don": 204, "exclude_act": 204, "next_": 204, "funtion": 204, "_stepmdp": 204, "write_full_fals": 205, "_terminated_or_trunc": 205, "momentum": 206, "max_r": 206, "max_d": 206, "warmup_step": 206, "batchrenorm": 206, "1702": 206, "03275": 206, "corenet": 206, "enhanc": 206, "warmup": 206, "phase": [206, 391, 394], "outlier": 206, "period": 206, "varianc": [206, 207, 224, 238, 250, 251, 374, 378, 380, 391], "warm": 206, "renorm": 206, "entropi": [207, 284, 285, 286, 287, 292, 293, 300, 301, 303, 304, 305, 307, 309, 310, 391], "botev": 207, "2013": 207, "cem": 207, "plan": [207, 229, 230], "k": [207, 221, 222, 225, 226], "maximis": [207, 211, 213, 230, 373, 379, 380, 391], "modelbasedenv": [207, 230], "planning_horizon": [207, 230], "optim_step": [207, 230, 379, 387], "mpc": [207, 229, 230], "num_candid": [207, 230], "candid": [207, 230], "top_k": [207, 230], "modelbasedenvbas": [207, 229, 230, 371], "safemodul": [207, 229, 256, 258, 274, 284, 285, 287, 292, 293, 300, 304, 305, 306, 307, 309, 310, 360, 361, 365, 371, 396], "num_cel": [208, 209, 211, 212, 213, 214, 219, 220, 223, 227, 228, 233, 234, 256, 281, 379, 380, 381, 383, 384, 387, 390, 391, 396], "elu": [208, 209, 211, 212, 213, 214, 219, 220, 233, 379, 396], "activation_kwarg": [208, 209, 228], "norm_class": [208, 209, 211, 212, 228], "norm_kwarg": [208, 209, 228], "bias_last_lay": [208, 209, 211, 212, 213, 214, 220, 228], "aggregator_class": [208, 209, 211, 212, 379, 381, 396], "squashdim": [208, 209, 211, 220, 233, 396], "aggregator_kwarg": [208, 209, 211, 212, 379, 381], "squeeze_output": [208, 209, 211, 212, 379, 381], "cell": [208, 209, 221, 222, 223, 225, 226, 227, 228, 233, 234, 380, 382, 383, 384, 385, 386, 387], "kernel": [208, 209, 220, 233], "cnet": [208, 209], "conv3d": 208, "lazyconv2d": [209, 211, 212, 220, 233, 396], "transformer_config": [210, 242, 261], "decisiontransform": [210, 242], "dtconfig": [210, 215, 242], "2202": [210, 215, 303], "05607": [210, 215, 303], "return_to_go": [210, 215, 242, 261], "conv_net_kwarg": [211, 212], "mlp_net_kwarg": [211, 212, 213], "use_avg_pool": [211, 212], "WITH": [211, 212, 213, 214, 268, 269, 308], "1509": [211, 212, 213, 214, 230, 268, 269, 289, 299, 308, 392], "02971": [211, 212, 213, 214, 268, 269, 308], "reus": [211, 345], "convnet": [211, 212, 220, 233, 381, 383, 396], "ndims_in": 211, "avgpool": [211, 212], "lazylinear": [211, 212, 213, 214, 220, 228, 373, 380, 383, 392, 393, 396], "2304": [211, 379], "adaptiveavgpool2d": [212, 379, 381], "output_s": [212, 379, 381], "squeeze2dlay": 212, "400": [213, 214, 386, 391, 392, 394], "mlp_net_kwargs_net1": 214, "mlp_net_kwargs_net2": 214, "mlp1": 214, "mlp2": 214, "decion": 215, "desdescrib": 215, "n_embd": 215, "n_layer": [215, 221, 225], "n_head": 215, "n_inner": 215, "n_posit": 215, "resid_pdrop": 215, "attn_pdrop": 215, "gpt2config": 215, "atol": [216, 249], "rtol": [216, 249], "batch_shap": [216, 249], "event_shap": [216, 249], "absolut": [216, 249, 378], "densiti": [216, 231, 232, 241, 251], "mass": [216, 231, 232, 241, 251, 392], "rsampl": [216, 232, 241, 274], "sample_shap": [216, 231, 232, 241], "softmax": [217, 232, 241, 262, 263], "var_num": [218, 244, 262, 263, 272], "action_value_kei": [218, 244, 262, 263, 271, 272, 302, 316], "action_mask_kei": [218, 244, 262, 263, 264, 265, 271, 272], "perspect": [218, 263, 294, 380], "1707": [218, 263, 294, 304], "06887": [218, 263, 294], "mult": [218, 234, 244, 262, 263, 271, 272], "tensordict_modul": [218, 221, 222, 225, 226, 244, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 287, 288, 292, 293, 300, 304, 305, 306, 307, 309, 310, 373], "nbin": [218, 262, 373], "customdistributionalqv": 218, "log_softmax": [218, 262], "from_modul": [218, 273, 276, 396], "one_hot": [218, 232, 244], "qvalue_actor": [218, 244, 262, 271, 373], "to_modul": [218, 273, 276, 378, 396], "std_bia": 219, "std_min_val": 219, "belief": [219, 239, 245, 246], "1912": [219, 295, 296, 297], "01603": [219, 295, 296, 297], "softplu": [219, 238, 280, 282, 283], "out_features_valu": 220, "cnn_kwarg": [220, 379], "mlp_kwarg": [220, 379], "duel": 220, "cnn": [220, 233, 379, 383, 396], "06581": 220, "batch_first": [221, 223, 225, 227, 381], "bidirect": [221, 225, 381], "cudnn": [221, 222, 225, 226, 381], "rnn": [221, 222, 223, 225, 226, 227, 381, 383], "device_count": [221, 222, 225, 226, 397], "n_in": [221, 222, 225, 226], "n_out": [221, 222, 225, 226], "h0": [221, 222, 225, 226], "h1": [221, 222, 225, 226], "call_gru": [221, 222], "h_out": [221, 222, 225, 226], "batched_cal": [221, 222, 225, 226], "gate": [221, 222, 225], "r_t": 221, "sigma": [221, 222, 224, 225, 226, 250, 251, 259, 260, 268, 269, 380, 390], "w_": [221, 222, 225, 226], "ir": [221, 222], "x_t": [221, 225], "b_": [221, 222, 225, 226], "hr": [221, 222, 225], "h_": [221, 222, 225], "z_t": 221, "iz": [221, 222], "hz": [221, 222], "n_t": 221, "odot": [221, 222, 225, 226], "hn": [221, 222, 225], "h_t": [221, 225], "sigmoid": [221, 222, 225, 226], "hadamard": [221, 222, 225, 226], "multilay": [221, 225], "_t": [221, 225, 391, 392], "ge": [221, 225], "bernoulli": [221, 225], "b_ih": [221, 222, 225, 226, 227], "b_hh": [221, 222, 225, 226, 227], "seq": [221, 223, 225, 227, 267, 381, 387, 389], "h_0": [221, 225, 226], "unbatch": [221, 225], "pack_padded_sequ": [221, 225], "pack_sequ": [221, 225], "num": [221, 225, 387], "_layer": [221, 225], "_size": [221, 222, 225, 226], "h_n": [221, 225], "packedsequ": [221, 225], "weight_ih_l": [221, 225], "learnabl": [221, 222, 225, 226], "w_ir": 221, "w_iz": 221, "w_in": 221, "num_direct": [221, 225], "weight_hh_l": [221, 225], "w_hr": 221, "w_hz": 221, "w_hn": 221, "bias_ih_l": [221, 225], "b_ir": 221, "b_iz": 221, "b_in": 221, "bias_hh_l": [221, 225], "b_hr": 221, "b_hz": 221, "b_hn": 221, "mathcal": [221, 222, 225, 226], "sqrt": [221, 222, 225, 226, 268, 269], "frac": [221, 222, 225, 226, 380], "seq_len": [221, 225], "subtli": 221, "matrix": [221, 225, 236, 237], "contrast": [221, 299, 394], "hx": [221, 222, 225, 226], "lstmcell": [222, 227], "gru_cel": 222, "z": 222, "weight_ih": [222, 226], "weight_hh": [222, 226], "bias_ih": [222, 226], "bias_hh": [222, 226], "rocm": [222, 226], "embedd": [223, 227], "grucel": [223, 273], "python_bas": [223, 227], "recurrent_st": [223, 227, 281, 381], "custom_kei": [223, 227], "recurrent_mod": [223, 227], "make_tensordict_prim": [223, 227, 381], "rs": [223, 378], "gru_module_train": 223, "policy_train": [223, 227], "traj_td": [223, 227], "supplementari": [223, 227, 380, 397], "That": [223, 227, 380, 390], "dealt": [223, 227], "poorli": [223, 227], "data_collector": [223, 227, 379], "policy_infer": [223, 227], "td_inf": [223, 227], "assert_clos": [223, 227], "upscal": [224, 250, 251], "tanh_loc": [224, 250, 251], "event_dim": [224, 249, 250], "poor": [224, 250, 251], "explos": [224, 250, 251], "switch": [224, 251, 336], "formula": [224, 250, 251, 284, 286, 301, 304, 374, 380], "proj_siz": 225, "c0": [225, 226], "c1": [225, 226], "call_lstm": [225, 226], "c_out": [225, 226], "i_t": 225, "ii": [225, 226], "hi": [225, 226], "f_t": 225, "hf": [225, 226], "g_t": 225, "ig": [225, 226], "hg": [225, 226], "o_t": 225, "ho": [225, 226], "c_t": 225, "c_": 225, "forget": 225, "1402": 225, "1128": 225, "c_0": [225, 226], "proj": 225, "c_n": 225, "w_ii": 225, "w_if": 225, "w_ig": 225, "w_io": 225, "w_hi": 225, "w_hf": 225, "w_hg": 225, "w_ho": 225, "b_ii": 225, "b_if": 225, "b_ig": 225, "b_io": 225, "b_hi": 225, "b_hf": 225, "b_hg": 225, "b_ho": 225, "weight_hr_l": 225, "_revers": 225, "analog": [225, 383], "cn": 225, "lstm_cell": 226, "h_1": 226, "c_1": 226, "time_step": [226, 267], "cx": 226, "correspont": 227, "recurrent_state_h": [227, 381], "recurrent_state_c": [227, 381], "triplet": [227, 271, 272], "lstm_modul": 227, "rs_h": 227, "rs_c": 227, "hidden0": 227, "hidden1": 227, "single_bias_last_lay": 228, "layer_class": 228, "layer_kwarg": 228, "perceptron": [228, 383], "aslo": 228, "42": [228, 284, 285, 287, 288, 292, 300, 307, 378, 379, 380, 392, 393], "noisylinear": [228, 236, 371, 379], "noisylazylinear": [228, 371], "mpcplanner": 229, "tensordict_out": [229, 397], "mppi": 230, "covari": 230, "william": [230, 306], "aldrich": 230, "theodor": 230, "01149": 230, "hansen": 230, "wang": 230, "su": 230, "04955": 230, "valueoper": [230, 256, 257, 258, 284, 285, 286, 287, 288, 293, 300, 301, 304, 305, 306, 307, 309, 310, 365, 373, 378, 380, 384], "tdlambdaestim": [230, 371, 378], "value_net": [230, 289, 291, 306, 318, 319, 320, 321, 380, 383, 384, 387], "adv": 230, "lmbda": [230, 312, 318, 321, 323, 329, 330, 331, 334, 335, 374, 378, 380, 391], "value_network": [230, 288, 289, 291, 292, 294, 300, 307, 318, 319, 320, 321, 374, 378, 380, 384, 387, 390], "temperatur": [230, 285, 292, 300], "neg_inf": [231, 232], "inf": [231, 232], "api_doc": [231, 232], "tf_agent": [231, 232], "event": [231, 232, 241, 327, 328, 329, 330, 332, 333, 334, 335, 394], "unnorm": [231, 232, 241], "sparse_mask": [231, 232], "dens": [231, 232], "0831": [231, 232], "1203": [231, 232], "0928": [231, 232], "1972": [231, 232], "grad_method": [232, 241], "reparamgradientstrategi": [232, 241], "passthrough": [232, 241], "relaxedonehot": [232, 241], "zeros_lik": [232, 392], "sample_non_valid": 232, "share_param": [233, 234, 235, 390, 391], "use_td_param": [233, 234, 235], "get_stateful_net": [233, 234, 235, 302, 373, 374], "from_stateful_net": [233, 234, 235, 302, 374], "homogen": [233, 234, 390, 391], "tensordictparam": [233, 234], "_empty_net": [233, 234], "roughli": [233, 234, 396], "agent_network": [233, 234], "modulelist": [233, 234, 396], "2592": [233, 379], "decentr": 233, "n_agent_input": [234, 235, 390, 391], "n_agent_output": [234, 235, 390, 391], "lazili": [234, 392], "toech": 234, "centalis": 234, "shown": [234, 373, 389, 390, 391, 394], "agent_dim": 235, "vmap_random": [235, 302, 374], "stateful_net": [235, 302], "Such": [235, 302], "deepcopi": [235, 302, 390], "multiagentmlp": [235, 390, 391], "snet": 235, "hasattr": [235, 378], "kaiming_normal_": 235, "reset_paramet": 235, "std_init": [236, 237], "initialize_paramet": 236, "isol": [236, 302], "1706": [237, 252], "10295v3": 237, "induc": 237, "aid": 237, "scale_map": 238, "biased_softplus_1": 238, "scale_lb": [238, 245, 246], "module_norm": 238, "1803": [239, 240, 243], "10122": [239, 240], "rnn_hidden": 239, "latent": 240, "excacli": 241, "inres": 242, "mu": [242, 268, 269, 380], "state_shap": [243, 316], "mixing_embed_dim": [243, 316], "qmix": [243, 390, 391], "mixer": [243, 252, 316], "monoton": 243, "hyper": 243, "11485": 243, "qmixerloss": [243, 252], "qmix_vdn": [243, 252], "vdn": [243, 252], "greedi": [244, 263, 264, 265, 272, 379, 381, 383], "hidden_dim": [245, 246], "posterior": [245, 296], "rssm": [245, 246, 296], "1811": [245, 246], "04551": [245, 246], "obs_embed": 245, "rnn_hidden_dim": 246, "dream": 246, "tanhtransform": 250, "get_mod": 250, "adam": [250, 378, 379, 380, 381, 384, 387, 390, 391, 392], "decomposit": 252, "05296": 252, "hide": [253, 380, 390, 391], "satisfi": [253, 373], "vmap_dim": 253, "lam": 253, "sample_in": 253, "sample_in_td": 253, "vm": 253, "translat": [255, 270], "character": [255, 262, 270, 271, 273, 394], "overflow": [255, 262, 263, 270, 271, 272, 273, 274], "td_modul": [255, 256, 257, 258, 270, 273, 274, 276, 278, 383, 396], "3635": 255, "0340": 255, "1476": 255, "3911": [255, 392], "1664": [255, 379, 392], "5455": 255, "2247": 255, "4583": 255, "2916": 255, "2160": 255, "5337": 255, "5193": 255, "grad_fn": [255, 264, 265, 396], "addmmbackward0": 255, "actorvalueoper": [256, 286, 301, 304, 373, 383], "get_policy_oper": [256, 257, 258, 286, 301, 304, 373], "standalon": [256, 257, 258, 383], "tdmodul": [256, 257, 258, 365], "get_critic_oper": 256, "common_oper": [256, 258], "policy_oper": [256, 257, 258], "value_oper": [256, 257, 258], "module_hidden": [256, 258], "td_module_hidden": [256, 258], "module_act": [256, 258], "td_module_act": [256, 257, 258], "module_valu": [256, 257, 258], "td_module_valu": [256, 257, 258], "state_action_valu": [256, 278, 285, 287, 292, 300, 307, 317, 365, 373, 378, 390, 396], "td_clone": [256, 257, 258], "tensordictmodulewrapp": [256, 360, 361, 365], "get_policy_head": [256, 257, 258], "safesequenti": [256, 257, 258, 316], "head": [256, 258, 281, 286, 301, 304], "get_value_head": [256, 257, 258], "get_value_oper": [256, 257, 258, 286, 301, 304], "action_modul": 257, "state_valu": [257, 258, 278, 286, 292, 300, 301, 304, 305, 307, 318, 319, 320, 321, 323, 325, 327, 329, 331, 332, 334, 373, 378, 380, 391], "actorcriticoper": [258, 373, 383], "embeddig": 258, "refet": 258, "actorcriticwrapp": [258, 373, 378], "po": [259, 260, 265], "sigma_init": [259, 260, 390], "sigma_end": [259, 260, 390], "annealing_num_step": [259, 260, 264, 265, 268, 269, 378, 379, 381, 383, 387, 390], "captur": [259, 260, 264, 265, 268, 269], "omiss": [259, 260, 264, 265, 268, 269], "ommit": [259, 260, 264, 265, 268, 269], "inferec": 261, "set_tensor_kei": 261, "dt_inference_wrapp": 261, "baz": 261, "inference_context": 261, "obs_dim": 261, "tanhdelta": [261, 371, 378, 390], "dtactor": 261, "actor_modul": [261, 396], "dist_class": 261, "dist_kwarg": 261, "distribution_kwarg": [261, 270, 274, 380, 390, 391], "inference_actor": 261, "sequence_length": 261, "mask_context": 261, "out_act": 261, "qvaluemodul": [262, 271, 316, 381, 383, 387], "distributionaldqnnet": 262, "make_log_softmax": 262, "my_action_valu": [263, 272], "chanc": 263, "thid": 263, "eps_init": [264, 265, 268, 269, 379, 381, 383, 387], "eps_end": [264, 265, 268, 269, 379], "explorative_polici": [264, 265, 268, 269], "9055": [264, 265, 392], "9277": [264, 265], "6295": [264, 265], "2532": [264, 265], "addbackward0": [264, 265], "lmheadmodel": 266, "actor_head": [266, 286, 301, 304], "base_model": 266, "lm_head": 266, "macro": 267, "lookahead": 267, "n_action": [267, 285, 287, 289, 291, 303, 307], "reshape_cat": 267, "actor_bas": 267, "obs_cat": 267, "obs_cat_reshap": 267, "action_orig": 267, "counter": [267, 348, 375], "ornstein": [268, 269, 378], "uhlenbeck": [268, 269, 378], "ou": [268, 269, 378], "correl": [268, 269], "noise_t": [268, 269], "noise_": [268, 269], "theta": [268, 269, 380, 392], "sigma_t": [268, 269], "sigma_": [268, 269], "anneal": [268, 269, 379, 383, 390], "ou_prev_nois": [268, 269], "ou_step": [268, 269], "x0": [268, 269], "sigma_min": [268, 269], "n_steps_ann": [268, 269], "is_init_kei": [268, 269], "_ou_prev_nois": [268, 269], "_ou_step": [268, 269], "default_interaction_typ": [270, 274, 383], "interaction_typ": [270, 274], "datacollectorbas": [270, 357, 360, 361, 365, 371], "set_interaction_typ": [270, 274], "compositedistribut": [270, 383], "distribution_map": 270, "name_map": 270, "cache_dist": [270, 274], "n_empirical_estim": [270, 274], "compound": [270, 383], "categ": 270, "chose": 272, "functionalmodul": 273, "functionalmodulewithbuff": 273, "td_fmodul": 273, "td_function": 273, "td_state": 273, "params_repeat": 273, "td_vmap": [273, 276], "random_sampl": [273, 274], "suppli": 274, "fist": 274, "log_prob_kei": [274, 391], "probabilistictensordictsequenti": [275, 284, 286, 301, 304, 306, 360, 361, 396], "partial_toler": [275, 276, 389], "who": [275, 276], "AND": [275, 276, 287], "tensordictsequenci": 276, "tensordictsequ": 276, "safeprobabilisticmodul": [276, 373], "spec1": 276, "net1": 276, "module1": 276, "td_module1": 276, "spec2": 276, "module2": 276, "td_module2": 276, "clamp": [277, 296, 355, 390, 392], "boundari": [277, 380, 390, 391], "resolut": 277, "9944": 277, "9991": 277, "3020": 277, "2299": [277, 392], "5418": 277, "2989": 277, "6849": 277, "3169": 277, "2690": 277, "9649": [277, 392], "5686": 277, "8602": 277, "0315": 277, "8455": [277, 392], "6027": 277, "4746": 277, "7843": 277, "7782": 277, "2111": 277, "5115": 277, "4687": 277, "5760": 277, "custommodul": 278, "imaginari": 279, "imagin": 279, "transition_model": 279, "get_reward_oper": 279, "get_transition_model_oper": 279, "min_val": [280, 283], "_bia": 280, "surject": 283, "expln": 283, "biased_softplu": [283, 371], "beggin": 283, "biased_softplus_": 283, "syntax": [283, 378], "met": [283, 390, 392], "1602": 284, "01783v2": 284, "actor_network": [284, 285, 286, 287, 288, 290, 292, 293, 300, 301, 303, 304, 305, 306, 307, 309, 310, 374, 378, 380, 384, 390, 391], "critic_network": [284, 286, 301, 304, 306, 380, 391], "entropy_bonu": [284, 286, 301, 304, 380], "favour": [284, 286, 301, 304], "samples_mc_entropi": [284, 286, 301, 303, 304], "mont": [284, 286, 301, 304, 378], "carlo": [284, 286, 301, 304, 378], "entropy_coef": [284, 286, 301, 304, 380, 391], "critic_coef": [284, 286, 301, 304, 380], "loss_critic_typ": [284, 286, 301, 304, 306, 380], "l1": [284, 286, 288, 289, 293, 301, 304, 305, 306, 309, 310, 313, 316, 373, 378], "l2": [284, 286, 288, 289, 290, 291, 293, 296, 297, 301, 304, 305, 306, 309, 310, 313, 316, 378, 390], "smooth_l1": [284, 285, 286, 287, 288, 289, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 313, 316, 380], "separate_loss": [284, 286, 287, 288, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310], "propag": [284, 286, 287, 288, 292, 293, 300, 301, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 380, 390, 391], "advantage_kei": [284, 286, 301, 304, 306, 318, 319, 320, 321], "value_target_kei": [284, 286, 301, 304, 306, 318, 319, 320, 321], "value_target": [284, 286, 301, 304, 306, 318, 319, 320, 321, 380, 391], "ddp": [284, 286, 301, 304, 306], "fsdp": [284, 286, 301, 304, 306], "divid": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 303, 304, 305, 306, 307, 309, 310, 358, 373, 378, 390, 391, 392], "clip_valu": [284, 286, 301, 304, 306], "loss_crit": [284, 304, 380, 391], "loss_entropi": [284, 304, 380, 391], "loss_object": [284, 304, 380, 391], "recur": [284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 322, 383], "next_reward": [284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321], "next_don": [284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321], "next_termin": [284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321], "loss_obj": 284, "next_observ": [284, 285, 287, 288, 289, 291, 292, 293, 300, 304, 305, 306, 307, 309, 310, 389], "sacloss": [284, 299, 308, 371], "select_out_kei": [284, 285, 287, 288, 292, 293, 300, 304, 305, 307, 309, 310], "make_value_estim": [284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 311, 316, 374, 378, 379, 390, 391, 396], "value_typ": [284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 312, 316, 378], "hyperparam": [284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 378], "enum": [284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 312, 316, 378], "default_value_estim": [284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 378, 396], "default_value_kwarg": [284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 371, 378], "dqn_loss": [284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 311, 316], "td1": [284, 285, 287, 288, 289, 291, 293, 294, 295, 300, 302, 304, 305, 306, 307, 309, 310, 316, 378], "conserv": [285, 291], "qvalue_network": [285, 287, 292, 293, 300, 305, 307, 309, 310], "unti": [285, 287, 300, 305, 307, 309, 310], "loss_funct": [285, 287, 288, 289, 290, 291, 292, 293, 300, 305, 307, 309, 310, 313, 316, 378, 390], "alpha_init": [285, 287, 293, 303, 305, 307], "min_alpha": [285, 287, 293, 303, 305, 307], "max_alpha": [285, 287, 293, 303, 305, 307], "fixed_alpha": [285, 287, 293, 303, 305, 307], "target_entropi": [285, 287, 293, 303, 305, 307], "prod": [285, 287, 303, 307], "delay_actor": [285, 288, 307, 309, 310], "delay_qvalu": [285, 293, 305, 307, 309, 310], "min_q_weight": 285, "max_q_backup": 285, "backup": 285, "deterministic_backup": 285, "num_random": 285, "with_lagrang": 285, "lagrang": 285, "lagrange_thresh": 285, "valueclass": [285, 287, 288, 293, 305, 307, 309, 310], "qvalu": [285, 287, 292, 293, 300, 305, 307, 309, 310], "loss_actor": [285, 287, 288, 292, 293, 300, 305, 306, 307, 309, 310, 350, 378, 384, 390, 396], "loss_actor_bc": 285, "loss_alpha": [285, 287, 293, 305, 307], "loss_cql": [285, 291], "loss_qvalu": [285, 287, 291, 292, 293, 300, 305, 307, 309, 310], "loss_alpha_prim": 285, "clip_epsilon": [286, 380, 391], "normalize_advantag": [286, 301, 304, 391], "value_kei": [286, 301, 304, 318, 319, 320, 321, 378], "somemodul": [286, 301, 304], "someactor": [286, 301, 304], "value_head": [286, 301, 304], "somevalu": [286, 301, 304], "loss_modul": [286, 299, 301, 302, 304, 308, 355, 364, 365, 374, 375, 378, 379, 380, 390, 391, 394], "IN": 287, "FOR": 287, "simplic": [287, 379, 380, 385, 393, 394, 396], "openreview": [287, 305], "pczqttstix": 287, "qvalue_loss": [287, 309], "actor_loss": [287, 309], "alpha_loss": 287, "num_qvalue_net": [287, 292, 293, 300, 305, 307, 309, 310], "target_entropy_buff": 287, "delay_valu": [288, 289, 291, 294, 306, 307, 316, 379, 381, 387, 390], "loss_valu": [288, 292, 300, 306, 307, 378, 380, 384, 390, 391, 396], "pred_valu": [288, 291, 309, 310, 378, 384, 396], "pred_value_max": [288, 378, 384, 396], "target_valu": [288, 291, 305, 309, 310, 317, 374, 378, 384, 396], "target_value_max": [288, 378, 384, 396], "qvalueactor": [289, 291, 316, 373, 379, 381], "double_dqn": 289, "06461": [289, 299], "mult_one_hot": [289, 292, 293, 316], "loss_val": [289, 291, 374, 378, 380, 381, 384, 385, 387, 390, 391, 394], "01345": 290, "distanc": [291, 301, 313, 317, 318, 391], "dcql_loss": 291, "2110": [292, 300], "06169": [292, 300], "expectil": [292, 300], "tau": [292, 300, 308, 378, 379, 390], "antmaz": [292, 300], "sticht": [292, 300], "onehotcategor": [292, 293, 371], "target_entropy_weight": 293, "disctount": 294, "distributionalqvalueactor": [294, 373], "input_tensordict": [294, 378], "actor_model": 295, "value_model": [295, 297], "imagination_horizon": 295, "unrol": [295, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335], "discount_loss": [295, 297], "lambda_kl": 296, "lambda_reco": 296, "lambda_reward": 296, "reco_loss": 296, "reward_loss": 296, "free_nat": 296, "nat": 296, "delayed_clamp": 296, "global_averag": 296, "value_loss": 297, "fake_data": 297, "1606": 298, "03476": 298, "discriminator_network": 298, "use_grad_penalti": 298, "gp_lambda": 298, "discrimin": 298, "ddpgloss": [299, 308, 365, 371, 378, 384, 390, 396], "td3loss": [299, 308, 371], "value_network_update_interv": 299, "qvalueclass": 300, "loss_value_diff": 300, "diff": 300, "old_polici": 301, "new_polici": 301, "apart": [301, 391], "dtarg": 301, "samples_mc_kl": 301, "analyt": 301, "decrement": 301, "loss_": [302, 350, 374, 378, 384], "equip": [302, 381, 383], "gh": 302, "_acceptedkei": 302, "dataclass": 302, "_forward_value_estimator_kei": 302, "alter": [302, 373], "value_estim": [302, 318, 319, 320, 321, 322, 374, 378, 391], "myloss": 302, "action2": 302, "augment": [302, 385, 387, 394], "set_exploration_mod": [302, 371], "deterministic_sampling_mod": 302, "convert_to_funct": [302, 378], "expand_dim": 302, "create_target_param": [302, 378], "compare_against": [302, 378], "_param": 302, "expans": 302, "resampl": 302, "_target_param": 302, "network_nam": 302, "blend": 302, "add_random_modul": [302, 374], "proxim": [304, 380, 391], "optimis": [304, 351, 380, 390, 391], "flavour": [304, 390, 391, 396], "clipppoloss": [304, 371, 380, 391], "klpenppoloss": [304, 371], "regularis": 304, "06347": 304, "gae": [304, 371, 374, 378, 380, 391], "ppo_loss": 304, "tdlambda": [304, 312, 374, 378], "base_lay": 304, "randn_lik": 304, "samplelogprob": 304, "ay8zfzm0tdd": 305, "sub_sample_len": 305, "subsampl": [305, 346, 375], "action_log_prob_actor": 305, "state_action_value_actor": [305, 309, 310], "connectionist": 306, "1992": 306, "doi": 306, "1007": 306, "bf00992696": 306, "actor_net": [306, 378, 380], "1801": 307, "01290": 307, "applic": [307, 316, 382, 383, 392], "1812": 307, "05905": 307, "redqloss": [308, 371], "math": 308, "theta_t": [308, 392], "theta_": [308, 392], "polyak": 308, "minimalist": 309, "06860": 309, "policy_nois": [309, 310], "noise_clip": [309, 310], "td3_bc": 309, "bc_loss": 309, "lmbd": 309, "next_state_valu": [309, 310, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 371], "td0": [311, 378, 390], "strict_shap": 313, "view_a": 313, "qmixer": [316, 371], "local_valu": 316, "visibl": [316, 391], "dafault": 316, "acceptedkei": 316, "global_valu": 316, "penultim": 316, "local_value_network": 316, "mixer_network": 316, "value_modul": [316, 380, 396], "qnet": [316, 378], "next_val_kei": 317, "pred_next_v": 317, "usus": 317, "mse": 317, "q_valu": 317, "n_steps_to_next": 317, "value_next_st": 317, "1506": [318, 323, 331], "02438": [318, 323, 331], "exponenti": [318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 353], "average_ga": [318, 380], "skip_exist": [318, 319, 320, 321], "time_dim": [318, 320, 321, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335], "advang": 318, "gradient_mod": 318, "value_error": [318, 319, 320, 321, 322], "target_param": [318, 319, 320, 321, 322, 378, 391], "98": [318, 319, 320, 321, 379, 392, 393], "94": [318, 321, 378, 379, 392], "unpack": [318, 319, 320, 321], "tensor_kei": [318, 319, 320, 321, 322], "next_valu": [318, 319, 320, 321, 322], "aka": [319, 379, 390], "average_reward": [319, 320, 321], "tdestim": [319, 320, 322], "infti": 320, "valuefunctionbas": 322, "old_stat": [323, 325, 327, 329, 331, 332, 334], "new_stat": [323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "rolling_gamma": [327, 328, 329, 330, 332, 333, 334, 335], "g1": [327, 328, 329, 330, 332, 333, 334, 335], "g2": [327, 328, 329, 330, 332, 333, 334, 335], "g3": [327, 328, 329, 330, 332, 333, 334, 335], "g4": [327, 328, 329, 330, 332, 333, 334, 335], "v3": [327, 328, 329, 330, 332, 333, 334, 335, 397], "preproc": [336, 390], "as_non_tensor": [336, 390], "render_method": 336, "pass_tensordict": 336, "syntat": 336, "sugar": 336, "out_file_bas": 337, "skip_reset": 337, "center_crop": 338, "make_grid": 338, "csv": [338, 340, 342, 379, 386, 387], "wandb": [338, 342, 345, 386, 396], "tensorboard": [338, 342, 344, 386, 396], "log_dir": [338, 339, 340, 342, 344, 345, 379, 387], "cheetah_video": 338, "run_video": 338, "openxexperiencereplai": 338, "run_video_0": 338, "templat": 339, "pt": [340, 375, 393], "video_fp": 340, "minim": [340, 394], "dependeci": 340, "cur_dir": 340, "csv_log": 340, "add_video": 340, "video_": 340, "experiment_nam": [341, 342], "uuid": [341, 379, 397], "logger_typ": 342, "logger_nam": 342, "mlflow": [342, 343], "wandb_kwarg": 342, "mlflow_kwarg": 342, "tracking_uri": 343, "uri": 343, "datastor": 343, "tb_log": 344, "tensoarboard": 344, "td_log": 344, "save_dir": 345, "resum": 345, "uncategor": 345, "sub_traj_len": 346, "min_sub_traj_len": 346, "register_op": [346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 375, 379], "process_optim_batch": [346, 352, 353, 375], "td_out": [346, 354], "_process_optim_batch_hook": [346, 375], "batch_subsampl": 346, "clear_cuda": 347, "pre_optim_step": [347, 375], "log_pbar": [348, 349, 351, 353, 375, 379], "progress": [348, 349, 351, 355, 375, 379, 381, 397], "count_fram": 348, "pre_steps_log": [348, 349, 375], "count_frames_log": 348, "lognam": 349, "r_train": [349, 379], "log_reward": [349, 379], "loss_compon": 350, "appl": 350, "optimizer_hook": 350, "record_interv": [351, 378, 379], "record_fram": [351, 358, 378, 379], "policy_explor": [351, 365, 378, 379, 383, 387], "log_kei": [351, 379], "underestim": 351, "set_exploration_typ": [351, 371, 380, 381, 383, 390, 396], "r_evalu": [351, 378], "flatten_tensordict": [352, 379], "max_dim": 352, "rb_trainer": 352, "batch_process": [352, 353, 354, 375], "post_loss": [352, 375], "999": [353, 379], "jitter": 353, "finfo": 353, "default_dtyp": 353, "get_default_dtyp": 353, "reward_norm": 353, "update_reward_stat": 353, "normalize_reward": 353, "make_train": [354, 371], "_process_batch_hook": [354, 375], "select_kei": [354, 375], "versatil": [355, 382], "optim_steps_per_batch": [355, 375, 379], "clip_grad_norm": 355, "clip_norm": 355, "progress_bar": 355, "save_trainer_interv": 355, "log_interv": [355, 379], "save_trainer_fil": [355, 375], "update_weights_interv": [357, 379], "update_weight": 357, "post_step": [357, 375, 379], "cfg": [358, 359, 360, 361, 362, 363, 364, 365, 366, 369], "dictconfig": [358, 359, 360, 361, 363, 364, 365, 366, 369], "unknowingli": 358, "annealing_fram": [358, 378], "init_env_step": [358, 359, 378], "proof_environ": [359, 378], "sta": 359, "ot": 359, "actor_model_explor": [360, 361, 378], "make_env_kwarg": [360, 361], "targetnetupdat": [362, 364, 365], "replayargsconfig": 363, "target_net_updat": [365, 378, 379], "constitu": 365, "egreedywrapp": 365, "env_proof": 365, "obs_spec": 365, "net_valu": 365, "dir": [365, 375, 379], "gettempdir": 365, "argpars": [366, 369], "namespac": [366, 369, 397], "parser": [366, 369], "transformed_env_constructor": [366, 371], "num_env_per_collector": [367, 368], "video_tag": 369, "norm_obs_onli": 369, "use_env_cr": 369, "custom_env_mak": 369, "custom_env": 369, "return_transformed_env": 369, "action_dim_gsd": 369, "state_dim_gsd": 369, "obs_norm_state_dict": 369, "wheter": 369, "maker": [369, 379], "asyncdatacollector": 371, "distributedsyncdatacollector": 371, "submitit_delayed_launch": 371, "raycollector": 371, "rational": 371, "footnot": 371, "unboundeddiscretetensorspec": 371, "lazystackedtensorspec": 371, "lazystackedcompositespec": 371, "prompttensordicttoken": 371, "rolloutfrommodel": 371, "tokenizeddatasetload": 371, "create_infinite_iter": 371, "constantklcontrol": 371, "adaptiveklcontrol": 371, "consolidate_spec": 371, "check_no_exclusive_kei": 371, "contains_lazy_spec": 371, "nested2t": 371, "h5combin": 371, "h5split": 371, "tictactoeenv": 371, "check_marl_group": 371, "get_available_librari": 371, "make_composite_from_td": [371, 392], "terminated_or_trunc": 371, "dreamerdecod": 371, "braxwrapp": 371, "dmcontrolwrapp": 371, "jumanjienv": 371, "jumanjiwrapp": 371, "meltingpotenv": 371, "meltingpotwrapp": 371, "mogymenv": 371, "mogymwrapp": 371, "multithreadedenvwrapp": 371, "openmlenv": 371, "pettingzooenv": [371, 390], "robohiveenv": 371, "smacv2env": 371, "smacv2wrapp": 371, "vmaswrapp": 371, "qvaluehook": 371, "distributionalqvaluehook": 371, "reset_nois": 371, "cemplann": 371, "mpcplannerbas": 371, "mppiplann": 371, "independentnorm": 371, "normalparamwrapp": 371, "truncatednorm": 371, "maskedonehotcategor": 371, "inv_softplu": 371, "vmapmodul": 371, "distributionaldqnloss": [371, 379], "discretesacloss": 371, "crossqloss": 371, "iqlloss": 371, "discreteiqlloss": 371, "cqlloss": 371, "discretecqlloss": 371, "gailloss": 371, "dtloss": 371, "onlinedtloss": 371, "td3bcloss": 371, "ppoloss": 371, "a2closs": 371, "reinforceloss": 371, "dreameractorloss": 371, "dreamermodelloss": 371, "dreamervalueloss": 371, "td0estim": [371, 378], "td1estim": [371, 378], "td0_return_estim": 371, "td0_advantage_estim": 371, "td1_return_estim": 371, "vec_td1_return_estim": 371, "td1_advantage_estim": 371, "vec_td1_advantage_estim": 371, "td_lambda_return_estim": 371, "vec_td_lambda_return_estim": 371, "td_lambda_advantage_estim": 371, "vec_td_lambda_advantage_estim": 371, "generalized_advantage_estim": 371, "vec_generalized_advantage_estim": 371, "reward2go": 371, "distance_loss": [371, 378], "hold_out_net": 371, "hold_out_param": [371, 378], "softupd": [371, 378, 379, 381, 384, 387, 390], "hardupd": [371, 378, 384], "batchsubsampl": [371, 375], "clearcudacach": 371, "countframeslog": 371, "logreward": [371, 375, 379], "optimizerhook": [371, 379], "replaybuffertrain": [371, 375, 379], "rewardnorm": 371, "selectkei": [371, 375], "trainerhookbas": [371, 375, 379], "updateweight": [371, 375, 379], "make_collector_offpolici": 371, "make_collector_onpolici": 371, "make_dqn_loss": 371, "make_replay_buff": [371, 378], "make_target_updat": 371, "parallel_env_constructor": [371, 378], "sync_async_collector": 371, "sync_sync_collector": 371, "correct_for_frame_skip": 371, "get_stats_random_rollout": 371, "mlflowlogg": 371, "get_logg": 371, "generate_exp_nam": 371, "journei": 372, "textbook": 372, "highlight": [372, 390], "ever": [372, 391], "bump": 372, "think": [372, 380, 390, 391, 397], "benefit": [372, 382, 390, 391, 394], "pr": 372, "ground": [373, 378, 392], "recycl": [373, 394], "impos": 373, "violat": 373, "noisier": 373, "Their": [373, 390, 391], "sd": 373, "prob_modul": 373, "pick": [373, 378, 379, 383], "hopefulli": [373, 379], "functional_modul": 373, "make_funct": 373, "mathbb": [373, 379], "rightarrow": [373, 379], "soften": 373, "backbon": [373, 381, 383, 389, 396], "make_actor": 373, "make_valu": 373, "shared_param": 373, "make_common": 373, "reusabl": [374, 378, 394], "swappabl": [374, 378], "characterist": [374, 378, 392], "trainabl": [374, 378, 384, 393], "smth": [374, 378], "metric": [374, 378], "plenti": 374, "amort": [374, 379, 380], "told": [374, 380], "pseudo": [374, 385, 392], "buri": 374, "str_valu": 374, "nutshel": [374, 378], "barto": [374, 390, 391], "chapter": [374, 386], "significantli": [374, 378, 379, 384, 391], "next_stat": 374, "value_net_loss": 374, "pow": [374, 378], "room": 374, "signifi": [374, 390, 391], "underperform": 374, "thin": 374, "intric": [374, 383], "believ": 375, "scheme": [375, 397], "substenti": 375, "_pre_steps_log_hook": 375, "_pre_optim_hook": 375, "sub_batch": 375, "_post_loss_hook": 375, "_post_optim_hook": 375, "post_optim": [375, 379], "_post_optim_log": 375, "post_optim_log": 375, "_post_steps_hook": 375, "_post_steps_log_hook": 375, "post_steps_log": 375, "reserv": 375, "logginghook": 375, "logging_hook": 375, "save_dict": 375, "some_valu": 375, "torchsnapshot": 375, "ckpt_backend": 375, "filepath": 375, "save_train": 375, "load_from_fil": 375, "204": [377, 382, 392, 395], "galleri": [377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "mem": [377, 395], "mb": [377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397], "torchrl_demo": [377, 395, 396], "246": [377, 392, 395, 396], "324": [377, 392, 395, 396], "rb_tutori": [377, 394, 395], "57": [377, 379, 392, 393, 394, 395], "906": [377, 394, 395], "536": [377, 378, 392, 395], "713": [377, 392, 395], "317": [377, 383, 392, 395], "coding_dqn": [377, 379, 395], "452": [377, 379, 392, 395], "1153": [377, 395], "dqn_with_rnn": [377, 381, 395], "758": [377, 381, 392, 395], "2223": [377, 381, 395], "multiagent_ppo": [377, 391, 395], "562": [377, 391, 392, 395], "319": [377, 385, 392, 395], "coding_ddpg": [377, 378, 395], "53": [377, 378, 379, 391, 392, 393, 395], "267": [377, 378, 392, 395], "326": [377, 378, 392, 395], "torchrl_env": [377, 395, 397], "117": [377, 392, 395, 397], "4117": [377, 395, 397], "multiagent_competitive_ddpg": [377, 390, 395], "585": [377, 390, 392, 395], "coding_ppo": [377, 380, 395], "837": [377, 380, 395], "318": [377, 380, 382, 389, 392, 395], "pretrained_model": [377, 393, 395], "54": [377, 379, 391, 392, 393, 395], "316": [377, 392, 393, 395], "3519": [377, 395], "multi_task": [377, 389, 395], "51": [377, 379, 389, 392, 393, 395], "096": [377, 389, 395], "545": [377, 383, 392, 395], "43": [377, 379, 381, 382, 392, 393, 395], "25": [377, 378, 379, 381, 384, 390, 392, 395], "066": [377, 384, 395], "241": [377, 387, 392, 395], "632": [377, 385, 395], "659": [377, 386, 395], "347": [377, 392, 395], "author": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 397], "vincent": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 394, 397], "moen": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 394, 397], "assembl": 378, "focus": [378, 384], "straightforward": [378, 379, 382, 383, 384, 385, 394], "maxim": [378, 384, 392], "transpar": [378, 381], "illustr": [378, 379, 383, 394], "bash": 378, "is_fork": [378, 379, 380, 381, 390, 391, 393], "get_start_method": [378, 379, 380, 381, 390, 391, 393], "collector_devic": 378, "loss_dict": 378, "oblivi": [378, 380, 394], "elementari": 378, "didact": 378, "dilut": 378, "pessimist": [378, 379, 380], "target_actor_network_param": 378, "actor_in_kei": 378, "actor_crit": 378, "noth": [378, 380], "compromis": 378, "hp": 378, "_value_estim": 378, "elif": [378, 379], "notimplementederror": 378, "unknown": 378, "_loss_actor": 378, "td_copi": 378, "actor_network_param": [378, 390], "value_network_param": [378, 390], "_loss_valu": 378, "pred_val": 378, "target_value_network_param": 378, "glue": 378, "_forward": 378, "ndimens": 378, "remaind": 378, "env_librari": 378, "env_task": 378, "env_arg": [378, 379], "friendli": 378, "torchr": 378, "rescal": 378, "presum": 378, "make_transformed_env": 378, "reward_sc": 378, "marker": 378, "env_per_collector": 378, "transform_state_dict": 378, "make_t_env": 378, "cheat": 378, "10m": 378, "cautiou": 378, "magnitud": [378, 390], "thousand": [378, 381], "get_env_stat": 378, "proof_env": 378, "5000": [378, 379, 380, 387], "recal": [378, 380, 394], "ddpgmlpactor": 378, "ddpgmlpqnet": 378, "materi": 378, "ornsteinuhlenbeckprocessmodul": [378, 383], "make_ddpg_actor": 378, "q_net": 378, "tight": 378, "decoupl": [378, 384], "10_000": [378, 380], "traj_len": [378, 381], "make_record": 378, "recorder_obj": 378, "flavor": 378, "buffer_s": [378, 379], "random_crop_len": 378, "prb": 378, "buffer_scratch_dir": 378, "temporari": 378, "dataflow": 378, "ceil_div": 378, "utd": [378, 381], "update_to_data": 378, "realiz": 378, "_must_": 378, "001": [378, 392], "outdat": 378, "trick": [378, 379], "despit": 378, "optimizer_actor": 378, "lr": [378, 379, 380, 381, 387, 390, 391, 392], "weight_decai": [378, 379], "optimizer_valu": 378, "total_collection_step": 378, "pretti": [378, 382, 386, 394], "rewards_ev": 378, "collected_fram": 378, "r0": 378, "numel": [378, 380, 381, 387, 390, 393, 394], "current_fram": [378, 390], "sampled_tensordict": 378, "gn1": 378, "clip_grad_norm_": [378, 380, 390, 391, 392], "gn2": 378, "gn": [378, 392], "td_record": 378, "rn": 378, "set_descript": [378, 380, 381, 390, 391, 392], "2f": 378, "800": [378, 379], "3166": 378, "11it": [378, 379], "1600": [378, 379], "09": [378, 379, 392], "892": 378, "38it": [378, 379, 380], "2400": [378, 379], "1335": [378, 392], "51it": [378, 381, 392], "3200": [378, 379], "1747": 378, "93it": [378, 379, 381], "4000": [378, 379, 380], "2104": 378, "02it": [378, 379], "48": [378, 379, 390, 392, 393], "4800": [378, 379, 392], "2345": 378, "97it": [378, 379], "56": [378, 379, 392], "5600": 378, "2495": 378, "65it": [378, 392], "47": [378, 379, 381, 391, 392, 393], "72": [378, 379, 392, 393], "68": [378, 379, 392, 393, 394], "89": [378, 379, 390, 392], "233": [378, 392], "631": [378, 392], "74": [378, 379, 391, 392, 393, 394], "83": [378, 379, 392, 393], "6400": [378, 396], "928": [378, 379], "17it": [378, 379, 392], "91": [378, 379, 392], "118": [378, 392], "296": [378, 392], "7200": 378, "646": 378, "28it": 378, "85": [378, 379, 392, 393], "121": [378, 392, 397], "07": [378, 379, 390, 391, 392], "391": [378, 392], "8000": [378, 380], "26it": [378, 379, 381], "345": [378, 392], "361": [378, 392], "93": [378, 379, 392, 393, 394], "8800": 378, "479": [378, 392], "79it": [378, 379], "76": [378, 379, 391, 392, 393], "154": [378, 392], "82": [378, 379, 392, 393], "290": [378, 392], "96": [378, 379, 392, 393], "9600": 378, "377": [378, 392], "170": [378, 392], "396": [378, 392], "10400it": 378, "354": [378, 392], "64it": [378, 379, 380, 392], "211": [378, 392], "45": [378, 379, 392, 393], "79": [378, 379, 392, 393], "52": [378, 379, 392, 393], "77": [378, 379, 391, 392, 393], "plot": [378, 380, 381, 390, 391, 392], "mention": [378, 381, 394, 397], "matplotlib": [378, 380, 381, 390, 391, 392, 394, 397], "pyplot": [378, 380, 381, 390, 391, 392, 394, 397], "plt": [378, 380, 381, 390, 391, 392, 394, 397], "zip": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "legend": [378, 390], "xlabel": [378, 381, 391, 392], "ylabel": [378, 391], "tight_layout": 378, "takeawai": [378, 379], "distpatch": 378, "jupyt": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "ipynb": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397], "sphinx": [378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397], "road": 379, "aspect": [379, 384], "highest": [379, 383], "prerequisit": [379, 381], "lookup": 379, "cart": 379, "pole": 379, "un": 379, "actuat": 379, "frictionless": 379, "duelingcnndqnet": 379, "egreedymodul": [379, 381, 383, 387], "is_notebook": 379, "shell": 379, "get_ipython": 379, "__class__": 379, "zmqinteractiveshel": 379, "qtconsol": 379, "terminalinteractiveshel": 379, "ipython": [379, 391, 392], "nameerror": [379, 390], "umbrella": 379, "misplac": 379, "misus": 379, "orchestr": [379, 384, 386], "five": 379, "64x64": 379, "motion": [379, 392], "obs_norm_sd": 379, "mp_context": 379, "simpler": [379, 382], "get_norm_stat": 379, "test_env": 379, "make_model": 379, "dummy_env": 379, "init_bia": 379, "exploration_modul": [379, 381, 383, 387], "eps_greedy_v": 379, "eps_greedy_val_env": 379, "actor_explor": 379, "get_replay_buff": 379, "n_optim": [379, 384, 385], "themselv": 379, "parametriz": 379, "get_collector": 379, "cl": 379, "bunch": 379, "ubiquit": [379, 382], "get_loss_modul": 379, "target_updat": [379, 390], "995": [379, 392], "variat": 379, "2e": [379, 392], "wd": 379, "upd": 379, "harder": [379, 396], "5_000": 379, "500000": 379, "100000": 379, "005": [379, 390], "mandatori": [379, 380, 391, 392], "fairer": 379, "budget": 379, "dqn_exp_": 379, "uuid1": [379, 397], "9895": 379, "0737": 379, "registr": [379, 397], "cumbersom": 379, "buffer_hook": 379, "weight_updat": 379, "aliv": 379, "total_reward": 379, "35it": 379, "3688": [379, 392], "1364": 379, "84it": 379, "55": [379, 392, 393, 394], "58it": [379, 392], "3778": 379, "55it": [379, 392], "3960": 379, "62it": [379, 392], "224": [379, 392], "73it": 379, "3505": 379, "83it": 379, "288": [379, 392], "65": [379, 392, 393], "56it": [379, 392], "70": [379, 380, 390, 391, 392, 393], "67it": 379, "352": [379, 392], "96it": 379, "3991": 379, "384": [379, 392], "58": [379, 381, 392, 393, 394], "45it": [379, 392], "3869": 379, "416": [379, 392], "448": [379, 392], "480": [379, 380, 392, 393], "00it": 379, "4295": [379, 392], "59it": [379, 392], "544": [379, 392], "49": [379, 392, 393], "90": [379, 380, 390, 391, 392], "4082": [379, 392], "576": [379, 392], "08it": 379, "3718": 379, "608": [379, 392], "94it": 379, "3657": [379, 392], "640": 379, "24it": 379, "3385": 379, "672": 379, "92": [379, 380, 392, 393], "704": 379, "4021": 379, "736": 379, "29it": [379, 380], "3748": 379, "768": 379, "53it": [379, 392], "832": 379, "80it": 379, "864": 379, "896": 379, "43it": 379, "960": 379, "88it": 379, "992": [379, 392], "22it": 379, "4173": 379, "31it": [379, 392], "1056": 379, "16it": 379, "1088": 379, "48it": [379, 392], "1120": 379, "1152": 379, "72it": 379, "1184": 379, "41it": [379, 392], "1216": 379, "75it": [379, 380, 392], "1248": 379, "97": [379, 392, 393], "12it": [379, 380], "1280": 379, "87it": 379, "33it": 379, "1344": 379, "1376": 379, "52it": [379, 392], "1408": 379, "1440": 379, "1472": 379, "76it": 379, "1504": 379, "1536": 379, "57it": [379, 392], "1568": 379, "1632": 379, "44it": [379, 380, 392], "1696": 379, "1728": 379, "60it": [379, 392], "1760": 379, "05it": 379, "1792": 379, "13it": 379, "1824": 379, "1856": 379, "1888": 379, "47it": [379, 392], "1920": 379, "99it": [379, 392], "1952": 379, "77it": 379, "1984": 379, "2016": 379, "2048": [379, 393], "2080": 379, "2112": [379, 392], "2144": 379, "2176": 379, "2208": 379, "2240": 379, "2272": 379, "39it": 379, "2336": 379, "2368": 379, "2432": 379, "2464": 379, "2496": 379, "90it": 379, "2528": [379, 392], "2560": 379, "2624": 379, "2656": [379, 392], "71it": 379, "2688": 379, "2720": [379, 392], "82it": 379, "2752": 379, "2784": 379, "2816": 379, "2848": 379, "2880": 379, "2912": 379, "59": [379, 381, 392, 393], "2944": [379, 392], "60": [379, 380, 390, 391, 392, 396], "2976": [379, 392], "50it": 379, "61": [379, 392, 393, 394], "3040": 379, "3072": 379, "62": [379, 392, 393], "3104": 379, "63": [379, 392, 393], "3136": 379, "3168": 379, "66it": 379, "3232": [379, 392], "2500": 379, "3264": 379, "66": [379, 392, 393], "3296": 379, "42it": [379, 392], "67": [379, 389, 392, 393], "3328": 379, "3360": 379, "20it": 379, "3392": 379, "3424": 379, "69": [379, 392], "3456": [379, 392], "3488": 379, "36it": [379, 392], "3520": [379, 393], "74it": [379, 392], "71": [379, 392], "3552": 379, "23it": [379, 381], "3584": 379, "3616": 379, "73": [379, 391, 392], "3648": 379, "3680": 379, "3712": 379, "21it": 379, "3744": 379, "98it": 379, "3776": 379, "03it": 379, "3808": 379, "19it": [379, 380], "3840": 379, "95it": 379, "3872": 379, "78": [379, 390, 392, 393], "3904": 379, "3936": 379, "3968": 379, "4032": 379, "4064": 379, "4096": 379, "4128": [379, 392], "4160": 379, "4192": 379, "68it": 379, "4224": 379, "4256": [379, 392], "4288": [379, 392], "4320": 379, "4352": 379, "4384": 379, "4416": 379, "37it": 379, "4448": 379, "4480": 379, "91it": 379, "4512": 379, "4544": 379, "4576": 379, "89it": 379, "4608": 379, "06it": 379, "4640": 379, "4672": [379, 392], "10it": 379, "4704": 379, "4736": 379, "4768": 379, "4832": 379, "4864": 379, "4896": 379, "30it": 379, "4928": 379, "69it": 379, "4960": 379, "4992": 379, "5024it": 379, "85it": 379, "print_csv_files_in_fold": 379, "folder_path": 379, "csv_file": 379, "output_str": 379, "dirpath": 379, "endswith": 379, "strip": 379, "tmp": [379, 394], "tmpp97g990q": 379, "dqn_exp_8b870bec": 379, "5446": 379, "11ef": 379, "a1": 379, "0242ac110002": 379, "36880597472190857": 379, "39912933111190796": 379, "3688059449195862": 379, "41726210713386536": 379, "3869387209415436": 379, "42945271730422974": 379, "16457098722457886": 379, "2354576736688614": 379, "221903458237648": 379, "3671031892299652": 379, "3036803603172302": 379, "4187244176864624": 379, "2843347489833832": 379, "28041237592697144": 379, "3850749135017395": 379, "grad_norm_0": 379, "95814847946167": 379, "6681418418884277": 379, "7612366676330566": 379, "8376104831695557": 379, "5918378829956055": 379, "672427177429199": 379, "561936855316162": 379, "26641321182251": 379, "094829559326172": 379, "10000000894069672": 379, "qvaluenetwork": 379, "worst": 379, "accuraci": 379, "fanci": [379, 385], "1154": 379, "talk": 380, "repetit": [380, 382, 385], "six": 380, "sophist": [380, 391], "invent": 380, "overview": [380, 384, 390, 391, 396], "theta_k": 380, "pi_": 380, "exceed": 380, "discourag": [380, 392], "indispens": 380, "analyz": 380, "lingua": 380, "franca": 380, "defaultdict": [380, 392], "3e": [380, 381, 390, 391], "max_grad_norm": [380, 390, 391], "sub_batch_s": 380, "num_epoch": [380, 391], "entropy_ep": [380, 391], "charact": 380, "inverteddoublependulum": 380, "transmit": 380, "stai": 380, "confid": [380, 390, 391], "ran": 380, "f_": 380, "mu_": 380, "difficulti": [380, 397], "d_ob": 380, "d_action": 380, "policy_modul": [380, 390, 391], "said": 380, "briefli": [380, 390, 391], "refil": [380, 391], "easiest": [380, 384, 390, 391], "mathemat": [380, 390, 391], "tradeoff": [380, 391], "advantage_modul": 380, "lr_schedul": [380, 392], "cosineannealinglr": [380, 392], "eval_str": 380, "tensordict_data": [380, 391], "data_view": [380, 391], "subdata": [380, 390, 391], "cum_reward_str": 380, "4f": [380, 381, 392], "stepcount_str": 380, "param_group": [380, 390], "lr_str": 380, "eval_rollout": 380, "nice": [380, 382, 385], "467": [380, 392], "4660": 380, "0930": [380, 392], "0003": [380, 392], "473": [380, 392], "1212": 380, "3000": 380, "478": [380, 392], "1549": 380, "1876": 380, "0002": [380, 392], "483": [380, 392], "1981": 380, "6000": 380, "485": [380, 392], "2177": 380, "7000": 380, "487": [380, 392], "49it": [380, 392], "2297": 380, "2357": 380, "9000": 380, "474": [380, 392], "2486": 380, "40it": [380, 392], "2446": 380, "cap": [380, 394], "figsiz": [380, 392], "subplot": [380, 390, 392, 397], "titl": [380, 381, 391, 392], "bit": [380, 381, 382, 390, 391, 394], "84x84": 381, "accessori": 381, "stamp": 381, "assist": 381, "emb": 381, "n_cell": 381, "customiz": 381, "wouldn": 381, "qval": 381, "stoch_polici": 381, "opportun": [381, 390], "uniniti": 381, "again": [381, 382, 383, 385, 391, 393, 394, 397], "redund": 381, "strongli": 381, "sake": [381, 393, 394], "20_000": [381, 392], "longest": 381, "npai": 381, "action_spread": 381, "0009": [381, 392], "0007": [381, 392], "150": [381, 392], "0005": 381, "topic": [382, 383, 384], "straight": 382, "backtrack": 382, "encapsul": [382, 383, 384], "reset_with_act": 382, "9677": 382, "tp": 382, "stepped_data": 382, "spatial": 382, "useless": 382, "policyless": 382, "appreci": 382, "monitor": 382, "examin": [382, 390], "tackl": 383, "delv": 383, "bypass": 383, "extractor": 383, "palliat": 383, "additivegaussianmodul": [383, 390], "had": [383, 385], "exploration_polici": [383, 390], "greedili": 383, "2d": [383, 390, 391], "innov": [383, 384], "rollout_explor": 383, "sole": 384, "tradit": [384, 390], "supervis": [384, 385, 394, 397], "n_collect": 384, "get_next_batch": 384, "ddpg_loss": 384, "total_loss": 384, "prove": 384, "reliev": 384, "concern": 384, "321": [384, 387, 392], "accustom": 385, "surprisingli": 385, "fundament": 385, "art": [385, 390, 391], "multirpocess": 385, "countless": 385, "yourself": [385, 390, 391], "lightweight": 386, "portabl": 386, "everywher": 386, "log_scalar": 386, "elaps": 386, "my_scalar": 386, "saw": [386, 392, 394], "excess": 386, "348": [386, 392], "lesson": 387, "voluntarili": 387, "value_mlp": 387, "100_000": 387, "init_rand_step": 387, "training_loop": 387, "video_record": 387, "arbitrarili": 387, "total_count": 387, "total_episod": 387, "t0": 387, "t1": 387, "conclud": [387, 393], "tutorials_python": 388, "tutorials_jupyt": 388, "env1_obs_kei": 389, "observation_stand": 389, "env2_obs_kei": 389, "observation_walk": 389, "tdreset1": 389, "tdreset2": 389, "lazy_stack": 389, "policy_common": 389, "policy_stand": 389, "policy_walk": 389, "But": 389, "env1_mak": 389, "env2_mak": 389, "_single_task": 389, "td_rollout": 389, "matteo": [390, 391], "bettini": [390, 391], "benchmarl": [390, 391], "simple_tag": 390, "maddpg": [390, 391], "multiagentparticleenviron": 390, "mpe": 390, "centralis": [390, 391], "tie": [390, 391], "iddpg": [390, 391], "typical": 390, "richard": 390, "andrew": 390, "mit": 390, "press": 390, "2018": 390, "mathbf": [390, 391], "pi": [390, 391, 392], "decentralis": [390, 391], "literatur": [390, 391], "overcom": [390, 391], "stationari": [390, 391], "concurr": [390, 391], "establish": 390, "gui": [390, 391], "is_sphinx": 390, "__sphinx_build__": 390, "n_iter": [390, 391], "evad": 390, "iteration_when_stop_training_evad": 390, "memory_s": 390, "n_optimiser_step": 390, "train_batch_s": 390, "polyak_tau": 390, "chaser": 390, "red": 390, "circl": [390, 391], "touch": [390, 392], "penal": 390, "acceler": [390, 391], "obstacl": 390, "drag": [390, 391], "elast": [390, 391], "collis": [390, 391], "imped": 390, "n_chaser": 390, "n_evad": 390, "n_obstacl": 390, "use_vma": 390, "simple_tag_v3": 390, "num_good": 390, "num_adversari": 390, "num_obstacl": 390, "max_cycl": 390, "num_vmas_env": [390, 391], "num_good_ag": 390, "num_landmark": 390, "adversary_1": 390, "four": [390, 391, 392], "n_agents_in_that_group": 390, "stress": [390, 391], "paramount": [390, 391], "n_rollout_step": [390, 391], "evolut": [390, 391], "group_nam": 390, "n_agents_in_group": 390, "minor": 390, "agents_exploration_polici": 390, "utilis": [390, 391], "withing": 390, "n_obs_per_ag": [390, 391], "n_actions_per_ag": [390, 391], "share_parameters_polici": [390, 391], "policy_net": [390, 391], "_agent": 390, "grant": [390, 391], "converg": [390, 391], "share_parameters_crit": [390, 391], "obs_act": 390, "cat_modul": 390, "critic_modul": 390, "fantast": [390, 391], "reset_td": 390, "interfer": 390, "flatten_kei": 390, "process_batch": 390, "group_shap": 390, "get_item_shap": [390, 391], "nested_done_kei": 390, "nested_terminated_kei": 390, "desc": [390, 391], "episode_reward_mean_": 390, "episode_reward_mean_map": 390, "train_group_map": 390, "group_batch": 390, "_group": 390, "loss_nam": 390, "episode_reward_mean": [390, 391], "episode_reward_mean_adversari": 390, "episode_reward_mean_ag": 390, "proce": 390, "screen": 390, "fig": 390, "set_ylabel": 390, "axvlin": 390, "color": 390, "orang": 390, "set_xlabel": 390, "video_logg": 390, "vmas_log": 390, "env_with_rend": 390, "vmas_rend": 390, "print_log_dir": 390, "profici": [390, 391], "lidar": 391, "sensor": 391, "mappo": 391, "ippo": 391, "analys": 391, "visualis": 391, "vmas_devic": 391, "6_000": 391, "minibatch_s": 391, "generalis": 391, "simd": 391, "parallelis": 391, "warp": 391, "todai": 391, "surround": 391, "dot": [391, 392], "collid": 391, "penalis": 391, "scenario_nam": 391, "final_rew": 391, "agent_collis": 391, "denot": 391, "critic_net": 391, "minibatch": 391, "episode_reward_mean_list": 391, "critic_network_param": 391, "target_critic_network_param": 391, "4579917788505554": 391, "14524875581264496": 391, "168386459350586": 391, "3613134622573853": 391, "921463131904602": 391, "2106335163116455": 391, "1925103664398193": 391, "664064407348633": 391, "6539173126220703": 391, "743558168411255": 391, "xvfb": 391, "pyvirtualdisplai": 391, "1400": [391, 392], "900": 391, "pil": 391, "rendering_callback": 391, "fromarrai": 391, "gif": 391, "save_al": 391, "append_imag": 391, "freeli": 392, "undertaken": 392, "broader": 392, "wider": 392, "algebra": 392, "acquaint": 392, "avenu": 392, "_apply_to_composit": 392, "default_x": 392, "default_i": 392, "upward": 392, "angular": 392, "sin": 392, "rad": 392, "sec": 392, "angl": 392, "deleg": 392, "new_th": 392, "new_thdot": 392, "g_forc": 392, "angle_norm": 392, "albeit": 392, "high_th": 392, "high_thdot": 392, "low_th": 392, "low_thdot": 392, "trivial": 392, "shortcut": [392, 397], "irrelev": 392, "_make_spec": 392, "td_param": 392, "render_fp": 392, "random_": 392, "_make_step": 392, "staticmethod": 392, "showcas": 392, "skeleton": 392, "_apply_transform": [392, 397], "_inv_apply_transform": [392, 397], "subset": [392, 393], "sine": 392, "cosin": 392, "sintransform": 392, "costransform": 392, "t_sin": 392, "t_co": 392, "cat_transform": 392, "simple_rollout": 392, "unexplor": 392, "init_td": 392, "traj_return": 392, "last_reward": 392, "is_ipython": 392, "inlin": 392, "get_backend": 392, "ion": 392, "gcf": 392, "clear_output": 392, "625": 392, "0748": 392, "519": 392, "0499": 392, "4472": 392, "073": 392, "0685": 392, "0408": 392, "552": 392, "5154": 392, "9086": 392, "9385": 392, "155": 392, "2568": 392, "4981": 392, "223": 392, "61it": 392, "8929": 392, "4491": 392, "581": 392, "3233": 392, "0664": 392, "596": 392, "1021": 392, "5263": 392, "9579": 392, "5807": 392, "8075": 392, "212": 392, "63it": 392, "2009": 392, "5525": 392, "914": 392, "2894": 392, "0115": 392, "0977": 392, "1845": 392, "1830": 392, "4858": 392, "2863": 392, "0297": 392, "464": 392, "4617": 392, "5997": 392, "904": 392, "1647": 392, "0777": 392, "901": 392, "4709": 392, "6813": 392, "8317": 392, "3221": 392, "5554": 392, "276": 392, "3353": 392, "701": 392, "8570": 392, "6656": 392, "463": 392, "7779": 392, "6911": 392, "875": 392, "0796": 392, "7082": 392, "308": 392, "0421": 392, "1496": 392, "5037": 392, "1755": 392, "5029": 392, "9454": 392, "665": 392, "9330": 392, "2118": 392, "444": 392, "0995": 392, "6294": 392, "3146": 392, "2909": 392, "461": 392, "9720": 392, "1298": 392, "9923": 392, "0345": 392, "3438": 392, "424": 392, "6953": 392, "5233": 392, "411": 392, "8011": 392, "5329": 392, "2677": 392, "6969": 392, "7010": 392, "376": 392, "9352": 392, "7707": 392, "6178": 392, "5646": 392, "7304": 392, "9407": 392, "942": 392, "3882": 392, "7604": 392, "3507": 392, "8928": 392, "258": 392, "6978": 392, "4641": 392, "549": 392, "6047": 392, "5005": 392, "4136": 392, "2993": 392, "3222": 392, "4046": 392, "7314": 392, "275": [392, 397], "6331": 392, "9318": 392, "961": 392, "8331": 392, "1604": 392, "4099": 392, "4761": 392, "125": [392, 394], "4262": 392, "6363": 392, "382": 392, "3593": 392, "7377": 392, "2847": 392, "3443": 392, "867": 392, "3592": 392, "4760": 392, "441": 392, "9950": 392, "8021": 392, "3528": 392, "1214": 392, "708": 392, "4023": 392, "3583": 392, "041": 392, "3801": 392, "0310": 392, "120": [392, 394], "4244": 392, "2039": 392, "4850": 392, "8748": 392, "706": 392, "4897": 392, "9210": 392, "8964": 392, "0832": 392, "3934": 392, "456": 392, "8971": 392, "2933": 392, "3377": 392, "6996": 392, "2274": 392, "8916": 392, "098": 392, "2660": 392, "9110": 392, "4503": 392, "6956": 392, "9172": 392, "4026": 392, "946": 392, "9229": 392, "5205": 392, "294": 392, "8872": 392, "6637": 392, "019": 392, "9281": 392, "2082": 392, "724": 392, "8561": 392, "6574": 392, "357": 392, "4138": 392, "5230": 392, "385": 392, "4065": 392, "5642": 392, "921": 392, "9786": 392, "4129": 392, "5831": 392, "266": 392, "7723": 392, "4152": 392, "0898": 392, "389": 392, "5155": 392, "5376": 392, "5616": 392, "4094": 392, "283": 392, "5333": 392, "4803": 392, "895": 392, "6566": 392, "2588": 392, "662": 392, "4732": 392, "7503": 392, "068": 392, "0714": 392, "3370": 392, "059": 392, "8612": 392, "1915": 392, "3855": 392, "0349": 392, "9644": 392, "4538": 392, "445": 392, "0392": 392, "4080": 392, "1648": 392, "9599": 392, "143": [392, 394], "4284": 392, "5946": 392, "2590": 392, "9181": 392, "4621": 392, "9075": 392, "674": 392, "1772": 392, "9444": 392, "351": 392, "9391": 392, "5595": 392, "8673": 392, "6240": 392, "5919": 392, "1071": 392, "9127": 392, "251": 392, "9799": 392, "3131": 392, "9612": 392, "9705": 392, "8741": 392, "2230": 392, "0972": 392, "0337": 392, "0350": 392, "0654": 392, "2441": 392, "4596": 392, "362": 392, "103": 392, "4362": 392, "171": [392, 394], "104": [392, 394], "4041": 392, "6907": 392, "105": 392, "4664": 392, "2760": 392, "0299": 392, "9712": 392, "349": 392, "107": 392, "3332": 392, "4479": 392, "772": 392, "108": [392, 394], "4357": 392, "9591": 392, "543": 392, "109": 392, "6216": 392, "1353": 392, "692": 392, "110": 392, "6261": 392, "7086": 392, "496": 392, "111": 392, "7758": 392, "9818": 392, "112": 392, "7772": 392, "5055": 392, "113": 392, "5840": 392, "3180": 392, "2083": 392, "115": 392, "5275": 392, "6873": 392, "116": 392, "4107": 392, "1624": 392, "6372": 392, "2571": 392, "4039": 392, "4428": 392, "119": 392, "4728": 392, "5628": 392, "6767": 392, "2466": 392, "522": 392, "5873": 392, "5072": 392, "6548": 392, "3766": 392, "123": 392, "5134": 392, "1955": 392, "124": 392, "2481": 392, "0591": 392, "4500": 392, "3368": 392, "126": 392, "9708": 392, "7059": 392, "127": 392, "3031": 392, "2534": 392, "843": 392, "3327": 392, "6193": 392, "129": 392, "4831": 392, "1172": 392, "2593": 392, "4219": 392, "962": 392, "8380": 392, "899": 392, "132": 392, "2721": 392, "9048": 392, "166": 392, "133": 392, "2419": 392, "5248": 392, "2139": 392, "4278": 392, "135": 392, "0690": 392, "5140": 392, "136": 392, "1140": 392, "7402": 392, "137": 392, "5356": 392, "1636": 392, "138": 392, "0671": 392, "8798": 392, "139": 392, "8918": 392, "3298": 392, "307": 392, "140": 392, "1779": 392, "141": 392, "1771": 392, "3624": 392, "936": 392, "142": [392, 394], "1683": 392, "4810": 392, "9373": 392, "4435": 392, "4396": 392, "8092": 392, "145": 392, "2572": 392, "146": 392, "4212": 392, "0260": 392, "147": 392, "0939": 392, "6478": 392, "605": 392, "148": 392, "6606": 392, "7289": 392, "149": 392, "9300": 392, "7193": 392, "563": 392, "1166": 392, "8514": 392, "151": [392, 394], "9108": 392, "0672": 392, "292": 392, "152": 392, "8591": 392, "3768": 392, "153": 392, "9976": 392, "0576": 392, "0067": 392, "935": 392, "4199": 392, "1722": 392, "156": 392, "8310": 392, "3466": 392, "157": 392, "8631": 392, "2492": 392, "158": 392, "8763": 392, "1277": 392, "159": 392, "5562": 392, "7446": 392, "1082": 392, "9830": 392, "161": 392, "0946": 392, "5229": 392, "162": 392, "4574": 392, "6900": 392, "163": [392, 393], "2229": 392, "0318": 392, "482": 392, "164": 392, "0543": 392, "0817": 392, "761": 392, "165": 392, "2809": 392, "5118": 392, "366": 392, "1142": 392, "5635": 392, "167": 392, "1949": 392, "2327": 392, "982": 392, "168": 392, "0967": 392, "0387": 392, "457": 392, "169": 392, "0782": 392, "2150": 392, "5222": 392, "3725": 392, "9288": 392, "9837": 392, "1416": 392, "1099": 392, "173": 392, "8620": 392, "8475": 392, "174": 392, "01it": 392, "1807": 392, "4375": 392, "175": 392, "1148": 392, "0645": 392, "2751": 392, "8313": 392, "177": 392, "9286": 392, "9770": 392, "178": 392, "5735": 392, "2837": 392, "179": 392, "2926": 392, "9489": 392, "180": 392, "1507": 392, "181": 392, "8724": 392, "3567": 392, "182": [392, 397], "3574": 392, "6140": 392, "183": 392, "7895": 392, "2518": 392, "184": 392, "6146": 392, "185": 392, "8776": 392, "7358": 392, "186": 392, "3722": 392, "8428": 392, "187": [392, 397], "7955": 392, "188": 392, "0092": 392, "7106": 392, "829": 392, "189": 392, "2264": 392, "6919": 392, "190": 392, "1438": 392, "1362": 392, "191": 392, "0618": 392, "8217": 392, "9420": 392, "6765": 392, "193": 392, "7745": 392, "0709": 392, "194": 392, "9478": 392, "6867": 392, "195": 392, "6507": 392, "6225": 392, "196": 392, "2244": 392, "2195": 392, "197": 392, "5385": 392, "9263": 392, "198": 392, "1878": 392, "2374": 392, "8054": 392, "3504": 392, "557": 392, "0766": 392, "201": 392, "2011": 392, "8393": 392, "202": 392, "0803": 392, "7815": 392, "203": 392, "8363": 392, "2460": 392, "8643": 392, "2191": 392, "593": 392, "205": 392, "0773": 392, "1343": 392, "206": 392, "8657": 392, "207": 392, "9304": 392, "7584": 392, "208": 392, "8752": 392, "2307": 392, "209": 392, "5250": 392, "4869": 392, "7837": 392, "5762": 392, "6661": 392, "8600": 392, "2502": 392, "1752": 392, "3075": 392, "8871": 392, "214": 392, "9406": 392, "8090": 392, "215": 392, "6291": 392, "8923": 392, "876": 392, "216": 392, "9504": 392, "21e": 392, "217": 392, "7431": 392, "7880": 392, "218": 392, "4463": 392, "5432": 392, "219": [392, 397], "3793": 392, "3313": 392, "8843": 392, "0369": 392, "065": 392, "221": 392, "4828": 392, "8391": 392, "222": 392, "6265": 392, "2913": 392, "947": 392, "5541": 392, "1252": 392, "7342": 392, "2396": 392, "225": 392, "5936": 392, "1924": 392, "226": 392, "9975": 392, "2045": 392, "227": 392, "8367": 392, "9540": 392, "228": 392, "7259": 392, "6743": 392, "229": 392, "4827": 392, "7528": 392, "230": 392, "7361": 392, "8756": 392, "231": 392, "7646": 392, "1116": 392, "232": 392, "5426": 392, "8385": 392, "5662": 392, "8585": 392, "234": 392, "8234": 392, "7930": 392, "235": 392, "2648": 392, "9309": 392, "236": 392, "6817": 392, "237": [392, 394], "0943": 392, "1533": 392, "238": 392, "3045": 392, "0483": 392, "239": 392, "6415": 392, "0201": 392, "4437": 392, "4365": 392, "242": 392, "0358": 392, "4943": 392, "243": 392, "1272": 392, "5003": 392, "1180": 392, "2637": 392, "245": 392, "7197": 392, "0873": 392, "2917": 392, "247": 392, "0160": 392, "0738": 392, "248": 392, "3689": 392, "0120": 392, "249": 392, "5570": 392, "0475": 392, "250": 392, "4423": 392, "2220": 392, "6803": 392, "252": 392, "1465": 392, "7214": 392, "253": 392, "54it": 392, "8801": 392, "7034": 392, "254": 392, "9136": 392, "4076": 392, "7589": 392, "5013": 392, "8150": 392, "2241": 392, "257": 392, "0753": 392, "8081": 392, "1951": 392, "8314": 392, "259": 392, "0038": 392, "260": 392, "0889": 392, "4616": 392, "261": 392, "0655": 392, "262": 392, "8333": 392, "9476": 392, "263": 392, "7554": 392, "3798": 392, "264": 392, "3717": 392, "3947": 392, "529": 392, "265": 392, "3060": 392, "6495": 392, "7467": 392, "8889": 392, "8457": 392, "591": 392, "7137": 392, "0536": 392, "771": 392, "269": 392, "1651": 392, "388": 392, "270": 392, "8246": 392, "5709": 392, "281": 392, "271": 392, "7502": 392, "0521": 392, "032": 392, "272": 392, "5475": 392, "7253": 392, "273": 392, "2856": 392, "7130": 392, "274": 392, "2778": 392, "4122": 392, "8368": 392, "1841": 392, "9622": 392, "1603": 392, "003e": 392, "277": 392, "0247": 392, "346": 392, "278": 392, "2238": 392, "6418": 392, "279": 392, "0626": 392, "2538": 392, "280": 392, "0149": 392, "7380": 392, "2167": 392, "8911": 392, "282": 392, "8725": 392, "1983": 392, "8142": 392, "3709": 392, "284": 392, "4989": 392, "285": 392, "6464": 392, "6210": 392, "286": 392, "9726": 392, "0820": 392, "287": 392, "6975": 392, "9091": 392, "4926": 392, "4791": 392, "289": 392, "0905": 392, "3500": 392, "2287": 392, "291": 392, "9918": 392, "5543": 392, "9245": 392, "6444": 392, "293": 392, "0448": 392, "4769": 392, "8566": 392, "7208": 392, "295": 392, "0966": 392, "5303": 392, "1537": 392, "023": 392, "297": 392, "2682": 392, "564": 392, "298": 392, "4318": 392, "5063": 392, "299": 392, "7475": 392, "4190": 392, "8186": 392, "5077": 392, "301": 392, "1883": 392, "5291": 392, "472": 392, "302": 392, "3998": 392, "303": 392, "3622": 392, "626": 392, "304": 392, "9500": 392, "5664": 392, "305": 392, "5697": 392, "3024": 392, "306": 392, "3117": 392, "0052": 392, "006": 392, "0981": [392, 397], "9312": 392, "3873": 392, "309": 392, "0411": 392, "2650": 392, "1656": 392, "0228": 392, "004": 392, "311": 392, "1196": 392, "2478": 392, "312": 392, "7353": 392, "0812": 392, "313": 392, "3022": 392, "314": 392, "1406": 392, "4626": 392, "315": 392, "2156": 392, "851": 392, "1953": 392, "3774": 392, "6385": 392, "9917": 392, "2764": 392, "905": 392, "6391": 392, "9317": 392, "9748": 392, "2679": 392, "8495": 392, "5125": 392, "8177": 392, "6602": 392, "323": 392, "0704": 392, "5776": 392, "9833": [392, 396], "1339": 392, "402": 392, "325": 392, "1238": 392, "9299": 392, "0227": 392, "327": 392, "7727": 392, "1607": 392, "336": 392, "328": 392, "3958": 392, "3223": 392, "763": 392, "329": 392, "4742": 392, "1797": 392, "330": 392, "0144": 392, "0085": 392, "791": 392, "331": 392, "8284": 392, "0428": 392, "332": 392, "7365": 392, "333": 392, "4566": 392, "0781": 392, "086": 392, "334": 392, "3355": 392, "0230": 392, "335": 392, "9346": 392, "0423": 392, "076": 392, "3711": 392, "6855": 392, "337": 392, "0304": 392, "0023": 392, "8459": 392, "338": 392, "9998": 392, "4399": 392, "339": 392, "2303": 392, "1346": 392, "340": 392, "2915": 392, "7116": 392, "341": 392, "5560": 392, "0487": 392, "342": 392, "5119": 392, "061": 392, "343": 392, "3305": 392, "3705": 392, "957": 392, "344": 392, "6068": 392, "5731": 392, "3897": 392, "0376": 392, "0434": 392, "012": 392, "1300": 392, "1215": 392, "0968": 392, "0885": 392, "350": 392, "1348": 392, "0073": 392, "5052": 392, "4184": 392, "2817": 392, "8887": 392, "353": 392, "4779": 392, "1009": 392, "0604": 392, "599": 392, "355": 392, "4486": 392, "1176": 392, "656": 392, "356": 392, "2436": 392, "0668": 392, "8849": 392, "0012": 392, "358": 392, "7511": 392, "8804": 392, "359": 392, "8870": 392, "6728": 392, "360": 392, "8841": 392, "5508": 392, "5242": 392, "0013": 392, "6185": 392, "363": 392, "1378": 392, "0204": 392, "364": 392, "0355": 392, "685": 392, "365": 392, "4884": 392, "0231": 392, "0014": 392, "6793": 392, "367": 392, "9834": 392, "863": 392, "368": 392, "6709": 392, "462": 392, "369": 392, "5199": 392, "9790": 392, "370": 392, "9401": 392, "7802": 392, "371": 392, "6723": 392, "372": 392, "2678": 392, "6201": 392, "373": 392, "2184": 392, "7385": 392, "374": 392, "6344": 392, "617": 392, "375": 392, "9945": 392, "0772": 392, "567": 392, "7576": 392, "0398": 392, "3396": 392, "0022": 392, "094": 392, "378": 392, "3073": 392, "4018": 392, "379": 392, "1869": 392, "380": 392, "0481": 392, "1117": 392, "381": 392, "6823": 392, "981": 392, "8305": 392, "0210": 392, "383": 392, "4908": 392, "0272": 392, "538": 392, "3267": 392, "0111": 392, "7965": 392, "1796": 392, "0039": 392, "5396": 392, "386": 392, "3757": 392, "0490": 392, "387": 392, "1394": 392, "4187": 392, "2986": 392, "7954": 392, "1274": 392, "0063": 392, "813": 392, "390": 392, "8706": 392, "0114": 392, "6922": 392, "2423": 392, "392": 392, "9115": 392, "2602": 392, "393": 392, "2449": 392, "0783": 392, "394": 392, "0631": 392, "0057": 392, "7444": 392, "395": 392, "3339": 392, "0167": 392, "4806": 392, "397": 392, "4171": 392, "067": 392, "398": 392, "2618": 392, "5809": 392, "399": 392, "0054": 392, "3364": 392, "8733": 392, "0184": 392, "401": 392, "9137": 392, "0113": 392, "025": 392, "0386": 392, "0625": 392, "403": 392, "1332": 392, "0582": 392, "7816": 392, "404": 392, "8341": 392, "0941": 392, "854": 392, "405": 392, "8615": 392, "588": 392, "406": 392, "3849": 392, "008": 392, "407": 392, "9395": 392, "0765": 392, "055": 392, "408": 392, "2685": 392, "2235": 392, "688": 392, "409": 392, "3052": 392, "4249": 392, "410": 392, "6806": 392, "6383": 392, "3721": 392, "9981": 392, "412": 392, "1862": 392, "822": 392, "413": 392, "9811": 392, "0171": 392, "013": 392, "414": 392, "0252": 392, "0049": 392, "6205": 392, "415": 392, "1108": 392, "4921": 392, "9142": 392, "8130": 392, "417": 392, "1725": 392, "0036": 392, "3196": 392, "418": 392, "7795": 392, "0242": 392, "799": 392, "419": 392, "7737": 392, "0138": 392, "420": 392, "1462": 392, "0053": 392, "421": 392, "9226": 392, "6139": 392, "422": 392, "9889": 392, "0403": 392, "423": 392, "6194": 392, "0032": 392, "3989": 392, "0104": 392, "425": 392, "9960": 392, "6009": 392, "426": 392, "2697": 392, "0914": 392, "427": 392, "1114": 392, "428": 392, "9862": 392, "1932": 392, "429": 392, "0637": 392, "0623": 392, "082": 392, "430": 392, "9906": 392, "2031": 392, "431": 392, "9948": 392, "0895": 392, "432": 392, "1970": 392, "0256": 392, "4231": 392, "0449": 392, "644": 392, "434": 392, "1039": 392, "1973": 392, "435": 392, "4561": 392, "1225": 392, "436": 392, "0211": 392, "2125": 392, "437": 392, "3866": 392, "0050": 392, "7202": 392, "438": 392, "6388": 392, "0072": 392, "439": 392, "1187": 392, "0015": 392, "5116": 392, "440": 392, "0432": 392, "0025": 392, "7809": 392, "1925": 392, "0103": 392, "442": 392, "9570": 392, "443": 392, "0871": 392, "5601": 392, "0165": 392, "0047": 392, "6061": 392, "2746": 392, "0027": 392, "7887": 392, "446": 392, "1835": 392, "0035": 392, "855": 392, "447": 392, "8420": 392, "548": 392, "2653": 392, "0126": 392, "9736": 392, "449": 392, "0594": 392, "0119": 392, "6196": 392, "450": 392, "4509": 392, "0373": 392, "451": 392, "0620": 392, "6898": 392, "3235": 392, "687": 392, "453": 392, "5879": 392, "454": 392, "8406": 392, "0694": 392, "455": 392, "8259": 392, "0235": 392, "8500": 392, "0024": 392, "4054": 392, "458": 392, "2027": 392, "0894": 392, "459": 392, "5966": 392, "460": 392, "6942": 392, "0016": 392, "4254": 392, "6703": 392, "0145": 392, "8124": 392, "0218": 392, "9196": 392, "0188": 392, "8986": 392, "0884": 392, "0084": 392, "5624": 392, "465": 392, "8862": 392, "0006": 392, "5384": 392, "466": 392, "5837": 392, "8954": 392, "0101": 392, "6751": 392, "468": 392, "8063": 392, "0122": 392, "9635": 392, "469": 392, "0692": 392, "4216": 392, "470": 392, "1227": 392, "0586": 392, "162e": 392, "471": 392, "9690": 392, "4166": 392, "6324": 392, "0778": 392, "8548": 392, "0017": 392, "4408": 392, "475": 392, "8125": 392, "1515": 392, "476": 392, "2733": 392, "0044": 392, "2836": 392, "477": 392, "7497": 392, "7681": 392, "8547": 392, "0105": 392, "7212": 392, "9848": 392, "0019": 392, "6498": 392, "1987": 392, "0011": 392, "5473": 392, "481": 392, "8991": 392, "6091": 392, "9189": 392, "5771": 392, "6781": 392, "7542": 392, "484": 392, "5959": 392, "0064": 392, "2547": 392, "486": 392, "0636": 392, "547": 392, "0065": 392, "488": 392, "1694": 392, "0083": 392, "5759": 392, "489": 392, "0493": 392, "0021": 392, "7805": 392, "490": 392, "0950": 392, "497": 392, "491": 392, "9717": 392, "3672": 392, "492": 392, "0207": 392, "493": 392, "8266": 392, "5365": 392, "494": 392, "2623": 392, "5078": 392, "495": 392, "4545": 392, "09636": 392, "8754": 392, "0010": 392, "498": 392, "0031": 392, "8269": 392, "499": 392, "6642": 392, "2284": 392, "501": 392, "9130": 392, "0008": 392, "502": 392, "503": 392, "7624": 392, "0056": 392, "3858": 392, "504": 392, "0890": 392, "0042": 392, "505": 392, "7505": 392, "2157": 392, "506": 392, "8394": 392, "3413": 392, "507": 392, "9609": 392, "0041": 392, "6905": 392, "508": 392, "8467": 392, "4409": 392, "509": 392, "510": 392, "8128": 392, "3559": 392, "511": 392, "1479": 392, "0264": 392, "1589": 392, "566": 392, "513": 392, "2756": 392, "0046": 392, "5266": 392, "514": 392, "9873": 392, "0112": 392, "9314": 392, "515": 392, "3791": 392, "0721": 392, "516": 392, "4580": 392, "0758": 392, "6114": 392, "517": 392, "2431": 392, "518": 392, "1958": 392, "5553": 392, "8924": 392, "0097": 392, "520": 392, "3737": 392, "0234": 392, "521": 392, "9125": 392, "4623": 392, "3230": 392, "0589": 392, "3784": 392, "523": 392, "9482": 392, "0051": 392, "524": 392, "1979": 392, "0045": 392, "6401": 392, "525": 392, "1588": 392, "0048": 392, "6255": 392, "526": 392, "6084": 392, "3477": 392, "1475": 392, "0209": 392, "528": 392, "7611": 392, "1040": 392, "09it": 392, "0099": 392, "0173": 392, "643": 392, "530": 392, "8189": 392, "4358": 392, "531": 392, "9897": 392, "532": 392, "1548": 392, "9751": 392, "533": 392, "6362": 392, "7495": 392, "534": 392, "27it": 392, "1749": 392, "9513": 392, "535": 392, "7708": 392, "0371": 392, "2649": 392, "0437": 392, "537": [392, 394], "5491": 392, "0276": 392, "6426": 392, "7294": 392, "078e": 392, "539": 392, "9928": 392, "540": 392, "7937": 392, "0124": 392, "9664": 392, "541": 392, "3342": 392, "542": 392, "2046": 392, "5496": 392, "0956": 392, "0059": 392, "9028": 392, "5843": 392, "546": 392, "0674": 392, "0178": 392, "797": 392, "2815": 392, "0599": 392, "1587": 392, "9276": 392, "8228": 392, "6164": 392, "551": 392, "6850": 392, "9167": 392, "3092": 392, "0670": 392, "9177": 392, "553": 392, "1599": 392, "0043": 392, "554": 392, "6367": 392, "555": 392, "556": 392, "6694": 392, "2622": 392, "0372": 392, "4841": 392, "558": 392, "2707": 392, "757": 392, "559": 392, "2267": 392, "5415": 392, "560": 392, "4556": 392, "0163": 392, "561": 392, "1839": 392, "0809": 392, "6262": 392, "0278": 392, "1112": 392, "6155": 392, "565": 392, "1427": 392, "3582": 392, "624": 392, "7870": 392, "9490": 392, "0439": 392, "8796": 392, "568": 392, "8026": 392, "612": 392, "569": [392, 397], "3147": 392, "8486": 392, "570": 392, "7917": 392, "0129": 392, "571": [392, 397], "9553": 392, "0020": 392, "6871": 392, "572": 392, "3132": 392, "0159": 392, "8646": 392, "573": 392, "5320": 392, "0269": 392, "574": 392, "2955": 392, "0245": 392, "575": 392, "3347": 392, "0179": 392, "9718": 392, "1629": 392, "804": 392, "577": 392, "4164": 392, "0070": 392, "4335": 392, "578": 392, "579": 392, "3049": 392, "9063": 392, "580": 392, "8785": 392, "3295": 392, "5184": 392, "0546": 392, "582": 392, "4589": 392, "583": 392, "4697": 392, "2476": 392, "584": 392, "2397": 392, "4953": 392, "1775": 392, "586": 392, "2258": 392, "0110": 392, "7671": 392, "587": 392, "3981": 392, "8590": 392, "589": 392, "9820": 392, "4221": 392, "590": 392, "1293": 392, "0116": 392, "868": 392, "1675": 392, "5931": 392, "592": 392, "2910": 392, "5219": 392, "2124": 392, "1730": 392, "737": 392, "594": 392, "2914": 392, "0206": 392, "595": 392, "0172": 392, "3982": 392, "0945": 392, "0121": 392, "4789": 392, "597": 392, "3805": 392, "4074": 392, "598": 392, "3310": 392, "5065": 392, "6028": 392, "6316": 392, "6724": 392, "6523": 392, "601": 392, "0136": 392, "4298": 392, "602": 392, "3524": 392, "2629": 392, "603": 392, "2635": 392, "7839": 392, "604": 392, "6041": 392, "8027": 392, "4170": 392, "4675": 392, "606": 392, "3153": 392, "9316": 392, "607": 392, "0649": 392, "9722": 392, "7989": 392, "0329": 392, "609": 392, "1976": 392, "6852": 392, "610": 392, "4793": 392, "1255": 392, "611": 392, "4581": 392, "0394": 392, "2047": 392, "0326": 392, "613": 392, "8967": 392, "8619": 392, "614": 392, "5906": 392, "6491": 392, "615": 392, "6634": 392, "4394": 392, "616": 392, "0624": 392, "0061": 392, "5676": 392, "3259": 392, "0131": 392, "7733": 392, "618": 392, "7515": 392, "0189": 392, "5575": 392, "619": 392, "9313": 392, "6286": 392, "620": 392, "4325": 392, "7832": 392, "621": 392, "1134": 392, "622": 392, "4572": 392, "0500": 392, "5838": 392, "623": 392, "3818": 392, "8623": 392, "1253": 392, "6622": 392, "subject": 392, "explain": 393, "semat": 393, "r3mtransform": 393, "env_transform": [393, 397], "s3": 393, "amazonaw": 393, "r3m_50": 393, "374m": 393, "9m": 393, "133mb": 393, "6m": 393, "119mb": 393, "8mb": 393, "2m": 393, "2mb": 393, "0m": 393, "6mb": 393, "106m": 393, "7mb": 393, "115m": 393, "5mb": 393, "130m": 393, "138m": 393, "1mb": 393, "148m": 393, "162m": 393, "169m": 393, "179m": 393, "184m": 393, "0mb": 393, "195m": 393, "9mb": 393, "200m": 393, "212m": 393, "217m": 393, "229m": 393, "246m": 393, "262m": 393, "268m": 393, "277m": 393, "283m": 393, "295m": 393, "310m": 393, "318m": 393, "328m": 393, "342m": 393, "349m": 393, "359m": 393, "366m": 393, "wiser": 393, "batteri": 394, "buffer_list": 394, "lowest": 394, "medium": 394, "buffer_lazytensor": 394, "buffer_lazymemmap": 394, "tempdir": 394, "tmpbxb2dvsi": 394, "fullest": 394, "mydata": 394, "background": 394, "question": [394, 396], "_i": 394, "artifici": 394, "0893e": 394, "hamper": 394, "she": 394, "pars": 394, "proport": 394, "hist": 394, "barcontain": 394, "artist": 394, "reappear": 394, "unfold": 394, "problemat": 394, "4th": 394, "prioritizedslicesampl": 394, "tensordictmaxvaluewrit": 394, "demo": 396, "icml": 396, "vmoen": 396, "fb": 396, "invest": 396, "platform": 396, "media": 396, "predominantli": 396, "tensordict1": 396, "tensordict2": 396, "tensordict_sampl": 396, "_sampler": 396, "_sum_tre": 396, "modulenotfounderror": 396, "28791671991348267": 396, "noopresetenv": [396, 397], "backbone_modul": 396, "params_expand": 396, "exec_sequ": 396, "tensordict_exp": 396, "base_modul": 396, "0137": 396, "1524": 396, "0641": 396, "viewbackward0": 396, "asstridedbackward0": 396, "8728": 396, "1334": 396, "3494": 396, "6887": 396, "6402": 396, "_safetanhbackward": 396, "1132": 396, "1762": 396, "3430": 396, "2668": 396, "2918": 396, "6239": 396, "tensordicts_prealloc": 396, "tensordicts_stack": 396, "tensordict_rollout": [396, 397], "disclaim": 396, "concatmodul": 396, "loss_td": 396, "year": 396, "roadmap": 396, "compris": 396, "contributor": 396, "curiou": 396, "nascent": 396, "unsupervis": 397, "unifi": 397, "_build_env": 397, "bipedalwalk": 397, "bipedalwalkerhardcor": 397, "blackjack": 397, "carrac": 397, "deserv": 397, "__episode__": 397, "__trajectory__": 397, "void": 397, "reproduct": 397, "reset_data": 397, "tensordict_tprim": 397, "imshow": 397, "axesimag": 397, "0x7f30d2320a00": 397, "traceback": 397, "1371": 397, "784": 397, "3047": 397, "1423": 397, "_check_version_exist": 397, "ns": 397, "_check_name_exist": 397, "_check_namespace_exist": 397, "namespacenotfound": 397, "suggestion_msg": 397, "wrapper1": 397, "wrapper2": 397, "obviou": 397, "truth": 397, "env0": 397, "env_transformed_bi": 397, "stanc": 397, "transformeddistribut": 397, "base_dist": 397, "concat": 397, "mofidi": 397, "transformedenviron": 397, "moderet": 397, "computation": 397, "legitim": 397, "incom": 397, "amongst": 397, "has_cuda": 397, "wor": 397, "convention": 397, "markovian": 397, "constain": 397, "bar_": 397, "get_someth": 397, "aargh": 397, "is_clos": 397, "foo_list": 397, "parallen": 397, "particularili": 397, "evolv": 397, "steadi": 397, "approx": 397, "_extra_st": 397, "observation_ssq": 397, "observation_sum": 397, "dispach": 397, "absor": 397}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "BinaryDiscreteTensorSpec"], [26, 0, 1, "", "BoundedTensorSpec"], [27, 0, 1, "", "CompositeSpec"], [28, 0, 1, "", "ConstantKLController"], [29, 0, 1, "", "DiscreteTensorSpec"], [30, 0, 1, "", "Flat2TED"], [31, 0, 1, "", "H5Combine"], [32, 0, 1, "", "H5Split"], [33, 0, 1, "", "LazyStackedCompositeSpec"], [34, 0, 1, "", "LazyStackedTensorSpec"], [35, 0, 1, "", "MultiDiscreteTensorSpec"], [36, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [37, 0, 1, "", "MultiStep"], [38, 0, 1, "", "Nested2TED"], [39, 0, 1, "", "NonTensorSpec"], [40, 0, 1, "", "OneHotDiscreteTensorSpec"], [41, 0, 1, "", "PairwiseDataset"], [42, 0, 1, "", "PrioritizedReplayBuffer"], [43, 0, 1, "", "PromptData"], [44, 0, 1, "", "PromptTensorDictTokenizer"], [45, 0, 1, "", "ReplayBuffer"], [46, 0, 1, "", "RewardData"], [47, 0, 1, "", "RolloutFromModel"], [48, 0, 1, "", "TED2Flat"], [49, 0, 1, "", "TED2Nested"], [50, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [51, 0, 1, "", "TensorDictReplayBuffer"], [52, 0, 1, "", "TensorDictTokenizer"], [53, 0, 1, "", "TensorSpec"], [54, 0, 1, "", "TokenizedDatasetLoader"], [55, 0, 1, "", "UnboundedContinuousTensorSpec"], [56, 0, 1, "", "UnboundedDiscreteTensorSpec"], [57, 0, 1, "", "check_no_exclusive_keys"], [58, 0, 1, "", "consolidate_spec"], [59, 0, 1, "", "contains_lazy_spec"], [60, 0, 1, "", "create_infinite_iterator"], [70, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 3, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 3, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "contains"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 3, 1, "", "sample"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 3, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "update_mask"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "contains"], [33, 1, 1, "", "empty"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "get"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_empty"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "items"], [33, 1, 1, "", "keys"], [33, 1, 1, "", "lock_"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 3, 1, "", "sample"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "unlock_"], [33, 1, 1, "", "values"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 3, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 3, 1, "", "sample"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[36, 1, 1, "", "assert_is_in"], [36, 1, 1, "", "clear_device_"], [36, 1, 1, "", "contains"], [36, 1, 1, "", "encode"], [36, 1, 1, "", "expand"], [36, 1, 1, "", "flatten"], [36, 1, 1, "", "implements_for_spec"], [36, 1, 1, "", "index"], [36, 1, 1, "", "is_in"], [36, 1, 1, "", "project"], [36, 1, 1, "", "rand"], [36, 1, 1, "", "reshape"], [36, 3, 1, "", "sample"], [36, 1, 1, "", "squeeze"], [36, 1, 1, "", "to_categorical"], [36, 1, 1, "", "to_categorical_spec"], [36, 1, 1, "", "to_numpy"], [36, 1, 1, "", "type_check"], [36, 1, 1, "", "unflatten"], [36, 1, 1, "", "update_mask"], [36, 1, 1, "", "view"], [36, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[37, 1, 1, "", "add_module"], [37, 1, 1, "", "apply"], [37, 1, 1, "", "bfloat16"], [37, 1, 1, "", "buffers"], [37, 1, 1, "", "children"], [37, 1, 1, "", "compile"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 1, 1, "", "double"], [37, 1, 1, "", "eval"], [37, 1, 1, "", "extra_repr"], [37, 1, 1, "", "float"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "get_buffer"], [37, 1, 1, "", "get_extra_state"], [37, 1, 1, "", "get_parameter"], [37, 1, 1, "", "get_submodule"], [37, 1, 1, "", "half"], [37, 1, 1, "", "ipu"], [37, 1, 1, "", "load_state_dict"], [37, 1, 1, "", "modules"], [37, 1, 1, "", "mtia"], [37, 1, 1, "", "named_buffers"], [37, 1, 1, "", "named_children"], [37, 1, 1, "", "named_modules"], [37, 1, 1, "", "named_parameters"], [37, 1, 1, "", "parameters"], [37, 1, 1, "", "register_backward_hook"], [37, 1, 1, "", "register_buffer"], [37, 1, 1, "", "register_forward_hook"], [37, 1, 1, "", "register_forward_pre_hook"], [37, 1, 1, "", "register_full_backward_hook"], [37, 1, 1, "", "register_full_backward_pre_hook"], [37, 1, 1, "", "register_load_state_dict_post_hook"], [37, 1, 1, "", "register_load_state_dict_pre_hook"], [37, 1, 1, "", "register_module"], [37, 1, 1, "", "register_parameter"], [37, 1, 1, "", "register_state_dict_post_hook"], [37, 1, 1, "", "register_state_dict_pre_hook"], [37, 1, 1, "", "requires_grad_"], [37, 1, 1, "", "set_extra_state"], [37, 1, 1, "", "set_submodule"], [37, 1, 1, "", "share_memory"], [37, 1, 1, "", "state_dict"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_empty"], [37, 1, 1, "", "train"], [37, 1, 1, "", "type"], [37, 1, 1, "", "xpu"], [37, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 3, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 3, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to_categorical"], [40, 1, 1, "", "to_categorical_spec"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "update_mask"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[41, 3, 1, "", "batch_size"], [41, 3, 1, "", "device"], [41, 1, 1, "", "from_dataset"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load"], [41, 1, 1, "", "load_"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 1, 1, "", "memmap_refresh_"], [41, 3, 1, "", "names"], [41, 1, 1, "", "save"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dump"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "load"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "register_load_hook"], [42, 1, 1, "", "register_save_hook"], [42, 1, 1, "", "sample"], [42, 3, 1, "", "sampler"], [42, 1, 1, "", "save"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"], [42, 3, 1, "", "storage"], [42, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[43, 3, 1, "", "batch_size"], [43, 3, 1, "", "device"], [43, 1, 1, "", "from_dataset"], [43, 1, 1, "", "from_tensordict"], [43, 1, 1, "", "get"], [43, 1, 1, "", "load"], [43, 1, 1, "", "load_"], [43, 1, 1, "", "load_memmap"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "memmap"], [43, 1, 1, "", "memmap_"], [43, 1, 1, "", "memmap_like"], [43, 1, 1, "", "memmap_refresh_"], [43, 3, 1, "", "names"], [43, 1, 1, "", "save"], [43, 1, 1, "", "set"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to_tensordict"], [43, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[45, 1, 1, "", "add"], [45, 1, 1, "", "append_transform"], [45, 1, 1, "", "dump"], [45, 1, 1, "", "dumps"], [45, 1, 1, "", "empty"], [45, 1, 1, "", "extend"], [45, 1, 1, "", "insert_transform"], [45, 1, 1, "", "load"], [45, 1, 1, "", "loads"], [45, 1, 1, "", "register_load_hook"], [45, 1, 1, "", "register_save_hook"], [45, 1, 1, "", "sample"], [45, 3, 1, "", "sampler"], [45, 1, 1, "", "save"], [45, 1, 1, "", "set_sampler"], [45, 1, 1, "", "set_storage"], [45, 1, 1, "", "set_writer"], [45, 3, 1, "", "storage"], [45, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[46, 3, 1, "", "batch_size"], [46, 3, 1, "", "device"], [46, 1, 1, "", "from_tensordict"], [46, 1, 1, "", "get"], [46, 1, 1, "", "load"], [46, 1, 1, "", "load_"], [46, 1, 1, "", "load_memmap"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "memmap"], [46, 1, 1, "", "memmap_"], [46, 1, 1, "", "memmap_like"], [46, 1, 1, "", "memmap_refresh_"], [46, 3, 1, "", "names"], [46, 1, 1, "", "save"], [46, 1, 1, "", "set"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to_tensordict"], [46, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[47, 1, 1, "", "create_rollout_td"], [47, 1, 1, "", "generate"], [47, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[50, 1, 1, "", "add"], [50, 1, 1, "", "append_transform"], [50, 1, 1, "", "dump"], [50, 1, 1, "", "dumps"], [50, 1, 1, "", "empty"], [50, 1, 1, "", "extend"], [50, 1, 1, "", "insert_transform"], [50, 1, 1, "", "load"], [50, 1, 1, "", "loads"], [50, 1, 1, "", "register_load_hook"], [50, 1, 1, "", "register_save_hook"], [50, 1, 1, "", "sample"], [50, 3, 1, "", "sampler"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set_sampler"], [50, 1, 1, "", "set_storage"], [50, 1, 1, "", "set_writer"], [50, 3, 1, "", "storage"], [50, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 3, 1, "", "sample"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[54, 1, 1, "", "dataset_to_tensordict"], [54, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 3, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[56, 1, 1, "", "assert_is_in"], [56, 1, 1, "", "clear_device_"], [56, 1, 1, "", "contains"], [56, 1, 1, "", "encode"], [56, 1, 1, "", "expand"], [56, 1, 1, "", "flatten"], [56, 1, 1, "", "implements_for_spec"], [56, 1, 1, "", "index"], [56, 1, 1, "", "is_in"], [56, 1, 1, "", "project"], [56, 1, 1, "", "rand"], [56, 1, 1, "", "reshape"], [56, 3, 1, "", "sample"], [56, 1, 1, "", "squeeze"], [56, 1, 1, "", "to_numpy"], [56, 1, 1, "", "type_check"], [56, 1, 1, "", "unflatten"], [56, 1, 1, "", "view"], [56, 1, 1, "", "zero"]], "torchrl.data.datasets": [[61, 0, 1, "", "AtariDQNExperienceReplay"], [62, 0, 1, "", "BaseDatasetExperienceReplay"], [63, 0, 1, "", "D4RLExperienceReplay"], [64, 0, 1, "", "GenDGRLExperienceReplay"], [65, 0, 1, "", "MinariExperienceReplay"], [66, 0, 1, "", "OpenMLExperienceReplay"], [67, 0, 1, "", "OpenXExperienceReplay"], [68, 0, 1, "", "RobosetExperienceReplay"], [69, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dump"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "load"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "register_load_hook"], [61, 1, 1, "", "register_save_hook"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "save"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dump"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "load"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "register_load_hook"], [62, 1, 1, "", "register_save_hook"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 3, 1, "", "data_path"], [63, 3, 1, "", "data_path_root"], [63, 1, 1, "", "delete"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "preprocess"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 3, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 3, 1, "", "storage"], [63, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[64, 1, 1, "", "add"], [64, 1, 1, "", "append_transform"], [64, 3, 1, "", "data_path"], [64, 3, 1, "", "data_path_root"], [64, 1, 1, "", "delete"], [64, 1, 1, "", "dump"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "empty"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "insert_transform"], [64, 1, 1, "", "load"], [64, 1, 1, "", "loads"], [64, 1, 1, "", "preprocess"], [64, 1, 1, "", "register_load_hook"], [64, 1, 1, "", "register_save_hook"], [64, 1, 1, "", "sample"], [64, 3, 1, "", "sampler"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set_sampler"], [64, 1, 1, "", "set_storage"], [64, 1, 1, "", "set_writer"], [64, 3, 1, "", "storage"], [64, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 3, 1, "", "data_path"], [65, 3, 1, "", "data_path_root"], [65, 1, 1, "", "delete"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "preprocess"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 3, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 3, 1, "", "storage"], [65, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 3, 1, "", "data_path"], [66, 3, 1, "", "data_path_root"], [66, 1, 1, "", "delete"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "preprocess"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 3, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 3, 1, "", "storage"], [66, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 3, 1, "", "data_path"], [67, 3, 1, "", "data_path_root"], [67, 1, 1, "", "delete"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "preprocess"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 3, 1, "", "data_path"], [68, 3, 1, "", "data_path_root"], [68, 1, 1, "", "delete"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "preprocess"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 3, 1, "", "data_path"], [69, 3, 1, "", "data_path_root"], [69, 1, 1, "", "delete"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "preprocess"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 3, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 3, 1, "", "storage"], [69, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[71, 0, 1, "", "FlatStorageCheckpointer"], [72, 0, 1, "", "H5StorageCheckpointer"], [73, 0, 1, "", "ImmutableDatasetWriter"], [74, 0, 1, "", "LazyMemmapStorage"], [75, 0, 1, "", "LazyTensorStorage"], [76, 0, 1, "", "ListStorage"], [77, 0, 1, "", "ListStorageCheckpointer"], [78, 0, 1, "", "NestedStorageCheckpointer"], [79, 0, 1, "", "PrioritizedSampler"], [80, 0, 1, "", "PrioritizedSliceSampler"], [81, 0, 1, "", "RandomSampler"], [82, 0, 1, "", "ReplayBufferEnsemble"], [83, 0, 1, "", "RoundRobinWriter"], [84, 0, 1, "", "Sampler"], [85, 0, 1, "", "SamplerEnsemble"], [86, 0, 1, "", "SamplerWithoutReplacement"], [87, 0, 1, "", "SliceSampler"], [88, 0, 1, "", "SliceSamplerWithoutReplacement"], [89, 0, 1, "", "Storage"], [90, 0, 1, "", "StorageCheckpointerBase"], [91, 0, 1, "", "StorageEnsemble"], [92, 0, 1, "", "StorageEnsembleCheckpointer"], [93, 0, 1, "", "TensorDictMaxValueWriter"], [94, 0, 1, "", "TensorDictRoundRobinWriter"], [95, 0, 1, "", "TensorStorage"], [96, 0, 1, "", "TensorStorageCheckpointer"], [97, 0, 1, "", "Writer"], [98, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[73, 1, 1, "", "add"], [73, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[74, 1, 1, "", "attach"], [74, 1, 1, "", "dump"], [74, 1, 1, "", "load"], [74, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[75, 1, 1, "", "attach"], [75, 1, 1, "", "dump"], [75, 1, 1, "", "load"], [75, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[76, 1, 1, "", "attach"], [76, 1, 1, "", "dump"], [76, 1, 1, "", "load"], [76, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[79, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[80, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 3, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 3, 1, "", "storage"], [82, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[83, 1, 1, "", "add"], [83, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[89, 1, 1, "", "attach"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "load"], [89, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[91, 1, 1, "", "attach"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "load"], [91, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"], [93, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[94, 1, 1, "", "add"], [94, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[97, 1, 1, "", "add"], [97, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[98, 1, 1, "", "add"], [98, 1, 1, "", "extend"]], "torchrl.envs": [[99, 2, 1, "", "BraxEnv"], [100, 2, 1, "", "BraxWrapper"], [101, 2, 1, "", "DMControlEnv"], [102, 2, 1, "", "DMControlWrapper"], [103, 0, 1, "", "EnvBase"], [104, 0, 1, "", "EnvCreator"], [105, 0, 1, "", "EnvMetaData"], [106, 2, 1, "", "GymEnv"], [107, 0, 1, "", "GymLikeEnv"], [108, 2, 1, "", "GymWrapper"], [109, 2, 1, "", "HabitatEnv"], [110, 2, 1, "", "IsaacGymEnv"], [111, 2, 1, "", "IsaacGymWrapper"], [112, 2, 1, "", "JumanjiEnv"], [113, 2, 1, "", "JumanjiWrapper"], [114, 2, 1, "", "MOGymEnv"], [115, 2, 1, "", "MOGymWrapper"], [116, 2, 1, "", "MarlGroupMapType"], [117, 2, 1, "", "MeltingpotEnv"], [118, 2, 1, "", "MeltingpotWrapper"], [119, 2, 1, "", "ModelBasedEnvBase"], [120, 2, 1, "", "MultiThreadedEnv"], [121, 2, 1, "", "MultiThreadedEnvWrapper"], [122, 2, 1, "", "OpenMLEnv"], [123, 0, 1, "", "ParallelEnv"], [124, 0, 1, "", "PendulumEnv"], [125, 2, 1, "", "PettingZooEnv"], [126, 2, 1, "", "PettingZooWrapper"], [127, 2, 1, "", "RoboHiveEnv"], [128, 2, 1, "", "SMACv2Env"], [129, 2, 1, "", "SMACv2Wrapper"], [130, 0, 1, "", "SerialEnv"], [131, 0, 1, "", "TicTacToeEnv"], [132, 2, 1, "", "VmasEnv"], [133, 2, 1, "", "VmasWrapper"], [134, 2, 1, "", "check_marl_grouping"], [135, 2, 1, "", "gym_backend"], [119, 1, 1, "", "rand_step"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "rollout"], [138, 2, 1, "", "set_gym_backend"], [119, 1, 1, "", "set_seed"], [119, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "add_truncated_keys"], [103, 1, 1, "", "append_transform"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "batch_size"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "maybe_reset"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "mtia"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "id0", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_load_state_dict_pre_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_post_hook"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "id1", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "id2", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "id3", "set_seed"], [103, 1, 1, "", "set_submodule"], [103, 3, 1, "", "shape"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_keys"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "id4", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "add_truncated_keys"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "apply"], [107, 1, 1, "", "auto_register_info_dict"], [107, 3, 1, "", "batch_locked"], [107, 3, 1, "", "batch_size"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "close"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_reset"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "mtia"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "read_action"], [107, 1, 1, "", "read_done"], [107, 1, 1, "", "read_obs"], [107, 1, 1, "", "read_reward"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_gym"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_load_state_dict_pre_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_post_hook"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_info_dict_reader"], [107, 1, 1, "", "set_seed"], [107, 1, 1, "", "set_submodule"], [107, 3, 1, "", "shape"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_keys"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[123, 3, 1, "", "action_key"], [123, 3, 1, "", "action_keys"], [123, 3, 1, "", "action_spec"], [123, 1, 1, "", "add_module"], [123, 1, 1, "", "add_truncated_keys"], [123, 1, 1, "", "append_transform"], [123, 1, 1, "", "apply"], [123, 3, 1, "", "batch_locked"], [123, 3, 1, "", "batch_size"], [123, 1, 1, "", "bfloat16"], [123, 1, 1, "", "buffers"], [123, 1, 1, "", "children"], [123, 1, 1, "", "compile"], [123, 1, 1, "", "cpu"], [123, 1, 1, "", "cuda"], [123, 3, 1, "", "done_key"], [123, 3, 1, "", "done_keys"], [123, 3, 1, "", "done_keys_groups"], [123, 3, 1, "", "done_spec"], [123, 1, 1, "", "double"], [123, 1, 1, "", "empty_cache"], [123, 1, 1, "", "eval"], [123, 1, 1, "", "extra_repr"], [123, 1, 1, "", "fake_tensordict"], [123, 1, 1, "", "float"], [123, 1, 1, "", "forward"], [123, 3, 1, "", "full_action_spec"], [123, 3, 1, "", "full_done_spec"], [123, 3, 1, "", "full_reward_spec"], [123, 3, 1, "", "full_state_spec"], [123, 1, 1, "", "get_buffer"], [123, 1, 1, "", "get_extra_state"], [123, 1, 1, "", "get_parameter"], [123, 1, 1, "", "get_submodule"], [123, 1, 1, "", "half"], [123, 3, 1, "", "input_spec"], [123, 1, 1, "", "ipu"], [123, 1, 1, "", "load_state_dict"], [123, 1, 1, "", "maybe_reset"], [123, 1, 1, "", "modules"], [123, 1, 1, "", "mtia"], [123, 1, 1, "", "named_buffers"], [123, 1, 1, "", "named_children"], [123, 1, 1, "", "named_modules"], [123, 1, 1, "", "named_parameters"], [123, 3, 1, "", "observation_spec"], [123, 3, 1, "", "output_spec"], [123, 1, 1, "", "parameters"], [123, 1, 1, "", "rand_action"], [123, 1, 1, "", "rand_step"], [123, 1, 1, "", "register_backward_hook"], [123, 1, 1, "", "register_buffer"], [123, 1, 1, "", "register_forward_hook"], [123, 1, 1, "", "register_forward_pre_hook"], [123, 1, 1, "", "register_full_backward_hook"], [123, 1, 1, "", "register_full_backward_pre_hook"], [123, 1, 1, "", "register_gym"], [123, 1, 1, "", "register_load_state_dict_post_hook"], [123, 1, 1, "", "register_load_state_dict_pre_hook"], [123, 1, 1, "", "register_module"], [123, 1, 1, "", "register_parameter"], [123, 1, 1, "", "register_state_dict_post_hook"], [123, 1, 1, "", "register_state_dict_pre_hook"], [123, 1, 1, "", "requires_grad_"], [123, 1, 1, "", "reset"], [123, 3, 1, "", "reset_keys"], [123, 3, 1, "", "reward_key"], [123, 3, 1, "", "reward_keys"], [123, 3, 1, "", "reward_spec"], [123, 1, 1, "", "rollout"], [123, 1, 1, "", "set_extra_state"], [123, 1, 1, "", "set_seed"], [123, 1, 1, "", "set_submodule"], [123, 3, 1, "", "shape"], [123, 1, 1, "", "share_memory"], [123, 3, 1, "", "specs"], [123, 1, 1, "", "state_dict"], [123, 3, 1, "", "state_keys"], [123, 3, 1, "", "state_spec"], [123, 1, 1, "", "step"], [123, 1, 1, "", "step_and_maybe_reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "to_empty"], [123, 1, 1, "", "train"], [123, 1, 1, "", "type"], [123, 1, 1, "", "update_kwargs"], [123, 1, 1, "", "xpu"], [123, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[124, 3, 1, "", "action_key"], [124, 3, 1, "", "action_keys"], [124, 3, 1, "", "action_spec"], [124, 1, 1, "", "add_module"], [124, 1, 1, "", "add_truncated_keys"], [124, 1, 1, "", "append_transform"], [124, 1, 1, "", "apply"], [124, 3, 1, "", "batch_size"], [124, 1, 1, "", "bfloat16"], [124, 1, 1, "", "buffers"], [124, 1, 1, "", "children"], [124, 1, 1, "", "compile"], [124, 1, 1, "", "cpu"], [124, 1, 1, "", "cuda"], [124, 3, 1, "", "done_key"], [124, 3, 1, "", "done_keys"], [124, 3, 1, "", "done_keys_groups"], [124, 3, 1, "", "done_spec"], [124, 1, 1, "", "double"], [124, 1, 1, "", "empty_cache"], [124, 1, 1, "", "eval"], [124, 1, 1, "", "extra_repr"], [124, 1, 1, "", "fake_tensordict"], [124, 1, 1, "", "float"], [124, 1, 1, "", "forward"], [124, 3, 1, "", "full_action_spec"], [124, 3, 1, "", "full_done_spec"], [124, 3, 1, "", "full_reward_spec"], [124, 3, 1, "", "full_state_spec"], [124, 1, 1, "", "gen_params"], [124, 1, 1, "", "get_buffer"], [124, 1, 1, "", "get_extra_state"], [124, 1, 1, "", "get_parameter"], [124, 1, 1, "", "get_submodule"], [124, 1, 1, "", "half"], [124, 3, 1, "", "input_spec"], [124, 1, 1, "", "ipu"], [124, 1, 1, "", "load_state_dict"], [124, 1, 1, "", "maybe_reset"], [124, 1, 1, "", "modules"], [124, 1, 1, "", "mtia"], [124, 1, 1, "", "named_buffers"], [124, 1, 1, "", "named_children"], [124, 1, 1, "", "named_modules"], [124, 1, 1, "", "named_parameters"], [124, 3, 1, "", "observation_spec"], [124, 3, 1, "", "output_spec"], [124, 1, 1, "", "parameters"], [124, 1, 1, "", "rand_action"], [124, 1, 1, "", "rand_step"], [124, 1, 1, "", "register_backward_hook"], [124, 1, 1, "", "register_buffer"], [124, 1, 1, "", "register_forward_hook"], [124, 1, 1, "", "register_forward_pre_hook"], [124, 1, 1, "", "register_full_backward_hook"], [124, 1, 1, "", "register_full_backward_pre_hook"], [124, 1, 1, "", "register_gym"], [124, 1, 1, "", "register_load_state_dict_post_hook"], [124, 1, 1, "", "register_load_state_dict_pre_hook"], [124, 1, 1, "", "register_module"], [124, 1, 1, "", "register_parameter"], [124, 1, 1, "", "register_state_dict_post_hook"], [124, 1, 1, "", "register_state_dict_pre_hook"], [124, 1, 1, "", "requires_grad_"], [124, 1, 1, "", "reset"], [124, 3, 1, "", "reset_keys"], [124, 3, 1, "", "reward_key"], [124, 3, 1, "", "reward_keys"], [124, 3, 1, "", "reward_spec"], [124, 1, 1, "", "rollout"], [124, 1, 1, "", "set_extra_state"], [124, 1, 1, "", "set_seed"], [124, 1, 1, "", "set_submodule"], [124, 3, 1, "", "shape"], [124, 1, 1, "", "share_memory"], [124, 3, 1, "", "specs"], [124, 1, 1, "", "state_dict"], [124, 3, 1, "", "state_keys"], [124, 3, 1, "", "state_spec"], [124, 1, 1, "", "step"], [124, 1, 1, "", "step_and_maybe_reset"], [124, 1, 1, "", "to"], [124, 1, 1, "", "to_empty"], [124, 1, 1, "", "train"], [124, 1, 1, "", "type"], [124, 1, 1, "", "xpu"], [124, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[130, 3, 1, "", "action_key"], [130, 3, 1, "", "action_keys"], [130, 3, 1, "", "action_spec"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 3, 1, "", "batch_locked"], [130, 3, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "children"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 3, 1, "", "done_key"], [130, 3, 1, "", "done_keys"], [130, 3, 1, "", "done_keys_groups"], [130, 3, 1, "", "done_spec"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 3, 1, "", "full_action_spec"], [130, 3, 1, "", "full_done_spec"], [130, 3, 1, "", "full_reward_spec"], [130, 3, 1, "", "full_state_spec"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 3, 1, "", "input_spec"], [130, 1, 1, "", "ipu"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "mtia"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 3, 1, "", "observation_spec"], [130, 3, 1, "", "output_spec"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "", "rand_step"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_load_state_dict_pre_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_post_hook"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "", "reset"], [130, 3, 1, "", "reset_keys"], [130, 3, 1, "", "reward_key"], [130, 3, 1, "", "reward_keys"], [130, 3, 1, "", "reward_spec"], [130, 1, 1, "", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "set_submodule"], [130, 3, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 3, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 3, 1, "", "state_keys"], [130, 3, 1, "", "state_spec"], [130, 1, 1, "", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "update_kwargs"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[131, 3, 1, "", "action_key"], [131, 3, 1, "", "action_keys"], [131, 3, 1, "", "action_spec"], [131, 1, 1, "", "add_module"], [131, 1, 1, "", "add_truncated_keys"], [131, 1, 1, "", "append_transform"], [131, 1, 1, "", "apply"], [131, 3, 1, "", "batch_size"], [131, 1, 1, "", "bfloat16"], [131, 1, 1, "", "buffers"], [131, 1, 1, "", "children"], [131, 1, 1, "", "compile"], [131, 1, 1, "", "cpu"], [131, 1, 1, "", "cuda"], [131, 3, 1, "", "done_key"], [131, 3, 1, "", "done_keys"], [131, 3, 1, "", "done_keys_groups"], [131, 3, 1, "", "done_spec"], [131, 1, 1, "", "double"], [131, 1, 1, "", "empty_cache"], [131, 1, 1, "", "eval"], [131, 1, 1, "", "extra_repr"], [131, 1, 1, "", "fake_tensordict"], [131, 1, 1, "", "float"], [131, 1, 1, "", "forward"], [131, 3, 1, "", "full_action_spec"], [131, 3, 1, "", "full_done_spec"], [131, 3, 1, "", "full_reward_spec"], [131, 3, 1, "", "full_state_spec"], [131, 1, 1, "", "get_buffer"], [131, 1, 1, "", "get_extra_state"], [131, 1, 1, "", "get_parameter"], [131, 1, 1, "", "get_submodule"], [131, 1, 1, "", "half"], [131, 3, 1, "", "input_spec"], [131, 1, 1, "", "ipu"], [131, 1, 1, "", "load_state_dict"], [131, 1, 1, "", "maybe_reset"], [131, 1, 1, "", "modules"], [131, 1, 1, "", "mtia"], [131, 1, 1, "", "named_buffers"], [131, 1, 1, "", "named_children"], [131, 1, 1, "", "named_modules"], [131, 1, 1, "", "named_parameters"], [131, 3, 1, "", "observation_spec"], [131, 3, 1, "", "output_spec"], [131, 1, 1, "", "parameters"], [131, 1, 1, "", "rand_action"], [131, 1, 1, "", "rand_step"], [131, 1, 1, "", "register_backward_hook"], [131, 1, 1, "", "register_buffer"], [131, 1, 1, "", "register_forward_hook"], [131, 1, 1, "", "register_forward_pre_hook"], [131, 1, 1, "", "register_full_backward_hook"], [131, 1, 1, "", "register_full_backward_pre_hook"], [131, 1, 1, "", "register_gym"], [131, 1, 1, "", "register_load_state_dict_post_hook"], [131, 1, 1, "", "register_load_state_dict_pre_hook"], [131, 1, 1, "", "register_module"], [131, 1, 1, "", "register_parameter"], [131, 1, 1, "", "register_state_dict_post_hook"], [131, 1, 1, "", "register_state_dict_pre_hook"], [131, 1, 1, "", "requires_grad_"], [131, 1, 1, "", "reset"], [131, 3, 1, "", "reset_keys"], [131, 3, 1, "", "reward_key"], [131, 3, 1, "", "reward_keys"], [131, 3, 1, "", "reward_spec"], [131, 1, 1, "", "rollout"], [131, 1, 1, "", "set_extra_state"], [131, 1, 1, "", "set_seed"], [131, 1, 1, "", "set_submodule"], [131, 3, 1, "", "shape"], [131, 1, 1, "", "share_memory"], [131, 3, 1, "", "specs"], [131, 1, 1, "", "state_dict"], [131, 3, 1, "", "state_keys"], [131, 3, 1, "", "state_spec"], [131, 1, 1, "", "step"], [131, 1, 1, "", "step_and_maybe_reset"], [131, 1, 1, "", "to"], [131, 1, 1, "", "to_empty"], [131, 1, 1, "", "train"], [131, 1, 1, "", "type"], [131, 1, 1, "", "xpu"], [131, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[136, 2, 1, "", "DreamerDecoder"], [137, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[139, 0, 1, "", "ActionDiscretizer"], [140, 0, 1, "", "ActionMask"], [141, 0, 1, "", "AutoResetEnv"], [142, 0, 1, "", "AutoResetTransform"], [143, 0, 1, "", "BatchSizeTransform"], [144, 0, 1, "", "BinarizeReward"], [145, 0, 1, "", "BurnInTransform"], [146, 0, 1, "", "CatFrames"], [147, 0, 1, "", "CatTensors"], [148, 0, 1, "", "CenterCrop"], [149, 0, 1, "", "ClipTransform"], [150, 0, 1, "", "Compose"], [151, 0, 1, "", "Crop"], [152, 0, 1, "", "DTypeCastTransform"], [153, 0, 1, "", "DeviceCastTransform"], [154, 0, 1, "", "DiscreteActionProjection"], [155, 0, 1, "", "DoubleToFloat"], [156, 0, 1, "", "EndOfLifeTransform"], [157, 0, 1, "", "ExcludeTransform"], [158, 0, 1, "", "FiniteTensorDictCheck"], [159, 0, 1, "", "FlattenObservation"], [160, 0, 1, "", "FrameSkipTransform"], [161, 0, 1, "", "GrayScale"], [162, 0, 1, "", "InitTracker"], [163, 0, 1, "", "KLRewardTransform"], [164, 0, 1, "", "NoopResetEnv"], [165, 0, 1, "", "ObservationNorm"], [166, 0, 1, "", "ObservationTransform"], [167, 0, 1, "", "PermuteTransform"], [168, 0, 1, "", "PinMemoryTransform"], [169, 0, 1, "", "R3MTransform"], [170, 0, 1, "", "RandomCropTensorDict"], [171, 0, 1, "", "RemoveEmptySpecs"], [172, 0, 1, "", "RenameTransform"], [173, 0, 1, "", "Resize"], [174, 0, 1, "", "Reward2GoTransform"], [175, 0, 1, "", "RewardClipping"], [176, 0, 1, "", "RewardScaling"], [177, 0, 1, "", "RewardSum"], [178, 0, 1, "", "SelectTransform"], [179, 0, 1, "", "SignTransform"], [180, 0, 1, "", "SqueezeTransform"], [181, 0, 1, "", "StepCounter"], [182, 0, 1, "", "TargetReturn"], [183, 0, 1, "", "TensorDictPrimer"], [184, 0, 1, "", "TimeMaxPool"], [185, 0, 1, "", "ToTensorImage"], [186, 0, 1, "", "Transform"], [187, 0, 1, "", "TransformedEnv"], [188, 0, 1, "", "UnsqueezeTransform"], [189, 0, 1, "", "VC1Transform"], [190, 0, 1, "", "VIPRewardTransform"], [191, 0, 1, "", "VIPTransform"], [192, 0, 1, "", "VecGymEnvTransform"], [193, 0, 1, "", "VecNorm"], [194, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[139, 0, 1, "", "SamplingStrategy"], [139, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[141, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_env_batch_size"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[144, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[145, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[146, 1, 1, "", "forward"], [146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[148, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[149, 1, 1, "", "transform_observation_spec"], [149, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[150, 1, 1, "", "append"], [150, 1, 1, "", "forward"], [150, 1, 1, "", "insert"], [150, 1, 1, "", "to"], [150, 1, 1, "", "transform_env_batch_size"], [150, 1, 1, "", "transform_env_device"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"], [150, 1, 1, "", "transform_output_spec"], [150, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[151, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_input_spec"], [152, 1, 1, "", "transform_observation_spec"], [152, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_done_spec"], [153, 1, 1, "", "transform_env_device"], [153, 1, 1, "", "transform_input_spec"], [153, 1, 1, "", "transform_observation_spec"], [153, 1, 1, "", "transform_output_spec"], [153, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[154, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "register_keys"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[158, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[160, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[165, 1, 1, "", "init_stats"], [165, 1, 1, "", "transform_input_spec"], [165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[168, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[169, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[170, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_input_spec"], [171, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "transform_input_spec"], [172, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[174, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[175, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"], [177, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[179, 1, 1, "", "transform_observation_spec"], [179, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"], [181, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "transform_input_spec"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "to"], [183, 1, 1, "", "transform_input_spec"], [183, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[186, 3, 1, "", "container"], [186, 1, 1, "", "forward"], [186, 3, 1, "", "parent"], [186, 1, 1, "", "to"], [186, 1, 1, "", "transform_done_spec"], [186, 1, 1, "", "transform_env_batch_size"], [186, 1, 1, "", "transform_env_device"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_observation_spec"], [186, 1, 1, "", "transform_output_spec"], [186, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[187, 1, 1, "", "add_truncated_keys"], [187, 1, 1, "", "append_transform"], [187, 3, 1, "", "batch_locked"], [187, 3, 1, "", "batch_size"], [187, 1, 1, "", "empty_cache"], [187, 1, 1, "", "eval"], [187, 3, 1, "", "input_spec"], [187, 1, 1, "", "insert_transform"], [187, 1, 1, "", "load_state_dict"], [187, 3, 1, "", "output_spec"], [187, 1, 1, "", "set_missing_tolerance"], [187, 1, 1, "", "set_seed"], [187, 1, 1, "", "state_dict"], [187, 1, 1, "", "to"], [187, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_observation_spec"], [188, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "make_noload_model"], [189, 1, 1, "", "to"], [189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[191, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[192, 1, 1, "", "forward"], [192, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[193, 1, 1, "", "build_td_for_shared_vecnorm"], [193, 1, 1, "", "forward"], [193, 1, 1, "", "freeze"], [193, 1, 1, "", "frozen_copy"], [193, 1, 1, "", "get_extra_state"], [193, 3, 1, "", "loc"], [193, 3, 1, "", "scale"], [193, 1, 1, "", "set_extra_state"], [193, 3, 1, "", "standard_normal"], [193, 1, 1, "", "to_observation_norm"], [193, 1, 1, "", "transform_observation_spec"], [193, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[195, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[195, 1, 1, "", "add_module"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "children"], [195, 1, 1, "", "compile"], [195, 3, 1, "", "container"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 1, 1, "", "double"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 1, 1, "", "ipu"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 3, 1, "", "n_steps"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 1, 1, "", "parameters"], [195, 3, 1, "", "parent"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_submodule"], [195, 1, 1, "", "share_memory"], [195, 1, 1, "", "state_dict"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "transform_done_spec"], [195, 1, 1, "", "transform_env_batch_size"], [195, 1, 1, "", "transform_env_device"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"], [195, 1, 1, "", "transform_output_spec"], [195, 1, 1, "", "transform_reward_spec"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[196, 2, 1, "", "RandomPolicy"], [197, 2, 1, "", "check_env_specs"], [198, 2, 1, "", "exploration_mode"], [199, 2, 1, "", "exploration_type"], [200, 2, 1, "", "get_available_libraries"], [201, 2, 1, "", "make_composite_from_td"], [202, 2, 1, "", "set_exploration_mode"], [203, 2, 1, "", "set_exploration_type"], [204, 2, 1, "", "step_mdp"], [205, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[206, 0, 1, "", "BatchRenorm1d"], [207, 0, 1, "", "CEMPlanner"], [208, 0, 1, "", "Conv3dNet"], [209, 0, 1, "", "ConvNet"], [210, 0, 1, "", "DTActor"], [211, 0, 1, "", "DdpgCnnActor"], [212, 0, 1, "", "DdpgCnnQNet"], [213, 0, 1, "", "DdpgMlpActor"], [214, 0, 1, "", "DdpgMlpQNet"], [215, 0, 1, "", "DecisionTransformer"], [216, 0, 1, "", "Delta"], [217, 0, 1, "", "DistributionalDQNnet"], [218, 0, 1, "", "DistributionalQValueHook"], [219, 0, 1, "", "DreamerActor"], [220, 0, 1, "", "DuelingCnnDQNet"], [221, 0, 1, "", "GRU"], [222, 0, 1, "", "GRUCell"], [223, 0, 1, "", "GRUModule"], [224, 0, 1, "", "IndependentNormal"], [225, 0, 1, "", "LSTM"], [226, 0, 1, "", "LSTMCell"], [227, 0, 1, "", "LSTMModule"], [228, 0, 1, "", "MLP"], [229, 0, 1, "", "MPCPlannerBase"], [230, 0, 1, "", "MPPIPlanner"], [231, 0, 1, "", "MaskedCategorical"], [232, 0, 1, "", "MaskedOneHotCategorical"], [233, 0, 1, "", "MultiAgentConvNet"], [234, 0, 1, "", "MultiAgentMLP"], [235, 0, 1, "", "MultiAgentNetBase"], [236, 0, 1, "", "NoisyLazyLinear"], [237, 0, 1, "", "NoisyLinear"], [238, 0, 1, "", "NormalParamWrapper"], [239, 0, 1, "", "ObsDecoder"], [240, 0, 1, "", "ObsEncoder"], [241, 0, 1, "", "OneHotCategorical"], [242, 0, 1, "", "OnlineDTActor"], [243, 0, 1, "", "QMixer"], [244, 0, 1, "", "QValueHook"], [245, 0, 1, "", "RSSMPosterior"], [246, 0, 1, "", "RSSMPrior"], [247, 0, 1, "", "Squeeze2dLayer"], [248, 0, 1, "", "SqueezeLayer"], [249, 0, 1, "", "TanhDelta"], [250, 0, 1, "", "TanhNormal"], [251, 0, 1, "", "TruncatedNormal"], [252, 0, 1, "", "VDNMixer"], [253, 0, 1, "", "VmapModule"], [254, 0, 1, "", "reset_noise"]], "torchrl.modules.BatchRenorm1d": [[206, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[207, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[208, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[209, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[210, 1, 1, "", "default_config"], [210, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[211, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[212, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[213, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[214, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[215, 0, 1, "", "DTConfig"], [215, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[216, 1, 1, "", "log_prob"], [216, 3, 1, "", "mean"], [216, 3, 1, "", "mode"], [216, 1, 1, "", "rsample"], [216, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[217, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[219, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[220, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[221, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[222, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[223, 1, 1, "", "forward"], [223, 1, 1, "id0", "make_tensordict_primer"], [223, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[224, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[225, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[226, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[227, 1, 1, "", "forward"], [227, 1, 1, "id0", "make_tensordict_primer"], [227, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[228, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[230, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[231, 1, 1, "", "log_prob"], [231, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[232, 1, 1, "", "log_prob"], [232, 1, 1, "", "rsample"], [232, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "from_stateful_net"], [235, 1, 1, "", "get_stateful_net"], [235, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[236, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[238, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[239, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[240, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[241, 1, 1, "", "log_prob"], [241, 3, 1, "", "mode"], [241, 1, 1, "", "rsample"], [241, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[242, 1, 1, "", "default_config"], [242, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[243, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[245, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[246, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[248, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[249, 3, 1, "", "mean"], [249, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[250, 1, 1, "", "get_mode"], [250, 3, 1, "", "mean"], [250, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[251, 1, 1, "", "log_prob"], [251, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[252, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[253, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[255, 0, 1, "", "Actor"], [256, 0, 1, "", "ActorCriticOperator"], [257, 0, 1, "", "ActorCriticWrapper"], [258, 0, 1, "", "ActorValueOperator"], [259, 0, 1, "", "AdditiveGaussianModule"], [260, 0, 1, "", "AdditiveGaussianWrapper"], [261, 0, 1, "", "DecisionTransformerInferenceWrapper"], [262, 0, 1, "", "DistributionalQValueActor"], [263, 0, 1, "", "DistributionalQValueModule"], [264, 0, 1, "", "EGreedyModule"], [265, 0, 1, "", "EGreedyWrapper"], [266, 0, 1, "", "LMHeadActorValueOperator"], [267, 0, 1, "", "MultiStepActorWrapper"], [268, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [269, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [270, 0, 1, "", "ProbabilisticActor"], [271, 0, 1, "", "QValueActor"], [272, 0, 1, "", "QValueModule"], [273, 0, 1, "", "SafeModule"], [274, 0, 1, "", "SafeProbabilisticModule"], [275, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [276, 0, 1, "", "SafeSequential"], [277, 0, 1, "", "TanhModule"], [278, 0, 1, "", "ValueOperator"], [279, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[256, 1, 1, "", "get_critic_operator"], [256, 1, 1, "", "get_policy_head"], [256, 1, 1, "", "get_value_head"], [256, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[257, 1, 1, "", "get_policy_head"], [257, 1, 1, "", "get_policy_operator"], [257, 1, 1, "", "get_value_head"], [257, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[258, 1, 1, "", "get_policy_head"], [258, 1, 1, "", "get_policy_operator"], [258, 1, 1, "", "get_value_head"], [258, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianModule": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "mask_context"], [261, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[263, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[267, 1, 1, "", "forward"], [267, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessModule": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[272, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[273, 1, 1, "", "random"], [273, 1, 1, "", "random_sample"], [273, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[274, 1, 1, "", "random"], [274, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[277, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[279, 1, 1, "", "get_reward_operator"], [279, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[280, 0, 1, "", "biased_softplus"], [281, 0, 1, "", "get_primers_from_module"], [282, 0, 1, "", "inv_softplus"], [283, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[280, 1, 1, "", "forward"]], "torchrl.objectives": [[284, 0, 1, "", "A2CLoss"], [285, 0, 1, "", "CQLLoss"], [286, 0, 1, "", "ClipPPOLoss"], [287, 0, 1, "", "CrossQLoss"], [288, 0, 1, "", "DDPGLoss"], [289, 0, 1, "", "DQNLoss"], [290, 0, 1, "", "DTLoss"], [291, 0, 1, "", "DiscreteCQLLoss"], [292, 0, 1, "", "DiscreteIQLLoss"], [293, 0, 1, "", "DiscreteSACLoss"], [294, 0, 1, "", "DistributionalDQNLoss"], [295, 0, 1, "", "DreamerActorLoss"], [296, 0, 1, "", "DreamerModelLoss"], [297, 0, 1, "", "DreamerValueLoss"], [298, 0, 1, "", "GAILLoss"], [299, 0, 1, "", "HardUpdate"], [300, 0, 1, "", "IQLLoss"], [301, 0, 1, "", "KLPENPPOLoss"], [302, 0, 1, "", "LossModule"], [303, 0, 1, "", "OnlineDTLoss"], [304, 0, 1, "", "PPOLoss"], [305, 0, 1, "", "REDQLoss"], [306, 0, 1, "", "ReinforceLoss"], [307, 0, 1, "", "SACLoss"], [308, 0, 1, "", "SoftUpdate"], [309, 0, 1, "", "TD3BCLoss"], [310, 0, 1, "", "TD3Loss"], [311, 0, 1, "", "ValueEstimators"], [312, 0, 1, "", "default_value_kwargs"], [313, 0, 1, "", "distance_loss"], [314, 0, 1, "", "hold_out_net"], [315, 0, 1, "", "hold_out_params"], [317, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[284, 1, 1, "", "forward"], [284, 3, 1, "", "functional"], [284, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[286, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[287, 1, 1, "", "actor_loss"], [287, 1, 1, "", "alpha_loss"], [287, 1, 1, "", "forward"], [287, 1, 1, "", "load_state_dict"], [287, 1, 1, "", "make_value_estimator"], [287, 1, 1, "", "qvalue_loss"], [287, 1, 1, "", "state_dict"], [287, 3, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[290, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[292, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[294, 1, 1, "", "forward"], [294, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[296, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[297, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[298, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[300, 1, 1, "", "forward"], [300, 1, 1, "", "loss_value_diff"], [300, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[301, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[302, 1, 1, "", "convert_to_functional"], [302, 1, 1, "", "forward"], [302, 1, 1, "", "from_stateful_net"], [302, 3, 1, "", "functional"], [302, 1, 1, "", "get_stateful_net"], [302, 1, 1, "", "make_value_estimator"], [302, 1, 1, "", "named_parameters"], [302, 1, 1, "", "parameters"], [302, 1, 1, "", "set_keys"], [302, 3, 1, "", "value_estimator"], [302, 3, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[303, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[304, 1, 1, "", "forward"], [304, 3, 1, "", "functional"], [304, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[305, 1, 1, "", "forward"], [305, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[306, 1, 1, "", "forward"], [306, 3, 1, "", "functional"], [306, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "load_state_dict"], [307, 1, 1, "", "make_value_estimator"], [307, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[309, 1, 1, "", "actor_loss"], [309, 1, 1, "", "forward"], [309, 1, 1, "", "make_value_estimator"], [309, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[316, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[316, 1, 1, "", "forward"], [316, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[318, 0, 1, "", "GAE"], [319, 0, 1, "", "TD0Estimator"], [320, 0, 1, "", "TD1Estimator"], [321, 0, 1, "", "TDLambdaEstimator"], [322, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[318, 1, 1, "", "forward"], [318, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[320, 1, 1, "", "forward"], [320, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[321, 1, 1, "", "forward"], [321, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[322, 1, 1, "", "forward"], [322, 1, 1, "", "set_keys"], [322, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[323, 0, 1, "", "generalized_advantage_estimate"], [324, 0, 1, "", "reward2go"], [325, 0, 1, "", "td0_advantage_estimate"], [326, 0, 1, "", "td0_return_estimate"], [327, 0, 1, "", "td1_advantage_estimate"], [328, 0, 1, "", "td1_return_estimate"], [329, 0, 1, "", "td_lambda_advantage_estimate"], [330, 0, 1, "", "td_lambda_return_estimate"], [331, 0, 1, "", "vec_generalized_advantage_estimate"], [332, 0, 1, "", "vec_td1_advantage_estimate"], [333, 0, 1, "", "vec_td1_return_estimate"], [334, 0, 1, "", "vec_td_lambda_advantage_estimate"], [335, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[336, 2, 1, "", "PixelRenderTransform"], [337, 2, 1, "", "TensorDictRecorder"], [338, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[339, 2, 1, "", "Logger"], [341, 2, 1, "", "generate_exp_name"], [342, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[340, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[343, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[344, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[345, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[346, 0, 1, "", "BatchSubSampler"], [347, 0, 1, "", "ClearCudaCache"], [348, 0, 1, "", "CountFramesLog"], [349, 0, 1, "", "LogReward"], [350, 0, 1, "", "OptimizerHook"], [351, 0, 1, "", "Recorder"], [352, 0, 1, "", "ReplayBufferTrainer"], [353, 0, 1, "", "RewardNormalizer"], [354, 0, 1, "", "SelectKeys"], [355, 0, 1, "", "Trainer"], [356, 0, 1, "", "TrainerHookBase"], [357, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[346, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[347, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[348, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[349, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[350, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[351, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[352, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[353, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[354, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[356, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[357, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[358, 2, 1, "", "correct_for_frame_skip"], [359, 2, 1, "", "get_stats_random_rollout"], [360, 2, 1, "", "make_collector_offpolicy"], [361, 2, 1, "", "make_collector_onpolicy"], [362, 2, 1, "", "make_dqn_loss"], [363, 2, 1, "", "make_replay_buffer"], [364, 2, 1, "", "make_target_updater"], [365, 2, 1, "", "make_trainer"], [366, 2, 1, "", "parallel_env_constructor"], [367, 2, 1, "", "sync_async_collector"], [368, 2, 1, "", "sync_sync_collector"], [369, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 373, 374, 375, 376, 378, 379, 380, 383, 390, 391, 392, 396, 397], "instal": [0, 6, 7, 396], "get": [0, 382, 383, 384, 385, 386, 387], "start": [0, 382, 383, 384, 385, 386, 387], "tutori": [0, 380, 390, 391], "basic": [0, 394], "intermedi": [0, 8], "advanc": 0, "refer": [0, 371], "knowledg": [0, 372], "base": [0, 2, 7, 372], "indic": 0, "tabl": 0, "collector": [1, 378, 379, 380, 381, 385, 387, 390, 391, 396], "packag": [1, 2, 3, 373, 374, 375, 376], "batch": [1, 378, 392, 394], "size": [1, 378, 394], "replai": [1, 2, 378, 379, 380, 381, 385, 387, 390, 391, 394, 396], "buffer": [1, 2, 378, 379, 380, 381, 385, 387, 390, 391, 394, 396], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 378, 379, 380, 385, 387, 390, 391, 396], "distribut": [1, 373], "helper": [1, 3], "function": [1, 4, 374, 379, 380, 384, 390, 391, 396], "compos": [2, 150], "support": 2, "type": 2, "choos": 2, "storag": [2, 89, 378, 385, 394], "sampl": [2, 394], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 379, 394], "trajectori": [2, 394], "checkpoint": [2, 375], "episod": [2, 4], "format": 2, "ted": [2, 382], "The": [2, 378], "rational": 2, "behind": 2, "structur": [2, 394], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 373, 394, 396], "special": [2, 383, 396], "case": 2, "footnot": 2, "multi": [2, 3, 373, 374, 389, 390, 391], "agent": [2, 3, 4, 373, 374, 390, 391], "present": 2, "polici": [2, 4, 378, 380, 381, 383, 387, 389, 390, 391, 392], "rnn": 2, "transform": [2, 3, 186, 378, 380, 382, 390, 391, 392, 394, 396, 397], "step": [2, 378, 380, 382, 385, 390, 391, 394, 397], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 53], "reinforc": [2, 374, 380, 390, 391], "learn": [2, 4, 380, 390, 391], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 373, 374, 375, 390], "env": [3, 392, 396, 397], "vector": [3, 396], "custom": [3, 11, 392, 394], "nativ": 3, "environ": [3, 4, 6, 7, 378, 379, 380, 381, 382, 387, 389, 390, 391, 392, 396, 397], "auto": 3, "reset": [3, 392, 397], "dynam": [3, 4, 394], "spec": [3, 392, 397], "clone": [3, 7], "mask": 3, "action": [3, 4, 381, 392], "record": [3, 351, 375, 378, 386], "video": [3, 11, 386], "domain": [3, 373], "specif": [3, 373, 389], "librari": [3, 396], "thing": [4, 378, 392], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 382, 384, 396], "gener": [4, 11, 373], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 378, 387, 392], "algorithm": [4, 373], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 378, 379, 384, 387], "return": [4, 374], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 396], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 389], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 378, 379, 380], "standard": 4, "explor": [4, 373, 378, 379, 383], "valu": [4, 373, 374, 378, 380, 381, 383], "loss": [4, 378, 379, 380, 381, 387, 390, 391], "earli": 4, "train": [4, 8, 374, 378, 380, 381, 384, 387, 390, 391, 392], "roughli": 4, "uniformli": 4, "random": [4, 374, 390, 391], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 379], "increas": 4, "an": [4, 380, 381, 382, 392], "can": 4, "low": 4, "forward": [4, 378], "model": [4, 373, 378, 379, 381, 384, 393, 396], "also": 4, "us": [4, 6, 9, 381, 393, 394, 396], "offlin": 4, "observ": [4, 378], "space": 4, "effect": [4, 392], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 397], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 378], "render": [7, 11, 387, 390, 391, 397], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 378], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 392], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 379, 394], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binarydiscretetensorspec": 25, "boundedtensorspec": 26, "compositespec": 27, "constantklcontrol": 28, "discretetensorspec": 29, "flat2t": 30, "h5combin": 31, "h5split": 32, "lazystackedcompositespec": 33, "lazystackedtensorspec": 34, "multidiscretetensorspec": 35, "multionehotdiscretetensorspec": 36, "multistep": 37, "nested2t": 38, "nontensorspec": 39, "onehotdiscretetensorspec": 40, "pairwisedataset": 41, "prioritizedreplaybuff": 42, "promptdata": 43, "prompttensordicttoken": 44, "replaybuff": 45, "rewarddata": 46, "rolloutfrommodel": 47, "ted2flat": 48, "ted2nest": 49, "tensordictprioritizedreplaybuff": 50, "tensordictreplaybuff": 51, "tensordicttoken": 52, "tokenizeddatasetload": 54, "unboundedcontinuoustensorspec": 55, "unboundeddiscretetensorspec": 56, "check_no_exclusive_kei": 57, "consolidate_spec": 58, "contains_lazy_spec": 59, "create_infinite_iter": 60, "ataridqnexperiencereplai": 61, "basedatasetexperiencereplai": 62, "d4rlexperiencereplai": 63, "gendgrlexperiencereplai": 64, "minariexperiencereplai": 65, "openmlexperiencereplai": 66, "openxexperiencereplai": 67, "robosetexperiencereplai": 68, "vd4rlexperiencereplai": 69, "get_dataload": 70, "flatstoragecheckpoint": 71, "h5storagecheckpoint": 72, "immutabledatasetwrit": 73, "lazymemmapstorag": 74, "lazytensorstorag": 75, "liststorag": 76, "liststoragecheckpoint": 77, "nestedstoragecheckpoint": 78, "prioritizedsampl": 79, "prioritizedslicesampl": 80, "randomsampl": 81, "replaybufferensembl": 82, "roundrobinwrit": 83, "sampler": 84, "samplerensembl": 85, "samplerwithoutreplac": 86, "slicesampl": 87, "slicesamplerwithoutreplac": 88, "storagecheckpointerbas": 90, "storageensembl": 91, "storageensemblecheckpoint": 92, "tensordictmaxvaluewrit": 93, "tensordictroundrobinwrit": 94, "tensorstorag": 95, "tensorstoragecheckpoint": 96, "writer": 97, "writerensembl": 98, "braxenv": 99, "braxwrapp": 100, "dmcontrolenv": 101, "dmcontrolwrapp": 102, "envbas": [103, 392], "envcreat": 104, "envmetadata": 105, "gymenv": 106, "gymlikeenv": 107, "gymwrapp": 108, "habitatenv": 109, "isaacgymenv": 110, "isaacgymwrapp": 111, "jumanjienv": 112, "jumanjiwrapp": 113, "mogymenv": 114, "mogymwrapp": 115, "marlgroupmaptyp": 116, "meltingpotenv": 117, "meltingpotwrapp": 118, "modelbasedenvbas": 119, "multithreadedenv": 120, "multithreadedenvwrapp": 121, "openmlenv": 122, "parallelenv": 123, "pendulumenv": 124, "pettingzooenv": 125, "pettingzoowrapp": 126, "robohiveenv": 127, "smacv2env": 128, "smacv2wrapp": 129, "serialenv": 130, "tictactoeenv": 131, "vmasenv": 132, "vmaswrapp": 133, "check_marl_group": 134, "gym_backend": 135, "dreamerdecod": 136, "dreamerenv": 137, "set_gym_backend": 138, "actiondiscret": 139, "actionmask": 140, "autoresetenv": 141, "autoresettransform": 142, "batchsizetransform": 143, "binarizereward": 144, "burnintransform": 145, "catfram": [146, 394], "cattensor": 147, "centercrop": 148, "cliptransform": 149, "crop": 151, "dtypecasttransform": 152, "devicecasttransform": 153, "discreteactionproject": 154, "doubletofloat": 155, "endoflifetransform": 156, "excludetransform": 157, "finitetensordictcheck": 158, "flattenobserv": 159, "frameskiptransform": 160, "grayscal": 161, "inittrack": 162, "klrewardtransform": 163, "noopresetenv": 164, "observationnorm": 165, "observationtransform": 166, "permutetransform": 167, "pinmemorytransform": 168, "r3mtransform": 169, "randomcroptensordict": 170, "removeemptyspec": 171, "renametransform": 172, "resiz": 173, "reward2gotransform": 174, "rewardclip": 175, "rewardsc": 176, "rewardsum": 177, "selecttransform": 178, "signtransform": 179, "squeezetransform": 180, "stepcount": 181, "targetreturn": 182, "tensordictprim": 183, "timemaxpool": 184, "totensorimag": 185, "transformedenv": 187, "unsqueezetransform": 188, "vc1transform": 189, "viprewardtransform": 190, "viptransform": 191, "vecgymenvtransform": 192, "vecnorm": [193, 397], "gsdenois": 194, "multisteptransform": 195, "randompolici": 196, "check_env_spec": 197, "exploration_mod": 198, "exploration_typ": 199, "get_available_librari": 200, "make_composite_from_td": 201, "set_exploration_mod": 202, "set_exploration_typ": 203, "step_mdp": 204, "terminated_or_trunc": 205, "batchrenorm1d": 206, "cemplann": 207, "conv3dnet": 208, "convnet": 209, "dtactor": 210, "ddpgcnnactor": 211, "ddpgcnnqnet": 212, "ddpgmlpactor": 213, "ddpgmlpqnet": 214, "decisiontransform": 215, "delta": 216, "distributionaldqnnet": 217, "distributionalqvaluehook": 218, "dreameractor": 219, "duelingcnndqnet": 220, "gru": 221, "grucel": 222, "grumodul": 223, "independentnorm": 224, "lstm": [225, 381], "lstmcell": 226, "lstmmodul": 227, "mlp": [228, 381], "mpcplannerbas": 229, "mppiplann": 230, "maskedcategor": 231, "maskedonehotcategor": 232, "multiagentconvnet": 233, "multiagentmlp": 234, "multiagentnetbas": 235, "noisylazylinear": 236, "noisylinear": 237, "normalparamwrapp": 238, "obsdecod": 239, "obsencod": 240, "onehotcategor": 241, "onlinedtactor": 242, "qmixer": [243, 374], "qvaluehook": 244, "rssmposterior": 245, "rssmprior": 246, "squeeze2dlay": 247, "squeezelay": 248, "tanhdelta": 249, "tanhnorm": 250, "truncatednorm": 251, "vdnmixer": 252, "vmapmodul": 253, "reset_nois": 254, "actor": [255, 373, 378, 383], "actorcriticoper": 256, "actorcriticwrapp": 257, "actorvalueoper": 258, "additivegaussianmodul": 259, "additivegaussianwrapp": 260, "decisiontransformerinferencewrapp": 261, "distributionalqvalueactor": 262, "distributionalqvaluemodul": 263, "egreedymodul": 264, "egreedywrapp": 265, "lmheadactorvalueoper": 266, "multistepactorwrapp": 267, "ornsteinuhlenbeckprocessmodul": 268, "ornsteinuhlenbeckprocesswrapp": 269, "probabilisticactor": 270, "qvalueactor": 271, "qvaluemodul": 272, "safemodul": [273, 373], "safeprobabilisticmodul": 274, "safeprobabilistictensordictsequenti": 275, "safesequenti": 276, "tanhmodul": 277, "valueoper": 278, "worldmodelwrapp": 279, "biased_softplu": 280, "get_primers_from_modul": 281, "inv_softplu": 282, "map": [283, 390], "a2closs": 284, "cqlloss": 285, "clipppoloss": 286, "crossqloss": 287, "ddpgloss": 288, "dqnloss": 289, "dtloss": 290, "discretecqlloss": 291, "discreteiqlloss": 292, "discretesacloss": 293, "distributionaldqnloss": 294, "dreameractorloss": 295, "dreamermodelloss": 296, "dreamervalueloss": 297, "gailloss": 298, "hardupd": 299, "iqlloss": 300, "klpenppoloss": 301, "lossmodul": [302, 378, 384], "onlinedtloss": 303, "ppoloss": 304, "redqloss": 305, "reinforceloss": 306, "sacloss": 307, "softupd": 308, "td3bcloss": 309, "td3loss": 310, "valueestim": 311, "default_value_kwarg": 312, "distance_loss": 313, "hold_out_net": 314, "hold_out_param": 315, "qmixerloss": 316, "next_state_valu": 317, "gae": 318, "td0estim": 319, "td1estim": 320, "tdlambdaestim": 321, "valueestimatorbas": 322, "generalized_advantage_estim": 323, "reward2go": 324, "td0_advantage_estim": 325, "td0_return_estim": 326, "td1_advantage_estim": 327, "td1_return_estim": 328, "td_lambda_advantage_estim": 329, "td_lambda_return_estim": 330, "vec_generalized_advantage_estim": 331, "vec_td1_advantage_estim": 332, "vec_td1_return_estim": 333, "vec_td_lambda_advantage_estim": 334, "vec_td_lambda_return_estim": 335, "pixelrendertransform": 336, "tensordictrecord": 337, "videorecord": 338, "logger": [339, 375, 386, 387], "csvlogger": 340, "generate_exp_nam": 341, "get_logg": 342, "mlflowlogg": 343, "tensorboardlogg": 344, "wandblogg": 345, "batchsubsampl": 346, "clearcudacach": 347, "countframeslog": 348, "logreward": 349, "optimizerhook": 350, "replaybuffertrain": 352, "rewardnorm": 353, "selectkei": 354, "trainer": [355, 375, 379], "trainerhookbas": 356, "updateweight": 357, "correct_for_frame_skip": 358, "get_stats_random_rollout": 359, "make_collector_offpolici": 360, "make_collector_onpolici": 361, "make_dqn_loss": 362, "make_replay_buff": 363, "make_target_updat": 364, "make_train": 365, "parallel_env_constructor": 366, "sync_async_collector": 367, "sync_sync_collector": 368, "transformed_env_constructor": 369, "readm": [370, 388], "tuto": [370, 388], "api": 371, "contribut": [372, 396], "content": 372, "modul": [373, 378, 381, 383, 387, 396], "tensordictmodul": [373, 383, 396], "wrapper": [373, 383], "probabilist": [373, 383], "q": [373, 379, 381, 383], "oper": 373, "join": 373, "hook": [373, 375, 379], "regular": 373, "planner": 373, "object": [374, 378, 384, 396], "torch": 374, "vmap": 374, "dqn": [374, 379, 381], "ddpg": [374, 378, 390], "sac": 374, "redq": 374, "crossq": 374, "iql": 374, "cql": 374, "gail": 374, "dt": 374, "td3": 374, "bc": 374, "ppo": [374, 380, 391], "a2c": 374, "dreamer": 374, "builder": 375, "_util": 376, "comput": [377, 379, 392, 395], "time": [377, 378, 395], "code": [378, 392], "overview": [378, 381], "setup": [378, 381], "__init__": 378, "method": 378, "estim": 378, "put": 378, "togeth": [378, 392], "call": 378, "parallel": [378, 389, 397], "execut": [378, 389, 392], "stat": 378, "build": [378, 379, 387, 394], "evalu": 378, "construct": 378, "target": [378, 379, 384], "network": [378, 379, 380, 381, 383, 390, 391], "updat": 378, "experi": [378, 392], "result": [378, 380, 390, 391], "conclus": [378, 379, 380, 381, 390, 391, 392, 394], "next": [378, 380, 382, 385, 390, 391, 394], "A": [379, 394], "deep": 379, "collect": [379, 380, 385], "paramet": [379, 380, 384], "hyperparamet": [379, 380, 390, 391], "regist": 379, "possibl": 379, "improv": 379, "defin": [380, 390, 391], "loop": [380, 381, 387, 390, 391, 392], "recurr": 381, "convolut": 381, "select": 381, "further": [381, 384], "read": 381, "creat": 382, "run": [382, 397], "rollout": [382, 389, 390, 391, 392, 397], "s": [383, 384], "output": 384, "consider": 384, "log": 386, "own": 387, "first": 387, "design": 387, "divers": 389, "competit": 390, "group": 390, "critic": [390, 391], "pendulum": 392, "write": 392, "_step": 392, "simul": 392, "_reset": 392, "metadata": 392, "_spec": 392, "shape": 392, "seed": [392, 397], "wrap": 392, "class": [392, 396], "test": 392, "our": 392, "simpl": 392, "pretrain": 393, "vanilla": 394, "integr": 394, "tensorclass": 394, "other": 394, "tensor": 394, "pytre": 394, "iter": 394, "over": 394, "fix": 394, "priorit": 394, "save": 394, "raw": 394, "imag": 394, "more": 394, "complex": 394, "introduct": 396, "config": 396, "sequenc": 396, "program": 396, "ensembl": 396, "meta": 396, "state": 396, "frame_skip": 397, "deepmind": 397, "control": 397, "devic": 397, "close": 397, "access": 397, "attribut": 397, "kwarg": 397}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})