Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "TrajCounter", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 100, 102, 103, 105, 107, 109, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 133, 139, 140, 142, 145, 146, 147, 148, 149, 152, 153, 154, 158, 163, 164, 166, 167, 169, 170, 172, 176, 178, 179, 182, 188, 189, 193, 194, 195, 196, 198, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 220, 222, 230, 231, 234, 235, 237, 238, 239, 240, 247, 249, 251, 253, 255, 256, 257, 261, 262, 264, 273, 274, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 305, 309, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 344, 345, 346, 347, 348, 362, 364, 367, 371, 376, 377, 381, 382, 385, 392, 393, 394, 395, 398, 399, 400, 404, 405, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424], "open": [0, 5, 7, 12, 50, 52, 57, 71, 87, 94, 405, 417, 418, 423], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "reinforc": [0, 3, 9, 84, 137, 138, 170, 237, 238, 239, 240, 244, 273, 274, 293, 310, 311, 313, 316, 317, 318, 320, 325, 326, 332, 333, 334, 335, 397, 403, 405, 409, 410, 415, 419, 422, 423], "learn": [0, 3, 7, 8, 9, 18, 45, 84, 85, 86, 88, 89, 123, 137, 138, 142, 145, 152, 170, 237, 238, 239, 240, 244, 258, 265, 272, 273, 274, 293, 310, 311, 313, 316, 317, 318, 320, 324, 325, 326, 331, 332, 333, 334, 335, 397, 400, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422, 423, 424], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 81, 139, 206, 265, 287, 296, 304, 310, 312, 327, 328, 330, 332, 372, 396, 398, 399, 400, 401, 404, 405, 406, 408, 412, 415, 417, 418, 420, 421, 424], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 53, 67, 121, 122, 131, 140, 224, 397, 398, 399, 402, 404, 405, 406, 408, 409, 410, 412, 417, 418, 419, 424], "pytorch": [0, 1, 2, 3, 23, 85, 156, 157, 209, 222, 249, 253, 264, 265, 381, 396, 398, 399, 401, 404, 406, 407, 411, 415, 417, 418, 419, 420, 421, 423, 424], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 45, 54, 55, 59, 64, 67, 84, 123, 127, 131, 136, 137, 138, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 162, 218, 220, 253, 272, 371, 398, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 99, 100, 102, 106, 107, 108, 113, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 136, 137, 138, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 162, 163, 164, 166, 167, 169, 170, 173, 174, 176, 178, 179, 180, 188, 189, 193, 194, 198, 201, 205, 206, 207, 210, 211, 212, 214, 216, 218, 220, 222, 228, 230, 232, 233, 234, 235, 237, 247, 248, 249, 251, 252, 253, 255, 257, 258, 261, 262, 263, 265, 266, 283, 285, 287, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 362, 364, 371, 377, 393, 394, 395, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "directli": [0, 3, 4, 8, 23, 81, 102, 119, 120, 123, 126, 127, 139, 145, 146, 152, 153, 189, 198, 217, 328, 335, 395, 405, 406, 408, 409, 417, 418, 419, 421], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 99, 100, 102, 105, 106, 107, 108, 109, 111, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 166, 167, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 225, 227, 228, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 266, 269, 271, 272, 273, 274, 275, 276, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 342, 343, 344, 345, 346, 347, 350, 362, 363, 364, 372, 378, 381, 384, 385, 389, 391, 392, 395, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "pypi": [0, 2, 423], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 102, 107, 123, 127, 130, 133, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 174, 193, 207, 209, 210, 211, 212, 214, 216, 218, 219, 220, 233, 234, 235, 249, 251, 252, 253, 255, 256, 262, 263, 264, 272, 275, 283, 284, 288, 290, 296, 299, 300, 313, 324, 328, 335, 364, 371, 378, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 421, 423, 424], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 113, 123, 126, 127, 128, 130, 131, 133, 137, 138, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 209, 214, 219, 220, 229, 230, 231, 233, 244, 253, 256, 264, 266, 287, 292, 293, 299, 304, 310, 320, 328, 330, 344, 349, 357, 371, 376, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 420, 423, 424], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 67, 85, 88, 89, 123, 145, 152, 399, 400, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 423, 424], "instruct": [0, 6, 7, 10, 22, 83, 178, 180, 404, 405, 406, 407, 417, 418, 421], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 56, 65, 66, 102, 145, 152, 288, 289, 290, 399, 404, 409, 411, 412, 414, 416, 418], "section": [0, 2, 3, 4, 24, 249, 253, 405, 408, 409, 414, 417, 418], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 56, 59, 64, 72, 90, 123, 127, 145, 146, 152, 153, 174, 193, 207, 210, 211, 212, 214, 216, 220, 234, 235, 249, 252, 253, 256, 262, 283, 296, 299, 378, 404, 405, 406, 407, 408, 409, 417, 419], "pip": [0, 10, 86, 408, 409, 410, 411, 412, 413, 414, 418, 423, 424], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 38, 41, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 71, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96, 100, 101, 102, 105, 107, 108, 116, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 163, 167, 169, 170, 171, 172, 173, 175, 176, 179, 183, 188, 189, 191, 193, 194, 197, 198, 201, 202, 206, 207, 208, 210, 212, 213, 214, 216, 217, 218, 220, 228, 230, 234, 235, 241, 244, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 274, 285, 287, 293, 295, 296, 297, 298, 303, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 368, 372, 378, 385, 391, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 59, 64, 141, 154, 155, 162, 249, 250, 251, 253, 254, 255, 259, 260, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "first": [0, 1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 100, 107, 108, 113, 115, 123, 126, 127, 128, 133, 145, 146, 152, 153, 166, 167, 170, 171, 183, 189, 193, 194, 209, 212, 214, 235, 249, 251, 253, 255, 256, 262, 264, 268, 287, 291, 292, 293, 296, 297, 299, 300, 312, 322, 327, 328, 330, 363, 364, 380, 399, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "low": [0, 3, 28, 31, 55, 64, 69, 72, 100, 123, 127, 145, 146, 152, 153, 163, 173, 178, 225, 281, 282, 283, 291, 293, 296, 303, 404, 405, 406, 407, 408, 417, 418, 419, 423, 424], "high": [0, 3, 9, 28, 31, 50, 52, 57, 65, 71, 72, 100, 123, 127, 145, 146, 152, 153, 163, 173, 178, 188, 225, 281, 282, 283, 291, 293, 296, 303, 344, 349, 357, 404, 405, 406, 407, 417, 418, 419, 421, 423, 424], "level": [0, 2, 3, 4, 22, 31, 32, 39, 51, 56, 61, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 126, 128, 170, 205, 327, 404, 405, 408, 412, 423], "abstract": [0, 3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 47, 48, 60, 61, 68, 69, 72, 73, 74, 75, 76, 81, 82, 86, 117, 123, 190, 257, 348, 373, 382, 401, 406, 408, 419, 423], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 102, 105, 106, 108, 109, 111, 113, 115, 123, 124, 126, 127, 128, 133, 136, 137, 138, 139, 142, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 163, 165, 166, 167, 169, 170, 173, 174, 176, 177, 178, 179, 180, 182, 183, 187, 188, 191, 193, 198, 201, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 225, 227, 228, 232, 240, 242, 247, 249, 250, 251, 253, 254, 255, 257, 259, 260, 261, 262, 263, 265, 269, 274, 275, 278, 291, 292, 295, 296, 297, 299, 300, 301, 302, 303, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 339, 342, 343, 344, 345, 346, 347, 348, 362, 371, 378, 381, 391, 395, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 70, 72, 73, 74, 75, 76, 169, 178, 285, 328, 399, 423], "effici": [0, 1, 2, 4, 8, 249, 265, 313, 399, 404, 405, 406, 407, 408, 411, 412, 414, 416, 417, 418, 420, 421, 423], "modular": [0, 81, 302, 408, 421, 423], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 45, 54, 55, 59, 64, 87, 123, 127, 143, 144, 145, 146, 152, 153, 154, 155, 212, 220, 396, 405, 407, 408, 409, 412, 415, 423], "properli": [0, 1, 72, 123, 127, 145, 146, 152, 153, 227, 251, 255, 406, 413, 417, 418, 419, 423], "test": [0, 3, 5, 119, 120, 132, 133, 137, 138, 210, 214, 222, 251, 255, 377, 391, 406, 407, 408, 423], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 99, 100, 102, 105, 107, 108, 109, 113, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 163, 166, 167, 169, 170, 174, 176, 179, 180, 181, 189, 191, 193, 198, 200, 201, 202, 205, 206, 207, 210, 211, 212, 214, 216, 217, 218, 220, 222, 227, 228, 229, 231, 232, 237, 238, 239, 240, 241, 244, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 270, 272, 273, 274, 276, 277, 278, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 350, 362, 364, 366, 369, 370, 371, 372, 376, 391, 393, 394, 397, 399, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424], "code": [0, 3, 5, 7, 8, 14, 15, 55, 59, 87, 123, 127, 133, 145, 146, 152, 153, 193, 212, 214, 231, 249, 250, 251, 253, 254, 255, 296, 302, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424], "aim": [0, 2, 3, 7, 60, 61, 193, 214, 216, 256, 384, 398, 399, 400, 404, 405, 423], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 54, 57, 64, 71, 86, 89, 90, 94, 95, 109, 111, 115, 116, 118, 119, 120, 126, 128, 132, 140, 142, 145, 147, 149, 167, 170, 180, 189, 207, 208, 211, 224, 244, 270, 272, 282, 285, 292, 293, 296, 299, 302, 320, 328, 344, 345, 346, 347, 369, 397, 399, 401, 406, 407, 409, 410, 418, 419, 421, 423], "research": [0, 7, 9, 137, 138, 231, 423], "most": [0, 1, 2, 3, 7, 8, 14, 15, 45, 107, 108, 123, 127, 145, 146, 152, 153, 178, 217, 222, 404, 406, 408, 409, 410, 411, 412, 413, 414, 419, 423, 424], "written": [0, 1, 2, 3, 12, 35, 50, 51, 52, 54, 56, 57, 62, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 100, 102, 107, 108, 121, 122, 123, 126, 127, 128, 129, 145, 146, 149, 152, 153, 163, 170, 180, 187, 201, 205, 208, 217, 220, 227, 228, 233, 273, 274, 287, 296, 299, 300, 304, 310, 312, 327, 330, 332, 343, 362, 363, 364, 399, 400, 401, 404, 407, 408, 410, 416, 419, 423], "highli": [0, 2, 409, 423, 424], "wai": [0, 1, 2, 3, 4, 81, 85, 102, 113, 131, 193, 196, 210, 216, 217, 251, 253, 255, 330, 344, 345, 346, 347, 399, 404, 405, 406, 408, 409, 411, 412, 416, 417, 418, 419, 420, 421, 423, 424], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 400, 404, 405, 406, 409, 410, 411, 414, 417, 418, 423, 424], "swap": [0, 1, 3, 126, 217, 406, 408, 420, 423], "compon": [0, 1, 2, 3, 51, 55, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 102, 109, 111, 115, 244, 276, 292, 293, 298, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 376, 381, 404, 405, 406, 407, 408, 410, 411, 414, 416, 417, 418, 419, 420, 423], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 51, 53, 56, 58, 65, 66, 67, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 102, 111, 116, 123, 124, 127, 137, 138, 145, 146, 147, 148, 152, 153, 156, 157, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 227, 233, 236, 237, 241, 244, 245, 251, 255, 271, 275, 276, 282, 284, 291, 294, 295, 303, 306, 307, 309, 316, 329, 362, 364, 378, 395, 397, 403, 405, 407, 408, 410, 412, 413, 414, 415, 420, 422], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 51, 53, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 113, 118, 123, 124, 127, 131, 136, 137, 138, 145, 146, 147, 148, 152, 153, 156, 157, 176, 179, 207, 212, 218, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 284, 285, 291, 293, 295, 298, 303, 306, 327, 364, 404, 405, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "write": [0, 2, 3, 8, 23, 45, 50, 51, 52, 53, 56, 57, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 107, 111, 118, 123, 127, 173, 191, 192, 201, 203, 205, 209, 213, 228, 287, 299, 300, 302, 304, 313, 314, 315, 317, 318, 319, 326, 331, 333, 335, 336, 343, 348, 364, 399, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 102, 106, 123, 127, 140, 145, 146, 150, 151, 152, 153, 167, 201, 211, 218, 220, 227, 228, 249, 251, 255, 273, 274, 299, 300, 305, 310, 311, 312, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 371, 400, 404, 406, 407, 408, 409, 411, 417, 418, 419, 423, 424], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 147, 148, 152, 153, 171, 174, 176, 177, 179, 189, 193, 198, 207, 211, 212, 214, 216, 220, 221, 259, 260, 272, 285, 299, 310, 311, 313, 314, 326, 330, 331, 333, 335, 336, 350, 404, 406, 408, 417, 418, 419, 421, 423, 424], "littl": [0, 1, 3, 67, 123, 127, 145, 146, 152, 153, 212, 310, 312, 327, 330, 332, 406, 407, 408, 412, 421, 423, 424], "effort": [0, 3, 419, 421, 423], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 105, 106, 107, 108, 109, 111, 113, 115, 116, 118, 119, 120, 123, 124, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 142, 145, 146, 147, 148, 152, 153, 154, 156, 157, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 189, 193, 194, 195, 196, 198, 201, 202, 203, 205, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 280, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 342, 344, 345, 346, 347, 348, 362, 363, 371, 372, 374, 377, 378, 381, 383, 384, 385, 391, 395, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "repo": [0, 6, 83, 170, 208, 214, 398, 418, 423], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 107, 108, 121, 122, 126, 128, 129, 149, 230, 248, 274, 315, 318, 326, 342, 411, 423], "align": [0, 249, 253, 423], "exist": [0, 2, 3, 4, 12, 18, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 71, 94, 123, 127, 145, 146, 152, 153, 171, 177, 210, 212, 220, 313, 333, 385, 395, 417, 418, 423, 424], "ecosystem": [0, 408, 412, 423], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 87, 94, 95, 102, 105, 107, 113, 115, 123, 124, 127, 131, 137, 138, 145, 146, 152, 153, 156, 157, 167, 170, 205, 206, 207, 208, 210, 212, 220, 229, 230, 248, 249, 251, 253, 255, 261, 263, 274, 282, 293, 295, 300, 310, 313, 327, 328, 330, 332, 364, 404, 405, 406, 407, 408, 409, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "dataset": [0, 37, 50, 51, 52, 53, 56, 57, 58, 63, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 100, 102, 105, 107, 108, 142, 218, 364, 397, 404, 405, 409, 420, 421, 423, 424], "pillar": [0, 423], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 55, 59, 60, 61, 69, 72, 73, 74, 75, 76, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 166, 167, 169, 170, 171, 176, 177, 178, 179, 184, 188, 189, 193, 194, 195, 198, 201, 205, 206, 207, 208, 210, 211, 212, 214, 217, 218, 222, 230, 232, 233, 251, 255, 257, 258, 274, 295, 317, 321, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 372, 374, 377, 384, 385, 386, 387, 391, 392, 393, 394, 395, 397, 398, 399, 403, 408, 410, 411, 412, 413, 415, 420, 421, 422], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 70, 71, 123, 127, 139, 145, 146, 152, 153, 176, 193, 207, 214, 216, 219, 220, 234, 235, 236, 241, 243, 251, 255, 256, 257, 258, 262, 263, 271, 275, 284, 288, 289, 290, 294, 299, 305, 307, 310, 311, 312, 313, 315, 316, 317, 318, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 342, 381, 386, 387, 388, 397, 398, 400, 401, 403, 406, 409, 412, 415, 417, 418, 419, 421, 422, 424], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 164, 167, 169, 170, 176, 177, 179, 181, 187, 189, 195, 198, 205, 212, 217, 220, 221, 222, 225, 228, 232, 244, 247, 248, 251, 255, 258, 261, 262, 273, 274, 276, 285, 287, 292, 295, 296, 297, 299, 302, 303, 304, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 362, 364, 371, 372, 378, 381, 383, 386, 391, 393, 394, 395, 397, 399, 400, 401, 403, 407, 408, 409, 410, 411, 415, 419, 420, 421, 422, 424], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 45, 54, 55, 56, 58, 59, 64, 119, 120, 123, 127, 132, 133, 138, 145, 146, 147, 148, 152, 153, 158, 170, 193, 198, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 233, 234, 235, 241, 249, 251, 253, 255, 306, 307, 308, 309, 328, 391, 397, 402, 404, 406, 408, 410, 411, 412, 418, 419, 421, 423, 424], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 71, 94, 95, 99, 100, 113, 115, 123, 124, 127, 145, 146, 152, 153, 156, 167, 169, 171, 174, 175, 183, 189, 193, 201, 207, 210, 211, 212, 214, 216, 220, 222, 249, 251, 252, 253, 255, 258, 262, 266, 276, 282, 283, 291, 293, 295, 296, 298, 299, 300, 310, 312, 313, 314, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 343, 344, 345, 346, 347, 362, 372, 384, 394, 399, 405, 406, 408, 410, 411, 413, 417, 418, 420, 421, 423, 424], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 113, 123, 124, 127, 145, 146, 152, 153, 156, 167, 169, 171, 174, 183, 189, 193, 201, 207, 210, 211, 212, 214, 216, 220, 222, 249, 251, 252, 253, 254, 255, 258, 262, 282, 283, 291, 296, 299, 300, 313, 333, 343, 353, 354, 355, 356, 358, 359, 360, 361, 362, 394, 399, 405, 406, 408, 410, 413, 417, 418, 419, 420, 421, 423, 424], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 45, 58, 62, 81, 87, 123, 127, 145, 146, 152, 153, 167, 170, 198, 205, 220, 221, 251, 255, 273, 274, 378, 381, 383, 386, 387, 391, 393, 394, 397, 400, 401, 408, 421, 424], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 99, 100, 102, 103, 105, 107, 108, 109, 114, 117, 118, 123, 127, 139, 145, 146, 152, 153, 163, 174, 176, 179, 193, 207, 210, 211, 212, 214, 216, 217, 218, 220, 227, 228, 232, 234, 235, 249, 250, 253, 254, 256, 258, 261, 262, 287, 292, 293, 296, 298, 299, 304, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 350, 368, 372, 384, 391, 392, 393, 394, 395, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424], "etc": [0, 2, 3, 7, 8, 12, 27, 38, 45, 54, 55, 59, 64, 69, 87, 123, 127, 145, 146, 152, 153, 187, 212, 220, 256, 262, 282, 405, 406, 412, 421, 423, 424], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 106, 109, 123, 127, 145, 146, 147, 148, 152, 153, 163, 166, 170, 176, 179, 180, 187, 188, 189, 205, 210, 211, 212, 218, 220, 222, 228, 234, 235, 256, 261, 262, 263, 285, 295, 301, 302, 310, 312, 327, 330, 332, 335, 339, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 372, 381, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "few": [0, 2, 8, 127, 364, 372, 406, 407, 410, 417, 418, 421, 423, 424], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 50, 52, 72, 126, 128, 129, 149, 156, 157, 176, 179, 304, 330, 399, 404, 406, 407, 417, 418, 419, 423, 424], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 54, 55, 59, 60, 64, 84, 87, 89, 100, 107, 113, 123, 127, 145, 146, 152, 153, 163, 174, 193, 207, 210, 211, 212, 214, 216, 220, 234, 235, 249, 250, 253, 254, 299, 362, 377, 381, 399, 404, 406, 407, 408, 410, 412, 413, 417, 418, 419, 421, 423, 424], "standard": [0, 3, 189, 200, 218, 229, 230, 231, 232, 245, 258, 264, 265, 271, 291, 335, 336, 344, 345, 346, 347, 404, 405, 409, 410, 418, 421, 423], "numpi": [0, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 123, 127, 128, 145, 146, 152, 153, 209, 381, 408, 419, 421, 423, 424], "common": [0, 2, 3, 4, 21, 69, 127, 132, 164, 288, 289, 290, 294, 310, 311, 312, 313, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 391, 398, 399, 401, 404, 406, 410, 413, 416, 417, 418, 419, 420, 423, 424], "openai": [0, 7, 24, 126, 128, 149, 406, 419, 423, 424], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 123, 124, 126, 127, 128, 129, 131, 137, 138, 140, 141, 145, 146, 149, 152, 153, 156, 157, 159, 162, 166, 170, 173, 180, 186, 187, 189, 191, 196, 198, 201, 207, 211, 217, 218, 220, 391, 398, 404, 405, 406, 407, 409, 413, 414, 419, 420, 421], "onli": [0, 1, 2, 3, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 99, 100, 102, 107, 108, 115, 121, 122, 123, 126, 127, 128, 129, 131, 133, 140, 141, 145, 146, 147, 148, 149, 152, 153, 163, 166, 170, 171, 173, 174, 176, 178, 179, 183, 189, 193, 194, 198, 205, 206, 207, 208, 210, 211, 212, 214, 216, 218, 220, 253, 255, 261, 262, 287, 291, 292, 296, 297, 299, 300, 301, 302, 310, 312, 313, 314, 318, 319, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 344, 345, 346, 347, 348, 364, 371, 385, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 423, 424], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 278, 281, 282, 283, 285, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 369, 371, 372, 374, 375, 376, 377, 378, 379, 381, 385, 386, 387, 388, 390, 391, 393, 394, 395, 399, 407, 409, 412, 417, 418, 419, 421, 423], "On": [0, 3, 7, 18, 19, 20, 21, 31, 84, 250, 254, 399, 405, 417, 418], "end": [0, 2, 3, 14, 15, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 100, 102, 106, 107, 108, 123, 127, 145, 146, 152, 153, 180, 191, 205, 206, 210, 212, 220, 234, 235, 249, 250, 253, 254, 257, 295, 313, 333, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "come": [0, 1, 2, 3, 8, 45, 113, 123, 127, 133, 136, 145, 146, 152, 153, 176, 179, 287, 288, 289, 290, 296, 304, 310, 312, 327, 330, 332, 364, 404, 405, 406, 407, 411, 412, 413, 414, 417, 418, 421, 423, 424], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 102, 106, 109, 115, 123, 125, 127, 128, 133, 137, 138, 139, 145, 146, 147, 148, 152, 153, 156, 157, 162, 164, 166, 167, 170, 171, 174, 176, 179, 186, 187, 193, 198, 205, 206, 207, 208, 210, 211, 212, 214, 216, 218, 220, 222, 226, 228, 230, 249, 251, 253, 255, 257, 261, 262, 270, 272, 282, 291, 299, 312, 313, 319, 324, 328, 330, 333, 348, 372, 377, 378, 387, 395, 398, 399, 400, 402, 404, 405, 406, 407, 408, 410, 411, 412, 416, 417, 418, 419, 420, 421, 423, 424], "re": [0, 2, 3, 8, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 106, 123, 127, 145, 146, 152, 153, 220, 255, 259, 260, 263, 296, 300, 371, 401, 404, 406, 407, 408, 409, 411, 416, 417, 419, 423, 424], "usabl": [0, 401, 407, 423], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 102, 109, 111, 115, 123, 124, 127, 128, 145, 146, 152, 153, 162, 166, 167, 176, 179, 210, 212, 218, 220, 222, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 266, 267, 268, 269, 271, 273, 274, 277, 278, 280, 283, 285, 288, 289, 290, 291, 293, 295, 296, 298, 299, 300, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 381, 391, 397, 399, 404, 407, 408, 409, 410, 413, 416, 419, 421, 424], "cost": [0, 2, 30, 87, 310, 312, 327, 330, 332, 400, 404, 405, 408, 417, 418, 419, 421], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 100, 102, 103, 105, 107, 108, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 152, 153, 156, 157, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 227, 228, 232, 235, 236, 237, 238, 239, 240, 242, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 266, 269, 271, 275, 277, 278, 281, 282, 283, 284, 287, 288, 289, 290, 291, 295, 296, 298, 299, 300, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 339, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 368, 381, 384, 386, 391, 392, 393, 394, 395, 397, 399, 401, 404, 405, 406, 407, 408, 410, 411, 413, 416, 417, 418, 419, 420, 421, 423, 424], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 67, 70, 71, 81, 84, 88, 89, 95, 99, 100, 103, 107, 115, 123, 124, 127, 131, 136, 140, 145, 146, 147, 148, 152, 153, 169, 176, 179, 207, 209, 210, 218, 220, 251, 255, 261, 262, 273, 274, 293, 298, 397, 401, 404, 405, 407, 408, 409, 417, 418, 419, 420, 421, 423, 424], "good": [0, 1, 4, 9, 145, 404, 406, 407, 408, 410, 418, 423, 424], "runtim": [0, 2, 3, 23, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 419], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 64, 69, 70, 72, 73, 74, 75, 76, 121, 122, 123, 126, 127, 128, 129, 133, 145, 146, 149, 152, 153, 158, 176, 179, 188, 210, 212, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 263, 266, 267, 268, 271, 272, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 312, 313, 322, 330, 333, 377, 381, 400, 404, 405, 406, 407, 408, 409, 412, 414, 416, 417, 418, 419, 424], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 100, 102, 107, 108, 111, 118, 119, 120, 123, 126, 127, 128, 132, 133, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 205, 207, 218, 220, 233, 251, 255, 273, 274, 288, 289, 290, 313, 319, 324, 328, 335, 364, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 51, 53, 56, 58, 61, 62, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 99, 102, 109, 111, 115, 123, 126, 127, 128, 145, 146, 152, 153, 164, 166, 167, 169, 170, 171, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 198, 201, 202, 203, 205, 206, 207, 208, 210, 211, 213, 214, 215, 217, 218, 220, 228, 233, 269, 287, 288, 289, 290, 292, 295, 296, 299, 300, 302, 304, 305, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 344, 345, 346, 347, 348, 364, 377, 381, 399, 404, 405, 406, 408, 409, 410, 416, 417, 418, 419, 420, 423, 424], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 401, 404, 409, 412, 416, 420, 424], "beyond": [0, 123, 127, 145, 146, 152, 153, 408], "api": [0, 2, 3, 5, 23, 54, 64, 69, 147, 148, 149, 193, 216, 218, 399, 400, 401, 408, 409, 410, 411, 412, 413, 417, 418, 419, 421, 423, 424], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 77, 79, 91, 92, 98, 107, 123, 124, 126, 127, 128, 139, 145, 146, 152, 153, 158, 170, 171, 182, 187, 194, 207, 209, 212, 220, 222, 251, 255, 287, 292, 293, 296, 297, 298, 299, 300, 313, 324, 335, 364, 396, 399, 400, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "paper": [0, 84, 87, 119, 120, 121, 122, 129, 132, 133, 137, 138, 140, 141, 149, 156, 157, 193, 214, 216, 235, 249, 275, 284, 317, 325, 335, 404, 406, 417, 418], "releas": [0, 4, 7, 10, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 383, 391, 401, 404], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 137, 138, 145, 146, 152, 153, 207, 210, 218, 220, 301, 302, 404, 406, 407, 411, 414, 417, 418, 419, 424], "make": [0, 2, 3, 4, 7, 11, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 69, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 105, 109, 111, 118, 123, 127, 128, 131, 133, 135, 141, 145, 146, 152, 153, 163, 181, 189, 193, 194, 198, 205, 214, 220, 222, 231, 233, 249, 250, 251, 253, 254, 255, 261, 262, 264, 292, 300, 310, 312, 327, 330, 332, 344, 345, 346, 347, 362, 378, 387, 395, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "sure": [0, 3, 4, 7, 86, 109, 127, 131, 198, 292, 395, 399, 404, 406, 407, 408, 411, 417, 418, 419, 421, 423, 424], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 69, 72, 81, 90, 91, 92, 98, 123, 127, 145, 146, 152, 153, 187, 188, 218, 220, 320, 328, 399, 400, 405, 406, 407, 408, 417, 418, 419, 421], "enjoi": [0, 2, 3, 87, 412], "latest": [0, 2, 3, 10, 140, 143, 144, 147, 148, 378, 406, 417, 418, 419, 423], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 54, 64, 69, 70, 85, 100, 107, 108, 123, 127, 136, 145, 146, 147, 148, 150, 151, 152, 153, 167, 170, 183, 187, 191, 207, 208, 213, 218, 222, 231, 234, 235, 245, 246, 249, 250, 251, 253, 254, 255, 256, 261, 264, 265, 300, 307, 310, 312, 327, 330, 332, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 395, 399, 404, 405, 406, 407, 408, 410, 411, 412, 414, 419, 421, 423, 424], "recent": [0, 7, 12, 217, 408, 424], "version": [0, 1, 2, 3, 6, 12, 26, 27, 29, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 50, 52, 54, 55, 58, 59, 64, 73, 74, 75, 76, 84, 89, 107, 123, 126, 127, 128, 129, 140, 141, 145, 146, 147, 149, 152, 153, 156, 157, 217, 218, 220, 227, 231, 251, 255, 263, 270, 290, 310, 312, 327, 328, 330, 332, 333, 344, 347, 398, 399, 400, 404, 406, 407, 408, 409, 411, 414, 417, 418, 419, 420, 424], "although": [0, 1, 3, 8, 27, 38, 54, 55, 59, 64, 72, 123, 127, 145, 146, 152, 153, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 401, 404, 405, 412, 421], "core": [0, 2, 3, 8, 401, 407, 410, 423], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 94, 95, 96, 109, 111, 115, 123, 127, 145, 146, 152, 153, 210, 218, 220, 412], "backward": [0, 8, 27, 38, 45, 54, 55, 59, 64, 119, 120, 123, 127, 145, 146, 152, 153, 218, 220, 249, 250, 253, 254, 272, 310, 311, 313, 314, 318, 319, 326, 330, 331, 332, 333, 335, 336, 404, 406, 407, 408, 411, 412, 414, 417, 418, 419], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 27, 38, 45, 54, 55, 59, 64, 83, 102, 105, 107, 108, 109, 113, 123, 127, 129, 142, 145, 146, 152, 153, 170, 205, 214, 218, 220, 249, 250, 251, 253, 254, 255, 297, 310, 311, 313, 314, 315, 317, 318, 319, 326, 328, 330, 331, 332, 333, 335, 336, 339, 404, 407, 421], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 64, 65, 66, 67, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 123, 124, 127, 132, 133, 136, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 166, 167, 169, 171, 174, 176, 177, 178, 179, 187, 189, 191, 193, 195, 198, 201, 205, 206, 207, 210, 211, 212, 214, 216, 218, 220, 225, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 266, 271, 272, 273, 274, 282, 285, 291, 292, 293, 295, 299, 303, 304, 310, 311, 312, 313, 314, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 372, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 100, 102, 107, 108, 115, 119, 120, 123, 126, 127, 129, 130, 132, 133, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 153, 163, 164, 166, 168, 170, 171, 173, 174, 175, 177, 178, 187, 188, 189, 193, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 264, 265, 266, 269, 272, 273, 274, 277, 278, 281, 282, 283, 285, 287, 291, 293, 298, 299, 302, 303, 306, 307, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 350, 351, 352, 372, 379, 391, 395, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 51, 54, 56, 64, 65, 66, 83, 85, 86, 87, 88, 89, 127, 145, 152, 193, 196, 211, 216, 313, 316, 328, 400, 401, 404, 405, 406, 407, 410, 412, 421, 423, 424], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 225, 227, 228, 229, 230, 232, 233, 243, 244, 247, 248, 251, 255, 257, 258, 261, 262, 273, 274, 275, 276, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 362, 363, 372, 376, 377, 378, 380, 381, 397, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 424], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 94, 187, 195, 210, 288, 289, 290, 299, 318, 326, 335, 397, 404, 417, 419, 423], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 102, 110, 116, 123, 127, 145, 146, 152, 153, 154, 162, 193, 216, 220, 258, 366, 371, 381, 401, 405, 408, 414, 417], "root": [0, 2, 3, 31, 32, 39, 51, 56, 61, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 102, 145, 170, 208, 227, 251, 252, 255, 282, 283, 407, 409, 417, 418, 419, 420, 421, 424], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 51, 67, 81, 84, 85, 86, 87, 88, 89, 99, 100, 119, 120, 121, 122, 129, 131, 132, 133, 137, 138, 140, 141, 142, 143, 144, 147, 148, 149, 154, 155, 156, 157, 170, 193, 214, 231, 236, 237, 238, 239, 240, 241, 244, 245, 246, 253, 258, 259, 260, 265, 267, 268, 272, 273, 274, 275, 277, 278, 284, 293, 310, 311, 313, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 344, 349, 357, 396, 408, 415, 420, 423], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 81, 84, 85, 87, 119, 120, 121, 122, 126, 129, 132, 133, 137, 138, 140, 141, 143, 144, 147, 148, 149, 154, 155, 156, 157, 167, 214, 231, 410, 414, 417, 418, 423], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 84, 87, 88, 119, 120, 121, 122, 129, 131, 132, 133, 137, 138, 140, 141, 143, 144, 147, 148, 149, 154, 155, 156, 157, 231, 420, 423], "setup": [0, 7, 119, 120, 131, 132, 133, 154], "py": [0, 3, 24, 126, 128, 162, 275, 284, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "develop": [0, 3, 4, 7, 131, 404, 423], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 123, 125, 127, 129, 130, 145, 146, 149, 152, 153, 160, 163, 165, 166, 167, 169, 173, 178, 184, 187, 193, 194, 196, 203, 207, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 227, 229, 230, 232, 233, 234, 235, 244, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 262, 263, 265, 266, 272, 285, 291, 292, 293, 295, 296, 297, 300, 302, 303, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 342, 344, 345, 346, 347, 348, 350, 362, 365, 366, 369, 371, 374, 381, 383, 391, 400, 403, 404, 406, 408, 410, 411, 412, 415, 419, 422, 424], "seri": [0, 2, 3, 7, 8, 93, 103, 113, 114, 117, 118, 152, 188, 211, 364, 399, 400, 404, 405, 406, 413, 414, 417, 418, 421, 424], "quick": [0, 81, 408], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 58, 83, 89, 123, 127, 145, 146, 152, 153, 166, 169, 208, 211, 220, 231, 330, 398, 399, 400, 404, 405, 406, 407, 410, 414, 417, 418, 419, 421, 423, 424], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 100, 102, 103, 105, 106, 107, 108, 113, 115, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 159, 163, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 183, 187, 188, 189, 193, 194, 197, 198, 201, 202, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 220, 227, 228, 230, 233, 234, 235, 247, 248, 249, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 263, 273, 274, 285, 287, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 358, 359, 360, 361, 362, 368, 371, 376, 378, 381, 383, 385, 391, 395, 398, 400, 404, 405, 406, 407, 408, 409, 411, 413, 414, 416, 417, 418, 419, 421, 423, 424], "hurri": [0, 409], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 60, 61, 69, 72, 73, 74, 75, 76, 83, 106, 107, 108, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 140, 141, 145, 146, 149, 152, 153, 163, 166, 169, 183, 189, 194, 206, 208, 209, 229, 230, 234, 235, 247, 249, 251, 253, 255, 256, 259, 260, 267, 279, 282, 285, 291, 295, 300, 313, 344, 346, 347, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 421, 423, 424], "item": [0, 2, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 102, 106, 113, 163, 182, 259, 260, 314, 315, 317, 372, 400, 401, 404, 406, 407, 408, 411, 412, 417, 418, 419, 421], "navig": [0, 418], "previou": [0, 3, 4, 10, 45, 51, 56, 58, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 145, 146, 152, 153, 207, 220, 228, 249, 253, 278, 291, 406, 407, 408, 409, 410, 414, 419, 424], "whenev": [0, 1, 2, 3, 23, 45, 51, 54, 56, 64, 65, 66, 81, 87, 99, 100, 107, 108, 121, 122, 126, 128, 129, 137, 138, 149, 156, 157, 162, 186, 212, 217, 328, 344, 345, 346, 347, 362, 383, 399, 413, 421], "want": [0, 2, 3, 6, 7, 8, 54, 64, 108, 189, 272, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 399, 404, 405, 406, 407, 408, 409, 411, 412, 413, 417, 418, 419, 420, 421, 423, 424], "ted": [0, 35, 46, 62, 63, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 397, 403, 415, 422], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 69, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 107, 108, 113, 119, 120, 123, 127, 131, 132, 133, 137, 138, 140, 145, 146, 147, 148, 152, 153, 156, 157, 170, 174, 193, 205, 207, 209, 210, 211, 212, 214, 216, 218, 220, 222, 229, 230, 234, 235, 247, 251, 255, 260, 261, 262, 265, 272, 275, 282, 284, 288, 290, 293, 295, 296, 299, 300, 303, 311, 313, 318, 324, 326, 328, 333, 335, 344, 345, 346, 347, 348, 362, 399, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 113, 119, 120, 123, 127, 136, 139, 142, 145, 146, 152, 153, 162, 169, 174, 178, 180, 187, 193, 194, 206, 207, 210, 211, 212, 214, 216, 218, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 344, 345, 346, 347, 348, 362, 381, 388, 391, 397, 400, 401, 403, 405, 406, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424], "optim": [0, 1, 2, 8, 27, 38, 45, 54, 55, 58, 59, 64, 119, 120, 123, 127, 145, 146, 152, 153, 210, 212, 220, 232, 258, 264, 265, 272, 282, 311, 313, 328, 329, 330, 333, 376, 377, 381, 391, 400, 401, 403, 406, 407, 408, 409, 410, 412, 415, 417, 418, 419, 422], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 106, 123, 127, 145, 146, 149, 152, 153, 167, 170, 189, 193, 216, 222, 273, 274, 295, 311, 314, 317, 319, 331, 333, 335, 336, 364, 372, 378, 381, 383, 384, 385, 391, 401, 403, 404, 407, 408, 409, 410, 411, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424], "storag": [0, 1, 8, 27, 35, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 68, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 110, 111, 112, 113, 115, 116, 123, 125, 127, 145, 146, 152, 153, 169, 170, 176, 179, 198, 220, 397, 401, 403, 405, 406, 407, 408, 409, 411, 414, 415, 417, 418, 420, 422], "log": [0, 3, 4, 8, 11, 58, 242, 243, 244, 259, 260, 269, 282, 283, 292, 293, 296, 300, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 336, 342, 371, 374, 375, 377, 381, 391, 399, 400, 401, 403, 404, 405, 406, 409, 410, 414, 415, 417, 418, 419, 422, 423], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 27, 38, 45, 54, 55, 59, 64, 123, 127, 131, 136, 145, 146, 147, 148, 152, 153, 218, 220, 395, 398, 399, 400, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 417, 418, 421, 422, 423], "own": [0, 1, 3, 14, 15, 17, 22, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 147, 148, 152, 153, 220, 364, 403, 405, 406, 409, 415, 417, 418, 419, 422], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 70, 71, 81, 84, 90, 123, 127, 137, 138, 145, 146, 147, 148, 152, 153, 176, 184, 193, 206, 212, 214, 216, 220, 222, 229, 230, 231, 237, 239, 247, 248, 251, 255, 273, 274, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 344, 381, 383, 391, 397, 399, 401, 403, 405, 409, 412, 413, 415, 420, 421, 422, 423, 424], "loop": [0, 8, 50, 52, 57, 71, 123, 127, 145, 146, 152, 153, 227, 229, 230, 247, 248, 272, 273, 274, 330, 381, 400, 401, 403, 404, 405, 409, 411, 412, 413, 415, 416, 421, 422, 423], "ppo": [0, 4, 8, 296, 300, 312, 327, 330, 397, 399, 403, 404, 405, 408, 410, 411, 415, 417, 422], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 113, 121, 122, 123, 124, 126, 127, 128, 140, 145, 146, 152, 153, 170, 173, 174, 181, 186, 187, 189, 196, 198, 203, 205, 207, 208, 210, 211, 212, 218, 220, 233, 251, 255, 391, 399, 403, 405, 406, 409, 410, 411, 415, 422, 423, 424], "introduct": [0, 400, 403, 409, 415, 417, 418, 422, 424], "multi": [0, 1, 7, 9, 27, 38, 45, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 91, 92, 98, 123, 127, 137, 138, 145, 146, 150, 151, 152, 153, 212, 220, 249, 251, 253, 255, 256, 261, 262, 263, 295, 342, 344, 345, 346, 347, 397, 403, 404, 405, 406, 407, 409, 410, 415, 419, 422, 423], "agent": [0, 9, 60, 61, 136, 137, 138, 143, 144, 147, 148, 150, 151, 154, 155, 156, 157, 158, 205, 206, 259, 260, 261, 262, 263, 265, 275, 284, 342, 397, 403, 409, 415, 419, 422], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 38, 45, 54, 55, 58, 59, 62, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 251, 255, 257, 258, 295, 299, 328, 362, 363, 364, 385, 386, 387, 391, 393, 394, 395, 397, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 101, 102, 107, 108, 113, 115, 119, 120, 123, 124, 126, 127, 128, 129, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 193, 194, 195, 196, 198, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 220, 222, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 241, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 357, 362, 364, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 391, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 424], "pretrain": [0, 403, 415, 422], "recurr": [0, 2, 169, 249, 250, 251, 253, 255, 278, 403, 405, 410, 415, 421, 422], "dqn": [0, 2, 81, 163, 180, 235, 244, 292, 293, 310, 311, 313, 314, 315, 317, 319, 320, 321, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 342, 388, 397, 399, 403, 408, 410, 411, 414, 415, 422], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 45, 62, 119, 120, 123, 127, 139, 145, 146, 152, 153, 178, 187, 206, 221, 226, 229, 230, 233, 244, 247, 248, 251, 255, 261, 262, 265, 273, 274, 276, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 303, 310, 311, 312, 313, 314, 318, 319, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 377, 383, 386, 387, 391, 393, 394, 397, 399, 400, 401, 403, 405, 409, 411, 412, 415, 420, 421, 422, 423, 424], "replai": [0, 8, 16, 45, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 113, 114, 118, 169, 170, 178, 194, 198, 207, 220, 313, 314, 315, 317, 318, 319, 326, 331, 333, 335, 336, 378, 381, 389, 391, 397, 401, 403, 408, 415, 419, 420, 422], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 118, 123, 127, 139, 145, 146, 152, 153, 169, 170, 174, 178, 193, 194, 198, 207, 210, 211, 212, 214, 216, 220, 299, 302, 313, 314, 315, 317, 318, 319, 326, 331, 333, 335, 336, 378, 381, 389, 391, 397, 401, 403, 408, 413, 415, 419, 420, 422, 424], "export": [0, 6, 7, 403, 415, 422], "competit": [0, 3, 137, 138, 403, 415, 418, 422], "ddpg": [0, 237, 238, 239, 240, 314, 325, 334, 397, 399, 403, 405, 411, 415, 418, 422], "task": [0, 2, 3, 9, 58, 60, 61, 70, 84, 87, 121, 122, 123, 127, 130, 137, 138, 145, 146, 147, 148, 149, 152, 153, 156, 157, 193, 205, 212, 214, 216, 318, 326, 403, 404, 405, 406, 407, 409, 410, 415, 417, 418, 419, 422, 424], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 65, 66, 69, 72, 73, 74, 75, 76, 127, 143, 144, 145, 152, 156, 207, 241, 251, 255, 291, 310, 328, 330, 332, 364, 381, 397, 400, 401, 403, 406, 407, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 45, 47, 50, 52, 54, 55, 57, 59, 64, 69, 70, 71, 94, 95, 96, 102, 105, 109, 111, 115, 118, 123, 127, 132, 145, 146, 152, 153, 163, 176, 179, 180, 189, 193, 210, 211, 212, 214, 218, 220, 221, 251, 255, 258, 261, 262, 275, 282, 284, 287, 288, 296, 299, 300, 301, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 385, 386, 387, 390, 391, 395, 397, 399, 401, 403, 405, 406, 407, 408, 412, 414, 415, 417, 418, 419, 421, 422, 424], "loss": [0, 3, 8, 52, 180, 272, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 342, 343, 344, 376, 381, 388, 391, 400, 401, 403, 408, 409, 411, 412, 413, 415, 419, 421, 422], "trainer": [0, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 403, 404, 415, 422], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 186, 187, 189, 191, 193, 195, 196, 197, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 220, 221, 225, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 261, 262, 263, 266, 269, 271, 272, 273, 274, 275, 276, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 303, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 337, 338, 342, 344, 345, 346, 347, 350, 362, 364, 372, 373, 374, 375, 376, 378, 379, 380, 383, 391, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424], "packag": [0, 6, 7, 10, 162, 397, 398, 408, 424], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 45, 50, 51, 52, 53, 56, 57, 58, 65, 66, 67, 69, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 100, 101, 102, 106, 107, 108, 113, 115, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 139, 140, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 167, 170, 174, 183, 189, 191, 194, 198, 207, 211, 212, 213, 217, 218, 220, 228, 231, 242, 249, 250, 251, 253, 254, 255, 259, 260, 261, 262, 263, 264, 269, 273, 274, 275, 281, 285, 295, 299, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 372, 375, 378, 379, 380, 381, 383, 393, 394, 395, 397, 399, 400, 401, 405, 406, 407, 408, 409, 412, 414, 416, 417, 418, 420, 423, 424], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 99, 100, 101, 102, 106, 107, 108, 109, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 167, 169, 171, 174, 175, 176, 179, 180, 181, 183, 191, 193, 195, 196, 198, 202, 204, 205, 207, 209, 211, 212, 213, 216, 218, 220, 225, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 326, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 364, 372, 378, 397, 399, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 423, 424], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 76, 87, 94, 123, 127, 145, 146, 152, 153, 166, 196, 206, 210, 212, 218, 220, 227, 251, 255, 263, 291, 313, 328, 333, 362, 397, 400, 404, 405, 407, 409, 417, 421, 423], "interoper": [0, 14, 15, 397], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 36, 38, 43, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 67, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 113, 123, 126, 127, 137, 138, 145, 146, 152, 153, 156, 157, 163, 170, 171, 193, 198, 210, 212, 216, 220, 234, 235, 249, 250, 251, 253, 254, 255, 256, 262, 298, 302, 311, 312, 313, 315, 317, 319, 320, 326, 327, 330, 331, 333, 335, 336, 344, 345, 346, 347, 353, 354, 355, 356, 358, 359, 360, 361, 362, 395, 397, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 420, 421, 423], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 50, 52, 57, 61, 71, 89, 210, 397, 412, 423], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 56, 65, 66, 102, 147, 148, 187, 189, 229, 230, 232, 242, 243, 244, 245, 252, 258, 259, 260, 266, 269, 270, 271, 272, 277, 278, 281, 282, 283, 291, 292, 293, 296, 300, 301, 310, 311, 312, 313, 318, 319, 320, 326, 327, 330, 331, 332, 333, 335, 336, 397, 401, 405, 406, 408, 410, 412, 417, 418, 419, 423, 424], "helper": [0, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 404, 405, 407, 417, 419], "compos": [0, 3, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 101, 102, 103, 104, 113, 114, 123, 127, 145, 146, 152, 153, 170, 197, 210, 211, 212, 218, 220, 294, 295, 313, 322, 333, 364, 397, 404, 405, 406, 407, 408, 412, 416, 418, 419, 421, 423, 424], "episod": [0, 3, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 107, 108, 123, 127, 145, 146, 152, 153, 166, 198, 201, 206, 227, 232, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 397, 405, 409, 414, 417, 418, 421], "format": [0, 3, 27, 35, 38, 43, 44, 45, 46, 49, 54, 55, 59, 62, 63, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 105, 113, 123, 127, 145, 146, 147, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 364, 397, 404, 405, 408, 409, 411, 413, 423, 424], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 72, 73, 74, 75, 76, 77, 78, 79, 123, 127, 139, 145, 146, 152, 153, 156, 157, 163, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 186, 187, 189, 191, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 228, 229, 230, 247, 248, 273, 274, 278, 287, 291, 292, 293, 296, 297, 298, 299, 300, 301, 303, 311, 313, 315, 318, 319, 331, 333, 335, 336, 342, 397, 419], "tree": [0, 1, 50, 52, 57, 123, 127, 145, 146, 152, 153, 397, 417, 421], "forest": [0, 397], "human": [0, 24, 85, 397, 419], "feedback": [0, 397, 414, 423], "rlhf": [0, 58, 70, 90, 187, 397, 399], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 124, 127, 145, 146, 152, 153, 164, 167, 176, 179, 188, 195, 196, 211, 212, 218, 220, 222, 232, 251, 255, 257, 258, 377, 385, 386, 387, 391, 393, 394, 395, 397, 409], "gymlikeenv": [0, 126, 128, 397], "envmetadata": [0, 397], "vector": [0, 1, 8, 25, 119, 120, 128, 132, 133, 136, 147, 148, 149, 156, 157, 178, 217, 237, 239, 249, 250, 253, 254, 256, 344, 347, 357, 358, 359, 360, 361, 397, 399, 400, 404, 405, 407, 416, 417, 418, 419, 420, 424], "custom": [0, 2, 5, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 214, 220, 261, 262, 303, 320, 330, 337, 395, 397, 399, 404, 405, 406, 407, 410, 411, 413, 417, 418], "nativ": [0, 1, 7, 9, 85, 123, 127, 145, 146, 152, 153, 170, 364, 397, 407, 421], "auto": [0, 95, 115, 165, 166, 217, 273, 274, 311, 313, 319, 329, 331, 333, 335, 336, 397, 400, 417, 418], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 108, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 165, 166, 167, 170, 180, 183, 186, 188, 193, 201, 205, 206, 207, 208, 210, 211, 212, 214, 217, 218, 220, 222, 228, 233, 249, 251, 255, 263, 273, 274, 286, 295, 328, 363, 397, 400, 404, 405, 406, 407, 409, 412, 416, 417, 418, 423], "dynam": [0, 2, 7, 14, 15, 16, 84, 87, 89, 123, 145, 152, 220, 318, 326, 397, 406, 408, 409, 419], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 77, 78, 79, 83, 119, 120, 123, 125, 126, 127, 128, 129, 132, 133, 139, 140, 141, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 163, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 189, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 225, 227, 228, 229, 230, 244, 247, 248, 251, 255, 273, 274, 276, 278, 287, 291, 292, 293, 296, 297, 298, 299, 300, 302, 303, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 397, 399, 404, 405, 406, 407, 408, 409, 410, 414, 416, 417, 418, 423], "mask": [0, 1, 4, 23, 25, 26, 30, 34, 41, 42, 43, 44, 49, 147, 148, 153, 164, 194, 220, 233, 244, 247, 248, 259, 260, 276, 291, 292, 293, 297, 298, 378, 397, 405, 407, 408, 424], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 58, 62, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 163, 164, 167, 173, 176, 178, 179, 180, 181, 184, 187, 188, 191, 195, 196, 198, 202, 205, 212, 217, 221, 225, 227, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 251, 255, 256, 257, 258, 259, 260, 261, 271, 273, 274, 275, 276, 278, 281, 282, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 300, 303, 304, 310, 311, 313, 314, 315, 317, 318, 319, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 391, 395, 397, 399, 400, 401, 404, 405, 406, 408, 409, 410, 411, 412, 413, 416, 417, 418, 420, 421, 423, 424], "record": [0, 2, 11, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 160, 163, 187, 220, 330, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 391, 397, 405, 406, 410, 414, 417], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 178, 207, 225, 287, 292, 293, 296, 297, 298, 299, 300, 301, 302, 307, 397, 406, 407, 410, 411, 417, 418, 419, 423, 424], "actor": [0, 3, 4, 21, 187, 221, 232, 236, 237, 239, 244, 245, 247, 248, 258, 271, 273, 274, 276, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 342, 397, 400, 405, 407, 408, 409, 411, 414, 417, 420, 423], "explor": [0, 1, 219, 229, 230, 247, 248, 265, 273, 274, 287, 292, 293, 296, 297, 298, 299, 300, 310, 328, 377, 386, 387, 391, 397, 406, 407, 408, 409, 411, 412, 414, 417, 418, 419], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 102, 107, 108, 113, 123, 127, 136, 145, 146, 152, 153, 162, 163, 166, 168, 170, 171, 173, 176, 177, 178, 179, 180, 188, 189, 193, 194, 197, 198, 199, 201, 203, 207, 208, 211, 212, 216, 218, 220, 225, 228, 229, 230, 231, 233, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 269, 273, 274, 275, 276, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 372, 374, 375, 376, 377, 378, 381, 391, 397, 401, 405, 408, 411, 412, 413, 416, 417, 418, 419, 421, 423, 424], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 54, 56, 58, 60, 61, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 104, 106, 123, 124, 127, 137, 138, 139, 142, 145, 146, 147, 148, 150, 151, 152, 153, 167, 174, 176, 177, 181, 187, 189, 195, 196, 201, 202, 205, 207, 211, 217, 220, 228, 233, 242, 251, 255, 259, 260, 269, 287, 296, 300, 304, 305, 324, 331, 338, 344, 349, 357, 367, 381, 397, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "hook": [0, 2, 27, 35, 38, 45, 51, 54, 55, 56, 59, 62, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 116, 123, 127, 145, 146, 152, 153, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 276, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 397], "planner": [0, 232, 258, 397], "torch": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 100, 102, 103, 106, 107, 108, 113, 114, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 187, 189, 191, 193, 195, 196, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 214, 216, 218, 220, 221, 225, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 349, 350, 354, 356, 357, 359, 361, 362, 366, 372, 379, 380, 391, 397, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "vmap": [0, 249, 250, 253, 254, 263, 285, 299, 302, 328, 397, 399], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 58, 60, 61, 69, 72, 73, 74, 75, 76, 87, 89, 101, 113, 123, 127, 139, 145, 146, 152, 153, 163, 178, 188, 189, 207, 221, 222, 233, 247, 249, 251, 253, 255, 296, 299, 300, 307, 311, 328, 331, 377, 385, 397, 399, 404, 405, 406, 407, 408, 409, 410, 412, 419, 420, 421, 423, 424], "sac": [0, 319, 331, 333, 397], "redq": [0, 331, 397], "crossq": [0, 313, 397], "iql": [0, 318, 326, 397, 404, 417, 418], "cql": [0, 311, 317, 397], "gail": [0, 324, 397], "dt": [0, 146, 273, 274, 397, 419], "td3": [0, 335, 336, 397], "bc": [0, 5, 335, 397], "a2c": [0, 310, 397], "dreamer": [0, 160, 161, 245, 321, 322, 323, 397, 399], "checkpoint": [0, 56, 92, 94, 97, 109, 110, 112, 116, 397, 420, 421], "builder": [0, 397, 405, 424], "logger": [0, 3, 11, 362, 364, 366, 367, 368, 369, 370, 371, 375, 381, 391, 395, 397, 405, 417], "_util": [0, 3, 12, 397, 408, 414], "implement_for": [0, 3, 397], "thing": [0, 3, 7, 8, 123, 127, 145, 146, 152, 153, 261, 262, 398, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 421, 424], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 59, 61, 64, 65, 66, 94, 95, 115, 123, 127, 145, 146, 152, 153, 178, 218, 220, 242, 261, 262, 281, 311, 313, 326, 331, 333, 335, 336, 344, 346, 347, 398, 404, 409, 410, 411, 419, 421], "when": [0, 1, 2, 3, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 106, 107, 108, 109, 111, 115, 123, 124, 126, 127, 128, 133, 136, 137, 138, 140, 142, 145, 146, 147, 148, 152, 153, 156, 157, 164, 166, 169, 170, 174, 176, 178, 179, 187, 188, 189, 193, 194, 201, 207, 210, 211, 212, 214, 216, 217, 218, 220, 226, 227, 231, 232, 244, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 272, 276, 282, 295, 296, 299, 300, 302, 306, 311, 312, 313, 315, 320, 326, 327, 328, 330, 331, 333, 335, 336, 337, 342, 343, 344, 345, 346, 347, 362, 363, 364, 366, 378, 395, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 412, 413, 417, 418, 419, 420, 421, 423, 424], "debug": [0, 6, 8, 58, 81, 82, 83, 84, 85, 86, 87, 88, 89, 398, 424], "work": [0, 1, 2, 3, 4, 8, 12, 27, 38, 45, 54, 55, 56, 59, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 100, 105, 107, 108, 111, 118, 123, 126, 127, 128, 131, 145, 146, 149, 152, 153, 171, 187, 193, 210, 214, 217, 218, 220, 227, 234, 235, 256, 293, 298, 303, 312, 327, 330, 381, 398, 399, 404, 405, 406, 407, 409, 412, 416, 417, 418, 419, 420, 421, 423, 424], "habitat": [0, 3, 129, 398, 420], "lab": [0, 3, 121, 122, 129, 398], "mujoco": [0, 6, 8, 149, 398, 404, 406, 407], "error": [0, 1, 3, 7, 10, 12, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 57, 59, 60, 64, 71, 94, 123, 127, 145, 146, 152, 153, 154, 158, 194, 210, 220, 222, 328, 398, 400, 404, 406, 408, 417, 418, 424], "solut": [0, 2, 3, 6, 7, 9, 21, 398, 399, 401, 408, 423], "resourc": [0, 1, 21, 129, 398, 404, 406, 408, 417, 418], "issu": [0, 3, 4, 5, 8, 81, 85, 92, 94, 95, 115, 126, 131, 170, 194, 208, 227, 287, 292, 293, 296, 297, 298, 299, 300, 398, 423], "customis": [0, 398, 405, 413], "video": [0, 4, 9, 364, 366, 377, 395, 397, 398, 414, 417, 418], "render": [0, 3, 8, 133, 156, 362, 364, 377, 398, 404, 405, 406, 408, 409, 413], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 100, 102, 103, 105, 111, 113, 114, 115, 117, 118, 123, 127, 137, 138, 143, 144, 145, 146, 152, 153, 156, 157, 165, 170, 174, 178, 212, 227, 259, 260, 397, 408, 409, 416, 417, 418, 421, 423], "search": [0, 2, 142, 228, 405], "page": [0, 7, 24, 371, 411], "somewhat": [1, 2, 400, 410, 424], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 119, 120, 123, 126, 127, 128, 129, 132, 133, 140, 141, 143, 144, 145, 146, 149, 152, 153, 154, 155, 167, 177, 180, 212, 220, 244, 253, 256, 276, 292, 293, 297, 298, 330, 378, 412, 423, 424], "dataload": [1, 90, 106, 108, 405, 412, 421], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 87, 123, 127, 145, 146, 152, 153, 170, 182, 198, 206, 207, 208, 210, 212, 220, 229, 230, 247, 248, 249, 251, 253, 255, 269, 273, 274, 310, 313, 328, 330, 333, 364, 399, 405, 409, 417, 421, 423, 424], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 184, 187, 189, 191, 193, 194, 195, 196, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 220, 221, 225, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 269, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 302, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 342, 343, 344, 345, 346, 347, 350, 352, 353, 354, 358, 359, 361, 362, 364, 372, 377, 378, 379, 391, 395, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 123, 126, 127, 128, 136, 137, 138, 145, 146, 147, 148, 152, 153, 156, 157, 166, 169, 182, 187, 193, 202, 211, 212, 216, 220, 255, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 378, 381, 399, 400, 401, 404, 405, 406, 407, 408, 411, 416, 417, 418, 419, 420, 421, 423, 424], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 80, 81, 87, 100, 102, 106, 107, 123, 127, 137, 138, 145, 146, 152, 153, 163, 178, 189, 201, 208, 220, 227, 272, 282, 285, 302, 320, 322, 328, 350, 362, 384, 399, 401, 404, 405, 406, 408, 409, 410, 411, 412, 417, 418, 419, 424], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 45, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 87, 96, 123, 127, 145, 146, 147, 148, 152, 153, 167, 168, 174, 183, 193, 207, 211, 212, 213, 214, 216, 220, 227, 233, 249, 251, 253, 255, 261, 299, 300, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 399, 404, 407, 408, 417, 418, 419, 421, 424], "static": [1, 12, 54, 58, 64, 70, 100, 107, 108, 129, 146, 218, 326, 409, 419, 421], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 45, 47, 51, 54, 55, 56, 59, 61, 64, 65, 66, 70, 96, 102, 108, 123, 124, 127, 129, 136, 145, 146, 147, 148, 152, 153, 180, 207, 209, 220, 222, 249, 253, 262, 294, 310, 312, 327, 330, 331, 332, 399, 400, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 60, 64, 90, 113, 116, 123, 126, 127, 128, 129, 133, 145, 146, 149, 152, 153, 169, 176, 178, 179, 188, 196, 207, 210, 212, 220, 226, 247, 251, 255, 273, 274, 312, 313, 327, 328, 330, 333, 364, 378, 383, 393, 394, 395, 399, 404, 405, 406, 407, 412, 417, 418, 419, 421], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 56, 59, 64, 72, 84, 85, 88, 89, 90, 123, 127, 139, 145, 146, 152, 153, 165, 170, 174, 183, 193, 201, 207, 210, 211, 212, 213, 214, 216, 220, 256, 285, 299, 300, 301, 313, 333, 364, 401, 406, 408, 409, 413, 421, 423, 424], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 87, 102, 106, 108, 123, 127, 145, 146, 152, 153, 167, 189, 193, 210, 216, 220, 240, 249, 251, 253, 255, 261, 262, 279, 282, 300, 327, 335, 339, 377, 381, 400, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 421, 423, 424], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 89, 124, 300, 381, 399, 400, 404, 405, 408, 416, 423, 424], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 99, 100, 102, 105, 106, 107, 108, 111, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 166, 167, 171, 173, 174, 177, 193, 201, 202, 205, 207, 209, 210, 211, 212, 213, 214, 216, 220, 227, 229, 230, 231, 233, 234, 235, 247, 248, 249, 251, 253, 255, 256, 259, 260, 261, 262, 264, 273, 274, 285, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 338, 342, 344, 345, 346, 347, 348, 352, 362, 363, 364, 371, 374, 381, 384, 391, 392, 395, 404, 405, 406, 407, 408, 409, 410, 412, 417, 418, 419, 421, 423, 424], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 102, 105, 106, 107, 108, 109, 111, 121, 122, 123, 126, 127, 128, 129, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 168, 169, 173, 176, 177, 179, 187, 189, 191, 193, 201, 203, 209, 210, 212, 213, 214, 216, 218, 220, 227, 233, 234, 235, 237, 243, 246, 251, 255, 256, 259, 260, 267, 276, 293, 295, 297, 298, 300, 302, 303, 304, 311, 313, 326, 328, 331, 333, 335, 336, 341, 344, 347, 362, 363, 377, 378, 393, 394, 400, 404, 406, 408, 409, 410, 411, 412, 416, 417, 419, 420, 421, 423, 424], "constructor": [1, 2, 16, 18, 19, 20, 21, 56, 70, 87, 99, 113, 123, 127, 140, 145, 146, 152, 153, 156, 166, 210, 211, 234, 235, 256, 296, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 392, 395, 399, 404, 405, 406, 409, 412, 417, 418, 421, 423], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 102, 106, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 181, 189, 202, 220, 231, 233, 234, 235, 256, 261, 262, 280, 287, 292, 296, 297, 299, 301, 302, 304, 328, 341, 377, 380, 381, 400, 401, 404, 406, 407, 412, 414, 417, 418, 419], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 53, 54, 55, 56, 59, 64, 65, 66, 69, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 102, 119, 120, 123, 124, 127, 128, 129, 131, 132, 133, 139, 140, 145, 146, 149, 152, 153, 154, 164, 212, 220, 247, 249, 251, 253, 255, 263, 295, 301, 302, 328, 335, 385, 395, 399, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 421, 422, 423, 424], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 45, 58, 81, 91, 92, 98, 100, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 164, 169, 183, 186, 189, 205, 206, 207, 208, 210, 212, 217, 220, 227, 228, 229, 230, 231, 232, 245, 247, 248, 249, 251, 253, 255, 257, 258, 272, 273, 274, 295, 296, 300, 310, 321, 330, 343, 344, 345, 346, 347, 350, 351, 352, 363, 366, 372, 377, 381, 401, 405, 407, 408, 410, 411, 413, 414, 416, 419, 420, 423], "queri": [1, 2, 3, 14, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 193, 211, 214, 218, 220, 302, 400, 404, 411, 419, 423], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 87, 123, 127, 145, 146, 152, 153, 194, 206, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 261, 263, 266, 267, 268, 271, 272, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 307, 315, 317, 328, 344, 345, 346, 347, 348, 363, 392, 399, 404, 405, 407, 411, 414, 419, 421, 424], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 99, 100, 102, 105, 107, 108, 115, 119, 120, 123, 126, 127, 128, 132, 133, 139, 140, 141, 142, 145, 146, 147, 148, 152, 153, 156, 157, 163, 169, 170, 178, 184, 188, 189, 200, 205, 208, 210, 212, 218, 220, 229, 230, 231, 232, 234, 235, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 266, 267, 268, 273, 274, 275, 277, 278, 281, 282, 283, 284, 287, 291, 295, 296, 299, 300, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 372, 374, 377, 381, 383, 384, 385, 393, 394, 395, 399, 400, 404, 405, 406, 407, 409, 410, 412, 414, 417, 418, 419, 420, 421, 424], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 86, 106, 113, 123, 127, 128, 145, 146, 152, 153, 163, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 191, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 220, 222, 249, 251, 255, 256, 264, 265, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 345, 346, 347, 378, 404, 406, 407, 408, 412, 413, 417, 418, 419, 421, 424], "deliv": [1, 2, 3, 16, 87, 404, 405, 409, 412, 423], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 102, 123, 126, 127, 128, 136, 145, 146, 147, 148, 152, 153, 218, 249, 251, 253, 254, 255, 295, 301, 302, 311, 313, 326, 331, 333, 335, 336, 363, 372, 397, 405, 408, 409, 416, 417, 419, 423], "user": [1, 2, 3, 5, 8, 23, 27, 38, 45, 54, 55, 59, 64, 81, 83, 87, 89, 100, 108, 123, 127, 145, 146, 152, 153, 154, 171, 206, 210, 212, 220, 222, 241, 313, 330, 333, 335, 364, 392, 400, 401, 404, 405, 409, 411, 412, 419, 423, 424], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 58, 106, 123, 127, 133, 137, 138, 145, 146, 152, 153, 156, 157, 205, 229, 230, 247, 248, 273, 274, 404, 406, 414, 417, 418, 423, 424], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 60, 61, 62, 64, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 100, 102, 107, 108, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 170, 176, 177, 179, 180, 181, 188, 189, 191, 195, 196, 198, 200, 202, 205, 207, 208, 210, 211, 212, 218, 220, 227, 228, 232, 249, 251, 255, 258, 282, 295, 310, 311, 312, 313, 314, 315, 317, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 399, 400, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 45, 51, 54, 55, 56, 58, 59, 62, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 102, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 169, 170, 171, 173, 180, 189, 196, 205, 206, 210, 211, 212, 218, 220, 222, 227, 228, 232, 236, 241, 245, 249, 250, 251, 253, 254, 255, 256, 258, 263, 267, 271, 275, 277, 278, 284, 288, 295, 299, 305, 310, 312, 313, 317, 327, 328, 330, 331, 332, 333, 342, 343, 344, 345, 346, 347, 348, 381, 395, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 418, 419, 424], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 71, 81, 95, 102, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 140, 141, 143, 144, 145, 146, 149, 152, 153, 154, 155, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 186, 187, 188, 189, 191, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 227, 229, 230, 231, 247, 249, 251, 255, 264, 292, 297, 313, 322, 333, 335, 405, 406, 407, 408, 409, 410, 412, 414, 417, 418, 419, 420, 421, 424], "predefin": [1, 405, 407, 412, 421, 423], "becaus": [1, 2, 3, 4, 7, 50, 52, 57, 58, 71, 81, 123, 127, 145, 146, 152, 153, 180, 187, 205, 211, 217, 220, 240, 262, 287, 292, 293, 295, 296, 297, 298, 299, 300, 310, 330, 399, 404, 405, 407, 408, 410, 411, 412, 416, 417, 418, 419, 421, 424], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 419, 421], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 45, 54, 55, 58, 59, 64, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 189, 203, 212, 215, 220, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 266, 267, 268, 269, 271, 273, 274, 277, 278, 280, 282, 283, 285, 288, 291, 293, 295, 296, 298, 300, 303, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 385, 400, 404, 406, 407, 408, 409, 410, 416, 417, 418, 420, 421], "heavi": [1, 8, 81, 421], "crucial": [1, 2, 3, 229, 230, 247, 248, 273, 274, 318, 326, 328, 404, 405, 406, 407, 409, 411, 413, 417, 418, 419, 423, 424], "configur": [1, 8, 21, 22, 58, 187, 236, 241, 271, 328, 330, 399, 404, 405, 406, 411, 417, 418, 419], "hyperparamet": [1, 105, 220, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 404, 413, 419, 421], "appropri": [1, 3, 4, 7, 93, 103, 113, 114, 117, 118, 145, 152, 180, 392, 395, 404, 413, 421], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 109, 111, 113, 115, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 399, 400, 404, 407, 408, 410, 414, 417, 418, 419, 420, 423], "take": [1, 2, 3, 8, 23, 27, 38, 54, 55, 58, 59, 64, 84, 110, 116, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 173, 205, 208, 211, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 261, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 294, 295, 296, 298, 303, 306, 309, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 372, 383, 399, 401, 404, 405, 406, 408, 409, 410, 411, 417, 418, 419, 421, 424], "consider": [1, 2, 3, 8, 126, 128, 405, 417, 418, 421], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 102, 103, 115, 123, 127, 133, 137, 138, 139, 145, 146, 147, 148, 152, 153, 156, 157, 166, 176, 179, 206, 210, 212, 218, 220, 228, 234, 235, 251, 255, 256, 304, 310, 311, 312, 313, 314, 315, 317, 319, 320, 324, 327, 328, 330, 331, 332, 333, 335, 336, 342, 344, 347, 404, 405, 406, 408, 409, 417, 418, 419, 423, 424], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 100, 102, 107, 108, 109, 113, 116, 121, 122, 123, 126, 127, 128, 129, 133, 136, 139, 145, 146, 147, 148, 152, 153, 156, 157, 163, 166, 167, 170, 173, 174, 176, 177, 180, 181, 183, 187, 189, 194, 195, 196, 198, 201, 202, 205, 206, 208, 211, 212, 217, 218, 220, 222, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 261, 262, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 296, 298, 299, 300, 303, 306, 310, 312, 313, 319, 325, 327, 328, 330, 331, 332, 334, 335, 343, 344, 345, 346, 347, 348, 364, 366, 376, 377, 378, 381, 391, 393, 394, 395, 399, 401, 404, 405, 406, 407, 408, 410, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "occur": [1, 8, 15, 54, 60, 61, 64, 81, 123, 127, 129, 145, 146, 152, 153, 171, 181, 189, 194, 217, 228, 231, 287, 292, 293, 296, 297, 298, 299, 300, 322, 408, 421, 424], "serial": [1, 2, 3, 27, 38, 45, 51, 54, 55, 56, 59, 62, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 145, 146, 152, 153, 210, 218, 220], "parallel": [1, 3, 8, 123, 126, 127, 128, 145, 146, 147, 148, 152, 153, 212, 217, 222, 251, 255, 310, 392, 393, 394, 395, 405, 406, 417, 418, 423], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 45, 62, 167, 170, 198, 251, 255, 391, 394, 397, 404, 405, 406, 407, 408, 412, 414, 417, 418, 421], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 133, 136, 139, 142, 145, 146, 147, 148, 149, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 393, 394, 395, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 421, 424], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 50, 52, 57, 69, 70, 71, 84, 89, 90, 124, 140, 145, 152, 210, 218, 393, 394, 395, 404, 405, 406, 423, 424], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 394, 397, 406, 412, 423], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 37, 50, 52, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 107, 108, 136, 147, 148, 249, 253, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 399, 401, 406, 408, 410, 421, 423], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 55, 56, 59, 65, 66, 100, 107, 108, 119, 120, 121, 122, 126, 128, 129, 131, 132, 133, 140, 141, 145, 149, 153, 210, 218, 220, 251, 255, 261, 272, 273, 274, 328, 383, 397, 399, 400, 404, 409, 413, 417, 418, 419], "aggreg": [1, 3, 27, 54, 81, 100, 113, 147, 148, 228, 234, 235, 237, 238, 302], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 106, 107, 108, 123, 124, 127, 145, 146, 152, 153, 163, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 186, 187, 188, 189, 191, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 227, 228, 229, 247, 249, 251, 253, 255, 256, 261, 276, 282, 291, 293, 298, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 383, 400, 405, 407, 409, 410, 413, 414, 419, 420, 423, 424], "final": [1, 2, 3, 4, 21, 50, 52, 57, 58, 71, 207, 217, 229, 230, 247, 248, 249, 251, 253, 255, 261, 273, 274, 294, 301, 344, 377, 399, 404, 405, 406, 408, 413, 414, 417, 418, 419, 424], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 393, 397, 404, 405, 406, 412, 423], "sever": [1, 2, 3, 8, 27, 38, 41, 45, 54, 55, 59, 64, 70, 84, 123, 127, 145, 146, 152, 153, 171, 173, 212, 220, 330, 404, 406, 408, 413, 414, 421, 424], "gather": [1, 3, 18, 20, 21, 70, 90, 94, 95, 100, 107, 115, 194, 260, 263, 269, 328, 343, 385, 398, 405, 406, 407, 412, 417, 418, 419, 421, 423, 424], "continu": [1, 2, 9, 28, 31, 72, 73, 74, 108, 123, 127, 145, 146, 147, 148, 152, 153, 156, 157, 163, 225, 237, 238, 239, 240, 272, 273, 274, 302, 307, 311, 334, 344, 349, 357, 399, 404, 406, 407, 410, 417, 418, 419, 421, 423, 424], "concomitantli": [1, 123, 127, 145, 146, 152, 153], "network": [1, 4, 8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 136, 145, 146, 147, 148, 152, 153, 220, 234, 235, 237, 238, 239, 240, 243, 245, 246, 253, 256, 261, 262, 263, 265, 267, 268, 270, 272, 275, 277, 278, 279, 284, 288, 289, 290, 291, 299, 303, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340, 342, 344, 345, 346, 347, 348, 390, 391, 399, 400, 401, 408, 411, 414, 416, 419, 424], "impli": [1, 71, 424], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 58, 59, 64, 100, 102, 105, 119, 120, 123, 127, 145, 146, 150, 151, 152, 153, 174, 193, 207, 210, 211, 212, 214, 216, 220, 249, 250, 251, 253, 254, 255, 261, 263, 265, 299, 310, 311, 312, 313, 319, 322, 333, 335, 383, 390, 399, 401, 404, 405, 406, 407, 408, 416, 419, 421, 423], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 83, 89, 92, 100, 123, 126, 127, 128, 129, 145, 146, 149, 152, 153, 187, 189, 202, 210, 212, 213, 218, 220, 222, 231, 251, 255, 256, 261, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 418, 419, 420, 421, 424], "slightli": [1, 23, 81, 400, 407, 408, 417, 419, 420, 421, 424], "lag": [1, 404, 405, 406], "therefor": [1, 2, 3, 7, 51, 56, 65, 66, 88, 89, 123, 127, 145, 146, 152, 153, 198, 330, 342, 408, 411, 417, 424], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 46, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 100, 102, 107, 108, 113, 115, 116, 123, 127, 136, 139, 142, 145, 146, 147, 148, 152, 153, 163, 164, 167, 170, 180, 187, 193, 198, 201, 205, 206, 208, 211, 213, 216, 217, 227, 228, 229, 230, 247, 248, 249, 250, 251, 253, 254, 255, 259, 260, 261, 270, 272, 273, 274, 296, 299, 300, 309, 310, 311, 312, 313, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 400, 401, 404, 405, 406, 408, 409, 416, 417, 418, 419, 421, 424], "asynchron": [1, 9, 15, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 310, 393, 404, 405, 406], "off": [1, 2, 4, 252, 283, 292, 333, 362, 377, 386, 399, 401, 404, 405, 406, 410, 411, 417, 418, 420, 423, 424], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 64, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 100, 102, 107, 115, 123, 126, 127, 128, 133, 145, 146, 147, 148, 152, 153, 154, 156, 176, 179, 183, 189, 206, 212, 217, 220, 222, 244, 249, 251, 253, 255, 262, 264, 288, 290, 291, 293, 297, 310, 318, 320, 326, 330, 377, 399, 401, 404, 405, 406, 407, 408, 409, 410, 412, 413, 417, 418, 419, 420, 421, 424], "remot": [1, 2, 18, 19, 20, 21, 145, 152, 424], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 58, 64, 71, 113, 119, 120, 123, 127, 129, 130, 132, 133, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 163, 164, 166, 167, 170, 173, 176, 179, 180, 181, 187, 191, 195, 196, 201, 202, 203, 205, 206, 208, 210, 218, 220, 222, 232, 233, 251, 255, 258, 273, 274, 295, 310, 362, 364, 385, 399, 404, 406, 407, 410, 411, 412, 413, 414, 420, 421, 423], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 81, 84, 85, 87, 88, 89, 123, 127, 137, 138, 145, 146, 152, 153, 156, 157, 202, 331, 344, 345, 346, 347, 348, 400, 404, 406, 410, 411, 412], "synchronis": [1, 124, 417, 418], "either": [1, 2, 5, 22, 25, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 102, 123, 127, 145, 146, 152, 153, 205, 206, 220, 305, 328, 335, 336, 368, 401, 404, 405, 407, 417, 420, 421, 423, 424], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 404, 418, 423], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 100, 102, 103, 105, 106, 107, 108, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 169, 170, 171, 174, 178, 181, 183, 186, 187, 188, 189, 193, 194, 196, 197, 200, 201, 202, 205, 207, 209, 210, 211, 212, 213, 214, 216, 218, 220, 222, 225, 227, 228, 230, 231, 232, 234, 235, 237, 238, 239, 240, 246, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 272, 274, 282, 283, 287, 288, 289, 290, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 344, 345, 346, 347, 350, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 371, 374, 375, 377, 378, 381, 395, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "second": [1, 2, 3, 8, 23, 41, 42, 43, 44, 81, 84, 113, 167, 249, 251, 253, 255, 293, 312, 327, 330, 333, 366, 380, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 167, 174, 176, 177, 179, 180, 181, 187, 191, 192, 193, 195, 196, 198, 202, 205, 207, 209, 211, 212, 214, 216, 218, 220, 225, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 258, 261, 262, 264, 265, 271, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 362, 378, 383, 389, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 76, 100, 107, 123, 127, 145, 146, 152, 153, 167, 183, 187, 211, 220, 243, 244, 250, 254, 266, 288, 289, 290, 292, 293, 294, 299, 305, 310, 312, 314, 315, 320, 327, 330, 332, 342, 343, 344, 345, 346, 347, 381, 397, 400, 401, 404, 405, 406, 407, 408, 409, 410, 416, 417, 418, 419, 424], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 98, 100, 102, 107, 108, 115, 122, 123, 124, 126, 127, 128, 139, 145, 146, 152, 153, 170, 189, 207, 211, 212, 218, 220, 225, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 261, 262, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 306, 311, 313, 315, 318, 319, 326, 328, 331, 333, 335, 336, 342, 344, 345, 346, 347, 362, 364, 368, 377, 385, 386, 387, 391, 393, 394, 399, 400, 401, 404, 406, 407, 408, 409, 410, 419, 421, 424], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 115, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 163, 167, 174, 176, 177, 179, 180, 181, 191, 193, 195, 196, 198, 202, 205, 207, 211, 212, 214, 216, 220, 225, 227, 232, 233, 243, 249, 250, 251, 253, 254, 255, 258, 264, 265, 273, 275, 276, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 362, 378, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "slower": [1, 417], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 54, 71, 81, 83, 87, 100, 107, 108, 111, 113, 123, 127, 131, 143, 144, 145, 146, 149, 152, 153, 196, 229, 230, 240, 251, 253, 255, 256, 266, 285, 287, 292, 299, 304, 328, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 398, 399, 400, 404, 405, 406, 408, 409, 411, 412, 417, 418, 419, 421, 423, 424], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 98, 99, 100, 102, 103, 107, 108, 109, 111, 113, 114, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 132, 133, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 163, 164, 167, 170, 173, 176, 177, 178, 179, 188, 189, 193, 198, 201, 204, 206, 207, 208, 211, 212, 213, 216, 218, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 280, 285, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 303, 304, 306, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 342, 344, 345, 346, 347, 351, 352, 366, 374, 376, 377, 381, 385, 395, 398, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 424], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 119, 120, 123, 127, 129, 130, 131, 145, 146, 152, 153, 174, 187, 192, 193, 207, 211, 212, 214, 216, 220, 249, 250, 253, 254, 299, 373, 404, 405, 406, 407, 417, 418, 420, 424], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 43, 54, 56, 67, 71, 95, 102, 103, 115, 119, 120, 132, 133, 145, 152, 153, 171, 173, 178, 186, 188, 198, 201, 205, 210, 211, 218, 249, 253, 255, 261, 264, 265, 287, 292, 296, 297, 299, 300, 303, 312, 319, 327, 330, 350, 395, 399, 400, 401, 404, 405, 406, 409, 411, 412, 417, 418, 419, 421, 423], "infer": [1, 145, 152, 170, 218, 251, 255, 264, 291, 296, 317, 362, 404, 406, 408, 412, 414, 421, 423], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 27, 38, 45, 54, 55, 59, 64, 81, 84, 100, 107, 108, 119, 120, 121, 122, 123, 126, 127, 132, 133, 139, 140, 141, 145, 146, 152, 153, 188, 189, 210, 212, 218, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 301, 302, 303, 306, 313, 333, 364, 371, 377, 393, 394, 395, 398, 399, 401, 404, 405, 406, 407, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423], "dispatch": [1, 18, 19, 20, 21, 54, 64, 285, 295, 364, 404], "avail": [1, 2, 3, 4, 6, 21, 51, 56, 65, 66, 81, 84, 89, 100, 106, 107, 108, 121, 122, 131, 137, 138, 143, 144, 145, 147, 148, 149, 154, 155, 156, 157, 163, 166, 169, 187, 244, 276, 296, 300, 328, 364, 393, 394, 404, 405, 406, 407, 408, 409, 410, 417, 418, 419, 421, 424], "speed": [1, 2, 4, 8, 30, 123, 127, 145, 146, 152, 153, 400, 404, 405, 406, 407, 417, 418, 419, 421, 423], "avoid": [1, 2, 3, 27, 38, 45, 54, 55, 59, 64, 94, 95, 115, 123, 127, 145, 146, 152, 153, 162, 210, 212, 218, 220, 231, 282, 287, 299, 304, 312, 313, 327, 330, 333, 384, 406, 408, 418], "oom": [1, 3, 50, 52, 57, 71, 94, 95, 115], "choic": [1, 2, 83, 89, 145, 266, 399, 400, 404, 405, 411, 417, 418], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 58, 59, 61, 64, 65, 66, 69, 70, 81, 84, 85, 87, 88, 89, 92, 94, 95, 100, 102, 107, 108, 113, 115, 123, 124, 125, 127, 128, 136, 140, 145, 146, 147, 148, 152, 153, 156, 166, 167, 176, 179, 196, 210, 211, 213, 218, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 261, 262, 263, 264, 266, 267, 268, 271, 273, 274, 275, 277, 278, 280, 284, 285, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 311, 312, 313, 326, 327, 328, 330, 331, 333, 335, 336, 344, 345, 346, 347, 348, 362, 378, 381, 393, 394, 395, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 421, 423, 424], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 60, 61, 64, 65, 69, 70, 72, 73, 74, 75, 76, 87, 99, 108, 123, 127, 131, 142, 145, 146, 152, 153, 163, 170, 183, 213, 218, 228, 251, 255, 291, 399, 400, 405, 418], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 99, 100, 102, 107, 113, 115, 123, 127, 145, 146, 152, 153, 217, 218, 220, 232, 258, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 371, 397, 401, 404, 406, 407, 410, 412, 414, 417, 418, 420, 424], "while": [1, 2, 3, 7, 8, 23, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 198, 210, 212, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 313, 318, 326, 327, 330, 333, 399, 400, 404, 406, 407, 410, 412, 413, 417, 418, 419, 420, 421, 423], "wait": [1, 20, 21, 22, 154, 407, 419], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 56, 57, 59, 64, 65, 69, 71, 81, 84, 85, 87, 88, 89, 90, 94, 95, 100, 102, 107, 108, 113, 115, 123, 127, 133, 137, 138, 145, 146, 147, 148, 152, 153, 156, 157, 162, 166, 167, 169, 170, 178, 189, 196, 198, 201, 202, 205, 207, 210, 212, 220, 227, 234, 235, 249, 253, 278, 295, 296, 301, 302, 303, 310, 311, 313, 314, 315, 317, 318, 319, 324, 326, 330, 333, 335, 344, 351, 352, 362, 364, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 421, 423, 424], "impact": [1, 2, 3, 87, 133, 176, 179, 231, 310, 312, 327, 330, 332, 405, 407, 417, 418], "memori": [1, 3, 8, 21, 27, 30, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 71, 81, 83, 84, 85, 87, 88, 89, 92, 94, 98, 123, 124, 127, 131, 145, 146, 152, 153, 170, 174, 193, 207, 211, 212, 214, 216, 218, 220, 253, 254, 299, 395, 397, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "manag": [1, 8, 340, 341, 344, 345, 346, 347, 377, 399, 408, 411, 423], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 91, 99, 100, 102, 105, 107, 108, 113, 123, 127, 132, 133, 145, 146, 147, 148, 152, 153, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 192, 193, 194, 195, 196, 198, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 227, 228, 229, 230, 232, 233, 243, 244, 247, 248, 251, 255, 257, 258, 273, 274, 276, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 362, 364, 375, 376, 377, 379, 380, 381, 385, 400, 401, 404, 406, 407, 408, 409, 411, 416, 417, 418, 419, 421, 423, 424], "control": [1, 3, 5, 8, 16, 23, 24, 33, 56, 65, 66, 100, 102, 107, 121, 122, 123, 127, 133, 136, 145, 146, 147, 148, 152, 153, 178, 227, 237, 238, 239, 240, 251, 255, 257, 258, 273, 274, 278, 285, 299, 300, 301, 310, 312, 313, 327, 328, 330, 334, 344, 349, 357, 362, 399, 401, 404, 405, 406, 408, 409, 410, 411, 417, 418, 419, 421, 423], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 105, 106, 113, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 170, 171, 176, 179, 184, 187, 188, 189, 193, 194, 196, 205, 207, 208, 211, 212, 214, 218, 220, 222, 243, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 262, 263, 270, 272, 283, 288, 289, 290, 291, 295, 296, 299, 300, 302, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 339, 342, 344, 345, 346, 347, 362, 364, 372, 376, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 420, 421, 424], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 405, 418], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 41, 42, 43, 44, 49, 51, 52, 55, 56, 58, 59, 65, 66, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 100, 102, 105, 107, 123, 124, 127, 133, 145, 146, 147, 148, 152, 153, 166, 167, 170, 173, 176, 179, 181, 184, 191, 203, 210, 212, 213, 218, 220, 231, 233, 251, 255, 262, 344, 346, 347, 377, 381, 400, 404, 405, 406, 407, 410, 411, 412, 414, 417, 418, 419, 421, 424], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 274, 295, 404, 408, 412, 424], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 105, 113, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 210, 265, 330, 335, 344, 345, 346, 347, 348, 363, 398, 399, 401, 404, 405, 406, 407, 410, 412, 413, 418, 421, 424], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 83, 87, 106, 107, 111, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 140, 141, 145, 146, 147, 148, 149, 152, 153, 163, 170, 176, 178, 179, 184, 188, 189, 210, 211, 212, 218, 220, 234, 235, 250, 251, 254, 255, 256, 259, 260, 261, 262, 273, 274, 282, 291, 303, 311, 313, 326, 328, 331, 333, 335, 336, 400, 404, 405, 406, 409, 410, 412, 416, 417, 418, 420, 421, 424], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 99, 100, 102, 103, 105, 106, 107, 108, 113, 115, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 183, 187, 188, 189, 191, 193, 194, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 276, 277, 278, 280, 281, 282, 283, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 303, 304, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 391, 395, 400, 401, 404, 405, 406, 407, 408, 410, 417, 420, 421, 423, 424], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 45, 54, 55, 59, 64, 69, 71, 87, 123, 127, 145, 146, 152, 153, 171, 176, 179, 189, 194, 206, 212, 220, 227, 231, 251, 252, 255, 283, 318, 326, 335, 362, 377, 399, 405, 407, 417, 418, 419, 421], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 170, 176, 179, 189, 207, 208, 255, 272, 296, 300, 301, 302, 383, 393, 394, 399, 404, 405, 409, 410, 418, 419, 424], "choos": [1, 11, 136, 251, 255, 330, 397, 400, 404, 405, 406, 408, 417, 418, 421, 423], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 45, 50, 52, 53, 54, 55, 57, 58, 59, 64, 69, 71, 81, 83, 84, 85, 86, 87, 88, 89, 100, 119, 120, 123, 126, 127, 128, 132, 133, 139, 142, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 166, 187, 193, 214, 218, 220, 234, 235, 249, 251, 253, 255, 256, 293, 296, 297, 298, 309, 310, 311, 312, 313, 314, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 364, 381, 399, 400, 401, 404, 405, 406, 407, 408, 411, 412, 416, 417, 418, 419, 421, 423, 424], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 384, 404, 406, 423], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 45, 81, 170, 184, 220, 229, 230, 247, 273, 274, 295, 363, 364, 366, 374, 377, 381, 384, 385, 404, 405, 406, 407, 410, 417, 418, 421, 423, 424], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 100, 101, 102, 106, 107, 109, 111, 115, 116, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 166, 167, 170, 173, 174, 178, 181, 183, 186, 187, 189, 191, 192, 193, 201, 203, 207, 210, 211, 212, 213, 214, 216, 217, 218, 220, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 262, 263, 264, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 299, 300, 302, 303, 306, 312, 313, 327, 328, 330, 333, 335, 343, 344, 345, 346, 347, 362, 363, 366, 377, 400, 401, 405, 406, 407, 408, 409, 410, 412, 413, 417, 418, 419, 421, 423, 424], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 45, 62, 167, 170, 198, 251, 255, 384, 404, 405, 406, 407, 408, 412, 414, 417, 418, 421, 423], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 37, 38, 41, 43, 45, 46, 54, 55, 56, 58, 59, 63, 64, 65, 71, 81, 83, 84, 87, 100, 102, 105, 107, 108, 110, 113, 123, 124, 127, 137, 138, 145, 146, 147, 148, 152, 153, 156, 157, 163, 186, 193, 198, 201, 205, 206, 207, 208, 210, 216, 218, 220, 229, 230, 244, 247, 249, 250, 251, 253, 255, 261, 262, 267, 275, 276, 284, 292, 293, 298, 302, 350, 353, 354, 355, 356, 358, 359, 360, 361, 364, 377, 378, 393, 394, 400, 404, 405, 406, 407, 410, 411, 412, 414, 417, 418, 419, 420, 421, 423, 424], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 384, 404, 405, 408, 414], "rand_step": [1, 2, 3, 35, 62, 121, 122, 123, 124, 126, 127, 128, 134, 135, 139, 140, 141, 145, 146, 152, 153, 186, 207, 218, 419, 423, 424], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 404], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 83, 85, 87, 88, 89, 404, 405, 406], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 45, 46, 63, 65, 71, 81, 83, 84, 85, 87, 88, 89, 99, 100, 107, 108, 113, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 194, 205, 210, 211, 220, 232, 255, 258, 273, 274, 330, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 372, 397, 400, 404, 405, 406, 407, 409, 412, 414, 419, 423, 424], "pad": [1, 2, 3, 23, 53, 67, 83, 85, 87, 88, 89, 170, 234, 235, 237, 238, 255, 259, 260, 261, 378], "along": [1, 2, 3, 14, 15, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 58, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 83, 85, 87, 88, 89, 95, 100, 102, 107, 108, 113, 115, 126, 128, 169, 170, 171, 189, 191, 194, 201, 209, 255, 256, 259, 260, 265, 292, 296, 299, 300, 313, 328, 335, 404, 405, 407, 409, 411, 417, 418, 419, 421, 423], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 86, 93, 99, 100, 103, 113, 114, 117, 118, 123, 124, 127, 145, 146, 152, 153, 163, 166, 169, 170, 174, 193, 206, 207, 209, 210, 211, 212, 214, 216, 220, 257, 299, 309, 320, 381, 398, 405, 406, 416, 417, 418, 419, 421, 423, 424], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 60, 61, 69, 72, 73, 74, 75, 76, 100, 107, 108, 127, 166, 194, 205, 228, 230, 259, 260, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 401, 407], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 61, 62, 64, 65, 85, 121, 122, 123, 126, 127, 128, 145, 146, 152, 153, 156, 157, 184, 194, 218, 220, 244, 259, 260, 276, 282, 292, 293, 297, 298, 300, 339, 344, 378, 399, 404, 406, 407, 408, 409, 410, 411, 417, 418], "valid": [1, 2, 3, 23, 50, 52, 53, 70, 90, 113, 158, 166, 194, 210, 212, 220, 229, 230, 234, 235, 256, 259, 260, 273, 274, 327, 344, 345, 346, 347, 378, 401, 408, 424], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 377, 397, 399, 404, 405], "strategi": [1, 2, 16, 87, 105, 136, 163, 247, 260, 269, 399, 401, 404, 405, 408, 410, 417, 418, 421, 423], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 69, 71, 72, 73, 74, 75, 76, 78, 95, 102, 123, 127, 133, 139, 145, 146, 147, 148, 152, 153, 156, 158, 167, 169, 170, 180, 187, 205, 206, 207, 210, 211, 212, 217, 218, 220, 229, 230, 234, 235, 251, 255, 259, 260, 261, 262, 272, 292, 296, 297, 300, 303, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 336, 342, 364, 381, 391, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424], "organ": [1, 2, 419, 421], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 123, 126, 127, 128, 145, 146, 149, 152, 153, 167, 170, 176, 179, 180, 198, 205, 210, 217, 218, 220, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 307, 315, 320, 335, 342, 362, 364, 399, 400, 405, 408, 409, 410, 411, 412, 413, 414, 417, 419, 423], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 87, 102, 105, 119, 120, 123, 124, 127, 132, 133, 136, 145, 146, 147, 148, 152, 153, 166, 170, 177, 178, 189, 196, 210, 212, 213, 220, 244, 249, 250, 251, 253, 254, 255, 256, 258, 261, 262, 263, 276, 326, 328, 330, 339, 344, 345, 346, 350, 351, 352, 377, 381, 383, 393, 394, 399, 400, 401, 404, 405, 406, 408, 409, 411, 413, 416, 417, 418, 419, 420, 421, 423, 424], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 45, 51, 54, 55, 59, 64, 65, 87, 99, 100, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 163, 220, 263, 296, 310, 312, 325, 327, 328, 330, 364, 366, 381, 398, 399, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "tabl": [1, 27, 399, 405, 410], "summar": [1, 3, 419], "what": [1, 3, 8, 11, 33, 51, 69, 81, 100, 107, 123, 127, 145, 146, 152, 153, 180, 207, 210, 222, 227, 297, 313, 324, 328, 335, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 423, 424], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 45, 54, 55, 56, 59, 64, 69, 70, 100, 106, 107, 123, 127, 139, 142, 145, 146, 152, 153, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 186, 187, 189, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 249, 250, 251, 253, 254, 255, 261, 262, 273, 274, 293, 299, 302, 310, 311, 312, 313, 314, 315, 317, 318, 319, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 385, 398, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 417, 418, 419, 421, 424], "n": [1, 2, 3, 6, 7, 25, 26, 27, 30, 34, 38, 43, 44, 45, 49, 54, 55, 58, 59, 64, 123, 127, 145, 146, 152, 153, 170, 178, 183, 213, 220, 249, 250, 253, 258, 270, 272, 273, 274, 295, 300, 310, 311, 319, 328, 343, 378, 401, 405, 407, 408, 410, 417, 418, 421, 423, 424], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 50, 52, 54, 56, 57, 58, 59, 61, 64, 65, 66, 71, 94, 113, 249, 250, 253, 254, 261, 262, 264, 265, 275, 284, 303, 344, 345, 346, 347, 348, 350, 364, 405, 420, 421], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 99, 100, 102, 106, 113, 123, 124, 126, 127, 140, 141, 145, 146, 152, 153, 163, 166, 170, 176, 179, 180, 193, 197, 198, 206, 208, 210, 216, 218, 220, 222, 227, 249, 253, 273, 274, 292, 299, 310, 334, 344, 345, 346, 347, 348, 350, 364, 371, 381, 383, 395, 398, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "p": [1, 2, 4, 102, 105, 124, 150, 151, 233], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 45, 54, 55, 59, 64, 81, 83, 85, 87, 88, 89, 119, 120, 123, 127, 132, 133, 145, 146, 147, 148, 152, 153, 174, 176, 177, 179, 186, 193, 198, 202, 206, 207, 209, 210, 211, 212, 214, 216, 217, 220, 249, 252, 253, 256, 261, 278, 282, 283, 299, 302, 309, 310, 311, 313, 314, 315, 317, 318, 319, 326, 328, 330, 331, 332, 333, 335, 336, 383, 393, 394, 395, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 424], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 99, 100, 102, 113, 123, 126, 127, 145, 146, 152, 153, 176, 177, 179, 186, 189, 209, 212, 222, 255, 256, 262, 263, 296, 299, 300, 302, 303, 309, 310, 311, 313, 314, 315, 317, 318, 319, 326, 328, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347, 364, 372, 383, 393, 394, 395, 397, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 413, 417, 418, 419, 421, 423, 424], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 83, 85, 87, 88, 89, 94, 95, 100, 107, 108, 113, 115, 121, 122, 123, 126, 127, 128, 129, 145, 146, 152, 153, 156, 157, 163, 169, 170, 171, 183, 189, 191, 194, 201, 204, 209, 213, 218, 234, 235, 236, 241, 251, 253, 255, 256, 259, 260, 261, 264, 265, 271, 275, 279, 280, 281, 282, 285, 292, 295, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 395, 404, 405, 406, 407, 408, 409, 417, 418, 419, 421], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 102, 113, 119, 120, 123, 124, 127, 132, 133, 136, 142, 145, 146, 147, 148, 149, 152, 153, 162, 169, 171, 194, 201, 207, 208, 210, 212, 218, 220, 227, 233, 245, 249, 253, 255, 273, 274, 295, 311, 312, 313, 319, 322, 326, 327, 328, 330, 331, 333, 335, 336, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 381, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "adapt": [1, 24, 164, 205, 231, 327, 404, 408, 419], "equal": [1, 14, 15, 17, 27, 81, 100, 107, 108, 140, 143, 144, 145, 152, 188, 189, 234, 235, 249, 251, 253, 255, 256, 262, 334, 339, 372, 393, 394, 404, 406, 420], "introduc": [1, 2, 145, 152, 249, 251, 253, 255, 273, 274, 404, 417], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 70, 72, 73, 74, 75, 76, 83, 89, 94, 95, 102, 113, 115, 119, 120, 123, 126, 127, 128, 132, 133, 137, 138, 145, 146, 147, 148, 152, 153, 156, 157, 166, 193, 207, 212, 214, 220, 222, 237, 251, 255, 280, 300, 301, 302, 364, 372, 384, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 421, 423, 424], "confus": [1, 25, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 212, 220], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 85, 87, 88, 89, 94, 95, 96, 102, 105, 106, 107, 108, 109, 111, 115, 123, 126, 127, 128, 139, 145, 146, 152, 153, 173, 177, 178, 195, 202, 209, 214, 218, 220, 247, 249, 251, 255, 265, 266, 291, 293, 298, 300, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 344, 362, 378, 393, 394, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 420, 423, 424], "better": [1, 3, 8, 9, 14, 15, 23, 133, 251, 255, 400, 406, 409, 419, 423], "consist": [1, 2, 3, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 84, 87, 123, 127, 145, 146, 152, 153, 187, 217, 220, 235, 256, 404, 405, 406, 419, 420, 424], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 87, 123, 127, 137, 138, 145, 146, 152, 153, 212, 296, 300, 404, 406, 408, 409, 410, 412, 417, 418, 419, 424], "keep": [1, 2, 3, 4, 7, 8, 15, 51, 56, 65, 66, 102, 106, 113, 145, 152, 189, 193, 216, 218, 220, 227, 273, 274, 374, 381, 404, 405, 406, 407, 412, 413, 414, 418, 419, 421, 424], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 81, 84, 193, 216, 311, 314, 317, 319, 331, 333, 335, 336, 400, 404, 405, 410, 411, 417, 418, 421, 424], "interchang": [1, 261, 262, 406, 409, 413, 420, 421], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 100, 102, 103, 106, 107, 108, 115, 123, 127, 137, 138, 145, 146, 152, 153, 156, 157, 178, 188, 199, 210, 212, 218, 220, 222, 234, 235, 243, 249, 251, 255, 256, 261, 262, 293, 296, 300, 310, 312, 313, 314, 317, 318, 319, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 339, 344, 377, 381, 400, 404, 405, 407, 408, 412, 417, 418, 419, 421, 424], "wherea": [1, 2, 22, 87, 119, 120, 121, 122, 126, 128, 129, 132, 133, 140, 141, 149, 178, 220, 328, 401, 413], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 65, 69, 71, 72, 73, 74, 75, 76, 84, 87, 89, 99, 100, 123, 127, 139, 145, 146, 152, 153, 193, 207, 210, 212, 216, 218, 220, 247, 248, 251, 253, 255, 259, 260, 273, 274, 296, 300, 313, 315, 318, 319, 333, 342, 344, 345, 346, 347, 348, 399, 404, 405, 406, 408, 409, 411, 412, 413, 417, 418, 419, 420], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 81, 87, 100, 107, 113, 145, 152, 194, 210, 301, 302, 372, 381, 399, 404, 405, 406, 412, 416, 423, 424], "doesn": [1, 4, 12, 113, 140, 176, 179, 408, 409], "understood": [1, 3, 404], "serv": [1, 18, 20, 21, 129, 421, 423, 424], "basi": [1, 113, 261, 421, 423], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 31, 38, 45, 51, 54, 55, 56, 58, 59, 64, 65, 66, 81, 83, 87, 89, 94, 106, 108, 113, 119, 120, 123, 124, 127, 131, 132, 133, 145, 146, 152, 153, 170, 187, 193, 196, 210, 214, 217, 218, 220, 222, 232, 255, 261, 262, 263, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 364, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "anoth": [1, 2, 3, 8, 64, 69, 87, 100, 107, 123, 126, 127, 128, 131, 145, 146, 152, 153, 167, 176, 177, 179, 207, 211, 256, 296, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 400, 404, 406, 407, 408, 410, 411, 416, 417, 418, 419, 424], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 83, 85, 87, 99, 100, 107, 108, 123, 127, 131, 140, 145, 146, 149, 152, 153, 167, 174, 193, 207, 210, 211, 212, 214, 216, 220, 251, 255, 256, 263, 285, 299, 301, 302, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 362, 364, 366, 399, 401, 404, 405, 406, 407, 409, 410, 411, 413, 417, 418, 419, 421, 423, 424], "method": [1, 2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 99, 100, 102, 107, 108, 109, 110, 111, 113, 115, 123, 126, 127, 128, 129, 133, 145, 146, 149, 152, 153, 166, 167, 170, 174, 176, 177, 180, 181, 183, 187, 189, 193, 195, 196, 197, 198, 202, 205, 207, 211, 212, 214, 216, 220, 221, 229, 232, 233, 247, 251, 255, 261, 262, 263, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 307, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 328, 330, 331, 332, 333, 335, 336, 342, 348, 362, 363, 392, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 419, 421, 424], "op": [1, 25, 26, 28, 29, 30, 34, 41, 42, 43, 44, 47, 48, 49, 69, 72, 73, 74, 75, 76, 188, 217, 229, 230, 247, 364, 383, 408], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 89, 99, 100, 108, 113, 123, 127, 145, 146, 147, 148, 149, 152, 153, 220, 222, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 261, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 292, 293, 295, 297, 298, 303, 306, 362, 364, 400, 404, 405, 406, 407, 408, 409, 410, 411, 417, 419, 420, 421, 423, 424], "goal": [1, 3, 4, 81, 82, 83, 84, 85, 86, 87, 88, 89, 206, 404, 405, 406, 407, 418, 419], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 405], "explicitli": [1, 2, 3, 4, 30, 91, 92, 98, 166, 272, 296, 400, 405, 407, 412, 417, 418, 421], "do": [1, 2, 3, 4, 7, 89, 123, 127, 145, 146, 152, 153, 156, 157, 163, 194, 210, 217, 218, 227, 251, 255, 262, 264, 289, 328, 344, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 423, 424], "deepcopi": [1, 263, 328, 417], "structur": [1, 3, 7, 50, 51, 52, 56, 57, 58, 65, 66, 69, 70, 71, 113, 123, 127, 145, 146, 152, 153, 176, 179, 228, 261, 273, 274, 310, 330, 344, 345, 346, 347, 348, 397, 400, 404, 406, 407, 409, 412, 417, 418, 419, 420], "place": [1, 2, 3, 24, 27, 31, 32, 33, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 71, 94, 95, 102, 105, 115, 123, 124, 127, 145, 146, 152, 153, 156, 157, 166, 174, 180, 193, 207, 211, 212, 214, 216, 217, 218, 220, 228, 263, 291, 295, 299, 378, 383, 384, 400, 405, 406, 410, 413, 417, 418, 419, 421], "instanti": [1, 2, 3, 14, 15, 21, 50, 51, 52, 56, 57, 65, 66, 69, 71, 99, 100, 131, 133, 166, 211, 262, 362, 404, 405, 410, 411, 413, 417, 418, 419, 421, 424], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 121, 122, 123, 124, 126, 127, 128, 129, 133, 137, 138, 139, 143, 144, 145, 146, 147, 148, 152, 153, 156, 157, 158, 163, 169, 170, 173, 174, 176, 177, 179, 182, 187, 188, 189, 193, 201, 203, 207, 208, 211, 212, 214, 216, 218, 220, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 261, 262, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 299, 300, 302, 303, 306, 307, 310, 311, 313, 322, 326, 328, 330, 331, 332, 333, 335, 336, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 376, 381, 384, 393, 394, 395, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 423, 424], "graph": [1, 3, 4, 8, 54, 64, 119, 120, 132, 133, 340, 341, 404, 408, 419], "reli": [1, 2, 3, 11, 23, 55, 59, 207, 249, 250, 251, 253, 254, 255, 310, 330, 400, 404, 406, 408, 410, 412, 419, 424], "third": [1, 189, 293, 417, 418], "parti": 1, "try": [1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 50, 52, 57, 61, 71, 405, 406, 407, 408, 411, 412, 417, 418, 419, 423, 424], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 72, 73, 74, 75, 76, 123, 127, 139, 145, 146, 152, 153, 170, 187, 310, 312, 327, 328, 330, 332, 400, 404, 405, 407, 417, 418, 419], "chart": 1, "show": [1, 2, 3, 11, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 262, 364, 404, 406, 407, 408, 417, 418, 419, 421, 423], "decis": [1, 2, 3, 236, 271, 291, 316, 329, 399, 407, 409, 410, 417, 418, 421, 424], "simplest": [1, 54, 64, 113, 303, 404, 406, 407, 410, 417, 418, 421, 424], "scenario": [1, 2, 137, 138, 145, 156, 157, 210, 362, 404, 410, 417, 418, 419], "transit": [1, 27, 38, 45, 54, 55, 59, 64, 83, 87, 100, 108, 113, 123, 127, 145, 146, 152, 153, 220, 231, 305, 404, 407, 409, 410, 412, 417, 419, 421], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 58, 60, 61, 64, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 100, 101, 102, 105, 106, 107, 108, 111, 113, 115, 123, 127, 139, 142, 145, 146, 152, 153, 163, 169, 170, 194, 198, 223, 226, 229, 230, 232, 242, 247, 248, 252, 258, 259, 260, 269, 271, 272, 273, 274, 277, 282, 283, 287, 292, 293, 294, 296, 297, 298, 299, 300, 310, 311, 312, 313, 314, 315, 317, 327, 329, 330, 335, 336, 372, 378, 381, 384, 397, 399, 404, 405, 406, 407, 408, 409, 410, 412, 414, 417, 418, 420, 423, 424], "attent": [1, 2, 8, 404, 407, 424], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 107, 108, 123, 127, 139, 143, 144, 145, 146, 152, 153, 154, 155, 174, 178, 189, 193, 207, 211, 212, 214, 216, 218, 220, 227, 232, 233, 244, 245, 247, 249, 251, 253, 255, 258, 263, 274, 276, 280, 287, 292, 293, 295, 298, 299, 300, 301, 302, 304, 309, 314, 315, 317, 328, 343, 344, 345, 346, 347, 348, 350, 373, 377, 391, 399, 401, 404, 405, 406, 409, 410, 411, 412, 413, 418, 419, 424], "built": [1, 2, 3, 5, 7, 102, 119, 120, 126, 132, 133, 142, 143, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 337, 342, 389, 391, 392, 395, 404, 405, 406, 407, 408, 411, 413, 419, 421, 424], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 76, 113, 167, 183, 378, 397, 407, 408, 418], "suffici": [1, 3, 4, 404], "preprocess": [1, 2, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 405, 408], "popul": [1, 2, 3, 14, 15, 16, 51, 56, 63, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 186, 207, 263, 328, 404, 406, 407, 410, 412, 419, 421], "replaybuff": [1, 2, 14, 15, 16, 35, 51, 62, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 99, 100, 102, 107, 117, 170, 194, 198, 220, 315, 320, 342, 389, 391, 397, 406, 408, 412, 414, 417, 418, 420, 421, 423], "lazytensorstorag": [1, 2, 51, 56, 64, 65, 66, 99, 113, 198, 220, 406, 408, 414, 417, 418, 421], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 54, 56, 64, 113, 123, 124, 127, 145, 146, 152, 153, 162, 167, 187, 207, 220, 233, 285, 292, 295, 296, 297, 321, 323, 324, 335, 344, 347, 355, 356, 360, 361, 362, 391, 400, 404, 408, 417, 418, 421, 423, 424], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 87, 107, 113, 167, 251, 255, 256, 272, 362, 406, 408, 417, 418], "extend": [1, 2, 8, 35, 51, 54, 56, 62, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 96, 99, 100, 102, 103, 107, 108, 111, 113, 114, 117, 118, 169, 198, 220, 231, 328, 378, 400, 401, 404, 405, 406, 407, 408, 412, 414, 417, 418, 420, 421, 423], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 107, 108, 163, 169, 408, 421], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 50, 51, 52, 56, 57, 65, 66, 71, 113, 131, 263, 412, 417, 418], "achiev": [1, 2, 3, 4, 27, 38, 45, 54, 55, 59, 64, 123, 127, 131, 145, 146, 152, 153, 206, 220, 228, 233, 296, 378, 401, 404, 405, 406, 407, 408, 417, 418, 419, 421, 423, 424], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 102, 113, 123, 124, 127, 131, 145, 146, 147, 152, 153, 156, 157, 167, 170, 193, 210, 211, 212, 214, 217, 218, 220, 225, 227, 234, 235, 237, 238, 239, 240, 241, 246, 251, 255, 256, 257, 261, 262, 291, 300, 307, 313, 315, 320, 331, 333, 342, 364, 378, 385, 386, 387, 391, 393, 394, 399, 404, 405, 406, 407, 408, 410, 413, 417, 418, 419, 420, 421, 423, 424], "multidimension": [1, 2, 65, 99, 100, 421], "slicesampl": [1, 2, 81, 100, 421], "sampler": [1, 2, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 194, 272, 315, 320, 342, 404, 406, 417, 418, 421], "One": [1, 2, 4, 8, 25, 26, 30, 34, 43, 44, 49, 70, 113, 119, 120, 145, 152, 170, 198, 214, 229, 230, 269, 299, 303, 334, 339, 368, 404, 405, 421, 424], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 100, 102, 107, 108, 109, 110, 111, 113, 115, 119, 123, 124, 127, 132, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 163, 166, 167, 170, 173, 180, 184, 187, 189, 191, 202, 206, 207, 208, 210, 212, 213, 218, 220, 234, 235, 244, 251, 255, 256, 259, 260, 261, 262, 276, 287, 292, 293, 295, 296, 297, 298, 299, 300, 303, 304, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 334, 335, 336, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 400, 404, 405, 406, 407, 408, 410, 416, 419, 421], "ensur": [1, 2, 3, 27, 38, 45, 51, 54, 55, 59, 64, 65, 99, 100, 106, 123, 127, 145, 146, 152, 153, 163, 170, 193, 205, 212, 214, 218, 220, 251, 255, 292, 399, 405, 406, 419, 421], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 102, 113, 115, 121, 122, 123, 126, 127, 128, 132, 133, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 163, 167, 169, 171, 176, 179, 180, 181, 187, 189, 191, 195, 196, 198, 202, 205, 207, 209, 218, 219, 220, 222, 225, 227, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 246, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 266, 269, 270, 271, 272, 273, 275, 276, 281, 282, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 303, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 372, 378, 381, 391, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 81, 252, 282, 283, 309, 398, 404, 405, 406, 407, 408, 411, 417, 418, 420, 424], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 52, 54, 55, 59, 64, 69, 109, 113, 123, 127, 131, 136, 145, 146, 147, 148, 152, 153, 170, 173, 183, 193, 196, 208, 210, 212, 216, 218, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 264, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 296, 297, 298, 299, 303, 306, 309, 319, 332, 333, 343, 348, 364, 381, 395, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 423, 424], "dimension": [1, 51, 55, 56, 64, 65, 66, 178, 251, 255, 344, 349, 357, 418], "num_slic": [1, 2, 81, 87, 100, 107, 108, 421], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 43, 44, 45, 51, 54, 56, 58, 59, 61, 62, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 102, 107, 108, 115, 119, 120, 121, 122, 123, 127, 132, 133, 134, 135, 136, 139, 141, 145, 146, 150, 151, 152, 153, 163, 164, 166, 167, 170, 180, 198, 205, 206, 210, 218, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 253, 254, 256, 258, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 304, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 362, 363, 399, 403, 404, 405, 406, 407, 408, 410, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424], "trajectory_kei": [1, 23], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 62, 167, 198, 407, 412, 421, 423], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 45, 62, 167, 170, 198, 381, 384, 391, 401, 404, 405, 406, 407, 408, 412, 414, 417, 418, 421, 423], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 107, 170, 171, 191, 204, 207, 213, 218, 254, 280, 285, 295, 395, 405, 406, 408, 417, 419, 421], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 72, 73, 74, 75, 76, 94, 95, 99, 100, 113, 115, 123, 127, 145, 146, 152, 153, 220, 295], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 113, 123, 127, 140, 146, 147, 148, 149, 152, 153, 210, 362, 392, 397, 404, 405, 406, 409, 416, 423, 424], "make_env": [1, 3, 145, 152, 157, 210, 218, 362, 386, 387, 404, 405, 423, 424], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 71, 99, 105, 123, 127, 145, 146, 152, 153, 212, 231, 243, 276, 293, 297, 298, 299, 300, 320, 330, 383, 397, 401, 404, 405, 408, 409, 410, 414, 421, 424], "behav": [1, 3, 129, 139, 249, 253, 269, 318, 326, 328, 408, 420], "iif": 1, "accordingli": [1, 2, 100, 205, 206, 253, 297, 407], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 100, 102, 107, 108, 113, 115, 121, 122, 123, 126, 127, 128, 129, 130, 136, 137, 138, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 164, 166, 167, 170, 174, 178, 180, 181, 187, 189, 191, 193, 195, 196, 198, 201, 202, 205, 206, 207, 209, 210, 211, 212, 214, 216, 220, 221, 225, 231, 232, 233, 234, 235, 237, 238, 239, 241, 244, 246, 249, 250, 251, 253, 254, 255, 256, 258, 261, 262, 263, 266, 269, 272, 275, 285, 287, 288, 289, 290, 292, 293, 296, 298, 299, 302, 303, 304, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 350, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 380, 399, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 71, 87, 99, 113, 166, 180, 222, 292, 299, 410, 411, 413, 417, 418], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 97, 100, 102, 108, 123, 127, 129, 140, 143, 144, 145, 146, 152, 153, 166, 167, 170, 194, 206, 207, 208, 210, 211, 212, 220, 223, 227, 245, 273, 274, 278, 282, 295, 310, 312, 313, 320, 327, 330, 332, 333, 367, 401, 404, 405, 406, 407, 411, 417, 418, 419, 421, 424], "fulli": [1, 8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 250, 254, 405, 408, 411, 419, 421], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 102, 103, 106, 108, 109, 111, 113, 114, 115, 117, 118, 123, 124, 127, 140, 145, 146, 147, 148, 152, 153, 154, 156, 157, 164, 166, 183, 193, 194, 198, 210, 212, 214, 218, 220, 222, 228, 233, 234, 235, 241, 256, 265, 272, 291, 295, 299, 300, 301, 302, 310, 311, 313, 314, 315, 317, 318, 319, 326, 328, 330, 331, 332, 333, 335, 336, 344, 346, 347, 362, 369, 381, 398, 400, 404, 405, 406, 408, 410, 411, 417, 418, 419, 421, 423, 424], "consecut": [1, 3, 81, 106, 131, 255, 273, 274, 364, 407, 409, 412, 418, 421, 424], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 87, 123, 124, 126, 127, 140, 141, 145, 146, 152, 153, 193, 216, 220, 310, 381, 395, 405, 406, 409, 410], "therebi": [1, 24, 362, 400, 404, 405], "interrupt": [1, 2, 127, 295, 350], "These": [1, 2, 7, 58, 84, 89, 116, 156, 193, 216, 399, 400, 404, 406, 417, 418, 419, 421, 424], "tool": [1, 2, 3, 5, 399, 407, 409, 417, 419, 421, 424], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 123, 126, 127, 145, 146, 152, 153, 159, 162, 401, 404, 406, 407, 408, 409, 412, 413, 419], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 397], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 397], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 56, 65, 66, 81, 89, 102, 124, 125, 145, 152, 218, 404, 405, 406, 407, 417, 418, 419, 420, 423, 424], "synchron": [1, 14, 19, 21, 50, 52, 57, 71, 140, 393, 394, 405, 406, 417], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 123, 127, 140, 145, 146, 152, 153, 176, 179, 206, 212, 218, 220, 242, 251, 252, 255, 260, 269, 281, 282, 283, 296, 300, 328, 362, 377, 399, 400, 404, 405, 407, 408, 417, 418, 423, 424], "find": [1, 4, 6, 7, 18, 19, 20, 51, 53, 67, 107, 108, 229, 230, 253, 273, 274, 375, 379, 404, 405, 408, 410, 411, 417, 418], "folder": [1, 2, 50, 52, 57, 71, 156, 405], "variou": [1, 2, 3, 251, 255, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 337, 342, 364, 393, 394, 404, 405, 406, 408, 409, 410, 411, 413, 417, 418, 421, 424], "machin": [1, 2, 7, 18, 19, 20, 45, 86, 131, 417, 418, 423], "wonder": 1, "why": [1, 2, 3, 227, 417, 419, 424], "instead": [1, 2, 4, 7, 8, 12, 14, 15, 16, 25, 27, 38, 45, 54, 55, 59, 64, 68, 87, 123, 127, 133, 145, 146, 152, 153, 183, 207, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 310, 312, 313, 315, 318, 319, 320, 326, 327, 330, 331, 332, 333, 342, 344, 348, 352, 395, 400, 408, 409, 410, 414, 419, 421, 424], "lower": [1, 2, 3, 21, 27, 28, 173, 218, 277, 278, 303, 406, 417, 419], "io": [1, 11, 81, 87, 132, 133, 140, 143, 144, 154, 155, 253, 254, 408], "footprint": [1, 2, 421], "commun": [1, 2, 3, 145, 152, 398, 406, 424], "yet": [1, 119, 120, 132, 420], "plai": [1, 3, 147, 148, 153, 170, 405, 406, 411, 421, 424], "role": [1, 3, 138, 405, 411, 424], "opposit": [1, 417], "direct": [1, 2, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 249, 253, 328, 405, 411], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 88, 89, 140, 344, 345, 346, 347, 407, 408, 417, 418], "share": [1, 3, 6, 8, 23, 50, 52, 56, 57, 65, 66, 69, 71, 92, 94, 95, 96, 100, 102, 103, 107, 109, 111, 115, 124, 145, 152, 210, 218, 251, 255, 261, 262, 288, 289, 290, 310, 311, 312, 313, 314, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 395, 397, 399, 406, 407, 408, 414, 416, 417, 418, 423, 424], "among": [1, 3, 147, 148, 210, 417, 418], "prohibit": [1, 3, 113], "slow": [1, 3, 4, 11, 50, 52, 57, 71], "compar": [1, 3, 87, 113, 311, 313, 326, 331, 333, 335, 336, 377, 400, 404, 406, 408, 410, 411, 417, 418, 421, 424], "gpu": [1, 7, 8, 27, 38, 45, 54, 55, 59, 64, 94, 95, 115, 123, 127, 128, 131, 145, 146, 152, 153, 220, 404, 406, 407, 417, 418, 424], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 65, 69, 71, 81, 99, 100, 107, 113, 119, 120, 127, 153, 166, 189, 210, 218, 229, 230, 231, 232, 242, 245, 249, 251, 253, 255, 258, 271, 272, 281, 282, 296, 300, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 399, 400, 404, 405, 406, 408, 410, 417, 418, 419, 421, 424], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 99, 100, 102, 105, 107, 108, 111, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 166, 167, 171, 173, 174, 177, 193, 201, 202, 207, 209, 210, 211, 212, 213, 214, 216, 220, 229, 230, 231, 233, 247, 248, 251, 255, 259, 260, 261, 262, 273, 274, 287, 291, 292, 295, 296, 297, 299, 300, 303, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 338, 342, 344, 345, 346, 347, 348, 352, 362, 371, 381, 392, 404, 405, 406, 408, 410, 413, 417, 418, 421, 423, 424], "build": [1, 2, 3, 7, 23, 27, 31, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 119, 120, 123, 127, 128, 129, 132, 133, 137, 138, 140, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 198, 218, 220, 232, 251, 255, 258, 294, 296, 300, 381, 388, 389, 390, 399, 401, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 423, 424], "mani": [1, 2, 3, 4, 56, 119, 120, 121, 122, 123, 126, 128, 129, 132, 133, 140, 141, 149, 310, 312, 319, 327, 330, 399, 404, 405, 406, 408, 409, 410, 412, 414, 417, 418, 419, 421, 423, 424], "eg": [1, 2, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 76, 94, 95, 96, 109, 111, 115, 121, 122, 123, 126, 127, 128, 129, 131, 145, 146, 149, 152, 153, 178, 205, 212, 261, 291, 364], "gymnasium": [1, 2, 3, 5, 12, 64, 123, 126, 127, 128, 134, 135, 145, 146, 152, 153, 159, 162, 181, 202, 205, 217, 405, 406, 408, 419, 423], "warn": [1, 3, 55, 59, 229, 230, 247, 248, 273, 274, 405], "quickli": [1, 3, 405, 417, 418, 424], "becom": [1, 2, 3, 4, 21, 249, 253, 417, 418, 424], "quit": [1, 3, 11, 81, 123, 127, 145, 146, 152, 153, 404, 405, 406, 408, 410, 417, 418, 424], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 61, 121, 122, 123, 126, 127, 128, 129, 137, 138, 145, 146, 147, 148, 149, 152, 153, 156, 157, 285, 300, 328, 377, 395, 400, 404, 417, 420, 421, 424], "filter": [1, 2, 3, 4, 70, 100, 107, 108, 310, 311, 313, 314, 318, 319, 326, 330, 331, 333, 409], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 71, 83, 87, 92, 100, 107, 108, 123, 127, 145, 146, 147, 148, 152, 153, 207, 220, 222, 249, 250, 253, 259, 260, 263, 264, 265, 274, 287, 291, 292, 293, 296, 297, 298, 299, 300, 328, 340, 341, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 417, 418, 419, 421, 423, 424], "still": [1, 2, 3, 9, 54, 64, 72, 87, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 210, 230, 327, 328, 404, 405, 407, 416, 419, 421, 424], "wish": [1, 3, 11, 14, 15, 17, 87, 162, 411, 421], "displai": [1, 3, 7, 123, 127, 145, 146, 152, 153, 381, 401, 404, 405, 418, 419], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 170, 171, 174, 176, 179, 180, 181, 183, 186, 187, 188, 189, 191, 193, 194, 195, 196, 198, 200, 201, 202, 205, 207, 209, 210, 211, 212, 213, 214, 216, 218, 220, 222, 227, 228, 230, 231, 232, 233, 234, 235, 237, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 273, 274, 275, 276, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 342, 344, 345, 346, 347, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 371, 374, 375, 377, 378, 379, 381, 395, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "central": [2, 261, 262, 263, 404, 405, 409, 417, 418, 421], "part": [2, 3, 4, 8, 27, 38, 45, 54, 55, 58, 59, 64, 71, 81, 84, 85, 87, 88, 89, 119, 123, 127, 132, 143, 145, 146, 152, 153, 169, 189, 198, 201, 220, 227, 251, 255, 304, 372, 395, 404, 406, 407, 408, 414, 417, 419, 424], "algorithm": [2, 3, 8, 9, 139, 163, 310, 330, 331, 333, 397, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 417, 418, 420, 421, 423], "implement": [2, 3, 9, 12, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 68, 69, 72, 73, 74, 75, 76, 97, 109, 110, 123, 127, 139, 140, 145, 146, 152, 153, 167, 174, 176, 177, 181, 184, 187, 195, 196, 202, 205, 211, 212, 218, 220, 234, 249, 250, 251, 252, 253, 254, 255, 281, 282, 283, 310, 311, 313, 316, 317, 318, 324, 326, 328, 329, 330, 332, 333, 335, 362, 372, 386, 399, 401, 404, 405, 406, 407, 408, 417, 418, 419, 423], "wide": [2, 3, 5, 423], "give": [2, 3, 7, 65, 84, 123, 127, 139, 145, 146, 152, 153, 170, 398, 400, 404, 405, 408, 417, 418, 419, 420, 423], "abil": [2, 328, 419, 421], "panel": [2, 406], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 83, 89, 92, 113, 167, 170, 180, 251, 255, 313, 318, 326, 333, 337, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 45, 54, 55, 59, 64, 69, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 109, 111, 115, 123, 127, 139, 143, 144, 145, 146, 152, 153, 206, 210, 212, 218, 220, 251, 255, 310, 313, 328, 333, 384, 399, 401, 404, 405, 406, 407, 408, 417, 418, 419, 421, 424], "almost": [2, 407], "physic": [2, 6, 7, 92, 145, 146, 149, 401, 404, 417, 418, 419], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 81, 94, 95, 96, 109, 111, 115, 123, 126, 127, 128, 145, 146, 152, 153, 220, 263, 273, 274, 315, 328, 342, 404, 405, 407, 417, 418, 420, 421, 423], "liststorag": [2, 51, 56, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 421], "veri": [2, 3, 132, 133, 405, 409, 412, 417, 419, 421, 423, 424], "ineffici": [2, 4], "allow": [2, 3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 71, 81, 87, 100, 102, 105, 107, 108, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 166, 167, 196, 220, 227, 256, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 337, 339, 342, 399, 401, 404, 406, 407, 408, 409, 410, 411, 417, 418, 419, 421, 423, 424], "complex": [2, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 404, 405, 409, 410], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 107, 108, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 163, 164, 166, 167, 169, 170, 171, 174, 176, 178, 179, 180, 181, 183, 186, 189, 191, 193, 194, 195, 196, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 306, 308, 310, 311, 313, 314, 315, 317, 318, 319, 322, 323, 326, 328, 330, 331, 332, 333, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 423, 424], "contigu": [2, 3, 8, 28, 31, 38, 72, 84, 87, 88, 123, 127, 145, 146, 152, 153, 225, 406, 407, 417, 418, 419, 421, 423, 424], "tensorstorag": [2, 56, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 99, 100, 113, 116, 412, 421], "lazymemmapstorag": [2, 35, 51, 56, 62, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 107, 108, 169, 170, 404, 405, 407, 412, 417, 420, 421], "citizen": 2, "pytre": [2, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 102, 116], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 96, 100, 102, 107, 111, 113, 121, 122, 123, 126, 127, 128, 145, 146, 152, 153, 187, 189, 220, 233, 237, 243, 244, 251, 254, 255, 256, 263, 266, 271, 275, 276, 292, 293, 297, 298, 303, 310, 311, 313, 314, 318, 319, 321, 326, 328, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347, 375, 377, 379, 388, 408, 421, 423], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 71, 100, 105, 107, 108, 123, 126, 127, 128, 137, 138, 145, 146, 152, 153, 156, 157, 207, 210, 212, 220, 296, 300, 313, 333, 335, 377, 393, 394, 395, 401, 405, 406, 409, 411, 417, 419, 424], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 45, 46, 50, 52, 54, 55, 56, 57, 59, 61, 62, 63, 64, 71, 77, 94, 95, 98, 102, 115, 123, 126, 127, 128, 145, 146, 152, 153, 170, 205, 208, 210, 220, 228, 295, 344, 345, 346, 347, 348, 362, 401, 405, 406, 408, 418, 419, 421, 423], "construct": [2, 3, 5, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 81, 102, 123, 124, 126, 127, 145, 146, 147, 152, 153, 176, 179, 220, 222, 251, 255, 278, 300, 381, 399, 405, 406, 407, 410, 417, 419, 421, 424], "ram": [2, 126, 128, 413, 421, 424], "prealloc": [2, 3, 145, 152, 419], "ve": [2, 58, 404, 407, 414], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 72, 73, 74, 75, 76, 102, 106, 123, 127, 131, 137, 138, 145, 146, 152, 153, 187, 205, 206, 211, 230, 248, 249, 253, 263, 274, 295, 310, 328, 330, 332, 404, 405, 406, 407, 416, 417, 418, 419, 421, 423, 424], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 88, 89, 113, 121, 122, 123, 127, 131, 145, 146, 147, 148, 152, 153, 170, 210, 263, 371, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 414, 417, 418, 419, 421, 423, 424], "start": [2, 3, 4, 5, 14, 21, 24, 69, 70, 81, 89, 100, 107, 108, 123, 124, 127, 136, 145, 146, 152, 153, 175, 227, 376, 403, 404, 405, 408, 415, 418, 419, 421, 422, 424], "replay_buff": [2, 8, 14, 15, 16, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 378, 391, 404, 405, 406, 412, 417, 418, 421], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 35, 45, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 65, 66, 67, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 100, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 162, 163, 164, 166, 167, 169, 170, 173, 180, 181, 186, 187, 189, 191, 193, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 218, 220, 221, 225, 227, 228, 232, 233, 237, 238, 239, 240, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 261, 262, 263, 266, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 303, 304, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 362, 364, 374, 377, 391, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "rb": [2, 35, 51, 56, 62, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 102, 107, 108, 113, 170, 198, 220, 405, 407, 408, 412, 414, 418, 420, 421, 423], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 41, 45, 51, 56, 58, 64, 65, 66, 67, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 99, 102, 107, 108, 113, 115, 119, 120, 123, 124, 127, 132, 133, 139, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 163, 164, 167, 169, 170, 206, 208, 209, 220, 232, 233, 236, 237, 239, 241, 243, 247, 248, 249, 250, 251, 253, 254, 255, 258, 271, 273, 274, 285, 296, 303, 307, 311, 315, 317, 324, 330, 331, 332, 336, 342, 344, 345, 346, 347, 350, 364, 372, 401, 404, 405, 406, 407, 408, 409, 410, 414, 417, 418, 419, 421, 423, 424], "add": [2, 3, 4, 6, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 99, 102, 103, 113, 114, 117, 118, 123, 127, 145, 146, 152, 153, 170, 187, 212, 220, 251, 255, 264, 294, 310, 376, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 423], "string": [2, 18, 19, 20, 27, 38, 45, 53, 54, 55, 59, 64, 70, 71, 90, 123, 127, 137, 143, 145, 146, 152, 153, 162, 193, 205, 216, 220, 251, 255, 292, 295, 296, 297, 309, 363, 380, 400, 404, 406, 407, 421], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 43, 51, 56, 64, 65, 66, 69, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 99, 100, 102, 107, 108, 113, 115, 142, 145, 152, 163, 170, 194, 203, 206, 207, 229, 230, 234, 235, 249, 250, 253, 287, 292, 295, 299, 300, 304, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 372, 400, 404, 406, 410, 412, 421, 424], "30": [2, 3, 56, 64, 85, 166, 188, 277, 278, 362, 366, 403, 405, 406, 412, 417, 418, 419, 421, 422], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 109, 111, 113, 115, 123, 124, 126, 127, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 183, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 273, 274, 275, 276, 282, 284, 285, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 302, 303, 304, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 375, 376, 377, 378, 379, 380, 381, 385, 386, 387, 391, 393, 394, 395, 399, 401, 404, 405, 407, 408, 409, 410, 411, 412, 413, 416, 419, 421, 423, 424], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 107, 108, 109, 113, 114, 115, 117, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 152, 153, 156, 157, 163, 165, 166, 167, 169, 170, 171, 172, 174, 175, 178, 183, 184, 188, 189, 191, 193, 194, 197, 204, 205, 208, 212, 213, 214, 216, 220, 222, 225, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 291, 292, 293, 295, 296, 298, 299, 300, 310, 311, 312, 319, 321, 322, 327, 328, 329, 330, 331, 335, 336, 344, 346, 347, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 372, 373, 374, 377, 378, 381, 383, 389, 393, 394, 395, 408, 419, 421], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 45, 50, 52, 53, 54, 55, 57, 59, 61, 62, 64, 70, 71, 78, 83, 84, 85, 86, 88, 89, 107, 108, 121, 122, 123, 126, 127, 128, 129, 137, 138, 145, 146, 149, 152, 153, 156, 157, 166, 170, 172, 173, 175, 176, 177, 179, 180, 183, 186, 189, 191, 193, 196, 198, 201, 203, 205, 206, 207, 210, 213, 216, 218, 220, 227, 228, 251, 259, 260, 291, 292, 295, 297, 298, 311, 313, 333, 344, 345, 346, 347, 399, 404, 406, 407, 409, 410, 411, 413, 417, 418, 419, 420, 421, 423, 424], "onto": [2, 8, 50, 52, 57, 71, 177, 225, 229, 230, 273, 274, 287, 292, 293, 296, 297, 298, 299, 300, 407, 419], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 99, 100, 102, 103, 105, 106, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 140, 141, 145, 146, 149, 152, 153, 156, 157, 163, 170, 171, 205, 206, 207, 208, 212, 220, 228, 234, 235, 256, 259, 260, 262, 273, 274, 295, 297, 298, 306, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 385, 395, 398, 401, 406, 407, 408, 412, 413, 414, 419, 421, 424], "without": [2, 3, 7, 9, 14, 15, 16, 27, 38, 45, 50, 52, 54, 55, 57, 58, 59, 64, 69, 71, 81, 83, 87, 107, 108, 123, 127, 145, 146, 152, 153, 156, 157, 164, 166, 176, 179, 209, 220, 249, 250, 253, 254, 289, 290, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 343, 344, 345, 346, 347, 348, 391, 398, 399, 404, 405, 406, 408, 409, 410, 411, 412, 417, 418, 419, 421, 424], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 50, 51, 52, 54, 55, 57, 58, 59, 64, 65, 71, 99, 100, 123, 127, 139, 145, 146, 147, 148, 152, 153, 154, 155, 164, 166, 167, 176, 178, 179, 195, 205, 206, 210, 212, 215, 218, 220, 228, 229, 230, 232, 247, 248, 249, 251, 255, 258, 263, 273, 274, 296, 297, 298, 299, 300, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 342, 344, 345, 346, 347, 348, 377, 381, 383, 386, 387, 390, 391, 401, 405, 406, 407, 408, 411, 414, 417, 418, 419, 421, 424], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 53, 54, 58, 60, 61, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 87, 90, 100, 107, 108, 111, 123, 127, 132, 133, 145, 146, 152, 153, 163, 194, 218, 232, 234, 235, 237, 239, 241, 249, 253, 256, 258, 261, 262, 287, 299, 304, 372, 378, 404, 406, 407, 412, 414, 419, 421, 424], "cursor": [2, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "afterward": [2, 27, 38, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 417, 424], "tell": [2, 3, 4, 7, 147, 148, 210, 404, 407, 412, 417, 418], "our": [2, 3, 7, 8, 11, 18, 56, 170, 364, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423], "far": [2, 51, 56, 58, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 252, 282, 283, 414, 419, 424], "restrict": [2, 3, 405, 420, 421, 424], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 102, 123, 127, 133, 142, 145, 146, 152, 153, 176, 179, 193, 195, 208, 212, 214, 216, 220, 225, 368, 404, 419], "64": [2, 3, 50, 52, 57, 71, 81, 87, 102, 170, 197, 237, 238, 246, 251, 255, 262, 263, 275, 342, 404, 405, 406, 407, 408, 410, 414, 416, 419, 420, 421, 423, 424], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 100, 107, 108, 115, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 163, 164, 167, 168, 174, 176, 177, 178, 179, 180, 181, 187, 189, 191, 193, 195, 196, 198, 202, 205, 207, 209, 211, 212, 214, 216, 220, 222, 225, 227, 228, 232, 233, 243, 244, 249, 250, 251, 253, 254, 255, 258, 264, 265, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 350, 399, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "unit8": 2, "img": 2, "randint": [2, 70, 102, 209, 408, 421], "255": [2, 102, 209, 408, 419, 421], "uint8": [2, 3, 31, 50, 52, 57, 71, 81, 87, 121, 122, 137, 138, 180, 191, 209, 405, 413, 420, 421, 424], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 45, 51, 56, 58, 61, 62, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 100, 102, 107, 108, 113, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 137, 138, 139, 143, 144, 145, 146, 150, 151, 152, 153, 154, 156, 157, 163, 166, 167, 169, 170, 176, 179, 180, 181, 186, 187, 191, 195, 196, 198, 201, 202, 205, 207, 210, 217, 218, 220, 225, 227, 232, 250, 251, 254, 255, 258, 278, 295, 305, 307, 310, 311, 313, 314, 315, 317, 318, 319, 320, 326, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 364, 375, 377, 379, 405, 407, 408, 410, 413, 414, 416, 419, 420, 423, 424], "ask": [2, 8, 81, 87, 100, 107, 108, 364, 406, 407, 409, 410, 417, 418, 420, 424], "automat": [2, 3, 5, 28, 69, 72, 89, 94, 95, 102, 115, 123, 126, 127, 128, 145, 146, 147, 148, 152, 153, 166, 176, 179, 189, 207, 217, 234, 251, 255, 287, 295, 296, 362, 399, 404, 406, 409, 410, 417, 418, 419, 421, 423], "hand": [2, 3, 7, 21, 31, 417, 418, 419], "look": [2, 3, 5, 7, 8, 27, 38, 45, 54, 55, 59, 64, 100, 123, 127, 136, 145, 146, 147, 148, 152, 153, 193, 194, 214, 220, 296, 300, 301, 302, 400, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424], "assum": [2, 3, 6, 14, 15, 16, 31, 58, 59, 65, 66, 83, 85, 87, 88, 89, 91, 92, 98, 107, 123, 127, 145, 146, 152, 153, 169, 172, 175, 183, 193, 194, 201, 207, 212, 214, 216, 225, 233, 251, 255, 285, 303, 315, 320, 333, 342, 353, 354, 355, 356, 358, 359, 360, 361, 364, 404, 406, 407, 416, 419], "lead": [2, 3, 4, 8, 10, 12, 23, 31, 32, 39, 45, 51, 56, 61, 65, 66, 71, 83, 106, 121, 122, 123, 126, 128, 129, 207, 252, 275, 282, 283, 404, 407, 408, 417, 418, 419, 421, 423], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 56, 57, 60, 61, 69, 71, 72, 73, 74, 75, 76, 123, 222, 228, 404, 412, 421], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 102, 111, 121, 122, 123, 124, 126, 127, 128, 129, 145, 146, 152, 153, 163, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 186, 187, 189, 191, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 234, 235, 242, 251, 255, 256, 261, 262, 281, 287, 291, 292, 296, 297, 299, 300, 303, 304, 311, 313, 319, 327, 329, 331, 333, 378, 383, 399, 404, 406, 408, 416, 418, 419, 421, 424], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 170, 405, 406, 408, 412, 421, 423, 424], "throw": [2, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 220, 424], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 50, 51, 52, 53, 54, 56, 57, 58, 62, 64, 65, 66, 67, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 100, 101, 102, 107, 108, 113, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 167, 169, 170, 174, 176, 179, 180, 181, 191, 195, 196, 198, 202, 205, 207, 211, 212, 220, 221, 227, 228, 232, 233, 241, 243, 244, 247, 248, 251, 255, 258, 273, 274, 275, 276, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 303, 304, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 364, 372, 378, 399, 404, 405, 406, 407, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "max": [2, 23, 52, 65, 70, 90, 99, 100, 113, 133, 178, 208, 273, 274, 283, 311, 312, 313, 319, 329, 331, 333, 404, 406, 407, 408, 414], "label": [2, 52, 53, 58, 70, 404, 417, 421], "100": [2, 14, 15, 16, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 67, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 102, 113, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 173, 180, 189, 198, 203, 205, 220, 261, 293, 295, 364, 373, 391, 405, 406, 407, 408, 409, 411, 414, 416, 417, 418, 419, 420, 421, 423, 424], "rb_pytre": 2, "randn": [2, 51, 54, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 100, 102, 107, 108, 115, 169, 189, 225, 233, 236, 237, 241, 243, 244, 249, 250, 253, 254, 259, 260, 261, 266, 269, 271, 276, 287, 288, 289, 290, 291, 292, 296, 297, 299, 302, 303, 304, 310, 311, 313, 314, 315, 317, 318, 319, 326, 328, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347, 380, 399, 408, 421, 423, 424], "c": [2, 3, 6, 7, 31, 50, 52, 54, 56, 57, 64, 65, 66, 71, 86, 189, 209, 253, 254, 405, 421], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 102, 107, 108, 113, 115, 123, 127, 145, 146, 152, 153, 167, 169, 171, 176, 178, 179, 189, 195, 198, 220, 225, 227, 231, 232, 238, 239, 240, 246, 247, 248, 249, 250, 251, 253, 254, 255, 259, 260, 262, 263, 273, 274, 275, 284, 298, 306, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 350, 407, 408, 421, 423, 424], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 113, 127, 130, 145, 152, 162, 163, 167, 170, 173, 176, 179, 187, 196, 203, 218, 222, 225, 233, 262, 266, 285, 344, 345, 346, 347, 372, 380, 412, 416, 421, 424], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 102, 115, 191, 234, 235, 256, 262, 404, 408, 412, 414, 417, 419, 420, 421, 423], "ambigu": [2, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 111, 123, 127, 145, 146, 152, 153, 167, 174, 193, 207, 211, 212, 214, 216, 220, 299, 400, 404, 408, 409, 419], "deal": [2, 3, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 328, 400, 404, 406, 408, 418, 421], "interpret": [2, 3, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 405], "put": [2, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 127, 137, 138, 153, 156, 157, 218, 371, 395, 399, 405, 406, 407, 409, 417, 419], "solv": [2, 4, 9, 10, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 398, 404, 405, 406, 412, 414, 417, 418, 419, 421], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 45, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 131, 145, 146, 152, 153, 220, 373, 409, 412], "cut": [2, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "distinct": [2, 3, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 167, 411, 416], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 145, 146, 152, 153, 164, 220, 244, 249, 253, 256, 408, 409, 419, 421, 423, 424], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 51, 55, 56, 59, 61, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 119, 120, 123, 126, 127, 128, 131, 132, 133, 136, 145, 146, 147, 148, 152, 153, 166, 176, 179, 194, 233, 256, 275, 295, 296, 300, 301, 302, 306, 328, 344, 345, 346, 347, 399, 400, 404, 405, 406, 409, 411, 416, 417, 418, 419, 420, 421, 424], "collate_fn": [2, 51, 56, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 421, 423], "__init__": [2, 3, 7, 123, 139, 154, 162, 164, 167, 176, 179, 195, 232, 244, 249, 253, 258, 304, 311, 313, 314, 319, 326, 331, 333, 335, 336, 401, 408, 419, 424], "major": 2, "worri": [2, 67], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 64, 69, 72, 73, 74, 75, 76, 94, 95, 96, 100, 107, 109, 111, 115, 123, 124, 127, 131, 145, 146, 152, 153, 166, 228, 404, 406, 409, 417, 418, 419, 424], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 256, 406, 417, 418], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 54, 58, 60, 61, 64, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 188, 207, 252, 282, 283, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 405, 410, 413, 419, 421, 424], "latter": [2, 18, 19, 20, 27, 38, 45, 54, 55, 59, 64, 83, 123, 127, 145, 146, 152, 153, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 330, 393, 394], "inv": [2, 3, 173, 178, 181, 191, 198, 203, 213, 419], "obvious": [2, 408], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 55, 59, 60, 61, 64, 67, 69, 72, 73, 74, 75, 76, 92, 123, 127, 145, 146, 152, 153, 178, 181, 202, 209, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 259, 260, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 344, 408, 421], "multithread": [2, 3, 51, 56, 65, 66, 81, 83, 84, 85, 86, 87, 88, 89, 90, 140, 141, 412, 421], "thread": [2, 14, 15, 17, 50, 52, 57, 71, 119, 120, 132, 133, 145, 152], "prefetch": [2, 51, 56, 65, 66, 81, 83, 84, 85, 86, 87, 88, 89, 90, 404, 405, 407, 421], "advis": [2, 11, 84, 413, 424], "benchmark": [2, 3, 9, 119, 120, 132, 133], "techniqu": [2, 8, 145, 152, 405, 408, 412, 421], "real": [2, 5, 87, 300, 400, 407, 408, 419], "life": [2, 180], "adopt": [2, 3, 5, 404, 424], "throughput": [2, 9, 133, 404], "constant": [2, 11, 33, 170, 189, 206, 401, 404, 406, 407, 424], "throughout": [2, 3, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 406, 417, 424], "further": [2, 3, 5, 24, 404, 406, 408, 409], "refin": [2, 87, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342], "coupl": [2, 407, 410, 411, 419, 421], "get": [2, 3, 4, 6, 7, 8, 9, 31, 32, 39, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 71, 81, 83, 87, 94, 95, 100, 107, 108, 109, 111, 113, 115, 123, 124, 127, 145, 146, 152, 153, 164, 169, 171, 176, 178, 179, 187, 189, 194, 206, 207, 209, 212, 218, 247, 248, 287, 296, 297, 300, 307, 344, 345, 346, 347, 348, 364, 368, 399, 403, 404, 405, 406, 407, 408, 415, 417, 418, 419, 421, 422, 423, 424], "first_elt": 2, "128": [2, 81, 83, 87, 108, 119, 120, 132, 133, 238, 241, 405, 407, 408, 414, 417, 419, 420, 421], "wa": [2, 3, 5, 7, 51, 54, 56, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 106, 107, 123, 127, 145, 146, 152, 153, 212, 222, 228, 253, 310, 312, 325, 327, 330, 332, 334, 350, 400, 405, 406, 409, 410, 416, 417, 421, 423], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 31, 32, 35, 38, 39, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 102, 107, 108, 113, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 159, 162, 163, 166, 167, 170, 171, 176, 177, 178, 179, 186, 189, 195, 196, 198, 201, 205, 207, 208, 209, 218, 220, 225, 227, 228, 234, 235, 237, 238, 239, 240, 241, 244, 246, 247, 248, 251, 255, 256, 259, 260, 261, 262, 266, 269, 272, 273, 274, 276, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 302, 304, 307, 328, 362, 391, 399, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 171], "larger": [2, 4, 64, 251, 255, 318, 326, 423], "volum": 2, "due": [2, 3, 5, 23, 411, 420, 421, 424], "memorymappedtensor": [2, 35, 50, 52, 62, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 366, 412, 420], "well": [2, 3, 8, 12, 21, 23, 27, 38, 45, 51, 53, 54, 55, 56, 59, 64, 65, 66, 69, 100, 105, 109, 116, 123, 127, 145, 146, 152, 153, 212, 220, 237, 253, 277, 278, 328, 335, 348, 399, 404, 405, 407, 408, 409, 410, 411, 413, 420, 421, 423, 424], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 137, 138, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 175, 176, 177, 179, 201, 204, 206, 213, 220, 232, 253, 299, 300, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 371, 399, 404, 406, 407, 408, 412, 417], "file": [2, 6, 7, 8, 50, 52, 57, 71, 81, 83, 84, 85, 87, 88, 89, 92, 156, 363, 364, 366, 381, 401, 403, 405, 408, 417, 421, 422, 424], "locat": [2, 7, 50, 52, 57, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 123, 127, 145, 146, 152, 153, 175, 180, 189, 200, 252, 266, 282, 283, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 404, 405, 406, 413, 417, 418, 421], "improv": [2, 4, 11, 184, 310, 400, 408, 417, 418, 421], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 145, 152, 406, 417, 421], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 71, 81, 83, 84, 85, 87, 88, 89, 107, 108, 121, 122, 123, 126, 127, 128, 131, 145, 146, 152, 153, 164, 170, 198, 201, 208, 218, 220, 228, 247, 248, 261, 262, 296, 300, 327, 328, 330, 404, 405, 407, 408, 409, 411, 413, 419, 421, 423], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 53, 60, 61, 69, 72, 73, 74, 75, 76, 94, 100, 143, 144, 178, 210, 231, 253, 254, 318, 407, 408, 412, 421], "sharabl": [2, 145, 152], "collabor": [2, 87], "rather": [2, 4, 111, 143, 144, 196, 399, 404, 405, 406, 409, 411, 417, 418, 421], "incur": [2, 119, 120, 132, 133], "transmiss": 2, "overhead": [2, 119, 120, 132, 133, 145, 152], "content": [2, 8, 16, 31, 32, 39, 50, 51, 52, 56, 57, 61, 65, 66, 71, 106, 123, 126, 127, 128, 140, 145, 146, 152, 153, 195, 234, 235, 256, 261, 262, 296, 328, 406, 419, 423], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 98, 99, 100, 123, 127, 136, 137, 138, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 163, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 189, 191, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 220, 225, 244, 266, 287, 288, 289, 290, 292, 296, 297, 299, 300, 302, 303, 304, 305, 313, 333, 342, 377, 397, 399, 400, 404, 405, 406, 407, 410, 411, 420], "writer": [2, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 100, 102, 103, 107, 113, 114, 115, 118, 406, 421], "tensordictroundrobinwrit": [2, 102], "goe": [2, 4, 71, 147, 148, 404, 406, 417, 418, 424], "prioritizedsampl": [2, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 102, 315, 320, 342, 404, 421], "access": [2, 3, 7, 8, 11, 27, 38, 45, 51, 54, 55, 59, 64, 84, 86, 123, 127, 145, 146, 152, 153, 193, 214, 220, 395, 398, 404, 409, 417, 418, 419, 421, 423], "tensordictreplaybuff": [2, 51, 56, 65, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 102, 107, 108, 113, 169, 170, 378, 391, 397, 404, 405, 407, 421], "mp": [2, 18, 19, 20, 81, 82, 83, 84, 85, 86, 87, 88, 89, 124, 218], "def": [2, 3, 12, 22, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 124, 127, 139, 145, 146, 152, 153, 162, 164, 166, 167, 176, 179, 195, 210, 212, 220, 232, 244, 249, 250, 253, 254, 258, 263, 295, 296, 304, 311, 313, 314, 319, 326, 328, 331, 333, 335, 336, 362, 401, 404, 405, 408, 416, 417, 418, 419, 421, 423, 424], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 50, 51, 52, 54, 56, 57, 62, 64, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 102, 113, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 134, 135, 143, 144, 145, 146, 152, 153, 154, 155, 164, 167, 169, 171, 176, 177, 178, 179, 186, 187, 189, 198, 201, 207, 209, 212, 218, 221, 227, 232, 233, 243, 244, 247, 248, 251, 255, 257, 258, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 296, 297, 299, 302, 304, 342, 345, 346, 347, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 372, 380, 399, 400, 404, 407, 418, 419, 423, 424], "__name__": [2, 3, 14, 15, 22, 124, 362, 405, 423], "__main__": [2, 3, 14, 15, 22, 124, 362, 423], "21": [2, 87, 88, 108, 145, 147, 148, 152, 403, 404, 405, 406, 412, 416, 417, 418, 419, 420, 422], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 45, 54, 55, 59, 64, 123, 124, 127, 145, 146, 152, 153, 206, 211, 220, 272, 299, 300, 310, 311, 312, 313, 314, 315, 317, 319, 320, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 342, 343, 344, 345, 346, 347, 348, 384, 390, 391, 400, 401, 407, 408, 414, 417, 419], "arg": [2, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 100, 102, 107, 108, 109, 111, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 164, 165, 174, 193, 195, 204, 207, 210, 211, 212, 213, 215, 216, 220, 229, 230, 232, 233, 234, 235, 243, 247, 248, 251, 255, 256, 257, 258, 273, 274, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 371, 374, 378, 381, 395, 405, 408], "join": [2, 124, 397, 405, 406, 408, 417], "now": [2, 3, 7, 51, 56, 65, 66, 102, 143, 144, 145, 170, 262, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 420, 421, 424], "20": [2, 64, 70, 88, 107, 108, 113, 123, 127, 131, 143, 144, 145, 146, 152, 153, 206, 220, 246, 249, 250, 253, 254, 272, 291, 372, 404, 405, 406, 407, 408, 417, 418, 419, 421, 423, 424], "_data": [2, 419], "It": [2, 3, 4, 7, 23, 27, 38, 45, 53, 54, 55, 58, 59, 64, 65, 67, 70, 83, 89, 102, 105, 113, 118, 123, 127, 129, 139, 140, 145, 146, 147, 148, 152, 153, 156, 157, 167, 169, 180, 187, 189, 194, 206, 210, 212, 217, 220, 222, 229, 237, 239, 245, 247, 261, 262, 272, 273, 274, 275, 277, 278, 284, 285, 293, 295, 298, 300, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 334, 336, 342, 343, 344, 362, 371, 377, 398, 399, 400, 404, 405, 407, 408, 409, 417, 418, 419, 420, 421, 423, 424], "difficult": [2, 4, 145, 413], "pai": [2, 8, 404, 407], "word": [2, 3, 11, 58, 81, 83, 85, 87, 88, 89, 328, 404, 412, 419, 424], "1m": [2, 81, 87, 384, 404, 406, 407, 420], "doe": [2, 3, 18, 50, 51, 52, 57, 65, 70, 71, 81, 83, 87, 91, 92, 98, 99, 100, 107, 109, 111, 118, 123, 127, 137, 138, 145, 146, 152, 153, 156, 157, 218, 241, 249, 250, 251, 253, 254, 255, 264, 272, 285, 291, 301, 302, 310, 312, 320, 327, 328, 330, 343, 381, 401, 404, 405, 406, 407, 409, 412, 417, 419, 421, 424], "howev": [2, 3, 5, 7, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 170, 201, 206, 210, 212, 220, 310, 312, 313, 327, 330, 332, 333, 399, 404, 405, 407, 408, 411, 419, 421, 424], "capac": [2, 51, 56, 65, 66, 94, 95, 99, 107, 115, 406, 408, 412], "There": [2, 10, 102, 251, 255, 310, 330, 399, 401, 406, 407, 408, 410, 412, 417, 418, 419, 421, 423, 424], "circumv": 2, "account": [2, 94, 95, 115, 126, 128, 153, 166, 170, 259, 260, 399, 405, 407, 421, 424], "save": [2, 3, 8, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 102, 109, 110, 111, 115, 116, 123, 127, 145, 146, 152, 153, 217, 220, 363, 364, 366, 371, 381, 401, 408, 412, 413, 414, 417, 418], "convent": [2, 3, 81, 83, 84, 85, 86, 87, 88, 89, 123, 127, 145, 146, 152, 153, 156, 157, 400, 404, 407, 417, 418, 419], "overridden": [2, 3, 27, 38, 54, 55, 59, 64, 81, 84, 85, 87, 88, 89, 123, 127, 145, 146, 152, 153, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 344, 346, 347, 407, 417], "dim_extend": [2, 51, 56, 65, 66], "obtain": [2, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 58, 60, 61, 69, 72, 73, 74, 75, 76, 81, 123, 127, 145, 146, 152, 153, 169, 193, 206, 216, 232, 233, 272, 275, 378, 404, 406, 409, 410, 411, 417, 418], "counterpart": 2, "desir": [2, 3, 11, 27, 30, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 165, 167, 174, 189, 191, 193, 194, 207, 211, 212, 214, 216, 220, 226, 234, 235, 256, 262, 287, 292, 293, 296, 297, 298, 299, 300, 399, 404, 408, 417, 418, 419, 421], "diversifi": 2, "offer": [2, 3, 7, 119, 120, 123, 127, 132, 133, 137, 138, 145, 146, 152, 153, 210, 362, 399, 404, 405, 408, 409, 411, 412, 417, 419, 421, 424], "accomplish": [2, 222, 409], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 81, 82, 84, 170, 222, 311, 317, 318, 326, 335, 371, 401, 409, 420, 421], "docstr": [2, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 409, 410], "extens": [2, 51, 56, 65, 66, 108, 401, 421], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 147, 148, 152, 153, 209, 212, 220, 244, 249, 253, 263, 272, 293, 310, 320, 328, 330, 398, 401, 405, 408, 412, 416, 421], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 123, 127, 145, 146, 152, 153, 176, 179, 210, 218, 220, 228, 249, 251, 253, 255, 273, 274, 296, 300, 320, 405, 408, 410, 416, 417, 418, 424], "happi": [2, 408], "concaten": [2, 8, 14, 15, 21, 41, 43, 87, 170, 171, 189, 211, 253, 256, 302, 404, 405, 410, 417, 418, 419, 421, 424], "schedul": [2, 4, 7, 58, 377, 406, 419], "transformedenv": [2, 3, 11, 45, 123, 124, 127, 145, 146, 152, 153, 163, 164, 167, 170, 173, 174, 176, 179, 180, 181, 183, 186, 187, 188, 189, 191, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 210, 211, 218, 220, 251, 255, 295, 364, 404, 405, 406, 407, 408, 409, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "stepcount": [2, 45, 123, 127, 137, 138, 145, 146, 152, 153, 156, 157, 210, 211, 220, 233, 404, 405, 406, 407, 408, 409, 414, 417, 418, 423], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 45, 62, 64, 113, 123, 124, 127, 129, 145, 146, 152, 153, 163, 166, 167, 170, 173, 174, 180, 186, 187, 189, 191, 196, 197, 198, 201, 203, 206, 207, 208, 210, 211, 212, 218, 220, 233, 251, 255, 295, 362, 364, 391, 397, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 420, 421, 423, 424], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 170, 198, 397, 412, 421], "cartpol": [2, 3, 11, 35, 45, 62, 64, 121, 122, 123, 124, 127, 145, 146, 152, 153, 166, 167, 170, 201, 206, 218, 220, 295, 362, 405, 407, 410, 412, 413, 414, 421, 424], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 45, 62, 64, 83, 85, 113, 123, 124, 126, 127, 128, 132, 133, 140, 145, 146, 152, 153, 166, 167, 170, 173, 181, 186, 187, 189, 196, 198, 201, 203, 205, 206, 207, 208, 210, 211, 218, 220, 233, 251, 255, 295, 339, 353, 354, 355, 356, 358, 359, 360, 361, 362, 399, 405, 407, 409, 410, 411, 412, 413, 414, 419, 421, 423, 424], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 45, 119, 120, 123, 127, 132, 133, 139, 145, 146, 147, 148, 152, 153, 163, 164, 167, 170, 176, 179, 187, 195, 198, 221, 232, 244, 258, 276, 278, 287, 292, 296, 297, 311, 313, 315, 317, 331, 333, 335, 336, 391, 399, 404, 405, 406, 407, 408, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 423, 424], "8": [2, 3, 6, 7, 45, 50, 52, 56, 57, 64, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 107, 108, 119, 120, 121, 122, 123, 127, 143, 144, 145, 146, 152, 153, 154, 163, 166, 206, 234, 235, 237, 238, 246, 256, 288, 289, 290, 296, 299, 302, 326, 404, 405, 408, 412, 417, 418, 419, 420, 421, 423], "traj_kei": [2, 100, 107, 108, 421], "truncated_kei": [2, 100, 107, 108, 198, 205], "strict_length": [2, 81, 87, 100, 107, 108, 364], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 45, 51, 54, 55, 56, 59, 61, 62, 64, 66, 67, 94, 95, 99, 100, 107, 108, 115, 123, 127, 145, 146, 152, 153, 175, 193, 198, 201, 210, 212, 216, 220, 250, 254, 266, 276, 293, 295, 296, 298, 299, 300, 310, 312, 313, 314, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347, 372, 384, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 417, 418, 419, 421, 423, 424], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 59, 60, 61, 62, 64, 66, 69, 72, 73, 74, 75, 76, 108, 123, 127, 145, 146, 152, 153, 220, 337, 400, 404, 405, 406, 407, 414, 417, 421, 423], "break": [2, 5, 14, 15, 16, 21, 27, 38, 45, 54, 55, 56, 59, 64, 66, 81, 84, 85, 87, 88, 89, 90, 100, 107, 108, 113, 123, 127, 145, 146, 152, 153, 167, 170, 198, 218, 220, 251, 255, 282, 364, 405, 408, 412, 414, 421, 423], "step_count": [2, 14, 15, 16, 45, 123, 127, 132, 133, 145, 146, 152, 153, 205, 220, 406, 407, 408, 409, 414], "32": [2, 22, 31, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 108, 133, 150, 151, 156, 157, 234, 235, 236, 237, 238, 240, 241, 246, 256, 261, 262, 267, 268, 271, 275, 284, 342, 362, 403, 404, 405, 407, 408, 410, 411, 418, 419, 420, 421, 422, 423, 424], "33": [2, 27, 31, 38, 45, 54, 55, 59, 64, 102, 123, 127, 145, 146, 152, 153, 220, 234, 235, 256, 404, 405, 407, 419], "34": [2, 234, 235, 256, 404, 405, 407, 419, 420], "35": [2, 234, 235, 256, 405, 406, 419, 420, 421], "36": [2, 404, 405, 406, 419], "37": [2, 169, 405, 407, 418, 419, 420, 421], "38": [2, 7, 405, 407, 417, 419, 420], "39": [2, 85, 132, 133, 403, 404, 405, 419, 420, 422], "40": [2, 64, 132, 133, 404, 405, 406, 417, 418, 419], "41": [2, 405, 418, 419], "11": [2, 10, 23, 64, 70, 94, 95, 99, 108, 115, 124, 163, 209, 220, 232, 258, 404, 405, 406, 419, 420, 421], "12": [2, 10, 64, 88, 94, 95, 108, 115, 132, 133, 145, 150, 151, 152, 220, 404, 405, 406, 407, 417, 419, 421], "13": [2, 5, 12, 64, 107, 108, 149, 217, 220, 404, 405, 406, 407, 419, 421], "14": [2, 6, 12, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 107, 108, 123, 127, 145, 146, 152, 153, 189, 220, 403, 404, 405, 406, 413, 417, 419, 420, 421, 422], "15": [2, 23, 81, 82, 83, 84, 85, 86, 87, 88, 89, 108, 123, 127, 145, 146, 152, 153, 220, 273, 274, 291, 321, 405, 417, 419, 421], "16": [2, 3, 27, 38, 45, 54, 55, 59, 64, 88, 100, 108, 119, 120, 123, 127, 132, 133, 145, 146, 152, 153, 170, 220, 404, 405, 406, 407, 417, 418, 419, 420, 421], "17": [2, 11, 88, 108, 127, 145, 163, 220, 404, 405, 406, 419, 420], "could": [2, 3, 4, 6, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 405, 406, 413, 417, 418, 420, 424], "sai": [2, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 261, 417, 420, 424], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 32, 39, 43, 56, 61, 95, 96, 100, 103, 107, 108, 115, 123, 126, 127, 128, 131, 145, 146, 152, 153, 176, 179, 194, 201, 210, 261, 262, 297, 310, 330, 405, 406, 407, 408, 417, 418, 419], "handl": [2, 3, 21, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 217, 218, 220, 255, 256, 310, 328, 330, 381, 393, 394, 404, 405, 406, 409, 411, 418, 421], "suggest": [2, 342, 404, 418], "serialenv": [2, 3, 123, 127, 145, 146, 153, 207, 220, 233, 295, 397, 423, 424], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 166, 167, 170, 204, 206, 234, 235, 279, 280, 404, 408, 419, 421], "6": [2, 3, 7, 14, 15, 16, 17, 23, 45, 56, 59, 64, 81, 88, 89, 100, 108, 121, 122, 127, 145, 150, 151, 163, 166, 189, 191, 206, 210, 233, 234, 235, 237, 238, 239, 242, 246, 250, 256, 261, 262, 263, 267, 281, 295, 296, 304, 403, 404, 405, 407, 408, 412, 417, 418, 419, 421, 422, 423, 424], "5": [2, 3, 14, 15, 23, 31, 32, 39, 41, 42, 43, 44, 45, 51, 56, 59, 61, 64, 65, 66, 81, 102, 107, 108, 113, 123, 124, 127, 132, 133, 137, 138, 140, 145, 146, 150, 151, 152, 153, 156, 157, 163, 166, 167, 169, 198, 205, 206, 210, 220, 231, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 249, 252, 253, 256, 258, 261, 262, 267, 272, 276, 282, 283, 291, 292, 295, 297, 303, 327, 330, 332, 335, 336, 362, 399, 403, 404, 405, 408, 410, 412, 414, 417, 418, 419, 421, 422, 423, 424], "7": [2, 3, 6, 10, 45, 51, 56, 64, 65, 100, 108, 123, 127, 137, 138, 145, 146, 152, 153, 163, 166, 206, 232, 233, 234, 235, 238, 256, 258, 261, 350, 403, 404, 405, 407, 408, 412, 417, 418, 419, 421, 422, 423], "9": [2, 3, 7, 23, 27, 45, 51, 56, 64, 65, 88, 89, 100, 108, 113, 121, 122, 136, 147, 148, 153, 163, 166, 206, 218, 220, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 337, 342, 400, 403, 404, 405, 406, 408, 412, 417, 418, 419, 421, 422], "18": [2, 88, 108, 150, 151, 156, 157, 210, 220, 262, 404, 405, 406, 407, 417, 418, 419], "19": [2, 88, 107, 108, 113, 220, 403, 404, 405, 406, 419, 420, 422], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 84, 145, 152, 211, 213, 262, 310, 330, 400, 401, 404, 405, 418, 421, 423], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 71, 81, 84, 86, 89, 90, 119, 121, 123, 127, 132, 136, 137, 138, 140, 143, 145, 146, 147, 148, 149, 152, 153, 156, 157, 158, 177, 178, 181, 196, 201, 202, 205, 210, 212, 214, 217, 220, 228, 251, 255, 292, 297, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 344, 346, 347, 348, 362, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 401, 404, 405, 406, 407, 408, 411, 413, 417, 418, 419, 424], "randomcroptensordict": [2, 404], "unlik": [2, 25, 106, 127, 137, 138, 156, 157, 231, 295, 320, 330, 364, 399, 405, 408, 410, 412, 423], "stop": [2, 3, 16, 21, 58, 89, 100, 107, 108, 123, 127, 145, 146, 152, 153, 406, 412, 417, 418, 423, 424], "signal": [2, 3, 14, 15, 16, 17, 23, 81, 83, 85, 87, 88, 89, 100, 107, 108, 113, 127, 137, 138, 156, 157, 170, 180, 205, 208, 228, 400, 404, 406, 417, 418, 421, 424], "disk": [2, 3, 50, 51, 52, 56, 57, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 102, 381, 401, 404, 405, 407, 408, 412, 413, 417, 421], "dump": [2, 3, 11, 35, 51, 56, 62, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 102, 109, 111, 115, 362, 363, 364, 413, 414, 417], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 102, 109, 110, 111, 115, 116, 122, 123, 127, 145, 146, 152, 153, 154, 162, 218, 220, 381, 395, 401, 404, 406, 408, 421], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 81, 83, 123, 124, 127, 145, 146, 152, 153, 313, 335, 406, 409, 411, 412, 417, 418, 424], "anticip": [2, 176, 179], "compli": [2, 87, 399], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 60, 61, 69, 72, 73, 74, 75, 76, 83, 217, 222, 263, 287, 292, 293, 296, 297, 298, 299, 300, 406, 408, 417, 418, 419, 421], "exact": [2, 3, 23, 145, 253], "statu": [2, 3, 123], "prioriti": [2, 4, 51, 65, 66, 94, 95, 96, 99, 100, 109, 111, 115, 313, 314, 315, 317, 318, 319, 320, 326, 331, 333, 335, 336, 342, 401, 404, 405, 421], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 45, 54, 55, 58, 59, 64, 81, 83, 84, 85, 87, 88, 89, 121, 122, 123, 126, 127, 128, 129, 145, 146, 149, 152, 153, 220, 287, 292, 293, 296, 297, 298, 299, 300, 328, 344, 345, 346, 347, 348, 364, 400, 404, 405, 410, 417, 419, 424], "hood": [2, 21, 81, 123, 127, 145, 146, 152, 153, 419], "naiv": [2, 214, 409], "just": [2, 3, 4, 12, 111, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 166, 173, 228, 262, 372, 401, 404, 405, 406, 407, 408, 409, 410, 412, 417, 418, 419, 421, 423, 424], "public": [2, 86, 110, 193, 216], "serializ": 2, "consum": [2, 106, 108, 295, 405, 406, 412, 418, 421], "much": [2, 8, 14, 15, 17, 51, 65, 87, 99, 100, 145, 152, 327, 330, 406, 408, 409, 413, 417, 418, 419, 421, 424], "duplic": [2, 27, 38, 45, 54, 55, 59, 64, 106, 123, 127, 145, 146, 152, 153, 220, 311, 313, 315, 320, 326, 328, 331, 333, 335, 336, 342], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 45, 62, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 100, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 160, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 183, 185, 186, 187, 189, 190, 191, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 227, 233, 236, 237, 238, 239, 240, 241, 244, 247, 248, 251, 255, 261, 267, 268, 271, 272, 273, 274, 276, 277, 287, 288, 289, 290, 291, 292, 295, 296, 297, 304, 305, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 326, 327, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 362, 364, 391, 399, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 423, 424], "plu": [2, 14, 15, 17, 58, 145, 152, 419], "enabl": [2, 7, 8, 83, 94, 95, 106, 115, 167, 251, 255, 273, 274, 295, 362, 364, 377, 406, 409, 417, 418, 419, 421], "three": [2, 25, 26, 30, 34, 41, 42, 43, 44, 49, 54, 90, 313, 399, 401, 406, 408, 409, 410, 417, 418, 419, 421, 424], "flatstoragecheckpoint": 2, "discard": [2, 3, 70, 83, 85, 127, 214, 227, 363, 421, 424], "compress": 2, "At": [2, 247, 257, 405, 406, 407, 412, 416, 419, 420], "correct": [2, 4, 50, 52, 57, 71, 123, 127, 145, 146, 152, 153, 187, 384, 406, 407], "addit": [2, 3, 4, 27, 38, 45, 54, 55, 59, 64, 83, 123, 124, 127, 145, 146, 152, 153, 156, 174, 193, 207, 211, 212, 214, 216, 220, 229, 230, 249, 291, 295, 299, 309, 328, 344, 362, 400, 404, 405, 408, 409, 417, 418, 421], "nestedstoragecheckpoint": 2, "represent": [2, 27, 38, 45, 54, 55, 59, 60, 61, 64, 123, 127, 145, 146, 152, 153, 193, 214, 216, 220, 310, 330, 404, 419, 420, 424], "appar": [2, 3, 374], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 91, 92, 98, 123, 126, 127, 128, 145, 146, 152, 153, 163, 173, 178, 225, 229, 230, 235, 241, 244, 248, 261, 268, 273, 274, 276, 287, 292, 293, 296, 297, 298, 299, 300, 302, 303, 304, 307, 310, 315, 317, 318, 319, 330, 335, 336, 342, 399, 405, 406, 407, 408, 409, 410, 411, 417, 418, 419, 423, 424], "assumpt": [2, 3, 69, 419, 421], "accur": [2, 7, 83, 89, 405, 419, 421], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 45, 46, 53, 62, 64, 67, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 100, 107, 108, 121, 122, 123, 126, 127, 128, 137, 138, 145, 146, 147, 148, 152, 153, 154, 156, 157, 163, 180, 181, 188, 195, 198, 205, 212, 220, 228, 251, 255, 283, 295, 350, 404, 406, 407, 409, 410, 412, 413, 416, 417, 420, 421, 423, 424], "marl": [2, 136, 158, 170, 208, 261, 262, 263, 409, 417, 418], "extra": [2, 10, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 170, 218, 220, 227, 371, 399, 406, 407, 408, 421], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 145, 164, 222], "concret": [2, 404, 406], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 45, 62, 64, 119, 120, 123, 127, 132, 133, 139, 145, 146, 152, 153, 166, 189, 196, 201, 206, 208, 212, 220, 408, 412, 414, 419, 423, 424], "manual_se": [2, 3, 25, 35, 41, 42, 51, 56, 62, 64, 65, 66, 84, 88, 89, 107, 108, 119, 120, 123, 127, 145, 146, 152, 153, 164, 166, 178, 189, 198, 201, 206, 208, 220, 247, 248, 259, 260, 269, 272, 273, 274, 287, 293, 303, 310, 311, 313, 314, 318, 326, 333, 408, 412, 414, 417, 418, 419, 423, 424], "200": [2, 14, 15, 16, 21, 27, 35, 38, 45, 54, 55, 59, 62, 64, 81, 123, 126, 127, 128, 145, 146, 152, 153, 156, 157, 198, 220, 237, 238, 245, 277, 278, 362, 364, 404, 407, 408, 412, 414, 419, 421], "22": [2, 87, 107, 108, 217, 403, 404, 405, 414, 417, 419, 422], "rb_test": 2, "_storag": [2, 420, 421], "max_siz": [2, 51, 56, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 109, 113, 115, 406, 412], "102": [2, 419], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 50, 52, 57, 71, 140, 210, 241, 259, 260, 261, 309, 313, 362, 404, 406, 408, 417, 418], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 210, 212, 218, 220, 261, 262, 313, 333, 395, 401, 404, 405, 424], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 210, 212, 218, 220, 313, 333, 401, 404], "drawback": 2, "struggl": 2, "big": [2, 406, 412, 421, 424], "sequenti": [2, 9, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 169, 187, 220, 288, 289, 290, 296, 301, 302, 307, 310, 311, 313, 319, 326, 330, 331, 332, 333, 335, 399, 406, 407, 410, 418, 419, 420, 423, 424], "known": [2, 3, 5, 7, 8, 64, 127, 351, 352, 404, 405, 409], "seamless": [2, 256], "integr": [2, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 240, 251, 255, 258, 299, 399, 409, 410, 412, 417, 418, 419, 420], "indiffer": 2, "particularli": [2, 408, 423], "heavili": [2, 11], "smooth": [2, 231, 404, 405, 411], "essenti": [2, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 405, 409, 417, 419, 421], "understand": [2, 3, 8, 404, 405, 408, 409, 410, 417, 418], "purpos": [2, 3, 7, 11, 123, 127, 145, 146, 152, 153, 170, 249, 310, 312, 324, 327, 330, 332, 391, 404, 406, 407, 408, 411, 413, 417, 418, 420, 424], "guid": [2, 11, 147, 148, 150, 151, 206, 398, 404, 418, 423], "explan": [2, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "effect": [2, 3, 27, 31, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 87, 100, 102, 105, 107, 108, 123, 127, 145, 146, 152, 153, 166, 170, 212, 220, 381, 399, 404, 410, 417, 421, 424], "realm": [2, 410], "As": [2, 3, 4, 45, 56, 65, 66, 69, 81, 102, 123, 127, 136, 145, 146, 147, 148, 152, 153, 198, 300, 344, 399, 404, 405, 406, 407, 408, 409, 411, 412, 417, 418, 419, 420, 421, 423, 424], "practition": 2, "often": [2, 3, 8, 263, 325, 328, 381, 404, 405, 409, 411, 419, 421, 424], "encount": [2, 4, 87, 295, 398, 405, 410, 419], "situat": [2, 137, 138], "sometim": [2, 3, 69, 407, 424], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 59, 60, 61, 69, 72, 73, 74, 75, 76, 81, 84, 85, 88, 89, 119, 120, 121, 122, 123, 126, 128, 129, 132, 133, 137, 138, 141, 142, 143, 144, 149, 154, 155, 156, 157, 249, 250, 251, 253, 254, 255, 258, 288, 289, 290, 328, 331, 401, 405], "immedi": [2, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 123, 127, 145, 146, 152, 153, 220, 343, 417, 418], "199": [2, 419], "info": [2, 3, 14, 15, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 102, 105, 107, 108, 121, 122, 123, 126, 127, 128, 129, 137, 138, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 214, 217, 219, 371, 409, 414, 417, 418, 421, 423], "glanc": [2, 409], "seem": [2, 404, 407, 409], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 54, 58, 60, 61, 123, 127, 136, 145, 146, 147, 148, 152, 153, 170, 194, 249, 251, 253, 255, 284, 288, 289, 290, 305, 399, 405, 407, 409, 417], "less": [2, 140, 285, 393, 394, 400, 406, 407, 421, 423], "omit": [2, 376, 406, 411, 419, 421], "proper": [2, 3, 4, 6, 7, 344, 345, 346, 347, 405, 406, 417, 418, 421], "imposs": [2, 3, 113, 222, 310, 312, 327, 330, 332], "determin": [2, 51, 65, 71, 83, 99, 100, 123, 127, 145, 146, 152, 153, 156, 157, 193, 216, 261, 273, 274, 405, 410, 417, 418], "complic": [2, 54, 64, 419, 421, 424], "matter": [2, 33, 412], "inconsist": [2, 424], "miss": [2, 3, 4, 6, 7, 12, 27, 31, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 227, 301, 302, 310, 313, 333, 398, 404, 407], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 412], "elimin": [2, 3, 409], "upon": [2, 3, 8, 417, 419], "canon": 2, "definit": [2, 109, 261], "markov": [2, 3, 409, 424], "mdp": [2, 409, 419], "context": [2, 3, 5, 8, 27, 38, 45, 54, 55, 59, 64, 123, 124, 127, 142, 145, 146, 152, 153, 207, 213, 220, 262, 264, 291, 340, 341, 344, 345, 346, 347, 349, 357, 364, 377, 399, 400, 404, 405, 406, 408, 417, 418, 419, 420, 421, 423], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 70, 72, 73, 74, 75, 76, 206, 218, 292, 293, 295, 297, 298, 309, 404, 417, 419, 421], "complet": [2, 7, 9, 106, 123, 126, 127, 128, 145, 146, 152, 153, 170, 205, 398, 400, 404, 406, 409, 416], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 45, 46, 58, 62, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 121, 122, 123, 126, 127, 128, 132, 133, 137, 138, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 163, 166, 167, 180, 195, 220, 228, 232, 251, 255, 258, 295, 301, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 404, 405, 406, 407, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 45, 46, 50, 57, 58, 62, 64, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 113, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 163, 164, 167, 168, 173, 174, 176, 177, 179, 180, 181, 187, 191, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 211, 212, 213, 215, 216, 218, 220, 225, 227, 232, 251, 258, 291, 295, 305, 310, 311, 313, 314, 315, 317, 318, 319, 322, 326, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 374, 375, 377, 379, 395, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "imit": [2, 3, 324], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 76, 87, 123, 124, 127, 130, 133, 145, 146, 152, 153, 220, 233, 234, 235, 256, 262, 399, 400, 401, 404, 405, 406, 407, 408, 409, 417, 418, 419, 421, 423], "stateless": [2, 3, 123, 127, 145, 146, 152, 153, 167, 211, 328, 362, 404, 409, 419, 424], "simul": [2, 3, 5, 7, 8, 69, 119, 120, 129, 132, 133, 149, 156, 157, 161, 232, 258, 399, 404, 406, 408, 409, 413, 417, 418], "furthermor": [2, 417, 418], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 123, 127, 145, 146, 152, 153, 162, 184, 205, 212, 220, 247, 250, 254, 327, 404, 405, 406, 408, 414, 417, 418, 424], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 78, 105, 111, 118, 123, 125, 127, 139, 145, 146, 152, 153, 164, 167, 176, 177, 178, 179, 181, 187, 195, 196, 202, 205, 207, 210, 211, 220, 225, 228, 229, 230, 232, 258, 287, 296, 302, 303, 307, 310, 330, 397, 404, 406, 407, 410, 417, 418, 419, 424], "accommod": [2, 3, 409, 410], "uniform": [2, 51, 65, 99, 100, 417], "unambigu": 2, "distinguish": [2, 137, 138, 156, 157], "happen": [2, 3, 12, 123, 127, 145, 146, 152, 153, 230, 405, 408, 411, 412, 413, 420, 424], "everyth": [2, 405, 406, 407, 413, 414], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 81, 87, 217, 218, 404, 412, 418], "rule": [2, 64, 145, 176, 179, 300, 399, 406], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 45, 50, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 99, 115, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 163, 167, 176, 179, 180, 181, 191, 195, 196, 198, 202, 205, 207, 210, 212, 220, 227, 232, 233, 243, 244, 251, 255, 258, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 304, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 385, 398, 399, 405, 406, 407, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "taken": [2, 3, 25, 26, 30, 34, 41, 42, 43, 44, 49, 123, 127, 145, 146, 152, 153, 163, 197, 248, 259, 260, 400, 404, 406, 407, 410, 417, 418, 419], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 50, 52, 53, 54, 57, 58, 62, 64, 65, 66, 67, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 99, 115, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 163, 167, 176, 179, 180, 181, 191, 195, 196, 198, 202, 205, 207, 218, 227, 232, 233, 243, 244, 251, 255, 258, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 304, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 399, 406, 407, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "brought": [2, 406, 407, 410], "step_mdp": [2, 3, 123, 127, 145, 146, 152, 153, 251, 255, 397, 407, 409, 419, 423, 424], "count": [2, 3, 45, 71, 123, 124, 205, 210, 273, 274, 377, 381, 384, 404, 405, 406, 407, 421, 424], "trigger": [2, 7, 54, 64], "partial": [2, 3, 123, 127, 145, 146, 152, 153, 169, 170, 206, 207, 208, 296, 381, 407], "turn": [2, 18, 19, 20, 21, 50, 52, 55, 57, 59, 71, 133, 153, 185, 213, 217, 292, 362, 377, 400, 404, 405, 407, 410, 419, 420], "retain": 2, "regard": [2, 83, 89, 244, 293, 310, 320, 330, 404, 406, 419], "twice": [2, 8], "feasibl": 2, "mostli": [2, 3, 17, 272, 364, 400, 413, 421, 424], "eas": [2, 3, 417, 418], "flat": [2, 113], "manner": [2, 127, 193, 214, 399, 404, 405, 406, 412, 416, 419, 421], "ted2flat": [2, 35, 397], "flat2t": [2, 397], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 167, 295], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 121, 122, 123, 127, 145, 146, 152, 153, 183, 184, 204, 205, 208, 210, 212, 213, 220, 266, 313, 333, 400, 406, 417, 418, 419, 421], "both": [2, 3, 7, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 87, 123, 124, 126, 127, 137, 138, 145, 146, 147, 148, 152, 153, 154, 163, 170, 196, 210, 212, 220, 228, 234, 235, 251, 254, 255, 256, 261, 262, 288, 289, 290, 293, 298, 310, 312, 313, 314, 318, 319, 326, 327, 328, 330, 331, 332, 333, 335, 336, 377, 399, 404, 406, 408, 409, 411, 417, 418, 419, 420, 421, 424], "mark": [2, 3, 16, 89, 123, 127, 145, 146, 152, 153, 251, 255, 344, 346, 347, 408, 412, 421], "identifi": [2, 53], "abov": [2, 3, 7, 27, 38, 45, 54, 55, 59, 64, 72, 123, 127, 145, 146, 152, 153, 220, 252, 282, 283, 309, 400, 401, 404, 406, 408, 409, 410, 417, 418, 419, 424], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 69, 81, 83, 84, 85, 86, 87, 88, 89, 100, 107, 108, 121, 122, 123, 126, 127, 128, 129, 133, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 167, 168, 170, 173, 174, 175, 176, 177, 179, 181, 187, 189, 193, 195, 196, 201, 202, 205, 208, 211, 212, 214, 216, 217, 220, 222, 228, 229, 230, 234, 235, 236, 237, 238, 241, 243, 244, 245, 249, 250, 251, 253, 254, 255, 256, 261, 262, 266, 270, 272, 273, 274, 276, 285, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 362, 364, 372, 399, 400, 404, 405, 406, 407, 408, 409, 410, 413, 416, 417, 418, 419, 420, 423, 424], "typic": [2, 3, 4, 8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 180, 206, 220, 270, 272, 296, 311, 313, 328, 330, 333, 399, 400, 401, 406, 408, 409, 411, 412, 417, 418, 419], "adjust": [2, 11, 404, 417, 418, 419], "grumodul": [2, 169, 307], "lstmmodul": [2, 251, 407, 408], "skip": [2, 3, 27, 38, 45, 54, 55, 59, 64, 81, 123, 127, 145, 146, 152, 153, 184, 210, 212, 220, 222, 296, 300, 313, 328, 333, 344, 345, 346, 347, 363, 364, 374, 377, 404, 405, 419], "accumul": [2, 8, 220], "upcom": [2, 328, 353, 354, 355, 356, 358, 359, 360, 361, 404], "popular": [2, 3, 399, 407, 411, 418], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 220, 397, 405], "shift": [2, 35, 37, 45, 46, 62, 91, 92, 98, 306, 344, 345, 346, 347, 406], "approxim": [2, 418, 424], "would": [2, 3, 27, 38, 45, 54, 55, 58, 59, 64, 123, 127, 145, 146, 152, 153, 220, 249, 251, 253, 255, 256, 261, 401, 405, 406, 407, 409, 411, 412, 419, 421, 423, 424], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 170, 241, 271, 310, 316, 329, 330, 372, 395, 406, 407, 418, 421], "2x": 2, "small": [2, 214, 231, 404, 406, 408, 417, 418, 424], "clearer": [2, 408, 410], "lazi": [2, 60, 61, 78, 79, 123, 127, 145, 146, 152, 153, 156, 157, 193, 214, 234, 261, 264, 301, 302, 404, 405, 410, 412, 416, 421, 424], "certainli": 2, "benefici": 2, "welcom": [2, 409], "wrapper": [2, 3, 12, 17, 50, 52, 57, 58, 65, 66, 71, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 217, 221, 230, 233, 248, 266, 274, 285, 291, 295, 300, 305, 344, 369, 370, 371, 395, 397, 406, 407, 408, 409, 417, 418, 420, 423, 424], "around": [2, 5, 7, 17, 65, 66, 139, 221, 272, 295, 300, 344, 404, 405, 418, 424], "selecttransform": [2, 123, 127, 145, 146, 152, 153], "excludetransform": [2, 88, 202, 421], "promptli": 2, "virtual": [2, 3, 126], "instal": [2, 3, 5, 10, 18, 19, 20, 55, 64, 83, 86, 123, 127, 145, 146, 147, 148, 150, 151, 152, 153, 366, 381, 398, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 424], "respons": [2, 3, 8, 100, 107, 123, 127, 145, 146, 152, 153, 381, 411, 412, 424], "d4rl": [2, 83, 89], "repositori": [2, 7, 84, 85, 86, 89, 157, 417, 418], "wheel": [2, 406], "publish": 2, "openml": [2, 86, 142], "scikit": [2, 86, 142], "panda": [2, 86], "raw": [2, 3, 4, 58, 252, 282, 283, 405, 408, 412, 419], "go": [2, 3, 7, 47, 136, 145, 194, 198, 291, 350, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "natur": [2, 3, 404, 407, 410, 411, 412, 421], "modifi": [2, 3, 7, 8, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 70, 123, 127, 145, 146, 152, 153, 167, 174, 183, 187, 193, 207, 211, 212, 214, 216, 220, 263, 273, 274, 291, 299, 384, 400, 404, 405, 406, 408, 409, 417, 418, 419], "fly": [2, 218, 327, 400, 406, 419, 421, 424], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 72, 73, 74, 75, 76, 100, 107, 123, 127, 145, 146, 152, 153, 173, 413, 424], "pre": [2, 7, 22, 27, 38, 45, 54, 55, 59, 64, 70, 87, 95, 123, 127, 145, 146, 152, 153, 193, 214, 216, 220, 424], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 145, 146, 152, 153, 164, 166, 167, 169, 170, 171, 174, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 192, 194, 195, 196, 198, 201, 202, 205, 206, 207, 208, 210, 211, 212, 214, 215, 217, 218, 220, 249, 253, 263, 282, 292, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 327, 329, 330, 331, 332, 333, 335, 336, 344, 362, 376, 401, 404, 405, 406, 412, 417, 419, 423, 424], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 84, 100, 107, 113, 131, 132, 133, 145, 147, 148, 173, 201, 234, 235, 245, 247, 261, 262, 295, 366, 381, 393, 394, 404, 405, 406, 407, 408, 410, 411, 414, 417, 418, 421, 423], "pipelin": [2, 3, 7, 399, 406], "replac": [2, 3, 6, 7, 31, 32, 39, 45, 61, 81, 87, 100, 107, 108, 166, 178, 180, 186, 227, 247, 399, 417, 421, 423], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 87, 102, 123, 127, 145, 146, 152, 153, 166, 198, 212, 220, 229, 230, 248, 273, 274, 295, 379, 399, 401, 405, 406, 407, 410, 413, 419, 421, 424], "produc": [2, 163, 166, 167, 234, 235, 256, 262, 269, 288, 290, 291, 364, 406, 407, 408, 409, 410, 412, 421, 424], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 87, 91, 106, 123, 127, 145, 146, 147, 148, 152, 153, 210, 212, 220, 310, 311, 313, 326, 328, 330, 331, 332, 333, 335, 336, 406], "download": [2, 7, 10, 81, 83, 84, 85, 87, 88, 89, 131, 193, 216, 364, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 81, 84, 85, 87, 88, 89, 146, 405, 417, 418, 419], "robosetexperiencereplai": [2, 107, 108], "fk1": [2, 88], "v4": [2, 88, 127, 145, 163, 197, 353, 354, 355, 356, 358, 359, 360, 361, 404, 406, 420, 423], "expert": [2, 88], "fk1_microopenrandom_v2d": [2, 88], "func": [2, 81, 82, 83, 84, 85, 86, 87, 88, 89, 219], "obs_norm": 2, "norm": [2, 4, 8, 119, 120, 231, 381, 404, 405, 406, 417, 418, 419], "num_work": [2, 50, 52, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 140, 145, 152, 404, 405], "os": [2, 52, 70, 90, 405], "cpu_count": [2, 52, 70, 90], "num_chunk": [2, 81, 82, 83, 84, 85, 86, 87, 88, 89], "1000": [2, 4, 56, 64, 94, 99, 107, 108, 123, 127, 145, 146, 152, 153, 170, 218, 229, 247, 272, 273, 274, 296, 300, 325, 404, 405, 406, 407, 408, 410, 412, 414, 420, 421], "mp_start_method": [2, 81, 82, 83, 84, 85, 86, 87, 88, 89, 145, 152, 210, 405, 423], "fork": [2, 5, 81, 82, 83, 84, 85, 86, 87, 88, 89, 404, 405, 406, 407, 417, 418, 420, 423], "recreat": [2, 419], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 56, 65, 66, 100, 102, 107, 123, 127, 145, 146, 152, 153, 167, 187, 408, 412, 420], "grain": [2, 3, 56, 65, 66, 100, 102, 107, 123, 127, 145, 146, 152, 153, 167], "nomenclatur": 2, "compact": [2, 62, 91, 92, 98], "propos": [2, 170, 180, 257, 325, 334, 399, 407, 421], "replaybufferensembl": [2, 81, 105, 111, 118], "primit": [2, 3, 4, 87, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 70, 100, 102, 113, 123, 127, 137, 138, 145, 146, 152, 153, 220, 404, 418], "dummi": [2, 3, 153, 362, 404, 408, 412, 424], "semant": [2, 60, 61, 126, 128], "ident": [2, 3, 14, 15, 16, 45, 50, 52, 56, 57, 64, 65, 66, 71, 94, 102, 107, 123, 126, 127, 128, 140, 145, 146, 152, 153, 180, 231, 261, 262, 311, 313, 326, 331, 333, 335, 336, 344, 345, 346, 347, 393, 394, 405, 409, 417, 418], "another_kei": [2, 102], "renam": [2, 3, 50, 52, 57, 71, 102, 196, 198, 227, 404], "resiz": [2, 3, 89, 102, 170, 405, 407, 408, 409, 421, 424], "imag": [2, 3, 4, 7, 11, 87, 172, 175, 193, 209, 216, 256, 362, 364, 404, 405, 408, 409, 413, 418, 420, 424], "comops": 2, "totensorimag": [2, 3, 89, 102, 170, 197, 405, 407, 408, 421, 423, 424], "renametransform": [2, 3, 102, 123, 127, 145, 146, 152, 153], "rb0": [2, 102], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 119, 120, 123, 127, 139, 145, 146, 152, 153, 160, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 183, 185, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 206, 208, 209, 211, 212, 213, 214, 216, 218, 232, 233, 243, 251, 255, 258, 275, 284, 285, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 324, 326, 327, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 363, 364, 391, 399, 404, 405, 406, 407, 408, 410, 411, 414, 416, 417, 418, 419, 420, 421, 423, 424], "pixel": [2, 3, 7, 31, 89, 102, 121, 122, 126, 128, 129, 149, 170, 172, 175, 180, 183, 185, 189, 191, 193, 197, 209, 214, 216, 237, 267, 268, 362, 364, 404, 405, 407, 408, 413, 417, 420, 421, 423, 424], "rb1": [2, 102], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 119, 120, 123, 127, 139, 145, 146, 152, 153, 160, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 183, 185, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 206, 208, 209, 210, 211, 213, 214, 216, 218, 232, 233, 243, 244, 251, 255, 258, 275, 276, 284, 285, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 310, 311, 312, 313, 318, 319, 324, 326, 327, 330, 331, 332, 333, 335, 342, 344, 345, 346, 347, 362, 364, 377, 391, 399, 404, 405, 406, 407, 408, 410, 414, 416, 417, 418, 419, 420, 421, 423, 424], "pixels33": [2, 102], "data0": [2, 102], "244": [2, 102, 193, 216, 404, 419], "data1": [2, 102, 423], "_": [2, 8, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 124, 131, 156, 157, 171, 176, 178, 179, 187, 189, 196, 209, 218, 220, 272, 287, 299, 304, 309, 310, 311, 313, 314, 318, 319, 326, 330, 331, 333, 335, 336, 344, 345, 346, 347, 366, 404, 405, 406, 407, 408, 414, 417, 418, 419, 421, 423], "rang": [2, 3, 4, 8, 12, 51, 56, 58, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 102, 113, 123, 124, 127, 137, 138, 145, 146, 152, 153, 198, 209, 218, 220, 250, 254, 272, 327, 335, 336, 400, 401, 404, 406, 407, 408, 411, 412, 414, 417, 418, 419, 421, 423], "parent": [2, 3, 21, 31, 32, 37, 39, 61, 69, 82, 102, 111, 118, 123, 127, 145, 146, 152, 153, 163, 167, 170, 171, 174, 177, 180, 183, 184, 189, 193, 201, 205, 206, 207, 208, 210, 211, 213, 214, 220, 251, 255, 288, 307, 328, 330, 348, 362, 364, 404, 412, 419, 423, 424], "basic": [2, 139, 399, 406, 411, 412, 414, 417, 423, 424], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 139, 145, 146, 152, 153, 166, 210, 211, 212, 218, 220, 242, 252, 260, 264, 269, 281, 282, 283, 295, 310, 313, 328, 330, 332, 333, 410, 412, 419, 421], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 69, 71, 72, 73, 74, 75, 76, 110, 116, 123, 127, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 227, 228, 231, 233, 234, 235, 237, 238, 239, 240, 243, 244, 247, 248, 249, 250, 251, 253, 254, 255, 256, 261, 262, 263, 264, 265, 273, 274, 276, 277, 278, 279, 280, 282, 285, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 309, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 375, 379, 384, 391, 399, 400, 401, 404, 405, 406, 407, 408, 409, 417, 418, 419, 423, 424], "send": [2, 3, 8, 371, 423], "receiv": [2, 3, 27, 38, 45, 54, 55, 58, 59, 64, 123, 127, 145, 146, 152, 153, 211, 212, 220, 256, 350, 400, 404, 406, 411, 416, 419], "spawn": [2, 3, 4, 18, 22, 131, 140, 145, 152, 210, 405, 417, 418], "check_env_spec": [2, 3, 127, 145, 163, 195, 362, 397, 406, 417, 418, 419], "saniti": [2, 3, 7, 222, 406], "automati": 2, "make_composite_from_td": [2, 69, 397, 419], "fall": [2, 4, 83], "categori": [2, 31, 84, 399, 401], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 45, 54, 55, 59, 64, 72, 123, 127, 145, 146, 152, 153, 173, 188, 218, 220, 221, 247, 248, 273, 274, 277, 278, 287, 292, 293, 296, 297, 298, 299, 300, 303, 310, 311, 313, 314, 326, 330, 331, 333, 335, 336, 397, 399, 404, 405, 406, 408, 417, 419, 423, 424], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 56, 57, 60, 61, 65, 66, 69, 71, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 139, 145, 146, 152, 153, 164, 167, 176, 179, 195, 207, 225, 232, 258, 287, 299, 302, 304, 332, 397, 419, 421], "boundeddiscret": [2, 28, 31, 406], "boundedcontinu": [2, 22, 28, 31, 123, 127, 145, 146, 152, 153, 406, 417, 418, 419, 423, 424], "unboundeddiscret": [2, 72, 146, 397, 419, 424], "unboundedcontinu": [2, 72, 123, 127, 145, 146, 152, 153, 195, 225, 302, 307, 397, 406, 407, 417, 418, 419, 424], "implicitli": 2, "onehot": [2, 25, 26, 30, 34, 43, 44, 49, 119, 120, 126, 128, 129, 132, 133, 140, 141, 143, 144, 149, 154, 155, 244, 276, 292, 297, 315, 317, 318, 319, 342, 399, 410], "multionehot": [2, 41, 42, 44, 315, 318, 319, 342, 397], "multicategor": [2, 42, 43, 44, 397], "binari": [2, 3, 7, 26, 27, 154, 164, 168, 244, 276, 292, 293, 297, 298, 315, 318, 319, 342, 397], "concept": [2, 123, 127, 145, 146, 152, 153, 272, 405, 421], "arbitrari": [2, 3, 25, 56, 123, 127, 133, 145, 146, 152, 153, 166, 404, 405, 419, 421], "combin": [2, 4, 36, 55, 211, 335, 405, 408, 413, 421, 423], "relat": [2, 3, 4, 10, 51, 145, 183, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 405, 414, 419], "nevertheless": [2, 3, 406, 409, 421], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 76, 94, 107, 108, 167, 299, 302, 311, 313, 326, 328, 331, 333, 335, 336, 408, 417, 418, 419, 421, 423], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 102, 107, 108, 119, 120, 123, 126, 127, 128, 129, 132, 133, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 170, 171, 178, 189, 206, 207, 208, 210, 212, 218, 220, 231, 249, 252, 253, 261, 262, 282, 283, 292, 297, 303, 311, 313, 322, 328, 329, 333, 344, 346, 347, 377, 378, 401, 404, 405, 406, 407, 419, 424], "similarli": [2, 21, 27, 38, 45, 54, 55, 59, 64, 106, 111, 123, 127, 145, 146, 152, 153, 220, 261, 301, 302, 318, 326, 424], "possess": [2, 69, 83], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 100, 164, 167, 170, 171, 209, 213, 225, 404, 407, 408, 417, 418, 419], "move": [2, 4, 27, 38, 45, 54, 55, 59, 64, 69, 89, 123, 127, 128, 145, 146, 152, 153, 163, 174, 177, 193, 207, 211, 212, 214, 216, 218, 220, 227, 256, 299, 379, 404, 405, 407, 409, 424], "unbind": [2, 50, 51, 52, 56, 57, 65, 66, 71, 251, 255, 408], "said": [2, 406], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 51, 54, 65, 69, 99, 100, 170, 183, 194, 213, 321, 344, 346, 347, 400, 406, 417, 418, 419], "seen": [2, 18, 19, 20, 21, 31, 32, 39, 61, 123, 127, 145, 146, 152, 153, 177, 400, 404, 405, 407, 411, 417, 418, 421], "predict": [2, 3, 45, 58, 243, 245, 257, 258, 291, 305, 310, 312, 317, 320, 322, 323, 327, 330, 332, 343, 404, 405, 411], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 42, 44, 45, 48, 49, 54, 55, 59, 64, 74, 76, 123, 127, 145, 146, 152, 153, 210, 212, 220, 248, 310, 312, 313, 315, 318, 319, 320, 326, 327, 330, 331, 332, 333, 342, 344, 345, 346, 347, 352, 424], "mont": [2, 310, 312, 327, 330, 404], "carlo": [2, 310, 312, 327, 330, 404], "mct": 2, "act": [2, 3, 4, 107, 108, 147, 148, 212, 243, 262, 311, 313, 314, 326, 331, 333, 335, 336, 407, 408, 417, 418, 421, 423], "tradit": [2, 411, 417], "integ": [2, 14, 15, 16, 17, 23, 38, 41, 43, 45, 54, 55, 58, 59, 100, 107, 108, 109, 123, 127, 145, 146, 152, 153, 163, 166, 180, 184, 189, 205, 234, 235, 256, 261, 262, 313, 318, 326, 333, 408, 421], "advanc": [2, 3, 21, 51, 56, 65, 66, 127, 409, 412, 421], "rebuild": 2, "initi": [2, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 64, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 113, 123, 127, 143, 144, 145, 146, 152, 153, 154, 169, 189, 193, 207, 211, 212, 214, 219, 220, 229, 230, 231, 232, 247, 248, 249, 250, 253, 254, 258, 261, 262, 263, 264, 265, 273, 274, 295, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 342, 395, 399, 400, 404, 405, 407, 409, 410, 412, 417, 419, 424], "pair": [2, 3, 45, 50, 52, 54, 57, 64, 71, 83, 121, 122, 123, 127, 145, 146, 152, 153, 198, 207, 210, 251, 288, 296, 300, 328, 344, 345, 346, 347, 348, 399, 400, 404, 405, 406, 410, 411, 416, 419, 424], "term": [2, 58, 187, 253, 254, 264, 265, 309, 310, 319, 383, 405, 406, 409, 410, 418], "pseudocod": 2, "next_stat": [2, 400], "associ": [2, 3, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 210, 220, 277, 395, 404, 421], "sens": [2, 4, 50, 52, 57, 71, 412, 419], "hard": [2, 3, 7, 113, 121, 122, 145, 325, 405, 424], "let": [2, 3, 6, 7, 11, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 67, 123, 127, 145, 146, 147, 148, 152, 153, 170, 220, 251, 255, 261, 262, 292, 377, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "know": [2, 3, 4, 9, 51, 56, 65, 66, 126, 128, 229, 230, 328, 331, 377, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 418, 421], "next_td": 2, "Of": [2, 3, 7, 398, 419, 424], "cours": [2, 3, 4, 398, 419, 424], "handi": [2, 3, 123, 127, 145, 146, 152, 153, 413], "undertaken": [2, 419], "link": [2, 6, 7, 123, 405, 414], "hash": [2, 38, 54, 55, 59, 64, 71], "past": [2, 4, 295, 405, 421], "node_map": 2, "_index": [2, 54, 64], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 217, 406, 408, 416], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 66, 99, 100, 106, 201, 218, 220, 273, 274, 295, 369, 374, 405, 407, 409, 412, 418, 419, 421], "next_data": 2, "data_map": 2, "obtrain": 2, "form": [2, 14, 15, 17, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 98, 123, 127, 145, 146, 152, 153, 218, 220, 249, 251, 253, 255, 309, 310, 312, 327, 330, 381, 399, 410, 418], "figur": [2, 3, 404, 406, 407, 418, 419, 424], "flowchart": 2, "o": [2, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 254], "get_tre": 2, "vertex": [2, 71], "longer": [2, 12, 71, 405, 414, 417, 418, 421], "vertic": [2, 71], "branch": 2, "repeat": [2, 71, 119, 120, 121, 122, 126, 128, 129, 132, 133, 140, 141, 149, 232, 406, 417, 418, 419], "depth": [2, 56, 69, 123, 127, 139, 145, 146, 149, 152, 153, 232, 234, 235, 237, 238, 239, 240, 245, 246, 256, 258, 261, 262, 263, 267, 268, 292, 399, 405, 409, 411, 412, 416, 417, 418, 421], "until": [2, 3, 7, 21, 133, 208, 211, 220, 406, 407, 414, 417, 418], "anymor": [2, 50, 52, 57, 71, 212, 299], "utmost": 2, "commonli": [2, 100, 107, 108, 424], "emploi": [2, 265], "languag": [2, 24, 58], "scarc": 2, "address": [2, 421], "subdomain": 2, "facilit": [2, 3, 7, 192, 193, 207, 214, 216, 288, 289, 290, 399, 404, 407, 410, 419], "extern": [2, 3, 176, 179, 417, 424], "token": [2, 52, 53, 58, 67, 70, 90], "dm": [3, 404, 424], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 59, 60, 61, 65, 66, 69, 70, 72, 73, 74, 75, 76, 87, 104, 110, 113, 114, 116, 117, 119, 120, 123, 127, 131, 132, 133, 139, 140, 141, 145, 146, 152, 153, 156, 177, 198, 207, 214, 215, 251, 255, 261, 263, 288, 294, 310, 311, 313, 314, 315, 317, 318, 319, 321, 326, 330, 331, 332, 333, 335, 336, 345, 346, 371, 381, 399, 400, 401, 404, 405, 407, 409, 410, 411, 413, 417, 418, 419, 421, 424], "abl": [3, 136, 147, 148, 251, 255, 404, 406, 407, 410, 416, 417, 418, 419, 421], "experi": [3, 51, 56, 65, 66, 81, 83, 84, 85, 86, 87, 88, 89, 99, 100, 222, 366, 367, 368, 369, 370, 371, 398, 405, 406, 408, 412, 413, 417, 418, 421], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 126, 128, 263, 328], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 123, 124, 127, 137, 138, 145, 146, 147, 148, 150, 151, 152, 153, 170, 173, 180, 186, 187, 189, 191, 196, 198, 201, 207, 211, 217, 218, 220, 362, 391, 404, 405, 406, 407, 408, 416, 418, 420, 421, 423, 424], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 119, 120, 123, 127, 139, 145, 146, 152, 153, 174, 178, 180, 187, 193, 207, 211, 212, 214, 216, 220, 223, 232, 233, 234, 235, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 260, 261, 262, 263, 266, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 301, 302, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 391, 399, 400, 404, 405, 406, 407, 408, 410, 411, 414, 416, 417, 418, 419, 420, 423], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 54, 55, 59, 64, 72, 102, 123, 127, 145, 146, 152, 153, 165, 166, 211, 217, 222, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 299, 300, 301, 303, 306, 328, 330, 405, 407, 412, 419, 421], "organis": [3, 88, 123, 127, 145, 146, 152, 153, 212, 405], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 76, 87, 123, 126, 127, 128, 133, 145, 146, 152, 153, 163, 180, 193, 214, 218, 220, 251, 255, 300, 310, 311, 313, 314, 315, 317, 319, 320, 321, 324, 326, 328, 330, 331, 332, 333, 335, 336, 342, 404, 407, 419], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 139, 145, 146, 152, 153, 180, 220], "actual": [3, 4, 7, 50, 52, 57, 71, 81, 83, 84, 85, 87, 88, 89, 123, 127, 145, 146, 152, 153, 217, 384, 400, 404, 406, 408, 417, 418, 419], "retriev": [3, 50, 51, 52, 56, 57, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 105, 123, 126, 127, 128, 145, 146, 152, 153, 171, 177, 180, 189, 227, 232, 234, 258, 295, 296, 300, 303, 307, 310, 311, 312, 313, 315, 327, 330, 331, 333, 335, 336, 342, 344, 345, 346, 347, 395, 401, 405, 406, 410, 419, 424], "care": [3, 8, 27, 38, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 211, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 364, 404, 406, 408, 417, 418, 419, 421], "parametr": [3, 265, 300, 311, 313, 318, 326, 333, 404, 406], "hardwar": [3, 408], "observation_spec": [3, 123, 127, 139, 145, 146, 152, 153, 164, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 183, 185, 186, 187, 189, 191, 193, 195, 197, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 220, 232, 251, 255, 258, 385, 391, 404, 406, 411, 416, 417, 418, 419, 424], "state_spec": [3, 123, 127, 139, 145, 146, 152, 153, 164, 232, 258, 419, 424], "reward_spec": [3, 123, 127, 139, 145, 146, 152, 153, 164, 167, 168, 173, 174, 176, 177, 179, 195, 199, 200, 201, 203, 211, 213, 220, 232, 258, 406, 417, 418, 419, 424], "done_spec": [3, 123, 127, 145, 146, 152, 153, 176, 177, 179, 180, 195, 211, 220, 228, 417, 418, 419, 424], "flag": [3, 8, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 137, 138, 145, 146, 152, 153, 156, 157, 186, 273, 274, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 399, 417, 418, 419, 420], "input_spec": [3, 123, 127, 139, 145, 146, 152, 153, 163, 167, 174, 176, 177, 178, 189, 191, 195, 196, 201, 202, 205, 206, 207, 211, 212, 213, 215, 220, 406, 419], "full_action_spec": [3, 123, 127, 143, 144, 145, 146, 152, 153, 154, 155, 163, 232, 258, 406, 417, 418], "full_state_spec": [3, 123, 127, 145, 146, 152, 153, 163, 232, 258, 406], "lock": [3, 31, 32, 39, 50, 52, 57, 61, 71, 123, 127, 133, 145, 146, 152, 153, 167, 207, 218, 419], "output_spec": [3, 123, 127, 145, 146, 152, 153, 167, 174, 176, 177, 181, 187, 195, 196, 202, 205, 211, 212, 220, 419], "full_observation_spec": [3, 123, 127, 145, 146, 152, 153, 232, 258], "full_reward_spec": [3, 123, 127, 145, 146, 152, 153, 167, 177, 195, 417, 418], "full_done_spec": [3, 123, 127, 145, 146, 152, 153, 167, 177, 195, 228, 417, 418], "carri": [3, 21, 43, 70, 123, 127, 145, 146, 152, 153, 207, 328, 405, 407, 417, 418, 419, 421], "nontensorspec": [3, 397], "importantli": [3, 296, 300], "action_s": 3, "help": [3, 4, 27, 38, 45, 54, 55, 59, 64, 69, 123, 127, 145, 146, 152, 153, 180, 220, 310, 312, 327, 330, 332, 398, 400, 404, 405, 406, 407, 417, 418], "With": [3, 132, 133, 136, 206, 401, 405, 416, 417, 418, 421, 424], "necessarili": [3, 123, 127, 145, 146, 152, 153, 424], "present": [3, 27, 38, 45, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 66, 69, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 102, 106, 123, 126, 127, 145, 146, 152, 153, 181, 198, 202, 207, 210, 212, 220, 227, 228, 235, 236, 237, 238, 239, 240, 246, 251, 253, 255, 265, 271, 273, 274, 295, 299, 300, 301, 302, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 395, 401, 404, 414, 416, 417, 418, 421, 423], "0s": [3, 81, 87, 207, 407], "step_and_maybe_reset": [3, 123, 127, 145, 146, 152, 153, 409], "done_kei": [3, 23, 35, 37, 46, 62, 91, 92, 98, 123, 127, 145, 146, 152, 153, 166, 170, 180, 198, 205, 220, 227, 417, 418], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 72, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 314, 315, 317, 333, 406, 410, 417, 418, 421], "_reset": [3, 123, 127, 139, 145, 146, 152, 153, 164, 166, 167, 170, 176, 179, 186, 195, 228, 232, 258, 417], "data_": [3, 123, 127, 145, 146, 152, 153], "append": [3, 8, 11, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 124, 127, 145, 146, 152, 153, 166, 173, 174, 198, 207, 212, 217, 250, 251, 254, 255, 292, 297, 404, 405, 406, 407, 408, 417, 418, 419, 420, 421, 423], "seed": [3, 14, 15, 16, 17, 21, 56, 65, 66, 88, 102, 123, 127, 139, 145, 146, 147, 148, 152, 153, 156, 157, 164, 167, 176, 179, 195, 212, 222, 362, 381, 417], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 226, 236, 245, 248, 267, 278, 287, 296, 299, 300, 303, 311, 328, 377, 399, 404, 405, 406, 407, 408, 410, 411, 414, 417, 419, 423, 424], "preced": [3, 45, 407], "risk": [3, 194], "overlap": [3, 65, 113], "reproduc": [3, 55, 59, 170, 222, 404, 406, 408, 418], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 45, 50, 52, 53, 58, 64, 67, 70, 72, 90, 94, 95, 96, 99, 100, 115, 123, 127, 145, 146, 152, 153, 178, 199, 205, 206, 208, 231, 281, 282, 283, 303, 311, 313, 318, 319, 326, 328, 329, 333, 364, 378, 399, 404, 405, 406, 407, 410, 417, 418, 421], "max_step": [3, 11, 113, 123, 127, 137, 138, 139, 145, 146, 152, 153, 156, 157, 205, 210, 220, 362, 409, 410, 411, 413, 414, 417, 418, 423, 424], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 54, 58, 64, 119, 120, 123, 127, 139, 145, 146, 152, 153, 169, 187, 230, 233, 244, 248, 251, 255, 258, 274, 275, 276, 284, 285, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 305, 307, 311, 313, 314, 318, 319, 321, 322, 323, 324, 326, 328, 331, 333, 335, 336, 342, 343, 344, 345, 346, 347, 377, 391, 397, 404, 406, 407, 411, 414, 416, 417, 418, 419, 420, 424], "trail": [3, 218], "treat": [3, 45, 400, 410, 411], "brief": [3, 406, 409, 411, 421], "deliveri": 3, "design": [3, 27, 38, 45, 54, 55, 59, 64, 105, 111, 118, 123, 127, 137, 138, 145, 146, 152, 153, 163, 170, 194, 210, 212, 220, 291, 310, 311, 312, 313, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 404, 405, 406, 407, 409, 410, 411, 416, 417, 418, 419, 421, 423, 424], "metaclass": 3, "everi": [3, 8, 27, 31, 32, 38, 39, 45, 51, 54, 55, 56, 59, 61, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 109, 123, 127, 145, 146, 152, 153, 205, 206, 218, 220, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 261, 262, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 328, 381, 401, 404, 405, 406, 407, 409, 410, 417, 418, 419], "flank": [3, 407], "dual": 3, "strictli": [3, 8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333, 404, 406], "refer": [3, 7, 8, 9, 11, 21, 24, 27, 38, 45, 54, 55, 58, 59, 64, 123, 126, 127, 128, 145, 146, 152, 153, 210, 212, 218, 220, 232, 244, 245, 258, 259, 260, 261, 262, 263, 267, 268, 277, 278, 290, 293, 310, 313, 320, 321, 322, 323, 330, 333, 344, 349, 357, 403, 404, 406, 408, 410, 411, 412, 413, 417, 418, 421, 424], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 99, 100, 107, 123, 127, 145, 146, 152, 153, 174, 189, 193, 198, 200, 207, 212, 214, 216, 218, 220, 227, 234, 235, 236, 237, 238, 239, 240, 242, 246, 256, 259, 260, 261, 262, 264, 265, 269, 271, 275, 281, 282, 283, 284, 299, 317, 319, 325, 331, 334, 357, 375, 377, 378, 381, 386, 387, 389, 391, 392, 393, 394, 395], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 137, 138, 158, 404], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 81, 87, 100, 107, 108, 397], "adjac": [3, 23, 183, 295], "junction": 3, "inittrack": [3, 251, 255, 295, 404, 407], "tutori": [3, 146, 396, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 424], "scratch": [3, 8, 405, 419], "gym3": 3, "envpool": [3, 140, 141], "interfac": [3, 130, 142, 256, 264, 399, 400, 404, 406, 408, 413, 419, 421], "simultan": [3, 20, 133, 140, 141, 145, 152, 419], "advantag": [3, 8, 246, 310, 312, 327, 330, 332, 344, 345, 346, 347, 348, 349, 351, 353, 355, 357, 358, 360, 400, 401, 404, 405, 406, 407, 418, 419, 424], "scale": [3, 4, 24, 83, 123, 127, 145, 146, 152, 153, 170, 187, 189, 200, 206, 209, 218, 231, 245, 252, 266, 277, 278, 282, 283, 288, 289, 290, 296, 300, 302, 310, 311, 313, 326, 330, 331, 332, 333, 379, 385, 395, 399, 404, 405, 406, 407, 410, 418, 423], "varieti": [3, 11], "inherit": [3, 123, 127, 145, 146, 152, 153, 257, 261, 262, 328, 401, 406, 417, 418], "from_pixel": [3, 11, 119, 120, 121, 122, 126, 128, 129, 132, 133, 149, 170, 197, 362, 364, 404, 405, 407, 409, 413, 414, 420, 421, 423, 424], "81": [3, 404, 405, 419], "simpli": [3, 6, 50, 52, 57, 70, 71, 111, 113, 118, 181, 202, 217, 328, 344, 399, 400, 404, 406, 411, 417, 418, 424], "d": [3, 51, 54, 56, 64, 65, 66, 84, 86, 88, 89, 90, 99, 100, 231, 249, 253, 296, 300, 423], "privat": [3, 123, 127, 145, 146, 152, 153, 217, 419, 424], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 41, 43, 50, 51, 52, 56, 57, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 108, 113, 312, 327, 330, 372, 374, 377, 381, 384, 385, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 50, 52, 57, 58, 71, 102, 105, 154, 155, 189, 200, 252, 264, 277, 282, 283, 342, 399, 410, 411, 417, 419, 421], "inner": [3, 123, 127, 145, 146, 152, 153, 178, 401, 405, 406, 418, 424], "logic": [3, 417], "kept": [3, 23, 106, 108, 178, 202, 211, 222, 227, 252, 282, 283, 411, 417], "mind": [3, 81, 87, 100, 107, 108, 123, 127, 145, 146, 152, 153, 417, 418], "desig": 3, "wherev": 3, "expos": [3, 149, 176, 179, 301, 405], "modif": [3, 5, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 123, 127, 145, 146, 152, 153, 183, 220, 228, 328, 400, 406, 419], "lost": [3, 8, 217], "eras": [3, 25, 26, 28, 29, 30, 34, 41, 42, 43, 44, 47, 48, 49, 69, 72, 73, 74, 75, 76, 100, 107, 123, 127, 145, 146, 152, 153, 212], "intern": [3, 68, 402], "face": [3, 5, 8, 9, 409, 424], "NOT": [3, 91, 92, 98, 194], "outsid": [3, 16, 177, 210, 400, 413, 417, 418, 419], "right": [3, 6, 7, 23, 58, 100, 107, 405, 406, 408, 418, 419, 424], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 211, 212, 220, 222, 344, 345, 346, 347, 417], "preclud": 3, "presenc": [3, 54, 64, 411], "annihil": 3, "reason": [3, 4, 8, 27, 38, 45, 54, 55, 59, 64, 87, 123, 127, 145, 146, 147, 148, 152, 153, 193, 214, 220, 255, 400, 404, 405, 406, 411, 412, 417, 419, 421], "superse": 3, "pettingzoowrapp": [3, 397], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 54, 60, 61, 69, 72, 73, 74, 75, 76, 81, 123, 127, 136, 137, 138, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 399, 405, 410, 412, 418, 421], "environemtn": 3, "__not__": [3, 296, 311, 313, 326, 331, 333, 335, 336], "constrain": [3, 187, 251, 255, 330], "li": 3, "fact": [3, 7, 8, 404, 406, 409, 417, 418, 419, 420, 421, 424], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "perfectli": [3, 401, 404, 408, 419], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 408, 411, 423], "agent0": [3, 408], "agent1": 3, "overrid": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 56, 60, 61, 69, 72, 73, 74, 75, 76, 81, 123, 127, 145, 146, 152, 153, 166, 395, 399], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 102, 103, 105, 106, 107, 108, 109, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 166, 167, 170, 171, 176, 178, 179, 180, 181, 183, 187, 188, 189, 191, 193, 195, 196, 198, 200, 201, 202, 205, 207, 209, 210, 212, 213, 214, 216, 218, 220, 222, 225, 227, 228, 231, 232, 233, 234, 235, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 264, 265, 274, 282, 283, 287, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 342, 344, 345, 346, 347, 350, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 371, 374, 375, 377, 378, 379, 381, 395, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "500": [3, 404, 405, 419, 424], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 81, 84, 145, 152], "bottleneck": [3, 8, 100, 107, 108], "great": [3, 7, 8, 408, 417, 423], "speedup": [3, 8, 417, 424], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 176, 179, 227, 250, 254, 404, 406], "misspecifi": 3, "caus": [3, 7, 8, 94, 95, 115, 123, 127, 131, 145, 146, 152, 153, 194, 424], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 87, 94, 123, 127, 145, 146, 152, 153, 154, 158, 170, 182, 188, 198, 206, 207, 208, 210, 212, 220, 222, 229, 230, 247, 248, 273, 274, 313, 328, 333, 404, 406, 408, 417, 418, 421], "mismatch": [3, 54, 405], "subprocess": [3, 14, 15, 17, 124, 145, 152], "multithreadedenv": [3, 397], "underneath": 3, "higher": [3, 4, 100, 173, 303, 404, 405, 406, 417, 421, 424], "flexibl": [3, 9, 140, 337, 400, 401, 404, 408, 421, 424], "cover": [3, 126, 128, 398, 406, 409, 412, 413, 419, 423], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 72, 89, 90, 102, 123, 127, 136, 139, 142, 145, 146, 147, 148, 152, 153, 167, 174, 176, 177, 180, 181, 187, 193, 195, 196, 202, 205, 207, 210, 211, 212, 214, 216, 218, 220, 223, 226, 229, 230, 234, 235, 256, 261, 262, 265, 275, 284, 292, 296, 299, 300, 307, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 338, 342, 350, 362, 393, 397, 399, 404, 405, 406, 408, 412, 417, 418, 419, 421, 424], "atari": [3, 4, 81, 170, 235, 364, 408, 413, 424], "classic": [3, 139, 148, 405], "benchmark_batched_env": 3, "seamlessli": [3, 419], "infrastructur": [3, 417, 418], "world": [3, 5, 139, 305, 322, 408, 413, 417, 418, 419, 424], "paradigm": [3, 17, 418], "decpodp": 3, "game": [3, 4, 5, 81, 137, 138, 143, 144, 235, 364, 408, 413], "thank": [3, 404, 408, 409, 423], "carrier": [3, 406, 407, 409, 421], "particular": [3, 27, 38, 45, 54, 55, 59, 64, 70, 83, 84, 123, 127, 145, 146, 152, 153, 212, 220, 400, 401, 405, 407, 409, 416, 418, 421], "thu": [3, 327, 418], "vma": [3, 156, 157, 362, 417, 418], "robot": [3, 5, 7, 87, 193, 214, 216, 408, 418], "vmasenv": [3, 362, 397, 417, 418], "balanc": [3, 121, 122, 404, 405, 424], "num_env": [3, 21, 126, 130, 141, 156, 157, 362, 417, 418], "n_agent": [3, 156, 157, 261, 262, 263, 275, 284, 342, 362, 417, 418], "ground_rew": 3, "pos_rew": [3, 418], "style": [3, 51, 56, 65, 66, 81, 83, 84, 85, 86, 87, 88, 89], "vari": [3, 126, 128, 129, 147, 148, 149, 156, 194, 408, 418], "creation": [3, 145, 152, 424], "info_spec": [3, 145], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 34, 43, 44, 49, 119, 120, 123, 126, 127, 128, 129, 132, 133, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 163, 164, 180, 195, 228, 244, 269, 272, 276, 292, 293, 296, 297, 298, 315, 318, 319, 342, 397, 407, 417, 418, 424], "simpl": [3, 9, 27, 38, 45, 54, 55, 59, 64, 69, 123, 127, 145, 146, 152, 153, 220, 237, 295, 300, 315, 317, 328, 332, 400, 404, 405, 406, 409, 410, 411, 417, 418, 421, 424], "prefix": [3, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 70, 71, 123, 127, 145, 146, 152, 153, 210, 212, 220, 296, 313, 328, 333, 363, 407, 411, 424], "exactli": [3, 27, 38, 45, 54, 55, 59, 64, 123, 127, 129, 145, 146, 152, 153, 210, 212, 220, 249, 253, 269, 313, 333, 404, 407, 412, 417, 418], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 123, 127, 145, 146, 152, 153, 163, 164, 178, 221, 227, 229, 230, 232, 247, 248, 257, 258, 273, 274, 295, 417, 418], "reward_kei": [3, 35, 37, 46, 62, 91, 92, 98, 123, 127, 145, 146, 152, 153, 220, 227, 232, 258, 375, 379, 417, 418], "set_kei": [3, 180, 310, 312, 313, 315, 318, 319, 320, 326, 327, 328, 330, 331, 332, 333, 342, 348, 404, 417, 418], "awai": [3, 406, 409, 417, 418, 423], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 41, 42, 43, 44, 47, 48, 49, 61, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 186, 205, 300], "full": [3, 123, 127, 145, 146, 152, 153, 251, 255, 293, 372, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "autoresettransform": 3, "invalid": [3, 27, 38, 45, 54, 55, 59, 64, 113, 123, 127, 145, 146, 152, 153, 158, 220, 259, 260], "nan": [3, 166, 217], "auto_reset": [3, 123, 127, 133, 145, 146, 152, 153, 166, 220, 419], "auto_reset_replac": [3, 166], "placehold": [3, 129, 180, 212], "set_gym_backend": [3, 123, 126, 127, 145, 146, 152, 153, 159, 166, 397, 409, 423], "autoresettinggymenv": [3, 166], "_step": [3, 123, 127, 145, 146, 152, 153, 164, 166, 167, 176, 179, 183, 195, 196], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 45, 50, 52, 54, 55, 57, 59, 61, 64, 71, 123, 127, 139, 145, 146, 152, 153, 164, 166, 167, 174, 176, 179, 193, 195, 207, 211, 212, 214, 216, 220, 229, 230, 232, 244, 247, 251, 255, 258, 261, 262, 275, 284, 296, 299, 304, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 401, 404, 408, 419, 423], "super": [3, 139, 164, 166, 167, 176, 179, 195, 232, 244, 258, 304, 311, 313, 314, 319, 326, 331, 333, 335, 336, 404, 419, 423], "td_reset": [3, 166], "exclud": [3, 8, 64, 83, 88, 123, 127, 145, 146, 152, 153, 166, 170, 181, 227, 275, 312, 330, 417, 418, 421], "r": [3, 4, 45, 163, 164, 166, 173, 189, 203, 210, 218, 231, 233, 250, 300, 309, 343, 362, 405, 419, 424], "break_when_any_don": [3, 123, 127, 145, 146, 152, 153, 166, 210, 220, 233, 295, 418], "3633e": [3, 166], "02": [3, 123, 127, 145, 146, 152, 153, 166, 403, 404, 405, 406, 407, 414, 417, 419, 420, 422], "4877e": [3, 166], "01": [3, 166, 189, 231, 273, 274, 306, 310, 312, 327, 330, 403, 404, 405, 407, 419, 420, 422], "2849e": [3, 166], "7584e": [3, 166], "6609e": [3, 166], "6166e": [3, 166], "8366e": [3, 166], "2761e": [3, 166], "5685e": [3, 166], "4102e": [3, 166], "8111e": [3, 166], "9959e": [3, 166], "0865e": [3, 166], "5644e": [3, 166], "2119e": [3, 166], "2542e": [3, 166], "03": [3, 123, 127, 145, 146, 152, 153, 166, 189, 403, 404, 405, 407, 417, 419, 420, 422], "9952e": [3, 166], "4059e": [3, 166], "2094e": [3, 166], "9009e": [3, 166], "5140e": [3, 166], "3554e": [3, 166], "2920e": [3, 166], "7893e": [3, 166], "6429e": [3, 166], "3057e": [3, 166], "2867e": [3, 166], "6963e": [3, 166], "3818e": [3, 166], "2576e": [3, 166], "2679e": [3, 166], "1640e": [3, 166], "00": [3, 119, 120, 166, 403, 404, 405, 406, 407, 417, 418, 419, 420, 422], "6972e": [3, 166], "0212e": [3, 166], "5959e": [3, 166], "4637e": [3, 166], "3121e": [3, 166], "2168e": [3, 166], "5232e": [3, 166], "7704e": [3, 166], "7457e": [3, 166], "4127e": [3, 166], "1064e": [3, 166], "0854e": [3, 166], "5712e": [3, 166], "2189e": [3, 166], "5235e": [3, 166], "8289e": [3, 166], "0009e": [3, 166], "0257e": [3, 166], "8893e": [3, 166], "5872e": [3, 166], "9405e": [3, 166], "7766e": [3, 166], "0403e": [3, 166], "0626e": [3, 166], "2959e": [3, 166], "7263e": [3, 166], "2775e": [3, 166], "9564e": [3, 166], "0411e": [3, 166], "6769e": [3, 166], "6354e": [3, 166], "8698e": [3, 166], "1765e": [3, 166], "6292e": [3, 166], "5375e": [3, 166], "1820e": [3, 166], "7023e": [3, 166], "5836e": [3, 166], "9016e": [3, 166], "4826e": [3, 166], "6191e": [3, 166], "6387e": [3, 166], "8667e": [3, 166], "2056e": [3, 166], "1147e": [3, 166], "5991e": [3, 166], "0278e": [3, 166], "5219e": [3, 166], "3067e": [3, 166], "6617e": [3, 166], "3322e": [3, 166], "2629e": [3, 166], "4599e": [3, 166], "7298e": [3, 166], "5848e": [3, 166], "0148e": [3, 166], "5745e": [3, 166], "6982e": [3, 166], "7877e": [3, 166], "3527e": [3, 166], "7285e": [3, 166], "6668e": [3, 166], "0583e": [3, 166], "6956e": [3, 166], "3962e": [3, 166], "9845e": [3, 166], "5015e": [3, 166], "5903e": [3, 166], "9993e": [3, 166], "9418e": [3, 166], "0196e": [3, 166], "6557e": [3, 166], "2109e": [3, 166], "8997e": [3, 166], "1507e": [3, 166], "7363e": [3, 166], "0310e": [3, 166], "9574e": [3, 166], "8980e": [3, 166], "0090e": [3, 166], "forecast": 3, "awar": [3, 7, 94, 95, 96, 109, 111, 115, 251, 255, 405, 407], "detect": [3, 89, 328, 400], "return_contigu": [3, 123, 127, 145, 146, 152, 153, 222, 416], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 57, 60, 61, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 113, 123, 125, 127, 145, 146, 152, 153, 164, 166, 167, 169, 170, 171, 174, 176, 177, 180, 181, 182, 183, 186, 187, 192, 194, 195, 196, 198, 201, 202, 205, 206, 207, 208, 210, 211, 212, 217, 218, 220, 227, 228, 229, 230, 232, 247, 251, 255, 257, 258, 273, 274, 291, 293, 295, 298, 299, 300, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 342, 343, 344, 345, 346, 347, 348, 381, 404, 417, 419], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 45, 51, 54, 55, 58, 59, 64, 65, 72, 87, 99, 100, 102, 123, 127, 145, 146, 152, 153, 163, 166, 170, 174, 176, 179, 187, 189, 193, 198, 199, 200, 206, 207, 209, 211, 212, 214, 216, 218, 220, 229, 230, 231, 233, 242, 245, 249, 252, 253, 256, 259, 260, 264, 265, 272, 277, 278, 281, 283, 299, 303, 306, 308, 309, 310, 311, 312, 313, 317, 318, 319, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 343, 349, 350, 351, 352, 353, 354, 355, 356, 357, 379, 404, 405, 421, 424], "_set_se": [3, 164, 167, 176, 179, 195, 419], "lazystackedtensordict": [3, 61, 81, 123, 127, 139, 145, 146, 152, 153, 416], "float32": [3, 14, 15, 16, 28, 31, 35, 50, 51, 52, 54, 57, 58, 62, 64, 65, 66, 69, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 99, 100, 115, 119, 120, 123, 126, 127, 128, 132, 133, 139, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 156, 157, 163, 167, 176, 179, 180, 181, 189, 191, 195, 196, 198, 202, 205, 207, 209, 225, 227, 232, 233, 243, 244, 251, 255, 258, 273, 274, 275, 276, 284, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 302, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 342, 399, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424], "exclusive_field": [3, 81, 416], "stack_dim": [3, 81, 416], "dramat": 3, "carefulli": [3, 417, 418, 424], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 220, 222, 287, 292, 293, 296, 297, 298, 299, 300, 311, 313, 326, 331, 333, 335, 336, 406, 417, 418], "plain": [3, 8, 409], "larg": [3, 4, 30, 50, 52, 57, 71, 176, 179, 214, 310, 312, 327, 330, 332, 405, 406, 417, 418, 421], "expens": [3, 100, 107, 108, 362, 421], "absent": [3, 31, 32, 39, 61, 64, 83, 123, 127, 145, 146, 152, 153, 212], "torchvis": [3, 11, 193, 216, 366, 417, 423, 424], "base_env": [3, 120, 123, 127, 128, 133, 144, 145, 146, 152, 153, 155, 163, 164, 167, 173, 176, 178, 179, 187, 191, 195, 197, 203, 205, 207, 208, 210, 212, 220, 364, 404, 405, 406, 408, 417, 420, 423, 424], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 124, 127, 139, 145, 146, 152, 153, 162, 165, 167, 174, 180, 207, 212, 220, 234, 235, 256, 263, 309, 328, 362, 386, 387, 393, 394, 395, 405, 421], "bring": [3, 406, 409, 424], "signific": [3, 5, 8, 406, 423, 424], "kind": [3, 56, 69, 227, 411, 417, 421], "consult": 3, "interest": [3, 296, 300, 399, 405, 406, 409, 418, 419, 424], "resize_par": 3, "easi": [3, 5, 11, 81, 86, 121, 122, 123, 127, 132, 133, 145, 146, 152, 153, 229, 230, 247, 248, 273, 274, 399, 400, 404, 405, 406, 418, 420, 421, 423, 424], "revers": [3, 253], "order": [3, 11, 16, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 106, 108, 123, 127, 145, 146, 152, 153, 171, 176, 179, 191, 210, 212, 220, 272, 287, 292, 299, 301, 302, 304, 310, 311, 313, 314, 318, 319, 326, 330, 331, 332, 333, 335, 336, 405, 417, 418], "chain": [3, 50, 51, 52, 56, 57, 65, 66, 71, 81, 83, 84, 85, 86, 87, 88, 89, 174, 178, 234, 235, 302, 424], "in_keys_inv": [3, 160, 173, 176, 177, 179, 189, 190, 191, 195, 196, 198, 203, 211, 213, 404, 416, 419, 424], "append_transform": [3, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 145, 146, 152, 153, 160, 163, 169, 193, 207, 210, 212, 214, 218, 233, 251, 255, 362, 404, 407, 417, 419, 421, 423, 424], "doubletofloat": [3, 404, 406, 416], "float64": [3, 27, 38, 45, 54, 55, 59, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 121, 122, 123, 127, 137, 138, 145, 146, 152, 153, 163, 174, 176, 179, 193, 207, 211, 212, 214, 216, 220, 299, 416, 424], "constrast": 3, "out_keys_inv": [3, 160, 173, 176, 177, 179, 189, 190, 191, 195, 196, 203, 211, 213, 419], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 72, 73, 74, 75, 76, 81, 94, 95, 96, 100, 106, 107, 109, 111, 115, 123, 127, 145, 146, 152, 153, 167, 174, 176, 177, 179, 181, 187, 195, 196, 202, 205, 211, 212, 218, 220, 253, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 400, 404, 407, 417, 418, 419, 420, 421, 424], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 59, 60, 61, 64, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 126, 127, 128, 145, 146, 152, 153, 154, 155, 176, 179, 180, 201, 210, 212, 220, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 362, 364, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 401, 404, 406, 409, 421], "manipul": [3, 4, 8, 121, 122, 193, 214, 424], "third_transform": 3, "unexpect": [3, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 424], "behviour": 3, "fortun": [3, 407, 408, 409, 410, 413], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 76, 81, 94, 123, 127, 145, 146, 152, 153, 207, 220, 228, 300, 344, 345, 346, 347, 404, 406, 413, 417, 418], "catfram": [3, 295, 405], "hold": [3, 340, 341, 419, 421], "notic": [3, 113, 170, 406, 414, 419], "parenthood": 3, "henc": [3, 51, 194, 228, 261, 404, 406, 417, 418, 419], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 145, 152, 362, 419], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 123, 126, 127, 128, 137, 138, 145, 146, 147, 148, 152, 153, 156, 157, 163, 178, 269, 272, 276, 317, 318, 319, 320, 399, 405, 406, 410, 417, 418, 419, 424], "might": [3, 50, 52, 53, 57, 71, 368, 398, 404, 409, 424], "action_mask": [3, 132, 133, 147, 148, 150, 151, 164], "unavail": [3, 147, 148], "probabl": [3, 4, 8, 58, 102, 105, 233, 242, 244, 247, 249, 251, 253, 255, 256, 259, 260, 269, 282, 283, 296, 300, 313, 399, 405, 408, 410, 423], "probabilistictensordictmodul": [3, 187, 300, 301, 423], "tensordictsequenti": [3, 54, 64, 233, 247, 251, 255, 273, 292, 295, 301, 307, 399, 404, 405, 407, 408, 410, 414, 416, 417, 420, 423], "maskedcategor": [3, 260, 397], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 45, 54, 55, 59, 64, 119, 120, 123, 127, 139, 145, 146, 152, 153, 174, 187, 193, 207, 211, 212, 214, 216, 220, 232, 233, 234, 235, 237, 238, 239, 240, 244, 246, 247, 248, 256, 258, 261, 262, 264, 265, 266, 273, 274, 276, 277, 278, 287, 288, 289, 290, 294, 295, 296, 297, 299, 302, 304, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 391, 399, 405, 408, 416, 420, 423], "in_feat": 3, "out_feat": 3, "logit": [3, 52, 58, 243, 259, 260, 269, 272, 293, 296, 318, 319, 399], "dist": [3, 10, 259, 260, 269, 410], "distribution_class": [3, 187, 288, 289, 290, 291, 296, 300, 302, 310, 311, 313, 318, 319, 326, 330, 331, 332, 333, 399, 404, 406, 410, 417, 418, 423], "wrap": [3, 5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 45, 54, 55, 58, 59, 64, 85, 119, 120, 123, 127, 128, 132, 133, 138, 141, 143, 144, 145, 146, 147, 148, 152, 153, 155, 157, 210, 220, 222, 230, 248, 251, 255, 274, 285, 288, 289, 290, 295, 297, 305, 328, 342, 399, 404, 405, 406, 407, 411, 414, 417, 418, 424], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 164, 194, 220], "enviorn": [3, 137, 147, 148, 156, 157], "itself": [3, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 159, 166, 220, 328, 335, 406, 409], "ey": 3, "report": [3, 119, 120, 132, 133, 413], "foremost": 3, "callback": [3, 123, 127, 145, 146, 152, 153, 418], "ad": [3, 4, 16, 23, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 102, 123, 127, 145, 146, 152, 153, 201, 210, 212, 220, 231, 264, 265, 273, 274, 310, 312, 313, 315, 320, 327, 330, 333, 342, 405, 407, 408, 410, 417, 421, 423, 424], "tensordictrecord": [3, 397], "videorecord": [3, 11, 362, 397, 406, 413, 414, 417], "csvlogger": [3, 11, 362, 364, 397, 405, 413, 414, 417], "wandblogg": [3, 397, 413], "tensorboardlogg": [3, 391, 397, 413], "tag": [3, 7, 11, 362, 364, 366, 369, 395, 413, 414, 417], "mp4": [3, 362, 364, 366, 414, 417], "video_format": [3, 362, 364, 366, 414, 417], "whc": 3, "cwh": 3, "exp": [3, 266, 309], "al": [3, 24, 126, 128, 180, 191, 232, 408, 424], "pong": [3, 81, 141, 191, 408, 424], "v5": [3, 126, 128, 141, 180, 191, 408, 424], "cach": [3, 50, 52, 70, 81, 83, 84, 85, 87, 88, 89, 90, 100, 107, 123, 127, 145, 146, 152, 153, 166, 176, 179, 193, 212, 216, 227, 373, 420], "grow": 3, "dumpi": 3, "tediou": [3, 409], "workspac": [3, 123, 127, 145, 146, 152, 153], "pixelrendertransform": [3, 397, 417], "stream": [3, 87], "alik": [3, 362], "envcreat": [3, 16, 22, 145, 152, 210, 362, 391, 392, 395, 397, 404, 405, 423, 424], "render_mod": [3, 362, 419], "rgb_arrai": [3, 362, 417, 418, 419], "uncom": [3, 413], "line": [3, 7, 27, 38, 45, 54, 55, 59, 64, 81, 123, 127, 145, 146, 152, 153, 220, 405, 408, 413, 417, 418, 424], "comment": [3, 401, 405, 423], "pixels_record": [3, 362], "close": [3, 16, 127, 140, 187, 310, 312, 327, 330, 362, 404, 405, 409, 416, 417, 419, 423], "mission": 3, "irrespect": [3, 299, 300], "dmcontrol": [3, 123, 127, 145, 146, 152, 153], "jumanji": [3, 123, 127, 132, 133, 145, 146, 152, 153], "special": [3, 73, 75, 397, 404, 407, 408, 424], "framework": [3, 4, 9, 22, 119, 120, 123, 127, 132, 133, 139, 145, 146, 152, 153, 249, 423, 424], "Its": [3, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 218, 220, 299, 348], "success": [3, 81, 82, 83, 84, 85, 86, 87, 88, 89, 170, 211, 247, 313, 335, 405, 412, 414, 419, 421, 423], "foundat": [3, 5, 147, 148, 406, 418], "inspir": [3, 408, 419], "gone": [3, 4, 5, 295], "prefer": [3, 14, 15, 17, 20, 23, 24, 51, 56, 65, 66, 194, 202, 330, 335, 378, 399, 406, 417, 418, 421, 423], "maintain": [3, 5, 9, 33, 419], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 405, 406, 407, 412, 417, 418, 419, 421, 424], "decor": [3, 8, 12, 162, 328, 344, 345, 346, 347, 423], "relev": [3, 58, 344, 345, 346, 347, 348, 371, 408, 419], "gym_backend": [3, 162, 397], "env1": [3, 233, 416], "venv": 3, "python3": [3, 6, 7, 10, 408], "site": [3, 6, 7, 88, 162, 408], "env2": [3, 416], "_env": [3, 6, 126, 424], "classic_control": 3, "pendulumenv": [3, 397, 419], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 135, 159], "side": [3, 4, 424], "v0": [3, 14, 15, 50, 52, 57, 71, 123, 127, 129, 132, 133, 134, 135, 145, 146, 152, 153, 174, 212, 218, 391], "26": [3, 123, 127, 145, 146, 152, 153, 403, 404, 405, 406, 411, 417, 419, 420, 422, 423], "fun": [3, 12, 162, 406, 417, 418], "reveal": 4, "bug": 4, "curv": 4, "exploit": [4, 410], "cv": 4, "flip": [4, 133], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 170, 176, 179, 181, 189, 196, 198, 220, 308, 318, 326, 397, 419], "prescript": 4, "tune": [4, 24, 187, 417, 418, 420], "coeffici": [4, 24, 33, 58, 187, 418], "bonu": [4, 310, 312, 327, 330], "beta": [4, 51, 65, 99, 100, 318, 326, 327, 404, 405, 421, 423], "reduc": [4, 6, 30, 113, 206, 231, 282, 397, 405, 417], "downstream": [4, 400, 404], "formul": [4, 417, 418], "ob": [4, 8, 23, 31, 32, 39, 51, 56, 61, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 102, 107, 108, 113, 123, 127, 145, 146, 152, 153, 164, 166, 176, 177, 179, 189, 203, 209, 225, 227, 237, 238, 239, 240, 261, 262, 263, 297, 304, 311, 313, 314, 319, 326, 331, 333, 335, 336, 344, 345, 346, 347, 405, 408, 416, 417, 419, 421, 423, 424], "rate": [4, 11, 81, 218, 343, 405, 406, 417, 418], "gradient": [4, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 212, 220, 252, 260, 265, 269, 282, 283, 310, 312, 313, 314, 318, 319, 324, 326, 327, 328, 330, 331, 332, 333, 335, 336, 343, 344, 345, 346, 347, 381, 404, 406, 417, 418, 419], "easier": [4, 55, 399, 404, 423], "local": [4, 7, 10, 16, 21, 27, 38, 45, 54, 55, 59, 64, 100, 107, 123, 127, 145, 146, 152, 153, 212, 220, 261, 262, 275, 284, 342, 369, 371, 408, 413, 414, 417, 418], "optima": 4, "product": [4, 9, 249, 250, 253, 254, 393, 394], "sum": [4, 21, 27, 43, 64, 113, 119, 120, 121, 122, 126, 128, 129, 132, 133, 140, 141, 149, 169, 201, 259, 260, 282, 284, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 326, 327, 329, 330, 331, 332, 333, 335, 336, 343, 350, 400, 404, 405, 406, 407, 408, 411, 414, 417, 418, 419, 424], "stat": [4, 189, 218, 385, 395, 405, 406], "w": [4, 102, 143, 144, 170, 172, 175, 197, 209, 249, 273, 274, 364, 405, 407, 421], "yield": [4, 14, 15, 16, 21, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 328, 404, 411], "insight": [4, 408], "auxiliari": [4, 411], "credit": 4, "futur": [4, 23, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 91, 92, 98, 123, 127, 145, 146, 152, 153, 193, 210, 212, 216, 220, 256, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 398], "spars": [4, 407], "intermedi": [4, 14, 15, 54, 64, 169, 233, 251, 255, 293, 404, 408, 420], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 404], "discov": 4, "score": [4, 58, 270, 272], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 51, 54, 56, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 137, 138, 147, 148, 156, 157, 164, 166, 167, 169, 170, 171, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 192, 194, 195, 196, 198, 201, 202, 205, 206, 207, 208, 210, 211, 214, 215, 217, 218, 220, 221, 232, 251, 255, 292, 297, 380, 399, 404, 408, 409, 417, 421], "explicit": [4, 12, 70, 102, 421], "mechan": [4, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 212, 220, 405, 411, 419], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 123, 127, 145, 146, 152, 153, 253, 318, 326, 406, 418], "addition": 4, "timestep": [4, 58, 83, 198, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 417, 418], "realli": 4, "huge": [4, 262, 407], "std": [4, 189, 218, 229, 230, 266, 271, 404, 424], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 403, 407, 409, 411, 412, 413, 414, 415, 416, 420, 421, 422], "estim": [4, 81, 100, 107, 108, 180, 187, 237, 282, 288, 289, 290, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "unseen": 4, "extrins": 4, "wrong": [4, 100, 107], "bonus": 4, "denser": 4, "prior": [4, 59, 278, 322, 418], "freshli": 4, "drop": [4, 106, 108, 227], "meant": [4, 45, 139], "encourag": [4, 145, 272, 404, 405, 421], "measur": [4, 94, 95, 115, 119, 120, 132, 133, 406, 412], "novelti": 4, "revisit": 4, "previous": [4, 406, 424], "diminish": 4, "decreas": [4, 24, 410], "ideal": [4, 189, 419], "down": [4, 14, 15, 16, 17, 400, 407, 409], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "distil": 4, "nois": [4, 219, 265, 273, 274, 286, 331, 335, 336, 377, 395, 404, 417], "exploratori": [4, 310, 312, 327, 330], "misalign": 4, "trade": [4, 410], "unavoid": 4, "divers": [4, 145, 152], "bootstrap": [4, 320, 345, 351, 352, 404, 407], "noisi": [4, 264, 265, 286, 399], "unstabl": [4, 252, 282, 283], "inher": [4, 310, 330], "stochast": [4, 187, 245, 265, 267, 278, 311, 313, 316, 318, 319, 324, 326, 329, 331, 333, 399, 406, 410, 418], "enemi": 4, "pomdp": [4, 421], "loos": [4, 399, 405, 406], "nonexist": 4, "architectur": [4, 241, 411, 417, 418, 423], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 41, 43, 51, 53, 54, 56, 58, 61, 64, 67, 70, 87, 90, 93, 102, 103, 105, 111, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 140, 141, 145, 146, 149, 152, 153, 160, 168, 169, 170, 171, 172, 175, 176, 178, 179, 183, 185, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 206, 208, 209, 211, 218, 234, 235, 242, 244, 249, 253, 256, 259, 260, 261, 262, 269, 276, 280, 291, 301, 302, 316, 363, 364, 376, 377, 378, 380, 381, 399, 404, 406, 407, 408, 416, 417, 418, 424], "lstm": [4, 207, 254, 255, 266, 408], "rel": [4, 102, 207, 242, 281, 404, 405, 417, 418, 421], "tend": 4, "stabl": [4, 9, 10, 142], "compens": 4, "descent": [4, 265], "minimum": [4, 72, 145, 152, 199, 245, 266, 281, 282, 283, 303, 306, 309, 311, 313, 319, 328, 329, 333, 372, 404, 406, 414, 417, 418], "manual": [4, 11, 18, 20, 21, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 127, 128, 404, 407, 421], "deviat": [4, 189, 218, 229, 230, 232, 245, 258, 264, 265, 271, 272, 330, 335, 336, 404, 410, 418], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 100, 107, 166, 249, 250, 253, 254, 408, 409, 410, 411, 412, 413, 414], "stabil": [4, 184, 310, 312, 327, 330, 332], "stage": [4, 404, 419], "never": [4, 14, 15, 17, 28, 72, 100, 412, 423], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 41, 42, 43, 44, 49, 61, 92, 218, 252, 282, 283, 310, 312, 327, 330, 332, 379, 413, 421], "entir": [4, 87, 123, 127, 145, 146, 152, 153, 261, 406, 409, 419, 421], "submit": [4, 126, 167, 398, 423], "system": [4, 5, 92, 406, 417, 418, 419], "adequ": [4, 222, 406, 417, 418], "infeas": 4, "allevi": [4, 399], "prune": 4, "fire": [4, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "illeg": 4, "chess": [4, 143, 144], "grasp": 4, "top": [4, 113, 119, 120, 132, 133, 175, 232, 258, 408, 410], "wherein": 4, "cumul": [4, 201, 206, 232, 350, 406], "q": [4, 9, 123, 127, 145, 146, 152, 153, 237, 238, 239, 240, 243, 244, 246, 275, 276, 284, 290, 293, 297, 298, 311, 313, 314, 315, 317, 318, 319, 320, 325, 326, 331, 333, 335, 336, 342, 397, 404, 411], "flow": [4, 404, 406, 417, 418, 419, 421], "reparameter": [4, 242, 260, 269], "soft": [4, 325, 333, 334, 417], "critic": [4, 8, 288, 294, 310, 312, 313, 314, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 404, 411], "clip": [4, 58, 173, 199, 310, 312, 327, 330, 332, 335, 336, 381, 406, 418, 419], "oppos": [4, 70], "incorrect": 4, "thought": [4, 123, 127, 145, 146, 152, 153], "region": 4, "squash": [4, 407, 423], "tanh": [4, 234, 235, 249, 250, 252, 253, 254, 256, 262, 281, 282, 283, 303, 406, 408, 410, 417, 418, 419, 420, 423], "prob": [4, 259, 260, 269, 272, 406, 418], "rememb": [4, 417], "remap": 4, "origin": [4, 8, 50, 52, 54, 57, 58, 64, 71, 131, 177, 178, 187, 193, 212, 216, 220, 249, 296, 299, 300, 311, 313, 325, 326, 328, 330, 331, 333, 335, 336, 404, 408, 416, 419, 424], "histor": 5, "ceas": 5, "farama": [5, 85, 134, 135, 147, 148, 406, 419], "best": [5, 9, 131, 251, 255, 417, 418, 421, 423], "gymwrapp": [5, 123, 127, 145, 146, 152, 153, 181, 202, 205, 217, 397, 406, 423], "feel": [5, 398, 414, 423], "free": [5, 7, 176, 179, 310, 322, 330, 401, 406, 414, 418, 423], "gladli": 5, "prepar": [6, 37, 84, 406], "conda": [6, 7, 398], "cmake": 6, "activ": [6, 7, 9, 234, 235, 241, 245, 256, 261, 262, 312, 327, 330, 399, 408, 419, 423], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 84, 398], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 129], "y": [6, 7, 54, 56, 64, 142, 246, 261, 285, 404, 418, 421], "facebookresearch": [6, 84, 129], "subdirectori": 6, "verbos": [6, 414], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 78, 123, 127, 145, 146, 152, 153, 195, 204, 220, 328, 417, 418, 423, 424], "command": [6, 7, 10, 153, 406, 417, 418, 419, 424], "readm": [6, 7, 156, 423], "md": [6, 7], "habitatenv": [6, 397], "_has_habitat": 6, "available_env": [6, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 133, 134, 137, 138, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 424], "startswith": [6, 233, 400, 404, 411], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 124, 328, 404], "env_nam": [6, 119, 121, 123, 124, 126, 127, 129, 132, 134, 140, 145, 146, 149, 152, 153, 404, 406, 424], "llvmlite": 6, "config": [6, 7, 193, 216, 236, 241, 271, 385, 386, 387, 389, 392], "var": [6, 7, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 328, 333], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 292, 328], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 328, 333, 408, 421], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 83, 408], "stand": [7, 36, 121, 122, 145, 152, 416, 419, 424], "joint": [7, 405], "contact": [7, 53, 417], "engin": [7, 149, 419], "biomechan": 7, "graphic": 7, "anim": [7, 418], "area": 7, "demand": [7, 413, 424], "fast": [7, 9, 119, 120, 196, 227, 331, 404, 405, 406, 423], "articul": 7, "acquir": [7, 406], "deepmind": [7, 8, 9, 87, 121, 122, 123, 127, 137, 138, 143, 144, 145, 146, 152, 153, 180, 406, 409], "whomev": 7, "licenc": 7, "incorpor": [7, 123, 127, 145, 146, 152, 153, 229, 230, 247, 248, 273, 274, 335, 407, 410, 419], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 398], "tip": [7, 398], "glfw": [7, 404], "osmesa": 7, "egl": 7, "advic": [7, 87, 424], "sudo": [7, 398], "apt": [7, 418], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 288, 289, 290], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 404, 406, 407, 417, 418, 421], "roboti": 7, "html": [7, 14, 15, 140, 142, 143, 144, 408], "wget": 7, "mujoco210": 7, "tar": [7, 84], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 145, 152], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 50, 52, 70, 90], "bin": [7, 244, 272, 293, 399], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 240, 296, 300, 404, 406, 408, 421], "nvidia": [7, 131, 408], "older": [7, 12], "hack": [7, 404], "adatp": 7, "script": [7, 84, 222, 391, 395, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "unnot": [7, 194], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 92, 405, 421], "troubleshoot": 7, "gl": 7, "h": [7, 102, 170, 172, 175, 197, 209, 249, 250, 251, 253, 254, 255, 258, 364, 405, 407, 421], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 43, 44, 49], "directori": [7, 50, 52, 57, 70, 71, 81, 83, 84, 85, 87, 88, 89, 94, 369, 371, 401, 404, 410, 413, 417], "devel": 7, "ubuntu": [7, 131], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 405, 407, 416], "libstdc": 7, "glibcxx_3": 7, "29": [7, 403, 405, 419, 422], "compil": [7, 12, 14, 15, 16, 23, 27, 38, 45, 54, 55, 56, 59, 64, 93, 94, 95, 96, 100, 103, 107, 108, 109, 114, 115, 117, 123, 127, 145, 146, 152, 153, 220, 249, 250, 253, 254, 282], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 123, 127, 145, 146, 152, 153, 188, 210, 212, 220, 313, 333, 400, 424], "job": [7, 18, 19, 20, 22, 56, 65, 66, 102, 421, 423], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 119, 120, 403, 404, 405, 407, 409, 410, 419, 422], "114": [7, 408, 419], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 419], "offscreenopenglcontext": 7, "opengl": [7, 417, 418], "global": [7, 27, 38, 45, 54, 55, 56, 59, 64, 65, 66, 102, 123, 127, 145, 146, 147, 148, 152, 153, 210, 220, 275, 284, 296, 300, 342, 401, 404, 417, 418], "cuda_visible_devic": 7, "id": [7, 23, 58, 71, 100, 102, 107, 108, 123, 126, 127, 145, 146, 152, 153, 154, 155, 273, 274, 313, 331, 367, 371, 412, 421], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 417], "onscreen": 7, "101": [7, 406, 419, 421], "correctli": [7, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "lgl": 7, "libegl": 7, "x11": [7, 418], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 401], "n_training_step": 8, "datapoint": [8, 70, 421], "n_data_per_train": 8, "no_grad": [8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 187, 220, 249, 250, 253, 254, 344, 345, 346, 347, 406, 407, 408, 418], "loss_fn": [8, 407, 411, 412, 423], "zero_grad": [8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 272, 401, 404, 406, 407, 408, 411, 414, 417, 418, 419], "backpropag": [8, 119, 120, 132, 133, 145, 310, 311, 312, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 336, 342, 411, 418, 419], "differenti": [8, 70, 119, 120, 187, 313, 335, 344, 345, 346, 347, 407, 410, 411, 417, 418, 419], "denomin": 8, "artifact": 8, "numer": [8, 56, 127, 218, 252, 282, 283, 287, 292, 293, 296, 297, 298, 299, 300, 379, 406, 421, 424], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 71, 72, 81, 87, 100, 107, 108, 419, 421], "compuat": 8, "fix": [8, 33, 145, 207, 311, 313, 329, 333, 405, 414, 419, 424], "retain_graph": [8, 119, 120], "discuss": [8, 9, 412, 417, 418], "inplac": [8, 27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 220, 404, 408], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 123, 127, 145, 146, 152, 153, 164, 166, 167, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 192, 193, 194, 195, 196, 198, 201, 202, 205, 206, 207, 208, 210, 211, 214, 215, 217, 218, 220, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 261, 262, 263, 264, 266, 267, 268, 271, 273, 274, 275, 277, 278, 280, 284, 285, 291, 293, 295, 296, 298, 299, 300, 303, 304, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 342, 344, 345, 346, 347, 348, 397, 400, 408, 419, 423], "submodul": [8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 159, 207, 220, 251, 255, 307, 328], "param": [8, 27, 38, 45, 54, 55, 58, 59, 64, 123, 127, 139, 145, 146, 152, 153, 167, 174, 176, 177, 181, 187, 195, 196, 202, 205, 211, 220, 242, 244, 261, 262, 263, 281, 291, 296, 299, 302, 328, 338, 341, 344, 345, 346, 347, 348, 404, 408, 414, 417, 418, 419, 420, 423], "grad": [8, 27, 38, 45, 54, 55, 59, 64, 119, 120, 123, 127, 145, 146, 152, 153, 220, 404, 406], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 55, 58, 59, 60, 61, 64, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 147, 148, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 266, 275, 299], "factor": [8, 11, 24, 45, 198, 220, 229, 230, 231, 247, 248, 252, 265, 273, 274, 282, 283, 311, 317, 320, 321, 323, 334, 350, 404, 405, 408, 410, 414, 417, 418, 421, 424], "fit": [8, 12, 55, 189, 207, 400, 401, 404], "bottlneck": 8, "brax": [8, 119, 120, 123, 127, 145, 146, 152, 153, 196, 409, 424], "jax": [8, 12, 119, 120, 132, 133], "improperli": 8, "underli": [8, 123, 124, 127, 145, 146, 152, 153, 328, 409, 411, 413, 419], "tedeiou": 8, "priorit": [8, 51, 65, 99, 100, 313, 314, 315, 317, 318, 319, 326, 331, 333, 335, 336, 404, 405, 412, 423], "amount": [8, 273, 274, 405, 421], "costli": [8, 419], "constitut": [8, 405, 418, 419], "profil": 8, "frequent": [8, 421], "program": [8, 318, 326, 408, 424], "functorch": [8, 10], "incl": 8, "suit": [8, 122, 406, 409, 423, 424], "mujoco_instal": 8, "valueerror": [8, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 106, 191, 408, 423, 424], "idea": [9, 331, 401, 407, 410, 417, 418], "introductori": 9, "intro": [9, 406, 407], "dai": [9, 423], "2022": [9, 10, 419, 423], "spin": [9, 121, 122, 424], "deep": [9, 170, 237, 238, 239, 240, 243, 273, 274, 310, 313, 325, 333, 334, 404, 417], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 410], "summari": [9, 189, 218, 404, 405, 406, 407], "reddit": 9, "reagent": 9, "orient": [9, 89, 424], "baselines3": 9, "tf": 9, "bandit": [9, 142], "tensorflow": [9, 259, 260], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 408, 414], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 423], "grade": 9, "factori": [9, 67, 404], "cherri": 9, "jaxrl": 9, "mbrl": [9, 139, 399], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 419], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 406, 407, 417, 418], "notebook": [10, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "24": [10, 88, 108, 126, 140, 141, 272, 295, 404, 405, 407, 417, 419], "pip3": [10, 404, 406, 407, 417, 418], "url": [10, 129], "org": [10, 14, 15, 24, 51, 84, 85, 87, 89, 99, 100, 119, 120, 121, 122, 129, 132, 133, 137, 138, 140, 141, 142, 149, 156, 157, 170, 193, 214, 231, 236, 237, 238, 239, 240, 241, 244, 245, 246, 253, 258, 259, 260, 265, 267, 268, 272, 273, 274, 275, 277, 278, 284, 293, 310, 311, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 332, 333, 334, 335, 344, 349, 357, 396, 408, 415, 420], "whl": 10, "u": [10, 86, 249, 250, 253, 254, 419], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 406, 417, 418, 419, 421], "power": [11, 405], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 397], "ultim": [11, 252, 282, 283], "ffmpeg": 11, "whatev": [11, 400, 404], "fed": [11, 418, 421], "feed": [11, 193, 216, 328, 399, 404, 417, 418, 421], "suppos": [11, 145, 377, 401, 424], "snippet": [11, 193, 214, 404], "gave": 11, "extrem": [11, 145, 152, 310, 312, 327, 330, 332], "blurri": [11, 408], "stitch": 11, "exp_nam": [11, 364, 365, 366, 369, 370, 371, 391, 405, 413, 414], "my_exp": [11, 413], "pixels_onli": [11, 121, 122, 126, 128, 129, 149, 404, 405, 413, 414, 423, 424], "my_video": [11, 413], "record_env": [11, 413, 414], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 290, 399], "module_nam": [12, 328], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 99, 100, 102, 113, 119, 121, 122, 123, 125, 126, 127, 128, 129, 132, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 166, 170, 180, 186, 187, 193, 197, 205, 206, 210, 212, 214, 216, 217, 218, 220, 226, 228, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 251, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 271, 275, 276, 284, 287, 292, 293, 296, 297, 298, 299, 300, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 339, 342, 343, 344, 345, 346, 347, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 389, 395, 405, 406, 408], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": 12, "vs": [12, 251, 255], "x": [12, 23, 45, 54, 55, 56, 58, 59, 64, 87, 108, 187, 209, 231, 233, 235, 244, 246, 249, 250, 251, 253, 254, 255, 256, 258, 261, 262, 285, 292, 296, 297, 306, 309, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 381, 404, 408, 417, 419, 421, 423], "23": [12, 88, 108, 404, 405, 419, 420], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 88, 119, 120, 127, 132, 133, 254, 309, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 404, 405, 406, 407, 408, 414, 417, 418, 419, 421, 424], "classmethod": [12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 214, 235, 236, 271], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 88, 92, 100, 107, 108, 123, 124, 125, 126, 127, 128, 137, 138, 140, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 187, 207, 210, 212, 217, 218, 220, 234, 235, 236, 237, 238, 239, 240, 241, 246, 256, 271, 296, 300, 313, 333, 335, 368, 369, 377, 381, 386, 387, 393, 394, 395, 399, 404, 405, 406, 408, 421, 423, 424], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 124, 145, 152, 404, 423], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 405], "create_env_kwarg": [14, 15, 16, 17, 21, 124, 140, 145, 152, 210, 404, 424], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 45, 198, 405, 421], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 223, 226, 296, 300, 377], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 50, 52, 57, 71, 145, 152], "num_sub_thread": [14, 15, 17, 145, 152], "set_trunc": [14, 15, 16, 17, 123, 127, 145, 146, 152, 153], "use_buff": [14, 15, 16, 145, 152], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 123, 127, 145, 146, 152, 153], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "datacollector": [14, 15, 16, 17, 45, 300, 330, 406, 412, 421], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 76, 100, 107, 230, 274, 282, 287, 292, 293, 296, 297, 298, 299, 300, 302, 399, 423], "sota": [14, 15, 139, 184, 332, 372, 386, 404, 405, 423], "guard": [14, 15], "doc": [14, 15, 67, 129, 132, 133, 142, 149, 371, 405, 408, 417, 418, 421, 424], "env_mak": [14, 15, 16, 21, 391, 424], "2000": [14, 15, 16, 45, 70, 130, 272, 364, 406, 421], "50": [14, 15, 16, 21, 53, 58, 81, 89, 107, 108, 137, 138, 220, 403, 405, 406, 407, 416, 417, 418, 419, 420, 421, 422], "shutdown": [14, 15, 16, 17, 21, 167, 404, 423], "del": [14, 15, 16, 404, 405, 406, 416, 417, 423, 424], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 41, 42, 43, 44, 49, 50, 52, 53, 54, 57, 58, 62, 65, 67, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 123, 127, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 163, 167, 180, 191, 198, 205, 244, 273, 274, 276, 292, 293, 296, 297, 298, 399, 406, 407, 408, 409, 410, 412, 413, 419, 421, 423, 424], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 54, 64, 169, 285, 292, 295, 297, 407], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 70], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 405], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 81, 87, 100, 107, 108, 231, 418], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 81, 127, 166, 207, 217, 255, 407, 419, 420], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 383, 405], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 64, 69, 71, 72, 73, 74, 75, 76, 90, 119, 120, 121, 122, 123, 126, 127, 128, 132, 133, 140, 141, 143, 144, 145, 146, 149, 152, 153, 154, 155, 174, 176, 179, 187, 193, 207, 211, 212, 214, 216, 218, 220, 299, 417, 424], "span": [14, 15, 16, 17, 18, 19, 20, 21, 87, 100, 107], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 45, 220, 295, 405, 406, 417, 418], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 58, 371, 399, 417, 418, 419], "round": [14, 15, 16, 17, 18, 19, 20, 21, 81], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 45, 54, 55, 59, 64, 85, 123, 127, 145, 146, 152, 153, 220], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 296, 328, 377, 399, 404, 405, 406, 407, 410, 417, 423], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 217], "ratio": [14, 15, 17, 58, 404, 406], "finish": [14, 15, 17, 21, 127, 198, 424], "rest": [14, 15, 17, 399, 406, 407, 417, 419, 423], "earli": [14, 15, 17, 45, 127, 205, 423], "safeti": [14, 15, 17, 139, 145, 152], "harm": [14, 15, 17, 145, 152], "exclus": [14, 15, 77, 78, 81, 87, 100, 107, 108, 167, 181, 183, 249, 251, 253, 255, 259, 260, 292, 293, 297, 298, 334, 335, 336, 344, 345, 346, 347, 348, 371, 395, 399], "add_truncated_kei": [14, 15, 16, 17, 123, 127, 145, 146, 152, 153, 212], "trust": [14, 15, 16, 123, 127, 137, 138, 145, 146, 152, 153, 255], "cudagraphmodul": [14, 15, 16, 123, 127, 145, 146, 152, 153], "behaviour": [14, 15, 16, 54, 64, 408, 423], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 98, 99, 100, 102, 107, 108, 109, 111, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 164, 165, 167, 174, 193, 195, 204, 207, 210, 211, 212, 213, 215, 216, 219, 220, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 246, 247, 248, 251, 252, 255, 256, 257, 258, 261, 262, 263, 269, 273, 274, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 342, 343, 344, 345, 346, 347, 348, 362, 364, 368, 369, 371, 374, 381, 386, 387, 392, 393, 394, 400, 406, 408, 418], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 218, 220, 313, 333, 405], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 123, 127, 145, 146, 152, 153, 212], "increment": [14, 15, 16, 17, 123, 127, 145, 146, 152, 153, 189, 327], "env_fn": [14, 15, 16, 17, 124, 393, 394], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 107, 108, 239, 240, 419], "out_se": [14, 15, 16, 17, 424], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 330], "whole": [16, 27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 70, 123, 127, 145, 146, 152, 153, 210, 212, 220, 296, 313, 333, 372, 404, 406], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 410], "policy_state_dict": 16, "env_state_dict": 16, "mere": [17, 408], "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 68, 381], "respect": [18, 19, 20, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 168, 174, 176, 179, 193, 194, 203, 207, 211, 212, 214, 216, 220, 249, 253, 261, 278, 299, 304, 310, 312, 327, 330, 332, 344, 346, 347, 376, 406, 407, 417, 418], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 398, 405, 406, 408, 410, 413, 416, 421, 423], "fashion": [18, 20, 21, 50, 52, 57, 71, 108], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 81, 84, 85, 87, 88, 89, 123, 127, 145, 146, 152, 153, 183], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 51, 54, 55, 56, 59, 64, 65, 66, 83, 123, 127, 145, 146, 152, 153, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306, 404], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 419], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 154], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 272, 404], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 81, 296, 300], "tensorpiperpcbackendopt": 20, "_td": [21, 124], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 393, 394, 404, 405], "coordin": [21, 175], "init": [21, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 218, 220, 261, 262, 263, 371, 405, 406], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 241, 405, 408, 421], "equat": [21, 54, 71, 87, 127, 218, 273, 274, 309, 312, 334, 406, 409, 419], "exce": [21, 421], "indefinit": [21, 80], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 231, 381, 404, 406, 407], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 335, 411], "jump": [22, 409], "host": [22, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 236, 241, 271, 291], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "_nestedkei": [23, 100, 107, 108], "nestedkei": [23, 25, 26, 28, 29, 30, 34, 35, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 54, 57, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 76, 100, 107, 108, 123, 127, 145, 146, 152, 153, 160, 163, 164, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 213, 214, 218, 220, 221, 227, 228, 229, 230, 233, 244, 247, 248, 273, 274, 276, 291, 295, 300, 315, 342, 362, 364], "as_nest": 23, "durat": [23, 418], "meta": [23, 50, 52, 57, 69, 71, 83, 125, 129, 310, 312, 327, 330, 332, 401, 406, 417, 418, 421], "aren": [23, 206, 407], "eventu": [23, 275, 407, 419], "supersed": 23, "recov": [23, 83, 85, 87, 88, 89, 107, 108, 230, 248, 274, 301, 318, 326, 416], "layout": [23, 408], "to_padded_tensor": 23, "nested_tensor": [23, 126, 128], "stride": [23, 27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 234, 235, 237, 238, 246, 261, 405, 408, 417, 423], "jag": 23, "focu": [23, 404, 405, 406, 408, 410, 411, 412, 417], "team": [23, 417, 418, 423], "cat": [23, 304, 311, 313, 314, 326, 331, 333, 335, 336, 417, 421, 423], "arang": [23, 100, 163, 244, 260, 292, 372, 399, 421], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 66, 72, 81, 87, 107, 132, 133, 143, 144, 153, 225, 295, 421], "data_split": 23, "got": [23, 412], "init_kl_coef": 24, "horizon": [24, 137, 138, 156, 157, 232, 258, 406], "kl": [24, 33, 58, 187, 322, 327], "describ": [24, 69, 171, 211, 221, 281, 282, 315, 367, 400, 404, 406, 417, 418, 419, 424], "ziegler": 24, "et": [24, 232], "relax": [24, 362], "penalti": [24, 58, 324, 327], "strai": [24, 58], "greater": [24, 81, 100, 107, 108, 251, 255, 313, 404, 405], "increas": [24, 92, 208, 273, 274, 417, 418], "pull": [24, 421], "toward": [24, 216], "aggress": 24, "kl_coef": [24, 33, 58], "arxiv": [24, 51, 84, 87, 89, 99, 100, 119, 120, 121, 122, 132, 133, 137, 138, 140, 141, 149, 156, 157, 170, 193, 214, 231, 236, 237, 238, 239, 240, 241, 244, 245, 246, 253, 258, 265, 267, 268, 272, 273, 274, 275, 277, 278, 284, 293, 310, 311, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 335, 344, 349, 357, 420], "pdf": [24, 170, 236, 237, 238, 239, 240, 244, 272, 273, 274, 293, 313, 320, 324, 331, 334, 335, 344, 349, 357], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 417, 418], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 187], "newest": 24, "int8": [25, 123, 136, 147, 148, 168], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 60, 61, 65, 66, 69, 72, 73, 74, 75, 76, 119, 120, 123, 126, 128, 129, 132, 133, 140, 141, 143, 144, 149, 154, 155, 163, 178, 268, 269, 272, 277, 309, 405, 406, 407, 410, 419, 421], "null": [25, 28, 29, 31, 32, 39, 40, 47, 48, 51, 60, 61, 65, 69, 72, 73, 74, 75, 76, 99, 100, 168], "denot": [25, 418], "nmber": 25, "clariti": 25, "rand": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 56, 60, 61, 65, 66, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 119, 120, 132, 133, 139, 143, 144, 154, 155, 164, 167, 176, 179, 195, 221, 232, 258, 296, 310, 311, 313, 314, 315, 317, 318, 319, 326, 328, 330, 331, 333, 335, 336, 408, 419, 423, 424], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 424], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 127, 273, 274, 303, 362, 408, 417], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 58, 60, 61, 69, 72, 73, 74, 75, 76, 99, 123, 127, 128, 145, 146, 152, 153, 180, 249, 250, 253, 254, 404, 417, 421], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 127, 303, 362, 408, 417, 419], "broadcast": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 234, 235, 256, 279, 280], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 59, 60, 61, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 119, 120, 123, 126, 127, 128, 129, 132, 133, 140, 141, 143, 144, 145, 146, 149, 152, 153, 154, 155, 174, 176, 179, 193, 207, 211, 212, 214, 216, 218, 220, 299, 309, 328, 404, 405, 406, 419, 421], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 419, 424], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 404], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 399], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 57, 60, 61, 69, 71, 72, 73, 74, 75, 76, 260, 269, 296, 400], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 55, 60, 61, 69, 72, 73, 74, 75, 76, 178, 229, 230, 253, 273, 274, 287, 292, 293, 296, 297, 298, 299, 300, 371, 399, 423, 424], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 101, 328, 424], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153, 189, 218, 229, 230, 231, 234, 235, 252, 256, 259, 260, 266, 282, 283, 296, 300, 312, 313, 327, 330, 377, 379, 395, 399, 401, 407, 410, 418, 424], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 207, 247, 296, 300, 406, 417, 418], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 64, 69, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 193, 214, 216, 299], "to_categor": [25, 26, 30, 34, 41, 42, 43, 44, 49], "to_categorical_spec": [25, 26, 30, 34, 41, 42, 43, 44, 49], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 123, 127, 145, 146, 152, 153], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76, 211, 212, 266, 281, 395], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "to_one_hot": [25, 26, 30, 34, 41, 42, 43, 44, 49], "hot": [25, 26, 30, 34, 41, 42, 43, 44, 49, 119, 120, 126, 128, 129, 132, 133, 137, 138, 140, 141, 143, 144, 147, 148, 149, 154, 155, 156, 157, 163, 164, 178, 244, 269, 270, 276, 292, 293, 297, 298, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 407], "categ": [25, 26, 30, 34, 43, 44, 296], "categ_sampl": [25, 26, 30, 34, 43, 44, 49], "onehot_sampl": [25, 26, 30, 34, 43, 44], "to_one_hot_spec": [25, 26, 30, 34, 41, 42, 43, 44, 49], "categoricalbox": [25, 26, 30, 34, 43, 44, 49, 146, 410, 417, 418, 424], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 61, 69, 72, 73, 74, 75, 76], "update_mask": [25, 26, 30, 34, 41, 42, 43, 44, 49], "outcom": [25, 26, 30, 34, 41, 42, 43, 44, 49, 242, 281, 328, 417], "disabl": [25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 49, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 212, 220, 252, 283, 362, 404, 417], "unmask": [25, 26, 30, 34, 41, 42, 43, 44, 49], "ts": [25, 26, 30, 34, 41, 42, 43, 44, 49], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 406, 407, 409, 417, 418, 421], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "child": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 405], "fn": [27, 38, 45, 53, 54, 55, 59, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 123, 127, 145, 146, 152, 153, 220, 266, 393, 394, 408], "recurs": [27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 77, 78, 123, 127, 145, 146, 152, 153, 220, 328, 408], "children": [27, 31, 32, 38, 39, 45, 54, 55, 59, 61, 64, 71, 123, 127, 145, 146, 152, 153, 220], "init_weight": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "m": [27, 38, 41, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 178, 220, 233, 300, 405, 419], "fill_": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 405, 407], "net": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 238, 240, 243, 246, 262, 310, 311, 313, 319, 326, 330, 331, 332, 333, 391, 405, 419, 420, 423], "in_featur": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 234, 235, 237, 238, 239, 240, 246, 256, 261, 262, 264, 265, 288, 299, 307, 315, 317, 408, 410, 411, 423], "out_featur": [27, 38, 45, 54, 55, 59, 64, 123, 127, 139, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 232, 234, 235, 237, 238, 239, 240, 245, 246, 251, 255, 256, 258, 261, 262, 264, 265, 288, 292, 299, 307, 315, 317, 399, 404, 407, 408, 410, 411, 414, 423], "bia": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 210, 211, 212, 214, 216, 220, 231, 234, 235, 237, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 262, 264, 265, 266, 273, 274, 299, 306, 308, 309, 313, 328, 333, 400, 404, 405, 406, 407, 408, 418, 423], "requires_grad": [27, 38, 45, 54, 55, 59, 64, 119, 120, 123, 127, 145, 146, 152, 153, 187, 210, 212, 220, 272, 313, 333], "bfloat16": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "datatyp": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 421], "member": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 328, 364], "xdoctest": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 210, 211, 212, 214, 216, 220, 299, 313, 328, 333], "buf": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "20l": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 328], "1l": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 328], "5l": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 328], "__call__": [27, 38, 45, 53, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 300, 401], "doubl": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 176, 177, 179, 193, 207, 211, 212, 214, 216, 220, 299, 315, 320, 325, 331, 334, 342, 404, 405, 406, 407, 424], "eval": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 212, 218, 220, 399, 404, 405, 406], "evalu": [27, 38, 45, 54, 55, 59, 64, 123, 127, 128, 137, 138, 145, 146, 152, 153, 212, 220, 242, 259, 260, 269, 283, 331, 386, 387, 405, 406, 414], "dropout": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 212, 220, 233, 249, 251, 253, 255, 256, 399, 407], "batchnorm": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 212, 220, 231], "comparison": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 212, 220, 328, 404, 405], "similar": [27, 38, 45, 50, 52, 54, 55, 56, 57, 59, 64, 71, 87, 123, 127, 145, 146, 147, 148, 152, 153, 174, 193, 207, 211, 212, 214, 215, 216, 218, 220, 288, 290, 296, 299, 300, 400, 404, 405, 406, 407, 408, 410, 411, 412, 413, 419, 421, 423, 424], "extra_repr": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "recip": [27, 38, 53, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306], "silent": [27, 38, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 263, 266, 267, 268, 271, 273, 274, 277, 278, 280, 285, 291, 293, 295, 298, 303, 306], "get_buff": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "get_submodul": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "qualifi": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "referenc": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "attributeerror": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "resolv": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "someth": [27, 38, 45, 54, 55, 59, 64, 123, 127, 136, 145, 146, 152, 153, 220, 398, 405, 406, 419, 424], "get_extra_st": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 218, 220], "set_extra_st": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 218, 220], "picklabl": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 218, 220], "pickl": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 218, 220], "get_paramet": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "net_b": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "net_c": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "conv": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 234, 235, 405, 408], "conv2d": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 235, 237, 238, 246, 261, 408, 423], "kernel_s": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 234, 235, 237, 238, 246, 261, 267, 405, 423], "diagram": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "degre": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "named_modul": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "half": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 404], "ipu": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "strict": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333, 408], "descend": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "get_swap_module_params_on_convers": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "persist": [27, 36, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 227, 313, 333], "enforc": [27, 38, 45, 54, 55, 59, 64, 106, 123, 127, 145, 146, 152, 153, 210, 212, 220, 301, 313, 333, 419], "preserv": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "missing_kei": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "unexpected_kei": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "namedtupl": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "l": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 249, 253, 343, 406, 419], "idx": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "mtia": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "named_buff": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "remove_dupl": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 328], "prepend": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 328, 408], "running_var": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "named_children": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "conv4": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "conv5": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "memo": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "named_paramet": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 187, 220, 328], "register_backward_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "removablehandl": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "favor": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 406], "register_full_backward_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_buff": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "running_mean": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "alongsid": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 413], "num_featur": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 231], "register_forward_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 244, 276], "with_kwarg": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "always_cal": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_module_forward_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "regardless": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 312, 327, 330], "register_forward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "invok": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "And": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 411], "forward_pr": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_module_forward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "grad_input": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "grad_output": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "subsequ": [27, 38, 45, 54, 55, 59, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89, 123, 127, 145, 146, 152, 153, 166, 220, 407, 417], "technic": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 405, 407, 408, 410], "caller": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_module_full_backward_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_full_backward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "backward_pr": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_module_full_backward_pre_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_load_state_dict_post_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "incompatible_kei": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "thrown": [27, 38, 45, 54, 55, 59, 60, 64, 123, 127, 145, 146, 152, 153, 220, 421], "register_load_state_dict_pre_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "local_metadata": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "error_msg": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "noqa": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "b950": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_modul": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 401], "alia": [27, 38, 45, 51, 54, 55, 56, 59, 64, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 102, 109, 111, 115, 123, 127, 145, 146, 152, 153, 220], "register_paramet": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_state_dict_post_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "register_state_dict_pre_hook": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "keep_var": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "requires_grad_": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 408], "autograd": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333], "freez": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 218, 220], "finetun": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "gan": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "set_submodul": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "overid": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "share_memori": [27, 38, 45, 54, 55, 59, 64, 123, 124, 127, 145, 146, 152, 153, 220, 404], "share_memory_": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220, 423], "destin": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 169, 176, 177, 179, 210, 212, 214, 218, 220, 227, 313, 333, 364], "averag": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 218, 220, 273, 274, 313, 321, 322, 333, 379, 404, 406], "shallow": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 333, 407], "pleas": [27, 38, 45, 54, 55, 59, 64, 68, 85, 123, 126, 127, 145, 146, 147, 148, 152, 153, 167, 170, 208, 210, 212, 220, 261, 262, 263, 313, 333, 398], "detach": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 210, 212, 220, 313, 324, 328, 333, 335, 344, 345, 346, 347, 404], "non_block": [27, 38, 45, 50, 52, 54, 55, 57, 59, 64, 71, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 407], "memory_format": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "channels_last": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "unchang": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 178, 193, 207, 211, 212, 214, 216, 220, 247, 299, 378, 404, 421], "tri": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 413], "pin": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "4d": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "ignore_w": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "1913": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "3420": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "5113": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "2325": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "torch_doctest_cuda1": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "gpu1": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "1914": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "5112": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 419], "2324": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "float16": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 250, 254, 299], "cdoubl": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "3741": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "j": [27, 38, 45, 51, 54, 55, 59, 64, 99, 100, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 401, 411], "2382": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "5593": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299, 419], "4443": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "complex128": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "6122": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "1150": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 174, 193, 207, 211, 212, 214, 216, 220, 299], "to_empti": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "dst_type": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "xpu": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "set_to_non": [27, 38, 45, 54, 55, 59, 64, 123, 127, 145, 146, 152, 153, 220], "upper": [28, 105, 188], "continuousbox": [28, 31, 72, 123, 127, 145, 146, 152, 153, 225, 406, 407, 417, 418, 419, 423, 424], "inst": 30, "descript": [31, 156, 166, 405, 406], "akin": 31, "unnam": 31, "compositespec": [31, 397, 419, 424], "constraint": [31, 139, 282, 406, 417, 418], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 171, 404], "_nodefault": [31, 32, 39, 50, 52, 57, 61, 71], "is_empti": [31, 32, 39, 61, 419], "include_nest": [31, 32, 39, 61], "leaves_onli": [31, 32, 39, 61], "is_leaf": [31, 32, 39, 61], "_compositespecitemsview": [31, 32, 39, 61], "_compositespeckeysview": [31, 32, 39, 61], "reflect": [31, 32, 39, 61, 128, 147, 148, 217, 227, 328, 384, 405, 406, 407, 418], "lock_": [31, 32, 39, 61], "succeed": [31, 32, 39, 61], "selected_kei": [31, 32, 39, 61, 202, 404], "unlock_": [31, 32, 39, 61], "unlock": [31, 32, 39, 50, 52, 57, 61, 71], "_compositespecvaluesview": [31, 32, 39, 61], "multipli": [33, 249, 253, 310, 311, 312, 313, 319, 327, 329, 330, 331, 333, 379, 404, 417], "calcul": [33, 58, 198, 249, 310, 312, 317, 327, 330, 332, 335], "shift_kei": [35, 37, 46, 62], "is_full_kei": [35, 37, 46, 62], "is_ful": [35, 37, 46, 62], "tempfil": [35, 50, 51, 52, 56, 57, 62, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 102, 391, 404, 405, 408, 417, 421], "register_save_hook": [35, 51, 56, 62, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "temporarydirectori": [35, 50, 51, 52, 56, 57, 62, 65, 66, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 404, 405, 408, 417, 421], "tmpdir": [35, 51, 56, 62, 65, 66, 70, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 404, 405, 408, 417], "rb_load": [35, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "register_load_hook": [35, 51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "filesystem": [36, 421], "ted2nest": [37, 397], "stackedcomposit": [39, 397], "nvec": [41, 43], "remove_singleton": 41, "cardin": [41, 43, 244, 276, 292, 293, 298, 406], "ax": [41, 264, 265, 417], "Not": [41, 42, 56, 119, 120, 132, 210, 251, 255], "neither": [41, 42, 43, 44, 87, 154, 419], "use_regist": 43, "mone_hot": [43, 44], "boxlist": [43, 44], "gamma": [45, 198, 220, 258, 310, 311, 313, 314, 315, 317, 319, 320, 321, 323, 326, 328, 330, 331, 332, 333, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 391, 400, 404, 405, 406, 417, 418, 423], "sutton": [45, 400, 417, 418], "1988": 45, "tempor": [45, 251, 255, 258, 345, 346, 351, 352], "44": [45, 404, 405, 407, 419, 420], "discount": [45, 87, 124, 198, 220, 311, 317, 320, 321, 323, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 400, 405, 406, 417, 418], "ahead": [45, 220, 408, 424], "bias": [45, 249, 250, 253, 254, 306, 400, 404], "mitig": 45, "multisteptransform": [45, 397], "99": [45, 198, 218, 258, 323, 338, 343, 350, 391, 404, 405, 406, 408, 411, 414, 417, 418, 419, 423], "nontermin": 45, "original_reward": 45, "newli": [45, 123, 127, 145, 146, 152, 153], "OR": 45, "row": [46, 63, 132, 133], "shae": 47, "nontensordata": [47, 81, 87, 143, 144, 362], "nontensor": [48, 397], "one_hot": [49, 244, 260, 276], "one_hot_sampl": 49, "chosen_data": [50, 90], "rewarddata": [50, 90, 397], "rejected_data": [50, 90], "from_dataset": [50, 52, 90], "dataset_nam": [50, 52, 58, 70, 90, 142], "max_length": [50, 52, 53, 67, 70, 90, 408, 414], "550": [50, 52, 58, 70, 90, 107, 108, 419], "root_dir": [50, 52, 70, 90], "from_disk": [50, 52, 70, 90], "carperai": [50, 52, 58, 70], "openai_summarize_comparison": [50, 52, 70], "sequen": [50, 52], "load_from_disk": [50, 52, 70, 90], "load_dataset": [50, 52, 70, 90], "attention_mask": [50, 52, 53, 57, 58, 67, 70, 90], "92534": 50, "input_id": [50, 52, 53, 57, 58, 67, 70, 90], "end_scor": [50, 57, 58, 90], "sub_data": [50, 52], "from_tensordict": [50, 52, 57, 71], "non_tensordict": [50, 52, 57, 71], "getattr": [50, 52, 57, 71], "tensorclass": [50, 52, 57, 71, 90, 94, 95, 115], "pathlib": [50, 52, 57, 71, 94, 408], "load_memmap": [50, 52, 57, 71], "load_": [50, 52, 57, 71], "load_memmap_": [50, 52, 57, 71], "fetch": [50, 52, 57, 71, 119, 120, 121, 122, 187, 410, 420, 421, 424], "fromkei": [50, 52, 57, 71], "memmap": [50, 52, 57, 71, 94, 145, 152, 218, 364, 366, 378, 421], "saved_td": [50, 52, 57, 71], "td_load": [50, 52, 57, 71], "fake": [50, 52, 57, 71, 123, 127, 145, 146, 152, 153, 404, 405, 408], "_subclass": [50, 52, 57, 71], "faketensormod": [50, 52, 57, 71], "faketensor": [50, 52, 57, 71], "from_flatten": [50, 52, 57, 71], "attemptedli": [50, 52, 57, 71], "copy_exist": [50, 52, 57, 71], "return_earli": [50, 52, 57, 71], "share_non_tensor": [50, 52, 57, 71], "existsok": [50, 52, 57, 71, 94], "mimic": [50, 52, 57, 71, 123, 127, 145, 146, 152, 153], "cross": [50, 52, 57, 71, 232], "tensordictfutur": [50, 52, 57, 71], "serialis": [50, 52, 57, 71], "deepli": [50, 52, 57, 71], "insid": [50, 52, 57, 71, 145, 424], "memmap_": [50, 52, 57, 71, 218], "memmap_lik": [50, 52, 57, 71], "contentless": [50, 52, 57, 71], "1_000_000": [50, 51, 52, 56, 57, 65, 66, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 107, 404, 407, 417], "alloc": [50, 52, 57, 71, 95, 259, 260, 404], "memmap_refresh_": [50, 52, 57, 71], "refresh": [50, 52, 57, 71, 414, 417, 418], "saved_path": [50, 52, 57, 71], "setattr": [50, 52, 57, 71], "tent": [50, 52, 57, 70, 71], "to_tensordict": [50, 52, 57, 71, 407], "retain_non": [50, 52, 57, 71], "discrard": [50, 52, 57, 71], "switch": [50, 52, 57, 71, 252, 283, 362], "alpha": [51, 65, 99, 100, 234, 235, 237, 238, 239, 240, 246, 261, 311, 313, 319, 329, 331, 333, 335, 404, 421, 423], "ep": [51, 65, 99, 100, 189, 218, 231, 273, 274, 312, 334, 379, 404, 405, 407, 408, 411, 414], "1e": [51, 65, 99, 100, 189, 218, 231, 242, 245, 266, 281, 404, 405, 406, 418], "08": [51, 65, 99, 100, 404, 405, 406, 417, 419], "pin_memori": [51, 56, 65, 66, 81, 83, 84, 85, 86, 87, 88, 89, 192, 404, 408, 423], "schaul": [51, 99, 100], "quan": [51, 99, 100], "antonogl": [51, 99, 100], "silver": [51, 99, 100], "2015": [51, 99, 100], "ab": [51, 84, 87, 89, 99, 100, 119, 120, 121, 122, 132, 133, 137, 138, 140, 141, 149, 156, 157, 169, 193, 214, 218, 231, 236, 241, 245, 246, 253, 258, 265, 267, 268, 275, 277, 278, 284, 310, 311, 315, 316, 317, 318, 321, 322, 323, 325, 326, 329, 330, 333, 420], "1511": [51, 99, 100, 246], "05952": [51, 99, 100], "expon": [51, 65, 99, 100], "\u03b1": [51, 65, 99, 100], "delta": [51, 65, 99, 100, 249, 253, 281, 296, 300, 397, 400, 417], "1_000": [51, 56, 65, 66, 417, 421], "merg": [51, 56, 65, 66, 81, 83, 84, 85, 86, 87, 88, 89, 419], "mini": [51, 56, 65, 66, 81, 83, 84, 85, 86, 87, 88, 89, 418], "decid": [51, 56, 65, 66, 417, 423], "meth": [51, 56, 65, 66, 251, 255, 328, 419], "incompat": [51, 56, 65, 66, 332, 421], "drop_last": [51, 56, 65, 66, 106, 108], "notion": [51, 56, 65, 66, 272], "caution": [51, 56, 65, 66, 106, 222, 424], "codebas": [51, 56, 65, 66, 419], "approach": [51, 56, 65, 66, 189, 231, 261, 262, 335, 404, 406, 411, 412, 417, 424], "return_info": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 102, 421], "tensordictprioritizedreplaybuff": [51, 397, 423], "simplifi": [51, 410, 419, 421], "_weight": [51, 65, 99, 100, 421, 423], "update_prior": [51, 99, 100, 378, 401, 405, 421, 423], "36278465": 51, "invert": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 308, 406], "tqdm": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 381, 404, 406, 407, 417, 418, 419], "randomsampl": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 404, 417], "td_error": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 313, 314, 315, 317, 318, 319, 320, 326, 328, 331, 333, 335, 336, 342, 404, 411, 421, 423], "update_tensordict_prior": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 404, 421, 423], "insert_transform": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102, 165, 212], "insert": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 102, 103, 113, 114, 117, 118, 165, 174, 212, 213], "set_sampl": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "set_storag": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "set_writ": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "write_count": [51, 56, 65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89, 102], "prompt_rindex": [52, 53, 58], "promptdatatldr": 52, "116722": 52, "prompt": [53, 58], "return_tensordict": [53, 67], "text": [53, 58, 67, 85, 249, 250, 253, 254, 273, 274, 406], "tensodict": [53, 67], "orign": [53, 54, 64, 67], "valid_sampl": 53, "eough": 53, "toknen": 53, "meet": 53, "criterion": 53, "autotoken": [53, 67, 70], "from_pretrain": [53, 58, 67], "gpt2": [53, 58, 67, 70, 236, 241, 271], "pad_token": [53, 67], "eos_token": 53, "enough": [53, 421], "inde": [53, 178, 406, 408, 419], "index_kei": [54, 64], "hash_kei": 54, "_hash": 54, "hash_modul": [54, 59, 64], "siphash": [54, 55, 64], "hash_to_int": 54, "hashtoint": 54, "query_modul": [54, 64], "key1": [54, 64, 171, 372, 380, 423], "key2": [54, 64, 171, 372, 380, 423], "write_hash": 54, "is_tdmodule_compat": [54, 64], "reset_out_kei": [54, 64], "mod": [54, 64, 187, 233, 251, 255, 295, 303, 407, 408, 414], "select_out_kei": [54, 64, 310, 311, 313, 314, 318, 319, 326, 330, 331, 333, 335, 336, 408], "reset_parameters_recurs": [54, 64, 328], "relu": [54, 64, 139, 232, 241, 258, 266, 309, 408], "old_param": [54, 64], "bork": [54, 64], "dork": [54, 64], "reset_paramet": [54, 64, 263], "from_modul": [54, 64, 244, 299, 302, 423], "rid": [54, 64], "out_keys_sourc": [54, 64], "rubric": [54, 64, 189, 302], "revert": [54, 64, 222, 410, 421], "seq": [54, 64, 233, 249, 251, 253, 255, 295, 407, 408, 414, 416], "z": [54, 64, 250], "n_compon": 55, "dtype_cast": 55, "as_tensor": [55, 59, 408], "init_method": 55, "emb": [55, 407], "sklearn": [55, 86, 142], "byte": [55, 59], "builtin": [55, 59], "pythonhashse": [55, 59], "todo": 55, "storagecheckpointerbas": [56, 109], "roundrobinwrit": [56, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89], "_pytre": [56, 421], "tree_map": [56, 421], "did": [56, 217, 350, 405, 406, 412, 421, 424], "assert0": [56, 421], "ref_model": 58, "reward_model": [58, 305], "max_new_token": 58, "score_clip": 58, "kl_schedul": 58, "klcontrollerbas": 58, "num_step": [58, 408], "causal": 58, "sentenc": 58, "frozen": [58, 187, 218], "gpt2rewardmodel": 58, "get_dataload": [58, 397], "promptdata": [58, 397], "gpt2lmheadmodel": 58, "dl": 58, "block_siz": [58, 90], "tensorclass_typ": [58, 90], "openai_summarize_tldr": 58, "config_class": 58, "model_path": 58, "rollout_from_model": 58, "rollout_from_data": 58, "600": [58, 413, 419, 421], "reward_kl": [58, 187], "reward_raw": 58, "sample_log_prob": [58, 288, 289, 290, 296, 300, 302, 330, 406, 410, 418, 423], "create_rollout_td": 58, "log_prob": [58, 242, 259, 260, 269, 272, 283, 300, 313], "log_ratio": 58, "replic": [58, 400], "rindex": 58, "eo": 58, "generation_config": 58, "generationconfig": 58, "ti": [58, 353, 354, 355, 356, 358, 359, 360, 361, 405], "log_probs_gen": 58, "logprobs_of_label": 58, "hash_a": 59, "4669941682990263259": 59, "3778166555168484291": 59, "9122128731510687521": 59, "hash_b": 59, "heterogen": [60, 61, 136, 147, 148, 222, 261, 262, 404, 405], "220": [62, 419], "resembl": 64, "querymodul": 64, "tensormap": 64, "collat": [64, 102], "subtyp": 64, "embedding_storag": 64, "tensor_dict_storag": 64, "new_index": 64, "key3": 64, "retrieve_valu": 64, "from_tensordict_pair": 64, "storage_constructor": 64, "write_fn": 64, "consolid": [64, 78, 95], "tensordictstorag": 64, "thumb": [64, 145, 406], "lazydynamicstorag": 64, "fixedstorag": 64, "randomprojectionhash": 64, "priority_kei": [65, 66, 82, 99, 313, 315, 318, 319, 320, 326, 328, 331, 333, 335, 336, 342, 421, 423], "reduct": [65, 99, 100, 113, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 327, 329, 330, 331, 332, 333, 335, 336], "prioritizedreplaybuff": [65, 397, 423], "min": [65, 99, 100, 113, 273, 274, 283, 311, 312, 313, 319, 329, 331, 333, 405, 406, 408], "median": [65, 99, 100, 113, 132, 133, 163, 296, 300], "include_info": [65, 66, 81, 82, 83, 84, 85, 86, 87, 88, 89], "huggingfac": [67, 84, 89, 294], "co": [67, 180, 419], "pad_trunc": 67, "am": 67, "me": 67, "reassur": 67, "ok": 67, "tensor_spec": [69, 164, 221, 228, 318, 319, 330, 332], "primarili": [69, 194, 410], "dataclass": [69, 328], "educ": 69, "guess": 69, "knowledg": [69, 123, 127, 145, 146, 152, 153, 411, 413], "tokenizer_fn": 70, "tensordicttoken": [70, 397], "pre_tokenization_hook": 70, "valid_s": 70, "tokenizer_class": 70, "tokenizer_model_nam": 70, "tokein": 70, "elementwis": 70, "vocabulari": 70, "loader": [70, 406], "185068": 70, "dataset_to_tensordict": 70, "data_dir": 70, "batch_dim": [70, 123, 127, 145, 146, 152, 153, 395, 408], "valid_mask_kei": 70, "conver": 70, "batch_dimens": 70, "filder": 70, "from_dict": 70, "data_memmap": 70, "node_id": 71, "subtre": 71, "get_vertex_by_hash": 71, "get_vertex_by_id": 71, "is_termin": 71, "num_children": 71, "num_vertic": 71, "count_repeat": 71, "uniqu": [71, 107, 108, 137, 138, 170, 180, 206, 207, 208, 210, 295, 371, 412, 421], "key_typ": 71, "liter": 71, "recurse_through_entri": 78, "recurse_through_stack": 78, "dataset_id": [81, 83, 84, 85, 87, 88, 89], "num_proc": 81, "slice_len": [81, 87, 100, 107, 108, 364], "strict_len": 81, "arari": 81, "2600": 81, "million": [81, 407], "consequ": [81, 92, 253, 412], "50x10": 81, "available_dataset": [81, 82, 83, 84, 85, 86, 87, 88, 89, 107, 108], "ataridqn": 81, "immutabledatasetwrit": [81, 82, 83, 84, 85, 86, 87, 88, 89], "shorter": [81, 87, 100, 107, 108], "Be": [81, 87, 100, 107, 108], "game_nam": 81, "krull": 81, "1d": [81, 99, 100, 107, 108, 113], "cheapli": 81, "invalid_rang": 81, "999998": 81, "999999": 81, "add_count": 81, "84": [81, 197, 404, 405, 407, 408, 419], "valueestim": [81, 310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 338, 342, 397, 400, 404, 417, 418], "convolut": [81, 234, 235, 237, 238, 261, 279, 408, 410], "2657628": 81, "2657629": 81, "2657630": 81, "2657631": 81, "2657632": 81, "2657633": 81, "2657634": 81, "2657635": 81, "2657636": 81, "2657637": 81, "2657638": 81, "2657639": 81, "2657640": 81, "2657641": 81, "2657642": 81, "2657643": 81, "2657644": 81, "2657645": 81, "2657646": 81, "2657647": 81, "2657648": 81, "2657649": 81, "2657650": 81, "2657651": 81, "2657652": 81, "2657653": 81, "2657654": 81, "2657655": 81, "2657656": 81, "2657657": 81, "2657658": 81, "2657659": 81, "2657660": 81, "2657661": 81, "2657662": 81, "2657663": 81, "2657664": 81, "2657665": 81, "2657666": 81, "2657667": 81, "2657668": 81, "2657669": 81, "2657670": 81, "2657671": 81, "2657672": 81, "2657673": 81, "2657674": 81, "2657675": 81, "2657676": 81, "2657677": 81, "2657678": 81, "2657679": 81, "2657680": 81, "2657681": 81, "2657682": 81, "2657683": 81, "2657684": 81, "2657685": 81, "2657686": 81, "2657687": 81, "2657688": 81, "2657689": 81, "2657690": 81, "2657691": 81, "1995687": 81, "1995688": 81, "1995689": 81, "1995690": 81, "1995691": 81, "1995692": 81, "1995693": 81, "1995694": 81, "1995695": 81, "1995696": 81, "1995697": 81, "1995698": 81, "1995699": 81, "1995700": 81, "1995701": 81, "1995702": 81, "1995703": 81, "1995704": 81, "1995705": 81, "1995706": 81, "1995707": 81, "1995708": 81, "1995709": 81, "1995710": 81, "1995711": 81, "1995712": 81, "1995713": 81, "1995714": 81, "1995715": 81, "1995716": 81, "1995717": 81, "1995718": 81, "1995719": 81, "1995720": 81, "1995721": 81, "1995722": 81, "1995723": 81, "1995724": 81, "1995725": 81, "1995726": 81, "1995727": 81, "1995728": 81, "1995729": 81, "1995730": 81, "1995731": 81, "1995732": 81, "1995733": 81, "1995734": 81, "1995735": 81, "1995736": 81, "1995737": 81, "1995738": 81, "1995739": 81, "1995740": 81, "1995741": 81, "1995742": 81, "1995743": 81, "1995744": 81, "1995745": 81, "1995746": 81, "1995747": 81, "1995748": 81, "1995749": 81, "1995750": 81, "left": [81, 83, 87, 100, 107, 167, 174, 175, 176, 177, 181, 187, 193, 195, 196, 202, 205, 208, 211, 214, 216, 220, 247, 261, 405, 406, 408, 412, 413], "untouch": [81, 87, 167, 174, 176, 177, 181, 187, 195, 196, 202, 205, 211, 220], "_max_run": 81, "dataset_asterix": 81, "asterix": 81, "dataset_pong": 81, "sample_from_al": [81, 102, 105], "buffer_id": [81, 105, 111], "hidden": [81, 145, 152, 169, 237, 245, 249, 250, 251, 253, 254, 255, 267, 268, 277, 278, 288, 289, 290, 291, 299, 302, 312, 327, 330, 399, 407, 416, 423], "data_path": [81, 82, 83, 84, 85, 86, 87, 88, 89], "data_path_root": [81, 82, 83, 84, 85, 86, 87, 88, 89], "delet": [81, 82, 83, 84, 85, 86, 87, 88, 89, 171, 371], "chunksiz": [81, 82, 83, 84, 85, 86, 87, 88, 89], "pool": [81, 82, 83, 84, 85, 86, 87, 88, 89, 208], "max_tasks_per_child": [81, 82, 83, 84, 85, 86, 87, 88, 89], "worker_thread": [81, 82, 83, 84, 85, 86, 87, 88, 89], "index_with_gener": [81, 82, 83, 84, 85, 86, 87, 88, 89], "pbar": [81, 82, 83, 84, 85, 86, 87, 88, 89, 404, 406, 407, 417, 418, 419], "num_fram": [81, 82, 83, 84, 85, 86, 87, 88, 89], "unitari": [81, 82, 83, 84, 85, 86, 87, 88, 89, 419], "minariexperiencereplai": [81, 82, 83, 84, 86, 87, 88, 89], "1000000": [81, 82, 83, 84, 85, 86, 87, 88, 89], "distance_from_origin": [81, 82, 83, 84, 85, 86, 87, 88, 89], "forward_reward": [81, 82, 83, 84, 85, 86, 87, 88, 89], "qpo": [81, 82, 83, 84, 85, 86, 87, 88, 89], "qvel": [81, 82, 83, 84, 85, 86, 87, 88, 89], "reward_ctrl": [81, 82, 83, 84, 85, 86, 87, 88, 89, 127, 145], "reward_forward": [81, 82, 83, 84, 85, 86, 87, 88, 89], "reward_surv": [81, 82, 83, 84, 85, 86, 87, 88, 89], "x_posit": [81, 82, 83, 84, 85, 86, 87, 88, 89, 127, 145], "x_veloc": [81, 82, 83, 84, 85, 86, 87, 88, 89, 127, 145], "y_posit": [81, 82, 83, 84, 85, 86, 87, 88, 89], "y_veloc": [81, 82, 83, 84, 85, 86, 87, 88, 89], "achieved_go": [81, 82, 83, 84, 85, 86, 87, 88, 89], "desired_go": [81, 82, 83, 84, 85, 86, 87, 88, 89], "27": [81, 82, 83, 84, 85, 86, 87, 88, 89, 119, 120, 145, 152, 405, 406, 417, 418, 419], "_collate_id": [81, 82, 83, 84, 85, 86, 87, 88, 89], "0x120e21dc0": [81, 82, 83, 84, 85, 86, 87, 88, 89], "cattensor": [81, 82, 83, 84, 85, 86, 87, 88, 89, 123, 127, 145, 146, 152, 153, 404, 416, 419, 424], "cat_tensor": [81, 82, 83, 84, 85, 86, 87, 88, 89], "cat_next_tensor": [81, 82, 83, 84, 85, 86, 87, 88, 89], "new_storag": [81, 82, 83, 84, 85, 86, 87, 88, 89], "31": [81, 82, 83, 84, 85, 86, 87, 88, 89, 132, 133, 405, 407, 419, 420], "full_storag": [81, 82, 83, 84, 85, 86, 87, 88, 89], "0x168406fc0": [81, 82, 83, 84, 85, 86, 87, 88, 89], "from_env": 83, "use_truncated_as_don": 83, "direct_download": 83, "terminate_on_end": 83, "env_kwarg": [83, 88, 89, 167, 393, 394, 404], "reconstruct": [83, 107, 108, 322, 404, 424], "get_dataset": 83, "qlearning_dataset": 83, "fewer": [83, 100, 107], "unexpectedli": 83, "traj_split": 83, "observationnorm": [83, 218, 395, 404, 405, 406, 407, 423], "maze2d": 83, "umaz": 83, "loc": [83, 123, 127, 145, 146, 152, 153, 187, 189, 200, 218, 252, 266, 282, 283, 288, 289, 290, 296, 300, 302, 310, 311, 313, 326, 330, 331, 332, 333, 385, 395, 399, 404, 405, 406, 407, 410, 418, 423], "gen": 84, "dgrl": 84, "accompani": [84, 167, 205], "gap": 84, "2312": 84, "05742": 84, "gen_dgrl": 84, "procgen": 84, "bigfish": 84, "bossfight": 84, "1m_e": 84, "1m_": 84, "comma": [84, 408], "npy": 84, "extract": [84, 166, 294, 404, 406, 423], "mmap": [84, 88, 89], "minut": [84, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "internet": [84, 89], "connect": [84, 89, 154], "minari": 85, "websit": [85, 87], "currenrtli": 85, "minari_data": 85, "door": 85, "torchrl_logg": [85, 414], "28": [85, 261, 405, 419, 420], "door_body_po": 85, "dua": 86, "graff": 86, "2017": 86, "uci": 86, "archiv": 86, "ic": 86, "edu": 86, "ml": [86, 154, 155], "adult_num": [86, 142], "adult_onehot": [86, 142], "mushroom_num": [86, 142], "mushroom_onehot": [86, 142], "covertyp": [86, 142], "shuttl": [86, 142], "magic": [86, 142, 408, 409], "shuffl": [87, 106, 108, 418], "embodi": [87, 420], "institut": 87, "demonstr": [87, 406, 408, 412, 417, 418, 419, 421, 424], "527": [87, 419], "skill": 87, "160266": 87, "googl": [87, 88, 119, 120, 137, 138, 143, 144, 231, 406, 407, 417, 418], "open_x_embodi": 87, "2310": [87, 149], "08864": 87, "language_instruct": 87, "get_non_tensor": 87, "nor": [87, 154], "insuffici": 87, "chosen": [87, 156, 157, 206, 207, 275, 276, 284, 298, 364, 399, 413], "openx": 87, "__will": 87, "change__": 87, "randomli": [87, 106, 153, 188, 189, 207, 247, 296, 300, 410, 417, 418, 419, 421], "crop": [87, 172, 194, 364], "modal": [87, 404], "cmu_stretch": [87, 364], "is_init": [87, 89, 169, 186, 251, 255, 273, 274, 295, 307, 407, 408], "language_embed": 87, "512": [87, 246, 405, 408, 419], "lift": 87, "green": [87, 417], "garbag": 87, "lid": 87, "roboset": 88, "h5": [88, 89, 92], "roboh": [88, 149], "concis": [88, 411], "75": [88, 404, 405, 407, 419, 420, 421], "totensor": 89, "image_s": 89, "v": [89, 218, 249, 250, 253, 254, 288, 318, 326, 333, 404, 405], "npz": 89, "2206": [89, 140, 141], "04779": [89, 311, 317], "vd4rl": 89, "squar": [89, 172, 175, 252, 282, 283, 364], "rectangular": [89, 234, 235], "walker_walk": 89, "64px": 89, "height": [89, 172, 175, 197], "veloc": [89, 121, 122, 123, 127, 145, 146, 152, 153, 170, 417, 418, 419, 424], "infinit": [90, 137, 138, 156, 157, 412, 421], "block": [90, 93, 118, 399, 407, 408, 417], "pairwisedataset": [90, 397], "256": [90, 137, 138, 241, 405, 406, 408, 417, 418, 419], "checkpoint_fil": 92, "h5_kwarg": 92, "iff": 92, "suffix": [92, 377], "h5py": 92, "create_dataset": 92, "temporarili": [92, 222, 412, 421], "immut": [93, 123, 127, 145, 152, 196, 212], "piec": [93, 103, 114, 117, 118, 404, 405, 406, 413, 417, 418, 419, 421], "scratch_dir": [94, 404, 421], "sent": [94, 95, 115, 218], "mistak": [94, 95, 115], "overewritten": 94, "tensorstoragecheckpoint": 94, "main_ckpt_dir": 94, "rb_memmap": 94, "10_000_000": 94, "myclass": [94, 95, 115], "foo": [94, 95, 115, 291, 421, 424], "bar": [94, 95, 115, 291, 374, 375, 377, 381, 401, 405], "attach": [94, 95, 96, 109, 111, 115, 405], "entiti": [94, 95, 96, 109, 111, 115], "expans": [95, 328], "zero_": [95, 115, 225], "unlimit": 96, "liststoag": 97, "max_capac": [99, 100, 404, 421], "max_priority_within_buff": [99, 100], "data_0": 99, "data_1": 99, "smoothen": 99, "tdrb": 99, "pack": [99, 249, 253, 406, 409, 424], "nd": [99, 100], "sum_tre": [99, 100], "min_tre": [99, 100], "end_kei": [100, 107, 108], "cache_valu": [100, 107, 108], "closer": [100, 423], "readili": [100, 107, 108], "conjunct": [100, 107, 108, 405], "Will": [100, 107, 140, 364], "buffer0": [100, 107], "immutablewrit": [100, 107], "buffer1": [100, 107], "other_sampl": [100, 107], "short": [100, 107, 108, 119, 120, 132, 133, 145, 222, 253, 254, 405, 406, 409, 410, 418, 421], "tolist": 100, "120110917137936e": 100, "06": [100, 242, 281, 403, 404, 405, 406, 417, 419, 420, 422], "storageensembl": [102, 105], "samplerensembl": 102, "writerensembl": [102, 111], "num_buffer_sampl": [102, 105], "ensembl": [102, 105, 111, 112, 118, 299, 331], "forbidden": 102, "0x13a2ef430": 102, "0x13a2f9310": 102, "interpol": [102, 197, 405, 407, 408], "interpolationmod": [102, 407], "bilinear": [102, 197, 407], "0x13a2f9220": 102, "0x13a2f9f70": 102, "0x13a2d9b50": 102, "0x13a2f95b0": 102, "0x128648260": 102, "roundrobin": [103, 114], "incomplet": [106, 108], "fresh": 106, "haven": [106, 420], "remain": [106, 169, 177, 178, 187, 206, 265, 411], "draw": [106, 247], "slicesamplerwithoutreplac": [107, 421], "320": [107, 108, 121, 122, 405, 419, 424], "700": [107, 108], "dataid": [107, 108], "__len__": 109, "rank_kei": 113, "rank": [113, 232], "samplerwithoutreplac": [113, 406, 418, 421], "get_insert_index": 113, "convers": [119, 120, 132, 133, 400], "2106": [119, 120, 316, 335], "13281": [119, 120], "categorical_action_encod": [119, 120, 123, 126, 127, 128, 129, 132, 133, 140, 141, 145, 146, 149, 152, 153, 408], "frame_skip": [119, 120, 121, 122, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 149, 184, 374, 377, 384, 401, 404, 405, 406, 423], "allow_done_after_reset": [119, 120, 121, 122, 123, 126, 128, 129, 132, 133, 140, 141, 143, 144, 149, 154, 155], "toler": [119, 120, 121, 122, 126, 128, 129, 132, 133, 140, 141, 143, 144, 149, 154, 155, 242, 281], "availalb": [119, 120, 132, 133], "is_avail": [119, 120, 404, 405, 406, 407, 417, 418, 420], "els": [119, 120, 167, 249, 250, 253, 254, 267, 399, 401, 404, 405, 406, 407, 417, 418, 419, 420], "ant": [119, 120, 123, 127, 130, 145, 146, 152, 153, 420], "87": [119, 120, 405, 419, 420], "acrobot": [119, 120, 121, 122, 424], "advant": [119, 120, 132, 133], "timer": [119, 120, 132, 133], "timeit": [119, 120, 132, 133, 408], "310": [119, 120, 419], "ms": [119, 120, 132, 133], "268": [119, 120, 419], "433": [119, 120, 419], "80": [119, 120, 404, 405, 406, 417, 418, 419, 420], "213": [119, 120, 419], "8605": [119, 120], "pipelineenv": 120, "get_environ": 120, "dm_control": [121, 122, 404, 416, 424], "2006": [121, 122, 311, 317, 419], "12983": [121, 122], "task_nam": [121, 123, 127, 145, 146, 152, 153], "cheetah": [121, 122, 123, 127, 145, 146, 152, 153, 364, 404, 424], "240": [121, 122, 419, 423, 424], "swingup": [121, 122, 424], "swingup_spars": [121, 122, 424], "ball_in_cup": [121, 122, 424], "catch": [121, 122, 408, 424], "balance_spars": [121, 122, 424], "three_pol": [121, 122, 424], "two_pol": [121, 122, 424], "finger": [121, 122, 424], "turn_easi": [121, 122, 424], "turn_hard": [121, 122, 424], "fish": [121, 122, 424], "upright": [121, 122, 405, 424], "swim": [121, 122, 424], "hopper": [121, 122, 424], "hop": [121, 122, 424], "humanoid": [121, 122, 145, 152, 416, 424], "walk": [121, 122, 145, 152, 405, 416, 424], "run_pure_st": [121, 122, 424], "bring_bal": [121, 122, 424], "bring_peg": [121, 122, 424], "insert_bal": [121, 122, 424], "insert_peg": [121, 122, 424], "point_mass": [121, 122, 424], "reacher": [121, 122, 424], "swimmer": [121, 122, 424], "swimmer6": [121, 122, 424], "swimmer15": [121, 122, 424], "walker": [121, 122, 424], "dog": [121, 122, 424], "trot": [121, 122, 424], "humanoid_cmu": [121, 122, 424], "lqr": [121, 122, 424], "lqr_2_1": [121, 122, 424], "lqr_6_2": [121, 122, 424], "quadrup": [121, 122, 424], "escap": [121, 122, 424], "stacker": [121, 122, 424], "stack_2": [121, 122, 408, 424], "stack_4": [121, 122, 408, 424], "deviceless": 123, "run_type_check": [123, 139], "counterenv": 123, "discretebox": [123, 127, 145, 146, 152, 153], "sort": [123, 127, 145, 146, 152, 153, 171, 273, 274], "another_act": [123, 127, 145, 146, 152, 153], "mutabl": [123, 127, 145, 146, 152, 153], "_callabletransform": [123, 127, 145, 146, 152, 153], "batch_lock": [123, 125, 127, 145, 152, 167, 207, 212, 419], "done_keys_group": [123, 127, 145, 146, 152, 153], "outer": [123, 127, 145, 146, 152, 153, 401, 404, 405, 424], "another_don": [123, 127, 145, 146, 152, 153], "empty_cach": [123, 127, 145, 146, 152, 153, 212], "fake_tensordict": [123, 127, 145, 146, 152, 153, 405, 408], "braxenv": [123, 127, 145, 146, 152, 153, 196, 397, 409], "envnam": [123, 127, 145, 146, 152, 153], "pipeline_st": [123, 127, 145, 146, 152, 153], "attibut": [123, 127, 145, 146, 152, 153], "maybe_reset": [123, 127, 145, 146, 152, 153], "speak": [123, 127, 145, 146, 152, 153, 404], "rand_act": [123, 127, 136, 145, 146, 147, 148, 152, 153, 167, 409], "register_gym": [123, 127, 145, 146, 152, 153, 409], "entry_point": [123, 127, 145, 146, 152, 153], "info_kei": [123, 127, 145, 146, 152, 153], "reward_threshold": [123, 127, 145, 146, 152, 153], "nondeterminist": [123, 127, 145, 146, 152, 153], "max_episode_step": [123, 126, 127, 128, 145, 146, 152, 153], "order_enforc": [123, 127, 145, 146, 152, 153], "autoreset": [123, 127, 145, 146, 152, 153], "disable_env_check": [123, 126, 127, 140, 141, 145, 146, 152, 153], "apply_api_compat": [123, 127, 145, 146, 152, 153], "nasium": [123, 127, 145, 146, 152, 153], "scope": [123, 127, 145, 146, 152, 153, 408, 424], "dmcontrolenv": [123, 127, 145, 146, 152, 153, 364, 397, 404, 409, 416, 424], "dmc": [123, 127, 145, 146, 152, 153], "removeemptyspec": [123, 127, 145, 146, 152, 153], "threshold": [123, 127, 145, 146, 152, 153, 247, 311, 312, 406], "learnt": [123, 127, 145, 146, 152, 153, 391], "checker": [123, 126, 127, 140, 141, 145, 146, 152, 153], "stepapicompat": [123, 127, 145, 146, 152, 153], "deem": [123, 127, 137, 138, 145, 146, 152, 153, 156, 157], "envgym": [123, 127, 145, 146, 152, 153], "0855": [123, 127, 145, 146, 152, 153], "0215": [123, 127, 145, 146, 152, 153], "0881": [123, 127, 145, 146, 152, 153], "0412": [123, 127, 145, 146, 152, 153], "1101": [123, 127, 145, 146, 152, 153], "0080": [123, 127, 145, 146, 152, 153], "0254": [123, 127, 145, 146, 152, 153], "0424": [123, 127, 145, 146, 152, 153], "9609e": [123, 127, 145, 146, 152, 153], "9776e": [123, 127, 145, 146, 152, 153], "04": [123, 127, 131, 145, 146, 152, 153, 404, 405, 406, 417, 419, 420], "6347e": [123, 127, 145, 146, 152, 153], "3842e": [123, 127, 145, 146, 152, 153], "5338e": [123, 127, 145, 146, 152, 153], "3064e": [123, 127, 145, 146, 152, 153], "0381e": [123, 127, 145, 146, 152, 153], "6656e": [123, 127, 145, 146, 152, 153], "05": [123, 127, 145, 146, 152, 153, 231, 404, 405, 407, 417, 418, 419, 420], "0204e": [123, 127, 145, 146, 152, 153], "action_spac": [123, 127, 145, 146, 152, 153, 180, 244, 276, 292, 293, 297, 298, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 407, 408, 410, 414], "0833": [123, 127, 145, 146, 152, 153], "0275": [123, 127, 145, 146, 152, 153], "0612": [123, 127, 145, 146, 152, 153], "0770": [123, 127, 145, 146, 152, 153, 419], "1256": [123, 127, 145, 146, 152, 153, 419], "0082": [123, 127, 145, 146, 152, 153], "0186": [123, 127, 145, 146, 152, 153], "0476": [123, 127, 145, 146, 152, 153], "2221": [123, 127, 145, 146, 152, 153], "2256": [123, 127, 145, 146, 152, 153], "5930": [123, 127, 145, 146, 152, 153], "6937": [123, 127, 145, 146, 152, 153], "5865": [123, 127, 145, 146, 152, 153], "5479": [123, 127, 145, 146, 152, 153], "0187": [123, 127, 145, 146, 152, 153], "6825": [123, 127, 145, 146, 152, 153, 419], "5224": [123, 127, 145, 146, 152, 153], "0018": [123, 127, 145, 146, 152, 153, 419], "1005": [123, 127, 145, 146, 152, 153], "0335": [123, 127, 145, 146, 152, 153], "0268": [123, 127, 145, 146, 152, 153, 419], "0133": [123, 127, 145, 146, 152, 153], "0627": [123, 127, 145, 146, 152, 153], "0074": [123, 127, 145, 146, 152, 153, 419], "0488": [123, 127, 145, 146, 152, 153, 419], "0353": [123, 127, 145, 146, 152, 153], "0075": [123, 127, 145, 146, 152, 153, 419], "0069": [123, 127, 145, 146, 152, 153, 419], "0098": [123, 127, 145, 146, 152, 153, 419], "0058": [123, 127, 145, 146, 152, 153, 419], "0033": [123, 127, 145, 146, 152, 153, 419], "0157": [123, 127, 145, 146, 152, 153], "0004": [123, 127, 145, 146, 152, 153, 407, 419], "0381": [123, 127, 145, 146, 152, 153], "0452": [123, 127, 145, 146, 152, 153], "11355747": [123, 127, 145, 146, 152, 153], "04257728": [123, 127, 145, 146, 152, 153], "00408397": [123, 127, 145, 146, 152, 153], "04155852": [123, 127, 145, 146, 152, 153], "0389733": [123, 127, 145, 146, 152, 153], "01409826": [123, 127, 145, 146, 152, 153], "0978704": [123, 127, 145, 146, 152, 153], "08808327": [123, 127, 145, 146, 152, 153], "03970837": [123, 127, 145, 146, 152, 153], "00535434": [123, 127, 145, 146, 152, 153], "02353762": [123, 127, 145, 146, 152, 153], "05116226": [123, 127, 145, 146, 152, 153], "02788907": [123, 127, 145, 146, 152, 153], "06848346": [123, 127, 145, 146, 152, 153], "05154399": [123, 127, 145, 146, 152, 153], "0371798": [123, 127, 145, 146, 152, 153], "05128025": [123, 127, 145, 146, 152, 153], "dydact": [123, 127, 145, 146, 152, 153], "gym_env": [123, 127, 145, 146, 152, 153, 423], "reset_kei": [123, 127, 145, 146, 152, 153, 170, 201, 206, 207, 208, 417], "multitask": [123, 127, 145, 146, 152, 153], "multiag": [123, 127, 136, 145, 146, 147, 148, 152, 153, 228, 262, 275, 284, 342], "another_reward": [123, 127, 145, 146, 152, 153], "auto_cast_to_devic": [123, 127, 145, 146, 152, 153, 418], "break_when_all_don": [123, 127, 133, 145, 146, 152, 153], "soon": [123, 127, 145, 146, 147, 148, 152, 153], "__sort": [123, 127, 145, 146, 152, 153], "as__": [123, 127, 145, 146, 152, 153], "argmaxmodul": [123, 127, 145, 146, 152, 153], "argmax": [123, 127, 145, 146, 152, 153, 244, 276, 293, 298, 408, 410], "n_ob": [123, 127, 145, 146, 152, 153, 187, 295, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 411], "n_act": [123, 127, 145, 146, 152, 153, 187, 310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 411], "ourselv": [123, 127, 145, 146, 152, 153, 406, 424], "emul": [123, 127, 145, 146, 152, 153], "epoch": [123, 127, 145, 146, 152, 153, 381, 406, 417, 418], "input_td": [123, 127, 145, 146, 152, 153], "rollout_td": [123, 127, 145, 146, 152, 153], "single_action_spec": [123, 127, 145, 146, 152, 153], "had": [123, 127, 145, 146, 152, 153, 410, 412], "single_done_spec": [123, 127, 145, 146, 152, 153], "single_full_action_spec": [123, 127, 145, 146, 152, 153], "single_full_done_spec": [123, 127, 145, 146, 152, 153], "single_full_observation_spec": [123, 127, 145, 146, 152, 153], "single_full_reward_spec": [123, 127, 145, 146, 152, 153], "single_full_state_spec": [123, 127, 145, 146, 152, 153], "single_input_spec": [123, 127, 145, 146, 152, 153], "single_observation_spec": [123, 127, 145, 146, 152, 153], "single_output_spec": [123, 127, 145, 146, 152, 153], "single_reward_spec": [123, 127, 145, 146, 152, 153], "single_state_spec": [123, 127, 145, 146, 152, 153], "state_kei": [123, 127, 145, 146, 152, 153], "prevail": [123, 127, 145, 146, 152, 153, 171, 201, 228], "creator": [124, 386, 387, 393, 394, 395], "substitut": [124, 206, 218, 410], "vecnorm": [124, 395], "env_creat": [124, 404], "test_env1": 124, "observation_count": [124, 424], "test_env2": 124, "sleep": [124, 424], "ps": 124, "p1": 124, "p2": 124, "9934": 124, "make_vari": [124, 210], "variant": [124, 210, 399], "trajcount": 124, "env_creator_pendulum": 124, "env_creator_cartpol": 124, "env_str": 125, "device_map": 125, "accross": [126, 128], "registri": [126, 154], "asyncvectorenv": 126, "involv": [126, 128, 129, 137, 138, 149, 167, 210, 251, 255, 409, 411], "pixel_observ": [126, 128, 129, 149], "pixelobservationwrapp": [126, 128, 129, 149], "adventur": [126, 128, 424], "airraid": [126, 128, 424], "alien": [126, 128, 424], "time_limit": 126, "timelimit": [126, 137, 138, 156, 157], "default_info_dict_read": [126, 127, 128, 145], "reader": [126, 127, 128, 145, 405], "set_info_dict_read": [126, 127, 128, 145, 409], "info_dict": [126, 127, 128, 145], "auto_register_info_dict": [126, 127, 128, 145], "multibinari": [126, 128], "multidiscret": [126, 128], "rag": [126, 128], "gym_conversion_exampl": [126, 128], "info_dict_read": [127, 145], "ignore_priv": 127, "baseinfodictread": 127, "tensordictprim": [127, 145, 233, 251, 255, 307, 399, 407], "succe": [127, 145], "underscor": 127, "primer": [127, 207, 233, 251, 255, 307, 407], "halfcheetah": [127, 145, 163, 197, 404, 423], "reward_run": [127, 145], "read_act": 127, "read_don": 127, "nonsens": 127, "fallback": 127, "broken": [127, 222], "read_ob": 127, "dictat": [127, 296, 300, 330, 404, 419], "read_reward": 127, "hoc": [127, 145, 410], "dict_read": 127, "my_info_kei": 127, "some_env": 127, "vecenv": 128, "vectorenv": 128, "convert_actions_to_numpi": 128, "isaaclab": 128, "secur": 129, "habitat3": 129, "ai": [129, 420], "habitatrenderpick": 129, "isaacgym": [130, 131], "isaacgymwrapp": [130, 397], "isaacgymenv": [131, 397], "webpag": 131, "isaac": 131, "essenc": [131, 409], "instadeepai": [132, 133], "2306": [132, 133], "09884": [132, 133], "snake": [132, 133], "grid": [132, 133, 364], "bodi": [132, 133], "body_st": [132, 133], "fruit_posit": [132, 133], "col": [132, 133], "head_posit": [132, 133], "tail": [132, 133], "game2048": [132, 133], "maze": [132, 133], "cleaner": [132, 133], "cvrp": [132, 133], "multicvrp": [132, 133], "minesweep": [132, 133], "rubikscub": [132, 133], "knapsack": [132, 133], "sudoku": [132, 133], "tsp": [132, 133], "connector": [132, 133], "v2": [132, 133, 150, 151, 339, 353, 354, 355, 356, 358, 359, 360, 361, 407], "mmst": [132, 133], "graphcolor": [132, 133], "partli": [132, 133], "scrambl": [132, 133], "robotwarehous": [132, 133], "tetri": [132, 133], "binpack": [132, 133], "jobshop": [132, 133], "0x1fca91910": 132, "122": [132, 133, 408, 419, 424], "0x1ff9baee0": 132, "134": [132, 133, 419], "0x1ff9ba7c0": 132, "172": [132, 133, 419], "jit": 133, "eager": 133, "tdreset": [133, 220, 416], "whichev": 133, "drastic": [133, 145, 421], "mo": [134, 135], "minecart": [134, 135], "mo_gym": 135, "qualnam": 136, "leverag": [136, 147, 148, 404, 418, 424], "neural": [136, 147, 148, 234, 235, 270, 272, 279, 299, 399, 405, 406, 407, 410, 417, 418, 419, 424], "group_map": [136, 137, 138, 143, 144, 147, 148, 154, 155, 156, 157, 158, 417], "constructiuon": [136, 147, 148], "premad": [136, 137, 138, 147, 148, 156, 157, 342], "all_in_one_group": [136, 143, 144, 158], "agent_0": [136, 147, 148, 154, 158, 417], "agent_1": [136, 147, 148, 154, 158], "agent_2": [136, 147, 148, 154, 158], "agent_3": [136, 154], "one_group_per_ag": [136, 147, 148], "meltingpot": [137, 138], "2211": [137, 138], "13746": [137, 138], "melt": [137, 138], "pot": [137, 138], "novel": [137, 138, 411], "social": [137, 138], "familiar": [137, 138, 405, 418, 424], "unfamiliar": [137, 138], "broad": [137, 138], "cooper": [137, 138, 417, 418], "decept": [137, 138], "reciproc": [137, 138], "stubborn": [137, 138], "substrat": [137, 138], "ml_collect": 137, "config_dict": 137, "configdict": 137, "categorical_act": [137, 138, 143, 144, 147, 148, 150, 151, 154, 155, 156, 157], "marlgroupmaptyp": [137, 138, 143, 144, 147, 148, 154, 155, 156, 157, 158, 397, 417], "agent_nam": [137, 138, 156, 157, 158], "agent_names_to_indices_map": [137, 138, 156, 157], "env_torchrl": [137, 138], "commons_harvest__open": [137, 138], "rgb": [137, 138], "144": [137, 138, 419], "192": [137, 138, 405, 419], "collective_reward": [137, 138], "ready_to_shoot": [137, 138], "88": [137, 138, 150, 151, 404, 405, 419, 420, 421], "substrate_config": 138, "get_config": 138, "mp_env": 138, "build_from_config": 138, "default_player_rol": 138, "environn": 139, "mymbenv": [139, 232, 258], "world_model": [139, 232, 258, 322], "hidden_observ": [139, 232, 258], "mlp": [139, 232, 234, 235, 237, 238, 239, 240, 246, 251, 255, 258, 262, 263, 288, 292, 307, 315, 317, 399, 405, 408, 410, 411, 414, 416, 420, 423], "worldmodelwrapp": [139, 232, 258], "activation_class": [139, 232, 234, 235, 237, 238, 239, 240, 245, 246, 256, 258, 261, 262, 405, 410, 417, 418, 423], "activate_last_lay": [139, 232, 240, 256, 258], "sail": [140, 141], "sg": [140, 141], "10558": [140, 141], "readthedoc": [140, 143, 144], "en": [140, 143, 144], "python_interfac": 140, "envpoolmixin": 141, "env_bas": 141, "task_id": 141, "env_typ": 141, "gym_reset_return_info": 141, "envpool_env": 141, "www": [142, 259, 260], "fetch_openml": 142, "106": [142, 419], "openspiel": [143, 144], "open_spiel": [143, 144], "game_str": 143, "return_st": [143, 144, 147, 148], "4672": [143, 144, 405, 419], "current_play": [143, 144], "fen": [143, 144], "rnbqkbnr": [143, 144], "pppppppp": [143, 144], "kqkq": [143, 144], "674": [143, 419], "2048": [143, 144, 405, 420], "add_nois": [143, 144], "amazon": [143, 144], "backgammon": [143, 144], "restor": [143, 144], "td_restor": [143, 144], "pyspiel": 144, "load_gam": 144, "new_initial_st": 144, "3009": 144, "my_env_fun": [145, 152], "custom_attribute_list": [145, 152], "custom_attribut": [145, 152], "custom_method_list": [145, 152], "custom_method": [145, 152], "deploi": [145, 152, 167, 408], "slight": [145, 152, 405], "share_individual_td": [145, 152], "shared_memori": [145, 152], "policy_proof": [145, 152], "ll": [145, 152, 249, 250, 253, 254, 404, 405, 406, 407, 409, 410, 411, 412, 414, 418, 424], "serial_for_singl": [145, 152, 405], "circular": [145, 152, 404], "list_of_kwarg": [145, 152], "com_veloc": [145, 152], "head_height": [145, 152], "joint_angl": [145, 152], "torso_vert": [145, 152], "stringent": [145, 406, 417, 418], "inter": 145, "penv": [145, 210], "env_fix": 145, "influenc": 145, "myenv": [145, 167, 176, 179], "pipe": 145, "update_kwarg": [145, 152], "th": [146, 183, 213, 249, 253, 419], "thdot": [146, 419], "max_spe": [146, 419], "max_torqu": [146, 419], "gen_param": [146, 419], "gravit": [146, 419], "torqu": [146, 419], "pettingzoo": [147, 148, 417, 418], "pet": [147, 148], "zoo": [147, 148], "__": [147, 148], "aecenv": [147, 148], "use_mask": [147, 148], "dead": [147, 148], "done_on_ani": [147, 148, 417], "compulsori": [147, 148], "adversary_0": [147, 148, 417], "adversari": [147, 148, 324, 417], "sisl": 147, "multiwalker_v9": 147, "aec": [147, 148], "n_piston": [147, 148], "pistonball_v6": [147, 148], "piston": [147, 148], "piston_0": [147, 148], "piston_1": [147, 148], "piston_20": [147, 148], "tictactoe_v3": [147, 148], "player": [147, 148, 153], "player_1": [147, 148], "player_2": [147, 148], "butterfli": 148, "parallel_env": [148, 404, 423, 424], "vikashplu": 149, "wiki": 149, "06828": 149, "from_depth": 149, "smacv2": [150, 151], "starcraft": [150, 151], "challeng": [150, 151, 409, 419, 420], "10gen_terran": [150, 151], "10gen_zerg": [150, 151], "10gen_protoss": [150, 151], "3m": [150, 151], "8m": [150, 151, 420], "25m": [150, 151], "5m_vs_6m": [150, 151], "8m_vs_9m": [150, 151], "10m_vs_11m": [150, 151], "27m_vs_30m": [150, 151], "mmm": [150, 151], "mmm2": [150, 151], "2s3z": [150, 151], "3s5z": [150, 151], "3s5z_vs_3s6z": [150, 151], "3s_vs_3z": [150, 151], "3s_vs_4z": [150, 151], "3s_vs_5z": [150, 151], "1c3s5z": [150, 151], "2m_vs_1z": [150, 151], "corridor": [150, 151], "6h_vs_8z": [150, 151], "2s_vs_1sc": [150, 151], "so_many_banel": [150, 151], "bane_vs_ban": [150, 151], "2c_vs_64zg": [150, 151], "old": [150, 151, 327, 424], "smac": [150, 151], "map_nam": [150, 151], "176": [150, 151, 419], "battle_won": [150, 151], "dead_al": [150, 151], "dead_enemi": [150, 151], "episode_limit": [150, 151], "322": [150, 151, 403, 406, 418, 419, 422], "Or": [150, 151, 261], "procedur": [150, 151], "distribution_config": [150, 151], "n_unit": [150, 151], "n_enemi": [150, 151], "team_gen": [150, 151], "dist_typ": [150, 151], "weighted_team": [150, 151], "unit_typ": [150, 151], "marin": [150, 151], "maraud": [150, 151], "medivac": [150, 151], "exception_unit_typ": [150, 151], "start_posit": [150, 151], "surrounded_and_reflect": [150, 151], "map_x": [150, 151], "map_i": [150, 151], "capability_config": [150, 151], "131": [150, 151, 419], "starcraft2env": 151, "tic": 153, "tac": 153, "toe": 153, "single_play": 153, "player1": 153, "desired_batch_s": 153, "board": 153, "player0": 153, "uniti": [154, 155], "technolog": [154, 155], "llapi": [154, 155], "mlagents_env": [154, 155], "unityenviron": [154, 155], "file_nam": 154, "registered_nam": 154, "localhost": 154, "3dball": 154, "group_0": 154, "vectorsensor_size8": 154, "continuous_act": [154, 156, 157, 362, 417, 418], "agent_10": 154, "agent_11": 154, "agent_4": 154, "agent_5": 154, "agent_6": 154, "agent_7": 154, "agent_8": 154, "agent_9": 154, "group_reward": 154, "proroklab": [156, 157], "vectorizedmultiagentsimul": [156, 157], "2207": [156, 157], "03530": [156, 157], "basescenario": 156, "perfrom": [156, 157], "defaultt": 156, "repositiori": 156, "sparsiti": 156, "unbatched_action_spec": [156, 157, 418], "unbatched_observation_spec": [156, 157], "unbatched_reward_spec": [156, 157], "het_spec": [156, 157], "het_specs_map": [156, 157], "flock": [156, 157, 362], "agent_collision_rew": [156, 157], "agent_distance_rew": [156, 157], "ca": 158, "environment4": 158, "get_group_map": 158, "sumbodul": 159, "model_bas": [160, 161, 232, 258], "decod": [160, 267], "model_based_env": [160, 321], "dreamerenv": [160, 321, 397], "model_based_env_ev": 160, "num_interv": 163, "out_action_kei": 163, "samplingstrategi": 163, "optino": 163, "intenum": 163, "interv": [163, 363, 364, 373, 383, 405, 419], "action_disc": 163, "transform_input_spec": [163, 167, 174, 176, 177, 178, 189, 191, 195, 196, 201, 205, 206, 207, 211, 213, 215, 220], "masker": 164, "maskedenv": 164, "ones_lik": 164, "scatter": 164, "fill_float": 166, "fill_int": 166, "fill_bool": 166, "someenvclass": 166, "autoresetenv": 166, "argumet": 166, "fooenv": 166, "sign": [166, 203, 344, 417], "envtyp": 166, "reshape_fn": [167, 408], "reset_func": 167, "environmt": 167, "request": [167, 194], "tensordict_batch_s": 167, "tensordict_reset": [167, 419], "transform_env_batch_s": [167, 174, 211, 220], "transform_output_spec": [167, 174, 176, 177, 181, 187, 195, 196, 202, 205, 211, 220], "transform_observation_spec": [167, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 183, 185, 186, 187, 189, 191, 195, 196, 197, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 220, 419], "transform_reward_spec": [167, 168, 173, 174, 176, 177, 181, 187, 195, 196, 199, 200, 201, 202, 203, 205, 211, 213, 220], "transformfull_done_spec": [167, 174, 176, 177, 181, 187, 195, 196, 202, 205, 211, 220], "biner": 168, "burn_in": 169, "burn": 169, "date": [169, 367], "retur": 169, "burnt": 169, "gru_modul": [169, 251, 307], "input_s": [169, 249, 250, 251, 253, 254, 255, 307, 407, 408], "hidden_s": [169, 249, 250, 251, 253, 254, 255, 307, 407, 408], "set_recurrent_mod": [169, 251, 255, 407, 408], "burn_in_transform": 169, "gru": [169, 207, 250, 251, 307, 408], "num_lay": [169, 249, 251, 253, 255, 267, 268, 307, 408], "86": [169, 405, 408, 419, 420], "3008": [169, 405], "0344": 169, "padding_valu": [170, 259, 260], "as_invers": 170, "movement": 170, "1312": [170, 405], "5602": 170, "unsqueezetransform": [170, 419, 421], "consumpt": [170, 397], "followin": 170, "pictur": 170, "pixels_trsf": [170, 421], "grayscal": [170, 405, 407, 408, 421, 424], "data_exclud": [170, 421], "del_kei": [171, 214, 416, 419], "unsqueeze_if_oor": 171, "observation_posit": 171, "observation_veloc": 171, "center": [172, 272, 364], "width": [172, 175, 197], "scalar": [173, 199, 229, 230, 238, 240, 247, 248, 264, 265, 273, 274, 306, 310, 311, 312, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 342, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 399, 405, 408, 411, 419], "permit": [173, 183, 213, 310, 312, 327, 330, 332], "rewardsc": [174, 212, 404, 405, 407], "rewardclip": 174, "transformed_env": [174, 211, 212, 409], "transform_env_devic": [174, 177, 211, 220], "dtype_in": 176, "dtype_out": 176, "scan": [176, 179, 301, 302], "resp": [176, 179], "not_transform": [176, 179], "constructedw": [176, 179], "orig_devic": 177, "unspecifi": 177, "transform_done_spec": [177, 211, 220], "num_actions_effect": 178, "max_act": 178, "include_forward": 178, "num_act": [178, 235, 319, 408, 410], "action_out": 178, "_call": [178, 183, 419], "eol_kei": 180, "lives_kei": 180, "eol_attribut": 180, "unwrap": 180, "breakout": 180, "210": [180, 191, 408, 419, 424], "160": [180, 191, 405, 408, 419, 424], "eol_transform": 180, "eol": 180, "dqnloss": [180, 310, 311, 313, 314, 317, 319, 320, 321, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 342, 388, 397, 400, 405, 407, 408, 414], "register_kei": 180, "loss_or_advantag": 180, "lossmodul": [180, 381, 390, 391, 397, 400], "valueestimatorbas": [180, 328, 397], "excluded_kei": 181, "finit": [182, 272, 410, 421], "first_dim": 183, "last_dim": 183, "allow_positive_dim": [183, 213], "frameskip": 183, "repeatedli": [184, 406, 418], "init_kei": [186, 295], "tracker": 186, "pi_curr": 187, "pi_0": 187, "overfit": 187, "probabilist": [187, 223, 296, 310, 330, 397, 406, 423], "get_dist": [187, 300, 301], "normalparamextractor": [187, 288, 289, 290, 296, 302, 310, 311, 313, 319, 326, 330, 331, 332, 333, 335, 336, 399, 406, 410, 418, 423], "probabilisticactor": [187, 288, 289, 290, 291, 310, 311, 313, 316, 318, 319, 326, 329, 330, 331, 332, 333, 335, 336, 399, 404, 406, 410, 417, 418], "tanhnorm": [187, 288, 289, 290, 296, 302, 310, 311, 313, 326, 330, 331, 332, 333, 335, 336, 397, 406, 418, 423], "return_log_prob": [187, 288, 289, 290, 296, 300, 302, 332, 399, 406, 410, 417, 418, 423], "apply_": 187, "copy_": [187, 404], "formulat": 187, "diverg": [187, 251, 255, 296, 300, 322, 327], "noop": [188, 423], "trial": 188, "standard_norm": [189, 200, 218, 404, 405, 407], "affin": [189, 200, 218], "layer": [189, 218, 231, 234, 235, 237, 238, 243, 245, 249, 250, 251, 253, 254, 255, 256, 261, 262, 264, 265, 267, 268, 279, 280, 286, 294, 303, 399, 405, 406, 407, 408, 410, 417, 420], "epsilon": [189, 229, 230, 247, 248, 273, 274, 334, 379, 405, 406, 407, 410], "recover": 189, "set_default_tensor_typ": 189, "doubletensor": 189, "isclos": 189, "next_ob": [189, 344, 345, 346, 347, 423], "init_stat": [189, 404, 405, 406, 407], "3752e": 189, "5087e": 189, "9294e": 189, "9636": 189, "5608": 189, "6408": 189, "num_it": [189, 405, 406], "reduce_dim": [189, 404, 405, 406, 407], "cat_dim": [189, 404, 405, 406, 407], "keep_dim": [189, 405, 407], "statist": [189, 218, 231, 332, 395, 404, 405, 406, 424], "gaussian": [189, 207, 229, 230, 232, 258, 264, 265, 271, 406, 408, 417], "empir": [189, 232, 258, 296, 300, 404, 406, 418], "3d": [189, 234], "reorder": 191, "in_keys_in": [191, 213], "channel": [191, 209, 261, 267, 268, 405], "r3m": [193, 420], "resnet": [193, 214, 216], "visual": [193, 214, 216, 364, 406, 417, 419], "embed": [193, 214, 215, 216, 237, 275, 287, 288, 289, 290, 299, 304, 420], "ego4d": [193, 214, 216], "univers": [193, 214, 216, 409], "suraj": [193, 214], "nair": [193, 214], "aravind": [193, 214], "rajeswaran": [193, 214], "vikash": [193, 214, 216], "kumar": [193, 214, 216], "chelsea": [193, 214], "finn": [193, 214], "abhinav": [193, 214], "gupta": [193, 214], "2203": [193, 214, 258, 420], "12601": [193, 214, 420], "_init": [193, 214, 404], "resnet50": [193, 216, 420], "model_nam": [193, 214, 216, 367], "resnet34": 193, "resnet18": 193, "r3m_vec": [193, 420], "stack_imag": [193, 216], "tread": [193, 216], "separet": [193, 216], "hub": [193, 216, 409, 420], "resnet50_weight": [193, 216], "imagenet1k_v1": [193, 216], "download_path": [193, 216], "tensor_pixels_kei": [193, 216], "sub_seq_len": 194, "sample_dim": [194, 404], "hesit": 194, "robust": [194, 231], "mix": [194, 275, 284, 342, 404, 417, 418], "improp": 194, "dummyenv": 195, "another_oth": 195, "other_reward": 195, "create_copi": 196, "stuff": [196, 412], "newnam": 196, "r2g": 198, "reward_to_go": 198, "bernoulli_": 198, "9010": 198, "9404": [198, 350], "9701": [198, 350], "9900": [198, 350], "0000": [198, 208, 247, 248, 272, 303, 350, 406, 407, 419, 423], "crash": 198, "clamp_min": 199, "clamp_max": 199, "clip_min": 199, "clip_max": 199, "episode_": 201, "reward1": 201, "reward2": 201, "episode_reward": [201, 417, 418], "keep_reward": 202, "keep_don": 202, "logical_or": 203, "step_count_kei": 205, "update_don": 205, "disjunct": 205, "recognis": 205, "target_return": 206, "subtract": 206, "default_valu": [207, 307, 407], "unit": [207, 232, 245, 249, 250, 267, 268, 277, 278, 406], "transfomedenv": 207, "mykei": 207, "__unless": 207, "exists__": 207, "get_primers_from_modul": [207, 233, 251, 255, 397], "10th": 208, "0216": 208, "1149": 208, "1990": 208, "2749": 208, "3281": 208, "9290": 208, "3702": 208, "8978": 208, "from_int": 209, "shape_toler": 209, "permuat": 209, "ri": 209, "traj_count": 210, "counter": [210, 295, 374, 401, 408], "traj": 210, "countingenv": 210, "mocking_class": 210, "make_env_c0": 210, "make_env_c1": 210, "principl": 211, "cattransform": 211, "notabl": 211, "rewardsum": [211, 220, 227, 417, 418], "smoothli": [212, 231], "add_1": [212, 408], "cache_spec": 212, "set_missing_toler": 212, "keyerror": [212, 424], "danger": 213, "vc1": 214, "vc1_vec": 214, "untrain": 214, "make_noload_model": 214, "vip": [215, 216, 420], "implicit": [216, 318, 326, 421], "jason": 216, "ma": 216, "shagun": 216, "sodhani": 216, "dinesh": 216, "jayaraman": 216, "osbert": 216, "bastani": 216, "ami": 216, "zhang": 216, "vip_vec": 216, "final_nam": 217, "sb3": 217, "terminal_obs_read": 217, "truli": [217, 423], "till": 217, "shared_td": 218, "decai": [218, 229, 230, 247, 334, 379, 404, 405, 407, 424], "9999": [218, 419], "0001": [218, 245, 266, 406, 419], "to_observation_norm": 218, "frozen_copi": 218, "race": 218, "underflow": [218, 379], "build_td_for_shared_vecnorm": 218, "memmori": 218, "queue": [218, 421, 423], "td_share": 218, "unfreez": 218, "train_env": 218, "eval_env": 218, "state_dim": [219, 236, 241, 271, 277, 278, 291], "action_dim": [219, 236, 237, 239, 241, 271, 291, 404, 416], "gsde": [219, 331, 395], "gsdemodul": 219, "rb_transform": 220, "resist": 220, "insensit": 220, "sensit": [220, 405], "_orig": 220, "95": [220, 258, 338, 404, 405, 406, 407, 419], "window": [220, 295, 417, 421, 423], "edit": [220, 412], "cube": 221, "check_dtyp": 222, "discrep": [222, 310, 312, 314, 315, 327, 330, 332, 342], "rng": [222, 419], "unsqueeze_null_shap": 225, "probabilistictdmodul": [226, 256, 296, 300, 343, 377], "next_tensordict": 227, "keep_oth": [227, 419], "exclude_reward": 227, "exclude_don": 227, "exclude_act": 227, "next_": 227, "funtion": 227, "_stepmdp": 227, "write_full_fals": 228, "_terminated_or_trunc": 228, "po": [229, 230, 248], "sigma_init": [229, 230, 417], "sigma_end": [229, 230, 417], "annealing_num_step": [229, 230, 247, 248, 273, 274, 404, 405, 407, 408, 410, 414, 417], "sigma": [229, 230, 249, 250, 252, 253, 254, 273, 274, 282, 283, 406, 417], "captur": [229, 230, 247, 248, 273, 274, 408], "omiss": [229, 230, 247, 248, 273, 274], "ommit": [229, 230, 247, 248, 273, 274], "momentum": 231, "max_r": 231, "max_d": 231, "warmup_step": 231, "batchrenorm": 231, "1702": 231, "03275": 231, "corenet": 231, "enhanc": 231, "warmup": 231, "phase": [231, 418, 421], "outlier": 231, "period": 231, "varianc": [231, 232, 252, 266, 282, 283, 400, 404, 406, 418], "warm": 231, "renorm": 231, "entropi": [232, 310, 311, 312, 313, 318, 319, 326, 327, 329, 330, 331, 333, 335, 336, 418], "botev": 232, "2013": 232, "cem": 232, "plan": [232, 257, 258], "k": [232, 233, 249, 250, 253, 254], "maximis": [232, 237, 239, 258, 405, 406, 418], "modelbasedenv": [232, 258], "planning_horizon": [232, 258], "optim_step": [232, 258, 405, 408, 414], "mpc": [232, 257, 258], "num_candid": [232, 258], "candid": [232, 258], "top_k": [232, 258], "modelbasedenvbas": [232, 257, 258, 397], "safemodul": [232, 257, 288, 290, 300, 310, 311, 313, 318, 319, 326, 330, 331, 332, 333, 335, 336, 386, 387, 391, 397, 423], "consistentdropout": 233, "input_shap": 233, "batcht": 233, "make_tensordict_prim": [233, 251, 255, 407], "input_dtyp": 233, "pase": 233, "get_default_dtyp": [233, 379], "mask_6127171760": 233, "env0": [233, 424], "num_cel": [234, 235, 237, 238, 239, 240, 245, 246, 251, 255, 256, 261, 262, 288, 307, 405, 406, 407, 408, 410, 411, 414, 417, 418, 423], "elu": [234, 235, 237, 238, 239, 240, 245, 246, 261, 405, 423], "activation_kwarg": [234, 235, 256], "norm_class": [234, 235, 237, 238, 256], "norm_kwarg": [234, 235, 256], "bias_last_lay": [234, 235, 237, 238, 239, 240, 246, 256], "aggregator_class": [234, 235, 237, 238, 405, 407, 423], "squashdim": [234, 235, 237, 246, 261, 423], "aggregator_kwarg": [234, 235, 237, 238, 405, 407], "squeeze_output": [234, 235, 237, 238, 405, 407], "cell": [234, 235, 249, 250, 251, 253, 254, 255, 256, 261, 262, 406, 408, 409, 410, 411, 412, 413, 414], "kernel": [234, 235, 246, 261], "cnet": [234, 235], "conv3d": 234, "lazyconv2d": [235, 237, 238, 246, 261, 423], "default_atari_dqn": [235, 408], "semin": 235, "transformer_config": [236, 271, 291], "dtconfig": [236, 241, 271], "2202": [236, 241, 329], "05607": [236, 241, 329], "decisiontransform": [236, 271], "return_to_go": [236, 241, 271, 291], "conv_net_kwarg": [237, 238], "mlp_net_kwarg": [237, 238, 239], "use_avg_pool": [237, 238], "WITH": [237, 238, 239, 240, 273, 274, 334], "1509": [237, 238, 239, 240, 258, 273, 274, 315, 325, 334, 419], "02971": [237, 238, 239, 240, 273, 274, 334], "reus": [237, 371], "convnet": [237, 238, 246, 261, 407, 408, 410, 423], "ndims_in": [237, 408], "avgpool": [237, 238], "lazylinear": [237, 238, 239, 240, 246, 256, 399, 406, 410, 419, 420, 423], "2304": [237, 405], "adaptiveavgpool2d": [238, 405, 407], "output_s": [238, 405, 407], "squeeze2dlay": 238, "400": [239, 240, 413, 418, 419, 421], "mlp_net_kwargs_net1": 240, "mlp_net_kwargs_net2": 240, "mlp1": 240, "mlp2": 240, "decion": 241, "desdescrib": 241, "n_embd": 241, "n_layer": [241, 249, 253], "n_head": 241, "n_inner": 241, "n_posit": 241, "resid_pdrop": 241, "attn_pdrop": 241, "gpt2config": 241, "atol": [242, 281], "rtol": [242, 281], "batch_shap": [242, 281], "event_shap": [242, 281], "absolut": [242, 281, 404], "densiti": [242, 259, 260, 269, 283], "mass": [242, 259, 260, 269, 283, 419], "rsampl": [242, 260, 269, 300], "sample_shap": [242, 259, 260, 269], "softmax": [243, 260, 269, 292, 293], "action_valu": [243, 244, 276, 292, 293, 297, 298, 319, 328, 342, 399, 407, 408, 410, 414], "var_num": [244, 276, 292, 293, 298], "action_value_kei": [244, 276, 292, 293, 297, 298, 328, 342], "action_mask_kei": [244, 247, 248, 276, 292, 293, 297, 298], "perspect": [244, 293, 320, 406, 408], "1707": [244, 293, 320, 330, 408], "06887": [244, 293, 320], "mult": [244, 262, 276, 292, 293, 297, 298], "tensordict_modul": [244, 249, 250, 253, 254, 276, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 310, 311, 313, 314, 318, 319, 326, 330, 331, 332, 333, 335, 336, 399, 408], "nbin": [244, 292, 399], "customdistributionalqv": 244, "log_softmax": [244, 292], "qvalue_actor": [244, 276, 292, 297, 399], "to_modul": [244, 299, 302, 404, 423], "std_bia": 245, "std_min_val": 245, "belief": [245, 267, 277, 278], "1912": [245, 321, 322, 323], "01603": [245, 321, 322, 323], "softplu": [245, 266, 306, 308, 309], "out_features_valu": 246, "cnn_kwarg": [246, 405], "mlp_kwarg": [246, 405], "duel": 246, "cnn": [246, 261, 405, 408, 410, 423], "06581": 246, "greedi": [247, 248, 276, 293, 298, 405, 407, 408, 410], "eps_init": [247, 248, 273, 274, 405, 407, 408, 410, 414], "eps_end": [247, 248, 273, 274, 405], "explorative_polici": [247, 248, 273, 274], "9055": [247, 248, 419], "9277": [247, 248], "6295": [247, 248], "2532": [247, 248], "grad_fn": [247, 248, 287, 423], "addbackward0": [247, 248], "batch_first": [249, 251, 253, 255, 407], "bidirect": [249, 253, 407], "cudnn": [249, 250, 251, 253, 254, 255, 407, 408], "rnn": [249, 250, 251, 253, 254, 255, 407, 408, 410], "device_count": [249, 250, 253, 254, 424], "n_in": [249, 250, 253, 254], "n_out": [249, 250, 253, 254], "h0": [249, 250, 253, 254], "h1": [249, 250, 253, 254], "vectoris": [249, 250, 253, 254], "call_gru": [249, 250], "h_out": [249, 250, 253, 254], "batched_cal": [249, 250, 253, 254], "gate": [249, 250, 253], "r_t": 249, "w_": [249, 250, 253, 254], "ir": [249, 250], "x_t": [249, 253], "b_": [249, 250, 253, 254], "hr": [249, 250, 253], "h_": [249, 250, 253], "z_t": 249, "iz": [249, 250], "hz": [249, 250], "n_t": 249, "odot": [249, 250, 253, 254], "hn": [249, 250, 253], "h_t": [249, 253], "sigmoid": [249, 250, 253, 254, 408], "hadamard": [249, 250, 253, 254], "multilay": [249, 253], "_t": [249, 253, 418, 419], "ge": [249, 253], "bernoulli": [249, 253], "b_ih": [249, 250, 253, 254, 255], "b_hh": [249, 250, 253, 254, 255], "h_0": [249, 253, 254], "unbatch": [249, 253], "pack_padded_sequ": [249, 253], "pack_sequ": [249, 253], "num": [249, 253, 414], "_layer": [249, 253], "_size": [249, 250, 253, 254], "h_n": [249, 253], "packedsequ": [249, 253], "weight_ih_l": [249, 253], "learnabl": [249, 250, 253, 254], "w_ir": 249, "w_iz": 249, "w_in": 249, "num_direct": [249, 253], "weight_hh_l": [249, 253], "w_hr": 249, "w_hz": 249, "w_hn": 249, "bias_ih_l": [249, 253], "b_ir": 249, "b_iz": 249, "b_in": 249, "bias_hh_l": [249, 253], "b_hr": 249, "b_hz": 249, "b_hn": 249, "mathcal": [249, 250, 253, 254], "sqrt": [249, 250, 253, 254, 273, 274], "frac": [249, 250, 253, 254, 406], "seq_len": [249, 253], "subtli": 249, "matrix": [249, 253, 264, 265], "contrast": [249, 272, 325, 421], "hx": [249, 250, 253, 254, 408], "lstmcell": [250, 255, 408], "gru_cel": 250, "weight_ih": [250, 254], "weight_hh": [250, 254], "bias_ih": [250, 254], "bias_hh": [250, 254], "rocm": [250, 254], "embedd": [251, 255], "grucel": [251, 299], "python_bas": [251, 255], "recurrent_st": [251, 255, 307, 407], "custom_kei": [251, 255], "recurrent_mod": [251, 255], "rs": [251, 404], "gru_module_train": 251, "policy_train": [251, 255], "traj_td": [251, 255], "make_cudnn_bas": [251, 255], "make_python_bas": [251, 255, 408], "supplementari": [251, 255, 406, 424], "That": [251, 255, 406, 417], "dealt": [251, 255], "poorli": [251, 255], "data_collector": [251, 255, 405], "policy_infer": [251, 255], "td_inf": [251, 255], "assert_clos": [251, 255], "upscal": [252, 282, 283], "tanh_loc": [252, 282, 283], "event_dim": [252, 281, 282], "poor": [252, 282, 283], "explos": [252, 282, 283], "formula": [252, 282, 283, 310, 312, 327, 330, 400, 406], "proj_siz": 253, "c0": [253, 254], "c1": [253, 254], "call_lstm": [253, 254], "c_out": [253, 254], "i_t": 253, "ii": [253, 254], "hi": [253, 254], "f_t": 253, "hf": [253, 254], "g_t": 253, "ig": [253, 254], "hg": [253, 254], "o_t": 253, "ho": [253, 254], "c_t": 253, "c_": 253, "forget": 253, "1402": 253, "1128": 253, "c_0": [253, 254], "proj": 253, "c_n": 253, "w_ii": 253, "w_if": 253, "w_ig": 253, "w_io": 253, "w_hi": 253, "w_hf": 253, "w_hg": 253, "w_ho": 253, "b_ii": 253, "b_if": 253, "b_ig": 253, "b_io": 253, "b_hi": 253, "b_hf": 253, "b_hg": 253, "b_ho": 253, "weight_hr_l": 253, "_revers": 253, "analog": [253, 410], "cn": 253, "lstm_cell": 254, "h_1": 254, "c_1": 254, "time_step": [254, 295], "cx": 254, "correspont": 255, "recurrent_state_h": [255, 407], "recurrent_state_c": [255, 407], "triplet": [255, 297, 298], "lstm_modul": 255, "rs_h": 255, "rs_c": 255, "hidden0": [255, 408], "hidden1": [255, 408], "single_bias_last_lay": 256, "layer_class": 256, "layer_kwarg": 256, "perceptron": [256, 410], "aslo": 256, "42": [256, 272, 310, 311, 313, 314, 318, 326, 333, 404, 405, 418, 419, 420], "noisylinear": [256, 264, 397, 405], "noisylazylinear": [256, 397], "mpcplanner": 257, "tensordict_out": [257, 424], "mppi": 258, "covari": 258, "william": [258, 332], "aldrich": 258, "theodor": 258, "01149": 258, "hansen": 258, "wang": 258, "su": 258, "04955": 258, "valueoper": [258, 288, 289, 290, 310, 311, 312, 313, 314, 319, 326, 327, 330, 331, 332, 333, 335, 336, 391, 399, 404, 406, 411], "tdlambdaestim": [258, 397, 404], "value_net": [258, 315, 317, 332, 344, 345, 346, 347, 406, 408, 410, 411, 414], "adv": 258, "lmbda": [258, 338, 344, 347, 349, 355, 356, 357, 360, 361, 400, 404, 406, 418], "value_network": [258, 314, 315, 317, 318, 320, 326, 333, 344, 345, 346, 347, 400, 404, 406, 408, 411, 414, 417], "temperatur": [258, 311, 318, 326], "neg_inf": [259, 260], "inf": [259, 260], "api_doc": [259, 260], "tf_agent": [259, 260], "event": [259, 260, 269, 353, 354, 355, 356, 358, 359, 360, 361, 421], "unnorm": [259, 260, 269], "sparse_mask": [259, 260], "dens": [259, 260], "0831": [259, 260], "1203": [259, 260], "0928": [259, 260], "1972": [259, 260], "grad_method": [260, 269], "reparamgradientstrategi": [260, 269], "passthrough": [260, 269], "relaxedonehot": [260, 269], "zeros_lik": [260, 419], "sample_non_valid": 260, "share_param": [261, 262, 263, 417, 418], "use_td_param": [261, 262, 263], "get_stateful_net": [261, 262, 263, 328, 399, 400], "from_stateful_net": [261, 262, 263, 328, 400], "homogen": [261, 262, 417, 418], "tensordictparam": [261, 262], "_empty_net": [261, 262], "roughli": [261, 262, 423], "agent_network": [261, 262], "modulelist": [261, 262, 423], "2592": [261, 405], "decentr": 261, "n_agent_input": [262, 263, 417, 418], "n_agent_output": [262, 263, 417, 418], "lazili": [262, 419], "toech": 262, "centalis": 262, "shown": [262, 399, 408, 416, 417, 418, 421], "agent_dim": 263, "vmap_random": [263, 328, 400], "stateful_net": [263, 328], "Such": [263, 328], "multiagentmlp": [263, 417, 418], "snet": 263, "hasattr": [263, 404], "kaiming_normal_": 263, "std_init": [264, 265], "device_typ": [264, 265], "initialize_paramet": 264, "isol": [264, 328, 408], "1706": [265, 284], "10295v3": 265, "induc": 265, "aid": 265, "scale_map": 266, "biased_softplus_1": 266, "scale_lb": [266, 277, 278], "module_norm": 266, "1803": [267, 268, 275], "10122": [267, 268], "rnn_hidden": 267, "latent": 268, "ordin": [270, 397], "parametris": [270, 272], "inres": 271, "mu": [271, 273, 274, 406], "impos": [272, 399], "proxim": [272, 330, 406, 418], "atom": 272, "tang": 272, "agraw": 272, "2020": 272, "1901": 272, "10500": 272, "discretis": 272, "num_atom": 272, "num_sampl": 272, "middl": 272, "adam": [272, 282, 404, 405, 406, 407, 408, 411, 414, 417, 418, 419], "lr": [272, 404, 405, 406, 407, 414, 417, 418, 419], "optimis": [272, 417, 418], "minimis": 272, "penalis": 272, "0308": 272, "1586": 272, "4727": 272, "2260": 272, "1120": [272, 405], "histogram": 272, "return_typ": 272, "hist": [272, 421], "158": [272, 403, 410, 419, 422], "478": [272, 406, 419], "228": [272, 419], "112": [272, 419], "bin_edg": 272, "8000": [272, 404, 406], "6000": [272, 406], "4000": [272, 404, 405, 406], "ornstein": [273, 274, 404, 408], "uhlenbeck": [273, 274, 404, 408], "ou": [273, 274, 404], "correl": [273, 274], "noise_t": [273, 274], "noise_": [273, 274], "theta": [273, 274, 406, 419], "sigma_t": [273, 274], "sigma_": [273, 274], "anneal": [273, 274, 405, 410, 417], "ou_prev_nois": [273, 274], "ou_step": [273, 274], "x0": [273, 274], "sigma_min": [273, 274], "n_steps_ann": [273, 274], "is_init_kei": [273, 274], "_ou_prev_nois": [273, 274], "_ou_step": [273, 274], "state_shap": [275, 342], "mixing_embed_dim": [275, 342], "qmix": [275, 417, 418], "mixer": [275, 284, 342], "monoton": 275, "hyper": 275, "11485": 275, "qmixerloss": [275, 284], "qmix_vdn": [275, 284], "chosen_action_valu": [275, 276, 284, 297, 298, 342, 399, 407, 410], "vdn": [275, 284], "hidden_dim": [277, 278], "posterior": [277, 322], "rssm": [277, 278, 322], "1811": [277, 278], "04551": [277, 278], "obs_embed": 277, "rnn_hidden_dim": 278, "dream": 278, "safe_tanh": 282, "tanhtransform": 282, "overflow": [282, 287, 292, 293, 296, 297, 298, 299, 300], "get_mod": 282, "decomposit": 284, "05296": 284, "hide": [285, 406, 417, 418], "satisfi": [285, 399], "vmap_dim": 285, "lam": 285, "sample_in": 285, "sample_in_td": 285, "vm": 285, "translat": [287, 296], "character": [287, 292, 296, 297, 299, 421], "td_modul": [287, 288, 289, 290, 296, 299, 300, 302, 304, 410, 423], "3635": 287, "0340": 287, "1476": 287, "3911": [287, 419], "1664": [287, 405, 419], "5455": 287, "2247": 287, "4583": 287, "2916": 287, "2160": 287, "5337": 287, "5193": 287, "addmmbackward0": 287, "actorvalueoper": [288, 312, 327, 330, 399, 410], "get_policy_oper": [288, 289, 290, 312, 327, 330, 399], "standalon": [288, 289, 290, 408, 410], "tdmodul": [288, 289, 290, 391], "get_critic_oper": 288, "common_oper": [288, 290], "policy_oper": [288, 289, 290], "value_oper": [288, 289, 290], "module_hidden": [288, 290], "td_module_hidden": [288, 290], "module_act": [288, 290], "td_module_act": [288, 289, 290], "module_valu": [288, 289, 290], "td_module_valu": [288, 289, 290], "state_action_valu": [288, 304, 311, 313, 318, 326, 333, 343, 391, 399, 404, 417, 423], "td_clone": [288, 289, 290], "tensordictmodulewrapp": [288, 386, 387, 391], "get_policy_head": [288, 289, 290], "safesequenti": [288, 289, 290, 342], "head": [288, 290, 307, 312, 327, 330], "get_value_head": [288, 289, 290], "get_value_oper": [288, 289, 290, 312, 327, 330], "action_modul": 289, "state_valu": [289, 290, 304, 312, 318, 326, 327, 330, 331, 333, 344, 345, 346, 347, 349, 351, 353, 355, 357, 358, 360, 399, 404, 406, 418], "actorcriticoper": [290, 399, 410], "actorcriticwrapp": [290, 399, 404], "inferec": 291, "set_tensor_kei": 291, "dt_inference_wrapp": 291, "baz": 291, "inference_context": 291, "obs_dim": 291, "tanhdelta": [291, 397, 404, 417], "dtactor": 291, "actor_modul": [291, 423], "dist_class": 291, "dist_kwarg": 291, "distribution_kwarg": [291, 296, 300, 406, 417, 418], "inference_actor": 291, "sequence_length": 291, "mask_context": 291, "out_act": 291, "qvaluemodul": [292, 297, 342, 407, 408, 410, 414], "distributionaldqnnet": 292, "make_log_softmax": 292, "my_action_valu": [293, 298], "chanc": 293, "thid": 293, "lmheadmodel": 294, "actor_head": [294, 312, 327, 330], "base_model": 294, "lm_head": 294, "macro": 295, "lookahead": 295, "n_action": [295, 311, 313, 315, 317, 329, 333], "reshape_cat": 295, "actor_bas": 295, "obs_cat": 295, "obs_cat_reshap": 295, "action_orig": 295, "default_interaction_typ": [296, 300, 410], "interaction_typ": [296, 300], "datacollectorbas": [296, 383, 386, 387, 391, 397], "set_interaction_typ": [296, 300], "compositedistribut": [296, 310, 330, 410], "distribution_map": 296, "name_map": 296, "cache_dist": [296, 300], "n_empirical_estim": [296, 300], "compound": [296, 410], "chose": 298, "functionalmodul": 299, "functionalmodulewithbuff": 299, "td_fmodul": 299, "td_function": 299, "td_state": 299, "params_repeat": 299, "td_vmap": [299, 302], "random_sampl": [299, 300], "suppli": 300, "fist": 300, "log_prob_kei": [300, 418], "probabilistictensordictsequenti": [301, 310, 312, 327, 330, 332, 386, 387, 423], "partial_toler": [301, 302, 416], "who": [301, 302], "AND": [301, 302, 313], "tensordictsequenci": 302, "tensordictsequ": 302, "safeprobabilisticmodul": [302, 399], "spec1": 302, "net1": 302, "module1": 302, "td_module1": 302, "spec2": 302, "module2": 302, "td_module2": 302, "clamp": [303, 322, 381, 417, 419], "boundari": [303, 406, 408, 417, 418], "resolut": 303, "9944": 303, "9991": 303, "3020": 303, "2299": [303, 419], "5418": 303, "2989": [303, 408], "6849": 303, "3169": 303, "2690": 303, "9649": [303, 419], "5686": 303, "8602": 303, "0315": 303, "8455": [303, 419], "6027": 303, "4746": 303, "7843": 303, "7782": 303, "2111": 303, "5115": 303, "4687": 303, "5760": 303, "custommodul": 304, "imaginari": 305, "imagin": 305, "transition_model": 305, "get_reward_oper": 305, "get_transition_model_oper": 305, "min_val": [306, 309], "_bia": 306, "surject": 309, "expln": 309, "biased_softplu": [309, 397], "beggin": 309, "biased_softplus_": 309, "syntax": [309, 404], "met": [309, 417, 419], "1602": 310, "01783v2": 310, "actor_network": [310, 311, 312, 313, 314, 316, 318, 319, 326, 327, 329, 330, 331, 332, 333, 335, 336, 400, 404, 406, 411, 417, 418], "critic_network": [310, 312, 327, 330, 332, 406, 418], "entropy_bonu": [310, 312, 327, 330, 406], "favour": [310, 312, 327, 330], "samples_mc_entropi": [310, 312, 327, 329, 330], "entropy_coef": [310, 312, 327, 330, 406, 418], "critic_coef": [310, 312, 327, 330, 406], "loss_critic_typ": [310, 312, 327, 330, 332, 406], "l1": [310, 312, 314, 315, 319, 327, 330, 331, 332, 335, 336, 339, 342, 399, 404], "l2": [310, 312, 314, 315, 316, 317, 319, 322, 323, 327, 330, 331, 332, 335, 336, 339, 342, 404, 417], "smooth_l1": [310, 311, 312, 313, 314, 315, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 339, 342, 406], "separate_loss": [310, 312, 313, 314, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336], "propag": [310, 312, 313, 314, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347, 406, 417, 418], "advantage_kei": [310, 312, 327, 330, 332, 344, 345, 346, 347], "value_target_kei": [310, 312, 327, 330, 332, 344, 345, 346, 347], "value_target": [310, 312, 327, 330, 332, 344, 345, 346, 347, 406, 418], "ddp": [310, 312, 327, 330, 332], "fsdp": [310, 312, 327, 330, 332], "divid": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 327, 329, 330, 331, 332, 333, 335, 336, 384, 404, 417, 418, 419], "clip_valu": [310, 312, 327, 330, 332], "loss_crit": [310, 330, 406, 418], "loss_entropi": [310, 330, 406, 418], "loss_object": [310, 330, 406, 418], "recur": [310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347, 348, 410], "next_reward": [310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347], "next_don": [310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347], "next_termin": [310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 344, 345, 346, 347], "loss_obj": 310, "next_observ": [310, 311, 313, 314, 315, 317, 318, 319, 326, 330, 331, 332, 333, 335, 336, 416], "sacloss": [310, 325, 334, 397], "fraction": 310, "make_value_estim": [310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 337, 342, 400, 404, 405, 417, 418, 423], "value_typ": [310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 338, 342, 404], "hyperparam": [310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 404], "enum": [310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 338, 342, 404], "default_value_estim": [310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 404, 423], "default_value_kwarg": [310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 397, 404], "dqn_loss": [310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 337, 342], "td1": [310, 311, 313, 314, 315, 317, 319, 320, 321, 326, 328, 330, 331, 332, 333, 335, 336, 342, 404], "conserv": [311, 317], "qvalue_network": [311, 313, 318, 319, 326, 331, 333, 335, 336], "unti": [311, 313, 326, 331, 333, 335, 336], "loss_funct": [311, 313, 314, 315, 316, 317, 318, 319, 326, 331, 333, 335, 336, 339, 342, 404, 417], "alpha_init": [311, 313, 319, 329, 331, 333], "min_alpha": [311, 313, 319, 329, 331, 333], "max_alpha": [311, 313, 319, 329, 331, 333], "fixed_alpha": [311, 313, 319, 329, 331, 333], "target_entropi": [311, 313, 319, 329, 331, 333], "prod": [311, 313, 329, 333], "delay_actor": [311, 314, 333, 335, 336], "delay_qvalu": [311, 319, 331, 333, 335, 336], "min_q_weight": 311, "max_q_backup": 311, "backup": 311, "deterministic_backup": 311, "num_random": 311, "with_lagrang": 311, "lagrang": 311, "lagrange_thresh": 311, "valueclass": [311, 313, 314, 319, 331, 333, 335, 336], "qvalu": [311, 313, 318, 319, 326, 331, 333, 335, 336], "loss_actor": [311, 313, 314, 318, 319, 326, 331, 332, 333, 335, 336, 376, 404, 411, 417, 423], "loss_actor_bc": 311, "loss_alpha": [311, 313, 319, 331, 333], "loss_cql": [311, 317], "loss_qvalu": [311, 313, 317, 318, 319, 326, 331, 333, 335, 336], "loss_alpha_prim": 311, "clip_epsilon": [312, 406, 418], "normalize_advantag": [312, 327, 330, 418], "value_kei": [312, 327, 330, 344, 345, 346, 347, 404], "somemodul": [312, 327, 330], "someactor": [312, 327, 330], "value_head": [312, 327, 330], "somevalu": [312, 327, 330], "loss_modul": [312, 325, 327, 328, 330, 334, 381, 390, 391, 400, 401, 404, 405, 406, 417, 418, 421], "IN": 313, "FOR": 313, "simplic": [313, 405, 406, 412, 420, 421, 423], "openreview": [313, 331], "pczqttstix": 313, "qvalue_loss": [313, 335], "actor_loss": [313, 335], "alpha_loss": 313, "num_qvalue_net": [313, 318, 319, 326, 331, 333, 335, 336], "target_entropy_buff": 313, "delay_valu": [314, 315, 317, 320, 332, 333, 342, 405, 407, 408, 414, 417], "loss_valu": [314, 318, 326, 332, 333, 404, 406, 411, 417, 418, 423], "pred_valu": [314, 317, 335, 336, 404, 411, 423], "pred_value_max": [314, 404, 411, 423], "target_valu": [314, 317, 331, 335, 336, 343, 400, 404, 411, 423], "target_value_max": [314, 404, 411, 423], "qvalueactor": [315, 317, 342, 405, 407], "double_dqn": 315, "06461": [315, 325], "mult_one_hot": [315, 318, 319, 342], "loss_val": [315, 317, 400, 404, 406, 407, 408, 411, 412, 414, 417, 418, 421], "01345": 316, "distanc": [317, 327, 339, 343, 344, 418], "dcql_loss": 317, "2110": [318, 326], "06169": [318, 326], "expectil": [318, 326], "tau": [318, 326, 334, 404, 405, 417], "antmaz": [318, 326], "sticht": [318, 326], "onehotcategor": [318, 319, 397], "target_entropy_weight": 319, "disctount": 320, "distributionalqvalueactor": [320, 399], "input_tensordict": [320, 404], "actor_model": 321, "value_model": [321, 323], "imagination_horizon": 321, "unrol": [321, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361], "discount_loss": [321, 323], "lambda_kl": 322, "lambda_reco": 322, "lambda_reward": 322, "reco_loss": 322, "reward_loss": 322, "free_nat": 322, "nat": 322, "delayed_clamp": 322, "global_averag": 322, "value_loss": 323, "fake_data": 323, "1606": 324, "03476": 324, "discriminator_network": 324, "use_grad_penalti": 324, "gp_lambda": 324, "discrimin": 324, "ddpgloss": [325, 334, 391, 397, 404, 411, 417, 423], "td3loss": [325, 334, 397], "value_network_update_interv": 325, "qvalueclass": 326, "loss_value_diff": 326, "diff": 326, "old_polici": 327, "new_polici": 327, "apart": [327, 418], "dtarg": 327, "samples_mc_kl": 327, "analyt": 327, "decrement": 327, "loss_": [328, 376, 400, 404, 411], "equip": [328, 407, 408, 410], "gh": 328, "_acceptedkei": 328, "_forward_value_estimator_kei": 328, "alter": [328, 399], "value_estim": [328, 344, 345, 346, 347, 348, 400, 404, 418], "myloss": 328, "action2": 328, "augment": [328, 412, 414, 421], "set_exploration_typ": [328, 377, 397, 399, 406, 407, 408, 410, 417, 423], "deterministic_sampling_mod": 328, "convert_to_funct": [328, 404], "expand_dim": 328, "create_target_param": [328, 404], "compare_against": [328, 404], "_param": 328, "resampl": 328, "_target_param": 328, "network_nam": 328, "blend": 328, "add_random_modul": [328, 400], "flavor": [330, 404, 417, 418, 423], "clipppoloss": [330, 397, 406, 418], "klpenppoloss": [330, 397], "06347": 330, "gae": [330, 397, 400, 404, 406, 418], "ppo_loss": 330, "tdlambda": [330, 338, 400, 404], "base_lay": 330, "randn_lik": 330, "samplelogprob": 330, "ay8zfzm0tdd": 331, "sub_sample_len": 331, "subsampl": [331, 372, 401], "action_log_prob_actor": 331, "state_action_value_actor": [331, 335, 336], "connectionist": 332, "1992": 332, "doi": 332, "1007": 332, "bf00992696": 332, "actor_net": [332, 404, 406], "1801": 333, "01290": 333, "applic": [333, 342, 409, 410, 419], "1812": 333, "05905": 333, "redqloss": [334, 397], "math": 334, "theta_t": [334, 419], "theta_": [334, 419], "polyak": 334, "minimalist": 335, "06860": 335, "policy_nois": [335, 336], "noise_clip": [335, 336], "td3_bc": 335, "bc_loss": 335, "lmbd": 335, "next_state_valu": [335, 336, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 397], "td0": [337, 404, 417], "strict_shap": 339, "view_a": 339, "qmixer": [342, 397], "local_valu": 342, "visibl": [342, 418], "dafault": 342, "acceptedkei": 342, "global_valu": 342, "penultim": 342, "local_value_network": 342, "mixer_network": 342, "value_modul": [342, 406, 423], "qnet": [342, 404], "next_val_kei": 343, "pred_next_v": 343, "usus": 343, "mse": 343, "q_valu": 343, "n_steps_to_next": 343, "value_next_st": 343, "1506": [344, 349, 357], "02438": [344, 349, 357], "exponenti": [344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 379], "average_ga": [344, 406], "skip_exist": [344, 345, 346, 347], "time_dim": [344, 346, 347, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361], "gradient_mod": 344, "value_error": [344, 345, 346, 347, 348], "target_param": [344, 345, 346, 347, 348, 404, 418], "98": [344, 345, 346, 347, 405, 419], "94": [344, 347, 405, 417, 419], "unpack": [344, 345, 346, 347], "tensor_kei": [344, 345, 346, 347, 348], "next_valu": [344, 345, 346, 347, 348], "aka": [345, 405, 417], "average_reward": [345, 346, 347], "tdestim": [345, 346, 348], "infti": 346, "valuefunctionbas": 348, "old_stat": [349, 351, 353, 355, 357, 358, 360], "new_stat": [349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361], "rolling_gamma": [353, 354, 355, 356, 358, 359, 360, 361], "g1": [353, 354, 355, 356, 358, 359, 360, 361], "g2": [353, 354, 355, 356, 358, 359, 360, 361], "g3": [353, 354, 355, 356, 358, 359, 360, 361], "g4": [353, 354, 355, 356, 358, 359, 360, 361], "v3": [353, 354, 355, 356, 358, 359, 360, 361], "preproc": [362, 408, 417], "as_non_tensor": [362, 417], "render_method": 362, "pass_tensordict": 362, "syntat": 362, "sugar": 362, "out_file_bas": 363, "skip_reset": 363, "center_crop": 364, "make_grid": 364, "csv": [364, 366, 368, 405, 413, 414], "wandb": [364, 368, 371, 413, 423], "tensorboard": [364, 368, 370, 413, 423], "log_dir": [364, 365, 366, 368, 370, 371, 405, 414], "cheetah_video": 364, "run_video": 364, "openxexperiencereplai": 364, "run_video_0": 364, "templat": 365, "pt": [366, 401, 420], "video_fp": 366, "minim": [366, 421], "dependeci": 366, "cur_dir": 366, "csv_log": 366, "add_video": 366, "video_": 366, "experiment_nam": [367, 368], "uuid": [367, 405, 424], "logger_typ": 368, "logger_nam": 368, "mlflow": [368, 369], "wandb_kwarg": 368, "mlflow_kwarg": 368, "tracking_uri": 369, "uri": 369, "datastor": 369, "tb_log": 370, "tensoarboard": 370, "td_log": 370, "save_dir": 371, "resum": 371, "uncategor": 371, "sub_traj_len": 372, "min_sub_traj_len": 372, "register_op": [372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 401, 405], "process_optim_batch": [372, 378, 379, 401], "td_out": [372, 380], "_process_optim_batch_hook": [372, 401], "batch_subsampl": 372, "clear_cuda": 373, "pre_optim_step": [373, 401], "log_pbar": [374, 375, 377, 379, 401, 405], "progress": [374, 375, 377, 381, 401, 405, 407, 424], "count_fram": 374, "pre_steps_log": [374, 375, 401], "count_frames_log": 374, "lognam": 375, "r_train": [375, 405], "log_reward": [375, 405], "loss_compon": 376, "appl": 376, "optimizer_hook": 376, "record_interv": [377, 404, 405], "record_fram": [377, 384, 404, 405], "policy_explor": [377, 391, 404, 405, 408, 410, 414], "log_kei": [377, 405], "underestim": 377, "r_evalu": [377, 404], "flatten_tensordict": [378, 405], "max_dim": 378, "rb_trainer": 378, "batch_process": [378, 379, 380, 401], "post_loss": [378, 401], "999": [379, 405], "jitter": 379, "finfo": 379, "default_dtyp": 379, "reward_norm": 379, "update_reward_stat": 379, "normalize_reward": 379, "make_train": [380, 397], "_process_batch_hook": [380, 401], "select_kei": [380, 401], "versatil": [381, 409], "optim_steps_per_batch": [381, 401, 405], "clip_grad_norm": 381, "clip_norm": 381, "progress_bar": 381, "save_trainer_interv": 381, "log_interv": [381, 405], "save_trainer_fil": [381, 401], "load_from_fil": [381, 401], "update_weights_interv": [383, 405], "update_weight": 383, "post_step": [383, 401, 405], "cfg": [384, 385, 386, 387, 388, 389, 390, 391, 392, 395], "dictconfig": [384, 385, 386, 387, 389, 390, 391, 392, 395], "unknowingli": 384, "annealing_fram": [384, 404], "init_env_step": [384, 385, 404], "proof_environ": [385, 404], "sta": 385, "ot": 385, "actor_model_explor": [386, 387, 404], "make_env_kwarg": [386, 387], "targetnetupdat": [388, 390, 391], "replayargsconfig": 389, "target_net_updat": [391, 404, 405], "constitu": 391, "egreedywrapp": 391, "env_proof": 391, "obs_spec": 391, "net_valu": 391, "dir": [391, 401, 405], "gettempdir": 391, "argpars": [392, 395], "namespac": [392, 395], "parser": [392, 395], "transformed_env_constructor": [392, 397], "num_env_per_collector": [393, 394], "video_tag": 395, "norm_obs_onli": 395, "use_env_cr": 395, "custom_env_mak": 395, "custom_env": 395, "return_transformed_env": 395, "action_dim_gsd": 395, "state_dim_gsd": 395, "obs_norm_state_dict": 395, "wheter": 395, "maker": [395, 405], "asyncdatacollector": 397, "distributedsyncdatacollector": 397, "submitit_delayed_launch": 397, "raycollector": 397, "rational": 397, "footnot": 397, "binarydiscretetensorspec": 397, "boundedtensorspec": 397, "discretetensorspec": 397, "lazystackedcompositespec": 397, "lazystackedtensorspec": 397, "multidiscretetensorspec": 397, "multionehotdiscretetensorspec": 397, "onehotdiscretetensorspec": 397, "unboundedcontinuoustensorspec": 397, "unboundeddiscretetensorspec": 397, "tensordictmap": 397, "mctsforest": 397, "prompttensordicttoken": 397, "rolloutfrommodel": 397, "tokenizeddatasetload": 397, "create_infinite_iter": 397, "constantklcontrol": 397, "adaptiveklcontrol": 397, "consolidate_spec": 397, "check_no_exclusive_kei": 397, "contains_lazy_spec": 397, "nested2t": 397, "h5combin": 397, "h5split": 397, "tictactoeenv": 397, "check_marl_group": 397, "get_available_librari": 397, "terminated_or_trunc": 397, "dreamerdecod": 397, "braxwrapp": 397, "dmcontrolwrapp": 397, "jumanjienv": 397, "jumanjiwrapp": 397, "meltingpotenv": 397, "meltingpotwrapp": 397, "mogymenv": 397, "mogymwrapp": 397, "multithreadedenvwrapp": 397, "openmlenv": 397, "openspielwrapp": 397, "openspielenv": 397, "pettingzooenv": [397, 417], "robohiveenv": 397, "smacv2env": 397, "smacv2wrapp": 397, "unitymlagentsenv": 397, "unitymlagentswrapp": 397, "vmaswrapp": 397, "qvaluehook": 397, "distributionalqvaluehook": 397, "reset_nois": 397, "cemplann": 397, "mpcplannerbas": 397, "mppiplann": 397, "independentnorm": 397, "normalparamwrapp": 397, "truncatednorm": 397, "maskedonehotcategor": 397, "onehotordin": 397, "inv_softplu": 397, "vmapmodul": 397, "distributionaldqnloss": [397, 405], "discretesacloss": 397, "crossqloss": 397, "iqlloss": 397, "discreteiqlloss": 397, "cqlloss": 397, "discretecqlloss": 397, "gailloss": 397, "dtloss": 397, "onlinedtloss": 397, "td3bcloss": 397, "ppoloss": 397, "a2closs": 397, "reinforceloss": 397, "dreameractorloss": 397, "dreamermodelloss": 397, "dreamervalueloss": 397, "td0estim": [397, 404], "td1estim": [397, 404], "td0_return_estim": 397, "td0_advantage_estim": 397, "td1_return_estim": 397, "vec_td1_return_estim": 397, "td1_advantage_estim": 397, "vec_td1_advantage_estim": 397, "td_lambda_return_estim": 397, "vec_td_lambda_return_estim": 397, "td_lambda_advantage_estim": 397, "vec_td_lambda_advantage_estim": 397, "generalized_advantage_estim": 397, "vec_generalized_advantage_estim": 397, "reward2go": 397, "distance_loss": [397, 404], "hold_out_net": 397, "hold_out_param": [397, 404], "softupd": [397, 404, 405, 407, 408, 411, 414, 417], "hardupd": [397, 404, 411], "batchsubsampl": [397, 401], "clearcudacach": 397, "countframeslog": 397, "logreward": [397, 401, 405], "optimizerhook": [397, 405], "replaybuffertrain": [397, 401, 405], "rewardnorm": 397, "selectkei": [397, 401], "trainerhookbas": [397, 401, 405], "updateweight": [397, 401, 405], "make_collector_offpolici": 397, "make_collector_onpolici": 397, "make_dqn_loss": 397, "make_replay_buff": [397, 404], "make_target_updat": 397, "parallel_env_constructor": [397, 404], "sync_async_collector": 397, "sync_sync_collector": 397, "correct_for_frame_skip": 397, "get_stats_random_rollout": 397, "mlflowlogg": 397, "get_logg": 397, "generate_exp_nam": 397, "journei": 398, "textbook": 398, "highlight": [398, 417], "ever": [398, 418], "bump": 398, "think": [398, 406, 417, 418, 424], "benefit": [398, 409, 417, 418, 421], "pr": 398, "ground": [399, 404, 419], "recycl": [399, 421], "noisier": 399, "Their": [399, 417, 418], "consistentdropoutmodul": 399, "sd": [399, 424], "prob_modul": 399, "uncertainti": 399, "soften": 399, "backbon": [399, 407, 410, 416, 423], "make_actor": 399, "make_valu": 399, "shared_param": 399, "make_common": 399, "reusabl": [400, 404, 421], "swappabl": [400, 404], "characterist": [400, 404, 419], "trainabl": [400, 404, 411, 420], "smth": [400, 404], "metric": [400, 404], "plenti": [400, 408], "amort": [400, 405, 406], "told": [400, 406], "pseudo": [400, 412, 419], "buri": 400, "str_valu": 400, "nutshel": [400, 404], "barto": [400, 417, 418], "chapter": [400, 413], "significantli": [400, 404, 405, 411, 418], "value_net_loss": 400, "pow": [400, 404], "room": 400, "signifi": [400, 417, 418], "underperform": 400, "thin": 400, "intric": [400, 410], "believ": 401, "scheme": [401, 424], "substenti": 401, "_pre_steps_log_hook": 401, "_pre_optim_hook": 401, "sub_batch": 401, "_post_loss_hook": 401, "_post_optim_hook": 401, "post_optim": [401, 405], "_post_optim_log": 401, "post_optim_log": 401, "_post_steps_hook": 401, "_post_steps_log_hook": 401, "post_steps_log": 401, "reserv": 401, "logginghook": 401, "logging_hook": 401, "save_dict": 401, "some_valu": 401, "torchsnapshot": 401, "ckpt_backend": 401, "filepath": 401, "save_train": 401, "477": [403, 419, 422], "galleri": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "mem": [403, 422], "mb": [403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424], "torchrl_env": [403, 422, 424], "045": [403, 422, 424], "3309": [403, 422, 424], "dqn_with_rnn": [403, 407, 422], "929": [403, 407, 422], "2214": [403, 422], "rb_tutori": [403, 421, 422], "55": [403, 405, 419, 420, 421, 422], "225": [403, 404, 419, 421, 422], "480": [403, 405, 419, 420, 421, 422], "164": [403, 419, 422], "321": [403, 409, 410, 411, 419, 422], "coding_dqn": [403, 405, 422], "032": [403, 405, 419, 422], "1063": [403, 405, 422], "torchrl_demo": [403, 422, 423], "883": [403, 422, 423], "330": [403, 419, 422], "coding_ddpg": [403, 404, 422], "51": [403, 404, 405, 419, 420, 422], "578": [403, 404, 419, 422], "329": [403, 404, 419, 422], "multiagent_ppo": [403, 418, 422], "757": [403, 418, 419, 422], "multiagent_competitive_ddpg": [403, 417, 422], "877": [403, 404, 417, 422], "323": [403, 416, 419, 422], "coding_ppo": [403, 406, 422], "25": [403, 404, 405, 406, 407, 419, 422], "754": [403, 406, 408, 422], "56": [403, 404, 405, 408, 419, 422], "457": [403, 408, 419, 422], "3306": [403, 408, 422], "pretrained_model": [403, 420, 422], "346": [403, 419, 420, 422], "2756": [403, 419, 422], "multi_task": [403, 416, 422], "859": [403, 416, 422], "247": [403, 409, 419, 422], "804": [403, 411, 419, 422], "720": [403, 414, 422], "325": [403, 414, 419, 422], "948": [403, 412, 422], "693": [403, 413, 422], "351": [403, 419, 422], "author": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 421, 424], "vincent": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 419, 421, 424], "moen": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 419, 421, 424], "assembl": 404, "focus": [404, 411], "straightforward": [404, 405, 409, 410, 411, 412, 421], "maxim": [404, 411, 419], "transpar": [404, 407], "illustr": [404, 405, 410, 421], "bash": 404, "is_fork": [404, 405, 406, 407, 417, 418, 420], "get_start_method": [404, 405, 406, 407, 417, 418, 420], "collector_devic": 404, "loss_dict": 404, "oblivi": [404, 406, 421], "elementari": 404, "didact": [404, 408], "dilut": 404, "pessimist": [404, 405, 406], "target_actor_network_param": 404, "actor_in_kei": 404, "actor_crit": 404, "noth": [404, 406], "compromis": 404, "hp": 404, "_value_estim": 404, "elif": [404, 405], "notimplementederror": 404, "unknown": 404, "_loss_actor": 404, "td_copi": 404, "actor_network_param": [404, 417], "value_network_param": [404, 417], "_loss_valu": 404, "pred_val": 404, "target_value_network_param": 404, "glue": 404, "_forward": 404, "remaind": 404, "env_librari": 404, "env_task": 404, "env_arg": [404, 405], "friendli": 404, "torchr": 404, "rescal": 404, "presum": 404, "make_transformed_env": 404, "reward_sc": 404, "marker": 404, "env_per_collector": 404, "transform_state_dict": 404, "make_t_env": 404, "cheat": 404, "10m": 404, "cautiou": 404, "magnitud": [404, 417], "thousand": [404, 407], "get_env_stat": 404, "proof_env": 404, "5000": [404, 405, 406, 408, 414], "recal": [404, 406, 421], "ddpgmlpactor": 404, "ddpgmlpqnet": 404, "materi": 404, "ornsteinuhlenbeckprocessmodul": [404, 410], "make_ddpg_actor": 404, "q_net": 404, "tight": 404, "decoupl": [404, 411, 423], "10_000": [404, 406], "traj_len": [404, 407], "make_record": 404, "recorder_obj": 404, "pick": [404, 405, 410], "buffer_s": [404, 405], "random_crop_len": 404, "prb": 404, "buffer_scratch_dir": 404, "temporari": 404, "dataflow": 404, "ceil_div": 404, "utd": [404, 407], "update_to_data": 404, "realiz": 404, "_must_": 404, "001": [404, 419], "outdat": 404, "trick": [404, 405], "despit": 404, "optimizer_actor": 404, "weight_decai": [404, 405], "optimizer_valu": 404, "total_collection_step": 404, "pretti": [404, 409, 413, 421], "rewards_ev": 404, "collected_fram": 404, "r0": 404, "numel": [404, 406, 407, 408, 414, 417, 420, 421], "current_fram": [404, 417], "sampled_tensordict": 404, "gn1": 404, "clip_grad_norm_": [404, 406, 417, 418, 419], "gn2": 404, "gn": [404, 419], "td_record": 404, "rn": 404, "set_descript": [404, 406, 407, 417, 418, 419], "2f": 404, "800": [404, 405], "2751": [404, 419], "46it": 404, "1600": [404, 405], "09": [404, 405, 417, 419], "02it": [404, 419], "2400": [404, 405], "1273": 404, "94it": [404, 419], "3200": [404, 405], "1619": 404, "24it": [404, 405], "1874": 404, "87it": [404, 405], "48": [404, 405, 417, 418, 419, 420], "4800": [404, 405, 419], "2083": [404, 419], "74it": [404, 405, 419], "5600": 404, "2231": 404, "01it": [404, 405, 406, 419], "61": [404, 405, 419, 420, 421], "92": [404, 405, 419, 420], "91": [404, 405, 419], "391": [404, 419], "6400": [404, 423], "880": 404, "76it": [404, 405], "54": [404, 405, 418, 419, 420], "74": [404, 405, 419, 420], "168": [404, 419], "53": [404, 405, 419, 420], "209": [404, 419], "72": [404, 405, 419, 420], "7200": 404, "07": [404, 405, 417, 419, 420], "621": [404, 419], "34it": [404, 405], "97": [404, 405, 419, 420], "360": [404, 419], "518": [404, 419], "85it": [404, 406, 419], "118": [404, 419, 421], "223": [404, 419], "47": [404, 405, 419, 420], "8800": 404, "466": [404, 419], "41it": [404, 405], "65": [404, 405, 419], "76": [404, 405, 419], "142": [404, 419], "96": [404, 405, 419, 420], "9600": 404, "371": [404, 419], "56it": [404, 405, 419], "63": [404, 405, 419], "90": [404, 405, 406, 417, 418, 419], "177": [404, 419], "10400it": 404, "340": [404, 419], "70it": [404, 405], "82": [404, 405, 419], "45": [404, 405, 418, 419, 420], "181": [404, 419], "plot": [404, 406, 407, 417, 418, 419], "mention": [404, 407, 421, 424], "matplotlib": [404, 406, 407, 408, 417, 418, 419, 421, 424], "pyplot": [404, 406, 407, 408, 417, 418, 419, 421, 424], "plt": [404, 406, 407, 408, 417, 418, 419, 421, 424], "zip": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "legend": [404, 417], "xlabel": [404, 407, 418, 419], "ylabel": [404, 418], "tight_layout": 404, "takeawai": [404, 405, 408], "distpatch": 404, "jupyt": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "ipynb": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424], "sphinx": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424], "road": 405, "aspect": [405, 411], "highest": [405, 410], "prerequisit": [405, 407], "lookup": 405, "cart": 405, "pole": 405, "un": 405, "actuat": 405, "frictionless": 405, "duelingcnndqnet": 405, "egreedymodul": [405, 407, 408, 410, 414], "is_notebook": 405, "shell": 405, "get_ipython": 405, "__class__": 405, "zmqinteractiveshel": 405, "qtconsol": 405, "terminalinteractiveshel": 405, "ipython": [405, 418, 419], "nameerror": [405, 417], "umbrella": 405, "misplac": 405, "misus": 405, "orchestr": [405, 411, 413], "five": 405, "64x64": 405, "motion": [405, 419], "obs_norm_sd": 405, "mp_context": 405, "simpler": [405, 409], "get_norm_stat": 405, "test_env": 405, "mathbb": 405, "rightarrow": 405, "make_model": 405, "dummy_env": 405, "init_bia": 405, "exploration_modul": [405, 407, 408, 410, 414], "eps_greedy_v": 405, "eps_greedy_val_env": 405, "actor_explor": 405, "get_replay_buff": 405, "n_optim": [405, 411, 412], "themselv": 405, "parametriz": 405, "get_collector": 405, "cl": 405, "bunch": 405, "ubiquit": [405, 409], "get_loss_modul": 405, "target_updat": [405, 417], "995": [405, 419], "hopefulli": 405, "variat": 405, "2e": [405, 419], "wd": 405, "upd": 405, "harder": [405, 423], "5_000": 405, "500000": 405, "100000": 405, "005": [405, 417], "mandatori": [405, 406, 418, 419], "fairer": 405, "budget": 405, "dqn_exp_": 405, "uuid1": [405, 424], "9895": 405, "0737": 405, "registr": 405, "cumbersom": 405, "buffer_hook": 405, "weight_updat": 405, "aliv": 405, "total_reward": 405, "3688": [405, 419], "9346": [405, 419], "78it": 405, "59": [405, 419, 420], "40it": [405, 419], "3475": 405, "21it": 405, "3626": 405, "64it": [405, 419], "3869": 405, "52it": 405, "4021": 405, "224": [405, 419], "17it": [405, 406], "3718": 405, "58": [405, 419, 420], "30it": 405, "288": [405, 419], "50it": 405, "3991": 405, "71": [405, 419, 420], "60it": 405, "352": [405, 413, 419], "62it": 405, "4082": [405, 419], "384": [405, 419], "57": [405, 419, 420], "93it": [405, 419], "4295": [405, 419], "416": [405, 419], "448": [405, 419], "52": [405, 419, 420], "00it": [405, 419], "3899": 405, "3444": 405, "49": [405, 419, 420], "89": [405, 419, 420], "86it": [405, 419], "544": [405, 419], "84it": [405, 407, 419], "576": [405, 419], "05it": [405, 419], "608": [405, 419], "99it": [405, 419], "640": 405, "672": 405, "13it": [405, 419], "3505": 405, "704": 405, "33it": 405, "3445": 405, "736": 405, "19it": [405, 419], "768": 405, "3778": 405, "832": 405, "864": 405, "38it": 405, "896": 405, "48it": 405, "928": 405, "45it": 405, "960": 405, "35it": 405, "992": [405, 419], "23it": 405, "97it": [405, 419], "1056": 405, "43": [405, 407, 418, 419, 420], "4173": 405, "1088": 405, "91it": [405, 419], "96it": [405, 419], "1152": 405, "3566": 405, "1184": 405, "09it": 405, "1216": 405, "88it": [405, 419], "1248": 405, "06it": 405, "1280": 405, "03it": [405, 419], "1344": 405, "1376": 405, "37it": 405, "1408": 405, "90it": [405, 419], "1440": 405, "1472": 405, "1504": 405, "04it": [405, 407, 419], "1536": 405, "85": [405, 419], "1568": 405, "72it": 405, "07it": 405, "1632": 405, "1696": 405, "89it": [405, 406, 419], "1728": 405, "82it": 405, "1760": 405, "3748": 405, "1792": 405, "29it": 405, "1824": 405, "77it": 405, "1856": 405, "1888": 405, "71it": 405, "1920": 405, "1952": 405, "79it": [405, 419], "1984": 405, "2016": 405, "2080": 405, "2112": [405, 419], "66it": [405, 419], "2144": 405, "2176": 405, "67it": [405, 407], "2208": 405, "2240": 405, "47it": 405, "2272": 405, "2336": 405, "2368": 405, "73it": [405, 419], "80it": [405, 419], "2432": 405, "49it": 405, "2464": 405, "2496": 405, "2528": [405, 419], "2560": 405, "2624": 405, "2656": [405, 419], "65it": [405, 419], "2688": 405, "2720": [405, 419], "61it": [405, 419], "2752": 405, "2784": 405, "2816": 405, "11it": 405, "2848": 405, "2880": 405, "2912": 405, "44it": 405, "2944": [405, 419], "60": [405, 406, 417, 418, 419, 420, 423], "2976": [405, 419], "68it": 405, "3040": 405, "3072": 405, "57it": 405, "62": [405, 419, 420, 421], "3104": 405, "58it": [405, 419], "3136": [405, 408], "3168": 405, "3232": [405, 419], "14it": [405, 419], "1429": 405, "3264": 405, "66": [405, 419, 420], "3296": 405, "81it": [405, 419], "67": [405, 416, 419, 421], "3328": 405, "63it": 405, "3360": 405, "39it": [405, 419], "68": [405, 419, 420], "3392": 405, "3424": 405, "69": [405, 419, 420, 421], "3456": [405, 419], "70": [405, 406, 417, 418, 419, 420, 421], "3488": 405, "42it": 405, "3520": 405, "73": [405, 419], "3552": 405, "77": [405, 417, 419], "3584": 405, "3616": 405, "20it": [405, 419], "3648": 405, "98it": [405, 419], "3680": 405, "3712": 405, "3744": 405, "3776": 405, "3808": 405, "3840": 405, "3872": 405, "43it": 405, "78": [405, 419, 420], "3904": 405, "79": [405, 419], "3936": 405, "3968": 405, "22it": [405, 406], "4032": 405, "26it": 405, "4064": 405, "25it": [405, 406], "4096": 405, "83": [405, 419, 420, 421], "4128": [405, 419], "4160": 405, "4192": 405, "53it": [405, 419], "4224": 405, "4256": [405, 419], "4288": [405, 419], "4320": 405, "4352": 405, "4384": 405, "4416": 405, "27it": 405, "4448": 405, "4480": 405, "4512": 405, "18it": 405, "4544": 405, "4576": 405, "92it": [405, 419], "4608": 405, "93": [405, 419, 420], "4640": 405, "4704": 405, "4736": 405, "4768": 405, "59it": 405, "4832": 405, "4864": 405, "4896": 405, "4928": 405, "69it": [405, 406], "4960": 405, "4992": 405, "5024it": 405, "print_csv_files_in_fold": 405, "folder_path": 405, "csv_file": 405, "output_str": 405, "dirpath": 405, "endswith": 405, "strip": 405, "tmp": [405, 408, 421], "tmprdicwq9v": 405, "dqn_exp_aebd8324": 405, "a253": 405, "11ef": [405, 424], "aed4": [405, 424], "0242ac110002": [405, 424], "3869387209415436": 405, "40816521644592285": 405, "42945271730422974": 405, "39912936091423035": 405, "39912933111190796": 405, "40816524624824524": 405, "41726210713386536": 405, "18430301547050476": 405, "2236718237400055": 405, "32566186785697937": 405, "2001652866601944": 405, "2518596649169922": 405, "31274259090423584": 405, "3573976755142212": 405, "2206142246723175": 405, "3194768726825714": 405, "grad_norm_0": 405, "5255937576293945": 405, "6515660285949707": 405, "521521806716919": 405, "715233087539673": 405, "4771130084991455": 405, "098040580749512": 405, "288264751434326": 405, "1177432537078857": 405, "158692836761475": 405, "10000000894069672": 405, "142857074737549": 405, "qvaluenetwork": 405, "worst": 405, "accuraci": 405, "fanci": [405, 412], "talk": 406, "repetit": [406, 409, 412], "six": 406, "sophist": [406, 418], "invent": 406, "overview": [406, 408, 411, 417, 418, 423], "theta_k": 406, "pi_": 406, "exceed": 406, "discourag": [406, 419], "indispens": 406, "analyz": 406, "lingua": 406, "franca": 406, "defaultdict": [406, 419], "3e": [406, 407, 417, 418], "max_grad_norm": [406, 417, 418], "sub_batch_s": 406, "num_epoch": [406, 418], "entropy_ep": [406, 418], "charact": [406, 408], "inverteddoublependulum": 406, "transmit": 406, "stai": 406, "confid": [406, 417, 418], "ran": 406, "f_": 406, "mu_": 406, "difficulti": [406, 424], "d_ob": 406, "d_action": 406, "policy_modul": [406, 417, 418], "briefli": [406, 417, 418], "refil": [406, 418], "easiest": [406, 411, 417, 418], "mathemat": [406, 417, 418], "tradeoff": [406, 418], "advantage_modul": 406, "lr_schedul": [406, 419], "cosineannealinglr": [406, 419], "eval_str": 406, "tensordict_data": [406, 418], "data_view": [406, 418], "subdata": [406, 417, 418], "cum_reward_str": 406, "4f": [406, 407, 419], "stepcount_str": 406, "param_group": [406, 417], "lr_str": 406, "eval_rollout": 406, "nice": [406, 409, 412], "462": [406, 419], "7314": [406, 419], "0761": 406, "0003": [406, 407, 419], "463": [406, 419], "1060": 406, "3000": 406, "467": [406, 419], "1460": 406, "470": [406, 419], "1906": 406, "0002": [406, 419], "472": [406, 419], "2044": 406, "473": [406, 419], "2154": 406, "7000": 406, "474": [406, 419], "2313": 406, "475": [406, 419], "75it": 406, "2476": [406, 419], "9000": 406, "476": [406, 419], "95it": [406, 419], "2402": 406, "2428": 406, "cap": [406, 421], "figsiz": [406, 419], "subplot": [406, 417, 419, 424], "titl": [406, 407, 408, 418, 419], "84x84": [407, 408], "accessori": 407, "stamp": 407, "assist": 407, "n_cell": 407, "customiz": 407, "wouldn": 407, "qval": 407, "stoch_polici": 407, "opportun": [407, 417], "uniniti": 407, "again": [407, 408, 409, 410, 412, 418, 420, 421, 424], "redund": 407, "strongli": 407, "sake": [407, 420, 421], "20_000": [407, 419], "longest": 407, "npai": 407, "action_spread": 407, "132": [407, 419, 421], "31it": 407, "150": [407, 419], "2215": 407, "rom": 408, "licens": 408, "strong": 408, "impress": 408, "edg": 408, "arduino": 408, "raspberri": 408, "pi": [408, 417, 418, 419], "alon": 408, "examplifi": 408, "ship": 408, "stick": 408, "nearest": 408, "value_mlp": [408, 414], "100_000": [408, 414], "init_rand_step": [408, 414], "total_count": [408, 414], "total_episod": [408, 414], "t0": [408, 414], "screen": [408, 417], "color": [408, 417], "unblock": 408, "policy_transform": 408, "fake_td": 408, "exported_polici": 408, "div": 408, "graph_modul": 408, "print_read": 408, "graphmodul": 408, "p_module_1_module_0_module_0_module_0_0_weight": 408, "f32": 408, "p_module_1_module_0_module_0_module_0_0_bia": 408, "p_module_1_module_0_module_0_module_0_2_weight": 408, "p_module_1_module_0_module_0_module_0_2_bia": 408, "p_module_1_module_0_module_0_module_0_4_weight": 408, "p_module_1_module_0_module_0_module_0_4_bia": 408, "p_module_1_module_0_module_0_module_1_0_weight": 408, "p_module_1_module_0_module_0_module_1_0_bia": 408, "p_module_1_module_0_module_0_module_1_2_weight": 408, "p_module_1_module_0_module_0_module_1_2_bia": 408, "b_module_1_module_1_eps_init": 408, "b_module_1_module_1_eps_end": 408, "b_module_1_module_1_ep": 408, "kwargs_pixel": 408, "u8": 408, "302": [408, 419], "_apply_transform": [408, 419, 424], "aten": 408, "_to_copi": 408, "upsample_nearest2d": 408, "vec": 408, "getitem": 408, "getitem_1": 408, "getitem_2": 408, "mul": 408, "mul_1": 408, "587": [408, 419], "mul_2": 408, "_to_copy_1": 408, "unsqueeze_1": 408, "554": [408, 419], "_conv_forward": 408, "133": [408, 419], "conv2d_1": 408, "relu_1": 408, "conv2d_2": 408, "relu_2": 408, "125": [408, 419, 421], "relu_3": 408, "linear_1": 408, "616": [408, 419], "action_func_map": 408, "i64": 408, "_to_copy_2": 408, "group0": 408, "group0_agent0_ob": 408, "collid": [408, 418], "group0_agent0": 408, "agent0_ob": 408, "digress": 408, "exported_stochastic_polici": 408, "153": [408, 419], "sym": 408, "zuf1": 408, "154": [408, 419], "cond": 408, "action_tensordict": 408, "lt": 408, "b8": 408, "156": [408, 419], "expand_as_right": 408, "180": [408, 419], "_to_copy_3": 408, "trace": 408, "batchsizetransform": 408, "recurrent_polici": 408, "fake_ob": 408, "fake_hidden0": 408, "fake_hidden1": 408, "fake_is_init": 408, "exported_recurrent_polici": 408, "p_module_1_lstm_weight_ih_l0": 408, "p_module_1_lstm_weight_hh_l0": 408, "p_module_1_lstm_bias_ih_l0": 408, "p_module_1_lstm_bias_hh_l0": 408, "p_module_1_lstm_weight_ih_l1": 408, "p_module_1_lstm_weight_hh_l1": 408, "p_module_1_lstm_bias_ih_l1": 408, "p_module_1_lstm_bias_hh_l1": 408, "p_module_2_module_0_weight": 408, "p_module_2_module_0_bia": 408, "p_module_2_module_2_weight": 408, "p_module_2_module_2_bia": 408, "p_module_2_module_4_weight": 408, "p_module_2_module_4_bia": 408, "kwargs_observ": 408, "kwargs_hidden0": 408, "kwargs_hidden1": 408, "kwargs_is_init": 408, "481": [408, 419], "tensordict_exec": 408, "_run_modul": 408, "unsqueeze_2": 408, "unsqueeze_3": 408, "722": 408, "tensordict_shap": 408, "unsqueeze_4": 408, "unsqueeze_5": 408, "unsqueeze_6": 408, "unsqueeze_7": 408, "724": [408, 419], "751": 408, "is_init_expand": 408, "unsqueeze_8": 408, "unsqueeze_9": 408, "unsqueeze_10": 408, "752": 408, "scalarself": 408, "753": 408, "where_1": 408, "_lstm": 408, "slice_1": 408, "9223372036854775807": 408, "slice_2": 408, "select_1": 408, "transpos": 408, "transpose_1": 408, "314": [408, 419], "unbind_1": 408, "getitem_3": 408, "unbind_2": 408, "getitem_4": 408, "getitem_5": 408, "getitem_6": 408, "getitem_7": 408, "getitem_8": 408, "sigmoid_1": 408, "sigmoid_2": 408, "tanh_1": 408, "linear_2": 408, "linear_3": 408, "add_2": 408, "split_1": 408, "getitem_9": 408, "getitem_10": 408, "getitem_11": 408, "getitem_12": 408, "sigmoid_3": 408, "sigmoid_4": 408, "tanh_2": 408, "sigmoid_5": 408, "mul_3": 408, "mul_4": 408, "add_3": 408, "tanh_3": 408, "mul_5": 408, "stack_1": 408, "transpose_2": 408, "transpose_3": 408, "stack_3": 408, "767": 408, "view_1": 408, "view_2": 408, "view_4": 408, "linear_4": 408, "392": [408, 419], "tanh_4": 408, "linear_5": 408, "tanh_5": 408, "linear_6": 408, "squeeze_2": 408, "squeeze_3": 408, "squeeze_6": 408, "platform": [408, 423], "aoti": 408, "_inductor": 408, "aoti_compile_and_packag": 408, "aoti_load_packag": 408, "pt2": 408, "pkg_path": 408, "package_path": 408, "compiled_modul": 408, "tmp5eqb1mfo": 408, "pixels_unsqueez": 408, "exported_dynamic_polici": 408, "dynamic_shap": 408, "recompil": 408, "traceback": [408, 424], "368": [408, 419], "_export": 408, "_trace": 408, "1031": 408, "1004": 408, "exported_program": 408, "1957": 408, "export_artifact": 408, "export_func": 408, "_non_strict_export": 408, "make_fake_input": 408, "non_strict_util": 408, "_check_dynamic_shap": 408, "combined_arg": 408, "771": [408, 419], "usererror": 408, "_dynamo": 408, "exc": 408, "enclos": 408, "mayb": 408, "forgot": 408, "exportdb": 408, "onnxruntim": 408, "showcas": [408, 419], "web": 408, "explain": [408, 420], "tensorrt": 408, "android": 408, "ale_pi": 408, "aleinterfac": 408, "loadrom": 408, "reset_gam": 408, "screen_ob": 408, "getscreenrgb": 408, "tick_param": 408, "bottom": 408, "labelleft": 408, "labelbottom": 408, "imshow": [408, 424], "dynamo_export": 408, "onnx_policy_export": 408, "onnx_file_path": 408, "ort_sess": 408, "inferencesess": 408, "cpuexecutionprovid": 408, "onnxruntime_input": 408, "get_input": 408, "onnx_polici": 408, "lightweight": [408, 413], "onnxruntime_output": 408, "deploy": 408, "topic": [409, 410, 411], "straight": 409, "backtrack": 409, "encapsul": [409, 410, 411], "reset_with_act": 409, "5154": [409, 419], "tp": 409, "stepped_data": 409, "spatial": 409, "useless": 409, "policyless": 409, "appreci": 409, "monitor": 409, "examin": [409, 417], "tackl": 410, "delv": 410, "bypass": 410, "extractor": 410, "palliat": 410, "additivegaussianmodul": [410, 417], "exploration_polici": [410, 417], "greedili": 410, "2d": [410, 417, 418], "innov": [410, 411], "rollout_explor": 410, "sole": 411, "supervis": [411, 412, 421, 424], "n_collect": 411, "get_next_batch": 411, "ddpg_loss": 411, "total_loss": 411, "prove": 411, "reliev": 411, "concern": 411, "accustom": 412, "surprisingli": 412, "fundament": 412, "art": [412, 417, 418], "multirpocess": 412, "countless": 412, "yourself": [412, 417, 418], "324": [412, 417, 419], "portabl": 413, "everywher": 413, "log_scalar": 413, "elaps": 413, "my_scalar": 413, "saw": [413, 419, 421], "excess": 413, "lesson": 414, "voluntarili": 414, "training_loop": 414, "video_record": 414, "arbitrarili": 414, "t1": 414, "conclud": [414, 420], "tutorials_python": 415, "tutorials_jupyt": 415, "env1_obs_kei": 416, "observation_stand": 416, "env2_obs_kei": 416, "observation_walk": 416, "tdreset1": 416, "tdreset2": 416, "lazy_stack": 416, "policy_common": 416, "policy_stand": 416, "policy_walk": 416, "But": 416, "env1_mak": 416, "env2_mak": 416, "_single_task": 416, "td_rollout": 416, "matteo": [417, 418], "bettini": [417, 418], "benchmarl": [417, 418], "simple_tag": 417, "maddpg": [417, 418], "multiagentparticleenviron": 417, "mpe": 417, "centralis": [417, 418], "tie": [417, 418], "iddpg": [417, 418], "typical": 417, "richard": 417, "andrew": 417, "mit": 417, "press": 417, "2018": 417, "mathbf": [417, 418], "decentralis": [417, 418], "literatur": [417, 418], "overcom": [417, 418], "stationari": [417, 418], "concurr": [417, 418], "establish": 417, "gui": [417, 418], "is_sphinx": 417, "__sphinx_build__": 417, "n_iter": [417, 418], "evad": 417, "iteration_when_stop_training_evad": 417, "memory_s": 417, "n_optimiser_step": 417, "train_batch_s": 417, "polyak_tau": 417, "chaser": 417, "red": 417, "circl": [417, 418], "touch": [417, 419], "penal": [417, 418], "acceler": [417, 418], "obstacl": 417, "drag": [417, 418], "elast": [417, 418], "collis": [417, 418], "imped": 417, "n_chaser": 417, "n_evad": 417, "n_obstacl": 417, "use_vma": 417, "simple_tag_v3": 417, "num_good": 417, "num_adversari": 417, "num_obstacl": 417, "max_cycl": 417, "num_vmas_env": [417, 418], "num_good_ag": 417, "num_landmark": 417, "adversary_1": 417, "four": [417, 418, 419], "n_agents_in_that_group": 417, "stress": [417, 418], "paramount": [417, 418], "n_rollout_step": [417, 418], "evolut": [417, 418], "group_nam": 417, "n_agents_in_group": 417, "minor": 417, "agents_exploration_polici": 417, "utilis": [417, 418], "withing": 417, "n_obs_per_ag": [417, 418], "n_actions_per_ag": [417, 418], "share_parameters_polici": [417, 418], "policy_net": [417, 418], "_agent": 417, "grant": [417, 418], "converg": [417, 418], "share_parameters_crit": [417, 418], "obs_act": 417, "cat_modul": 417, "critic_modul": 417, "fantast": [417, 418], "reset_td": 417, "interfer": 417, "subject": [417, 419], "flatten_kei": 417, "process_batch": 417, "group_shap": 417, "get_item_shap": [417, 418], "nested_done_kei": 417, "nested_terminated_kei": 417, "desc": [417, 418], "episode_reward_mean_": 417, "episode_reward_mean_map": 417, "train_group_map": 417, "group_batch": 417, "_group": 417, "loss_nam": 417, "episode_reward_mean": [417, 418], "episode_reward_mean_adversari": 417, "episode_reward_mean_ag": 417, "proce": 417, "fig": 417, "set_ylabel": 417, "axvlin": 417, "orang": 417, "set_xlabel": 417, "video_logg": 417, "vmas_log": 417, "env_with_rend": 417, "vmas_rend": 417, "print_log_dir": 417, "profici": [417, 418], "lidar": 418, "sensor": 418, "mappo": 418, "ippo": 418, "analys": 418, "visualis": 418, "vmas_devic": 418, "6_000": 418, "minibatch_s": 418, "generalis": 418, "simd": 418, "warp": 418, "todai": 418, "surround": 418, "dot": [418, 419], "scenario_nam": 418, "final_rew": 418, "agent_collis": 418, "critic_net": 418, "minibatch": 418, "episode_reward_mean_list": 418, "critic_network_param": 418, "target_critic_network_param": 418, "4579917788505554": 418, "23260341584682465": 418, "1713813543319702": 418, "386345624923706": 418, "8939578533172607": 418, "2214083671569824": 418, "1770293712615967": 418, "6274709701538086": 418, "73148250579834": 418, "737316608428955": 418, "xvfb": 418, "pyvirtualdisplai": 418, "1400": [418, 419], "900": 418, "pil": 418, "rendering_callback": 418, "fromarrai": 418, "gif": 418, "save_al": 418, "append_imag": 418, "freeli": 419, "broader": 419, "wider": 419, "algebra": 419, "acquaint": 419, "avenu": 419, "_apply_to_composit": 419, "default_x": 419, "default_i": 419, "upward": 419, "angular": 419, "sin": 419, "rad": 419, "sec": 419, "angl": 419, "deleg": 419, "new_th": 419, "new_thdot": 419, "g_forc": 419, "angle_norm": 419, "albeit": 419, "high_th": 419, "high_thdot": 419, "low_th": 419, "low_thdot": 419, "trivial": 419, "irrelev": 419, "_make_spec": 419, "td_param": 419, "render_fp": 419, "random_": 419, "_make_step": 419, "staticmethod": 419, "skeleton": 419, "_inv_apply_transform": [419, 424], "subset": [419, 420], "sine": 419, "cosin": 419, "sintransform": 419, "costransform": 419, "t_sin": 419, "t_co": 419, "cat_transform": 419, "simple_rollout": 419, "unexplor": 419, "init_td": 419, "traj_return": 419, "last_reward": 419, "is_ipython": 419, "inlin": 419, "get_backend": 419, "ion": 419, "gcf": 419, "clear_output": 419, "625": 419, "0748": 419, "519": 419, "0499": 419, "4472": 419, "073": 419, "0685": 419, "0408": 419, "552": 419, "9086": 419, "9385": 419, "155": 419, "2568": 419, "4981": 419, "8929": 419, "4491": 419, "581": 419, "3233": 419, "0664": 419, "596": 419, "1021": 419, "5263": 419, "9579": 419, "5807": 419, "8075": 419, "212": 419, "2009": 419, "5525": 419, "914": 419, "2894": 419, "0115": 419, "0977": 419, "1845": 419, "1830": 419, "4858": 419, "233": 419, "2863": 419, "0297": 419, "464": 419, "4617": 419, "5997": 419, "904": 419, "1647": 419, "0777": 419, "901": 419, "4709": 419, "6813": 419, "8317": 419, "3221": 419, "5554": 419, "276": 419, "3353": 419, "701": 419, "8570": 419, "6656": 419, "7779": 419, "6911": 419, "875": 419, "0796": 419, "7082": 419, "308": 419, "0421": 419, "1496": 419, "5037": 419, "1755": 419, "5029": 419, "9454": 419, "665": 419, "9330": 419, "2118": 419, "444": 419, "0995": 419, "6294": 419, "3146": 419, "2909": 419, "461": 419, "9720": 419, "1298": 419, "9923": 419, "0345": 419, "3438": 419, "424": 419, "6953": 419, "5233": 419, "411": 419, "8011": 419, "5329": 419, "2677": 419, "6969": 419, "7010": 419, "376": 419, "9352": 419, "7707": 419, "6178": 419, "5646": 419, "348": 419, "7304": 419, "9407": 419, "942": 419, "3882": 419, "7604": 419, "3507": 419, "8928": 419, "258": 419, "6978": 419, "4641": 419, "549": 419, "6047": 419, "5005": 419, "4136": 419, "2993": 419, "3222": 419, "4046": 419, "275": 419, "6331": 419, "9318": 419, "961": 419, "8331": 419, "1604": 419, "4099": 419, "4761": 419, "4262": 419, "6363": 419, "382": 419, "3593": 419, "7377": 419, "2847": 419, "3443": 419, "867": 419, "3592": 419, "4760": 419, "441": 419, "9950": 419, "8021": 419, "3528": 419, "1214": 419, "708": 419, "4023": 419, "3583": 419, "041": 419, "3801": 419, "0310": 419, "120": 419, "4244": 419, "2039": 419, "4850": 419, "8748": 419, "706": 419, "4897": 419, "9210": 419, "8964": 419, "0832": 419, "3934": 419, "456": 419, "8971": 419, "2933": 419, "3377": 419, "6996": 419, "2274": 419, "8916": 419, "098": 419, "2660": 419, "9110": 419, "4503": 419, "6956": 419, "9172": 419, "4026": 419, "946": 419, "9229": 419, "5205": 419, "294": 419, "8872": 419, "6637": 419, "019": 419, "9281": 419, "2082": 419, "8561": 419, "6574": 419, "357": 419, "4138": 419, "5230": 419, "385": 419, "4065": 419, "5642": 419, "921": 419, "9786": 419, "4129": 419, "5831": 419, "266": 419, "7723": 419, "4152": 419, "0898": 419, "389": 419, "5155": 419, "5376": 419, "5616": 419, "4094": 419, "283": 419, "5333": 419, "4803": 419, "895": 419, "6566": 419, "2588": 419, "662": 419, "4732": 419, "7503": 419, "068": 419, "0714": 419, "3370": 419, "059": 419, "8612": 419, "1915": 419, "3855": 419, "0349": 419, "9644": 419, "4538": 419, "445": 419, "0392": 419, "4080": 419, "1648": 419, "9599": 419, "143": 419, "4284": 419, "5946": 419, "2590": 419, "9181": 419, "4621": 419, "9075": 419, "1772": 419, "9444": 419, "9391": 419, "5595": 419, "8673": 419, "6240": 419, "5919": 419, "1071": 419, "9127": 419, "251": 419, "9799": 419, "3131": 419, "9612": 419, "9705": 419, "8741": 419, "2230": 419, "0972": 419, "0337": 419, "0350": 419, "0654": 419, "2441": 419, "4596": 419, "362": 419, "103": 419, "4362": 419, "171": 419, "104": 419, "4041": 419, "6907": 419, "105": 419, "4664": 419, "2760": 419, "0299": 419, "9712": 419, "349": 419, "107": 419, "3332": 419, "4479": 419, "772": 419, "108": 419, "4357": 419, "9591": 419, "543": 419, "109": 419, "6216": 419, "1353": 419, "692": 419, "110": 419, "6261": 419, "7086": 419, "496": 419, "111": 419, "7758": 419, "9818": 419, "7772": 419, "5055": 419, "113": 419, "5840": 419, "3180": 419, "115": 419, "5275": 419, "6873": 419, "116": 419, "4107": 419, "1624": 419, "117": 419, "6372": 419, "2571": 419, "4039": 419, "4428": 419, "119": 419, "4728": 419, "5628": 419, "6767": 419, "2466": 419, "522": 419, "121": [419, 424], "5873": 419, "5072": 419, "6548": 419, "3766": 419, "123": 419, "5134": 419, "1955": 419, "124": [419, 421], "2481": 419, "0591": 419, "4500": 419, "3368": 419, "126": 419, "9708": 419, "7059": 419, "127": 419, "3031": 419, "2534": 419, "843": 419, "3327": 419, "6193": 419, "129": 419, "4831": 419, "1172": 419, "2593": 419, "4219": 419, "962": 419, "8380": 419, "899": 419, "2721": 419, "9048": 419, "166": 419, "2419": 419, "5248": 419, "2139": 419, "4278": 419, "135": [419, 421], "0690": 419, "5140": 419, "136": [419, 421], "1140": 419, "7402": 419, "137": 419, "5356": 419, "1636": 419, "138": 419, "0671": 419, "8798": 419, "139": [419, 421], "8918": 419, "3298": 419, "307": 419, "140": 419, "1779": 419, "141": 419, "1771": 419, "3624": 419, "936": 419, "1683": 419, "4810": 419, "9373": 419, "4435": 419, "4396": 419, "8092": 419, "145": 419, "2572": 419, "146": 419, "4212": 419, "0260": 419, "147": 419, "0939": 419, "6478": 419, "605": 419, "148": 419, "6606": 419, "7289": 419, "149": 419, "9300": 419, "7193": 419, "563": 419, "1166": 419, "8514": 419, "151": 419, "9108": 419, "0672": 419, "292": 419, "152": 419, "8591": 419, "3768": 419, "9976": 419, "0576": 419, "0067": 419, "935": 419, "4199": 419, "1722": 419, "8310": 419, "3466": 419, "157": 419, "8631": 419, "2492": 419, "8763": 419, "1277": 419, "159": 419, "5562": 419, "7446": 419, "1082": 419, "9830": 419, "161": 419, "0946": 419, "5229": 419, "162": 419, "4574": 419, "6900": 419, "163": [419, 420], "2229": 419, "0318": 419, "482": 419, "0543": 419, "0817": 419, "761": 419, "165": 419, "2809": 419, "5118": 419, "366": 419, "1142": 419, "5635": 419, "167": 419, "1949": 419, "2327": 419, "982": 419, "0967": 419, "0387": 419, "169": 419, "0782": 419, "2150": 419, "170": 419, "5222": 419, "3725": 419, "9288": 419, "9837": 419, "1416": 419, "1099": 419, "173": 419, "8620": 419, "8475": 419, "174": 419, "1807": 419, "4375": 419, "175": 419, "1148": 419, "0645": 419, "8313": 419, "9286": 419, "9770": 419, "178": 419, "5735": 419, "2837": 419, "179": 419, "2926": 419, "9489": 419, "1507": 419, "8724": 419, "3567": 419, "182": 419, "3574": 419, "6140": 419, "183": 419, "7895": 419, "2518": 419, "184": 419, "6146": 419, "185": 419, "8776": 419, "7358": 419, "186": 419, "3722": 419, "8428": 419, "187": 419, "7955": 419, "188": 419, "0092": 419, "7106": 419, "829": 419, "189": [419, 421], "2264": 419, "6919": 419, "190": 419, "1438": 419, "1362": 419, "191": 419, "0618": 419, "8217": 419, "9420": 419, "6765": 419, "193": 419, "7745": 419, "0709": 419, "194": 419, "9478": 419, "6867": 419, "195": 419, "6507": 419, "6225": 419, "196": 419, "2244": 419, "2195": 419, "197": 419, "5385": 419, "9263": 419, "198": 419, "1878": 419, "2374": 419, "8054": 419, "3504": 419, "557": 419, "0766": 419, "201": 419, "2011": 419, "8393": 419, "202": [419, 421], "0803": 419, "7815": 419, "203": 419, "8363": 419, "2460": 419, "204": 419, "8643": 419, "2191": 419, "593": 419, "205": 419, "0773": 419, "1343": 419, "206": 419, "8657": 419, "207": 419, "9304": 419, "7584": 419, "208": 419, "8752": 419, "2307": 419, "5250": 419, "4869": 419, "7837": 419, "5762": 419, "211": 419, "6661": 419, "8600": 419, "2502": 419, "1752": 419, "3075": 419, "8871": 419, "214": 419, "9406": 419, "8090": 419, "215": 419, "6291": 419, "8923": 419, "876": 419, "216": 419, "9504": 419, "21e": 419, "217": 419, "7431": 419, "7880": 419, "218": 419, "4463": 419, "5432": 419, "219": 419, "3793": 419, "3313": 419, "8843": 419, "0369": 419, "065": 419, "221": 419, "4828": 419, "8391": 419, "222": 419, "6265": 419, "2913": 419, "947": 419, "5541": 419, "1252": 419, "7342": 419, "2396": 419, "5936": 419, "1924": 419, "226": 419, "9975": 419, "2045": 419, "227": 419, "8367": 419, "9540": 419, "7259": 419, "6743": 419, "229": 419, "4827": 419, "7528": 419, "230": 419, "7361": 419, "8756": 419, "231": 419, "7646": 419, "1116": 419, "232": 419, "5426": 419, "8385": 419, "5662": 419, "8585": 419, "234": 419, "8234": 419, "7930": 419, "235": 419, "2648": 419, "9309": 419, "236": 419, "6817": 419, "237": 419, "0943": 419, "1533": 419, "238": 419, "3045": 419, "0483": 419, "239": 419, "6415": 419, "0201": 419, "241": 419, "4437": 419, "4365": 419, "242": 419, "0358": 419, "4943": 419, "243": 419, "1272": 419, "5003": 419, "1180": [419, 424], "2637": 419, "245": 419, "7197": 419, "0873": 419, "246": 419, "2917": 419, "0160": 419, "0738": 419, "248": 419, "3689": 419, "0120": 419, "249": 419, "5570": 419, "0475": 419, "250": 419, "4423": 419, "2220": 419, "6803": 419, "252": 419, "1465": 419, "7214": 419, "253": 419, "8801": 419, "7034": 419, "254": 419, "9136": 419, "4076": 419, "7589": 419, "5013": 419, "8150": 419, "2241": 419, "257": 419, "0753": 419, "8081": 419, "1951": 419, "8314": 419, "259": 419, "0038": 419, "260": 419, "0889": 419, "4616": 419, "261": 419, "0655": 419, "262": 419, "8333": 419, "9476": 419, "263": 419, "7554": 419, "3798": 419, "264": 419, "3717": 419, "3947": 419, "529": 419, "265": 419, "3060": 419, "6495": 419, "7467": 419, "8889": 419, "267": 419, "8457": 419, "591": 419, "7137": 419, "0536": 419, "269": 419, "1651": 419, "388": 419, "270": 419, "8246": 419, "5709": 419, "281": 419, "271": 419, "7502": 419, "0521": 419, "272": 419, "5475": 419, "7253": 419, "273": 419, "2856": 419, "7130": 419, "274": 419, "2778": 419, "4122": 419, "8368": 419, "1841": 419, "9622": 419, "1603": 419, "003e": 419, "277": 419, "0247": 419, "278": 419, "2238": 419, "6418": 419, "279": 419, "0626": 419, "2538": 419, "280": 419, "0149": 419, "7380": 419, "2167": 419, "8911": 419, "282": 419, "8725": 419, "1983": 419, "8142": 419, "3709": 419, "284": 419, "4989": 419, "285": 419, "6464": 419, "6210": 419, "286": 419, "9726": 419, "0820": 419, "287": 419, "6975": 419, "9091": 419, "4926": 419, "4791": 419, "289": 419, "0905": 419, "3500": 419, "290": 419, "2287": 419, "291": 419, "9918": 419, "5543": 419, "9245": 419, "6444": 419, "631": 419, "293": 419, "0448": 419, "4769": 419, "8566": 419, "7208": 419, "295": 419, "0966": 419, "296": 419, "5303": 419, "1537": 419, "023": 419, "297": 419, "2682": 419, "564": 419, "298": 419, "4318": 419, "5063": 419, "299": 419, "7475": 419, "4190": 419, "8186": 419, "5077": 419, "301": 419, "1883": 419, "5291": 419, "3998": 419, "303": 419, "3622": 419, "0930": 419, "626": 419, "304": 419, "9500": 419, "5664": 419, "305": 419, "5697": 419, "3024": 419, "306": 419, "3117": 419, "0052": 419, "006": 419, "0981": 419, "9312": 419, "3873": 419, "309": 419, "0411": 419, "2650": 419, "1656": 419, "0228": 419, "004": 419, "311": 419, "1196": 419, "2478": 419, "312": 419, "7353": 419, "0812": 419, "313": 419, "3022": 419, "758": 419, "1406": 419, "4626": 419, "315": 419, "2156": 419, "851": 419, "316": 419, "1953": 419, "3774": 419, "317": 419, "6385": 419, "9917": 419, "318": 419, "2764": 419, "905": 419, "319": 419, "6391": 419, "9317": 419, "9748": 419, "2679": 419, "8495": 419, "5125": 419, "8177": 419, "6602": 419, "0704": 419, "5776": 419, "9833": [419, 423], "1339": 419, "402": 419, "1238": 419, "326": 419, "9299": 419, "0227": 419, "327": 419, "7727": 419, "1607": 419, "336": 419, "328": 419, "3958": 419, "3223": 419, "763": 419, "4742": 419, "1797": 419, "0144": 419, "0085": 419, "791": 419, "331": [419, 423], "8284": 419, "0428": 419, "332": 419, "7365": 419, "333": 419, "4566": 419, "0781": 419, "086": 419, "334": 419, "3355": 419, "0230": 419, "335": 419, "0423": 419, "076": 419, "3711": 419, "1335": 419, "6855": 419, "337": 419, "0304": 419, "0023": 419, "8459": 419, "338": 419, "9998": 419, "4399": 419, "339": 419, "2303": 419, "1346": 419, "2915": 419, "7116": 419, "341": 419, "5560": 419, "0487": 419, "342": 419, "5119": 419, "061": 419, "343": 419, "3305": 419, "3705": 419, "957": 419, "344": 419, "6068": 419, "345": 419, "5731": 419, "3897": 419, "0376": 419, "347": 419, "0434": 419, "012": 419, "1300": 419, "1215": 419, "0968": 419, "0885": 419, "350": 419, "1348": 419, "0073": 419, "5052": 419, "4184": 419, "2817": 419, "8887": 419, "353": 419, "4779": [419, 424], "1009": 419, "354": 419, "0604": 419, "599": 419, "355": 419, "4486": 419, "1176": 419, "656": 419, "356": 419, "2436": 419, "0668": 419, "8849": 419, "0012": 419, "358": 419, "7511": 419, "8804": 419, "359": 419, "8870": 419, "6728": 419, "8841": 419, "5508": 419, "361": 419, "5242": 419, "0013": 419, "6185": 419, "363": 419, "1378": 419, "0204": 419, "364": 419, "0355": 419, "685": 419, "365": 419, "4884": 419, "0231": 419, "0014": 419, "6793": 419, "367": 419, "9834": 419, "863": 419, "6709": 419, "369": 419, "5199": 419, "9790": 419, "370": 419, "9401": 419, "7802": 419, "6723": 419, "372": 419, "2678": 419, "6201": 419, "373": 419, "2184": 419, "7385": 419, "374": 419, "6344": 419, "617": 419, "375": 419, "9945": 419, "0772": 419, "567": 419, "7576": 419, "0398": 419, "377": 419, "3396": 419, "0022": 419, "094": 419, "378": 419, "3073": 419, "4018": 419, "379": 419, "1869": 419, "380": 419, "0481": 419, "1117": 419, "381": 419, "6823": 419, "981": 419, "8305": 419, "0210": 419, "383": 419, "4908": 419, "0272": 419, "538": 419, "3267": 419, "0111": 419, "7965": 419, "1796": 419, "0039": 419, "5396": 419, "386": 419, "3757": 419, "0490": 419, "387": 419, "1394": 419, "4187": 419, "2986": 419, "7954": 419, "1274": 419, "0063": 419, "813": 419, "390": 419, "8706": 419, "0114": 419, "6922": 419, "2423": 419, "9115": 419, "2602": 419, "393": 419, "2449": 419, "0783": 419, "394": 419, "0631": 419, "0057": 419, "7444": 419, "395": 419, "3339": 419, "0167": 419, "396": 419, "4806": 419, "397": 419, "4171": 419, "067": 419, "398": 419, "2618": 419, "5809": 419, "399": 419, "0054": 419, "3364": 419, "8733": 419, "0184": 419, "401": 419, "9137": 419, "0113": 419, "025": 419, "0386": 419, "0625": 419, "403": 419, "1332": 419, "0582": 419, "7816": 419, "404": 419, "8341": 419, "0941": 419, "854": 419, "405": 419, "8615": 419, "588": 419, "406": 419, "3849": 419, "008": 419, "407": 419, "9395": 419, "0765": 419, "055": 419, "408": 419, "2685": 419, "2235": 419, "688": 419, "409": 419, "3052": 419, "4249": 419, "410": 419, "6806": 419, "6383": 419, "3721": 419, "9981": 419, "412": 419, "1862": 419, "822": 419, "413": 419, "9811": 419, "0171": 419, "013": 419, "414": 419, "0252": 419, "0049": 419, "6205": 419, "415": 419, "1108": 419, "4921": 419, "9142": 419, "8130": 419, "417": 419, "1725": 419, "0036": 419, "3196": 419, "418": 419, "7795": 419, "0242": 419, "799": 419, "419": 419, "7737": 419, "0138": 419, "420": 419, "1462": 419, "0053": 419, "421": 419, "9226": 419, "6139": 419, "422": 419, "9889": 419, "0403": 419, "423": 419, "6194": 419, "0032": 419, "3989": 419, "0104": 419, "425": 419, "9960": 419, "0009": 419, "6009": 419, "426": 419, "2697": 419, "0914": 419, "427": 419, "1114": 419, "428": 419, "9862": 419, "1932": 419, "429": 419, "0637": 419, "0623": 419, "082": 419, "430": 419, "9906": 419, "2031": 419, "431": 419, "9948": 419, "0895": 419, "432": 419, "1970": 419, "0256": 419, "4231": 419, "0449": 419, "644": 419, "434": 419, "1039": 419, "1973": 419, "435": 419, "4561": 419, "1225": 419, "436": 419, "0211": 419, "2125": 419, "437": 419, "83it": 419, "3866": 419, "0050": 419, "7202": 419, "438": 419, "6388": 419, "0072": 419, "439": 419, "1187": 419, "0015": 419, "5116": 419, "440": 419, "0432": 419, "0025": 419, "7809": 419, "1925": 419, "0103": 419, "442": 419, "9570": 419, "443": 419, "0871": 419, "5601": 419, "0165": 419, "0047": 419, "6061": 419, "2746": 419, "0027": 419, "7887": 419, "446": 419, "1835": 419, "0035": 419, "855": 419, "447": 419, "8420": 419, "548": 419, "2653": 419, "0126": 419, "9736": 419, "449": 419, "0594": 419, "0119": 419, "6196": 419, "450": 419, "4509": 419, "0373": 419, "451": 419, "0620": 419, "452": 419, "6898": 419, "3235": 419, "687": 419, "453": 419, "5879": 419, "454": 419, "8406": 419, "0694": 419, "455": 419, "8259": 419, "0235": 419, "8500": 419, "0024": 419, "4054": 419, "458": 419, "2027": 419, "0894": 419, "459": 419, "5966": 419, "460": 419, "6942": 419, "0016": 419, "4254": 419, "6703": 419, "0145": 419, "8124": 419, "0218": 419, "9196": 419, "0188": 419, "8986": 419, "0884": 419, "0084": 419, "5624": 419, "465": 419, "8862": 419, "0006": 419, "5384": 419, "5837": 419, "8954": 419, "0101": 419, "6751": 419, "468": 419, "8063": 419, "0122": 419, "9635": 419, "469": 419, "0692": 419, "4216": 419, "1227": 419, "0586": 419, "162e": 419, "471": 419, "9690": 419, "4166": 419, "6324": 419, "0778": 419, "8548": 419, "0017": 419, "4408": 419, "8125": 419, "1515": 419, "2733": 419, "0044": 419, "2836": 419, "7497": 419, "7681": 419, "8547": 419, "0105": 419, "7212": 419, "479": 419, "9848": 419, "0019": 419, "6498": 419, "1987": 419, "0011": 419, "5473": 419, "8991": 419, "6091": 419, "9189": 419, "5771": 419, "483": 419, "6781": 419, "7542": 419, "484": 419, "5959": 419, "0064": 419, "485": 419, "2547": 419, "486": 419, "0636": 419, "547": 419, "487": 419, "0065": 419, "488": 419, "1694": 419, "0083": 419, "5759": 419, "489": 419, "0493": 419, "0021": 419, "7805": 419, "490": 419, "0950": 419, "497": 419, "491": 419, "9717": 419, "3672": 419, "492": 419, "0207": 419, "493": 419, "8266": 419, "5365": 419, "494": 419, "2623": 419, "5078": 419, "495": 419, "4545": 419, "09636": 419, "8754": 419, "0010": 419, "498": 419, "0031": 419, "8269": 419, "499": 419, "6642": 419, "2284": 419, "501": 419, "9130": 419, "0008": 419, "502": 419, "503": 419, "7624": 419, "0056": 419, "3858": 419, "504": 419, "0890": 419, "0042": 419, "505": 419, "7505": 419, "2157": 419, "506": 419, "8394": 419, "3413": 419, "507": 419, "9609": 419, "0041": 419, "6905": 419, "508": 419, "8467": 419, "4409": 419, "509": 419, "510": 419, "8128": 419, "3559": 419, "511": 419, "1479": 419, "0264": 419, "1589": 419, "566": 419, "513": 419, "0046": 419, "5266": 419, "514": 419, "9873": 419, "0112": 419, "9314": 419, "515": 419, "3791": 419, "0721": 419, "516": 419, "4580": 419, "0758": 419, "6114": 419, "517": 419, "2431": 419, "1958": 419, "5553": 419, "8924": 419, "0097": 419, "520": 419, "3737": 419, "0234": 419, "521": 419, "9125": 419, "4623": 419, "3230": 419, "0589": 419, "3784": 419, "523": 419, "9482": 419, "0051": 419, "524": 419, "1979": 419, "0045": 419, "6401": 419, "525": 419, "1588": 419, "0048": 419, "6255": 419, "526": 419, "6084": 419, "3477": 419, "1475": 419, "0209": 419, "528": 419, "7611": 419, "1040": 419, "0099": 419, "0173": 419, "643": 419, "530": 419, "8189": 419, "4358": 419, "531": 419, "9897": 419, "532": 419, "1548": 419, "9751": 419, "533": 419, "6362": 419, "7495": 419, "534": 419, "1749": 419, "9513": 419, "535": 419, "7708": 419, "0371": 419, "536": 419, "2649": 419, "0437": 419, "537": 419, "5491": 419, "0276": 419, "6426": 419, "7294": 419, "078e": 419, "539": 419, "9928": 419, "540": 419, "7937": 419, "0124": 419, "9664": 419, "541": 419, "3342": 419, "542": 419, "2046": 419, "5496": 419, "0956": 419, "0059": 419, "545": 419, "55it": 419, "9028": 419, "5843": 419, "546": 419, "0674": 419, "0178": 419, "797": 419, "2815": 419, "0599": 419, "1587": 419, "9276": 419, "8228": 419, "6164": 419, "551": 419, "6850": 419, "9167": 419, "3092": 419, "0670": 419, "9177": 419, "553": 419, "1599": 419, "0043": 419, "6367": 419, "555": 419, "3657": 419, "556": 419, "6694": 419, "2622": 419, "0372": 419, "4841": 419, "558": 419, "2707": 419, "559": 419, "2267": 419, "5415": 419, "560": 419, "4556": 419, "0163": 419, "561": 419, "1839": 419, "0809": 419, "6262": 419, "562": 419, "0278": 419, "1112": 419, "6155": 419, "565": 419, "1427": 419, "3582": 419, "624": 419, "7870": 419, "9490": 419, "0439": 419, "8796": 419, "568": 419, "8026": 419, "612": 419, "569": 419, "3147": 419, "8486": 419, "570": 419, "7917": 419, "0129": 419, "571": 419, "9553": 419, "0020": 419, "6871": 419, "572": 419, "3132": 419, "0159": 419, "8646": 419, "573": 419, "5320": 419, "0269": 419, "574": 419, "2955": 419, "0245": 419, "575": 419, "3347": 419, "0179": 419, "9718": 419, "1629": 419, "577": 419, "4164": 419, "0070": 419, "4335": 419, "579": 419, "3049": 419, "9063": 419, "580": 419, "8785": 419, "3295": 419, "5184": 419, "0546": 419, "582": 419, "4589": 419, "583": 419, "4697": 419, "584": 419, "2397": 419, "585": 419, "4953": 419, "1775": 419, "586": 419, "2258": 419, "0110": 419, "7671": 419, "3981": 419, "8590": 419, "0007": 419, "589": 419, "9820": 419, "4221": 419, "590": 419, "1293": 419, "0116": 419, "868": 419, "1675": 419, "5931": 419, "592": 419, "2910": 419, "5219": 419, "2124": 419, "1730": 419, "737": 419, "594": 419, "2914": 419, "0206": 419, "595": 419, "0172": 419, "3982": 419, "0945": 419, "0121": 419, "4789": 419, "597": 419, "3805": 419, "4074": 419, "598": 419, "3310": 419, "5065": 419, "6028": 419, "6316": 419, "6724": 419, "6523": 419, "601": 419, "0136": 419, "4298": 419, "602": 419, "3524": 419, "2629": 419, "603": 419, "2635": 419, "7839": 419, "604": 419, "6041": 419, "8027": 419, "4170": 419, "4675": 419, "606": 419, "3153": 419, "9316": 419, "607": 419, "0649": 419, "9722": 419, "7989": 419, "0329": 419, "609": 419, "1976": 419, "6852": 419, "610": 419, "4793": 419, "1255": 419, "611": 419, "4581": 419, "0394": 419, "2047": 419, "0326": 419, "613": 419, "8967": 419, "8619": 419, "614": 419, "5906": 419, "6491": 419, "615": 419, "6634": 419, "4394": 419, "0624": 419, "0061": 419, "5676": 419, "3259": 419, "0131": 419, "7733": 419, "618": 419, "7515": 419, "0189": 419, "5575": 419, "619": 419, "9313": 419, "6286": 419, "620": 419, "4325": 419, "7832": 419, "1134": 419, "622": 419, "4572": 419, "0500": 419, "5838": 419, "623": 419, "3818": 419, "8623": 419, "1253": 419, "6622": 419, "semat": 420, "r3mtransform": 420, "env_transform": [420, 424], "s3": 420, "amazonaw": 420, "r3m_50": 420, "374m": 420, "5m": 420, "103mb": 420, "2m": 420, "118mb": 420, "8mb": 420, "0m": 420, "7mb": 420, "5mb": 420, "4mb": 420, "4m": 420, "2mb": 420, "1mb": 420, "104m": 420, "115m": 420, "130m": 420, "9mb": 420, "137m": 420, "148m": 420, "162m": 420, "0mb": 420, "170m": 420, "180m": 420, "197m": 420, "212m": 420, "218m": 420, "229m": 420, "246m": 420, "262m": 420, "266m": 420, "277m": 420, "281m": 420, "293m": 420, "298m": 420, "311m": 420, "328m": 420, "342m": 420, "348m": 420, "6mb": 420, "360m": 420, "3mb": 420, "373m": 420, "wiser": 420, "2757": 420, "batteri": 421, "buffer_list": 421, "lowest": 421, "medium": 421, "buffer_lazytensor": 421, "buffer_lazymemmap": 421, "tempdir": 421, "tmph3sorb7k": 421, "fullest": 421, "mydata": 421, "background": 421, "question": [421, 423], "_i": 421, "artifici": 421, "0893e": 421, "hamper": 421, "she": 421, "pars": 421, "proport": 421, "barcontain": 421, "artist": 421, "reappear": 421, "unfold": 421, "problemat": 421, "4th": 421, "prioritizedslicesampl": 421, "tensordictmaxvaluewrit": 421, "demo": 423, "icml": 423, "vmoen": 423, "fb": 423, "invest": 423, "media": 423, "predominantli": 423, "data2": 423, "sub_key1": 423, "scturctur": 423, "data_stack": 423, "data_sampl": 423, "_sampler": 423, "_sum_tre": 423, "06984967738389969": 423, "28791671991348267": 423, "modulenotfounderror": 423, "noopresetenv": [423, 424], "backbone_modul": 423, "tailor": 423, "params_expand": 423, "exec_sequ": 423, "tensordict_exp": 423, "base_modul": 423, "asstridedbackward0": 423, "8728": 423, "1334": 423, "3494": 423, "6887": 423, "6402": 423, "_safetanhnoepsbackward": 423, "1132": 423, "1762": 423, "3430": 423, "2668": 423, "2918": 423, "6239": 423, "tensordicts_prealloc": 423, "tensordicts_stack": 423, "tensordict_rollout": [423, 424], "automatical": 423, "particularili": [423, 424], "concatmodul": 423, "loss_td": 423, "contributor": 423, "curiou": 423, "nascent": 423, "unsupervis": 424, "unifi": 424, "_build_env": 424, "amidar": 424, "assault": 424, "3541": 424, "deserv": 424, "__episode__": 424, "__trajectory__": 424, "void": 424, "reproduct": 424, "reset_data": 424, "tensordict_tprim": 424, "axesimag": 424, "0x7f7e8805a1a0": 424, "wrapper1": 424, "wrapper2": 424, "obviou": 424, "truth": 424, "env_transformed_bi": 424, "stanc": 424, "transformeddistribut": 424, "base_dist": 424, "concat": 424, "mofidi": 424, "transformedenviron": 424, "moderet": 424, "computation": 424, "legitim": 424, "incom": 424, "amongst": 424, "has_cuda": 424, "wor": 424, "convention": 424, "markovian": 424, "3288080526": 424, "constain": 424, "bar_": 424, "get_someth": 424, "bar_d37dc512": 424, "a252": 424, "aargh": 424, "is_clos": 424, "foo_list": 424, "batched_env": 424, "_dispatch_caller_parallel": 424, "0x7f7e04b0d600": 424, "bar_d7ec3444": 424, "a20b": 424, "bar_d7ea4116": 424, "9f72": 424, "bar_d7efd78": 424, "93d1": 424, "evolv": 424, "steadi": 424, "approx": 424, "0769": 424, "1260": 424, "3121": 424, "1383": 424, "1691": 424, "_extra_st": 424, "observation_ssq": 424, "observation_sum": 424, "reward_count": 424, "reward_ssq": 424, "reward_sum": 424, "2196": 424, "9259": 424, "4012": 424, "3743": 424, "3560": 424, "dispach": 424, "absor": 424, "718": 424}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MultiCategorical"], [42, 0, 1, "", "MultiDiscreteTensorSpec"], [43, 0, 1, "", "MultiOneHot"], [44, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [45, 0, 1, "", "MultiStep"], [46, 0, 1, "", "Nested2TED"], [47, 0, 1, "", "NonTensor"], [48, 0, 1, "", "NonTensorSpec"], [49, 0, 1, "", "OneHotDiscreteTensorSpec"], [50, 0, 1, "", "PairwiseDataset"], [51, 0, 1, "", "PrioritizedReplayBuffer"], [52, 0, 1, "", "PromptData"], [53, 0, 1, "", "PromptTensorDictTokenizer"], [54, 0, 1, "", "QueryModule"], [55, 0, 1, "", "RandomProjectionHash"], [56, 0, 1, "", "ReplayBuffer"], [57, 0, 1, "", "RewardData"], [58, 0, 1, "", "RolloutFromModel"], [59, 0, 1, "", "SipHash"], [60, 0, 1, "", "Stacked"], [61, 0, 1, "", "StackedComposite"], [62, 0, 1, "", "TED2Flat"], [63, 0, 1, "", "TED2Nested"], [64, 0, 1, "", "TensorDictMap"], [65, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [66, 0, 1, "", "TensorDictReplayBuffer"], [67, 0, 1, "", "TensorDictTokenizer"], [68, 0, 1, "", "TensorMap"], [69, 0, 1, "", "TensorSpec"], [70, 0, 1, "", "TokenizedDatasetLoader"], [71, 0, 1, "", "Tree"], [72, 0, 1, "", "Unbounded"], [73, 0, 1, "", "UnboundedContinuous"], [74, 0, 1, "", "UnboundedContinuousTensorSpec"], [75, 0, 1, "", "UnboundedDiscrete"], [76, 0, 1, "", "UnboundedDiscreteTensorSpec"], [77, 0, 1, "", "check_no_exclusive_keys"], [78, 0, 1, "", "consolidate_spec"], [79, 0, 1, "", "contains_lazy_spec"], [80, 0, 1, "", "create_infinite_iterator"], [90, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MultiCategorical": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 3, 1, "", "device"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "enumerate"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "make_neg_dim"], [41, 4, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_categorical"], [41, 1, 1, "", "to_categorical_spec"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "to_one_hot"], [41, 1, 1, "", "to_one_hot_spec"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "update_mask"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "compile"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "mtia"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_full_backward_pre_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_load_state_dict_pre_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "register_state_dict_post_hook"], [45, 1, 1, "", "register_state_dict_pre_hook"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_submodule"], [45, 1, 1, "", "share_memory"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "clone"], [47, 1, 1, "", "contains"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 4, 1, "", "device"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "enumerate"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "make_neg_dim"], [47, 4, 1, "", "ndim"], [47, 1, 1, "", "ndimension"], [47, 1, 1, "", "one"], [47, 1, 1, "", "ones"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "sample"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "unsqueeze"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"], [47, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 3, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_categorical"], [49, 1, 1, "", "to_categorical_spec"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "to_one_hot"], [49, 1, 1, "", "to_one_hot_spec"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "update_mask"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[50, 4, 1, "", "batch_size"], [50, 4, 1, "", "device"], [50, 1, 1, "", "from_dataset"], [50, 1, 1, "", "from_tensordict"], [50, 1, 1, "", "get"], [50, 1, 1, "", "load"], [50, 1, 1, "", "load_"], [50, 1, 1, "", "load_memmap"], [50, 1, 1, "", "load_state_dict"], [50, 1, 1, "", "memmap"], [50, 1, 1, "", "memmap_"], [50, 1, 1, "", "memmap_like"], [50, 1, 1, "", "memmap_refresh_"], [50, 4, 1, "", "names"], [50, 1, 1, "", "save"], [50, 1, 1, "", "set"], [50, 1, 1, "", "state_dict"], [50, 1, 1, "", "to_tensordict"], [50, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dump"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "load"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "register_load_hook"], [51, 1, 1, "", "register_save_hook"], [51, 1, 1, "", "sample"], [51, 4, 1, "", "sampler"], [51, 1, 1, "", "save"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 4, 1, "", "storage"], [51, 4, 1, "", "write_count"], [51, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[52, 4, 1, "", "batch_size"], [52, 4, 1, "", "device"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 4, 1, "", "names"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[54, 1, 1, "", "add_module"], [54, 1, 1, "", "apply"], [54, 1, 1, "", "bfloat16"], [54, 1, 1, "", "buffers"], [54, 1, 1, "", "children"], [54, 1, 1, "", "compile"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 1, 1, "", "double"], [54, 1, 1, "", "eval"], [54, 1, 1, "", "extra_repr"], [54, 1, 1, "", "float"], [54, 1, 1, "", "forward"], [54, 1, 1, "", "get_buffer"], [54, 1, 1, "", "get_extra_state"], [54, 1, 1, "", "get_parameter"], [54, 1, 1, "", "get_submodule"], [54, 1, 1, "", "half"], [54, 1, 1, "", "ipu"], [54, 1, 1, "", "is_tdmodule_compatible"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "modules"], [54, 1, 1, "", "mtia"], [54, 1, 1, "", "named_buffers"], [54, 1, 1, "", "named_children"], [54, 1, 1, "", "named_modules"], [54, 1, 1, "", "named_parameters"], [54, 1, 1, "", "parameters"], [54, 1, 1, "", "register_backward_hook"], [54, 1, 1, "", "register_buffer"], [54, 1, 1, "", "register_forward_hook"], [54, 1, 1, "", "register_forward_pre_hook"], [54, 1, 1, "", "register_full_backward_hook"], [54, 1, 1, "", "register_full_backward_pre_hook"], [54, 1, 1, "", "register_load_state_dict_post_hook"], [54, 1, 1, "", "register_load_state_dict_pre_hook"], [54, 1, 1, "", "register_module"], [54, 1, 1, "", "register_parameter"], [54, 1, 1, "", "register_state_dict_post_hook"], [54, 1, 1, "", "register_state_dict_pre_hook"], [54, 1, 1, "", "requires_grad_"], [54, 1, 1, "", "reset_out_keys"], [54, 1, 1, "", "reset_parameters_recursive"], [54, 1, 1, "", "select_out_keys"], [54, 1, 1, "", "set_extra_state"], [54, 1, 1, "", "set_submodule"], [54, 1, 1, "", "share_memory"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_empty"], [54, 1, 1, "", "train"], [54, 1, 1, "", "type"], [54, 1, 1, "", "xpu"], [54, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[55, 1, 1, "", "add_module"], [55, 1, 1, "", "apply"], [55, 1, 1, "", "bfloat16"], [55, 1, 1, "", "buffers"], [55, 1, 1, "", "children"], [55, 1, 1, "", "compile"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 1, 1, "", "double"], [55, 1, 1, "", "eval"], [55, 1, 1, "", "extra_repr"], [55, 1, 1, "", "fit"], [55, 1, 1, "", "float"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_buffer"], [55, 1, 1, "", "get_extra_state"], [55, 1, 1, "", "get_parameter"], [55, 1, 1, "", "get_submodule"], [55, 1, 1, "", "half"], [55, 1, 1, "", "ipu"], [55, 1, 1, "", "load_state_dict"], [55, 1, 1, "", "modules"], [55, 1, 1, "", "mtia"], [55, 1, 1, "", "named_buffers"], [55, 1, 1, "", "named_children"], [55, 1, 1, "", "named_modules"], [55, 1, 1, "", "named_parameters"], [55, 1, 1, "", "parameters"], [55, 1, 1, "", "register_backward_hook"], [55, 1, 1, "", "register_buffer"], [55, 1, 1, "", "register_forward_hook"], [55, 1, 1, "", "register_forward_pre_hook"], [55, 1, 1, "", "register_full_backward_hook"], [55, 1, 1, "", "register_full_backward_pre_hook"], [55, 1, 1, "", "register_load_state_dict_post_hook"], [55, 1, 1, "", "register_load_state_dict_pre_hook"], [55, 1, 1, "", "register_module"], [55, 1, 1, "", "register_parameter"], [55, 1, 1, "", "register_state_dict_post_hook"], [55, 1, 1, "", "register_state_dict_pre_hook"], [55, 1, 1, "", "requires_grad_"], [55, 1, 1, "", "set_extra_state"], [55, 1, 1, "", "set_submodule"], [55, 1, 1, "", "share_memory"], [55, 1, 1, "", "state_dict"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_empty"], [55, 1, 1, "", "train"], [55, 1, 1, "", "type"], [55, 1, 1, "", "xpu"], [55, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dump"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "load"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "register_load_hook"], [56, 1, 1, "", "register_save_hook"], [56, 1, 1, "", "sample"], [56, 4, 1, "", "sampler"], [56, 1, 1, "", "save"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 4, 1, "", "storage"], [56, 4, 1, "", "write_count"], [56, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[57, 4, 1, "", "batch_size"], [57, 4, 1, "", "device"], [57, 1, 1, "", "from_tensordict"], [57, 1, 1, "", "get"], [57, 1, 1, "", "load"], [57, 1, 1, "", "load_"], [57, 1, 1, "", "load_memmap"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "memmap"], [57, 1, 1, "", "memmap_"], [57, 1, 1, "", "memmap_like"], [57, 1, 1, "", "memmap_refresh_"], [57, 4, 1, "", "names"], [57, 1, 1, "", "save"], [57, 1, 1, "", "set"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to_tensordict"], [57, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[58, 1, 1, "", "create_rollout_td"], [58, 1, 1, "", "generate"], [58, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[59, 1, 1, "", "add_module"], [59, 1, 1, "", "apply"], [59, 1, 1, "", "bfloat16"], [59, 1, 1, "", "buffers"], [59, 1, 1, "", "children"], [59, 1, 1, "", "compile"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 1, 1, "", "double"], [59, 1, 1, "", "eval"], [59, 1, 1, "", "extra_repr"], [59, 1, 1, "", "float"], [59, 1, 1, "", "forward"], [59, 1, 1, "", "get_buffer"], [59, 1, 1, "", "get_extra_state"], [59, 1, 1, "", "get_parameter"], [59, 1, 1, "", "get_submodule"], [59, 1, 1, "", "half"], [59, 1, 1, "", "ipu"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "modules"], [59, 1, 1, "", "mtia"], [59, 1, 1, "", "named_buffers"], [59, 1, 1, "", "named_children"], [59, 1, 1, "", "named_modules"], [59, 1, 1, "", "named_parameters"], [59, 1, 1, "", "parameters"], [59, 1, 1, "", "register_backward_hook"], [59, 1, 1, "", "register_buffer"], [59, 1, 1, "", "register_forward_hook"], [59, 1, 1, "", "register_forward_pre_hook"], [59, 1, 1, "", "register_full_backward_hook"], [59, 1, 1, "", "register_full_backward_pre_hook"], [59, 1, 1, "", "register_load_state_dict_post_hook"], [59, 1, 1, "", "register_load_state_dict_pre_hook"], [59, 1, 1, "", "register_module"], [59, 1, 1, "", "register_parameter"], [59, 1, 1, "", "register_state_dict_post_hook"], [59, 1, 1, "", "register_state_dict_pre_hook"], [59, 1, 1, "", "requires_grad_"], [59, 1, 1, "", "set_extra_state"], [59, 1, 1, "", "set_submodule"], [59, 1, 1, "", "share_memory"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_empty"], [59, 1, 1, "", "train"], [59, 1, 1, "", "type"], [59, 1, 1, "", "xpu"], [59, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 4, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "enumerate"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "get"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_empty"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "items"], [61, 1, 1, "", "keys"], [61, 1, 1, "", "lock_"], [61, 1, 1, "", "make_neg_dim"], [61, 4, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unlock_"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "values"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[64, 1, 1, "", "add_module"], [64, 1, 1, "", "apply"], [64, 1, 1, "", "bfloat16"], [64, 1, 1, "", "buffers"], [64, 1, 1, "", "children"], [64, 1, 1, "", "compile"], [64, 1, 1, "", "cpu"], [64, 1, 1, "", "cuda"], [64, 1, 1, "", "double"], [64, 1, 1, "", "eval"], [64, 1, 1, "", "extra_repr"], [64, 1, 1, "", "float"], [64, 1, 1, "", "forward"], [64, 1, 1, "", "from_tensordict_pair"], [64, 1, 1, "", "get_buffer"], [64, 1, 1, "", "get_extra_state"], [64, 1, 1, "", "get_parameter"], [64, 1, 1, "", "get_submodule"], [64, 1, 1, "", "half"], [64, 1, 1, "", "ipu"], [64, 1, 1, "", "is_tdmodule_compatible"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "modules"], [64, 1, 1, "", "mtia"], [64, 1, 1, "", "named_buffers"], [64, 1, 1, "", "named_children"], [64, 1, 1, "", "named_modules"], [64, 1, 1, "", "named_parameters"], [64, 1, 1, "", "parameters"], [64, 1, 1, "", "register_backward_hook"], [64, 1, 1, "", "register_buffer"], [64, 1, 1, "", "register_forward_hook"], [64, 1, 1, "", "register_forward_pre_hook"], [64, 1, 1, "", "register_full_backward_hook"], [64, 1, 1, "", "register_full_backward_pre_hook"], [64, 1, 1, "", "register_load_state_dict_post_hook"], [64, 1, 1, "", "register_load_state_dict_pre_hook"], [64, 1, 1, "", "register_module"], [64, 1, 1, "", "register_parameter"], [64, 1, 1, "", "register_state_dict_post_hook"], [64, 1, 1, "", "register_state_dict_pre_hook"], [64, 1, 1, "", "requires_grad_"], [64, 1, 1, "", "reset_out_keys"], [64, 1, 1, "", "reset_parameters_recursive"], [64, 1, 1, "", "select_out_keys"], [64, 1, 1, "", "set_extra_state"], [64, 1, 1, "", "set_submodule"], [64, 1, 1, "", "share_memory"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to"], [64, 1, 1, "", "to_empty"], [64, 1, 1, "", "train"], [64, 1, 1, "", "type"], [64, 1, 1, "", "xpu"], [64, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 1, 1, "", "dump"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "load"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "register_load_hook"], [65, 1, 1, "", "register_save_hook"], [65, 1, 1, "", "sample"], [65, 4, 1, "", "sampler"], [65, 1, 1, "", "save"], [65, 1, 1, "", "set_sampler"], [65, 1, 1, "", "set_storage"], [65, 1, 1, "", "set_writer"], [65, 4, 1, "", "storage"], [65, 4, 1, "", "write_count"], [65, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[66, 1, 1, "", "add"], [66, 1, 1, "", "append_transform"], [66, 1, 1, "", "dump"], [66, 1, 1, "", "dumps"], [66, 1, 1, "", "empty"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "insert_transform"], [66, 1, 1, "", "load"], [66, 1, 1, "", "loads"], [66, 1, 1, "", "register_load_hook"], [66, 1, 1, "", "register_save_hook"], [66, 1, 1, "", "sample"], [66, 4, 1, "", "sampler"], [66, 1, 1, "", "save"], [66, 1, 1, "", "set_sampler"], [66, 1, 1, "", "set_storage"], [66, 1, 1, "", "set_writer"], [66, 4, 1, "", "storage"], [66, 4, 1, "", "write_count"], [66, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[69, 1, 1, "", "assert_is_in"], [69, 1, 1, "", "clear_device_"], [69, 1, 1, "", "clone"], [69, 1, 1, "", "contains"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 4, 1, "", "device"], [69, 1, 1, "", "encode"], [69, 1, 1, "", "enumerate"], [69, 1, 1, "", "expand"], [69, 1, 1, "", "flatten"], [69, 1, 1, "", "implements_for_spec"], [69, 1, 1, "", "index"], [69, 1, 1, "", "is_in"], [69, 1, 1, "", "make_neg_dim"], [69, 4, 1, "", "ndim"], [69, 1, 1, "", "ndimension"], [69, 1, 1, "", "one"], [69, 1, 1, "", "ones"], [69, 1, 1, "", "project"], [69, 1, 1, "", "rand"], [69, 1, 1, "", "reshape"], [69, 1, 1, "", "sample"], [69, 1, 1, "", "squeeze"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_numpy"], [69, 1, 1, "", "type_check"], [69, 1, 1, "", "unflatten"], [69, 1, 1, "", "unsqueeze"], [69, 1, 1, "", "view"], [69, 1, 1, "", "zero"], [69, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[70, 1, 1, "", "dataset_to_tensordict"], [70, 1, 1, "", "load"]], "torchrl.data.Tree": [[71, 4, 1, "", "batch_size"], [71, 4, 1, "", "device"], [71, 1, 1, "", "from_tensordict"], [71, 1, 1, "", "get"], [71, 1, 1, "", "get_vertex_by_hash"], [71, 1, 1, "", "get_vertex_by_id"], [71, 4, 1, "", "is_terminal"], [71, 1, 1, "", "load"], [71, 1, 1, "", "load_"], [71, 1, 1, "", "load_memmap"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "memmap"], [71, 1, 1, "", "memmap_"], [71, 1, 1, "", "memmap_like"], [71, 1, 1, "", "memmap_refresh_"], [71, 4, 1, "", "names"], [71, 4, 1, "", "num_children"], [71, 1, 1, "", "num_vertices"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "to_tensordict"], [71, 1, 1, "", "unbind"], [71, 1, 1, "", "vertices"]], "torchrl.data.Unbounded": [[72, 1, 1, "", "assert_is_in"], [72, 1, 1, "", "clear_device_"], [72, 1, 1, "", "clone"], [72, 1, 1, "", "contains"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 4, 1, "", "device"], [72, 1, 1, "", "encode"], [72, 1, 1, "", "enumerate"], [72, 1, 1, "", "expand"], [72, 1, 1, "", "flatten"], [72, 1, 1, "", "implements_for_spec"], [72, 1, 1, "", "index"], [72, 1, 1, "", "is_in"], [72, 1, 1, "", "make_neg_dim"], [72, 4, 1, "", "ndim"], [72, 1, 1, "", "ndimension"], [72, 1, 1, "", "one"], [72, 1, 1, "", "ones"], [72, 1, 1, "", "project"], [72, 1, 1, "", "rand"], [72, 1, 1, "", "reshape"], [72, 1, 1, "", "sample"], [72, 1, 1, "", "squeeze"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_numpy"], [72, 1, 1, "", "type_check"], [72, 1, 1, "", "unflatten"], [72, 1, 1, "", "unsqueeze"], [72, 1, 1, "", "view"], [72, 1, 1, "", "zero"], [72, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[73, 1, 1, "", "assert_is_in"], [73, 1, 1, "", "clear_device_"], [73, 1, 1, "", "clone"], [73, 1, 1, "", "contains"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 4, 1, "", "device"], [73, 1, 1, "", "encode"], [73, 1, 1, "", "enumerate"], [73, 1, 1, "", "expand"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "implements_for_spec"], [73, 1, 1, "", "index"], [73, 1, 1, "", "is_in"], [73, 1, 1, "", "make_neg_dim"], [73, 4, 1, "", "ndim"], [73, 1, 1, "", "ndimension"], [73, 1, 1, "", "one"], [73, 1, 1, "", "ones"], [73, 1, 1, "", "project"], [73, 1, 1, "", "rand"], [73, 1, 1, "", "reshape"], [73, 1, 1, "", "sample"], [73, 1, 1, "", "squeeze"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_numpy"], [73, 1, 1, "", "type_check"], [73, 1, 1, "", "unflatten"], [73, 1, 1, "", "unsqueeze"], [73, 1, 1, "", "view"], [73, 1, 1, "", "zero"], [73, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 4, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 4, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[81, 0, 1, "", "AtariDQNExperienceReplay"], [82, 0, 1, "", "BaseDatasetExperienceReplay"], [83, 0, 1, "", "D4RLExperienceReplay"], [84, 0, 1, "", "GenDGRLExperienceReplay"], [85, 0, 1, "", "MinariExperienceReplay"], [86, 0, 1, "", "OpenMLExperienceReplay"], [87, 0, 1, "", "OpenXExperienceReplay"], [88, 0, 1, "", "RobosetExperienceReplay"], [89, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[81, 1, 1, "", "add"], [81, 1, 1, "", "append_transform"], [81, 4, 1, "", "data_path"], [81, 4, 1, "", "data_path_root"], [81, 1, 1, "", "delete"], [81, 1, 1, "", "dump"], [81, 1, 1, "", "dumps"], [81, 1, 1, "", "empty"], [81, 1, 1, "", "extend"], [81, 1, 1, "", "insert_transform"], [81, 1, 1, "", "load"], [81, 1, 1, "", "loads"], [81, 1, 1, "", "preprocess"], [81, 1, 1, "", "register_load_hook"], [81, 1, 1, "", "register_save_hook"], [81, 1, 1, "", "sample"], [81, 4, 1, "", "sampler"], [81, 1, 1, "", "save"], [81, 1, 1, "", "set_sampler"], [81, 1, 1, "", "set_storage"], [81, 1, 1, "", "set_writer"], [81, 4, 1, "", "storage"], [81, 4, 1, "", "write_count"], [81, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[82, 1, 1, "", "add"], [82, 1, 1, "", "append_transform"], [82, 4, 1, "", "data_path"], [82, 4, 1, "", "data_path_root"], [82, 1, 1, "", "delete"], [82, 1, 1, "", "dump"], [82, 1, 1, "", "dumps"], [82, 1, 1, "", "empty"], [82, 1, 1, "", "extend"], [82, 1, 1, "", "insert_transform"], [82, 1, 1, "", "load"], [82, 1, 1, "", "loads"], [82, 1, 1, "", "preprocess"], [82, 1, 1, "", "register_load_hook"], [82, 1, 1, "", "register_save_hook"], [82, 1, 1, "", "sample"], [82, 4, 1, "", "sampler"], [82, 1, 1, "", "save"], [82, 1, 1, "", "set_sampler"], [82, 1, 1, "", "set_storage"], [82, 1, 1, "", "set_writer"], [82, 4, 1, "", "storage"], [82, 4, 1, "", "write_count"], [82, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[83, 1, 1, "", "add"], [83, 1, 1, "", "append_transform"], [83, 4, 1, "", "data_path"], [83, 4, 1, "", "data_path_root"], [83, 1, 1, "", "delete"], [83, 1, 1, "", "dump"], [83, 1, 1, "", "dumps"], [83, 1, 1, "", "empty"], [83, 1, 1, "", "extend"], [83, 1, 1, "", "insert_transform"], [83, 1, 1, "", "load"], [83, 1, 1, "", "loads"], [83, 1, 1, "", "preprocess"], [83, 1, 1, "", "register_load_hook"], [83, 1, 1, "", "register_save_hook"], [83, 1, 1, "", "sample"], [83, 4, 1, "", "sampler"], [83, 1, 1, "", "save"], [83, 1, 1, "", "set_sampler"], [83, 1, 1, "", "set_storage"], [83, 1, 1, "", "set_writer"], [83, 4, 1, "", "storage"], [83, 4, 1, "", "write_count"], [83, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[84, 1, 1, "", "add"], [84, 1, 1, "", "append_transform"], [84, 4, 1, "", "data_path"], [84, 4, 1, "", "data_path_root"], [84, 1, 1, "", "delete"], [84, 1, 1, "", "dump"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "empty"], [84, 1, 1, "", "extend"], [84, 1, 1, "", "insert_transform"], [84, 1, 1, "", "load"], [84, 1, 1, "", "loads"], [84, 1, 1, "", "preprocess"], [84, 1, 1, "", "register_load_hook"], [84, 1, 1, "", "register_save_hook"], [84, 1, 1, "", "sample"], [84, 4, 1, "", "sampler"], [84, 1, 1, "", "save"], [84, 1, 1, "", "set_sampler"], [84, 1, 1, "", "set_storage"], [84, 1, 1, "", "set_writer"], [84, 4, 1, "", "storage"], [84, 4, 1, "", "write_count"], [84, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[85, 1, 1, "", "add"], [85, 1, 1, "", "append_transform"], [85, 4, 1, "", "data_path"], [85, 4, 1, "", "data_path_root"], [85, 1, 1, "", "delete"], [85, 1, 1, "", "dump"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "empty"], [85, 1, 1, "", "extend"], [85, 1, 1, "", "insert_transform"], [85, 1, 1, "", "load"], [85, 1, 1, "", "loads"], [85, 1, 1, "", "preprocess"], [85, 1, 1, "", "register_load_hook"], [85, 1, 1, "", "register_save_hook"], [85, 1, 1, "", "sample"], [85, 4, 1, "", "sampler"], [85, 1, 1, "", "save"], [85, 1, 1, "", "set_sampler"], [85, 1, 1, "", "set_storage"], [85, 1, 1, "", "set_writer"], [85, 4, 1, "", "storage"], [85, 4, 1, "", "write_count"], [85, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[86, 1, 1, "", "add"], [86, 1, 1, "", "append_transform"], [86, 4, 1, "", "data_path"], [86, 4, 1, "", "data_path_root"], [86, 1, 1, "", "delete"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "dumps"], [86, 1, 1, "", "empty"], [86, 1, 1, "", "extend"], [86, 1, 1, "", "insert_transform"], [86, 1, 1, "", "load"], [86, 1, 1, "", "loads"], [86, 1, 1, "", "preprocess"], [86, 1, 1, "", "register_load_hook"], [86, 1, 1, "", "register_save_hook"], [86, 1, 1, "", "sample"], [86, 4, 1, "", "sampler"], [86, 1, 1, "", "save"], [86, 1, 1, "", "set_sampler"], [86, 1, 1, "", "set_storage"], [86, 1, 1, "", "set_writer"], [86, 4, 1, "", "storage"], [86, 4, 1, "", "write_count"], [86, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[87, 1, 1, "", "add"], [87, 1, 1, "", "append_transform"], [87, 4, 1, "", "data_path"], [87, 4, 1, "", "data_path_root"], [87, 1, 1, "", "delete"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "empty"], [87, 1, 1, "", "extend"], [87, 1, 1, "", "insert_transform"], [87, 1, 1, "", "load"], [87, 1, 1, "", "loads"], [87, 1, 1, "", "preprocess"], [87, 1, 1, "", "register_load_hook"], [87, 1, 1, "", "register_save_hook"], [87, 1, 1, "", "sample"], [87, 4, 1, "", "sampler"], [87, 1, 1, "", "save"], [87, 1, 1, "", "set_sampler"], [87, 1, 1, "", "set_storage"], [87, 1, 1, "", "set_writer"], [87, 4, 1, "", "storage"], [87, 4, 1, "", "write_count"], [87, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[88, 1, 1, "", "add"], [88, 1, 1, "", "append_transform"], [88, 4, 1, "", "data_path"], [88, 4, 1, "", "data_path_root"], [88, 1, 1, "", "delete"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "dumps"], [88, 1, 1, "", "empty"], [88, 1, 1, "", "extend"], [88, 1, 1, "", "insert_transform"], [88, 1, 1, "", "load"], [88, 1, 1, "", "loads"], [88, 1, 1, "", "preprocess"], [88, 1, 1, "", "register_load_hook"], [88, 1, 1, "", "register_save_hook"], [88, 1, 1, "", "sample"], [88, 4, 1, "", "sampler"], [88, 1, 1, "", "save"], [88, 1, 1, "", "set_sampler"], [88, 1, 1, "", "set_storage"], [88, 1, 1, "", "set_writer"], [88, 4, 1, "", "storage"], [88, 4, 1, "", "write_count"], [88, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[89, 1, 1, "", "add"], [89, 1, 1, "", "append_transform"], [89, 4, 1, "", "data_path"], [89, 4, 1, "", "data_path_root"], [89, 1, 1, "", "delete"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "dumps"], [89, 1, 1, "", "empty"], [89, 1, 1, "", "extend"], [89, 1, 1, "", "insert_transform"], [89, 1, 1, "", "load"], [89, 1, 1, "", "loads"], [89, 1, 1, "", "preprocess"], [89, 1, 1, "", "register_load_hook"], [89, 1, 1, "", "register_save_hook"], [89, 1, 1, "", "sample"], [89, 4, 1, "", "sampler"], [89, 1, 1, "", "save"], [89, 1, 1, "", "set_sampler"], [89, 1, 1, "", "set_storage"], [89, 1, 1, "", "set_writer"], [89, 4, 1, "", "storage"], [89, 4, 1, "", "write_count"], [89, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[91, 0, 1, "", "FlatStorageCheckpointer"], [92, 0, 1, "", "H5StorageCheckpointer"], [93, 0, 1, "", "ImmutableDatasetWriter"], [94, 0, 1, "", "LazyMemmapStorage"], [95, 0, 1, "", "LazyTensorStorage"], [96, 0, 1, "", "ListStorage"], [97, 0, 1, "", "ListStorageCheckpointer"], [98, 0, 1, "", "NestedStorageCheckpointer"], [99, 0, 1, "", "PrioritizedSampler"], [100, 0, 1, "", "PrioritizedSliceSampler"], [101, 0, 1, "", "RandomSampler"], [102, 0, 1, "", "ReplayBufferEnsemble"], [103, 0, 1, "", "RoundRobinWriter"], [104, 0, 1, "", "Sampler"], [105, 0, 1, "", "SamplerEnsemble"], [106, 0, 1, "", "SamplerWithoutReplacement"], [107, 0, 1, "", "SliceSampler"], [108, 0, 1, "", "SliceSamplerWithoutReplacement"], [109, 0, 1, "", "Storage"], [110, 0, 1, "", "StorageCheckpointerBase"], [111, 0, 1, "", "StorageEnsemble"], [112, 0, 1, "", "StorageEnsembleCheckpointer"], [113, 0, 1, "", "TensorDictMaxValueWriter"], [114, 0, 1, "", "TensorDictRoundRobinWriter"], [115, 0, 1, "", "TensorStorage"], [116, 0, 1, "", "TensorStorageCheckpointer"], [117, 0, 1, "", "Writer"], [118, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[93, 1, 1, "", "add"], [93, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[94, 1, 1, "", "attach"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "load"], [94, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[95, 1, 1, "", "attach"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "load"], [95, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[96, 1, 1, "", "attach"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "load"], [96, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[99, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[100, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[102, 1, 1, "", "add"], [102, 1, 1, "", "append_transform"], [102, 1, 1, "", "dump"], [102, 1, 1, "", "dumps"], [102, 1, 1, "", "empty"], [102, 1, 1, "", "extend"], [102, 1, 1, "", "insert_transform"], [102, 1, 1, "", "load"], [102, 1, 1, "", "loads"], [102, 1, 1, "", "register_load_hook"], [102, 1, 1, "", "register_save_hook"], [102, 1, 1, "", "sample"], [102, 4, 1, "", "sampler"], [102, 1, 1, "", "save"], [102, 1, 1, "", "set_sampler"], [102, 1, 1, "", "set_storage"], [102, 1, 1, "", "set_writer"], [102, 4, 1, "", "storage"], [102, 4, 1, "", "write_count"], [102, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[103, 1, 1, "", "add"], [103, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[109, 1, 1, "", "attach"], [109, 1, 1, "", "dump"], [109, 1, 1, "", "load"], [109, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[111, 1, 1, "", "attach"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "load"], [111, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[113, 1, 1, "", "add"], [113, 1, 1, "", "extend"], [113, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[114, 1, 1, "", "add"], [114, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[115, 1, 1, "", "attach"], [115, 1, 1, "", "dump"], [115, 1, 1, "", "load"], [115, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[117, 1, 1, "", "add"], [117, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[118, 1, 1, "", "add"], [118, 1, 1, "", "extend"]], "torchrl.envs": [[119, 2, 1, "", "BraxEnv"], [120, 2, 1, "", "BraxWrapper"], [121, 2, 1, "", "DMControlEnv"], [122, 2, 1, "", "DMControlWrapper"], [123, 0, 1, "", "EnvBase"], [124, 0, 1, "", "EnvCreator"], [125, 0, 1, "", "EnvMetaData"], [126, 2, 1, "", "GymEnv"], [127, 0, 1, "", "GymLikeEnv"], [128, 2, 1, "", "GymWrapper"], [129, 2, 1, "", "HabitatEnv"], [130, 2, 1, "", "IsaacGymEnv"], [131, 2, 1, "", "IsaacGymWrapper"], [132, 2, 1, "", "JumanjiEnv"], [133, 2, 1, "", "JumanjiWrapper"], [134, 2, 1, "", "MOGymEnv"], [135, 2, 1, "", "MOGymWrapper"], [136, 2, 1, "", "MarlGroupMapType"], [137, 2, 1, "", "MeltingpotEnv"], [138, 2, 1, "", "MeltingpotWrapper"], [139, 2, 1, "", "ModelBasedEnvBase"], [140, 2, 1, "", "MultiThreadedEnv"], [141, 2, 1, "", "MultiThreadedEnvWrapper"], [142, 2, 1, "", "OpenMLEnv"], [143, 2, 1, "", "OpenSpielEnv"], [144, 2, 1, "", "OpenSpielWrapper"], [145, 0, 1, "", "ParallelEnv"], [146, 0, 1, "", "PendulumEnv"], [147, 2, 1, "", "PettingZooEnv"], [148, 2, 1, "", "PettingZooWrapper"], [149, 2, 1, "", "RoboHiveEnv"], [150, 2, 1, "", "SMACv2Env"], [151, 2, 1, "", "SMACv2Wrapper"], [152, 0, 1, "", "SerialEnv"], [153, 0, 1, "", "TicTacToeEnv"], [154, 2, 1, "", "UnityMLAgentsEnv"], [155, 2, 1, "", "UnityMLAgentsWrapper"], [156, 2, 1, "", "VmasEnv"], [157, 2, 1, "", "VmasWrapper"], [158, 2, 1, "", "check_marl_grouping"], [159, 2, 1, "", "gym_backend"], [139, 1, 1, "", "rand_step"], [139, 1, 1, "", "reset"], [139, 1, 1, "", "rollout"], [162, 2, 1, "", "set_gym_backend"], [139, 1, 1, "", "set_seed"], [139, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[123, 4, 1, "", "action_key"], [123, 4, 1, "", "action_keys"], [123, 4, 1, "", "action_spec"], [123, 1, 1, "", "add_module"], [123, 1, 1, "", "add_truncated_keys"], [123, 1, 1, "", "append_transform"], [123, 1, 1, "", "apply"], [123, 4, 1, "", "batch_dims"], [123, 4, 1, "", "batch_locked"], [123, 4, 1, "", "batch_size"], [123, 1, 1, "", "bfloat16"], [123, 1, 1, "", "buffers"], [123, 1, 1, "", "children"], [123, 1, 1, "", "compile"], [123, 1, 1, "", "cpu"], [123, 1, 1, "", "cuda"], [123, 4, 1, "", "done_key"], [123, 4, 1, "", "done_keys"], [123, 4, 1, "", "done_keys_groups"], [123, 4, 1, "", "done_spec"], [123, 1, 1, "", "double"], [123, 1, 1, "", "empty_cache"], [123, 1, 1, "", "eval"], [123, 1, 1, "", "extra_repr"], [123, 1, 1, "", "fake_tensordict"], [123, 1, 1, "", "float"], [123, 1, 1, "", "forward"], [123, 4, 1, "", "full_action_spec"], [123, 4, 1, "", "full_done_spec"], [123, 4, 1, "", "full_reward_spec"], [123, 4, 1, "", "full_state_spec"], [123, 1, 1, "", "get_buffer"], [123, 1, 1, "", "get_extra_state"], [123, 1, 1, "", "get_parameter"], [123, 1, 1, "", "get_submodule"], [123, 1, 1, "", "half"], [123, 4, 1, "", "input_spec"], [123, 1, 1, "", "ipu"], [123, 1, 1, "", "load_state_dict"], [123, 1, 1, "", "maybe_reset"], [123, 1, 1, "", "modules"], [123, 1, 1, "", "mtia"], [123, 1, 1, "", "named_buffers"], [123, 1, 1, "", "named_children"], [123, 1, 1, "", "named_modules"], [123, 1, 1, "", "named_parameters"], [123, 4, 1, "", "observation_spec"], [123, 4, 1, "", "output_spec"], [123, 1, 1, "", "parameters"], [123, 1, 1, "", "rand_action"], [123, 1, 1, "id0", "rand_step"], [123, 1, 1, "", "register_backward_hook"], [123, 1, 1, "", "register_buffer"], [123, 1, 1, "", "register_forward_hook"], [123, 1, 1, "", "register_forward_pre_hook"], [123, 1, 1, "", "register_full_backward_hook"], [123, 1, 1, "", "register_full_backward_pre_hook"], [123, 1, 1, "", "register_gym"], [123, 1, 1, "", "register_load_state_dict_post_hook"], [123, 1, 1, "", "register_load_state_dict_pre_hook"], [123, 1, 1, "", "register_module"], [123, 1, 1, "", "register_parameter"], [123, 1, 1, "", "register_state_dict_post_hook"], [123, 1, 1, "", "register_state_dict_pre_hook"], [123, 1, 1, "", "requires_grad_"], [123, 1, 1, "id1", "reset"], [123, 4, 1, "", "reset_keys"], [123, 4, 1, "", "reward_key"], [123, 4, 1, "", "reward_keys"], [123, 4, 1, "", "reward_spec"], [123, 1, 1, "id2", "rollout"], [123, 1, 1, "", "set_extra_state"], [123, 1, 1, "id3", "set_seed"], [123, 1, 1, "", "set_submodule"], [123, 4, 1, "", "shape"], [123, 1, 1, "", "share_memory"], [123, 4, 1, "", "single_action_spec"], [123, 4, 1, "", "single_done_spec"], [123, 4, 1, "", "single_full_action_spec"], [123, 4, 1, "", "single_full_done_spec"], [123, 4, 1, "", "single_full_observation_spec"], [123, 4, 1, "", "single_full_reward_spec"], [123, 4, 1, "", "single_full_state_spec"], [123, 4, 1, "", "single_input_spec"], [123, 4, 1, "", "single_observation_spec"], [123, 4, 1, "", "single_output_spec"], [123, 4, 1, "", "single_reward_spec"], [123, 4, 1, "", "single_state_spec"], [123, 4, 1, "", "specs"], [123, 1, 1, "", "state_dict"], [123, 4, 1, "", "state_keys"], [123, 4, 1, "", "state_spec"], [123, 1, 1, "id4", "step"], [123, 1, 1, "", "step_and_maybe_reset"], [123, 1, 1, "", "to"], [123, 1, 1, "", "to_empty"], [123, 1, 1, "", "train"], [123, 1, 1, "", "type"], [123, 1, 1, "", "xpu"], [123, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[124, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[127, 4, 1, "", "action_key"], [127, 4, 1, "", "action_keys"], [127, 4, 1, "", "action_spec"], [127, 1, 1, "", "add_module"], [127, 1, 1, "", "add_truncated_keys"], [127, 1, 1, "", "append_transform"], [127, 1, 1, "", "apply"], [127, 1, 1, "", "auto_register_info_dict"], [127, 4, 1, "", "batch_dims"], [127, 4, 1, "", "batch_locked"], [127, 4, 1, "", "batch_size"], [127, 1, 1, "", "bfloat16"], [127, 1, 1, "", "buffers"], [127, 1, 1, "", "children"], [127, 1, 1, "", "close"], [127, 1, 1, "", "compile"], [127, 1, 1, "", "cpu"], [127, 1, 1, "", "cuda"], [127, 4, 1, "", "done_key"], [127, 4, 1, "", "done_keys"], [127, 4, 1, "", "done_keys_groups"], [127, 4, 1, "", "done_spec"], [127, 1, 1, "", "double"], [127, 1, 1, "", "empty_cache"], [127, 1, 1, "", "eval"], [127, 1, 1, "", "extra_repr"], [127, 1, 1, "", "fake_tensordict"], [127, 1, 1, "", "float"], [127, 1, 1, "", "forward"], [127, 4, 1, "", "full_action_spec"], [127, 4, 1, "", "full_done_spec"], [127, 4, 1, "", "full_reward_spec"], [127, 4, 1, "", "full_state_spec"], [127, 1, 1, "", "get_buffer"], [127, 1, 1, "", "get_extra_state"], [127, 1, 1, "", "get_parameter"], [127, 1, 1, "", "get_submodule"], [127, 1, 1, "", "half"], [127, 4, 1, "", "input_spec"], [127, 1, 1, "", "ipu"], [127, 1, 1, "", "load_state_dict"], [127, 1, 1, "", "maybe_reset"], [127, 1, 1, "", "modules"], [127, 1, 1, "", "mtia"], [127, 1, 1, "", "named_buffers"], [127, 1, 1, "", "named_children"], [127, 1, 1, "", "named_modules"], [127, 1, 1, "", "named_parameters"], [127, 4, 1, "", "observation_spec"], [127, 4, 1, "", "output_spec"], [127, 1, 1, "", "parameters"], [127, 1, 1, "", "rand_action"], [127, 1, 1, "", "rand_step"], [127, 1, 1, "", "read_action"], [127, 1, 1, "", "read_done"], [127, 1, 1, "", "read_obs"], [127, 1, 1, "", "read_reward"], [127, 1, 1, "", "register_backward_hook"], [127, 1, 1, "", "register_buffer"], [127, 1, 1, "", "register_forward_hook"], [127, 1, 1, "", "register_forward_pre_hook"], [127, 1, 1, "", "register_full_backward_hook"], [127, 1, 1, "", "register_full_backward_pre_hook"], [127, 1, 1, "", "register_gym"], [127, 1, 1, "", "register_load_state_dict_post_hook"], [127, 1, 1, "", "register_load_state_dict_pre_hook"], [127, 1, 1, "", "register_module"], [127, 1, 1, "", "register_parameter"], [127, 1, 1, "", "register_state_dict_post_hook"], [127, 1, 1, "", "register_state_dict_pre_hook"], [127, 1, 1, "", "requires_grad_"], [127, 1, 1, "", "reset"], [127, 4, 1, "", "reset_keys"], [127, 4, 1, "", "reward_key"], [127, 4, 1, "", "reward_keys"], [127, 4, 1, "", "reward_spec"], [127, 1, 1, "", "rollout"], [127, 1, 1, "", "set_extra_state"], [127, 1, 1, "", "set_info_dict_reader"], [127, 1, 1, "", "set_seed"], [127, 1, 1, "", "set_submodule"], [127, 4, 1, "", "shape"], [127, 1, 1, "", "share_memory"], [127, 4, 1, "", "single_action_spec"], [127, 4, 1, "", "single_done_spec"], [127, 4, 1, "", "single_full_action_spec"], [127, 4, 1, "", "single_full_done_spec"], [127, 4, 1, "", "single_full_observation_spec"], [127, 4, 1, "", "single_full_reward_spec"], [127, 4, 1, "", "single_full_state_spec"], [127, 4, 1, "", "single_input_spec"], [127, 4, 1, "", "single_observation_spec"], [127, 4, 1, "", "single_output_spec"], [127, 4, 1, "", "single_reward_spec"], [127, 4, 1, "", "single_state_spec"], [127, 4, 1, "", "specs"], [127, 1, 1, "", "state_dict"], [127, 4, 1, "", "state_keys"], [127, 4, 1, "", "state_spec"], [127, 1, 1, "", "step"], [127, 1, 1, "", "step_and_maybe_reset"], [127, 1, 1, "", "to"], [127, 1, 1, "", "to_empty"], [127, 1, 1, "", "train"], [127, 1, 1, "", "type"], [127, 1, 1, "", "xpu"], [127, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[145, 4, 1, "", "action_key"], [145, 4, 1, "", "action_keys"], [145, 4, 1, "", "action_spec"], [145, 1, 1, "", "add_module"], [145, 1, 1, "", "add_truncated_keys"], [145, 1, 1, "", "append_transform"], [145, 1, 1, "", "apply"], [145, 4, 1, "", "batch_dims"], [145, 4, 1, "", "batch_locked"], [145, 4, 1, "", "batch_size"], [145, 1, 1, "", "bfloat16"], [145, 1, 1, "", "buffers"], [145, 1, 1, "", "children"], [145, 1, 1, "", "compile"], [145, 1, 1, "", "cpu"], [145, 1, 1, "", "cuda"], [145, 4, 1, "", "done_key"], [145, 4, 1, "", "done_keys"], [145, 4, 1, "", "done_keys_groups"], [145, 4, 1, "", "done_spec"], [145, 1, 1, "", "double"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 1, 1, "", "extra_repr"], [145, 1, 1, "", "fake_tensordict"], [145, 1, 1, "", "float"], [145, 1, 1, "", "forward"], [145, 4, 1, "", "full_action_spec"], [145, 4, 1, "", "full_done_spec"], [145, 4, 1, "", "full_reward_spec"], [145, 4, 1, "", "full_state_spec"], [145, 1, 1, "", "get_buffer"], [145, 1, 1, "", "get_extra_state"], [145, 1, 1, "", "get_parameter"], [145, 1, 1, "", "get_submodule"], [145, 1, 1, "", "half"], [145, 4, 1, "", "input_spec"], [145, 1, 1, "", "ipu"], [145, 1, 1, "", "load_state_dict"], [145, 1, 1, "", "maybe_reset"], [145, 1, 1, "", "modules"], [145, 1, 1, "", "mtia"], [145, 1, 1, "", "named_buffers"], [145, 1, 1, "", "named_children"], [145, 1, 1, "", "named_modules"], [145, 1, 1, "", "named_parameters"], [145, 4, 1, "", "observation_spec"], [145, 4, 1, "", "output_spec"], [145, 1, 1, "", "parameters"], [145, 1, 1, "", "rand_action"], [145, 1, 1, "", "rand_step"], [145, 1, 1, "", "register_backward_hook"], [145, 1, 1, "", "register_buffer"], [145, 1, 1, "", "register_forward_hook"], [145, 1, 1, "", "register_forward_pre_hook"], [145, 1, 1, "", "register_full_backward_hook"], [145, 1, 1, "", "register_full_backward_pre_hook"], [145, 1, 1, "", "register_gym"], [145, 1, 1, "", "register_load_state_dict_post_hook"], [145, 1, 1, "", "register_load_state_dict_pre_hook"], [145, 1, 1, "", "register_module"], [145, 1, 1, "", "register_parameter"], [145, 1, 1, "", "register_state_dict_post_hook"], [145, 1, 1, "", "register_state_dict_pre_hook"], [145, 1, 1, "", "requires_grad_"], [145, 1, 1, "", "reset"], [145, 4, 1, "", "reset_keys"], [145, 4, 1, "", "reward_key"], [145, 4, 1, "", "reward_keys"], [145, 4, 1, "", "reward_spec"], [145, 1, 1, "", "rollout"], [145, 1, 1, "", "set_extra_state"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "set_submodule"], [145, 4, 1, "", "shape"], [145, 1, 1, "", "share_memory"], [145, 4, 1, "", "single_action_spec"], [145, 4, 1, "", "single_done_spec"], [145, 4, 1, "", "single_full_action_spec"], [145, 4, 1, "", "single_full_done_spec"], [145, 4, 1, "", "single_full_observation_spec"], [145, 4, 1, "", "single_full_reward_spec"], [145, 4, 1, "", "single_full_state_spec"], [145, 4, 1, "", "single_input_spec"], [145, 4, 1, "", "single_observation_spec"], [145, 4, 1, "", "single_output_spec"], [145, 4, 1, "", "single_reward_spec"], [145, 4, 1, "", "single_state_spec"], [145, 4, 1, "", "specs"], [145, 1, 1, "", "state_dict"], [145, 4, 1, "", "state_keys"], [145, 4, 1, "", "state_spec"], [145, 1, 1, "", "step"], [145, 1, 1, "", "step_and_maybe_reset"], [145, 1, 1, "", "to"], [145, 1, 1, "", "to_empty"], [145, 1, 1, "", "train"], [145, 1, 1, "", "type"], [145, 1, 1, "", "update_kwargs"], [145, 1, 1, "", "xpu"], [145, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[146, 4, 1, "", "action_key"], [146, 4, 1, "", "action_keys"], [146, 4, 1, "", "action_spec"], [146, 1, 1, "", "add_module"], [146, 1, 1, "", "add_truncated_keys"], [146, 1, 1, "", "append_transform"], [146, 1, 1, "", "apply"], [146, 4, 1, "", "batch_dims"], [146, 4, 1, "", "batch_size"], [146, 1, 1, "", "bfloat16"], [146, 1, 1, "", "buffers"], [146, 1, 1, "", "children"], [146, 1, 1, "", "compile"], [146, 1, 1, "", "cpu"], [146, 1, 1, "", "cuda"], [146, 4, 1, "", "done_key"], [146, 4, 1, "", "done_keys"], [146, 4, 1, "", "done_keys_groups"], [146, 4, 1, "", "done_spec"], [146, 1, 1, "", "double"], [146, 1, 1, "", "empty_cache"], [146, 1, 1, "", "eval"], [146, 1, 1, "", "extra_repr"], [146, 1, 1, "", "fake_tensordict"], [146, 1, 1, "", "float"], [146, 1, 1, "", "forward"], [146, 4, 1, "", "full_action_spec"], [146, 4, 1, "", "full_done_spec"], [146, 4, 1, "", "full_reward_spec"], [146, 4, 1, "", "full_state_spec"], [146, 1, 1, "", "gen_params"], [146, 1, 1, "", "get_buffer"], [146, 1, 1, "", "get_extra_state"], [146, 1, 1, "", "get_parameter"], [146, 1, 1, "", "get_submodule"], [146, 1, 1, "", "half"], [146, 4, 1, "", "input_spec"], [146, 1, 1, "", "ipu"], [146, 1, 1, "", "load_state_dict"], [146, 1, 1, "", "maybe_reset"], [146, 1, 1, "", "modules"], [146, 1, 1, "", "mtia"], [146, 1, 1, "", "named_buffers"], [146, 1, 1, "", "named_children"], [146, 1, 1, "", "named_modules"], [146, 1, 1, "", "named_parameters"], [146, 4, 1, "", "observation_spec"], [146, 4, 1, "", "output_spec"], [146, 1, 1, "", "parameters"], [146, 1, 1, "", "rand_action"], [146, 1, 1, "", "rand_step"], [146, 1, 1, "", "register_backward_hook"], [146, 1, 1, "", "register_buffer"], [146, 1, 1, "", "register_forward_hook"], [146, 1, 1, "", "register_forward_pre_hook"], [146, 1, 1, "", "register_full_backward_hook"], [146, 1, 1, "", "register_full_backward_pre_hook"], [146, 1, 1, "", "register_gym"], [146, 1, 1, "", "register_load_state_dict_post_hook"], [146, 1, 1, "", "register_load_state_dict_pre_hook"], [146, 1, 1, "", "register_module"], [146, 1, 1, "", "register_parameter"], [146, 1, 1, "", "register_state_dict_post_hook"], [146, 1, 1, "", "register_state_dict_pre_hook"], [146, 1, 1, "", "requires_grad_"], [146, 1, 1, "", "reset"], [146, 4, 1, "", "reset_keys"], [146, 4, 1, "", "reward_key"], [146, 4, 1, "", "reward_keys"], [146, 4, 1, "", "reward_spec"], [146, 1, 1, "", "rollout"], [146, 1, 1, "", "set_extra_state"], [146, 1, 1, "", "set_seed"], [146, 1, 1, "", "set_submodule"], [146, 4, 1, "", "shape"], [146, 1, 1, "", "share_memory"], [146, 4, 1, "", "single_action_spec"], [146, 4, 1, "", "single_done_spec"], [146, 4, 1, "", "single_full_action_spec"], [146, 4, 1, "", "single_full_done_spec"], [146, 4, 1, "", "single_full_observation_spec"], [146, 4, 1, "", "single_full_reward_spec"], [146, 4, 1, "", "single_full_state_spec"], [146, 4, 1, "", "single_input_spec"], [146, 4, 1, "", "single_observation_spec"], [146, 4, 1, "", "single_output_spec"], [146, 4, 1, "", "single_reward_spec"], [146, 4, 1, "", "single_state_spec"], [146, 4, 1, "", "specs"], [146, 1, 1, "", "state_dict"], [146, 4, 1, "", "state_keys"], [146, 4, 1, "", "state_spec"], [146, 1, 1, "", "step"], [146, 1, 1, "", "step_and_maybe_reset"], [146, 1, 1, "", "to"], [146, 1, 1, "", "to_empty"], [146, 1, 1, "", "train"], [146, 1, 1, "", "type"], [146, 1, 1, "", "xpu"], [146, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[152, 4, 1, "", "action_key"], [152, 4, 1, "", "action_keys"], [152, 4, 1, "", "action_spec"], [152, 1, 1, "", "add_module"], [152, 1, 1, "", "add_truncated_keys"], [152, 1, 1, "", "append_transform"], [152, 1, 1, "", "apply"], [152, 4, 1, "", "batch_dims"], [152, 4, 1, "", "batch_locked"], [152, 4, 1, "", "batch_size"], [152, 1, 1, "", "bfloat16"], [152, 1, 1, "", "buffers"], [152, 1, 1, "", "children"], [152, 1, 1, "", "compile"], [152, 1, 1, "", "cpu"], [152, 1, 1, "", "cuda"], [152, 4, 1, "", "done_key"], [152, 4, 1, "", "done_keys"], [152, 4, 1, "", "done_keys_groups"], [152, 4, 1, "", "done_spec"], [152, 1, 1, "", "double"], [152, 1, 1, "", "empty_cache"], [152, 1, 1, "", "eval"], [152, 1, 1, "", "extra_repr"], [152, 1, 1, "", "fake_tensordict"], [152, 1, 1, "", "float"], [152, 1, 1, "", "forward"], [152, 4, 1, "", "full_action_spec"], [152, 4, 1, "", "full_done_spec"], [152, 4, 1, "", "full_reward_spec"], [152, 4, 1, "", "full_state_spec"], [152, 1, 1, "", "get_buffer"], [152, 1, 1, "", "get_extra_state"], [152, 1, 1, "", "get_parameter"], [152, 1, 1, "", "get_submodule"], [152, 1, 1, "", "half"], [152, 4, 1, "", "input_spec"], [152, 1, 1, "", "ipu"], [152, 1, 1, "", "load_state_dict"], [152, 1, 1, "", "maybe_reset"], [152, 1, 1, "", "modules"], [152, 1, 1, "", "mtia"], [152, 1, 1, "", "named_buffers"], [152, 1, 1, "", "named_children"], [152, 1, 1, "", "named_modules"], [152, 1, 1, "", "named_parameters"], [152, 4, 1, "", "observation_spec"], [152, 4, 1, "", "output_spec"], [152, 1, 1, "", "parameters"], [152, 1, 1, "", "rand_action"], [152, 1, 1, "", "rand_step"], [152, 1, 1, "", "register_backward_hook"], [152, 1, 1, "", "register_buffer"], [152, 1, 1, "", "register_forward_hook"], [152, 1, 1, "", "register_forward_pre_hook"], [152, 1, 1, "", "register_full_backward_hook"], [152, 1, 1, "", "register_full_backward_pre_hook"], [152, 1, 1, "", "register_gym"], [152, 1, 1, "", "register_load_state_dict_post_hook"], [152, 1, 1, "", "register_load_state_dict_pre_hook"], [152, 1, 1, "", "register_module"], [152, 1, 1, "", "register_parameter"], [152, 1, 1, "", "register_state_dict_post_hook"], [152, 1, 1, "", "register_state_dict_pre_hook"], [152, 1, 1, "", "requires_grad_"], [152, 1, 1, "", "reset"], [152, 4, 1, "", "reset_keys"], [152, 4, 1, "", "reward_key"], [152, 4, 1, "", "reward_keys"], [152, 4, 1, "", "reward_spec"], [152, 1, 1, "", "rollout"], [152, 1, 1, "", "set_extra_state"], [152, 1, 1, "", "set_seed"], [152, 1, 1, "", "set_submodule"], [152, 4, 1, "", "shape"], [152, 1, 1, "", "share_memory"], [152, 4, 1, "", "single_action_spec"], [152, 4, 1, "", "single_done_spec"], [152, 4, 1, "", "single_full_action_spec"], [152, 4, 1, "", "single_full_done_spec"], [152, 4, 1, "", "single_full_observation_spec"], [152, 4, 1, "", "single_full_reward_spec"], [152, 4, 1, "", "single_full_state_spec"], [152, 4, 1, "", "single_input_spec"], [152, 4, 1, "", "single_observation_spec"], [152, 4, 1, "", "single_output_spec"], [152, 4, 1, "", "single_reward_spec"], [152, 4, 1, "", "single_state_spec"], [152, 4, 1, "", "specs"], [152, 1, 1, "", "state_dict"], [152, 4, 1, "", "state_keys"], [152, 4, 1, "", "state_spec"], [152, 1, 1, "", "step"], [152, 1, 1, "", "step_and_maybe_reset"], [152, 1, 1, "", "to"], [152, 1, 1, "", "to_empty"], [152, 1, 1, "", "train"], [152, 1, 1, "", "type"], [152, 1, 1, "", "update_kwargs"], [152, 1, 1, "", "xpu"], [152, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[153, 4, 1, "", "action_key"], [153, 4, 1, "", "action_keys"], [153, 4, 1, "", "action_spec"], [153, 1, 1, "", "add_module"], [153, 1, 1, "", "add_truncated_keys"], [153, 1, 1, "", "append_transform"], [153, 1, 1, "", "apply"], [153, 4, 1, "", "batch_dims"], [153, 4, 1, "", "batch_size"], [153, 1, 1, "", "bfloat16"], [153, 1, 1, "", "buffers"], [153, 1, 1, "", "children"], [153, 1, 1, "", "compile"], [153, 1, 1, "", "cpu"], [153, 1, 1, "", "cuda"], [153, 4, 1, "", "done_key"], [153, 4, 1, "", "done_keys"], [153, 4, 1, "", "done_keys_groups"], [153, 4, 1, "", "done_spec"], [153, 1, 1, "", "double"], [153, 1, 1, "", "empty_cache"], [153, 1, 1, "", "eval"], [153, 1, 1, "", "extra_repr"], [153, 1, 1, "", "fake_tensordict"], [153, 1, 1, "", "float"], [153, 1, 1, "", "forward"], [153, 4, 1, "", "full_action_spec"], [153, 4, 1, "", "full_done_spec"], [153, 4, 1, "", "full_reward_spec"], [153, 4, 1, "", "full_state_spec"], [153, 1, 1, "", "get_buffer"], [153, 1, 1, "", "get_extra_state"], [153, 1, 1, "", "get_parameter"], [153, 1, 1, "", "get_submodule"], [153, 1, 1, "", "half"], [153, 4, 1, "", "input_spec"], [153, 1, 1, "", "ipu"], [153, 1, 1, "", "load_state_dict"], [153, 1, 1, "", "maybe_reset"], [153, 1, 1, "", "modules"], [153, 1, 1, "", "mtia"], [153, 1, 1, "", "named_buffers"], [153, 1, 1, "", "named_children"], [153, 1, 1, "", "named_modules"], [153, 1, 1, "", "named_parameters"], [153, 4, 1, "", "observation_spec"], [153, 4, 1, "", "output_spec"], [153, 1, 1, "", "parameters"], [153, 1, 1, "", "rand_action"], [153, 1, 1, "", "rand_step"], [153, 1, 1, "", "register_backward_hook"], [153, 1, 1, "", "register_buffer"], [153, 1, 1, "", "register_forward_hook"], [153, 1, 1, "", "register_forward_pre_hook"], [153, 1, 1, "", "register_full_backward_hook"], [153, 1, 1, "", "register_full_backward_pre_hook"], [153, 1, 1, "", "register_gym"], [153, 1, 1, "", "register_load_state_dict_post_hook"], [153, 1, 1, "", "register_load_state_dict_pre_hook"], [153, 1, 1, "", "register_module"], [153, 1, 1, "", "register_parameter"], [153, 1, 1, "", "register_state_dict_post_hook"], [153, 1, 1, "", "register_state_dict_pre_hook"], [153, 1, 1, "", "requires_grad_"], [153, 1, 1, "", "reset"], [153, 4, 1, "", "reset_keys"], [153, 4, 1, "", "reward_key"], [153, 4, 1, "", "reward_keys"], [153, 4, 1, "", "reward_spec"], [153, 1, 1, "", "rollout"], [153, 1, 1, "", "set_extra_state"], [153, 1, 1, "", "set_seed"], [153, 1, 1, "", "set_submodule"], [153, 4, 1, "", "shape"], [153, 1, 1, "", "share_memory"], [153, 4, 1, "", "single_action_spec"], [153, 4, 1, "", "single_done_spec"], [153, 4, 1, "", "single_full_action_spec"], [153, 4, 1, "", "single_full_done_spec"], [153, 4, 1, "", "single_full_observation_spec"], [153, 4, 1, "", "single_full_reward_spec"], [153, 4, 1, "", "single_full_state_spec"], [153, 4, 1, "", "single_input_spec"], [153, 4, 1, "", "single_observation_spec"], [153, 4, 1, "", "single_output_spec"], [153, 4, 1, "", "single_reward_spec"], [153, 4, 1, "", "single_state_spec"], [153, 4, 1, "", "specs"], [153, 1, 1, "", "state_dict"], [153, 4, 1, "", "state_keys"], [153, 4, 1, "", "state_spec"], [153, 1, 1, "", "step"], [153, 1, 1, "", "step_and_maybe_reset"], [153, 1, 1, "", "to"], [153, 1, 1, "", "to_empty"], [153, 1, 1, "", "train"], [153, 1, 1, "", "type"], [153, 1, 1, "", "xpu"], [153, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[160, 2, 1, "", "DreamerDecoder"], [161, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[163, 0, 1, "", "ActionDiscretizer"], [164, 0, 1, "", "ActionMask"], [165, 0, 1, "", "AutoResetEnv"], [166, 0, 1, "", "AutoResetTransform"], [167, 0, 1, "", "BatchSizeTransform"], [168, 0, 1, "", "BinarizeReward"], [169, 0, 1, "", "BurnInTransform"], [170, 0, 1, "", "CatFrames"], [171, 0, 1, "", "CatTensors"], [172, 0, 1, "", "CenterCrop"], [173, 0, 1, "", "ClipTransform"], [174, 0, 1, "", "Compose"], [175, 0, 1, "", "Crop"], [176, 0, 1, "", "DTypeCastTransform"], [177, 0, 1, "", "DeviceCastTransform"], [178, 0, 1, "", "DiscreteActionProjection"], [179, 0, 1, "", "DoubleToFloat"], [180, 0, 1, "", "EndOfLifeTransform"], [181, 0, 1, "", "ExcludeTransform"], [182, 0, 1, "", "FiniteTensorDictCheck"], [183, 0, 1, "", "FlattenObservation"], [184, 0, 1, "", "FrameSkipTransform"], [185, 0, 1, "", "GrayScale"], [186, 0, 1, "", "InitTracker"], [187, 0, 1, "", "KLRewardTransform"], [188, 0, 1, "", "NoopResetEnv"], [189, 0, 1, "", "ObservationNorm"], [190, 0, 1, "", "ObservationTransform"], [191, 0, 1, "", "PermuteTransform"], [192, 0, 1, "", "PinMemoryTransform"], [193, 0, 1, "", "R3MTransform"], [194, 0, 1, "", "RandomCropTensorDict"], [195, 0, 1, "", "RemoveEmptySpecs"], [196, 0, 1, "", "RenameTransform"], [197, 0, 1, "", "Resize"], [198, 0, 1, "", "Reward2GoTransform"], [199, 0, 1, "", "RewardClipping"], [200, 0, 1, "", "RewardScaling"], [201, 0, 1, "", "RewardSum"], [202, 0, 1, "", "SelectTransform"], [203, 0, 1, "", "SignTransform"], [204, 0, 1, "", "SqueezeTransform"], [205, 0, 1, "", "StepCounter"], [206, 0, 1, "", "TargetReturn"], [207, 0, 1, "", "TensorDictPrimer"], [208, 0, 1, "", "TimeMaxPool"], [209, 0, 1, "", "ToTensorImage"], [210, 0, 1, "", "TrajCounter"], [211, 0, 1, "", "Transform"], [212, 0, 1, "", "TransformedEnv"], [213, 0, 1, "", "UnsqueezeTransform"], [214, 0, 1, "", "VC1Transform"], [215, 0, 1, "", "VIPRewardTransform"], [216, 0, 1, "", "VIPTransform"], [217, 0, 1, "", "VecGymEnvTransform"], [218, 0, 1, "", "VecNorm"], [219, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[163, 0, 1, "", "SamplingStrategy"], [163, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[164, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[165, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[166, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "transform_env_batch_size"], [167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[168, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[169, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[172, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[173, 1, 1, "", "transform_observation_spec"], [173, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[174, 1, 1, "", "append"], [174, 1, 1, "", "forward"], [174, 1, 1, "", "insert"], [174, 1, 1, "", "to"], [174, 1, 1, "", "transform_env_batch_size"], [174, 1, 1, "", "transform_env_device"], [174, 1, 1, "", "transform_input_spec"], [174, 1, 1, "", "transform_observation_spec"], [174, 1, 1, "", "transform_output_spec"], [174, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[175, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[176, 1, 1, "", "forward"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[177, 1, 1, "", "forward"], [177, 1, 1, "", "transform_done_spec"], [177, 1, 1, "", "transform_env_device"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"], [177, 1, 1, "", "transform_output_spec"], [177, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[178, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "register_keys"], [180, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[182, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[184, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[189, 1, 1, "", "init_stats"], [189, 1, 1, "", "transform_input_spec"], [189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[192, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[193, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[194, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[196, 1, 1, "", "forward"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[197, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[198, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[199, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[200, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "transform_input_spec"], [201, 1, 1, "", "transform_observation_spec"], [201, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[203, 1, 1, "", "transform_observation_spec"], [203, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"], [205, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "to"], [207, 1, 1, "", "transform_input_spec"], [207, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[209, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TrajCounter": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "load_state_dict"], [210, 1, 1, "", "state_dict"], [210, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[211, 4, 1, "", "container"], [211, 1, 1, "", "forward"], [211, 4, 1, "", "parent"], [211, 1, 1, "", "to"], [211, 1, 1, "", "transform_done_spec"], [211, 1, 1, "", "transform_env_batch_size"], [211, 1, 1, "", "transform_env_device"], [211, 1, 1, "", "transform_input_spec"], [211, 1, 1, "", "transform_observation_spec"], [211, 1, 1, "", "transform_output_spec"], [211, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[212, 1, 1, "", "add_truncated_keys"], [212, 1, 1, "", "append_transform"], [212, 4, 1, "", "batch_locked"], [212, 4, 1, "", "batch_size"], [212, 1, 1, "", "empty_cache"], [212, 1, 1, "", "eval"], [212, 4, 1, "", "input_spec"], [212, 1, 1, "", "insert_transform"], [212, 1, 1, "", "load_state_dict"], [212, 4, 1, "", "output_spec"], [212, 1, 1, "", "set_missing_tolerance"], [212, 1, 1, "", "set_seed"], [212, 1, 1, "", "state_dict"], [212, 1, 1, "", "to"], [212, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_observation_spec"], [213, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "make_noload_model"], [214, 1, 1, "", "to"], [214, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[216, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[218, 1, 1, "", "build_td_for_shared_vecnorm"], [218, 1, 1, "", "forward"], [218, 1, 1, "", "freeze"], [218, 1, 1, "", "frozen_copy"], [218, 1, 1, "", "get_extra_state"], [218, 4, 1, "", "loc"], [218, 4, 1, "", "scale"], [218, 1, 1, "", "set_extra_state"], [218, 4, 1, "", "standard_normal"], [218, 1, 1, "", "to_observation_norm"], [218, 1, 1, "", "transform_observation_spec"], [218, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[220, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[220, 1, 1, "", "add_module"], [220, 1, 1, "", "apply"], [220, 1, 1, "", "bfloat16"], [220, 1, 1, "", "buffers"], [220, 1, 1, "", "children"], [220, 1, 1, "", "compile"], [220, 4, 1, "", "container"], [220, 1, 1, "", "cpu"], [220, 1, 1, "", "cuda"], [220, 1, 1, "", "double"], [220, 1, 1, "", "eval"], [220, 1, 1, "", "extra_repr"], [220, 1, 1, "", "float"], [220, 1, 1, "", "forward"], [220, 1, 1, "", "get_buffer"], [220, 1, 1, "", "get_extra_state"], [220, 1, 1, "", "get_parameter"], [220, 1, 1, "", "get_submodule"], [220, 1, 1, "", "half"], [220, 1, 1, "", "ipu"], [220, 1, 1, "", "load_state_dict"], [220, 1, 1, "", "modules"], [220, 1, 1, "", "mtia"], [220, 4, 1, "", "n_steps"], [220, 1, 1, "", "named_buffers"], [220, 1, 1, "", "named_children"], [220, 1, 1, "", "named_modules"], [220, 1, 1, "", "named_parameters"], [220, 1, 1, "", "parameters"], [220, 4, 1, "", "parent"], [220, 1, 1, "", "register_backward_hook"], [220, 1, 1, "", "register_buffer"], [220, 1, 1, "", "register_forward_hook"], [220, 1, 1, "", "register_forward_pre_hook"], [220, 1, 1, "", "register_full_backward_hook"], [220, 1, 1, "", "register_full_backward_pre_hook"], [220, 1, 1, "", "register_load_state_dict_post_hook"], [220, 1, 1, "", "register_load_state_dict_pre_hook"], [220, 1, 1, "", "register_module"], [220, 1, 1, "", "register_parameter"], [220, 1, 1, "", "register_state_dict_post_hook"], [220, 1, 1, "", "register_state_dict_pre_hook"], [220, 1, 1, "", "requires_grad_"], [220, 1, 1, "", "set_extra_state"], [220, 1, 1, "", "set_submodule"], [220, 1, 1, "", "share_memory"], [220, 1, 1, "", "state_dict"], [220, 1, 1, "", "to"], [220, 1, 1, "", "to_empty"], [220, 1, 1, "", "train"], [220, 1, 1, "", "transform_done_spec"], [220, 1, 1, "", "transform_env_batch_size"], [220, 1, 1, "", "transform_env_device"], [220, 1, 1, "", "transform_input_spec"], [220, 1, 1, "", "transform_observation_spec"], [220, 1, 1, "", "transform_output_spec"], [220, 1, 1, "", "transform_reward_spec"], [220, 1, 1, "", "type"], [220, 1, 1, "", "xpu"], [220, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[221, 2, 1, "", "RandomPolicy"], [222, 2, 1, "", "check_env_specs"], [223, 2, 1, "", "exploration_type"], [224, 2, 1, "", "get_available_libraries"], [225, 2, 1, "", "make_composite_from_td"], [226, 2, 1, "", "set_exploration_type"], [227, 2, 1, "", "step_mdp"], [228, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[229, 0, 1, "", "AdditiveGaussianModule"], [230, 0, 1, "", "AdditiveGaussianWrapper"], [231, 0, 1, "", "BatchRenorm1d"], [232, 0, 1, "", "CEMPlanner"], [233, 0, 1, "", "ConsistentDropoutModule"], [234, 0, 1, "", "Conv3dNet"], [235, 0, 1, "", "ConvNet"], [236, 0, 1, "", "DTActor"], [237, 0, 1, "", "DdpgCnnActor"], [238, 0, 1, "", "DdpgCnnQNet"], [239, 0, 1, "", "DdpgMlpActor"], [240, 0, 1, "", "DdpgMlpQNet"], [241, 0, 1, "", "DecisionTransformer"], [242, 0, 1, "", "Delta"], [243, 0, 1, "", "DistributionalDQNnet"], [244, 0, 1, "", "DistributionalQValueHook"], [245, 0, 1, "", "DreamerActor"], [246, 0, 1, "", "DuelingCnnDQNet"], [247, 0, 1, "", "EGreedyModule"], [248, 0, 1, "", "EGreedyWrapper"], [249, 0, 1, "", "GRU"], [250, 0, 1, "", "GRUCell"], [251, 0, 1, "", "GRUModule"], [252, 0, 1, "", "IndependentNormal"], [253, 0, 1, "", "LSTM"], [254, 0, 1, "", "LSTMCell"], [255, 0, 1, "", "LSTMModule"], [256, 0, 1, "", "MLP"], [257, 0, 1, "", "MPCPlannerBase"], [258, 0, 1, "", "MPPIPlanner"], [259, 0, 1, "", "MaskedCategorical"], [260, 0, 1, "", "MaskedOneHotCategorical"], [261, 0, 1, "", "MultiAgentConvNet"], [262, 0, 1, "", "MultiAgentMLP"], [263, 0, 1, "", "MultiAgentNetBase"], [264, 0, 1, "", "NoisyLazyLinear"], [265, 0, 1, "", "NoisyLinear"], [266, 0, 1, "", "NormalParamWrapper"], [267, 0, 1, "", "ObsDecoder"], [268, 0, 1, "", "ObsEncoder"], [269, 0, 1, "", "OneHotCategorical"], [270, 0, 1, "", "OneHotOrdinal"], [271, 0, 1, "", "OnlineDTActor"], [272, 0, 1, "", "Ordinal"], [273, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [274, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [275, 0, 1, "", "QMixer"], [276, 0, 1, "", "QValueHook"], [277, 0, 1, "", "RSSMPosterior"], [278, 0, 1, "", "RSSMPrior"], [279, 0, 1, "", "Squeeze2dLayer"], [280, 0, 1, "", "SqueezeLayer"], [281, 0, 1, "", "TanhDelta"], [282, 0, 1, "", "TanhNormal"], [283, 0, 1, "", "TruncatedNormal"], [284, 0, 1, "", "VDNMixer"], [285, 0, 1, "", "VmapModule"], [286, 0, 1, "", "reset_noise"]], "torchrl.modules.AdditiveGaussianModule": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[231, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[232, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropoutModule": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[234, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[235, 1, 1, "", "default_atari_dqn"], [235, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[236, 1, 1, "", "default_config"], [236, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[237, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[238, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[239, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[240, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[241, 0, 1, "", "DTConfig"], [241, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[242, 1, 1, "", "log_prob"], [242, 4, 1, "", "mean"], [242, 4, 1, "", "mode"], [242, 1, 1, "", "rsample"], [242, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[243, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[245, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[246, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "step"]], "torchrl.modules.GRU": [[249, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[250, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "make_cudnn_based"], [251, 1, 1, "", "make_python_based"], [251, 1, 1, "id0", "make_tensordict_primer"], [251, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[252, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[253, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[254, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "make_cudnn_based"], [255, 1, 1, "", "make_python_based"], [255, 1, 1, "id0", "make_tensordict_primer"], [255, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[256, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[258, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[259, 1, 1, "", "log_prob"], [259, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[260, 1, 1, "", "log_prob"], [260, 4, 1, "", "mode"], [260, 1, 1, "", "rsample"], [260, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "from_stateful_net"], [263, 1, 1, "", "get_stateful_net"], [263, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[264, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[266, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[267, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[268, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[269, 1, 1, "", "log_prob"], [269, 4, 1, "", "mode"], [269, 1, 1, "", "rsample"], [269, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[271, 1, 1, "", "default_config"], [271, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[275, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[277, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[278, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[280, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[281, 4, 1, "", "mean"], [281, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[282, 1, 1, "", "get_mode"], [282, 4, 1, "", "mean"], [282, 4, 1, "", "mode"], [282, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[283, 1, 1, "", "log_prob"], [283, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[284, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[285, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[287, 0, 1, "", "Actor"], [288, 0, 1, "", "ActorCriticOperator"], [289, 0, 1, "", "ActorCriticWrapper"], [290, 0, 1, "", "ActorValueOperator"], [291, 0, 1, "", "DecisionTransformerInferenceWrapper"], [292, 0, 1, "", "DistributionalQValueActor"], [293, 0, 1, "", "DistributionalQValueModule"], [294, 0, 1, "", "LMHeadActorValueOperator"], [295, 0, 1, "", "MultiStepActorWrapper"], [296, 0, 1, "", "ProbabilisticActor"], [297, 0, 1, "", "QValueActor"], [298, 0, 1, "", "QValueModule"], [299, 0, 1, "", "SafeModule"], [300, 0, 1, "", "SafeProbabilisticModule"], [301, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [302, 0, 1, "", "SafeSequential"], [303, 0, 1, "", "TanhModule"], [304, 0, 1, "", "ValueOperator"], [305, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[288, 1, 1, "", "get_critic_operator"], [288, 1, 1, "", "get_policy_head"], [288, 1, 1, "", "get_value_head"], [288, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[289, 1, 1, "", "get_policy_head"], [289, 1, 1, "", "get_policy_operator"], [289, 1, 1, "", "get_value_head"], [289, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[290, 1, 1, "", "get_policy_head"], [290, 1, 1, "", "get_policy_operator"], [290, 1, 1, "", "get_value_head"], [290, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "mask_context"], [291, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[293, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[295, 1, 1, "", "forward"], [295, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[298, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[299, 1, 1, "", "random"], [299, 1, 1, "", "random_sample"], [299, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[300, 1, 1, "", "random"], [300, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[303, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[305, 1, 1, "", "get_reward_operator"], [305, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[306, 0, 1, "", "biased_softplus"], [307, 0, 1, "", "get_primers_from_module"], [308, 0, 1, "", "inv_softplus"], [309, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[306, 1, 1, "", "forward"]], "torchrl.objectives": [[310, 0, 1, "", "A2CLoss"], [311, 0, 1, "", "CQLLoss"], [312, 0, 1, "", "ClipPPOLoss"], [313, 0, 1, "", "CrossQLoss"], [314, 0, 1, "", "DDPGLoss"], [315, 0, 1, "", "DQNLoss"], [316, 0, 1, "", "DTLoss"], [317, 0, 1, "", "DiscreteCQLLoss"], [318, 0, 1, "", "DiscreteIQLLoss"], [319, 0, 1, "", "DiscreteSACLoss"], [320, 0, 1, "", "DistributionalDQNLoss"], [321, 0, 1, "", "DreamerActorLoss"], [322, 0, 1, "", "DreamerModelLoss"], [323, 0, 1, "", "DreamerValueLoss"], [324, 0, 1, "", "GAILLoss"], [325, 0, 1, "", "HardUpdate"], [326, 0, 1, "", "IQLLoss"], [327, 0, 1, "", "KLPENPPOLoss"], [328, 0, 1, "", "LossModule"], [329, 0, 1, "", "OnlineDTLoss"], [330, 0, 1, "", "PPOLoss"], [331, 0, 1, "", "REDQLoss"], [332, 0, 1, "", "ReinforceLoss"], [333, 0, 1, "", "SACLoss"], [334, 0, 1, "", "SoftUpdate"], [335, 0, 1, "", "TD3BCLoss"], [336, 0, 1, "", "TD3Loss"], [337, 0, 1, "", "ValueEstimators"], [338, 0, 1, "", "default_value_kwargs"], [339, 0, 1, "", "distance_loss"], [340, 0, 1, "", "hold_out_net"], [341, 0, 1, "", "hold_out_params"], [343, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[310, 1, 1, "", "forward"], [310, 4, 1, "", "functional"], [310, 1, 1, "", "loss_critic"], [310, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[311, 1, 1, "", "forward"], [311, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[312, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[313, 1, 1, "", "actor_loss"], [313, 1, 1, "", "alpha_loss"], [313, 1, 1, "", "forward"], [313, 1, 1, "", "load_state_dict"], [313, 1, 1, "", "make_value_estimator"], [313, 1, 1, "", "qvalue_loss"], [313, 1, 1, "", "state_dict"], [313, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[314, 1, 1, "", "forward"], [314, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[316, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[318, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[320, 1, 1, "", "forward"], [320, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[321, 1, 1, "", "forward"], [321, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[322, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[323, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[324, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[326, 1, 1, "", "forward"], [326, 1, 1, "", "loss_value_diff"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[327, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[328, 1, 1, "", "convert_to_functional"], [328, 1, 1, "", "forward"], [328, 1, 1, "", "from_stateful_net"], [328, 4, 1, "", "functional"], [328, 1, 1, "", "get_stateful_net"], [328, 1, 1, "", "make_value_estimator"], [328, 1, 1, "", "named_parameters"], [328, 1, 1, "", "parameters"], [328, 1, 1, "", "reset_parameters_recursive"], [328, 1, 1, "", "set_keys"], [328, 4, 1, "", "value_estimator"], [328, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[329, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[330, 1, 1, "", "forward"], [330, 4, 1, "", "functional"], [330, 1, 1, "", "loss_critic"], [330, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[331, 1, 1, "", "forward"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[332, 1, 1, "", "forward"], [332, 4, 1, "", "functional"], [332, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[333, 1, 1, "", "forward"], [333, 1, 1, "", "load_state_dict"], [333, 1, 1, "", "make_value_estimator"], [333, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[335, 1, 1, "", "actor_loss"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "make_value_estimator"], [335, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[336, 1, 1, "", "forward"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[342, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[342, 1, 1, "", "forward"], [342, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[344, 0, 1, "", "GAE"], [345, 0, 1, "", "TD0Estimator"], [346, 0, 1, "", "TD1Estimator"], [347, 0, 1, "", "TDLambdaEstimator"], [348, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[344, 1, 1, "", "forward"], [344, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[345, 1, 1, "", "forward"], [345, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[346, 1, 1, "", "forward"], [346, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[347, 1, 1, "", "forward"], [347, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[348, 1, 1, "", "forward"], [348, 1, 1, "", "set_keys"], [348, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[349, 0, 1, "", "generalized_advantage_estimate"], [350, 0, 1, "", "reward2go"], [351, 0, 1, "", "td0_advantage_estimate"], [352, 0, 1, "", "td0_return_estimate"], [353, 0, 1, "", "td1_advantage_estimate"], [354, 0, 1, "", "td1_return_estimate"], [355, 0, 1, "", "td_lambda_advantage_estimate"], [356, 0, 1, "", "td_lambda_return_estimate"], [357, 0, 1, "", "vec_generalized_advantage_estimate"], [358, 0, 1, "", "vec_td1_advantage_estimate"], [359, 0, 1, "", "vec_td1_return_estimate"], [360, 0, 1, "", "vec_td_lambda_advantage_estimate"], [361, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[362, 2, 1, "", "PixelRenderTransform"], [363, 2, 1, "", "TensorDictRecorder"], [364, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[365, 2, 1, "", "Logger"], [367, 2, 1, "", "generate_exp_name"], [368, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[366, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[369, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[370, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[371, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[372, 0, 1, "", "BatchSubSampler"], [373, 0, 1, "", "ClearCudaCache"], [374, 0, 1, "", "CountFramesLog"], [375, 0, 1, "", "LogReward"], [376, 0, 1, "", "OptimizerHook"], [377, 0, 1, "", "Recorder"], [378, 0, 1, "", "ReplayBufferTrainer"], [379, 0, 1, "", "RewardNormalizer"], [380, 0, 1, "", "SelectKeys"], [381, 0, 1, "", "Trainer"], [382, 0, 1, "", "TrainerHookBase"], [383, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[372, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[373, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[374, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[375, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[376, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[377, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[378, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[379, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[380, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[381, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[382, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[383, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[384, 2, 1, "", "correct_for_frame_skip"], [385, 2, 1, "", "get_stats_random_rollout"], [386, 2, 1, "", "make_collector_offpolicy"], [387, 2, 1, "", "make_collector_onpolicy"], [388, 2, 1, "", "make_dqn_loss"], [389, 2, 1, "", "make_replay_buffer"], [390, 2, 1, "", "make_target_updater"], [391, 2, 1, "", "make_trainer"], [392, 2, 1, "", "parallel_env_constructor"], [393, 2, 1, "", "sync_async_collector"], [394, 2, 1, "", "sync_sync_collector"], [395, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 399, 400, 401, 402, 404, 405, 406, 408, 410, 417, 418, 419, 423, 424], "instal": [0, 6, 7, 423], "get": [0, 409, 410, 411, 412, 413, 414], "start": [0, 409, 410, 411, 412, 413, 414], "tutori": [0, 406, 417, 418], "basic": [0, 421], "intermedi": [0, 8], "advanc": 0, "refer": [0, 397], "knowledg": [0, 398], "base": [0, 2, 7, 398, 408], "indic": 0, "tabl": 0, "collector": [1, 404, 405, 406, 407, 412, 414, 417, 418, 423], "packag": [1, 2, 3, 399, 400, 401, 402], "batch": [1, 404, 419, 421], "size": [1, 404, 421], "polici": [1, 2, 4, 404, 406, 407, 408, 410, 414, 416, 417, 418, 419], "copi": 1, "replai": [1, 2, 404, 405, 406, 407, 412, 414, 417, 418, 421, 423], "buffer": [1, 2, 404, 405, 406, 407, 412, 414, 417, 418, 421, 423], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 404, 405, 406, 412, 414, 417, 418, 423], "distribut": [1, 399], "helper": [1, 3], "function": [1, 4, 400, 405, 406, 411, 417, 418, 423], "compos": [2, 174], "support": 2, "type": 2, "choos": 2, "storag": [2, 109, 404, 412, 421], "sampl": [2, 421], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 405, 421], "trajectori": [2, 421], "checkpoint": [2, 401], "episod": [2, 4], "format": 2, "ted": [2, 409], "The": [2, 404], "rational": 2, "behind": 2, "structur": [2, 421], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 399, 421, 423], "special": [2, 410, 423], "case": 2, "footnot": 2, "multi": [2, 3, 399, 400, 416, 417, 418], "agent": [2, 3, 4, 399, 400, 417, 418], "present": 2, "rnn": 2, "transform": [2, 3, 211, 404, 406, 409, 417, 418, 419, 421, 423, 424], "step": [2, 404, 406, 409, 412, 417, 418, 421, 424], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 69], "numer": 2, "subclass": 2, "categor": [2, 30], "tree": [2, 71], "forest": 2, "tensordictmap": [2, 64], "mctsforest": 2, "reinforc": [2, 400, 406, 417, 418], "learn": [2, 4, 399, 406, 417, 418], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 399, 400, 401, 417], "env": [3, 419, 423, 424], "vector": [3, 423], "custom": [3, 11, 419, 421], "nativ": 3, "environ": [3, 4, 6, 7, 404, 405, 406, 407, 409, 414, 416, 417, 418, 419, 423, 424], "auto": 3, "reset": [3, 419, 424], "dynam": [3, 4, 421], "spec": [3, 419, 424], "forward": [3, 4, 404], "invers": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 407, 419], "record": [3, 377, 401, 404, 413], "video": [3, 11, 413], "domain": [3, 399], "specif": [3, 399, 416], "librari": [3, 423], "thing": [4, 404, 419], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 409, 411, 423], "gener": [4, 11, 399], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 404, 408, 414, 419], "algorithm": [4, 399], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 404, 405, 411, 414], "return": [4, 400], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 423], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 416], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 404, 405, 406], "standard": 4, "explor": [4, 399, 404, 405, 410], "valu": [4, 399, 400, 404, 406, 407, 410], "loss": [4, 404, 405, 406, 407, 414, 417, 418], "earli": 4, "train": [4, 8, 400, 404, 406, 407, 408, 411, 414, 417, 418, 419], "roughli": 4, "uniformli": 4, "random": [4, 400, 417, 418], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 405], "increas": 4, "an": [4, 406, 407, 409, 419], "can": 4, "low": 4, "model": [4, 399, 404, 405, 407, 408, 411, 420, 423], "also": 4, "us": [4, 6, 9, 407, 420, 421, 423], "offlin": 4, "observ": [4, 404], "space": 4, "effect": [4, 419], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 408], "gym": [5, 423, 424], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 404], "render": [7, 11, 414, 417, 418, 424], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 404], "pytorch": [8, 9, 10, 408], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 419], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 405, 421], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 408], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 41, "multidiscretetensorspec": 42, "multionehot": 43, "multionehotdiscretetensorspec": 44, "multistep": 45, "nested2t": 46, "nontensor": 47, "nontensorspec": 48, "onehotdiscretetensorspec": 49, "pairwisedataset": 50, "prioritizedreplaybuff": 51, "promptdata": 52, "prompttensordicttoken": 53, "querymodul": 54, "randomprojectionhash": 55, "replaybuff": 56, "rewarddata": 57, "rolloutfrommodel": 58, "siphash": 59, "stack": 60, "stackedcomposit": 61, "ted2flat": 62, "ted2nest": 63, "tensordictprioritizedreplaybuff": 65, "tensordictreplaybuff": 66, "tensordicttoken": 67, "tensormap": 68, "tokenizeddatasetload": 70, "unbound": 72, "unboundedcontinu": 73, "unboundedcontinuoustensorspec": 74, "unboundeddiscret": 75, "unboundeddiscretetensorspec": 76, "check_no_exclusive_kei": 77, "consolidate_spec": 78, "contains_lazy_spec": 79, "create_infinite_iter": 80, "ataridqnexperiencereplai": 81, "basedatasetexperiencereplai": 82, "d4rlexperiencereplai": 83, "gendgrlexperiencereplai": 84, "minariexperiencereplai": 85, "openmlexperiencereplai": 86, "openxexperiencereplai": 87, "robosetexperiencereplai": 88, "vd4rlexperiencereplai": 89, "get_dataload": 90, "flatstoragecheckpoint": 91, "h5storagecheckpoint": 92, "immutabledatasetwrit": 93, "lazymemmapstorag": 94, "lazytensorstorag": 95, "liststorag": 96, "liststoragecheckpoint": 97, "nestedstoragecheckpoint": 98, "prioritizedsampl": 99, "prioritizedslicesampl": 100, "randomsampl": 101, "replaybufferensembl": 102, "roundrobinwrit": 103, "sampler": 104, "samplerensembl": 105, "samplerwithoutreplac": 106, "slicesampl": 107, "slicesamplerwithoutreplac": 108, "storagecheckpointerbas": 110, "storageensembl": 111, "storageensemblecheckpoint": 112, "tensordictmaxvaluewrit": 113, "tensordictroundrobinwrit": 114, "tensorstorag": 115, "tensorstoragecheckpoint": 116, "writer": 117, "writerensembl": 118, "braxenv": 119, "braxwrapp": 120, "dmcontrolenv": 121, "dmcontrolwrapp": 122, "envbas": [123, 419], "envcreat": 124, "envmetadata": 125, "gymenv": 126, "gymlikeenv": 127, "gymwrapp": 128, "habitatenv": 129, "isaacgymenv": 130, "isaacgymwrapp": 131, "jumanjienv": 132, "jumanjiwrapp": 133, "mogymenv": 134, "mogymwrapp": 135, "marlgroupmaptyp": 136, "meltingpotenv": 137, "meltingpotwrapp": 138, "modelbasedenvbas": 139, "multithreadedenv": 140, "multithreadedenvwrapp": 141, "openmlenv": 142, "openspielenv": 143, "openspielwrapp": 144, "parallelenv": 145, "pendulumenv": 146, "pettingzooenv": 147, "pettingzoowrapp": 148, "robohiveenv": 149, "smacv2env": 150, "smacv2wrapp": 151, "serialenv": 152, "tictactoeenv": 153, "unitymlagentsenv": 154, "unitymlagentswrapp": 155, "vmasenv": 156, "vmaswrapp": 157, "check_marl_group": 158, "gym_backend": 159, "dreamerdecod": 160, "dreamerenv": 161, "set_gym_backend": 162, "actiondiscret": 163, "actionmask": 164, "autoresetenv": 165, "autoresettransform": 166, "batchsizetransform": 167, "binarizereward": 168, "burnintransform": 169, "catfram": [170, 421], "cattensor": 171, "centercrop": 172, "cliptransform": 173, "crop": 175, "dtypecasttransform": 176, "devicecasttransform": 177, "discreteactionproject": 178, "doubletofloat": 179, "endoflifetransform": 180, "excludetransform": 181, "finitetensordictcheck": 182, "flattenobserv": 183, "frameskiptransform": 184, "grayscal": 185, "inittrack": 186, "klrewardtransform": 187, "noopresetenv": 188, "observationnorm": 189, "observationtransform": 190, "permutetransform": 191, "pinmemorytransform": 192, "r3mtransform": 193, "randomcroptensordict": 194, "removeemptyspec": 195, "renametransform": 196, "resiz": 197, "reward2gotransform": 198, "rewardclip": 199, "rewardsc": 200, "rewardsum": 201, "selecttransform": 202, "signtransform": 203, "squeezetransform": 204, "stepcount": 205, "targetreturn": 206, "tensordictprim": 207, "timemaxpool": 208, "totensorimag": 209, "trajcount": 210, "transformedenv": 212, "unsqueezetransform": 213, "vc1transform": 214, "viprewardtransform": 215, "viptransform": 216, "vecgymenvtransform": 217, "vecnorm": [218, 424], "gsdenois": 219, "multisteptransform": 220, "randompolici": 221, "check_env_spec": 222, "exploration_typ": 223, "get_available_librari": 224, "make_composite_from_td": 225, "set_exploration_typ": 226, "step_mdp": 227, "terminated_or_trunc": 228, "additivegaussianmodul": 229, "additivegaussianwrapp": 230, "batchrenorm1d": 231, "cemplann": 232, "consistentdropoutmodul": 233, "conv3dnet": 234, "convnet": 235, "dtactor": 236, "ddpgcnnactor": 237, "ddpgcnnqnet": 238, "ddpgmlpactor": 239, "ddpgmlpqnet": 240, "decisiontransform": 241, "delta": 242, "distributionaldqnnet": 243, "distributionalqvaluehook": 244, "dreameractor": 245, "duelingcnndqnet": 246, "egreedymodul": 247, "egreedywrapp": 248, "gru": 249, "grucel": 250, "grumodul": 251, "independentnorm": 252, "lstm": [253, 407], "lstmcell": 254, "lstmmodul": 255, "mlp": [256, 407], "mpcplannerbas": 257, "mppiplann": 258, "maskedcategor": 259, "maskedonehotcategor": 260, "multiagentconvnet": 261, "multiagentmlp": 262, "multiagentnetbas": 263, "noisylazylinear": 264, "noisylinear": 265, "normalparamwrapp": 266, "obsdecod": 267, "obsencod": 268, "onehotcategor": 269, "onehotordin": 270, "onlinedtactor": 271, "ordin": 272, "ornsteinuhlenbeckprocessmodul": 273, "ornsteinuhlenbeckprocesswrapp": 274, "qmixer": [275, 400], "qvaluehook": 276, "rssmposterior": 277, "rssmprior": 278, "squeeze2dlay": 279, "squeezelay": 280, "tanhdelta": 281, "tanhnorm": 282, "truncatednorm": 283, "vdnmixer": 284, "vmapmodul": 285, "reset_nois": 286, "actor": [287, 399, 404, 410], "actorcriticoper": 288, "actorcriticwrapp": 289, "actorvalueoper": 290, "decisiontransformerinferencewrapp": 291, "distributionalqvalueactor": 292, "distributionalqvaluemodul": 293, "lmheadactorvalueoper": 294, "multistepactorwrapp": 295, "probabilisticactor": 296, "qvalueactor": [297, 399], "qvaluemodul": 298, "safemodul": [299, 399], "safeprobabilisticmodul": 300, "safeprobabilistictensordictsequenti": 301, "safesequenti": 302, "tanhmodul": 303, "valueoper": 304, "worldmodelwrapp": 305, "biased_softplu": 306, "get_primers_from_modul": 307, "inv_softplu": 308, "map": [309, 417], "a2closs": 310, "cqlloss": 311, "clipppoloss": 312, "crossqloss": 313, "ddpgloss": 314, "dqnloss": 315, "dtloss": 316, "discretecqlloss": 317, "discreteiqlloss": 318, "discretesacloss": 319, "distributionaldqnloss": 320, "dreameractorloss": 321, "dreamermodelloss": 322, "dreamervalueloss": 323, "gailloss": 324, "hardupd": 325, "iqlloss": 326, "klpenppoloss": 327, "lossmodul": [328, 404, 411], "onlinedtloss": 329, "ppoloss": 330, "redqloss": 331, "reinforceloss": 332, "sacloss": 333, "softupd": 334, "td3bcloss": 335, "td3loss": 336, "valueestim": 337, "default_value_kwarg": 338, "distance_loss": 339, "hold_out_net": 340, "hold_out_param": 341, "qmixerloss": 342, "next_state_valu": 343, "gae": 344, "td0estim": 345, "td1estim": 346, "tdlambdaestim": 347, "valueestimatorbas": 348, "generalized_advantage_estim": 349, "reward2go": 350, "td0_advantage_estim": 351, "td0_return_estim": 352, "td1_advantage_estim": 353, "td1_return_estim": 354, "td_lambda_advantage_estim": 355, "td_lambda_return_estim": 356, "vec_generalized_advantage_estim": 357, "vec_td1_advantage_estim": 358, "vec_td1_return_estim": 359, "vec_td_lambda_advantage_estim": 360, "vec_td_lambda_return_estim": 361, "pixelrendertransform": 362, "tensordictrecord": 363, "videorecord": 364, "logger": [365, 401, 413, 414], "csvlogger": 366, "generate_exp_nam": 367, "get_logg": 368, "mlflowlogg": 369, "tensorboardlogg": 370, "wandblogg": 371, "batchsubsampl": 372, "clearcudacach": 373, "countframeslog": 374, "logreward": 375, "optimizerhook": 376, "replaybuffertrain": 378, "rewardnorm": 379, "selectkei": 380, "trainer": [381, 401, 405], "trainerhookbas": 382, "updateweight": 383, "correct_for_frame_skip": 384, "get_stats_random_rollout": 385, "make_collector_offpolici": 386, "make_collector_onpolici": 387, "make_dqn_loss": 388, "make_replay_buff": 389, "make_target_updat": 390, "make_train": 391, "parallel_env_constructor": 392, "sync_async_collector": 393, "sync_sync_collector": 394, "transformed_env_constructor": 395, "readm": [396, 415], "tuto": [396, 415], "api": 397, "contribut": [398, 423], "content": 398, "modul": [399, 404, 407, 408, 410, 414, 423], "tensordictmodul": [399, 408, 410, 423], "wrapper": [399, 410], "probabilist": [399, 410], "q": [399, 405, 407, 410], "oper": 399, "join": 399, "hook": [399, 401, 405], "regular": 399, "planner": 399, "object": [400, 404, 411, 423], "torch": 400, "vmap": [400, 423], "dqn": [400, 405, 407], "ddpg": [400, 404, 417], "sac": 400, "redq": 400, "crossq": 400, "iql": 400, "cql": 400, "gail": 400, "dt": 400, "td3": 400, "bc": 400, "ppo": [400, 406, 418], "a2c": 400, "dreamer": 400, "builder": 401, "_util": 402, "comput": [403, 405, 419, 422], "time": [403, 404, 422], "code": [404, 419], "overview": [404, 407], "setup": [404, 407], "__init__": 404, "method": 404, "estim": 404, "put": 404, "togeth": [404, 419], "call": 404, "parallel": [404, 416, 424], "execut": [404, 416, 419], "stat": 404, "build": [404, 405, 414, 421], "evalu": 404, "construct": 404, "target": [404, 405, 411], "network": [404, 405, 406, 407, 410, 417, 418], "updat": 404, "experi": [404, 419], "result": [404, 406, 417, 418], "conclus": [404, 405, 406, 407, 408, 417, 418, 419, 421], "next": [404, 406, 409, 412, 417, 418, 421], "A": [405, 421], "deep": 405, "collect": [405, 406, 412], "paramet": [405, 406, 411], "hyperparamet": [405, 406, 417, 418], "regist": 405, "possibl": 405, "improv": 405, "defin": [406, 417, 418], "loop": [406, 407, 408, 414, 417, 418, 419], "recurr": [407, 408], "convolut": 407, "select": 407, "further": [407, 411], "read": 407, "export": 408, "introduct": [408, 423], "fast": 408, "recap": 408, "simpl": [408, 419], "stochast": 408, "aotinductor": 408, "free": 408, "c": 408, "onnx": 408, "run": [408, 409, 424], "rollout": [408, 409, 416, 417, 418, 419, 424], "creat": 409, "s": [410, 411], "output": 411, "consider": 411, "log": 413, "own": 414, "first": 414, "design": 414, "divers": 416, "competit": 417, "group": 417, "critic": [417, 418], "pendulum": 419, "write": 419, "_step": 419, "simul": 419, "_reset": 419, "metadata": 419, "_spec": 419, "shape": 419, "seed": [419, 424], "wrap": 419, "class": [419, 423], "test": 419, "our": 419, "pretrain": 420, "vanilla": 421, "integr": 421, "tensorclass": 421, "other": 421, "tensor": 421, "pytre": 421, "iter": 421, "over": 421, "fix": 421, "priorit": 421, "save": 421, "raw": 421, "imag": 421, "more": 421, "complex": 421, "config": 423, "sequenc": 423, "program": 423, "ensembl": 423, "meta": 423, "frame_skip": 424, "deepmind": 424, "control": 424, "devic": 424, "close": 424, "access": 424, "attribut": 424, "kwarg": 424}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})