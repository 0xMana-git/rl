Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/index", "tutorials/sg_execution_times"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/index.rst", "tutorials/sg_execution_times.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "README Tutos", "Computation times"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 72, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 103, 104, 106, 107, 108, 109, 110, 113, 116, 121, 123, 124, 126, 127, 129, 132, 134, 135, 138, 144, 145, 149, 150, 151, 152, 154, 162, 163, 164, 165, 166, 167, 169, 172, 173, 175, 176, 186, 187, 189, 190, 191, 192, 199, 201, 203, 205, 206, 207, 208, 212, 213, 214, 225, 226, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 251, 255, 258, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 308, 310, 313, 317, 322, 323, 327, 328, 331, 340, 341, 342, 343, 346, 347, 348], "open": [0, 5, 7, 11, 58], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 352], "reinforc": [0, 3, 9, 55, 101, 102, 127, 189, 190, 191, 192, 196, 240, 245, 259, 260, 264, 265, 266, 268, 272, 273, 279, 280, 281, 345], "learn": [0, 3, 7, 8, 9, 17, 31, 55, 56, 57, 59, 60, 101, 102, 106, 127, 189, 190, 191, 192, 196, 209, 215, 240, 245, 259, 260, 264, 265, 266, 268, 272, 273, 278, 279, 280, 281, 345, 347, 348], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 52, 103, 162, 215, 233, 246, 254, 259, 261, 274, 275, 277, 279, 318, 344, 346, 347, 348, 349, 352], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 37, 43, 85, 86, 95, 104, 179, 345, 346, 347, 350], "pytorch": [0, 1, 2, 3, 56, 114, 115, 165, 176, 199, 203, 214, 215, 327, 344, 346, 349, 352], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 31, 43, 55, 87, 91, 95, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 120, 173, 175, 203, 317, 346, 347], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 90, 91, 95, 96, 97, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 120, 121, 123, 124, 126, 127, 130, 131, 132, 134, 135, 136, 144, 145, 149, 150, 154, 157, 161, 162, 163, 166, 167, 169, 171, 173, 175, 176, 184, 185, 186, 187, 189, 199, 201, 202, 203, 205, 208, 209, 212, 213, 215, 216, 229, 231, 233, 237, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 308, 310, 317, 323, 336, 341, 342, 343, 346, 347, 348, 349], "directli": [0, 3, 4, 8, 22, 52, 69, 83, 84, 87, 90, 91, 103, 107, 113, 154, 172, 275, 343, 347], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 123, 124, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 142, 143, 145, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 180, 183, 184, 185, 186, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 216, 219, 220, 221, 222, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 282, 284, 288, 289, 290, 291, 292, 293, 296, 308, 309, 310, 318, 324, 327, 330, 331, 336, 337, 339, 340, 343, 345, 346, 347, 348, 349, 351, 353], "pypi": [0, 2], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 74, 87, 91, 94, 101, 102, 104, 107, 108, 109, 110, 113, 114, 115, 131, 149, 163, 165, 166, 167, 169, 171, 174, 175, 186, 187, 199, 202, 203, 207, 213, 214, 221, 229, 230, 234, 236, 249, 250, 310, 317, 324], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 78, 87, 91, 94, 95, 101, 102, 107, 108, 109, 110, 113, 114, 115, 165, 169, 174, 175, 196, 203, 207, 214, 216, 233, 237, 239, 240, 249, 254, 259, 268, 275, 277, 290, 295, 303, 317, 322, 346, 348, 349], "about": [0, 3, 5, 7, 9, 17, 18, 19, 43, 56, 59, 60, 348], "instruct": [0, 6, 7, 10, 21, 54, 134, 136], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 107, 113, 234, 235, 236, 347], "section": [0, 2, 3, 4, 199, 203], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 38, 61, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 186, 187, 199, 202, 203, 207, 213, 229, 249, 324], "pip": [0, 10, 57], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 72, 74, 75, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 103, 104, 105, 107, 108, 109, 110, 113, 124, 126, 127, 128, 129, 130, 132, 135, 139, 144, 145, 147, 149, 150, 153, 154, 157, 158, 162, 163, 164, 167, 169, 171, 172, 173, 175, 184, 186, 187, 193, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 231, 233, 237, 240, 241, 242, 244, 245, 246, 247, 248, 253, 259, 260, 261, 262, 263, 265, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 318, 324, 331, 336, 339, 346, 347, 348, 349], "python": [0, 3, 5, 6, 7, 10, 20, 105, 120, 199, 200, 201, 203, 204, 205, 210, 211, 349, 352], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 74, 75, 78, 80, 87, 91, 107, 113, 123, 124, 127, 128, 139, 145, 149, 150, 165, 167, 169, 187, 199, 201, 203, 205, 207, 212, 213, 214, 218, 233, 238, 239, 240, 246, 247, 249, 250, 261, 270, 274, 275, 277, 309, 310, 326, 347], "low": [0, 24, 87, 91, 107, 113, 130, 134, 180, 240, 246, 253], "high": [0, 9, 24, 34, 36, 39, 41, 87, 91, 107, 113, 130, 134, 144, 180, 240, 246, 253, 290, 295, 303], "level": [0, 2, 3, 4, 21, 25, 27, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 127, 161, 274], "abstract": [0, 3, 8, 23, 24, 25, 26, 27, 28, 29, 32, 44, 46, 47, 52, 53, 57, 81, 87, 146, 208, 294, 319, 328, 349], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 28, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 72, 73, 75, 76, 77, 78, 80, 87, 88, 90, 91, 92, 100, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 115, 122, 123, 124, 126, 127, 130, 131, 132, 134, 135, 136, 138, 139, 143, 144, 147, 149, 154, 157, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 180, 183, 184, 185, 192, 194, 199, 200, 201, 203, 204, 205, 206, 208, 210, 211, 212, 215, 219, 221, 224, 238, 239, 241, 244, 245, 246, 247, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 285, 288, 289, 290, 291, 292, 293, 294, 308, 317, 324, 339, 343, 347, 348, 349, 350], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 45, 126, 134, 231, 275, 347], "effici": [0, 1, 2, 4, 8, 199, 215, 347], "modular": [0, 52, 252], "document": [0, 2, 5, 7, 17, 18, 20, 31, 58, 87, 91, 107, 113, 167, 175, 344, 352], "properli": [0, 1, 87, 91, 107, 113, 183], "test": [0, 3, 5, 83, 84, 96, 97, 101, 102, 169, 176, 201, 205, 206, 323, 339], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 69, 72, 74, 75, 76, 78, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 104, 105, 107, 108, 109, 110, 113, 114, 115, 123, 124, 126, 127, 131, 132, 135, 136, 137, 145, 147, 149, 154, 156, 157, 158, 161, 162, 163, 166, 167, 169, 171, 172, 175, 176, 183, 184, 185, 189, 190, 191, 192, 193, 196, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 222, 223, 224, 233, 234, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 296, 308, 310, 312, 315, 316, 317, 318, 322, 339, 341, 342, 345, 347, 348, 349], "code": [0, 3, 5, 7, 8, 58, 87, 91, 107, 113, 149, 167, 169, 199, 200, 201, 203, 204, 205, 252, 352], "aim": [0, 2, 3, 7, 27, 28, 149, 169, 171, 207, 330, 346, 347, 348], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 57, 60, 61, 63, 64, 76, 77, 80, 82, 83, 84, 92, 96, 97, 104, 106, 107, 108, 110, 124, 127, 136, 145, 163, 164, 166, 179, 196, 231, 239, 240, 246, 249, 252, 268, 290, 291, 292, 293, 315, 345, 347, 349], "research": [0, 7, 9, 101, 102], "most": [0, 1, 2, 3, 7, 8, 13, 14, 31, 74, 75, 87, 91, 107, 113, 134, 172, 176], "written": [0, 1, 3, 11, 34, 36, 39, 45, 54, 55, 58, 63, 67, 69, 74, 75, 85, 86, 87, 90, 91, 92, 93, 107, 110, 113, 127, 136, 143, 157, 161, 164, 172, 175, 183, 184, 233, 245, 246, 249, 250, 254, 259, 261, 274, 277, 279, 289, 308, 309, 310, 347, 348, 349], "highli": [0, 2], "wai": [0, 1, 2, 3, 4, 52, 56, 69, 78, 95, 149, 152, 171, 172, 203, 277, 290, 291, 292, 293, 347], "easili": [0, 1, 2, 3, 7, 87, 91, 107, 113, 336, 348], "swap": [0, 1, 3, 90, 172], "compon": [0, 1, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 69, 76, 77, 80, 196, 222, 239, 240, 248, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 322, 327], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 77, 87, 88, 91, 101, 102, 107, 108, 109, 113, 114, 115, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 183, 188, 189, 193, 196, 197, 220, 221, 222, 230, 238, 243, 244, 253, 256, 258, 264, 276, 308, 310, 324, 336, 343, 345], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 82, 87, 88, 91, 95, 100, 101, 102, 107, 108, 109, 113, 114, 115, 132, 135, 167, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 230, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 274, 310], "write": [0, 2, 3, 8, 22, 31, 34, 36, 37, 39, 45, 67, 69, 74, 77, 82, 87, 91, 130, 147, 148, 157, 159, 161, 165, 184, 233, 249, 250, 252, 254, 262, 263, 265, 266, 267, 273, 278, 280, 282, 289, 294, 310, 347, 349], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 73, 87, 91, 104, 107, 111, 112, 113, 124, 157, 166, 173, 175, 183, 184, 199, 201, 205, 245, 249, 250, 255, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 317], "ones": [0, 2, 22, 25, 31, 35, 38, 41, 42, 87, 91, 107, 108, 109, 113, 128, 131, 132, 133, 135, 145, 149, 154, 163, 166, 167, 169, 171, 175, 210, 211, 231, 249, 259, 260, 262, 273, 277, 278, 280, 282, 296], "littl": [0, 1, 3, 43, 87, 91, 107, 113, 167, 259, 261, 274, 277, 279], "effort": [0, 3], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 87, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 113, 114, 115, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 145, 149, 150, 151, 152, 154, 157, 158, 159, 161, 163, 164, 166, 167, 169, 170, 171, 172, 173, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 288, 290, 291, 292, 293, 294, 308, 309, 317, 318, 320, 323, 324, 327, 329, 330, 331, 336, 339, 343, 346, 347, 348, 349], "repo": [0, 6, 54, 127, 164, 169, 346], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 74, 75, 85, 86, 90, 92, 93, 110, 237, 242, 245, 263, 266, 273, 288], "align": [0, 199, 203], "exist": [0, 2, 3, 4, 11, 17, 20, 31, 34, 36, 39, 45, 87, 91, 107, 113, 128, 133, 167, 175, 280, 331, 343], "ecosystem": 0, "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 46, 47, 52, 58, 63, 64, 69, 72, 74, 78, 80, 87, 88, 91, 95, 101, 102, 107, 113, 114, 115, 124, 127, 161, 162, 163, 164, 167, 175, 199, 201, 203, 205, 212, 237, 240, 242, 244, 245, 250, 274, 310], "dataset": [0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 69, 72, 74, 75, 106, 173, 310, 345], "pillar": 0, "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 121, 123, 124, 126, 127, 128, 132, 133, 134, 135, 140, 144, 145, 149, 150, 151, 154, 157, 161, 162, 163, 164, 166, 167, 169, 172, 173, 176, 185, 201, 205, 206, 208, 209, 237, 244, 245, 265, 269, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 318, 320, 323, 330, 331, 332, 333, 336, 339, 340, 341, 342, 343, 345, 346, 347], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 45, 87, 91, 103, 107, 113, 132, 149, 163, 169, 171, 174, 175, 186, 187, 188, 193, 195, 201, 205, 207, 208, 209, 213, 220, 221, 230, 234, 235, 236, 243, 249, 255, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 288, 327, 332, 333, 334, 335, 336, 345, 346, 349], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 113, 121, 124, 126, 127, 132, 133, 135, 137, 143, 145, 151, 154, 161, 167, 172, 175, 176, 180, 184, 185, 196, 201, 205, 206, 209, 212, 213, 222, 231, 233, 239, 241, 242, 244, 245, 246, 247, 249, 252, 253, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 308, 310, 317, 318, 324, 327, 329, 332, 339, 341, 342, 343, 345, 347, 348, 349], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 38, 40, 84, 87, 91, 96, 97, 102, 107, 108, 109, 113, 116, 127, 149, 154, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 193, 199, 203, 256, 257, 258, 275, 339, 345, 350], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 36, 39, 63, 64, 66, 67, 78, 80, 87, 88, 91, 107, 113, 114, 124, 126, 128, 131, 139, 145, 149, 157, 163, 166, 167, 169, 171, 175, 176, 199, 201, 202, 203, 205, 209, 213, 216, 222, 228, 229, 238, 240, 244, 246, 248, 249, 250, 280, 289, 290, 291, 292, 293, 308, 318, 330, 342, 347], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 36, 39, 78, 87, 88, 91, 107, 113, 114, 124, 126, 128, 131, 139, 145, 149, 157, 163, 166, 167, 169, 171, 175, 176, 199, 201, 202, 203, 204, 205, 209, 213, 228, 229, 238, 246, 249, 250, 280, 289, 299, 300, 301, 302, 304, 305, 306, 307, 308, 342, 347], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 40, 52, 58, 124, 127, 154, 161, 175, 245, 324, 327, 329, 332, 333, 339, 341, 342, 345, 349], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 25, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 69, 70, 72, 74, 75, 76, 79, 81, 82, 87, 91, 103, 107, 113, 131, 132, 135, 149, 163, 166, 167, 169, 171, 172, 173, 175, 183, 184, 185, 186, 187, 199, 200, 203, 204, 207, 209, 213, 233, 239, 240, 246, 248, 249, 254, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 296, 314, 318, 330, 336, 339, 340, 341, 342, 343, 347, 348, 349], "etc": [0, 2, 3, 7, 8, 11, 31, 46, 47, 58, 87, 91, 107, 113, 143, 167, 175, 207, 213], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 73, 76, 87, 91, 107, 108, 109, 113, 123, 127, 132, 135, 136, 143, 144, 145, 161, 166, 167, 173, 175, 176, 184, 186, 187, 206, 207, 212, 213, 231, 244, 251, 252, 259, 261, 274, 277, 279, 285, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 318, 327, 347, 348, 349], "few": [0, 2, 8, 91, 310, 318], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 90, 92, 93, 110, 114, 115, 132, 135, 254, 277, 347], "possibl": [0, 2, 3, 4, 22, 26, 28, 31, 33, 55, 58, 60, 78, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 186, 187, 199, 200, 203, 204, 249, 308, 323, 327, 347], "standard": [0, 3, 145, 156, 173, 185, 197, 209, 214, 215, 220, 237, 238, 282, 290, 291, 292, 293], "numpi": [0, 3, 11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 87, 91, 107, 113, 165, 327], "common": [0, 2, 3, 4, 91, 96, 121, 234, 235, 236, 243, 259, 260, 261, 266, 267, 273, 274, 277, 278, 279, 280, 282, 339, 346, 347, 349], "openai": [0, 7, 90, 92, 110], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 87, 88, 90, 91, 92, 93, 95, 101, 102, 104, 105, 107, 110, 113, 114, 115, 117, 120, 123, 127, 130, 136, 142, 143, 145, 147, 152, 154, 157, 163, 166, 172, 173, 175, 336, 339, 346], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 75, 80, 85, 86, 87, 90, 91, 92, 93, 95, 104, 105, 107, 108, 109, 110, 113, 123, 127, 128, 130, 131, 132, 134, 135, 139, 145, 149, 150, 154, 161, 162, 163, 164, 166, 167, 169, 171, 173, 175, 203, 205, 206, 212, 213, 233, 238, 239, 246, 247, 249, 250, 251, 252, 259, 261, 262, 266, 267, 273, 274, 275, 277, 278, 279, 280, 281, 282, 290, 291, 292, 293, 294, 310, 317, 331, 349], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 231, 233, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 315, 317, 318, 320, 321, 322, 323, 324, 325, 327, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 347], "On": [0, 3, 7, 17, 18, 19, 20, 25, 55, 200, 204, 347], "end": [0, 2, 3, 13, 14, 16, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 73, 74, 75, 87, 91, 107, 113, 136, 147, 161, 162, 167, 175, 186, 187, 199, 200, 203, 204, 208, 244, 280, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "come": [0, 1, 2, 3, 8, 31, 78, 87, 91, 100, 107, 113, 132, 135, 233, 234, 235, 236, 246, 254, 259, 261, 274, 277, 279, 310], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 73, 76, 80, 87, 89, 91, 101, 102, 103, 107, 108, 109, 113, 114, 115, 120, 121, 123, 124, 127, 128, 131, 132, 135, 142, 143, 149, 154, 161, 162, 163, 164, 166, 167, 169, 171, 173, 175, 176, 181, 182, 184, 199, 201, 203, 205, 208, 212, 213, 237, 238, 249, 267, 275, 277, 280, 294, 318, 323, 324, 333, 343, 346, 347, 348, 350], "re": [0, 2, 3, 8, 31, 73, 87, 91, 107, 113, 175, 205, 210, 211, 246, 250, 317, 349], "usabl": [0, 349], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 69, 76, 77, 80, 87, 88, 91, 107, 113, 120, 123, 124, 132, 135, 167, 173, 175, 176, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 226, 229, 231, 234, 235, 236, 237, 238, 240, 241, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 336, 339, 345, 347], "cost": [0, 2, 26, 58, 259, 261, 274, 277, 279], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 69, 70, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 183, 184, 185, 188, 189, 190, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 219, 220, 221, 223, 224, 227, 228, 229, 230, 233, 234, 235, 236, 238, 244, 246, 248, 249, 250, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 285, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 314, 327, 330, 332, 336, 339, 340, 341, 342, 343, 345, 347, 349], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 39, 43, 45, 52, 55, 59, 60, 66, 67, 74, 87, 88, 91, 95, 100, 104, 107, 108, 109, 113, 126, 132, 135, 165, 173, 175, 212, 213, 240, 245, 248, 345, 349], "good": [0, 1, 4, 9, 107], "runtim": [0, 2, 3, 31, 87, 91, 107, 113, 175], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 85, 86, 87, 90, 91, 92, 93, 107, 110, 113, 116, 132, 135, 144, 167, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 261, 270, 277, 280, 323, 327, 348], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 77, 82, 83, 84, 87, 90, 91, 92, 96, 97, 100, 107, 108, 109, 110, 111, 112, 113, 114, 161, 173, 175, 234, 235, 236, 245, 267, 275, 310, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 347, 348], "read": [0, 2, 3, 7, 22, 37, 40, 58, 63, 64, 65, 66, 69, 76, 77, 80, 87, 90, 91, 92, 107, 113, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 147, 148, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 166, 169, 170, 172, 173, 175, 184, 219, 233, 234, 235, 236, 239, 244, 246, 249, 250, 252, 254, 255, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 310, 323, 327, 336, 347], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 349], "beyond": [0, 87, 91, 107, 113], "api": [0, 2, 3, 5, 108, 109, 110, 149, 171, 348, 349], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 46, 47, 48, 50, 74, 87, 88, 91, 103, 107, 113, 116, 127, 128, 138, 143, 150, 165, 167, 175, 176, 201, 205, 233, 239, 240, 246, 247, 248, 249, 250, 310, 344, 347, 348, 352], "paper": [0, 55, 58, 83, 84, 85, 86, 93, 96, 97, 101, 102, 104, 105, 110, 114, 115, 149, 169, 171, 199, 221, 230, 265, 272, 336], "releas": [0, 4, 7, 10, 31, 87, 91, 107, 113, 167, 175, 280], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 329, 339, 349], "so": [0, 2, 3, 4, 6, 7, 10, 31, 34, 36, 39, 40, 87, 91, 101, 102, 107, 113, 163, 173, 175, 251, 252], "make": [0, 2, 3, 4, 7, 31, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 72, 76, 77, 82, 87, 91, 92, 95, 97, 99, 105, 107, 113, 137, 145, 149, 150, 154, 161, 169, 175, 176, 199, 200, 203, 204, 212, 213, 214, 239, 250, 259, 261, 274, 277, 279, 290, 291, 292, 293, 308, 324, 333, 343, 347, 348], "sure": [0, 3, 4, 7, 57, 76, 91, 95, 154, 239, 343, 347], "alwai": [0, 2, 3, 13, 14, 19, 25, 27, 31, 52, 61, 87, 91, 107, 113, 143, 144, 175, 268, 275, 347, 348], "enjoi": [0, 2, 3, 58], "latest": [0, 2, 3, 10, 104, 108, 109, 324], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 33, 45, 56, 67, 74, 75, 87, 91, 100, 107, 108, 109, 111, 112, 113, 124, 127, 139, 143, 147, 163, 164, 168, 173, 176, 186, 187, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 212, 214, 215, 250, 259, 261, 274, 277, 279, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 343, 347], "recent": [0, 7, 11, 172], "version": [0, 1, 2, 3, 6, 11, 31, 34, 36, 40, 55, 60, 74, 87, 90, 91, 92, 93, 104, 105, 107, 108, 110, 113, 114, 115, 172, 175, 183, 236, 259, 261, 274, 275, 277, 279, 280, 290, 293, 346, 347], "although": [0, 1, 3, 8, 87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 349], "core": [0, 3, 8, 336, 349], "guarante": [0, 2, 31, 34, 36, 39, 63, 64, 65, 76, 77, 80, 87, 91, 107, 113, 173, 175], "backward": [0, 8, 31, 83, 84, 87, 91, 107, 113, 173, 175, 199, 200, 203, 204, 259, 260, 262, 266, 267, 273, 277, 278, 279, 280, 282], "compat": [0, 2, 3, 7, 11, 13, 14, 31, 54, 69, 72, 74, 75, 76, 78, 87, 91, 93, 106, 107, 113, 127, 161, 169, 173, 175, 199, 200, 201, 203, 204, 205, 247, 259, 260, 262, 263, 265, 266, 267, 273, 275, 277, 278, 279, 280, 282, 285], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 145, 147, 149, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 259, 260, 261, 262, 263, 265, 266, 267, 270, 273, 274, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 296, 298, 299, 300, 304, 305, 307, 308, 310, 318, 323, 324, 325, 336, 339, 343, 346, 347, 348, 349], "13": [0, 2, 5, 10, 11, 74, 75, 110, 172, 175], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 35, 38, 41, 42, 54, 56, 57, 58, 59, 60, 91, 107, 149, 166, 171, 264, 275, 348, 349], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 72, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 183, 184, 185, 195, 196, 201, 205, 206, 208, 209, 221, 222, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 308, 309, 318, 322, 323, 324, 326, 327, 336, 345, 348, 349], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 27, 143, 151, 234, 235, 236, 249, 266, 273, 336, 345], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 31, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 69, 87, 91, 107, 113, 120, 149, 171, 175, 209, 312, 317, 327, 349], "root": [0, 2, 3, 25, 27, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 107, 127, 164, 183, 202, 228, 229], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 35, 43, 52, 55, 56, 57, 58, 59, 60, 66, 67, 83, 84, 85, 86, 93, 95, 96, 97, 101, 102, 104, 105, 106, 108, 109, 110, 114, 115, 127, 149, 169, 188, 189, 190, 191, 192, 193, 196, 197, 198, 203, 209, 210, 211, 215, 217, 218, 221, 223, 224, 230, 240, 245, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 290, 295, 303, 336, 344, 349, 352], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 52, 55, 56, 58, 83, 84, 85, 86, 93, 96, 97, 101, 102, 104, 105, 108, 109, 110, 114, 115, 124, 169, 349], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 55, 58, 59, 83, 84, 85, 86, 93, 95, 96, 97, 101, 102, 104, 105, 108, 109, 110, 114, 115, 349], "setup": [0, 7, 83, 84, 95, 96, 97], "py": [0, 3, 120, 221, 230, 349], "develop": [0, 3, 4, 7, 95], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 73, 76, 78, 79, 80, 81, 87, 89, 91, 93, 94, 107, 110, 113, 118, 122, 123, 124, 126, 130, 134, 140, 143, 149, 150, 152, 159, 163, 166, 167, 169, 170, 172, 173, 174, 175, 176, 183, 185, 186, 187, 196, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 213, 215, 216, 231, 237, 238, 239, 240, 241, 244, 246, 247, 250, 252, 253, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 285, 288, 290, 291, 292, 293, 294, 296, 308, 311, 312, 315, 317, 320, 327, 329, 336, 339, 348, 351, 353], "seri": [0, 2, 7, 8, 33, 62, 70, 78, 79, 81, 82, 113, 144, 166, 310, 347, 348], "quick": [0, 52], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 40, 54, 60, 87, 91, 107, 113, 123, 126, 164, 166, 175, 277, 346, 347, 348], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 69, 72, 73, 74, 75, 78, 80, 85, 86, 87, 88, 90, 91, 92, 93, 95, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 143, 144, 145, 149, 150, 153, 154, 157, 158, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 183, 184, 186, 187, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 231, 233, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 304, 305, 306, 307, 308, 314, 317, 322, 324, 327, 329, 331, 336, 339, 343, 346], "hurri": 0, "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 54, 73, 74, 75, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 123, 126, 139, 145, 150, 162, 164, 165, 186, 187, 199, 201, 203, 205, 206, 207, 210, 211, 217, 225, 231, 237, 238, 241, 244, 250, 290, 292, 293], "item": [0, 8, 13, 25, 27, 38, 45, 61, 73, 78, 138, 210, 211, 262, 263, 265, 318, 348, 349], "navig": 0, "previou": [0, 3, 4, 10, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 163, 175, 184, 199, 203, 224, 238], "whenev": [0, 1, 2, 3, 22, 31, 35, 38, 41, 42, 52, 58, 67, 74, 75, 85, 86, 90, 92, 93, 101, 102, 110, 114, 115, 120, 142, 167, 172, 275, 290, 291, 292, 293, 308, 329, 347], "want": [0, 2, 3, 6, 7, 8, 75, 145, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 347], "packag": [0, 6, 7, 10, 120, 345, 346], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 73, 74, 75, 78, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 103, 104, 106, 107, 113, 114, 115, 124, 127, 131, 139, 145, 147, 150, 154, 163, 166, 167, 168, 172, 173, 175, 184, 194, 199, 200, 201, 203, 204, 205, 206, 210, 211, 212, 213, 214, 219, 221, 227, 231, 244, 245, 249, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 318, 321, 324, 325, 326, 327, 329, 341, 342, 343, 345, 349], "size": [0, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 126, 128, 131, 132, 135, 136, 137, 139, 147, 149, 151, 152, 154, 158, 160, 161, 163, 165, 166, 167, 168, 171, 173, 175, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 219, 220, 221, 222, 223, 224, 227, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 273, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 310, 318, 324, 336, 345, 347], "replai": [0, 8, 15, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 82, 126, 127, 134, 150, 154, 163, 175, 262, 263, 265, 266, 267, 273, 278, 280, 282, 324, 327, 337, 339, 345, 349], "buffer": [0, 3, 4, 8, 15, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 87, 91, 103, 107, 113, 126, 127, 131, 134, 149, 150, 154, 163, 166, 167, 169, 171, 175, 249, 252, 262, 263, 265, 266, 267, 273, 278, 280, 282, 324, 327, 337, 339, 345, 349], "interoper": [0, 13, 14, 345], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 38, 39, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 87, 90, 91, 101, 102, 107, 113, 114, 115, 127, 128, 149, 154, 167, 171, 175, 186, 187, 199, 200, 201, 203, 204, 205, 206, 207, 213, 248, 252, 261, 263, 265, 267, 268, 274, 277, 278, 282, 290, 291, 292, 293, 299, 300, 301, 302, 304, 305, 306, 307, 308, 336, 343, 345], "node": [0, 2, 17, 18, 19, 20, 21, 34, 36, 39, 60, 336, 345], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 108, 109, 143, 145, 185, 194, 195, 196, 197, 202, 209, 210, 211, 216, 219, 220, 223, 224, 227, 228, 229, 237, 238, 239, 240, 246, 250, 251, 259, 260, 261, 266, 267, 268, 273, 274, 277, 278, 279, 280, 282, 345, 349], "helper": [0, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345], "compos": [0, 3, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 78, 79, 87, 91, 107, 113, 127, 153, 166, 167, 173, 175, 243, 244, 270, 280, 310, 336, 345], "episod": [0, 3, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 74, 75, 87, 91, 107, 113, 123, 154, 157, 162, 183, 185, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 345], "format": [0, 3, 30, 31, 33, 52, 53, 54, 55, 56, 57, 58, 59, 60, 72, 78, 87, 91, 107, 108, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249, 310, 345], "ted": [0, 52, 54, 55, 56, 57, 58, 59, 60, 345], "tensorspec": [0, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 46, 47, 48, 49, 50, 87, 91, 103, 107, 113, 114, 115, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 184, 224, 233, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 253, 260, 263, 266, 267, 278, 280, 282, 288, 345], "human": [0, 56, 345], "feedback": [0, 345], "rlhf": [0, 40, 45, 61, 143, 345, 347], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 201, 205, 208, 209, 244, 249, 275, 308, 309, 310, 331, 332, 333, 336, 339, 341, 342, 343, 345, 347], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 88, 91, 107, 113, 121, 124, 132, 135, 144, 151, 152, 166, 167, 173, 175, 176, 185, 208, 209, 323, 331, 332, 333, 336, 339, 341, 342, 343, 345], "gymlikeenv": [0, 90, 92, 345], "envmetadata": [0, 345], "vector": [0, 1, 8, 23, 26, 33, 83, 84, 96, 97, 100, 108, 109, 110, 114, 115, 134, 172, 189, 191, 199, 200, 203, 204, 207, 290, 293, 303, 304, 305, 306, 307, 345], "multi": [0, 1, 7, 9, 27, 28, 31, 35, 38, 41, 42, 87, 91, 101, 102, 107, 111, 112, 113, 167, 175, 199, 201, 203, 205, 206, 207, 212, 213, 244, 288, 290, 291, 292, 293, 345], "agent": [0, 9, 27, 28, 100, 101, 102, 108, 109, 111, 112, 114, 115, 116, 161, 162, 210, 211, 212, 213, 215, 221, 230, 288, 345], "auto": [0, 64, 80, 122, 123, 172, 245, 260, 267, 276, 278, 280, 282, 345, 348], "reset": [0, 1, 2, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 113, 122, 123, 124, 127, 136, 139, 142, 144, 149, 157, 161, 162, 163, 164, 166, 167, 169, 172, 173, 175, 176, 184, 199, 201, 205, 232, 244, 245, 309, 336, 345], "mask": [0, 1, 4, 22, 26, 29, 30, 33, 108, 109, 121, 150, 175, 196, 210, 211, 222, 238, 239, 240, 241, 242, 247, 248, 324, 345], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 26, 33, 40, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 124, 130, 132, 134, 135, 136, 137, 140, 143, 144, 147, 151, 152, 154, 158, 161, 167, 172, 180, 183, 185, 188, 189, 190, 191, 192, 193, 195, 196, 197, 201, 205, 207, 208, 209, 210, 211, 212, 220, 221, 222, 224, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 253, 254, 259, 260, 262, 263, 265, 266, 267, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 336, 339, 343, 345, 347, 348, 349], "record": [0, 2, 31, 87, 91, 107, 113, 118, 143, 175, 277, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 339, 345], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 87, 91, 107, 113, 134, 163, 180, 233, 239, 240, 246, 247, 248, 249, 250, 251, 252, 345], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 41, 42, 91, 107, 113, 114, 193, 238, 310, 327, 345, 348, 349], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 78, 83, 84, 87, 91, 100, 103, 106, 107, 113, 120, 126, 131, 134, 136, 143, 149, 150, 162, 163, 166, 167, 169, 171, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 288, 290, 291, 292, 293, 294, 308, 327, 334, 335, 339, 345, 348, 349], "actor": [0, 3, 4, 20, 143, 185, 188, 189, 191, 196, 197, 209, 220, 222, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 288, 336, 345, 348], "explor": [0, 1, 174, 215, 233, 237, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 259, 323, 332, 333, 339, 345], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 74, 75, 78, 87, 91, 100, 107, 113, 120, 123, 125, 127, 128, 130, 132, 134, 135, 136, 144, 145, 149, 150, 153, 154, 155, 157, 159, 163, 164, 166, 167, 171, 173, 175, 180, 184, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 318, 320, 321, 322, 323, 324, 327, 336, 339, 345, 349], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 35, 38, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 73, 87, 88, 91, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 124, 131, 132, 133, 137, 143, 145, 151, 152, 157, 158, 161, 163, 166, 172, 175, 184, 194, 210, 211, 219, 233, 246, 250, 254, 255, 278, 284, 290, 295, 303, 313, 327, 345, 352], "hook": [0, 31, 87, 91, 107, 113, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 222, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 345], "planner": [0, 185, 209, 345], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 36, 39, 45, 63, 64, 65, 69, 72, 76, 77, 80, 82, 87, 91, 96, 107, 113, 132, 135, 136, 145, 149, 166, 167, 169, 173, 175, 209, 221, 230, 233, 234, 246, 249, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 331, 332, 333, 338, 339, 343, 345, 347, 349], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 36, 39, 40, 45, 52, 55, 61, 87, 91, 101, 102, 107, 108, 109, 113, 132, 140, 149, 162, 167, 169, 171, 175, 176, 189, 191, 201, 205, 237, 241, 242, 245, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 290, 327, 329, 339, 345, 349], "dqn": [0, 2, 52, 136, 196, 239, 240, 259, 260, 262, 263, 265, 267, 268, 269, 272, 273, 275, 277, 278, 279, 280, 281, 282, 288, 334, 345, 347], "ddpg": [0, 189, 190, 191, 192, 262, 272, 281, 345, 347], "sac": [0, 267, 278, 280, 345], "redq": [0, 278, 335, 336, 345], "iql": [0, 266, 273, 345], "cql": [0, 260, 265, 345], "dt": [0, 245, 345], "td3": [0, 282, 345], "ppo": [0, 4, 8, 246, 250, 261, 274, 277, 345, 347], "a2c": [0, 259, 345], "dreamer": [0, 118, 119, 197, 269, 270, 271, 345, 347], "trainer": [0, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345], "checkpoint": [0, 345], "builder": [0, 345], "logger": [0, 3, 308, 310, 312, 313, 314, 315, 316, 317, 321, 327, 339, 343, 345], "_util": [0, 3, 11, 345], "implement_for": [0, 3, 345], "thing": [0, 3, 7, 8, 87, 91, 107, 113, 346], "consid": [0, 1, 2, 3, 8, 19, 31, 35, 38, 41, 42, 63, 64, 80, 87, 91, 107, 113, 134, 173, 175, 194, 212, 227, 290, 292, 293, 346], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 80, 87, 88, 91, 100, 101, 102, 104, 106, 107, 108, 109, 113, 114, 115, 121, 123, 126, 127, 131, 132, 134, 135, 143, 144, 145, 149, 150, 157, 163, 166, 167, 169, 171, 172, 173, 175, 181, 182, 183, 185, 196, 199, 200, 203, 204, 207, 208, 209, 210, 211, 214, 222, 228, 244, 246, 249, 250, 252, 256, 261, 263, 268, 274, 277, 280, 283, 288, 289, 290, 291, 292, 293, 308, 309, 310, 324, 343, 346, 347, 349], "debug": [0, 6, 8, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 346], "work": [0, 1, 2, 3, 4, 8, 11, 31, 38, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 72, 74, 75, 77, 82, 87, 90, 91, 92, 95, 107, 110, 113, 128, 143, 149, 169, 172, 173, 175, 183, 186, 187, 206, 207, 240, 248, 253, 261, 274, 277, 327, 346, 347], "habitat": [0, 3, 93, 346], "lab": [0, 3, 85, 86, 93, 346], "mujoco": [0, 6, 8, 110, 346], "error": [0, 1, 3, 7, 10, 11, 28, 31, 34, 36, 39, 87, 91, 107, 113, 116, 150, 175, 176, 346], "solut": [0, 2, 3, 6, 7, 9, 20, 346, 347, 349], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 74, 75, 78, 80, 83, 84, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 142, 143, 145, 149, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 219, 220, 221, 222, 228, 229, 230, 231, 233, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 303, 308, 310, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 337, 339, 343, 346, 347, 348, 349, 350], "resourc": [0, 1, 20, 93, 346], "issu": [0, 3, 4, 5, 8, 52, 56, 63, 64, 80, 95, 127, 150, 164, 183, 233, 239, 240, 246, 247, 248, 249, 250, 346], "index": [0, 3, 7, 8, 10, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 77, 78, 79, 80, 81, 82, 87, 91, 101, 102, 107, 113, 114, 115, 122, 127, 131, 134, 167, 183, 210, 211, 345], "search": [0, 106, 184], "page": [0, 7, 317], "somewhat": [1, 2, 348], "equival": [1, 3, 23, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 83, 84, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 124, 133, 136, 167, 175, 196, 203, 207, 222, 239, 240, 247, 248, 277, 324], "dataload": [1, 61, 73, 75], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 58, 87, 91, 107, 113, 127, 138, 154, 162, 163, 164, 167, 175, 199, 201, 203, 205, 219, 237, 241, 242, 245, 280, 310, 347], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 87, 91, 100, 101, 102, 107, 108, 109, 113, 114, 115, 123, 126, 138, 143, 149, 158, 166, 167, 171, 175, 205, 206, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 324, 327, 347, 348, 349], "collect": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 73, 87, 91, 107, 110, 113, 124, 127, 145, 149, 171, 176, 244, 245, 260, 262, 265, 267, 278, 280, 282, 310, 318, 324, 327, 329, 330, 331, 339, 349], "over": [1, 2, 3, 4, 8, 13, 14, 31, 38, 42, 43, 45, 51, 52, 58, 73, 87, 91, 101, 102, 107, 113, 134, 145, 157, 164, 175, 183, 231, 252, 268, 270, 275, 296, 308, 330, 349], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 32, 34, 35, 36, 39, 41, 42, 58, 65, 87, 91, 107, 108, 109, 113, 124, 125, 131, 139, 149, 163, 166, 167, 168, 169, 171, 175, 183, 199, 201, 203, 205, 212, 249, 250, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 347], "static": [1, 11, 40, 45, 67, 74, 75, 93, 173, 273], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 25, 27, 29, 30, 31, 35, 36, 37, 38, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 78, 80, 83, 84, 87, 88, 91, 96, 97, 100, 106, 107, 108, 109, 111, 112, 113, 114, 115, 123, 124, 126, 128, 131, 132, 133, 134, 135, 143, 145, 147, 149, 151, 154, 157, 161, 162, 163, 166, 167, 169, 171, 173, 175, 180, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 216, 220, 231, 238, 239, 240, 241, 242, 244, 245, 249, 253, 254, 259, 260, 261, 262, 266, 267, 273, 274, 277, 278, 279, 280, 282, 289, 290, 291, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 318, 347, 348], "like": [1, 2, 3, 4, 7, 20, 25, 27, 31, 35, 38, 41, 42, 45, 65, 69, 75, 87, 91, 93, 100, 107, 108, 109, 113, 136, 165, 175, 176, 199, 203, 213, 243, 259, 261, 274, 277, 278, 279, 348], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 61, 78, 87, 90, 91, 92, 93, 107, 110, 113, 126, 132, 134, 135, 144, 152, 167, 175, 181, 182, 201, 205, 241, 245, 261, 274, 277, 280, 310, 324, 329, 341, 342, 343, 347], "s": [1, 2, 3, 6, 7, 8, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 74, 75, 78, 83, 84, 87, 91, 95, 96, 97, 101, 102, 104, 107, 108, 109, 113, 114, 115, 127, 131, 149, 161, 163, 165, 166, 167, 169, 171, 173, 175, 176, 186, 187, 201, 205, 211, 212, 213, 215, 221, 230, 234, 236, 237, 240, 241, 244, 246, 249, 250, 253, 260, 266, 273, 275, 280, 290, 291, 292, 293, 294, 308, 336, 347], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 38, 55, 56, 59, 60, 61, 87, 91, 103, 107, 113, 122, 127, 131, 139, 149, 157, 163, 166, 167, 168, 169, 171, 175, 207, 231, 249, 250, 251, 280, 310, 349], "two": [1, 2, 3, 4, 8, 10, 31, 35, 38, 40, 41, 42, 58, 69, 73, 75, 87, 91, 107, 113, 124, 145, 149, 171, 175, 192, 199, 201, 203, 205, 225, 250, 274, 285, 323, 327, 336, 348], "main": [1, 2, 3, 5, 19, 21, 60, 88, 250, 327, 347, 348], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 69, 72, 73, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 108, 110, 113, 114, 115, 123, 124, 128, 130, 131, 149, 157, 158, 161, 163, 165, 166, 167, 169, 171, 175, 183, 186, 187, 199, 201, 203, 205, 206, 207, 210, 211, 212, 213, 214, 231, 233, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 274, 276, 277, 278, 279, 280, 282, 284, 288, 290, 291, 292, 293, 294, 298, 308, 309, 310, 317, 320, 330, 336, 339, 340, 343], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 69, 72, 73, 74, 75, 76, 77, 85, 86, 87, 90, 91, 92, 93, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 115, 116, 125, 126, 130, 132, 135, 143, 145, 147, 149, 157, 159, 165, 167, 169, 171, 173, 175, 183, 186, 187, 189, 195, 198, 201, 205, 207, 210, 211, 217, 222, 240, 244, 247, 248, 250, 252, 253, 254, 275, 280, 287, 290, 293, 308, 309, 323, 324, 341, 342, 347], "constructor": [1, 2, 15, 17, 18, 19, 20, 38, 45, 58, 66, 78, 87, 91, 104, 107, 113, 114, 123, 166, 186, 187, 207, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 336, 340, 343, 347], "polici": [1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 83, 84, 87, 91, 103, 107, 113, 134, 143, 162, 181, 182, 196, 201, 205, 212, 213, 215, 222, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 259, 260, 261, 262, 266, 267, 273, 274, 276, 277, 278, 279, 280, 282, 323, 329, 332, 333, 339, 341, 342, 347, 348, 349], "iter": [1, 2, 3, 11, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 69, 73, 83, 84, 87, 91, 96, 97, 107, 113, 137, 145, 158, 175, 186, 187, 207, 212, 213, 226, 233, 239, 246, 247, 249, 251, 252, 254, 275, 287, 323, 326, 327, 336, 348, 349], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 87, 88, 91, 92, 93, 95, 96, 97, 103, 104, 107, 110, 113, 121, 167, 175, 199, 201, 203, 205, 241, 244, 251, 252, 331, 343, 347, 349, 351, 353], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 52, 67, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 103, 104, 105, 107, 108, 109, 110, 113, 121, 126, 139, 142, 145, 161, 162, 163, 164, 167, 172, 175, 183, 184, 185, 197, 199, 201, 203, 205, 206, 208, 209, 237, 241, 242, 244, 245, 246, 250, 259, 269, 277, 289, 290, 291, 292, 293, 296, 297, 298, 309, 312, 318, 323, 327, 349], "queri": [1, 3, 13, 31, 34, 36, 39, 87, 91, 107, 113, 149, 166, 169, 173, 175, 252], "defin": [1, 2, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 87, 91, 107, 113, 150, 162, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 212, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 263, 265, 275, 290, 291, 292, 293, 294, 309, 340], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 74, 75, 80, 83, 84, 87, 90, 91, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 126, 127, 134, 140, 144, 145, 156, 161, 164, 167, 173, 175, 185, 186, 187, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 221, 223, 224, 227, 228, 229, 230, 233, 237, 238, 241, 242, 244, 245, 246, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 278, 279, 280, 282, 318, 320, 323, 327, 329, 330, 331, 341, 342, 343, 347], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 45, 57, 73, 78, 87, 91, 107, 113, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 175, 176, 199, 201, 205, 207, 214, 215, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 291, 292, 293, 324], "deliv": [1, 2, 3, 15, 58], "stack": [1, 2, 3, 7, 8, 13, 14, 17, 19, 20, 27, 28, 34, 35, 36, 38, 39, 41, 42, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 69, 87, 91, 100, 107, 108, 109, 113, 173, 199, 201, 203, 204, 205, 244, 251, 252, 309, 318, 347], "user": [1, 2, 3, 5, 8, 31, 52, 54, 58, 60, 75, 87, 91, 107, 113, 128, 162, 167, 175, 176, 193, 206, 277, 280, 310, 340, 348, 349], "reach": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 40, 73, 87, 91, 101, 102, 107, 113, 114, 115, 161, 237, 241, 242, 245], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 132, 133, 135, 136, 137, 144, 145, 147, 151, 152, 154, 156, 158, 161, 163, 164, 166, 167, 173, 175, 183, 184, 185, 199, 201, 205, 209, 244, 259, 260, 261, 262, 263, 265, 266, 267, 273, 274, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 336, 348], "state": [1, 2, 3, 4, 13, 14, 15, 16, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 103, 107, 108, 109, 110, 111, 112, 113, 123, 126, 127, 128, 130, 136, 145, 152, 161, 162, 166, 167, 173, 175, 176, 183, 184, 185, 188, 193, 197, 199, 200, 201, 203, 204, 205, 206, 207, 209, 217, 220, 221, 223, 224, 230, 234, 244, 249, 255, 259, 261, 265, 274, 275, 277, 278, 279, 280, 288, 289, 290, 291, 292, 293, 294, 343, 347, 348], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 25, 31, 40, 52, 69, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 104, 105, 107, 110, 113, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 183, 199, 201, 205, 214, 237, 239, 241, 247, 270, 280], "predefin": 1, "becaus": [1, 3, 4, 7, 34, 36, 39, 40, 52, 87, 91, 107, 113, 136, 143, 161, 166, 172, 175, 192, 206, 213, 233, 239, 240, 244, 246, 247, 248, 249, 250], "potenti": [1, 2], "comput": [1, 3, 4, 8, 13, 15, 20, 26, 31, 40, 83, 84, 87, 91, 96, 97, 107, 113, 145, 159, 167, 170, 175, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 226, 228, 229, 231, 234, 237, 238, 240, 241, 244, 245, 246, 248, 250, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 331, 348], "heavi": [1, 8, 52], "crucial": [1, 2, 3, 237, 241, 242, 245, 266, 273, 275], "configur": [1, 8, 20, 21, 40, 143, 188, 193, 220, 275, 277, 336, 347], "hyperparamet": [1, 72, 175, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288], "appropri": [1, 3, 4, 7, 62, 70, 78, 79, 81, 82, 107, 113, 136, 340, 343], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 339, 340, 341, 342, 343, 347, 348], "take": [1, 2, 3, 8, 22, 40, 55, 83, 84, 87, 91, 96, 97, 107, 113, 130, 161, 164, 166, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 212, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 253, 256, 258, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 318, 329, 347, 349], "consider": [1, 2, 3, 8], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 101, 102, 103, 107, 108, 109, 113, 114, 115, 123, 132, 135, 162, 167, 175, 184, 186, 187, 201, 205, 207, 254, 259, 260, 261, 262, 263, 265, 267, 268, 274, 275, 277, 278, 279, 280, 282, 288, 290, 293], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 69, 74, 75, 76, 78, 85, 86, 87, 90, 91, 92, 93, 100, 103, 107, 108, 109, 113, 114, 115, 123, 124, 127, 130, 131, 132, 133, 136, 137, 139, 143, 145, 150, 151, 152, 154, 157, 158, 161, 162, 164, 166, 167, 172, 173, 175, 176, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 213, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 246, 248, 249, 250, 253, 256, 259, 261, 267, 272, 274, 275, 277, 278, 279, 281, 289, 290, 291, 292, 293, 294, 310, 312, 322, 323, 324, 327, 339, 341, 342, 343, 347, 349], "occur": [1, 8, 14, 27, 28, 52, 87, 91, 93, 107, 113, 128, 137, 145, 150, 172, 184, 233, 239, 240, 246, 247, 248, 249, 250, 270], "serial": [1, 2, 3, 31, 87, 91, 107, 113, 173, 175], "optim": [1, 2, 8, 31, 40, 83, 84, 87, 91, 107, 113, 167, 175, 185, 209, 214, 215, 260, 275, 276, 277, 280, 322, 327, 339, 348, 349], "parallel": [1, 3, 8, 87, 90, 91, 92, 107, 108, 109, 113, 167, 172, 176, 259, 340, 341, 342, 343], "syncdatacollector": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 31, 124, 127, 154, 339, 342, 345], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 100, 103, 106, 107, 108, 109, 110, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 341, 342, 343, 347, 348, 349], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 36, 39, 45, 55, 60, 61, 88, 104, 107, 113, 173, 341, 342, 343], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 342, 345], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 74, 75, 100, 108, 109, 199, 203, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 347, 349], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 35, 38, 41, 42, 67, 74, 75, 83, 84, 85, 86, 90, 92, 93, 95, 96, 97, 104, 105, 107, 110, 173, 175, 212, 245, 329, 345, 347], "aggreg": [1, 3, 52, 78, 108, 109, 184, 186, 187, 189, 190, 252], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 73, 74, 75, 87, 88, 91, 107, 113, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 183, 184, 199, 201, 203, 205, 207, 212, 222, 238, 240, 241, 248, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 290, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 329, 347], "final": [1, 2, 3, 4, 20, 34, 36, 39, 40, 163, 172, 199, 201, 203, 205, 212, 237, 241, 242, 243, 245, 251, 290, 323, 347], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 341, 345], "sever": [1, 2, 3, 8, 29, 31, 45, 55, 87, 91, 107, 113, 128, 130, 167, 175, 277], "gather": [1, 3, 17, 19, 20, 45, 61, 63, 64, 80, 150, 211, 219, 289, 331, 346], "continu": [1, 9, 24, 46, 75, 87, 91, 107, 108, 109, 113, 114, 115, 180, 189, 190, 191, 192, 245, 252, 259, 260, 267, 273, 277, 278, 279, 280, 281, 282, 290, 295, 303, 347], "concomitantli": 1, "network": [1, 4, 8, 31, 87, 91, 100, 107, 108, 109, 113, 175, 186, 187, 189, 190, 191, 192, 195, 197, 198, 203, 207, 212, 213, 215, 217, 218, 221, 223, 224, 225, 230, 234, 235, 236, 238, 249, 253, 260, 261, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 286, 288, 290, 291, 292, 293, 294, 338, 339, 347, 348, 349], "impli": 1, "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 40, 67, 69, 72, 83, 84, 87, 91, 107, 111, 112, 113, 131, 149, 163, 166, 167, 169, 171, 175, 199, 200, 201, 203, 204, 205, 212, 215, 249, 259, 260, 261, 267, 270, 280, 329, 338, 347, 349], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 34, 36, 39, 54, 60, 87, 90, 91, 92, 93, 107, 110, 113, 143, 145, 158, 167, 168, 173, 175, 176, 207, 212, 348, 349], "slightli": [1, 52, 347, 348], "lag": 1, "therefor": [1, 2, 3, 7, 35, 38, 41, 42, 59, 60, 87, 91, 107, 113, 154, 277, 288], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 69, 74, 75, 78, 80, 87, 91, 100, 103, 106, 107, 108, 109, 113, 121, 124, 127, 136, 143, 149, 154, 157, 161, 162, 164, 166, 168, 171, 172, 183, 184, 199, 200, 203, 204, 206, 210, 211, 212, 237, 241, 242, 245, 246, 249, 250, 258, 259, 260, 261, 266, 267, 268, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 348, 349], "asynchron": [1, 9, 14, 20, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249, 259, 341], "off": [1, 2, 4, 202, 229, 239, 280, 308, 323, 332, 347, 349], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 80, 87, 91, 107, 108, 109, 113, 114, 132, 135, 139, 145, 162, 167, 172, 175, 176, 196, 199, 201, 203, 205, 213, 214, 234, 236, 238, 240, 247, 259, 266, 268, 273, 277, 323, 347, 349], "remot": [1, 2, 17, 18, 19, 20, 107, 113], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 40, 78, 83, 84, 87, 91, 93, 94, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 130, 132, 135, 136, 137, 143, 147, 151, 152, 157, 158, 159, 161, 162, 164, 175, 176, 185, 201, 205, 209, 244, 245, 259, 308, 310, 331, 347], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 52, 55, 56, 58, 59, 60, 87, 91, 101, 102, 107, 113, 114, 115, 158, 278, 290, 291, 292, 293, 294, 348], "synchronis": [1, 88], "either": [1, 2, 5, 21, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 87, 91, 107, 113, 161, 162, 175, 255, 282, 314, 349], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 69, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 126, 127, 128, 131, 134, 137, 139, 142, 143, 144, 145, 149, 150, 152, 153, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 173, 175, 176, 180, 183, 184, 185, 186, 187, 189, 190, 191, 192, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 228, 229, 233, 234, 235, 236, 237, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 259, 260, 261, 262, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 290, 291, 292, 293, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 317, 320, 321, 323, 324, 327, 343, 347, 348, 349], "second": [1, 3, 8, 52, 55, 78, 124, 199, 201, 203, 205, 240, 261, 274, 277, 280, 312, 326], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 131, 132, 133, 135, 136, 137, 143, 147, 148, 149, 151, 152, 154, 158, 161, 163, 165, 166, 167, 169, 171, 175, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 212, 213, 214, 215, 220, 221, 222, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 248, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 308, 324, 329, 336, 337, 347], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 67, 74, 87, 91, 107, 113, 124, 139, 143, 166, 175, 195, 196, 200, 204, 216, 234, 235, 236, 239, 240, 243, 249, 255, 259, 261, 262, 263, 268, 274, 277, 279, 288, 289, 290, 291, 292, 293, 327, 336, 345, 349], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 75, 80, 86, 87, 88, 91, 103, 107, 113, 127, 145, 163, 166, 167, 173, 175, 180, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 263, 266, 267, 275, 288, 290, 291, 292, 293, 308, 310, 314, 323, 331, 332, 333, 336, 339, 341, 342, 347, 348, 349], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 31, 34, 36, 37, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 131, 132, 133, 135, 136, 137, 147, 149, 151, 152, 154, 158, 161, 163, 166, 167, 169, 171, 175, 180, 183, 185, 195, 199, 200, 201, 203, 204, 205, 209, 214, 215, 221, 222, 230, 233, 234, 235, 236, 238, 239, 240, 244, 246, 247, 248, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 308, 324, 336, 347], "slower": [1, 206], "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 52, 54, 58, 67, 74, 75, 77, 78, 87, 91, 95, 107, 110, 113, 152, 192, 201, 203, 205, 207, 216, 231, 233, 237, 239, 249, 254, 275, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 346, 348], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 69, 70, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 121, 124, 127, 130, 132, 133, 134, 135, 144, 145, 149, 154, 157, 160, 162, 163, 164, 166, 167, 168, 171, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 213, 216, 217, 218, 219, 220, 222, 223, 224, 226, 231, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 253, 254, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 281, 282, 288, 290, 291, 292, 293, 297, 298, 312, 320, 322, 323, 327, 331, 336, 343, 346, 347, 348, 349], "cuda": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 87, 91, 93, 94, 95, 107, 113, 131, 143, 148, 149, 163, 166, 167, 169, 171, 175, 199, 200, 203, 204, 249, 319], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 43, 69, 83, 84, 96, 97, 107, 113, 128, 130, 134, 144, 154, 157, 161, 166, 173, 199, 203, 205, 206, 212, 214, 215, 233, 239, 246, 247, 249, 250, 253, 261, 267, 274, 277, 278, 282, 296, 336, 343, 347, 349], "infer": [1, 107, 113, 127, 173, 201, 205, 214, 238, 265, 308], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 31, 52, 55, 67, 74, 75, 83, 84, 85, 86, 87, 90, 91, 96, 97, 103, 104, 105, 107, 113, 144, 145, 167, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 251, 252, 253, 256, 280, 310, 317, 323, 341, 342, 343, 346, 349], "dispatch": [1, 17, 18, 19, 20, 231, 244, 310], "avail": [1, 3, 4, 6, 20, 35, 38, 41, 42, 52, 55, 60, 67, 73, 74, 75, 85, 86, 95, 101, 102, 107, 108, 109, 110, 114, 115, 123, 126, 143, 196, 222, 246, 250, 275, 310, 341, 342, 347], "speed": [1, 2, 4, 8, 26, 87, 91, 107, 113, 348], "avoid": [1, 2, 3, 31, 63, 64, 80, 87, 91, 107, 113, 120, 167, 173, 175, 233, 249, 254, 261, 274, 277, 280, 330], "oom": [1, 3, 34, 36, 39, 63, 64, 80], "choic": [1, 2, 54, 60, 107, 216, 347, 348], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 35, 38, 40, 41, 42, 45, 52, 55, 56, 58, 59, 60, 63, 64, 67, 69, 74, 75, 78, 80, 87, 88, 89, 91, 100, 104, 107, 108, 109, 113, 114, 123, 124, 132, 135, 152, 166, 168, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 212, 213, 214, 216, 217, 218, 220, 221, 223, 224, 226, 230, 231, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 261, 274, 275, 277, 290, 291, 292, 293, 294, 308, 324, 341, 342, 343, 347], "ie": [1, 3, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 45, 46, 47, 58, 66, 75, 87, 91, 95, 106, 107, 113, 127, 139, 168, 173, 184, 201, 205, 238, 259, 261, 262, 266, 267, 273, 274, 277, 278, 279, 280, 282, 290, 291, 292, 293, 347, 348], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 78, 80, 87, 91, 107, 113, 172, 173, 175, 185, 206, 209, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 317, 336, 345, 349], "while": [1, 2, 3, 7, 8, 31, 87, 91, 107, 113, 154, 167, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 266, 273, 274, 277, 280, 347], "wait": [1, 19, 20, 21], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 31, 34, 36, 38, 39, 41, 52, 55, 56, 58, 59, 60, 61, 63, 64, 67, 69, 74, 75, 78, 80, 87, 91, 101, 102, 107, 108, 109, 113, 114, 115, 120, 123, 124, 126, 127, 134, 145, 152, 154, 157, 158, 161, 163, 167, 175, 183, 186, 187, 199, 203, 224, 244, 246, 251, 252, 253, 259, 260, 262, 263, 265, 266, 267, 273, 277, 280, 290, 297, 298, 308, 310, 347, 349], "impact": [1, 58, 132, 135, 259, 261, 274, 277, 279], "memori": [1, 3, 8, 20, 26, 31, 34, 36, 39, 45, 52, 54, 55, 56, 58, 59, 60, 63, 87, 88, 91, 95, 107, 113, 127, 131, 149, 163, 166, 167, 169, 171, 173, 175, 203, 204, 249, 343, 349], "manag": [1, 8, 286, 287, 290, 291, 292, 293, 323], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 66, 67, 69, 72, 74, 75, 78, 87, 91, 96, 97, 107, 108, 109, 113, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 148, 149, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 183, 184, 185, 195, 196, 201, 205, 208, 209, 222, 233, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 308, 310, 321, 322, 323, 325, 326, 327, 331, 336, 348, 349], "control": [1, 3, 5, 8, 15, 85, 86, 87, 91, 100, 107, 108, 109, 113, 134, 183, 189, 190, 191, 192, 201, 205, 208, 209, 224, 231, 245, 249, 250, 251, 259, 261, 274, 277, 281, 290, 295, 303, 308, 347, 349], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 69, 72, 73, 78, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 101, 102, 104, 105, 107, 110, 113, 114, 115, 127, 128, 132, 135, 140, 143, 144, 145, 149, 150, 161, 163, 164, 166, 167, 169, 175, 176, 195, 199, 200, 202, 203, 204, 205, 210, 211, 212, 229, 234, 235, 236, 238, 244, 246, 249, 250, 252, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 285, 288, 290, 291, 292, 293, 308, 310, 318, 322, 336, 347, 348, 349], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 35, 36, 38, 40, 41, 42, 45, 52, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 69, 72, 74, 87, 91, 107, 108, 109, 113, 123, 124, 127, 130, 132, 135, 137, 140, 147, 159, 167, 175, 201, 205, 213, 290, 292, 293, 323, 327, 348], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 244, 245], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 54, 72, 78, 83, 84, 87, 91, 96, 97, 107, 113, 215, 277, 290, 291, 292, 293, 294, 309, 336, 346, 347, 349], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 25, 27, 28, 31, 34, 36, 39, 43, 45, 54, 58, 73, 74, 77, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 104, 105, 107, 108, 109, 110, 113, 127, 132, 134, 135, 140, 144, 145, 166, 167, 173, 175, 186, 187, 200, 201, 204, 205, 207, 210, 211, 212, 213, 238, 245, 253, 280], "storag": [1, 8, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 73, 74, 75, 77, 78, 80, 87, 89, 91, 107, 113, 126, 127, 132, 135, 154, 175, 345, 349], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 72, 73, 74, 75, 78, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 121, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 137, 139, 143, 144, 145, 147, 149, 150, 154, 156, 157, 158, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 233, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 339, 343, 349], "behaviour": [1, 3, 13, 14, 20, 58, 91, 128, 132, 135, 145, 150, 162, 183, 201, 202, 205, 229, 308, 323, 347], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 27, 87, 91, 107, 113, 127, 132, 135, 145, 163, 164, 205, 246, 250, 251, 252, 329, 341, 342, 347], "choos": [1, 100, 201, 205, 277, 345, 347, 348], "follow": [1, 2, 3, 6, 7, 8, 31, 34, 36, 37, 39, 40, 52, 54, 55, 56, 57, 58, 59, 60, 67, 83, 84, 87, 91, 96, 97, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 123, 143, 149, 169, 175, 186, 187, 199, 201, 203, 205, 207, 240, 247, 248, 258, 259, 260, 261, 262, 266, 267, 273, 274, 277, 278, 279, 280, 282, 310, 327, 336, 347, 348, 349], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 330], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 52, 127, 140, 175, 237, 241, 244, 245, 309, 310, 312, 320, 323, 327, 330, 331], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 73, 74, 76, 77, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 104, 105, 106, 107, 110, 113, 123, 124, 127, 130, 131, 134, 137, 139, 142, 143, 145, 147, 148, 149, 157, 159, 163, 166, 167, 169, 171, 172, 173, 175, 176, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 213, 214, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 242, 244, 245, 248, 249, 250, 252, 253, 256, 261, 274, 277, 280, 289, 290, 291, 292, 293, 308, 309, 323, 349], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 124, 127, 154, 330], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 31, 38, 40, 41, 52, 54, 55, 58, 69, 72, 74, 75, 78, 87, 88, 91, 101, 102, 107, 108, 109, 113, 114, 115, 149, 154, 157, 161, 162, 163, 164, 171, 173, 175, 196, 199, 200, 201, 203, 205, 212, 213, 217, 221, 222, 230, 237, 239, 240, 241, 248, 252, 296, 299, 300, 301, 302, 304, 305, 306, 307, 310, 323, 324, 341, 342, 347], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 330], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 40, 44, 46, 47, 58, 60, 68, 78, 87, 91, 103, 107, 113, 134, 144, 145, 163, 176, 199, 201, 203, 205, 241, 246, 249, 250, 260, 278, 323, 331, 347], "rand_step": [1, 3, 85, 86, 87, 88, 90, 91, 92, 98, 99, 103, 104, 105, 107, 113, 142, 163, 173], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 54, 56, 58, 59, 60], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 41, 52, 54, 55, 56, 58, 59, 60, 66, 67, 74, 75, 78, 83, 84, 87, 91, 96, 97, 107, 113, 150, 161, 166, 175, 185, 205, 209, 245, 277, 290, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 318, 345, 348], "pad": [1, 2, 3, 22, 37, 43, 54, 56, 58, 59, 60, 127, 186, 187, 189, 190, 205, 206, 210, 211, 212, 324], "along": [1, 2, 3, 13, 14, 22, 27, 28, 34, 36, 39, 40, 45, 54, 56, 58, 59, 60, 64, 67, 69, 74, 75, 78, 80, 126, 127, 128, 145, 147, 150, 157, 165, 205, 207, 210, 211, 215, 239, 246, 249, 250, 275, 347], "point": [1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 57, 62, 66, 67, 70, 78, 79, 81, 82, 87, 91, 107, 113, 123, 126, 127, 131, 149, 162, 163, 165, 166, 167, 169, 171, 175, 208, 249, 258, 268, 327, 346], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 67, 74, 75, 91, 123, 150, 161, 184, 210, 211, 237, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 349], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 41, 56, 85, 86, 87, 91, 107, 113, 114, 115, 140, 150, 173, 175, 196, 210, 211, 222, 239, 240, 247, 248, 250, 285, 290, 324], "valid": [1, 2, 3, 22, 34, 36, 37, 45, 61, 78, 116, 123, 150, 167, 175, 186, 187, 207, 210, 211, 237, 245, 274, 290, 291, 292, 293, 324, 349], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 323, 345], "strategi": [1, 2, 15, 58, 72, 100, 211, 219, 241, 347, 349], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 44, 46, 47, 49, 69, 87, 91, 103, 107, 108, 109, 113, 114, 116, 124, 126, 127, 136, 143, 161, 162, 166, 167, 172, 173, 175, 186, 187, 210, 211, 212, 213, 237, 239, 246, 247, 250, 253, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 310, 327, 339, 349], "own": [1, 3, 13, 14, 16, 21, 31, 87, 91, 107, 108, 109, 113, 175, 310], "organ": [1, 2], "within": [1, 2, 3, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 110, 113, 124, 127, 132, 135, 136, 154, 161, 172, 173, 175, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 263, 268, 288, 308, 310, 347], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 58, 72, 83, 84, 87, 91, 96, 97, 100, 107, 108, 109, 113, 123, 127, 134, 145, 152, 167, 168, 175, 196, 199, 200, 201, 203, 204, 205, 207, 209, 212, 213, 222, 273, 277, 285, 290, 291, 292, 296, 297, 298, 323, 327, 329, 341, 342, 347, 348, 349], "how": [1, 2, 3, 17, 18, 19, 31, 35, 41, 58, 66, 67, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 175, 259, 261, 272, 274, 277, 310, 312, 327, 346, 347], "tabl": [1, 347], "summar": [1, 3], "what": [1, 3, 8, 35, 44, 52, 87, 91, 107, 113, 136, 163, 176, 183, 247, 346, 347, 348], "expect": [1, 2, 3, 4, 7, 25, 31, 38, 44, 45, 67, 73, 74, 87, 91, 103, 106, 107, 113, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 145, 147, 149, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 199, 200, 201, 203, 204, 205, 212, 213, 240, 245, 249, 252, 259, 260, 261, 262, 263, 265, 266, 267, 273, 274, 275, 277, 278, 279, 280, 282, 288, 331, 346, 347, 348, 349], "n": [1, 2, 3, 6, 7, 23, 26, 31, 33, 40, 87, 91, 107, 113, 127, 134, 139, 168, 175, 199, 200, 203, 209, 244, 245, 250, 259, 267, 275, 289, 324, 347, 349, 351, 353], "b": [1, 2, 3, 7, 8, 22, 25, 27, 34, 36, 38, 39, 40, 41, 42, 78, 199, 200, 203, 204, 212, 213, 214, 215, 221, 230, 253, 290, 291, 292, 293, 294, 296, 310, 347], "cat_result": [1, 13, 14], "na": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 80, 83, 84, 87, 90, 91, 93, 94, 96, 97, 103, 104, 105, 107, 110, 111, 112, 113, 121, 123, 125, 127, 128, 130, 131, 133, 134, 143, 144, 145, 149, 154, 157, 159, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 185, 186, 187, 189, 190, 191, 192, 193, 197, 198, 199, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 219, 223, 224, 227, 228, 229, 231, 233, 237, 238, 240, 241, 242, 245, 248, 249, 252, 253, 256, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 289, 290, 291, 292, 293, 296, 297, 298, 318, 325, 339, 343, 348, 349, 351, 353], "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 73, 78, 87, 88, 90, 91, 104, 105, 107, 113, 123, 127, 132, 135, 136, 149, 153, 154, 162, 164, 171, 173, 175, 176, 183, 199, 203, 239, 245, 249, 281, 290, 291, 292, 293, 294, 296, 310, 317, 327, 329, 343, 346], "p": [1, 2, 4, 69, 72, 88, 111, 112], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 52, 54, 56, 58, 59, 60, 83, 84, 87, 91, 96, 97, 107, 108, 109, 113, 131, 132, 133, 135, 149, 154, 158, 162, 163, 165, 166, 167, 169, 171, 172, 175, 199, 202, 203, 207, 212, 224, 228, 229, 249, 252, 258, 259, 260, 262, 263, 265, 266, 267, 273, 275, 277, 278, 279, 280, 282, 329, 341, 342, 343, 347, 348], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 78, 87, 91, 107, 113, 132, 133, 135, 165, 167, 176, 205, 207, 213, 246, 249, 250, 252, 253, 258, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 290, 291, 292, 293, 310, 318, 329, 341, 342, 343, 345, 347, 349], "dimens": [1, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 44, 45, 46, 47, 54, 56, 58, 59, 60, 63, 64, 67, 74, 75, 78, 80, 85, 86, 87, 90, 91, 92, 93, 107, 113, 114, 115, 126, 127, 128, 139, 145, 147, 150, 157, 160, 165, 168, 173, 186, 187, 188, 193, 201, 203, 205, 207, 210, 211, 212, 214, 215, 220, 221, 225, 226, 227, 228, 231, 239, 244, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 343, 347], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 83, 84, 87, 88, 91, 96, 97, 100, 106, 107, 108, 109, 110, 113, 120, 126, 128, 150, 157, 163, 164, 167, 173, 175, 183, 197, 199, 203, 205, 206, 244, 245, 261, 267, 270, 274, 275, 277, 278, 282, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 327, 347, 348], "adapt": [1, 121, 161, 274], "equal": [1, 13, 14, 16, 52, 67, 74, 75, 104, 107, 113, 144, 145, 186, 187, 199, 201, 203, 205, 207, 213, 281, 285, 318, 341, 342], "introduc": [1, 2, 107, 113, 199, 201, 203, 205, 245], "some": [1, 2, 3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 54, 60, 63, 64, 69, 78, 80, 83, 84, 87, 91, 96, 97, 101, 102, 107, 108, 109, 113, 114, 115, 123, 149, 167, 169, 175, 176, 189, 201, 205, 226, 250, 251, 252, 310, 318, 330, 347, 349], "confus": [1, 31, 87, 91, 107, 113, 167, 175], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 35, 36, 39, 41, 42, 45, 52, 54, 56, 58, 59, 60, 63, 64, 65, 69, 72, 73, 74, 75, 76, 77, 80, 87, 90, 91, 92, 103, 107, 113, 130, 133, 134, 151, 158, 165, 169, 173, 175, 199, 201, 205, 215, 216, 238, 240, 241, 248, 250, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 290, 308, 324, 336, 341, 342, 347, 349], "better": [1, 3, 8, 9, 13, 14, 201, 205, 348], "consist": [1, 2, 3, 31, 35, 38, 41, 42, 55, 58, 87, 91, 107, 113, 143, 172, 175, 187, 207], "interact": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 58, 87, 91, 101, 102, 107, 113, 167, 246, 250], "keep": [1, 3, 4, 7, 8, 14, 35, 38, 41, 42, 73, 78, 107, 113, 145, 149, 171, 173, 175, 183, 245, 320, 327], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 52, 55, 149, 171, 260, 262, 265, 267, 278, 280, 282], "interchang": 1, "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 31, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 73, 74, 75, 87, 91, 101, 102, 107, 113, 114, 115, 134, 144, 155, 167, 175, 176, 186, 187, 195, 199, 201, 205, 207, 212, 213, 240, 246, 250, 259, 261, 262, 265, 266, 267, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 285, 290, 323, 327, 348], "wherea": [1, 2, 21, 58, 83, 84, 85, 86, 90, 92, 93, 96, 97, 104, 105, 110, 134, 175, 275, 349], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 55, 58, 60, 66, 67, 87, 91, 103, 107, 113, 149, 163, 167, 171, 173, 175, 201, 203, 205, 210, 211, 241, 242, 245, 246, 250, 263, 266, 267, 280, 288, 290, 291, 292, 293, 294], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 52, 58, 67, 74, 78, 87, 91, 107, 113, 150, 251, 252, 318, 327, 347], "doesn": [1, 4, 11, 78, 104, 132, 135], "understood": 1, "serv": [1, 17, 19, 20, 93], "basi": [1, 78, 212], "simplest": [1, 78, 253], "scenario": [1, 2, 101, 102, 107, 114, 115, 308], "transit": [1, 31, 54, 58, 75, 78, 87, 91, 107, 113, 175, 255], "sampl": [1, 4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 87, 91, 103, 106, 107, 113, 126, 127, 150, 154, 177, 178, 181, 182, 185, 194, 202, 209, 210, 211, 219, 220, 223, 228, 229, 233, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 259, 260, 261, 262, 263, 265, 274, 276, 277, 282, 318, 324, 327, 330, 345, 347], "attent": [1, 2, 8], "given": [1, 2, 3, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 87, 91, 103, 107, 113, 131, 134, 145, 149, 163, 166, 167, 169, 171, 175, 183, 185, 196, 197, 199, 203, 209, 222, 226, 233, 239, 240, 241, 244, 245, 248, 249, 250, 251, 252, 254, 258, 262, 263, 265, 289, 290, 291, 292, 293, 294, 296, 319, 323, 339, 347, 349], "built": [1, 2, 3, 5, 7, 69, 83, 84, 90, 96, 97, 106, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 283, 288, 337, 339, 340, 343], "flatten": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 44, 46, 47, 78, 124, 139, 324], "suffici": [1, 3, 4], "preprocess": [1, 2, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60], "popul": [1, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 142, 163], "replaybuff": [1, 2, 35, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 74, 81, 127, 150, 154, 175, 263, 268, 288, 337, 339, 345], "lazytensorstorag": [1, 2, 35, 38, 41, 42, 66, 78, 154, 175], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 38, 78, 87, 88, 91, 107, 113, 120, 124, 143, 163, 175, 231, 239, 244, 247, 269, 271, 290, 293, 301, 302, 306, 307, 308, 339, 348], "reshap": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 74, 78, 124, 201, 205, 207, 308], "extend": [1, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 69, 70, 74, 75, 77, 78, 79, 81, 82, 126, 154, 175, 324, 349], "slice": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 126], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 34, 35, 36, 38, 39, 41, 42, 78, 95], "achiev": [1, 2, 3, 4, 31, 87, 91, 95, 107, 113, 162, 175, 184, 324, 349], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 35, 36, 38, 39, 41, 42, 45, 58, 60, 61, 78, 87, 88, 91, 95, 107, 108, 113, 114, 115, 124, 127, 149, 166, 167, 169, 172, 173, 175, 180, 183, 186, 187, 189, 190, 191, 192, 193, 198, 201, 205, 207, 208, 212, 213, 238, 250, 263, 268, 278, 280, 288, 310, 324, 331, 332, 333, 339, 341, 342, 347], "multidimension": [1, 2, 41, 66, 67], "slicesampl": [1, 2, 52, 67], "sampler": [1, 2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 150, 263, 268, 288], "One": [1, 2, 4, 8, 30, 33, 45, 78, 83, 84, 107, 113, 127, 154, 169, 219, 237, 249, 253, 281, 285, 314], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 74, 75, 76, 77, 78, 80, 83, 87, 88, 91, 96, 107, 108, 109, 110, 113, 114, 123, 124, 127, 130, 136, 140, 143, 145, 147, 158, 162, 163, 164, 167, 168, 173, 175, 186, 187, 196, 201, 205, 207, 210, 211, 212, 213, 222, 233, 239, 240, 244, 246, 247, 248, 249, 250, 253, 254, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 281, 282, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336], "ensur": [1, 2, 3, 31, 35, 41, 66, 67, 73, 87, 91, 107, 113, 127, 149, 161, 167, 169, 173, 175, 239, 347], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 69, 78, 80, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 106, 107, 108, 109, 111, 112, 113, 114, 115, 124, 126, 128, 132, 135, 136, 137, 143, 145, 147, 151, 152, 154, 158, 161, 163, 165, 173, 174, 175, 176, 180, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 222, 227, 230, 233, 234, 235, 236, 238, 239, 240, 244, 246, 247, 248, 249, 252, 253, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 318, 324, 327, 339, 347], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 52, 202, 228, 229, 258, 346], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 31, 34, 36, 76, 78, 87, 91, 95, 100, 107, 108, 109, 113, 127, 130, 139, 149, 152, 164, 167, 171, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 214, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 247, 248, 249, 253, 256, 258, 267, 278, 279, 280, 282, 289, 294, 310, 327, 343, 347, 348], "dimension": [1, 35, 38, 41, 42, 134, 201, 205, 290, 295, 303], "num_slic": [1, 2, 52, 58, 67, 74, 75], "4": [1, 2, 3, 7, 23, 25, 26, 27, 31, 33, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 74, 75, 80, 83, 84, 85, 86, 87, 91, 96, 97, 98, 99, 100, 103, 105, 107, 111, 112, 113, 121, 123, 124, 127, 136, 154, 161, 162, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 204, 206, 207, 209, 212, 213, 216, 217, 218, 219, 220, 221, 222, 230, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 308, 309, 347], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 124, 154], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 124, 127, 154, 327, 330, 339, 349], "dim": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 74, 127, 128, 147, 163, 168, 173, 204, 206, 226, 231, 244, 343], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 54, 56, 58, 67, 74, 75, 87, 91, 95, 104, 107, 110, 113, 124, 131, 149, 163, 166, 167, 169, 171, 175, 207, 231, 249, 251, 252, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 308, 310, 312, 347, 349], "ndim": [1, 2, 35, 38, 41, 42, 63, 64, 78, 80, 87, 91, 107, 113, 175, 244], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 78, 87, 91, 104, 108, 109, 110, 113, 308, 340, 345], "make_env": [1, 3, 107, 113, 115, 173, 308, 332, 333], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 39, 66, 72, 87, 91, 107, 113, 167, 195, 222, 240, 247, 248, 249, 250, 268, 329, 345, 349], "behav": [1, 3, 93, 103, 199, 203, 219, 266, 273], "iif": 1, "accordingli": [1, 161, 162, 203, 247], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 75, 78, 80, 85, 86, 87, 90, 91, 92, 93, 94, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 121, 123, 124, 127, 131, 134, 136, 137, 143, 145, 147, 149, 151, 152, 154, 157, 158, 161, 162, 163, 165, 166, 167, 169, 171, 175, 180, 185, 186, 187, 189, 190, 191, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 212, 213, 216, 219, 221, 231, 233, 234, 235, 236, 239, 240, 246, 248, 249, 252, 253, 254, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 326, 347, 349], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 39, 58, 66, 78, 123, 136, 176, 239, 249], "current": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 75, 87, 91, 93, 104, 107, 113, 123, 124, 127, 150, 162, 163, 164, 166, 167, 175, 177, 178, 183, 197, 206, 224, 244, 245, 259, 261, 268, 274, 277, 279, 280, 313, 349], "fulli": [1, 8, 31, 87, 91, 107, 113, 175, 200, 204], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 91, 104, 107, 108, 109, 113, 114, 115, 121, 123, 139, 149, 150, 154, 167, 169, 173, 175, 176, 184, 186, 187, 193, 207, 215, 238, 244, 249, 250, 251, 252, 259, 260, 262, 263, 265, 266, 267, 273, 275, 277, 278, 279, 280, 282, 290, 292, 293, 308, 315, 327, 346], "consecut": [1, 3, 52, 73, 95, 205, 245, 310], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 58, 87, 88, 90, 91, 104, 105, 107, 113, 149, 171, 175, 327, 343], "therebi": [1, 308, 348], "interrupt": [1, 2, 91, 244, 296], "These": [1, 2, 7, 31, 40, 55, 60, 87, 91, 107, 113, 114, 149, 171, 175, 347, 348], "tool": [1, 2, 3, 5], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 87, 90, 91, 107, 113, 117, 120, 206, 349], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 345], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 345], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 143, 145, 147, 149, 151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 318, 325, 326, 336, 339, 347, 348, 349], "multiprocess": [1, 2, 3, 17, 18, 19, 52, 60, 88, 89, 107, 113, 173], "synchron": [1, 13, 18, 20, 104, 341, 342], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 31, 87, 91, 104, 107, 113, 132, 135, 162, 167, 173, 175, 177, 181, 182, 194, 201, 202, 205, 219, 227, 228, 229, 246, 250, 275, 308, 323], "find": [1, 4, 6, 7, 17, 18, 19, 35, 37, 43, 74, 75, 203, 237, 245, 321, 325], "exampl": [1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 145, 147, 149, 151, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 212, 213, 216, 219, 220, 221, 222, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 283, 284, 288, 290, 291, 292, 293, 296, 308, 310, 318, 319, 320, 321, 322, 324, 325, 326, 329, 336, 339, 347, 348, 349, 351, 352, 353], "folder": [1, 2, 34, 36, 39, 114], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 85, 86, 87, 88, 90, 91, 92, 93, 101, 102, 103, 107, 108, 109, 113, 114, 115, 116, 126, 127, 130, 131, 132, 133, 135, 138, 143, 144, 145, 149, 157, 159, 163, 164, 166, 167, 169, 171, 173, 175, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 212, 213, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 249, 250, 252, 253, 256, 270, 275, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 322, 327, 330, 341, 342, 343, 346, 347, 348, 349, 351, 352], "variou": [1, 2, 3, 201, 205, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 283, 288, 310, 341, 342], "machin": [1, 2, 7, 17, 18, 19, 31, 57, 95], "wonder": 1, "why": [1, 2, 3, 183], "instead": [1, 4, 7, 8, 11, 26, 31, 58, 87, 91, 107, 113, 139, 163, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 259, 261, 263, 266, 267, 268, 273, 274, 277, 278, 279, 280, 288, 290, 294, 298, 343, 347], "lower": [1, 2, 3, 20, 24, 130, 173, 223, 224, 253], "io": [1, 52, 58, 96, 97, 104, 203, 204], "footprint": [1, 2], "commun": [1, 2, 3, 107, 346], "yet": [1, 83, 84, 96, 97], "spec": [1, 2, 3, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 48, 49, 50, 54, 83, 84, 87, 89, 90, 91, 92, 93, 96, 97, 103, 104, 105, 107, 110, 113, 114, 115, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 147, 149, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 180, 183, 184, 196, 222, 224, 233, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 253, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 336, 347], "plai": [1, 3, 108, 109, 127], "role": [1, 3, 102], "opposit": 1, "direct": [1, 2, 31, 87, 91, 107, 113, 175, 199, 203, 275], "sinc": [1, 2, 3, 4, 5, 7, 31, 35, 38, 41, 42, 52, 60, 75, 78, 87, 91, 107, 108, 109, 110, 113, 175, 176, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 212, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 253, 256, 308, 310], "faster": [1, 2, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 59, 60, 104, 290, 291, 292, 293], "share": [1, 3, 6, 8, 22, 34, 36, 39, 63, 64, 65, 67, 74, 76, 77, 80, 88, 107, 113, 173, 201, 205, 212, 213, 234, 235, 236, 259, 261, 262, 266, 267, 273, 274, 277, 278, 279, 280, 282, 343, 345, 347], "among": [1, 3, 108, 109], "prohibit": [1, 3, 78], "slow": [1, 3, 4, 34, 36, 39], "compar": [1, 3, 58, 78, 323, 348], "gpu": [1, 7, 8, 31, 63, 64, 80, 87, 91, 95, 107, 113, 175], "nativ": [1, 7, 9, 56, 87, 91, 107, 113, 127, 310], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 39, 41, 52, 66, 67, 78, 83, 84, 91, 123, 145, 173, 185, 194, 197, 199, 201, 203, 205, 206, 209, 220, 227, 237, 246, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 276, 277, 278, 279, 280, 282, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 347, 348], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 72, 74, 75, 77, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 110, 113, 114, 115, 123, 124, 128, 130, 131, 149, 157, 158, 163, 165, 166, 167, 169, 171, 175, 201, 205, 206, 210, 211, 212, 233, 237, 238, 239, 241, 242, 244, 245, 246, 247, 249, 250, 253, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 274, 276, 277, 278, 279, 280, 282, 284, 288, 290, 291, 292, 293, 294, 298, 308, 317, 340], "build": [1, 3, 7, 22, 25, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 87, 91, 92, 93, 96, 97, 101, 102, 104, 107, 110, 113, 114, 115, 154, 173, 175, 185, 201, 205, 209, 243, 246, 250, 327, 334, 335, 337, 338, 347, 349], "mani": [1, 2, 3, 4, 38, 83, 84, 85, 86, 87, 90, 92, 93, 96, 97, 104, 105, 110, 259, 261, 267, 274, 277, 278, 282, 347], "eg": [1, 2, 3, 11, 34, 36, 39, 63, 64, 65, 76, 77, 80, 85, 86, 87, 90, 91, 92, 93, 95, 107, 110, 113, 134, 161, 167, 212, 238, 310], "gymnasium": [1, 3, 5, 11, 87, 90, 91, 92, 98, 99, 107, 113, 117, 120, 137, 158, 161, 172], "warn": [1, 3, 237, 241, 242, 245], "quickli": [1, 3], "becom": [1, 3, 4, 20, 199, 203], "quit": [1, 3, 52, 87, 91, 107, 113, 347], "annoi": [1, 3], "By": [1, 2, 3, 33, 85, 86, 87, 90, 91, 92, 93, 101, 102, 107, 108, 109, 110, 113, 114, 115, 231, 250, 275, 323, 343], "filter": [1, 2, 3, 4, 45, 67, 74, 75, 259, 260, 262, 266, 267, 273, 277, 278, 280], "out": [1, 2, 3, 4, 5, 9, 20, 31, 45, 54, 58, 67, 74, 75, 87, 91, 107, 108, 109, 113, 163, 175, 176, 199, 200, 203, 210, 211, 214, 215, 233, 238, 239, 240, 245, 246, 247, 248, 249, 250, 286, 287, 349], "still": [1, 2, 3, 9, 58, 83, 84, 87, 91, 96, 97, 107, 113, 237, 274, 275], "wish": [1, 3, 13, 14, 16, 58, 120], "displai": [1, 3, 7, 87, 91, 107, 113, 327, 349], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 72, 73, 74, 75, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 128, 131, 132, 135, 136, 137, 139, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 173, 175, 176, 183, 184, 185, 186, 187, 189, 195, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 221, 222, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 288, 290, 291, 292, 293, 299, 300, 301, 302, 304, 305, 306, 307, 310, 317, 320, 321, 323, 324, 325, 327, 336, 343, 347, 349], "central": [2, 212], "part": [2, 3, 4, 8, 31, 40, 52, 55, 56, 58, 59, 60, 83, 87, 91, 96, 107, 113, 126, 145, 154, 157, 175, 183, 201, 205, 254, 318, 343], "algorithm": [2, 3, 8, 9, 103, 259, 277, 278, 280, 345, 348, 349], "implement": [2, 3, 9, 11, 13, 14, 15, 31, 76, 87, 91, 103, 104, 107, 113, 124, 131, 132, 133, 137, 140, 143, 151, 152, 158, 161, 166, 167, 173, 175, 186, 199, 200, 201, 202, 203, 204, 205, 227, 228, 229, 259, 260, 264, 265, 266, 273, 275, 276, 277, 279, 280, 308, 318, 332, 336, 347, 349], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 25, 31, 35, 38, 40, 41, 42, 52, 54, 58, 60, 73, 75, 78, 83, 84, 87, 88, 91, 95, 96, 97, 107, 113, 127, 143, 149, 152, 169, 172, 173, 175, 176, 185, 205, 206, 212, 213, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 310, 346, 347, 348, 349], "give": [2, 3, 7, 41, 55, 87, 91, 103, 107, 113, 127, 346, 348], "abil": [2, 275], "panel": 2, "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 54, 60, 78, 124, 127, 136, 201, 205, 266, 273, 280, 283, 347], "includ": [2, 3, 4, 7, 9, 20, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 76, 77, 80, 87, 91, 103, 107, 113, 162, 167, 173, 175, 275, 280, 330, 347, 349], "almost": 2, "physic": [2, 6, 7, 107, 110, 349], "theori": 2, "crude": 2, "made": [2, 3, 31, 38, 52, 63, 64, 65, 76, 77, 80, 87, 91, 107, 113, 175, 245, 263, 288], "liststorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "veri": [2, 3, 96, 97], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 31, 33, 34, 36, 39, 52, 58, 67, 69, 72, 74, 75, 83, 84, 87, 91, 96, 97, 107, 113, 123, 124, 152, 175, 183, 207, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 283, 285, 288, 347, 349], "complex": [2, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 123, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 139, 142, 145, 147, 149, 150, 151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 259, 260, 262, 263, 265, 266, 267, 270, 271, 273, 275, 277, 278, 279, 280, 282, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 336, 347, 349], "contigu": [2, 8, 55, 58, 59, 87, 91, 107, 113, 180], "tensorstorag": [2, 38, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78], "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 74, 75, 126, 127], "citizen": 2, "pytre": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 69], "tupl": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 69, 77, 78, 85, 86, 87, 91, 107, 113, 121, 134, 136, 142, 143, 145, 150, 158, 175, 183, 189, 195, 196, 201, 204, 205, 206, 207, 216, 220, 221, 222, 239, 240, 244, 247, 248, 253, 259, 260, 262, 266, 267, 269, 273, 275, 277, 278, 279, 280, 282, 290, 291, 292, 293, 321, 323, 325, 334, 335], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 34, 36, 39, 45, 67, 72, 74, 75, 87, 90, 91, 92, 101, 102, 107, 113, 114, 115, 163, 167, 175, 246, 250, 280, 323, 341, 342, 343, 349], "nest": [2, 3, 25, 27, 31, 34, 36, 38, 39, 48, 63, 64, 69, 80, 87, 90, 91, 92, 107, 113, 127, 161, 164, 175, 184, 244, 290, 291, 292, 293, 294, 308, 349], "construct": [2, 3, 5, 31, 35, 38, 41, 42, 52, 69, 87, 90, 91, 107, 108, 113, 132, 135, 175, 176, 201, 205, 224, 250, 327, 347], "ram": [2, 90, 92], "prealloc": [2, 3], "ve": [2, 40], "been": [2, 3, 5, 7, 8, 17, 19, 20, 40, 69, 73, 87, 91, 95, 101, 102, 107, 113, 143, 161, 162, 166, 199, 203, 237, 242, 244, 245], "here": [2, 3, 4, 7, 8, 9, 10, 59, 60, 78, 85, 86, 87, 91, 95, 107, 108, 109, 113, 127, 317, 347, 348, 349], "start": [2, 3, 4, 5, 13, 20, 45, 52, 60, 67, 74, 75, 88, 100, 107, 113, 183, 322], "replay_buff": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 324, 339], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 74, 75, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 99, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 120, 121, 123, 124, 126, 127, 130, 136, 137, 142, 143, 145, 147, 149, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 166, 171, 173, 175, 180, 183, 184, 185, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 203, 204, 205, 207, 209, 212, 213, 216, 221, 222, 230, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 308, 310, 320, 323, 336, 339, 347, 348], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 74, 75, 78, 127, 154, 175], "10": [2, 3, 7, 21, 22, 25, 31, 35, 38, 40, 41, 42, 43, 45, 63, 64, 66, 69, 74, 75, 78, 80, 83, 84, 87, 88, 91, 96, 97, 103, 107, 108, 109, 111, 112, 113, 114, 115, 121, 124, 126, 127, 162, 164, 165, 175, 185, 188, 189, 191, 193, 195, 199, 200, 203, 204, 206, 209, 220, 231, 241, 242, 245, 246, 253, 260, 263, 265, 267, 277, 278, 279, 282, 288, 290, 291, 292, 293, 296, 310, 318, 349], "add": [2, 3, 4, 6, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 69, 70, 78, 79, 81, 82, 87, 91, 107, 113, 127, 143, 167, 175, 201, 205, 214, 243, 259, 322], "string": [2, 17, 18, 19, 31, 37, 45, 61, 87, 91, 101, 107, 113, 120, 149, 161, 171, 175, 201, 205, 239, 244, 246, 247, 258, 309, 326, 336, 348], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 74, 75, 78, 80, 106, 107, 113, 127, 150, 159, 162, 163, 186, 187, 199, 200, 203, 233, 237, 239, 244, 249, 250, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 276, 277, 278, 279, 280, 282, 318], "30": [2, 3, 38, 56, 123, 144, 223, 224, 308, 312], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 74, 75, 76, 77, 78, 80, 87, 88, 90, 91, 100, 101, 102, 103, 107, 108, 109, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 336, 339, 341, 342, 343, 347, 349], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 122, 123, 124, 126, 127, 128, 129, 131, 134, 139, 140, 144, 145, 147, 149, 150, 153, 160, 161, 164, 167, 168, 169, 171, 175, 176, 180, 185, 186, 187, 188, 189, 191, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 259, 260, 261, 267, 269, 270, 274, 275, 276, 277, 278, 282, 290, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 318, 319, 320, 323, 324, 327, 329, 336, 337, 341, 342, 343], "tell": [2, 3, 4, 7, 108, 109], "our": [2, 3, 7, 8, 17, 38, 127, 310, 347], "far": [2, 40, 202, 228, 229], "restrict": [2, 3], "empti": [2, 3, 25, 27, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 69, 87, 91, 106, 107, 113, 132, 135, 149, 151, 164, 167, 169, 171, 314], "64": [2, 3, 34, 36, 39, 52, 58, 69, 127, 153, 189, 190, 198, 201, 205, 213, 221, 288], "dtype": [2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 74, 75, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 121, 124, 125, 131, 132, 133, 134, 135, 136, 137, 143, 145, 147, 149, 151, 152, 154, 158, 161, 163, 165, 166, 167, 169, 171, 175, 176, 180, 183, 184, 185, 195, 196, 199, 200, 201, 203, 204, 205, 209, 214, 215, 221, 222, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 248, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 296, 336, 347], "unit8": 2, "img": 2, "randint": [2, 45, 69, 165], "255": [2, 69, 165], "uint8": [2, 3, 34, 36, 39, 47, 52, 58, 85, 86, 101, 102, 136, 147, 165], "next": [2, 3, 4, 8, 13, 14, 15, 22, 25, 27, 31, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 74, 75, 78, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 101, 102, 103, 107, 111, 112, 113, 114, 115, 123, 124, 126, 127, 132, 135, 136, 137, 142, 143, 147, 151, 152, 154, 157, 158, 161, 163, 172, 173, 175, 180, 183, 185, 200, 201, 204, 205, 209, 224, 244, 255, 259, 260, 262, 263, 265, 266, 267, 268, 273, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 310, 321, 323, 325], "ask": [2, 8, 52, 58, 67, 74, 75, 310], "do": [2, 3, 4, 7, 60, 87, 91, 107, 113, 114, 115, 150, 172, 173, 183, 213, 214, 235, 290, 349], "automat": [2, 3, 5, 60, 63, 64, 69, 80, 87, 90, 91, 92, 107, 108, 109, 113, 123, 132, 135, 145, 172, 186, 233, 244, 246, 308, 347], "hand": [2, 3, 7, 20, 25], "look": [2, 3, 5, 7, 8, 31, 87, 91, 100, 107, 108, 109, 113, 149, 150, 169, 175, 246, 250, 251, 252, 348], "assum": [2, 3, 6, 25, 33, 40, 41, 42, 54, 56, 58, 59, 60, 74, 87, 91, 107, 113, 126, 129, 139, 149, 150, 157, 163, 167, 169, 171, 180, 201, 205, 206, 231, 253, 263, 268, 280, 288, 299, 300, 301, 302, 304, 305, 306, 307, 310], "lead": [2, 3, 4, 8, 10, 11, 22, 25, 27, 31, 35, 38, 41, 42, 54, 73, 85, 86, 87, 90, 92, 93, 163, 202, 221, 228, 229], "leav": [2, 25, 34, 36, 38, 39, 87, 176, 184], "tree": [2, 34, 36, 39, 87, 91, 107, 113], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 77, 85, 86, 87, 88, 90, 91, 92, 93, 107, 113, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 186, 187, 194, 201, 205, 207, 212, 213, 227, 233, 238, 239, 246, 247, 249, 250, 253, 254, 260, 267, 274, 276, 278, 280, 324, 329, 347], "don": [2, 3, 4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 127], "throw": [2, 31, 34, 36, 39, 87, 91, 107, 113, 175], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 74, 75, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 126, 127, 131, 132, 135, 136, 137, 147, 151, 152, 154, 158, 161, 163, 166, 167, 175, 183, 184, 185, 193, 195, 196, 201, 205, 209, 221, 222, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 310, 318, 324, 336, 347], "max": [2, 22, 33, 36, 41, 45, 61, 66, 67, 78, 134, 164, 227, 228, 229, 238, 245, 260, 261, 267, 276, 278, 280], "label": [2, 36, 37, 40, 45], "100": [2, 13, 14, 15, 16, 31, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 78, 83, 84, 87, 91, 96, 97, 107, 113, 130, 136, 145, 154, 159, 161, 175, 212, 240, 244, 310, 319, 339], "rb_pytre": 2, "randn": [2, 25, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 69, 74, 75, 80, 126, 145, 180, 188, 189, 193, 195, 196, 199, 200, 203, 204, 206, 210, 211, 212, 216, 219, 220, 222, 233, 234, 235, 236, 238, 239, 246, 247, 249, 252, 253, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 290, 291, 292, 293, 326, 347], "c": [2, 3, 6, 7, 25, 34, 36, 38, 39, 41, 42, 57, 145, 165, 203, 204], "zero": [2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 54, 64, 74, 75, 78, 80, 87, 91, 107, 113, 124, 126, 128, 132, 134, 135, 145, 151, 154, 175, 180, 183, 185, 190, 191, 192, 198, 199, 200, 201, 203, 204, 205, 206, 210, 211, 213, 221, 230, 241, 242, 245, 248, 256, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 296], "assert": [2, 3, 6, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 91, 94, 107, 113, 120, 124, 127, 130, 132, 135, 143, 152, 159, 173, 176, 180, 213, 216, 231, 290, 291, 292, 293, 318, 326], "len": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 80, 147, 186, 187, 207, 213], "ambigu": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 77, 87, 91, 107, 113, 124, 131, 149, 163, 166, 167, 169, 171, 175, 249, 348], "deal": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "interpret": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "put": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 91, 101, 102, 114, 115, 173, 317, 343, 347], "solv": [2, 4, 9, 10, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 346], "clear": [2, 3, 25, 27, 28, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 95, 107, 113, 175, 319], "cut": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "distinct": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 124], "view": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 121, 175, 196, 199, 203, 207], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 114, 115, 127, 128, 161, 162, 163, 164, 167, 175, 184, 186, 187, 207, 210, 211, 213, 244, 245, 247, 248, 256, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 331, 343, 346, 349], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 25, 27, 58, 83, 84, 87, 91, 95, 96, 97, 100, 107, 108, 109, 113, 123, 132, 135, 150, 207, 221, 244, 246, 250, 251, 252, 256, 290, 291, 292, 293, 347], "collate_fn": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "__init__": [2, 3, 7, 87, 103, 120, 121, 124, 132, 135, 151, 185, 196, 199, 203, 209, 254, 260, 262, 267, 273, 278, 280, 282, 349], "major": 2, "worri": [2, 43], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 63, 64, 65, 67, 74, 76, 77, 80, 87, 88, 91, 95, 107, 113, 123, 184], "though": [2, 4, 87, 91, 107, 113, 207], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 40, 44, 46, 47, 87, 91, 107, 113, 144, 163, 202, 228, 229, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293], "latter": [2, 17, 18, 19, 31, 54, 87, 91, 107, 113, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 277, 341, 342], "inv": [2, 3, 130, 134, 137, 147, 154, 159], "method": [2, 3, 4, 11, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 74, 75, 76, 77, 78, 80, 87, 90, 91, 92, 93, 107, 110, 113, 123, 124, 127, 131, 132, 133, 136, 137, 139, 143, 145, 149, 151, 152, 153, 154, 158, 161, 163, 166, 167, 169, 171, 175, 185, 206, 233, 234, 235, 236, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 294, 308, 309, 340, 348, 349, 350], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 87, 91, 107, 113, 134, 137, 158, 165, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 290], "multithread": [2, 3, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 61, 104, 105], "thread": [2, 13, 14, 16, 34, 36, 39, 83, 84, 96, 97, 107, 113], "prefetch": [2, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 61], "advis": [2, 55], "benchmark": [2, 3, 9, 84, 96, 97], "techniqu": [2, 8, 107, 113], "real": [2, 5, 58, 250, 348], "life": [2, 136], "adopt": [2, 3, 5], "throughput": [2, 9], "constant": [2, 127, 145, 162, 349], "throughout": [2, 3, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288], "further": [2, 3, 5], "refin": [2, 58, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288], "coupl": 2, "get": [2, 3, 4, 6, 7, 8, 9, 25, 27, 34, 35, 36, 38, 39, 52, 54, 58, 63, 64, 67, 74, 75, 76, 77, 78, 80, 87, 88, 91, 107, 113, 121, 126, 128, 132, 134, 135, 143, 145, 150, 162, 163, 165, 167, 173, 233, 241, 242, 246, 247, 250, 290, 291, 292, 293, 294, 310, 314, 347], "first_elt": 2, "128": [2, 52, 54, 58, 75, 83, 84, 96, 97, 190, 193], "wa": [2, 3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 73, 87, 91, 107, 113, 167, 176, 184, 203, 259, 261, 272, 274, 277, 279, 281, 296, 348], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 69, 74, 75, 78, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 120, 123, 124, 127, 128, 132, 133, 134, 135, 142, 145, 151, 152, 154, 157, 161, 163, 164, 165, 173, 175, 180, 183, 184, 186, 187, 189, 190, 191, 192, 193, 196, 198, 201, 207, 210, 211, 212, 213, 216, 219, 222, 233, 234, 235, 236, 238, 239, 241, 242, 244, 245, 247, 249, 252, 254, 275, 308, 336, 339, 347, 349], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 128], "larger": [2, 4, 266, 273], "volum": 2, "due": [2, 3, 5], "serialis": [2, 34, 36, 39], "memorymappedtensor": [2, 34, 36, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 312], "well": [2, 3, 8, 20, 22, 31, 35, 37, 38, 41, 42, 72, 76, 87, 91, 107, 113, 167, 175, 189, 203, 223, 224, 275, 294], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 101, 102, 107, 108, 109, 113, 114, 115, 132, 133, 135, 157, 160, 162, 168, 175, 185, 203, 249, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 317, 347], "file": [2, 6, 7, 8, 34, 36, 39, 52, 54, 55, 56, 58, 59, 60, 114, 309, 310, 312, 349, 351, 353], "locat": [2, 7, 34, 36, 39, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 136, 145, 156, 202, 216, 228, 229, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329], "improv": [2, 4, 140, 259, 348], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 107, 113], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 25, 31, 34, 36, 39, 45, 52, 54, 55, 56, 58, 59, 60, 74, 75, 85, 86, 87, 90, 91, 92, 95, 107, 113, 121, 127, 154, 157, 164, 173, 175, 184, 241, 242, 246, 250, 274, 275, 277], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37, 44, 46, 47, 67, 134, 203, 204, 266], "sharabl": [2, 107, 113], "collabor": [2, 58], "rather": [2, 4, 77, 152], "incur": [2, 83, 84, 96, 97], "transmiss": 2, "overhead": [2, 83, 84, 96, 97, 107, 113], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 69, 87, 91, 107, 113, 122, 123, 166, 172, 176, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 249, 250, 251, 253, 256, 275, 277], "instanti": [2, 3, 20, 34, 35, 36, 38, 39, 41, 42, 95, 123, 166, 206, 213, 308], "content": [2, 8, 15, 25, 27, 34, 35, 36, 38, 39, 41, 42, 73, 87, 90, 91, 92, 104, 107, 113, 151, 186, 187, 207, 212, 213, 246, 275], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 87, 91, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 116, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 175, 180, 196, 216, 233, 234, 235, 236, 239, 246, 247, 249, 250, 252, 253, 254, 255, 280, 288, 323, 345, 347, 348], "writer": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 67, 69, 70, 74, 78, 79, 82], "tensordictroundrobinwrit": [2, 69], "goe": [2, 4, 108, 109], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 69, 263, 268, 288], "access": [2, 3, 7, 8, 31, 35, 55, 57, 87, 91, 107, 113, 149, 169, 175, 343, 346], "show": [2, 31, 87, 91, 107, 113, 175, 213, 310, 347], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 74, 75, 78, 126, 127, 324, 339, 345], "mp": [2, 17, 18, 19, 52, 53, 54, 55, 56, 57, 58, 59, 60, 88, 173], "def": [2, 3, 11, 21, 31, 38, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 88, 91, 103, 107, 113, 120, 121, 123, 124, 132, 135, 151, 167, 175, 185, 196, 199, 200, 203, 204, 209, 244, 246, 254, 260, 262, 267, 273, 275, 278, 280, 282, 308, 349], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 39, 40, 41, 66, 67, 87, 91, 103, 107, 108, 109, 113, 121, 123, 124, 132, 134, 135, 151, 161, 162, 167, 170, 173, 175, 184, 185, 199, 201, 205, 209, 237, 241, 242, 245, 246, 247, 248, 249, 250, 259, 260, 261, 262, 263, 265, 267, 268, 269, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 288, 290, 291, 292, 293, 294, 323, 327, 329, 332, 333, 338, 339, 349], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 78, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 98, 99, 107, 113, 121, 124, 126, 128, 132, 133, 134, 135, 142, 143, 145, 154, 157, 163, 165, 167, 173, 183, 185, 195, 196, 201, 205, 208, 209, 221, 222, 230, 233, 234, 235, 236, 238, 239, 241, 242, 245, 246, 247, 249, 252, 254, 288, 291, 292, 293, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 309, 318, 326, 336, 347, 348], "__name__": [2, 3, 21, 88, 308], "__main__": [2, 3, 21, 88, 308], "21": [2, 58, 59, 75, 107, 108, 109, 113], "proc": 2, "target": [2, 4, 8, 20, 31, 87, 88, 91, 107, 113, 162, 166, 175, 249, 250, 259, 260, 261, 262, 263, 265, 267, 268, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 294, 330, 338, 339, 348, 349], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 74, 75, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 131, 149, 151, 160, 163, 166, 167, 168, 170, 171, 175, 185, 186, 187, 195, 201, 205, 207, 208, 209, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 317, 320, 324, 327, 343], "join": [2, 88, 345], "now": [2, 3, 7, 35, 107, 127, 213], "length": [2, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 52, 58, 61, 67, 74, 75, 77, 87, 91, 96, 97, 107, 113, 150, 173, 185, 186, 187, 189, 191, 193, 199, 203, 207, 209, 212, 213, 233, 249, 254, 318, 324], "20": [2, 45, 59, 74, 75, 78, 87, 91, 95, 107, 113, 162, 175, 198, 199, 200, 203, 204, 238, 318], "_data": 2, "It": [2, 3, 4, 7, 22, 31, 37, 40, 41, 43, 45, 54, 60, 69, 72, 78, 82, 87, 91, 93, 103, 104, 107, 108, 109, 113, 114, 115, 124, 126, 136, 143, 145, 150, 162, 167, 172, 175, 176, 189, 191, 197, 212, 213, 221, 223, 224, 230, 231, 240, 241, 244, 245, 248, 250, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 288, 289, 290, 308, 317, 323, 336, 346, 347, 348], "difficult": [2, 4, 107], "pai": [2, 8], "word": [2, 3, 40, 52, 54, 56, 58, 59, 60, 275], "1m": [2, 52, 58, 330], "doe": [2, 3, 17, 34, 35, 36, 39, 41, 45, 52, 54, 58, 66, 67, 74, 76, 77, 82, 87, 91, 101, 102, 107, 113, 114, 115, 193, 199, 200, 201, 203, 204, 205, 214, 231, 238, 251, 252, 259, 261, 268, 274, 277, 289, 327, 347, 349], "howev": [2, 3, 5, 7, 31, 87, 91, 107, 113, 127, 157, 162, 167, 175, 259, 261, 274, 277, 279, 280, 347], "capac": [2, 35, 38, 41, 42, 63, 64, 66, 74, 80], "There": [2, 10, 69, 201, 205, 347, 349], "circumv": 2, "account": [2, 63, 64, 80, 123, 127, 210, 211, 347], "save": [2, 3, 8, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 172, 175, 309, 310, 312, 317, 327, 349], "convent": [2, 3, 52, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 114, 115, 348], "overridden": [2, 3, 52, 55, 56, 58, 59, 60, 87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 290, 292, 293], "dim_extend": [2, 35, 38, 41, 42], "obtain": [2, 7, 40, 52, 87, 91, 107, 113, 126, 149, 162, 171, 185, 221, 324], "counterpart": 2, "desir": [2, 3, 31, 87, 91, 107, 113, 122, 124, 131, 145, 147, 149, 150, 163, 166, 167, 169, 171, 175, 181, 182, 186, 187, 207, 213, 233, 239, 240, 246, 247, 248, 249, 250, 347], "diversifi": 2, "offer": [2, 3, 7, 83, 84, 87, 91, 96, 97, 101, 102, 107, 113, 308, 347], "accomplish": [2, 176], "anoth": [2, 3, 8, 58, 67, 74, 87, 90, 91, 92, 95, 107, 113, 124, 132, 133, 135, 163, 166, 207, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 347, 348], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 52, 53, 55, 127, 176, 260, 265, 266, 273, 317, 349], "docstr": [2, 31, 87, 91, 107, 113, 175], "extens": [2, 35, 38, 41, 42, 75, 349], "detail": [2, 3, 5, 6, 7, 31, 87, 91, 107, 108, 109, 113, 165, 167, 175, 196, 199, 203, 240, 259, 268, 277, 346, 349], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 87, 91, 107, 113, 132, 135, 173, 175, 184, 199, 201, 203, 205, 245, 246, 250, 268], "without": [2, 3, 7, 9, 31, 40, 52, 54, 58, 74, 75, 87, 91, 107, 113, 114, 115, 121, 123, 132, 135, 165, 175, 199, 200, 203, 204, 235, 236, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 289, 290, 291, 292, 293, 294, 339, 346, 347], "happi": 2, "concaten": [2, 8, 13, 14, 20, 29, 30, 58, 127, 128, 145, 166, 203, 207, 252], "schedul": [2, 4, 7, 40, 323], "transformedenv": [2, 3, 13, 31, 87, 88, 91, 107, 113, 121, 124, 127, 130, 131, 132, 135, 136, 137, 139, 142, 143, 144, 145, 147, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 166, 173, 175, 201, 205, 244, 310, 336], "stepcount": [2, 13, 31, 87, 91, 101, 102, 107, 113, 114, 115, 166, 175], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 31, 78, 87, 88, 91, 93, 107, 113, 123, 124, 127, 130, 131, 136, 142, 143, 145, 147, 152, 153, 154, 157, 159, 162, 163, 164, 166, 167, 173, 175, 201, 205, 244, 308, 310, 336, 339, 345, 347], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 127, 154], "cartpol": [2, 3, 31, 85, 86, 87, 91, 107, 113, 123, 124, 127, 157, 162, 175, 244, 308], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 31, 54, 56, 78, 87, 88, 90, 91, 92, 96, 97, 104, 107, 113, 123, 124, 127, 130, 137, 142, 143, 145, 152, 154, 157, 159, 161, 162, 163, 164, 166, 175, 201, 205, 244, 285, 299, 300, 301, 302, 304, 305, 306, 307, 308, 347], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 83, 84, 87, 91, 96, 97, 103, 107, 108, 109, 113, 121, 124, 127, 132, 135, 143, 151, 154, 185, 196, 209, 222, 224, 233, 239, 246, 247, 260, 263, 265, 278, 280, 282, 339, 347], "8": [2, 3, 6, 7, 31, 38, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 74, 75, 83, 84, 85, 86, 87, 91, 107, 113, 123, 162, 186, 187, 189, 190, 198, 207, 234, 235, 236, 246, 249, 252, 273], "traj_kei": [2, 67, 74, 75], "truncated_kei": [2, 67, 74, 75, 154, 161], "strict_length": [2, 52, 58, 67, 74, 75, 310], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 35, 38, 42, 43, 63, 64, 66, 67, 75, 80, 87, 91, 107, 113, 149, 154, 157, 167, 171, 175, 200, 204, 216, 222, 240, 244, 246, 248, 249, 250, 290, 291, 292, 293, 318, 330], "enumer": [2, 13, 14, 15, 20, 31, 38, 42, 75, 87, 91, 107, 113, 175, 283, 348], "break": [2, 5, 13, 14, 15, 20, 31, 38, 42, 52, 55, 56, 58, 59, 60, 61, 67, 74, 75, 78, 87, 91, 107, 113, 124, 127, 154, 173, 175, 310], "step_count": [2, 13, 14, 15, 31, 87, 91, 96, 97, 107, 113, 161, 175], "32": [2, 21, 25, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 75, 111, 112, 114, 115, 186, 187, 188, 189, 190, 192, 193, 198, 207, 212, 213, 217, 218, 220, 221, 230, 288, 308], "33": [2, 25, 31, 69, 87, 91, 107, 113, 175, 186, 187, 207], "34": [2, 186, 187, 207], "35": [2, 186, 187, 207], "36": 2, "37": [2, 126], "38": [2, 7], "39": [2, 56, 96, 97], "40": [2, 96, 97], "41": 2, "11": [2, 10, 22, 26, 33, 45, 63, 64, 66, 75, 80, 88, 165, 175, 185, 209], "12": [2, 10, 59, 63, 64, 75, 80, 96, 97, 107, 111, 112, 113, 175], "14": [2, 6, 11, 52, 53, 54, 55, 56, 57, 58, 59, 60, 74, 75, 87, 91, 107, 113, 145, 175], "15": [2, 22, 52, 53, 54, 55, 56, 57, 58, 59, 60, 75, 87, 91, 107, 113, 175, 238, 245, 269], "16": [2, 3, 31, 59, 67, 75, 83, 84, 87, 91, 96, 97, 107, 113, 127, 175], "17": [2, 59, 75, 107, 175, 336], "could": [2, 3, 4, 6, 22], "sai": [2, 31, 87, 91, 107, 113, 175, 212], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 25, 26, 27, 30, 33, 65, 67, 74, 75, 87, 90, 91, 92, 95, 107, 113, 132, 135, 150, 157, 247], "handl": [2, 3, 20, 31, 87, 91, 107, 113, 172, 173, 175, 205, 207, 327, 341, 342], "suggest": [2, 288], "serialenv": [2, 3, 87, 91, 107, 163, 175, 244, 345], "squeez": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 123, 124, 127, 160, 162, 186, 187, 225, 226], "6": [2, 3, 7, 13, 14, 15, 16, 22, 31, 38, 52, 59, 60, 67, 75, 85, 86, 107, 111, 112, 123, 145, 147, 162, 186, 187, 189, 190, 191, 194, 198, 200, 206, 207, 212, 213, 217, 227, 244, 246, 254, 336], "5": [2, 3, 13, 14, 22, 23, 25, 27, 31, 35, 38, 41, 42, 52, 69, 74, 75, 78, 87, 88, 91, 96, 97, 101, 102, 104, 107, 111, 112, 113, 114, 115, 123, 124, 126, 154, 161, 162, 175, 185, 186, 187, 189, 190, 195, 196, 197, 198, 199, 202, 203, 206, 207, 209, 212, 213, 217, 222, 228, 229, 238, 239, 244, 247, 253, 274, 277, 279, 282, 308, 347], "7": [2, 3, 6, 10, 26, 31, 33, 35, 38, 41, 67, 75, 87, 91, 101, 102, 107, 113, 123, 162, 185, 186, 187, 190, 206, 207, 209, 212, 296], "9": [2, 3, 7, 22, 31, 35, 38, 41, 59, 60, 67, 75, 78, 85, 86, 100, 108, 109, 123, 162, 173, 175, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 283, 288, 348], "18": [2, 59, 75, 111, 112, 114, 115, 175, 213], "19": [2, 59, 74, 75, 78, 175], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 55, 107, 113, 166, 168, 213, 348, 349], "congruent": 2, "custom": [2, 3, 5, 31, 87, 91, 107, 113, 169, 175, 212, 213, 253, 268, 277, 283, 343, 347], "name": [2, 3, 6, 7, 11, 15, 31, 34, 36, 39, 45, 52, 55, 57, 60, 61, 83, 85, 87, 91, 96, 100, 101, 102, 104, 107, 108, 109, 110, 113, 114, 115, 116, 134, 137, 152, 157, 158, 161, 167, 169, 172, 175, 184, 201, 205, 239, 247, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 290, 292, 293, 294, 308, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 336, 349], "randomcroptensordict": 2, "unlik": [2, 73, 101, 102, 114, 115, 244, 268, 277, 310], "stop": [2, 3, 15, 20, 40, 60, 67, 74, 75, 87, 91, 107, 113], "signal": [2, 3, 13, 14, 15, 16, 22, 52, 54, 56, 58, 59, 60, 67, 74, 75, 78, 91, 101, 102, 114, 115, 127, 136, 161, 164, 184, 348], "disk": [2, 3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 327, 349], "dump": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 308, 309, 310], "load": [2, 6, 7, 13, 14, 15, 16, 31, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 86, 87, 91, 107, 113, 120, 173, 175, 343, 349], "json": 2, "metadata": [2, 52, 54], "anticip": [2, 132, 135], "compli": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 58], "back": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 44, 46, 47, 54, 172, 176, 233, 239, 240, 246, 247, 248, 249, 250], "exact": [2, 3, 107, 203], "statu": [2, 3, 87], "prioriti": [2, 4, 35, 41, 42, 63, 64, 65, 66, 67, 76, 77, 80, 262, 263, 265, 266, 267, 268, 273, 278, 280, 282, 288, 349], "heap": 2, "under": [2, 3, 4, 20, 31, 40, 52, 54, 55, 56, 58, 59, 60, 85, 86, 87, 90, 91, 92, 93, 107, 110, 113, 175, 233, 239, 240, 246, 247, 248, 249, 250, 275, 290, 291, 292, 293, 294, 310, 348], "hood": [2, 20, 52, 87, 91, 107, 113], "just": [2, 3, 4, 11, 77, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 100, 104, 105, 107, 108, 109, 110, 113, 123, 130, 184, 213, 318, 347, 349], "public": [2, 57, 149, 171], "serializ": 2, "altern": [2, 4, 26, 104, 193, 210, 211, 212, 258, 308], "state_dict": [2, 13, 14, 15, 16, 20, 31, 34, 36, 39, 87, 91, 107, 113, 167, 173, 175, 280, 343, 349], "load_state_dict": [2, 13, 14, 15, 16, 20, 31, 34, 36, 39, 87, 91, 107, 113, 167, 173, 175, 280, 349], "drawback": 2, "struggl": 2, "big": 2, "sequenti": [2, 9, 31, 87, 91, 107, 113, 126, 143, 175, 251, 252, 277, 347], "known": [2, 3, 5, 7, 8, 297, 298], "seamless": [2, 207], "integr": [2, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 192, 201, 205, 209, 249, 347], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": 2, "essenti": [2, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288], "understand": [2, 3, 8], "purpos": [2, 3, 7, 87, 91, 107, 113, 127, 199, 259, 261, 274, 277, 279, 339], "guid": [2, 108, 109, 111, 112, 162, 346], "explan": [2, 31, 87, 91, 107, 113, 175], "effect": [2, 3, 25, 31, 35, 38, 41, 42, 52, 58, 67, 69, 72, 74, 75, 87, 91, 107, 113, 123, 127, 167, 175, 327], "task": [2, 3, 9, 27, 28, 40, 45, 55, 58, 85, 86, 87, 91, 94, 101, 102, 107, 108, 109, 110, 113, 114, 115, 149, 161, 167, 169, 171, 266, 273], "realm": 2, "As": [2, 3, 4, 31, 52, 87, 91, 100, 107, 108, 109, 113, 154, 250, 290, 347], "practition": 2, "often": [2, 3, 8, 272, 327], "encount": [2, 4, 58, 244, 346], "situat": [2, 101, 102], "sometim": [2, 3], "discard": [2, 3, 45, 54, 56, 91, 169, 183, 309], "variabl": [2, 3, 4, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 52, 55, 56, 59, 60, 83, 84, 85, 86, 87, 90, 92, 93, 96, 97, 101, 102, 105, 106, 110, 114, 115, 199, 200, 201, 203, 204, 205, 209, 234, 235, 236, 275, 278, 349], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 31, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 141, 142, 143, 145, 146, 147, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 183, 188, 189, 190, 191, 192, 193, 196, 201, 205, 206, 212, 217, 218, 220, 222, 223, 233, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 254, 255, 259, 260, 261, 262, 263, 265, 266, 267, 270, 273, 274, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 308, 310, 336, 339, 347, 349], "immedi": [2, 25, 27, 31, 87, 91, 107, 113, 175, 289], "200": [2, 13, 14, 15, 20, 31, 52, 87, 90, 91, 92, 107, 113, 114, 115, 154, 175, 189, 190, 197, 223, 224, 308, 310], "199": 2, "info": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 72, 74, 75, 85, 86, 87, 90, 91, 92, 93, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 169, 172, 174, 317], "At": [2, 208, 241], "glanc": 2, "seem": 2, "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 40, 87, 91, 100, 107, 108, 109, 113, 127, 150, 199, 201, 203, 205, 230, 234, 235, 236, 255, 347], "less": [2, 104, 231, 341, 342, 348], "omit": [2, 322], "proper": [2, 3, 4, 6, 7, 290, 291, 292, 293], "imposs": [2, 3, 78, 176, 259, 261, 274, 277, 279], "determin": [2, 35, 41, 54, 66, 67, 87, 91, 107, 113, 114, 115, 149, 171, 212, 245], "complic": 2, "matter": 2, "inconsist": 2, "miss": [2, 3, 4, 6, 7, 11, 25, 31, 87, 91, 107, 113, 167, 175, 183, 251, 252, 280, 346], "behavior": [2, 4, 31, 87, 91, 107, 113, 167, 175, 266, 273], "primari": 2, "elimin": [2, 3], "represent": [2, 27, 28, 31, 87, 91, 107, 113, 149, 169, 171, 175], "upon": [2, 3, 8], "canon": 2, "definit": [2, 33, 76, 212], "markov": [2, 3], "decis": [2, 3, 188, 220, 238, 264, 276], "mdp": 2, "context": [2, 3, 5, 8, 31, 87, 88, 91, 106, 107, 113, 163, 168, 175, 213, 214, 238, 286, 287, 290, 291, 292, 293, 295, 303, 310, 323, 347, 348], "condit": [2, 45, 162, 239, 240, 244, 247, 248, 258], "complet": [2, 7, 9, 73, 87, 91, 107, 113, 127, 161, 346, 348], "termin": [2, 3, 7, 13, 14, 15, 16, 31, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 85, 86, 87, 90, 91, 92, 96, 97, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 123, 124, 136, 151, 175, 184, 185, 201, 205, 209, 244, 251, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "truncat": [2, 3, 13, 14, 15, 16, 31, 37, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 74, 75, 85, 86, 87, 90, 91, 92, 101, 102, 107, 108, 109, 113, 114, 115, 136, 137, 144, 151, 154, 161, 167, 175, 184, 201, 205, 229, 244, 296], "reward": [2, 3, 13, 14, 15, 31, 34, 39, 40, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 78, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 121, 124, 125, 130, 131, 132, 133, 135, 136, 137, 143, 147, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 166, 167, 168, 170, 171, 173, 175, 180, 183, 185, 201, 209, 238, 244, 255, 259, 260, 262, 263, 265, 266, 267, 270, 273, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 320, 321, 323, 325, 343, 348, 349], "imit": [2, 3], "addit": [2, 3, 4, 31, 54, 87, 91, 107, 113, 114, 131, 149, 163, 166, 167, 169, 171, 175, 199, 237, 238, 244, 249, 258, 275, 290, 308, 348], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 43, 44, 46, 47, 58, 87, 88, 91, 94, 107, 113, 175, 186, 187, 207, 213, 348, 349], "stateless": [2, 3, 87, 91, 107, 113, 124, 166, 275], "simul": [2, 3, 5, 7, 8, 83, 84, 93, 96, 97, 110, 114, 115, 119, 185, 209, 347], "furthermor": 2, "certain": [2, 4, 17, 18, 19, 20, 31, 45, 87, 91, 107, 113, 120, 140, 161, 167, 175, 200, 204, 241, 274, 347], "composit": [2, 3, 25, 27, 72, 77, 82, 87, 91, 107, 113], "accommod": [2, 3], "uniform": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 41, 44, 46, 47, 66, 67], "unambigu": 2, "distinguish": [2, 101, 102, 114, 115], "happen": [2, 3, 87, 91, 107, 113, 237], "limit": [2, 40, 87, 91, 103, 107, 113, 127, 143, 259, 261, 274, 277, 279], "everyth": 2, "belong": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 52, 58, 172, 173, 347], "rule": [2, 107, 132, 135, 250, 347], "entri": [2, 3, 13, 14, 16, 22, 25, 27, 31, 34, 36, 37, 39, 45, 49, 54, 55, 56, 57, 59, 60, 74, 75, 85, 86, 87, 90, 91, 92, 93, 101, 102, 107, 110, 113, 114, 115, 123, 127, 129, 130, 132, 135, 136, 139, 142, 145, 147, 149, 152, 154, 157, 159, 161, 162, 163, 171, 173, 175, 183, 184, 201, 210, 211, 238, 239, 244, 247, 248, 260, 280, 290, 291, 292, 293, 347], "field": [2, 3, 13, 14, 15, 16, 22, 25, 31, 37, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 124, 132, 135, 136, 137, 147, 151, 152, 154, 158, 161, 163, 167, 175, 183, 185, 195, 196, 201, 205, 209, 221, 222, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 248, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 331, 336, 346, 347], "taken": [2, 3, 87, 91, 107, 113, 153, 210, 211, 242, 348], "is_shar": [2, 3, 13, 14, 15, 22, 25, 34, 36, 37, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 80, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 124, 132, 135, 136, 137, 147, 151, 152, 154, 158, 161, 163, 173, 183, 185, 195, 196, 201, 205, 209, 221, 222, 230, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 248, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 336, 347], "brought": 2, "step_mdp": [2, 3, 87, 91, 107, 113, 201, 205, 345], "count": [2, 3, 31, 87, 88, 161, 245, 323, 327, 330], "trigger": [2, 7], "partial": [2, 3, 87, 91, 107, 113, 126, 127, 162, 163, 164, 327], "turn": [2, 17, 18, 19, 20, 34, 36, 39, 141, 168, 172, 239, 308, 323, 348], "retain": 2, "regard": [2, 54, 60, 196, 240, 259, 268, 277], "posit": [2, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 85, 86, 87, 91, 107, 113, 139, 140, 160, 161, 164, 167, 168, 175, 216, 280, 348], "both": [2, 3, 7, 31, 35, 38, 41, 42, 58, 87, 88, 90, 91, 101, 102, 107, 108, 109, 113, 127, 152, 167, 175, 184, 186, 187, 201, 204, 205, 207, 212, 213, 234, 235, 236, 240, 248, 259, 261, 262, 266, 267, 273, 274, 275, 277, 278, 279, 280, 282, 323, 347], "mark": [2, 3, 15, 60, 87, 91, 107, 113, 201, 205, 290, 292, 293], "identifi": [2, 37], "marl": [2, 100, 116, 127, 164, 212], "abov": [2, 3, 7, 31, 87, 91, 107, 113, 175, 202, 228, 229, 258, 348, 349], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 67, 74, 75, 85, 86, 87, 90, 91, 92, 93, 101, 102, 103, 106, 107, 108, 109, 110, 113, 114, 115, 124, 125, 127, 130, 131, 132, 133, 135, 137, 143, 145, 149, 151, 152, 157, 158, 161, 164, 166, 167, 169, 171, 172, 175, 176, 184, 186, 187, 188, 189, 190, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 212, 213, 216, 222, 231, 233, 234, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 308, 310, 318, 347, 348], "typic": [2, 3, 4, 8, 31, 87, 91, 107, 113, 136, 162, 175, 246, 260, 275, 277, 280, 347, 348, 349], "recurr": [2, 126, 199, 200, 201, 203, 205, 224], "adjust": 2, "grumodul": [2, 126], "lstmmodul": 2, "skip": [2, 3, 31, 52, 87, 91, 107, 113, 140, 167, 175, 176, 246, 250, 275, 280, 290, 291, 292, 293, 309, 310, 320, 323], "accumul": [2, 8, 175], "upcom": [2, 275, 299, 300, 301, 302, 304, 305, 306, 307], "popular": [2, 3, 347], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 175, 345], "fail": [2, 7, 21, 25, 27, 107, 121, 176], "shift": [2, 31, 256, 290, 291, 292, 293], "naiv": [2, 169], "consum": [2, 73, 75, 244], "approxim": 2, "twice": [2, 8], "flat": [2, 78], "would": [2, 3, 31, 40, 87, 91, 107, 113, 175, 199, 201, 203, 205, 207, 212, 349], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 127, 193, 220, 259, 264, 276, 277, 318, 343], "2x": 2, "small": [2, 169], "clearer": 2, "lazi": [2, 27, 28, 49, 50, 87, 91, 107, 113, 114, 115, 149, 169, 186, 212, 214, 251, 252], "certainli": 2, "benefici": 2, "welcom": 2, "wrapper": [2, 3, 11, 16, 34, 36, 39, 40, 41, 42, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 172, 216, 231, 237, 238, 242, 244, 245, 250, 255, 290, 315, 316, 317, 343, 345], "around": [2, 5, 7, 16, 41, 42, 103, 244, 250, 290], "selecttransform": [2, 87, 91, 107, 113], "excludetransform": [2, 59, 158], "promptli": 2, "virtual": [2, 3, 90], "instal": [2, 3, 5, 10, 17, 18, 19, 54, 57, 87, 91, 107, 108, 109, 111, 112, 113, 312, 327, 346], "respons": [2, 3, 8, 67, 74, 87, 91, 107, 113, 327], "d4rl": [2, 54, 60], "repositori": [2, 7, 55, 56, 57, 60, 115], "wheel": 2, "publish": 2, "openml": [2, 57, 106], "scikit": [2, 57, 106], "panda": [2, 57], "raw": [2, 3, 4, 40, 202, 228, 229], "go": [2, 3, 7, 100, 107, 150, 154, 238, 296], "natur": [2, 3], "modifi": [2, 3, 7, 8, 25, 27, 31, 45, 87, 91, 107, 113, 124, 131, 139, 143, 149, 163, 166, 167, 169, 171, 175, 238, 245, 249, 330, 336], "fly": [2, 173, 274, 348], "extra": [2, 10, 31, 87, 91, 107, 113, 127, 173, 175, 183, 317, 347], "least": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 87, 130], "pre": [2, 7, 21, 31, 45, 58, 64, 87, 91, 107, 113, 149, 169, 171, 175], "appli": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 121, 123, 124, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 148, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 166, 167, 169, 170, 172, 173, 175, 199, 203, 228, 239, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 276, 277, 278, 279, 280, 282, 290, 308, 322, 349], "conisder": 2, "space": [2, 9, 33, 44, 87, 91, 107, 113, 130, 134, 180, 193, 196, 212, 218, 222, 233, 237, 239, 240, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 263, 265, 266, 267, 282, 288, 347], "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 55, 78, 95, 96, 97, 107, 108, 109, 130, 157, 186, 187, 197, 212, 213, 241, 244, 312, 327, 341, 342], "pipelin": [2, 3, 7, 347], "replac": [2, 3, 6, 7, 25, 27, 31, 52, 58, 67, 74, 75, 123, 134, 136, 183, 241, 347], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 39, 58, 69, 87, 91, 107, 113, 123, 154, 167, 175, 237, 242, 244, 245, 325, 349], "produc": [2, 123, 124, 186, 187, 207, 213, 219, 234, 236, 238, 310], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 73, 87, 91, 107, 108, 109, 113, 167, 175, 280], "download": [2, 7, 10, 52, 54, 55, 56, 58, 59, 60, 95, 149, 171, 310, 352], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 52, 55, 56, 58, 59, 60], "robosetexperiencereplai": [2, 74, 75], "fk1": [2, 59], "v4": [2, 59, 91, 107, 153, 299, 300, 301, 302, 304, 305, 306, 307, 336], "expert": [2, 59], "fk1_microopenrandom_v2d": [2, 59], "func": [2, 52, 53, 54, 55, 56, 57, 58, 59, 60, 174], "obs_norm": 2, "norm": [2, 4, 8, 83, 84, 327], "num_work": [2, 34, 36, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 104, 107, 113], "os": [2, 36, 45, 61], "cpu_count": [2, 36, 45, 61], "num_chunk": [2, 52, 53, 54, 55, 56, 57, 58, 59, 60], "1000": [2, 4, 38, 66, 74, 75, 87, 91, 107, 113, 127, 173, 241, 245, 246, 250, 272], "mp_start_method": [2, 52, 53, 54, 55, 56, 57, 58, 59, 60, 107, 113], "fork": [2, 5, 52, 53, 54, 55, 56, 57, 58, 59, 60], "recreat": 2, "customari": [2, 347], "moreov": [2, 3], "fine": [2, 3, 87, 91, 107, 113, 124, 143], "grain": [2, 3, 87, 91, 107, 113, 124], "nomenclatur": 2, "compact": 2, "propos": [2, 127, 136, 208, 272, 281, 336, 347], "replaybufferensembl": [2, 52, 72, 77, 82], "primit": [2, 3, 4, 58, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282], "individu": [2, 4, 17, 18, 19, 20, 31, 45, 69, 78, 87, 91, 101, 102, 107, 113, 175], "dummi": [2, 3, 308, 336], "semant": [2, 27, 28, 347], "ident": [2, 3, 13, 14, 15, 31, 34, 36, 39, 74, 87, 91, 104, 107, 113, 136, 212, 213, 290, 291, 292, 293, 341, 342], "another_kei": [2, 69], "renam": [2, 34, 36, 39, 69, 152, 154, 183], "resiz": [2, 3, 60, 69, 127], "imag": [2, 3, 4, 7, 58, 129, 149, 165, 171, 207, 308, 310], "comops": 2, "totensorimag": [2, 3, 60, 69, 127, 153], "renametransform": [2, 69, 87, 91, 107, 113], "rb0": [2, 69], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 87, 91, 103, 107, 113, 118, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 141, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 159, 162, 164, 165, 166, 167, 169, 171, 173, 185, 195, 201, 205, 209, 221, 230, 231, 233, 234, 235, 236, 238, 239, 244, 246, 247, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 265, 266, 267, 273, 274, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 309, 310, 336, 339, 347], "pixel": [2, 3, 7, 25, 60, 69, 85, 86, 90, 92, 93, 110, 127, 129, 136, 139, 141, 145, 147, 149, 153, 165, 169, 171, 189, 217, 218, 308, 310, 336, 347], "rb1": [2, 69], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 87, 91, 103, 107, 113, 118, 125, 126, 127, 128, 129, 130, 132, 133, 135, 139, 141, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 159, 162, 164, 165, 166, 169, 171, 173, 185, 195, 196, 201, 205, 209, 221, 222, 230, 231, 233, 234, 235, 236, 238, 240, 244, 246, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 266, 267, 273, 274, 277, 278, 279, 280, 288, 290, 291, 292, 293, 308, 310, 323, 339, 347], "pixels33": [2, 69], "data0": [2, 69], "244": [2, 69, 149, 171], "data1": [2, 69], "_": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 88, 95, 114, 115, 128, 132, 134, 135, 143, 145, 152, 165, 173, 175, 233, 249, 254, 258, 259, 260, 262, 266, 267, 273, 277, 278, 280, 282, 290, 291, 292, 293, 312, 349], "rang": [2, 3, 4, 8, 11, 26, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 78, 87, 88, 91, 101, 102, 107, 113, 154, 165, 173, 175, 200, 204, 274, 282, 348, 349], "parent": [2, 3, 20, 25, 27, 44, 53, 69, 77, 82, 87, 91, 107, 113, 124, 127, 128, 131, 133, 136, 139, 140, 145, 149, 157, 161, 162, 163, 164, 166, 168, 169, 175, 234, 275, 277, 294, 308, 310], "basic": [2, 103, 347], "properti": [2, 3, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 103, 107, 113, 123, 166, 167, 175, 194, 202, 214, 219, 227, 228, 229, 244, 275, 280], "your": [2, 3, 7, 8, 10, 17, 31, 87, 91, 95, 100, 107, 108, 109, 113, 173, 175, 343, 346, 347, 348], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 87, 91, 101, 102, 103, 106, 107, 108, 109, 113, 114, 115, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 183, 184, 186, 187, 189, 190, 191, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 212, 213, 214, 215, 222, 223, 224, 225, 226, 231, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 321, 325, 330, 339, 347, 348, 349], "send": [2, 3, 8, 317], "receiv": [2, 3, 31, 40, 87, 91, 107, 113, 166, 167, 175, 207, 296, 348], "spawn": [2, 3, 4, 17, 21, 95, 104, 107, 113], "check_env_spec": [2, 3, 91, 107, 151, 308, 345], "saniti": [2, 3, 7, 176], "utmost": 2, "commonli": [2, 67, 74, 75], "emploi": [2, 215], "languag": [2, 40], "scarc": 2, "address": 2, "subdomain": 2, "facilit": [2, 3, 7, 148, 149, 169, 171, 234, 235, 236, 347], "extern": [2, 3, 132, 135], "token": [2, 36, 37, 40, 43, 45, 61], "manner": [2, 91, 149, 169, 347], "dm": 3, "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 35, 36, 38, 39, 41, 42, 45, 58, 71, 78, 79, 81, 83, 84, 87, 91, 95, 96, 97, 103, 104, 105, 107, 113, 114, 154, 163, 169, 170, 212, 234, 243, 259, 260, 262, 263, 265, 266, 267, 269, 273, 277, 278, 279, 280, 282, 317, 327, 336, 347, 348, 349], "goal": [3, 4, 52, 53, 54, 55, 56, 57, 58, 59, 60, 162], "abl": [3, 100, 108, 109], "experi": [3, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 66, 67, 176, 312, 313, 314, 315, 316, 317, 346], "box": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 87, 88, 91, 101, 102, 107, 108, 109, 111, 112, 113, 127, 130, 136, 142, 143, 145, 147, 152, 154, 157, 163, 166, 172, 173, 175, 308, 336, 339], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 83, 84, 87, 91, 103, 107, 113, 131, 134, 136, 143, 149, 163, 166, 167, 169, 171, 175, 185, 186, 187, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 209, 211, 212, 213, 216, 221, 222, 230, 233, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 254, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 336, 339, 347, 348], "organis": [3, 59, 87, 91, 107, 113, 167], "arbitrari": [3, 33, 38, 87, 91, 107, 113, 123, 347], "structur": [3, 7, 34, 35, 36, 38, 39, 40, 41, 42, 45, 78, 87, 91, 107, 113, 132, 135, 184, 212, 245, 290, 291, 292, 293, 294, 345, 348], "attribut": [3, 4, 31, 34, 36, 39, 45, 58, 87, 90, 91, 92, 107, 113, 136, 149, 169, 175, 201, 205, 250, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288], "live": [3, 12, 13, 14, 15, 16, 18, 19, 31, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 103, 107, 113, 136, 175], "actual": [3, 4, 7, 52, 54, 55, 56, 58, 59, 60, 87, 91, 107, 113, 172, 330, 348], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 72, 87, 90, 91, 92, 107, 113, 128, 133, 136, 145, 183, 185, 186, 206, 209, 244, 246, 250, 253, 259, 260, 261, 263, 274, 277, 278, 280, 282, 288, 290, 291, 292, 293, 336, 343, 349], "care": [3, 8, 87, 91, 107, 113, 166, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 310], "parametr": [3, 215, 250, 260, 266, 273, 280], "hardwar": 3, "observation_spec": [3, 87, 91, 103, 107, 113, 121, 124, 127, 128, 129, 130, 131, 132, 133, 135, 136, 139, 141, 142, 143, 145, 147, 149, 151, 153, 157, 159, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 175, 185, 201, 205, 209, 331, 339], "compositespec": [3, 27, 28, 49, 87, 89, 91, 103, 107, 113, 121, 124, 132, 133, 134, 135, 137, 143, 151, 152, 158, 161, 163, 166, 175, 180, 184, 185, 209, 233, 237, 246, 252, 253, 345], "pair": [3, 31, 34, 36, 39, 54, 85, 86, 87, 91, 107, 113, 154, 163, 201, 234, 246, 250, 275, 290, 291, 292, 293, 294, 347, 348], "state_spec": [3, 87, 91, 103, 107, 113, 121, 185, 209], "reward_spec": [3, 87, 91, 103, 107, 113, 121, 124, 125, 130, 131, 132, 133, 135, 151, 155, 156, 157, 159, 166, 168, 175, 185, 209], "done_spec": [3, 87, 91, 107, 113, 132, 133, 135, 136, 151, 166, 175, 184], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 101, 102, 107, 113, 114, 115, 245, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 347], "input_spec": [3, 87, 91, 103, 107, 113, 124, 131, 132, 133, 134, 145, 147, 151, 152, 157, 158, 161, 162, 163, 166, 167, 168, 170, 175], "full_action_spec": [3, 87, 91, 107, 113, 185, 209], "full_state_spec": [3, 87, 91, 107, 113, 185, 209], "lock": [3, 25, 27, 34, 36, 39, 87, 91, 107, 113, 124, 163, 173], "output_spec": [3, 87, 91, 107, 113, 124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 167, 175], "full_observation_spec": [3, 87, 91, 107, 113, 185, 209], "full_reward_spec": [3, 87, 91, 107, 113, 124, 133, 151], "full_done_spec": [3, 87, 91, 107, 113, 124, 133, 151, 184], "importantli": [3, 246, 250], "action_s": 3, "help": [3, 4, 31, 87, 91, 107, 113, 136, 175, 259, 261, 274, 277, 279, 346, 348], "With": [3, 96, 97, 100, 162, 349], "necessarili": [3, 87, 91, 107, 113], "present": [3, 31, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 73, 87, 90, 91, 107, 113, 137, 154, 158, 167, 175, 183, 184, 188, 189, 190, 191, 192, 198, 203, 215, 220, 244, 245, 249, 250, 251, 252, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 343, 349], "0s": [3, 52, 58, 163], "step_and_maybe_reset": [3, 87, 91, 107, 113], "done_kei": [3, 22, 87, 91, 107, 113, 123, 127, 136, 154, 161, 175, 183], "assign": [3, 4, 13, 14, 16, 31, 34, 36, 39, 87, 91, 107, 113, 167, 175, 262, 263, 265, 280], "_reset": [3, 87, 91, 103, 107, 113, 121, 123, 124, 127, 132, 135, 151, 184, 185, 209], "data_": [3, 87, 91, 107, 113], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 88, 91, 107, 113, 123, 130, 131, 154, 163, 167, 172, 200, 201, 204, 205, 239, 247], "set_se": [3, 13, 14, 15, 16, 20, 31, 83, 84, 87, 91, 96, 97, 103, 107, 113, 123, 145, 152, 157, 162, 164, 167, 175], "seed": [3, 13, 14, 15, 16, 20, 59, 87, 91, 103, 107, 108, 109, 113, 114, 115, 121, 124, 132, 135, 151, 167, 176, 308, 327], "determinist": [3, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 188, 197, 217, 224, 233, 242, 249, 250, 253, 260, 347], "preced": [3, 31, 206], "risk": [3, 150], "overlap": [3, 41, 78], "reproduc": [3, 127, 176], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 43, 45, 61, 63, 64, 65, 66, 80, 87, 91, 107, 113, 134, 155, 161, 162, 164, 227, 228, 229, 253, 260, 266, 267, 273, 275, 276, 280, 310, 324], "max_step": [3, 13, 78, 87, 91, 101, 102, 103, 107, 113, 114, 115, 161, 175, 308], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 40, 83, 84, 87, 91, 103, 107, 113, 126, 143, 196, 201, 205, 209, 221, 222, 230, 231, 234, 235, 236, 237, 238, 239, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 260, 262, 266, 267, 269, 270, 271, 273, 275, 278, 280, 282, 288, 289, 290, 291, 292, 293, 323, 339, 345], "trail": [3, 173], "treat": [3, 31], "figur": 3, "brief": 3, "deliveri": 3, "design": [3, 31, 33, 72, 77, 82, 87, 91, 101, 102, 107, 113, 127, 150, 167, 175, 238, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288], "metaclass": 3, "everi": [3, 8, 25, 27, 31, 33, 76, 87, 91, 107, 113, 161, 162, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 212, 213, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 327, 349], "flank": 3, "dual": 3, "strictli": [3, 8, 31, 87, 91, 107, 113, 167, 175, 280], "refer": [3, 7, 8, 9, 20, 31, 40, 87, 90, 91, 92, 107, 113, 167, 173, 175, 185, 196, 197, 209, 210, 211, 212, 217, 218, 223, 224, 240, 259, 268, 269, 270, 271, 277, 280, 290, 295, 303], "union": [3, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 66, 67, 87, 91, 107, 113, 121, 134, 136, 142, 145, 149, 150, 154, 156, 158, 169, 171, 173, 175, 183, 187, 194, 196, 210, 211, 212, 213, 214, 215, 219, 221, 222, 227, 228, 229, 230, 244, 249, 265, 267, 272, 278, 281, 303, 321, 323, 324, 332, 333, 336, 337, 339, 340, 341, 342, 343], "carri": [3, 20, 45, 87, 91, 107, 113, 163, 275], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 101, 102, 116], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 52, 58, 67, 74, 75, 345], "adjac": [3, 22, 139, 244], "reli": [3, 199, 200, 203, 204, 259, 348], "junction": 3, "inittrack": [3, 201, 205, 244], "tutori": [3, 344, 352, 353], "scratch": [3, 8], "gym3": 3, "envpool": [3, 104, 105], "interfac": [3, 94, 106, 207, 214, 347], "simultan": [3, 19, 104, 105, 107, 113], "competit": [3, 101, 102], "advantag": [3, 8, 198, 259, 261, 274, 277, 279, 290, 291, 292, 293, 294, 295, 297, 299, 301, 303, 304, 306, 348, 349], "scale": [3, 4, 54, 87, 91, 107, 113, 127, 143, 145, 156, 162, 165, 197, 202, 216, 223, 224, 228, 229, 234, 235, 236, 246, 250, 252, 259, 260, 273, 277, 278, 279, 280, 325, 331, 336, 343, 347], "varieti": 3, "inherit": [3, 87, 91, 107, 113, 208, 275, 349], "Of": [3, 7, 346], "cours": [3, 4, 346], "pendulum": [3, 13, 14, 15, 16, 20, 21, 78, 85, 86, 87, 88, 90, 91, 92, 104, 107, 113, 127, 130, 131, 137, 142, 143, 145, 152, 154, 159, 161, 163, 164, 166, 167, 173, 175, 201, 205, 339, 347], "from_pixel": [3, 83, 84, 85, 86, 90, 92, 93, 96, 97, 110, 127, 153, 308, 310, 336], "81": 3, "simpli": [3, 6, 34, 36, 39, 45, 77, 78, 82, 137, 158, 172, 275, 347, 348], "d": [3, 35, 38, 41, 42, 55, 57, 59, 60, 61, 66, 67, 199, 203, 246, 250], "privat": [3, 87, 91, 107, 113, 172], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 33, 52, 75, 78, 261, 274, 277, 318, 320, 323, 327, 330, 331, 351, 353], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 39, 40, 69, 72, 145, 156, 202, 214, 223, 228, 229, 288, 347], "inner": [3, 87, 91, 107, 113, 134, 349], "logic": 3, "nevertheless": 3, "kept": [3, 22, 73, 75, 134, 158, 166, 176, 183, 202, 228, 229], "mind": [3, 52, 58, 67, 74, 75, 87, 91, 107, 113], "desig": 3, "wherev": 3, "expos": [3, 110, 132, 135, 251], "modif": [3, 5, 25, 27, 31, 87, 91, 107, 113, 139, 175, 184, 275], "lost": [3, 8, 172], "eras": [3, 67, 74, 87, 91, 107, 113, 167], "intern": [3, 350], "face": [3, 5, 8, 9], "NOT": [3, 150], "outsid": [3, 15], "right": [3, 6, 7, 22, 40, 206], "preliminari": 3, "warranti": 3, "affect": [3, 8, 31, 87, 91, 107, 113, 166, 167, 175, 176, 290, 291, 292, 293], "assumpt": 3, "preclud": 3, "presenc": 3, "annihil": 3, "reason": [3, 4, 8, 31, 58, 87, 91, 107, 108, 109, 113, 149, 169, 175, 205, 348], "advanc": [3, 20, 35, 38, 41, 42], "explicitli": [3, 4, 123], "place": [3, 25, 27, 31, 34, 36, 39, 63, 64, 69, 72, 80, 87, 88, 91, 107, 113, 114, 115, 123, 131, 136, 149, 163, 166, 167, 169, 171, 172, 173, 175, 184, 238, 244, 249, 324, 329, 330], "superse": 3, "pettingzoowrapp": [3, 345], "group": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 52, 87, 91, 100, 101, 102, 107, 108, 109, 113, 114, 115, 116, 347], "associ": [3, 31, 34, 36, 39, 87, 91, 107, 113, 175, 223, 343], "environemtn": 3, "__not__": 3, "constrain": [3, 143, 201, 205, 277], "li": 3, "fact": [3, 7, 8], "predict": [3, 31, 40, 195, 197, 208, 209, 238, 255, 259, 261, 265, 268, 270, 271, 274, 277, 279, 289, 347], "know": [3, 4, 9, 35, 38, 41, 42, 237, 278, 323], "meaning": 3, "perfectli": [3, 349], "meaningless": 3, "val": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "agent0": 3, "agent1": 3, "overrid": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 38, 44, 46, 47, 52, 87, 91, 107, 113, 123, 343, 347], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 72, 73, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 128, 132, 134, 135, 136, 137, 139, 143, 144, 145, 147, 149, 151, 152, 154, 156, 157, 158, 161, 163, 165, 167, 168, 169, 171, 173, 175, 176, 183, 184, 185, 186, 187, 189, 190, 199, 200, 201, 202, 203, 204, 205, 207, 209, 212, 213, 214, 215, 228, 229, 233, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 288, 290, 291, 292, 293, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 317, 320, 321, 323, 324, 325, 327, 336, 343], "500": 3, "launch": [3, 13, 14, 16, 17, 18, 19, 21, 52, 55, 107, 113], "bottleneck": [3, 8, 67, 74, 75], "great": [3, 7, 8], "speedup": [3, 8], "precis": [3, 132, 135, 183, 200, 204], "misspecifi": 3, "caus": [3, 7, 8, 63, 64, 80, 87, 91, 95, 107, 113, 150], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 58, 87, 91, 107, 113, 116, 127, 138, 144, 154, 162, 163, 164, 167, 175, 176, 237, 241, 242, 245, 280], "mismatch": 3, "mostli": [3, 16, 310, 348], "subprocess": [3, 13, 14, 16, 88, 107, 113], "multithreadedenv": [3, 345], "underneath": 3, "higher": [3, 4, 130, 253], "flexibl": [3, 9, 104, 283, 348, 349], "cover": [3, 346], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 60, 61, 69, 87, 91, 100, 103, 106, 107, 108, 109, 113, 124, 131, 132, 133, 136, 137, 143, 149, 151, 152, 158, 161, 163, 166, 167, 169, 171, 173, 175, 178, 182, 186, 187, 207, 212, 213, 215, 221, 230, 237, 239, 246, 249, 250, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 284, 288, 296, 308, 336, 341, 345, 347], "atari": [3, 4, 52, 127, 310], "classic": [3, 103, 109], "benchmark_batched_env": 3, "seamlessli": 3, "infrastructur": 3, "act": [3, 4, 74, 75, 108, 109, 167, 195, 213, 260, 262, 273, 278, 280, 282], "world": [3, 5, 103, 255, 270], "paradigm": [3, 16], "decpodp": 3, "game": [3, 4, 5, 52, 101, 102, 310], "thank": 3, "carrier": 3, "particular": [3, 31, 45, 54, 55, 87, 91, 107, 113, 167, 175, 348, 349], "thu": [3, 274], "let": [3, 6, 7, 31, 35, 38, 41, 42, 43, 87, 91, 107, 108, 109, 113, 127, 175, 201, 205, 212, 213, 239, 323, 348], "vma": [3, 114, 115, 308], "robot": [3, 5, 7, 58, 149, 169, 171], "vmasenv": [3, 308, 345], "balanc": [3, 85, 86], "num_env": [3, 20, 90, 94, 105, 114, 115, 308], "n_agent": [3, 114, 115, 212, 213, 221, 230, 288, 308], "ground_rew": 3, "pos_rew": 3, "style": [3, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60], "relat": [3, 4, 10, 35, 107, 139, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282], "vari": [3, 90, 92, 93, 108, 109, 110, 114, 150], "creation": [3, 107, 113], "info_spec": [3, 107], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 83, 84, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 121, 151, 184, 263, 266, 267, 288, 345], "simpl": [3, 9, 31, 33, 87, 91, 107, 113, 175, 189, 244, 250, 263, 265, 275, 279, 290, 347, 348], "prefix": [3, 22, 31, 34, 36, 39, 45, 87, 91, 107, 113, 167, 175, 275, 280, 309], "exactli": [3, 31, 87, 91, 93, 107, 113, 167, 175, 199, 203, 280], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 87, 91, 107, 113, 121, 134, 183, 185, 208, 209, 237, 241, 242, 244, 245], "reward_kei": [3, 87, 91, 107, 113, 175, 183, 185, 209, 321, 325], "loss": [3, 8, 36, 136, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 290, 322, 327, 334, 335, 336, 339, 348, 349], "set_kei": [3, 136, 259, 261, 263, 266, 267, 268, 273, 274, 275, 277, 278, 279, 280, 288, 294], "awai": 3, "eas": 3, "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 33, 44, 46, 47, 87, 91, 107, 113, 161, 250], "full": [3, 87, 91, 107, 113, 201, 205, 240, 318], "autoresettransform": 3, "copi": [3, 11, 17, 18, 19, 20, 31, 34, 36, 39, 40, 45, 58, 87, 91, 107, 113, 123, 152, 162, 167, 175, 183, 201, 205, 238, 275, 280, 308, 348], "invalid": [3, 31, 78, 87, 91, 107, 113, 116, 175, 210, 211], "nan": [3, 123, 172], "auto_reset": [3, 87, 91, 107, 113, 123, 175], "auto_reset_replac": [3, 123], "placehold": [3, 93, 136, 167], "set_gym_backend": [3, 87, 90, 91, 107, 113, 117, 123, 345], "manual_se": [3, 35, 38, 41, 42, 55, 59, 60, 74, 75, 83, 84, 87, 91, 107, 113, 121, 123, 134, 145, 154, 157, 162, 164, 175, 210, 211, 219, 233, 240, 241, 242, 245, 253, 259, 260, 262, 266, 273, 280], "autoresettinggymenv": [3, 123], "_step": [3, 87, 91, 107, 113, 121, 123, 124, 132, 135, 139, 151, 152], "self": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 36, 39, 87, 91, 103, 107, 113, 121, 123, 124, 131, 132, 135, 149, 151, 163, 166, 167, 169, 171, 175, 185, 196, 209, 221, 230, 237, 241, 246, 249, 254, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 349], "super": [3, 103, 121, 123, 124, 132, 135, 151, 185, 196, 209, 254, 260, 262, 267, 273, 278, 280, 282], "td_reset": [3, 123], "exclud": [3, 8, 54, 59, 87, 91, 107, 113, 123, 127, 137, 183, 221], "r": [3, 4, 31, 121, 123, 130, 145, 159, 200, 250, 258, 289, 308, 347], "break_when_any_don": [3, 87, 91, 107, 113, 123, 175, 244], "3633e": [3, 123], "02": [3, 87, 91, 107, 113, 123], "4877e": [3, 123], "01": [3, 123, 145, 245, 256, 261, 274, 277], "2849e": [3, 123], "7584e": [3, 123], "6609e": [3, 123], "6166e": [3, 123], "8366e": [3, 123], "2761e": [3, 123], "5685e": [3, 123], "4102e": [3, 123], "8111e": [3, 123], "9959e": [3, 123], "0865e": [3, 123], "5644e": [3, 123], "2119e": [3, 123], "2542e": [3, 123], "03": [3, 87, 91, 107, 113, 123, 145], "9952e": [3, 123], "4059e": [3, 123], "2094e": [3, 123], "9009e": [3, 123], "5140e": [3, 123], "3554e": [3, 123], "2920e": [3, 123], "7893e": [3, 123], "6429e": [3, 123], "3057e": [3, 123], "2867e": [3, 123], "6963e": [3, 123], "3818e": [3, 123], "2576e": [3, 123], "2679e": [3, 123], "1640e": [3, 123], "00": [3, 83, 84, 123, 351, 353], "6972e": [3, 123], "0212e": [3, 123], "5959e": [3, 123], "4637e": [3, 123], "3121e": [3, 123], "2168e": [3, 123], "5232e": [3, 123], "7704e": [3, 123], "7457e": [3, 123], "4127e": [3, 123], "1064e": [3, 123], "0854e": [3, 123], "5712e": [3, 123], "2189e": [3, 123], "5235e": [3, 123], "8289e": [3, 123], "0009e": [3, 123], "0257e": [3, 123], "8893e": [3, 123], "5872e": [3, 123], "9405e": [3, 123], "7766e": [3, 123], "0403e": [3, 123], "0626e": [3, 123], "2959e": [3, 123], "7263e": [3, 123], "2775e": [3, 123], "9564e": [3, 123], "0411e": [3, 123], "6769e": [3, 123], "6354e": [3, 123], "8698e": [3, 123], "1765e": [3, 123], "6292e": [3, 123], "5375e": [3, 123], "1820e": [3, 123], "7023e": [3, 123], "5836e": [3, 123], "9016e": [3, 123], "4826e": [3, 123], "6191e": [3, 123], "6387e": [3, 123], "8667e": [3, 123], "2056e": [3, 123], "1147e": [3, 123], "5991e": [3, 123], "0278e": [3, 123], "5219e": [3, 123], "3067e": [3, 123], "6617e": [3, 123], "3322e": [3, 123], "2629e": [3, 123], "4599e": [3, 123], "7298e": [3, 123], "5848e": [3, 123], "0148e": [3, 123], "5745e": [3, 123], "6982e": [3, 123], "7877e": [3, 123], "3527e": [3, 123], "7285e": [3, 123], "6668e": [3, 123], "0583e": [3, 123], "6956e": [3, 123], "3962e": [3, 123], "9845e": [3, 123], "5015e": [3, 123], "5903e": [3, 123], "9993e": [3, 123], "9418e": [3, 123], "0196e": [3, 123], "6557e": [3, 123], "2109e": [3, 123], "8997e": [3, 123], "1507e": [3, 123], "7363e": [3, 123], "0310e": [3, 123], "9574e": [3, 123], "8980e": [3, 123], "0090e": [3, 123], "torchvis": [3, 149, 171, 312], "base_env": [3, 84, 87, 91, 92, 97, 107, 113, 121, 124, 130, 132, 134, 135, 143, 147, 151, 153, 159, 161, 163, 164, 167, 175, 310], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 88, 91, 103, 107, 113, 120, 122, 124, 131, 136, 163, 167, 175, 186, 187, 207, 258, 308, 332, 333, 341, 342, 343], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 87, 89, 91, 107, 113, 121, 123, 124, 126, 127, 128, 131, 132, 133, 136, 137, 138, 139, 142, 143, 148, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 166, 167, 172, 173, 175, 183, 184, 185, 201, 205, 208, 209, 237, 238, 240, 241, 244, 245, 248, 249, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 327], "appar": [3, 320], "bring": 3, "signific": [3, 5, 8], "kind": [3, 38, 44, 183], "consult": 3, "interest": [3, 246, 250, 347], "resize_par": 3, "easi": [3, 5, 52, 57, 85, 86, 87, 91, 96, 97, 107, 113, 237, 241, 242, 245, 347, 348], "graph": [3, 4, 8, 83, 84, 96, 97, 286, 287], "revers": [3, 203], "order": [3, 15, 31, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 73, 75, 87, 91, 107, 113, 128, 132, 135, 147, 167, 175, 233, 239, 249, 251, 252, 254, 259, 260, 262, 266, 267, 273, 277, 278, 279, 280, 282], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 131, 134, 186, 187, 252], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 127, 132, 135, 137, 145, 154, 175, 257, 266, 273], "in_keys_inv": [3, 118, 130, 132, 133, 135, 145, 146, 147, 151, 152, 154, 159, 166], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 87, 91, 107, 113, 118, 126, 149, 163, 167, 169, 308], "doubletofloat": [3, 336], "float32": [3, 13, 14, 15, 25, 35, 40, 41, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 80, 83, 84, 87, 90, 91, 92, 96, 97, 103, 106, 107, 111, 112, 113, 114, 115, 124, 132, 135, 136, 137, 145, 147, 151, 152, 154, 158, 161, 163, 165, 180, 183, 185, 195, 196, 201, 205, 209, 221, 222, 230, 233, 234, 235, 236, 238, 239, 244, 245, 246, 247, 248, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 288, 336, 347], "float64": [3, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 85, 86, 87, 91, 101, 102, 107, 113, 131, 132, 135, 149, 163, 166, 167, 169, 171, 175, 249], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 87, 90, 91, 92, 107, 113, 132, 135, 136, 157, 167, 175, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 308, 310, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 349], "manipul": [3, 4, 8, 85, 86, 149, 169], "third_transform": 3, "unexpect": [3, 31, 87, 91, 107, 113, 175], "behviour": 3, "fortun": 3, "alreadi": [3, 8, 11, 31, 34, 36, 39, 45, 52, 87, 91, 107, 113, 163, 175, 184, 250, 290, 291, 292, 293], "chang": [3, 5, 7, 31, 35, 38, 41, 42, 52, 63, 64, 65, 67, 73, 74, 76, 77, 80, 87, 91, 107, 113, 124, 131, 132, 133, 135, 137, 143, 151, 152, 158, 161, 166, 167, 173, 175, 203, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 348], "catfram": [3, 244], "hold": [3, 286, 287], "notic": [3, 78, 127], "parenthood": 3, "henc": [3, 35, 150, 184, 212, 347], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 107, 113, 308], "discret": [3, 23, 26, 29, 30, 33, 47, 87, 91, 101, 102, 107, 108, 109, 113, 114, 115, 134, 219, 222, 265, 266, 267, 268, 347], "might": [3, 34, 36, 37, 39, 314, 346], "action_mask": [3, 96, 97, 108, 109, 111, 112, 121], "unavail": [3, 108, 109], "probabl": [3, 4, 8, 40, 69, 72, 194, 196, 199, 201, 203, 205, 207, 210, 211, 219, 229, 241, 246, 250, 347], "categor": [3, 26, 30, 33, 83, 84, 90, 92, 93, 96, 97, 101, 102, 104, 105, 108, 109, 110, 114, 115, 121, 136, 196, 219, 222, 239, 240, 246, 247, 248, 263, 266, 267, 288], "probabilistictensordictmodul": [3, 143, 250, 251], "tensordictsequenti": [3, 201, 205, 239, 241, 244, 251, 347], "maskedcategor": [3, 211, 345], "linear": [3, 13, 14, 15, 16, 20, 31, 83, 84, 87, 91, 103, 107, 113, 131, 143, 149, 163, 166, 167, 169, 171, 175, 185, 186, 187, 189, 190, 191, 192, 196, 198, 207, 209, 212, 213, 214, 215, 216, 222, 223, 224, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 249, 252, 254, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 339, 347], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 195, 210, 211, 219, 240, 246, 266, 267, 347], "dist": [3, 10, 210, 211, 219], "distribution_class": [3, 143, 234, 235, 236, 238, 246, 250, 252, 259, 260, 266, 267, 273, 277, 278, 279, 280, 347], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 31, 40, 56, 83, 84, 87, 91, 92, 96, 97, 102, 105, 107, 108, 109, 113, 115, 175, 176, 201, 205, 231, 234, 235, 236, 237, 242, 244, 245, 247, 255, 288, 347], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 121, 150, 175], "enviorn": [3, 101, 108, 109, 114, 115], "itself": [3, 31, 87, 91, 107, 113, 117, 123, 175, 275], "ey": 3, "report": [3, 83, 84, 96, 97], "foremost": 3, "callback": [3, 87, 91, 107, 113], "ad": [3, 4, 15, 22, 31, 35, 38, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69, 87, 91, 107, 113, 157, 167, 175, 214, 215, 245, 259, 261, 263, 268, 274, 277, 280, 288], "track": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 42, 73, 157, 173, 175, 244, 245, 315, 320], "tensordictrecord": [3, 345], "render": [3, 8, 114, 308, 310, 323], "videorecord": [3, 308, 345], "csvlogger": [3, 308, 310, 345], "wandblogg": [3, 345], "tensorboardlogg": [3, 339, 345], "tag": [3, 7, 308, 310, 312, 315, 343], "mp4": [3, 308, 310, 312], "video_format": [3, 308, 310, 312], "detect": [3, 60], "whc": 3, "cwh": 3, "exp": [3, 216, 258], "al": [3, 90, 92, 136, 147, 185], "pong": [3, 52, 105, 147], "v5": [3, 90, 92, 105, 136, 147], "cach": [3, 34, 36, 45, 52, 54, 55, 56, 58, 59, 60, 61, 67, 74, 87, 91, 107, 113, 123, 132, 135, 149, 167, 171, 183, 319], "grow": 3, "until": [3, 7, 20, 164, 166, 175], "dumpi": 3, "tediou": 3, "expens": [3, 67, 74, 75, 308], "workspac": [3, 87, 91, 107, 113], "pixelrendertransform": [3, 345], "stream": [3, 58], "alik": [3, 308], "envcreat": [3, 15, 21, 107, 113, 308, 339, 340, 343, 345], "render_mod": [3, 308], "rgb_arrai": [3, 308], "uncom": 3, "line": [3, 7, 31, 52, 87, 91, 107, 113, 175], "comment": [3, 349], "pixels_record": [3, 308], "close": [3, 15, 91, 104, 143, 259, 261, 274, 277, 308], "log": [3, 4, 8, 40, 194, 195, 196, 210, 211, 219, 229, 239, 240, 246, 250, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288, 317, 320, 321, 323, 327, 339, 347, 348, 349], "mission": 3, "irrespect": [3, 249, 250], "dmcontrol": [3, 87, 91, 107, 113], "jumanji": [3, 87, 91, 96, 97, 107, 113], "special": [3, 345, 347], "framework": [3, 4, 9, 21, 83, 84, 87, 91, 96, 97, 103, 107, 113, 199], "Its": [3, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 173, 175, 249, 294], "success": [3, 52, 53, 54, 55, 56, 57, 58, 59, 60, 127, 166, 241], "foundat": [3, 5, 108, 109], "inspir": 3, "gone": [3, 4, 5, 244], "hard": [3, 7, 78, 85, 86, 107, 272], "prefer": [3, 13, 14, 16, 19, 22, 35, 38, 41, 42, 150, 158, 277, 324, 347], "maintain": [3, 5, 9], "concomittantli": 3, "problem": [3, 7, 8, 9, 15], "decor": [3, 8, 11, 120, 275, 290, 291, 292, 293], "relev": [3, 40, 290, 291, 292, 293, 294, 317], "gym_backend": [3, 120, 345], "env1": 3, "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 59, 120], "env2": 3, "_env": [3, 6, 90], "classic_control": 3, "pendulumenv": 3, "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 99, 117], "handi": [3, 87, 91, 107, 113], "side": [3, 4], "v0": [3, 13, 14, 87, 91, 93, 96, 97, 98, 99, 107, 113, 131, 167, 173, 339], "26": [3, 87, 91, 107, 113], "fun": [3, 11, 120], "reveal": 4, "bug": 4, "curv": 4, "exploit": 4, "video": [4, 9, 310, 312, 323, 343, 345], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 143], "coeffici": [4, 40, 143], "bonu": [4, 259, 261, 274, 277], "beta": [4, 35, 41, 66, 67, 266, 273, 274], "reduc": [4, 6, 26, 78, 162], "downstream": 4, "formul": 4, "ob": [4, 8, 22, 25, 27, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 69, 74, 75, 78, 87, 91, 107, 113, 121, 123, 132, 133, 135, 145, 159, 165, 180, 183, 189, 190, 191, 192, 212, 213, 247, 254, 260, 262, 267, 273, 278, 280, 282, 290, 291, 292, 293], "rate": [4, 52, 173, 289], "gradient": [4, 31, 87, 91, 107, 113, 167, 175, 202, 211, 215, 219, 228, 229, 259, 261, 262, 266, 267, 273, 274, 275, 277, 278, 279, 280, 282, 289, 290, 291, 292, 293, 327], "easier": [4, 347], "local": [4, 7, 10, 15, 20, 31, 67, 74, 87, 91, 107, 113, 167, 175, 212, 213, 221, 230, 288, 315, 317], "optima": 4, "sens": 4, "product": [4, 9, 199, 200, 203, 204, 341, 342], "sum": [4, 20, 30, 33, 78, 83, 84, 85, 86, 90, 92, 93, 96, 97, 104, 105, 110, 126, 157, 210, 211, 230, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 276, 277, 278, 279, 280, 282, 289, 296, 348], "stat": [4, 145, 331, 343], "w": [4, 69, 127, 129, 153, 165, 199, 245, 310], "yield": [4, 15, 20, 31, 87, 91, 107, 113, 175, 275], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 31, 34, 36, 39, 87, 91, 107, 113, 149, 167, 171, 175, 207, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 346], "past": [4, 244], "spars": 4, "intermedi": [4, 13, 14, 126, 201, 205, 240], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": 4, "discov": 4, "score": [4, 40], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 101, 102, 108, 109, 114, 115, 121, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 148, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 173, 175, 185, 201, 205, 239, 247, 326], "fall": [4, 54], "explicit": [4, 11, 45, 69, 206], "mechan": [4, 31, 87, 91, 107, 113, 167, 175], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 87, 91, 107, 113, 203, 266, 273], "addition": 4, "timestep": [4, 40, 54, 154, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "realli": 4, "larg": [4, 26, 34, 36, 39, 132, 135, 169, 259, 261, 274, 277, 279], "huge": [4, 213], "std": [4, 145, 173, 216, 220, 237], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 352], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 39, 40, 78, 87, 91, 107, 113, 126, 145, 149, 163, 166, 167, 169, 174, 175, 185, 199, 200, 203, 204, 209, 214, 215, 237, 241, 242, 244, 245, 259, 260, 262, 263, 265, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 336, 343], "estim": [4, 52, 67, 74, 75, 136, 143, 189, 234, 235, 236, 259, 260, 261, 262, 263, 265, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 348], "unseen": 4, "extrins": 4, "wrong": [4, 67, 74], "bonus": 4, "denser": 4, "prior": [4, 224, 270], "freshli": 4, "drop": [4, 73, 75, 183], "meant": [4, 31, 103], "encourag": [4, 107], "measur": [4, 63, 64, 80, 83, 84, 96, 97], "novelti": 4, "revisit": 4, "previous": 4, "diminish": 4, "decreas": 4, "ideal": [4, 145], "down": [4, 13, 14, 15, 16], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 34, 36, 39], "distil": 4, "nois": [4, 174, 215, 232, 245, 278, 282, 323, 343], "exploratori": [4, 259, 261, 274, 277], "misalign": 4, "trade": 4, "unavoid": 4, "divers": [4, 107, 113], "bootstrap": [4, 268, 291, 297, 298], "noisi": [4, 214, 215, 232, 347], "unstabl": [4, 202, 228, 229], "inher": 4, "stochast": [4, 143, 197, 215, 217, 224, 260, 264, 266, 267, 273, 276, 278, 280, 347], "enemi": 4, "pomdp": 4, "loos": [4, 347], "nonexist": 4, "architectur": [4, 193], "sequenc": [4, 13, 14, 15, 16, 25, 27, 29, 30, 35, 37, 38, 40, 43, 45, 58, 61, 62, 69, 70, 72, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 118, 125, 126, 127, 128, 129, 132, 134, 135, 139, 141, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 165, 166, 173, 186, 187, 194, 196, 199, 203, 207, 210, 211, 212, 213, 219, 222, 226, 238, 251, 252, 264, 309, 310, 322, 323, 324, 326, 327, 336, 347], "lstm": [4, 204, 205, 206, 216], "rel": [4, 69, 163, 194, 227], "tend": 4, "stabl": [4, 9, 10, 106], "compens": 4, "descent": [4, 215], "minimum": [4, 107, 113, 155, 197, 216, 227, 228, 229, 253, 256, 258, 260, 267, 275, 276, 280, 318], "manual": [4, 17, 19, 20, 91], "deviat": [4, 145, 173, 185, 197, 209, 214, 215, 220, 237, 277, 282], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 74, 123, 199, 200, 203, 204], "stabil": [4, 140, 259, 261, 274, 277, 279], "stage": 4, "never": [4, 13, 14, 16], "prevent": [4, 25, 27, 202, 228, 229, 259, 261, 274, 277, 279, 325], "entir": [4, 58, 87, 91, 107, 113, 212], "submit": [4, 124, 346], "system": [4, 5], "adequ": [4, 176], "infeas": 4, "allevi": [4, 347], "prune": 4, "fire": [4, 31, 87, 91, 107, 113, 175], "illeg": 4, "move": [4, 31, 60, 87, 91, 107, 113, 131, 133, 149, 163, 166, 167, 169, 171, 173, 175, 183, 207, 249, 325], "chess": 4, "combin": [4, 166], "grasp": 4, "top": [4, 78, 83, 84, 96, 97, 185, 209], "wherein": 4, "cumul": [4, 157, 162, 185, 296], "q": [4, 9, 87, 91, 107, 113, 189, 190, 191, 192, 195, 196, 198, 221, 222, 230, 236, 240, 247, 248, 260, 262, 263, 265, 266, 267, 268, 272, 273, 278, 280, 282, 288, 336, 345], "flow": 4, "reparameter": [4, 194, 211, 219], "soft": [4, 272, 280, 281], "critic": [4, 8, 234, 243, 259, 261, 262, 266, 267, 273, 274, 277, 278, 279, 280, 282], "clip": [4, 40, 130, 155, 259, 261, 274, 277, 279, 282, 327], "oppos": [4, 45], "incorrect": 4, "thought": [4, 87, 91, 107, 113], "bound": [4, 20, 24, 25, 31, 87, 91, 107, 113, 130, 144, 173, 175, 223, 224, 233, 239, 240, 245, 246, 247, 248, 249, 250, 253, 282, 347], "region": 4, "squash": 4, "tanh": [4, 186, 187, 199, 200, 202, 203, 204, 207, 213, 227, 228, 229, 253], "correct": [4, 34, 36, 39, 87, 91, 107, 113, 143, 330], "prob": [4, 210, 211, 219], "rememb": 4, "remap": 4, "origin": [4, 8, 34, 36, 39, 40, 95, 133, 134, 143, 149, 167, 171, 175, 199, 246, 249, 250, 272, 275, 277, 336], "histor": 5, "ceas": 5, "farama": [5, 56, 98, 99, 108, 109], "bc": 5, "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 87, 91, 107, 113, 175, 176, 233, 239, 240, 246, 247, 248, 249, 250], "best": [5, 9, 95, 201, 205], "gymwrapp": [5, 87, 91, 107, 113, 137, 158, 161, 172, 345], "feel": [5, 346], "free": [5, 7, 132, 135, 259, 270, 277, 349], "gladli": 5, "prepar": [6, 55], "conda": [6, 7, 346], "cmake": 6, "activ": [6, 7, 9, 186, 187, 193, 197, 207, 212, 213, 261, 274, 277, 347], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 55, 346], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 93], "y": [6, 7, 38, 106, 198, 206, 212, 231], "facebookresearch": [6, 55, 93], "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 49, 87, 91, 107, 113, 151, 160, 175, 275], "command": [6, 7, 10], "readm": [6, 7, 114], "md": [6, 7], "habitatenv": [6, 345], "_has_habitat": 6, "available_env": [6, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 97, 98, 101, 102, 106, 107, 110, 111, 112, 113, 114, 115], "startswith": [6, 348], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 88, 275], "env_nam": [6, 83, 85, 87, 90, 91, 93, 96, 98, 104, 107, 110, 113], "llvmlite": 6, "config": [6, 7, 149, 171, 188, 193, 220, 331, 332, 333, 336, 337, 340], "var": [6, 7, 31, 87, 91, 107, 113, 167, 175, 275, 280], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 239], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 31, 87, 91, 107, 113, 167, 175, 275, 280], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 87], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 54], "stand": [7, 85, 86, 107, 113], "joint": 7, "dynam": [7, 55, 58, 60, 175, 266, 273], "contact": [7, 37], "engin": [7, 110], "biomechan": 7, "graphic": 7, "anim": 7, "area": 7, "demand": 7, "fast": [7, 9, 83, 84, 152, 183, 278], "accur": [7, 54, 60], "articul": 7, "acquir": 7, "deepmind": [7, 8, 9, 58, 85, 86, 87, 91, 101, 102, 107, 113, 136], "whomev": 7, "licenc": 7, "incorpor": [7, 87, 91, 107, 113, 237, 241, 242, 245], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 346], "tip": [7, 346], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 58], "sudo": [7, 346], "enabl": [7, 8, 54, 63, 64, 73, 80, 124, 201, 205, 244, 245, 310, 323], "apt": 7, "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 63, 64, 65, 76, 77, 80], "workflow": [7, 234, 235, 236], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 23, 26, 33, 125, 196, 222, 239, 240, 247, 248, 263, 266, 267, 288], "mkdir": 7, "earlier": 7, "roboti": 7, "html": [7, 104, 106], "wget": 7, "mujoco210": 7, "tar": [7, 55], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 107, 113], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 61], "bin": [7, 196, 240, 347], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 192, 246, 250], "nvidia": [7, 95], "older": [7, 11], "hack": 7, "adatp": 7, "script": [7, 55, 176, 336, 339, 343, 347, 348, 349], "unnot": [7, 150], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": 7, "troubleshoot": 7, "gl": 7, "h": [7, 69, 127, 129, 153, 165, 199, 200, 201, 203, 204, 205, 209, 310], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 34, 36, 39, 45, 52, 54, 55, 56, 58, 59, 60, 63, 315, 317, 349], "devel": 7, "ubuntu": [7, 95], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": 7, "libstdc": 7, "glibcxx_3": 7, "29": 7, "compil": [7, 31, 67, 74, 75, 87, 91, 107, 113, 175, 199, 200, 203, 204, 206], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 172], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 25, 27, 31, 87, 91, 107, 113, 144, 167, 175, 280], "job": [7, 17, 18, 19, 21, 38], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 83, 84], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": 7, "global": [7, 31, 87, 91, 107, 108, 109, 113, 175, 221, 230, 246, 250, 288, 349], "cuda_visible_devic": 7, "id": [7, 22, 40, 67, 69, 74, 75, 87, 90, 91, 107, 113, 245, 278, 313, 317, 336], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": 7, "correctli": [7, 31, 87, 91, 107, 113, 175], "lgl": 7, "libegl": 7, "x11": 7, "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 34, 36, 39, 87, 91, 107, 113, 183, 237, 241, 242, 245, 277, 327, 349], "sketch": [8, 349], "n_training_step": 8, "datapoint": [8, 45], "n_data_per_train": 8, "no_grad": [8, 31, 87, 91, 107, 113, 143, 175, 199, 200, 203, 204, 290, 291, 292, 293], "loss_fn": 8, "zero_grad": [8, 31, 87, 91, 107, 113, 175, 349], "backpropag": [8, 83, 84, 96, 97, 107, 259, 260, 261, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 282, 288], "differenti": [8, 45, 83, 84, 143, 290, 291, 292, 293], "denomin": 8, "artifact": 8, "numer": [8, 38, 91, 173, 202, 228, 229, 233, 239, 240, 246, 247, 248, 249, 250, 325], "misconcept": 8, "freed": 8, "appear": [8, 33, 52, 58, 67, 74, 75], "compuat": 8, "fix": [8, 107, 163, 260, 276, 280], "retain_graph": [8, 83, 84], "discuss": [8, 9], "inplac": [8, 31, 34, 36, 39, 87, 91, 107, 113, 175], "onto": [8, 33, 34, 36, 39, 180, 233, 237, 239, 240, 245, 246, 247, 248, 249, 250], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 121, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 148, 149, 150, 151, 152, 154, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 216, 217, 218, 220, 221, 223, 224, 226, 230, 231, 237, 238, 240, 241, 244, 245, 246, 248, 249, 250, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 288, 290, 291, 292, 293, 294, 348], "submodul": [8, 31, 87, 91, 107, 113, 117, 175, 275], "param": [8, 31, 40, 87, 91, 103, 107, 113, 124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 175, 194, 196, 227, 238, 246, 249, 252, 275, 284, 287, 290, 291, 292, 293, 294], "grad": [8, 31, 83, 84, 87, 91, 107, 113, 175], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 87, 91, 107, 108, 109, 113, 131, 149, 163, 166, 167, 169, 171, 175, 216, 221, 249], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 35, 41, 66, 67, 127, 139, 150, 168, 269, 290, 292, 293, 348], "much": [8, 13, 14, 16, 35, 41, 58, 66, 67, 107, 113, 274, 277], "factor": [8, 31, 154, 175, 202, 215, 228, 229, 237, 241, 242, 245, 260, 265, 268, 269, 271, 281, 296], "fit": [8, 11, 145, 163, 348, 349], "bottlneck": 8, "brax": [8, 83, 84, 87, 91, 107, 113, 152], "jax": [8, 11, 83, 84, 96, 97], "improperli": 8, "underli": [8, 87, 91, 107, 113, 275], "tedeiou": 8, "priorit": [8, 35, 41, 66, 67, 262, 263, 265, 266, 267, 273, 278, 280, 282], "amount": [8, 245], "costli": 8, "constitut": 8, "plain": 8, "profil": 8, "frequent": 8, "program": [8, 266, 273], "functorch": [8, 10], "incl": 8, "suit": [8, 86], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 44, 46, 47, 74, 75, 124, 249, 252, 275], "new_shap": 8, "permut": [8, 73, 147], "idea": [9, 278, 349], "introductori": 9, "intro": 9, "dai": 9, "2022": [9, 10], "spin": [9, 85, 86], "deep": [9, 127, 189, 190, 191, 192, 195, 245, 259, 272, 280, 281], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 145, 173], "reddit": 9, "reagent": 9, "orient": [9, 60], "baselines3": 9, "tf": 9, "bandit": [9, 106], "tensorflow": [9, 210, 211], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": 9, "grade": 9, "factori": [9, 43], "cherri": 9, "jaxrl": 9, "mbrl": [9, 103, 347], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": 10, "notebook": 10, "24": [10, 59, 75, 90, 104, 105, 244], "pip3": 10, "url": [10, 93], "org": [10, 35, 55, 56, 58, 60, 66, 67, 83, 84, 85, 86, 93, 96, 97, 101, 102, 104, 105, 106, 110, 114, 115, 127, 149, 169, 188, 189, 190, 191, 192, 193, 196, 197, 198, 203, 209, 210, 211, 215, 217, 218, 221, 223, 224, 230, 240, 245, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 276, 277, 279, 280, 281, 290, 295, 303, 344, 352], "whl": 10, "u": [10, 57, 199, 200, 203, 204], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 275], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 69, 78, 83, 85, 86, 87, 89, 90, 91, 92, 93, 96, 101, 102, 104, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 121, 123, 127, 134, 136, 142, 143, 145, 149, 150, 153, 158, 161, 162, 167, 169, 171, 172, 173, 175, 177, 181, 183, 184, 185, 195, 196, 201, 205, 206, 208, 209, 212, 213, 214, 215, 216, 221, 222, 230, 233, 239, 240, 244, 246, 247, 248, 249, 250, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 288, 289, 290, 291, 292, 293, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 336, 337, 343], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 201, 205, 206], "longer": 11, "x": [11, 22, 25, 31, 38, 40, 58, 75, 143, 165, 187, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 212, 213, 231, 239, 246, 247, 256, 258, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 327], "23": [11, 59, 75], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 59, 83, 84, 91, 96, 97, 204, 258, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "otherwis": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 74, 75, 83, 84, 87, 90, 91, 92, 93, 96, 97, 100, 101, 102, 104, 105, 107, 108, 109, 110, 113, 114, 115, 127, 128, 134, 145, 162, 163, 164, 167, 173, 175, 199, 202, 203, 212, 213, 228, 229, 239, 247, 253, 260, 270, 275, 276, 280, 290, 292, 293, 323, 324, 349], "classmethod": [11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 44, 46, 47, 87, 91, 107, 113, 169, 188, 220], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 34, 36, 38, 39, 59, 67, 74, 75, 87, 88, 89, 91, 101, 102, 104, 107, 108, 109, 113, 114, 115, 116, 143, 163, 167, 172, 173, 175, 186, 187, 188, 189, 190, 191, 192, 193, 198, 206, 207, 220, 246, 250, 280, 314, 315, 323, 332, 333, 336, 341, 342, 343], "setter": 11, "setter_dict": 11, "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 88, 107, 113], "device_typ": [13, 15, 16, 26, 29, 32, 33, 186, 187, 188, 189, 190, 191, 192, 198, 206, 207, 212, 213, 214, 215, 220], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20], "create_env_kwarg": [13, 14, 15, 16, 20, 88, 104, 107, 113], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 31, 154], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 275, 323], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 178, 182, 246, 250, 323], "exploration_mod": [13, 15, 16, 17, 18, 19, 345, 347], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 24, 26, 31, 33, 35, 40, 41, 46, 58, 66, 67, 69, 87, 91, 107, 113, 123, 127, 131, 132, 135, 143, 145, 149, 154, 155, 156, 162, 163, 165, 166, 167, 169, 171, 173, 175, 194, 197, 199, 202, 203, 207, 210, 211, 214, 215, 223, 224, 227, 229, 237, 249, 253, 256, 257, 258, 259, 260, 261, 265, 266, 267, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 289, 295, 296, 297, 298, 299, 300, 301, 302, 303, 325], "num_thread": [13, 14, 16, 34, 36, 39, 107, 113], "num_sub_thread": [13, 14, 16, 107, 113], "set_trunc": [13, 14, 15, 16, 87, 91, 107, 113], "datacollector": [13, 14, 15, 16, 31, 250, 277], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 67, 74, 233, 237, 239, 240, 245, 246, 247, 248, 249, 250, 252, 347], "sota": [13, 14, 103, 140, 279, 318, 332], "env_mak": [13, 14, 15, 20, 339], "50": [13, 14, 15, 20, 37, 40, 52, 60, 74, 75, 101, 102, 175], "2000": [13, 14, 15, 31, 45, 94, 310], "int64": [13, 14, 15, 22, 26, 29, 34, 36, 37, 39, 40, 41, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 87, 91, 100, 101, 102, 106, 107, 108, 109, 111, 112, 113, 124, 136, 147, 154, 161, 196, 222, 239, 240, 245, 246, 247, 248, 347], "shutdown": [13, 14, 15, 16, 20, 124], "del": [13, 14, 15], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 126, 231, 239, 244, 247], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 45], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19], "divis": [13, 14, 15, 16, 17, 18, 19, 52, 58, 67, 74, 75], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 52, 91, 123, 163, 172, 205], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 329], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 61, 83, 84, 85, 86, 87, 90, 91, 92, 96, 97, 104, 105, 107, 110, 113, 131, 132, 135, 143, 149, 163, 166, 167, 169, 171, 173, 175, 249, 336], "span": [13, 14, 15, 16, 17, 18, 19, 20, 58, 74], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 31, 175, 244], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 40, 317, 347], "round": [13, 14, 15, 16, 17, 18, 19, 20, 52], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 31, 56, 87, 91, 107, 113, 175], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 172], "ratio": [13, 14, 16, 40], "finish": [13, 14, 16, 20, 91, 154], "rest": [13, 14, 16, 347], "earli": [13, 14, 16, 31, 91, 161], "plu": [13, 14, 16, 40, 107, 113], "safeti": [13, 14, 16, 103, 107, 113], "harm": [13, 14, 16, 107, 113], "exclus": [13, 14, 48, 49, 52, 58, 67, 74, 75, 124, 137, 139, 199, 201, 203, 205, 210, 211, 239, 240, 247, 248, 281, 282, 290, 291, 292, 293, 294, 317, 343, 347], "add_truncated_kei": [13, 14, 15, 16, 87, 91, 107, 113, 167], "ordereddict": [13, 14, 15, 16, 20, 31, 87, 91, 107, 113, 167, 173, 175, 280], "form": [13, 14, 16, 31, 35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 173, 175, 199, 201, 203, 205, 258, 259, 261, 274, 277, 327, 347], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 87, 91, 107, 113, 167], "integ": [13, 14, 15, 16, 22, 29, 30, 31, 33, 40, 47, 67, 74, 75, 76, 87, 91, 107, 113, 123, 136, 140, 145, 161, 186, 187, 207, 212, 213, 266, 273, 280], "increment": [13, 14, 15, 16, 87, 91, 107, 113, 274], "env_fn": [13, 14, 15, 16, 88, 341, 342], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 74, 75, 191, 192], "out_se": [13, 14, 15, 16], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 24, 25, 31, 32, 46, 52, 54, 55, 66, 67, 69, 74, 75, 78, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 124, 131, 149, 151, 160, 163, 166, 167, 168, 170, 171, 174, 175, 185, 186, 187, 189, 190, 191, 192, 195, 198, 201, 202, 205, 207, 208, 209, 212, 213, 219, 227, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 288, 289, 290, 291, 292, 293, 294, 308, 310, 314, 315, 317, 320, 327, 332, 333, 336, 340, 341, 342, 348], "return_same_td": 15, "interruptor": 15, "cautious": [15, 277], "whole": [15, 25, 27, 31, 45, 87, 91, 107, 113, 167, 175, 246, 280, 318], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": 15, "policy_state_dict": 15, "env_state_dict": 15, "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 327], "respect": [17, 18, 19, 31, 87, 91, 107, 113, 125, 131, 132, 135, 149, 150, 159, 163, 166, 167, 169, 171, 175, 199, 203, 212, 224, 249, 254, 259, 261, 274, 277, 279, 290, 292, 293, 322], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 346], "fashion": [17, 19, 20, 34, 36, 39, 75], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 52, 55, 56, 58, 59, 60, 87, 91, 107, 113, 139], "seen": [17, 18, 19, 20, 87, 91, 107, 113, 348], "submitit_delai": [17, 21], "former": [17, 18, 19, 35, 38, 41, 42, 54, 87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256], "whilst": [17, 18, 19], "homonym": [17, 18, 19], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": 18, "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 33, 52, 246, 250], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 341, 342], "coordin": 20, "init": [20, 31, 87, 91, 107, 113, 175, 317], "autodetect": 20, "similarli": [20, 31, 73, 77, 87, 91, 107, 113, 175, 212, 251, 252, 266, 273], "num_cpu": 20, "num_gpu": 20, "1024": [20, 193], "equat": [20, 58, 91, 245, 258, 261, 281], "exce": 20, "indefinit": [20, 51], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 327], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": 21, "jump": 21, "host": [21, 31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 188, 193, 220, 238], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 87, 91, 107, 113, 241, 242, 245, 246, 253, 259, 260, 262, 273, 277, 278, 280, 282, 345], "rollout_tensordict": 22, "nestedkei": [22, 45, 67, 74, 75, 87, 91, 107, 113, 118, 121, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 139, 141, 142, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 173, 175, 183, 184, 237, 238, 241, 242, 244, 245, 250, 263, 288, 308, 310], "durat": 22, "meta": [22, 44, 54, 89, 93, 259, 261, 274, 277, 279, 349], "aren": [22, 162], "deprec": [22, 31, 87, 91, 107, 113, 167, 175, 177, 181, 242, 259, 261, 263, 266, 267, 268, 273, 274, 277, 278, 279, 280, 288, 290, 291, 292, 293, 298], "eventu": [22, 221], "supersed": 22, "recov": [22, 54, 56, 58, 59, 60, 74, 75, 237, 242, 245, 251, 266, 273], "cat": [22, 254, 260, 262, 273, 278, 280, 282], "arang": [22, 26, 33, 67, 196, 211, 239, 318, 347], "obs_": 22, "trajectory_id": 22, "int32": [22, 42, 52, 58, 74, 96, 97, 180, 244], "data_split": 22, "got": 22, "int8": [23, 87, 100, 108, 109, 125], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "clear_device_": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "op": [23, 24, 26, 29, 30, 32, 33, 44, 46, 47, 144, 172, 237, 241, 310, 329], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 41, 42, 44, 46, 47, 83, 84, 87, 90, 92, 93, 96, 97, 104, 105, 110, 134, 218, 219, 223, 258, 347], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 91, 245, 253, 308], "ignore_devic": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "np": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 91, 253, 308], "complient": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "singleton": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 186, 187, 207, 225, 226], "start_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "end_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "project": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 134, 203, 233, 237, 239, 240, 245, 246, 247, 248, 249, 250, 317, 347], "rand": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 83, 84, 96, 97, 103, 121, 124, 132, 135, 151, 185, 209, 246, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 280, 282], "unbound": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 163, 180], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 87, 91, 107, 113], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 166, 167, 216, 227, 343], "check_spec_encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "to_one_hot": [23, 26, 29], "hot": [23, 26, 29, 30, 33, 83, 84, 90, 92, 93, 96, 97, 101, 102, 104, 105, 108, 109, 110, 114, 115, 121, 134, 196, 219, 222, 239, 240, 247, 248, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288], "to_one_hot_spec": [23, 26, 29], "onehotdiscretetensorspec": [23, 26, 196, 222, 239, 247, 263, 265, 266, 267, 288, 345, 347], "convert": [23, 26, 29, 30, 31, 33, 34, 36, 39, 45, 83, 84, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113, 131, 132, 135, 149, 163, 166, 167, 169, 171, 173, 175, 249, 258, 275], "type_check": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47], "unflatten": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 44, 46, 47, 124, 244], "upper": [24, 72, 144], "unnam": 25, "constraint": [25, 103], "pixels_spec": 25, "observation_vector_spec": 25, "composite_spec": 25, "observation_vector": [25, 128, 336], "td_project": 25, "absent": [25, 27, 54, 87, 91, 107, 113, 167], "is_empti": [25, 27], "include_nest": [25, 27], "leaves_onli": [25, 27], "itemsview": 25, "children": [25, 27, 31, 87, 91, 107, 113, 175], "keysview": [25, 27], "reflect": [25, 27, 92, 108, 109, 172, 183, 275, 330], "lock_": [25, 27], "recurs": [25, 27, 31, 48, 49, 87, 91, 107, 113, 175, 275], "succeed": [25, 27], "selected_kei": [25, 27, 158], "unlock_": [25, 27], "unlock": [25, 27, 34, 36, 39], "valuesview": 25, "onehottensorspec": [26, 83, 84, 90, 92, 93, 96, 97, 104, 105, 110], "action_valu": [26, 33, 195, 196, 222, 239, 240, 247, 248, 267, 275, 288, 347], "argmax": [26, 87, 91, 107, 113, 196, 222, 240, 248], "chosen_action_valu": [26, 33, 221, 222, 230, 247, 248, 288, 347], "outcom": [26, 33, 194, 227], "drawn": [27, 28, 163, 241, 246, 250], "lazystackedtensordict": [27, 52, 87, 91, 103, 107, 113], "heterogen": [27, 28, 100, 108, 109, 176, 212, 213], "thrown": [28, 31, 87, 91, 107, 113, 175], "nvec": [29, 30], "cardin": [29, 30, 196, 222, 239, 240, 248], "ax": [29, 214, 215], "m": [29, 31, 87, 91, 107, 113, 134, 175, 250, 347], "ts": [29, 30], "multionehotdiscretetensorspec": [29, 263, 266, 267, 288, 345], "use_regist": [30, 33], "to_categor": [30, 33], "to_categorical_spec": [30, 33], "multidiscretetensorspec": [30, 345], "gamma": [31, 154, 175, 209, 259, 260, 262, 263, 265, 267, 268, 269, 271, 273, 275, 277, 278, 279, 280, 282, 283, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 339, 348], "sutton": [31, 348], "1988": 31, "tempor": [31, 201, 205, 209, 291, 292, 297, 298], "44": 31, "discount": [31, 58, 88, 154, 175, 260, 265, 268, 269, 271, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 348], "ahead": [31, 175], "bias": [31, 199, 200, 203, 204, 256, 348], "mitig": 31, "pleas": [31, 56, 87, 91, 107, 108, 109, 113, 124, 127, 164, 167, 175, 280, 346], "multisteptransform": [31, 345], "99": [31, 154, 173, 209, 271, 284, 289, 296, 339], "add_modul": [31, 87, 91, 107, 113, 175], "child": [31, 87, 91, 107, 113, 175], "fn": [31, 37, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 175, 216, 341, 342], "init_weight": [31, 87, 91, 107, 113, 175], "fill_": [31, 87, 91, 107, 113, 175], "net": [31, 87, 91, 107, 113, 175, 190, 192, 195, 198, 206, 213, 259, 260, 267, 273, 277, 278, 279, 280, 336, 339], "in_featur": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 186, 187, 189, 190, 191, 192, 198, 206, 207, 212, 213, 214, 215, 234, 249, 263, 265], "out_featur": [31, 87, 91, 103, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 185, 186, 187, 189, 190, 191, 192, 197, 198, 201, 205, 206, 207, 209, 212, 213, 214, 215, 234, 239, 249, 263, 265, 347], "bia": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 186, 187, 189, 190, 191, 192, 197, 198, 199, 200, 201, 203, 204, 205, 207, 213, 214, 215, 216, 241, 242, 245, 249, 256, 257, 258, 275, 280, 348], "requires_grad": [31, 83, 84, 87, 91, 107, 113, 143, 167, 175, 280], "bfloat16": [31, 87, 91, 107, 113, 175], "datatyp": [31, 87, 91, 107, 113, 175], "member": [31, 87, 91, 107, 113, 175, 275, 310], "xdoctest": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249, 275, 280], "buf": [31, 87, 91, 107, 113, 175], "20l": [31, 87, 91, 107, 113, 175, 275], "1l": [31, 87, 91, 107, 113, 175, 275], "5l": [31, 87, 91, 107, 113, 175, 275], "__call__": [31, 37, 87, 91, 107, 113, 175, 250, 349], "doubl": [31, 46, 87, 91, 107, 113, 131, 132, 133, 135, 149, 163, 166, 167, 169, 171, 175, 249, 263, 268, 272, 278, 281, 288], "eval": [31, 87, 91, 107, 113, 167, 173, 175], "evalu": [31, 87, 91, 101, 102, 107, 113, 167, 175, 194, 210, 211, 219, 229, 278, 332, 333], "dropout": [31, 87, 91, 107, 113, 167, 175, 199, 201, 203, 205, 207], "batchnorm": [31, 87, 91, 107, 113, 167, 175], "disabl": [31, 87, 91, 107, 113, 167, 175, 202, 229, 308], "comparison": [31, 87, 91, 107, 113, 167, 175, 275], "similar": [31, 34, 36, 38, 39, 58, 87, 91, 107, 108, 109, 113, 131, 149, 163, 166, 167, 169, 170, 171, 173, 175, 234, 236, 246, 249, 250, 348], "extra_repr": [31, 87, 91, 107, 113, 175], "nontermin": 31, "original_reward": 31, "newli": [31, 87, 91, 107, 113], "OR": 31, "get_buff": [31, 87, 91, 107, 113, 175], "get_submodul": [31, 87, 91, 107, 113, 175], "qualifi": [31, 87, 91, 107, 113, 175], "referenc": [31, 87, 91, 107, 113, 175], "attributeerror": [31, 87, 91, 107, 113, 175], "resolv": [31, 87, 91, 107, 113, 175], "someth": [31, 87, 91, 100, 107, 113, 175, 346], "get_extra_st": [31, 87, 91, 107, 113, 173, 175], "set_extra_st": [31, 87, 91, 107, 113, 173, 175], "picklabl": [31, 87, 91, 107, 113, 173, 175], "pickl": [31, 87, 91, 107, 113, 173, 175], "get_paramet": [31, 87, 91, 107, 113, 175], "net_b": [31, 87, 91, 107, 113, 175], "net_c": [31, 87, 91, 107, 113, 175], "conv": [31, 87, 91, 107, 113, 175, 186, 187], "conv2d": [31, 87, 91, 107, 113, 175, 187, 189, 190, 198, 212], "kernel_s": [31, 87, 91, 107, 113, 175, 186, 187, 189, 190, 198, 212, 217], "stride": [31, 87, 91, 107, 113, 175, 186, 187, 189, 190, 198, 212], "diagram": [31, 87, 91, 107, 113, 175], "degre": [31, 87, 91, 107, 113, 175], "named_modul": [31, 87, 91, 107, 113, 175], "o": [31, 87, 91, 107, 113, 175, 204], "half": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "ipu": [31, 87, 91, 107, 113, 175], "strict": [31, 34, 36, 39, 87, 91, 107, 113, 167, 175, 280], "descend": [31, 87, 91, 107, 113, 167, 175, 280], "get_swap_module_params_on_convers": [31, 87, 91, 107, 113, 167, 175, 280], "persist": [31, 87, 91, 107, 113, 167, 175, 183, 280], "enforc": [31, 73, 87, 91, 107, 113, 167, 175, 251, 280], "preserv": [31, 87, 91, 107, 113, 167, 175, 280], "missing_kei": [31, 87, 91, 107, 113, 167, 175, 280], "unexpected_kei": [31, 87, 91, 107, 113, 167, 175, 280], "namedtupl": [31, 87, 91, 107, 113, 167, 175, 280], "duplic": [31, 73, 87, 91, 107, 113, 175, 263, 268, 275, 288], "l": [31, 87, 91, 107, 113, 175, 199, 203, 289], "idx": [31, 87, 91, 107, 113, 175], "named_buff": [31, 87, 91, 107, 113, 175], "remove_dupl": [31, 87, 91, 107, 113, 175, 275], "prepend": [31, 87, 91, 107, 113, 175, 275], "running_var": [31, 87, 91, 107, 113, 175], "named_children": [31, 87, 91, 107, 113, 175], "conv4": [31, 87, 91, 107, 113, 175], "conv5": [31, 87, 91, 107, 113, 175], "memo": [31, 87, 91, 107, 113, 175], "named_paramet": [31, 87, 91, 107, 113, 143, 175, 275], "register_backward_hook": [31, 87, 91, 107, 113, 175], "removablehandl": [31, 87, 91, 107, 113, 175], "favor": [31, 87, 91, 107, 113, 175], "register_full_backward_hook": [31, 87, 91, 107, 113, 175], "register_buff": [31, 87, 91, 107, 113, 175], "running_mean": [31, 87, 91, 107, 113, 175], "alongsid": [31, 87, 91, 107, 113, 175], "num_featur": [31, 87, 91, 107, 113, 175], "register_forward_hook": [31, 87, 91, 107, 113, 175, 196, 222], "with_kwarg": [31, 87, 91, 107, 113, 175], "always_cal": [31, 87, 91, 107, 113, 175], "register_module_forward_hook": [31, 87, 91, 107, 113, 175], "regardless": [31, 87, 91, 107, 113, 175, 261, 274, 277], "register_forward_pre_hook": [31, 87, 91, 107, 113, 175], "invok": [31, 87, 91, 107, 113, 175], "And": [31, 87, 91, 107, 113, 175], "forward_pr": [31, 87, 91, 107, 113, 175], "register_module_forward_pre_hook": [31, 87, 91, 107, 113, 175], "grad_input": [31, 87, 91, 107, 113, 175], "grad_output": [31, 87, 91, 107, 113, 175], "subsequ": [31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 123, 175], "technic": [31, 87, 91, 107, 113, 175], "caller": [31, 87, 91, 107, 113, 175], "register_module_full_backward_hook": [31, 87, 91, 107, 113, 175], "register_full_backward_pre_hook": [31, 87, 91, 107, 113, 175], "backward_pr": [31, 87, 91, 107, 113, 175], "register_module_full_backward_pre_hook": [31, 87, 91, 107, 113, 175], "register_load_state_dict_post_hook": [31, 87, 91, 107, 113, 175], "incompatible_kei": [31, 87, 91, 107, 113, 175], "register_modul": [31, 87, 91, 107, 113, 175, 349], "alia": [31, 87, 91, 107, 113, 175], "register_paramet": [31, 87, 91, 107, 113, 175], "register_state_dict_pre_hook": [31, 87, 91, 107, 113, 175], "keep_var": [31, 34, 36, 39, 87, 91, 107, 113, 167, 175, 280], "requires_grad_": [31, 87, 91, 107, 113, 175], "autograd": [31, 87, 91, 107, 113, 167, 175, 280], "freez": [31, 87, 91, 107, 113, 175], "finetun": [31, 87, 91, 107, 113, 175], "gan": [31, 87, 91, 107, 113, 175], "share_memori": [31, 87, 88, 91, 107, 113, 175], "share_memory_": [31, 87, 91, 107, 113, 175], "destin": [31, 34, 36, 39, 87, 91, 107, 113, 126, 132, 133, 135, 167, 169, 173, 175, 183, 280, 310], "averag": [31, 87, 91, 107, 113, 167, 173, 175, 245, 269, 270, 280, 325], "shallow": [31, 87, 91, 107, 113, 167, 175, 280], "detach": [31, 87, 91, 107, 113, 167, 175, 275, 280, 290, 291, 292, 293], "non_block": [31, 34, 36, 39, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "memory_format": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "channels_last": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "unchang": [31, 87, 91, 107, 113, 131, 134, 149, 163, 166, 167, 169, 171, 175, 241, 249, 324], "tri": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "pin": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "4d": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "ignore_w": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "1913": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "3420": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "5113": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "2325": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "torch_doctest_cuda1": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "gpu1": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "1914": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "5112": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "2324": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "float16": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 200, 204, 249], "cdoubl": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "3741": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "j": [31, 35, 66, 67, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249, 349], "2382": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "5593": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "4443": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "complex128": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "6122": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "1150": [31, 87, 91, 107, 113, 131, 149, 163, 166, 167, 169, 171, 175, 249], "to_empti": [31, 87, 91, 107, 113, 175], "dst_type": [31, 87, 91, 107, 113, 175], "xpu": [31, 87, 91, 107, 113, 175], "set_to_non": [31, 87, 91, 107, 113, 175], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "uniqu": [33, 74, 75, 101, 102, 127, 136, 162, 163, 164, 244, 317], "discretebox": [33, 87, 91, 107, 113], "chosen_data": [34, 61], "rewarddata": [34, 61, 345], "rejected_data": [34, 61], "from_dataset": [34, 36, 61], "dataset_nam": [34, 36, 40, 45, 61, 106], "max_length": [34, 36, 37, 43, 45, 61], "550": [34, 36, 40, 45, 61, 74, 75], "root_dir": [34, 36, 45, 61], "from_disk": [34, 36, 45, 61], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "load_from_disk": [34, 36, 45, 61], "load_dataset": [34, 36, 45, 61], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 61], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 61], "end_scor": [34, 39, 40, 61], "sub_data": [34, 36], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_nodefault": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 61, 63, 64, 80], "load_memmap": [34, 36, 39], "fetch": [34, 36, 39, 83, 84, 85, 86, 143], "fromkei": [34, 36, 39], "memmap": [34, 36, 39, 63, 107, 113, 173, 310, 312, 324], "saved_td": [34, 36, 39], "td_load": [34, 36, 39], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "copy_exist": [34, 36, 39], "return_earli": [34, 36, 39], "share_non_tensor": [34, 36, 39], "mimic": [34, 36, 39, 87, 91, 107, 113], "cross": [34, 36, 39, 185], "anymor": [34, 36, 39, 167, 249], "tensordictfutur": [34, 36, 39], "deepli": [34, 36, 39], "insid": [34, 36, 39, 107], "memmap_": [34, 36, 39, 173], "memmap_lik": [34, 36, 39], "contentless": [34, 36, 39], "1_000_000": [34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 74], "alloc": [34, 36, 39, 64, 210, 211], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39], "unbind": [34, 35, 36, 38, 39, 41, 42, 201, 205], "alpha": [35, 41, 66, 67, 186, 187, 189, 190, 191, 192, 198, 212, 260, 267, 276, 278, 280], "ep": [35, 41, 66, 67, 173, 245, 261, 281, 325], "1e": [35, 41, 66, 67, 173, 194, 197, 216, 227], "08": [35, 41, 66, 67], "pin_memori": [35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60, 148], "schaul": [35, 66, 67], "quan": [35, 66, 67], "antonogl": [35, 66, 67], "silver": [35, 66, 67], "2015": [35, 66, 67], "arxiv": [35, 55, 58, 60, 66, 67, 83, 84, 85, 86, 96, 97, 101, 102, 104, 105, 110, 114, 115, 127, 149, 169, 188, 189, 190, 191, 192, 193, 196, 197, 198, 203, 209, 215, 217, 218, 221, 223, 224, 230, 240, 245, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 276, 277, 280, 281, 290, 295, 303], "ab": [35, 55, 58, 60, 66, 67, 83, 84, 85, 86, 96, 97, 101, 102, 104, 105, 110, 114, 115, 126, 149, 169, 173, 188, 193, 197, 198, 203, 209, 215, 217, 218, 221, 223, 224, 230, 259, 260, 263, 264, 265, 266, 269, 270, 271, 272, 273, 276, 277, 280], "1511": [35, 66, 67, 198], "05952": [35, 66, 67], "expon": [35, 41, 66, 67], "\u03b1": [35, 41, 66, 67], "delta": [35, 41, 66, 67, 199, 203, 227, 246, 250, 345, 348], "null": [35, 41, 66, 67, 125], "max_siz": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 76, 78, 80], "1_000": [35, 38, 41, 42], "merg": [35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60], "mini": [35, 38, 41, 42, 52, 54, 55, 56, 57, 58, 59, 60], "decid": [35, 38, 41, 42], "meth": [35, 38, 41, 42, 275], "incompat": [35, 38, 41, 42, 279], "drop_last": [35, 38, 41, 42, 73, 75], "notion": [35, 38, 41, 42], "caution": [35, 38, 41, 42, 73, 176], "codebas": [35, 38, 41, 42], "approach": [35, 38, 41, 42, 145], "return_info": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 69], "tensordictprioritizedreplaybuff": [35, 345], "simplifi": 35, "_weight": [35, 41, 66, 67], "arrai": [35, 40, 66, 87, 91, 107, 113, 136, 199, 200, 203, 204], "update_prior": [35, 66, 67, 324, 349], "36278465": 35, "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 339], "tqdm": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 327], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "td_error": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 262, 263, 265, 266, 267, 268, 273, 275, 278, 280, 282, 288], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "rb_load": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "cursor": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "insert_transform": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 122, 167], "insert": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 69, 70, 78, 79, 81, 82, 122, 131, 167, 168], "set_sampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "set_storag": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "set_writ": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69], "prompt_rindex": [36, 37, 40], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256], "text": [37, 40, 43, 56, 199, 200, 203, 204, 245], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 188, 193, 220], "pad_token": [37, 43], "eos_token": 37, "enough": 37, "inde": [37, 134], "roundrobinwrit": [38, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60], "Not": [38, 83, 84, 96, 97], "depth": [38, 87, 91, 103, 107, 110, 113, 185, 186, 187, 189, 190, 191, 192, 197, 198, 207, 209, 212, 213, 217, 218, 239, 347], "_pytre": 38, "tree_map": 38, "did": [38, 172, 296], "assert0": 38, "ref_model": 40, "reward_model": [40, 255], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 143], "kl": [40, 143, 270, 274], "penalti": [40, 274], "strai": 40, "calcul": [40, 154, 199, 259, 261, 265, 274, 277, 279], "gpt2rewardmodel": 40, "get_dataload": [40, 345], "promptdata": [40, 345], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 61], "tensorclass_typ": [40, 61], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": 40, "reward_kl": [40, 143], "reward_raw": 40, "sample_log_prob": [40, 234, 235, 236, 246, 250, 252, 277, 336], "create_rollout_td": 40, "log_prob": [40, 194, 210, 211, 219, 229, 250], "log_ratio": 40, "replic": 40, "rindex": 40, "eo": 40, "term": [40, 143, 203, 204, 214, 215, 258, 259, 267, 329], "generation_config": 40, "generationconfig": 40, "ti": [40, 299, 300, 301, 302, 304, 305, 306, 307], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 53, 66, 263, 266, 267, 268, 273, 275, 278, 280, 282, 288], "reduct": [41, 66, 67, 78, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 276, 277, 278, 279, 280, 282], "prioritizedreplaybuff": [41, 345], "min": [41, 66, 67, 78, 227, 228, 229, 238, 245, 260, 261, 267, 276, 278, 280], "median": [41, 66, 67, 78, 96, 97, 246, 250], "include_info": [41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60], "kw": [42, 53, 70, 79], "huggingfac": [43, 55, 60, 243], "co": [43, 136], "doc": [43, 93, 96, 97, 106, 110, 317], "pad_trunc": 43, "am": 43, "me": 43, "reassur": 43, "ok": 43, "describ": [44, 128, 166, 227, 228, 263, 313, 348], "tokenizer_fn": 45, "tensordicttoken": [45, 345], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "elementwis": 45, "vocabulari": 45, "loader": 45, "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "batch_dim": [45, 343], "valid_mask_kei": 45, "conver": 45, "batch_dimens": 45, "filder": 45, "from_dict": 45, "data_memmap": 45, "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "dataset_id": [52, 54, 55, 56, 58, 59, 60], "num_proc": 52, "slice_len": [52, 58, 67, 74, 75, 310], "strict_len": 52, "arari": 52, "2600": 52, "million": 52, "consequ": [52, 203], "50x10": 52, "available_dataset": [52, 53, 54, 55, 56, 57, 58, 59, 60, 74, 75], "ataridqn": 52, "immutabledatasetwrit": [52, 53, 54, 55, 56, 57, 58, 59, 60], "greater": [52, 67, 74, 75, 201, 205], "shorter": [52, 58, 67, 74, 75], "Be": [52, 58, 67, 74, 75], "game_nam": 52, "krull": 52, "1d": [52, 67, 74, 75, 78], "cheapli": 52, "nontensordata": [52, 58, 308], "invalid_rang": 52, "999998": 52, "999999": 52, "add_count": 52, "84": [52, 153], "valueestim": [52, 259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 284, 288, 345, 348], "convolut": [52, 186, 187, 189, 190, 212, 225], "2657628": 52, "2657629": 52, "2657630": 52, "2657631": 52, "2657632": 52, "2657633": 52, "2657634": 52, "2657635": 52, "2657636": 52, "2657637": 52, "2657638": 52, "2657639": 52, "2657640": 52, "2657641": 52, "2657642": 52, "2657643": 52, "2657644": 52, "2657645": 52, "2657646": 52, "2657647": 52, "2657648": 52, "2657649": 52, "2657650": 52, "2657651": 52, "2657652": 52, "2657653": 52, "2657654": 52, "2657655": 52, "2657656": 52, "2657657": 52, "2657658": 52, "2657659": 52, "2657660": 52, "2657661": 52, "2657662": 52, "2657663": 52, "2657664": 52, "2657665": 52, "2657666": 52, "2657667": 52, "2657668": 52, "2657669": 52, "2657670": 52, "2657671": 52, "2657672": 52, "2657673": 52, "2657674": 52, "2657675": 52, "2657676": 52, "2657677": 52, "2657678": 52, "2657679": 52, "2657680": 52, "2657681": 52, "2657682": 52, "2657683": 52, "2657684": 52, "2657685": 52, "2657686": 52, "2657687": 52, "2657688": 52, "2657689": 52, "2657690": 52, "2657691": 52, "1995687": 52, "1995688": 52, "1995689": 52, "1995690": 52, "1995691": 52, "1995692": 52, "1995693": 52, "1995694": 52, "1995695": 52, "1995696": 52, "1995697": 52, "1995698": 52, "1995699": 52, "1995700": 52, "1995701": 52, "1995702": 52, "1995703": 52, "1995704": 52, "1995705": 52, "1995706": 52, "1995707": 52, "1995708": 52, "1995709": 52, "1995710": 52, "1995711": 52, "1995712": 52, "1995713": 52, "1995714": 52, "1995715": 52, "1995716": 52, "1995717": 52, "1995718": 52, "1995719": 52, "1995720": 52, "1995721": 52, "1995722": 52, "1995723": 52, "1995724": 52, "1995725": 52, "1995726": 52, "1995727": 52, "1995728": 52, "1995729": 52, "1995730": 52, "1995731": 52, "1995732": 52, "1995733": 52, "1995734": 52, "1995735": 52, "1995736": 52, "1995737": 52, "1995738": 52, "1995739": 52, "1995740": 52, "1995741": 52, "1995742": 52, "1995743": 52, "1995744": 52, "1995745": 52, "1995746": 52, "1995747": 52, "1995748": 52, "1995749": 52, "1995750": 52, "left": [52, 54, 58, 124, 131, 132, 133, 137, 143, 149, 151, 152, 158, 161, 164, 166, 169, 171, 175, 212, 241], "untouch": [52, 58, 124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 175], "_max_run": 52, "dataset_asterix": 52, "asterix": 52, "dataset_pong": 52, "sample_from_al": [52, 69, 72], "buffer_id": [52, 72, 77], "hidden": [52, 107, 113, 126, 189, 197, 199, 200, 201, 203, 204, 205, 206, 217, 218, 223, 224, 234, 235, 236, 238, 249, 252, 261, 274, 277, 347], "exclusive_field": 52, "stack_dim": 52, "data_path": [52, 53, 54, 55, 56, 57, 58, 59, 60], "data_path_root": [52, 53, 54, 55, 56, 57, 58, 59, 60], "delet": [52, 53, 54, 55, 56, 57, 58, 59, 60, 128, 317], "chunksiz": [52, 53, 54, 55, 56, 57, 58, 59, 60], "pool": [52, 53, 54, 55, 56, 57, 58, 59, 60, 164], "max_tasks_per_child": [52, 53, 54, 55, 56, 57, 58, 59, 60], "worker_thread": [52, 53, 54, 55, 56, 57, 58, 59, 60], "index_with_gener": [52, 53, 54, 55, 56, 57, 58, 59, 60], "pbar": [52, 53, 54, 55, 56, 57, 58, 59, 60], "dest": [52, 53, 54, 55, 56, 57, 58, 59, 60, 149, 169, 171, 249], "num_fram": [52, 53, 54, 55, 56, 57, 58, 59, 60], "unitari": [52, 53, 54, 55, 56, 57, 58, 59, 60], "minariexperiencereplai": [52, 53, 54, 55, 57, 58, 59, 60], "1000000": [52, 53, 54, 55, 56, 57, 58, 59, 60], "distance_from_origin": [52, 53, 54, 55, 56, 57, 58, 59, 60], "forward_reward": [52, 53, 54, 55, 56, 57, 58, 59, 60], "qpo": [52, 53, 54, 55, 56, 57, 58, 59, 60], "qvel": [52, 53, 54, 55, 56, 57, 58, 59, 60], "reward_ctrl": [52, 53, 54, 55, 56, 57, 58, 59, 60, 107], "reward_forward": [52, 53, 54, 55, 56, 57, 58, 59, 60], "reward_surv": [52, 53, 54, 55, 56, 57, 58, 59, 60], "x_posit": [52, 53, 54, 55, 56, 57, 58, 59, 60, 107], "x_veloc": [52, 53, 54, 55, 56, 57, 58, 59, 60, 107], "y_posit": [52, 53, 54, 55, 56, 57, 58, 59, 60], "y_veloc": [52, 53, 54, 55, 56, 57, 58, 59, 60], "achieved_go": [52, 53, 54, 55, 56, 57, 58, 59, 60], "desired_go": [52, 53, 54, 55, 56, 57, 58, 59, 60], "27": [52, 53, 54, 55, 56, 57, 58, 59, 60, 83, 84, 107, 113], "_collate_id": [52, 53, 54, 55, 56, 57, 58, 59, 60], "0x120e21dc0": [52, 53, 54, 55, 56, 57, 58, 59, 60], "cattensor": [52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 91, 107, 113, 336], "cat_tensor": [52, 53, 54, 55, 56, 57, 58, 59, 60], "cat_next_tensor": [52, 53, 54, 55, 56, 57, 58, 59, 60], "new_storag": [52, 53, 54, 55, 56, 57, 58, 59, 60], "31": [52, 53, 54, 55, 56, 57, 58, 59, 60, 96, 97], "full_storag": [52, 53, 54, 55, 56, 57, 58, 59, 60], "0x168406fc0": [52, 53, 54, 55, 56, 57, 58, 59, 60], "from_env": 54, "use_truncated_as_don": 54, "direct_download": 54, "terminate_on_end": 54, "env_kwarg": [54, 59, 60, 124, 341, 342], "reconstruct": [54, 74, 75, 270], "get_dataset": 54, "qlearning_dataset": 54, "fewer": 54, "possess": 54, "unexpectedli": 54, "traj_split": 54, "observationnorm": [54, 173, 343], "maze2d": 54, "umaz": 54, "loc": [54, 87, 91, 107, 113, 143, 145, 156, 202, 216, 228, 229, 234, 235, 236, 246, 250, 252, 259, 260, 273, 277, 278, 279, 280, 331, 336, 343, 347], "gen": 55, "dgrl": 55, "accompani": [55, 124, 161], "gap": 55, "2312": 55, "05742": 55, "gen_dgrl": 55, "procgen": 55, "bigfish": 55, "bossfight": 55, "categori": [55, 347, 349], "1m_e": 55, "1m_": 55, "comma": 55, "npy": 55, "extract": [55, 123, 243], "mmap": [55, 59, 60], "minut": 55, "internet": [55, 60], "connect": [55, 60], "minari": 56, "websit": [56, 58], "currenrtli": 56, "minari_data": 56, "door": 56, "torchrl_logg": 56, "28": [56, 212], "door_body_po": 56, "dua": 57, "graff": 57, "2017": 57, "uci": 57, "archiv": 57, "ic": 57, "edu": 57, "ml": 57, "sklearn": [57, 106], "adult_num": [57, 106], "adult_onehot": [57, 106], "mushroom_num": [57, 106], "mushroom_onehot": [57, 106], "covertyp": [57, 106], "shuttl": [57, 106], "magic": [57, 106], "shuffl": [58, 73, 75], "embodi": 58, "22": [58, 74, 75, 172], "institut": 58, "demonstr": 58, "527": 58, "skill": 58, "160266": 58, "googl": [58, 59, 83, 84, 101, 102], "open_x_embodi": 58, "2310": [58, 110], "08864": 58, "language_instruct": 58, "get_non_tensor": 58, "neither": 58, "nor": 58, "insuffici": 58, "chosen": [58, 114, 115, 162, 163, 221, 222, 230, 248, 310, 336, 347], "openx": 58, "__will": 58, "change__": 58, "randomli": [58, 73, 144, 145, 163, 241, 246, 250], "crop": [58, 129, 150, 310], "modal": 58, "cmu_stretch": [58, 310], "is_init": [58, 60, 126, 142, 201, 205, 244, 245], "language_embed": 58, "512": [58, 198], "lift": 58, "green": 58, "garbag": 58, "lid": 58, "roboset": 59, "h5": [59, 60], "roboh": [59, 110], "concis": 59, "75": 59, "totensor": 60, "image_s": 60, "v": [60, 173, 199, 200, 203, 204, 234, 266, 273, 280, 347], "npz": 60, "2206": [60, 104, 105], "04779": [60, 260, 265], "vd4rl": 60, "squar": [60, 129, 202, 228, 229, 310], "rectangular": [60, 186, 187], "walker_walk": 60, "64px": 60, "height": [60, 129, 153], "veloc": [60, 85, 86, 87, 91, 107, 113, 127], "infinit": [61, 101, 102, 114, 115], "three": [61, 347, 349], "block": [61, 62, 82, 347], "pairwisedataset": [61, 345], "256": [61, 101, 102, 193], "immut": [62, 87, 91, 107, 113, 152, 167], "piec": [62, 70, 79, 81, 82], "scratch_dir": 63, "sent": [63, 64, 80, 173], "mistak": [63, 64, 80], "myclass": [63, 64, 80], "foo": [63, 64, 80, 238], "bar": [63, 64, 80, 238, 320, 321, 323, 327, 349], "attach": [63, 64, 65, 76, 77, 80], "entiti": [63, 64, 65, 76, 77, 80], "zero_": [64, 80, 180], "max_capac": [66, 67], "data_0": 66, "data_1": 66, "smoothen": 66, "tdrb": 66, "pack": [66, 199, 203], "end_kei": [67, 74, 75], "cache_valu": [67, 74, 75], "readili": [67, 74, 75], "conjunct": [67, 74, 75], "Will": [67, 74, 87, 104, 310], "buffer0": [67, 74], "immutablewrit": [67, 74], "buffer1": [67, 74], "other_sampl": [67, 74], "short": [67, 74, 75, 83, 84, 96, 97, 107, 176, 203, 204], "unsqueez": [67, 121, 124, 127, 128, 165, 168, 206], "tolist": 67, "120110917137936e": 67, "06": [67, 194, 227], "uniformli": [68, 275], "storageensembl": [69, 72], "samplerensembl": 69, "writerensembl": [69, 77], "num_buffer_sampl": [69, 72], "ensembl": [69, 72, 77, 82, 249, 278], "forbidden": 69, "collat": 69, "0x13a2ef430": 69, "0x13a2f9310": 69, "interpol": [69, 153], "interpolationmod": 69, "bilinear": [69, 153], "0x13a2f9220": 69, "0x13a2f9f70": 69, "0x13a2d9b50": 69, "0x13a2f95b0": 69, "0x128648260": 69, "roundrobin": [70, 79], "incomplet": [73, 75], "fresh": 73, "haven": 73, "remain": [73, 126, 133, 134, 143, 162, 215], "draw": [73, 241], "slicesamplerwithoutreplac": 74, "320": [74, 75, 85, 86], "700": [74, 75], "dataid": [74, 75], "__len__": 76, "rank_kei": 78, "rank": [78, 185], "samplerwithoutreplac": 78, "get_insert_index": 78, "convers": [83, 84, 96, 97, 348], "2106": [83, 84, 264], "13281": [83, 84], "categorical_action_encod": [83, 84, 87, 90, 91, 92, 93, 96, 97, 104, 105, 107, 110, 113], "frame_skip": [83, 84, 85, 86, 90, 91, 92, 93, 96, 97, 98, 99, 104, 105, 110, 140, 320, 323, 330, 349], "repeat": [83, 84, 85, 86, 90, 92, 93, 96, 97, 104, 105, 110, 185], "allow_done_after_reset": [83, 84, 85, 86, 87, 90, 92, 93, 96, 97, 104, 105, 110], "toler": [83, 84, 85, 86, 90, 92, 93, 96, 97, 104, 105, 110, 194, 227], "availalb": [83, 84, 96, 97], "ant": [83, 84, 87, 91, 94, 107, 113], "87": [83, 84], "acrobot": [83, 84, 85, 86], "advant": [83, 84, 96, 97], "timer": [83, 84, 96, 97], "timeit": [83, 84, 96, 97], "310": [83, 84], "ms": [83, 84, 96, 97], "268": [83, 84], "433": [83, 84], "80": [83, 84], "213": [83, 84], "8605": [83, 84], "pipelineenv": 84, "get_environ": 84, "dm_control": [85, 86], "2006": [85, 86, 260, 265], "12983": [85, 86], "task_nam": [85, 87, 91, 107, 113], "pixels_onli": [85, 86, 90, 92, 93, 110], "cheetah": [85, 86, 87, 91, 107, 113, 310], "240": [85, 86], "swingup": [85, 86], "swingup_spars": [85, 86], "ball_in_cup": [85, 86], "catch": [85, 86], "balance_spars": [85, 86], "three_pol": [85, 86], "two_pol": [85, 86], "finger": [85, 86], "turn_easi": [85, 86], "turn_hard": [85, 86], "fish": [85, 86], "upright": [85, 86], "swim": [85, 86], "hopper": [85, 86], "hop": [85, 86], "humanoid": [85, 86, 107, 113], "walk": [85, 86, 107, 113], "run_pure_st": [85, 86], "bring_bal": [85, 86], "bring_peg": [85, 86], "insert_bal": [85, 86], "insert_peg": [85, 86], "point_mass": [85, 86], "reacher": [85, 86], "swimmer": [85, 86], "swimmer6": [85, 86], "swimmer15": [85, 86], "walker": [85, 86], "dog": [85, 86], "trot": [85, 86], "humanoid_cmu": [85, 86], "lqr": [85, 86], "lqr_2_1": [85, 86], "lqr_6_2": [85, 86], "quadrup": [85, 86], "escap": [85, 86], "stacker": [85, 86], "stack_2": [85, 86], "stack_4": [85, 86], "deviceless": 87, "run_type_check": [87, 103], "counterenv": 87, "unboundedcontinuoustensorspec": [87, 91, 103, 107, 113, 121, 124, 132, 135, 151, 163, 180, 185, 209, 233, 249, 252, 254, 279, 345], "continuousbox": [87, 91, 107, 113, 180], "sort": [87, 91, 107, 113, 128, 245], "another_act": [87, 91, 107, 113], "mutabl": [87, 91, 107, 113], "_callabletransform": [87, 91, 107, 113], "batch_lock": [87, 89, 91, 107, 113, 124, 163, 167], "done_keys_group": [87, 91, 107, 113], "outer": [87, 91, 107, 113, 349], "another_don": [87, 91, 107, 113], "empty_cach": [87, 91, 107, 113, 167], "fake_tensordict": [87, 91, 107, 113], "fake": [87, 91, 107, 113], "afterward": [87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256], "silent": [87, 91, 107, 113, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 216, 217, 218, 220, 223, 224, 226, 231, 237, 238, 240, 241, 244, 245, 248, 253, 256], "braxenv": [87, 91, 107, 113, 152, 345], "envnam": [87, 91, 107, 113], "pipeline_st": [87, 91, 107, 113], "attibut": [87, 91, 107, 113], "maybe_reset": [87, 91, 107, 113], "speak": [87, 91, 107, 113], "rand_act": [87, 91, 100, 107, 108, 109, 113, 124], "register_gym": [87, 91, 107, 113], "entry_point": [87, 91, 107, 113], "info_kei": [87, 91, 107, 113], "reward_threshold": [87, 91, 107, 113], "nondeterminist": [87, 91, 107, 113], "max_episode_step": [87, 90, 91, 92, 107, 113], "order_enforc": [87, 91, 107, 113], "autoreset": [87, 91, 107, 113], "disable_env_check": [87, 90, 91, 104, 105, 107, 113], "apply_api_compat": [87, 91, 107, 113], "nasium": [87, 91, 107, 113], "scope": [87, 91, 107, 113], "dmcontrolenv": [87, 91, 107, 113, 310, 345], "dmc": [87, 91, 107, 113], "removeemptyspec": [87, 91, 107, 113], "threshold": [87, 91, 107, 113, 241, 260, 261], "learnt": [87, 91, 107, 113, 339], "knowledg": [87, 91, 107, 113], "checker": [87, 90, 91, 104, 105, 107, 113], "stepapicompat": [87, 91, 107, 113], "concept": [87, 91, 107, 113], "deem": [87, 91, 101, 102, 107, 113, 114, 115], "envgym": [87, 91, 107, 113], "0855": [87, 91, 107, 113], "0215": [87, 91, 107, 113], "0881": [87, 91, 107, 113], "0412": [87, 91, 107, 113], "1101": [87, 91, 107, 113], "0080": [87, 91, 107, 113], "0254": [87, 91, 107, 113], "0424": [87, 91, 107, 113], "9609e": [87, 91, 107, 113], "9776e": [87, 91, 107, 113], "04": [87, 91, 95, 107, 113], "6347e": [87, 91, 107, 113], "3842e": [87, 91, 107, 113], "5338e": [87, 91, 107, 113], "3064e": [87, 91, 107, 113], "0381e": [87, 91, 107, 113], "6656e": [87, 91, 107, 113], "05": [87, 91, 107, 113], "0204e": [87, 91, 107, 113], "action_spac": [87, 91, 107, 113, 136, 196, 222, 239, 240, 247, 248, 259, 260, 262, 263, 265, 266, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288], "0833": [87, 91, 107, 113], "0275": [87, 91, 107, 113], "0612": [87, 91, 107, 113], "0770": [87, 91, 107, 113], "1256": [87, 91, 107, 113], "0082": [87, 91, 107, 113], "0186": [87, 91, 107, 113], "0476": [87, 91, 107, 113], "2221": [87, 91, 107, 113], "2256": [87, 91, 107, 113], "5930": [87, 91, 107, 113], "6937": [87, 91, 107, 113], "5865": [87, 91, 107, 113], "5479": [87, 91, 107, 113], "0187": [87, 91, 107, 113], "6825": [87, 91, 107, 113], "5224": [87, 91, 107, 113], "0018": [87, 91, 107, 113], "1005": [87, 91, 107, 113], "0335": [87, 91, 107, 113], "0268": [87, 91, 107, 113], "0133": [87, 91, 107, 113], "0627": [87, 91, 107, 113], "0074": [87, 91, 107, 113], "0488": [87, 91, 107, 113], "0353": [87, 91, 107, 113], "0075": [87, 91, 107, 113], "0069": [87, 91, 107, 113], "0098": [87, 91, 107, 113], "0058": [87, 91, 107, 113], "0033": [87, 91, 107, 113], "0157": [87, 91, 107, 113], "0004": [87, 91, 107, 113], "0381": [87, 91, 107, 113], "0452": [87, 91, 107, 113], "11355747": [87, 91, 107, 113], "04257728": [87, 91, 107, 113], "00408397": [87, 91, 107, 113], "04155852": [87, 91, 107, 113], "0389733": [87, 91, 107, 113], "01409826": [87, 91, 107, 113], "0978704": [87, 91, 107, 113], "08808327": [87, 91, 107, 113], "03970837": [87, 91, 107, 113], "00535434": [87, 91, 107, 113], "02353762": [87, 91, 107, 113], "05116226": [87, 91, 107, 113], "02788907": [87, 91, 107, 113], "06848346": [87, 91, 107, 113], "05154399": [87, 91, 107, 113], "0371798": [87, 91, 107, 113], "05128025": [87, 91, 107, 113], "dydact": [87, 91, 107, 113], "gym_env": [87, 91, 107, 113], "reset_kei": [87, 91, 107, 113, 127, 157, 162, 163, 164], "multitask": [87, 91, 107, 113], "multiag": [87, 91, 100, 107, 108, 109, 113, 184, 213, 221, 230, 288], "another_reward": [87, 91, 107, 113], "auto_cast_to_devic": [87, 91, 107, 113], "return_contigu": [87, 91, 107, 113, 176], "soon": [87, 91, 107, 108, 109, 113], "__sort": [87, 91, 107, 113], "as__": [87, 91, 107, 113], "normal": [87, 91, 107, 113, 145, 173, 186, 187, 202, 207, 210, 211, 216, 228, 229, 237, 246, 250, 261, 274, 277, 323, 325, 343, 347, 349], "argmaxmodul": [87, 91, 107, 113], "n_ob": [87, 91, 107, 113, 143, 244, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282], "n_act": [87, 91, 107, 113, 143, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282], "ourselv": [87, 91, 107, 113], "emul": [87, 91, 107, 113], "epoch": [87, 91, 107, 113, 327], "input_td": [87, 91, 107, 113], "rollout_td": [87, 91, 107, 113], "concomitt": [87, 91, 107, 113], "prevail": [87, 91, 107, 113, 128, 157, 184], "creator": [88, 332, 333, 341, 342, 343], "substitut": [88, 162, 173], "vecnorm": [88, 343], "env_creat": 88, "test_env1": 88, "_td": 88, "observation_count": 88, "test_env2": 88, "sleep": 88, "ps": 88, "p1": 88, "p2": 88, "9934": 88, "env_str": 89, "device_map": 89, "accross": [90, 92], "registri": 90, "asyncvectorenv": 90, "involv": [90, 92, 93, 101, 102, 110, 124], "pixel_observ": [90, 92, 93, 110], "pixelobservationwrapp": [90, 92, 93, 110], "adventur": [90, 92], "airraid": [90, 92], "alien": [90, 92], "time_limit": 90, "timelimit": [90, 101, 102, 114, 115], "default_info_dict_read": [90, 91, 92, 107], "reader": [90, 91, 92, 107], "set_info_dict_read": [90, 91, 92, 107], "info_dict": [90, 91, 92, 107], "auto_register_info_dict": [90, 91, 92, 107], "info_dict_read": [91, 107], "succe": [91, 107], "halfcheetah": [91, 107, 153, 336], "register_info_dict": 91, "read_act": 91, "read_don": 91, "nonsens": 91, "fallback": 91, "broken": [91, 176], "read_ob": 91, "dictat": [91, 246, 250, 277], "read_reward": 91, "baseinfodictread": 91, "hoc": [91, 107], "dict_read": 91, "my_info_kei": 91, "some_env": 91, "vecenv": 92, "vectorenv": 92, "secur": 93, "habitat3": 93, "ai": 93, "habitatrenderpick": 93, "isaacgym": [94, 95], "isaacgymwrapp": [94, 345], "isaacgymenv": [95, 345], "webpag": 95, "isaac": 95, "essenc": 95, "instadeepai": [96, 97], "2306": [96, 97], "09884": [96, 97], "snake": [96, 97], "grid": [96, 97, 310], "bodi": [96, 97], "body_st": [96, 97], "fruit_posit": [96, 97], "col": [96, 97], "row": [96, 97], "head_posit": [96, 97], "tail": [96, 97], "game2048": [96, 97], "maze": [96, 97], "cleaner": [96, 97], "cvrp": [96, 97], "multicvrp": [96, 97], "minesweep": [96, 97], "rubikscub": [96, 97], "knapsack": [96, 97], "sudoku": [96, 97], "tsp": [96, 97], "connector": [96, 97], "v2": [96, 97, 111, 112, 285, 299, 300, 301, 302, 304, 305, 306, 307], "mmst": [96, 97], "graphcolor": [96, 97], "partli": [96, 97], "scrambl": [96, 97], "robotwarehous": [96, 97], "tetri": [96, 97], "binpack": [96, 97], "jobshop": [96, 97], "0x1fca91910": 96, "122": [96, 97], "0x1ff9baee0": 96, "134": [96, 97], "0x1ff9ba7c0": 96, "172": [96, 97], "rubric": [97, 145, 252], "mo": [98, 99], "minecart": [98, 99], "mo_gym": 99, "qualnam": 100, "leverag": [100, 108, 109], "neural": [100, 108, 109, 186, 187, 225, 249, 347], "group_map": [100, 101, 102, 108, 109, 114, 115, 116], "constructiuon": [100, 108, 109], "premad": [100, 101, 102, 108, 109, 114, 115, 288], "all_in_one_group": [100, 116], "agent_0": [100, 108, 109, 116], "agent_1": [100, 108, 109, 116], "agent_2": [100, 108, 109, 116], "agent_3": 100, "one_group_per_ag": [100, 108, 109], "meltingpot": [101, 102], "2211": [101, 102], "13746": [101, 102], "melt": [101, 102], "pot": [101, 102], "novel": [101, 102], "social": [101, 102], "familiar": [101, 102], "unfamiliar": [101, 102], "broad": [101, 102], "cooper": [101, 102], "decept": [101, 102], "reciproc": [101, 102], "trust": [101, 102, 205], "stubborn": [101, 102], "substrat": [101, 102], "ml_collect": 101, "config_dict": 101, "configdict": 101, "horizon": [101, 102, 114, 115, 185, 209], "categorical_act": [101, 102, 108, 109, 111, 112, 114, 115], "marlgroupmaptyp": [101, 102, 108, 109, 114, 115, 116, 345], "agent_nam": [101, 102, 114, 115, 116], "agent_names_to_indices_map": [101, 102, 114, 115], "env_torchrl": [101, 102], "commons_harvest__open": [101, 102], "rgb": [101, 102], "144": [101, 102], "192": [101, 102], "collective_reward": [101, 102], "ready_to_shoot": [101, 102], "88": [101, 102, 111, 112], "substrate_config": 102, "get_config": 102, "mp_env": 102, "build_from_config": 102, "default_player_rol": 102, "environn": 103, "mymbenv": [103, 185, 209], "world_model": [103, 185, 209, 270], "hidden_observ": [103, 185, 209], "mlp": [103, 185, 186, 187, 189, 190, 191, 192, 198, 201, 205, 206, 209, 213, 234, 239, 263, 265, 336, 347], "worldmodelwrapp": [103, 185, 209], "activation_class": [103, 185, 186, 187, 189, 190, 191, 192, 197, 198, 207, 209, 212, 213], "relu": [103, 185, 193, 209, 216, 258], "activate_last_lay": [103, 185, 192, 207, 209], "sail": [104, 105], "sg": [104, 105], "10558": [104, 105], "readthedoc": 104, "en": 104, "python_interfac": 104, "envpoolmixin": 105, "env_bas": 105, "task_id": 105, "env_typ": 105, "gym_reset_return_info": 105, "envpool_env": 105, "www": [106, 210, 211], "fetch_openml": 106, "106": 106, "my_env_fun": [107, 113], "custom_attribute_list": [107, 113], "custom_attribut": [107, 113], "custom_method_list": [107, 113], "custom_method": [107, 113], "deploi": [107, 113, 124], "slight": [107, 113], "share_individual_td": [107, 113], "shared_memori": [107, 113], "policy_proof": [107, 113], "ll": [107, 113, 199, 200, 203, 204], "serial_for_singl": [107, 113], "list_of_kwarg": [107, 113], "com_veloc": [107, 113], "extrem": [107, 113, 259, 261, 274, 277, 279], "head_height": [107, 113], "joint_angl": [107, 113], "torso_vert": [107, 113], "stringent": 107, "inter": 107, "penv": 107, "tensordictprim": 107, "reward_run": 107, "env_fix": 107, "drastic": 107, "influenc": 107, "thumb": 107, "suppos": [107, 323, 349], "myenv": [107, 124, 132, 135], "pipe": 107, "update_kwarg": [107, 113], "pettingzoo": [108, 109], "pet": [108, 109], "zoo": [108, 109], "__": [108, 109], "aecenv": [108, 109], "use_mask": [108, 109], "dead": [108, 109], "done_on_ani": [108, 109], "compulsori": [108, 109], "adversary_0": [108, 109], "adversari": [108, 109], "vectoris": [108, 109, 199, 200, 203, 204], "sisl": 108, "multiwalker_v9": 108, "return_st": [108, 109], "aec": [108, 109], "n_piston": [108, 109], "pistonball_v6": [108, 109], "piston": [108, 109], "piston_0": [108, 109], "piston_1": [108, 109], "piston_20": [108, 109], "tictactoe_v3": [108, 109], "player": [108, 109], "player_1": [108, 109], "player_2": [108, 109], "butterfli": 109, "parallel_env": 109, "vikashplu": 110, "wiki": 110, "06828": 110, "from_depth": 110, "smacv2": [111, 112], "starcraft": [111, 112], "challeng": [111, 112], "10gen_terran": [111, 112], "10gen_zerg": [111, 112], "10gen_protoss": [111, 112], "3m": [111, 112], "8m": [111, 112], "25m": [111, 112], "5m_vs_6m": [111, 112], "8m_vs_9m": [111, 112], "10m_vs_11m": [111, 112], "27m_vs_30m": [111, 112], "mmm": [111, 112], "mmm2": [111, 112], "2s3z": [111, 112], "3s5z": [111, 112], "3s5z_vs_3s6z": [111, 112], "3s_vs_3z": [111, 112], "3s_vs_4z": [111, 112], "3s_vs_5z": [111, 112], "1c3s5z": [111, 112], "2m_vs_1z": [111, 112], "corridor": [111, 112], "6h_vs_8z": [111, 112], "2s_vs_1sc": [111, 112], "so_many_banel": [111, 112], "bane_vs_ban": [111, 112], "2c_vs_64zg": [111, 112], "old": [111, 112, 274], "smac": [111, 112], "map_nam": [111, 112], "176": [111, 112], "battle_won": [111, 112], "dead_al": [111, 112], "dead_enemi": [111, 112], "episode_limit": [111, 112], "322": [111, 112], "Or": [111, 112, 212], "procedur": [111, 112], "distribution_config": [111, 112], "n_unit": [111, 112], "n_enemi": [111, 112], "team_gen": [111, 112], "dist_typ": [111, 112], "weighted_team": [111, 112], "unit_typ": [111, 112], "marin": [111, 112], "maraud": [111, 112], "medivac": [111, 112], "exception_unit_typ": [111, 112], "start_posit": [111, 112], "surrounded_and_reflect": [111, 112], "map_x": [111, 112], "map_i": [111, 112], "capability_config": [111, 112], "131": [111, 112], "starcraft2env": 112, "proroklab": [114, 115], "vectorizedmultiagentsimul": [114, 115], "2207": [114, 115], "03530": [114, 115], "basescenario": 114, "descript": [114, 123], "perfrom": [114, 115], "defaultt": 114, "continuous_act": [114, 115, 308], "repositiori": 114, "sparsiti": 114, "unbatched_action_spec": [114, 115], "unbatched_observation_spec": [114, 115], "unbatched_reward_spec": [114, 115], "het_spec": [114, 115], "het_specs_map": [114, 115], "flock": [114, 115, 308], "agent_collision_rew": [114, 115], "agent_distance_rew": [114, 115], "ca": 116, "environment4": 116, "get_group_map": 116, "sumbodul": 117, "model_bas": [118, 119, 185, 209], "out_keys_inv": [118, 130, 132, 133, 135, 145, 146, 147, 151, 152, 159, 166], "decod": [118, 217], "model_based_env": [118, 269], "dreamerenv": [118, 269, 345], "model_based_env_ev": 118, "masker": 121, "tensor_spec": [121, 184, 266, 267, 277, 279], "binarydiscretetensorspec": [121, 263, 266, 267, 288, 345], "maskedenv": 121, "ones_lik": 121, "scatter": 121, "_set_se": [121, 124, 132, 135, 151], "fill_float": 123, "fill_int": 123, "fill_bool": 123, "someenvclass": 123, "autoresetenv": 123, "argumet": 123, "fooenv": 123, "sign": [123, 159, 290], "envtyp": 123, "reshape_fn": 124, "reset_func": 124, "environmt": 124, "request": [124, 150], "tensordict_batch_s": 124, "els": [124, 199, 200, 203, 204, 217, 347, 349], "tensordict_reset": 124, "transform_env_batch_s": [124, 131, 166, 175], "transform_input_spec": [124, 131, 132, 133, 134, 145, 147, 151, 152, 157, 161, 162, 163, 166, 168, 170, 175], "transform_output_spec": [124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 175], "transform_observation_spec": [124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 141, 142, 143, 145, 147, 151, 152, 153, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 175], "transform_reward_spec": [124, 125, 130, 131, 132, 133, 137, 143, 151, 152, 155, 156, 157, 158, 159, 161, 166, 168, 175], "transformfull_done_spec": [124, 131, 132, 133, 137, 143, 151, 152, 158, 161, 166, 175], "biner": 125, "burn_in": 126, "burn": 126, "date": [126, 313], "retur": 126, "burnt": 126, "gru_modul": [126, 201], "input_s": [126, 199, 200, 201, 203, 204, 205, 206], "hidden_s": [126, 199, 200, 201, 203, 204, 205, 206], "set_recurrent_mod": [126, 201, 205], "burn_in_transform": 126, "gru": [126, 200, 201], "num_lay": [126, 199, 201, 203, 205, 217, 218], "86": 126, "3008": 126, "0344": 126, "padding_valu": [127, 210, 211], "as_invers": 127, "movement": 127, "pdf": [127, 188, 189, 190, 191, 192, 196, 240, 245, 268, 278, 281, 290, 295, 303, 336], "1312": 127, "5602": 127, "unsqueezetransform": 127, "consumpt": 127, "followin": 127, "pictur": 127, "pixels_trsf": 127, "grayscal": 127, "data_exclud": 127, "del_kei": [128, 169], "unsqueeze_if_oor": 128, "observation_posit": 128, "observation_veloc": 128, "key1": [128, 318, 326], "key2": [128, 318, 326], "center": [129, 310], "width": [129, 153], "scalar": [130, 155, 190, 192, 214, 215, 237, 241, 242, 245, 256, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 288, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 347], "permit": [130, 139, 168, 259, 261, 274, 277, 279], "rewardsc": [131, 167], "rewardclip": 131, "transformed_env": [131, 166, 167], "transform_env_devic": [131, 133, 166, 175], "dtype_in": 132, "dtype_out": 132, "scan": [132, 135, 251, 252], "resp": [132, 135], "not_transform": [132, 135], "constructedw": [132, 135], "orig_devic": 133, "unspecifi": 133, "transform_done_spec": [133, 166, 175], "num_actions_effect": 134, "max_act": 134, "include_forward": 134, "num_act": [134, 267], "action_out": 134, "_call": [134, 139], "eol_kei": 136, "lives_kei": 136, "eol_attribut": 136, "unwrap": 136, "breakout": 136, "210": [136, 147], "160": [136, 147], "eol_transform": 136, "eol": 136, "dqnloss": [136, 259, 260, 262, 265, 267, 268, 269, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 288, 334, 345, 348], "register_kei": 136, "loss_or_advantag": 136, "lossmodul": [136, 327, 338, 339, 345], "valueestimatorbas": [136, 275, 345], "excluded_kei": 137, "finit": 138, "first_dim": 139, "last_dim": 139, "allow_positive_dim": [139, 168], "th": [139, 168, 199, 203], "frameskip": 139, "repeatedli": 140, "init_kei": [142, 244], "tracker": 142, "coef": 143, "pi_curr": 143, "pi_0": 143, "overfit": 143, "probabilist": [143, 246, 345], "get_dist": [143, 250, 251], "mod": [143, 201, 205, 244, 253], "normalparamextractor": [143, 347], "probabilisticactor": [143, 234, 235, 236, 238, 259, 260, 264, 266, 267, 273, 276, 277, 278, 279, 280, 282, 347], "tanhnorm": [143, 234, 235, 236, 246, 252, 259, 260, 273, 277, 278, 279, 280, 282, 345], "return_log_prob": [143, 234, 235, 236, 246, 250, 252, 279, 347], "apply_": 143, "copy_": 143, "formulat": 143, "diverg": [143, 201, 205, 246, 250, 270, 274], "noop": 144, "trial": 144, "standard_norm": [145, 156], "affin": [145, 156], "layer": [145, 173, 186, 187, 189, 190, 195, 197, 199, 200, 201, 203, 204, 205, 206, 207, 212, 213, 214, 215, 217, 218, 225, 226, 232, 243, 253, 347], "set_default_tensor_typ": 145, "doubletensor": 145, "isclos": 145, "next_ob": [145, 290, 291, 292, 293], "init_stat": 145, "3752e": 145, "5087e": 145, "9294e": 145, "9636": 145, "5608": 145, "6408": 145, "num_it": 145, "reduce_dim": 145, "cat_dim": 145, "keep_dim": 145, "statist": [145, 173, 279, 343], "gaussian": [145, 163, 185, 209, 214, 215, 220, 237], "empir": [145, 185, 209, 246, 250], "3d": [145, 186], "third": [145, 240], "reorder": 147, "in_keys_in": 147, "channel": [147, 165, 212, 217, 218], "r3m": 149, "resnet": [149, 169, 171], "visual": [149, 169, 171, 310], "embed": [149, 169, 170, 171, 189, 221, 233, 234, 235, 236, 249, 254], "ego4d": [149, 169, 171], "univers": [149, 169, 171], "suraj": [149, 169], "nair": [149, 169], "aravind": [149, 169], "rajeswaran": [149, 169], "vikash": [149, 169, 171], "kumar": [149, 169, 171], "chelsea": [149, 169], "finn": [149, 169], "abhinav": [149, 169], "gupta": [149, 169], "2203": [149, 169, 209], "12601": [149, 169], "_init": [149, 169], "snippet": [149, 169], "resnet50": [149, 171], "model_nam": [149, 169, 171, 313], "resnet34": 149, "resnet18": 149, "r3m_vec": 149, "feed": [149, 171, 275, 347], "stack_imag": [149, 171], "tread": [149, 171], "separet": [149, 171], "hub": [149, 171], "resnet50_weight": [149, 171], "imagenet1k_v1": [149, 171], "download_path": [149, 171], "tensor_pixels_kei": [149, 171], "sub_seq_len": 150, "sample_dim": 150, "primarili": 150, "hesit": 150, "robust": 150, "mix": [150, 221, 230, 288], "improp": 150, "dummyenv": 151, "another_oth": 151, "other_reward": 151, "create_copi": 152, "stuff": 152, "newnam": 152, "r2g": 154, "reward_to_go": 154, "bernoulli_": 154, "9010": 154, "9404": [154, 296], "9701": [154, 296], "9900": [154, 296], "0000": [154, 164, 241, 242, 253, 296], "crash": 154, "clamp_min": 155, "clamp_max": 155, "clip_min": 155, "clip_max": 155, "episode_": 157, "reward1": 157, "reward2": 157, "episode_reward": 157, "keep_reward": 158, "keep_don": 158, "logical_or": 159, "squeeze_dim": 160, "step_count_kei": 161, "update_don": 161, "disjunct": 161, "recognis": 161, "target_return": 162, "subtract": 162, "primer": 163, "default_valu": 163, "unit": [163, 185, 197, 199, 200, 217, 218, 223, 224], "transfomedenv": 163, "mykei": 163, "__unless": 163, "exists__": 163, "increas": [164, 245], "10th": 164, "0216": 164, "1149": 164, "1990": 164, "2749": 164, "3281": 164, "9290": 164, "3702": 164, "8978": 164, "from_int": 165, "shape_toler": 165, "permuat": 165, "ri": 165, "principl": 166, "cattransform": 166, "notabl": 166, "rewardsum": [166, 175, 183], "smoothli": 167, "add_1": 167, "cache_spec": 167, "set_missing_toler": 167, "keyerror": 167, "unsqueeze_dim": 168, "danger": 168, "vc1": 169, "vc1_vec": 169, "untrain": 169, "make_noload_model": 169, "vip": [170, 171], "toward": 171, "implicit": [171, 266, 273], "jason": 171, "ma": 171, "shagun": 171, "sodhani": 171, "dinesh": 171, "jayaraman": 171, "osbert": 171, "bastani": 171, "ami": 171, "zhang": 171, "vip_vec": 171, "final_nam": 172, "sb3": 172, "terminal_obs_read": 172, "truli": 172, "till": 172, "shared_td": 173, "decai": [173, 237, 241, 281, 325], "9999": 173, "0001": [173, 197, 216], "to_observation_norm": 173, "underflow": [173, 325], "build_td_for_shared_vecnorm": 173, "memmori": 173, "queue": 173, "td_share": 173, "state_dim": [174, 188, 193, 220, 223, 224, 238], "action_dim": [174, 188, 189, 191, 193, 220, 238], "gsde": [174, 278, 343], "gsdemodul": 174, "rb_transform": 175, "resist": 175, "insensit": 175, "sensit": 175, "_orig": 175, "95": [175, 209, 284], "tdreset": 175, "window": [175, 244], "edit": 175, "check_dtyp": 176, "discrep": [176, 259, 261, 262, 263, 274, 277, 279, 288], "temporarili": 176, "rng": 176, "revert": 176, "probabilistictdmodul": [181, 182, 207, 246, 250, 289, 323], "next_tensordict": 183, "keep_oth": 183, "exclude_reward": 183, "exclude_don": 183, "exclude_act": 183, "next_": 183, "funtion": 183, "_stepmdp": 183, "write_full_fals": 184, "_terminated_or_trunc": 184, "entropi": [185, 259, 260, 261, 266, 267, 273, 274, 276, 277, 278, 280, 282], "botev": 185, "et": 185, "2013": 185, "cem": 185, "plan": [185, 208, 209], "varianc": [185, 202, 216, 228, 229, 348], "k": [185, 199, 200, 203, 204], "maximis": [185, 189, 191, 209, 347], "modelbasedenv": [185, 209], "planning_horizon": [185, 209], "optim_step": [185, 209], "mpc": [185, 208, 209], "num_candid": [185, 209], "candid": [185, 209], "top_k": [185, 209], "modelbasedenvbas": [185, 208, 209, 345], "safemodul": [185, 208, 234, 236, 250, 259, 260, 266, 267, 273, 277, 278, 279, 280, 282, 332, 333, 339, 345], "num_cel": [186, 187, 189, 190, 191, 192, 197, 198, 201, 205, 207, 212, 213, 234], "elu": [186, 187, 189, 190, 191, 192, 197, 198, 212], "activation_kwarg": [186, 187, 207], "norm_class": [186, 187, 189, 190, 207], "norm_kwarg": [186, 187, 207], "bias_last_lay": [186, 187, 189, 190, 191, 192, 198, 207], "aggregator_class": [186, 187, 189, 190], "squashdim": [186, 187, 189, 198, 212], "aggregator_kwarg": [186, 187, 189, 190], "squeeze_output": [186, 187, 189, 190], "cell": [186, 187, 199, 200, 201, 203, 204, 205, 207, 212, 213], "kernel": [186, 187, 198, 206, 212], "cnet": [186, 187], "conv3d": 186, "lazyconv2d": [187, 189, 190, 198, 212], "transformer_config": [188, 220, 238], "decisiontransform": [188, 220], "dtconfig": [188, 193, 220], "2202": [188, 193, 276], "05607": [188, 193, 276], "return_to_go": [188, 193, 220, 238], "conv_net_kwarg": [189, 190], "mlp_net_kwarg": [189, 190, 191], "use_avg_pool": [189, 190], "WITH": [189, 190, 191, 192, 245, 281], "1509": [189, 190, 191, 192, 209, 245, 263, 272, 281], "02971": [189, 190, 191, 192, 245, 281], "reus": [189, 317], "convnet": [189, 190, 198, 212], "ndims_in": 189, "avgpool": [189, 190], "lazylinear": [189, 190, 191, 192, 198, 207, 347], "2304": 189, "adaptiveavgpool2d": 190, "output_s": 190, "squeeze2dlay": 190, "400": [191, 192], "mlp_net_kwargs_net1": 192, "mlp_net_kwargs_net2": 192, "mlp1": 192, "mlp2": 192, "decion": 193, "desdescrib": 193, "n_embd": 193, "n_layer": [193, 199, 203], "n_head": 193, "n_inner": 193, "n_posit": 193, "resid_pdrop": 193, "attn_pdrop": 193, "gpt2config": 193, "atol": [194, 227], "rtol": [194, 227], "batch_shap": [194, 227], "event_shap": [194, 227], "absolut": [194, 227], "densiti": [194, 210, 211, 219, 229], "mass": [194, 210, 211, 219, 229], "rsampl": [194, 211, 219, 250], "sample_shap": [194, 210, 211, 219], "softmax": [195, 211, 219, 239, 240], "var_num": [196, 222, 239, 240, 248], "action_value_kei": [196, 222, 239, 240, 247, 248, 275, 288], "action_mask_kei": [196, 222, 239, 240, 241, 242, 247, 248], "perspect": [196, 240, 268], "1707": [196, 240, 268, 277], "06887": [196, 240, 268], "mult": [196, 213, 222, 239, 240, 247, 248], "tensordict_modul": [196, 199, 200, 203, 204, 222, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 262, 266, 267, 273, 277, 278, 279, 280, 282, 347], "nbin": [196, 239, 347], "customdistributionalqv": 196, "log_softmax": [196, 239], "from_modul": [196, 249, 252], "one_hot": [196, 211, 222], "qvalue_actor": [196, 222, 239, 247, 347], "to_modul": [196, 249, 252], "std_bia": 197, "std_min_val": 197, "belief": [197, 217, 223, 224], "1912": [197, 269, 270, 271], "01603": [197, 269, 270, 271], "softplu": [197, 216, 256, 257, 258], "out_features_valu": 198, "cnn_kwarg": 198, "mlp_kwarg": [198, 206], "duel": 198, "cnn": [198, 212], "06581": 198, "batch_first": [199, 201, 203, 205], "bidirect": [199, 203], "cudnn": [199, 200, 203, 204], "vmap": [199, 200, 203, 204, 206, 231, 249, 252], "rnn": [199, 200, 203, 204], "device_count": [199, 200, 203, 204], "n_in": [199, 200, 203, 204], "n_out": [199, 200, 203, 204], "h0": [199, 200, 203, 204], "h1": [199, 200, 203, 204], "call_gru": [199, 200], "h_out": [199, 200, 203, 204], "batched_cal": [199, 200, 203, 204], "gate": [199, 200, 203], "r_t": 199, "sigma": [199, 200, 202, 203, 204, 228, 229, 237, 245], "w_": [199, 200, 203, 204], "ir": [199, 200], "x_t": [199, 203], "b_": [199, 200, 203, 204], "hr": [199, 200, 203], "h_": [199, 200, 203], "z_t": 199, "iz": [199, 200], "hz": [199, 200], "n_t": 199, "odot": [199, 200, 203, 204], "hn": [199, 200, 203], "h_t": [199, 203], "sigmoid": [199, 200, 203, 204], "hadamard": [199, 200, 203, 204], "multilay": [199, 203], "_t": [199, 203], "ge": [199, 203], "multipli": [199, 203, 260, 261, 267, 274, 276, 277, 278, 280, 325], "bernoulli": [199, 203], "b_ih": [199, 200, 203, 204, 205], "b_hh": [199, 200, 203, 204, 205], "seq": [199, 201, 203, 205, 244], "h_0": [199, 203, 204], "unbatch": [199, 203], "pack_padded_sequ": [199, 203], "pack_sequ": [199, 203], "num": [199, 203], "_layer": [199, 203], "_size": [199, 200, 203, 204], "h_n": [199, 203], "packedsequ": [199, 203], "weight_ih_l": [199, 203], "learnabl": [199, 200, 203, 204], "w_ir": 199, "w_iz": 199, "w_in": 199, "num_direct": [199, 203], "weight_hh_l": [199, 203], "w_hr": 199, "w_hz": 199, "w_hn": 199, "bias_ih_l": [199, 203], "b_ir": 199, "b_iz": 199, "b_in": 199, "bias_hh_l": [199, 203], "b_hr": 199, "b_hz": 199, "b_hn": 199, "mathcal": [199, 200, 203, 204], "sqrt": [199, 200, 203, 204, 245], "frac": [199, 200, 203, 204], "seq_len": [199, 203], "subtli": 199, "matrix": [199, 203, 214, 215], "contrast": [199, 272], "hx": [199, 200, 203, 204], "lstmcell": [200, 205], "gru_cel": 200, "z": 200, "weight_ih": [200, 204], "weight_hh": [200, 204], "bias_ih": [200, 204], "bias_hh": [200, 204], "rocm": [200, 204], "embedd": [201, 205, 206], "grucel": [201, 249], "python_bas": [201, 205], "recurrent_st": 201, "custom_kei": [201, 205], "recurrent_mod": [201, 205], "rs": 201, "gru_module_train": 201, "policy_train": [201, 205], "traj_td": [201, 205], "policy_infer": [201, 205], "td_inf": [201, 205], "assert_clos": [201, 205], "upscal": [202, 228, 229], "tanh_loc": [202, 228, 229], "event_dim": [202, 227, 228], "ultim": [202, 228, 229], "poor": [202, 228, 229], "explos": [202, 228, 229], "switch": [202, 229, 308], "formula": [202, 228, 229, 259, 261, 274, 277, 348], "proj_siz": 203, "c0": [203, 204], "c1": [203, 204], "call_lstm": [203, 204], "c_out": [203, 204], "i_t": 203, "ii": [203, 204], "hi": [203, 204], "f_t": 203, "hf": [203, 204], "g_t": 203, "ig": [203, 204], "hg": [203, 204], "o_t": 203, "ho": [203, 204], "c_t": 203, "c_": 203, "forget": 203, "1402": 203, "1128": 203, "c_0": [203, 204], "proj": 203, "c_n": 203, "w_ii": 203, "w_if": 203, "w_ig": 203, "w_io": 203, "w_hi": 203, "w_hf": 203, "w_hg": 203, "w_ho": 203, "b_ii": 203, "b_if": 203, "b_ig": 203, "b_io": 203, "b_hi": 203, "b_hf": 203, "b_hg": 203, "b_ho": 203, "weight_hr_l": 203, "_revers": 203, "analog": 203, "cn": 203, "lstm_cell": 204, "h_1": 204, "c_1": 204, "time_step": [204, 206, 244], "cx": 204, "correspont": 205, "recurrent_state_h": 205, "recurrent_state_c": 205, "triplet": [205, 247, 248], "lstm_modul": 205, "rs_h": 205, "rs_c": 205, "hidden0": 205, "hidden1": 205, "lstm_kwarg": 206, "lstm_backend": 206, "next_observ": [206, 259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282], "2d": 206, "indeic": 206, "hidden0_in": 206, "hidden1_in": 206, "hidden0_out": 206, "hidden1_out": 206, "single_bias_last_lay": 207, "layer_class": 207, "layer_kwarg": 207, "perceptron": 207, "aslo": 207, "42": [207, 259, 260, 262, 266, 273, 280], "noisylinear": [207, 214, 345], "noisylazylinear": [207, 345], "mpcplanner": 208, "tensordict_out": 208, "mppi": 209, "covari": 209, "william": [209, 279], "aldrich": 209, "theodor": 209, "01149": 209, "hansen": 209, "wang": 209, "su": 209, "04955": 209, "valueoper": [209, 234, 235, 236, 259, 260, 261, 262, 267, 273, 274, 277, 278, 279, 280, 282, 339, 347], "tdlambdaestim": [209, 345], "value_net": [209, 263, 265, 279, 290, 291, 292, 293], "adv": 209, "lmbda": [209, 284, 290, 293, 295, 301, 302, 303, 306, 307, 348], "value_network": [209, 262, 263, 265, 266, 268, 273, 280, 290, 291, 292, 293, 348], "temperatur": [209, 260, 266, 273], "neg_inf": [210, 211], "inf": [210, 211], "api_doc": [210, 211], "tf_agent": [210, 211], "event": [210, 211, 219, 299, 300, 301, 302, 304, 305, 306, 307], "unnorm": [210, 211, 219], "sparse_mask": [210, 211], "dens": [210, 211], "0831": [210, 211], "1203": [210, 211], "0928": [210, 211], "1972": [210, 211], "grad_method": [211, 219], "reparamgradientstrategi": [211, 219], "passthrough": [211, 219], "proxi": [211, 219, 348], "relaxedonehot": [211, 219], "zeros_lik": 211, "sample_non_valid": 211, "centralis": [212, 213], "share_param": [212, 213], "homogen": [212, 213], "agent_network": [212, 213], "modulelist": [212, 213, 336], "2592": 212, "decentralis": 212, "n_agent_input": 213, "n_agent_output": 213, "lazili": 213, "toech": 213, "centalis": 213, "shown": [213, 347], "std_init": [214, 215], "initialize_paramet": 214, "isol": [214, 275], "1706": [215, 230], "10295v3": 215, "induc": 215, "aid": 215, "scale_map": 216, "biased_softplus_1": 216, "scale_lb": [216, 223, 224], "module_norm": 216, "1803": [217, 218, 221], "10122": [217, 218], "rnn_hidden": 217, "latent": 218, "excacli": 219, "inres": 220, "mu": [220, 245], "state_shap": [221, 288], "mixing_embed_dim": [221, 288], "qmix": 221, "mixer": [221, 230, 288], "monoton": 221, "hyper": 221, "11485": 221, "qmixerloss": [221, 230], "qmix_vdn": [221, 230], "vdn": [221, 230], "greedi": [222, 240, 241, 242, 248], "hidden_dim": [223, 224], "posterior": [223, 270], "rssm": [223, 224, 270], "1811": [223, 224], "04551": [223, 224], "obs_embed": 223, "rnn_hidden_dim": 224, "dream": 224, "tanhtransform": 228, "decomposit": 230, "05296": 230, "hide": 231, "satisfi": [231, 347], "vmap_dim": 231, "lam": 231, "sample_in": 231, "sample_in_td": 231, "vm": 231, "translat": [233, 246], "character": [233, 239, 246, 247, 249], "overflow": [233, 239, 240, 246, 247, 248, 249, 250], "td_modul": [233, 234, 235, 236, 246, 249, 250, 252, 254], "3635": 233, "0340": 233, "1476": 233, "3911": 233, "1664": 233, "5455": 233, "2247": 233, "4583": 233, "2916": 233, "2160": 233, "5337": 233, "5193": 233, "grad_fn": [233, 241, 242], "addmmbackward0": 233, "actorvalueoper": [234, 347], "get_policy_oper": [234, 235, 236, 261, 274, 277, 347], "standalon": [234, 235, 236], "tdmodul": [234, 235, 236, 339], "get_critic_oper": 234, "common_oper": [234, 236], "policy_oper": [234, 235, 236], "value_oper": [234, 235, 236], "normalparamwrapp": [234, 235, 236, 246, 252, 259, 260, 267, 273, 277, 278, 279, 280, 282, 345], "module_hidden": [234, 236], "td_module_hidden": [234, 236], "module_act": [234, 236], "td_module_act": [234, 235, 236], "module_valu": [234, 235, 236], "td_module_valu": [234, 235, 236], "state_action_valu": [234, 254, 260, 266, 273, 280, 289, 336, 339, 347], "td_clone": [234, 235, 236], "tensordictmodulewrapp": [234, 332, 333, 339], "get_policy_head": [234, 235, 236], "safesequenti": [234, 235, 236, 288], "head": [234, 236, 261, 274, 277], "get_value_head": [234, 235, 236], "get_value_oper": [234, 235, 236, 261, 274, 277], "action_modul": 235, "state_valu": [235, 236, 254, 261, 266, 273, 274, 277, 278, 280, 290, 291, 292, 293, 295, 297, 299, 301, 303, 304, 306, 347], "qualiti": [236, 347], "actorcriticoper": [236, 261, 274, 277, 347], "embeddig": 236, "refet": 236, "actorcriticwrapp": [236, 347], "po": [237, 242], "sigma_init": 237, "epsilon": [237, 241, 242, 245, 281, 325], "sigma_end": 237, "annealing_num_step": [237, 241, 242, 245], "captur": [237, 241, 242, 245], "omiss": [237, 241, 242, 245], "ommit": [237, 241, 242, 245], "inferec": 238, "set_tensor_kei": 238, "dt_inference_wrapp": 238, "baz": 238, "inference_context": 238, "obs_dim": 238, "tanhdelta": [238, 345], "dtactor": 238, "actor_modul": 238, "dist_class": 238, "dist_kwarg": 238, "distribution_kwarg": [238, 246, 250], "inference_actor": 238, "sequence_length": 238, "mask_context": 238, "out_act": 238, "qvaluemodul": [239, 247, 288], "distributionaldqnnet": 239, "make_log_softmax": 239, "my_action_valu": [240, 248], "chanc": 240, "thid": 240, "eps_init": [241, 242, 245], "eps_end": [241, 242, 245], "explorative_polici": [241, 242, 245], "9055": [241, 242], "9277": [241, 242], "6295": [241, 242], "2532": [241, 242], "addbackward0": [241, 242], "lmheadmodel": 243, "actor_head": [243, 261, 274, 277], "base_model": 243, "lm_head": 243, "macro": 244, "lookahead": 244, "n_action": [244, 260, 263, 265, 276, 280], "reshape_cat": 244, "actor_bas": 244, "obs_cat": 244, "obs_cat_reshap": 244, "action_orig": 244, "counter": [244, 320, 349], "ornstein": 245, "uhlenbeck": 245, "ou": 245, "correl": 245, "noise_t": 245, "noise_": 245, "theta": 245, "sigma_t": 245, "sigma_": 245, "anneal": 245, "ou_prev_nois": 245, "ou_step": 245, "x0": 245, "sigma_min": 245, "n_steps_ann": 245, "is_init_kei": 245, "_ou_prev_nois": 245, "_ou_step": 245, "default_interaction_typ": [246, 250], "interaction_typ": [246, 250], "datacollectorbas": [246, 329, 332, 333, 339, 345], "set_interaction_typ": [246, 250], "cache_dist": [246, 250], "n_empirical_estim": [246, 250], "compound": 246, "compositedistribut": 246, "categ": 246, "distribution_map": 246, "chose": 248, "functionalmodul": 249, "functionalmodulewithbuff": 249, "td_fmodul": 249, "td_function": 249, "td_state": 249, "params_repeat": 249, "td_vmap": [249, 252], "random_sampl": [249, 250], "suppli": 250, "fist": 250, "log_prob_kei": 250, "probabilistictensordictsequenti": [251, 259, 261, 274, 277, 279, 332, 333], "partial_toler": [251, 252], "who": [251, 252], "AND": [251, 252], "tensordictsequenci": 252, "tensordictsequ": 252, "safeprobabilisticmodul": [252, 347], "spec1": 252, "net1": 252, "module1": 252, "td_module1": 252, "spec2": 252, "module2": 252, "td_module2": 252, "clamp": [253, 270, 327], "boundari": 253, "resolut": 253, "9944": 253, "9991": 253, "3020": 253, "2299": 253, "5418": 253, "2989": 253, "6849": 253, "3169": 253, "2690": 253, "9649": 253, "5686": 253, "8602": 253, "0315": 253, "8455": 253, "6027": 253, "4746": 253, "7843": 253, "7782": 253, "2111": 253, "5115": 253, "4687": 253, "5760": 253, "custommodul": 254, "imaginari": 255, "imagin": 255, "transition_model": 255, "get_reward_oper": 255, "get_transition_model_oper": 255, "min_val": [256, 258], "_bia": 256, "invert": 257, "surject": 258, "expln": 258, "biased_softplu": [258, 345], "beggin": 258, "biased_softplus_": 258, "syntax": 258, "met": 258, "1602": 259, "01783v2": 259, "actor_network": [259, 260, 261, 262, 264, 266, 267, 273, 274, 276, 277, 278, 279, 280, 282], "critic_network": [259, 261, 274, 277, 279], "entropy_bonu": [259, 261, 274, 277], "favour": [259, 261, 274, 277], "samples_mc_entropi": [259, 261, 274, 276, 277], "mont": [259, 261, 274, 277], "carlo": [259, 261, 274, 277], "entropy_coef": [259, 261, 274, 277], "critic_coef": [259, 261, 274, 277], "loss_critic_typ": [259, 261, 274, 277, 279], "l1": [259, 261, 262, 263, 267, 274, 277, 278, 279, 282, 285, 288, 347], "l2": [259, 261, 262, 263, 264, 265, 267, 270, 271, 274, 277, 278, 279, 282, 285, 288], "smooth_l1": [259, 260, 261, 262, 263, 266, 267, 273, 274, 277, 278, 279, 280, 282, 285, 288], "separate_loss": [259, 261, 262, 266, 267, 273, 274, 277, 278, 279, 280, 282], "propag": [259, 261, 262, 266, 267, 273, 274, 277, 278, 279, 280, 282, 290, 291, 292, 293], "advantage_kei": [259, 261, 274, 277, 279, 290, 291, 292, 293], "value_target_kei": [259, 261, 274, 277, 279, 290, 291, 292, 293], "value_target": [259, 261, 274, 277, 279, 290, 291, 292, 293], "ddp": [259, 261, 274, 277, 279], "fsdp": [259, 261, 274, 277, 279], "divid": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 276, 277, 278, 279, 280, 282, 330, 347], "clip_valu": [259, 261, 274, 277, 279], "loss_crit": [259, 277], "loss_entropi": [259, 277], "loss_object": [259, 277], "recur": [259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 290, 291, 292, 293, 294], "next_reward": [259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 290, 291, 292, 293], "next_don": [259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 290, 291, 292, 293], "next_termin": [259, 260, 262, 263, 265, 266, 267, 273, 277, 278, 279, 280, 282, 290, 291, 292, 293], "loss_obj": 259, "sacloss": [259, 272, 281, 345], "select_out_kei": [259, 260, 262, 266, 267, 273, 277, 278, 280, 282], "make_value_estim": [259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 283, 288, 348], "value_typ": [259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 284, 288], "hyperparam": [259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288], "enum": [259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 284, 288], "default_value_estim": [259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288], "default_value_kwarg": [259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288, 345], "dqn_loss": [259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 283, 288], "td1": [259, 260, 262, 263, 265, 267, 268, 269, 273, 275, 277, 278, 279, 280, 282, 288], "conserv": [260, 265], "qvalue_network": [260, 266, 267, 273, 278, 280, 282], "loss_funct": [260, 262, 263, 264, 265, 266, 267, 273, 278, 280, 282, 285, 288], "alpha_init": [260, 267, 276, 278, 280], "min_alpha": [260, 267, 276, 278, 280], "max_alpha": [260, 267, 276, 278, 280], "fixed_alpha": [260, 267, 276, 278, 280], "target_entropi": [260, 267, 276, 278, 280], "prod": [260, 276, 280], "delay_actor": [260, 262, 280, 282], "delay_qvalu": [260, 267, 278, 280, 282], "min_q_weight": 260, "max_q_backup": 260, "backup": 260, "deterministic_backup": 260, "num_random": 260, "with_lagrang": 260, "lagrang": 260, "lagrange_thresh": 260, "valueclass": [260, 262, 267, 278, 280, 282], "qvalu": [260, 266, 267, 273, 278, 280, 282, 336], "loss_actor": [260, 262, 266, 267, 273, 278, 279, 280, 282, 322], "loss_actor_bc": 260, "loss_alpha": [260, 267, 278, 280], "loss_cql": [260, 265], "loss_qvalu": [260, 265, 266, 267, 273, 278, 280, 282], "loss_alpha_prim": 260, "clip_epsilon": 261, "normalize_advantag": [261, 274, 277], "value_kei": [261, 274, 277, 290, 291, 292, 293], "somemodul": [261, 274, 277], "someactor": [261, 274, 277], "value_head": [261, 274, 277], "somevalu": [261, 274, 277], "loss_modul": [261, 272, 274, 275, 277, 281, 327, 338, 339, 348, 349], "ppoloss": [261, 274, 345], "delay_valu": [262, 263, 265, 268, 279, 280, 288], "loss_valu": [262, 266, 273, 279, 280], "pred_valu": [262, 265, 282], "pred_value_max": 262, "target_valu": [262, 265, 278, 282, 289, 348], "target_value_max": 262, "qvalueactor": [263, 265, 288, 347], "double_dqn": 263, "06461": [263, 272], "mult_one_hot": [263, 266, 267, 288], "loss_val": [263, 265, 348], "01345": 264, "distanc": [265, 274, 285, 289, 290], "dcql_loss": 265, "2110": [266, 273], "06169": [266, 273], "num_qvalue_net": [266, 267, 273, 278, 280, 282], "expectil": [266, 273], "tau": [266, 273, 281], "antmaz": [266, 273], "sticht": [266, 273], "onehotcategor": [266, 267, 345], "target_entropy_weight": 267, "disctount": 268, "distributionalqvalueactor": [268, 347], "input_tensordict": 268, "actor_model": 269, "value_model": [269, 271], "imagination_horizon": 269, "unrol": [269, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307], "discount_loss": [269, 271], "lambda_kl": 270, "lambda_reco": 270, "lambda_reward": 270, "reco_loss": 270, "reward_loss": 270, "free_nat": 270, "nat": 270, "delayed_clamp": 270, "global_averag": 270, "value_loss": 271, "fake_data": 271, "ddpgloss": [272, 281, 339, 345], "td3loss": [272, 281, 345], "value_network_update_interv": 272, "qvalueclass": 273, "loss_value_diff": 273, "diff": 273, "old_polici": 274, "new_polici": 274, "apart": 274, "dtarg": 274, "samples_mc_kl": 274, "analyt": 274, "decrement": 274, "loss_": [275, 322, 348], "equip": 275, "gh": 275, "_acceptedkei": 275, "dataclass": [275, 336], "_forward_value_estimator_kei": 275, "alter": [275, 347], "value_estim": [275, 290, 291, 292, 293, 294, 348], "myloss": 275, "action2": 275, "convert_to_funct": 275, "expand_dim": 275, "create_target_param": 275, "compare_against": 275, "_param": 275, "expans": 275, "resampl": 275, "_target_param": 275, "blend": 275, "proxim": 277, "optimis": [277, 323], "flavour": 277, "clipppoloss": [277, 345], "klpenppoloss": [277, 345], "regularis": 277, "06347": 277, "gae": [277, 345, 348], "ppo_loss": 277, "tdlambda": [277, 284, 348], "base_lay": 277, "randn_lik": 277, "samplelogprob": 277, "openreview": [278, 336], "ay8zfzm0tdd": [278, 336], "sub_sample_len": 278, "subsampl": [278, 318, 349], "action_log_prob_actor": 278, "state_action_value_actor": [278, 282], "connectionist": 279, "1992": 279, "doi": 279, "1007": 279, "bf00992696": 279, "actor_net": 279, "1801": 280, "01290": 280, "applic": [280, 288], "1812": 280, "05905": 280, "redqloss": [281, 345], "math": 281, "theta_t": 281, "theta_": 281, "polyak": 281, "policy_nois": 282, "noise_clip": 282, "next_state_valu": [282, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 345], "td0": 283, "strict_shap": 285, "view_a": 285, "qmixer": [288, 345], "local_valu": 288, "visibl": 288, "dafault": 288, "acceptedkei": 288, "global_valu": 288, "penultim": 288, "local_value_network": 288, "mixer_network": 288, "value_modul": 288, "qnet": 288, "next_val_kei": 289, "pred_next_v": 289, "usus": 289, "mse": 289, "q_valu": 289, "n_steps_to_next": 289, "value_next_st": 289, "1506": [290, 295, 303], "02438": [290, 295, 303], "exponenti": [290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 325], "average_ga": 290, "skip_exist": [290, 291, 292, 293], "time_dim": [290, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307], "advang": 290, "gradient_mod": 290, "value_error": [290, 291, 292, 293, 294], "target_param": [290, 291, 292, 293, 294], "98": [290, 291, 292, 293], "94": [290, 293], "unpack": [290, 291, 292, 293], "tensor_kei": [290, 291, 292, 293, 294], "next_valu": [290, 291, 292, 293, 294], "aka": 291, "average_reward": [291, 292, 293], "tdestim": [291, 292, 294], "infti": 292, "valuefunctionbas": 294, "old_stat": [295, 297, 299, 301, 303, 304, 306], "new_stat": [295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "rolling_gamma": [299, 300, 301, 302, 304, 305, 306, 307], "g1": [299, 300, 301, 302, 304, 305, 306, 307], "g2": [299, 300, 301, 302, 304, 305, 306, 307], "g3": [299, 300, 301, 302, 304, 305, 306, 307], "g4": [299, 300, 301, 302, 304, 305, 306, 307], "v3": [299, 300, 301, 302, 304, 305, 306, 307], "preproc": 308, "as_non_tensor": 308, "render_method": 308, "syntat": 308, "sugar": 308, "relax": 308, "out_file_bas": 309, "skip_reset": 309, "interv": [309, 310, 319, 329], "center_crop": 310, "make_grid": 310, "csv": [310, 312, 314], "wandb": [310, 314, 317], "tensorboard": [310, 314, 316], "exp_nam": [310, 311, 312, 315, 316, 317, 339], "log_dir": [310, 311, 312, 314, 316, 317], "cheetah_video": 310, "run_video": 310, "openxexperiencereplai": 310, "run_video_0": 310, "templat": 311, "pt": [312, 349], "video_fp": 312, "minim": 312, "dependeci": 312, "cur_dir": 312, "csv_log": 312, "video_": 312, "experiment_nam": [313, 314], "uuid": 313, "logger_typ": 314, "logger_nam": 314, "mlflow": [314, 315], "wandb_kwarg": 314, "mlflow_kwarg": 314, "tracking_uri": 315, "uri": 315, "datastor": 315, "tb_log": 316, "tensoarboard": 316, "td_log": 316, "save_dir": 317, "resum": 317, "uncategor": 317, "sub_traj_len": 318, "min_sub_traj_len": 318, "register_op": [318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 349], "process_optim_batch": [318, 324, 325, 349], "td_out": [318, 326], "_process_optim_batch_hook": [318, 349], "batch_subsampl": 318, "clear_cuda": 319, "pre_optim_step": [319, 349], "log_pbar": [320, 321, 323, 325, 349], "progress": [320, 321, 323, 327, 349], "count_fram": 320, "pre_steps_log": [320, 321, 349], "count_frames_log": 320, "lognam": 321, "r_train": 321, "log_reward": 321, "loss_compon": 322, "appl": 322, "optimizer_hook": 322, "record_interv": 323, "record_fram": [323, 330], "policy_explor": [323, 339], "log_kei": 323, "suffix": 323, "underestim": 323, "set_exploration_typ": [323, 345], "r_evalu": 323, "flatten_tensordict": 324, "max_dim": 324, "rb_trainer": 324, "batch_process": [324, 325, 326, 349], "post_loss": [324, 349], "999": 325, "jitter": 325, "finfo": 325, "default_dtyp": 325, "get_default_dtyp": 325, "reward_norm": 325, "update_reward_stat": 325, "normalize_reward": 325, "make_train": [326, 345], "_process_batch_hook": [326, 349], "select_kei": [326, 349], "versatil": 327, "optim_steps_per_batch": [327, 349], "clip_grad_norm": 327, "clip_norm": 327, "progress_bar": 327, "save_trainer_interv": 327, "log_interv": 327, "save_trainer_fil": [327, 349], "update_weights_interv": 329, "update_weight": 329, "post_step": [329, 349], "cfg": [330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343], "dictconfig": [330, 331, 332, 333, 336, 337, 338, 339, 340, 343], "unknowingli": 330, "annealing_fram": 330, "init_env_step": [330, 331], "proof_environ": [331, 336], "sta": 331, "ot": 331, "actor_model_explor": [332, 333], "make_env_kwarg": [332, 333], "targetnetupdat": [334, 335, 338, 339], "redqloss_deprec": 335, "actor_net_kwarg": 336, "qvalue_net_kwarg": 336, "observation_kei": 336, "parser_env_arg": 336, "parser_model_args_continu": 336, "hydra": 336, "config_stor": 336, "configstor": 336, "config_field": 336, "config_cl": 336, "redqmodelconfig": 336, "envconfig": 336, "make_dataclass": 336, "cls_name": 336, "cs": 336, "config_path": 336, "config_nam": 336, "replayargsconfig": 337, "target_net_updat": 339, "constitu": 339, "egreedywrapp": 339, "env_proof": 339, "obs_spec": 339, "net_valu": 339, "dir": [339, 349], "gettempdir": 339, "argpars": [340, 343], "namespac": [340, 343], "parser": [340, 343], "transformed_env_constructor": [340, 345], "num_env_per_collector": [341, 342], "video_tag": 343, "norm_obs_onli": 343, "use_env_cr": 343, "custom_env_mak": 343, "custom_env": 343, "return_transformed_env": 343, "action_dim_gsd": 343, "state_dim_gsd": 343, "obs_norm_state_dict": 343, "wheter": 343, "maker": 343, "asyncdatacollector": 345, "distributedsyncdatacollector": 345, "submitit_delayed_launch": 345, "raycollector": 345, "rational": 345, "behind": 345, "footnot": 345, "nontensorspec": 345, "unboundeddiscretetensorspec": 345, "lazystackedtensorspec": 345, "lazystackedcompositespec": 345, "prompttensordicttoken": 345, "rolloutfrommodel": 345, "tokenizeddatasetload": 345, "create_infinite_iter": 345, "consolidate_spec": 345, "check_no_exclusive_kei": 345, "contains_lazy_spec": 345, "check_marl_group": 345, "get_available_librari": 345, "set_exploration_mod": 345, "make_composite_from_td": 345, "terminated_or_trunc": 345, "dreamerdecod": 345, "braxwrapp": 345, "dmcontrolwrapp": 345, "jumanjienv": 345, "jumanjiwrapp": 345, "meltingpotenv": 345, "meltingpotwrapp": 345, "mogymenv": 345, "mogymwrapp": 345, "multithreadedenvwrapp": 345, "openmlenv": 345, "pettingzooenv": 345, "robohiveenv": 345, "smacv2env": 345, "smacv2wrapp": 345, "vmaswrapp": 345, "qvaluehook": 345, "distributionalqvaluehook": 345, "reset_nois": 345, "cemplann": 345, "mpcplannerbas": 345, "mppiplann": 345, "independentnorm": 345, "truncatednorm": 345, "maskedonehotcategor": 345, "inv_softplu": 345, "vmapmodul": 345, "distributionaldqnloss": 345, "discretesacloss": 345, "iqlloss": 345, "discreteiqlloss": 345, "cqlloss": 345, "discretecqlloss": 345, "dtloss": 345, "onlinedtloss": 345, "a2closs": 345, "reinforceloss": 345, "dreameractorloss": 345, "dreamermodelloss": 345, "dreamervalueloss": 345, "td0estim": 345, "td1estim": 345, "td0_return_estim": 345, "td0_advantage_estim": 345, "td1_return_estim": 345, "vec_td1_return_estim": 345, "td1_advantage_estim": 345, "vec_td1_advantage_estim": 345, "td_lambda_return_estim": 345, "vec_td_lambda_return_estim": 345, "td_lambda_advantage_estim": 345, "vec_td_lambda_advantage_estim": 345, "generalized_advantage_estim": 345, "vec_generalized_advantage_estim": 345, "reward2go": 345, "distance_loss": 345, "hold_out_net": 345, "hold_out_param": 345, "softupd": 345, "hardupd": 345, "batchsubsampl": [345, 349], "clearcudacach": 345, "countframeslog": 345, "logreward": [345, 349], "optimizerhook": 345, "replaybuffertrain": [345, 349], "rewardnorm": 345, "selectkei": [345, 349], "trainerhookbas": [345, 349], "updateweight": [345, 349], "make_collector_offpolici": 345, "make_collector_onpolici": 345, "make_dqn_loss": 345, "make_redq_loss": 345, "make_redq_model": 345, "make_replay_buff": 345, "make_target_updat": 345, "parallel_env_constructor": 345, "sync_async_collector": 345, "sync_sync_collector": 345, "correct_for_frame_skip": 345, "get_stats_random_rollout": 345, "mlflowlogg": 345, "get_logg": 345, "generate_exp_nam": 345, "journei": 346, "textbook": 346, "highlight": 346, "ever": 346, "bump": 346, "think": 346, "benefit": 346, "pr": 346, "ground": 347, "recycl": 347, "impos": 347, "violat": 347, "noisier": 347, "Their": 347, "sd": 347, "prob_modul": 347, "pick": 347, "hopefulli": 347, "functional_modul": 347, "make_funct": 347, "mathbb": 347, "rightarrow": 347, "soften": 347, "backbon": 347, "make_actor": 347, "make_valu": 347, "shared_param": 347, "make_common": 347, "reusabl": 348, "swappabl": 348, "characterist": 348, "trainabl": 348, "whatev": 348, "smth": 348, "metric": 348, "nutshel": 348, "introduct": 348, "barto": 348, "chapter": 348, "significantli": 348, "next_stat": 348, "value_net_loss": 348, "pow": 348, "room": 348, "signifi": 348, "underperform": 348, "thin": 348, "intric": 348, "believ": 349, "scheme": 349, "substenti": 349, "_pre_steps_log_hook": 349, "_pre_optim_hook": 349, "sub_batch": 349, "_post_loss_hook": 349, "_post_optim_hook": 349, "post_optim": 349, "_post_optim_log": 349, "post_optim_log": 349, "_post_steps_hook": 349, "_post_steps_log_hook": 349, "post_steps_log": 349, "reserv": 349, "logginghook": 349, "logging_hook": 349, "save_dict": 349, "some_valu": 349, "torchsnapshot": 349, "ckpt_backend": 349, "filepath": 349, "save_train": 349, "load_from_fil": 349, "000": [351, 353], "galleri": [351, 352], "mem": [351, 353], "mb": [351, 353], "tutorials_python": 352, "zip": 352, "sphinx": 352}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "LazyStackedCompositeSpec"], [28, 0, 1, "", "LazyStackedTensorSpec"], [29, 0, 1, "", "MultiDiscreteTensorSpec"], [30, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [31, 0, 1, "", "MultiStep"], [32, 0, 1, "", "NonTensorSpec"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [61, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "clear_device_"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "flatten"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "reshape"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "unflatten"], [23, 1, 1, "", "view"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "empty"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "get"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_empty"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "lock_"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unlock_"], [25, 1, 1, "", "values"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[31, 1, 1, "", "add_module"], [31, 1, 1, "", "apply"], [31, 1, 1, "", "bfloat16"], [31, 1, 1, "", "buffers"], [31, 1, 1, "", "children"], [31, 1, 1, "", "compile"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 1, 1, "", "double"], [31, 1, 1, "", "eval"], [31, 1, 1, "", "extra_repr"], [31, 1, 1, "", "float"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_buffer"], [31, 1, 1, "", "get_extra_state"], [31, 1, 1, "", "get_parameter"], [31, 1, 1, "", "get_submodule"], [31, 1, 1, "", "half"], [31, 1, 1, "", "ipu"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "modules"], [31, 1, 1, "", "named_buffers"], [31, 1, 1, "", "named_children"], [31, 1, 1, "", "named_modules"], [31, 1, 1, "", "named_parameters"], [31, 1, 1, "", "parameters"], [31, 1, 1, "", "register_backward_hook"], [31, 1, 1, "", "register_buffer"], [31, 1, 1, "", "register_forward_hook"], [31, 1, 1, "", "register_forward_pre_hook"], [31, 1, 1, "", "register_full_backward_hook"], [31, 1, 1, "", "register_full_backward_pre_hook"], [31, 1, 1, "", "register_load_state_dict_post_hook"], [31, 1, 1, "", "register_module"], [31, 1, 1, "", "register_parameter"], [31, 1, 1, "", "register_state_dict_pre_hook"], [31, 1, 1, "", "requires_grad_"], [31, 1, 1, "", "set_extra_state"], [31, 1, 1, "", "share_memory"], [31, 1, 1, "", "state_dict"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_empty"], [31, 1, 1, "", "train"], [31, 1, 1, "", "type"], [31, 1, 1, "", "xpu"], [31, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "flatten"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "reshape"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "unflatten"], [33, 1, 1, "", "view"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_memmap"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "memmap"], [34, 1, 1, "", "memmap_"], [34, 1, 1, "", "memmap_like"], [34, 3, 1, "", "names"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"], [35, 3, 1, "", "sampler"], [35, 1, 1, "", "set_sampler"], [35, 1, 1, "", "set_storage"], [35, 1, 1, "", "set_writer"], [35, 3, 1, "", "storage"], [35, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_memmap"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 3, 1, "", "names"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"], [38, 3, 1, "", "sampler"], [38, 1, 1, "", "set_sampler"], [38, 1, 1, "", "set_storage"], [38, 1, 1, "", "set_writer"], [38, 3, 1, "", "storage"], [38, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_memmap"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 3, 1, "", "names"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"], [42, 3, 1, "", "sampler"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"], [42, 3, 1, "", "storage"], [42, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "flatten"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "reshape"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "unflatten"], [47, 1, 1, "", "view"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "AtariDQNExperienceReplay"], [53, 0, 1, "", "BaseDatasetExperienceReplay"], [54, 0, 1, "", "D4RLExperienceReplay"], [55, 0, 1, "", "GenDGRLExperienceReplay"], [56, 0, 1, "", "MinariExperienceReplay"], [57, 0, 1, "", "OpenMLExperienceReplay"], [58, 0, 1, "", "OpenXExperienceReplay"], [59, 0, 1, "", "RobosetExperienceReplay"], [60, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 3, 1, "", "data_path"], [52, 3, 1, "", "data_path_root"], [52, 1, 1, "", "delete"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "preprocess"], [52, 1, 1, "", "sample"], [52, 3, 1, "", "sampler"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 3, 1, "", "storage"], [52, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 3, 1, "", "data_path"], [53, 3, 1, "", "data_path_root"], [53, 1, 1, "", "delete"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "preprocess"], [53, 1, 1, "", "sample"], [53, 3, 1, "", "sampler"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 3, 1, "", "storage"], [53, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 3, 1, "", "data_path"], [54, 3, 1, "", "data_path_root"], [54, 1, 1, "", "delete"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "preprocess"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 3, 1, "", "data_path"], [55, 3, 1, "", "data_path_root"], [55, 1, 1, "", "delete"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "preprocess"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 3, 1, "", "data_path"], [56, 3, 1, "", "data_path_root"], [56, 1, 1, "", "delete"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "preprocess"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 3, 1, "", "data_path"], [57, 3, 1, "", "data_path_root"], [57, 1, 1, "", "delete"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "preprocess"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 3, 1, "", "data_path"], [58, 3, 1, "", "data_path_root"], [58, 1, 1, "", "delete"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "preprocess"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 3, 1, "", "data_path"], [59, 3, 1, "", "data_path_root"], [59, 1, 1, "", "delete"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "preprocess"], [59, 1, 1, "", "sample"], [59, 3, 1, "", "sampler"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 3, 1, "", "storage"], [59, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 3, 1, "", "data_path"], [60, 3, 1, "", "data_path_root"], [60, 1, 1, "", "delete"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "preprocess"], [60, 1, 1, "", "sample"], [60, 3, 1, "", "sampler"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 3, 1, "", "storage"], [60, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[62, 0, 1, "", "ImmutableDatasetWriter"], [63, 0, 1, "", "LazyMemmapStorage"], [64, 0, 1, "", "LazyTensorStorage"], [65, 0, 1, "", "ListStorage"], [66, 0, 1, "", "PrioritizedSampler"], [67, 0, 1, "", "PrioritizedSliceSampler"], [68, 0, 1, "", "RandomSampler"], [69, 0, 1, "", "ReplayBufferEnsemble"], [70, 0, 1, "", "RoundRobinWriter"], [71, 0, 1, "", "Sampler"], [72, 0, 1, "", "SamplerEnsemble"], [73, 0, 1, "", "SamplerWithoutReplacement"], [74, 0, 1, "", "SliceSampler"], [75, 0, 1, "", "SliceSamplerWithoutReplacement"], [76, 0, 1, "", "Storage"], [77, 0, 1, "", "StorageEnsemble"], [78, 0, 1, "", "TensorDictMaxValueWriter"], [79, 0, 1, "", "TensorDictRoundRobinWriter"], [80, 0, 1, "", "TensorStorage"], [81, 0, 1, "", "Writer"], [82, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[62, 1, 1, "", "add"], [62, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[66, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[67, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "sample"], [69, 3, 1, "", "sampler"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 3, 1, "", "storage"], [69, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[70, 1, 1, "", "add"], [70, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[76, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[77, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[78, 1, 1, "", "add"], [78, 1, 1, "", "extend"], [78, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[79, 1, 1, "", "add"], [79, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[80, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[82, 1, 1, "", "add"], [82, 1, 1, "", "extend"]], "torchrl.envs": [[83, 2, 1, "", "BraxEnv"], [84, 2, 1, "", "BraxWrapper"], [85, 2, 1, "", "DMControlEnv"], [86, 2, 1, "", "DMControlWrapper"], [87, 0, 1, "", "EnvBase"], [88, 0, 1, "", "EnvCreator"], [89, 0, 1, "", "EnvMetaData"], [90, 2, 1, "", "GymEnv"], [91, 0, 1, "", "GymLikeEnv"], [92, 2, 1, "", "GymWrapper"], [93, 2, 1, "", "HabitatEnv"], [94, 2, 1, "", "IsaacGymEnv"], [95, 2, 1, "", "IsaacGymWrapper"], [96, 2, 1, "", "JumanjiEnv"], [97, 2, 1, "", "JumanjiWrapper"], [98, 2, 1, "", "MOGymEnv"], [99, 2, 1, "", "MOGymWrapper"], [100, 2, 1, "", "MarlGroupMapType"], [101, 2, 1, "", "MeltingpotEnv"], [102, 2, 1, "", "MeltingpotWrapper"], [103, 2, 1, "", "ModelBasedEnvBase"], [104, 2, 1, "", "MultiThreadedEnv"], [105, 2, 1, "", "MultiThreadedEnvWrapper"], [106, 2, 1, "", "OpenMLEnv"], [107, 0, 1, "", "ParallelEnv"], [108, 2, 1, "", "PettingZooEnv"], [109, 2, 1, "", "PettingZooWrapper"], [110, 2, 1, "", "RoboHiveEnv"], [111, 2, 1, "", "SMACv2Env"], [112, 2, 1, "", "SMACv2Wrapper"], [113, 0, 1, "", "SerialEnv"], [114, 2, 1, "", "VmasEnv"], [115, 2, 1, "", "VmasWrapper"], [116, 2, 1, "", "check_marl_grouping"], [117, 2, 1, "", "gym_backend"], [103, 1, 1, "", "rand_step"], [103, 1, 1, "", "reset"], [103, 1, 1, "", "rollout"], [120, 2, 1, "", "set_gym_backend"], [103, 1, 1, "", "set_seed"], [103, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "add_truncated_keys"], [87, 1, 1, "", "append_transform"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 3, 1, "", "batch_size"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_keys_groups"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "empty_cache"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 3, 1, "", "full_action_spec"], [87, 3, 1, "", "full_done_spec"], [87, 3, 1, "", "full_reward_spec"], [87, 3, 1, "", "full_state_spec"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "maybe_reset"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "id0", "rand_step"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_gym"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "id1", "reset"], [87, 3, 1, "", "reset_keys"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "id2", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "id3", "set_seed"], [87, 3, 1, "", "shape"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "id4", "step"], [87, 1, 1, "", "step_and_maybe_reset"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[91, 3, 1, "", "action_key"], [91, 3, 1, "", "action_keys"], [91, 3, 1, "", "action_spec"], [91, 1, 1, "", "add_module"], [91, 1, 1, "", "add_truncated_keys"], [91, 1, 1, "", "append_transform"], [91, 1, 1, "", "apply"], [91, 1, 1, "", "auto_register_info_dict"], [91, 3, 1, "", "batch_locked"], [91, 3, 1, "", "batch_size"], [91, 1, 1, "", "bfloat16"], [91, 1, 1, "", "buffers"], [91, 1, 1, "", "children"], [91, 1, 1, "", "close"], [91, 1, 1, "", "compile"], [91, 1, 1, "", "cpu"], [91, 1, 1, "", "cuda"], [91, 3, 1, "", "done_key"], [91, 3, 1, "", "done_keys"], [91, 3, 1, "", "done_keys_groups"], [91, 3, 1, "", "done_spec"], [91, 1, 1, "", "double"], [91, 1, 1, "", "empty_cache"], [91, 1, 1, "", "eval"], [91, 1, 1, "", "extra_repr"], [91, 1, 1, "", "fake_tensordict"], [91, 1, 1, "", "float"], [91, 1, 1, "", "forward"], [91, 3, 1, "", "full_action_spec"], [91, 3, 1, "", "full_done_spec"], [91, 3, 1, "", "full_reward_spec"], [91, 3, 1, "", "full_state_spec"], [91, 1, 1, "", "get_buffer"], [91, 1, 1, "", "get_extra_state"], [91, 1, 1, "", "get_parameter"], [91, 1, 1, "", "get_submodule"], [91, 1, 1, "", "half"], [91, 3, 1, "", "input_spec"], [91, 1, 1, "", "ipu"], [91, 1, 1, "", "load_state_dict"], [91, 1, 1, "", "maybe_reset"], [91, 1, 1, "", "modules"], [91, 1, 1, "", "named_buffers"], [91, 1, 1, "", "named_children"], [91, 1, 1, "", "named_modules"], [91, 1, 1, "", "named_parameters"], [91, 3, 1, "", "observation_spec"], [91, 3, 1, "", "output_spec"], [91, 1, 1, "", "parameters"], [91, 1, 1, "", "rand_action"], [91, 1, 1, "", "rand_step"], [91, 1, 1, "", "read_action"], [91, 1, 1, "", "read_done"], [91, 1, 1, "", "read_obs"], [91, 1, 1, "", "read_reward"], [91, 1, 1, "", "register_backward_hook"], [91, 1, 1, "", "register_buffer"], [91, 1, 1, "", "register_forward_hook"], [91, 1, 1, "", "register_forward_pre_hook"], [91, 1, 1, "", "register_full_backward_hook"], [91, 1, 1, "", "register_full_backward_pre_hook"], [91, 1, 1, "", "register_gym"], [91, 1, 1, "", "register_load_state_dict_post_hook"], [91, 1, 1, "", "register_module"], [91, 1, 1, "", "register_parameter"], [91, 1, 1, "", "register_state_dict_pre_hook"], [91, 1, 1, "", "requires_grad_"], [91, 1, 1, "", "reset"], [91, 3, 1, "", "reset_keys"], [91, 3, 1, "", "reward_key"], [91, 3, 1, "", "reward_keys"], [91, 3, 1, "", "reward_spec"], [91, 1, 1, "", "rollout"], [91, 1, 1, "", "set_extra_state"], [91, 1, 1, "", "set_info_dict_reader"], [91, 1, 1, "", "set_seed"], [91, 3, 1, "", "shape"], [91, 1, 1, "", "share_memory"], [91, 3, 1, "", "specs"], [91, 1, 1, "", "state_dict"], [91, 3, 1, "", "state_spec"], [91, 1, 1, "", "step"], [91, 1, 1, "", "step_and_maybe_reset"], [91, 1, 1, "", "to"], [91, 1, 1, "", "to_empty"], [91, 1, 1, "", "train"], [91, 1, 1, "", "type"], [91, 1, 1, "", "xpu"], [91, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "add_truncated_keys"], [107, 1, 1, "", "append_transform"], [107, 1, 1, "", "apply"], [107, 3, 1, "", "batch_locked"], [107, 3, 1, "", "batch_size"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "maybe_reset"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_gym"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_seed"], [107, 3, 1, "", "shape"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "update_kwargs"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[113, 3, 1, "", "action_key"], [113, 3, 1, "", "action_keys"], [113, 3, 1, "", "action_spec"], [113, 1, 1, "", "add_module"], [113, 1, 1, "", "add_truncated_keys"], [113, 1, 1, "", "append_transform"], [113, 1, 1, "", "apply"], [113, 3, 1, "", "batch_locked"], [113, 3, 1, "", "batch_size"], [113, 1, 1, "", "bfloat16"], [113, 1, 1, "", "buffers"], [113, 1, 1, "", "children"], [113, 1, 1, "", "compile"], [113, 1, 1, "", "cpu"], [113, 1, 1, "", "cuda"], [113, 3, 1, "", "done_key"], [113, 3, 1, "", "done_keys"], [113, 3, 1, "", "done_keys_groups"], [113, 3, 1, "", "done_spec"], [113, 1, 1, "", "double"], [113, 1, 1, "", "empty_cache"], [113, 1, 1, "", "eval"], [113, 1, 1, "", "extra_repr"], [113, 1, 1, "", "fake_tensordict"], [113, 1, 1, "", "float"], [113, 1, 1, "", "forward"], [113, 3, 1, "", "full_action_spec"], [113, 3, 1, "", "full_done_spec"], [113, 3, 1, "", "full_reward_spec"], [113, 3, 1, "", "full_state_spec"], [113, 1, 1, "", "get_buffer"], [113, 1, 1, "", "get_extra_state"], [113, 1, 1, "", "get_parameter"], [113, 1, 1, "", "get_submodule"], [113, 1, 1, "", "half"], [113, 3, 1, "", "input_spec"], [113, 1, 1, "", "ipu"], [113, 1, 1, "", "load_state_dict"], [113, 1, 1, "", "maybe_reset"], [113, 1, 1, "", "modules"], [113, 1, 1, "", "named_buffers"], [113, 1, 1, "", "named_children"], [113, 1, 1, "", "named_modules"], [113, 1, 1, "", "named_parameters"], [113, 3, 1, "", "observation_spec"], [113, 3, 1, "", "output_spec"], [113, 1, 1, "", "parameters"], [113, 1, 1, "", "rand_action"], [113, 1, 1, "", "rand_step"], [113, 1, 1, "", "register_backward_hook"], [113, 1, 1, "", "register_buffer"], [113, 1, 1, "", "register_forward_hook"], [113, 1, 1, "", "register_forward_pre_hook"], [113, 1, 1, "", "register_full_backward_hook"], [113, 1, 1, "", "register_full_backward_pre_hook"], [113, 1, 1, "", "register_gym"], [113, 1, 1, "", "register_load_state_dict_post_hook"], [113, 1, 1, "", "register_module"], [113, 1, 1, "", "register_parameter"], [113, 1, 1, "", "register_state_dict_pre_hook"], [113, 1, 1, "", "requires_grad_"], [113, 1, 1, "", "reset"], [113, 3, 1, "", "reset_keys"], [113, 3, 1, "", "reward_key"], [113, 3, 1, "", "reward_keys"], [113, 3, 1, "", "reward_spec"], [113, 1, 1, "", "rollout"], [113, 1, 1, "", "set_extra_state"], [113, 1, 1, "", "set_seed"], [113, 3, 1, "", "shape"], [113, 1, 1, "", "share_memory"], [113, 3, 1, "", "specs"], [113, 1, 1, "", "state_dict"], [113, 3, 1, "", "state_spec"], [113, 1, 1, "", "step"], [113, 1, 1, "", "step_and_maybe_reset"], [113, 1, 1, "", "to"], [113, 1, 1, "", "to_empty"], [113, 1, 1, "", "train"], [113, 1, 1, "", "type"], [113, 1, 1, "", "update_kwargs"], [113, 1, 1, "", "xpu"], [113, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[118, 2, 1, "", "DreamerDecoder"], [119, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[121, 0, 1, "", "ActionMask"], [122, 0, 1, "", "AutoResetEnv"], [123, 0, 1, "", "AutoResetTransform"], [124, 0, 1, "", "BatchSizeTransform"], [125, 0, 1, "", "BinarizeReward"], [126, 0, 1, "", "BurnInTransform"], [127, 0, 1, "", "CatFrames"], [128, 0, 1, "", "CatTensors"], [129, 0, 1, "", "CenterCrop"], [130, 0, 1, "", "ClipTransform"], [131, 0, 1, "", "Compose"], [132, 0, 1, "", "DTypeCastTransform"], [133, 0, 1, "", "DeviceCastTransform"], [134, 0, 1, "", "DiscreteActionProjection"], [135, 0, 1, "", "DoubleToFloat"], [136, 0, 1, "", "EndOfLifeTransform"], [137, 0, 1, "", "ExcludeTransform"], [138, 0, 1, "", "FiniteTensorDictCheck"], [139, 0, 1, "", "FlattenObservation"], [140, 0, 1, "", "FrameSkipTransform"], [141, 0, 1, "", "GrayScale"], [142, 0, 1, "", "InitTracker"], [143, 0, 1, "", "KLRewardTransform"], [144, 0, 1, "", "NoopResetEnv"], [145, 0, 1, "", "ObservationNorm"], [146, 0, 1, "", "ObservationTransform"], [147, 0, 1, "", "PermuteTransform"], [148, 0, 1, "", "PinMemoryTransform"], [149, 0, 1, "", "R3MTransform"], [150, 0, 1, "", "RandomCropTensorDict"], [151, 0, 1, "", "RemoveEmptySpecs"], [152, 0, 1, "", "RenameTransform"], [153, 0, 1, "", "Resize"], [154, 0, 1, "", "Reward2GoTransform"], [155, 0, 1, "", "RewardClipping"], [156, 0, 1, "", "RewardScaling"], [157, 0, 1, "", "RewardSum"], [158, 0, 1, "", "SelectTransform"], [159, 0, 1, "", "SignTransform"], [160, 0, 1, "", "SqueezeTransform"], [161, 0, 1, "", "StepCounter"], [162, 0, 1, "", "TargetReturn"], [163, 0, 1, "", "TensorDictPrimer"], [164, 0, 1, "", "TimeMaxPool"], [165, 0, 1, "", "ToTensorImage"], [166, 0, 1, "", "Transform"], [167, 0, 1, "", "TransformedEnv"], [168, 0, 1, "", "UnsqueezeTransform"], [169, 0, 1, "", "VC1Transform"], [170, 0, 1, "", "VIPRewardTransform"], [171, 0, 1, "", "VIPTransform"], [172, 0, 1, "", "VecGymEnvTransform"], [173, 0, 1, "", "VecNorm"], [174, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[121, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[122, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[123, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "transform_env_batch_size"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[125, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[126, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[130, 1, 1, "", "transform_observation_spec"], [130, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[131, 1, 1, "", "append"], [131, 1, 1, "", "forward"], [131, 1, 1, "", "insert"], [131, 1, 1, "", "to"], [131, 1, 1, "", "transform_env_batch_size"], [131, 1, 1, "", "transform_env_device"], [131, 1, 1, "", "transform_input_spec"], [131, 1, 1, "", "transform_observation_spec"], [131, 1, 1, "", "transform_output_spec"], [131, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "transform_input_spec"], [132, 1, 1, "", "transform_observation_spec"], [132, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "transform_done_spec"], [133, 1, 1, "", "transform_env_device"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"], [133, 1, 1, "", "transform_output_spec"], [133, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[134, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "register_keys"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[138, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[145, 1, 1, "", "init_stats"], [145, 1, 1, "", "transform_input_spec"], [145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[147, 1, 1, "", "transform_input_spec"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[148, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[149, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[150, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "transform_input_spec"], [151, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_input_spec"], [152, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[153, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[154, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[155, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[156, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_input_spec"], [157, 1, 1, "", "transform_observation_spec"], [157, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[159, 1, 1, "", "transform_observation_spec"], [159, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "transform_input_spec"], [161, 1, 1, "", "transform_observation_spec"], [161, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_input_spec"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "to"], [163, 1, 1, "", "transform_input_spec"], [163, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[166, 3, 1, "", "container"], [166, 1, 1, "", "forward"], [166, 3, 1, "", "parent"], [166, 1, 1, "", "to"], [166, 1, 1, "", "transform_done_spec"], [166, 1, 1, "", "transform_env_batch_size"], [166, 1, 1, "", "transform_env_device"], [166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_observation_spec"], [166, 1, 1, "", "transform_output_spec"], [166, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[167, 1, 1, "", "add_truncated_keys"], [167, 1, 1, "", "append_transform"], [167, 3, 1, "", "batch_locked"], [167, 3, 1, "", "batch_size"], [167, 1, 1, "", "empty_cache"], [167, 1, 1, "", "eval"], [167, 3, 1, "", "input_spec"], [167, 1, 1, "", "insert_transform"], [167, 1, 1, "", "load_state_dict"], [167, 3, 1, "", "output_spec"], [167, 1, 1, "", "set_missing_tolerance"], [167, 1, 1, "", "set_seed"], [167, 1, 1, "", "state_dict"], [167, 1, 1, "", "to"], [167, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[168, 1, 1, "", "transform_input_spec"], [168, 1, 1, "", "transform_observation_spec"], [168, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "make_noload_model"], [169, 1, 1, "", "to"], [169, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[171, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[173, 1, 1, "", "build_td_for_shared_vecnorm"], [173, 1, 1, "", "forward"], [173, 1, 1, "", "get_extra_state"], [173, 1, 1, "", "set_extra_state"], [173, 1, 1, "", "to_observation_norm"], [173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.rb_transforms": [[175, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[175, 1, 1, "", "add_module"], [175, 1, 1, "", "apply"], [175, 1, 1, "", "bfloat16"], [175, 1, 1, "", "buffers"], [175, 1, 1, "", "children"], [175, 1, 1, "", "compile"], [175, 3, 1, "", "container"], [175, 1, 1, "", "cpu"], [175, 1, 1, "", "cuda"], [175, 1, 1, "", "double"], [175, 1, 1, "", "eval"], [175, 1, 1, "", "extra_repr"], [175, 1, 1, "", "float"], [175, 1, 1, "", "forward"], [175, 1, 1, "", "get_buffer"], [175, 1, 1, "", "get_extra_state"], [175, 1, 1, "", "get_parameter"], [175, 1, 1, "", "get_submodule"], [175, 1, 1, "", "half"], [175, 1, 1, "", "ipu"], [175, 1, 1, "", "load_state_dict"], [175, 1, 1, "", "modules"], [175, 3, 1, "", "n_steps"], [175, 1, 1, "", "named_buffers"], [175, 1, 1, "", "named_children"], [175, 1, 1, "", "named_modules"], [175, 1, 1, "", "named_parameters"], [175, 1, 1, "", "parameters"], [175, 3, 1, "", "parent"], [175, 1, 1, "", "register_backward_hook"], [175, 1, 1, "", "register_buffer"], [175, 1, 1, "", "register_forward_hook"], [175, 1, 1, "", "register_forward_pre_hook"], [175, 1, 1, "", "register_full_backward_hook"], [175, 1, 1, "", "register_full_backward_pre_hook"], [175, 1, 1, "", "register_load_state_dict_post_hook"], [175, 1, 1, "", "register_module"], [175, 1, 1, "", "register_parameter"], [175, 1, 1, "", "register_state_dict_pre_hook"], [175, 1, 1, "", "requires_grad_"], [175, 1, 1, "", "set_extra_state"], [175, 1, 1, "", "share_memory"], [175, 1, 1, "", "state_dict"], [175, 1, 1, "", "to"], [175, 1, 1, "", "to_empty"], [175, 1, 1, "", "train"], [175, 1, 1, "", "transform_done_spec"], [175, 1, 1, "", "transform_env_batch_size"], [175, 1, 1, "", "transform_env_device"], [175, 1, 1, "", "transform_input_spec"], [175, 1, 1, "", "transform_observation_spec"], [175, 1, 1, "", "transform_output_spec"], [175, 1, 1, "", "transform_reward_spec"], [175, 1, 1, "", "type"], [175, 1, 1, "", "xpu"], [175, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[176, 2, 1, "", "check_env_specs"], [177, 2, 1, "", "exploration_mode"], [178, 2, 1, "", "exploration_type"], [179, 2, 1, "", "get_available_libraries"], [180, 2, 1, "", "make_composite_from_td"], [181, 2, 1, "", "set_exploration_mode"], [182, 2, 1, "", "set_exploration_type"], [183, 2, 1, "", "step_mdp"], [184, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[185, 0, 1, "", "CEMPlanner"], [186, 0, 1, "", "Conv3dNet"], [187, 0, 1, "", "ConvNet"], [188, 0, 1, "", "DTActor"], [189, 0, 1, "", "DdpgCnnActor"], [190, 0, 1, "", "DdpgCnnQNet"], [191, 0, 1, "", "DdpgMlpActor"], [192, 0, 1, "", "DdpgMlpQNet"], [193, 0, 1, "", "DecisionTransformer"], [194, 0, 1, "", "Delta"], [195, 0, 1, "", "DistributionalDQNnet"], [196, 0, 1, "", "DistributionalQValueHook"], [197, 0, 1, "", "DreamerActor"], [198, 0, 1, "", "DuelingCnnDQNet"], [199, 0, 1, "", "GRU"], [200, 0, 1, "", "GRUCell"], [201, 0, 1, "", "GRUModule"], [202, 0, 1, "", "IndependentNormal"], [203, 0, 1, "", "LSTM"], [204, 0, 1, "", "LSTMCell"], [205, 0, 1, "", "LSTMModule"], [206, 0, 1, "", "LSTMNet"], [207, 0, 1, "", "MLP"], [208, 0, 1, "", "MPCPlannerBase"], [209, 0, 1, "", "MPPIPlanner"], [210, 0, 1, "", "MaskedCategorical"], [211, 0, 1, "", "MaskedOneHotCategorical"], [212, 0, 1, "", "MultiAgentConvNet"], [213, 0, 1, "", "MultiAgentMLP"], [214, 0, 1, "", "NoisyLazyLinear"], [215, 0, 1, "", "NoisyLinear"], [216, 0, 1, "", "NormalParamWrapper"], [217, 0, 1, "", "ObsDecoder"], [218, 0, 1, "", "ObsEncoder"], [219, 0, 1, "", "OneHotCategorical"], [220, 0, 1, "", "OnlineDTActor"], [221, 0, 1, "", "QMixer"], [222, 0, 1, "", "QValueHook"], [223, 0, 1, "", "RSSMPosterior"], [224, 0, 1, "", "RSSMPrior"], [225, 0, 1, "", "Squeeze2dLayer"], [226, 0, 1, "", "SqueezeLayer"], [227, 0, 1, "", "TanhDelta"], [228, 0, 1, "", "TanhNormal"], [229, 0, 1, "", "TruncatedNormal"], [230, 0, 1, "", "VDNMixer"], [231, 0, 1, "", "VmapModule"], [232, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[185, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[186, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[187, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[188, 1, 1, "", "default_config"], [188, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[189, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[190, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[191, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[192, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[193, 0, 1, "", "DTConfig"], [193, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[194, 1, 1, "", "log_prob"], [194, 3, 1, "", "mean"], [194, 3, 1, "", "mode"], [194, 1, 1, "", "rsample"], [194, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[195, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[197, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[198, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[199, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[200, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[201, 1, 1, "", "forward"], [201, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[202, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[203, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[204, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[205, 1, 1, "", "forward"], [205, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[206, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[207, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[209, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[210, 1, 1, "", "log_prob"], [210, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[211, 1, 1, "", "log_prob"], [211, 1, 1, "", "rsample"], [211, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[214, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[216, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[217, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[218, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[219, 1, 1, "", "log_prob"], [219, 3, 1, "", "mode"], [219, 1, 1, "", "rsample"], [219, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[220, 1, 1, "", "default_config"], [220, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[221, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[223, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[224, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[226, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[227, 3, 1, "", "mean"], [227, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[228, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[229, 1, 1, "", "log_prob"], [229, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[230, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[231, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[233, 0, 1, "", "Actor"], [234, 0, 1, "", "ActorCriticOperator"], [235, 0, 1, "", "ActorCriticWrapper"], [236, 0, 1, "", "ActorValueOperator"], [237, 0, 1, "", "AdditiveGaussianWrapper"], [238, 0, 1, "", "DecisionTransformerInferenceWrapper"], [239, 0, 1, "", "DistributionalQValueActor"], [240, 0, 1, "", "DistributionalQValueModule"], [241, 0, 1, "", "EGreedyModule"], [242, 0, 1, "", "EGreedyWrapper"], [243, 0, 1, "", "LMHeadActorValueOperator"], [244, 0, 1, "", "MultiStepActorWrapper"], [245, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [246, 0, 1, "", "ProbabilisticActor"], [247, 0, 1, "", "QValueActor"], [248, 0, 1, "", "QValueModule"], [249, 0, 1, "", "SafeModule"], [250, 0, 1, "", "SafeProbabilisticModule"], [251, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [252, 0, 1, "", "SafeSequential"], [253, 0, 1, "", "TanhModule"], [254, 0, 1, "", "ValueOperator"], [255, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[234, 1, 1, "", "get_critic_operator"], [234, 1, 1, "", "get_policy_head"], [234, 1, 1, "", "get_value_head"], [234, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[235, 1, 1, "", "get_policy_head"], [235, 1, 1, "", "get_policy_operator"], [235, 1, 1, "", "get_value_head"], [235, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[236, 1, 1, "", "get_policy_head"], [236, 1, 1, "", "get_policy_operator"], [236, 1, 1, "", "get_value_head"], [236, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "mask_context"], [238, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[240, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[244, 1, 1, "", "forward"], [244, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[248, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[249, 1, 1, "", "random"], [249, 1, 1, "", "random_sample"], [249, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[250, 1, 1, "", "random"], [250, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[253, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[255, 1, 1, "", "get_reward_operator"], [255, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[256, 0, 1, "", "biased_softplus"], [257, 0, 1, "", "inv_softplus"], [258, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[256, 1, 1, "", "forward"]], "torchrl.objectives": [[259, 0, 1, "", "A2CLoss"], [260, 0, 1, "", "CQLLoss"], [261, 0, 1, "", "ClipPPOLoss"], [262, 0, 1, "", "DDPGLoss"], [263, 0, 1, "", "DQNLoss"], [264, 0, 1, "", "DTLoss"], [265, 0, 1, "", "DiscreteCQLLoss"], [266, 0, 1, "", "DiscreteIQLLoss"], [267, 0, 1, "", "DiscreteSACLoss"], [268, 0, 1, "", "DistributionalDQNLoss"], [269, 0, 1, "", "DreamerActorLoss"], [270, 0, 1, "", "DreamerModelLoss"], [271, 0, 1, "", "DreamerValueLoss"], [272, 0, 1, "", "HardUpdate"], [273, 0, 1, "", "IQLLoss"], [274, 0, 1, "", "KLPENPPOLoss"], [275, 0, 1, "", "LossModule"], [276, 0, 1, "", "OnlineDTLoss"], [277, 0, 1, "", "PPOLoss"], [278, 0, 1, "", "REDQLoss"], [279, 0, 1, "", "ReinforceLoss"], [280, 0, 1, "", "SACLoss"], [281, 0, 1, "", "SoftUpdate"], [282, 0, 1, "", "TD3Loss"], [283, 0, 1, "", "ValueEstimators"], [284, 0, 1, "", "default_value_kwargs"], [285, 0, 1, "", "distance_loss"], [286, 0, 1, "", "hold_out_net"], [287, 0, 1, "", "hold_out_params"], [289, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[261, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[264, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[266, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[270, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[271, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "loss_value_diff"], [273, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[274, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[275, 1, 1, "", "convert_to_functional"], [275, 1, 1, "", "forward"], [275, 1, 1, "", "make_value_estimator"], [275, 1, 1, "", "named_parameters"], [275, 1, 1, "", "parameters"], [275, 1, 1, "", "set_keys"], [275, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[276, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "load_state_dict"], [280, 1, 1, "", "make_value_estimator"], [280, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[288, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[290, 0, 1, "", "GAE"], [291, 0, 1, "", "TD0Estimator"], [292, 0, 1, "", "TD1Estimator"], [293, 0, 1, "", "TDLambdaEstimator"], [294, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[292, 1, 1, "", "forward"], [292, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[294, 1, 1, "", "forward"], [294, 1, 1, "", "set_keys"], [294, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[295, 0, 1, "", "generalized_advantage_estimate"], [296, 0, 1, "", "reward2go"], [297, 0, 1, "", "td0_advantage_estimate"], [298, 0, 1, "", "td0_return_estimate"], [299, 0, 1, "", "td1_advantage_estimate"], [300, 0, 1, "", "td1_return_estimate"], [301, 0, 1, "", "td_lambda_advantage_estimate"], [302, 0, 1, "", "td_lambda_return_estimate"], [303, 0, 1, "", "vec_generalized_advantage_estimate"], [304, 0, 1, "", "vec_td1_advantage_estimate"], [305, 0, 1, "", "vec_td1_return_estimate"], [306, 0, 1, "", "vec_td_lambda_advantage_estimate"], [307, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[308, 2, 1, "", "PixelRenderTransform"], [309, 2, 1, "", "TensorDictRecorder"], [310, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[311, 2, 1, "", "Logger"], [313, 2, 1, "", "generate_exp_name"], [314, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[312, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[315, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[316, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[317, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[318, 0, 1, "", "BatchSubSampler"], [319, 0, 1, "", "ClearCudaCache"], [320, 0, 1, "", "CountFramesLog"], [321, 0, 1, "", "LogReward"], [322, 0, 1, "", "OptimizerHook"], [323, 0, 1, "", "Recorder"], [324, 0, 1, "", "ReplayBufferTrainer"], [325, 0, 1, "", "RewardNormalizer"], [326, 0, 1, "", "SelectKeys"], [327, 0, 1, "", "Trainer"], [328, 0, 1, "", "TrainerHookBase"], [329, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[318, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[319, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[320, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[321, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[322, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[323, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[324, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[325, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[326, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[328, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[329, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[330, 2, 1, "", "correct_for_frame_skip"], [331, 2, 1, "", "get_stats_random_rollout"], [332, 2, 1, "", "make_collector_offpolicy"], [333, 2, 1, "", "make_collector_onpolicy"], [334, 2, 1, "", "make_dqn_loss"], [335, 2, 1, "", "make_redq_loss"], [336, 2, 1, "", "make_redq_model"], [337, 2, 1, "", "make_replay_buffer"], [338, 2, 1, "", "make_target_updater"], [339, 2, 1, "", "make_trainer"], [340, 2, 1, "", "parallel_env_constructor"], [341, 2, 1, "", "sync_async_collector"], [342, 2, 1, "", "sync_sync_collector"], [343, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 347, 348, 349, 350], "instal": [0, 6, 7], "get": 0, "start": 0, "tutori": 0, "basic": 0, "intermedi": [0, 8], "advanc": 0, "refer": [0, 345], "knowledg": [0, 346], "base": [0, 2, 7, 346], "indic": 0, "tabl": 0, "collector": 1, "packag": [1, 2, 3, 347, 348, 349, 350], "batch": 1, "size": 1, "replai": [1, 2], "buffer": [1, 2], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4], "distribut": [1, 347], "helper": [1, 3], "function": [1, 4, 348], "compos": [2, 131], "support": 2, "type": 2, "choos": 2, "storag": [2, 76], "sampl": 2, "index": 2, "share": 2, "across": 2, "process": 2, "store": 2, "trajectori": 2, "checkpoint": [2, 349], "episod": [2, 4], "format": 2, "ted": 2, "The": 2, "rational": 2, "behind": 2, "structur": 2, "dimension": [2, 4], "tensordict": [2, 347], "special": 2, "case": 2, "footnot": 2, "multi": [2, 3, 347, 348], "agent": [2, 3, 4, 347, 348], "present": 2, "memori": 2, "polici": [2, 4], "rnn": 2, "transform": [2, 3, 166], "step": 2, "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 348], "learn": [2, 4], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 347, 348, 349], "env": 3, "vector": 3, "environ": [3, 4, 6, 7], "auto": 3, "reset": 3, "clone": [3, 7], "mask": 3, "action": [3, 4], "record": [3, 323, 349], "video": 3, "domain": [3, 347], "specif": [3, 347], "librari": 3, "thing": 4, "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9], "gener": [4, 347], "have": 4, "you": 4, "valid": 4, "your": [4, 6], "algorithm": [4, 347], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": 4, "return": [4, 348], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": 4, "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": 4, "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": 4, "standard": 4, "explor": [4, 347], "valu": [4, 347, 348], "loss": 4, "earli": 4, "train": [4, 8, 348], "roughli": 4, "uniformli": 4, "random": 4, "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": 4, "increas": 4, "an": 4, "dynam": 4, "can": 4, "low": 4, "forward": 4, "model": [4, 347], "also": 4, "us": [4, 6, 9], "offlin": 4, "observ": 4, "space": 4, "effect": 4, "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": 7, "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": 7, "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": 10, "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "lazystackedcompositespec": 27, "lazystackedtensorspec": 28, "multidiscretetensorspec": 29, "multionehotdiscretetensorspec": 30, "multistep": 31, "nontensorspec": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "ataridqnexperiencereplai": 52, "basedatasetexperiencereplai": 53, "d4rlexperiencereplai": 54, "gendgrlexperiencereplai": 55, "minariexperiencereplai": 56, "openmlexperiencereplai": 57, "openxexperiencereplai": 58, "robosetexperiencereplai": 59, "vd4rlexperiencereplai": 60, "get_dataload": 61, "immutabledatasetwrit": 62, "lazymemmapstorag": 63, "lazytensorstorag": 64, "liststorag": 65, "prioritizedsampl": 66, "prioritizedslicesampl": 67, "randomsampl": 68, "replaybufferensembl": 69, "roundrobinwrit": 70, "sampler": 71, "samplerensembl": 72, "samplerwithoutreplac": 73, "slicesampl": 74, "slicesamplerwithoutreplac": 75, "storageensembl": 77, "tensordictmaxvaluewrit": 78, "tensordictroundrobinwrit": 79, "tensorstorag": 80, "writer": 81, "writerensembl": 82, "braxenv": 83, "braxwrapp": 84, "dmcontrolenv": 85, "dmcontrolwrapp": 86, "envbas": 87, "envcreat": 88, "envmetadata": 89, "gymenv": 90, "gymlikeenv": 91, "gymwrapp": 92, "habitatenv": 93, "isaacgymenv": 94, "isaacgymwrapp": 95, "jumanjienv": 96, "jumanjiwrapp": 97, "mogymenv": 98, "mogymwrapp": 99, "marlgroupmaptyp": 100, "meltingpotenv": 101, "meltingpotwrapp": 102, "modelbasedenvbas": 103, "multithreadedenv": 104, "multithreadedenvwrapp": 105, "openmlenv": 106, "parallelenv": 107, "pettingzooenv": 108, "pettingzoowrapp": 109, "robohiveenv": 110, "smacv2env": 111, "smacv2wrapp": 112, "serialenv": 113, "vmasenv": 114, "vmaswrapp": 115, "check_marl_group": 116, "gym_backend": 117, "dreamerdecod": 118, "dreamerenv": 119, "set_gym_backend": 120, "actionmask": 121, "autoresetenv": 122, "autoresettransform": 123, "batchsizetransform": 124, "binarizereward": 125, "burnintransform": 126, "catfram": 127, "cattensor": 128, "centercrop": 129, "cliptransform": 130, "dtypecasttransform": 132, "devicecasttransform": 133, "discreteactionproject": 134, "doubletofloat": 135, "endoflifetransform": 136, "excludetransform": 137, "finitetensordictcheck": 138, "flattenobserv": 139, "frameskiptransform": 140, "grayscal": 141, "inittrack": 142, "klrewardtransform": 143, "noopresetenv": 144, "observationnorm": 145, "observationtransform": 146, "permutetransform": 147, "pinmemorytransform": 148, "r3mtransform": 149, "randomcroptensordict": 150, "removeemptyspec": 151, "renametransform": 152, "resiz": 153, "reward2gotransform": 154, "rewardclip": 155, "rewardsc": 156, "rewardsum": 157, "selecttransform": 158, "signtransform": 159, "squeezetransform": 160, "stepcount": 161, "targetreturn": 162, "tensordictprim": 163, "timemaxpool": 164, "totensorimag": 165, "transformedenv": 167, "unsqueezetransform": 168, "vc1transform": 169, "viprewardtransform": 170, "viptransform": 171, "vecgymenvtransform": 172, "vecnorm": 173, "gsdenois": 174, "multisteptransform": 175, "check_env_spec": 176, "exploration_mod": 177, "exploration_typ": 178, "get_available_librari": 179, "make_composite_from_td": 180, "set_exploration_mod": 181, "set_exploration_typ": 182, "step_mdp": 183, "terminated_or_trunc": 184, "cemplann": 185, "conv3dnet": 186, "convnet": 187, "dtactor": 188, "ddpgcnnactor": 189, "ddpgcnnqnet": 190, "ddpgmlpactor": 191, "ddpgmlpqnet": 192, "decisiontransform": 193, "delta": 194, "distributionaldqnnet": 195, "distributionalqvaluehook": 196, "dreameractor": 197, "duelingcnndqnet": 198, "gru": 199, "grucel": 200, "grumodul": 201, "independentnorm": 202, "lstm": 203, "lstmcell": 204, "lstmmodul": 205, "lstmnet": 206, "mlp": 207, "mpcplannerbas": 208, "mppiplann": 209, "maskedcategor": 210, "maskedonehotcategor": 211, "multiagentconvnet": 212, "multiagentmlp": 213, "noisylazylinear": 214, "noisylinear": 215, "normalparamwrapp": 216, "obsdecod": 217, "obsencod": 218, "onehotcategor": 219, "onlinedtactor": 220, "qmixer": [221, 348], "qvaluehook": 222, "rssmposterior": 223, "rssmprior": 224, "squeeze2dlay": 225, "squeezelay": 226, "tanhdelta": 227, "tanhnorm": 228, "truncatednorm": 229, "vdnmixer": 230, "vmapmodul": 231, "reset_nois": 232, "actor": [233, 347], "actorcriticoper": 234, "actorcriticwrapp": 235, "actorvalueoper": 236, "additivegaussianwrapp": 237, "decisiontransformerinferencewrapp": 238, "distributionalqvalueactor": 239, "distributionalqvaluemodul": 240, "egreedymodul": 241, "egreedywrapp": 242, "lmheadactorvalueoper": 243, "multistepactorwrapp": 244, "ornsteinuhlenbeckprocesswrapp": 245, "probabilisticactor": 246, "qvalueactor": 247, "qvaluemodul": 248, "safemodul": [249, 347], "safeprobabilisticmodul": 250, "safeprobabilistictensordictsequenti": 251, "safesequenti": 252, "tanhmodul": 253, "valueoper": 254, "worldmodelwrapp": 255, "biased_softplu": 256, "inv_softplu": 257, "map": 258, "a2closs": 259, "cqlloss": 260, "clipppoloss": 261, "ddpgloss": 262, "dqnloss": 263, "dtloss": 264, "discretecqlloss": 265, "discreteiqlloss": 266, "discretesacloss": 267, "distributionaldqnloss": 268, "dreameractorloss": 269, "dreamermodelloss": 270, "dreamervalueloss": 271, "hardupd": 272, "iqlloss": 273, "klpenppoloss": 274, "lossmodul": 275, "onlinedtloss": 276, "ppoloss": 277, "redqloss": 278, "reinforceloss": 279, "sacloss": 280, "softupd": 281, "td3loss": 282, "valueestim": 283, "default_value_kwarg": 284, "distance_loss": 285, "hold_out_net": 286, "hold_out_param": 287, "qmixerloss": 288, "next_state_valu": 289, "gae": 290, "td0estim": 291, "td1estim": 292, "tdlambdaestim": 293, "valueestimatorbas": 294, "generalized_advantage_estim": 295, "reward2go": 296, "td0_advantage_estim": 297, "td0_return_estim": 298, "td1_advantage_estim": 299, "td1_return_estim": 300, "td_lambda_advantage_estim": 301, "td_lambda_return_estim": 302, "vec_generalized_advantage_estim": 303, "vec_td1_advantage_estim": 304, "vec_td1_return_estim": 305, "vec_td_lambda_advantage_estim": 306, "vec_td_lambda_return_estim": 307, "pixelrendertransform": 308, "tensordictrecord": 309, "videorecord": 310, "logger": [311, 349], "csvlogger": 312, "generate_exp_nam": 313, "get_logg": 314, "mlflowlogg": 315, "tensorboardlogg": 316, "wandblogg": 317, "batchsubsampl": 318, "clearcudacach": 319, "countframeslog": 320, "logreward": 321, "optimizerhook": 322, "replaybuffertrain": 324, "rewardnorm": 325, "selectkei": 326, "trainer": [327, 349], "trainerhookbas": 328, "updateweight": 329, "correct_for_frame_skip": 330, "get_stats_random_rollout": 331, "make_collector_offpolici": 332, "make_collector_onpolici": 333, "make_dqn_loss": 334, "make_redq_loss": 335, "make_redq_model": 336, "make_replay_buff": 337, "make_target_updat": 338, "make_train": 339, "parallel_env_constructor": 340, "sync_async_collector": 341, "sync_sync_collector": 342, "transformed_env_constructor": 343, "readm": [344, 352], "tuto": [344, 352], "api": 345, "contribut": 346, "content": 346, "modul": 347, "tensordictmodul": 347, "wrapper": 347, "probabilist": 347, "q": 347, "oper": 347, "join": 347, "hook": [347, 349], "regular": 347, "planner": 347, "object": 348, "dqn": 348, "ddpg": 348, "sac": 348, "redq": 348, "iql": 348, "cql": 348, "dt": 348, "td3": 348, "ppo": 348, "a2c": 348, "dreamer": 348, "builder": 349, "_util": 350, "comput": [351, 353], "time": [351, 353]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})