Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "NonTensorSpec", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 105, 106, 108, 109, 110, 111, 112, 115, 118, 123, 125, 126, 128, 129, 131, 134, 136, 137, 140, 146, 147, 151, 152, 153, 154, 156, 164, 165, 166, 167, 168, 169, 171, 174, 175, 177, 179, 189, 190, 192, 193, 194, 195, 202, 204, 206, 208, 209, 210, 211, 215, 216, 217, 228, 229, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 258, 261, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 311, 313, 316, 320, 325, 326, 330, 331, 334, 343, 344, 345, 346, 349, 350, 351, 355, 356, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 373, 374], "open": [0, 5, 7, 11, 60, 356, 367, 368, 373], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374], "reinforc": [0, 3, 9, 57, 103, 104, 129, 192, 193, 194, 195, 199, 243, 248, 262, 263, 267, 268, 269, 271, 275, 276, 282, 283, 284, 348, 354, 356, 359, 360, 365, 369, 372, 373], "learn": [0, 3, 7, 8, 9, 17, 33, 57, 58, 59, 61, 62, 103, 104, 108, 129, 192, 193, 194, 195, 199, 212, 218, 243, 248, 262, 263, 267, 268, 269, 271, 275, 276, 281, 282, 283, 284, 348, 350, 351, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 371, 372, 373, 374], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 54, 105, 164, 218, 236, 249, 257, 262, 264, 277, 278, 280, 282, 321, 347, 349, 350, 351, 352, 355, 356, 357, 362, 363, 365, 367, 368, 370, 371, 374], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 39, 45, 87, 88, 97, 106, 182, 348, 349, 350, 353, 355, 356, 357, 359, 360, 361, 362, 367, 368, 369, 374], "pytorch": [0, 1, 2, 3, 58, 116, 117, 167, 179, 202, 206, 217, 218, 330, 347, 349, 352, 355, 357, 358, 359, 361, 362, 363, 365, 367, 368, 369, 370, 373, 374], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 33, 45, 57, 89, 93, 97, 102, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 122, 175, 177, 206, 320, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 92, 93, 97, 98, 99, 102, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 122, 123, 125, 126, 128, 129, 132, 133, 134, 136, 137, 138, 146, 147, 151, 152, 156, 159, 163, 164, 165, 168, 169, 171, 173, 175, 177, 179, 187, 188, 189, 190, 192, 202, 204, 205, 206, 208, 211, 212, 215, 216, 218, 219, 232, 234, 236, 240, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 311, 313, 320, 326, 339, 344, 345, 346, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "directli": [0, 3, 4, 8, 22, 54, 71, 85, 86, 89, 92, 93, 105, 109, 115, 156, 174, 278, 346, 350, 356, 357, 359, 367, 368, 369, 371], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 125, 126, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 144, 145, 147, 149, 151, 152, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 183, 186, 187, 188, 189, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219, 222, 223, 224, 225, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 285, 287, 291, 292, 293, 294, 295, 296, 299, 311, 312, 313, 321, 327, 330, 333, 334, 339, 340, 342, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374], "pypi": [0, 2, 373], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 76, 89, 93, 96, 103, 104, 106, 109, 110, 111, 112, 115, 116, 117, 133, 151, 165, 167, 168, 169, 171, 173, 176, 177, 189, 190, 202, 205, 206, 210, 216, 217, 224, 232, 233, 237, 239, 252, 253, 313, 320, 327, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 369, 371, 374], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 80, 89, 93, 96, 97, 103, 104, 109, 110, 111, 112, 115, 116, 117, 167, 171, 176, 177, 199, 206, 210, 217, 219, 236, 240, 242, 243, 252, 257, 262, 271, 278, 280, 293, 298, 306, 320, 325, 349, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 374], "about": [0, 3, 5, 7, 9, 17, 18, 19, 45, 58, 61, 62, 351, 355, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 373, 374], "instruct": [0, 6, 7, 10, 21, 56, 136, 138, 355, 356, 357, 358, 367, 368, 371], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 109, 115, 237, 238, 239, 350, 355, 359, 361, 362, 364, 366, 368], "section": [0, 2, 3, 4, 23, 202, 206, 356, 359, 364, 367, 368], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 40, 63, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 189, 190, 202, 205, 206, 210, 216, 232, 252, 327, 355, 356, 357, 358, 359, 367, 369], "pip": [0, 10, 59, 359, 360, 361, 362, 363, 364, 368, 373, 374], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 31, 32, 33, 35, 37, 40, 43, 44, 47, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 70, 71, 74, 76, 77, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 105, 106, 107, 109, 110, 111, 112, 115, 126, 128, 129, 130, 131, 132, 134, 137, 141, 146, 147, 149, 151, 152, 155, 156, 159, 160, 164, 165, 166, 169, 171, 173, 174, 175, 177, 187, 189, 190, 196, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 234, 236, 240, 243, 244, 245, 247, 248, 249, 250, 251, 256, 262, 263, 264, 265, 266, 268, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 317, 321, 327, 334, 339, 342, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "python": [0, 3, 5, 6, 7, 10, 20, 107, 122, 202, 203, 204, 206, 207, 208, 213, 214, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 76, 77, 80, 82, 89, 93, 109, 115, 125, 126, 129, 130, 141, 147, 151, 152, 167, 169, 171, 190, 202, 204, 206, 208, 210, 215, 216, 217, 221, 236, 241, 242, 243, 249, 250, 252, 253, 264, 273, 277, 278, 280, 312, 313, 329, 350, 354, 355, 356, 357, 358, 359, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "low": [0, 25, 89, 93, 109, 115, 132, 136, 183, 243, 249, 256, 355, 356, 357, 367, 368, 369, 373, 374], "high": [0, 9, 25, 36, 38, 41, 43, 89, 93, 109, 115, 132, 136, 146, 183, 243, 249, 256, 293, 298, 306, 355, 356, 357, 367, 368, 369, 371, 373, 374], "level": [0, 2, 3, 4, 21, 26, 29, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 129, 163, 277, 355, 356, 362, 373], "abstract": [0, 3, 8, 24, 25, 26, 28, 29, 30, 31, 34, 46, 48, 49, 54, 55, 59, 83, 89, 148, 211, 297, 322, 331, 352, 357, 369, 373], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 74, 75, 77, 78, 79, 80, 82, 89, 90, 92, 93, 94, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 124, 125, 126, 128, 129, 132, 133, 134, 136, 137, 138, 140, 141, 145, 146, 149, 151, 156, 159, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 183, 186, 187, 188, 195, 197, 202, 203, 204, 206, 207, 208, 209, 211, 213, 214, 215, 218, 222, 224, 227, 241, 242, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 295, 296, 297, 311, 320, 327, 342, 346, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 47, 128, 136, 234, 278, 350, 373], "effici": [0, 1, 2, 4, 8, 202, 218, 350, 355, 356, 357, 358, 361, 362, 364, 366, 367, 368, 370, 371, 373], "modular": [0, 54, 255, 371, 373], "document": [0, 2, 5, 7, 17, 18, 20, 33, 60, 89, 93, 109, 115, 169, 177, 347, 356, 358, 359, 362, 365, 373], "properli": [0, 1, 89, 93, 109, 115, 186, 357, 363, 367, 368, 369, 373], "test": [0, 3, 5, 85, 86, 98, 99, 103, 104, 171, 179, 204, 208, 209, 326, 342, 357, 358, 373], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 74, 76, 77, 78, 80, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 106, 107, 109, 110, 111, 112, 115, 116, 117, 125, 126, 128, 129, 133, 134, 137, 138, 139, 147, 149, 151, 156, 158, 159, 160, 163, 164, 165, 168, 169, 171, 173, 174, 177, 179, 186, 187, 188, 192, 193, 194, 195, 196, 199, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 225, 226, 227, 236, 237, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 299, 311, 313, 315, 318, 319, 320, 321, 325, 342, 344, 345, 348, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374], "code": [0, 3, 5, 7, 8, 60, 89, 93, 109, 115, 151, 169, 171, 202, 203, 204, 206, 207, 208, 255, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374], "aim": [0, 2, 3, 7, 29, 30, 151, 171, 173, 210, 333, 349, 350, 351, 355, 356, 373], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 59, 62, 63, 65, 66, 78, 79, 82, 84, 85, 86, 94, 98, 99, 106, 108, 109, 110, 112, 126, 129, 138, 147, 165, 166, 168, 182, 199, 234, 242, 243, 249, 252, 255, 271, 293, 294, 295, 296, 318, 348, 350, 352, 357, 358, 359, 360, 368, 369, 371, 373], "research": [0, 7, 9, 103, 104, 373], "most": [0, 1, 2, 3, 7, 8, 13, 14, 33, 76, 77, 89, 93, 109, 115, 136, 174, 179, 355, 357, 359, 360, 361, 362, 363, 364, 369, 373, 374], "written": [0, 1, 3, 11, 36, 38, 41, 47, 56, 57, 60, 65, 69, 71, 76, 77, 87, 88, 89, 92, 93, 94, 95, 109, 112, 115, 129, 138, 145, 159, 163, 166, 174, 177, 186, 187, 236, 248, 249, 252, 253, 257, 262, 264, 277, 280, 282, 292, 311, 312, 313, 350, 351, 352, 355, 358, 360, 366, 369, 373], "highli": [0, 2, 359, 373, 374], "wai": [0, 1, 2, 3, 4, 54, 58, 71, 80, 97, 151, 154, 173, 174, 206, 280, 293, 294, 295, 296, 350, 355, 356, 357, 359, 361, 362, 366, 367, 368, 369, 370, 371, 373, 374], "easili": [0, 1, 2, 3, 7, 89, 93, 109, 115, 339, 351, 355, 356, 357, 359, 360, 361, 364, 367, 368, 373, 374], "swap": [0, 1, 3, 92, 174, 357, 370, 373], "compon": [0, 1, 2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 71, 78, 79, 82, 199, 225, 242, 243, 251, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 325, 330, 355, 356, 357, 358, 360, 361, 364, 366, 367, 368, 369, 370, 373], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 39, 40, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 79, 89, 90, 93, 103, 104, 109, 110, 111, 115, 116, 117, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 186, 191, 192, 196, 199, 200, 223, 224, 225, 233, 241, 246, 247, 256, 259, 261, 267, 279, 311, 313, 327, 339, 346, 348, 354, 356, 358, 360, 362, 363, 364, 365, 370, 372], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 37, 39, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 84, 89, 90, 93, 97, 102, 103, 104, 109, 110, 111, 115, 116, 117, 134, 137, 169, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 233, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 277, 313, 355, 356, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "write": [0, 2, 3, 8, 22, 33, 36, 38, 39, 41, 47, 69, 71, 76, 79, 84, 89, 93, 132, 149, 150, 159, 161, 163, 167, 187, 236, 252, 253, 255, 257, 265, 266, 268, 269, 270, 276, 281, 283, 285, 292, 297, 313, 350, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 75, 89, 93, 106, 109, 113, 114, 115, 126, 159, 168, 175, 177, 186, 187, 202, 204, 208, 248, 252, 253, 258, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 320, 355, 357, 358, 359, 361, 367, 368, 369, 373, 374], "ones": [0, 2, 22, 26, 33, 37, 40, 43, 44, 89, 93, 109, 110, 111, 115, 130, 133, 134, 135, 137, 147, 151, 156, 165, 168, 169, 171, 173, 177, 178, 213, 214, 234, 252, 262, 263, 265, 276, 280, 281, 283, 285, 299, 355, 357, 367, 368, 369, 371, 373, 374], "littl": [0, 1, 3, 45, 89, 93, 109, 115, 169, 262, 264, 277, 280, 282, 357, 358, 362, 371, 373, 374], "effort": [0, 3, 369, 371, 373], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 89, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 115, 116, 117, 122, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147, 151, 152, 153, 154, 156, 159, 160, 161, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 297, 311, 312, 320, 321, 323, 326, 327, 330, 332, 333, 334, 339, 342, 346, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "repo": [0, 6, 56, 129, 166, 171, 349, 368, 373], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 76, 77, 87, 88, 92, 94, 95, 112, 240, 245, 248, 266, 269, 276, 291, 361, 373], "align": [0, 202, 206, 373], "exist": [0, 2, 3, 4, 11, 17, 20, 33, 36, 38, 41, 47, 89, 93, 109, 115, 130, 135, 169, 177, 283, 334, 346, 367, 368, 373, 374], "ecosystem": [0, 362, 373], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 44, 46, 48, 49, 54, 60, 65, 66, 71, 74, 76, 80, 82, 89, 90, 93, 97, 103, 104, 109, 115, 116, 117, 126, 129, 163, 164, 165, 166, 169, 177, 202, 204, 206, 208, 215, 240, 243, 245, 247, 248, 253, 277, 313, 355, 356, 357, 358, 359, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "dataset": [0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 71, 74, 76, 77, 108, 175, 313, 348, 355, 356, 359, 370, 371, 373, 374], "pillar": [0, 373], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 125, 126, 128, 129, 130, 134, 135, 136, 137, 142, 146, 147, 151, 152, 153, 156, 159, 163, 164, 165, 166, 168, 169, 171, 174, 175, 179, 188, 204, 208, 209, 211, 212, 240, 247, 248, 268, 272, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 321, 323, 326, 333, 334, 335, 336, 339, 342, 343, 344, 345, 346, 348, 349, 350, 354, 360, 361, 362, 363, 365, 370, 371, 372], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 42, 47, 89, 93, 105, 109, 115, 134, 151, 165, 171, 173, 176, 177, 189, 190, 191, 196, 198, 204, 208, 210, 211, 212, 216, 223, 224, 233, 237, 238, 239, 246, 252, 258, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 291, 330, 335, 336, 337, 338, 339, 348, 349, 352, 354, 357, 359, 362, 365, 367, 368, 369, 371, 372, 374], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 115, 123, 126, 128, 129, 134, 135, 137, 139, 145, 147, 153, 156, 163, 169, 174, 177, 178, 179, 183, 187, 188, 199, 204, 208, 209, 212, 215, 216, 225, 234, 236, 242, 244, 245, 247, 248, 249, 250, 252, 255, 256, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 311, 313, 320, 321, 327, 330, 332, 335, 342, 344, 345, 346, 348, 350, 351, 352, 354, 358, 359, 360, 361, 365, 369, 370, 371, 372, 374], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 40, 42, 86, 89, 93, 98, 99, 104, 109, 110, 111, 115, 118, 129, 151, 156, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 196, 202, 206, 259, 260, 261, 278, 342, 348, 353, 355, 357, 360, 361, 362, 368, 369, 371, 373, 374], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 35, 36, 38, 41, 65, 66, 68, 69, 80, 82, 89, 90, 93, 109, 115, 116, 126, 128, 130, 133, 141, 147, 151, 159, 165, 168, 169, 171, 173, 177, 179, 202, 204, 205, 206, 208, 212, 216, 219, 225, 231, 232, 241, 243, 247, 249, 251, 252, 253, 283, 292, 293, 294, 295, 296, 311, 321, 333, 345, 350, 356, 357, 360, 361, 363, 367, 368, 370, 371, 373, 374], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 36, 38, 41, 80, 89, 90, 93, 109, 115, 116, 126, 128, 130, 133, 141, 147, 151, 159, 165, 168, 169, 171, 173, 177, 179, 202, 204, 205, 206, 207, 208, 212, 216, 231, 232, 241, 249, 252, 253, 283, 292, 302, 303, 304, 305, 307, 308, 309, 310, 311, 345, 350, 356, 357, 360, 363, 367, 368, 369, 370, 371, 373, 374], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 42, 54, 60, 126, 129, 156, 163, 177, 178, 248, 327, 330, 332, 335, 336, 342, 344, 345, 348, 352, 371, 374], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 26, 29, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 69, 71, 72, 74, 76, 77, 78, 81, 83, 84, 89, 93, 105, 109, 115, 133, 134, 137, 151, 165, 168, 169, 171, 173, 174, 175, 177, 186, 187, 188, 189, 190, 202, 203, 206, 207, 210, 212, 216, 236, 242, 243, 249, 251, 252, 257, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 299, 317, 321, 333, 339, 342, 343, 344, 345, 346, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374], "etc": [0, 2, 3, 7, 8, 11, 33, 48, 49, 60, 89, 93, 109, 115, 145, 169, 177, 210, 216, 356, 357, 362, 371, 373, 374], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 78, 89, 93, 109, 110, 111, 115, 125, 129, 134, 137, 138, 145, 146, 147, 163, 168, 169, 175, 177, 179, 187, 189, 190, 209, 210, 215, 216, 234, 247, 254, 255, 262, 264, 277, 280, 282, 288, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 321, 330, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "few": [0, 2, 8, 93, 313, 321, 357, 358, 360, 367, 368, 371, 373, 374], "depend": [0, 1, 2, 3, 4, 7, 8, 36, 38, 92, 94, 95, 112, 116, 117, 134, 137, 257, 280, 350, 355, 357, 358, 367, 368, 369, 373, 374], "possibl": [0, 2, 3, 4, 22, 28, 30, 33, 35, 57, 60, 62, 76, 80, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 189, 190, 202, 203, 206, 207, 252, 311, 326, 330, 350, 355, 357, 358, 360, 362, 363, 367, 368, 369, 371, 373, 374], "standard": [0, 3, 147, 158, 175, 188, 200, 212, 217, 218, 223, 240, 241, 285, 293, 294, 295, 296, 355, 356, 359, 360, 368, 371, 373], "numpi": [0, 3, 11, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 89, 93, 109, 115, 167, 330, 369, 371, 373, 374], "common": [0, 2, 3, 4, 93, 98, 123, 237, 238, 239, 246, 262, 263, 264, 269, 270, 276, 277, 280, 281, 282, 283, 285, 342, 349, 350, 352, 355, 357, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374], "openai": [0, 7, 23, 92, 94, 112, 357, 369, 373, 374], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 89, 90, 92, 93, 94, 95, 97, 103, 104, 106, 107, 109, 112, 115, 116, 117, 119, 122, 125, 129, 132, 138, 144, 145, 147, 149, 154, 156, 159, 165, 168, 174, 175, 177, 339, 342, 349, 355, 356, 357, 358, 359, 363, 364, 369, 370, 371, 373], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 77, 82, 87, 88, 89, 92, 93, 94, 95, 97, 106, 107, 109, 110, 111, 112, 115, 125, 129, 130, 132, 133, 134, 136, 137, 141, 147, 151, 152, 156, 163, 164, 165, 166, 168, 169, 171, 173, 175, 177, 206, 208, 209, 215, 216, 236, 241, 242, 249, 250, 252, 253, 254, 255, 262, 264, 265, 269, 270, 276, 277, 278, 280, 281, 282, 283, 284, 285, 293, 294, 295, 296, 297, 313, 320, 334, 352, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 79, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 151, 152, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 232, 234, 236, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 318, 320, 321, 323, 324, 325, 326, 327, 328, 330, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 350, 358, 359, 362, 367, 368, 369, 371, 373], "On": [0, 3, 7, 17, 18, 19, 20, 26, 57, 203, 207, 350, 356, 367, 368], "end": [0, 2, 3, 13, 14, 16, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 75, 76, 77, 89, 93, 109, 115, 138, 149, 163, 164, 169, 177, 189, 190, 202, 203, 206, 207, 211, 247, 283, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "come": [0, 1, 2, 3, 8, 33, 80, 89, 93, 102, 109, 115, 134, 137, 236, 237, 238, 239, 249, 257, 262, 264, 277, 280, 282, 313, 355, 356, 357, 358, 361, 362, 363, 364, 367, 368, 371, 373, 374], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 33, 35, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 75, 78, 82, 89, 91, 93, 103, 104, 105, 109, 110, 111, 115, 116, 117, 122, 123, 125, 126, 129, 130, 133, 134, 137, 144, 145, 151, 156, 163, 164, 165, 166, 168, 169, 171, 173, 175, 177, 179, 184, 185, 187, 202, 204, 206, 208, 211, 215, 216, 240, 241, 252, 270, 278, 280, 283, 297, 321, 326, 327, 336, 346, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "re": [0, 2, 3, 8, 33, 75, 89, 93, 109, 115, 177, 208, 213, 214, 249, 253, 320, 352, 355, 357, 358, 359, 361, 366, 367, 369, 373, 374], "usabl": [0, 352, 358, 373], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 71, 78, 79, 82, 89, 90, 93, 109, 115, 122, 125, 126, 134, 137, 169, 175, 177, 179, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 220, 221, 222, 223, 226, 227, 229, 232, 234, 237, 238, 239, 240, 241, 243, 244, 247, 248, 249, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 339, 342, 348, 350, 355, 358, 359, 360, 363, 366, 369, 371, 374], "cost": [0, 2, 28, 60, 262, 264, 277, 280, 282, 355, 356, 367, 368, 369, 371], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 119, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 186, 187, 188, 191, 192, 193, 194, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 222, 223, 224, 226, 227, 230, 231, 232, 233, 236, 237, 238, 239, 241, 247, 249, 251, 252, 253, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 317, 330, 333, 335, 339, 342, 343, 344, 345, 346, 348, 350, 352, 355, 356, 357, 358, 360, 361, 363, 366, 367, 368, 369, 370, 371, 373, 374], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 41, 45, 47, 54, 57, 61, 62, 68, 69, 76, 89, 90, 93, 97, 102, 106, 109, 110, 111, 115, 128, 134, 137, 167, 175, 177, 215, 216, 243, 248, 251, 348, 352, 355, 356, 358, 359, 367, 368, 369, 370, 371, 373, 374], "good": [0, 1, 4, 9, 109, 355, 357, 358, 360, 368, 373, 374], "runtim": [0, 2, 3, 33, 89, 93, 109, 115, 177, 369], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 47, 48, 49, 87, 88, 89, 92, 93, 94, 95, 109, 112, 115, 118, 134, 137, 146, 169, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 264, 273, 280, 283, 326, 330, 351, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 369, 374], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 79, 84, 85, 86, 89, 92, 93, 94, 98, 99, 102, 109, 110, 111, 112, 113, 114, 115, 116, 163, 175, 177, 237, 238, 239, 248, 270, 278, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374], "read": [0, 2, 3, 7, 22, 39, 42, 60, 65, 66, 67, 68, 71, 78, 79, 82, 89, 92, 93, 94, 109, 115, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 149, 150, 152, 153, 154, 156, 159, 160, 161, 163, 164, 165, 166, 168, 171, 172, 174, 175, 177, 187, 222, 236, 237, 238, 239, 242, 247, 249, 252, 253, 255, 257, 258, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 313, 326, 330, 339, 350, 355, 356, 357, 359, 360, 366, 367, 368, 369, 370, 374], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 352, 355, 359, 362, 366, 370, 374], "beyond": [0, 89, 93, 109, 115], "api": [0, 2, 3, 5, 110, 111, 112, 151, 173, 351, 352, 359, 360, 361, 362, 363, 367, 368, 369, 371, 373, 374], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 46, 48, 49, 50, 52, 76, 89, 90, 93, 105, 109, 115, 118, 129, 130, 140, 145, 152, 167, 169, 177, 179, 204, 208, 236, 242, 243, 249, 250, 251, 252, 253, 313, 347, 350, 351, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374], "paper": [0, 57, 60, 85, 86, 87, 88, 95, 98, 99, 103, 104, 106, 107, 112, 116, 117, 151, 171, 173, 202, 224, 233, 268, 275, 339, 355, 357, 367, 368], "releas": [0, 4, 7, 10, 33, 89, 93, 109, 115, 169, 177, 283, 373], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 332, 342, 352, 355, 373], "so": [0, 2, 3, 4, 6, 7, 10, 33, 36, 38, 41, 42, 89, 93, 103, 104, 109, 115, 165, 175, 177, 254, 255, 355, 357, 358, 361, 364, 367, 368, 369, 374], "make": [0, 2, 3, 4, 7, 33, 36, 37, 38, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 74, 78, 79, 84, 89, 93, 94, 97, 99, 101, 107, 109, 115, 139, 147, 151, 152, 156, 163, 171, 177, 179, 202, 203, 206, 207, 215, 216, 217, 242, 253, 262, 264, 277, 280, 282, 293, 294, 295, 296, 311, 327, 336, 346, 350, 351, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "sure": [0, 3, 4, 7, 59, 78, 93, 97, 156, 242, 346, 350, 355, 357, 358, 361, 367, 368, 369, 371, 373, 374], "alwai": [0, 2, 3, 13, 14, 19, 26, 29, 33, 54, 63, 89, 93, 109, 115, 145, 146, 177, 271, 278, 350, 351, 356, 357, 358, 367, 368, 369, 371], "enjoi": [0, 2, 3, 60, 362], "latest": [0, 2, 3, 10, 106, 110, 111, 327, 357, 367, 368, 369, 373], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 35, 47, 58, 69, 76, 77, 89, 93, 102, 109, 110, 111, 113, 114, 115, 126, 129, 141, 145, 149, 165, 166, 170, 175, 179, 189, 190, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 215, 217, 218, 253, 262, 264, 277, 280, 282, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 346, 350, 355, 356, 357, 358, 360, 361, 362, 364, 369, 371, 374], "recent": [0, 7, 11, 174, 374], "version": [0, 1, 2, 3, 6, 11, 33, 36, 38, 42, 57, 62, 76, 89, 92, 93, 94, 95, 106, 107, 109, 110, 112, 115, 116, 117, 174, 177, 186, 239, 262, 264, 277, 278, 280, 282, 283, 293, 296, 349, 350, 355, 357, 358, 359, 361, 364, 367, 368, 369, 370, 374], "although": [0, 1, 3, 8, 89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 352, 355, 356, 362, 371], "core": [0, 3, 8, 339, 352, 358, 360, 373], "guarante": [0, 2, 33, 36, 38, 41, 65, 66, 67, 78, 79, 82, 89, 93, 109, 115, 175, 177, 362, 373], "backward": [0, 8, 33, 85, 86, 89, 93, 109, 115, 175, 177, 202, 203, 206, 207, 262, 263, 265, 269, 270, 276, 280, 281, 282, 283, 285, 355, 357, 358, 361, 362, 364, 367, 368, 369], "compat": [0, 2, 3, 7, 11, 13, 14, 33, 56, 71, 74, 76, 77, 78, 80, 89, 93, 95, 108, 109, 115, 129, 163, 171, 175, 177, 202, 203, 204, 206, 207, 208, 250, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 288, 355, 358, 371, 373], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 80, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 142, 145, 147, 149, 151, 152, 153, 154, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 178, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 257, 259, 262, 263, 264, 265, 266, 268, 269, 270, 273, 276, 277, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 299, 301, 302, 303, 307, 308, 310, 311, 313, 321, 326, 327, 328, 339, 342, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374], "13": [0, 2, 5, 10, 11, 76, 77, 112, 174, 177, 354, 355, 356, 363, 368, 369, 370, 371, 372], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 37, 40, 43, 44, 56, 58, 59, 60, 61, 62, 93, 109, 151, 168, 173, 267, 278, 351, 352, 355, 356, 357, 358, 360, 362, 371, 374], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 74, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 183, 186, 187, 188, 198, 199, 204, 208, 209, 211, 212, 224, 225, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 311, 312, 321, 325, 326, 327, 329, 330, 339, 348, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 374], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 26, 29, 145, 153, 237, 238, 239, 252, 269, 276, 339, 348, 355, 367, 369, 373], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 33, 36, 37, 38, 40, 41, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 71, 89, 93, 109, 115, 122, 151, 173, 177, 212, 315, 320, 330, 352, 356, 364, 367], "root": [0, 2, 3, 26, 29, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 109, 129, 166, 186, 205, 231, 232, 358, 359, 367, 368, 369, 370, 371, 374], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 37, 45, 54, 57, 58, 59, 60, 61, 62, 68, 69, 85, 86, 87, 88, 95, 97, 98, 99, 103, 104, 106, 107, 108, 110, 111, 112, 116, 117, 129, 151, 171, 191, 192, 193, 194, 195, 196, 199, 200, 201, 206, 212, 213, 214, 218, 220, 221, 224, 226, 227, 233, 243, 248, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 293, 298, 306, 339, 347, 352, 365, 370, 373], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 54, 57, 58, 60, 85, 86, 87, 88, 95, 98, 99, 103, 104, 106, 107, 110, 111, 112, 116, 117, 126, 171, 352, 360, 364, 367, 368, 373], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 23, 57, 60, 61, 85, 86, 87, 88, 95, 97, 98, 99, 103, 104, 106, 107, 110, 111, 112, 116, 117, 352, 370, 373], "setup": [0, 7, 85, 86, 97, 98, 99], "py": [0, 3, 23, 122, 224, 233, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374], "develop": [0, 3, 4, 7, 97, 355, 373], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 89, 91, 93, 95, 96, 109, 112, 115, 120, 124, 125, 126, 128, 132, 136, 142, 145, 151, 152, 154, 161, 165, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 186, 188, 189, 190, 199, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 216, 218, 219, 234, 240, 241, 242, 243, 244, 247, 249, 250, 253, 255, 256, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 288, 291, 293, 294, 295, 296, 297, 299, 311, 314, 315, 318, 320, 323, 330, 332, 339, 342, 351, 354, 355, 357, 360, 361, 362, 365, 369, 372, 374], "seri": [0, 2, 7, 8, 35, 64, 72, 80, 81, 83, 84, 115, 146, 168, 313, 350, 351, 355, 356, 357, 363, 364, 367, 368, 371, 374], "quick": [0, 54], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 28, 42, 56, 62, 89, 93, 109, 115, 125, 128, 166, 168, 177, 280, 349, 350, 351, 355, 356, 357, 358, 360, 364, 367, 368, 369, 371, 374], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 71, 74, 75, 76, 77, 80, 82, 87, 88, 89, 90, 92, 93, 94, 95, 97, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 139, 141, 145, 146, 147, 151, 152, 155, 156, 159, 160, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 186, 187, 189, 190, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 234, 236, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 307, 308, 309, 310, 311, 317, 320, 325, 327, 330, 332, 334, 339, 342, 346, 349, 355, 356, 357, 358, 359, 361, 364, 366, 367, 368, 369, 371, 373, 374], "hurri": [0, 359], "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 46, 48, 49, 56, 75, 76, 77, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 125, 128, 141, 147, 152, 164, 166, 167, 189, 190, 202, 204, 206, 208, 209, 210, 213, 214, 220, 228, 234, 240, 241, 244, 247, 253, 293, 295, 296, 356, 357, 358, 359, 360, 367, 368, 369, 370, 371, 373, 374], "item": [0, 8, 13, 26, 29, 40, 47, 63, 75, 80, 140, 213, 214, 265, 266, 268, 321, 351, 352, 355, 357, 358, 361, 362, 367, 368, 369, 371], "navig": [0, 368], "previou": [0, 3, 4, 10, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 165, 177, 187, 202, 206, 227, 241, 357, 358, 359, 360, 364, 369, 374], "whenev": [0, 1, 2, 3, 22, 33, 37, 40, 43, 44, 54, 60, 69, 76, 77, 87, 88, 92, 94, 95, 103, 104, 112, 116, 117, 122, 144, 169, 174, 278, 293, 294, 295, 296, 311, 332, 350, 371], "want": [0, 2, 3, 6, 7, 8, 77, 147, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 350, 355, 356, 357, 358, 359, 361, 362, 363, 367, 368, 369, 370, 371, 373, 374], "ted": [0, 54, 56, 57, 58, 59, 60, 61, 62, 348, 354, 365, 372], "s": [0, 1, 2, 3, 6, 7, 8, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 76, 77, 80, 85, 86, 89, 93, 97, 98, 99, 103, 104, 106, 109, 110, 111, 115, 116, 117, 129, 133, 151, 163, 165, 167, 168, 169, 171, 173, 175, 177, 179, 189, 190, 204, 208, 214, 215, 216, 218, 224, 233, 237, 239, 240, 243, 244, 247, 249, 252, 253, 256, 263, 269, 276, 278, 283, 293, 294, 295, 296, 297, 311, 339, 350, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 42, 80, 85, 86, 89, 93, 102, 105, 108, 109, 115, 122, 128, 133, 136, 138, 145, 151, 152, 164, 165, 168, 169, 171, 173, 175, 176, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 291, 293, 294, 295, 296, 297, 311, 330, 337, 338, 342, 348, 351, 352, 354, 356, 357, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 374], "optim": [0, 1, 2, 8, 33, 42, 85, 86, 89, 93, 109, 115, 169, 177, 188, 212, 217, 218, 263, 278, 279, 280, 283, 325, 330, 342, 351, 352, 354, 357, 358, 359, 360, 362, 365, 367, 368, 369, 372], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 89, 93, 109, 112, 115, 126, 129, 147, 151, 173, 179, 247, 248, 263, 265, 268, 270, 281, 283, 285, 313, 321, 327, 330, 332, 333, 334, 342, 352, 354, 355, 358, 359, 360, 361, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374], "storag": [0, 1, 8, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 75, 76, 77, 79, 80, 82, 89, 91, 93, 109, 115, 128, 129, 134, 137, 156, 177, 348, 352, 354, 356, 357, 358, 359, 361, 364, 365, 367, 368, 370, 372], "log": [0, 3, 4, 8, 42, 197, 198, 199, 213, 214, 222, 232, 242, 243, 249, 253, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 320, 323, 324, 326, 330, 342, 350, 351, 352, 354, 355, 356, 357, 359, 360, 364, 365, 367, 368, 369, 372, 373], "your": [0, 2, 3, 7, 8, 10, 17, 33, 89, 93, 97, 102, 109, 110, 111, 115, 175, 177, 346, 349, 350, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 371, 372, 373], "own": [0, 1, 3, 13, 14, 16, 21, 33, 89, 93, 109, 110, 111, 115, 177, 313, 354, 356, 357, 359, 365, 367, 368, 369, 372], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 36, 38, 41, 42, 47, 54, 57, 63, 89, 93, 103, 104, 109, 110, 111, 115, 134, 142, 151, 164, 169, 171, 173, 177, 179, 192, 194, 204, 208, 240, 244, 245, 248, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 330, 332, 342, 348, 352, 354, 356, 359, 362, 363, 365, 370, 371, 372, 374], "loop": [0, 8, 36, 38, 41, 89, 93, 109, 115, 186, 240, 244, 245, 248, 280, 330, 352, 354, 355, 356, 359, 361, 362, 363, 365, 366, 371, 372], "ppo": [0, 4, 8, 249, 253, 264, 277, 280, 348, 350, 354, 355, 356, 360, 361, 365, 367, 372], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 80, 87, 88, 89, 90, 92, 93, 94, 106, 109, 115, 129, 132, 133, 139, 144, 145, 147, 154, 156, 161, 163, 165, 166, 168, 169, 175, 177, 204, 208, 342, 350, 354, 356, 357, 359, 360, 361, 365, 372, 373, 374], "introduct": [0, 351, 354, 359, 365, 367, 368, 372, 374], "multi": [0, 1, 7, 9, 29, 30, 33, 37, 40, 43, 44, 89, 93, 103, 104, 109, 113, 114, 115, 169, 177, 202, 204, 206, 208, 209, 210, 215, 216, 247, 291, 293, 294, 295, 296, 348, 354, 355, 356, 357, 358, 359, 360, 365, 369, 372, 373], "agent": [0, 9, 29, 30, 102, 103, 104, 110, 111, 113, 114, 116, 117, 118, 163, 164, 213, 214, 215, 216, 218, 224, 233, 291, 348, 354, 359, 365, 369, 372], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 204, 208, 211, 212, 247, 252, 278, 311, 312, 313, 334, 335, 336, 339, 342, 344, 345, 346, 348, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 76, 77, 80, 82, 85, 86, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 147, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 222, 223, 224, 225, 231, 232, 233, 234, 236, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 306, 311, 313, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 340, 342, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374], "pretrain": [0, 354, 365, 372], "recurr": [0, 2, 128, 202, 203, 204, 206, 208, 227, 354, 356, 360, 365, 371, 372], "dqn": [0, 2, 54, 138, 199, 242, 243, 262, 263, 265, 266, 268, 270, 271, 272, 275, 276, 278, 280, 281, 282, 283, 284, 285, 291, 337, 348, 350, 354, 360, 361, 364, 365, 372], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 33, 85, 86, 89, 93, 105, 109, 115, 136, 145, 164, 178, 184, 185, 199, 204, 208, 215, 216, 218, 225, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 256, 262, 263, 264, 265, 269, 270, 276, 277, 279, 280, 281, 282, 283, 285, 326, 332, 335, 336, 342, 344, 345, 350, 351, 352, 354, 356, 359, 361, 362, 365, 370, 371, 372, 373, 374], "replai": [0, 8, 15, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 84, 128, 129, 136, 152, 156, 165, 177, 265, 266, 268, 269, 270, 276, 281, 283, 285, 327, 330, 340, 342, 348, 352, 354, 365, 369, 370, 372], "buffer": [0, 3, 4, 8, 15, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 93, 105, 109, 115, 128, 129, 133, 136, 151, 152, 156, 165, 168, 169, 171, 173, 177, 252, 255, 265, 266, 268, 269, 270, 276, 281, 283, 285, 327, 330, 340, 342, 348, 352, 354, 363, 365, 369, 370, 372, 374], "competit": [0, 3, 103, 104, 354, 365, 368, 372], "ddpg": [0, 192, 193, 194, 195, 265, 275, 284, 348, 350, 354, 356, 361, 365, 368, 372], "task": [0, 2, 3, 9, 29, 30, 42, 47, 57, 60, 87, 88, 89, 93, 96, 103, 104, 109, 110, 111, 112, 115, 116, 117, 151, 163, 169, 171, 173, 269, 276, 354, 355, 356, 357, 358, 359, 360, 365, 367, 368, 369, 372, 373, 374], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 43, 44, 93, 109, 115, 116, 196, 241, 313, 330, 348, 351, 352, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 371, 372], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 29, 33, 36, 38, 41, 47, 65, 66, 67, 71, 74, 78, 79, 82, 84, 89, 93, 98, 109, 115, 134, 137, 138, 147, 151, 168, 169, 171, 175, 177, 178, 212, 224, 233, 236, 237, 249, 252, 253, 254, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 334, 335, 336, 341, 342, 346, 348, 350, 352, 354, 356, 357, 358, 362, 364, 365, 367, 368, 369, 371, 372, 374], "loss": [0, 3, 8, 38, 138, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 293, 325, 330, 337, 338, 339, 342, 351, 352, 354, 359, 361, 362, 363, 365, 369, 371, 372, 373], "trainer": [0, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 354, 355, 365, 372], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 24, 26, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 80, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 147, 149, 151, 153, 154, 155, 156, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 178, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 215, 216, 219, 222, 223, 224, 225, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 257, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 287, 291, 293, 294, 295, 296, 299, 311, 313, 321, 322, 323, 324, 325, 327, 328, 329, 332, 339, 342, 350, 351, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374], "packag": [0, 6, 7, 10, 122, 348, 349, 361, 374], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 28, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 80, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 105, 106, 108, 109, 115, 116, 117, 126, 129, 133, 141, 147, 149, 152, 156, 165, 168, 169, 170, 174, 175, 177, 187, 197, 202, 203, 204, 206, 207, 208, 209, 213, 214, 215, 216, 217, 222, 224, 230, 234, 247, 248, 252, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 321, 324, 327, 328, 329, 330, 332, 344, 345, 346, 348, 352, 356, 357, 358, 359, 362, 364, 366, 367, 368, 370, 373, 374], "size": [0, 2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 128, 130, 133, 134, 137, 138, 139, 141, 149, 151, 153, 154, 156, 160, 162, 163, 165, 167, 168, 169, 170, 173, 175, 177, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 222, 223, 224, 225, 226, 227, 230, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 313, 321, 327, 339, 348, 350, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374], "interoper": [0, 13, 14, 348], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 40, 41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 89, 92, 93, 103, 104, 109, 115, 116, 117, 129, 130, 151, 156, 169, 173, 177, 189, 190, 202, 203, 204, 206, 207, 208, 209, 210, 216, 251, 255, 264, 266, 268, 270, 271, 277, 280, 281, 285, 293, 294, 295, 296, 302, 303, 304, 305, 307, 308, 309, 310, 311, 339, 346, 348, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371], "node": [0, 2, 17, 18, 19, 20, 21, 36, 38, 41, 62, 339, 348, 362], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 110, 111, 145, 147, 188, 197, 198, 199, 200, 205, 212, 213, 214, 219, 222, 223, 226, 227, 230, 231, 232, 240, 241, 242, 243, 249, 253, 254, 262, 263, 264, 269, 270, 271, 276, 277, 280, 281, 282, 283, 285, 348, 352, 356, 357, 360, 362, 367, 368, 369, 373, 374], "helper": [0, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 355, 356, 358, 367, 369], "compos": [0, 3, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 71, 72, 73, 80, 81, 89, 93, 109, 115, 129, 155, 168, 169, 175, 177, 246, 247, 273, 283, 313, 339, 348, 355, 356, 357, 358, 362, 366, 368, 369, 371, 373, 374], "episod": [0, 3, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 76, 77, 89, 93, 109, 115, 125, 156, 159, 164, 186, 188, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 348, 356, 359, 364, 367, 368, 371], "format": [0, 3, 32, 33, 35, 54, 55, 56, 57, 58, 59, 60, 61, 62, 74, 80, 89, 93, 109, 110, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 313, 348, 355, 356, 359, 361, 363, 374], "tensorspec": [0, 3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 48, 49, 50, 51, 52, 89, 93, 105, 109, 115, 116, 117, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 187, 227, 236, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 256, 263, 266, 269, 270, 281, 283, 285, 291, 348, 369], "human": [0, 23, 58, 348, 369], "feedback": [0, 348, 364, 373], "rlhf": [0, 42, 47, 63, 145, 348, 350], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 90, 93, 109, 115, 123, 126, 134, 137, 146, 153, 154, 168, 169, 175, 177, 179, 188, 211, 212, 326, 334, 335, 336, 339, 342, 344, 345, 346, 348, 359], "gymlikeenv": [0, 92, 94, 348], "envmetadata": [0, 348], "vector": [0, 1, 8, 24, 28, 35, 85, 86, 98, 99, 102, 110, 111, 112, 116, 117, 136, 174, 192, 194, 202, 203, 206, 207, 210, 293, 296, 306, 307, 308, 309, 310, 348, 355, 356, 358, 366, 367, 368, 369, 370, 374], "auto": [0, 66, 82, 124, 125, 174, 248, 263, 270, 279, 281, 283, 285, 348, 351, 367, 368], "reset": [0, 1, 2, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 115, 124, 125, 126, 129, 138, 141, 144, 146, 151, 159, 163, 164, 165, 166, 168, 169, 171, 174, 175, 177, 179, 187, 202, 204, 208, 235, 247, 248, 312, 339, 348, 355, 356, 357, 358, 359, 362, 366, 367, 368, 373], "mask": [0, 1, 4, 22, 28, 31, 32, 35, 110, 111, 123, 152, 177, 199, 213, 214, 225, 241, 242, 243, 244, 245, 250, 251, 327, 348, 356, 358, 374], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 28, 35, 42, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 126, 132, 134, 136, 137, 138, 139, 142, 145, 146, 149, 153, 154, 156, 160, 163, 169, 174, 178, 183, 186, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 204, 208, 210, 211, 212, 213, 214, 215, 223, 224, 225, 227, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 256, 257, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 339, 342, 346, 348, 350, 351, 352, 355, 356, 357, 359, 360, 361, 362, 363, 366, 367, 368, 370, 371, 373, 374], "record": [0, 2, 33, 89, 93, 109, 115, 120, 145, 177, 280, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 342, 348, 356, 357, 360, 364, 367], "domain": [0, 2, 8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 89, 93, 109, 115, 136, 165, 183, 236, 242, 243, 249, 250, 251, 252, 253, 254, 255, 348, 357, 358, 360, 361, 367, 368, 369, 373, 374], "actor": [0, 3, 4, 20, 145, 178, 188, 191, 192, 194, 199, 200, 212, 223, 225, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 291, 339, 348, 351, 356, 358, 359, 361, 364, 367, 370, 373], "explor": [0, 1, 176, 218, 236, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 262, 326, 335, 336, 342, 348, 357, 358, 359, 361, 362, 364, 367, 368, 369], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 76, 77, 80, 89, 93, 102, 109, 115, 122, 125, 127, 129, 130, 132, 134, 136, 137, 138, 146, 147, 151, 152, 155, 156, 157, 159, 161, 165, 166, 168, 169, 173, 175, 177, 183, 187, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 321, 323, 324, 325, 326, 327, 330, 339, 342, 348, 352, 356, 359, 361, 362, 363, 366, 367, 368, 369, 371, 373, 374], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 37, 40, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 73, 75, 89, 90, 93, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 126, 133, 134, 135, 139, 145, 147, 153, 154, 159, 160, 163, 165, 168, 174, 177, 187, 197, 213, 214, 222, 236, 249, 253, 257, 258, 281, 287, 293, 298, 306, 316, 330, 348, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374], "hook": [0, 33, 89, 93, 109, 115, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 225, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 348], "planner": [0, 188, 212, 348], "sac": [0, 270, 281, 283, 348], "redq": [0, 281, 338, 339, 348], "iql": [0, 269, 276, 348, 355, 367, 368], "cql": [0, 263, 268, 348], "dt": [0, 248, 348, 369], "td3": [0, 285, 348], "a2c": [0, 262, 348], "dreamer": [0, 120, 121, 200, 272, 273, 274, 348, 350], "checkpoint": [0, 348, 370], "builder": [0, 348, 356, 374], "logger": [0, 3, 311, 313, 315, 316, 317, 318, 319, 320, 324, 330, 342, 346, 348, 356, 367], "_util": [0, 3, 11, 348, 364], "implement_for": [0, 3, 348], "thing": [0, 3, 7, 8, 89, 93, 109, 115, 349, 357, 358, 359, 360, 361, 362, 363, 367, 368, 371, 374], "consid": [0, 1, 2, 3, 8, 19, 33, 37, 40, 43, 44, 65, 66, 82, 89, 93, 109, 115, 136, 175, 177, 197, 215, 230, 293, 295, 296, 349, 355, 359, 360, 361, 369, 371], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 79, 82, 89, 90, 93, 102, 103, 104, 106, 108, 109, 110, 111, 115, 116, 117, 123, 125, 128, 129, 133, 134, 136, 137, 145, 146, 147, 151, 152, 159, 165, 168, 169, 171, 173, 174, 175, 177, 184, 185, 186, 188, 199, 202, 203, 206, 207, 210, 211, 212, 213, 214, 217, 225, 231, 247, 249, 252, 253, 255, 259, 264, 266, 271, 277, 280, 283, 286, 291, 292, 293, 294, 295, 296, 311, 312, 313, 327, 346, 349, 350, 352, 355, 356, 357, 358, 360, 362, 363, 367, 368, 369, 370, 371, 374], "debug": [0, 6, 8, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 349, 374], "work": [0, 1, 2, 3, 4, 8, 11, 33, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 74, 76, 77, 79, 84, 89, 92, 93, 94, 97, 109, 112, 115, 130, 145, 151, 171, 174, 175, 177, 186, 189, 190, 209, 210, 243, 251, 256, 264, 277, 280, 330, 349, 350, 355, 356, 357, 358, 359, 362, 366, 367, 368, 369, 370, 371, 373, 374], "habitat": [0, 3, 95, 349, 370], "lab": [0, 3, 87, 88, 95, 349], "mujoco": [0, 6, 8, 112, 349, 355, 357, 358], "error": [0, 1, 3, 7, 10, 11, 30, 33, 36, 38, 41, 89, 93, 109, 115, 118, 152, 177, 179, 349, 355, 357, 367, 368, 374], "solut": [0, 2, 3, 6, 7, 9, 20, 349, 350, 352, 373], "resourc": [0, 1, 20, 95, 349, 355, 357, 367, 368], "issu": [0, 3, 4, 5, 8, 54, 58, 65, 66, 82, 97, 129, 152, 166, 186, 236, 242, 243, 249, 250, 251, 252, 253, 349, 373], "index": [0, 3, 7, 8, 10, 15, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 71, 72, 74, 79, 80, 81, 82, 83, 84, 89, 93, 103, 104, 109, 115, 116, 117, 124, 129, 133, 136, 169, 186, 213, 214, 348, 359, 366, 367, 368, 371, 373], "search": [0, 108, 187, 356], "page": [0, 7, 23, 320, 361], "somewhat": [1, 2, 351, 360, 374], "equival": [1, 3, 24, 26, 28, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 85, 86, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 126, 135, 138, 169, 177, 199, 206, 210, 225, 242, 243, 250, 251, 280, 327, 362, 373, 374], "dataload": [1, 63, 75, 77, 356, 362, 371], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 60, 89, 93, 109, 115, 129, 140, 156, 164, 165, 166, 169, 177, 202, 204, 206, 208, 222, 240, 244, 245, 248, 283, 313, 350, 356, 359, 367, 371, 373, 374], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 60, 89, 93, 102, 103, 104, 109, 110, 111, 115, 116, 117, 125, 128, 140, 145, 151, 160, 168, 169, 173, 177, 208, 209, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 327, 330, 350, 351, 352, 355, 356, 357, 358, 361, 366, 367, 368, 369, 370, 371, 373, 374], "over": [1, 2, 3, 4, 8, 13, 14, 33, 40, 44, 45, 47, 53, 54, 60, 75, 76, 89, 93, 103, 104, 109, 115, 136, 147, 159, 166, 177, 186, 234, 255, 271, 273, 278, 299, 311, 333, 352, 355, 356, 357, 359, 360, 361, 362, 367, 368, 369, 374], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 33, 34, 36, 37, 38, 41, 43, 44, 60, 67, 89, 93, 109, 110, 111, 115, 126, 127, 133, 141, 151, 165, 168, 169, 170, 171, 173, 177, 186, 202, 204, 206, 208, 215, 252, 253, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 350, 355, 358, 367, 368, 369, 371, 374], "static": [1, 11, 42, 47, 69, 76, 77, 95, 175, 276, 359, 369, 371], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 23, 26, 29, 31, 32, 33, 37, 38, 39, 40, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 80, 82, 85, 86, 89, 90, 93, 98, 99, 102, 108, 109, 110, 111, 113, 114, 115, 116, 117, 125, 126, 128, 130, 133, 134, 135, 136, 137, 145, 147, 149, 151, 153, 156, 159, 163, 164, 165, 168, 169, 171, 173, 175, 177, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 219, 223, 234, 241, 242, 243, 244, 245, 247, 248, 252, 256, 257, 262, 263, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 292, 293, 294, 295, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 321, 350, 351, 354, 355, 356, 357, 358, 360, 361, 362, 363, 366, 367, 368, 369, 371, 372, 373, 374], "like": [1, 2, 3, 4, 7, 20, 26, 29, 33, 37, 40, 43, 44, 47, 67, 71, 77, 89, 93, 95, 102, 109, 110, 111, 115, 138, 167, 177, 179, 202, 206, 216, 246, 262, 264, 277, 280, 281, 282, 351, 355, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 374], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 63, 80, 89, 92, 93, 94, 95, 109, 112, 115, 128, 134, 136, 137, 146, 154, 169, 177, 184, 185, 204, 208, 244, 248, 264, 277, 280, 283, 313, 327, 332, 344, 345, 346, 350, 355, 356, 357, 358, 362, 367, 368, 369, 371], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 40, 57, 58, 61, 62, 63, 89, 93, 105, 109, 115, 124, 129, 133, 141, 151, 159, 165, 168, 169, 170, 171, 173, 177, 210, 234, 252, 253, 254, 283, 313, 352, 357, 359, 363, 371, 374], "two": [1, 2, 3, 4, 8, 10, 33, 37, 40, 42, 43, 44, 60, 71, 75, 77, 89, 93, 109, 115, 126, 147, 151, 173, 177, 195, 202, 204, 206, 208, 228, 253, 277, 288, 326, 330, 339, 351, 355, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 371, 373, 374], "main": [1, 2, 3, 5, 19, 21, 62, 90, 253, 330, 350, 351, 355, 356, 366, 374], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 69, 71, 74, 75, 76, 77, 79, 80, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 106, 107, 109, 110, 112, 115, 116, 117, 125, 126, 130, 132, 133, 151, 159, 160, 163, 165, 167, 168, 169, 171, 173, 177, 186, 189, 190, 202, 204, 206, 208, 209, 210, 213, 214, 215, 216, 217, 234, 236, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 279, 280, 281, 282, 283, 285, 287, 291, 293, 294, 295, 296, 297, 301, 311, 312, 313, 320, 323, 333, 339, 342, 343, 346, 355, 356, 357, 358, 359, 360, 362, 367, 368, 369, 371, 374], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 71, 74, 75, 76, 77, 78, 79, 87, 88, 89, 92, 93, 94, 95, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 118, 127, 128, 132, 134, 137, 145, 147, 149, 151, 159, 161, 167, 169, 171, 173, 175, 177, 186, 189, 190, 192, 198, 201, 204, 208, 210, 213, 214, 220, 225, 243, 247, 250, 251, 253, 255, 256, 257, 278, 283, 290, 293, 296, 311, 312, 326, 327, 344, 345, 350, 355, 357, 359, 360, 361, 362, 366, 367, 369, 370, 371, 373, 374], "constructor": [1, 2, 15, 17, 18, 19, 20, 40, 47, 60, 68, 80, 89, 93, 106, 109, 115, 116, 125, 168, 189, 190, 210, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 339, 343, 346, 350, 355, 356, 357, 359, 362, 367, 368, 371], "iter": [1, 2, 3, 11, 14, 15, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 71, 75, 85, 86, 89, 93, 98, 99, 109, 115, 139, 147, 160, 177, 189, 190, 210, 215, 216, 229, 236, 242, 249, 250, 252, 254, 255, 257, 278, 290, 326, 329, 330, 339, 351, 352, 355, 357, 358, 362, 364, 367, 368, 369], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 39, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 89, 90, 93, 94, 95, 97, 98, 99, 105, 106, 109, 112, 115, 123, 169, 177, 202, 204, 206, 208, 244, 247, 254, 255, 334, 346, 350, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 371, 372, 374], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 42, 54, 69, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 105, 106, 107, 109, 110, 111, 112, 115, 123, 128, 141, 144, 147, 163, 164, 165, 166, 169, 174, 177, 186, 187, 188, 200, 202, 204, 206, 208, 209, 211, 212, 240, 244, 245, 247, 248, 249, 253, 262, 272, 280, 292, 293, 294, 295, 296, 299, 300, 301, 312, 315, 321, 326, 330, 352, 356, 358, 360, 361, 363, 364, 366, 369, 370, 373], "queri": [1, 3, 13, 33, 36, 38, 41, 89, 93, 109, 115, 151, 168, 171, 175, 177, 255, 355, 361, 369, 373], "defin": [1, 2, 11, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 60, 89, 93, 109, 115, 152, 164, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 215, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 266, 268, 278, 293, 294, 295, 296, 297, 312, 343, 355, 356, 358, 361, 364, 369, 371, 374], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 28, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 76, 77, 82, 85, 86, 89, 92, 93, 94, 98, 99, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 128, 129, 136, 142, 146, 147, 158, 163, 166, 169, 175, 177, 188, 189, 190, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 224, 226, 227, 230, 231, 232, 233, 236, 240, 241, 244, 245, 247, 248, 249, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 279, 280, 281, 282, 283, 285, 321, 323, 326, 330, 332, 333, 334, 344, 345, 346, 350, 355, 356, 357, 358, 359, 360, 362, 364, 367, 368, 369, 370, 371, 374], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 33, 47, 59, 75, 80, 89, 93, 109, 115, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 179, 202, 204, 208, 210, 217, 218, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 294, 295, 296, 327, 355, 357, 358, 362, 363, 367, 368, 369, 371, 374], "deliv": [1, 2, 3, 15, 60, 355, 356, 359, 362, 373], "stack": [1, 2, 3, 7, 8, 13, 14, 17, 19, 20, 29, 30, 36, 37, 38, 40, 41, 43, 44, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 71, 89, 93, 102, 109, 110, 111, 115, 175, 202, 204, 206, 207, 208, 247, 254, 255, 312, 321, 350, 356, 359, 366, 367, 369, 373], "user": [1, 2, 3, 5, 8, 33, 54, 56, 60, 62, 77, 89, 93, 109, 115, 130, 164, 169, 177, 179, 196, 209, 280, 283, 313, 343, 351, 352, 355, 356, 359, 361, 362, 369, 373, 374], "reach": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 75, 89, 93, 103, 104, 109, 115, 116, 117, 163, 240, 244, 245, 248, 355, 357, 364, 367, 368, 373, 374], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 129, 134, 135, 137, 138, 139, 146, 147, 149, 153, 154, 156, 158, 160, 163, 165, 166, 168, 169, 175, 177, 186, 187, 188, 202, 204, 208, 212, 247, 262, 263, 264, 265, 266, 268, 269, 270, 276, 277, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 339, 351, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "state": [1, 2, 3, 4, 13, 14, 15, 16, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 105, 109, 110, 111, 112, 113, 114, 115, 125, 128, 129, 130, 132, 138, 147, 154, 163, 164, 168, 169, 175, 177, 179, 186, 187, 188, 191, 196, 200, 202, 203, 204, 206, 207, 208, 209, 210, 212, 220, 223, 224, 226, 227, 233, 237, 247, 252, 258, 262, 264, 268, 277, 278, 280, 281, 282, 283, 291, 292, 293, 294, 295, 296, 297, 346, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 367, 368, 369, 374], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 26, 33, 42, 54, 71, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 106, 107, 109, 112, 115, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 186, 202, 204, 208, 217, 240, 242, 244, 250, 273, 283, 356, 357, 358, 359, 360, 362, 364, 367, 368, 369, 370, 371, 374], "predefin": [1, 356, 358, 362, 371], "becaus": [1, 3, 4, 7, 36, 38, 41, 42, 54, 89, 93, 109, 115, 138, 145, 163, 168, 174, 177, 195, 209, 216, 236, 242, 243, 247, 249, 250, 251, 252, 253, 355, 356, 358, 360, 361, 362, 366, 367, 368, 369, 371, 374], "potenti": [1, 2, 369, 371], "comput": [1, 3, 4, 8, 13, 15, 20, 28, 33, 42, 85, 86, 89, 93, 98, 99, 109, 115, 147, 161, 169, 172, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 219, 220, 221, 222, 223, 226, 227, 229, 231, 232, 234, 237, 240, 241, 243, 244, 247, 248, 249, 251, 253, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 334, 351, 355, 357, 358, 359, 360, 366, 367, 368, 370, 371], "heavi": [1, 8, 54, 371], "crucial": [1, 2, 3, 240, 244, 245, 248, 269, 276, 278, 355, 356, 357, 358, 359, 361, 363, 367, 368, 369, 374], "configur": [1, 8, 20, 21, 42, 145, 191, 196, 223, 278, 280, 339, 350, 355, 356, 357, 361, 367, 368, 369], "hyperparamet": [1, 74, 177, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 355, 369, 371], "appropri": [1, 3, 4, 7, 64, 72, 80, 81, 83, 84, 109, 115, 138, 343, 346, 355, 363, 371], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 342, 343, 344, 345, 346, 350, 351, 355, 358, 360, 364, 367, 368, 369, 370, 373], "take": [1, 2, 3, 8, 22, 42, 57, 85, 86, 89, 93, 98, 99, 109, 115, 132, 163, 166, 168, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 215, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 256, 259, 261, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 321, 332, 350, 352, 355, 356, 357, 359, 360, 361, 367, 368, 369, 371, 374], "consider": [1, 2, 3, 8, 356, 367, 368, 371], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 103, 104, 105, 109, 110, 111, 115, 116, 117, 125, 134, 137, 164, 169, 177, 187, 189, 190, 204, 208, 210, 257, 262, 263, 264, 265, 266, 268, 270, 271, 277, 278, 280, 281, 282, 283, 285, 291, 293, 296, 355, 356, 357, 359, 367, 368, 369, 374], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 69, 71, 76, 77, 78, 80, 87, 88, 89, 92, 93, 94, 95, 102, 105, 109, 110, 111, 115, 116, 117, 125, 126, 129, 132, 133, 134, 135, 138, 139, 141, 145, 147, 152, 153, 154, 156, 159, 160, 163, 164, 166, 168, 169, 174, 175, 177, 179, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 216, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 249, 251, 252, 253, 256, 259, 262, 264, 270, 275, 277, 278, 280, 281, 282, 284, 292, 293, 294, 295, 296, 297, 313, 315, 325, 326, 327, 330, 342, 344, 345, 346, 350, 352, 355, 356, 357, 358, 360, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "occur": [1, 8, 14, 29, 30, 54, 89, 93, 95, 109, 115, 130, 139, 147, 152, 174, 187, 236, 242, 243, 249, 250, 251, 252, 253, 273, 371, 374], "serial": [1, 2, 3, 33, 89, 93, 109, 115, 175, 177], "parallel": [1, 3, 8, 89, 92, 93, 94, 109, 110, 111, 115, 169, 174, 179, 262, 343, 344, 345, 346, 356, 357, 367, 368], "syncdatacollector": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 33, 126, 129, 156, 342, 345, 348, 355, 356, 357, 358, 362, 364, 367, 368, 371], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 102, 105, 108, 109, 110, 111, 112, 115, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 344, 345, 346, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 371, 374], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 38, 41, 47, 57, 62, 63, 90, 106, 109, 115, 175, 344, 345, 346, 355, 356, 357, 373, 374], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 345, 348, 357, 362, 373], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 76, 77, 102, 110, 111, 202, 206, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 350, 352, 357, 360, 371, 373], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 37, 40, 43, 44, 69, 76, 77, 85, 86, 87, 88, 92, 94, 95, 97, 98, 99, 106, 107, 109, 112, 175, 177, 215, 248, 332, 348, 350, 355, 359, 363, 367, 368, 369], "aggreg": [1, 3, 54, 80, 110, 111, 187, 189, 190, 192, 193, 255], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 39, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 75, 76, 77, 89, 90, 93, 109, 115, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 186, 187, 202, 204, 206, 208, 210, 215, 225, 241, 243, 244, 251, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 332, 350, 356, 358, 359, 360, 361, 362, 363, 364, 369, 370, 373, 374], "final": [1, 2, 3, 4, 20, 36, 38, 41, 42, 165, 174, 202, 204, 206, 208, 215, 240, 244, 245, 246, 248, 254, 293, 326, 350, 355, 356, 357, 363, 364, 367, 368, 369, 374], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 344, 348, 355, 356, 357, 362, 373], "sever": [1, 2, 3, 8, 31, 33, 47, 57, 89, 93, 109, 115, 130, 132, 169, 177, 280, 355, 357, 363, 364, 371, 374], "gather": [1, 3, 17, 19, 20, 47, 63, 65, 66, 76, 82, 152, 214, 222, 292, 334, 349, 356, 357, 358, 362, 367, 368, 369, 371, 374], "continu": [1, 9, 25, 48, 77, 89, 93, 109, 110, 111, 115, 116, 117, 183, 192, 193, 194, 195, 248, 255, 262, 263, 270, 276, 280, 281, 282, 283, 284, 285, 293, 298, 306, 350, 355, 357, 358, 360, 367, 368, 369, 371, 373, 374], "concomitantli": 1, "network": [1, 4, 8, 33, 89, 93, 102, 109, 110, 111, 115, 177, 189, 190, 192, 193, 194, 195, 198, 200, 201, 206, 210, 215, 216, 218, 220, 221, 224, 226, 227, 228, 233, 237, 238, 239, 241, 252, 256, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 291, 293, 294, 295, 296, 297, 341, 342, 350, 351, 352, 361, 364, 366, 369, 374], "impli": [1, 374], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 42, 69, 71, 74, 85, 86, 89, 93, 109, 113, 114, 115, 133, 151, 165, 168, 169, 171, 173, 177, 202, 203, 204, 206, 207, 208, 215, 218, 252, 262, 263, 264, 270, 273, 283, 332, 341, 350, 352, 355, 356, 357, 358, 366, 369, 371, 373], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 33, 36, 38, 41, 56, 62, 89, 92, 93, 94, 95, 109, 112, 115, 145, 147, 160, 169, 170, 175, 177, 179, 210, 215, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 373, 374], "slightli": [1, 54, 350, 351, 358, 367, 369, 370, 371, 374], "lag": [1, 355, 356, 357], "therefor": [1, 2, 3, 7, 37, 40, 43, 44, 61, 62, 89, 93, 109, 115, 156, 280, 291, 361, 367, 374], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 71, 76, 77, 80, 82, 89, 93, 102, 105, 108, 109, 110, 111, 115, 123, 126, 129, 138, 145, 151, 156, 159, 163, 164, 166, 168, 170, 173, 174, 186, 187, 202, 203, 206, 207, 209, 213, 214, 215, 240, 244, 245, 248, 249, 252, 253, 261, 262, 263, 264, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 352, 355, 356, 357, 359, 366, 367, 368, 369, 371, 374], "asynchron": [1, 9, 14, 20, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 262, 344, 355, 356, 357], "off": [1, 2, 4, 205, 232, 242, 283, 311, 326, 335, 350, 352, 355, 356, 357, 360, 361, 367, 368, 370, 374], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 82, 89, 93, 109, 110, 111, 115, 116, 134, 137, 141, 147, 164, 169, 174, 177, 179, 199, 202, 204, 206, 208, 216, 217, 237, 239, 241, 243, 250, 262, 269, 271, 276, 280, 326, 350, 352, 355, 356, 357, 358, 359, 360, 362, 363, 367, 368, 369, 370, 371, 374], "remot": [1, 2, 17, 18, 19, 20, 109, 115, 374], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 42, 80, 85, 86, 89, 93, 95, 96, 98, 99, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 129, 132, 134, 137, 138, 139, 145, 149, 153, 154, 159, 160, 161, 163, 164, 166, 177, 179, 188, 204, 208, 212, 247, 248, 262, 311, 313, 334, 350, 355, 357, 358, 360, 361, 362, 363, 364, 370, 371, 373], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 54, 57, 58, 60, 61, 62, 89, 93, 103, 104, 109, 115, 116, 117, 160, 281, 293, 294, 295, 296, 297, 351, 355, 357, 360, 361, 362], "synchronis": [1, 90, 367, 368], "either": [1, 2, 5, 21, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 71, 89, 93, 109, 115, 163, 164, 177, 258, 285, 317, 352, 355, 356, 358, 367, 370, 371, 373, 374], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 355, 368, 373], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 128, 129, 130, 133, 136, 139, 141, 144, 145, 146, 147, 151, 152, 154, 155, 158, 159, 160, 163, 165, 167, 168, 169, 170, 171, 173, 175, 177, 179, 183, 186, 187, 188, 189, 190, 192, 193, 194, 195, 201, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 231, 232, 236, 237, 238, 239, 240, 242, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 293, 294, 295, 296, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 320, 323, 324, 326, 327, 330, 346, 350, 351, 352, 355, 356, 357, 358, 359, 360, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "second": [1, 3, 8, 54, 57, 80, 126, 202, 204, 206, 208, 243, 264, 277, 280, 283, 315, 329, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 133, 134, 135, 137, 138, 139, 145, 149, 150, 151, 153, 154, 156, 160, 163, 165, 167, 168, 169, 171, 173, 177, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 223, 224, 225, 233, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 251, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 311, 327, 332, 339, 340, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 46, 47, 48, 49, 69, 76, 89, 93, 109, 115, 126, 141, 145, 168, 177, 198, 199, 203, 207, 219, 237, 238, 239, 242, 243, 246, 252, 258, 262, 264, 265, 266, 271, 277, 280, 282, 291, 292, 293, 294, 295, 296, 330, 339, 348, 352, 355, 356, 357, 358, 359, 360, 366, 367, 368, 369, 374], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 77, 82, 88, 89, 90, 93, 105, 109, 115, 129, 147, 165, 168, 169, 175, 177, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 253, 254, 255, 256, 259, 266, 269, 270, 278, 291, 293, 294, 295, 296, 311, 313, 317, 326, 334, 335, 336, 339, 342, 344, 345, 350, 351, 352, 355, 357, 358, 359, 360, 369, 371, 374], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 24, 26, 29, 33, 36, 38, 39, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 82, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 133, 134, 135, 137, 138, 139, 149, 151, 153, 154, 156, 160, 163, 165, 168, 169, 171, 173, 177, 183, 186, 188, 198, 202, 203, 204, 206, 207, 208, 212, 217, 218, 224, 225, 233, 236, 237, 238, 239, 241, 242, 243, 247, 249, 250, 251, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 311, 327, 339, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "slower": [1, 209], "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 54, 56, 60, 69, 76, 77, 79, 80, 89, 93, 97, 109, 112, 115, 154, 195, 204, 206, 208, 210, 219, 234, 236, 240, 242, 252, 257, 278, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 349, 351, 355, 356, 357, 359, 361, 362, 367, 368, 369, 371, 373, 374], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 69, 71, 72, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 123, 126, 129, 132, 134, 135, 136, 137, 146, 147, 151, 156, 159, 162, 164, 165, 166, 168, 169, 170, 173, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 216, 219, 220, 221, 222, 223, 225, 226, 227, 229, 234, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 256, 257, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 300, 301, 315, 323, 325, 326, 330, 334, 339, 346, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 374], "cuda": [1, 2, 3, 7, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 89, 93, 95, 96, 97, 109, 115, 133, 145, 150, 151, 165, 168, 169, 171, 173, 177, 202, 203, 206, 207, 252, 322, 355, 356, 357, 358, 367, 368, 370, 374], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 28, 45, 71, 85, 86, 98, 99, 109, 115, 130, 132, 136, 146, 156, 159, 163, 168, 175, 202, 206, 208, 209, 215, 217, 218, 236, 242, 249, 250, 252, 253, 256, 264, 270, 277, 280, 281, 285, 299, 339, 346, 350, 352, 355, 356, 357, 359, 361, 362, 367, 368, 369, 371, 373], "infer": [1, 109, 115, 129, 175, 204, 208, 217, 241, 268, 311, 355, 357, 362, 364, 371], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 33, 54, 57, 69, 76, 77, 85, 86, 87, 88, 89, 92, 93, 98, 99, 105, 106, 107, 109, 115, 146, 147, 169, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 254, 255, 256, 259, 283, 313, 320, 326, 344, 345, 346, 349, 352, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373], "dispatch": [1, 17, 18, 19, 20, 234, 247, 313, 355], "avail": [1, 3, 4, 6, 20, 37, 40, 43, 44, 54, 57, 62, 69, 75, 76, 77, 87, 88, 97, 103, 104, 109, 110, 111, 112, 116, 117, 125, 128, 145, 199, 225, 249, 253, 278, 313, 344, 345, 350, 355, 356, 357, 358, 359, 360, 367, 368, 369, 371, 374], "speed": [1, 2, 4, 8, 28, 89, 93, 109, 115, 351, 355, 356, 357, 358, 367, 368, 369, 371], "avoid": [1, 2, 3, 33, 65, 66, 82, 89, 93, 109, 115, 122, 169, 175, 177, 236, 252, 257, 264, 277, 280, 283, 333, 357, 368], "oom": [1, 3, 36, 38, 41, 65, 66, 82], "choic": [1, 2, 56, 62, 109, 219, 350, 351, 355, 356, 361, 367, 368], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 29, 33, 37, 40, 42, 43, 44, 47, 54, 57, 58, 60, 61, 62, 65, 66, 69, 71, 76, 77, 80, 82, 89, 90, 91, 93, 102, 106, 109, 110, 111, 115, 116, 125, 126, 134, 137, 154, 168, 170, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 217, 219, 220, 221, 223, 224, 226, 227, 229, 233, 234, 236, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 264, 277, 278, 280, 293, 294, 295, 296, 297, 311, 327, 344, 345, 346, 350, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 371, 374], "ie": [1, 3, 17, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 43, 46, 47, 48, 49, 60, 68, 77, 89, 93, 97, 108, 109, 115, 129, 141, 170, 175, 187, 204, 208, 241, 262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 293, 294, 295, 296, 350, 351, 356, 368], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 76, 80, 82, 89, 93, 109, 115, 174, 175, 177, 188, 209, 212, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 320, 339, 348, 352, 355, 357, 358, 360, 362, 364, 367, 368, 370, 374], "while": [1, 2, 3, 7, 8, 33, 89, 93, 109, 115, 156, 169, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 269, 276, 277, 280, 283, 350, 355, 357, 358, 360, 362, 363, 367, 368, 369, 370, 371, 373], "wait": [1, 19, 20, 21, 358, 369], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 33, 36, 38, 40, 41, 43, 54, 57, 58, 60, 61, 62, 63, 65, 66, 69, 71, 76, 77, 80, 82, 89, 93, 103, 104, 109, 110, 111, 115, 116, 117, 122, 125, 126, 128, 129, 136, 147, 154, 156, 159, 160, 163, 165, 169, 177, 186, 189, 190, 202, 206, 227, 247, 249, 254, 255, 256, 262, 263, 265, 266, 268, 269, 270, 276, 280, 283, 293, 300, 301, 311, 313, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 371, 374], "impact": [1, 60, 134, 137, 262, 264, 277, 280, 282, 356, 358, 367, 368], "memori": [1, 3, 8, 20, 28, 33, 36, 38, 41, 47, 54, 56, 57, 58, 60, 61, 62, 65, 89, 90, 93, 97, 109, 115, 129, 133, 151, 165, 168, 169, 171, 173, 175, 177, 206, 207, 252, 346, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "manag": [1, 8, 289, 290, 293, 294, 295, 296, 326, 361], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 68, 69, 71, 74, 76, 77, 80, 89, 93, 98, 99, 109, 110, 111, 115, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 150, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 186, 187, 188, 198, 199, 204, 208, 211, 212, 225, 236, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 311, 313, 324, 325, 326, 328, 329, 330, 334, 339, 351, 352, 355, 357, 358, 359, 361, 366, 367, 368, 369, 371, 373, 374], "control": [1, 3, 5, 8, 15, 23, 27, 76, 87, 88, 89, 93, 102, 109, 110, 111, 115, 136, 186, 192, 193, 194, 195, 204, 208, 211, 212, 227, 234, 248, 252, 253, 254, 262, 264, 277, 280, 284, 293, 298, 306, 311, 350, 352, 355, 356, 357, 359, 360, 361, 367, 368, 369, 371], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 71, 74, 75, 80, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 103, 104, 106, 107, 109, 112, 115, 116, 117, 129, 130, 134, 137, 142, 145, 146, 147, 151, 152, 163, 165, 166, 168, 169, 171, 177, 179, 198, 202, 203, 205, 206, 207, 208, 213, 214, 215, 232, 237, 238, 239, 241, 247, 249, 252, 253, 255, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 311, 313, 321, 325, 339, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 366, 367, 368, 369, 370, 371, 374], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 356, 368], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 37, 38, 40, 42, 43, 44, 47, 54, 56, 57, 58, 59, 60, 61, 62, 63, 67, 69, 71, 74, 76, 89, 93, 109, 110, 111, 115, 125, 126, 129, 132, 134, 137, 139, 142, 149, 161, 169, 177, 204, 208, 216, 293, 295, 296, 326, 330, 351, 355, 356, 357, 358, 360, 361, 362, 364, 367, 368, 369, 371, 374], "heurist": [1, 4, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 247, 248, 355, 362, 374], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 56, 74, 80, 85, 86, 89, 93, 98, 99, 109, 115, 218, 280, 293, 294, 295, 296, 297, 312, 339, 349, 350, 352, 355, 356, 357, 358, 360, 362, 363, 368, 371, 374], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 26, 29, 30, 33, 36, 38, 41, 45, 47, 56, 60, 75, 76, 79, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 106, 107, 109, 110, 111, 112, 115, 129, 134, 136, 137, 142, 146, 147, 168, 169, 175, 177, 189, 190, 203, 204, 207, 208, 210, 213, 214, 215, 216, 241, 248, 256, 283, 355, 356, 357, 359, 360, 362, 366, 367, 368, 370, 371, 374], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 74, 75, 76, 77, 80, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 141, 145, 146, 147, 149, 151, 152, 156, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 177, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 236, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 339, 342, 346, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 370, 371, 373, 374], "behaviour": [1, 3, 13, 14, 20, 60, 93, 130, 134, 137, 147, 152, 164, 186, 204, 205, 208, 232, 311, 326, 350, 356, 367, 371], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 29, 89, 93, 109, 115, 129, 134, 137, 147, 165, 166, 208, 249, 253, 254, 255, 332, 344, 345, 350, 355, 356, 359, 360, 368, 369, 374], "choos": [1, 102, 204, 208, 280, 348, 350, 351, 355, 356, 357, 367, 368, 371], "follow": [1, 2, 3, 6, 7, 8, 33, 36, 38, 39, 41, 42, 54, 56, 57, 58, 59, 60, 61, 62, 69, 85, 86, 89, 93, 98, 99, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 125, 145, 151, 171, 177, 189, 190, 202, 204, 206, 208, 210, 243, 250, 251, 261, 262, 263, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 313, 330, 339, 350, 351, 352, 355, 356, 357, 358, 361, 362, 366, 367, 368, 369, 371, 373, 374], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 333, 355, 357, 373], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 54, 129, 142, 177, 240, 244, 247, 248, 312, 313, 315, 323, 326, 330, 333, 334, 355, 356, 357, 358, 360, 367, 368, 371, 373, 374], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 75, 76, 78, 79, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 106, 107, 108, 109, 112, 115, 125, 126, 129, 132, 133, 136, 139, 141, 144, 145, 147, 149, 150, 151, 159, 161, 165, 168, 169, 171, 173, 174, 175, 177, 179, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 216, 217, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 245, 247, 248, 251, 252, 253, 255, 256, 259, 264, 277, 280, 283, 292, 293, 294, 295, 296, 311, 312, 326, 352, 356, 357, 358, 359, 360, 362, 363, 367, 368, 369, 371, 373, 374], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 126, 129, 156, 333, 355, 356, 357, 358, 362, 364, 367, 368, 371, 373], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 32, 33, 40, 42, 43, 54, 56, 57, 60, 71, 74, 76, 77, 80, 89, 90, 93, 103, 104, 109, 110, 111, 115, 116, 117, 151, 156, 159, 163, 164, 165, 166, 173, 175, 177, 199, 202, 203, 204, 206, 208, 215, 216, 220, 224, 225, 233, 240, 242, 243, 244, 251, 255, 299, 302, 303, 304, 305, 307, 308, 309, 310, 313, 326, 327, 344, 345, 350, 355, 356, 357, 358, 360, 361, 362, 364, 367, 368, 369, 370, 371, 373, 374], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 333, 355, 356, 364], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 42, 46, 48, 49, 60, 62, 70, 80, 89, 93, 105, 109, 115, 136, 146, 147, 165, 178, 179, 202, 204, 206, 208, 244, 249, 252, 253, 263, 281, 326, 334, 350, 355, 356, 357, 358, 359, 360, 362, 369, 370, 371, 373, 374], "rand_step": [1, 3, 87, 88, 89, 90, 92, 93, 94, 100, 101, 105, 106, 107, 109, 115, 144, 165, 175, 369, 373, 374], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 355], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 56, 58, 60, 61, 62, 355, 356, 357], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 33, 43, 54, 56, 57, 58, 60, 61, 62, 68, 69, 76, 77, 80, 85, 86, 89, 93, 98, 99, 109, 115, 152, 163, 168, 177, 188, 208, 212, 248, 280, 293, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 321, 348, 351, 355, 356, 357, 358, 359, 362, 364, 369, 373, 374], "pad": [1, 2, 3, 22, 39, 45, 56, 58, 60, 61, 62, 129, 189, 190, 192, 193, 208, 209, 213, 214, 215, 327], "along": [1, 2, 3, 13, 14, 22, 29, 30, 36, 38, 41, 42, 47, 56, 58, 60, 61, 62, 66, 69, 71, 76, 77, 80, 82, 128, 129, 130, 147, 149, 152, 159, 167, 208, 210, 213, 214, 218, 242, 249, 252, 253, 278, 350, 355, 356, 358, 359, 361, 367, 368, 369, 371], "point": [1, 2, 3, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 59, 64, 68, 69, 72, 80, 81, 83, 84, 89, 93, 109, 115, 125, 128, 129, 133, 151, 164, 165, 167, 168, 169, 171, 173, 177, 211, 252, 261, 271, 330, 349, 356, 357, 366, 367, 368, 369, 371, 374], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 48, 49, 69, 76, 77, 93, 125, 152, 163, 187, 213, 214, 240, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 352, 358], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 43, 58, 87, 88, 89, 93, 109, 115, 116, 117, 142, 152, 175, 177, 199, 213, 214, 225, 242, 243, 250, 251, 253, 288, 293, 327, 355, 357, 358, 359, 360, 361, 367, 368], "valid": [1, 2, 3, 22, 36, 38, 39, 47, 63, 80, 118, 125, 152, 169, 177, 189, 190, 210, 213, 214, 240, 248, 277, 293, 294, 295, 296, 327, 352, 374], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 326, 348, 355, 356], "strategi": [1, 2, 15, 60, 74, 102, 214, 222, 244, 350, 352, 355, 356, 360, 367, 368, 371], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 43, 46, 48, 49, 51, 71, 89, 93, 105, 109, 110, 111, 115, 116, 118, 126, 128, 129, 138, 145, 163, 164, 168, 169, 174, 175, 177, 189, 190, 213, 214, 215, 216, 240, 242, 249, 250, 253, 256, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 313, 330, 342, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 374], "organ": [1, 2, 369, 371], "within": [1, 2, 3, 13, 14, 16, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 112, 115, 126, 129, 134, 137, 138, 156, 163, 174, 175, 177, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 266, 271, 291, 311, 313, 350, 356, 359, 360, 361, 362, 363, 364, 367, 369, 373], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 47, 48, 49, 56, 57, 60, 74, 85, 86, 89, 93, 98, 99, 102, 109, 110, 111, 115, 125, 129, 136, 147, 154, 169, 170, 177, 199, 202, 203, 204, 206, 207, 208, 210, 212, 215, 216, 225, 276, 280, 288, 293, 294, 295, 299, 300, 301, 326, 330, 332, 344, 345, 350, 351, 352, 355, 356, 357, 359, 361, 363, 366, 367, 368, 369, 370, 371, 374], "how": [1, 2, 3, 17, 18, 19, 23, 33, 37, 43, 60, 68, 69, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 177, 262, 264, 275, 277, 280, 313, 315, 330, 349, 350, 355, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "tabl": [1, 350, 356, 360], "summar": [1, 3, 369], "what": [1, 3, 8, 27, 37, 46, 54, 76, 89, 93, 109, 115, 138, 165, 179, 186, 250, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 373, 374], "expect": [1, 2, 3, 4, 7, 26, 33, 40, 46, 47, 69, 75, 76, 89, 93, 105, 108, 109, 115, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 147, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 202, 203, 204, 206, 207, 208, 215, 216, 243, 248, 252, 255, 262, 263, 264, 265, 266, 268, 269, 270, 276, 277, 278, 280, 281, 282, 283, 285, 291, 334, 349, 350, 351, 352, 355, 357, 358, 359, 360, 361, 362, 367, 368, 369, 371, 374], "n": [1, 2, 3, 6, 7, 24, 28, 33, 35, 42, 89, 93, 109, 115, 129, 136, 141, 170, 177, 202, 203, 206, 212, 247, 248, 253, 262, 270, 278, 292, 327, 350, 352, 356, 358, 360, 367, 368, 371, 374], "b": [1, 2, 3, 7, 8, 22, 26, 29, 36, 38, 40, 41, 42, 43, 44, 80, 202, 203, 206, 207, 215, 216, 217, 218, 224, 233, 256, 293, 294, 295, 296, 297, 299, 313, 350, 356, 370, 371], "cat_result": [1, 13, 14], "na": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 82, 85, 86, 89, 92, 93, 95, 96, 98, 99, 105, 106, 107, 109, 112, 113, 114, 115, 123, 125, 127, 129, 130, 132, 133, 135, 136, 145, 146, 147, 151, 156, 159, 161, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 188, 189, 190, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 210, 212, 214, 215, 216, 217, 218, 219, 222, 226, 227, 230, 231, 232, 234, 236, 240, 241, 243, 244, 245, 248, 251, 252, 255, 256, 259, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 291, 292, 293, 294, 295, 296, 299, 300, 301, 321, 328, 342, 346, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374], "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 75, 80, 89, 90, 92, 93, 106, 107, 109, 115, 125, 129, 134, 137, 138, 151, 155, 156, 164, 166, 173, 175, 177, 179, 186, 202, 206, 242, 248, 252, 284, 293, 294, 295, 296, 297, 299, 313, 320, 330, 332, 346, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "p": [1, 2, 4, 71, 74, 90, 113, 114], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 54, 56, 58, 60, 61, 62, 85, 86, 89, 93, 98, 99, 109, 110, 111, 115, 133, 134, 135, 137, 151, 156, 160, 164, 165, 167, 168, 169, 171, 173, 174, 177, 202, 205, 206, 210, 215, 227, 231, 232, 252, 255, 261, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 332, 344, 345, 346, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 374], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 80, 89, 93, 109, 115, 134, 135, 137, 167, 169, 179, 208, 210, 216, 249, 252, 253, 255, 256, 261, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296, 313, 321, 332, 344, 345, 346, 348, 350, 352, 355, 356, 357, 358, 359, 360, 362, 363, 367, 368, 369, 371, 374], "dimens": [1, 2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 46, 47, 48, 49, 56, 58, 60, 61, 62, 65, 66, 69, 76, 77, 80, 82, 87, 88, 89, 92, 93, 94, 95, 109, 115, 116, 117, 128, 129, 130, 141, 147, 149, 152, 159, 162, 167, 170, 175, 189, 190, 191, 196, 204, 206, 208, 210, 213, 214, 215, 217, 218, 223, 224, 228, 229, 230, 231, 234, 242, 247, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 346, 350, 355, 356, 357, 358, 359, 367, 368, 369, 371], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 85, 86, 89, 90, 93, 98, 99, 102, 108, 109, 110, 111, 112, 115, 122, 128, 130, 152, 159, 165, 166, 169, 175, 177, 186, 200, 202, 206, 208, 209, 247, 248, 264, 270, 273, 277, 278, 280, 281, 285, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 330, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "adapt": [1, 23, 123, 163, 277, 355, 369], "equal": [1, 13, 14, 16, 54, 69, 76, 77, 106, 109, 115, 146, 147, 189, 190, 202, 204, 206, 208, 210, 216, 284, 288, 321, 344, 345, 355, 357, 370], "introduc": [1, 2, 109, 115, 202, 204, 206, 208, 248, 355, 367], "some": [1, 2, 3, 4, 7, 8, 9, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 46, 47, 48, 49, 56, 62, 65, 66, 71, 80, 82, 85, 86, 89, 93, 98, 99, 103, 104, 109, 110, 111, 115, 116, 117, 125, 151, 169, 171, 177, 179, 192, 204, 208, 229, 253, 254, 255, 313, 321, 333, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 369, 371, 373, 374], "confus": [1, 33, 89, 93, 109, 115, 169, 177], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 33, 36, 37, 38, 41, 43, 44, 47, 54, 56, 58, 60, 61, 62, 65, 66, 67, 71, 74, 75, 76, 77, 78, 79, 82, 89, 92, 93, 94, 105, 109, 115, 132, 135, 136, 153, 160, 167, 171, 175, 177, 202, 204, 208, 218, 219, 241, 243, 244, 251, 253, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 311, 327, 339, 344, 345, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 373, 374], "better": [1, 3, 8, 9, 13, 14, 204, 208, 351, 357, 359, 369, 373], "consist": [1, 2, 3, 33, 37, 40, 43, 44, 57, 60, 89, 93, 109, 115, 145, 174, 177, 190, 210, 355, 356, 357, 369, 370, 374], "interact": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 60, 89, 93, 103, 104, 109, 115, 169, 249, 253, 355, 357, 359, 360, 362, 367, 368, 369, 374], "keep": [1, 3, 4, 7, 8, 14, 37, 40, 43, 44, 75, 80, 109, 115, 147, 151, 173, 175, 177, 186, 248, 323, 330, 355, 356, 357, 358, 362, 363, 364, 368, 369, 371, 373, 374], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 54, 57, 151, 173, 263, 265, 268, 270, 281, 283, 285, 355, 356, 360, 361, 367, 368, 371, 374], "interchang": [1, 357, 359, 363, 370, 371], "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 23, 33, 36, 37, 38, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 75, 76, 77, 89, 93, 103, 104, 109, 115, 116, 117, 136, 146, 157, 169, 177, 179, 189, 190, 198, 202, 204, 208, 210, 215, 216, 243, 249, 253, 262, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 288, 293, 326, 330, 351, 355, 356, 358, 362, 367, 368, 369, 371, 374], "wherea": [1, 2, 21, 60, 85, 86, 87, 88, 92, 94, 95, 98, 99, 106, 107, 112, 136, 177, 278, 352, 363], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 46, 48, 49, 57, 60, 62, 68, 69, 89, 93, 105, 109, 115, 151, 165, 169, 173, 175, 177, 204, 206, 208, 213, 214, 244, 245, 248, 249, 253, 266, 269, 270, 283, 291, 293, 294, 295, 296, 297, 355, 356, 357, 359, 361, 362, 363, 367, 368, 369, 370], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 54, 60, 69, 76, 80, 89, 93, 109, 115, 152, 254, 255, 321, 330, 350, 355, 356, 357, 362, 366, 373, 374], "doesn": [1, 4, 11, 80, 106, 134, 137, 359], "understood": [1, 355], "serv": [1, 17, 19, 20, 95, 371, 374], "basi": [1, 80, 215, 371], "simplest": [1, 80, 256, 355, 357, 358, 360, 367, 368, 371, 374], "scenario": [1, 2, 103, 104, 109, 116, 117, 311, 355, 360, 367, 368, 369], "transit": [1, 33, 56, 60, 77, 80, 89, 93, 109, 115, 177, 258, 355, 358, 359, 360, 362, 367, 369, 371], "sampl": [1, 4, 8, 9, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 82, 89, 93, 105, 108, 109, 115, 128, 129, 152, 156, 180, 181, 184, 185, 188, 197, 205, 212, 213, 214, 222, 223, 226, 231, 232, 236, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 262, 263, 264, 265, 266, 268, 277, 279, 280, 285, 321, 327, 330, 333, 348, 350, 355, 356, 357, 358, 359, 360, 362, 364, 367, 368, 370, 373, 374], "attent": [1, 2, 8, 355, 358, 374], "given": [1, 2, 3, 13, 14, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 89, 93, 105, 109, 115, 133, 136, 147, 151, 165, 168, 169, 171, 173, 177, 186, 188, 199, 200, 202, 206, 212, 225, 229, 236, 242, 243, 244, 247, 248, 251, 252, 253, 254, 255, 257, 261, 265, 266, 268, 292, 293, 294, 295, 296, 297, 299, 322, 326, 342, 350, 352, 355, 356, 357, 359, 360, 361, 362, 363, 368, 369, 374], "built": [1, 2, 3, 5, 7, 71, 85, 86, 92, 98, 99, 108, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 291, 340, 342, 343, 346, 355, 356, 357, 358, 361, 363, 371, 374], "flatten": [1, 2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 46, 48, 49, 80, 126, 141, 327, 358, 368], "suffici": [1, 3, 4, 355], "preprocess": [1, 2, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 356], "popul": [1, 2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 144, 165, 355, 357, 358, 360, 362, 369, 371], "replaybuff": [1, 2, 37, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 76, 83, 129, 152, 156, 177, 266, 271, 291, 340, 342, 348, 357, 362, 364, 367, 368, 370, 371, 373], "lazytensorstorag": [1, 2, 37, 40, 43, 44, 68, 80, 156, 177, 357, 364, 368, 371], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 40, 80, 89, 90, 93, 109, 115, 122, 126, 145, 165, 177, 234, 242, 247, 250, 272, 274, 293, 296, 304, 305, 309, 310, 311, 342, 351, 355, 367, 368, 371, 373, 374], "reshap": [1, 2, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 60, 76, 80, 126, 204, 208, 210, 311, 357, 367, 368], "extend": [1, 2, 8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 71, 72, 76, 77, 79, 80, 81, 83, 84, 128, 156, 177, 327, 352, 355, 356, 357, 358, 362, 364, 367, 368, 370, 371, 373], "slice": [1, 2, 3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 128, 371], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 37, 38, 40, 41, 43, 44, 80, 97, 362, 367, 368], "achiev": [1, 2, 3, 4, 33, 89, 93, 97, 109, 115, 164, 177, 187, 327, 352, 355, 356, 357, 358, 367, 368, 369, 371, 374], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 36, 37, 38, 40, 41, 43, 44, 47, 60, 62, 63, 80, 89, 90, 93, 97, 109, 110, 115, 116, 117, 126, 129, 151, 168, 169, 171, 174, 175, 177, 183, 186, 189, 190, 192, 193, 194, 195, 196, 201, 204, 208, 210, 211, 215, 216, 241, 253, 266, 271, 281, 283, 291, 313, 327, 334, 335, 336, 342, 344, 345, 350, 355, 356, 357, 358, 360, 363, 367, 368, 369, 370, 371, 373, 374], "multidimension": [1, 2, 43, 68, 69, 371], "slicesampl": [1, 2, 54, 69, 371], "sampler": [1, 2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 152, 266, 271, 291, 355, 357, 367, 368, 371], "One": [1, 2, 4, 8, 32, 35, 47, 80, 85, 86, 109, 115, 129, 156, 171, 222, 240, 252, 256, 284, 288, 317, 355, 356, 371, 374], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 76, 77, 78, 79, 80, 82, 85, 89, 90, 93, 98, 109, 110, 111, 112, 115, 116, 125, 126, 129, 132, 138, 142, 145, 147, 149, 160, 164, 165, 166, 169, 170, 175, 177, 189, 190, 199, 204, 208, 210, 213, 214, 215, 216, 225, 236, 242, 243, 247, 249, 250, 251, 252, 253, 256, 257, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 339, 355, 356, 357, 358, 360, 366, 369, 371], "ensur": [1, 2, 3, 33, 37, 43, 68, 69, 75, 89, 93, 109, 115, 129, 151, 163, 169, 171, 175, 177, 242, 350, 356, 357, 369, 371], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 80, 82, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 108, 109, 110, 111, 113, 114, 115, 116, 117, 126, 128, 130, 134, 137, 138, 139, 145, 147, 149, 153, 154, 156, 160, 163, 165, 167, 175, 176, 177, 179, 183, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 230, 233, 236, 237, 238, 239, 241, 242, 243, 247, 249, 250, 251, 252, 255, 256, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 321, 327, 330, 342, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 370, 371, 373, 374], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 54, 205, 231, 232, 261, 349, 355, 356, 357, 358, 361, 367, 368, 370, 374], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 23, 27, 33, 36, 38, 78, 80, 89, 93, 97, 102, 109, 110, 111, 115, 129, 132, 141, 151, 154, 166, 169, 173, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 217, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 250, 251, 252, 256, 259, 261, 270, 281, 282, 283, 285, 292, 297, 313, 330, 346, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 373, 374], "dimension": [1, 37, 40, 43, 44, 136, 204, 208, 293, 298, 306, 368], "num_slic": [1, 2, 54, 60, 69, 76, 77, 371], "4": [1, 2, 3, 7, 24, 26, 28, 29, 33, 35, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 76, 77, 82, 85, 86, 87, 88, 89, 93, 98, 99, 100, 101, 102, 105, 107, 109, 113, 114, 115, 123, 125, 126, 129, 138, 156, 163, 164, 175, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 206, 207, 209, 210, 212, 215, 216, 219, 220, 221, 222, 223, 224, 225, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 311, 312, 350, 354, 355, 356, 357, 358, 360, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 126, 156, 358, 362, 371, 373], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 126, 129, 156, 330, 333, 342, 352, 355, 356, 357, 358, 362, 364, 367, 368, 371, 373], "dim": [1, 2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 76, 129, 130, 149, 165, 170, 175, 207, 209, 229, 234, 247, 346, 356, 357, 367, 369, 371], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 46, 47, 48, 49, 56, 58, 60, 69, 76, 77, 89, 93, 97, 106, 109, 112, 115, 126, 133, 151, 165, 168, 169, 171, 173, 177, 210, 234, 252, 254, 255, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 311, 313, 315, 350, 352, 355, 356, 357, 358, 359, 360, 361, 363, 367, 368, 369, 371, 374], "ndim": [1, 2, 37, 40, 43, 44, 65, 66, 80, 82, 89, 93, 109, 115, 177, 247], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 80, 89, 93, 106, 110, 111, 112, 115, 311, 343, 348, 355, 356, 357, 359, 366, 373, 374], "make_env": [1, 3, 109, 115, 117, 175, 311, 335, 336, 355, 356, 374], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 41, 68, 74, 89, 93, 109, 115, 169, 198, 225, 243, 250, 251, 252, 253, 271, 332, 348, 352, 355, 356, 359, 360, 364, 371, 374], "behav": [1, 3, 95, 105, 202, 206, 222, 269, 276, 370], "iif": 1, "accordingli": [1, 163, 164, 206, 250, 358, 359, 361, 362, 363], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 77, 80, 82, 87, 88, 89, 92, 93, 94, 95, 96, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 123, 125, 126, 129, 133, 136, 138, 139, 145, 147, 149, 151, 153, 154, 156, 159, 160, 163, 164, 165, 167, 168, 169, 171, 173, 177, 178, 183, 188, 189, 190, 192, 193, 194, 196, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 215, 216, 219, 222, 224, 234, 236, 237, 238, 239, 242, 243, 249, 251, 252, 255, 256, 257, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 329, 350, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 367, 368, 369, 370, 371, 372, 373, 374], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 41, 60, 68, 80, 125, 138, 179, 242, 252, 360, 361, 363, 367, 368], "current": [1, 2, 3, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 48, 49, 77, 89, 93, 95, 106, 109, 115, 125, 126, 129, 152, 164, 165, 166, 168, 169, 177, 180, 181, 186, 200, 209, 227, 247, 248, 262, 264, 271, 277, 280, 282, 283, 316, 352, 355, 356, 357, 358, 359, 361, 362, 363, 367, 368, 369, 371, 373, 374], "fulli": [1, 8, 33, 89, 93, 109, 115, 177, 203, 207, 356, 361, 369, 371], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 106, 109, 110, 111, 115, 116, 117, 123, 125, 141, 151, 152, 156, 169, 171, 175, 177, 179, 187, 189, 190, 196, 210, 218, 241, 247, 252, 253, 254, 255, 262, 263, 265, 266, 268, 269, 270, 276, 278, 280, 281, 282, 283, 285, 293, 295, 296, 311, 318, 330, 349, 355, 356, 357, 360, 361, 367, 368, 369, 371, 373, 374], "consecut": [1, 3, 54, 75, 97, 208, 248, 313, 358, 359, 362, 368, 371, 374], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 60, 89, 90, 92, 93, 106, 107, 109, 115, 151, 173, 177, 330, 346, 356, 357, 359, 360], "therebi": [1, 23, 311, 351, 355, 356], "interrupt": [1, 2, 93, 247, 299], "These": [1, 2, 7, 33, 42, 57, 62, 89, 93, 109, 115, 116, 151, 173, 177, 350, 351, 355, 357, 367, 368, 369, 371, 374], "tool": [1, 2, 3, 5, 358, 359, 367, 369, 371, 374], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 89, 92, 93, 109, 115, 119, 122, 209, 352, 355, 357, 358, 359, 362, 363, 369], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 348], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 348], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 75, 76, 77, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 177, 178, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 260, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 321, 328, 329, 339, 342, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "multiprocess": [1, 2, 3, 17, 18, 19, 54, 62, 90, 91, 109, 115, 175, 355, 356, 357, 358, 367, 368, 369, 370, 374], "synchron": [1, 13, 18, 20, 106, 344, 345, 356, 357, 367], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 33, 89, 93, 106, 109, 115, 134, 137, 164, 169, 175, 177, 180, 184, 185, 197, 204, 205, 208, 222, 230, 231, 232, 249, 253, 278, 311, 326, 355, 356, 358, 367, 368, 373, 374], "find": [1, 4, 6, 7, 17, 18, 19, 37, 39, 45, 76, 77, 206, 240, 248, 324, 328, 355, 356, 360, 361, 367, 368], "folder": [1, 2, 36, 38, 41, 116, 356], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 87, 88, 89, 90, 92, 93, 94, 95, 103, 104, 105, 109, 110, 111, 115, 116, 117, 118, 128, 129, 132, 133, 134, 135, 137, 140, 145, 146, 147, 151, 159, 161, 165, 166, 168, 169, 171, 173, 175, 177, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 252, 253, 255, 256, 259, 273, 278, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 325, 330, 333, 344, 345, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 373, 374], "variou": [1, 2, 3, 204, 208, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 286, 291, 313, 344, 345, 355, 356, 357, 359, 360, 361, 363, 367, 368, 371, 374], "machin": [1, 2, 7, 17, 18, 19, 33, 59, 97, 367, 368, 373], "wonder": 1, "why": [1, 2, 3, 186, 367, 369, 374], "instead": [1, 4, 7, 8, 11, 28, 33, 60, 89, 93, 109, 115, 141, 165, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 262, 264, 266, 269, 270, 271, 276, 277, 280, 281, 282, 283, 291, 293, 297, 301, 346, 350, 359, 360, 361, 364, 369, 371, 374], "lower": [1, 2, 3, 20, 25, 132, 175, 226, 227, 256, 357, 367, 369], "io": [1, 54, 60, 98, 99, 106, 206, 207], "footprint": [1, 2, 371], "commun": [1, 2, 3, 109, 349, 357, 374], "yet": [1, 85, 86, 98, 99, 370], "spec": [1, 2, 3, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 50, 51, 52, 56, 85, 86, 89, 91, 92, 93, 94, 95, 98, 99, 105, 106, 107, 109, 112, 115, 116, 117, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 183, 186, 187, 199, 225, 227, 236, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 256, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 339, 350, 355, 356, 357, 358, 359, 360, 366, 367, 368, 373], "plai": [1, 3, 110, 111, 129, 356, 357, 361, 371, 374], "role": [1, 3, 104, 356, 361, 374], "opposit": [1, 367], "direct": [1, 2, 33, 89, 93, 109, 115, 177, 202, 206, 278, 356, 361], "sinc": [1, 2, 3, 4, 5, 7, 33, 37, 40, 43, 44, 54, 62, 77, 80, 89, 93, 109, 110, 111, 112, 115, 177, 179, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 215, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 256, 259, 311, 313, 355, 356, 357, 358, 359, 360, 361, 367, 369, 370, 371, 373, 374], "faster": [1, 2, 4, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 61, 62, 106, 293, 294, 295, 296, 358, 367, 368], "share": [1, 3, 6, 8, 22, 36, 38, 41, 65, 66, 67, 69, 76, 78, 79, 82, 90, 109, 115, 175, 204, 208, 215, 216, 237, 238, 239, 262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 346, 348, 350, 357, 358, 364, 366, 367, 368, 373, 374], "among": [1, 3, 110, 111, 367, 368], "prohibit": [1, 3, 80], "slow": [1, 3, 4, 36, 38, 41], "compar": [1, 3, 60, 80, 326, 351, 355, 357, 360, 361, 367, 368, 371, 374], "gpu": [1, 7, 8, 33, 65, 66, 82, 89, 93, 97, 109, 115, 177, 355, 357, 358, 367, 368, 374], "nativ": [1, 7, 9, 58, 89, 93, 109, 115, 129, 313, 358, 371], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 41, 43, 54, 68, 69, 76, 80, 85, 86, 93, 125, 147, 175, 188, 197, 200, 202, 204, 206, 208, 209, 212, 223, 230, 240, 249, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 350, 351, 355, 356, 357, 360, 367, 368, 369, 371, 373, 374], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 69, 74, 76, 77, 79, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 106, 107, 109, 112, 115, 116, 117, 125, 126, 130, 132, 133, 151, 159, 160, 165, 167, 168, 169, 171, 173, 177, 204, 208, 209, 213, 214, 215, 236, 240, 241, 242, 244, 245, 247, 248, 249, 250, 252, 253, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 279, 280, 281, 282, 283, 285, 287, 291, 293, 294, 295, 296, 297, 301, 311, 320, 343, 355, 356, 357, 360, 363, 367, 368, 371, 374], "build": [1, 3, 7, 22, 26, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 89, 93, 94, 95, 98, 99, 103, 104, 106, 109, 112, 115, 116, 117, 156, 175, 177, 188, 204, 208, 212, 246, 249, 253, 330, 337, 338, 340, 341, 350, 352, 357, 358, 360, 361, 362, 363, 367, 368, 369, 370, 373, 374], "mani": [1, 2, 3, 4, 40, 85, 86, 87, 88, 89, 92, 94, 95, 98, 99, 106, 107, 112, 262, 264, 270, 277, 280, 281, 285, 350, 355, 356, 357, 359, 360, 362, 364, 367, 368, 369, 371, 374], "eg": [1, 2, 3, 11, 36, 38, 41, 65, 66, 67, 78, 79, 82, 87, 88, 89, 92, 93, 94, 95, 97, 109, 112, 115, 136, 163, 169, 215, 241, 313], "gymnasium": [1, 3, 5, 11, 89, 92, 93, 94, 100, 101, 109, 115, 119, 122, 139, 160, 163, 174, 356, 357, 369, 373], "warn": [1, 3, 240, 244, 245, 248, 356, 359, 361, 362, 363], "quickli": [1, 3, 356, 367, 368, 374], "becom": [1, 3, 4, 20, 202, 206, 367, 368, 374], "quit": [1, 3, 54, 89, 93, 109, 115, 350, 355, 356, 357, 360, 367, 368, 374], "annoi": [1, 3], "By": [1, 2, 3, 35, 87, 88, 89, 92, 93, 94, 95, 103, 104, 109, 110, 111, 112, 115, 116, 117, 234, 253, 278, 326, 346, 355, 367, 370, 371, 374], "filter": [1, 2, 3, 4, 47, 69, 76, 77, 262, 263, 265, 269, 270, 276, 280, 281, 283, 359], "out": [1, 2, 3, 4, 5, 9, 20, 33, 47, 56, 60, 69, 76, 77, 89, 93, 109, 110, 111, 115, 165, 177, 179, 202, 203, 206, 213, 214, 217, 218, 236, 241, 242, 243, 248, 249, 250, 251, 252, 253, 289, 290, 352, 355, 356, 357, 358, 359, 360, 362, 367, 368, 369, 371, 373, 374], "still": [1, 2, 3, 9, 60, 85, 86, 89, 93, 98, 99, 109, 115, 240, 277, 278, 355, 356, 358, 366, 369, 371, 374], "wish": [1, 3, 13, 14, 16, 60, 122, 361, 371], "displai": [1, 3, 7, 89, 93, 109, 115, 330, 352, 355, 356, 368, 369], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 74, 75, 76, 77, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 129, 130, 133, 134, 137, 138, 139, 141, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 158, 159, 160, 163, 165, 167, 168, 169, 170, 171, 173, 175, 177, 179, 186, 187, 188, 189, 190, 192, 198, 199, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 224, 225, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 262, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 302, 303, 304, 305, 307, 308, 309, 310, 313, 320, 323, 324, 326, 327, 328, 330, 339, 346, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "central": [2, 215, 355, 356, 359, 367, 368, 371], "part": [2, 3, 4, 8, 33, 42, 54, 57, 58, 60, 61, 62, 85, 89, 93, 98, 109, 115, 128, 147, 156, 159, 177, 186, 204, 208, 257, 321, 346, 355, 357, 358, 364, 367, 369, 374], "algorithm": [2, 3, 8, 9, 105, 262, 280, 281, 283, 348, 351, 352, 355, 356, 357, 358, 361, 362, 363, 367, 368, 370, 371], "implement": [2, 3, 9, 11, 13, 14, 15, 33, 78, 89, 93, 105, 106, 109, 115, 126, 133, 134, 135, 139, 142, 145, 153, 154, 160, 163, 168, 169, 175, 177, 189, 202, 203, 204, 205, 206, 207, 208, 230, 231, 232, 262, 263, 267, 268, 269, 276, 278, 279, 280, 282, 283, 311, 321, 335, 339, 350, 352, 355, 356, 357, 358, 360, 361, 362, 367, 368, 369, 373], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 23, 26, 33, 37, 40, 42, 43, 44, 54, 56, 60, 62, 75, 77, 80, 85, 86, 89, 90, 93, 97, 98, 99, 109, 115, 129, 145, 151, 154, 171, 174, 175, 177, 179, 188, 208, 209, 215, 216, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 313, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "give": [2, 3, 7, 43, 57, 89, 93, 105, 109, 115, 129, 349, 351, 355, 356, 367, 368, 369, 370, 373], "abil": [2, 278, 369, 371], "panel": [2, 357], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 56, 62, 80, 126, 129, 138, 204, 208, 269, 276, 283, 286, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "includ": [2, 3, 4, 7, 9, 20, 33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 78, 79, 82, 89, 93, 105, 109, 115, 164, 169, 175, 177, 278, 283, 333, 350, 352, 355, 356, 357, 358, 367, 368, 369, 371, 374], "almost": [2, 358], "physic": [2, 6, 7, 109, 112, 352, 355, 367, 368, 369], "theori": 2, "crude": 2, "made": [2, 3, 33, 40, 54, 65, 66, 67, 78, 79, 82, 89, 93, 109, 115, 177, 248, 266, 291, 355, 356, 358, 367, 368, 370, 371], "liststorag": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 371], "veri": [2, 3, 98, 99, 356, 359, 362, 367, 369, 371, 373, 374], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 29, 30, 33, 35, 36, 38, 41, 54, 60, 69, 71, 74, 76, 77, 85, 86, 89, 93, 98, 99, 109, 115, 125, 126, 154, 177, 186, 210, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 288, 291, 350, 352, 355, 357, 358, 359, 360, 361, 367, 368, 369, 371, 374], "complex": [2, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 355, 356, 359, 360], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 123, 125, 126, 128, 129, 130, 133, 134, 136, 137, 138, 139, 141, 144, 147, 149, 151, 152, 153, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 177, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 262, 263, 265, 266, 268, 269, 270, 273, 274, 276, 278, 280, 281, 282, 283, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 339, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 373, 374], "contigu": [2, 8, 57, 60, 61, 89, 93, 109, 115, 183, 357, 367, 368, 369, 371, 373, 374], "tensorstorag": [2, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 80, 362, 371], "lazymemmapstorag": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 76, 77, 128, 129, 355, 356, 358, 362, 367, 370, 371], "citizen": 2, "pytre": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 71], "tupl": [2, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 71, 76, 79, 80, 87, 88, 89, 93, 109, 115, 123, 136, 138, 144, 145, 147, 152, 160, 177, 186, 192, 198, 199, 204, 207, 208, 209, 210, 219, 223, 224, 225, 242, 243, 247, 250, 251, 256, 262, 263, 265, 269, 270, 272, 276, 278, 280, 281, 282, 283, 285, 293, 294, 295, 296, 324, 326, 328, 337, 338, 371], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 26, 33, 36, 38, 41, 47, 69, 74, 76, 77, 89, 92, 93, 94, 103, 104, 109, 115, 116, 117, 165, 169, 177, 249, 253, 283, 326, 344, 345, 346, 352, 356, 357, 359, 361, 367, 369, 374], "nest": [2, 3, 26, 29, 33, 36, 38, 40, 41, 50, 65, 66, 71, 82, 89, 92, 93, 94, 109, 115, 129, 163, 166, 177, 187, 247, 293, 294, 295, 296, 297, 311, 352, 356, 357, 368, 369, 371, 373], "construct": [2, 3, 5, 33, 37, 40, 43, 44, 54, 71, 89, 92, 93, 109, 110, 115, 134, 137, 177, 179, 204, 208, 227, 253, 330, 350, 356, 357, 358, 360, 367, 369, 371, 374], "ram": [2, 92, 94, 371, 374], "prealloc": [2, 3, 369], "ve": [2, 42, 355, 358, 364], "been": [2, 3, 5, 7, 8, 17, 19, 20, 42, 71, 75, 89, 93, 97, 103, 104, 109, 115, 145, 163, 164, 168, 202, 206, 240, 245, 247, 248, 355, 356, 357, 358, 366, 367, 368, 369, 371, 374], "here": [2, 3, 4, 7, 8, 9, 10, 61, 62, 80, 87, 88, 89, 93, 97, 109, 110, 111, 115, 129, 320, 350, 351, 352, 355, 356, 357, 358, 359, 360, 362, 364, 367, 368, 369, 371, 373, 374], "start": [2, 3, 4, 5, 13, 20, 23, 47, 54, 62, 69, 76, 77, 90, 102, 109, 115, 186, 325, 354, 355, 356, 365, 368, 369, 371, 372, 374], "replay_buff": [2, 8, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 327, 342, 355, 356, 357, 362, 367, 368, 371], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 80, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 122, 123, 125, 126, 128, 129, 132, 138, 139, 144, 145, 147, 149, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 173, 175, 177, 178, 183, 186, 187, 188, 192, 193, 194, 195, 198, 199, 201, 202, 203, 204, 206, 207, 208, 210, 212, 215, 216, 219, 224, 225, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 257, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 311, 313, 323, 326, 339, 342, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "rb": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 76, 77, 80, 129, 156, 177, 356, 358, 362, 364, 368, 370, 371, 373], "10": [2, 3, 7, 21, 22, 26, 33, 37, 40, 42, 43, 44, 45, 47, 65, 66, 68, 71, 76, 77, 80, 82, 85, 86, 89, 90, 93, 98, 99, 105, 109, 110, 111, 113, 114, 115, 116, 117, 123, 126, 128, 129, 164, 166, 167, 177, 188, 191, 192, 194, 196, 198, 202, 203, 206, 207, 209, 212, 223, 234, 244, 245, 248, 249, 256, 263, 266, 268, 270, 280, 281, 282, 285, 291, 293, 294, 295, 296, 299, 313, 321, 352, 354, 355, 356, 357, 358, 359, 360, 364, 367, 368, 369, 371, 372, 373, 374], "add": [2, 3, 4, 6, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 71, 72, 80, 81, 83, 84, 89, 93, 109, 115, 129, 145, 169, 177, 204, 208, 217, 246, 262, 325, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 373], "string": [2, 17, 18, 19, 33, 39, 47, 63, 89, 93, 103, 109, 115, 122, 151, 163, 173, 177, 204, 208, 242, 247, 249, 250, 261, 312, 329, 339, 351, 355, 357, 358, 371], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 32, 35, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 76, 77, 80, 82, 108, 109, 115, 129, 152, 161, 164, 165, 189, 190, 202, 203, 206, 236, 240, 242, 247, 252, 253, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285, 321, 355, 357, 360, 362, 371, 374], "30": [2, 3, 40, 58, 125, 146, 226, 227, 311, 315, 356, 357, 362, 367, 368, 369, 371], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 80, 82, 89, 90, 92, 93, 102, 103, 104, 105, 109, 110, 111, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 141, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 334, 335, 336, 339, 342, 344, 345, 346, 350, 352, 355, 356, 357, 358, 359, 361, 362, 363, 367, 368, 369, 371, 373, 374], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 124, 125, 126, 128, 129, 130, 131, 133, 136, 141, 142, 146, 147, 149, 151, 152, 155, 162, 163, 166, 169, 170, 171, 173, 177, 179, 183, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 262, 263, 264, 270, 272, 273, 277, 278, 279, 280, 281, 285, 293, 295, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 321, 322, 323, 326, 327, 330, 332, 339, 340, 344, 345, 346, 369, 371], "tell": [2, 3, 4, 7, 110, 111, 355, 358, 362, 367, 368], "our": [2, 3, 7, 8, 17, 40, 129, 313, 350, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 368, 370, 371, 373], "far": [2, 42, 205, 231, 232, 364, 369, 374], "restrict": [2, 3, 356, 370, 371, 374], "empti": [2, 3, 26, 29, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 71, 89, 93, 108, 109, 115, 134, 137, 151, 153, 166, 169, 171, 173, 317, 355, 369], "64": [2, 3, 36, 38, 41, 54, 60, 71, 129, 155, 192, 193, 201, 204, 208, 216, 224, 291, 355, 356, 357, 358, 360, 364, 366, 369, 370, 371, 373, 374], "dtype": [2, 3, 13, 14, 15, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 76, 77, 82, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 123, 126, 127, 133, 134, 135, 136, 137, 138, 139, 145, 147, 149, 151, 153, 154, 156, 160, 163, 165, 167, 168, 169, 171, 173, 177, 179, 183, 186, 187, 188, 198, 199, 202, 203, 204, 206, 207, 208, 212, 217, 218, 224, 225, 233, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 251, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 299, 339, 350, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "unit8": 2, "img": 2, "randint": [2, 47, 71, 167, 371], "255": [2, 71, 167, 369, 371], "uint8": [2, 3, 36, 38, 41, 49, 54, 60, 87, 88, 103, 104, 138, 149, 167, 356, 363, 370, 371, 373], "next": [2, 3, 4, 8, 13, 14, 15, 22, 26, 29, 33, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 76, 77, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 103, 104, 105, 109, 113, 114, 115, 116, 117, 125, 126, 128, 129, 134, 137, 138, 139, 144, 145, 149, 153, 154, 156, 159, 160, 163, 165, 174, 175, 177, 183, 186, 188, 203, 204, 207, 208, 212, 227, 247, 258, 262, 263, 265, 266, 268, 269, 270, 271, 276, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 313, 324, 326, 328, 356, 358, 360, 363, 364, 366, 369, 370, 373, 374], "ask": [2, 8, 54, 60, 69, 76, 77, 313, 357, 358, 359, 360, 367, 368, 370, 374], "do": [2, 3, 4, 7, 62, 89, 93, 109, 115, 116, 117, 152, 174, 175, 186, 216, 217, 238, 293, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374], "automat": [2, 3, 5, 62, 65, 66, 71, 82, 89, 92, 93, 94, 109, 110, 111, 115, 125, 134, 137, 147, 174, 189, 236, 247, 249, 311, 350, 355, 357, 359, 360, 367, 368, 369, 371, 373], "hand": [2, 3, 7, 20, 26, 367, 368, 369], "look": [2, 3, 5, 7, 8, 33, 89, 93, 102, 109, 110, 111, 115, 151, 152, 171, 177, 249, 253, 254, 255, 351, 357, 358, 359, 360, 361, 362, 364, 367, 368, 369, 370, 371, 373, 374], "assum": [2, 3, 6, 26, 35, 42, 43, 44, 56, 58, 60, 61, 62, 76, 89, 93, 109, 115, 128, 131, 141, 151, 152, 159, 165, 169, 171, 173, 183, 204, 208, 209, 234, 256, 266, 271, 283, 291, 302, 303, 304, 305, 307, 308, 309, 310, 313, 355, 357, 358, 366, 369], "lead": [2, 3, 4, 8, 10, 11, 22, 26, 29, 33, 37, 40, 43, 44, 56, 75, 87, 88, 89, 92, 94, 95, 165, 205, 224, 231, 232, 355, 358, 367, 368, 369, 371, 373], "leav": [2, 26, 36, 38, 40, 41, 89, 179, 187, 355, 362, 371], "tree": [2, 36, 38, 41, 89, 93, 109, 115, 367, 371], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 79, 87, 88, 89, 90, 92, 93, 94, 95, 109, 115, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 189, 190, 197, 204, 208, 210, 215, 216, 230, 236, 241, 242, 249, 250, 252, 253, 256, 257, 263, 270, 277, 279, 281, 283, 327, 332, 350, 355, 357, 366, 368, 369, 371, 374], "don": [2, 3, 4, 6, 7, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 129, 356, 357, 362, 371, 373, 374], "throw": [2, 33, 36, 38, 41, 89, 93, 109, 115, 177, 374], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 76, 77, 80, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 128, 129, 133, 134, 137, 138, 139, 149, 153, 154, 156, 160, 163, 165, 168, 169, 177, 178, 186, 187, 188, 196, 198, 199, 204, 208, 212, 224, 225, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 255, 256, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 313, 321, 327, 339, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "max": [2, 22, 35, 38, 43, 47, 63, 68, 69, 80, 136, 166, 230, 231, 232, 241, 248, 263, 264, 270, 279, 281, 283, 355, 357, 358, 364, 367, 368], "label": [2, 38, 39, 42, 47, 355, 367, 371], "100": [2, 13, 14, 15, 16, 33, 37, 40, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 80, 85, 86, 89, 93, 98, 99, 109, 115, 132, 138, 147, 156, 161, 163, 177, 215, 243, 247, 313, 322, 342, 356, 357, 358, 359, 361, 364, 366, 367, 368, 369, 370, 371, 373, 374], "rb_pytre": 2, "randn": [2, 26, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 76, 77, 82, 128, 147, 183, 191, 192, 196, 198, 199, 202, 203, 206, 207, 209, 213, 214, 215, 219, 222, 223, 225, 236, 237, 238, 239, 241, 242, 249, 250, 252, 255, 256, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296, 329, 350, 371, 373, 374], "c": [2, 3, 6, 7, 26, 36, 38, 40, 41, 43, 44, 59, 147, 167, 206, 207, 356, 371], "zero": [2, 3, 4, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 56, 66, 76, 77, 80, 82, 89, 93, 109, 115, 126, 128, 130, 134, 136, 137, 147, 153, 156, 177, 183, 186, 188, 193, 194, 195, 201, 202, 203, 204, 206, 207, 208, 209, 213, 214, 216, 224, 233, 244, 245, 248, 251, 259, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 299, 358, 371, 373], "assert": [2, 3, 6, 15, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 93, 96, 109, 115, 122, 126, 129, 132, 134, 137, 145, 154, 161, 175, 179, 183, 216, 219, 234, 293, 294, 295, 296, 321, 329, 362, 366, 371, 374], "len": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 82, 149, 189, 190, 210, 216, 355, 362, 364, 367, 369, 370, 371, 373], "ambigu": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 79, 89, 93, 109, 115, 126, 133, 151, 165, 168, 169, 171, 173, 177, 252, 351, 355, 359, 369], "deal": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 355, 357, 368, 371], "interpret": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 356], "put": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 93, 103, 104, 116, 117, 175, 320, 346, 350, 356, 357, 358, 359, 367, 369], "solv": [2, 4, 9, 10, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 349, 355, 356, 357, 362, 364, 367, 368, 369, 371], "clear": [2, 3, 26, 29, 30, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 97, 109, 115, 177, 322, 359, 362], "cut": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "distinct": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 126, 361, 366], "view": [2, 3, 8, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 123, 177, 199, 202, 206, 210, 359, 369, 371, 373, 374], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 116, 117, 129, 130, 163, 164, 165, 166, 169, 177, 187, 189, 190, 210, 213, 214, 216, 247, 248, 250, 251, 259, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 334, 346, 349, 352, 357, 358, 362, 363, 364, 369, 371, 374], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 26, 29, 60, 85, 86, 89, 93, 97, 98, 99, 102, 109, 110, 111, 115, 125, 134, 137, 152, 210, 224, 247, 249, 253, 254, 255, 259, 293, 294, 295, 296, 350, 355, 356, 357, 359, 361, 366, 367, 368, 369, 370, 371, 374], "collate_fn": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 371, 373], "__init__": [2, 3, 7, 89, 105, 122, 123, 126, 134, 137, 153, 188, 199, 202, 206, 212, 257, 263, 265, 270, 276, 281, 283, 285, 352, 369, 374], "major": 2, "worri": [2, 45], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 65, 66, 67, 69, 76, 78, 79, 82, 89, 90, 93, 97, 109, 115, 125, 187, 355, 357, 359, 367, 368, 369, 374], "though": [2, 4, 89, 93, 109, 115, 210, 357, 367, 368], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 42, 46, 48, 49, 89, 93, 109, 115, 146, 165, 205, 231, 232, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 356, 360, 363, 369, 371, 374], "latter": [2, 17, 18, 19, 33, 56, 89, 93, 109, 115, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 280, 344, 345], "inv": [2, 3, 132, 136, 139, 149, 156, 161, 369], "method": [2, 3, 4, 11, 15, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 76, 77, 78, 79, 80, 82, 89, 92, 93, 94, 95, 109, 112, 115, 125, 126, 129, 133, 134, 135, 138, 139, 141, 145, 147, 151, 153, 154, 155, 156, 160, 163, 165, 168, 169, 171, 173, 177, 178, 188, 209, 236, 237, 238, 239, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 297, 311, 312, 343, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 367, 369, 371, 374], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 45, 46, 48, 49, 89, 93, 109, 115, 136, 139, 160, 167, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 293, 371], "multithread": [2, 3, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 63, 106, 107, 362, 371], "thread": [2, 13, 14, 16, 36, 38, 41, 85, 86, 98, 99, 109, 115], "prefetch": [2, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 63, 355, 356, 358, 371], "advis": [2, 57, 374], "benchmark": [2, 3, 9, 86, 98, 99], "techniqu": [2, 8, 109, 115, 356, 362, 371], "real": [2, 5, 60, 253, 351, 358, 369], "life": [2, 138], "adopt": [2, 3, 5, 355, 374], "throughput": [2, 9, 355], "constant": [2, 27, 129, 147, 164, 352, 355, 357, 358, 374], "throughout": [2, 3, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 357, 367, 374], "further": [2, 3, 5, 23, 355, 357, 359], "refin": [2, 60, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291], "coupl": [2, 358, 360, 361, 369, 371], "get": [2, 3, 4, 6, 7, 8, 9, 26, 29, 36, 37, 38, 40, 41, 54, 56, 60, 65, 66, 69, 76, 77, 78, 79, 80, 82, 89, 90, 93, 109, 115, 123, 128, 130, 134, 136, 137, 145, 147, 152, 164, 165, 167, 169, 175, 236, 244, 245, 249, 250, 253, 293, 294, 295, 296, 297, 313, 317, 350, 354, 355, 356, 357, 358, 365, 367, 368, 369, 371, 372, 373, 374], "first_elt": 2, "128": [2, 54, 56, 60, 77, 85, 86, 98, 99, 193, 196, 356, 358, 364, 367, 369, 370, 371], "wa": [2, 3, 5, 7, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 76, 89, 93, 109, 115, 169, 179, 187, 206, 262, 264, 275, 277, 280, 282, 284, 299, 351, 356, 357, 359, 360, 361, 362, 363, 366, 367, 371, 373, 374], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 24, 26, 28, 29, 33, 35, 36, 37, 38, 39, 40, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 71, 76, 77, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 122, 125, 126, 129, 130, 134, 135, 136, 137, 144, 147, 153, 154, 156, 159, 163, 165, 166, 167, 175, 177, 183, 186, 187, 189, 190, 192, 193, 194, 195, 196, 199, 201, 204, 210, 213, 214, 215, 216, 219, 222, 225, 236, 237, 238, 239, 241, 242, 244, 245, 247, 248, 250, 252, 255, 257, 278, 311, 339, 342, 350, 352, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 130], "larger": [2, 4, 269, 276, 373], "volum": 2, "due": [2, 3, 5, 361, 370, 371, 374], "serialis": [2, 36, 38, 41], "memorymappedtensor": [2, 36, 38, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 315, 362, 370], "well": [2, 3, 8, 20, 22, 33, 37, 39, 40, 43, 44, 74, 78, 89, 93, 109, 115, 169, 177, 192, 206, 226, 227, 278, 297, 355, 356, 358, 359, 360, 361, 363, 370, 371, 373, 374], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 103, 104, 109, 110, 111, 115, 116, 117, 134, 135, 137, 159, 162, 164, 170, 177, 188, 206, 252, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 320, 350, 355, 357, 358, 362, 367], "file": [2, 6, 7, 8, 36, 38, 41, 54, 56, 57, 58, 60, 61, 62, 116, 312, 313, 315, 352, 354, 356, 367, 371, 372, 374], "locat": [2, 7, 36, 38, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 138, 147, 158, 205, 219, 231, 232, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 355, 356, 357, 363, 367, 368, 371], "improv": [2, 4, 142, 262, 351, 367, 368, 371], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 109, 115, 357, 367, 371], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 26, 33, 36, 38, 41, 47, 54, 56, 57, 58, 60, 61, 62, 76, 77, 87, 88, 89, 92, 93, 94, 97, 109, 115, 123, 129, 156, 159, 166, 175, 177, 187, 244, 245, 249, 253, 277, 278, 280, 355, 356, 358, 359, 361, 363, 371], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 46, 48, 49, 69, 136, 206, 207, 269, 358, 362, 371], "sharabl": [2, 109, 115], "collabor": [2, 60], "rather": [2, 4, 79, 154, 355, 356, 357, 359, 361, 367, 368, 371], "incur": [2, 85, 86, 98, 99], "transmiss": 2, "overhead": [2, 85, 86, 98, 99, 109, 115], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 71, 89, 93, 109, 115, 124, 125, 168, 174, 179, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 252, 253, 254, 256, 259, 278, 280, 356, 358, 362, 369, 371], "instanti": [2, 3, 20, 36, 37, 38, 40, 41, 43, 44, 97, 125, 168, 209, 216, 311, 355, 356, 360, 361, 363, 367, 368, 369, 371, 374], "content": [2, 8, 15, 26, 29, 36, 37, 38, 40, 41, 43, 44, 75, 89, 92, 93, 94, 106, 109, 115, 153, 189, 190, 210, 215, 216, 249, 278, 357, 369, 373], "map": [2, 3, 8, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 89, 93, 102, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 149, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 183, 199, 219, 236, 237, 238, 239, 242, 249, 250, 252, 253, 255, 256, 257, 258, 283, 291, 326, 348, 350, 351, 355, 356, 357, 358, 360, 361, 370, 373], "writer": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 71, 72, 76, 80, 81, 84, 357, 371], "tensordictroundrobinwrit": [2, 71], "goe": [2, 4, 110, 111, 355, 357, 367, 368, 374], "prioritizedsampl": [2, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 71, 266, 271, 291, 355, 371], "access": [2, 3, 7, 8, 33, 37, 57, 59, 89, 93, 109, 115, 151, 171, 177, 346, 349, 355, 359, 367, 368, 369, 371], "show": [2, 33, 89, 93, 109, 115, 177, 216, 313, 350, 355, 357, 358, 367, 368, 369, 371, 373], "tensordictreplaybuff": [2, 37, 40, 43, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 76, 77, 80, 128, 129, 327, 342, 348, 355, 356, 358, 371], "mp": [2, 17, 18, 19, 54, 55, 56, 57, 58, 59, 60, 61, 62, 90, 175], "def": [2, 3, 11, 21, 33, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 90, 93, 105, 109, 115, 122, 123, 125, 126, 134, 137, 153, 169, 177, 188, 199, 202, 203, 206, 207, 212, 247, 249, 257, 263, 265, 270, 276, 278, 281, 283, 285, 311, 352, 355, 356, 366, 367, 368, 369, 371, 373, 374], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 36, 37, 38, 41, 42, 43, 68, 69, 89, 93, 105, 109, 110, 111, 115, 123, 125, 126, 134, 136, 137, 153, 163, 164, 169, 172, 175, 177, 187, 188, 202, 204, 208, 212, 240, 244, 245, 248, 249, 250, 251, 252, 253, 262, 263, 264, 265, 266, 268, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 297, 326, 330, 332, 335, 336, 341, 342, 352, 356, 357, 358, 361, 364, 367, 368, 369, 371, 373, 374], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 80, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 100, 101, 109, 115, 123, 126, 128, 130, 134, 135, 136, 137, 144, 145, 147, 156, 159, 165, 167, 169, 175, 178, 186, 188, 198, 199, 204, 208, 211, 212, 224, 225, 233, 236, 237, 238, 239, 241, 242, 244, 245, 248, 249, 250, 252, 255, 257, 291, 294, 295, 296, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 321, 329, 339, 350, 351, 355, 358, 368, 369, 373, 374], "__name__": [2, 3, 21, 90, 311, 356, 373], "__main__": [2, 3, 21, 90, 311, 373], "21": [2, 60, 61, 77, 109, 110, 111, 115, 354, 355, 356, 357, 364, 366, 367, 368, 369, 372], "proc": 2, "target": [2, 4, 8, 20, 23, 33, 89, 90, 93, 109, 115, 164, 168, 177, 252, 253, 262, 263, 264, 265, 266, 268, 270, 271, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 297, 333, 341, 342, 351, 352, 358, 364, 367, 369], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 76, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 133, 151, 153, 162, 165, 168, 169, 170, 172, 173, 177, 188, 189, 190, 198, 204, 208, 210, 211, 212, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 320, 323, 327, 330, 346, 356, 374], "join": [2, 90, 348, 356, 357, 367], "now": [2, 3, 7, 37, 109, 129, 216, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 370, 371, 374], "length": [2, 19, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 42, 45, 46, 47, 48, 49, 54, 60, 63, 69, 76, 77, 79, 89, 93, 98, 99, 109, 115, 152, 175, 188, 189, 190, 192, 194, 196, 202, 206, 210, 212, 215, 216, 236, 252, 257, 321, 327, 355, 357, 358, 362, 364, 369, 371, 374], "20": [2, 47, 61, 76, 77, 80, 89, 93, 97, 109, 115, 164, 177, 201, 202, 203, 206, 207, 241, 321, 355, 356, 357, 358, 367, 368, 369, 370, 371, 373, 374], "_data": [2, 369], "It": [2, 3, 4, 7, 22, 33, 39, 42, 43, 45, 47, 56, 62, 71, 74, 80, 84, 89, 93, 95, 105, 106, 109, 110, 111, 115, 116, 117, 126, 128, 138, 145, 147, 152, 164, 169, 174, 177, 179, 192, 194, 200, 215, 216, 224, 226, 227, 233, 234, 243, 244, 247, 248, 251, 253, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 292, 293, 311, 320, 326, 339, 349, 350, 351, 355, 356, 358, 359, 367, 368, 369, 370, 371, 373, 374], "difficult": [2, 4, 109, 363], "pai": [2, 8, 355, 358], "word": [2, 3, 42, 54, 56, 58, 60, 61, 62, 278, 355, 362, 369, 374], "1m": [2, 54, 60, 333, 355, 357, 358, 370], "doe": [2, 3, 17, 36, 37, 38, 41, 43, 47, 54, 56, 60, 68, 69, 76, 78, 79, 84, 89, 93, 103, 104, 109, 115, 116, 117, 196, 202, 203, 204, 206, 207, 208, 217, 234, 241, 254, 255, 262, 264, 271, 277, 280, 292, 330, 350, 352, 355, 356, 357, 358, 359, 362, 367, 369, 371, 374], "howev": [2, 3, 5, 7, 33, 89, 93, 109, 115, 129, 159, 164, 169, 177, 262, 264, 277, 280, 282, 283, 350, 355, 356, 358, 361, 369, 371, 374], "capac": [2, 37, 40, 43, 44, 65, 66, 68, 76, 82, 357, 362], "There": [2, 10, 71, 204, 208, 350, 352, 357, 358, 360, 362, 367, 368, 369, 371, 374], "circumv": 2, "account": [2, 65, 66, 82, 125, 129, 213, 214, 350, 356, 358, 371, 374], "save": [2, 3, 8, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 174, 177, 312, 313, 315, 320, 330, 352, 362, 363, 364, 367, 368], "convent": [2, 3, 54, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 116, 117, 351, 355, 358, 367, 368, 369], "overridden": [2, 3, 54, 57, 58, 60, 61, 62, 89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 293, 295, 296, 358, 367], "dim_extend": [2, 37, 40, 43, 44], "obtain": [2, 7, 42, 54, 89, 93, 109, 115, 128, 151, 164, 173, 188, 224, 327, 355, 357, 359, 360, 361, 367, 368], "counterpart": 2, "desir": [2, 3, 33, 89, 93, 109, 115, 124, 126, 133, 147, 149, 151, 152, 165, 168, 169, 171, 173, 177, 184, 185, 189, 190, 210, 216, 236, 242, 243, 249, 250, 251, 252, 253, 350, 355, 367, 368, 369, 371], "diversifi": 2, "offer": [2, 3, 7, 85, 86, 89, 93, 98, 99, 103, 104, 109, 115, 311, 350, 355, 356, 359, 361, 362, 367, 369, 371, 374], "accomplish": [2, 179, 359], "anoth": [2, 3, 8, 60, 69, 76, 89, 92, 93, 94, 97, 109, 115, 126, 134, 135, 137, 165, 168, 210, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 350, 351, 355, 357, 358, 360, 361, 366, 367, 368, 369, 374], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 54, 55, 57, 129, 179, 263, 268, 269, 276, 320, 352, 359, 370, 371, 373], "docstr": [2, 33, 89, 93, 109, 115, 177, 359, 360], "extens": [2, 37, 40, 43, 44, 77, 352, 371], "detail": [2, 3, 5, 6, 7, 33, 89, 93, 109, 110, 111, 115, 167, 169, 177, 199, 202, 206, 243, 262, 271, 280, 349, 352, 356, 362, 366, 371], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 89, 93, 109, 115, 134, 137, 175, 177, 187, 202, 204, 206, 208, 248, 249, 253, 271, 356, 360, 366, 367, 368, 374], "without": [2, 3, 7, 9, 33, 42, 54, 56, 60, 76, 77, 89, 93, 109, 115, 116, 117, 123, 125, 134, 137, 167, 177, 202, 203, 206, 207, 238, 239, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 292, 293, 294, 295, 296, 297, 342, 349, 350, 355, 356, 357, 359, 360, 361, 362, 367, 368, 369, 371, 374], "happi": 2, "concaten": [2, 8, 13, 14, 20, 31, 32, 60, 129, 130, 147, 168, 206, 210, 255, 355, 356, 360, 367, 368, 369, 371, 374], "schedul": [2, 4, 7, 42, 326, 357, 369], "transformedenv": [2, 3, 13, 33, 89, 90, 93, 109, 115, 123, 126, 129, 132, 133, 134, 137, 138, 139, 141, 144, 145, 146, 147, 149, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 175, 177, 204, 208, 247, 313, 339, 355, 356, 357, 358, 359, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "stepcount": [2, 13, 33, 89, 93, 103, 104, 109, 115, 116, 117, 168, 177, 355, 356, 357, 358, 359, 364, 367, 368, 373], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 33, 80, 89, 90, 93, 95, 109, 115, 125, 126, 129, 132, 133, 138, 144, 145, 147, 149, 154, 155, 156, 159, 161, 164, 165, 166, 168, 169, 175, 177, 204, 208, 247, 311, 313, 339, 342, 348, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 371, 373, 374], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 129, 156, 348, 362, 371], "cartpol": [2, 3, 33, 87, 88, 89, 93, 109, 115, 125, 126, 129, 159, 164, 177, 247, 311, 356, 358, 360, 362, 363, 364, 371, 374], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 33, 56, 58, 80, 89, 90, 92, 93, 94, 98, 99, 106, 109, 115, 125, 126, 129, 132, 139, 144, 145, 147, 154, 156, 159, 161, 163, 164, 165, 166, 168, 177, 204, 208, 247, 288, 302, 303, 304, 305, 307, 308, 309, 310, 311, 350, 356, 358, 359, 360, 361, 362, 363, 364, 369, 371, 373, 374], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 85, 86, 89, 93, 98, 99, 105, 109, 110, 111, 115, 123, 126, 129, 134, 137, 145, 153, 156, 178, 188, 199, 212, 225, 227, 236, 242, 249, 250, 263, 266, 268, 281, 283, 285, 342, 350, 355, 356, 357, 358, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 373, 374], "8": [2, 3, 6, 7, 33, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 76, 77, 85, 86, 87, 88, 89, 93, 109, 115, 125, 164, 189, 190, 192, 193, 201, 210, 237, 238, 239, 249, 252, 255, 276, 354, 355, 356, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374], "traj_kei": [2, 69, 76, 77, 371], "truncated_kei": [2, 69, 76, 77, 156, 163], "strict_length": [2, 54, 60, 69, 76, 77, 313], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 33, 37, 40, 44, 45, 65, 66, 68, 69, 76, 77, 82, 89, 93, 109, 115, 151, 156, 159, 169, 173, 177, 203, 207, 219, 225, 243, 247, 249, 251, 252, 253, 293, 294, 295, 296, 321, 333, 355, 356, 357, 358, 360, 361, 362, 364, 367, 368, 369, 371, 373, 374], "enumer": [2, 13, 14, 15, 20, 33, 40, 44, 77, 89, 93, 109, 115, 177, 286, 351, 355, 356, 357, 358, 364, 367, 371, 373], "break": [2, 5, 13, 14, 15, 20, 33, 40, 44, 54, 57, 58, 60, 61, 62, 63, 69, 76, 77, 80, 89, 93, 109, 115, 126, 129, 156, 175, 177, 313, 356, 362, 364, 371, 373], "step_count": [2, 13, 14, 15, 33, 89, 93, 98, 99, 109, 115, 163, 177, 357, 358, 359, 364, 373], "32": [2, 21, 26, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 77, 113, 114, 116, 117, 189, 190, 191, 192, 193, 195, 196, 201, 210, 215, 216, 220, 221, 223, 224, 233, 291, 311, 355, 356, 358, 360, 361, 367, 369, 370, 371, 373, 374], "33": [2, 26, 33, 71, 89, 93, 109, 115, 177, 189, 190, 210, 356, 369, 370], "34": [2, 189, 190, 210, 356, 368, 369], "35": [2, 189, 190, 210, 356, 357, 369, 371], "36": [2, 355, 356, 369, 370], "37": [2, 128, 355, 356, 357, 369], "38": [2, 7, 354, 356, 369, 372, 374], "39": [2, 58, 98, 99, 354, 355, 356, 367, 369, 370, 371, 372], "40": [2, 98, 99, 354, 355, 356, 357, 358, 367, 368, 369, 372], "41": [2, 355, 356, 368, 369], "11": [2, 10, 22, 28, 35, 47, 65, 66, 68, 77, 82, 90, 167, 177, 188, 212, 354, 355, 356, 357, 368, 369, 371, 372], "12": [2, 10, 61, 65, 66, 77, 82, 98, 99, 109, 113, 114, 115, 177, 355, 356, 357, 358, 367, 369, 371], "14": [2, 6, 11, 54, 55, 56, 57, 58, 59, 60, 61, 62, 76, 77, 89, 93, 109, 115, 147, 177, 355, 356, 357, 358, 367, 368, 369, 370, 371], "15": [2, 22, 54, 55, 56, 57, 58, 59, 60, 61, 62, 77, 89, 93, 109, 115, 177, 241, 248, 272, 354, 355, 356, 358, 369, 371, 372], "16": [2, 3, 33, 61, 69, 77, 85, 86, 89, 93, 98, 99, 109, 115, 129, 177, 355, 356, 358, 367, 369, 371, 373], "17": [2, 61, 77, 109, 177, 339, 355, 356, 357, 358, 367, 369, 370], "could": [2, 3, 4, 6, 22, 356, 357, 363, 367, 368, 370, 374], "sai": [2, 33, 89, 93, 109, 115, 177, 215, 367, 370, 374], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 26, 28, 29, 32, 35, 67, 69, 76, 77, 89, 92, 93, 94, 97, 109, 115, 134, 137, 152, 159, 250, 356, 357, 358, 367, 368, 369], "handl": [2, 3, 20, 33, 89, 93, 109, 115, 174, 175, 177, 208, 210, 330, 344, 345, 355, 356, 357, 359, 361, 368, 371], "suggest": [2, 291, 355, 368], "serialenv": [2, 3, 89, 93, 109, 165, 177, 247, 348, 373, 374], "squeez": [2, 3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 125, 126, 129, 162, 164, 189, 190, 228, 229, 355, 369, 371], "6": [2, 3, 7, 13, 14, 15, 16, 22, 33, 40, 54, 61, 62, 69, 77, 87, 88, 109, 113, 114, 125, 147, 149, 164, 189, 190, 192, 193, 194, 197, 201, 203, 209, 210, 215, 216, 220, 230, 247, 249, 257, 339, 354, 356, 362, 367, 368, 369, 371, 372, 373], "5": [2, 3, 13, 14, 22, 24, 26, 29, 33, 37, 40, 43, 44, 54, 71, 76, 77, 80, 89, 90, 93, 98, 99, 103, 104, 106, 109, 113, 114, 115, 116, 117, 125, 126, 128, 156, 163, 164, 177, 188, 189, 190, 192, 193, 198, 199, 200, 201, 202, 205, 206, 209, 210, 212, 215, 216, 220, 225, 231, 232, 241, 242, 247, 250, 256, 277, 280, 282, 285, 311, 350, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374], "7": [2, 3, 6, 10, 28, 33, 35, 37, 40, 43, 69, 77, 89, 93, 103, 104, 109, 115, 125, 164, 188, 189, 190, 193, 209, 210, 212, 215, 299, 354, 355, 356, 358, 362, 367, 368, 369, 370, 371, 372, 373], "9": [2, 3, 7, 22, 33, 37, 40, 43, 61, 62, 69, 77, 80, 87, 88, 102, 110, 111, 125, 164, 175, 177, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 291, 351, 354, 355, 356, 357, 359, 362, 366, 367, 368, 369, 370, 371, 372], "18": [2, 61, 77, 113, 114, 116, 117, 177, 216, 354, 355, 356, 357, 362, 367, 368, 369, 372], "19": [2, 61, 76, 77, 80, 177, 355, 356, 357, 369], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 57, 109, 115, 168, 170, 216, 351, 352, 355, 356, 368, 371, 373], "congruent": 2, "custom": [2, 3, 5, 33, 89, 93, 109, 115, 171, 177, 215, 216, 256, 271, 280, 286, 346, 350, 355, 356, 357, 358, 360, 361, 363, 367, 368], "name": [2, 3, 6, 7, 11, 15, 33, 36, 38, 41, 47, 54, 57, 59, 62, 63, 85, 87, 89, 93, 98, 102, 103, 104, 106, 109, 110, 111, 112, 115, 116, 117, 118, 136, 139, 154, 159, 160, 163, 169, 171, 174, 177, 187, 204, 208, 242, 250, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 293, 295, 296, 297, 311, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 339, 352, 355, 356, 357, 358, 361, 363, 367, 368, 369, 374], "randomcroptensordict": [2, 355], "unlik": [2, 75, 103, 104, 116, 117, 247, 271, 280, 313, 356, 360, 362, 373], "stop": [2, 3, 15, 20, 42, 62, 69, 76, 77, 89, 93, 109, 115, 357, 362, 367, 368, 373, 374], "signal": [2, 3, 13, 14, 15, 16, 22, 54, 56, 58, 60, 61, 62, 69, 76, 77, 80, 93, 103, 104, 116, 117, 129, 138, 163, 166, 187, 351, 355, 357, 367, 368, 371, 374], "disk": [2, 3, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 330, 352, 355, 356, 358, 362, 363, 371], "dump": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 311, 312, 313, 363, 364, 367], "load": [2, 6, 7, 13, 14, 15, 16, 33, 36, 37, 38, 40, 41, 42, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 88, 89, 93, 109, 115, 122, 175, 177, 346, 352, 355, 357, 371], "json": 2, "metadata": [2, 54, 56, 357, 359, 361, 362, 367, 368, 374], "anticip": [2, 134, 137], "compli": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 60], "back": [2, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 46, 48, 49, 56, 174, 179, 236, 242, 243, 249, 250, 251, 252, 253, 357, 367, 368, 369, 371], "exact": [2, 3, 109, 206], "statu": [2, 3, 89], "prioriti": [2, 4, 37, 43, 44, 65, 66, 67, 68, 69, 78, 79, 82, 265, 266, 268, 269, 270, 271, 276, 281, 283, 285, 291, 352, 355, 356, 371], "heap": 2, "under": [2, 3, 4, 20, 33, 42, 54, 56, 57, 58, 60, 61, 62, 87, 88, 89, 92, 93, 94, 95, 109, 112, 115, 177, 236, 242, 243, 249, 250, 251, 252, 253, 278, 293, 294, 295, 296, 297, 313, 351, 355, 356, 360, 367, 369, 374], "hood": [2, 20, 54, 89, 93, 109, 115, 369], "just": [2, 3, 4, 11, 79, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 102, 106, 107, 109, 110, 111, 112, 115, 125, 132, 187, 216, 321, 350, 352, 355, 356, 357, 358, 359, 360, 362, 367, 368, 369, 371, 373, 374], "public": [2, 59, 151, 173], "serializ": 2, "altern": [2, 4, 28, 106, 196, 213, 214, 215, 261, 311, 355, 357, 367, 368], "state_dict": [2, 13, 14, 15, 16, 20, 33, 36, 38, 41, 89, 93, 109, 115, 169, 175, 177, 283, 346, 352, 355, 356, 374], "load_state_dict": [2, 13, 14, 15, 16, 20, 33, 36, 38, 41, 89, 93, 109, 115, 169, 175, 177, 283, 352, 355], "drawback": 2, "struggl": 2, "big": [2, 357, 362, 371, 374], "sequenti": [2, 9, 33, 89, 93, 109, 115, 128, 145, 177, 254, 255, 280, 350, 357, 358, 360, 368, 369, 370, 374], "known": [2, 3, 5, 7, 8, 300, 301, 355, 356, 359], "seamless": [2, 210], "integr": [2, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 195, 204, 208, 212, 252, 350, 359, 360, 362, 367, 368, 369, 370], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 355, 356, 361], "essenti": [2, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 356, 359, 367, 369, 371], "understand": [2, 3, 8, 355, 356, 359, 360, 367, 368], "purpos": [2, 3, 7, 89, 93, 109, 115, 129, 202, 262, 264, 277, 280, 282, 342, 355, 357, 358, 361, 363, 367, 368, 370, 374], "guid": [2, 110, 111, 113, 114, 164, 349, 355, 368], "explan": [2, 33, 89, 93, 109, 115, 177], "effect": [2, 3, 26, 33, 37, 40, 43, 44, 54, 60, 69, 71, 74, 76, 77, 89, 93, 109, 115, 125, 129, 169, 177, 330, 355, 360, 367, 371, 374], "realm": [2, 360], "As": [2, 3, 4, 33, 54, 89, 93, 102, 109, 110, 111, 115, 156, 253, 293, 350, 355, 356, 357, 358, 359, 361, 362, 367, 368, 369, 370, 371, 373, 374], "practition": 2, "often": [2, 3, 8, 275, 330, 355, 356, 359, 361, 369, 371, 374], "encount": [2, 4, 60, 247, 349, 356, 360, 369], "situat": [2, 103, 104], "sometim": [2, 3, 358, 374], "discard": [2, 3, 47, 56, 58, 93, 171, 186, 312, 371, 374], "variabl": [2, 3, 4, 7, 8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 54, 57, 58, 61, 62, 85, 86, 87, 88, 89, 92, 94, 95, 98, 99, 103, 104, 107, 108, 112, 116, 117, 202, 203, 204, 206, 207, 208, 212, 237, 238, 239, 278, 281, 352, 356], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 23, 33, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 147, 148, 149, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 186, 191, 192, 193, 194, 195, 196, 199, 204, 208, 209, 215, 220, 221, 223, 225, 226, 236, 237, 238, 239, 241, 242, 244, 245, 247, 248, 249, 250, 257, 258, 262, 263, 264, 265, 266, 268, 269, 270, 273, 276, 277, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 311, 313, 339, 342, 350, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374], "immedi": [2, 26, 29, 33, 89, 93, 109, 115, 177, 292, 367, 368], "200": [2, 13, 14, 15, 20, 33, 54, 89, 92, 93, 94, 109, 115, 116, 117, 156, 177, 192, 193, 200, 226, 227, 311, 313, 355, 358, 362, 364, 369, 371], "199": [2, 369], "info": [2, 3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 74, 76, 77, 87, 88, 89, 92, 93, 94, 95, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 171, 174, 176, 320, 359, 364, 367, 368, 371], "At": [2, 211, 244, 356, 357, 358, 362, 366, 369, 370], "glanc": [2, 359], "seem": [2, 355, 358, 359], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 29, 30, 42, 89, 93, 102, 109, 110, 111, 115, 129, 152, 202, 204, 206, 208, 233, 237, 238, 239, 258, 350, 356, 358, 359, 367], "less": [2, 106, 234, 344, 345, 351, 357, 358, 371, 373], "omit": [2, 325, 357, 361, 369, 371], "proper": [2, 3, 4, 6, 7, 293, 294, 295, 296, 356, 357, 367, 368, 371], "imposs": [2, 3, 80, 179, 262, 264, 277, 280, 282], "determin": [2, 37, 43, 56, 68, 69, 89, 93, 109, 115, 116, 117, 151, 173, 215, 248, 356, 360, 367, 368], "complic": [2, 369, 371, 374], "matter": [2, 27, 362], "inconsist": [2, 374], "miss": [2, 3, 4, 6, 7, 11, 26, 33, 89, 93, 109, 115, 169, 177, 186, 254, 255, 283, 349, 355, 358], "behavior": [2, 4, 33, 89, 93, 109, 115, 169, 177, 269, 276, 358, 368, 369], "primari": [2, 362], "elimin": [2, 3, 359], "represent": [2, 29, 30, 33, 89, 93, 109, 115, 151, 171, 173, 177, 355, 369, 370, 374], "upon": [2, 3, 8, 367, 369], "canon": 2, "definit": [2, 35, 78, 215], "markov": [2, 3, 359, 374], "decis": [2, 3, 191, 223, 241, 267, 279, 358, 359, 360, 367, 368, 371, 374], "mdp": [2, 359, 369], "context": [2, 3, 5, 8, 33, 89, 90, 93, 108, 109, 115, 165, 170, 177, 216, 217, 241, 289, 290, 293, 294, 295, 296, 298, 306, 313, 326, 350, 351, 355, 356, 357, 367, 368, 369, 370, 371], "condit": [2, 47, 164, 242, 243, 247, 250, 251, 261, 355, 367, 369, 371], "complet": [2, 7, 9, 75, 89, 93, 109, 115, 129, 163, 349, 351, 355, 357, 359, 366], "termin": [2, 3, 7, 13, 14, 15, 16, 33, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 87, 88, 89, 92, 93, 94, 98, 99, 103, 104, 109, 110, 111, 113, 114, 115, 116, 117, 125, 126, 138, 153, 177, 187, 188, 204, 208, 212, 247, 254, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 355, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "truncat": [2, 3, 13, 14, 15, 16, 33, 39, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 76, 77, 87, 88, 89, 92, 93, 94, 103, 104, 109, 110, 111, 115, 116, 117, 138, 139, 146, 153, 156, 163, 169, 177, 187, 204, 208, 232, 247, 299, 355, 357, 358, 359, 360, 362, 363, 366, 367, 370, 371, 373, 374], "reward": [2, 3, 13, 14, 15, 27, 33, 36, 41, 42, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 80, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 123, 126, 127, 132, 133, 134, 135, 137, 138, 139, 145, 149, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 168, 169, 170, 172, 173, 175, 177, 183, 186, 188, 204, 212, 241, 247, 258, 262, 263, 265, 266, 268, 269, 270, 273, 276, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 323, 324, 326, 328, 346, 351, 352, 355, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "imit": [2, 3], "addit": [2, 3, 4, 33, 56, 89, 93, 109, 115, 116, 133, 151, 165, 168, 169, 171, 173, 177, 202, 240, 241, 247, 252, 261, 278, 293, 311, 351, 355, 356, 359, 367, 368, 371], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 45, 46, 48, 49, 60, 89, 90, 93, 96, 109, 115, 177, 189, 190, 210, 216, 351, 352, 355, 356, 357, 358, 359, 367, 368, 369, 371], "stateless": [2, 3, 89, 93, 109, 115, 126, 168, 278, 355, 359, 369, 374], "simul": [2, 3, 5, 7, 8, 85, 86, 95, 98, 99, 112, 116, 117, 121, 188, 212, 350, 355, 357, 359, 363, 367, 368], "furthermor": [2, 367, 368], "certain": [2, 4, 17, 18, 19, 20, 33, 47, 89, 93, 109, 115, 122, 142, 163, 169, 177, 203, 207, 244, 277, 350, 355, 356, 357, 364, 367, 368, 374], "composit": [2, 3, 26, 29, 74, 79, 84, 89, 93, 109, 115, 357, 360, 369], "accommod": [2, 3, 359, 360], "uniform": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 43, 46, 48, 49, 68, 69, 367], "unambigu": 2, "distinguish": [2, 103, 104, 116, 117], "happen": [2, 3, 89, 93, 109, 115, 240, 356, 361, 362, 363, 370, 374], "limit": [2, 42, 89, 93, 105, 109, 115, 129, 145, 262, 264, 277, 280, 282, 355, 356, 358, 367, 368, 369], "everyth": [2, 356, 357, 358, 363, 364], "belong": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 54, 60, 174, 175, 350, 355, 362, 368], "rule": [2, 109, 134, 137, 253, 350, 357], "entri": [2, 3, 13, 14, 16, 22, 26, 29, 33, 36, 38, 39, 41, 47, 51, 56, 57, 58, 59, 61, 62, 76, 77, 87, 88, 89, 92, 93, 94, 95, 103, 104, 109, 112, 115, 116, 117, 125, 129, 131, 132, 134, 137, 138, 141, 144, 147, 149, 151, 154, 156, 159, 161, 163, 164, 165, 173, 175, 177, 186, 187, 204, 213, 214, 241, 242, 247, 250, 251, 263, 283, 293, 294, 295, 296, 350, 355, 357, 358, 359, 360, 361, 363, 367, 368, 369, 370, 371, 374], "field": [2, 3, 13, 14, 15, 16, 22, 26, 33, 39, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 82, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 126, 134, 137, 138, 139, 149, 153, 154, 156, 160, 163, 165, 169, 177, 186, 188, 198, 199, 204, 208, 212, 224, 225, 233, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 251, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 334, 339, 349, 350, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "taken": [2, 3, 89, 93, 109, 115, 155, 213, 214, 245, 351, 355, 357, 358, 360, 367, 368, 369], "is_shar": [2, 3, 13, 14, 15, 22, 26, 36, 38, 39, 42, 43, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 82, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 126, 134, 137, 138, 139, 149, 153, 154, 156, 160, 163, 165, 175, 186, 188, 198, 199, 204, 208, 212, 224, 225, 233, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 251, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 339, 350, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "brought": [2, 357, 358, 360], "step_mdp": [2, 3, 89, 93, 109, 115, 204, 208, 348, 358, 359, 369, 373, 374], "count": [2, 3, 33, 89, 90, 163, 248, 326, 330, 333, 355, 356, 357, 358, 371, 374], "trigger": [2, 7], "partial": [2, 3, 89, 93, 109, 115, 128, 129, 164, 165, 166, 330, 358, 374], "turn": [2, 17, 18, 19, 20, 36, 38, 41, 143, 170, 174, 242, 311, 326, 351, 355, 356, 358, 360, 369, 370], "retain": 2, "regard": [2, 56, 62, 199, 243, 262, 271, 280, 355, 357, 369], "posit": [2, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 87, 88, 89, 93, 109, 115, 141, 142, 162, 163, 166, 169, 170, 177, 219, 283, 351, 357, 367, 368, 369, 371], "both": [2, 3, 7, 33, 37, 40, 43, 44, 60, 89, 90, 92, 93, 103, 104, 109, 110, 111, 115, 129, 154, 169, 177, 187, 189, 190, 204, 207, 208, 210, 215, 216, 237, 238, 239, 243, 251, 262, 264, 265, 269, 270, 276, 277, 278, 280, 281, 282, 283, 285, 326, 350, 355, 357, 359, 361, 367, 368, 369, 370, 371, 374], "mark": [2, 3, 15, 62, 89, 93, 109, 115, 204, 208, 293, 295, 296, 362, 371], "identifi": [2, 39], "marl": [2, 102, 118, 129, 166, 215, 359, 367, 368], "abov": [2, 3, 7, 33, 89, 93, 109, 115, 177, 205, 231, 232, 261, 351, 352, 355, 357, 359, 360, 367, 368, 369, 374], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 69, 76, 77, 87, 88, 89, 92, 93, 94, 95, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 126, 127, 129, 132, 133, 134, 135, 137, 139, 145, 147, 151, 153, 154, 159, 160, 163, 166, 168, 169, 171, 173, 174, 177, 179, 187, 189, 190, 191, 192, 193, 196, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 219, 225, 234, 236, 237, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 311, 313, 321, 350, 351, 355, 356, 357, 358, 359, 360, 363, 366, 367, 368, 369, 370, 373, 374], "typic": [2, 3, 4, 8, 33, 89, 93, 109, 115, 138, 164, 177, 249, 263, 278, 280, 283, 350, 351, 352, 357, 359, 361, 362, 367, 368, 369], "adjust": [2, 355, 367, 368, 369], "grumodul": [2, 128], "lstmmodul": [2, 358], "skip": [2, 3, 33, 54, 89, 93, 109, 115, 142, 169, 177, 179, 249, 253, 278, 283, 293, 294, 295, 296, 312, 313, 323, 326, 355, 356, 369], "accumul": [2, 8, 177], "upcom": [2, 278, 302, 303, 304, 305, 307, 308, 309, 310, 355], "popular": [2, 3, 350, 358, 361, 368], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 177, 348, 356], "fail": [2, 7, 21, 26, 29, 109, 123, 179], "shift": [2, 33, 259, 293, 294, 295, 296, 357], "naiv": [2, 171, 359], "consum": [2, 75, 77, 247, 356, 357, 362, 368, 371], "approxim": [2, 368, 374], "twice": [2, 8], "flat": [2, 80], "would": [2, 3, 33, 42, 89, 93, 109, 115, 177, 202, 204, 206, 208, 210, 215, 352, 356, 357, 358, 359, 361, 362, 369, 371, 373, 374], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 129, 196, 223, 262, 267, 279, 280, 321, 346, 357, 358, 368, 371], "2x": 2, "small": [2, 171, 355, 357, 367, 368, 374], "clearer": [2, 360], "lazi": [2, 29, 30, 51, 52, 89, 93, 109, 115, 116, 117, 151, 171, 189, 215, 217, 254, 255, 355, 356, 360, 362, 366, 371, 374], "certainli": 2, "benefici": 2, "welcom": [2, 359], "wrapper": [2, 3, 11, 16, 36, 38, 41, 42, 43, 44, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 174, 178, 219, 234, 240, 241, 245, 247, 248, 253, 258, 293, 318, 319, 320, 346, 348, 357, 358, 359, 361, 362, 363, 367, 368, 370, 374], "around": [2, 5, 7, 16, 43, 44, 105, 178, 247, 253, 293, 355, 356, 368, 374], "selecttransform": [2, 89, 93, 109, 115], "excludetransform": [2, 61, 160, 371], "promptli": 2, "virtual": [2, 3, 92], "instal": [2, 3, 5, 10, 17, 18, 19, 56, 59, 89, 93, 109, 110, 111, 113, 114, 115, 315, 330, 349, 355, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 374], "respons": [2, 3, 8, 69, 76, 89, 93, 109, 115, 330, 361, 362, 374], "d4rl": [2, 56, 62], "repositori": [2, 7, 57, 58, 59, 62, 117, 367, 368], "wheel": [2, 357], "publish": 2, "openml": [2, 59, 108], "scikit": [2, 59, 108], "panda": [2, 59], "raw": [2, 3, 4, 42, 205, 231, 232, 356, 362, 369], "go": [2, 3, 7, 102, 109, 152, 156, 241, 299, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "natur": [2, 3, 355, 358, 360, 361, 362, 371], "modifi": [2, 3, 7, 8, 26, 29, 33, 47, 89, 93, 109, 115, 126, 133, 141, 145, 151, 165, 168, 169, 171, 173, 177, 241, 248, 252, 333, 339, 355, 356, 357, 359, 367, 368, 369], "fly": [2, 175, 277, 351, 357, 369, 371, 374], "extra": [2, 10, 33, 89, 93, 109, 115, 129, 175, 177, 186, 320, 350, 357, 358, 371], "least": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 76, 89, 132, 363, 374], "pre": [2, 7, 21, 33, 47, 60, 66, 89, 93, 109, 115, 151, 171, 173, 177, 374], "appli": [2, 3, 4, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 150, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 169, 171, 172, 174, 175, 177, 202, 206, 231, 242, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285, 293, 311, 325, 352, 355, 356, 357, 362, 367, 369, 373, 374], "conisder": 2, "space": [2, 9, 35, 46, 89, 93, 109, 115, 132, 136, 183, 196, 199, 215, 221, 225, 236, 240, 242, 243, 245, 248, 249, 250, 251, 252, 253, 255, 256, 257, 266, 268, 269, 270, 285, 291, 350, 356, 357, 358, 359, 360, 361, 367, 368, 369, 373, 374], "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 57, 76, 80, 97, 98, 99, 109, 110, 111, 132, 159, 189, 190, 200, 215, 216, 244, 247, 315, 330, 344, 345, 355, 356, 357, 358, 360, 361, 364, 367, 368, 371, 373], "pipelin": [2, 3, 7, 350, 357], "replac": [2, 3, 6, 7, 26, 29, 33, 54, 60, 69, 76, 77, 125, 136, 138, 186, 244, 350, 367, 371], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 38, 41, 60, 71, 89, 93, 109, 115, 125, 156, 169, 177, 240, 245, 247, 248, 328, 352, 356, 357, 358, 360, 363, 369, 371, 374], "produc": [2, 125, 126, 189, 190, 210, 216, 222, 237, 239, 241, 313, 357, 358, 359, 360, 362, 371, 374], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 60, 75, 89, 93, 109, 110, 111, 115, 169, 177, 283, 357], "download": [2, 7, 10, 54, 56, 57, 58, 60, 61, 62, 97, 151, 173, 313, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 54, 57, 58, 60, 61, 62, 356, 367, 368, 369], "robosetexperiencereplai": [2, 76, 77], "fk1": [2, 61], "v4": [2, 61, 93, 109, 155, 302, 303, 304, 305, 307, 308, 309, 310, 339, 355, 357, 370], "expert": [2, 61], "fk1_microopenrandom_v2d": [2, 61], "func": [2, 54, 55, 56, 57, 58, 59, 60, 61, 62, 176, 361, 374], "obs_norm": 2, "norm": [2, 4, 8, 85, 86, 330, 355, 356, 357, 367, 368, 369], "num_work": [2, 36, 38, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 106, 109, 115, 355, 356], "os": [2, 38, 47, 63, 356], "cpu_count": [2, 38, 47, 63], "num_chunk": [2, 54, 55, 56, 57, 58, 59, 60, 61, 62], "1000": [2, 4, 40, 68, 76, 77, 89, 93, 109, 115, 129, 175, 244, 248, 249, 253, 275, 355, 356, 357, 358, 360, 362, 364, 370, 371], "mp_start_method": [2, 54, 55, 56, 57, 58, 59, 60, 61, 62, 109, 115, 356, 373], "fork": [2, 5, 54, 55, 56, 57, 58, 59, 60, 61, 62, 355, 356, 357, 358, 367, 368, 370, 373], "recreat": [2, 369], "customari": [2, 350], "moreov": [2, 3], "fine": [2, 3, 23, 76, 89, 93, 109, 115, 126, 145, 362, 370], "grain": [2, 3, 76, 89, 93, 109, 115, 126], "nomenclatur": 2, "compact": 2, "propos": [2, 129, 138, 211, 275, 284, 339, 350, 358, 371], "replaybufferensembl": [2, 54, 74, 79, 84], "primit": [2, 3, 4, 60, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285], "individu": [2, 4, 17, 18, 19, 20, 33, 47, 71, 80, 89, 93, 103, 104, 109, 115, 177, 355, 368], "dummi": [2, 3, 311, 339, 355, 362, 374], "semant": [2, 29, 30, 350], "ident": [2, 3, 13, 14, 15, 33, 36, 38, 41, 76, 89, 93, 106, 109, 115, 138, 215, 216, 293, 294, 295, 296, 344, 345, 356, 359, 367, 368], "another_kei": [2, 71], "renam": [2, 36, 38, 41, 71, 154, 156, 186, 355, 361], "resiz": [2, 3, 62, 71, 129, 356, 358, 359, 371, 374], "imag": [2, 3, 4, 7, 60, 131, 151, 167, 173, 210, 311, 313, 355, 356, 359, 363, 368, 370, 374], "comops": 2, "totensorimag": [2, 3, 62, 71, 129, 155, 356, 358, 371, 373, 374], "renametransform": [2, 71, 89, 93, 109, 115], "rb0": [2, 71], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 89, 93, 105, 109, 115, 120, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 171, 173, 175, 188, 198, 204, 208, 212, 224, 233, 234, 236, 237, 238, 239, 241, 242, 247, 249, 250, 252, 253, 255, 256, 257, 262, 263, 264, 265, 266, 268, 269, 270, 276, 277, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 312, 313, 339, 342, 350, 355, 356, 357, 358, 360, 361, 364, 366, 367, 368, 369, 370, 371, 373, 374], "pixel": [2, 3, 7, 26, 62, 71, 87, 88, 92, 94, 95, 112, 129, 131, 138, 141, 143, 147, 149, 151, 155, 167, 171, 173, 192, 220, 221, 311, 313, 339, 350, 355, 356, 358, 363, 367, 370, 371, 373, 374], "rb1": [2, 71], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 89, 93, 105, 109, 115, 120, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 143, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 171, 173, 175, 188, 198, 199, 204, 208, 212, 224, 225, 233, 234, 236, 237, 238, 239, 241, 243, 247, 249, 250, 251, 252, 253, 255, 256, 257, 262, 263, 264, 269, 270, 276, 277, 280, 281, 282, 283, 291, 293, 294, 295, 296, 311, 313, 326, 342, 350, 355, 356, 357, 358, 360, 364, 366, 367, 368, 369, 370, 371, 373, 374], "pixels33": [2, 71], "data0": [2, 71], "244": [2, 71, 151, 173, 369], "data1": [2, 71], "_": [2, 8, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 90, 97, 116, 117, 130, 134, 136, 137, 145, 147, 154, 167, 175, 177, 236, 252, 257, 261, 262, 263, 265, 269, 270, 276, 280, 281, 283, 285, 293, 294, 295, 296, 315, 352, 355, 356, 357, 358, 364, 367, 368, 369, 371, 373], "rang": [2, 3, 4, 8, 11, 28, 37, 40, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 71, 80, 89, 90, 93, 103, 104, 109, 115, 156, 167, 175, 177, 203, 207, 277, 285, 351, 352, 355, 357, 358, 361, 362, 364, 367, 368, 369, 371, 373], "parent": [2, 3, 20, 26, 29, 46, 55, 71, 79, 84, 89, 93, 109, 115, 126, 129, 130, 133, 135, 138, 141, 142, 147, 151, 159, 163, 164, 165, 166, 168, 170, 171, 177, 237, 278, 280, 297, 311, 313, 355, 362, 369, 373, 374], "basic": [2, 105, 350, 357, 361, 362, 364, 367, 374], "properti": [2, 3, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 105, 109, 115, 125, 168, 169, 177, 197, 205, 217, 222, 230, 231, 232, 247, 278, 283, 360, 362, 369, 371], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 46, 48, 49, 89, 93, 103, 104, 105, 108, 109, 110, 111, 115, 116, 117, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 186, 187, 189, 190, 192, 193, 194, 195, 198, 199, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 217, 218, 225, 226, 227, 228, 229, 234, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 324, 328, 333, 342, 350, 351, 352, 355, 356, 357, 358, 359, 367, 368, 369, 373, 374], "send": [2, 3, 8, 320, 373], "receiv": [2, 3, 33, 42, 89, 93, 109, 115, 168, 169, 177, 210, 299, 351, 355, 357, 361, 366, 369], "spawn": [2, 3, 4, 17, 21, 97, 106, 109, 115, 356, 367, 368], "check_env_spec": [2, 3, 93, 109, 153, 311, 348, 357, 367, 368, 369], "saniti": [2, 3, 7, 179, 357], "utmost": 2, "commonli": [2, 69, 76, 77, 374], "emploi": [2, 218], "languag": [2, 23, 42], "scarc": 2, "address": [2, 371], "subdomain": 2, "facilit": [2, 3, 7, 150, 151, 171, 173, 237, 238, 239, 350, 355, 358, 360, 369], "extern": [2, 3, 134, 137, 367, 374], "token": [2, 38, 39, 42, 45, 47, 63], "manner": [2, 93, 151, 171, 350, 355, 356, 357, 362, 366, 369, 371], "dm": [3, 355, 374], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 36, 37, 38, 40, 41, 43, 44, 47, 60, 73, 80, 81, 83, 85, 86, 89, 93, 97, 98, 99, 105, 106, 107, 109, 115, 116, 156, 165, 171, 172, 215, 237, 246, 262, 263, 265, 266, 268, 269, 270, 272, 276, 280, 281, 282, 283, 285, 320, 330, 339, 350, 351, 352, 355, 356, 358, 359, 360, 361, 367, 368, 369, 371, 374], "goal": [3, 4, 54, 55, 56, 57, 58, 59, 60, 61, 62, 164, 355, 356, 357, 358, 368, 369], "abl": [3, 102, 110, 111, 355, 357, 358, 360, 366, 367, 368, 369, 371, 373], "experi": [3, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 68, 69, 179, 315, 316, 317, 318, 319, 320, 349, 356, 357, 362, 363, 367, 368, 371], "box": [3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 89, 90, 93, 103, 104, 109, 110, 111, 113, 114, 115, 129, 132, 138, 144, 145, 147, 149, 154, 156, 159, 165, 168, 174, 175, 177, 311, 339, 342, 355, 356, 357, 358, 361, 366, 368, 370, 371, 373, 374], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 42, 85, 86, 89, 93, 105, 109, 115, 133, 136, 138, 145, 151, 165, 168, 169, 171, 173, 177, 188, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 212, 214, 215, 216, 219, 224, 225, 233, 236, 237, 238, 239, 241, 242, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 257, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 339, 342, 350, 351, 355, 356, 357, 358, 360, 361, 364, 366, 367, 368, 369, 370, 373, 374], "organis": [3, 61, 89, 93, 109, 115, 169, 356], "arbitrari": [3, 35, 40, 89, 93, 109, 115, 125, 350, 355, 356, 369, 371], "structur": [3, 7, 36, 37, 38, 40, 41, 42, 43, 44, 47, 80, 89, 93, 109, 115, 134, 137, 187, 215, 248, 293, 294, 295, 296, 297, 348, 351, 355, 357, 358, 359, 362, 367, 368, 369, 370], "attribut": [3, 4, 23, 27, 33, 36, 38, 41, 47, 60, 89, 92, 93, 94, 109, 115, 138, 151, 171, 177, 204, 208, 253, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 355, 358, 369], "live": [3, 12, 13, 14, 15, 16, 18, 19, 33, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 105, 109, 115, 138, 177], "actual": [3, 4, 7, 54, 56, 57, 58, 60, 61, 62, 89, 93, 109, 115, 174, 333, 351, 355, 357, 367, 368, 369], "retriev": [3, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 74, 89, 92, 93, 94, 109, 115, 130, 135, 138, 147, 186, 188, 189, 209, 212, 247, 249, 253, 256, 262, 263, 264, 266, 277, 280, 281, 283, 285, 291, 293, 294, 295, 296, 339, 346, 352, 356, 357, 360, 369, 374], "care": [3, 8, 89, 93, 109, 115, 168, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 313, 355, 357, 367, 368, 369, 371], "parametr": [3, 218, 253, 263, 269, 276, 283, 355, 357], "hardwar": 3, "observation_spec": [3, 89, 93, 105, 109, 115, 123, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 143, 144, 145, 147, 149, 151, 153, 155, 159, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 177, 188, 204, 208, 212, 334, 342, 355, 357, 361, 366, 367, 368, 369, 374], "compositespec": [3, 29, 30, 51, 89, 91, 93, 105, 109, 115, 123, 126, 134, 135, 136, 137, 139, 145, 153, 154, 160, 163, 165, 168, 177, 183, 187, 188, 212, 236, 240, 249, 255, 256, 348, 355, 357, 358, 367, 368, 369, 374], "pair": [3, 33, 36, 38, 41, 56, 87, 88, 89, 93, 109, 115, 156, 165, 204, 237, 249, 253, 278, 293, 294, 295, 296, 297, 350, 351, 355, 356, 357, 360, 361, 366, 369, 374], "state_spec": [3, 89, 93, 105, 109, 115, 123, 188, 212, 369, 374], "reward_spec": [3, 89, 93, 105, 109, 115, 123, 126, 127, 132, 133, 134, 135, 137, 153, 157, 158, 159, 161, 168, 170, 177, 188, 212, 357, 367, 368, 369, 374], "done_spec": [3, 89, 93, 109, 115, 134, 135, 137, 138, 153, 168, 177, 187, 367, 368, 369, 374], "flag": [3, 8, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 103, 104, 109, 115, 116, 117, 248, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 350, 367, 368, 369, 370], "input_spec": [3, 89, 93, 105, 109, 115, 126, 133, 134, 135, 136, 147, 149, 153, 154, 159, 160, 163, 164, 165, 168, 169, 170, 172, 177, 357, 369], "full_action_spec": [3, 89, 93, 109, 115, 188, 212, 357, 367, 368], "full_state_spec": [3, 89, 93, 109, 115, 188, 212, 357], "lock": [3, 26, 29, 36, 38, 41, 89, 93, 109, 115, 126, 165, 175, 369], "output_spec": [3, 89, 93, 109, 115, 126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 169, 177, 369], "full_observation_spec": [3, 89, 93, 109, 115, 188, 212], "full_reward_spec": [3, 89, 93, 109, 115, 126, 135, 153, 367, 368], "full_done_spec": [3, 89, 93, 109, 115, 126, 135, 153, 187, 367, 368], "importantli": [3, 249, 253], "action_s": 3, "help": [3, 4, 33, 89, 93, 109, 115, 138, 177, 262, 264, 277, 280, 282, 349, 351, 355, 356, 357, 358, 367, 368], "With": [3, 98, 99, 102, 164, 352, 356, 359, 361, 362, 363, 366, 367, 368, 371, 374], "necessarili": [3, 89, 93, 109, 115, 374], "present": [3, 33, 36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 75, 89, 92, 93, 109, 115, 139, 156, 160, 169, 177, 186, 187, 191, 192, 193, 194, 195, 201, 206, 218, 223, 247, 248, 252, 253, 254, 255, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 346, 352, 355, 364, 366, 367, 368, 371, 373], "0s": [3, 54, 60, 165, 358], "step_and_maybe_reset": [3, 89, 93, 109, 115, 359], "done_kei": [3, 22, 89, 93, 109, 115, 125, 129, 138, 156, 163, 177, 186, 367, 368], "assign": [3, 4, 13, 14, 16, 33, 36, 38, 41, 89, 93, 109, 115, 169, 177, 265, 266, 268, 283, 357, 360, 367, 368, 371], "_reset": [3, 89, 93, 105, 109, 115, 123, 125, 126, 129, 134, 137, 153, 187, 188, 212, 367], "data_": [3, 89, 93, 109, 115], "append": [3, 8, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 90, 93, 109, 115, 125, 132, 133, 156, 165, 169, 174, 203, 204, 207, 208, 242, 250, 355, 356, 357, 358, 367, 368, 369, 370, 371, 373], "set_se": [3, 13, 14, 15, 16, 20, 33, 85, 86, 89, 93, 98, 99, 105, 109, 115, 125, 147, 154, 159, 164, 166, 169, 177, 362, 364, 369, 373, 374], "seed": [3, 13, 14, 15, 16, 20, 61, 89, 93, 105, 109, 110, 111, 115, 116, 117, 123, 126, 134, 137, 153, 169, 179, 311, 330, 367], "determinist": [3, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 191, 200, 220, 227, 236, 245, 252, 253, 256, 263, 350, 355, 356, 358, 360, 361, 364, 367, 369, 374], "preced": [3, 33, 209, 358], "risk": [3, 152], "overlap": [3, 43, 80], "reproduc": [3, 129, 179, 355, 357, 368], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 38, 39, 42, 45, 47, 63, 65, 66, 67, 68, 82, 89, 93, 109, 115, 136, 157, 163, 164, 166, 230, 231, 232, 256, 263, 269, 270, 276, 278, 279, 283, 313, 327, 355, 356, 357, 358, 360, 367, 368, 371], "max_step": [3, 13, 80, 89, 93, 103, 104, 105, 109, 115, 116, 117, 163, 177, 311, 359, 360, 361, 363, 364, 367, 368, 373, 374], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 42, 85, 86, 89, 93, 105, 109, 115, 128, 145, 199, 204, 208, 212, 224, 225, 233, 234, 237, 238, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 263, 265, 269, 270, 272, 273, 274, 276, 278, 281, 283, 285, 291, 292, 293, 294, 295, 296, 326, 342, 348, 355, 357, 358, 361, 364, 366, 367, 368, 369, 370, 374], "trail": [3, 175], "treat": [3, 33, 360, 361], "figur": [3, 355, 357, 358, 368, 369, 374], "brief": [3, 357, 359, 361, 371], "deliveri": 3, "design": [3, 33, 35, 74, 79, 84, 89, 93, 103, 104, 109, 115, 129, 152, 169, 177, 241, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 355, 356, 357, 358, 359, 360, 361, 366, 367, 368, 369, 371, 374], "metaclass": 3, "everi": [3, 8, 26, 29, 33, 35, 78, 89, 93, 109, 115, 163, 164, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 330, 352, 355, 356, 357, 358, 359, 360, 367, 368, 369], "flank": [3, 358], "dual": 3, "strictli": [3, 8, 33, 89, 93, 109, 115, 169, 177, 283, 355, 357], "refer": [3, 7, 8, 9, 20, 23, 33, 42, 89, 92, 93, 94, 109, 115, 169, 175, 177, 188, 199, 200, 212, 213, 214, 215, 220, 221, 226, 227, 243, 262, 271, 272, 273, 274, 280, 283, 293, 298, 306, 354, 355, 357, 360, 361, 362, 363, 367, 368, 371, 374], "union": [3, 11, 13, 15, 16, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 68, 69, 89, 93, 109, 115, 123, 136, 138, 144, 147, 151, 152, 156, 158, 160, 171, 173, 175, 177, 186, 190, 197, 199, 213, 214, 215, 216, 217, 218, 222, 224, 225, 230, 231, 232, 233, 247, 252, 268, 270, 275, 281, 284, 306, 324, 326, 327, 335, 336, 339, 340, 342, 343, 344, 345, 346], "carri": [3, 20, 47, 89, 93, 109, 115, 165, 278, 356, 358, 367, 368, 369, 371], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 103, 104, 118, 355], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 54, 60, 69, 76, 77, 348], "adjac": [3, 22, 141, 247], "reli": [3, 202, 203, 206, 207, 262, 351, 355, 357, 360, 362, 369, 374], "junction": 3, "inittrack": [3, 204, 208, 247, 355, 358], "tutori": [3, 347, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 374], "scratch": [3, 8, 356, 369], "gym3": 3, "envpool": [3, 106, 107], "interfac": [3, 96, 108, 210, 217, 350, 355, 357, 363, 369, 371], "simultan": [3, 19, 106, 107, 109, 115, 369], "advantag": [3, 8, 201, 262, 264, 277, 280, 282, 293, 294, 295, 296, 297, 298, 300, 302, 304, 306, 307, 309, 351, 352, 355, 356, 357, 358, 368, 369, 374], "scale": [3, 4, 23, 56, 89, 93, 109, 115, 129, 145, 147, 158, 164, 167, 200, 205, 219, 226, 227, 231, 232, 237, 238, 239, 249, 253, 255, 262, 263, 276, 280, 281, 282, 283, 328, 334, 339, 346, 350, 355, 356, 357, 358, 360, 368, 373], "varieti": 3, "inherit": [3, 89, 93, 109, 115, 211, 278, 352, 357, 367, 368], "Of": [3, 7, 349, 369, 374], "cours": [3, 4, 349, 369, 374], "from_pixel": [3, 85, 86, 87, 88, 92, 94, 95, 98, 99, 112, 129, 155, 311, 313, 339, 355, 356, 358, 359, 363, 364, 370, 371, 373, 374], "81": [3, 355, 356, 369], "simpli": [3, 6, 36, 38, 41, 47, 79, 80, 84, 139, 160, 174, 278, 350, 351, 355, 357, 361, 367, 368, 374], "d": [3, 37, 40, 43, 44, 57, 59, 61, 62, 63, 68, 69, 202, 206, 249, 253, 373], "privat": [3, 89, 93, 109, 115, 174, 369, 374], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 31, 32, 35, 54, 77, 80, 264, 277, 280, 321, 323, 326, 330, 333, 334, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 36, 38, 41, 42, 71, 74, 147, 158, 205, 217, 226, 231, 232, 291, 350, 360, 361, 367, 369, 371], "inner": [3, 89, 93, 109, 115, 136, 352, 356, 357, 368, 374], "logic": [3, 367], "nevertheless": [3, 357, 359, 371], "kept": [3, 22, 75, 77, 136, 160, 168, 179, 186, 205, 231, 232, 361, 367], "mind": [3, 54, 60, 69, 76, 77, 89, 93, 109, 115, 367, 368], "desig": 3, "wherev": 3, "expos": [3, 112, 134, 137, 254, 356], "modif": [3, 5, 26, 29, 33, 89, 93, 109, 115, 141, 177, 187, 278, 357, 369], "lost": [3, 8, 174], "eras": [3, 69, 76, 89, 93, 109, 115, 169], "intern": [3, 353], "face": [3, 5, 8, 9, 359, 374], "NOT": [3, 152], "outsid": [3, 15, 363, 367, 368, 369], "right": [3, 6, 7, 22, 42, 76, 209, 356, 357, 368, 369, 374], "preliminari": 3, "warranti": 3, "affect": [3, 8, 33, 89, 93, 109, 115, 168, 169, 177, 179, 293, 294, 295, 296, 367], "assumpt": [3, 369, 371], "preclud": 3, "presenc": [3, 361], "annihil": 3, "reason": [3, 4, 8, 33, 60, 89, 93, 109, 110, 111, 115, 151, 171, 177, 208, 351, 355, 356, 357, 361, 362, 367, 369, 371], "advanc": [3, 20, 37, 40, 43, 44, 359, 362, 371], "explicitli": [3, 4, 125, 356, 358, 362, 367, 368, 371], "place": [3, 23, 26, 27, 29, 33, 36, 38, 41, 65, 66, 71, 74, 82, 89, 90, 93, 109, 115, 116, 117, 125, 133, 138, 151, 165, 168, 169, 171, 173, 174, 175, 177, 187, 241, 247, 252, 327, 332, 333, 356, 357, 360, 363, 367, 368, 369, 371], "superse": 3, "pettingzoowrapp": [3, 348], "group": [3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 54, 89, 93, 102, 103, 104, 109, 110, 111, 115, 116, 117, 118, 350, 356, 360, 362, 368, 371], "associ": [3, 33, 36, 38, 41, 89, 93, 109, 115, 177, 226, 346, 355, 371], "environemtn": 3, "__not__": 3, "constrain": [3, 145, 204, 208, 280], "li": 3, "fact": [3, 7, 8, 355, 357, 359, 367, 368, 369, 370, 371, 374], "predict": [3, 33, 42, 198, 200, 211, 212, 241, 258, 262, 264, 268, 271, 273, 274, 277, 280, 282, 292, 350, 355, 356, 361], "know": [3, 4, 9, 37, 40, 43, 44, 240, 281, 326, 355, 356, 357, 358, 359, 360, 361, 362, 367, 368, 371], "meaning": 3, "perfectli": [3, 352, 355, 369], "meaningless": 3, "val": [3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 361, 373], "agent0": 3, "agent1": 3, "overrid": [3, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 40, 46, 48, 49, 54, 89, 93, 109, 115, 125, 346, 350], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 125, 126, 129, 130, 134, 136, 137, 138, 139, 141, 145, 146, 147, 149, 151, 153, 154, 156, 158, 159, 160, 163, 165, 167, 169, 170, 171, 173, 175, 177, 179, 186, 187, 188, 189, 190, 192, 193, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 218, 231, 232, 236, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 320, 323, 324, 326, 327, 328, 330, 339, 346, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "500": [3, 355, 356, 369, 373], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 54, 57, 109, 115], "bottleneck": [3, 8, 69, 76, 77], "great": [3, 7, 8, 367, 373], "speedup": [3, 8, 367, 374], "precis": [3, 134, 137, 186, 203, 207, 355, 357], "misspecifi": 3, "caus": [3, 7, 8, 65, 66, 82, 89, 93, 97, 109, 115, 152, 374], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 60, 89, 93, 109, 115, 118, 129, 140, 146, 156, 164, 165, 166, 169, 177, 179, 240, 244, 245, 248, 283, 355, 357, 367, 368, 371, 374], "mismatch": [3, 356], "mostli": [3, 16, 313, 351, 363, 371, 374], "subprocess": [3, 13, 14, 16, 90, 109, 115], "multithreadedenv": [3, 348], "underneath": 3, "higher": [3, 4, 132, 256, 355, 356, 357, 367, 371, 374], "flexibl": [3, 9, 106, 286, 351, 352, 355, 371, 374], "cover": [3, 349, 357, 359, 362, 363, 369, 373], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 62, 63, 71, 89, 93, 102, 105, 108, 109, 110, 111, 115, 126, 133, 134, 135, 138, 139, 145, 151, 153, 154, 160, 163, 165, 168, 169, 171, 173, 175, 177, 181, 185, 189, 190, 210, 215, 216, 218, 224, 233, 240, 242, 249, 252, 253, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 291, 299, 311, 339, 344, 348, 350, 355, 356, 357, 362, 367, 368, 369, 371, 374], "atari": [3, 4, 54, 129, 313, 363, 374], "classic": [3, 105, 111, 356], "benchmark_batched_env": 3, "seamlessli": [3, 369], "infrastructur": [3, 367, 368], "act": [3, 4, 76, 77, 110, 111, 169, 198, 216, 263, 265, 276, 281, 283, 285, 358, 367, 368, 371], "world": [3, 5, 105, 258, 273, 363, 367, 368, 369, 374], "paradigm": [3, 16, 368], "decpodp": 3, "game": [3, 4, 5, 54, 103, 104, 313, 363], "thank": [3, 355, 359], "carrier": [3, 357, 358, 359, 371], "particular": [3, 33, 47, 56, 57, 89, 93, 109, 115, 169, 177, 351, 352, 356, 358, 359, 366, 368, 371], "thu": [3, 277, 368], "let": [3, 6, 7, 33, 37, 40, 43, 44, 45, 89, 93, 109, 110, 111, 115, 129, 177, 204, 208, 215, 216, 242, 326, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "vma": [3, 116, 117, 311, 367, 368], "robot": [3, 5, 7, 60, 151, 171, 173, 368], "vmasenv": [3, 311, 348, 367, 368], "balanc": [3, 87, 88, 355, 356], "num_env": [3, 20, 92, 96, 107, 116, 117, 311, 367, 368], "n_agent": [3, 116, 117, 215, 216, 224, 233, 291, 311, 367, 368], "ground_rew": 3, "pos_rew": [3, 368], "style": [3, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62], "relat": [3, 4, 10, 37, 109, 141, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 356, 364, 369], "vari": [3, 92, 94, 95, 110, 111, 112, 116, 152, 368], "creation": [3, 109, 115, 374], "info_spec": [3, 109], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 35, 85, 86, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 123, 153, 187, 266, 269, 270, 291, 348, 367, 368, 374], "simpl": [3, 9, 33, 35, 89, 93, 109, 115, 177, 192, 247, 253, 266, 268, 278, 282, 293, 350, 351, 355, 356, 357, 359, 360, 361, 367, 368, 371, 374], "prefix": [3, 22, 33, 36, 38, 41, 47, 89, 93, 109, 115, 169, 177, 278, 283, 312, 358, 361, 374], "exactli": [3, 33, 89, 93, 95, 109, 115, 169, 177, 202, 206, 283, 355, 358, 362, 367, 368], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 89, 93, 109, 115, 123, 136, 178, 186, 188, 211, 212, 240, 244, 245, 247, 248, 367, 368], "reward_kei": [3, 89, 93, 109, 115, 177, 186, 188, 212, 324, 328, 367, 368], "set_kei": [3, 138, 262, 264, 266, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 291, 297, 355, 367, 368], "awai": [3, 357, 359, 367, 368], "eas": [3, 367, 368], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 31, 32, 34, 35, 46, 48, 49, 89, 93, 109, 115, 163, 253], "full": [3, 89, 93, 109, 115, 204, 208, 243, 321, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "autoresettransform": 3, "copi": [3, 11, 17, 18, 19, 20, 33, 36, 38, 41, 42, 47, 60, 89, 93, 109, 115, 125, 154, 164, 169, 177, 186, 204, 208, 241, 278, 283, 311, 351, 355, 356, 358, 359, 367, 371], "invalid": [3, 33, 80, 89, 93, 109, 115, 118, 177, 213, 214], "nan": [3, 125, 174], "auto_reset": [3, 89, 93, 109, 115, 125, 177, 369], "auto_reset_replac": [3, 125], "placehold": [3, 95, 138, 169], "set_gym_backend": [3, 89, 92, 93, 109, 115, 119, 125, 348, 359], "manual_se": [3, 37, 40, 43, 44, 57, 61, 62, 76, 77, 85, 86, 89, 93, 109, 115, 123, 125, 136, 147, 156, 159, 164, 166, 177, 213, 214, 222, 236, 243, 244, 245, 248, 256, 262, 263, 265, 269, 276, 283, 362, 364, 367, 368, 369, 373, 374], "autoresettinggymenv": [3, 125], "_step": [3, 89, 93, 109, 115, 123, 125, 126, 134, 137, 141, 153, 154], "self": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 29, 33, 36, 38, 41, 89, 93, 105, 109, 115, 123, 125, 126, 133, 134, 137, 151, 153, 165, 168, 169, 171, 173, 177, 188, 199, 212, 224, 233, 240, 244, 249, 252, 257, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 352, 355, 369, 373, 374], "super": [3, 105, 123, 125, 126, 134, 137, 153, 188, 199, 212, 257, 263, 265, 270, 276, 281, 283, 285, 355, 369, 373], "td_reset": [3, 125], "exclud": [3, 8, 56, 61, 89, 93, 109, 115, 125, 129, 139, 186, 224, 367, 368, 371], "r": [3, 4, 33, 123, 125, 132, 147, 161, 203, 253, 261, 292, 311, 350, 356, 369, 374], "break_when_any_don": [3, 89, 93, 109, 115, 125, 177, 247, 368], "3633e": [3, 125], "02": [3, 89, 93, 109, 115, 125, 354, 355, 356, 357, 364, 367, 368, 369, 370, 372], "4877e": [3, 125], "01": [3, 125, 147, 248, 259, 264, 277, 280, 354, 355, 356, 358, 368, 369, 370, 372], "2849e": [3, 125], "7584e": [3, 125], "6609e": [3, 125], "6166e": [3, 125], "8366e": [3, 125], "2761e": [3, 125], "5685e": [3, 125], "4102e": [3, 125], "8111e": [3, 125], "9959e": [3, 125], "0865e": [3, 125], "5644e": [3, 125], "2119e": [3, 125], "2542e": [3, 125], "03": [3, 89, 93, 109, 115, 125, 147, 354, 355, 356, 367, 368, 369, 370, 372], "9952e": [3, 125], "4059e": [3, 125], "2094e": [3, 125], "9009e": [3, 125], "5140e": [3, 125], "3554e": [3, 125], "2920e": [3, 125], "7893e": [3, 125], "6429e": [3, 125], "3057e": [3, 125], "2867e": [3, 125], "6963e": [3, 125], "3818e": [3, 125], "2576e": [3, 125], "2679e": [3, 125], "1640e": [3, 125], "00": [3, 85, 86, 125, 354, 355, 356, 357, 358, 367, 368, 369, 370, 372], "6972e": [3, 125], "0212e": [3, 125], "5959e": [3, 125], "4637e": [3, 125], "3121e": [3, 125], "2168e": [3, 125], "5232e": [3, 125], "7704e": [3, 125], "7457e": [3, 125], "4127e": [3, 125], "1064e": [3, 125], "0854e": [3, 125], "5712e": [3, 125], "2189e": [3, 125], "5235e": [3, 125], "8289e": [3, 125], "0009e": [3, 125], "0257e": [3, 125], "8893e": [3, 125], "5872e": [3, 125], "9405e": [3, 125], "7766e": [3, 125], "0403e": [3, 125], "0626e": [3, 125], "2959e": [3, 125], "7263e": [3, 125], "2775e": [3, 125], "9564e": [3, 125], "0411e": [3, 125], "6769e": [3, 125], "6354e": [3, 125], "8698e": [3, 125], "1765e": [3, 125], "6292e": [3, 125], "5375e": [3, 125], "1820e": [3, 125], "7023e": [3, 125], "5836e": [3, 125], "9016e": [3, 125], "4826e": [3, 125], "6191e": [3, 125], "6387e": [3, 125], "8667e": [3, 125], "2056e": [3, 125], "1147e": [3, 125], "5991e": [3, 125], "0278e": [3, 125], "5219e": [3, 125], "3067e": [3, 125], "6617e": [3, 125], "3322e": [3, 125], "2629e": [3, 125], "4599e": [3, 125], "7298e": [3, 125], "5848e": [3, 125], "0148e": [3, 125], "5745e": [3, 125], "6982e": [3, 125], "7877e": [3, 125], "3527e": [3, 125], "7285e": [3, 125], "6668e": [3, 125], "0583e": [3, 125], "6956e": [3, 125], "3962e": [3, 125], "9845e": [3, 125], "5015e": [3, 125], "5903e": [3, 125], "9993e": [3, 125], "9418e": [3, 125], "0196e": [3, 125], "6557e": [3, 125], "2109e": [3, 125], "8997e": [3, 125], "1507e": [3, 125], "7363e": [3, 125], "0310e": [3, 125], "9574e": [3, 125], "8980e": [3, 125], "0090e": [3, 125], "torchvis": [3, 151, 173, 315, 367, 373, 374], "base_env": [3, 86, 89, 93, 94, 99, 109, 115, 123, 126, 132, 134, 136, 137, 145, 149, 153, 155, 161, 163, 165, 166, 169, 177, 313, 355, 356, 357, 367, 370, 373, 374], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 90, 93, 105, 109, 115, 122, 124, 126, 133, 138, 165, 169, 177, 189, 190, 210, 261, 311, 335, 336, 344, 345, 346, 356, 371], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 29, 30, 33, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 80, 89, 91, 93, 109, 115, 123, 125, 126, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 144, 145, 150, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 169, 174, 175, 177, 186, 187, 188, 204, 208, 211, 212, 240, 241, 243, 244, 247, 248, 251, 252, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 296, 297, 330, 355, 367, 369], "appar": [3, 323], "bring": [3, 357, 359, 374], "signific": [3, 5, 8, 357, 374], "kind": [3, 40, 46, 186, 361, 367, 371], "consult": 3, "interest": [3, 249, 253, 350, 356, 357, 359, 368, 369, 374], "resize_par": 3, "easi": [3, 5, 54, 59, 87, 88, 89, 93, 98, 99, 109, 115, 240, 244, 245, 248, 350, 351, 355, 356, 357, 368, 370, 371, 374], "graph": [3, 4, 8, 85, 86, 98, 99, 289, 290, 355, 369], "revers": [3, 206], "order": [3, 15, 33, 35, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 75, 77, 89, 93, 109, 115, 130, 134, 137, 149, 169, 177, 236, 242, 252, 254, 255, 257, 262, 263, 265, 269, 270, 276, 280, 281, 282, 283, 285, 356, 367, 368], "chain": [3, 36, 37, 38, 40, 41, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 133, 136, 189, 190, 255, 374], "invers": [3, 4, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 129, 134, 137, 139, 147, 156, 177, 260, 269, 276, 369], "in_keys_inv": [3, 120, 132, 134, 135, 137, 147, 148, 149, 153, 154, 156, 161, 168, 355, 366, 369, 374], "append_transform": [3, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 89, 93, 109, 115, 120, 128, 151, 165, 169, 171, 311, 355, 358, 367, 369, 371, 373, 374], "doubletofloat": [3, 339, 355, 357, 366], "float32": [3, 13, 14, 15, 26, 37, 42, 43, 44, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 82, 85, 86, 89, 92, 93, 94, 98, 99, 105, 108, 109, 113, 114, 115, 116, 117, 126, 134, 137, 138, 139, 147, 149, 153, 154, 156, 160, 163, 165, 167, 183, 186, 188, 198, 199, 204, 208, 212, 224, 225, 233, 236, 237, 238, 239, 241, 242, 247, 248, 249, 250, 251, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 291, 339, 350, 357, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 374], "float64": [3, 33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 87, 88, 89, 93, 103, 104, 109, 115, 133, 134, 137, 151, 165, 168, 169, 171, 173, 177, 252, 366], "regist": [3, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 57, 89, 92, 93, 94, 109, 115, 134, 137, 138, 159, 169, 177, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 311, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 352, 355, 357, 359, 371], "manipul": [3, 4, 8, 87, 88, 151, 171], "third_transform": 3, "unexpect": [3, 33, 89, 93, 109, 115, 177, 374], "behviour": 3, "fortun": [3, 358, 359, 360, 363], "alreadi": [3, 8, 11, 33, 36, 38, 41, 47, 54, 89, 93, 109, 115, 165, 177, 187, 253, 293, 294, 295, 296, 355, 357, 363, 367, 368], "chang": [3, 5, 7, 33, 37, 40, 43, 44, 54, 65, 66, 67, 69, 75, 76, 78, 79, 82, 89, 93, 109, 115, 126, 133, 134, 135, 137, 139, 145, 153, 154, 160, 163, 168, 169, 175, 177, 206, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 351, 355, 358, 367, 368, 369, 370, 371, 374], "catfram": [3, 247, 356], "hold": [3, 289, 290, 369, 371], "notic": [3, 80, 129, 357, 364, 369], "parenthood": 3, "henc": [3, 37, 152, 187, 215, 350, 355, 357, 367, 368, 369], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 109, 115, 311, 369], "discret": [3, 24, 28, 31, 32, 35, 49, 89, 93, 103, 104, 109, 110, 111, 115, 116, 117, 136, 222, 225, 268, 269, 270, 271, 350, 356, 360, 367, 368, 369, 374], "might": [3, 36, 38, 39, 41, 317, 349, 355, 359, 374], "action_mask": [3, 98, 99, 110, 111, 113, 114, 123], "unavail": [3, 110, 111], "probabl": [3, 4, 8, 42, 71, 74, 197, 199, 202, 204, 206, 208, 210, 213, 214, 222, 232, 244, 249, 253, 350, 356, 360, 373], "categor": [3, 28, 32, 35, 85, 86, 92, 94, 95, 98, 99, 103, 104, 106, 107, 110, 111, 112, 116, 117, 123, 138, 199, 222, 225, 242, 243, 249, 250, 251, 266, 269, 270, 291, 358], "probabilistictensordictmodul": [3, 145, 253, 254, 373], "tensordictsequenti": [3, 204, 208, 242, 244, 247, 254, 350, 355, 356, 358, 360, 364, 366, 367, 370, 373], "maskedcategor": [3, 214, 348], "linear": [3, 13, 14, 15, 16, 20, 33, 85, 86, 89, 93, 105, 109, 115, 133, 145, 151, 165, 168, 169, 171, 173, 177, 188, 189, 190, 192, 193, 194, 195, 199, 201, 210, 212, 215, 216, 217, 218, 219, 225, 226, 227, 236, 237, 238, 239, 244, 245, 246, 247, 248, 249, 250, 252, 255, 257, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 342, 350, 356, 366, 370, 373], "in_feat": 3, "out_feat": 3, "logit": [3, 38, 42, 198, 213, 214, 222, 243, 249, 269, 270, 350], "dist": [3, 10, 213, 214, 222, 360], "distribution_class": [3, 145, 237, 238, 239, 241, 249, 253, 255, 262, 263, 269, 270, 276, 280, 281, 282, 283, 350, 355, 357, 360, 367, 368, 373], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 33, 42, 58, 85, 86, 89, 93, 94, 98, 99, 104, 107, 109, 110, 111, 115, 117, 177, 179, 204, 208, 234, 237, 238, 239, 240, 245, 247, 248, 250, 258, 291, 350, 355, 356, 357, 358, 361, 364, 367, 368, 374], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 123, 152, 177], "enviorn": [3, 103, 110, 111, 116, 117], "itself": [3, 33, 89, 93, 109, 115, 119, 125, 177, 278, 357, 359], "ey": 3, "report": [3, 85, 86, 98, 99, 363], "foremost": 3, "callback": [3, 89, 93, 109, 115, 368], "ad": [3, 4, 15, 22, 33, 37, 40, 43, 44, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 89, 93, 109, 115, 159, 169, 177, 217, 218, 248, 262, 264, 266, 271, 277, 280, 283, 291, 356, 358, 360, 367, 371, 374], "track": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 44, 75, 159, 175, 177, 247, 248, 318, 323, 356, 358, 359, 362, 368, 369, 371], "tensordictrecord": [3, 348], "render": [3, 8, 116, 311, 313, 326, 355, 356, 357, 359, 363], "videorecord": [3, 311, 348, 357, 363, 364, 367], "csvlogger": [3, 311, 313, 348, 356, 363, 364, 367], "wandblogg": [3, 348, 363], "tensorboardlogg": [3, 342, 348, 363], "tag": [3, 7, 311, 313, 315, 318, 346, 363, 364, 367], "mp4": [3, 311, 313, 315, 364, 367], "video_format": [3, 311, 313, 315, 364, 367], "detect": [3, 62], "whc": 3, "cwh": 3, "exp": [3, 219, 261], "al": [3, 23, 92, 94, 138, 149, 188, 374], "pong": [3, 54, 107, 149, 374], "v5": [3, 92, 94, 107, 138, 149, 374], "cach": [3, 36, 38, 47, 54, 56, 57, 58, 60, 61, 62, 63, 69, 76, 89, 93, 109, 115, 125, 134, 137, 151, 169, 173, 186, 322, 370], "grow": 3, "until": [3, 7, 20, 166, 168, 177, 357, 358, 364, 367, 368], "dumpi": 3, "tediou": [3, 359], "expens": [3, 69, 76, 77, 311, 371], "workspac": [3, 89, 93, 109, 115], "pixelrendertransform": [3, 348, 367], "stream": [3, 60], "alik": [3, 311], "envcreat": [3, 15, 21, 109, 115, 311, 342, 343, 346, 348, 355, 356, 373, 374], "render_mod": [3, 311, 369], "rgb_arrai": [3, 311, 367, 368, 369], "uncom": [3, 363], "line": [3, 7, 33, 54, 89, 93, 109, 115, 177, 356, 363, 367, 368, 374], "comment": [3, 352, 356, 373], "pixels_record": [3, 311], "close": [3, 15, 93, 106, 145, 262, 264, 277, 280, 311, 355, 356, 359, 366, 367, 369, 373], "mission": 3, "irrespect": [3, 252, 253], "dmcontrol": [3, 89, 93, 109, 115], "jumanji": [3, 89, 93, 98, 99, 109, 115], "special": [3, 348, 350, 355, 358, 374], "framework": [3, 4, 9, 21, 85, 86, 89, 93, 98, 99, 105, 109, 115, 202, 373, 374], "Its": [3, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 175, 177, 252, 297], "success": [3, 54, 55, 56, 57, 58, 59, 60, 61, 62, 129, 168, 244, 356, 362, 364, 369, 371, 373], "foundat": [3, 5, 110, 111, 357, 368], "inspir": [3, 369], "gone": [3, 4, 5, 247], "hard": [3, 7, 80, 87, 88, 109, 275, 356, 374], "prefer": [3, 13, 14, 16, 19, 22, 23, 37, 40, 43, 44, 152, 160, 280, 327, 350, 357, 367, 368, 371], "maintain": [3, 5, 9, 27, 369], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 356, 357, 358, 362, 367, 368, 369, 371, 374], "decor": [3, 8, 11, 122, 278, 293, 294, 295, 296, 373], "relev": [3, 42, 293, 294, 295, 296, 297, 320, 369], "gym_backend": [3, 122, 348], "env1": [3, 366], "venv": 3, "python3": [3, 6, 7, 10, 361, 374], "site": [3, 6, 7, 61, 122, 361, 374], "env2": [3, 366], "_env": [3, 6, 92, 374], "classic_control": 3, "pendulumenv": [3, 369], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 101, 119], "handi": [3, 89, 93, 109, 115, 363], "side": [3, 4, 374], "v0": [3, 13, 14, 89, 93, 95, 98, 99, 100, 101, 109, 115, 133, 169, 175, 342, 359, 361, 362, 363], "26": [3, 89, 93, 109, 115, 354, 356, 367, 369, 370, 372], "fun": [3, 11, 122, 357, 367, 368], "reveal": 4, "bug": [4, 373], "curv": 4, "exploit": [4, 360], "video": [4, 9, 313, 315, 326, 346, 348, 364, 367, 368], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 23, 145, 367, 368, 370], "coeffici": [4, 23, 27, 42, 145, 368], "bonu": [4, 262, 264, 277, 280], "beta": [4, 37, 43, 68, 69, 269, 276, 277, 355, 356, 371, 373], "reduc": [4, 6, 28, 80, 164, 356, 367], "downstream": [4, 355], "formul": [4, 367, 368], "ob": [4, 8, 22, 26, 29, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 71, 76, 77, 80, 89, 93, 109, 115, 123, 125, 134, 135, 137, 147, 161, 167, 183, 186, 192, 193, 194, 195, 215, 216, 250, 257, 263, 265, 270, 276, 281, 283, 285, 293, 294, 295, 296, 356, 366, 367, 369, 371, 373, 374], "rate": [4, 54, 175, 292, 356, 357, 367, 368], "gradient": [4, 33, 89, 93, 109, 115, 169, 177, 205, 214, 218, 222, 231, 232, 262, 264, 265, 269, 270, 276, 277, 278, 280, 281, 282, 283, 285, 292, 293, 294, 295, 296, 330, 355, 357, 367, 368, 369], "easier": [4, 350, 355], "local": [4, 7, 10, 15, 20, 33, 69, 76, 89, 93, 109, 115, 169, 177, 215, 216, 224, 233, 291, 318, 320, 363, 364, 367, 368], "optima": 4, "sens": [4, 362, 369], "product": [4, 9, 202, 203, 206, 207, 344, 345], "sum": [4, 20, 32, 35, 80, 85, 86, 87, 88, 92, 94, 95, 98, 99, 106, 107, 112, 128, 159, 213, 214, 233, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 279, 280, 281, 282, 283, 285, 292, 299, 351, 355, 356, 357, 358, 361, 364, 367, 368, 369, 374], "stat": [4, 147, 334, 346, 356, 357], "w": [4, 71, 129, 131, 155, 167, 202, 248, 313, 356, 358, 371], "yield": [4, 15, 20, 33, 89, 93, 109, 115, 177, 278, 355, 361], "insight": 4, "auxiliari": [4, 361], "credit": 4, "futur": [4, 33, 36, 38, 41, 89, 93, 109, 115, 151, 169, 173, 177, 210, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 349, 361, 373], "past": [4, 247, 356, 371], "spars": [4, 358], "intermedi": [4, 13, 14, 128, 204, 208, 243, 355, 370], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 355], "discov": 4, "score": [4, 42], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 373], "select": [4, 37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 103, 104, 110, 111, 116, 117, 123, 125, 126, 128, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 150, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 171, 172, 174, 175, 177, 178, 188, 204, 208, 242, 250, 329, 355, 359, 371], "fall": [4, 56], "explicit": [4, 11, 47, 71, 209, 371], "mechan": [4, 33, 89, 93, 109, 115, 169, 177, 356, 361, 369], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 23, 89, 93, 109, 115, 206, 269, 276, 357, 368], "addition": 4, "timestep": [4, 42, 56, 156, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 367, 368], "realli": 4, "larg": [4, 28, 36, 38, 41, 134, 137, 171, 262, 264, 277, 280, 282, 356, 357, 367, 368, 371], "huge": [4, 216, 358], "std": [4, 147, 175, 219, 223, 240, 355, 374], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 354, 358, 359, 361, 362, 363, 364, 365, 366, 370, 371, 372], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 33, 36, 38, 41, 42, 80, 89, 93, 109, 115, 128, 147, 151, 165, 168, 169, 171, 176, 177, 188, 202, 203, 206, 207, 212, 217, 218, 240, 244, 245, 247, 248, 262, 263, 265, 266, 268, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 339, 346, 355, 356, 358, 359, 360, 362, 367, 369, 374], "estim": [4, 54, 69, 76, 77, 138, 145, 192, 237, 238, 239, 262, 263, 264, 265, 266, 268, 270, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "unseen": 4, "extrins": 4, "wrong": [4, 69, 76], "bonus": 4, "denser": 4, "prior": [4, 227, 273, 368], "freshli": 4, "drop": [4, 75, 77, 186], "meant": [4, 33, 105], "encourag": [4, 109, 355, 356, 371], "measur": [4, 65, 66, 82, 85, 86, 98, 99, 357, 362], "novelti": 4, "revisit": 4, "previous": [4, 357, 374], "diminish": 4, "decreas": [4, 23, 360], "ideal": [4, 147, 369], "down": [4, 13, 14, 15, 16, 358, 359], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 29, 36, 38, 41, 356, 357, 358, 361, 362, 367, 368, 369, 373, 374], "distil": 4, "nois": [4, 176, 218, 235, 248, 281, 285, 326, 346, 355, 367], "exploratori": [4, 262, 264, 277, 280], "misalign": 4, "trade": [4, 360], "unavoid": 4, "divers": [4, 109, 115], "bootstrap": [4, 271, 294, 300, 301, 355, 358], "noisi": [4, 217, 218, 235, 350], "unstabl": [4, 205, 231, 232], "inher": 4, "stochast": [4, 145, 200, 218, 220, 227, 263, 267, 269, 270, 276, 279, 281, 283, 350, 357, 360, 368], "enemi": 4, "pomdp": [4, 371], "loos": [4, 350, 356, 357], "nonexist": 4, "architectur": [4, 196, 361, 367, 368], "sequenc": [4, 13, 14, 15, 16, 23, 26, 29, 31, 32, 37, 39, 40, 42, 45, 47, 60, 63, 64, 71, 72, 74, 79, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 120, 127, 128, 129, 130, 131, 134, 136, 137, 141, 143, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 164, 166, 167, 168, 175, 189, 190, 197, 199, 202, 206, 210, 213, 214, 215, 216, 222, 225, 229, 241, 254, 255, 267, 312, 313, 325, 326, 327, 329, 330, 339, 350, 355, 357, 358, 366, 367, 368, 374], "lstm": [4, 207, 208, 209, 219], "rel": [4, 71, 165, 197, 230, 355, 356, 367, 368, 371], "tend": 4, "stabl": [4, 9, 10, 108], "compens": 4, "descent": [4, 218], "minimum": [4, 109, 115, 157, 200, 219, 230, 231, 232, 256, 259, 261, 263, 270, 278, 279, 283, 321, 355, 357, 364, 367, 368], "manual": [4, 17, 19, 20, 93, 355, 358, 371], "deviat": [4, 147, 175, 188, 200, 212, 217, 218, 223, 240, 280, 285, 355, 360, 368], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 76, 125, 202, 203, 206, 207, 359, 360, 361, 362, 363, 364], "stabil": [4, 142, 262, 264, 277, 280, 282], "stage": [4, 355, 369], "never": [4, 13, 14, 16, 362], "prevent": [4, 26, 29, 205, 231, 232, 262, 264, 277, 280, 282, 328, 371], "entir": [4, 60, 89, 93, 109, 115, 215, 357, 359, 369, 371], "submit": [4, 126, 349, 373], "system": [4, 5, 357, 367, 368, 369], "adequ": [4, 179, 357, 367, 368], "infeas": 4, "allevi": [4, 350], "prune": 4, "fire": [4, 33, 89, 93, 109, 115, 177], "illeg": 4, "move": [4, 33, 62, 89, 93, 109, 115, 133, 135, 151, 165, 168, 169, 171, 173, 175, 177, 186, 210, 252, 328, 355, 356, 358, 359, 373, 374], "chess": 4, "combin": [4, 168, 356, 363, 371], "grasp": 4, "top": [4, 80, 85, 86, 98, 99, 188, 212, 360], "wherein": 4, "cumul": [4, 159, 164, 188, 299, 357], "q": [4, 9, 89, 93, 109, 115, 192, 193, 194, 195, 198, 199, 201, 224, 225, 233, 239, 243, 250, 251, 263, 265, 266, 268, 269, 270, 271, 275, 276, 281, 283, 285, 291, 339, 348, 355, 361], "flow": [4, 355, 357, 367, 368, 369, 371], "reparameter": [4, 197, 214, 222], "soft": [4, 275, 283, 284, 367], "critic": [4, 8, 237, 246, 262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 355, 361], "clip": [4, 42, 132, 157, 262, 264, 277, 280, 282, 285, 330, 357, 368, 369], "oppos": [4, 47], "incorrect": 4, "thought": [4, 89, 93, 109, 115], "bound": [4, 20, 25, 26, 33, 89, 93, 109, 115, 132, 146, 175, 177, 226, 227, 236, 242, 243, 248, 249, 250, 251, 252, 253, 256, 285, 350, 355, 356, 357, 367, 374], "region": 4, "squash": [4, 358, 373], "tanh": [4, 189, 190, 202, 203, 205, 206, 207, 210, 216, 230, 231, 232, 256, 357, 360, 367, 368, 369, 370, 373], "correct": [4, 36, 38, 41, 89, 93, 109, 115, 145, 333, 357, 358], "prob": [4, 213, 214, 222, 357, 368], "rememb": [4, 367], "remap": 4, "origin": [4, 8, 36, 38, 41, 42, 97, 135, 136, 145, 151, 169, 173, 177, 202, 249, 252, 253, 275, 278, 280, 339, 355, 366, 369, 374], "histor": 5, "ceas": 5, "farama": [5, 58, 100, 101, 110, 111, 357, 369], "bc": [5, 373], "against": [5, 7, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 89, 93, 109, 115, 177, 179, 236, 242, 243, 249, 250, 251, 252, 253, 357, 367, 368], "best": [5, 9, 97, 204, 208, 367, 368, 371, 373], "gymwrapp": [5, 89, 93, 109, 115, 139, 160, 163, 174, 348, 357, 373], "feel": [5, 349, 364, 373], "free": [5, 7, 134, 137, 262, 273, 280, 352, 357, 364, 368, 373], "gladli": 5, "prepar": [6, 57, 357], "conda": [6, 7, 349], "cmake": 6, "activ": [6, 7, 9, 189, 190, 196, 200, 210, 215, 216, 264, 277, 280, 350, 369, 373], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 57, 349], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 95], "y": [6, 7, 40, 108, 201, 209, 215, 234, 355, 368, 371], "facebookresearch": [6, 57, 95], "subdirectori": 6, "verbos": [6, 364], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 46, 48, 49, 51, 89, 93, 109, 115, 153, 162, 177, 278, 361, 367, 368, 373, 374], "command": [6, 7, 10, 357, 367, 368, 369, 374], "readm": [6, 7, 116], "md": [6, 7], "habitatenv": [6, 348], "_has_habitat": 6, "available_env": [6, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 103, 104, 108, 109, 112, 113, 114, 115, 116, 117, 374], "startswith": [6, 351, 355, 361], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 90, 278, 355], "env_nam": [6, 85, 87, 89, 92, 93, 95, 98, 100, 106, 109, 112, 115, 355, 357, 374], "llvmlite": 6, "config": [6, 7, 151, 173, 191, 196, 223, 334, 335, 336, 339, 340, 343], "var": [6, 7, 33, 89, 93, 109, 115, 169, 177, 278, 283], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 242], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 33, 89, 93, 109, 115, 169, 177, 278, 283, 371], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 89, 356, 364], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 56], "stand": [7, 87, 88, 109, 115, 366, 369], "joint": [7, 356], "dynam": [7, 57, 60, 62, 177, 269, 276, 357, 359, 369], "contact": [7, 39, 367], "engin": [7, 112, 369], "biomechan": 7, "graphic": 7, "anim": [7, 368], "area": 7, "demand": [7, 363, 374], "fast": [7, 9, 85, 86, 154, 186, 281, 355, 356, 357], "accur": [7, 56, 62, 356, 369, 371], "articul": 7, "acquir": [7, 357], "deepmind": [7, 8, 9, 60, 87, 88, 89, 93, 103, 104, 109, 115, 138, 357, 359], "whomev": 7, "licenc": 7, "incorpor": [7, 89, 93, 109, 115, 240, 244, 245, 248, 358, 360, 369], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 349], "tip": [7, 349], "glfw": [7, 355], "osmesa": 7, "egl": 7, "advic": [7, 60, 374], "sudo": [7, 349], "enabl": [7, 8, 56, 65, 66, 75, 82, 126, 204, 208, 247, 248, 313, 326, 357, 359, 367, 368, 369, 371], "apt": [7, 368], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 65, 66, 67, 78, 79, 82, 356, 358], "workflow": [7, 237, 238, 239], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 24, 28, 35, 127, 199, 225, 242, 243, 250, 251, 266, 269, 270, 291], "mkdir": 7, "earlier": [7, 355, 357, 358, 367, 368, 371], "roboti": 7, "html": [7, 106, 108], "wget": 7, "mujoco210": 7, "tar": [7, 57], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 109, 115], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 36, 38, 47, 63], "bin": [7, 199, 243, 350], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 195, 249, 253, 355, 357, 371], "nvidia": [7, 97], "older": [7, 11], "hack": [7, 355], "adatp": 7, "script": [7, 57, 179, 339, 342, 346, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "unnot": [7, 152], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 356, 371, 374], "troubleshoot": 7, "gl": 7, "h": [7, 71, 129, 131, 155, 167, 202, 203, 204, 206, 207, 208, 212, 313, 356, 358, 371], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 36, 38, 41, 47, 54, 56, 57, 58, 60, 61, 62, 65, 318, 320, 352, 355, 360, 363, 367], "devel": 7, "ubuntu": [7, 97], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 356, 358, 366], "libstdc": 7, "glibcxx_3": 7, "29": [7, 356, 367, 369], "compil": [7, 33, 69, 76, 77, 89, 93, 109, 115, 177, 202, 203, 206, 207, 209], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 174, 357, 366], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 29, 33, 89, 93, 109, 115, 146, 169, 177, 283, 374], "job": [7, 17, 18, 19, 21, 40, 371, 373], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 85, 86, 355, 356, 369, 371], "114": [7, 369], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 369], "offscreenopenglcontext": 7, "opengl": [7, 367, 368], "global": [7, 33, 89, 93, 109, 110, 111, 115, 177, 224, 233, 249, 253, 291, 352, 355, 367, 368], "cuda_visible_devic": 7, "id": [7, 22, 42, 69, 71, 76, 77, 89, 92, 93, 109, 115, 248, 281, 316, 320, 339, 362, 371], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 367], "onscreen": 7, "101": [7, 369], "correctli": [7, 33, 89, 93, 109, 115, 177], "lgl": 7, "libegl": 7, "x11": [7, 368], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 352], "n_training_step": 8, "datapoint": [8, 47, 371], "n_data_per_train": 8, "no_grad": [8, 33, 89, 93, 109, 115, 145, 177, 202, 203, 206, 207, 293, 294, 295, 296, 357, 358, 368], "loss_fn": [8, 358, 361, 362, 373], "zero_grad": [8, 33, 89, 93, 109, 115, 177, 352, 355, 357, 358, 361, 364, 367, 368, 369], "backpropag": [8, 85, 86, 98, 99, 109, 262, 263, 264, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 285, 291, 361, 368, 369], "differenti": [8, 47, 85, 86, 145, 293, 294, 295, 296, 358, 360, 361, 367, 368, 369], "denomin": 8, "artifact": 8, "numer": [8, 40, 93, 175, 205, 231, 232, 236, 242, 243, 249, 250, 251, 252, 253, 328, 357, 371, 374], "misconcept": 8, "freed": 8, "appear": [8, 35, 54, 60, 69, 76, 77, 369, 371], "compuat": 8, "fix": [8, 27, 109, 165, 263, 279, 283, 356, 364, 369, 374], "retain_graph": [8, 85, 86], "discuss": [8, 9, 362, 367, 368], "inplac": [8, 33, 36, 38, 41, 89, 93, 109, 115, 177, 355], "onto": [8, 35, 36, 38, 41, 183, 236, 240, 242, 243, 248, 249, 250, 251, 252, 253, 358, 369], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 150, 151, 152, 153, 154, 156, 159, 160, 163, 164, 165, 166, 168, 171, 172, 174, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 215, 216, 217, 219, 220, 221, 223, 224, 226, 227, 229, 233, 234, 240, 241, 243, 244, 247, 248, 249, 251, 252, 253, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 293, 294, 295, 296, 297, 351, 369, 373, 374], "submodul": [8, 33, 89, 93, 109, 115, 119, 177, 278], "param": [8, 33, 42, 89, 93, 105, 109, 115, 126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 177, 197, 199, 230, 241, 249, 252, 255, 278, 287, 290, 293, 294, 295, 296, 297, 355, 364, 367, 368, 369, 370, 373], "grad": [8, 33, 85, 86, 89, 93, 109, 115, 177, 355, 357], "whose": [8, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 42, 46, 48, 49, 89, 93, 109, 110, 111, 115, 133, 151, 165, 168, 169, 171, 173, 177, 219, 224, 252], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 37, 43, 68, 69, 129, 141, 152, 170, 272, 293, 295, 296, 351, 357, 367, 368, 369], "much": [8, 13, 14, 16, 37, 43, 60, 68, 69, 109, 115, 277, 280, 357, 359, 363, 367, 368, 369, 371, 374], "factor": [8, 23, 33, 156, 177, 205, 218, 231, 232, 240, 244, 245, 248, 263, 268, 271, 272, 274, 284, 299, 355, 356, 360, 364, 367, 368, 371, 374], "fit": [8, 11, 147, 165, 351, 352, 355], "bottlneck": 8, "brax": [8, 85, 86, 89, 93, 109, 115, 154, 359, 374], "jax": [8, 11, 85, 86, 98, 99], "improperli": 8, "underli": [8, 89, 93, 109, 115, 278, 359, 361, 363, 369], "tedeiou": 8, "priorit": [8, 37, 43, 68, 69, 265, 266, 268, 269, 270, 276, 281, 283, 285, 355, 356, 362], "amount": [8, 248, 356, 371], "costli": [8, 369], "constitut": [8, 356, 368, 369], "plain": [8, 359], "profil": 8, "frequent": [8, 371], "program": [8, 269, 276, 374], "functorch": [8, 10], "incl": 8, "suit": [8, 88, 357, 359, 373, 374], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 46, 48, 49, 76, 77, 126, 252, 255, 278, 367, 368, 369, 371, 373], "new_shap": 8, "permut": [8, 75, 149, 373, 374], "idea": [9, 281, 352, 358, 360, 367, 368], "introductori": 9, "intro": [9, 357, 358], "dai": [9, 373], "2022": [9, 10, 369, 373], "spin": [9, 87, 88], "deep": [9, 129, 192, 193, 194, 195, 198, 248, 262, 275, 283, 284, 355, 367], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 360], "summari": [9, 147, 175, 355, 356, 357, 358], "reddit": 9, "reagent": 9, "orient": [9, 62, 374], "baselines3": 9, "tf": 9, "bandit": [9, 108], "tensorflow": [9, 213, 214], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 364], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 373], "grade": 9, "factori": [9, 45, 355], "cherri": 9, "jaxrl": 9, "mbrl": [9, 105, 350], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 369], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 357, 358, 367, 368], "notebook": [10, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374], "24": [10, 61, 77, 92, 106, 107, 247, 355, 356, 358, 367, 369, 371], "pip3": [10, 355, 357, 358, 367, 368], "url": [10, 95], "org": [10, 23, 37, 57, 58, 60, 62, 68, 69, 85, 86, 87, 88, 95, 98, 99, 103, 104, 106, 107, 108, 112, 116, 117, 129, 151, 171, 191, 192, 193, 194, 195, 196, 199, 200, 201, 206, 212, 213, 214, 218, 220, 221, 224, 226, 227, 233, 243, 248, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 280, 282, 283, 284, 293, 298, 306, 347, 365, 370], "whl": 10, "u": [10, 59, 202, 203, 206, 207, 369], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 278], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 71, 80, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 103, 104, 106, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 123, 125, 129, 136, 138, 144, 145, 147, 151, 152, 155, 160, 163, 164, 169, 171, 173, 174, 175, 177, 180, 184, 186, 187, 188, 198, 199, 204, 208, 209, 211, 212, 215, 216, 217, 218, 219, 224, 225, 233, 236, 242, 243, 247, 249, 250, 251, 252, 253, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 295, 296, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 339, 340, 346, 356, 357], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 204, 208, 209, 373], "longer": [11, 356, 364, 367, 368, 371], "x": [11, 22, 26, 33, 40, 42, 60, 77, 145, 167, 190, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 215, 216, 234, 242, 249, 250, 259, 261, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 330, 355, 367, 369, 371, 373], "23": [11, 61, 77, 354, 355, 356, 361, 369, 372], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 61, 85, 86, 93, 98, 99, 207, 261, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 355, 356, 357, 358, 364, 367, 368, 369, 371, 374], "otherwis": [11, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 76, 77, 85, 86, 89, 92, 93, 94, 95, 98, 99, 102, 103, 104, 106, 107, 109, 110, 111, 112, 115, 116, 117, 129, 130, 136, 147, 164, 165, 166, 169, 175, 177, 202, 205, 206, 215, 216, 231, 232, 242, 250, 256, 263, 273, 278, 279, 283, 293, 295, 296, 326, 327, 352, 355, 356, 357, 358, 369, 374], "classmethod": [11, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 46, 48, 49, 89, 93, 109, 115, 171, 191, 223], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 29, 30, 31, 33, 36, 38, 40, 41, 61, 69, 76, 77, 89, 90, 91, 93, 103, 104, 106, 109, 110, 111, 115, 116, 117, 118, 145, 165, 169, 174, 175, 177, 189, 190, 191, 192, 193, 194, 195, 196, 201, 209, 210, 223, 249, 253, 283, 317, 318, 326, 335, 336, 339, 344, 345, 346, 355, 356, 357, 371, 374], "setter": 11, "setter_dict": 11, "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 90, 109, 115, 355, 373], "device_typ": [13, 15, 16, 28, 31, 34, 35, 189, 190, 191, 192, 193, 194, 195, 201, 209, 210, 215, 216, 217, 218, 223], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 356], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 356], "create_env_kwarg": [13, 14, 15, 16, 20, 90, 106, 109, 115, 355, 374], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 33, 156, 356, 371], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 278, 326, 355, 356, 357, 358, 360, 367, 373], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 181, 185, 249, 253, 326], "exploration_mod": [13, 15, 16, 17, 18, 19, 348, 350], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 23, 25, 27, 28, 33, 35, 37, 42, 43, 48, 60, 68, 69, 71, 89, 93, 109, 115, 125, 129, 133, 134, 137, 145, 147, 151, 156, 157, 158, 164, 165, 167, 168, 169, 171, 173, 175, 177, 197, 200, 202, 205, 206, 210, 213, 214, 217, 218, 226, 227, 230, 232, 240, 252, 256, 259, 260, 261, 262, 263, 264, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 328, 355, 356, 371, 374], "num_thread": [13, 14, 16, 36, 38, 41, 109, 115], "num_sub_thread": [13, 14, 16, 109, 115], "set_trunc": [13, 14, 15, 16, 89, 93, 109, 115], "datacollector": [13, 14, 15, 16, 33, 253, 280, 357, 362, 371], "recept": 13, "safe": [13, 14, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 69, 76, 236, 240, 242, 243, 248, 249, 250, 251, 252, 253, 255, 350, 373], "sota": [13, 14, 105, 142, 282, 321, 335, 355, 356, 357, 360, 361, 362, 367, 368, 373], "env_mak": [13, 14, 15, 20, 342, 374], "50": [13, 14, 15, 20, 39, 42, 54, 62, 76, 77, 103, 104, 177, 354, 356, 357, 358, 367, 368, 369, 370, 371, 372], "2000": [13, 14, 15, 33, 47, 96, 313, 357, 371], "int64": [13, 14, 15, 22, 28, 31, 36, 38, 39, 41, 42, 43, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 89, 93, 102, 103, 104, 108, 109, 110, 111, 113, 114, 115, 126, 138, 149, 156, 163, 199, 225, 242, 243, 248, 249, 250, 251, 350, 357, 358, 359, 360, 362, 363, 369, 371, 373], "shutdown": [13, 14, 15, 16, 20, 126, 355, 373], "del": [13, 14, 15, 355, 356, 357, 366, 367, 373, 374], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 128, 234, 242, 247, 250, 358], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 47], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 356], "divis": [13, 14, 15, 16, 17, 18, 19, 54, 60, 69, 76, 77, 368], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 54, 93, 125, 165, 174, 208, 358, 369, 370], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 332, 356], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 63, 85, 86, 87, 88, 89, 92, 93, 94, 98, 99, 106, 107, 109, 112, 115, 133, 134, 137, 145, 151, 165, 168, 169, 171, 173, 175, 177, 252, 339, 359, 361, 362, 363, 367, 374], "span": [13, 14, 15, 16, 17, 18, 19, 20, 60, 76], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 33, 177, 247, 356, 357, 367, 368], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 42, 320, 350, 367, 368, 369], "round": [13, 14, 15, 16, 17, 18, 19, 20, 54], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 33, 58, 89, 93, 109, 115, 177], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 174, 373], "ratio": [13, 14, 16, 42, 355, 357], "finish": [13, 14, 16, 20, 93, 156, 374], "rest": [13, 14, 16, 350, 357, 358, 367, 369, 373], "earli": [13, 14, 16, 33, 93, 163, 373], "plu": [13, 14, 16, 42, 109, 115, 369], "safeti": [13, 14, 16, 105, 109, 115], "harm": [13, 14, 16, 109, 115], "exclus": [13, 14, 50, 51, 54, 60, 69, 76, 77, 126, 139, 141, 202, 204, 206, 208, 213, 214, 242, 243, 250, 251, 284, 285, 293, 294, 295, 296, 297, 320, 346, 350], "add_truncated_kei": [13, 14, 15, 16, 89, 93, 109, 115, 169], "ordereddict": [13, 14, 15, 16, 20, 33, 89, 93, 109, 115, 169, 175, 177, 283, 356], "form": [13, 14, 16, 33, 37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 175, 177, 202, 204, 206, 208, 261, 262, 264, 277, 280, 330, 350, 360, 368], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 89, 93, 109, 115, 169], "integ": [13, 14, 15, 16, 22, 31, 32, 33, 35, 42, 49, 69, 76, 77, 78, 89, 93, 109, 115, 125, 138, 142, 147, 163, 189, 190, 210, 215, 216, 269, 276, 283, 371], "increment": [13, 14, 15, 16, 89, 93, 109, 115, 277], "env_fn": [13, 14, 15, 16, 90, 344, 345], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 76, 77, 194, 195, 369], "out_se": [13, 14, 15, 16, 374], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 25, 26, 33, 34, 48, 54, 56, 57, 68, 69, 71, 76, 77, 80, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 126, 133, 151, 153, 162, 165, 168, 169, 170, 172, 173, 176, 177, 188, 189, 190, 192, 193, 194, 195, 198, 201, 204, 205, 208, 210, 211, 212, 215, 216, 222, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 291, 292, 293, 294, 295, 296, 297, 311, 313, 317, 318, 320, 323, 330, 335, 336, 339, 343, 344, 345, 351, 357, 368], "return_same_td": 15, "interruptor": 15, "cautious": [15, 280], "whole": [15, 26, 29, 33, 47, 89, 93, 109, 115, 169, 177, 249, 283, 321, 355, 357], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 360], "policy_state_dict": 15, "env_state_dict": 15, "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 330], "respect": [17, 18, 19, 33, 89, 93, 109, 115, 127, 133, 134, 137, 151, 152, 161, 165, 168, 169, 171, 173, 177, 202, 206, 215, 227, 252, 257, 262, 264, 277, 280, 282, 293, 295, 296, 325, 357, 358, 367, 368], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 349, 356, 357, 360, 363, 366, 371], "fashion": [17, 19, 20, 36, 38, 41, 77], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 54, 57, 58, 60, 61, 62, 89, 93, 109, 115, 141], "seen": [17, 18, 19, 20, 89, 93, 109, 115, 351, 355, 356, 358, 361, 367, 368, 371], "submitit_delai": [17, 21], "former": [17, 18, 19, 37, 40, 43, 44, 56, 89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 355], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 369], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 355], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 35, 54, 249, 253], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 344, 345, 355, 356], "coordin": 20, "init": [20, 33, 89, 93, 109, 115, 177, 320, 356, 357], "autodetect": 20, "similarli": [20, 33, 75, 79, 89, 93, 109, 115, 177, 215, 254, 255, 269, 276, 374], "num_cpu": 20, "num_gpu": 20, "1024": [20, 196, 356, 371], "equat": [20, 60, 93, 248, 261, 264, 284, 357, 359, 369], "exce": [20, 371], "indefinit": [20, 53], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 330, 355, 357, 358], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 361], "jump": [21, 359], "host": [21, 33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 191, 196, 223, 241], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 26, 89, 93, 109, 115, 178, 244, 245, 248, 249, 256, 262, 263, 265, 276, 280, 281, 283, 285, 348, 357, 367, 368, 369, 373, 374], "rollout_tensordict": 22, "nestedkei": [22, 47, 69, 76, 77, 89, 93, 109, 115, 120, 123, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 141, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 175, 177, 178, 186, 187, 240, 241, 244, 245, 247, 248, 253, 266, 291, 311, 313], "durat": [22, 368], "meta": [22, 46, 56, 91, 95, 262, 264, 277, 280, 282, 352, 357, 367, 368, 371], "aren": [22, 164, 358], "deprec": [22, 33, 89, 93, 109, 115, 169, 177, 180, 184, 245, 262, 264, 266, 269, 270, 271, 276, 277, 280, 281, 282, 283, 291, 293, 294, 295, 296, 301, 374], "eventu": [22, 224, 358, 369], "supersed": 22, "recov": [22, 56, 58, 60, 61, 62, 76, 77, 240, 245, 248, 254, 269, 276, 366], "cat": [22, 257, 263, 265, 276, 281, 283, 285, 367, 371, 373], "arang": [22, 28, 35, 69, 199, 214, 242, 321, 350, 371], "obs_": 22, "trajectory_id": 22, "int32": [22, 44, 54, 60, 76, 98, 99, 183, 247, 371], "data_split": 22, "got": [22, 362, 374], "init_kl_coef": 23, "horizon": [23, 103, 104, 116, 117, 188, 212, 357], "kl": [23, 27, 42, 145, 273, 277], "describ": [23, 46, 130, 168, 178, 230, 231, 266, 316, 351, 355, 357, 367, 368, 369, 374], "ziegler": 23, "et": [23, 188], "relax": [23, 311], "penalti": [23, 42, 277], "strai": [23, 42], "greater": [23, 54, 69, 76, 77, 204, 208, 355, 356, 373], "increas": [23, 166, 248, 367, 368], "pull": [23, 371], "toward": [23, 173], "aggress": 23, "kl_coef": [23, 27, 42], "arxiv": [23, 37, 57, 60, 62, 68, 69, 85, 86, 87, 88, 98, 99, 103, 104, 106, 107, 112, 116, 117, 129, 151, 171, 191, 192, 193, 194, 195, 196, 199, 200, 201, 206, 212, 218, 220, 221, 224, 226, 227, 233, 243, 248, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 280, 283, 284, 293, 298, 306, 370], "pdf": [23, 129, 191, 192, 193, 194, 195, 199, 243, 248, 271, 281, 284, 293, 298, 306, 339], "1909": 23, "08593": 23, "lm": 23, "blob": 23, "master": [23, 367, 368], "lm_human_prefer": 23, "train_polici": 23, "kl_valu": 23, "coef": [23, 145], "newest": 23, "int8": [24, 89, 102, 110, 111, 127], "assert_is_in": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "clear_device_": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "op": [24, 25, 28, 31, 32, 34, 35, 46, 48, 49, 146, 174, 240, 244, 313, 332], "encod": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 43, 44, 46, 48, 49, 85, 86, 89, 92, 94, 95, 98, 99, 106, 107, 112, 136, 221, 222, 226, 261, 350, 356, 357, 358, 360, 369, 371], "ndarrai": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 93, 248, 256, 311, 367], "ignore_devic": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "np": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 93, 256, 311, 367, 369], "complient": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "singleton": [24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 46, 48, 49, 189, 190, 210, 228, 229], "start_dim": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "end_dim": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "implements_for_spec": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "torch_funct": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "tensor_to_index": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "is_in": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 374], "project": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 136, 206, 236, 240, 242, 243, 248, 249, 250, 251, 252, 253, 320, 350, 373, 374], "rand": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 40, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 85, 86, 98, 99, 105, 123, 126, 134, 137, 153, 178, 188, 212, 249, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 283, 285, 369, 373, 374], "unbound": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 165, 183, 369, 371], "to_numpi": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 89, 93, 109, 115], "transformed_in": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 168, 169, 219, 230, 346], "check_spec_encod": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "to_one_hot": [24, 28, 31], "hot": [24, 28, 31, 32, 35, 85, 86, 92, 94, 95, 98, 99, 103, 104, 106, 107, 110, 111, 112, 116, 117, 123, 136, 199, 222, 225, 242, 243, 250, 251, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 358], "to_one_hot_spec": [24, 28, 31], "onehotdiscretetensorspec": [24, 28, 199, 225, 242, 250, 266, 268, 269, 270, 291, 348, 350, 360], "convert": [24, 28, 31, 32, 33, 35, 36, 38, 41, 47, 85, 86, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115, 133, 134, 137, 151, 165, 168, 169, 171, 173, 175, 177, 252, 261, 278, 355, 356, 357, 369, 371], "type_check": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49], "unflatten": [24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 46, 48, 49, 126, 247], "upper": [25, 74, 146], "unnam": 26, "constraint": [26, 105, 357, 368], "pixels_spec": 26, "observation_vector_spec": 26, "composite_spec": 26, "observation_vector": [26, 130, 339, 355], "td_project": 26, "absent": [26, 29, 56, 89, 93, 109, 115, 169], "is_empti": [26, 29, 369], "include_nest": [26, 29], "leaves_onli": [26, 29], "itemsview": 26, "children": [26, 29, 33, 89, 93, 109, 115, 177], "keysview": [26, 29], "reflect": [26, 29, 94, 110, 111, 174, 186, 278, 333, 356, 357, 358, 368], "lock_": [26, 29], "recurs": [26, 29, 33, 50, 51, 89, 93, 109, 115, 177, 278], "succeed": [26, 29], "selected_kei": [26, 29, 160, 355], "unlock_": [26, 29], "unlock": [26, 29, 36, 38, 41], "valuesview": 26, "multipli": [27, 202, 206, 263, 264, 270, 277, 279, 280, 281, 283, 328, 355, 367], "calcul": [27, 42, 156, 202, 262, 264, 268, 277, 280, 282], "onehottensorspec": [28, 85, 86, 92, 94, 95, 98, 99, 106, 107, 112], "action_valu": [28, 35, 198, 199, 225, 242, 243, 250, 251, 270, 278, 291, 350, 358, 360, 364], "argmax": [28, 89, 93, 109, 115, 199, 225, 243, 251, 360], "chosen_action_valu": [28, 35, 224, 225, 233, 250, 251, 291, 350, 358, 360], "outcom": [28, 35, 197, 230, 367], "drawn": [29, 30, 165, 244, 249, 253, 357, 367, 368], "lazystackedtensordict": [29, 54, 89, 93, 105, 109, 115, 366], "heterogen": [29, 30, 102, 110, 111, 179, 215, 216, 355, 356], "thrown": [30, 33, 89, 93, 109, 115, 177, 371], "nvec": [31, 32], "cardin": [31, 32, 199, 225, 242, 243, 251, 357], "ax": [31, 217, 218, 367], "m": [31, 33, 89, 93, 109, 115, 136, 177, 253, 350, 356, 369], "ts": [31, 32], "multionehotdiscretetensorspec": [31, 266, 269, 270, 291, 348], "use_regist": [32, 35], "to_categor": [32, 35], "to_categorical_spec": [32, 35], "multidiscretetensorspec": [32, 348], "gamma": [33, 156, 177, 212, 262, 263, 265, 266, 268, 270, 271, 272, 274, 276, 278, 280, 281, 282, 283, 285, 286, 287, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 342, 351, 355, 356, 357, 367, 368, 373], "sutton": [33, 351, 367, 368], "1988": 33, "tempor": [33, 204, 208, 212, 294, 295, 300, 301], "44": [33, 355, 356, 369, 370], "discount": [33, 60, 90, 156, 177, 263, 268, 271, 272, 274, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 351, 356, 357, 367, 368], "ahead": [33, 177, 374], "bias": [33, 202, 203, 206, 207, 259, 351, 355], "mitig": 33, "pleas": [33, 58, 89, 93, 109, 110, 111, 115, 126, 129, 166, 169, 177, 283, 349, 359, 361, 362, 363], "multisteptransform": [33, 348], "99": [33, 156, 175, 212, 274, 287, 292, 299, 342, 355, 356, 357, 361, 364, 367, 368, 369, 373], "add_modul": [33, 89, 93, 109, 115, 177], "child": [33, 89, 93, 109, 115, 177, 356], "fn": [33, 39, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 177, 219, 344, 345], "init_weight": [33, 89, 93, 109, 115, 177], "fill_": [33, 89, 93, 109, 115, 177, 356, 358, 374], "net": [33, 89, 93, 109, 115, 177, 193, 195, 198, 201, 209, 216, 262, 263, 270, 276, 280, 281, 282, 283, 339, 342, 356, 369, 370, 373], "in_featur": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 189, 190, 192, 193, 194, 195, 201, 209, 210, 215, 216, 217, 218, 237, 252, 266, 268, 360, 361, 373], "out_featur": [33, 89, 93, 105, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 188, 189, 190, 192, 193, 194, 195, 200, 201, 204, 208, 209, 210, 212, 215, 216, 217, 218, 237, 242, 252, 266, 268, 350, 355, 358, 360, 361, 364, 373], "bia": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 189, 190, 192, 193, 194, 195, 200, 201, 202, 203, 204, 206, 207, 208, 210, 216, 217, 218, 219, 244, 245, 248, 252, 259, 260, 261, 278, 283, 351, 355, 356, 357, 358, 368, 373], "requires_grad": [33, 85, 86, 89, 93, 109, 115, 145, 169, 177, 283], "bfloat16": [33, 89, 93, 109, 115, 177], "datatyp": [33, 89, 93, 109, 115, 177, 371], "member": [33, 89, 93, 109, 115, 177, 278, 313], "xdoctest": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 278, 283], "buf": [33, 89, 93, 109, 115, 177], "20l": [33, 89, 93, 109, 115, 177, 278], "1l": [33, 89, 93, 109, 115, 177, 278], "5l": [33, 89, 93, 109, 115, 177, 278], "__call__": [33, 39, 89, 93, 109, 115, 177, 253, 352], "doubl": [33, 48, 89, 93, 109, 115, 133, 134, 135, 137, 151, 165, 168, 169, 171, 173, 177, 252, 266, 271, 275, 281, 284, 291, 355, 356, 357, 358, 374], "eval": [33, 89, 93, 109, 115, 169, 175, 177, 355, 356, 357], "evalu": [33, 89, 93, 103, 104, 109, 115, 169, 177, 197, 213, 214, 222, 232, 281, 335, 336, 356, 357, 364], "dropout": [33, 89, 93, 109, 115, 169, 177, 202, 204, 206, 208, 210, 358], "batchnorm": [33, 89, 93, 109, 115, 169, 177], "disabl": [33, 89, 93, 109, 115, 169, 177, 205, 232, 311, 355, 367], "comparison": [33, 89, 93, 109, 115, 169, 177, 278, 355, 356], "similar": [33, 36, 38, 40, 41, 60, 89, 93, 109, 110, 111, 115, 133, 151, 165, 168, 169, 171, 172, 173, 175, 177, 237, 239, 249, 252, 253, 351, 355, 356, 357, 358, 360, 361, 362, 363, 369, 371, 374], "extra_repr": [33, 89, 93, 109, 115, 177], "nontermin": 33, "original_reward": 33, "newli": [33, 89, 93, 109, 115], "OR": 33, "get_buff": [33, 89, 93, 109, 115, 177], "get_submodul": [33, 89, 93, 109, 115, 177], "qualifi": [33, 89, 93, 109, 115, 177], "referenc": [33, 89, 93, 109, 115, 177], "attributeerror": [33, 89, 93, 109, 115, 177], "resolv": [33, 89, 93, 109, 115, 177], "someth": [33, 89, 93, 102, 109, 115, 177, 349, 356, 357, 369, 374], "get_extra_st": [33, 89, 93, 109, 115, 175, 177], "set_extra_st": [33, 89, 93, 109, 115, 175, 177], "picklabl": [33, 89, 93, 109, 115, 175, 177], "pickl": [33, 89, 93, 109, 115, 175, 177], "get_paramet": [33, 89, 93, 109, 115, 177], "net_b": [33, 89, 93, 109, 115, 177], "net_c": [33, 89, 93, 109, 115, 177], "conv": [33, 89, 93, 109, 115, 177, 189, 190, 356], "conv2d": [33, 89, 93, 109, 115, 177, 190, 192, 193, 201, 215, 373], "kernel_s": [33, 89, 93, 109, 115, 177, 189, 190, 192, 193, 201, 215, 220, 356, 373], "stride": [33, 89, 93, 109, 115, 177, 189, 190, 192, 193, 201, 215, 356, 367, 373], "diagram": [33, 89, 93, 109, 115, 177], "degre": [33, 89, 93, 109, 115, 177], "named_modul": [33, 89, 93, 109, 115, 177], "o": [33, 89, 93, 109, 115, 177, 207], "half": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 355], "ipu": [33, 89, 93, 109, 115, 177], "strict": [33, 36, 38, 41, 89, 93, 109, 115, 169, 177, 283], "descend": [33, 89, 93, 109, 115, 169, 177, 283], "get_swap_module_params_on_convers": [33, 89, 93, 109, 115, 169, 177, 283], "persist": [33, 89, 93, 109, 115, 169, 177, 186, 283], "enforc": [33, 75, 89, 93, 109, 115, 169, 177, 254, 283, 369], "preserv": [33, 89, 93, 109, 115, 169, 177, 283], "missing_kei": [33, 89, 93, 109, 115, 169, 177, 283], "unexpected_kei": [33, 89, 93, 109, 115, 169, 177, 283], "namedtupl": [33, 89, 93, 109, 115, 169, 177, 283], "duplic": [33, 75, 89, 93, 109, 115, 177, 266, 271, 278, 291], "l": [33, 89, 93, 109, 115, 177, 202, 206, 292, 357, 369], "idx": [33, 89, 93, 109, 115, 177], "named_buff": [33, 89, 93, 109, 115, 177], "remove_dupl": [33, 89, 93, 109, 115, 177, 278], "prepend": [33, 89, 93, 109, 115, 177, 278], "running_var": [33, 89, 93, 109, 115, 177], "named_children": [33, 89, 93, 109, 115, 177], "conv4": [33, 89, 93, 109, 115, 177], "conv5": [33, 89, 93, 109, 115, 177], "memo": [33, 89, 93, 109, 115, 177], "named_paramet": [33, 89, 93, 109, 115, 145, 177, 278], "register_backward_hook": [33, 89, 93, 109, 115, 177], "removablehandl": [33, 89, 93, 109, 115, 177], "favor": [33, 89, 93, 109, 115, 177, 357], "register_full_backward_hook": [33, 89, 93, 109, 115, 177], "register_buff": [33, 89, 93, 109, 115, 177], "running_mean": [33, 89, 93, 109, 115, 177], "alongsid": [33, 89, 93, 109, 115, 177, 363], "num_featur": [33, 89, 93, 109, 115, 177], "register_forward_hook": [33, 89, 93, 109, 115, 177, 199, 225], "with_kwarg": [33, 89, 93, 109, 115, 177], "always_cal": [33, 89, 93, 109, 115, 177], "register_module_forward_hook": [33, 89, 93, 109, 115, 177], "regardless": [33, 89, 93, 109, 115, 177, 264, 277, 280], "register_forward_pre_hook": [33, 89, 93, 109, 115, 177], "invok": [33, 89, 93, 109, 115, 177], "And": [33, 89, 93, 109, 115, 177, 361], "forward_pr": [33, 89, 93, 109, 115, 177], "register_module_forward_pre_hook": [33, 89, 93, 109, 115, 177], "grad_input": [33, 89, 93, 109, 115, 177], "grad_output": [33, 89, 93, 109, 115, 177], "subsequ": [33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 125, 177, 358, 367], "technic": [33, 89, 93, 109, 115, 177, 356, 358, 360], "caller": [33, 89, 93, 109, 115, 177], "register_module_full_backward_hook": [33, 89, 93, 109, 115, 177], "register_full_backward_pre_hook": [33, 89, 93, 109, 115, 177], "backward_pr": [33, 89, 93, 109, 115, 177], "register_module_full_backward_pre_hook": [33, 89, 93, 109, 115, 177], "register_load_state_dict_post_hook": [33, 89, 93, 109, 115, 177], "incompatible_kei": [33, 89, 93, 109, 115, 177], "register_modul": [33, 89, 93, 109, 115, 177, 352], "alia": [33, 89, 93, 109, 115, 177], "register_paramet": [33, 89, 93, 109, 115, 177], "register_state_dict_pre_hook": [33, 89, 93, 109, 115, 177], "keep_var": [33, 36, 38, 41, 89, 93, 109, 115, 169, 177, 283], "requires_grad_": [33, 89, 93, 109, 115, 177], "autograd": [33, 89, 93, 109, 115, 169, 177, 283], "freez": [33, 89, 93, 109, 115, 177], "finetun": [33, 89, 93, 109, 115, 177], "gan": [33, 89, 93, 109, 115, 177], "share_memori": [33, 89, 90, 93, 109, 115, 177, 355], "share_memory_": [33, 89, 93, 109, 115, 177, 373], "destin": [33, 36, 38, 41, 89, 93, 109, 115, 128, 134, 135, 137, 169, 171, 175, 177, 186, 283, 313], "averag": [33, 89, 93, 109, 115, 169, 175, 177, 248, 272, 273, 283, 328, 355, 357], "shallow": [33, 89, 93, 109, 115, 169, 177, 283, 358], "detach": [33, 89, 93, 109, 115, 169, 177, 278, 283, 293, 294, 295, 296, 355], "non_block": [33, 36, 38, 41, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 358], "memory_format": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "channels_last": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "unchang": [33, 89, 93, 109, 115, 133, 136, 151, 165, 168, 169, 171, 173, 177, 244, 252, 327, 355, 371], "tri": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 363], "pin": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "4d": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "ignore_w": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "1913": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "3420": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "5113": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "2325": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "torch_doctest_cuda1": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "gpu1": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "1914": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "5112": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 369], "2324": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "float16": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 203, 207, 252], "cdoubl": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "3741": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "j": [33, 37, 68, 69, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 352, 361], "2382": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "5593": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252, 369], "4443": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "complex128": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "6122": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "1150": [33, 89, 93, 109, 115, 133, 151, 165, 168, 169, 171, 173, 177, 252], "to_empti": [33, 89, 93, 109, 115, 177], "dst_type": [33, 89, 93, 109, 115, 177], "xpu": [33, 89, 93, 109, 115, 177], "set_to_non": [33, 89, 93, 109, 115, 177], "unidimension": 35, "keepdim": 35, "user_regist": 35, "priori": 35, "uniqu": [35, 76, 77, 103, 104, 129, 138, 164, 165, 166, 247, 320, 362, 371], "discretebox": [35, 89, 93, 109, 115, 360, 367, 368, 374], "chosen_data": [36, 63], "rewarddata": [36, 63, 348], "rejected_data": [36, 63], "from_dataset": [36, 38, 63], "dataset_nam": [36, 38, 42, 47, 63, 108], "max_length": [36, 38, 39, 45, 47, 63, 364], "550": [36, 38, 42, 47, 63, 76, 77, 369], "root_dir": [36, 38, 47, 63], "from_disk": [36, 38, 47, 63], "carperai": [36, 38, 42, 47], "openai_summarize_comparison": [36, 38, 47], "sequen": [36, 38], "load_from_disk": [36, 38, 47, 63], "load_dataset": [36, 38, 47, 63], "attention_mask": [36, 38, 39, 41, 42, 45, 47, 63], "92534": 36, "input_id": [36, 38, 39, 41, 42, 45, 47, 63], "end_scor": [36, 41, 42, 63], "sub_data": [36, 38], "from_tensordict": [36, 38, 41], "non_tensordict": [36, 38, 41], "_nodefault": [36, 38, 41], "getattr": [36, 38, 41], "tensorclass": [36, 38, 41, 63, 65, 66, 82], "load_memmap": [36, 38, 41], "fetch": [36, 38, 41, 85, 86, 87, 88, 145, 360, 370, 371], "fromkei": [36, 38, 41], "memmap": [36, 38, 41, 65, 109, 115, 175, 313, 315, 327, 371], "saved_td": [36, 38, 41], "td_load": [36, 38, 41], "from_flatten": [36, 38, 41], "attemptedli": [36, 38, 41], "copy_exist": [36, 38, 41], "return_earli": [36, 38, 41], "share_non_tensor": [36, 38, 41], "mimic": [36, 38, 41, 89, 93, 109, 115], "cross": [36, 38, 41, 188], "anymor": [36, 38, 41, 169, 252], "tensordictfutur": [36, 38, 41], "deepli": [36, 38, 41], "insid": [36, 38, 41, 109, 374], "memmap_": [36, 38, 41, 175], "memmap_lik": [36, 38, 41], "contentless": [36, 38, 41], "1_000_000": [36, 37, 38, 40, 41, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 76, 355, 358, 367], "alloc": [36, 38, 41, 66, 213, 214, 355], "setattr": [36, 38, 41], "tent": [36, 38, 41, 47], "to_tensordict": [36, 38, 41, 358], "unbind": [36, 37, 38, 40, 41, 43, 44, 204, 208], "alpha": [37, 43, 68, 69, 189, 190, 192, 193, 194, 195, 201, 215, 263, 270, 279, 281, 283, 355, 371, 373], "ep": [37, 43, 68, 69, 175, 248, 264, 284, 328, 355, 356, 358, 361, 364], "1e": [37, 43, 68, 69, 175, 197, 200, 219, 230, 355, 356, 357, 368], "08": [37, 43, 68, 69, 355, 356, 357, 369], "pin_memori": [37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 150, 355, 373], "schaul": [37, 68, 69], "quan": [37, 68, 69], "antonogl": [37, 68, 69], "silver": [37, 68, 69], "2015": [37, 68, 69], "ab": [37, 57, 60, 62, 68, 69, 85, 86, 87, 88, 98, 99, 103, 104, 106, 107, 112, 116, 117, 128, 151, 171, 175, 191, 196, 200, 201, 206, 212, 218, 220, 221, 224, 226, 227, 233, 262, 263, 266, 267, 268, 269, 272, 273, 274, 275, 276, 279, 280, 283, 370], "1511": [37, 68, 69, 201], "05952": [37, 68, 69], "expon": [37, 43, 68, 69], "\u03b1": [37, 43, 68, 69], "delta": [37, 43, 68, 69, 202, 206, 230, 249, 253, 348, 351, 367], "null": [37, 43, 68, 69, 127], "max_siz": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 78, 80, 82, 357, 362], "1_000": [37, 40, 43, 44, 367, 371], "merg": [37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 369], "mini": [37, 40, 43, 44, 54, 56, 57, 58, 59, 60, 61, 62, 368], "decid": [37, 40, 43, 44, 367, 373], "meth": [37, 40, 43, 44, 278, 369], "incompat": [37, 40, 43, 44, 282, 371], "drop_last": [37, 40, 43, 44, 75, 77], "notion": [37, 40, 43, 44], "caution": [37, 40, 43, 44, 75, 179, 374], "codebas": [37, 40, 43, 44, 369], "approach": [37, 40, 43, 44, 147, 355, 357, 361, 362, 367, 374], "return_info": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 71, 371], "tensordictprioritizedreplaybuff": [37, 348, 373], "simplifi": [37, 360, 369, 371], "_weight": [37, 43, 68, 69, 371, 373], "arrai": [37, 42, 68, 89, 93, 109, 115, 138, 202, 203, 206, 207, 355, 367, 371], "update_prior": [37, 68, 69, 327, 352, 356, 371, 373], "36278465": 37, "tempfil": [37, 40, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 342, 355, 356, 367, 371], "tqdm": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 330, 355, 357, 358, 367, 368, 369], "randomsampl": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 355, 367], "td_error": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 265, 266, 268, 269, 270, 271, 276, 278, 281, 283, 285, 291, 355, 361, 371, 373], "update_tensordict_prior": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 355, 371, 373], "temporarydirectori": [37, 40, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 355, 356, 367, 371], "tmpdir": [37, 40, 43, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 355, 356, 367], "rb_load": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "cursor": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "insert_transform": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 124, 169], "insert": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 71, 72, 80, 81, 83, 84, 124, 133, 169, 170], "set_sampl": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "set_storag": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "set_writ": [37, 40, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71], "prompt_rindex": [38, 39, 42], "promptdatatldr": 38, "116722": 38, "prompt": [39, 42], "return_tensordict": [39, 45], "recip": [39, 89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259], "text": [39, 42, 45, 58, 202, 203, 206, 207, 248, 357], "tensodict": [39, 45], "orign": [39, 45], "valid_sampl": 39, "eough": 39, "toknen": 39, "meet": 39, "criterion": 39, "autotoken": [39, 45, 47], "from_pretrain": [39, 42, 45], "gpt2": [39, 42, 45, 47, 191, 196, 223], "pad_token": [39, 45], "eos_token": 39, "enough": [39, 371], "inde": [39, 136, 357, 369], "roundrobinwrit": [40, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62], "Not": [40, 85, 86, 98, 99], "depth": [40, 89, 93, 105, 109, 112, 115, 188, 189, 190, 192, 193, 194, 195, 200, 201, 210, 212, 215, 216, 220, 221, 242, 350, 356, 359, 361, 362, 366, 367, 368, 371], "_pytre": [40, 371], "tree_map": [40, 371], "did": [40, 174, 299, 356, 357, 362, 371, 374], "assert0": [40, 371], "ref_model": 42, "reward_model": [42, 258], "max_new_token": 42, "score_clip": 42, "kl_schedul": 42, "klcontrollerbas": 42, "num_step": 42, "causal": 42, "sentenc": 42, "frozen": [42, 145], "gpt2rewardmodel": 42, "get_dataload": [42, 348], "promptdata": [42, 348], "gpt2lmheadmodel": 42, "dl": 42, "block_siz": [42, 63], "tensorclass_typ": [42, 63], "openai_summarize_tldr": 42, "config_class": 42, "model_path": 42, "rollout_from_model": 42, "rollout_from_data": 42, "600": [42, 363, 369, 371], "reward_kl": [42, 145], "reward_raw": 42, "sample_log_prob": [42, 237, 238, 239, 249, 253, 255, 280, 339, 357, 360, 368, 373], "create_rollout_td": 42, "log_prob": [42, 197, 213, 214, 222, 232, 253], "log_ratio": 42, "replic": 42, "rindex": 42, "eo": 42, "term": [42, 145, 206, 207, 217, 218, 261, 262, 270, 332, 356, 357, 359, 360, 368], "generation_config": 42, "generationconfig": 42, "ti": [42, 302, 303, 304, 305, 307, 308, 309, 310, 356], "log_probs_gen": 42, "logprobs_of_label": 42, "priority_kei": [43, 44, 55, 68, 266, 269, 270, 271, 276, 278, 281, 283, 285, 291, 371, 373], "reduct": [43, 68, 69, 80, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285], "prioritizedreplaybuff": [43, 348, 373], "min": [43, 68, 69, 80, 230, 231, 232, 241, 248, 263, 264, 270, 279, 281, 283, 356, 357, 367, 368], "median": [43, 68, 69, 80, 98, 99, 249, 253], "include_info": [43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62], "kw": [44, 55, 72, 81], "huggingfac": [45, 57, 62, 246], "co": [45, 138, 369], "doc": [45, 95, 98, 99, 108, 112, 320, 356, 367, 368, 374], "pad_trunc": 45, "am": 45, "me": 45, "reassur": 45, "ok": 45, "tokenizer_fn": 47, "tensordicttoken": [47, 348], "pre_tokenization_hook": 47, "valid_s": 47, "tokenizer_class": 47, "tokenizer_model_nam": 47, "tokein": 47, "elementwis": 47, "vocabulari": 47, "loader": [47, 357], "185068": 47, "dataset_to_tensordict": 47, "data_dir": 47, "batch_dim": [47, 346], "valid_mask_kei": 47, "conver": 47, "batch_dimens": 47, "filder": 47, "from_dict": 47, "data_memmap": 47, "recurse_through_entri": 51, "recurse_through_stack": 51, "consolid": 51, "dataset_id": [54, 56, 57, 58, 60, 61, 62], "num_proc": 54, "slice_len": [54, 60, 69, 76, 77, 313], "strict_len": 54, "arari": 54, "2600": 54, "million": [54, 358], "consequ": [54, 206, 362], "50x10": 54, "available_dataset": [54, 55, 56, 57, 58, 59, 60, 61, 62, 76, 77], "ataridqn": 54, "immutabledatasetwrit": [54, 55, 56, 57, 58, 59, 60, 61, 62], "shorter": [54, 60, 69, 76, 77], "Be": [54, 60, 69, 76, 77], "game_nam": 54, "krull": 54, "1d": [54, 69, 76, 77, 80], "cheapli": 54, "nontensordata": [54, 60, 311], "invalid_rang": 54, "999998": 54, "999999": 54, "add_count": 54, "84": [54, 155, 355, 356, 358, 369, 370], "valueestim": [54, 262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 291, 348, 351, 355, 367, 368], "convolut": [54, 189, 190, 192, 193, 215, 228, 360], "2657628": 54, "2657629": 54, "2657630": 54, "2657631": 54, "2657632": 54, "2657633": 54, "2657634": 54, "2657635": 54, "2657636": 54, "2657637": 54, "2657638": 54, "2657639": 54, "2657640": 54, "2657641": 54, "2657642": 54, "2657643": 54, "2657644": 54, "2657645": 54, "2657646": 54, "2657647": 54, "2657648": 54, "2657649": 54, "2657650": 54, "2657651": 54, "2657652": 54, "2657653": 54, "2657654": 54, "2657655": 54, "2657656": 54, "2657657": 54, "2657658": 54, "2657659": 54, "2657660": 54, "2657661": 54, "2657662": 54, "2657663": 54, "2657664": 54, "2657665": 54, "2657666": 54, "2657667": 54, "2657668": 54, "2657669": 54, "2657670": 54, "2657671": 54, "2657672": 54, "2657673": 54, "2657674": 54, "2657675": 54, "2657676": 54, "2657677": 54, "2657678": 54, "2657679": 54, "2657680": 54, "2657681": 54, "2657682": 54, "2657683": 54, "2657684": 54, "2657685": 54, "2657686": 54, "2657687": 54, "2657688": 54, "2657689": 54, "2657690": 54, "2657691": 54, "1995687": 54, "1995688": 54, "1995689": 54, "1995690": 54, "1995691": 54, "1995692": 54, "1995693": 54, "1995694": 54, "1995695": 54, "1995696": 54, "1995697": 54, "1995698": 54, "1995699": 54, "1995700": 54, "1995701": 54, "1995702": 54, "1995703": 54, "1995704": 54, "1995705": 54, "1995706": 54, "1995707": 54, "1995708": 54, "1995709": 54, "1995710": 54, "1995711": 54, "1995712": 54, "1995713": 54, "1995714": 54, "1995715": 54, "1995716": 54, "1995717": 54, "1995718": 54, "1995719": 54, "1995720": 54, "1995721": 54, "1995722": 54, "1995723": 54, "1995724": 54, "1995725": 54, "1995726": 54, "1995727": 54, "1995728": 54, "1995729": 54, "1995730": 54, "1995731": 54, "1995732": 54, "1995733": 54, "1995734": 54, "1995735": 54, "1995736": 54, "1995737": 54, "1995738": 54, "1995739": 54, "1995740": 54, "1995741": 54, "1995742": 54, "1995743": 54, "1995744": 54, "1995745": 54, "1995746": 54, "1995747": 54, "1995748": 54, "1995749": 54, "1995750": 54, "left": [54, 56, 60, 76, 126, 133, 134, 135, 139, 145, 151, 153, 154, 160, 163, 166, 168, 171, 173, 177, 215, 244, 356, 357, 362, 363], "untouch": [54, 60, 126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 177], "_max_run": 54, "dataset_asterix": 54, "asterix": 54, "dataset_pong": 54, "sample_from_al": [54, 71, 74], "buffer_id": [54, 74, 79], "hidden": [54, 109, 115, 128, 192, 200, 202, 203, 204, 206, 207, 208, 209, 220, 221, 226, 227, 237, 238, 239, 241, 252, 255, 264, 277, 280, 350, 358, 366, 373], "exclusive_field": [54, 366], "stack_dim": [54, 366], "data_path": [54, 55, 56, 57, 58, 59, 60, 61, 62], "data_path_root": [54, 55, 56, 57, 58, 59, 60, 61, 62], "delet": [54, 55, 56, 57, 58, 59, 60, 61, 62, 130, 320], "chunksiz": [54, 55, 56, 57, 58, 59, 60, 61, 62], "pool": [54, 55, 56, 57, 58, 59, 60, 61, 62, 166], "max_tasks_per_child": [54, 55, 56, 57, 58, 59, 60, 61, 62], "worker_thread": [54, 55, 56, 57, 58, 59, 60, 61, 62], "index_with_gener": [54, 55, 56, 57, 58, 59, 60, 61, 62], "pbar": [54, 55, 56, 57, 58, 59, 60, 61, 62, 355, 357, 358, 367, 368, 369], "dest": [54, 55, 56, 57, 58, 59, 60, 61, 62, 151, 171, 173, 252], "num_fram": [54, 55, 56, 57, 58, 59, 60, 61, 62], "unitari": [54, 55, 56, 57, 58, 59, 60, 61, 62, 369], "minariexperiencereplai": [54, 55, 56, 57, 59, 60, 61, 62], "1000000": [54, 55, 56, 57, 58, 59, 60, 61, 62], "distance_from_origin": [54, 55, 56, 57, 58, 59, 60, 61, 62], "forward_reward": [54, 55, 56, 57, 58, 59, 60, 61, 62], "qpo": [54, 55, 56, 57, 58, 59, 60, 61, 62], "qvel": [54, 55, 56, 57, 58, 59, 60, 61, 62], "reward_ctrl": [54, 55, 56, 57, 58, 59, 60, 61, 62, 109], "reward_forward": [54, 55, 56, 57, 58, 59, 60, 61, 62], "reward_surv": [54, 55, 56, 57, 58, 59, 60, 61, 62], "x_posit": [54, 55, 56, 57, 58, 59, 60, 61, 62, 109], "x_veloc": [54, 55, 56, 57, 58, 59, 60, 61, 62, 109], "y_posit": [54, 55, 56, 57, 58, 59, 60, 61, 62], "y_veloc": [54, 55, 56, 57, 58, 59, 60, 61, 62], "achieved_go": [54, 55, 56, 57, 58, 59, 60, 61, 62], "desired_go": [54, 55, 56, 57, 58, 59, 60, 61, 62], "27": [54, 55, 56, 57, 58, 59, 60, 61, 62, 85, 86, 109, 115, 354, 355, 356, 357, 362, 368, 369, 372], "_collate_id": [54, 55, 56, 57, 58, 59, 60, 61, 62], "0x120e21dc0": [54, 55, 56, 57, 58, 59, 60, 61, 62], "cattensor": [54, 55, 56, 57, 58, 59, 60, 61, 62, 89, 93, 109, 115, 339, 355, 366, 369, 374], "cat_tensor": [54, 55, 56, 57, 58, 59, 60, 61, 62], "cat_next_tensor": [54, 55, 56, 57, 58, 59, 60, 61, 62], "new_storag": [54, 55, 56, 57, 58, 59, 60, 61, 62], "31": [54, 55, 56, 57, 58, 59, 60, 61, 62, 98, 99, 355, 356, 357, 367, 369], "full_storag": [54, 55, 56, 57, 58, 59, 60, 61, 62], "0x168406fc0": [54, 55, 56, 57, 58, 59, 60, 61, 62], "from_env": 56, "use_truncated_as_don": 56, "direct_download": 56, "terminate_on_end": 56, "env_kwarg": [56, 61, 62, 126, 344, 345, 355], "reconstruct": [56, 76, 77, 273, 355, 374], "get_dataset": 56, "qlearning_dataset": 56, "fewer": [56, 76], "possess": 56, "unexpectedli": 56, "traj_split": 56, "observationnorm": [56, 175, 346, 355, 356, 357, 358, 373], "maze2d": 56, "umaz": 56, "loc": [56, 89, 93, 109, 115, 145, 147, 158, 205, 219, 231, 232, 237, 238, 239, 249, 253, 255, 262, 263, 276, 280, 281, 282, 283, 334, 339, 346, 350, 355, 356, 357, 358, 360, 368, 373], "gen": 57, "dgrl": 57, "accompani": [57, 126, 163], "gap": 57, "2312": 57, "05742": 57, "gen_dgrl": 57, "procgen": 57, "bigfish": 57, "bossfight": 57, "categori": [57, 350, 352], "1m_e": 57, "1m_": 57, "comma": 57, "npy": 57, "extract": [57, 125, 246, 355, 357, 373], "mmap": [57, 61, 62], "minut": [57, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "internet": [57, 62], "connect": [57, 62], "minari": 58, "websit": [58, 60], "currenrtli": 58, "minari_data": 58, "door": 58, "torchrl_logg": [58, 364], "28": [58, 215, 354, 356, 357, 367, 369, 370, 372], "door_body_po": 58, "dua": 59, "graff": 59, "2017": 59, "uci": 59, "archiv": 59, "ic": 59, "edu": 59, "ml": 59, "sklearn": [59, 108], "adult_num": [59, 108], "adult_onehot": [59, 108], "mushroom_num": [59, 108], "mushroom_onehot": [59, 108], "covertyp": [59, 108], "shuttl": [59, 108], "magic": [59, 108, 359], "shuffl": [60, 75, 77, 368], "embodi": [60, 370], "22": [60, 76, 77, 174, 354, 355, 356, 358, 361, 369, 370, 372], "institut": 60, "demonstr": [60, 357, 362, 367, 368, 369, 371, 374], "527": [60, 369], "skill": 60, "160266": 60, "googl": [60, 61, 85, 86, 103, 104, 357, 358, 367, 368], "open_x_embodi": 60, "2310": [60, 112], "08864": 60, "language_instruct": 60, "get_non_tensor": 60, "neither": [60, 369], "nor": 60, "insuffici": 60, "chosen": [60, 116, 117, 164, 165, 224, 225, 233, 251, 313, 339, 350, 363], "openx": 60, "__will": 60, "change__": 60, "randomli": [60, 75, 146, 147, 165, 244, 249, 253, 360, 367, 368, 369, 371], "crop": [60, 131, 152, 313], "modal": [60, 355], "cmu_stretch": [60, 313], "is_init": [60, 62, 128, 144, 204, 208, 247, 248, 358], "language_embed": 60, "512": [60, 201, 356, 369], "lift": 60, "green": [60, 367], "garbag": 60, "lid": 60, "roboset": 61, "h5": [61, 62], "roboh": [61, 112], "concis": [61, 361], "75": [61, 356, 358, 369, 371], "totensor": 62, "image_s": 62, "v": [62, 175, 202, 203, 206, 207, 237, 269, 276, 283, 350, 355, 356], "npz": 62, "2206": [62, 106, 107], "04779": [62, 263, 268], "vd4rl": 62, "squar": [62, 131, 205, 231, 232, 313], "rectangular": [62, 189, 190], "walker_walk": 62, "64px": 62, "height": [62, 131, 155], "veloc": [62, 87, 88, 89, 93, 109, 115, 129, 367, 368, 369, 374], "infinit": [63, 103, 104, 116, 117, 362, 371], "three": [63, 350, 352, 357, 359, 360, 367, 368, 369, 371, 374], "block": [63, 64, 84, 350, 358, 367], "pairwisedataset": [63, 348], "256": [63, 103, 104, 196, 355, 356, 357, 367, 368, 369], "immut": [64, 89, 93, 109, 115, 154, 169], "piec": [64, 72, 81, 83, 84, 355, 356, 357, 363, 367, 368, 369, 371], "scratch_dir": [65, 355, 371], "sent": [65, 66, 82, 175], "mistak": [65, 66, 82], "myclass": [65, 66, 82], "foo": [65, 66, 82, 241, 371, 374], "bar": [65, 66, 82, 241, 323, 324, 326, 330, 352, 356], "attach": [65, 66, 67, 78, 79, 82, 356], "entiti": [65, 66, 67, 78, 79, 82], "zero_": [66, 82, 183], "max_capac": [68, 69, 355, 371], "data_0": 68, "data_1": 68, "smoothen": 68, "tdrb": 68, "pack": [68, 202, 206, 357, 359, 374], "end_kei": [69, 76, 77], "cache_valu": [69, 76, 77], "readili": [69, 76, 77], "conjunct": [69, 76, 77, 356], "Will": [69, 76, 89, 106, 313], "buffer0": [69, 76], "immutablewrit": [69, 76], "buffer1": [69, 76], "other_sampl": [69, 76], "short": [69, 76, 77, 85, 86, 98, 99, 109, 179, 206, 207, 356, 357, 359, 360, 368, 371], "unsqueez": [69, 123, 126, 129, 130, 167, 170, 209, 355, 358, 367, 368, 369], "tolist": 69, "120110917137936e": 69, "06": [69, 197, 230, 355, 356, 357, 367, 368, 369], "uniformli": [70, 278, 374], "storageensembl": [71, 74], "samplerensembl": 71, "writerensembl": [71, 79], "num_buffer_sampl": [71, 74], "ensembl": [71, 74, 79, 84, 252, 281], "forbidden": 71, "collat": 71, "0x13a2ef430": 71, "0x13a2f9310": 71, "interpol": [71, 155, 356, 358], "interpolationmod": [71, 358], "bilinear": [71, 155, 358], "0x13a2f9220": 71, "0x13a2f9f70": 71, "0x13a2d9b50": 71, "0x13a2f95b0": 71, "0x128648260": 71, "roundrobin": [72, 81], "incomplet": [75, 77], "fresh": 75, "haven": [75, 370], "remain": [75, 128, 135, 136, 145, 164, 218, 361], "draw": [75, 244], "slicesamplerwithoutreplac": [76, 371], "320": [76, 77, 87, 88, 356, 369], "700": [76, 77], "dataid": [76, 77], "__len__": 78, "rank_kei": 80, "rank": [80, 188], "samplerwithoutreplac": [80, 357, 368, 371], "get_insert_index": 80, "convers": [85, 86, 98, 99, 351], "2106": [85, 86, 267], "13281": [85, 86], "categorical_action_encod": [85, 86, 89, 92, 93, 94, 95, 98, 99, 106, 107, 109, 112, 115], "frame_skip": [85, 86, 87, 88, 92, 93, 94, 95, 98, 99, 100, 101, 106, 107, 112, 142, 323, 326, 333, 352, 355, 356, 357, 373], "repeat": [85, 86, 87, 88, 92, 94, 95, 98, 99, 106, 107, 112, 188, 357, 367, 368, 369], "allow_done_after_reset": [85, 86, 87, 88, 89, 92, 94, 95, 98, 99, 106, 107, 112], "toler": [85, 86, 87, 88, 92, 94, 95, 98, 99, 106, 107, 112, 197, 230], "availalb": [85, 86, 98, 99], "ant": [85, 86, 89, 93, 96, 109, 115, 370], "87": [85, 86, 355, 356, 369, 370], "acrobot": [85, 86, 87, 88, 374], "advant": [85, 86, 98, 99], "timer": [85, 86, 98, 99], "timeit": [85, 86, 98, 99], "310": [85, 86, 369], "ms": [85, 86, 98, 99], "268": [85, 86, 369], "433": [85, 86, 369], "80": [85, 86, 355, 356, 357, 367, 368, 369, 370], "213": [85, 86, 369], "8605": [85, 86], "pipelineenv": 86, "get_environ": 86, "dm_control": [87, 88, 355, 366, 374], "2006": [87, 88, 263, 268, 369], "12983": [87, 88], "task_nam": [87, 89, 93, 109, 115], "pixels_onli": [87, 88, 92, 94, 95, 112, 355, 356, 363, 364, 373, 374], "cheetah": [87, 88, 89, 93, 109, 115, 313, 355], "240": [87, 88, 369, 373], "swingup": [87, 88, 374], "swingup_spars": [87, 88], "ball_in_cup": [87, 88], "catch": [87, 88], "balance_spars": [87, 88], "three_pol": [87, 88], "two_pol": [87, 88], "finger": [87, 88], "turn_easi": [87, 88], "turn_hard": [87, 88], "fish": [87, 88], "upright": [87, 88, 356], "swim": [87, 88], "hopper": [87, 88], "hop": [87, 88], "humanoid": [87, 88, 109, 115, 366], "walk": [87, 88, 109, 115, 356, 366], "run_pure_st": [87, 88], "bring_bal": [87, 88], "bring_peg": [87, 88], "insert_bal": [87, 88], "insert_peg": [87, 88], "point_mass": [87, 88], "reacher": [87, 88], "swimmer": [87, 88], "swimmer6": [87, 88], "swimmer15": [87, 88], "walker": [87, 88], "dog": [87, 88], "trot": [87, 88], "humanoid_cmu": [87, 88], "lqr": [87, 88], "lqr_2_1": [87, 88], "lqr_6_2": [87, 88], "quadrup": [87, 88], "escap": [87, 88], "stacker": [87, 88], "stack_2": [87, 88], "stack_4": [87, 88], "deviceless": [89, 359, 361, 362, 363], "run_type_check": [89, 105], "counterenv": 89, "unboundedcontinuoustensorspec": [89, 93, 105, 109, 115, 123, 126, 134, 137, 153, 165, 183, 188, 212, 236, 252, 255, 257, 282, 348, 357, 358, 367, 368, 369, 374], "continuousbox": [89, 93, 109, 115, 183, 357, 367, 368, 369, 373, 374], "sort": [89, 93, 109, 115, 130, 248], "another_act": [89, 93, 109, 115], "mutabl": [89, 93, 109, 115], "_callabletransform": [89, 93, 109, 115], "batch_lock": [89, 91, 93, 109, 115, 126, 165, 169, 369], "done_keys_group": [89, 93, 109, 115], "outer": [89, 93, 109, 115, 352, 355, 356, 374], "another_don": [89, 93, 109, 115], "empty_cach": [89, 93, 109, 115, 169], "fake_tensordict": [89, 93, 109, 115, 356], "fake": [89, 93, 109, 115, 355, 356], "afterward": [89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259, 367, 374], "silent": [89, 93, 109, 115, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 219, 220, 221, 223, 226, 227, 229, 234, 240, 241, 243, 244, 247, 248, 251, 256, 259], "braxenv": [89, 93, 109, 115, 154, 348, 359], "envnam": [89, 93, 109, 115], "pipeline_st": [89, 93, 109, 115], "attibut": [89, 93, 109, 115], "maybe_reset": [89, 93, 109, 115], "speak": [89, 93, 109, 115, 355], "rand_act": [89, 93, 102, 109, 110, 111, 115, 126, 359], "register_gym": [89, 93, 109, 115, 359], "entry_point": [89, 93, 109, 115], "info_kei": [89, 93, 109, 115], "reward_threshold": [89, 93, 109, 115], "nondeterminist": [89, 93, 109, 115], "max_episode_step": [89, 92, 93, 94, 109, 115], "order_enforc": [89, 93, 109, 115], "autoreset": [89, 93, 109, 115], "disable_env_check": [89, 92, 93, 106, 107, 109, 115], "apply_api_compat": [89, 93, 109, 115], "nasium": [89, 93, 109, 115], "scope": [89, 93, 109, 115, 374], "dmcontrolenv": [89, 93, 109, 115, 313, 348, 355, 359, 366, 374], "dmc": [89, 93, 109, 115], "removeemptyspec": [89, 93, 109, 115], "threshold": [89, 93, 109, 115, 244, 263, 264, 357], "learnt": [89, 93, 109, 115, 342], "knowledg": [89, 93, 109, 115, 361], "checker": [89, 92, 93, 106, 107, 109, 115], "stepapicompat": [89, 93, 109, 115], "concept": [89, 93, 109, 115, 356, 371], "deem": [89, 93, 103, 104, 109, 115, 116, 117], "envgym": [89, 93, 109, 115], "0855": [89, 93, 109, 115], "0215": [89, 93, 109, 115], "0881": [89, 93, 109, 115], "0412": [89, 93, 109, 115], "1101": [89, 93, 109, 115], "0080": [89, 93, 109, 115], "0254": [89, 93, 109, 115], "0424": [89, 93, 109, 115], "9609e": [89, 93, 109, 115], "9776e": [89, 93, 109, 115], "04": [89, 93, 97, 109, 115, 355, 356, 357, 368, 369, 370], "6347e": [89, 93, 109, 115], "3842e": [89, 93, 109, 115], "5338e": [89, 93, 109, 115], "3064e": [89, 93, 109, 115], "0381e": [89, 93, 109, 115], "6656e": [89, 93, 109, 115], "05": [89, 93, 109, 115, 355, 356, 369, 370], "0204e": [89, 93, 109, 115], "action_spac": [89, 93, 109, 115, 138, 199, 225, 242, 243, 250, 251, 262, 263, 265, 266, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 358, 360, 364], "0833": [89, 93, 109, 115], "0275": [89, 93, 109, 115], "0612": [89, 93, 109, 115], "0770": [89, 93, 109, 115, 369], "1256": [89, 93, 109, 115, 369], "0082": [89, 93, 109, 115], "0186": [89, 93, 109, 115], "0476": [89, 93, 109, 115], "2221": [89, 93, 109, 115], "2256": [89, 93, 109, 115], "5930": [89, 93, 109, 115], "6937": [89, 93, 109, 115], "5865": [89, 93, 109, 115], "5479": [89, 93, 109, 115], "0187": [89, 93, 109, 115], "6825": [89, 93, 109, 115, 369], "5224": [89, 93, 109, 115], "0018": [89, 93, 109, 115, 369], "1005": [89, 93, 109, 115], "0335": [89, 93, 109, 115], "0268": [89, 93, 109, 115, 369], "0133": [89, 93, 109, 115], "0627": [89, 93, 109, 115], "0074": [89, 93, 109, 115, 369], "0488": [89, 93, 109, 115, 369], "0353": [89, 93, 109, 115], "0075": [89, 93, 109, 115, 369], "0069": [89, 93, 109, 115, 369], "0098": [89, 93, 109, 115, 369], "0058": [89, 93, 109, 115, 369], "0033": [89, 93, 109, 115, 369], "0157": [89, 93, 109, 115], "0004": [89, 93, 109, 115, 369], "0381": [89, 93, 109, 115], "0452": [89, 93, 109, 115], "11355747": [89, 93, 109, 115], "04257728": [89, 93, 109, 115], "00408397": [89, 93, 109, 115], "04155852": [89, 93, 109, 115], "0389733": [89, 93, 109, 115], "01409826": [89, 93, 109, 115], "0978704": [89, 93, 109, 115], "08808327": [89, 93, 109, 115], "03970837": [89, 93, 109, 115], "00535434": [89, 93, 109, 115], "02353762": [89, 93, 109, 115], "05116226": [89, 93, 109, 115], "02788907": [89, 93, 109, 115], "06848346": [89, 93, 109, 115], "05154399": [89, 93, 109, 115], "0371798": [89, 93, 109, 115], "05128025": [89, 93, 109, 115], "dydact": [89, 93, 109, 115], "gym_env": [89, 93, 109, 115, 373], "reset_kei": [89, 93, 109, 115, 129, 159, 164, 165, 166, 367], "multitask": [89, 93, 109, 115], "multiag": [89, 93, 102, 109, 110, 111, 115, 187, 216, 224, 233, 291], "another_reward": [89, 93, 109, 115], "auto_cast_to_devic": [89, 93, 109, 115, 368], "return_contigu": [89, 93, 109, 115, 179, 366], "soon": [89, 93, 109, 110, 111, 115], "__sort": [89, 93, 109, 115], "as__": [89, 93, 109, 115], "normal": [89, 93, 109, 115, 147, 175, 189, 190, 205, 210, 213, 214, 219, 231, 232, 240, 249, 253, 264, 277, 280, 326, 328, 346, 350, 352, 358, 360, 368, 374], "argmaxmodul": [89, 93, 109, 115], "n_ob": [89, 93, 109, 115, 145, 247, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 361], "n_act": [89, 93, 109, 115, 145, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 361], "ourselv": [89, 93, 109, 115, 357, 374], "emul": [89, 93, 109, 115], "epoch": [89, 93, 109, 115, 330, 357, 367, 368], "input_td": [89, 93, 109, 115], "rollout_td": [89, 93, 109, 115], "concomitt": [89, 93, 109, 115], "prevail": [89, 93, 109, 115, 130, 159, 187], "creator": [90, 335, 336, 344, 345, 346], "substitut": [90, 164, 175, 360], "vecnorm": [90, 346], "env_creat": [90, 355], "test_env1": 90, "_td": 90, "observation_count": [90, 374], "test_env2": 90, "sleep": [90, 374], "ps": 90, "p1": 90, "p2": 90, "9934": 90, "env_str": 91, "device_map": 91, "accross": [92, 94], "registri": 92, "asyncvectorenv": 92, "involv": [92, 94, 95, 103, 104, 112, 126, 359, 361], "pixel_observ": [92, 94, 95, 112], "pixelobservationwrapp": [92, 94, 95, 112], "adventur": [92, 94, 374], "airraid": [92, 94, 374], "alien": [92, 94, 374], "time_limit": 92, "timelimit": [92, 103, 104, 116, 117], "default_info_dict_read": [92, 93, 94, 109], "reader": [92, 93, 94, 109, 356], "set_info_dict_read": [92, 93, 94, 109, 359], "info_dict": [92, 93, 94, 109], "auto_register_info_dict": [92, 93, 94, 109], "info_dict_read": [93, 109], "succe": [93, 109], "halfcheetah": [93, 109, 155, 339, 355], "register_info_dict": 93, "read_act": 93, "read_don": 93, "nonsens": 93, "fallback": 93, "broken": [93, 179], "read_ob": 93, "dictat": [93, 249, 253, 280, 355, 369], "read_reward": 93, "baseinfodictread": 93, "hoc": [93, 109, 360], "dict_read": 93, "my_info_kei": 93, "some_env": 93, "vecenv": 94, "vectorenv": 94, "secur": 95, "habitat3": 95, "ai": [95, 370], "habitatrenderpick": 95, "isaacgym": [96, 97], "isaacgymwrapp": [96, 348], "isaacgymenv": [97, 348], "webpag": 97, "isaac": 97, "essenc": [97, 359], "instadeepai": [98, 99], "2306": [98, 99], "09884": [98, 99], "snake": [98, 99], "grid": [98, 99, 313], "bodi": [98, 99], "body_st": [98, 99], "fruit_posit": [98, 99], "col": [98, 99], "row": [98, 99], "head_posit": [98, 99], "tail": [98, 99], "game2048": [98, 99], "maze": [98, 99], "cleaner": [98, 99], "cvrp": [98, 99], "multicvrp": [98, 99], "minesweep": [98, 99], "rubikscub": [98, 99], "knapsack": [98, 99], "sudoku": [98, 99], "tsp": [98, 99], "connector": [98, 99], "v2": [98, 99, 113, 114, 288, 302, 303, 304, 305, 307, 308, 309, 310, 358], "mmst": [98, 99], "graphcolor": [98, 99], "partli": [98, 99], "scrambl": [98, 99], "robotwarehous": [98, 99], "tetri": [98, 99], "binpack": [98, 99], "jobshop": [98, 99], "0x1fca91910": 98, "122": [98, 99, 369, 374], "0x1ff9baee0": 98, "134": [98, 99, 369, 371], "0x1ff9ba7c0": 98, "172": [98, 99, 369], "rubric": [99, 147, 255], "mo": [100, 101], "minecart": [100, 101], "mo_gym": 101, "qualnam": [102, 361], "leverag": [102, 110, 111, 355, 368, 374], "neural": [102, 110, 111, 189, 190, 228, 252, 350, 356, 357, 358, 360, 367, 368, 369, 374], "group_map": [102, 103, 104, 110, 111, 116, 117, 118, 367], "constructiuon": [102, 110, 111], "premad": [102, 103, 104, 110, 111, 116, 117, 291], "all_in_one_group": [102, 118], "agent_0": [102, 110, 111, 118, 367], "agent_1": [102, 110, 111, 118], "agent_2": [102, 110, 111, 118], "agent_3": 102, "one_group_per_ag": [102, 110, 111], "meltingpot": [103, 104], "2211": [103, 104], "13746": [103, 104], "melt": [103, 104], "pot": [103, 104], "novel": [103, 104, 361], "social": [103, 104], "familiar": [103, 104, 356, 368, 374], "unfamiliar": [103, 104], "broad": [103, 104], "cooper": [103, 104, 367, 368], "decept": [103, 104], "reciproc": [103, 104], "trust": [103, 104, 208], "stubborn": [103, 104], "substrat": [103, 104], "ml_collect": 103, "config_dict": 103, "configdict": 103, "categorical_act": [103, 104, 110, 111, 113, 114, 116, 117], "marlgroupmaptyp": [103, 104, 110, 111, 116, 117, 118, 348, 367], "agent_nam": [103, 104, 116, 117, 118], "agent_names_to_indices_map": [103, 104, 116, 117], "env_torchrl": [103, 104], "commons_harvest__open": [103, 104], "rgb": [103, 104], "144": [103, 104, 369], "192": [103, 104, 356, 369], "collective_reward": [103, 104], "ready_to_shoot": [103, 104], "88": [103, 104, 113, 114, 355, 356, 369], "substrate_config": 104, "get_config": 104, "mp_env": 104, "build_from_config": 104, "default_player_rol": 104, "environn": 105, "mymbenv": [105, 188, 212], "world_model": [105, 188, 212, 273], "hidden_observ": [105, 188, 212], "mlp": [105, 188, 189, 190, 192, 193, 194, 195, 201, 204, 208, 209, 212, 216, 237, 242, 266, 268, 339, 350, 356, 360, 361, 364, 366, 370, 373], "worldmodelwrapp": [105, 188, 212], "activation_class": [105, 188, 189, 190, 192, 193, 194, 195, 200, 201, 210, 212, 215, 216, 356, 360, 367, 368, 373], "relu": [105, 188, 196, 212, 219, 261], "activate_last_lay": [105, 188, 195, 210, 212], "sail": [106, 107], "sg": [106, 107], "10558": [106, 107], "readthedoc": 106, "en": 106, "python_interfac": 106, "envpoolmixin": 107, "env_bas": 107, "task_id": 107, "env_typ": 107, "gym_reset_return_info": 107, "envpool_env": 107, "www": [108, 213, 214], "fetch_openml": 108, "106": [108, 369], "my_env_fun": [109, 115], "custom_attribute_list": [109, 115], "custom_attribut": [109, 115], "custom_method_list": [109, 115], "custom_method": [109, 115], "deploi": [109, 115, 126], "slight": [109, 115, 356], "share_individual_td": [109, 115], "shared_memori": [109, 115], "policy_proof": [109, 115], "ll": [109, 115, 202, 203, 206, 207, 355, 356, 357, 358, 359, 360, 361, 362, 364, 368, 374], "serial_for_singl": [109, 115, 356], "list_of_kwarg": [109, 115], "com_veloc": [109, 115], "extrem": [109, 115, 262, 264, 277, 280, 282], "head_height": [109, 115], "joint_angl": [109, 115], "torso_vert": [109, 115], "stringent": [109, 357, 367, 368], "inter": 109, "penv": 109, "tensordictprim": [109, 358], "reward_run": 109, "env_fix": 109, "drastic": [109, 371], "influenc": 109, "thumb": [109, 357], "suppos": [109, 326, 352, 374], "myenv": [109, 126, 134, 137], "pipe": 109, "update_kwarg": [109, 115], "pettingzoo": [110, 111, 367, 368], "pet": [110, 111], "zoo": [110, 111], "__": [110, 111], "aecenv": [110, 111], "use_mask": [110, 111], "dead": [110, 111], "done_on_ani": [110, 111, 367], "compulsori": [110, 111], "adversary_0": [110, 111, 367], "adversari": [110, 111, 367], "vectoris": [110, 111, 202, 203, 206, 207], "sisl": 110, "multiwalker_v9": 110, "return_st": [110, 111], "aec": [110, 111], "n_piston": [110, 111], "pistonball_v6": [110, 111], "piston": [110, 111], "piston_0": [110, 111], "piston_1": [110, 111], "piston_20": [110, 111], "tictactoe_v3": [110, 111], "player": [110, 111], "player_1": [110, 111], "player_2": [110, 111], "butterfli": 111, "parallel_env": [111, 355, 373, 374], "vikashplu": 112, "wiki": 112, "06828": 112, "from_depth": 112, "smacv2": [113, 114], "starcraft": [113, 114], "challeng": [113, 114, 359, 369, 370], "10gen_terran": [113, 114], "10gen_zerg": [113, 114], "10gen_protoss": [113, 114], "3m": [113, 114], "8m": [113, 114, 370], "25m": [113, 114], "5m_vs_6m": [113, 114], "8m_vs_9m": [113, 114], "10m_vs_11m": [113, 114], "27m_vs_30m": [113, 114], "mmm": [113, 114], "mmm2": [113, 114], "2s3z": [113, 114], "3s5z": [113, 114], "3s5z_vs_3s6z": [113, 114], "3s_vs_3z": [113, 114], "3s_vs_4z": [113, 114], "3s_vs_5z": [113, 114], "1c3s5z": [113, 114], "2m_vs_1z": [113, 114], "corridor": [113, 114], "6h_vs_8z": [113, 114], "2s_vs_1sc": [113, 114], "so_many_banel": [113, 114], "bane_vs_ban": [113, 114], "2c_vs_64zg": [113, 114], "old": [113, 114, 277, 374], "smac": [113, 114], "map_nam": [113, 114], "176": [113, 114, 369], "battle_won": [113, 114], "dead_al": [113, 114], "dead_enemi": [113, 114], "episode_limit": [113, 114], "322": [113, 114, 369], "Or": [113, 114, 215], "procedur": [113, 114], "distribution_config": [113, 114], "n_unit": [113, 114], "n_enemi": [113, 114], "team_gen": [113, 114], "dist_typ": [113, 114], "weighted_team": [113, 114], "unit_typ": [113, 114], "marin": [113, 114], "maraud": [113, 114], "medivac": [113, 114], "exception_unit_typ": [113, 114], "start_posit": [113, 114], "surrounded_and_reflect": [113, 114], "map_x": [113, 114], "map_i": [113, 114], "capability_config": [113, 114], "131": [113, 114, 369], "starcraft2env": 114, "proroklab": [116, 117], "vectorizedmultiagentsimul": [116, 117], "2207": [116, 117], "03530": [116, 117], "basescenario": 116, "descript": [116, 125, 356, 357], "perfrom": [116, 117], "defaultt": 116, "continuous_act": [116, 117, 311, 367, 368], "repositiori": 116, "sparsiti": 116, "unbatched_action_spec": [116, 117, 368], "unbatched_observation_spec": [116, 117], "unbatched_reward_spec": [116, 117], "het_spec": [116, 117], "het_specs_map": [116, 117], "flock": [116, 117, 311], "agent_collision_rew": [116, 117], "agent_distance_rew": [116, 117], "ca": 118, "environment4": 118, "get_group_map": 118, "sumbodul": 119, "model_bas": [120, 121, 188, 212], "out_keys_inv": [120, 132, 134, 135, 137, 147, 148, 149, 153, 154, 161, 168, 369], "decod": [120, 220], "model_based_env": [120, 272], "dreamerenv": [120, 272, 348], "model_based_env_ev": 120, "masker": 123, "tensor_spec": [123, 178, 187, 269, 270, 280, 282], "binarydiscretetensorspec": [123, 266, 269, 270, 291, 348], "maskedenv": 123, "ones_lik": 123, "scatter": 123, "_set_se": [123, 126, 134, 137, 153, 369], "fill_float": 125, "fill_int": 125, "fill_bool": 125, "someenvclass": 125, "autoresetenv": 125, "argumet": 125, "fooenv": 125, "sign": [125, 161, 293, 367], "envtyp": 125, "reshape_fn": 126, "reset_func": 126, "environmt": 126, "request": [126, 152], "tensordict_batch_s": 126, "els": [126, 202, 203, 206, 207, 220, 350, 352, 355, 356, 357, 358, 367, 368, 369, 370], "tensordict_reset": [126, 369], "transform_env_batch_s": [126, 133, 168, 177], "transform_input_spec": [126, 133, 134, 135, 136, 147, 149, 153, 154, 159, 163, 164, 165, 168, 170, 172, 177], "transform_output_spec": [126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 177], "transform_observation_spec": [126, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 143, 144, 145, 147, 149, 153, 154, 155, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 177, 369], "transform_reward_spec": [126, 127, 132, 133, 134, 135, 139, 145, 153, 154, 157, 158, 159, 160, 161, 163, 168, 170, 177], "transformfull_done_spec": [126, 133, 134, 135, 139, 145, 153, 154, 160, 163, 168, 177], "biner": 127, "burn_in": 128, "burn": 128, "date": [128, 316], "retur": 128, "burnt": 128, "gru_modul": [128, 204], "input_s": [128, 202, 203, 204, 206, 207, 208, 209, 358], "hidden_s": [128, 202, 203, 204, 206, 207, 208, 209, 358], "set_recurrent_mod": [128, 204, 208, 358], "burn_in_transform": 128, "gru": [128, 203, 204], "num_lay": [128, 202, 204, 206, 208, 220, 221], "86": [128, 355, 356, 369, 370], "3008": [128, 356], "0344": 128, "padding_valu": [129, 213, 214], "as_invers": 129, "movement": 129, "1312": [129, 356], "5602": 129, "unsqueezetransform": [129, 369, 371], "consumpt": 129, "followin": 129, "pictur": 129, "pixels_trsf": [129, 371], "grayscal": [129, 356, 358, 371, 374], "data_exclud": [129, 371], "del_kei": [130, 171, 366, 369], "unsqueeze_if_oor": 130, "observation_posit": 130, "observation_veloc": 130, "key1": [130, 321, 329], "key2": [130, 321, 329], "center": [131, 313], "width": [131, 155], "scalar": [132, 157, 193, 195, 217, 218, 240, 244, 245, 248, 259, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 350, 356, 361, 369], "permit": [132, 141, 170, 262, 264, 277, 280, 282], "rewardsc": [133, 169, 355, 356, 358], "rewardclip": 133, "transformed_env": [133, 168, 169, 359], "transform_env_devic": [133, 135, 168, 177], "dtype_in": 134, "dtype_out": 134, "scan": [134, 137, 254, 255], "resp": [134, 137], "not_transform": [134, 137], "constructedw": [134, 137], "orig_devic": 135, "unspecifi": 135, "transform_done_spec": [135, 168, 177], "num_actions_effect": 136, "max_act": 136, "include_forward": 136, "num_act": [136, 270, 360], "action_out": 136, "_call": [136, 141, 369], "eol_kei": 138, "lives_kei": 138, "eol_attribut": 138, "unwrap": 138, "breakout": 138, "210": [138, 149, 355, 369], "160": [138, 149, 356, 369], "eol_transform": 138, "eol": 138, "dqnloss": [138, 262, 263, 265, 268, 270, 271, 272, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 291, 337, 348, 351, 356, 358, 364], "register_kei": 138, "loss_or_advantag": 138, "lossmodul": [138, 330, 341, 342, 348], "valueestimatorbas": [138, 278, 348], "excluded_kei": 139, "finit": [140, 360, 371], "first_dim": 141, "last_dim": 141, "allow_positive_dim": [141, 170], "th": [141, 170, 202, 206, 369], "frameskip": 141, "repeatedli": [142, 357, 368], "init_kei": [144, 247], "tracker": 144, "pi_curr": 145, "pi_0": 145, "overfit": 145, "probabilist": [145, 249, 348, 357, 373], "get_dist": [145, 253, 254], "mod": [145, 204, 208, 247, 256, 358, 364], "normalparamextractor": [145, 350, 357, 360, 368], "probabilisticactor": [145, 237, 238, 239, 241, 262, 263, 267, 269, 270, 276, 279, 280, 281, 282, 283, 285, 350, 355, 357, 360, 367, 368], "tanhnorm": [145, 237, 238, 239, 249, 255, 262, 263, 276, 280, 281, 282, 283, 285, 348, 357, 368, 373], "return_log_prob": [145, 237, 238, 239, 249, 253, 255, 282, 350, 357, 360, 367, 368, 373], "apply_": 145, "copy_": [145, 355], "formulat": 145, "diverg": [145, 204, 208, 249, 253, 273, 277], "noop": [146, 373], "trial": 146, "standard_norm": [147, 158, 355, 356, 358], "affin": [147, 158], "layer": [147, 175, 189, 190, 192, 193, 198, 200, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 217, 218, 220, 221, 228, 229, 235, 246, 256, 350, 356, 357, 358, 360, 367, 370], "set_default_tensor_typ": 147, "doubletensor": 147, "isclos": 147, "next_ob": [147, 293, 294, 295, 296, 373], "init_stat": [147, 355, 356, 357, 358], "3752e": 147, "5087e": 147, "9294e": 147, "9636": 147, "5608": 147, "6408": 147, "num_it": [147, 356, 357], "reduce_dim": [147, 355, 356, 357, 358], "cat_dim": [147, 355, 356, 357, 358], "keep_dim": [147, 356, 358], "statist": [147, 175, 282, 346, 355, 356, 357, 374], "gaussian": [147, 165, 188, 212, 217, 218, 223, 240, 357, 367], "empir": [147, 188, 212, 249, 253, 355, 357, 368], "3d": [147, 189], "third": [147, 243, 367, 368], "reorder": 149, "in_keys_in": 149, "channel": [149, 167, 215, 220, 221, 356], "r3m": [151, 370], "resnet": [151, 171, 173], "visual": [151, 171, 173, 313, 357, 367, 369], "embed": [151, 171, 172, 173, 192, 224, 236, 237, 238, 239, 252, 257, 370], "ego4d": [151, 171, 173], "univers": [151, 171, 173, 359], "suraj": [151, 171], "nair": [151, 171], "aravind": [151, 171], "rajeswaran": [151, 171], "vikash": [151, 171, 173], "kumar": [151, 171, 173], "chelsea": [151, 171], "finn": [151, 171], "abhinav": [151, 171], "gupta": [151, 171], "2203": [151, 171, 212, 370], "12601": [151, 171, 370], "_init": [151, 171, 355], "snippet": [151, 171, 355], "resnet50": [151, 173, 370], "model_nam": [151, 171, 173, 316], "resnet34": 151, "resnet18": 151, "r3m_vec": [151, 370], "feed": [151, 173, 278, 350, 355, 367, 368, 371], "stack_imag": [151, 173], "tread": [151, 173], "separet": [151, 173], "hub": [151, 173, 359, 370], "resnet50_weight": [151, 173], "imagenet1k_v1": [151, 173], "download_path": [151, 173], "tensor_pixels_kei": [151, 173], "sub_seq_len": 152, "sample_dim": [152, 355], "primarili": [152, 360], "hesit": 152, "robust": 152, "mix": [152, 224, 233, 291, 355, 367, 368], "improp": 152, "dummyenv": 153, "another_oth": 153, "other_reward": 153, "create_copi": 154, "stuff": [154, 362], "newnam": 154, "r2g": 156, "reward_to_go": 156, "bernoulli_": 156, "9010": 156, "9404": [156, 299], "9701": [156, 299], "9900": [156, 299], "0000": [156, 166, 244, 245, 256, 299, 357, 358, 369, 373], "crash": 156, "clamp_min": 157, "clamp_max": 157, "clip_min": 157, "clip_max": 157, "episode_": 159, "reward1": 159, "reward2": 159, "episode_reward": [159, 367, 368], "keep_reward": 160, "keep_don": 160, "logical_or": 161, "squeeze_dim": 162, "step_count_kei": 163, "update_don": 163, "disjunct": 163, "recognis": 163, "target_return": 164, "subtract": 164, "primer": [165, 358], "default_valu": [165, 358], "unit": [165, 188, 200, 202, 203, 220, 221, 226, 227, 357], "transfomedenv": 165, "mykei": 165, "__unless": 165, "exists__": 165, "10th": 166, "0216": 166, "1149": 166, "1990": 166, "2749": 166, "3281": 166, "9290": 166, "3702": 166, "8978": 166, "from_int": 167, "shape_toler": 167, "permuat": 167, "ri": 167, "principl": 168, "cattransform": 168, "notabl": 168, "rewardsum": [168, 177, 186, 367, 368], "smoothli": 169, "add_1": 169, "cache_spec": 169, "set_missing_toler": 169, "keyerror": 169, "unsqueeze_dim": [170, 369], "danger": 170, "vc1": 171, "vc1_vec": 171, "untrain": 171, "make_noload_model": 171, "vip": [172, 173, 370], "implicit": [173, 269, 276, 371], "jason": 173, "ma": 173, "shagun": 173, "sodhani": 173, "dinesh": 173, "jayaraman": 173, "osbert": 173, "bastani": 173, "ami": 173, "zhang": 173, "vip_vec": 173, "final_nam": 174, "sb3": 174, "terminal_obs_read": 174, "truli": [174, 373], "till": 174, "shared_td": 175, "decai": [175, 240, 244, 284, 328, 355, 356, 358, 374], "9999": [175, 369], "0001": [175, 200, 219, 357, 369], "to_observation_norm": 175, "underflow": [175, 328], "build_td_for_shared_vecnorm": 175, "memmori": 175, "queue": [175, 371], "td_share": 175, "state_dim": [176, 191, 196, 223, 226, 227, 241], "action_dim": [176, 191, 192, 194, 196, 223, 241, 355, 366], "gsde": [176, 281, 346], "gsdemodul": 176, "rb_transform": 177, "resist": 177, "insensit": 177, "sensit": [177, 356], "_orig": 177, "95": [177, 212, 287, 356, 357, 358, 368, 369], "tdreset": [177, 366], "window": [177, 247, 367, 371, 373], "edit": [177, 362], "cube": 178, "check_dtyp": 179, "discrep": [179, 262, 264, 265, 266, 277, 280, 282, 291], "temporarili": [179, 362, 371], "rng": [179, 369], "revert": [179, 360, 371], "probabilistictdmodul": [184, 185, 210, 249, 253, 292, 326], "next_tensordict": 186, "keep_oth": [186, 369], "exclude_reward": 186, "exclude_don": 186, "exclude_act": 186, "next_": 186, "funtion": 186, "_stepmdp": 186, "write_full_fals": 187, "_terminated_or_trunc": 187, "entropi": [188, 262, 263, 264, 269, 270, 276, 277, 279, 280, 281, 283, 285, 368], "botev": 188, "2013": 188, "cem": 188, "plan": [188, 211, 212], "varianc": [188, 205, 219, 231, 232, 351, 355, 357, 368], "k": [188, 202, 203, 206, 207], "maximis": [188, 192, 194, 212, 350, 356, 357, 368], "modelbasedenv": [188, 212], "planning_horizon": [188, 212], "optim_step": [188, 212, 356, 364], "mpc": [188, 211, 212], "num_candid": [188, 212], "candid": [188, 212], "top_k": [188, 212], "modelbasedenvbas": [188, 211, 212, 348], "safemodul": [188, 211, 237, 239, 253, 262, 263, 269, 270, 276, 280, 281, 282, 283, 285, 335, 336, 342, 348, 373], "num_cel": [189, 190, 192, 193, 194, 195, 200, 201, 204, 208, 210, 215, 216, 237, 356, 357, 358, 360, 361, 364, 367, 368, 373], "elu": [189, 190, 192, 193, 194, 195, 200, 201, 215, 356, 373], "activation_kwarg": [189, 190, 210], "norm_class": [189, 190, 192, 193, 210], "norm_kwarg": [189, 190, 210], "bias_last_lay": [189, 190, 192, 193, 194, 195, 201, 210], "aggregator_class": [189, 190, 192, 193, 356, 358, 373], "squashdim": [189, 190, 192, 201, 215, 373], "aggregator_kwarg": [189, 190, 192, 193, 356, 358], "squeeze_output": [189, 190, 192, 193, 356, 358], "cell": [189, 190, 202, 203, 204, 206, 207, 208, 210, 215, 216, 357, 359, 360, 361, 362, 363, 364], "kernel": [189, 190, 201, 209, 215], "cnet": [189, 190], "conv3d": 189, "lazyconv2d": [190, 192, 193, 201, 215, 373], "transformer_config": [191, 223, 241], "decisiontransform": [191, 223], "dtconfig": [191, 196, 223], "2202": [191, 196, 279], "05607": [191, 196, 279], "return_to_go": [191, 196, 223, 241], "conv_net_kwarg": [192, 193], "mlp_net_kwarg": [192, 193, 194], "use_avg_pool": [192, 193], "WITH": [192, 193, 194, 195, 248, 284], "1509": [192, 193, 194, 195, 212, 248, 266, 275, 284, 369], "02971": [192, 193, 194, 195, 248, 284], "reus": [192, 320], "convnet": [192, 193, 201, 215, 358, 360, 373], "ndims_in": 192, "avgpool": [192, 193], "lazylinear": [192, 193, 194, 195, 201, 210, 350, 357, 360, 369, 370, 373], "2304": [192, 356], "adaptiveavgpool2d": [193, 356, 358], "output_s": [193, 356, 358], "squeeze2dlay": 193, "400": [194, 195, 363, 368, 369, 371], "mlp_net_kwargs_net1": 195, "mlp_net_kwargs_net2": 195, "mlp1": 195, "mlp2": 195, "decion": 196, "desdescrib": 196, "n_embd": 196, "n_layer": [196, 202, 206], "n_head": 196, "n_inner": 196, "n_posit": 196, "resid_pdrop": 196, "attn_pdrop": 196, "gpt2config": 196, "atol": [197, 230], "rtol": [197, 230], "batch_shap": [197, 230], "event_shap": [197, 230], "absolut": [197, 230, 355], "densiti": [197, 213, 214, 222, 232], "mass": [197, 213, 214, 222, 232, 369], "rsampl": [197, 214, 222, 253], "sample_shap": [197, 213, 214, 222], "softmax": [198, 214, 222, 242, 243], "var_num": [199, 225, 242, 243, 251], "action_value_kei": [199, 225, 242, 243, 250, 251, 278, 291], "action_mask_kei": [199, 225, 242, 243, 244, 245, 250, 251], "perspect": [199, 243, 271, 357], "1707": [199, 243, 271, 280], "06887": [199, 243, 271], "mult": [199, 216, 225, 242, 243, 250, 251], "tensordict_modul": [199, 202, 203, 206, 207, 225, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 265, 269, 270, 276, 280, 281, 282, 283, 285, 350], "nbin": [199, 242, 350], "customdistributionalqv": 199, "log_softmax": [199, 242], "from_modul": [199, 252, 255, 373], "one_hot": [199, 214, 225], "qvalue_actor": [199, 225, 242, 250, 350], "to_modul": [199, 252, 255, 355, 373], "std_bia": 200, "std_min_val": 200, "belief": [200, 220, 226, 227], "1912": [200, 272, 273, 274], "01603": [200, 272, 273, 274], "softplu": [200, 219, 259, 260, 261], "out_features_valu": 201, "cnn_kwarg": [201, 356], "mlp_kwarg": [201, 209, 356], "duel": 201, "cnn": [201, 215, 356, 360, 373], "06581": 201, "batch_first": [202, 204, 206, 208, 358], "bidirect": [202, 206, 358], "cudnn": [202, 203, 206, 207, 358], "vmap": [202, 203, 206, 207, 209, 234, 252, 255, 373], "rnn": [202, 203, 206, 207, 358, 360], "device_count": [202, 203, 206, 207, 374], "n_in": [202, 203, 206, 207], "n_out": [202, 203, 206, 207], "h0": [202, 203, 206, 207], "h1": [202, 203, 206, 207], "call_gru": [202, 203], "h_out": [202, 203, 206, 207], "batched_cal": [202, 203, 206, 207], "gate": [202, 203, 206], "r_t": 202, "sigma": [202, 203, 205, 206, 207, 231, 232, 240, 248, 357, 367], "w_": [202, 203, 206, 207], "ir": [202, 203], "x_t": [202, 206], "b_": [202, 203, 206, 207], "hr": [202, 203, 206], "h_": [202, 203, 206], "z_t": 202, "iz": [202, 203], "hz": [202, 203], "n_t": 202, "odot": [202, 203, 206, 207], "hn": [202, 203, 206], "h_t": [202, 206], "sigmoid": [202, 203, 206, 207], "hadamard": [202, 203, 206, 207], "multilay": [202, 206], "_t": [202, 206, 368, 369], "ge": [202, 206], "bernoulli": [202, 206], "b_ih": [202, 203, 206, 207, 208], "b_hh": [202, 203, 206, 207, 208], "seq": [202, 204, 206, 208, 247, 358, 364, 366], "h_0": [202, 206, 207], "unbatch": [202, 206], "pack_padded_sequ": [202, 206], "pack_sequ": [202, 206], "num": [202, 206, 364], "_layer": [202, 206], "_size": [202, 203, 206, 207], "h_n": [202, 206], "packedsequ": [202, 206], "weight_ih_l": [202, 206], "learnabl": [202, 203, 206, 207], "w_ir": 202, "w_iz": 202, "w_in": 202, "num_direct": [202, 206], "weight_hh_l": [202, 206], "w_hr": 202, "w_hz": 202, "w_hn": 202, "bias_ih_l": [202, 206], "b_ir": 202, "b_iz": 202, "b_in": 202, "bias_hh_l": [202, 206], "b_hr": 202, "b_hz": 202, "b_hn": 202, "mathcal": [202, 203, 206, 207], "sqrt": [202, 203, 206, 207, 248], "frac": [202, 203, 206, 207, 357], "seq_len": [202, 206], "subtli": 202, "matrix": [202, 206, 217, 218], "contrast": [202, 275, 371], "hx": [202, 203, 206, 207], "lstmcell": [203, 208], "gru_cel": 203, "z": 203, "weight_ih": [203, 207], "weight_hh": [203, 207], "bias_ih": [203, 207], "bias_hh": [203, 207], "rocm": [203, 207], "embedd": [204, 208, 209], "grucel": [204, 252], "python_bas": [204, 208], "recurrent_st": [204, 358], "custom_kei": [204, 208], "recurrent_mod": [204, 208], "rs": [204, 355], "gru_module_train": 204, "policy_train": [204, 208], "traj_td": [204, 208], "policy_infer": [204, 208], "td_inf": [204, 208], "assert_clos": [204, 208], "upscal": [205, 231, 232], "tanh_loc": [205, 231, 232], "event_dim": [205, 230, 231], "ultim": [205, 231, 232], "poor": [205, 231, 232], "explos": [205, 231, 232], "switch": [205, 232, 311], "formula": [205, 231, 232, 262, 264, 277, 280, 351, 357], "proj_siz": 206, "c0": [206, 207], "c1": [206, 207], "call_lstm": [206, 207], "c_out": [206, 207], "i_t": 206, "ii": [206, 207], "hi": [206, 207], "f_t": 206, "hf": [206, 207], "g_t": 206, "ig": [206, 207], "hg": [206, 207], "o_t": 206, "ho": [206, 207], "c_t": 206, "c_": 206, "forget": 206, "1402": 206, "1128": 206, "c_0": [206, 207], "proj": 206, "c_n": 206, "w_ii": 206, "w_if": 206, "w_ig": 206, "w_io": 206, "w_hi": 206, "w_hf": 206, "w_hg": 206, "w_ho": 206, "b_ii": 206, "b_if": 206, "b_ig": 206, "b_io": 206, "b_hi": 206, "b_hf": 206, "b_hg": 206, "b_ho": 206, "weight_hr_l": 206, "_revers": 206, "analog": [206, 360], "cn": 206, "lstm_cell": 207, "h_1": 207, "c_1": 207, "time_step": [207, 209, 247], "cx": 207, "correspont": 208, "recurrent_state_h": [208, 358], "recurrent_state_c": [208, 358], "triplet": [208, 250, 251], "lstm_modul": 208, "rs_h": 208, "rs_c": 208, "hidden0": 208, "hidden1": 208, "lstm_kwarg": 209, "lstm_backend": 209, "next_observ": [209, 262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 366], "2d": [209, 360, 367, 368], "indeic": 209, "hidden0_in": 209, "hidden1_in": 209, "hidden0_out": 209, "hidden1_out": 209, "single_bias_last_lay": 210, "layer_class": 210, "layer_kwarg": 210, "perceptron": [210, 360], "aslo": 210, "42": [210, 262, 263, 265, 269, 276, 283, 354, 356, 357, 363, 369, 372], "noisylinear": [210, 217, 348, 356], "noisylazylinear": [210, 348], "mpcplanner": 211, "tensordict_out": [211, 374], "mppi": 212, "covari": 212, "william": [212, 282], "aldrich": 212, "theodor": 212, "01149": 212, "hansen": 212, "wang": 212, "su": 212, "04955": 212, "valueoper": [212, 237, 238, 239, 262, 263, 264, 265, 270, 276, 277, 280, 281, 282, 283, 285, 342, 350, 355, 357, 361], "tdlambdaestim": [212, 348, 355], "value_net": [212, 266, 268, 282, 293, 294, 295, 296, 357, 360, 361, 364], "adv": 212, "lmbda": [212, 287, 293, 296, 298, 304, 305, 306, 309, 310, 351, 355, 357, 368], "value_network": [212, 265, 266, 268, 269, 271, 276, 283, 293, 294, 295, 296, 351, 355, 357, 361, 364, 367], "temperatur": [212, 263, 269, 276], "neg_inf": [213, 214], "inf": [213, 214], "api_doc": [213, 214], "tf_agent": [213, 214], "event": [213, 214, 222, 302, 303, 304, 305, 307, 308, 309, 310, 371], "unnorm": [213, 214, 222], "sparse_mask": [213, 214], "dens": [213, 214], "0831": [213, 214], "1203": [213, 214], "0928": [213, 214], "1972": [213, 214], "grad_method": [214, 222], "reparamgradientstrategi": [214, 222], "passthrough": [214, 222], "proxi": [214, 222, 351], "relaxedonehot": [214, 222], "zeros_lik": [214, 369], "sample_non_valid": 214, "centralis": [215, 216, 367, 368], "share_param": [215, 216, 367, 368], "homogen": [215, 216, 367, 368], "agent_network": [215, 216], "modulelist": [215, 216, 339, 373], "2592": [215, 356], "decentralis": [215, 367, 368], "n_agent_input": [216, 367, 368], "n_agent_output": [216, 367, 368], "lazili": [216, 369], "toech": 216, "centalis": 216, "shown": [216, 350, 366, 367, 368, 371], "std_init": [217, 218], "initialize_paramet": 217, "isol": [217, 278], "1706": [218, 233], "10295v3": 218, "induc": 218, "aid": 218, "scale_map": 219, "biased_softplus_1": 219, "scale_lb": [219, 226, 227], "module_norm": 219, "1803": [220, 221, 224], "10122": [220, 221], "rnn_hidden": 220, "latent": 221, "excacli": 222, "inres": 223, "mu": [223, 248, 357], "state_shap": [224, 291], "mixing_embed_dim": [224, 291], "qmix": [224, 367, 368], "mixer": [224, 233, 291], "monoton": 224, "hyper": 224, "11485": 224, "qmixerloss": [224, 233], "qmix_vdn": [224, 233], "vdn": [224, 233], "greedi": [225, 243, 244, 245, 251, 356, 358, 360], "hidden_dim": [226, 227], "posterior": [226, 273], "rssm": [226, 227, 273], "1811": [226, 227], "04551": [226, 227], "obs_embed": 226, "rnn_hidden_dim": 227, "dream": 227, "tanhtransform": 231, "decomposit": 233, "05296": 233, "hide": [234, 357, 367, 368], "satisfi": [234, 350], "vmap_dim": 234, "lam": 234, "sample_in": 234, "sample_in_td": 234, "vm": 234, "translat": [236, 249], "character": [236, 242, 249, 250, 252, 371], "overflow": [236, 242, 243, 249, 250, 251, 252, 253], "td_modul": [236, 237, 238, 239, 249, 252, 253, 255, 257, 360, 373], "3635": 236, "0340": 236, "1476": 236, "3911": [236, 369], "1664": [236, 356, 369], "5455": 236, "2247": 236, "4583": 236, "2916": 236, "2160": 236, "5337": 236, "5193": 236, "grad_fn": [236, 244, 245, 373], "addmmbackward0": 236, "actorvalueoper": [237, 350, 360], "get_policy_oper": [237, 238, 239, 264, 277, 280, 350], "standalon": [237, 238, 239, 360], "tdmodul": [237, 238, 239, 342], "get_critic_oper": 237, "common_oper": [237, 239], "policy_oper": [237, 238, 239], "value_oper": [237, 238, 239], "normalparamwrapp": [237, 238, 239, 249, 255, 262, 263, 270, 276, 280, 281, 282, 283, 285, 348, 373], "module_hidden": [237, 239], "td_module_hidden": [237, 239], "module_act": [237, 239], "td_module_act": [237, 238, 239], "module_valu": [237, 238, 239], "td_module_valu": [237, 238, 239], "state_action_valu": [237, 257, 263, 269, 276, 283, 292, 339, 342, 350, 355, 367, 373], "td_clone": [237, 238, 239], "tensordictmodulewrapp": [237, 335, 336, 342], "get_policy_head": [237, 238, 239], "safesequenti": [237, 238, 239, 291], "head": [237, 239, 264, 277, 280], "get_value_head": [237, 238, 239], "get_value_oper": [237, 238, 239, 264, 277, 280], "action_modul": 238, "state_valu": [238, 239, 257, 264, 269, 276, 277, 280, 281, 283, 293, 294, 295, 296, 298, 300, 302, 304, 306, 307, 309, 350, 355, 357, 368], "qualiti": [239, 350], "actorcriticoper": [239, 264, 277, 280, 350, 360], "embeddig": 239, "refet": 239, "actorcriticwrapp": [239, 350, 355], "po": [240, 245], "sigma_init": [240, 367], "epsilon": [240, 244, 245, 248, 284, 328, 356, 357, 358, 360], "sigma_end": [240, 367], "annealing_num_step": [240, 244, 245, 248, 355, 356, 358, 360, 364, 367], "captur": [240, 244, 245, 248], "omiss": [240, 244, 245, 248], "ommit": [240, 244, 245, 248], "inferec": 241, "set_tensor_kei": 241, "dt_inference_wrapp": 241, "baz": 241, "inference_context": 241, "obs_dim": 241, "tanhdelta": [241, 348, 355, 367], "dtactor": 241, "actor_modul": [241, 373], "dist_class": 241, "dist_kwarg": 241, "distribution_kwarg": [241, 249, 253, 357, 367, 368], "inference_actor": 241, "sequence_length": 241, "mask_context": 241, "out_act": 241, "qvaluemodul": [242, 250, 291, 358, 360, 364], "distributionaldqnnet": 242, "make_log_softmax": 242, "my_action_valu": [243, 251], "chanc": 243, "thid": 243, "eps_init": [244, 245, 248, 356, 358, 360, 364], "eps_end": [244, 245, 248, 356], "explorative_polici": [244, 245, 248], "9055": [244, 245, 369], "9277": [244, 245], "6295": [244, 245], "2532": [244, 245], "addbackward0": [244, 245], "lmheadmodel": 246, "actor_head": [246, 264, 277, 280], "base_model": 246, "lm_head": 246, "macro": 247, "lookahead": 247, "n_action": [247, 263, 266, 268, 279, 283], "reshape_cat": 247, "actor_bas": 247, "obs_cat": 247, "obs_cat_reshap": 247, "action_orig": 247, "counter": [247, 323, 352], "ornstein": [248, 355], "uhlenbeck": [248, 355], "ou": [248, 355], "correl": 248, "noise_t": 248, "noise_": 248, "theta": [248, 357, 369], "sigma_t": 248, "sigma_": 248, "anneal": [248, 356, 360, 367], "ou_prev_nois": 248, "ou_step": 248, "x0": 248, "sigma_min": 248, "n_steps_ann": 248, "is_init_kei": 248, "_ou_prev_nois": 248, "_ou_step": 248, "default_interaction_typ": [249, 253, 360], "interaction_typ": [249, 253], "datacollectorbas": [249, 332, 335, 336, 342, 348], "set_interaction_typ": [249, 253], "cache_dist": [249, 253], "n_empirical_estim": [249, 253], "compound": [249, 360], "compositedistribut": [249, 360], "categ": 249, "distribution_map": 249, "chose": 251, "functionalmodul": 252, "functionalmodulewithbuff": 252, "td_fmodul": 252, "td_function": 252, "td_state": 252, "params_repeat": 252, "td_vmap": [252, 255], "random_sampl": [252, 253], "suppli": 253, "fist": 253, "log_prob_kei": [253, 368], "probabilistictensordictsequenti": [254, 262, 264, 277, 280, 282, 335, 336, 373], "partial_toler": [254, 255, 366], "who": [254, 255], "AND": [254, 255], "tensordictsequenci": 255, "tensordictsequ": 255, "safeprobabilisticmodul": [255, 350], "spec1": 255, "net1": 255, "module1": 255, "td_module1": 255, "spec2": 255, "module2": 255, "td_module2": 255, "clamp": [256, 273, 330, 367, 369], "boundari": [256, 357, 367, 368], "resolut": 256, "9944": 256, "9991": 256, "3020": 256, "2299": [256, 369], "5418": 256, "2989": 256, "6849": 256, "3169": 256, "2690": 256, "9649": [256, 369], "5686": 256, "8602": 256, "0315": 256, "8455": [256, 369], "6027": 256, "4746": 256, "7843": 256, "7782": 256, "2111": 256, "5115": 256, "4687": 256, "5760": 256, "custommodul": 257, "imaginari": 258, "imagin": 258, "transition_model": 258, "get_reward_oper": 258, "get_transition_model_oper": 258, "min_val": [259, 261], "_bia": 259, "invert": [260, 357], "surject": 261, "expln": 261, "biased_softplu": [261, 348], "beggin": 261, "biased_softplus_": 261, "syntax": [261, 355], "met": [261, 367, 369], "1602": 262, "01783v2": 262, "actor_network": [262, 263, 264, 265, 267, 269, 270, 276, 277, 279, 280, 281, 282, 283, 285, 355, 357, 361, 367, 368], "critic_network": [262, 264, 277, 280, 282, 357, 368], "entropy_bonu": [262, 264, 277, 280, 357], "favour": [262, 264, 277, 280], "samples_mc_entropi": [262, 264, 277, 279, 280], "mont": [262, 264, 277, 280, 355], "carlo": [262, 264, 277, 280, 355], "entropy_coef": [262, 264, 277, 280, 357, 368], "critic_coef": [262, 264, 277, 280, 357], "loss_critic_typ": [262, 264, 277, 280, 282, 357], "l1": [262, 264, 265, 266, 270, 277, 280, 281, 282, 285, 288, 291, 350, 355], "l2": [262, 264, 265, 266, 267, 268, 270, 273, 274, 277, 280, 281, 282, 285, 288, 291, 355, 367], "smooth_l1": [262, 263, 264, 265, 266, 269, 270, 276, 277, 280, 281, 282, 283, 285, 288, 291, 357], "separate_loss": [262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285], "propag": [262, 264, 265, 269, 270, 276, 277, 280, 281, 282, 283, 285, 293, 294, 295, 296, 357, 367, 368], "advantage_kei": [262, 264, 277, 280, 282, 293, 294, 295, 296], "value_target_kei": [262, 264, 277, 280, 282, 293, 294, 295, 296], "value_target": [262, 264, 277, 280, 282, 293, 294, 295, 296, 357, 368], "ddp": [262, 264, 277, 280, 282], "fsdp": [262, 264, 277, 280, 282], "divid": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 285, 333, 350, 355, 367, 368, 369], "clip_valu": [262, 264, 277, 280, 282], "loss_crit": [262, 280, 357, 368], "loss_entropi": [262, 280, 357, 368], "loss_object": [262, 280, 357, 368], "recur": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296, 297, 360], "next_reward": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296], "next_don": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296], "next_termin": [262, 263, 265, 266, 268, 269, 270, 276, 280, 281, 282, 283, 285, 293, 294, 295, 296], "loss_obj": 262, "sacloss": [262, 275, 284, 348], "select_out_kei": [262, 263, 265, 269, 270, 276, 280, 281, 283, 285], "make_value_estim": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 291, 351, 355, 356, 367, 368, 373], "value_typ": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 291, 355], "hyperparam": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 355], "enum": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 287, 291, 355], "default_value_estim": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 355, 373], "default_value_kwarg": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 348, 355], "dqn_loss": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 286, 291], "td1": [262, 263, 265, 266, 268, 270, 271, 272, 276, 278, 280, 281, 282, 283, 285, 291, 355], "conserv": [263, 268], "qvalue_network": [263, 269, 270, 276, 281, 283, 285], "loss_funct": [263, 265, 266, 267, 268, 269, 270, 276, 281, 283, 285, 288, 291, 355, 367], "alpha_init": [263, 270, 279, 281, 283], "min_alpha": [263, 270, 279, 281, 283], "max_alpha": [263, 270, 279, 281, 283], "fixed_alpha": [263, 270, 279, 281, 283], "target_entropi": [263, 270, 279, 281, 283], "prod": [263, 279, 283], "delay_actor": [263, 265, 283, 285], "delay_qvalu": [263, 270, 281, 283, 285], "min_q_weight": 263, "max_q_backup": 263, "backup": 263, "deterministic_backup": 263, "num_random": 263, "with_lagrang": 263, "lagrang": 263, "lagrange_thresh": 263, "valueclass": [263, 265, 270, 281, 283, 285], "qvalu": [263, 269, 270, 276, 281, 283, 285, 339], "loss_actor": [263, 265, 269, 270, 276, 281, 282, 283, 285, 325, 355, 361, 367, 373], "loss_actor_bc": 263, "loss_alpha": [263, 270, 281, 283], "loss_cql": [263, 268], "loss_qvalu": [263, 268, 269, 270, 276, 281, 283, 285], "loss_alpha_prim": 263, "clip_epsilon": [264, 357, 368], "normalize_advantag": [264, 277, 280, 368], "value_kei": [264, 277, 280, 293, 294, 295, 296, 355], "somemodul": [264, 277, 280], "someactor": [264, 277, 280], "value_head": [264, 277, 280], "somevalu": [264, 277, 280], "loss_modul": [264, 275, 277, 278, 280, 284, 330, 341, 342, 351, 352, 355, 356, 357, 367, 368, 371], "ppoloss": [264, 277, 348], "delay_valu": [265, 266, 268, 271, 282, 283, 291, 356, 358, 364, 367], "loss_valu": [265, 269, 276, 282, 283, 355, 357, 361, 367, 368, 373], "pred_valu": [265, 268, 285, 355, 361, 373], "pred_value_max": [265, 355, 361, 373], "target_valu": [265, 268, 281, 285, 292, 351, 355, 361, 373], "target_value_max": [265, 355, 361, 373], "qvalueactor": [266, 268, 291, 350, 356, 358], "double_dqn": 266, "06461": [266, 275], "mult_one_hot": [266, 269, 270, 291], "loss_val": [266, 268, 351, 355, 357, 358, 361, 362, 364, 367, 368, 371], "01345": 267, "distanc": [268, 277, 288, 292, 293, 368], "dcql_loss": 268, "2110": [269, 276], "06169": [269, 276], "num_qvalue_net": [269, 270, 276, 281, 283, 285], "expectil": [269, 276], "tau": [269, 276, 284, 355, 356, 367], "antmaz": [269, 276], "sticht": [269, 276], "onehotcategor": [269, 270, 348], "target_entropy_weight": 270, "disctount": 271, "distributionalqvalueactor": [271, 350], "input_tensordict": [271, 355], "actor_model": 272, "value_model": [272, 274], "imagination_horizon": 272, "unrol": [272, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310], "discount_loss": [272, 274], "lambda_kl": 273, "lambda_reco": 273, "lambda_reward": 273, "reco_loss": 273, "reward_loss": 273, "free_nat": 273, "nat": 273, "delayed_clamp": 273, "global_averag": 273, "value_loss": 274, "fake_data": 274, "ddpgloss": [275, 284, 342, 348, 355, 361, 367, 373], "td3loss": [275, 284, 348], "value_network_update_interv": 275, "qvalueclass": 276, "loss_value_diff": 276, "diff": 276, "old_polici": 277, "new_polici": 277, "apart": [277, 368], "dtarg": 277, "samples_mc_kl": 277, "analyt": 277, "decrement": 277, "loss_": [278, 325, 351, 355, 361], "equip": [278, 358, 360], "gh": 278, "_acceptedkei": 278, "dataclass": [278, 339], "_forward_value_estimator_kei": 278, "alter": [278, 350], "value_estim": [278, 293, 294, 295, 296, 297, 351, 355, 368], "myloss": 278, "action2": 278, "convert_to_funct": [278, 355], "expand_dim": 278, "create_target_param": [278, 355], "compare_against": [278, 355], "_param": 278, "expans": 278, "resampl": 278, "_target_param": 278, "blend": 278, "proxim": [280, 357, 368], "optimis": [280, 326, 357, 367, 368], "flavour": [280, 367, 368, 373], "clipppoloss": [280, 348, 357, 368], "klpenppoloss": [280, 348], "regularis": 280, "06347": 280, "gae": [280, 348, 351, 355, 357, 368], "ppo_loss": 280, "tdlambda": [280, 287, 351, 355], "base_lay": 280, "randn_lik": 280, "samplelogprob": 280, "openreview": [281, 339], "ay8zfzm0tdd": [281, 339], "sub_sample_len": 281, "subsampl": [281, 321, 352], "action_log_prob_actor": 281, "state_action_value_actor": [281, 285], "connectionist": 282, "1992": 282, "doi": 282, "1007": 282, "bf00992696": 282, "actor_net": [282, 355, 357], "1801": 283, "01290": 283, "applic": [283, 291, 359, 360, 369], "1812": 283, "05905": 283, "redqloss": [284, 348], "math": 284, "theta_t": [284, 369], "theta_": [284, 369], "polyak": 284, "policy_nois": 285, "noise_clip": 285, "next_state_valu": [285, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 348], "td0": [286, 355, 367], "strict_shap": 288, "view_a": 288, "qmixer": [291, 348], "local_valu": 291, "visibl": [291, 368], "dafault": 291, "acceptedkei": 291, "global_valu": 291, "penultim": 291, "local_value_network": 291, "mixer_network": 291, "value_modul": [291, 357, 373], "qnet": [291, 355], "next_val_kei": 292, "pred_next_v": 292, "usus": 292, "mse": 292, "q_valu": 292, "n_steps_to_next": 292, "value_next_st": 292, "1506": [293, 298, 306], "02438": [293, 298, 306], "exponenti": [293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 328], "average_ga": [293, 357], "skip_exist": [293, 294, 295, 296], "time_dim": [293, 295, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310], "advang": 293, "gradient_mod": 293, "value_error": [293, 294, 295, 296, 297], "target_param": [293, 294, 295, 296, 297, 355, 368], "98": [293, 294, 295, 296, 356, 369, 370], "94": [293, 296, 355, 356, 369], "unpack": [293, 294, 295, 296], "tensor_kei": [293, 294, 295, 296, 297], "next_valu": [293, 294, 295, 296, 297], "aka": [294, 356, 367], "average_reward": [294, 295, 296], "tdestim": [294, 295, 297], "infti": 295, "valuefunctionbas": 297, "old_stat": [298, 300, 302, 304, 306, 307, 309], "new_stat": [298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "rolling_gamma": [302, 303, 304, 305, 307, 308, 309, 310], "g1": [302, 303, 304, 305, 307, 308, 309, 310], "g2": [302, 303, 304, 305, 307, 308, 309, 310], "g3": [302, 303, 304, 305, 307, 308, 309, 310], "g4": [302, 303, 304, 305, 307, 308, 309, 310], "v3": [302, 303, 304, 305, 307, 308, 309, 310], "preproc": [311, 367], "as_non_tensor": [311, 367], "render_method": 311, "syntat": 311, "sugar": 311, "out_file_bas": 312, "skip_reset": 312, "interv": [312, 313, 322, 332, 356, 369], "center_crop": 313, "make_grid": 313, "csv": [313, 315, 317, 356, 363, 364], "wandb": [313, 317, 320, 363, 373], "tensorboard": [313, 317, 319, 363, 373], "exp_nam": [313, 314, 315, 318, 319, 320, 342, 356, 363, 364], "log_dir": [313, 314, 315, 317, 319, 320, 356, 364], "cheetah_video": 313, "run_video": 313, "openxexperiencereplai": 313, "run_video_0": 313, "templat": 314, "pt": [315, 352, 370], "video_fp": 315, "minim": [315, 371], "dependeci": 315, "cur_dir": 315, "csv_log": 315, "video_": 315, "experiment_nam": [316, 317], "uuid": [316, 356, 374], "logger_typ": 317, "logger_nam": 317, "mlflow": [317, 318], "wandb_kwarg": 317, "mlflow_kwarg": 317, "tracking_uri": 318, "uri": 318, "datastor": 318, "tb_log": 319, "tensoarboard": 319, "td_log": 319, "save_dir": 320, "resum": 320, "uncategor": 320, "sub_traj_len": 321, "min_sub_traj_len": 321, "register_op": [321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 352, 356], "process_optim_batch": [321, 327, 328, 352], "td_out": [321, 329], "_process_optim_batch_hook": [321, 352], "batch_subsampl": 321, "clear_cuda": 322, "pre_optim_step": [322, 352], "log_pbar": [323, 324, 326, 328, 352, 356], "progress": [323, 324, 326, 330, 352, 356, 358, 374], "count_fram": 323, "pre_steps_log": [323, 324, 352], "count_frames_log": 323, "lognam": 324, "r_train": [324, 356], "log_reward": [324, 356], "loss_compon": 325, "appl": 325, "optimizer_hook": 325, "record_interv": [326, 355, 356], "record_fram": [326, 333, 355, 356], "policy_explor": [326, 342, 355, 356, 360, 364], "log_kei": [326, 356], "suffix": 326, "underestim": 326, "set_exploration_typ": [326, 348, 357, 358, 360, 367, 373], "r_evalu": [326, 355], "flatten_tensordict": [327, 356], "max_dim": 327, "rb_trainer": 327, "batch_process": [327, 328, 329, 352], "post_loss": [327, 352], "999": [328, 356], "jitter": 328, "finfo": 328, "default_dtyp": 328, "get_default_dtyp": 328, "reward_norm": 328, "update_reward_stat": 328, "normalize_reward": 328, "make_train": [329, 348], "_process_batch_hook": [329, 352], "select_kei": [329, 352], "versatil": [330, 359], "optim_steps_per_batch": [330, 352, 356], "clip_grad_norm": 330, "clip_norm": 330, "progress_bar": 330, "save_trainer_interv": 330, "log_interv": [330, 356], "save_trainer_fil": [330, 352], "update_weights_interv": [332, 356], "update_weight": 332, "post_step": [332, 352, 356], "cfg": [333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346], "dictconfig": [333, 334, 335, 336, 339, 340, 341, 342, 343, 346], "unknowingli": 333, "annealing_fram": [333, 355], "init_env_step": [333, 334, 355], "proof_environ": [334, 339, 355], "sta": 334, "ot": 334, "actor_model_explor": [335, 336, 355], "make_env_kwarg": [335, 336], "targetnetupdat": [337, 338, 341, 342], "redqloss_deprec": 338, "actor_net_kwarg": 339, "qvalue_net_kwarg": 339, "observation_kei": 339, "parser_env_arg": 339, "parser_model_args_continu": 339, "hydra": 339, "config_stor": 339, "configstor": 339, "config_field": 339, "config_cl": 339, "redqmodelconfig": 339, "envconfig": 339, "make_dataclass": 339, "cls_name": 339, "cs": 339, "config_path": 339, "config_nam": 339, "replayargsconfig": 340, "target_net_updat": [342, 355, 356], "constitu": 342, "egreedywrapp": 342, "env_proof": 342, "obs_spec": 342, "net_valu": 342, "dir": [342, 352, 356], "gettempdir": 342, "argpars": [343, 346], "namespac": [343, 346], "parser": [343, 346], "transformed_env_constructor": [343, 348], "num_env_per_collector": [344, 345], "video_tag": 346, "norm_obs_onli": 346, "use_env_cr": 346, "custom_env_mak": 346, "custom_env": 346, "return_transformed_env": 346, "action_dim_gsd": 346, "state_dim_gsd": 346, "obs_norm_state_dict": 346, "wheter": 346, "maker": [346, 356], "asyncdatacollector": 348, "distributedsyncdatacollector": 348, "submitit_delayed_launch": 348, "raycollector": 348, "rational": 348, "behind": 348, "footnot": 348, "nontensorspec": 348, "unboundeddiscretetensorspec": 348, "lazystackedtensorspec": 348, "lazystackedcompositespec": 348, "prompttensordicttoken": 348, "rolloutfrommodel": 348, "tokenizeddatasetload": 348, "create_infinite_iter": 348, "constantklcontrol": 348, "adaptiveklcontrol": 348, "consolidate_spec": 348, "check_no_exclusive_kei": 348, "contains_lazy_spec": 348, "check_marl_group": 348, "get_available_librari": 348, "make_composite_from_td": [348, 369], "set_exploration_mod": 348, "terminated_or_trunc": 348, "dreamerdecod": 348, "braxwrapp": 348, "dmcontrolwrapp": 348, "jumanjienv": 348, "jumanjiwrapp": 348, "meltingpotenv": 348, "meltingpotwrapp": 348, "mogymenv": 348, "mogymwrapp": 348, "multithreadedenvwrapp": 348, "openmlenv": 348, "pettingzooenv": [348, 367], "robohiveenv": 348, "smacv2env": 348, "smacv2wrapp": 348, "vmaswrapp": 348, "qvaluehook": 348, "distributionalqvaluehook": 348, "reset_nois": 348, "cemplann": 348, "mpcplannerbas": 348, "mppiplann": 348, "independentnorm": 348, "truncatednorm": 348, "maskedonehotcategor": 348, "inv_softplu": 348, "vmapmodul": 348, "distributionaldqnloss": [348, 356], "discretesacloss": 348, "iqlloss": 348, "discreteiqlloss": 348, "cqlloss": 348, "discretecqlloss": 348, "dtloss": 348, "onlinedtloss": 348, "a2closs": 348, "reinforceloss": 348, "dreameractorloss": 348, "dreamermodelloss": 348, "dreamervalueloss": 348, "td0estim": [348, 355], "td1estim": [348, 355], "td0_return_estim": 348, "td0_advantage_estim": 348, "td1_return_estim": 348, "vec_td1_return_estim": 348, "td1_advantage_estim": 348, "vec_td1_advantage_estim": 348, "td_lambda_return_estim": 348, "vec_td_lambda_return_estim": 348, "td_lambda_advantage_estim": 348, "vec_td_lambda_advantage_estim": 348, "generalized_advantage_estim": 348, "vec_generalized_advantage_estim": 348, "reward2go": 348, "distance_loss": [348, 355], "hold_out_net": 348, "hold_out_param": [348, 355], "softupd": [348, 355, 356, 358, 361, 364, 367], "hardupd": [348, 355, 361], "batchsubsampl": [348, 352], "clearcudacach": 348, "countframeslog": 348, "logreward": [348, 352, 356], "optimizerhook": [348, 356], "replaybuffertrain": [348, 352, 356], "rewardnorm": 348, "selectkei": [348, 352], "trainerhookbas": [348, 352, 356], "updateweight": [348, 352, 356], "make_collector_offpolici": 348, "make_collector_onpolici": 348, "make_dqn_loss": 348, "make_redq_loss": 348, "make_redq_model": 348, "make_replay_buff": [348, 355], "make_target_updat": 348, "parallel_env_constructor": [348, 355], "sync_async_collector": 348, "sync_sync_collector": 348, "correct_for_frame_skip": 348, "get_stats_random_rollout": 348, "mlflowlogg": 348, "get_logg": 348, "generate_exp_nam": 348, "journei": 349, "textbook": 349, "highlight": [349, 367], "ever": [349, 368], "bump": 349, "think": [349, 357, 367, 368, 374], "benefit": [349, 359, 367, 368, 371], "pr": 349, "ground": [350, 355, 369], "recycl": [350, 371], "impos": 350, "violat": 350, "noisier": 350, "Their": [350, 367, 368], "sd": 350, "prob_modul": 350, "pick": [350, 355, 356, 360], "hopefulli": [350, 356], "functional_modul": 350, "make_funct": 350, "mathbb": [350, 356], "rightarrow": [350, 356], "soften": 350, "backbon": [350, 358, 360, 366, 373], "make_actor": 350, "make_valu": 350, "shared_param": 350, "make_common": 350, "reusabl": [351, 355, 371], "swappabl": [351, 355], "characterist": [351, 355, 369], "trainabl": [351, 355, 361, 370], "whatev": [351, 355], "smth": [351, 355], "metric": [351, 355], "nutshel": [351, 355], "barto": [351, 367, 368], "chapter": [351, 363], "significantli": [351, 355, 356, 361, 368], "next_stat": 351, "value_net_loss": 351, "pow": [351, 355], "room": 351, "signifi": [351, 367, 368], "underperform": 351, "thin": 351, "intric": [351, 360], "believ": 352, "scheme": [352, 374], "substenti": 352, "_pre_steps_log_hook": 352, "_pre_optim_hook": 352, "sub_batch": 352, "_post_loss_hook": 352, "_post_optim_hook": 352, "post_optim": [352, 356], "_post_optim_log": 352, "post_optim_log": 352, "_post_steps_hook": 352, "_post_steps_log_hook": 352, "post_steps_log": 352, "reserv": 352, "logginghook": 352, "logging_hook": 352, "save_dict": 352, "some_valu": 352, "torchsnapshot": 352, "ckpt_backend": 352, "filepath": 352, "save_train": 352, "load_from_fil": 352, "59": [354, 355, 356, 367, 369, 370, 372], "412": [354, 369, 372], "galleri": [354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374], "mem": [354, 372], "mb": [354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374], "torchrl_demo": [354, 372, 373], "53": [354, 356, 369, 370, 372, 373], "713": [354, 372, 373], "rb_tutori": [354, 371, 372], "668": [354, 371, 372], "146": [354, 369, 372], "coding_dqn": [354, 356, 372], "769": [354, 356, 372], "1189": [354, 356, 372], "453": [354, 369, 372], "dqn_with_rnn": [354, 358, 372], "809": [354, 358, 372], "1948": [354, 372], "multiagent_ppo": [354, 368, 372], "09": [354, 355, 356, 367, 368, 369, 372], "070": [354, 368, 372], "coding_ddpg": [354, 355, 372], "57": [354, 355, 356, 369, 370, 372], "537": [354, 355, 369, 372], "multiagent_competitive_ddpg": [354, 367, 372], "202": [354, 367, 369, 372], "coding_ppo": [354, 357, 372], "687": [354, 357, 369, 372], "pretrained_model": [354, 370, 372], "124": [354, 358, 369, 370, 372], "3236": [354, 372], "multi_task": [354, 366, 372], "49": [354, 355, 356, 357, 366, 369, 370, 372], "309": [354, 366, 369, 372], "47": [354, 355, 356, 357, 360, 367, 369, 370, 372], "534": [354, 360, 369, 372], "43": [354, 355, 356, 358, 359, 369, 372], "141": [354, 359, 369, 372], "torchrl_env": [354, 372, 374], "353": [354, 369, 372, 374], "3830": [354, 372], "530": [354, 361, 369, 372], "933": [354, 364, 372], "152": [354, 364, 369, 372], "885": [354, 362, 372], "695": [354, 363, 372], "author": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 374], "vincent": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 369, 371, 374], "moen": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 369, 371, 374], "assembl": 355, "focus": [355, 361], "straightforward": [355, 356, 359, 360, 361, 362, 371], "maxim": [355, 361, 369], "transpar": [355, 358], "illustr": [355, 356, 360, 371], "bash": 355, "is_fork": [355, 356, 357, 358, 367, 368, 370], "get_start_method": [355, 356, 357, 358, 367, 368, 370], "is_avail": [355, 356, 357, 358, 367, 368, 370], "collector_devic": 355, "loss_dict": 355, "oblivi": [355, 357, 371], "elementari": 355, "didact": 355, "dilut": 355, "pessimist": [355, 356, 357], "target_actor_network_param": 355, "actor_in_kei": 355, "actor_crit": 355, "noth": [355, 357], "compromis": 355, "hp": 355, "hasattr": 355, "_value_estim": 355, "elif": [355, 356], "notimplementederror": 355, "unknown": 355, "ifgg": 355, "_loss_actor": 355, "td_copi": 355, "actor_network_param": [355, 367], "value_network_param": [355, 367], "_loss_valu": 355, "pred_val": 355, "target_value_network_param": 355, "glue": 355, "_forward": 355, "ndimens": 355, "remaind": 355, "focu": [355, 356, 357, 360, 361, 362, 367], "env_librari": 355, "env_task": 355, "env_arg": [355, 356], "friendli": 355, "torchr": 355, "rescal": 355, "presum": 355, "make_transformed_env": 355, "reward_sc": 355, "marker": 355, "env_per_collector": 355, "transform_state_dict": 355, "make_t_env": 355, "cheat": 355, "10m": 355, "cautiou": 355, "magnitud": [355, 367], "thousand": [355, 358], "get_env_stat": 355, "proof_env": 355, "5000": [355, 356, 357, 364], "recal": [355, 357, 371], "ddpgmlpactor": 355, "ddpgmlpqnet": 355, "materi": 355, "ornsteinuhlenbeckprocesswrapp": [355, 360], "make_ddpg_actor": 355, "q_net": 355, "tight": 355, "decoupl": [355, 361], "10_000": [355, 357], "traj_len": [355, 358], "make_record": 355, "recorder_obj": 355, "flavor": 355, "circular": 355, "buffer_s": [355, 356], "random_crop_len": 355, "prb": 355, "buffer_scratch_dir": 355, "temporari": 355, "25": [355, 356, 358, 367, 369, 370], "dataflow": 355, "ceil_div": 355, "utd": [355, 358], "update_to_data": 355, "realiz": 355, "_must_": 355, "001": [355, 369], "outdat": 355, "trick": [355, 356], "despit": 355, "adam": [355, 356, 357, 358, 361, 364, 367, 368, 369], "optimizer_actor": 355, "lr": [355, 356, 357, 358, 364, 367, 368, 369], "weight_decai": [355, 356], "optimizer_valu": 355, "total_collection_step": 355, "pretti": [355, 359, 363, 371], "rewards_ev": 355, "collected_fram": 355, "r0": 355, "numel": [355, 357, 358, 364, 367, 370, 371], "current_fram": [355, 367], "sampled_tensordict": 355, "gn1": 355, "clip_grad_norm_": [355, 357, 367, 368, 369], "gn2": 355, "gn": [355, 369], "td_record": 355, "rn": 355, "set_descript": [355, 357, 358, 367, 368, 369], "2f": 355, "800": [355, 356], "3546": 355, "99it": [355, 369], "1600": [355, 356], "980": 355, "71it": [355, 356, 357, 369], "2400": [355, 356], "1450": 355, "80it": [355, 356, 369], "3200": [355, 356], "1835": [355, 369], "46it": [355, 356], "4000": [355, 356, 357], "2162": 355, "54it": 355, "48": [355, 356, 368, 369], "4800": [355, 356, 369], "2492": [355, 369], "59it": 355, "56": [355, 356, 367, 368, 369, 370], "5600": 355, "2753": 355, "85it": [355, 356, 358, 369], "6400": [355, 373], "834": 355, "09it": 355, "78": [355, 356, 369, 371], "93": [355, 356, 369, 370, 371], "65": [355, 356, 369], "238": [355, 369], "66": [355, 356, 369, 370], "60": [355, 356, 357, 367, 368, 369, 370, 373], "72": [355, 356, 369, 370], "7200": 355, "07": [355, 356, 367, 368, 369], "528": [355, 369], "52it": [355, 356], "250": [355, 369], "76": [355, 356, 369, 370], "8000": [355, 357], "421": [355, 369], "38it": [355, 356], "61": [355, 356, 367, 369, 370, 371], "68": [355, 356, 369, 370], "63": [355, 356, 369], "8800": 355, "370": [355, 369], "85": [355, 356, 369], "83": [355, 356, 369, 370, 371], "96": [355, 356, 368, 369, 370], "169": [355, 369], "74": [355, 356, 369, 370], "9600": 355, "303": [355, 369], "75it": [355, 356, 369], "51": [355, 356, 367, 369], "133": [355, 369], "193": [355, 369], "10400it": 355, "287": [355, 369], "20it": [355, 356], "148": [355, 369], "45": [355, 356, 358, 369, 370], "186": [355, 369], "58": [355, 356, 369], "plot": [355, 357, 358, 367, 368, 369], "mention": [355, 358, 371, 374], "matplotlib": [355, 357, 358, 367, 368, 369, 371, 374], "pyplot": [355, 357, 358, 367, 368, 369, 371, 374], "plt": [355, 357, 358, 367, 368, 369, 371, 374], "zip": [355, 365], "legend": [355, 367], "xlabel": [355, 358, 368, 369], "ylabel": [355, 368], "tight_layout": 355, "concret": [355, 357], "takeawai": [355, 356], "distpatch": 355, "jupyt": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374], "ipynb": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374], "sphinx": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374], "customis": [356, 367, 368], "road": 356, "aspect": [356, 361], "highest": [356, 360], "prerequisit": [356, 358], "lookup": 356, "amort": [356, 357], "cart": 356, "pole": 356, "un": 356, "actuat": 356, "frictionless": 356, "duelingcnndqnet": 356, "egreedymodul": [356, 358, 360, 364], "is_notebook": 356, "shell": 356, "get_ipython": 356, "__class__": 356, "zmqinteractiveshel": 356, "qtconsol": 356, "terminalinteractiveshel": 356, "ipython": [356, 368, 369], "nameerror": [356, 367], "umbrella": 356, "misplac": 356, "misus": 356, "orchestr": [356, 361, 363], "five": 356, "64x64": 356, "motion": [356, 369], "obs_norm_sd": 356, "mp_context": 356, "simpler": [356, 359], "get_norm_stat": 356, "test_env": 356, "make_model": 356, "dummy_env": 356, "init_bia": 356, "exploration_modul": [356, 358, 360, 364], "eps_greedy_v": 356, "eps_greedy_val_env": 356, "actor_explor": 356, "get_replay_buff": 356, "n_optim": [356, 361, 362], "themselv": 356, "parametriz": 356, "simplic": [356, 357, 362, 370, 371, 373], "get_collector": 356, "cl": 356, "data_collector": 356, "bunch": 356, "power": 356, "ubiquit": [356, 359], "get_loss_modul": 356, "target_updat": [356, 367], "995": [356, 369], "variat": 356, "2e": [356, 369], "wd": 356, "upd": 356, "harder": [356, 373], "5_000": 356, "500000": 356, "100000": 356, "005": [356, 367], "mandatori": [356, 357, 368, 369], "fairer": 356, "budget": 356, "dqn_exp_": 356, "uuid1": [356, 374], "9895": 356, "0737": 356, "registr": 356, "cumbersom": 356, "buffer_hook": 356, "weight_updat": 356, "aliv": 356, "total_reward": 356, "29it": 356, "3688": [356, 369], "9346": [356, 369], "74it": [356, 369], "51it": 356, "3353": [356, 369], "48it": 356, "3596": 356, "3991": 356, "54": [356, 369, 370], "02it": [356, 369], "3718": 356, "224": [356, 369], "4295": [356, 369], "90it": [356, 369], "4173": 356, "288": [356, 369], "81it": [356, 369], "3869": 356, "70": [356, 357, 367, 368, 369, 370], "61it": 356, "3505": 356, "352": [356, 369], "384": [356, 369], "77": [356, 369, 370], "98it": [356, 369], "416": [356, 369], "448": [356, 369], "40it": 356, "480": [356, 369, 370], "544": [356, 369], "77it": [356, 369], "576": [356, 369], "26it": 356, "3657": [356, 369], "608": [356, 369], "640": 356, "88it": [356, 357, 369], "672": 356, "704": 356, "89": [356, 367, 369, 370], "3232": [356, 369], "736": 356, "91": [356, 369], "35it": 356, "768": 356, "90": [356, 357, 367, 368, 369, 370], "03it": [356, 369], "92": [356, 369, 370], "63it": [356, 369], "3566": 356, "832": 356, "18it": 356, "864": 356, "86it": [356, 369], "896": 356, "55it": [356, 369], "4021": 356, "928": 356, "69it": [356, 369], "960": 356, "30it": [356, 369], "992": [356, 369], "23it": 356, "87it": [356, 369], "1056": 356, "65it": [356, 369], "1088": 356, "00it": [356, 369], "1120": 356, "78it": [356, 369], "4082": [356, 369], "1152": 356, "1184": 356, "3778": 356, "1216": 356, "1248": 356, "37it": [356, 357], "1280": 356, "3960": 356, "84it": [356, 369], "1344": 356, "82it": [356, 369], "1376": 356, "1408": 356, "15it": [356, 357], "1440": 356, "42it": 356, "1472": 356, "1504": 356, "06it": [356, 369], "1536": 356, "67it": 356, "1568": 356, "1632": 356, "08it": 356, "1696": 356, "25it": [356, 369], "1728": 356, "24it": [356, 369], "1760": 356, "72it": 356, "1792": 356, "1824": 356, "19it": 356, "1856": 356, "1888": 356, "93it": [356, 369], "1920": 356, "16it": [356, 358], "1952": 356, "1984": 356, "2016": 356, "41it": 356, "2048": [356, 370], "22it": [356, 357, 369], "2080": 356, "33it": [356, 357], "2112": [356, 369], "94it": [356, 369], "2144": 356, "2176": 356, "56it": 356, "2208": 356, "2240": 356, "11it": [356, 357], "2272": 356, "76it": [356, 369], "2336": 356, "2368": 356, "27it": 356, "2432": 356, "2464": 356, "36it": 356, "2496": 356, "2528": [356, 369], "96it": [356, 369], "2560": 356, "58it": [356, 369], "52": [356, 369, 370], "2624": 356, "45it": [356, 369], "2656": [356, 369], "73it": [356, 369], "2688": 356, "53it": 356, "2720": [356, 369], "55": [356, 368, 369, 370], "2752": 356, "64it": 356, "2784": 356, "39it": 356, "2816": 356, "01it": [356, 369], "2848": 356, "12it": [356, 358], "2880": 356, "2912": 356, "49it": 356, "2944": [356, 369], "2976": [356, 369], "62it": 356, "3040": 356, "3072": 356, "92it": [356, 369], "62": [356, 369, 370], "3104": 356, "68it": [356, 369], "3136": 356, "3168": 356, "89it": [356, 369], "6923": 356, "3264": 356, "3296": 356, "28it": [356, 369], "67": [356, 366, 369, 370, 371], "3328": 356, "3360": 356, "3392": 356, "3424": 356, "69": [356, 369, 370], "3456": [356, 369], "3488": 356, "71": [356, 369], "3520": 356, "3552": 356, "79": [356, 369, 370], "3584": 356, "3616": 356, "70it": [356, 357], "73": [356, 369, 370], "3648": 356, "3680": 356, "3712": 356, "3744": 356, "3776": 356, "3808": 356, "3840": 356, "3872": 356, "3904": 356, "3936": 356, "3968": 356, "47it": 356, "4032": 356, "4064": 356, "82": [356, 369, 371], "4096": 356, "4128": [356, 369], "4160": 356, "4192": 356, "04it": [356, 369], "4224": 356, "4256": [356, 369], "4288": [356, 369], "83it": [356, 369], "4320": 356, "4352": 356, "4384": 356, "4416": 356, "4448": 356, "4480": 356, "13it": 356, "4512": 356, "4544": 356, "4576": 356, "60it": 356, "4608": 356, "4640": 356, "4672": [356, 369], "4704": 356, "14it": 356, "4736": 356, "4768": 356, "66it": [356, 369], "97": [356, 368, 369, 370], "4832": 356, "4864": 356, "4896": 356, "4928": 356, "4960": 356, "4992": 356, "5024it": 356, "44it": [356, 369], "print_csv_files_in_fold": 356, "folder_path": 356, "csv_file": 356, "output_str": 356, "dirpath": 356, "endswith": 356, "strip": 356, "tmp": [356, 371], "tmpzjhaocj_": 356, "dqn_exp_71707a7c": 356, "025c": 356, "11ef": 356, "99a4": 356, "0242ac110002": 356, "39912936091423035": 356, "35052037239074707": 356, "40213119983673096": 356, "42945271730422974": 356, "39912933111190796": 356, "302326500415802": 356, "25613799691200256": 356, "2285042405128479": 356, "2517954707145691": 356, "33386388421058655": 356, "2702710032463074": 356, "3551251292228699": 356, "39264002442359924": 356, "38937628269195557": 356, "grad_norm_0": 356, "2893052101135254": 356, "958377480506897": 356, "1145291328430176": 356, "9642817974090576": 356, "766956090927124": 356, "7357325553894043": 356, "9858925342559814": 356, "5447394847869873": 356, "745699405670166": 356, "10000000894069672": 356, "692307472229004": 356, "qvaluenetwork": 356, "worst": 356, "accuraci": 356, "fanci": [356, 362], "talk": 357, "repetit": [357, 359, 362], "six": 357, "sophist": [357, 368], "invent": 357, "overview": [357, 361, 367, 368, 373], "theta_k": 357, "pi_": 357, "exceed": 357, "discourag": [357, 369], "indispens": 357, "analyz": 357, "lingua": 357, "franca": 357, "defaultdict": [357, 369], "3e": [357, 358, 367, 368], "max_grad_norm": [357, 367, 368], "sub_batch_s": 357, "num_epoch": [357, 368], "entropy_ep": [357, 368], "charact": 357, "inverteddoublependulum": 357, "transmit": 357, "stai": 357, "supplementari": [357, 374], "told": 357, "confid": [357, 367, 368], "ran": 357, "f_": 357, "mu_": 357, "difficulti": [357, 374], "d_ob": 357, "d_action": 357, "policy_modul": [357, 367, 368], "That": [357, 367], "said": 357, "briefli": [357, 367, 368], "refil": [357, 368], "conveni": [357, 367, 368, 369, 371], "easiest": [357, 361, 367, 368], "mathemat": [357, 367, 368], "tradeoff": [357, 368], "advantage_modul": 357, "lr_schedul": [357, 369], "cosineannealinglr": [357, 369], "eval_str": 357, "tensordict_data": [357, 368], "data_view": [357, 368], "subdata": [357, 367, 368], "cum_reward_str": 357, "4f": [357, 358, 369], "stepcount_str": 357, "param_group": [357, 367], "lr_str": 357, "eval_rollout": 357, "nice": [357, 359, 362], "460": [357, 369], "138": [357, 369], "8561": [357, 369], "0988": 357, "0003": [357, 358, 369], "464": [357, 369], "1383": 357, "3000": 357, "468": [357, 369], "1712": 357, "467": [357, 369], "1953": [357, 369], "0002": [357, 358, 369], "2118": [357, 369], "6000": 357, "472": [357, 369], "2265": 357, "7000": 357, "475": [357, 369], "2327": [357, 369], "466": [357, 369], "2403": 357, "9000": 357, "471": [357, 369], "2462": 357, "2497": 357, "cap": [357, 371], "figsiz": [357, 369], "subplot": [357, 367, 369, 374], "titl": [357, 358, 368, 369], "bit": [357, 358, 359, 367, 368, 371], "84x84": 358, "accessori": 358, "stamp": 358, "assist": 358, "emb": 358, "n_cell": 358, "customiz": 358, "wouldn": 358, "make_tensordict_prim": 358, "qval": 358, "stoch_polici": 358, "opportun": [358, 367], "uniniti": 358, "again": [358, 359, 360, 362, 368, 370, 371, 374], "redund": 358, "strongli": 358, "sake": [358, 370, 371], "20_000": [358, 369], "longest": 358, "npai": 358, "action_spread": 358, "91it": [358, 369], "150": [358, 369, 371], "1949": [358, 369], "topic": [359, 360, 361], "straight": 359, "backtrack": 359, "encapsul": [359, 360, 361], "2993": [359, 361, 362, 363, 369], "deprecationwarn": [359, 361, 362, 363], "reset_with_act": 359, "8314": [359, 369], "tp": 359, "stepped_data": 359, "spatial": 359, "useless": 359, "policyless": 359, "appreci": 359, "monitor": 359, "examin": [359, 367], "tackl": 360, "delv": 360, "bypass": 360, "extractor": 360, "palliat": 360, "additivegaussianwrapp": [360, 367], "had": [360, 362], "exploration_polici": [360, 367], "greedili": 360, "innov": [360, 361], "rollout_explor": 360, "sole": 361, "tradit": [361, 367], "supervis": [361, 362, 371, 374], "n_collect": 361, "get_next_batch": 361, "ddpg_loss": 361, "total_loss": 361, "_custom_op": 361, "253": [361, 369], "impl_abstract": 361, "register_fak": 361, "_stacklevel": 361, "prove": 361, "reliev": 361, "concern": 361, "accustom": 362, "surprisingli": 362, "fundament": 362, "augment": [362, 364, 371], "art": 362, "pseudo": [362, 369], "multirpocess": 362, "countless": 362, "yourself": [362, 367, 368], "lightweight": 363, "portabl": 363, "everywher": 363, "hyperapamet": 363, "my_exp": 363, "log_scalar": 363, "elaps": 363, "my_scalar": 363, "saw": [363, 369, 371], "my_video": 363, "record_env": [363, 364], "lesson": 364, "voluntarili": 364, "refresh": [364, 367, 368], "value_mlp": 364, "100_000": 364, "init_rand_step": 364, "training_loop": 364, "video_record": 364, "arbitrarili": 364, "total_count": 364, "total_episod": 364, "t0": 364, "t1": 364, "conclud": [364, 370], "tutorials_python": 365, "tutorials_jupyt": 365, "env1_obs_kei": 366, "observation_stand": 366, "env2_obs_kei": 366, "observation_walk": 366, "tdreset1": 366, "tdreset2": 366, "lazy_stack": 366, "policy_common": 366, "policy_stand": 366, "policy_walk": 366, "But": 366, "env1_mak": 366, "env2_mak": 366, "_single_task": 366, "td_rollout": 366, "matteo": [367, 368], "bettini": [367, 368], "simple_tag": 367, "maddpg": [367, 368], "multiagentparticleenviron": 367, "mpe": 367, "tie": [367, 368], "iddpg": [367, 368], "typical": 367, "richard": 367, "andrew": 367, "mit": 367, "press": 367, "2018": 367, "mathbf": [367, 368], "pi": [367, 368, 369], "literatur": [367, 368], "overcom": [367, 368], "stationari": [367, 368], "concurr": [367, 368], "establish": 367, "gui": [367, 368], "multiagentmlp": [367, 368], "is_sphinx": 367, "__sphinx_build__": 367, "team": [367, 368, 373], "n_iter": [367, 368], "evad": 367, "iteration_when_stop_training_evad": 367, "memory_s": 367, "n_optimiser_step": 367, "train_batch_s": 367, "polyak_tau": 367, "chaser": 367, "red": 367, "circl": [367, 368], "touch": [367, 369], "penal": 367, "acceler": [367, 368], "obstacl": 367, "drag": [367, 368], "elast": [367, 368], "collis": [367, 368], "imped": 367, "n_chaser": 367, "n_evad": 367, "n_obstacl": 367, "use_vma": 367, "simple_tag_v3": 367, "num_good": 367, "num_adversari": 367, "num_obstacl": 367, "max_cycl": 367, "num_vmas_env": [367, 368], "num_good_ag": 367, "num_landmark": 367, "adversary_1": 367, "four": [367, 368, 369], "n_agents_in_that_group": 367, "stress": [367, 368], "paramount": [367, 368], "n_rollout_step": [367, 368], "evolut": [367, 368], "group_nam": 367, "n_agents_in_group": 367, "minor": 367, "agents_exploration_polici": 367, "utilis": [367, 368], "withing": 367, "n_obs_per_ag": [367, 368], "n_actions_per_ag": [367, 368], "share_parameters_polici": [367, 368], "policy_net": [367, 368], "_agent": 367, "carefulli": [367, 368, 374], "grant": [367, 368], "converg": [367, 368], "share_parameters_crit": [367, 368], "obs_act": 367, "cat_modul": 367, "critic_modul": 367, "fantast": [367, 368], "reset_td": 367, "interfer": 367, "flatten_kei": 367, "process_batch": 367, "group_shap": 367, "get_item_shap": [367, 368], "nested_done_kei": 367, "nested_terminated_kei": 367, "desc": [367, 368], "episode_reward_mean_": 367, "episode_reward_mean_map": 367, "train_group_map": 367, "deepcopi": 367, "group_batch": 367, "_group": 367, "loss_nam": 367, "episode_reward_mean": [367, 368], "episode_reward_mean_adversari": 367, "episode_reward_mean_ag": 367, "proce": 367, "screen": 367, "fig": 367, "set_ylabel": 367, "axvlin": 367, "color": 367, "orang": 367, "set_xlabel": 367, "video_logg": 367, "vmas_log": 367, "env_with_rend": 367, "vmas_rend": 367, "print_log_dir": 367, "profici": [367, 368], "lidar": 368, "sensor": 368, "mappo": 368, "ippo": 368, "phase": [368, 371], "fed": [368, 371], "analys": 368, "visualis": 368, "vmas_devic": 368, "6_000": 368, "minibatch_s": 368, "generalis": 368, "simd": 368, "parallelis": 368, "warp": 368, "todai": 368, "surround": 368, "dot": [368, 369], "collid": 368, "penalis": 368, "scenario_nam": 368, "final_rew": 368, "agent_collis": 368, "denot": 368, "critic_net": 368, "minibatch": 368, "episode_reward_mean_list": 368, "critic_network_param": 368, "target_critic_network_param": 368, "4579917788505554": 368, "14524875581264496": 368, "168386459350586": 368, "3613134622573853": 368, "921463131904602": 368, "2106335163116455": 368, "1925103664398193": 368, "664064407348633": 368, "6539173126220703": 368, "743558168411255": 368, "xvfb": 368, "pyvirtualdisplai": 368, "1400": [368, 369], "900": 368, "pil": 368, "rendering_callback": 368, "fromarrai": 368, "gif": 368, "save_al": 368, "append_imag": 368, "freeli": 369, "undertaken": 369, "broader": 369, "wider": 369, "algebra": 369, "acquaint": 369, "avenu": 369, "_apply_to_composit": 369, "default_x": 369, "default_i": 369, "torqu": 369, "upward": 369, "angular": 369, "sin": 369, "rad": 369, "sec": 369, "gravit": 369, "angl": 369, "deleg": 369, "new_th": 369, "new_thdot": 369, "thdot": 369, "g_forc": 369, "max_torqu": 369, "angle_norm": 369, "max_spe": 369, "albeit": 369, "gen_param": 369, "high_th": 369, "high_thdot": 369, "low_th": 369, "low_thdot": 369, "trivial": 369, "shortcut": [369, 374], "irrelev": 369, "_make_spec": 369, "td_param": 369, "render_fp": 369, "random_": 369, "_make_step": 369, "staticmethod": 369, "showcas": 369, "skeleton": 369, "_apply_transform": [369, 374], "_inv_apply_transform": [369, 374], "subset": [369, 370], "sine": 369, "cosin": 369, "sintransform": 369, "costransform": 369, "t_sin": 369, "t_co": 369, "cat_transform": 369, "simple_rollout": 369, "unexplor": 369, "init_td": 369, "traj_return": 369, "last_reward": 369, "is_ipython": 369, "inlin": 369, "get_backend": 369, "ion": 369, "gcf": 369, "clear_output": 369, "625": 369, "0748": 369, "519": 369, "0499": 369, "4472": 369, "073": 369, "0685": 369, "0408": 369, "552": 369, "5154": 369, "9086": 369, "97it": 369, "9385": 369, "155": 369, "2568": 369, "4981": 369, "223": 369, "8929": 369, "4491": 369, "581": 369, "3233": 369, "0664": 369, "596": 369, "1021": 369, "5263": 369, "9579": 369, "5807": 369, "8075": 369, "212": 369, "2009": 369, "5525": 369, "914": 369, "2894": 369, "0115": 369, "0977": 369, "1845": 369, "1830": 369, "4858": 369, "233": 369, "2863": 369, "0297": 369, "4617": 369, "5997": 369, "904": 369, "1647": 369, "0777": 369, "901": 369, "4709": 369, "6813": 369, "8317": 369, "3221": 369, "5554": 369, "276": 369, "701": 369, "8570": 369, "6656": 369, "463": 369, "7779": 369, "6911": 369, "875": 369, "0796": 369, "7082": 369, "308": 369, "0421": 369, "1496": 369, "5037": 369, "1755": 369, "5029": 369, "9454": 369, "665": 369, "9330": 369, "444": 369, "0995": 369, "6294": 369, "3146": 369, "2909": 369, "461": 369, "9720": 369, "1298": 369, "9923": 369, "0345": 369, "3438": 369, "424": 369, "6953": 369, "5233": 369, "411": 369, "95it": 369, "8011": 369, "5329": 369, "2677": 369, "6969": 369, "7010": 369, "376": 369, "9352": 369, "7707": 369, "6178": 369, "5646": 369, "348": 369, "7304": 369, "9407": 369, "942": 369, "3882": 369, "7604": 369, "3507": 369, "8928": 369, "258": 369, "6978": 369, "4641": 369, "549": 369, "6047": 369, "5005": 369, "4136": 369, "3222": 369, "4046": 369, "7314": 369, "275": 369, "6331": 369, "9318": 369, "961": 369, "8331": 369, "1604": 369, "4099": 369, "4761": 369, "125": 369, "4262": 369, "6363": 369, "382": 369, "3593": 369, "7377": 369, "2847": 369, "3443": 369, "867": 369, "3592": 369, "4760": 369, "441": 369, "9950": 369, "8021": 369, "3528": 369, "1214": 369, "708": 369, "4023": 369, "3583": 369, "041": 369, "3801": 369, "0310": 369, "120": 369, "4244": 369, "2039": 369, "4850": 369, "8748": 369, "706": 369, "4897": 369, "9210": 369, "8964": 369, "0832": 369, "3934": 369, "456": 369, "8971": 369, "2933": 369, "3377": 369, "6996": 369, "2274": 369, "8916": 369, "098": 369, "2660": 369, "9110": 369, "4503": 369, "6956": 369, "9172": 369, "4026": 369, "946": 369, "9229": 369, "5205": 369, "294": 369, "8872": 369, "6637": 369, "019": 369, "9281": 369, "2082": 369, "724": 369, "6574": 369, "357": 369, "4138": 369, "5230": 369, "385": 369, "4065": 369, "5642": 369, "921": 369, "9786": 369, "4129": 369, "5831": 369, "266": 369, "7723": 369, "4152": 369, "0898": 369, "389": 369, "5155": 369, "5376": 369, "5616": 369, "4094": 369, "283": 369, "5333": 369, "4803": 369, "895": 369, "6566": 369, "2588": 369, "662": 369, "4732": 369, "7503": 369, "068": 369, "0714": 369, "3370": 369, "059": 369, "8612": 369, "1915": 369, "3855": 369, "0349": 369, "9644": 369, "4538": 369, "445": 369, "0392": 369, "4080": 369, "1648": 369, "9599": 369, "143": 369, "4284": 369, "5946": 369, "2590": 369, "9181": 369, "4621": 369, "9075": 369, "674": 369, "1772": 369, "9444": 369, "351": 369, "9391": 369, "5595": 369, "8673": 369, "6240": 369, "5919": 369, "1071": 369, "9127": 369, "251": 369, "9799": 369, "3131": 369, "9612": 369, "9705": 369, "8741": 369, "2230": 369, "0972": 369, "0337": 369, "0350": 369, "0654": 369, "102": 369, "2441": 369, "4596": 369, "362": 369, "103": 369, "4362": 369, "171": 369, "104": 369, "4041": 369, "6907": 369, "105": 369, "4664": 369, "2760": 369, "0299": 369, "9712": 369, "349": 369, "107": 369, "3332": 369, "4479": 369, "772": 369, "108": 369, "4357": 369, "9591": 369, "543": 369, "109": 369, "6216": 369, "1353": 369, "692": 369, "110": 369, "6261": 369, "7086": 369, "496": 369, "111": 369, "7758": 369, "9818": 369, "112": 369, "7772": 369, "5055": 369, "113": 369, "5840": 369, "3180": 369, "2083": 369, "115": 369, "5275": 369, "6873": 369, "116": 369, "4107": 369, "1624": 369, "117": 369, "6372": 369, "2571": 369, "118": 369, "4039": 369, "4428": 369, "119": 369, "4728": 369, "5628": 369, "6767": 369, "2466": 369, "522": 369, "121": [369, 374], "5873": 369, "5072": 369, "6548": 369, "3766": 369, "123": 369, "5134": 369, "1955": 369, "2481": 369, "0591": 369, "4500": 369, "3368": 369, "126": [369, 374], "9708": 369, "7059": 369, "127": 369, "3031": 369, "2534": 369, "843": 369, "3327": 369, "6193": 369, "129": 369, "4831": 369, "1172": 369, "57it": 369, "2593": 369, "4219": 369, "962": 369, "8380": 369, "899": 369, "132": 369, "2721": 369, "9048": 369, "166": 369, "2419": 369, "5248": 369, "2139": 369, "4278": 369, "135": 369, "0690": 369, "5140": 369, "136": 369, "1140": 369, "7402": 369, "137": 369, "5356": 369, "1636": 369, "0671": 369, "8798": 369, "139": 369, "8918": 369, "3298": 369, "307": 369, "140": 369, "1779": 369, "1771": 369, "3624": 369, "936": 369, "142": 369, "1683": 369, "4810": 369, "9373": 369, "4435": 369, "4396": 369, "8092": 369, "145": 369, "2572": 369, "4212": 369, "0260": 369, "147": [369, 371], "0939": 369, "6478": 369, "605": 369, "6606": 369, "7289": 369, "149": 369, "9300": 369, "7193": 369, "563": 369, "1166": 369, "8514": 369, "151": 369, "9108": 369, "0672": 369, "292": 369, "8591": 369, "3768": 369, "153": [369, 374], "9976": 369, "154": 369, "0576": 369, "0067": 369, "935": 369, "4199": 369, "1722": 369, "156": 369, "8310": 369, "3466": 369, "157": 369, "8631": 369, "158": 369, "8763": 369, "1277": 369, "159": 369, "5562": 369, "7446": 369, "1082": 369, "9830": 369, "161": 369, "0946": 369, "5229": 369, "162": 369, "4574": 369, "6900": 369, "163": [369, 370], "2229": 369, "0318": 369, "482": 369, "164": 369, "0543": 369, "0817": 369, "761": 369, "165": 369, "2809": 369, "5118": 369, "366": 369, "1142": 369, "5635": 369, "167": 369, "982": 369, "168": 369, "0967": 369, "0387": 369, "457": 369, "0782": 369, "2150": 369, "170": 369, "5222": 369, "3725": 369, "9288": 369, "9837": 369, "1416": 369, "1099": 369, "173": 369, "8620": 369, "8475": 369, "174": 369, "1807": 369, "4375": 369, "175": 369, "1148": 369, "0645": 369, "2751": 369, "8313": 369, "177": 369, "9286": 369, "9770": 369, "178": 369, "5735": 369, "2837": 369, "179": 369, "2926": 369, "9489": 369, "180": 369, "1507": 369, "181": 369, "8724": 369, "3567": 369, "182": 369, "3574": 369, "6140": 369, "183": 369, "7895": 369, "2518": 369, "184": 369, "6146": 369, "185": 369, "8776": 369, "7358": 369, "3722": 369, "8428": 369, "187": 369, "7955": 369, "188": 369, "0092": 369, "7106": 369, "829": 369, "189": 369, "2264": 369, "6919": 369, "190": 369, "1438": 369, "1362": 369, "191": [369, 371], "0618": 369, "8217": 369, "9420": 369, "6765": 369, "7745": 369, "0709": 369, "194": 369, "9478": 369, "6867": 369, "195": 369, "6507": 369, "6225": 369, "196": 369, "2244": 369, "2195": 369, "197": 369, "5385": 369, "9263": 369, "198": [369, 371], "1878": 369, "2374": 369, "8054": 369, "3504": 369, "557": 369, "0766": 369, "201": 369, "2011": 369, "8393": 369, "0803": 369, "7815": 369, "203": 369, "8363": 369, "2460": 369, "204": 369, "8643": 369, "2191": 369, "593": 369, "205": 369, "0773": 369, "1343": 369, "206": 369, "8657": 369, "207": 369, "9304": 369, "7584": 369, "208": 369, "8752": 369, "2307": 369, "209": 369, "5250": 369, "4869": 369, "7837": 369, "5762": 369, "211": 369, "6661": 369, "8600": 369, "2502": 369, "1752": 369, "3075": 369, "8871": 369, "214": 369, "9406": 369, "8090": 369, "215": [369, 371], "6291": 369, "8923": 369, "876": 369, "216": 369, "9504": 369, "21e": 369, "217": 369, "7431": 369, "7880": 369, "218": 369, "4463": 369, "5432": 369, "219": 369, "3793": 369, "3313": 369, "220": 369, "8843": 369, "0369": 369, "065": 369, "221": 369, "4828": 369, "8391": 369, "222": 369, "6265": 369, "2913": 369, "947": 369, "31it": 369, "5541": 369, "1252": 369, "7342": 369, "2396": 369, "225": 369, "5936": 369, "1924": 369, "226": 369, "9975": 369, "2045": 369, "227": 369, "43it": 369, "8367": 369, "9540": 369, "228": 369, "7259": 369, "6743": 369, "229": 369, "4827": 369, "7528": 369, "230": 369, "7361": 369, "8756": 369, "231": 369, "7646": 369, "1116": 369, "232": 369, "79it": 369, "5426": 369, "8385": 369, "5662": 369, "8585": 369, "234": 369, "8234": 369, "7930": 369, "235": 369, "2648": 369, "9309": 369, "236": 369, "6817": 369, "237": 369, "0943": 369, "1533": 369, "3045": 369, "0483": 369, "239": 369, "6415": 369, "0201": 369, "241": 369, "4437": 369, "4365": 369, "242": 369, "0358": 369, "4943": 369, "243": 369, "1272": 369, "5003": 369, "1180": 369, "2637": 369, "245": 369, "7197": 369, "0873": 369, "246": 369, "2917": 369, "247": 369, "0160": 369, "0738": 369, "248": 369, "3689": 369, "0120": 369, "249": 369, "5570": 369, "0475": 369, "4423": 369, "2220": 369, "6803": 369, "252": 369, "1465": 369, "7214": 369, "8801": 369, "7034": 369, "254": 369, "9136": 369, "4076": 369, "7589": 369, "5013": 369, "8150": 369, "2241": 369, "257": 369, "0753": 369, "8081": 369, "1951": 369, "259": 369, "0038": 369, "260": 369, "0889": 369, "4616": 369, "261": [369, 374], "0655": 369, "262": [369, 371], "8333": 369, "9476": 369, "263": 369, "7554": 369, "3798": 369, "264": 369, "3717": 369, "3947": 369, "529": 369, "265": 369, "3060": 369, "6495": 369, "7467": 369, "8889": 369, "267": 369, "8457": 369, "591": 369, "7137": 369, "0536": 369, "771": 369, "269": 369, "1651": 369, "388": 369, "270": 369, "8246": 369, "5709": 369, "281": 369, "271": 369, "7502": 369, "0521": 369, "032": 369, "272": 369, "5475": 369, "7253": 369, "273": 369, "2856": 369, "7130": 369, "274": 369, "2778": 369, "4122": 369, "8368": 369, "1841": 369, "9622": 369, "1603": 369, "003e": 369, "277": 369, "0247": 369, "346": 369, "278": 369, "2238": 369, "6418": 369, "279": 369, "0626": 369, "2538": 369, "280": 369, "0149": 369, "7380": 369, "2167": 369, "8911": 369, "282": 369, "8725": 369, "1983": 369, "8142": 369, "3709": 369, "284": 369, "4989": 369, "285": 369, "6464": 369, "6210": 369, "286": 369, "9726": 369, "0820": 369, "6975": 369, "9091": 369, "4926": 369, "4791": 369, "289": [369, 374], "0905": 369, "3500": 369, "290": 369, "2287": 369, "291": 369, "9918": 369, "5543": 369, "9245": 369, "6444": 369, "631": 369, "293": 369, "0448": 369, "4769": 369, "8566": 369, "7208": 369, "295": 369, "0966": 369, "296": 369, "5303": 369, "1537": 369, "023": 369, "297": 369, "2682": 369, "564": 369, "298": 369, "4318": 369, "5063": 369, "299": 369, "7475": 369, "4190": 369, "8186": 369, "5077": 369, "301": 369, "1883": 369, "5291": 369, "302": 369, "3998": 369, "3622": 369, "0930": 369, "626": 369, "304": 369, "9500": 369, "5664": 369, "305": 369, "5697": 369, "3024": 369, "306": 369, "3117": 369, "0052": 369, "006": 369, "0981": 369, "9312": 369, "3873": 369, "0411": 369, "2650": 369, "1656": 369, "0228": 369, "004": 369, "311": 369, "1196": 369, "2478": 369, "312": 369, "7353": 369, "0812": 369, "313": 369, "3022": 369, "758": 369, "314": 369, "1406": 369, "4626": 369, "315": 369, "2156": 369, "851": 369, "316": 369, "3774": 369, "317": 369, "6385": 369, "9917": 369, "318": 369, "2764": 369, "905": 369, "319": 369, "6391": 369, "9317": 369, "9748": 369, "2679": 369, "321": 369, "8495": 369, "5125": 369, "8177": 369, "6602": 369, "323": 369, "0704": 369, "5776": 369, "324": 369, "9833": [369, 373], "1339": 369, "402": 369, "325": 369, "1238": 369, "326": 369, "9299": 369, "0227": 369, "327": 369, "7727": 369, "1607": 369, "336": 369, "328": 369, "3958": 369, "3223": 369, "763": 369, "329": 369, "4742": 369, "1797": 369, "330": 369, "0144": 369, "0085": 369, "791": 369, "331": 369, "8284": 369, "0428": 369, "332": 369, "7365": 369, "333": 369, "4566": 369, "0781": 369, "086": 369, "334": 369, "3355": 369, "0230": 369, "335": 369, "0423": 369, "076": 369, "3711": 369, "1335": 369, "6855": 369, "337": 369, "0304": 369, "0023": 369, "8459": 369, "338": 369, "9998": 369, "4399": 369, "339": 369, "2303": 369, "1346": 369, "340": 369, "2915": 369, "7116": 369, "341": 369, "5560": 369, "0487": 369, "342": 369, "5119": 369, "061": 369, "343": 369, "3305": 369, "3705": 369, "957": 369, "344": 369, "6068": 369, "345": 369, "5731": 369, "3897": 369, "0376": 369, "347": 369, "0434": 369, "012": 369, "1300": 369, "1215": 369, "0968": 369, "0885": 369, "350": 369, "1348": 369, "0073": 369, "5052": 369, "4184": 369, "2817": 369, "8887": 369, "4779": 369, "1009": 369, "354": 369, "0604": 369, "599": 369, "355": 369, "4486": 369, "1176": 369, "656": 369, "356": 369, "2436": 369, "0668": 369, "8849": 369, "0012": 369, "358": 369, "7511": 369, "8804": 369, "359": 369, "8870": 369, "6728": 369, "360": 369, "8841": 369, "5508": 369, "361": 369, "5242": 369, "0013": 369, "6185": 369, "363": 369, "1378": 369, "0204": 369, "364": 369, "0355": 369, "685": 369, "365": 369, "4884": 369, "0231": 369, "0014": 369, "6793": 369, "367": 369, "9834": 369, "863": 369, "368": 369, "6709": 369, "462": 369, "369": 369, "5199": 369, "9790": 369, "9401": 369, "7802": 369, "371": 369, "6723": 369, "372": 369, "2678": 369, "6201": 369, "373": 369, "2184": 369, "7385": 369, "374": 369, "6344": 369, "617": 369, "375": 369, "9945": 369, "0772": 369, "567": 369, "7576": 369, "0398": 369, "377": 369, "3396": 369, "0022": 369, "094": 369, "378": 369, "3073": 369, "4018": 369, "379": 369, "1869": 369, "380": 369, "0481": 369, "1117": 369, "381": 369, "6823": 369, "981": 369, "8305": 369, "0210": 369, "383": 369, "4908": 369, "0272": 369, "538": 369, "3267": 369, "0111": 369, "7965": 369, "1796": 369, "0039": 369, "5396": 369, "386": 369, "3757": 369, "0490": 369, "387": 369, "1394": 369, "4187": 369, "2986": 369, "7954": 369, "1274": 369, "0063": 369, "813": 369, "390": 369, "8706": 369, "0114": 369, "391": 369, "6922": 369, "2423": 369, "392": 369, "9115": 369, "2602": 369, "393": 369, "2449": 369, "0783": 369, "394": 369, "0631": 369, "0057": 369, "7444": 369, "395": 369, "3339": 369, "0167": 369, "396": 369, "4806": 369, "397": 369, "4171": 369, "067": 369, "398": 369, "2618": 369, "5809": 369, "399": 369, "0054": 369, "3364": 369, "8733": 369, "0184": 369, "401": 369, "9137": 369, "0113": 369, "025": 369, "0386": 369, "0625": 369, "403": 369, "1332": 369, "0582": 369, "7816": 369, "404": 369, "8341": 369, "0941": 369, "854": 369, "405": 369, "8615": 369, "588": 369, "406": 369, "3849": 369, "008": 369, "407": 369, "9395": 369, "0765": 369, "055": 369, "408": 369, "2685": 369, "2235": 369, "688": 369, "409": 369, "3052": 369, "4249": 369, "410": 369, "6806": 369, "6383": 369, "3721": 369, "9981": 369, "1862": 369, "822": 369, "413": 369, "9811": 369, "0171": 369, "013": 369, "414": 369, "0252": 369, "0049": 369, "6205": 369, "415": 369, "1108": 369, "4921": 369, "9142": 369, "8130": 369, "417": 369, "1725": 369, "0036": 369, "3196": 369, "418": 369, "7795": 369, "0242": 369, "799": 369, "419": 369, "7737": 369, "0138": 369, "420": 369, "1462": 369, "0053": 369, "9226": 369, "6139": 369, "422": 369, "9889": 369, "0403": 369, "423": 369, "6194": 369, "0032": 369, "3989": 369, "0104": 369, "425": 369, "9960": 369, "0009": 369, "6009": 369, "426": 369, "2697": 369, "0914": 369, "427": 369, "1114": 369, "428": 369, "9862": 369, "1932": 369, "429": 369, "0637": 369, "0623": 369, "082": 369, "430": 369, "9906": 369, "2031": 369, "431": 369, "9948": 369, "0895": 369, "432": 369, "1970": 369, "0256": 369, "4231": 369, "0449": 369, "644": 369, "434": 369, "1039": 369, "1973": 369, "435": 369, "4561": 369, "1225": 369, "436": 369, "0211": 369, "2125": 369, "437": 369, "3866": 369, "0050": 369, "7202": 369, "438": 369, "6388": 369, "0072": 369, "439": 369, "1187": 369, "0015": 369, "5116": 369, "440": 369, "0432": 369, "0025": 369, "7809": 369, "1925": 369, "0103": 369, "442": 369, "9570": 369, "443": 369, "0871": 369, "5601": 369, "0165": 369, "0047": 369, "6061": 369, "2746": 369, "0027": 369, "7887": 369, "446": 369, "0035": 369, "855": 369, "447": 369, "8420": 369, "548": 369, "2653": 369, "0126": 369, "9736": 369, "449": 369, "0594": 369, "0119": 369, "6196": 369, "450": 369, "4509": 369, "0373": 369, "451": 369, "0620": 369, "452": 369, "6898": 369, "3235": 369, "5879": 369, "454": 369, "8406": 369, "0694": 369, "455": 369, "8259": 369, "0235": 369, "8500": 369, "0024": 369, "4054": 369, "458": 369, "2027": 369, "0894": 369, "459": 369, "5966": 369, "6942": 369, "0016": 369, "4254": 369, "6703": 369, "0145": 369, "8124": 369, "0218": 369, "9196": 369, "0188": 369, "8986": 369, "0884": 369, "0084": 369, "5624": 369, "465": 369, "8862": 369, "0006": 369, "5384": 369, "5837": 369, "8954": 369, "0101": 369, "6751": 369, "8063": 369, "0122": 369, "9635": 369, "469": 369, "0692": 369, "4216": 369, "470": 369, "1227": 369, "0586": 369, "162e": 369, "9690": 369, "4166": 369, "6324": 369, "473": 369, "0778": 369, "474": 369, "8548": 369, "0017": 369, "4408": 369, "8125": 369, "1515": 369, "476": 369, "2733": 369, "0044": 369, "2836": 369, "477": 369, "7497": 369, "7681": 369, "478": 369, "8547": 369, "0105": 369, "7212": 369, "479": 369, "9848": 369, "0019": 369, "6498": 369, "1987": 369, "0011": 369, "5473": 369, "481": 369, "8991": 369, "6091": 369, "9189": 369, "5771": 369, "483": 369, "6781": 369, "7542": 369, "484": 369, "5959": 369, "0064": 369, "485": 369, "2547": 369, "486": 369, "0636": 369, "547": 369, "487": 369, "0065": 369, "488": 369, "1694": 369, "0083": 369, "5759": 369, "489": 369, "0493": 369, "0021": 369, "7805": 369, "490": 369, "0950": 369, "497": 369, "491": 369, "9717": 369, "3672": 369, "492": 369, "0207": 369, "493": 369, "8266": 369, "5365": 369, "494": 369, "2623": 369, "5078": 369, "495": 369, "4545": 369, "09636": 369, "8754": 369, "0010": 369, "498": 369, "0031": 369, "8269": 369, "499": 369, "6642": 369, "2284": 369, "501": 369, "9130": 369, "0008": 369, "502": 369, "503": 369, "7624": 369, "0056": 369, "3858": 369, "504": 369, "0890": 369, "0042": 369, "505": 369, "7505": 369, "2157": 369, "506": 369, "8394": 369, "3413": 369, "507": 369, "9609": 369, "0041": 369, "6905": 369, "508": 369, "8467": 369, "4409": 369, "509": 369, "510": 369, "8128": 369, "3559": 369, "511": 369, "1479": 369, "0264": 369, "1589": 369, "566": 369, "513": 369, "2756": 369, "0046": 369, "5266": 369, "514": 369, "9873": 369, "0112": 369, "9314": 369, "515": 369, "3791": 369, "0721": 369, "516": 369, "4580": 369, "0758": 369, "6114": 369, "517": 369, "2431": 369, "518": 369, "1958": 369, "5553": 369, "8924": 369, "0097": 369, "520": 369, "3737": 369, "0234": 369, "521": 369, "9125": 369, "4623": 369, "3230": 369, "0589": 369, "3784": 369, "523": 369, "9482": 369, "0051": 369, "524": 369, "1979": 369, "0045": 369, "6401": 369, "525": 369, "1588": 369, "0048": 369, "6255": 369, "526": 369, "6084": 369, "3477": 369, "1475": 369, "0209": 369, "7611": 369, "1040": 369, "0099": 369, "0173": 369, "643": 369, "8189": 369, "4358": 369, "531": 369, "9897": 369, "532": 369, "1548": 369, "9751": 369, "533": 369, "6362": 369, "7495": 369, "1749": 369, "9513": 369, "535": 369, "7708": 369, "0371": 369, "536": 369, "2649": 369, "0437": 369, "5491": 369, "0276": 369, "6426": 369, "7294": 369, "078e": 369, "539": 369, "9928": 369, "540": 369, "7937": 369, "0124": 369, "9664": 369, "541": 369, "3342": 369, "542": 369, "2046": 369, "5496": 369, "0956": 369, "0059": 369, "545": 369, "9028": 369, "5843": 369, "546": 369, "0674": 369, "0178": 369, "797": 369, "2815": 369, "0599": 369, "1587": 369, "9276": 369, "8228": 369, "6164": 369, "551": 369, "6850": 369, "9167": 369, "3092": 369, "0670": 369, "9177": 369, "553": 369, "1599": 369, "0043": 369, "554": 369, "6367": 369, "555": 369, "556": 369, "6694": 369, "2622": 369, "0372": 369, "4841": 369, "558": 369, "2707": 369, "757": 369, "559": 369, "2267": 369, "5415": 369, "560": 369, "4556": 369, "0163": 369, "561": 369, "1839": 369, "0809": 369, "6262": 369, "562": 369, "0278": 369, "1112": 369, "6155": 369, "565": 369, "1427": 369, "3582": 369, "624": 369, "7870": 369, "9490": 369, "0439": 369, "8796": 369, "568": 369, "8026": 369, "612": 369, "569": 369, "3147": 369, "8486": 369, "570": 369, "7917": 369, "0129": 369, "571": 369, "9553": 369, "0020": 369, "6871": 369, "572": 369, "3132": 369, "0159": 369, "8646": 369, "573": 369, "5320": 369, "0269": 369, "574": 369, "2955": 369, "0245": 369, "575": 369, "3347": 369, "0179": 369, "9718": 369, "1629": 369, "804": 369, "577": 369, "4164": 369, "0070": 369, "4335": 369, "578": 369, "579": 369, "3049": 369, "9063": 369, "580": 369, "8785": 369, "3295": 369, "5184": 369, "0546": 369, "582": 369, "4589": 369, "583": 369, "4697": 369, "2476": 369, "584": 369, "2397": 369, "585": 369, "4953": 369, "1775": 369, "586": 369, "2258": 369, "0110": 369, "7671": 369, "587": 369, "3981": 369, "8590": 369, "0007": 369, "589": 369, "9820": 369, "4221": 369, "590": 369, "1293": 369, "0116": 369, "868": 369, "1675": 369, "5931": 369, "592": 369, "2910": 369, "5219": 369, "2124": 369, "1730": 369, "737": 369, "594": 369, "2914": 369, "0206": 369, "595": 369, "0172": 369, "3982": 369, "0945": 369, "0121": 369, "4789": 369, "597": 369, "3805": 369, "4074": 369, "598": 369, "3310": 369, "5065": 369, "6028": 369, "6316": 369, "6724": 369, "6523": 369, "601": 369, "0136": 369, "4298": 369, "602": 369, "3524": 369, "2629": 369, "603": 369, "2635": 369, "7839": 369, "604": 369, "6041": 369, "8027": 369, "4170": 369, "4675": 369, "606": 369, "3153": 369, "9316": 369, "607": 369, "0649": 369, "9722": 369, "7989": 369, "0329": 369, "609": 369, "1976": 369, "6852": 369, "610": 369, "4793": 369, "1255": 369, "611": 369, "4581": 369, "0394": 369, "2047": 369, "0326": 369, "613": 369, "8967": 369, "8619": 369, "614": 369, "5906": 369, "6491": 369, "615": 369, "6634": 369, "4394": 369, "616": 369, "0624": 369, "0061": 369, "5676": 369, "3259": 369, "0131": 369, "7733": 369, "618": 369, "7515": 369, "0189": 369, "5575": 369, "619": 369, "9313": 369, "6286": 369, "620": 369, "4325": 369, "7832": 369, "621": 369, "1134": 369, "622": 369, "4572": 369, "0500": 369, "5838": 369, "623": 369, "3818": 369, "8623": 369, "1253": 369, "6622": 369, "subject": 369, "explain": 370, "semat": 370, "r3mtransform": 370, "env_transform": [370, 374], "s3": 370, "amazonaw": 370, "r3m_50": 370, "374m": 370, "9m": 370, "107mb": 370, "3mb": 370, "4m": 370, "1mb": 370, "2m": 370, "6mb": 370, "0m": 370, "106mb": 370, "6m": 370, "9mb": 370, "5mb": 370, "7mb": 370, "105m": 370, "124m": 370, "134m": 370, "4mb": 370, "148m": 370, "164m": 370, "174m": 370, "184m": 370, "195m": 370, "0mb": 370, "204m": 370, "212m": 370, "220m": 370, "229m": 370, "2mb": 370, "246m": 370, "262m": 370, "8mb": 370, "277m": 370, "283m": 370, "295m": 370, "310m": 370, "316m": 370, "326m": 370, "332m": 370, "344m": 370, "360m": 370, "373m": 370, "wiser": 370, "_storag": [370, 371], "3237": 370, "batteri": 371, "filesystem": 371, "buffer_list": 371, "lowest": 371, "medium": 371, "buffer_lazytensor": 371, "buffer_lazymemmap": 371, "tempdir": 371, "tmpx9q_pg90": 371, "fullest": 371, "mydata": 371, "background": 371, "question": [371, 373], "_i": 371, "artifici": 371, "0893e": 371, "hamper": 371, "she": 371, "pars": 371, "proport": 371, "hist": 371, "barcontain": 371, "artist": 371, "reappear": 371, "unfold": 371, "problemat": 371, "4th": 371, "prioritizedslicesampl": 371, "tensordictmaxvaluewrit": 371, "demo": 373, "icml": 373, "vmoen": 373, "fb": 373, "invest": 373, "platform": 373, "media": 373, "predominantli": 373, "tensordict1": 373, "tensordict2": 373, "tensordict_sampl": 373, "_sampler": 373, "_sum_tre": 373, "modulenotfounderror": 373, "28791671991348267": 373, "noopresetenv": [373, 374], "backbone_modul": 373, "params_expand": 373, "exec_sequ": 373, "tensordict_exp": 373, "base_modul": 373, "0137": 373, "1524": 373, "0641": 373, "viewbackward0": 373, "asstridedbackward0": 373, "8728": 373, "1334": 373, "3494": 373, "6887": 373, "6402": 373, "_safetanhbackward": 373, "1132": 373, "1762": 373, "3430": 373, "2668": 373, "2918": 373, "6239": 373, "roughli": 373, "tensordicts_prealloc": 373, "tensordicts_stack": 373, "tensordict_rollout": [373, 374], "disclaim": 373, "concatmodul": 373, "loss_td": 373, "year": 373, "roadmap": 373, "compris": 373, "contributor": 373, "curiou": 373, "nascent": 373, "functool": 374, "unsupervis": 374, "unifi": 374, "_build_env": 374, "amidar": 374, "assault": 374, "3553": 374, "deserv": 374, "__episode__": 374, "__trajectory__": 374, "void": 374, "reproduct": 374, "reset_data": 374, "traceback": 374, "1532": 374, "_wrapped_call_impl": 374, "_call_impl": 374, "1541": 374, "forward_cal": 374, "_self": 374, "_contextlib": 374, "decorate_context": 374, "1217": 374, "inspect": 374, "getsourc": 374, "997": 374, "lnum": 374, "getsourcelin": 374, "979": 374, "findsourc": 374, "780": 374, "getsourcefil": 374, "696": 374, "getfil": 374, "package_import": 374, "698": 374, "_patched_getfil": 374, "_orig_getfil": 374, "676": 374, "typeerror": 374, "tensordict_tprim": 374, "imshow": 374, "wrapper1": 374, "wrapper2": 374, "obviou": 374, "truth": 374, "env0": 374, "env_transformed_bi": 374, "stanc": 374, "transformeddistribut": 374, "base_dist": 374, "concat": 374, "mofidi": 374, "transformedenviron": 374, "moderet": 374, "computation": 374, "legitim": 374, "incom": 374, "amongst": 374, "has_cuda": 374, "wor": 374, "convention": 374, "markovian": 374, "constain": 374, "bar_": 374, "get_someth": 374, "aargh": 374, "is_clos": 374, "foo_list": 374, "parallen": 374, "particularili": 374, "evolv": 374, "steadi": 374, "approx": 374, "_extra_st": 374, "observation_ssq": 374, "observation_sum": 374, "dispach": 374, "absor": 374, "3831": 374}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "AdaptiveKLController"], [24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "ConstantKLController"], [28, 0, 1, "", "DiscreteTensorSpec"], [29, 0, 1, "", "LazyStackedCompositeSpec"], [30, 0, 1, "", "LazyStackedTensorSpec"], [31, 0, 1, "", "MultiDiscreteTensorSpec"], [32, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [33, 0, 1, "", "MultiStep"], [34, 0, 1, "", "NonTensorSpec"], [35, 0, 1, "", "OneHotDiscreteTensorSpec"], [36, 0, 1, "", "PairwiseDataset"], [37, 0, 1, "", "PrioritizedReplayBuffer"], [38, 0, 1, "", "PromptData"], [39, 0, 1, "", "PromptTensorDictTokenizer"], [40, 0, 1, "", "ReplayBuffer"], [41, 0, 1, "", "RewardData"], [42, 0, 1, "", "RolloutFromModel"], [43, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [44, 0, 1, "", "TensorDictReplayBuffer"], [45, 0, 1, "", "TensorDictTokenizer"], [46, 0, 1, "", "TensorSpec"], [47, 0, 1, "", "TokenizedDatasetLoader"], [48, 0, 1, "", "UnboundedContinuousTensorSpec"], [49, 0, 1, "", "UnboundedDiscreteTensorSpec"], [50, 0, 1, "", "check_no_exclusive_keys"], [51, 0, 1, "", "consolidate_spec"], [52, 0, 1, "", "contains_lazy_spec"], [53, 0, 1, "", "create_infinite_iterator"], [63, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[23, 1, 1, "", "update"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "get"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "to_one_hot"], [28, 1, 1, "", "to_one_hot_spec"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "empty"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "get"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_empty"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "items"], [29, 1, 1, "", "keys"], [29, 1, 1, "", "lock_"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unlock_"], [29, 1, 1, "", "values"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "to_one_hot"], [31, 1, 1, "", "to_one_hot_spec"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[33, 1, 1, "", "add_module"], [33, 1, 1, "", "apply"], [33, 1, 1, "", "bfloat16"], [33, 1, 1, "", "buffers"], [33, 1, 1, "", "children"], [33, 1, 1, "", "compile"], [33, 1, 1, "", "cpu"], [33, 1, 1, "", "cuda"], [33, 1, 1, "", "double"], [33, 1, 1, "", "eval"], [33, 1, 1, "", "extra_repr"], [33, 1, 1, "", "float"], [33, 1, 1, "", "forward"], [33, 1, 1, "", "get_buffer"], [33, 1, 1, "", "get_extra_state"], [33, 1, 1, "", "get_parameter"], [33, 1, 1, "", "get_submodule"], [33, 1, 1, "", "half"], [33, 1, 1, "", "ipu"], [33, 1, 1, "", "load_state_dict"], [33, 1, 1, "", "modules"], [33, 1, 1, "", "named_buffers"], [33, 1, 1, "", "named_children"], [33, 1, 1, "", "named_modules"], [33, 1, 1, "", "named_parameters"], [33, 1, 1, "", "parameters"], [33, 1, 1, "", "register_backward_hook"], [33, 1, 1, "", "register_buffer"], [33, 1, 1, "", "register_forward_hook"], [33, 1, 1, "", "register_forward_pre_hook"], [33, 1, 1, "", "register_full_backward_hook"], [33, 1, 1, "", "register_full_backward_pre_hook"], [33, 1, 1, "", "register_load_state_dict_post_hook"], [33, 1, 1, "", "register_module"], [33, 1, 1, "", "register_parameter"], [33, 1, 1, "", "register_state_dict_pre_hook"], [33, 1, 1, "", "requires_grad_"], [33, 1, 1, "", "set_extra_state"], [33, 1, 1, "", "share_memory"], [33, 1, 1, "", "state_dict"], [33, 1, 1, "", "to"], [33, 1, 1, "", "to_empty"], [33, 1, 1, "", "train"], [33, 1, 1, "", "type"], [33, 1, 1, "", "xpu"], [33, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"]], "torchrl.data.OneHotDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_memmap"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 3, 1, "", "names"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "dumps"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "loads"], [37, 1, 1, "", "sample"], [37, 3, 1, "", "sampler"], [37, 1, 1, "", "set_sampler"], [37, 1, 1, "", "set_storage"], [37, 1, 1, "", "set_writer"], [37, 3, 1, "", "storage"], [37, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[38, 3, 1, "", "batch_size"], [38, 3, 1, "", "device"], [38, 1, 1, "", "from_dataset"], [38, 1, 1, "", "from_tensordict"], [38, 1, 1, "", "get"], [38, 1, 1, "", "load_memmap"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "memmap"], [38, 1, 1, "", "memmap_"], [38, 1, 1, "", "memmap_like"], [38, 3, 1, "", "names"], [38, 1, 1, "", "set"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to_tensordict"], [38, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "loads"], [40, 1, 1, "", "sample"], [40, 3, 1, "", "sampler"], [40, 1, 1, "", "set_sampler"], [40, 1, 1, "", "set_storage"], [40, 1, 1, "", "set_writer"], [40, 3, 1, "", "storage"], [40, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[41, 3, 1, "", "batch_size"], [41, 3, 1, "", "device"], [41, 1, 1, "", "from_tensordict"], [41, 1, 1, "", "get"], [41, 1, 1, "", "load_memmap"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "memmap"], [41, 1, 1, "", "memmap_"], [41, 1, 1, "", "memmap_like"], [41, 3, 1, "", "names"], [41, 1, 1, "", "set"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "", "to_tensordict"], [41, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[42, 1, 1, "", "create_rollout_td"], [42, 1, 1, "", "generate"], [42, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[43, 1, 1, "", "add"], [43, 1, 1, "", "append_transform"], [43, 1, 1, "", "dumps"], [43, 1, 1, "", "empty"], [43, 1, 1, "", "extend"], [43, 1, 1, "", "insert_transform"], [43, 1, 1, "", "loads"], [43, 1, 1, "", "sample"], [43, 3, 1, "", "sampler"], [43, 1, 1, "", "set_sampler"], [43, 1, 1, "", "set_storage"], [43, 1, 1, "", "set_writer"], [43, 3, 1, "", "storage"], [43, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[44, 1, 1, "", "add"], [44, 1, 1, "", "append_transform"], [44, 1, 1, "", "dumps"], [44, 1, 1, "", "empty"], [44, 1, 1, "", "extend"], [44, 1, 1, "", "insert_transform"], [44, 1, 1, "", "loads"], [44, 1, 1, "", "sample"], [44, 3, 1, "", "sampler"], [44, 1, 1, "", "set_sampler"], [44, 1, 1, "", "set_storage"], [44, 1, 1, "", "set_writer"], [44, 3, 1, "", "storage"], [44, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[47, 1, 1, "", "dataset_to_tensordict"], [47, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"]], "torchrl.data.datasets": [[54, 0, 1, "", "AtariDQNExperienceReplay"], [55, 0, 1, "", "BaseDatasetExperienceReplay"], [56, 0, 1, "", "D4RLExperienceReplay"], [57, 0, 1, "", "GenDGRLExperienceReplay"], [58, 0, 1, "", "MinariExperienceReplay"], [59, 0, 1, "", "OpenMLExperienceReplay"], [60, 0, 1, "", "OpenXExperienceReplay"], [61, 0, 1, "", "RobosetExperienceReplay"], [62, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 3, 1, "", "data_path"], [54, 3, 1, "", "data_path_root"], [54, 1, 1, "", "delete"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "preprocess"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 3, 1, "", "data_path"], [55, 3, 1, "", "data_path_root"], [55, 1, 1, "", "delete"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "preprocess"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 3, 1, "", "data_path"], [56, 3, 1, "", "data_path_root"], [56, 1, 1, "", "delete"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "preprocess"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 3, 1, "", "data_path"], [57, 3, 1, "", "data_path_root"], [57, 1, 1, "", "delete"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "preprocess"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 3, 1, "", "data_path"], [58, 3, 1, "", "data_path_root"], [58, 1, 1, "", "delete"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "preprocess"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 3, 1, "", "data_path"], [59, 3, 1, "", "data_path_root"], [59, 1, 1, "", "delete"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "preprocess"], [59, 1, 1, "", "sample"], [59, 3, 1, "", "sampler"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 3, 1, "", "storage"], [59, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[60, 1, 1, "", "add"], [60, 1, 1, "", "append_transform"], [60, 3, 1, "", "data_path"], [60, 3, 1, "", "data_path_root"], [60, 1, 1, "", "delete"], [60, 1, 1, "", "dumps"], [60, 1, 1, "", "empty"], [60, 1, 1, "", "extend"], [60, 1, 1, "", "insert_transform"], [60, 1, 1, "", "loads"], [60, 1, 1, "", "preprocess"], [60, 1, 1, "", "sample"], [60, 3, 1, "", "sampler"], [60, 1, 1, "", "set_sampler"], [60, 1, 1, "", "set_storage"], [60, 1, 1, "", "set_writer"], [60, 3, 1, "", "storage"], [60, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[61, 1, 1, "", "add"], [61, 1, 1, "", "append_transform"], [61, 3, 1, "", "data_path"], [61, 3, 1, "", "data_path_root"], [61, 1, 1, "", "delete"], [61, 1, 1, "", "dumps"], [61, 1, 1, "", "empty"], [61, 1, 1, "", "extend"], [61, 1, 1, "", "insert_transform"], [61, 1, 1, "", "loads"], [61, 1, 1, "", "preprocess"], [61, 1, 1, "", "sample"], [61, 3, 1, "", "sampler"], [61, 1, 1, "", "set_sampler"], [61, 1, 1, "", "set_storage"], [61, 1, 1, "", "set_writer"], [61, 3, 1, "", "storage"], [61, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[62, 1, 1, "", "add"], [62, 1, 1, "", "append_transform"], [62, 3, 1, "", "data_path"], [62, 3, 1, "", "data_path_root"], [62, 1, 1, "", "delete"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "empty"], [62, 1, 1, "", "extend"], [62, 1, 1, "", "insert_transform"], [62, 1, 1, "", "loads"], [62, 1, 1, "", "preprocess"], [62, 1, 1, "", "sample"], [62, 3, 1, "", "sampler"], [62, 1, 1, "", "set_sampler"], [62, 1, 1, "", "set_storage"], [62, 1, 1, "", "set_writer"], [62, 3, 1, "", "storage"], [62, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[64, 0, 1, "", "ImmutableDatasetWriter"], [65, 0, 1, "", "LazyMemmapStorage"], [66, 0, 1, "", "LazyTensorStorage"], [67, 0, 1, "", "ListStorage"], [68, 0, 1, "", "PrioritizedSampler"], [69, 0, 1, "", "PrioritizedSliceSampler"], [70, 0, 1, "", "RandomSampler"], [71, 0, 1, "", "ReplayBufferEnsemble"], [72, 0, 1, "", "RoundRobinWriter"], [73, 0, 1, "", "Sampler"], [74, 0, 1, "", "SamplerEnsemble"], [75, 0, 1, "", "SamplerWithoutReplacement"], [76, 0, 1, "", "SliceSampler"], [77, 0, 1, "", "SliceSamplerWithoutReplacement"], [78, 0, 1, "", "Storage"], [79, 0, 1, "", "StorageEnsemble"], [80, 0, 1, "", "TensorDictMaxValueWriter"], [81, 0, 1, "", "TensorDictRoundRobinWriter"], [82, 0, 1, "", "TensorStorage"], [83, 0, 1, "", "Writer"], [84, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[66, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[67, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[68, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[69, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[71, 1, 1, "", "add"], [71, 1, 1, "", "append_transform"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "empty"], [71, 1, 1, "", "extend"], [71, 1, 1, "", "insert_transform"], [71, 1, 1, "", "loads"], [71, 1, 1, "", "sample"], [71, 3, 1, "", "sampler"], [71, 1, 1, "", "set_sampler"], [71, 1, 1, "", "set_storage"], [71, 1, 1, "", "set_writer"], [71, 3, 1, "", "storage"], [71, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[72, 1, 1, "", "add"], [72, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[78, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[79, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[82, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[83, 1, 1, "", "add"], [83, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[84, 1, 1, "", "add"], [84, 1, 1, "", "extend"]], "torchrl.envs": [[85, 2, 1, "", "BraxEnv"], [86, 2, 1, "", "BraxWrapper"], [87, 2, 1, "", "DMControlEnv"], [88, 2, 1, "", "DMControlWrapper"], [89, 0, 1, "", "EnvBase"], [90, 0, 1, "", "EnvCreator"], [91, 0, 1, "", "EnvMetaData"], [92, 2, 1, "", "GymEnv"], [93, 0, 1, "", "GymLikeEnv"], [94, 2, 1, "", "GymWrapper"], [95, 2, 1, "", "HabitatEnv"], [96, 2, 1, "", "IsaacGymEnv"], [97, 2, 1, "", "IsaacGymWrapper"], [98, 2, 1, "", "JumanjiEnv"], [99, 2, 1, "", "JumanjiWrapper"], [100, 2, 1, "", "MOGymEnv"], [101, 2, 1, "", "MOGymWrapper"], [102, 2, 1, "", "MarlGroupMapType"], [103, 2, 1, "", "MeltingpotEnv"], [104, 2, 1, "", "MeltingpotWrapper"], [105, 2, 1, "", "ModelBasedEnvBase"], [106, 2, 1, "", "MultiThreadedEnv"], [107, 2, 1, "", "MultiThreadedEnvWrapper"], [108, 2, 1, "", "OpenMLEnv"], [109, 0, 1, "", "ParallelEnv"], [110, 2, 1, "", "PettingZooEnv"], [111, 2, 1, "", "PettingZooWrapper"], [112, 2, 1, "", "RoboHiveEnv"], [113, 2, 1, "", "SMACv2Env"], [114, 2, 1, "", "SMACv2Wrapper"], [115, 0, 1, "", "SerialEnv"], [116, 2, 1, "", "VmasEnv"], [117, 2, 1, "", "VmasWrapper"], [118, 2, 1, "", "check_marl_grouping"], [119, 2, 1, "", "gym_backend"], [105, 1, 1, "", "rand_step"], [105, 1, 1, "", "reset"], [105, 1, 1, "", "rollout"], [122, 2, 1, "", "set_gym_backend"], [105, 1, 1, "", "set_seed"], [105, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[89, 3, 1, "", "action_key"], [89, 3, 1, "", "action_keys"], [89, 3, 1, "", "action_spec"], [89, 1, 1, "", "add_module"], [89, 1, 1, "", "add_truncated_keys"], [89, 1, 1, "", "append_transform"], [89, 1, 1, "", "apply"], [89, 3, 1, "", "batch_locked"], [89, 3, 1, "", "batch_size"], [89, 1, 1, "", "bfloat16"], [89, 1, 1, "", "buffers"], [89, 1, 1, "", "children"], [89, 1, 1, "", "compile"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 3, 1, "", "done_key"], [89, 3, 1, "", "done_keys"], [89, 3, 1, "", "done_keys_groups"], [89, 3, 1, "", "done_spec"], [89, 1, 1, "", "double"], [89, 1, 1, "", "empty_cache"], [89, 1, 1, "", "eval"], [89, 1, 1, "", "extra_repr"], [89, 1, 1, "", "fake_tensordict"], [89, 1, 1, "", "float"], [89, 1, 1, "", "forward"], [89, 3, 1, "", "full_action_spec"], [89, 3, 1, "", "full_done_spec"], [89, 3, 1, "", "full_reward_spec"], [89, 3, 1, "", "full_state_spec"], [89, 1, 1, "", "get_buffer"], [89, 1, 1, "", "get_extra_state"], [89, 1, 1, "", "get_parameter"], [89, 1, 1, "", "get_submodule"], [89, 1, 1, "", "half"], [89, 3, 1, "", "input_spec"], [89, 1, 1, "", "ipu"], [89, 1, 1, "", "load_state_dict"], [89, 1, 1, "", "maybe_reset"], [89, 1, 1, "", "modules"], [89, 1, 1, "", "named_buffers"], [89, 1, 1, "", "named_children"], [89, 1, 1, "", "named_modules"], [89, 1, 1, "", "named_parameters"], [89, 3, 1, "", "observation_spec"], [89, 3, 1, "", "output_spec"], [89, 1, 1, "", "parameters"], [89, 1, 1, "", "rand_action"], [89, 1, 1, "id0", "rand_step"], [89, 1, 1, "", "register_backward_hook"], [89, 1, 1, "", "register_buffer"], [89, 1, 1, "", "register_forward_hook"], [89, 1, 1, "", "register_forward_pre_hook"], [89, 1, 1, "", "register_full_backward_hook"], [89, 1, 1, "", "register_full_backward_pre_hook"], [89, 1, 1, "", "register_gym"], [89, 1, 1, "", "register_load_state_dict_post_hook"], [89, 1, 1, "", "register_module"], [89, 1, 1, "", "register_parameter"], [89, 1, 1, "", "register_state_dict_pre_hook"], [89, 1, 1, "", "requires_grad_"], [89, 1, 1, "id1", "reset"], [89, 3, 1, "", "reset_keys"], [89, 3, 1, "", "reward_key"], [89, 3, 1, "", "reward_keys"], [89, 3, 1, "", "reward_spec"], [89, 1, 1, "id2", "rollout"], [89, 1, 1, "", "set_extra_state"], [89, 1, 1, "id3", "set_seed"], [89, 3, 1, "", "shape"], [89, 1, 1, "", "share_memory"], [89, 3, 1, "", "specs"], [89, 1, 1, "", "state_dict"], [89, 3, 1, "", "state_spec"], [89, 1, 1, "id4", "step"], [89, 1, 1, "", "step_and_maybe_reset"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_empty"], [89, 1, 1, "", "train"], [89, 1, 1, "", "type"], [89, 1, 1, "", "xpu"], [89, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[93, 3, 1, "", "action_key"], [93, 3, 1, "", "action_keys"], [93, 3, 1, "", "action_spec"], [93, 1, 1, "", "add_module"], [93, 1, 1, "", "add_truncated_keys"], [93, 1, 1, "", "append_transform"], [93, 1, 1, "", "apply"], [93, 1, 1, "", "auto_register_info_dict"], [93, 3, 1, "", "batch_locked"], [93, 3, 1, "", "batch_size"], [93, 1, 1, "", "bfloat16"], [93, 1, 1, "", "buffers"], [93, 1, 1, "", "children"], [93, 1, 1, "", "close"], [93, 1, 1, "", "compile"], [93, 1, 1, "", "cpu"], [93, 1, 1, "", "cuda"], [93, 3, 1, "", "done_key"], [93, 3, 1, "", "done_keys"], [93, 3, 1, "", "done_keys_groups"], [93, 3, 1, "", "done_spec"], [93, 1, 1, "", "double"], [93, 1, 1, "", "empty_cache"], [93, 1, 1, "", "eval"], [93, 1, 1, "", "extra_repr"], [93, 1, 1, "", "fake_tensordict"], [93, 1, 1, "", "float"], [93, 1, 1, "", "forward"], [93, 3, 1, "", "full_action_spec"], [93, 3, 1, "", "full_done_spec"], [93, 3, 1, "", "full_reward_spec"], [93, 3, 1, "", "full_state_spec"], [93, 1, 1, "", "get_buffer"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "get_parameter"], [93, 1, 1, "", "get_submodule"], [93, 1, 1, "", "half"], [93, 3, 1, "", "input_spec"], [93, 1, 1, "", "ipu"], [93, 1, 1, "", "load_state_dict"], [93, 1, 1, "", "maybe_reset"], [93, 1, 1, "", "modules"], [93, 1, 1, "", "named_buffers"], [93, 1, 1, "", "named_children"], [93, 1, 1, "", "named_modules"], [93, 1, 1, "", "named_parameters"], [93, 3, 1, "", "observation_spec"], [93, 3, 1, "", "output_spec"], [93, 1, 1, "", "parameters"], [93, 1, 1, "", "rand_action"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "read_action"], [93, 1, 1, "", "read_done"], [93, 1, 1, "", "read_obs"], [93, 1, 1, "", "read_reward"], [93, 1, 1, "", "register_backward_hook"], [93, 1, 1, "", "register_buffer"], [93, 1, 1, "", "register_forward_hook"], [93, 1, 1, "", "register_forward_pre_hook"], [93, 1, 1, "", "register_full_backward_hook"], [93, 1, 1, "", "register_full_backward_pre_hook"], [93, 1, 1, "", "register_gym"], [93, 1, 1, "", "register_load_state_dict_post_hook"], [93, 1, 1, "", "register_module"], [93, 1, 1, "", "register_parameter"], [93, 1, 1, "", "register_state_dict_pre_hook"], [93, 1, 1, "", "requires_grad_"], [93, 1, 1, "", "reset"], [93, 3, 1, "", "reset_keys"], [93, 3, 1, "", "reward_key"], [93, 3, 1, "", "reward_keys"], [93, 3, 1, "", "reward_spec"], [93, 1, 1, "", "rollout"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "set_info_dict_reader"], [93, 1, 1, "", "set_seed"], [93, 3, 1, "", "shape"], [93, 1, 1, "", "share_memory"], [93, 3, 1, "", "specs"], [93, 1, 1, "", "state_dict"], [93, 3, 1, "", "state_spec"], [93, 1, 1, "", "step"], [93, 1, 1, "", "step_and_maybe_reset"], [93, 1, 1, "", "to"], [93, 1, 1, "", "to_empty"], [93, 1, 1, "", "train"], [93, 1, 1, "", "type"], [93, 1, 1, "", "xpu"], [93, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[109, 3, 1, "", "action_key"], [109, 3, 1, "", "action_keys"], [109, 3, 1, "", "action_spec"], [109, 1, 1, "", "add_module"], [109, 1, 1, "", "add_truncated_keys"], [109, 1, 1, "", "append_transform"], [109, 1, 1, "", "apply"], [109, 3, 1, "", "batch_locked"], [109, 3, 1, "", "batch_size"], [109, 1, 1, "", "bfloat16"], [109, 1, 1, "", "buffers"], [109, 1, 1, "", "children"], [109, 1, 1, "", "compile"], [109, 1, 1, "", "cpu"], [109, 1, 1, "", "cuda"], [109, 3, 1, "", "done_key"], [109, 3, 1, "", "done_keys"], [109, 3, 1, "", "done_keys_groups"], [109, 3, 1, "", "done_spec"], [109, 1, 1, "", "double"], [109, 1, 1, "", "empty_cache"], [109, 1, 1, "", "eval"], [109, 1, 1, "", "extra_repr"], [109, 1, 1, "", "fake_tensordict"], [109, 1, 1, "", "float"], [109, 1, 1, "", "forward"], [109, 3, 1, "", "full_action_spec"], [109, 3, 1, "", "full_done_spec"], [109, 3, 1, "", "full_reward_spec"], [109, 3, 1, "", "full_state_spec"], [109, 1, 1, "", "get_buffer"], [109, 1, 1, "", "get_extra_state"], [109, 1, 1, "", "get_parameter"], [109, 1, 1, "", "get_submodule"], [109, 1, 1, "", "half"], [109, 3, 1, "", "input_spec"], [109, 1, 1, "", "ipu"], [109, 1, 1, "", "load_state_dict"], [109, 1, 1, "", "maybe_reset"], [109, 1, 1, "", "modules"], [109, 1, 1, "", "named_buffers"], [109, 1, 1, "", "named_children"], [109, 1, 1, "", "named_modules"], [109, 1, 1, "", "named_parameters"], [109, 3, 1, "", "observation_spec"], [109, 3, 1, "", "output_spec"], [109, 1, 1, "", "parameters"], [109, 1, 1, "", "rand_action"], [109, 1, 1, "", "rand_step"], [109, 1, 1, "", "register_backward_hook"], [109, 1, 1, "", "register_buffer"], [109, 1, 1, "", "register_forward_hook"], [109, 1, 1, "", "register_forward_pre_hook"], [109, 1, 1, "", "register_full_backward_hook"], [109, 1, 1, "", "register_full_backward_pre_hook"], [109, 1, 1, "", "register_gym"], [109, 1, 1, "", "register_load_state_dict_post_hook"], [109, 1, 1, "", "register_module"], [109, 1, 1, "", "register_parameter"], [109, 1, 1, "", "register_state_dict_pre_hook"], [109, 1, 1, "", "requires_grad_"], [109, 1, 1, "", "reset"], [109, 3, 1, "", "reset_keys"], [109, 3, 1, "", "reward_key"], [109, 3, 1, "", "reward_keys"], [109, 3, 1, "", "reward_spec"], [109, 1, 1, "", "rollout"], [109, 1, 1, "", "set_extra_state"], [109, 1, 1, "", "set_seed"], [109, 3, 1, "", "shape"], [109, 1, 1, "", "share_memory"], [109, 3, 1, "", "specs"], [109, 1, 1, "", "state_dict"], [109, 3, 1, "", "state_spec"], [109, 1, 1, "", "step"], [109, 1, 1, "", "step_and_maybe_reset"], [109, 1, 1, "", "to"], [109, 1, 1, "", "to_empty"], [109, 1, 1, "", "train"], [109, 1, 1, "", "type"], [109, 1, 1, "", "update_kwargs"], [109, 1, 1, "", "xpu"], [109, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[115, 3, 1, "", "action_key"], [115, 3, 1, "", "action_keys"], [115, 3, 1, "", "action_spec"], [115, 1, 1, "", "add_module"], [115, 1, 1, "", "add_truncated_keys"], [115, 1, 1, "", "append_transform"], [115, 1, 1, "", "apply"], [115, 3, 1, "", "batch_locked"], [115, 3, 1, "", "batch_size"], [115, 1, 1, "", "bfloat16"], [115, 1, 1, "", "buffers"], [115, 1, 1, "", "children"], [115, 1, 1, "", "compile"], [115, 1, 1, "", "cpu"], [115, 1, 1, "", "cuda"], [115, 3, 1, "", "done_key"], [115, 3, 1, "", "done_keys"], [115, 3, 1, "", "done_keys_groups"], [115, 3, 1, "", "done_spec"], [115, 1, 1, "", "double"], [115, 1, 1, "", "empty_cache"], [115, 1, 1, "", "eval"], [115, 1, 1, "", "extra_repr"], [115, 1, 1, "", "fake_tensordict"], [115, 1, 1, "", "float"], [115, 1, 1, "", "forward"], [115, 3, 1, "", "full_action_spec"], [115, 3, 1, "", "full_done_spec"], [115, 3, 1, "", "full_reward_spec"], [115, 3, 1, "", "full_state_spec"], [115, 1, 1, "", "get_buffer"], [115, 1, 1, "", "get_extra_state"], [115, 1, 1, "", "get_parameter"], [115, 1, 1, "", "get_submodule"], [115, 1, 1, "", "half"], [115, 3, 1, "", "input_spec"], [115, 1, 1, "", "ipu"], [115, 1, 1, "", "load_state_dict"], [115, 1, 1, "", "maybe_reset"], [115, 1, 1, "", "modules"], [115, 1, 1, "", "named_buffers"], [115, 1, 1, "", "named_children"], [115, 1, 1, "", "named_modules"], [115, 1, 1, "", "named_parameters"], [115, 3, 1, "", "observation_spec"], [115, 3, 1, "", "output_spec"], [115, 1, 1, "", "parameters"], [115, 1, 1, "", "rand_action"], [115, 1, 1, "", "rand_step"], [115, 1, 1, "", "register_backward_hook"], [115, 1, 1, "", "register_buffer"], [115, 1, 1, "", "register_forward_hook"], [115, 1, 1, "", "register_forward_pre_hook"], [115, 1, 1, "", "register_full_backward_hook"], [115, 1, 1, "", "register_full_backward_pre_hook"], [115, 1, 1, "", "register_gym"], [115, 1, 1, "", "register_load_state_dict_post_hook"], [115, 1, 1, "", "register_module"], [115, 1, 1, "", "register_parameter"], [115, 1, 1, "", "register_state_dict_pre_hook"], [115, 1, 1, "", "requires_grad_"], [115, 1, 1, "", "reset"], [115, 3, 1, "", "reset_keys"], [115, 3, 1, "", "reward_key"], [115, 3, 1, "", "reward_keys"], [115, 3, 1, "", "reward_spec"], [115, 1, 1, "", "rollout"], [115, 1, 1, "", "set_extra_state"], [115, 1, 1, "", "set_seed"], [115, 3, 1, "", "shape"], [115, 1, 1, "", "share_memory"], [115, 3, 1, "", "specs"], [115, 1, 1, "", "state_dict"], [115, 3, 1, "", "state_spec"], [115, 1, 1, "", "step"], [115, 1, 1, "", "step_and_maybe_reset"], [115, 1, 1, "", "to"], [115, 1, 1, "", "to_empty"], [115, 1, 1, "", "train"], [115, 1, 1, "", "type"], [115, 1, 1, "", "update_kwargs"], [115, 1, 1, "", "xpu"], [115, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[120, 2, 1, "", "DreamerDecoder"], [121, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[123, 0, 1, "", "ActionMask"], [124, 0, 1, "", "AutoResetEnv"], [125, 0, 1, "", "AutoResetTransform"], [126, 0, 1, "", "BatchSizeTransform"], [127, 0, 1, "", "BinarizeReward"], [128, 0, 1, "", "BurnInTransform"], [129, 0, 1, "", "CatFrames"], [130, 0, 1, "", "CatTensors"], [131, 0, 1, "", "CenterCrop"], [132, 0, 1, "", "ClipTransform"], [133, 0, 1, "", "Compose"], [134, 0, 1, "", "DTypeCastTransform"], [135, 0, 1, "", "DeviceCastTransform"], [136, 0, 1, "", "DiscreteActionProjection"], [137, 0, 1, "", "DoubleToFloat"], [138, 0, 1, "", "EndOfLifeTransform"], [139, 0, 1, "", "ExcludeTransform"], [140, 0, 1, "", "FiniteTensorDictCheck"], [141, 0, 1, "", "FlattenObservation"], [142, 0, 1, "", "FrameSkipTransform"], [143, 0, 1, "", "GrayScale"], [144, 0, 1, "", "InitTracker"], [145, 0, 1, "", "KLRewardTransform"], [146, 0, 1, "", "NoopResetEnv"], [147, 0, 1, "", "ObservationNorm"], [148, 0, 1, "", "ObservationTransform"], [149, 0, 1, "", "PermuteTransform"], [150, 0, 1, "", "PinMemoryTransform"], [151, 0, 1, "", "R3MTransform"], [152, 0, 1, "", "RandomCropTensorDict"], [153, 0, 1, "", "RemoveEmptySpecs"], [154, 0, 1, "", "RenameTransform"], [155, 0, 1, "", "Resize"], [156, 0, 1, "", "Reward2GoTransform"], [157, 0, 1, "", "RewardClipping"], [158, 0, 1, "", "RewardScaling"], [159, 0, 1, "", "RewardSum"], [160, 0, 1, "", "SelectTransform"], [161, 0, 1, "", "SignTransform"], [162, 0, 1, "", "SqueezeTransform"], [163, 0, 1, "", "StepCounter"], [164, 0, 1, "", "TargetReturn"], [165, 0, 1, "", "TensorDictPrimer"], [166, 0, 1, "", "TimeMaxPool"], [167, 0, 1, "", "ToTensorImage"], [168, 0, 1, "", "Transform"], [169, 0, 1, "", "TransformedEnv"], [170, 0, 1, "", "UnsqueezeTransform"], [171, 0, 1, "", "VC1Transform"], [172, 0, 1, "", "VIPRewardTransform"], [173, 0, 1, "", "VIPTransform"], [174, 0, 1, "", "VecGymEnvTransform"], [175, 0, 1, "", "VecNorm"], [176, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[123, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[124, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[125, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "transform_env_batch_size"], [126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[127, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[128, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[132, 1, 1, "", "transform_observation_spec"], [132, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[133, 1, 1, "", "append"], [133, 1, 1, "", "forward"], [133, 1, 1, "", "insert"], [133, 1, 1, "", "to"], [133, 1, 1, "", "transform_env_batch_size"], [133, 1, 1, "", "transform_env_device"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"], [133, 1, 1, "", "transform_output_spec"], [133, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "transform_input_spec"], [134, 1, 1, "", "transform_observation_spec"], [134, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_done_spec"], [135, 1, 1, "", "transform_env_device"], [135, 1, 1, "", "transform_input_spec"], [135, 1, 1, "", "transform_observation_spec"], [135, 1, 1, "", "transform_output_spec"], [135, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[136, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "register_keys"], [138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[147, 1, 1, "", "init_stats"], [147, 1, 1, "", "transform_input_spec"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[150, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[151, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[152, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_input_spec"], [153, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_input_spec"], [154, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[156, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[157, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[158, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_input_spec"], [159, 1, 1, "", "transform_observation_spec"], [159, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[161, 1, 1, "", "transform_observation_spec"], [161, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "transform_input_spec"], [163, 1, 1, "", "transform_observation_spec"], [163, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[165, 1, 1, "", "forward"], [165, 1, 1, "", "to"], [165, 1, 1, "", "transform_input_spec"], [165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[167, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[168, 3, 1, "", "container"], [168, 1, 1, "", "forward"], [168, 3, 1, "", "parent"], [168, 1, 1, "", "to"], [168, 1, 1, "", "transform_done_spec"], [168, 1, 1, "", "transform_env_batch_size"], [168, 1, 1, "", "transform_env_device"], [168, 1, 1, "", "transform_input_spec"], [168, 1, 1, "", "transform_observation_spec"], [168, 1, 1, "", "transform_output_spec"], [168, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[169, 1, 1, "", "add_truncated_keys"], [169, 1, 1, "", "append_transform"], [169, 3, 1, "", "batch_locked"], [169, 3, 1, "", "batch_size"], [169, 1, 1, "", "empty_cache"], [169, 1, 1, "", "eval"], [169, 3, 1, "", "input_spec"], [169, 1, 1, "", "insert_transform"], [169, 1, 1, "", "load_state_dict"], [169, 3, 1, "", "output_spec"], [169, 1, 1, "", "set_missing_tolerance"], [169, 1, 1, "", "set_seed"], [169, 1, 1, "", "state_dict"], [169, 1, 1, "", "to"], [169, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[170, 1, 1, "", "transform_input_spec"], [170, 1, 1, "", "transform_observation_spec"], [170, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "make_noload_model"], [171, 1, 1, "", "to"], [171, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[173, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[175, 1, 1, "", "build_td_for_shared_vecnorm"], [175, 1, 1, "", "forward"], [175, 1, 1, "", "get_extra_state"], [175, 1, 1, "", "set_extra_state"], [175, 1, 1, "", "to_observation_norm"], [175, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.rb_transforms": [[177, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[177, 1, 1, "", "add_module"], [177, 1, 1, "", "apply"], [177, 1, 1, "", "bfloat16"], [177, 1, 1, "", "buffers"], [177, 1, 1, "", "children"], [177, 1, 1, "", "compile"], [177, 3, 1, "", "container"], [177, 1, 1, "", "cpu"], [177, 1, 1, "", "cuda"], [177, 1, 1, "", "double"], [177, 1, 1, "", "eval"], [177, 1, 1, "", "extra_repr"], [177, 1, 1, "", "float"], [177, 1, 1, "", "forward"], [177, 1, 1, "", "get_buffer"], [177, 1, 1, "", "get_extra_state"], [177, 1, 1, "", "get_parameter"], [177, 1, 1, "", "get_submodule"], [177, 1, 1, "", "half"], [177, 1, 1, "", "ipu"], [177, 1, 1, "", "load_state_dict"], [177, 1, 1, "", "modules"], [177, 3, 1, "", "n_steps"], [177, 1, 1, "", "named_buffers"], [177, 1, 1, "", "named_children"], [177, 1, 1, "", "named_modules"], [177, 1, 1, "", "named_parameters"], [177, 1, 1, "", "parameters"], [177, 3, 1, "", "parent"], [177, 1, 1, "", "register_backward_hook"], [177, 1, 1, "", "register_buffer"], [177, 1, 1, "", "register_forward_hook"], [177, 1, 1, "", "register_forward_pre_hook"], [177, 1, 1, "", "register_full_backward_hook"], [177, 1, 1, "", "register_full_backward_pre_hook"], [177, 1, 1, "", "register_load_state_dict_post_hook"], [177, 1, 1, "", "register_module"], [177, 1, 1, "", "register_parameter"], [177, 1, 1, "", "register_state_dict_pre_hook"], [177, 1, 1, "", "requires_grad_"], [177, 1, 1, "", "set_extra_state"], [177, 1, 1, "", "share_memory"], [177, 1, 1, "", "state_dict"], [177, 1, 1, "", "to"], [177, 1, 1, "", "to_empty"], [177, 1, 1, "", "train"], [177, 1, 1, "", "transform_done_spec"], [177, 1, 1, "", "transform_env_batch_size"], [177, 1, 1, "", "transform_env_device"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"], [177, 1, 1, "", "transform_output_spec"], [177, 1, 1, "", "transform_reward_spec"], [177, 1, 1, "", "type"], [177, 1, 1, "", "xpu"], [177, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[178, 2, 1, "", "RandomPolicy"], [179, 2, 1, "", "check_env_specs"], [180, 2, 1, "", "exploration_mode"], [181, 2, 1, "", "exploration_type"], [182, 2, 1, "", "get_available_libraries"], [183, 2, 1, "", "make_composite_from_td"], [184, 2, 1, "", "set_exploration_mode"], [185, 2, 1, "", "set_exploration_type"], [186, 2, 1, "", "step_mdp"], [187, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[188, 0, 1, "", "CEMPlanner"], [189, 0, 1, "", "Conv3dNet"], [190, 0, 1, "", "ConvNet"], [191, 0, 1, "", "DTActor"], [192, 0, 1, "", "DdpgCnnActor"], [193, 0, 1, "", "DdpgCnnQNet"], [194, 0, 1, "", "DdpgMlpActor"], [195, 0, 1, "", "DdpgMlpQNet"], [196, 0, 1, "", "DecisionTransformer"], [197, 0, 1, "", "Delta"], [198, 0, 1, "", "DistributionalDQNnet"], [199, 0, 1, "", "DistributionalQValueHook"], [200, 0, 1, "", "DreamerActor"], [201, 0, 1, "", "DuelingCnnDQNet"], [202, 0, 1, "", "GRU"], [203, 0, 1, "", "GRUCell"], [204, 0, 1, "", "GRUModule"], [205, 0, 1, "", "IndependentNormal"], [206, 0, 1, "", "LSTM"], [207, 0, 1, "", "LSTMCell"], [208, 0, 1, "", "LSTMModule"], [209, 0, 1, "", "LSTMNet"], [210, 0, 1, "", "MLP"], [211, 0, 1, "", "MPCPlannerBase"], [212, 0, 1, "", "MPPIPlanner"], [213, 0, 1, "", "MaskedCategorical"], [214, 0, 1, "", "MaskedOneHotCategorical"], [215, 0, 1, "", "MultiAgentConvNet"], [216, 0, 1, "", "MultiAgentMLP"], [217, 0, 1, "", "NoisyLazyLinear"], [218, 0, 1, "", "NoisyLinear"], [219, 0, 1, "", "NormalParamWrapper"], [220, 0, 1, "", "ObsDecoder"], [221, 0, 1, "", "ObsEncoder"], [222, 0, 1, "", "OneHotCategorical"], [223, 0, 1, "", "OnlineDTActor"], [224, 0, 1, "", "QMixer"], [225, 0, 1, "", "QValueHook"], [226, 0, 1, "", "RSSMPosterior"], [227, 0, 1, "", "RSSMPrior"], [228, 0, 1, "", "Squeeze2dLayer"], [229, 0, 1, "", "SqueezeLayer"], [230, 0, 1, "", "TanhDelta"], [231, 0, 1, "", "TanhNormal"], [232, 0, 1, "", "TruncatedNormal"], [233, 0, 1, "", "VDNMixer"], [234, 0, 1, "", "VmapModule"], [235, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[188, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[189, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[190, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[191, 1, 1, "", "default_config"], [191, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[192, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[193, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[194, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[195, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[196, 0, 1, "", "DTConfig"], [196, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[197, 1, 1, "", "log_prob"], [197, 3, 1, "", "mean"], [197, 3, 1, "", "mode"], [197, 1, 1, "", "rsample"], [197, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[198, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[200, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[201, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[202, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[203, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[204, 1, 1, "", "forward"], [204, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[205, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[206, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[207, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[208, 1, 1, "", "forward"], [208, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[209, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[210, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[212, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[213, 1, 1, "", "log_prob"], [213, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[214, 1, 1, "", "log_prob"], [214, 1, 1, "", "rsample"], [214, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[217, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[219, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[220, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[221, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[222, 1, 1, "", "log_prob"], [222, 3, 1, "", "mode"], [222, 1, 1, "", "rsample"], [222, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[223, 1, 1, "", "default_config"], [223, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[224, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[226, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[227, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[229, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[230, 3, 1, "", "mean"], [230, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[231, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[232, 1, 1, "", "log_prob"], [232, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[233, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[234, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[236, 0, 1, "", "Actor"], [237, 0, 1, "", "ActorCriticOperator"], [238, 0, 1, "", "ActorCriticWrapper"], [239, 0, 1, "", "ActorValueOperator"], [240, 0, 1, "", "AdditiveGaussianWrapper"], [241, 0, 1, "", "DecisionTransformerInferenceWrapper"], [242, 0, 1, "", "DistributionalQValueActor"], [243, 0, 1, "", "DistributionalQValueModule"], [244, 0, 1, "", "EGreedyModule"], [245, 0, 1, "", "EGreedyWrapper"], [246, 0, 1, "", "LMHeadActorValueOperator"], [247, 0, 1, "", "MultiStepActorWrapper"], [248, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [249, 0, 1, "", "ProbabilisticActor"], [250, 0, 1, "", "QValueActor"], [251, 0, 1, "", "QValueModule"], [252, 0, 1, "", "SafeModule"], [253, 0, 1, "", "SafeProbabilisticModule"], [254, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [255, 0, 1, "", "SafeSequential"], [256, 0, 1, "", "TanhModule"], [257, 0, 1, "", "ValueOperator"], [258, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[237, 1, 1, "", "get_critic_operator"], [237, 1, 1, "", "get_policy_head"], [237, 1, 1, "", "get_value_head"], [237, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[238, 1, 1, "", "get_policy_head"], [238, 1, 1, "", "get_policy_operator"], [238, 1, 1, "", "get_value_head"], [238, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[239, 1, 1, "", "get_policy_head"], [239, 1, 1, "", "get_policy_operator"], [239, 1, 1, "", "get_value_head"], [239, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "mask_context"], [241, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[243, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[247, 1, 1, "", "forward"], [247, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[251, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[252, 1, 1, "", "random"], [252, 1, 1, "", "random_sample"], [252, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[253, 1, 1, "", "random"], [253, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[256, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[258, 1, 1, "", "get_reward_operator"], [258, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[259, 0, 1, "", "biased_softplus"], [260, 0, 1, "", "inv_softplus"], [261, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[259, 1, 1, "", "forward"]], "torchrl.objectives": [[262, 0, 1, "", "A2CLoss"], [263, 0, 1, "", "CQLLoss"], [264, 0, 1, "", "ClipPPOLoss"], [265, 0, 1, "", "DDPGLoss"], [266, 0, 1, "", "DQNLoss"], [267, 0, 1, "", "DTLoss"], [268, 0, 1, "", "DiscreteCQLLoss"], [269, 0, 1, "", "DiscreteIQLLoss"], [270, 0, 1, "", "DiscreteSACLoss"], [271, 0, 1, "", "DistributionalDQNLoss"], [272, 0, 1, "", "DreamerActorLoss"], [273, 0, 1, "", "DreamerModelLoss"], [274, 0, 1, "", "DreamerValueLoss"], [275, 0, 1, "", "HardUpdate"], [276, 0, 1, "", "IQLLoss"], [277, 0, 1, "", "KLPENPPOLoss"], [278, 0, 1, "", "LossModule"], [279, 0, 1, "", "OnlineDTLoss"], [280, 0, 1, "", "PPOLoss"], [281, 0, 1, "", "REDQLoss"], [282, 0, 1, "", "ReinforceLoss"], [283, 0, 1, "", "SACLoss"], [284, 0, 1, "", "SoftUpdate"], [285, 0, 1, "", "TD3Loss"], [286, 0, 1, "", "ValueEstimators"], [287, 0, 1, "", "default_value_kwargs"], [288, 0, 1, "", "distance_loss"], [289, 0, 1, "", "hold_out_net"], [290, 0, 1, "", "hold_out_params"], [292, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[264, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[267, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[269, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[273, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[274, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "loss_value_diff"], [276, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[277, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[278, 1, 1, "", "convert_to_functional"], [278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"], [278, 1, 1, "", "named_parameters"], [278, 1, 1, "", "parameters"], [278, 1, 1, "", "set_keys"], [278, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[279, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "load_state_dict"], [283, 1, 1, "", "make_value_estimator"], [283, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[291, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[293, 0, 1, "", "GAE"], [294, 0, 1, "", "TD0Estimator"], [295, 0, 1, "", "TD1Estimator"], [296, 0, 1, "", "TDLambdaEstimator"], [297, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[294, 1, 1, "", "forward"], [294, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[295, 1, 1, "", "forward"], [295, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[296, 1, 1, "", "forward"], [296, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "set_keys"], [297, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[298, 0, 1, "", "generalized_advantage_estimate"], [299, 0, 1, "", "reward2go"], [300, 0, 1, "", "td0_advantage_estimate"], [301, 0, 1, "", "td0_return_estimate"], [302, 0, 1, "", "td1_advantage_estimate"], [303, 0, 1, "", "td1_return_estimate"], [304, 0, 1, "", "td_lambda_advantage_estimate"], [305, 0, 1, "", "td_lambda_return_estimate"], [306, 0, 1, "", "vec_generalized_advantage_estimate"], [307, 0, 1, "", "vec_td1_advantage_estimate"], [308, 0, 1, "", "vec_td1_return_estimate"], [309, 0, 1, "", "vec_td_lambda_advantage_estimate"], [310, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[311, 2, 1, "", "PixelRenderTransform"], [312, 2, 1, "", "TensorDictRecorder"], [313, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[314, 2, 1, "", "Logger"], [316, 2, 1, "", "generate_exp_name"], [317, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[315, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[318, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[319, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[320, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[321, 0, 1, "", "BatchSubSampler"], [322, 0, 1, "", "ClearCudaCache"], [323, 0, 1, "", "CountFramesLog"], [324, 0, 1, "", "LogReward"], [325, 0, 1, "", "OptimizerHook"], [326, 0, 1, "", "Recorder"], [327, 0, 1, "", "ReplayBufferTrainer"], [328, 0, 1, "", "RewardNormalizer"], [329, 0, 1, "", "SelectKeys"], [330, 0, 1, "", "Trainer"], [331, 0, 1, "", "TrainerHookBase"], [332, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[321, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[322, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[323, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[324, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[325, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[326, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[327, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[328, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[329, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[331, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[332, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[333, 2, 1, "", "correct_for_frame_skip"], [334, 2, 1, "", "get_stats_random_rollout"], [335, 2, 1, "", "make_collector_offpolicy"], [336, 2, 1, "", "make_collector_onpolicy"], [337, 2, 1, "", "make_dqn_loss"], [338, 2, 1, "", "make_redq_loss"], [339, 2, 1, "", "make_redq_model"], [340, 2, 1, "", "make_replay_buffer"], [341, 2, 1, "", "make_target_updater"], [342, 2, 1, "", "make_trainer"], [343, 2, 1, "", "parallel_env_constructor"], [344, 2, 1, "", "sync_async_collector"], [345, 2, 1, "", "sync_sync_collector"], [346, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 350, 351, 352, 353, 355, 356, 357, 360, 367, 368, 369, 373, 374], "instal": [0, 6, 7, 373], "get": [0, 359, 360, 361, 362, 363, 364], "start": [0, 359, 360, 361, 362, 363, 364], "tutori": [0, 357, 367, 368], "basic": [0, 371], "intermedi": [0, 8], "advanc": 0, "refer": [0, 348], "knowledg": [0, 349], "base": [0, 2, 7, 349], "indic": 0, "tabl": 0, "collector": [1, 355, 356, 357, 358, 362, 364, 367, 368, 373], "packag": [1, 2, 3, 350, 351, 352, 353], "batch": [1, 355, 369, 371], "size": [1, 355, 371], "replai": [1, 2, 355, 356, 357, 358, 362, 364, 367, 368, 371, 373], "buffer": [1, 2, 355, 356, 357, 358, 362, 364, 367, 368, 371, 373], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 355, 356, 357, 362, 364, 367, 368, 373], "distribut": [1, 350], "helper": [1, 3], "function": [1, 4, 351, 356, 357, 361, 367, 368, 373], "compos": [2, 133], "support": 2, "type": 2, "choos": 2, "storag": [2, 78, 355, 362, 371], "sampl": [2, 371], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 356, 371], "trajectori": [2, 371], "checkpoint": [2, 352], "episod": [2, 4], "format": 2, "ted": [2, 359], "The": [2, 355], "rational": 2, "behind": 2, "structur": [2, 371], "dimension": [2, 4], "tensordict": [2, 350, 371, 373], "special": [2, 360, 373], "case": 2, "footnot": 2, "multi": [2, 3, 350, 351, 366, 367, 368], "agent": [2, 3, 4, 350, 351, 367, 368], "present": 2, "memori": 2, "polici": [2, 4, 355, 357, 358, 360, 364, 366, 367, 368, 369], "rnn": 2, "transform": [2, 3, 168, 355, 357, 359, 367, 368, 369, 371, 373, 374], "step": [2, 355, 357, 359, 362, 367, 368, 371, 374], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 46], "reinforc": [2, 351, 357, 367, 368], "learn": [2, 4, 357, 367, 368], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 350, 351, 352, 367], "env": [3, 369, 373, 374], "vector": [3, 373], "environ": [3, 4, 6, 7, 355, 356, 357, 358, 359, 364, 366, 367, 368, 369, 373, 374], "auto": 3, "reset": [3, 369, 374], "clone": [3, 7], "mask": 3, "action": [3, 4, 358, 369], "record": [3, 326, 352, 355, 363], "video": [3, 363], "domain": [3, 350], "specif": [3, 350, 366], "librari": [3, 373], "thing": [4, 355, 369], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 359, 361, 373], "gener": [4, 350], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 355, 364, 369], "algorithm": [4, 350], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 355, 356, 361, 364], "return": [4, 351], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 373], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 366], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 355, 356, 357], "standard": 4, "explor": [4, 350, 355, 356, 360], "valu": [4, 350, 351, 355, 357, 358, 360], "loss": [4, 355, 356, 357, 358, 364, 367, 368], "earli": 4, "train": [4, 8, 351, 355, 357, 358, 361, 364, 367, 368, 369], "roughli": 4, "uniformli": 4, "random": [4, 367, 368], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 356], "increas": 4, "an": [4, 357, 358, 359, 369], "dynam": [4, 371], "can": 4, "low": 4, "forward": [4, 355], "model": [4, 350, 355, 356, 358, 361, 370, 373], "also": 4, "us": [4, 6, 9, 358, 370, 371, 373], "offlin": 4, "observ": [4, 355], "space": 4, "effect": [4, 369], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 374], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 355], "render": [7, 364, 367, 368, 374], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 355], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 369], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "adaptiveklcontrol": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "constantklcontrol": 27, "discretetensorspec": 28, "lazystackedcompositespec": 29, "lazystackedtensorspec": 30, "multidiscretetensorspec": 31, "multionehotdiscretetensorspec": 32, "multistep": 33, "nontensorspec": 34, "onehotdiscretetensorspec": 35, "pairwisedataset": 36, "prioritizedreplaybuff": 37, "promptdata": 38, "prompttensordicttoken": 39, "replaybuff": 40, "rewarddata": 41, "rolloutfrommodel": 42, "tensordictprioritizedreplaybuff": 43, "tensordictreplaybuff": 44, "tensordicttoken": 45, "tokenizeddatasetload": 47, "unboundedcontinuoustensorspec": 48, "unboundeddiscretetensorspec": 49, "check_no_exclusive_kei": 50, "consolidate_spec": 51, "contains_lazy_spec": 52, "create_infinite_iter": 53, "ataridqnexperiencereplai": 54, "basedatasetexperiencereplai": 55, "d4rlexperiencereplai": 56, "gendgrlexperiencereplai": 57, "minariexperiencereplai": 58, "openmlexperiencereplai": 59, "openxexperiencereplai": 60, "robosetexperiencereplai": 61, "vd4rlexperiencereplai": 62, "get_dataload": 63, "immutabledatasetwrit": 64, "lazymemmapstorag": 65, "lazytensorstorag": 66, "liststorag": 67, "prioritizedsampl": 68, "prioritizedslicesampl": 69, "randomsampl": 70, "replaybufferensembl": 71, "roundrobinwrit": 72, "sampler": 73, "samplerensembl": 74, "samplerwithoutreplac": 75, "slicesampl": 76, "slicesamplerwithoutreplac": 77, "storageensembl": 79, "tensordictmaxvaluewrit": 80, "tensordictroundrobinwrit": 81, "tensorstorag": 82, "writer": 83, "writerensembl": 84, "braxenv": 85, "braxwrapp": 86, "dmcontrolenv": 87, "dmcontrolwrapp": 88, "envbas": [89, 369], "envcreat": 90, "envmetadata": 91, "gymenv": 92, "gymlikeenv": 93, "gymwrapp": 94, "habitatenv": 95, "isaacgymenv": 96, "isaacgymwrapp": 97, "jumanjienv": 98, "jumanjiwrapp": 99, "mogymenv": 100, "mogymwrapp": 101, "marlgroupmaptyp": 102, "meltingpotenv": 103, "meltingpotwrapp": 104, "modelbasedenvbas": 105, "multithreadedenv": 106, "multithreadedenvwrapp": 107, "openmlenv": 108, "parallelenv": 109, "pettingzooenv": 110, "pettingzoowrapp": 111, "robohiveenv": 112, "smacv2env": 113, "smacv2wrapp": 114, "serialenv": 115, "vmasenv": 116, "vmaswrapp": 117, "check_marl_group": 118, "gym_backend": 119, "dreamerdecod": 120, "dreamerenv": 121, "set_gym_backend": 122, "actionmask": 123, "autoresetenv": 124, "autoresettransform": 125, "batchsizetransform": 126, "binarizereward": 127, "burnintransform": 128, "catfram": [129, 371], "cattensor": 130, "centercrop": 131, "cliptransform": 132, "dtypecasttransform": 134, "devicecasttransform": 135, "discreteactionproject": 136, "doubletofloat": 137, "endoflifetransform": 138, "excludetransform": 139, "finitetensordictcheck": 140, "flattenobserv": 141, "frameskiptransform": 142, "grayscal": 143, "inittrack": 144, "klrewardtransform": 145, "noopresetenv": 146, "observationnorm": 147, "observationtransform": 148, "permutetransform": 149, "pinmemorytransform": 150, "r3mtransform": 151, "randomcroptensordict": 152, "removeemptyspec": 153, "renametransform": 154, "resiz": 155, "reward2gotransform": 156, "rewardclip": 157, "rewardsc": 158, "rewardsum": 159, "selecttransform": 160, "signtransform": 161, "squeezetransform": 162, "stepcount": 163, "targetreturn": 164, "tensordictprim": 165, "timemaxpool": 166, "totensorimag": 167, "transformedenv": 169, "unsqueezetransform": 170, "vc1transform": 171, "viprewardtransform": 172, "viptransform": 173, "vecgymenvtransform": 174, "vecnorm": [175, 374], "gsdenois": 176, "multisteptransform": 177, "randompolici": 178, "check_env_spec": 179, "exploration_mod": 180, "exploration_typ": 181, "get_available_librari": 182, "make_composite_from_td": 183, "set_exploration_mod": 184, "set_exploration_typ": 185, "step_mdp": 186, "terminated_or_trunc": 187, "cemplann": 188, "conv3dnet": 189, "convnet": 190, "dtactor": 191, "ddpgcnnactor": 192, "ddpgcnnqnet": 193, "ddpgmlpactor": 194, "ddpgmlpqnet": 195, "decisiontransform": 196, "delta": 197, "distributionaldqnnet": 198, "distributionalqvaluehook": 199, "dreameractor": 200, "duelingcnndqnet": 201, "gru": 202, "grucel": 203, "grumodul": 204, "independentnorm": 205, "lstm": [206, 358], "lstmcell": 207, "lstmmodul": 208, "lstmnet": 209, "mlp": [210, 358], "mpcplannerbas": 211, "mppiplann": 212, "maskedcategor": 213, "maskedonehotcategor": 214, "multiagentconvnet": 215, "multiagentmlp": 216, "noisylazylinear": 217, "noisylinear": 218, "normalparamwrapp": 219, "obsdecod": 220, "obsencod": 221, "onehotcategor": 222, "onlinedtactor": 223, "qmixer": [224, 351], "qvaluehook": 225, "rssmposterior": 226, "rssmprior": 227, "squeeze2dlay": 228, "squeezelay": 229, "tanhdelta": 230, "tanhnorm": 231, "truncatednorm": 232, "vdnmixer": 233, "vmapmodul": 234, "reset_nois": 235, "actor": [236, 350, 355, 360], "actorcriticoper": 237, "actorcriticwrapp": 238, "actorvalueoper": 239, "additivegaussianwrapp": 240, "decisiontransformerinferencewrapp": 241, "distributionalqvalueactor": 242, "distributionalqvaluemodul": 243, "egreedymodul": 244, "egreedywrapp": 245, "lmheadactorvalueoper": 246, "multistepactorwrapp": 247, "ornsteinuhlenbeckprocesswrapp": 248, "probabilisticactor": 249, "qvalueactor": 250, "qvaluemodul": 251, "safemodul": [252, 350], "safeprobabilisticmodul": 253, "safeprobabilistictensordictsequenti": 254, "safesequenti": 255, "tanhmodul": 256, "valueoper": 257, "worldmodelwrapp": 258, "biased_softplu": 259, "inv_softplu": 260, "map": [261, 367], "a2closs": 262, "cqlloss": 263, "clipppoloss": 264, "ddpgloss": 265, "dqnloss": 266, "dtloss": 267, "discretecqlloss": 268, "discreteiqlloss": 269, "discretesacloss": 270, "distributionaldqnloss": 271, "dreameractorloss": 272, "dreamermodelloss": 273, "dreamervalueloss": 274, "hardupd": 275, "iqlloss": 276, "klpenppoloss": 277, "lossmodul": [278, 355, 361], "onlinedtloss": 279, "ppoloss": 280, "redqloss": 281, "reinforceloss": 282, "sacloss": 283, "softupd": 284, "td3loss": 285, "valueestim": 286, "default_value_kwarg": 287, "distance_loss": 288, "hold_out_net": 289, "hold_out_param": 290, "qmixerloss": 291, "next_state_valu": 292, "gae": 293, "td0estim": 294, "td1estim": 295, "tdlambdaestim": 296, "valueestimatorbas": 297, "generalized_advantage_estim": 298, "reward2go": 299, "td0_advantage_estim": 300, "td0_return_estim": 301, "td1_advantage_estim": 302, "td1_return_estim": 303, "td_lambda_advantage_estim": 304, "td_lambda_return_estim": 305, "vec_generalized_advantage_estim": 306, "vec_td1_advantage_estim": 307, "vec_td1_return_estim": 308, "vec_td_lambda_advantage_estim": 309, "vec_td_lambda_return_estim": 310, "pixelrendertransform": 311, "tensordictrecord": 312, "videorecord": 313, "logger": [314, 352, 363, 364], "csvlogger": 315, "generate_exp_nam": 316, "get_logg": 317, "mlflowlogg": 318, "tensorboardlogg": 319, "wandblogg": 320, "batchsubsampl": 321, "clearcudacach": 322, "countframeslog": 323, "logreward": 324, "optimizerhook": 325, "replaybuffertrain": 327, "rewardnorm": 328, "selectkei": 329, "trainer": [330, 352, 356], "trainerhookbas": 331, "updateweight": 332, "correct_for_frame_skip": 333, "get_stats_random_rollout": 334, "make_collector_offpolici": 335, "make_collector_onpolici": 336, "make_dqn_loss": 337, "make_redq_loss": 338, "make_redq_model": 339, "make_replay_buff": 340, "make_target_updat": 341, "make_train": 342, "parallel_env_constructor": 343, "sync_async_collector": 344, "sync_sync_collector": 345, "transformed_env_constructor": 346, "readm": [347, 365], "tuto": [347, 365], "api": 348, "contribut": [349, 373], "content": 349, "modul": [350, 355, 358, 360, 364, 373], "tensordictmodul": [350, 360, 373], "wrapper": [350, 360], "probabilist": [350, 360], "q": [350, 356, 358, 360], "oper": 350, "join": 350, "hook": [350, 352, 356], "regular": 350, "planner": 350, "object": [351, 355, 361, 373], "dqn": [351, 356, 358], "ddpg": [351, 355, 367], "sac": 351, "redq": 351, "iql": 351, "cql": 351, "dt": 351, "td3": 351, "ppo": [351, 357, 368], "a2c": 351, "dreamer": 351, "builder": 352, "_util": 353, "comput": [354, 356, 369, 372], "time": [354, 355, 372], "code": [355, 369], "overview": [355, 358], "setup": [355, 358], "__init__": 355, "method": 355, "estim": 355, "put": 355, "togeth": [355, 369], "call": 355, "parallel": [355, 366, 374], "execut": [355, 366, 369], "stat": 355, "build": [355, 356, 364, 371], "evalu": 355, "construct": 355, "target": [355, 356, 361], "network": [355, 356, 357, 358, 360, 367, 368], "updat": 355, "experi": [355, 369], "result": [355, 357, 367, 368], "conclus": [355, 356, 357, 358, 367, 368, 369, 371], "next": [355, 357, 359, 362, 367, 368, 371], "A": [356, 371], "exampl": [356, 371], "deep": 356, "collect": [356, 357, 362], "paramet": [356, 357, 361], "hyperparamet": [356, 357, 367, 368], "regist": 356, "possibl": 356, "improv": 356, "defin": [357, 367, 368], "loop": [357, 358, 364, 367, 368, 369], "recurr": 358, "convolut": 358, "select": 358, "further": [358, 361], "read": 358, "creat": 359, "run": [359, 374], "rollout": [359, 366, 367, 368, 369, 374], "s": [360, 361], "output": 361, "consider": 361, "log": 363, "own": 364, "first": 364, "design": 364, "divers": 366, "competit": 367, "group": 367, "critic": [367, 368], "pendulum": 369, "write": 369, "_step": 369, "simul": 369, "_reset": 369, "metadata": 369, "_spec": 369, "spec": [369, 374], "shape": 369, "seed": [369, 374], "wrap": 369, "class": [369, 373], "test": 369, "our": 369, "custom": [369, 371], "simpl": 369, "pretrain": 370, "vanilla": 371, "integr": 371, "tensorclass": 371, "other": 371, "tensor": 371, "pytre": 371, "iter": 371, "over": 371, "fix": 371, "priorit": 371, "save": 371, "raw": 371, "imag": 371, "more": 371, "complex": 371, "introduct": 373, "config": 373, "sequenc": 373, "program": 373, "ensembl": 373, "meta": 373, "state": 373, "frame_skip": 374, "deepmind": 374, "control": 374, "devic": 374, "close": 374, "access": 374, "attribut": 374, "kwarg": 374}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})